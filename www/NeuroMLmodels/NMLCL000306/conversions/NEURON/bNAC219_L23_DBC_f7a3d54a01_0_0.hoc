// Cell: bNAC219_L23_DBC_f7a3d54a01_0_0
/*
{
  "id" : "bNAC219_L23_DBC_f7a3d54a01_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.250943, 5.15502, -0.455322, 3.76408", "-0.287266, 4.50998, -0.403251, 6.96761", "-0.32359, 3.86493, -0.351181, 8.3161", "-0.359913, 3.21989, -0.299111, 9.45043", "-0.396236, 2.57484, -0.247041, 9.98693", "-0.43256, 1.9298, -0.194971, 10.312", "-0.468883, 1.28475, -0.142901, 10.5326", "-0.505206, 0.639706, -0.0908309, 10.6917", "-0.54153, -0.00533917, -0.0387608, 10.8509", "-0.577853, -0.650384, 0.0133093, 11.01", "-0.614177, -1.29543, 0.0653794, 11.1688", "-0.6505, -1.94047, 0.11745, 11.0157", "-0.686823, -2.58552, 0.16952, 10.5759", "-0.723147, -3.23057, 0.22159, 10.1362", "-0.75947, -3.87561, 0.27366, 9.69643", "-0.795793, -4.52066, 0.32573, 9.25667", "-0.832117, -5.1657, 0.3778, 8.77464", "-0.86844, -5.81075, 0.42987, 7.84202", "-0.904764, -6.45579, 0.48194, 6.36994", "-0.941087, -7.10084, 0.53401, 4.84705", "-0.97741, -7.74588, 0.58608, 2.62404" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-4.32706, 4.39755, 0.284896, 0.83", "-4.73535, 5.46351, 0.284896, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.73706, -4.35945, 3.5949, 0.28", "-7.08985, -5.29447, 4.1015, 0.28", "-8.35034, -6.11787, 4.51226, 1.38", "-10.4328, -7.52117, 5.15555, 0.83", "-13.1492, -9.35172, 5.9947, 0.28", "-14.4449, -10.2249, 6.39498, 1.38", "-16.514, -11.6192, 7.03416, 0.28", "-18.5405, -12.9702, 7.6846, 0.28", "-20.1104, -13.9746, 8.17254, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-4.50706, -7.33095, 2.1449, 0.55", "-4.89311, -11.1783, 2.8639, 0.55", "-5.03321, -12.4063, 3.09424, 0.83", "-5.22814, -13.8844, 3.35953, 0.55", "-5.77891, -17.4658, 4.1297, 1.11", "-6.67951, -23.1854, 5.26723, 0.28", "-6.91829, -24.7061, 5.51375, 0.83", "-7.1151, -25.93, 5.68325, 0.28", "-7.45436, -28.0345, 5.88206, 0.83", "-8.09738, -32.26, 6.09685, 0.28", "-8.54097, -35.0252, 6.088, 0.55", "-8.95945, -37.8647, 5.90607, 0.28", "-9.11659, -39.0828, 5.78958, 0.55", "-9.27932, -40.717, 5.57506, 0.28", "-9.46372, -43.8644, 4.9219, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "4.26294, 2.87505, 2.6749, 0.28", "6.68496, 6.6099, 2.6749, 0.28", "7.80906, 8.61095, 2.73427, 0.83", "9.32048, 11.4696, 2.85389, 0.28", "10.4621, 13.8045, 3.00969, 1.11", "12.2119, 17.5918, 3.31565, 0.28", "13.3444, 20.1023, 3.58191, 0.83", "15.1735, 24.6261, 4.1863, 0.28", "15.9389, 26.6364, 4.48583, 0.55", "17.2614, 30.3172, 5.15392, 0.28", "17.8322, 31.93, 5.48351, 0.83", "19.2789, 35.8691, 6.49849, 0.55", "20.956, 40.2381, 7.79204, 0.28", "21.691, 42.098, 8.39605, 0.83", "23.1209, 45.7591, 9.64686, 0.28", "23.7255, 47.3205, 10.1616, 0.83", "24.845, 50.445, 11.1837, 0.28", "25.1736, 51.4408, 11.4624, 0.55", "25.4998, 52.4504, 11.7007, 0.28", "26.0448, 54.1102, 11.9548, 0.55", "26.935, 56.8298, 12.1396, 0.28", "27.3227, 58.0234, 12.1618, 0.55", "28.1733, 60.7216, 12.0408, 0.28", "28.5198, 61.7672, 12.0002, 0.55", "29.4162, 64.1897, 11.9358, 0.55", "30.352, 66.4347, 11.9377, 0.28", "31.3941, 68.715, 12.0774, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.78294, -7.12095, -1.9751, 0.55", "3.85148, -8.00685, -2.24231, 0.55", "5.61965, -9.47278, -2.68447, 1.11", "10.0007, -13.105, -3.78003, 0.28", "10.995, -13.9294, -4.02868, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.97741, -7.74588, 0.58608, 0.55", "-1.82074, -22.7222, 0.58608, 0.55", "-2.66408, -37.6984, 0.58608, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-4.73535, 5.46351, 0.284896, 0.28", "-7.00482, 7.52403, 0.911051, 0.28", "-8.60628, 8.97804, 1.3529, 0.55", "-9.87053, 10.1259, 1.70171, 0.28", "-11.1332, 11.2723, 2.05008, 0.55", "-14.356, 14.1984, 2.93927, 0.28", "-15.6482, 15.3716, 3.29579, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-4.73535, 5.46351, 0.284896, 0.28", "-4.55488, 7.07528, -0.023011, 0.28", "-4.3443, 8.51621, -0.35162, 0.83", "-3.83427, 11.4741, -1.02286, 0.28", "-3.71563, 12.0835, -1.17798, 0.55", "-3.36429, 13.6643, -1.58989, 0.28", "-3.1217, 14.6514, -1.86202, 0.83", "-2.43214, 17.0891, -2.60288, 0.28", "-2.05974, 18.2321, -2.98945, 0.55", "-1.06756, 20.9413, -3.98637, 0.28", "-0.672301, 21.9936, -4.35755, 0.83", "-0.176078, 23.2748, -4.77591, 0.28", "-0.0281186, 23.6801, -4.91754, 0.55", "0.329114, 24.7273, -5.27613, 0.28", "0.608884, 25.5164, -5.52661, 0.83", "1.36789, 27.7519, -6.1248, 0.28", "1.73192, 28.8801, -6.4012, 0.83", "2.41813, 31.0716, -6.88752, 0.28", "2.91922, 32.695, -7.22935, 0.28", "3.44252, 34.3163, -7.54025, 0.83", "3.76049, 35.2506, -7.74057, 0.55", "3.84933, 35.4857, -7.79187, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-20.1104, -13.9746, 8.17254, 0.28", "-21.9978, -16.7213, 7.9612, 0.28", "-22.6632, -17.8452, 7.90115, 0.55", "-24.0909, -20.4864, 7.82449, 0.28", "-24.7299, -21.6686, 7.79018, 0.83", "-26.7043, -25.3214, 7.68416, 0.28", "-27.5864, -26.9533, 7.63679, 0.55", "-28.5931, -29.1985, 7.54536, 0.28", "-29.2921, -30.9651, 7.44503, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-20.1104, -13.9746, 8.17254, 0.28", "-19.5909, -15.8316, 7.90584, 0.28", "-19.2215, -17.4815, 7.66804, 0.55", "-18.6903, -20.6555, 7.22279, 0.28", "-18.6282, -21.0266, 7.17072, 0.55", "-18.3589, -22.6359, 6.94496, 0.28", "-18.2205, -23.4624, 6.82902, 0.55", "-18.1258, -24.255, 6.70545, 0.28", "-18.1626, -25.0796, 6.54194, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-9.46372, -43.8644, 4.9219, 0.28", "-7.95485, -45.6096, 4.6827, 0.28", "-7.39879, -46.4398, 4.61698, 0.55", "-6.96835, -47.2868, 4.60193, 0.28", "-6.66858, -47.9791, 4.60353, 0.55", "-6.28935, -49.0502, 4.62937, 0.28", "-6.13812, -49.5382, 4.65322, 0.83", "-5.76116, -51.2525, 4.77664, 0.28", "-5.27849, -54.0056, 5.04261, 0.55", "-5.11332, -55.1087, 5.16573, 0.55", "-4.85212, -56.8956, 5.2615, 0.28", "-4.73764, -57.7397, 5.28075, 0.55", "-4.57563, -59.0091, 5.25555, 0.28", "-4.39865, -60.4659, 5.18117, 0.55", "-4.11047, -62.9965, 5.09372, 1.11", "-3.75372, -65.9637, 5.04974, 0.28", "-3.66138, -66.7024, 5.03272, 0.55", "-3.3766, -69.118, 4.97915, 0.28", "-3.19674, -71.1682, 4.8428, 1.11", "-3.03451, -73.634, 4.64089, 0.28", "-2.95969, -75.6554, 4.42837, 0.83", "-2.90304, -78.4287, 4.13526, 0.28", "-2.84274, -79.6691, 3.93286, 1.11", "-2.54499, -83.7616, 3.05472, 0.28", "-2.49172, -84.49, 2.87662, 0.55", "-2.39958, -85.8522, 2.5228, 0.28", "-2.32141, -86.6634, 2.3202, 0.55", "-1.8265, -90.5, 1.49541, 0.28", "-1.48169, -92.7444, 1.09095, 1.11", "-0.893535, -95.8784, 0.682727, 0.28", "-0.723038, -96.7466, 0.58063, 0.55", "-0.0983233, -99.7963, 0.277232, 0.28", "0.159526, -101.061, 0.170535, 0.55", "0.521358, -102.831, 0.0909903, 0.28", "0.764326, -103.947, 0.059227, 0.83", "1.35332, -106.412, 0.0686786, 0.28", "1.54639, -107.282, 0.0926084, 0.55", "2.05142, -110.1, 0.278157, 0.28", "2.24964, -111.274, 0.355139, 0.55", "2.76789, -114.501, 0.582947, 0.28", "2.86336, -115.233, 0.639232, 0.55", "2.90868, -115.665, 0.678063, 0.55", "3.0505, -117.501, 0.867572, 0.28" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-9.46372, -43.8644, 4.9219, 0.55", "-11.1322, -46.0141, 5.01782, 0.55", "-12.7836, -48.1003, 5.10347, 0.28", "-13.3804, -48.9348, 5.15557, 0.55", "-16.9439, -54.2624, 5.60684, 0.28", "-17.5003, -55.132, 5.63572, 0.83", "-18.9743, -57.5182, 5.63942, 0.28", "-19.5799, -58.6018, 5.60079, 0.55", "-23.3739, -66.1973, 5.22315, 0.28", "-23.9004, -67.6627, 5.08774, 0.55", "-24.7868, -71.5656, 4.61723, 0.28", "-24.9398, -72.5562, 4.48477, 0.55", "-25.1371, -74.9435, 4.1675, 0.28", "-25.2353, -75.8264, 4.02551, 0.55", "-26.3413, -85.1799, 2.41592, 0.28", "-26.508, -86.1981, 2.25125, 0.55", "-26.9003, -88.1621, 1.90929, 0.28", "-27.4641, -90.5154, 1.42093, 0.55", "-30.1265, -99.8187, -0.662266, 0.28", "-30.584, -101.247, -1.0357, 0.83", "-31.2683, -103.101, -1.58593, 0.83", "-33.0179, -107.948, -3.24912, 0.28", "-33.3325, -108.861, -3.60497, 0.55", "-33.8762, -110.656, -4.31165, 0.28", "-34.5135, -113.87, -5.3998, 0.55", "-34.6957, -114.813, -5.61547, 0.55", "-35.2874, -118.463, -6.01648, 0.28", "-35.4066, -119.51, -6.05597, 0.55", "-35.722, -123.295, -6.16323, 0.28", "-35.8348, -124.997, -6.20224, 0.83", "-36.0551, -129.079, -6.14937, 0.28", "-36.1847, -132.156, -6.09656, 0.83", "-36.2707, -137.684, -5.96505, 0.28", "-36.2796, -138.762, -5.95317, 0.55", "-36.2839, -141.373, -5.96391, 0.28", "-36.2989, -142.049, -5.95188, 0.55", "-36.3783, -143.707, -5.87495, 0.28", "-36.4598, -144.752, -5.77408, 0.55", "-36.5959, -146.163, -5.611, 0.28", "-36.7754, -148.133, -5.39387, 1.11", "-37.3291, -153.849, -4.8658, 0.28", "-37.4647, -155.186, -4.76636, 0.83", "-37.677, -157.262, -4.661, 0.83", "-38.399, -163.903, -4.4556, 0.28", "-38.496, -164.675, -4.46166, 0.55", "-38.8131, -166.914, -4.55548, 0.28", "-38.9953, -167.916, -4.6559, 0.55", "-39.4645, -170.279, -4.96795, 0.28", "-39.8517, -171.886, -5.25073, 0.83", "-40.5567, -174.291, -5.77709, 0.28", "-40.6478, -174.601, -5.87581, 0.55", "-41.2369, -176.859, -6.73171, 0.28", "-41.3935, -177.529, -7.00761, 0.55", "-41.627, -178.68, -7.53398, 0.55", "-41.7545, -180.18, -8.39793, 0.83", "-41.7026, -183.661, -10.6168, 0.28", "-41.5007, -184.468, -11.6986, 0.55", "-41.1425, -185.084, -13.0213, 0.28", "-40.816, -185.463, -14.0435, 0.55", "-39.5862, -186.565, -17.4787, 0.28", "-39.3442, -186.747, -18.1203, 0.83", "-35.971, -188.999, -26.8768, 0.28", "-35.7389, -189.16, -27.5228, 0.55", "-34.7255, -189.914, -30.505, 0.28", "-34.327, -190.329, -31.8172, 0.55", "-34.0455, -190.847, -32.9417, 0.28", "-33.8689, -191.329, -33.7342, 0.55", "-33.7148, -192.884, -34.9231, 0.28", "-33.6888, -193.698, -35.5351, 0.55", "-33.8622, -196.291, -37.2969, 0.28", "-34.0049, -198.251, -38.5774, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "31.3941, 68.715, 12.0774, 0.28", "30.1019, 71.1873, 10.3457, 0.28", "29.6782, 72.0963, 9.70413, 0.55", "27.923, 76.2648, 6.81061, 0.28", "27.4815, 77.4711, 5.99248, 0.55", "25.3024, 84.1618, 1.55585, 0.28", "24.674, 86.2973, 0.178078, 0.83", "23.9833, 89.2293, -1.61235, 0.28", "23.7203, 90.7939, -2.57935, 0.55", "23.6445, 92.6372, -3.67031, 0.28", "23.6984, 93.2349, -4.01894, 0.55", "24.3323, 95.1221, -5.07834, 0.28", "24.8496, 96.3694, -5.79292, 0.55", "25.8388, 98.9608, -7.15103, 0.28", "26.4674, 100.79, -8.07304, 0.83", "26.9024, 102.097, -8.6183, 0.83", "27.8187, 104.659, -9.46608, 0.28", "28.2091, 105.693, -9.77806, 0.55", "30.1503, 110.882, -11.1477, 0.28", "30.3941, 111.611, -11.2848, 0.55", "31.8875, 116.411, -11.9957, 0.28", "32.489, 118.262, -12.1712, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "31.3941, 68.715, 12.0774, 0.28", "32.1883, 70.8107, 12.1647, 0.28", "32.2656, 71.0782, 12.183, 0.55", "32.9614, 74.1032, 12.4311, 0.28", "33.1432, 75.1517, 12.5496, 0.55", "33.483, 77.6253, 12.8594, 0.28", "33.5853, 78.5052, 12.978, 0.55", "33.6397, 79.994, 13.2207, 0.28", "33.6623, 81.6351, 13.4469, 0.83", "33.6202, 83.7959, 13.7096, 0.28", "33.6158, 84.2101, 13.7422, 0.55", "33.6124, 85.7064, 13.8252, 0.28", "33.6079, 86.7689, 13.8546, 0.83", "33.6147, 90.564, 13.8422, 0.28", "33.6161, 91.4493, 13.811, 0.55", "33.6114, 92.9301, 13.7245, 0.28", "33.6065, 93.3836, 13.6989, 0.55", "33.5095, 96.3215, 13.5167, 0.28", "33.4989, 96.575, 13.5012, 0.55", "33.3571, 98.7581, 13.3688, 0.28", "33.3662, 99.311, 13.332, 0.55", "33.4678, 100.447, 13.268, 0.28", "33.5956, 101.489, 13.2063, 0.83", "33.9523, 103.463, 13.0919, 0.28", "34.0267, 103.813, 13.0722, 0.83", "34.8726, 106.97, 12.8882, 0.28", "35.2275, 108.071, 12.8089, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "10.995, -13.9294, -4.02868, 0.28", "12.5607, -17.5443, -4.7491, 0.28", "13.4111, -19.5078, -5.14042, 0.55", "14.673, -22.4215, -5.72107, 0.28", "16.2262, -26.0077, -6.43577, 0.83", "17.9189, -29.9161, -7.21469, 0.28", "18.9286, -32.2474, -7.6793, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "10.995, -13.9294, -4.02868, 0.28", "13.8774, -15.255, -3.91423, 0.28", "15.5814, -16.0387, -3.84657, 0.83", "18.762, -17.5016, -3.72028, 0.28", "20.9404, -18.5035, -3.63379, 1.11", "23.4634, -19.6638, -3.53361, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.66408, -37.6984, 0.58608, 0.28", "-3.50741, -52.6747, 0.58608, 0.28", "-4.35075, -67.651, 0.58608, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-15.6482, 15.3716, 3.29579, 0.28", "-17.9628, 15.7369, 2.84662, 0.28", "-19.3615, 15.9573, 2.61875, 0.55", "-20.5996, 16.1366, 2.41508, 0.28", "-22.5748, 16.38, 2.11725, 0.83", "-24.7383, 16.5889, 1.75708, 0.28", "-26.4219, 16.7225, 1.45345, 0.28", "-28.3207, 16.8252, 1.12758, 0.83", "-30.124, 16.8961, 0.817805, 0.28", "-31.6215, 16.9426, 0.543783, 0.83", "-35.4886, 17.0256, -0.195655, 0.28", "-37.8619, 17.1136, -0.712732, 1.11" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-15.6482, 15.3716, 3.29579, 0.28", "-15.2351, 17.981, 5.36298, 0.28", "-14.9917, 19.5182, 6.58075, 0.28", "-14.8901, 20.16, 7.0892, 0.55", "-14.3423, 23.6199, 9.83019, 0.28", "-14.0732, 25.319, 11.1762, 0.83", "-13.5653, 28.527, 13.7176, 0.28" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "3.84933, 35.4857, -7.79187, 0.28", "4.53288, 38.9117, -8.20397, 0.28", "4.67792, 39.6328, -8.3029, 0.55", "4.87881, 40.5829, -8.43761, 0.28", "5.03603, 41.3299, -8.54394, 0.55", "5.68609, 44.4187, -8.98358, 0.28", "6.14516, 46.5999, -9.29406, 0.83", "6.68471, 49.1196, -9.5607, 0.28", "6.89748, 50.1001, -9.67368, 0.55", "6.95576, 50.3599, -9.70594, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "3.84933, 35.4857, -7.79187, 0.28", "6.3578, 38.6694, -9.21167, 0.28", "7.5087, 40.1662, -9.87327, 0.55", "9.10613, 42.2215, -10.755, 0.28", "9.37138, 42.5477, -10.9184, 0.55", "11.2188, 44.8124, -12.1127, 0.28", "11.9016, 45.639, -12.6147, 0.55", "13.1457, 47.2475, -13.6544, 0.28", "13.5509, 47.7667, -14.0617, 0.55", "15.4497, 50.1917, -16.219, 0.28", "15.8086, 50.5935, -16.8481, 0.83", "16.9017, 51.6756, -19.38, 0.28", "17.2693, 51.9851, -20.3127, 0.55", "17.7685, 52.2996, -21.596, 0.28", "18.3341, 52.5569, -22.9685, 0.55", "22.1415, 53.6658, -31.6454, 0.28", "22.4799, 53.7218, -32.3372, 0.55", "23.5853, 53.7807, -34.2446, 0.28", "24.5447, 53.7296, -35.5854, 0.55", "26.3289, 53.5363, -37.5156, 0.28", "27.0864, 53.4051, -38.1012, 0.55", "28.2382, 53.1691, -38.5882, 0.28", "30.1405, 52.6734, -39.3788, 0.55", "33.1797, 51.7077, -40.5941, 0.28", "34.3214, 51.2796, -41.0488, 0.55", "35.6907, 50.7069, -41.5851, 0.28", "36.8992, 50.1841, -42.0776, 0.55", "38.8197, 49.3663, -42.9635, 0.28", "39.892, 48.9213, -43.5542, 0.83", "43.2926, 47.6308, -45.5927, 0.28", "43.9247, 47.4733, -45.9631, 0.55", "45.4485, 47.2752, -46.8366, 0.28", "46.8625, 47.245, -47.644, 0.55", "48.8099, 47.4131, -48.8156, 0.28", "49.6595, 47.5709, -49.4226, 0.55", "55.1723, 49.0745, -53.7024, 0.28", "56.1117, 49.3315, -54.4814, 0.55", "58.8873, 50.0944, -56.8818, 0.28", "60.2249, 50.4736, -58.0472, 0.55", "63.485, 51.4647, -60.9958, 0.28", "64.4305, 51.7638, -61.9642, 0.55", "65.6087, 52.1826, -63.648, 0.28", "66.3717, 52.3669, -64.7501, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-29.2921, -30.9651, 7.44503, 0.28", "-27.1549, -34.8348, 8.80927, 0.28", "-26.7734, -35.5255, 9.05279, 0.55", "-25.2266, -38.3262, 10.0402, 0.28", "-24.7148, -39.2527, 10.3668, 0.83", "-23.4665, -41.513, 11.1636, 0.28", "-22.8426, -42.6426, 11.5619, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-29.2921, -30.9651, 7.44503, 0.28", "-29.8968, -33.8383, 8.88437, 0.28", "-29.9806, -34.2175, 9.05052, 0.83", "-30.4301, -36.141, 9.88922, 0.28", "-30.569, -36.742, 10.1009, 0.83", "-30.995, -38.4264, 10.6046, 0.28", "-31.1151, -38.8652, 10.7153, 0.55", "-31.6524, -40.5552, 11.0019, 0.28", "-32.3431, -42.5426, 11.2359, 0.83", "-33.4142, -45.3188, 11.4548, 0.28", "-34.0102, -46.8009, 11.5314, 0.83", "-34.7264, -48.4604, 11.5573, 0.28", "-35.476, -50.0147, 11.5459, 0.83", "-36.08, -51.1124, 11.4838, 0.28", "-36.524, -51.8546, 11.4034, 0.55", "-37.1779, -52.8276, 11.3128, 0.28", "-37.6985, -53.6011, 11.2407, 0.55", "-39.5959, -56.2815, 11.0116, 0.83", "-40.7518, -57.9107, 10.8855, 0.28", "-41.5107, -58.9106, 10.8027, 0.55", "-43.52, -61.4103, 10.5831, 0.28", "-44.6361, -62.7939, 10.5171, 1.11", "-46.6273, -65.3014, 10.4293, 0.28", "-47.3245, -66.2596, 10.4351, 0.55", "-48.6568, -68.2811, 10.4926, 0.28", "-49.3158, -69.384, 10.5192, 0.83", "-51.2186, -73.4227, 10.5635, 0.28", "-51.7771, -75.0078, 10.561, 0.83", "-52.8621, -79.3236, 10.4995, 0.28", "-53.241, -81.4042, 10.4608, 1.11", "-53.3879, -82.6561, 10.4323, 1.11", "-53.6261, -86.1357, 10.3889, 0.28", "-53.6924, -89.0753, 10.3527, 0.28", "-53.7208, -90.0388, 10.3318, 0.55", "-53.8344, -92.5583, 10.2492, 0.28", "-53.9314, -93.7784, 10.178, 0.83", "-54.2941, -97.005, 9.91988, 0.28", "-54.4677, -98.2864, 9.79155, 0.55", "-55.3941, -104.809, 9.07525, 0.28", "-55.5889, -106.159, 8.96674, 0.55", "-56.0719, -109.361, 8.77186, 0.28", "-56.2155, -110.292, 8.72935, 0.55", "-57.049, -115.409, 8.54036, 0.28", "-57.4375, -118.164, 8.50097, 0.83", "-57.8379, -122.058, 8.58075, 0.28", "-57.9496, -123.27, 8.577, 0.83", "-58.0675, -124.797, 8.59523, 0.28", "-58.1315, -125.749, 8.53208, 0.55", "-58.3016, -128.421, 8.1739, 0.28", "-58.3509, -129.377, 8.02449, 0.55", "-58.5303, -133.626, 7.31604, 0.28", "-58.5965, -135.066, 7.10112, 0.55", "-59.0675, -144.694, 5.85228, 0.28", "-59.1636, -146.488, 5.64754, 0.83", "-59.568, -152.795, 5.03947, 0.28", "-59.6253, -153.891, 4.93743, 0.55", "-59.8559, -160.246, 4.38901, 0.28", "-59.877, -160.874, 4.33102, 0.55", "-59.9168, -164.563, 4.05421, 0.28", "-59.9152, -165.262, 4.00522, 0.83", "-59.9257, -166.493, 3.92519, 0.83", "-59.9879, -168.77, 3.80367, 0.83", "-60.0609, -171.712, 3.69131, 0.28", "-60.1716, -173.909, 3.47937, 0.28", "-60.2055, -174.677, 3.3622, 0.55", "-60.2996, -177.122, 2.9466, 0.28", "-60.3697, -178.643, 2.66792, 0.55", "-60.5512, -183.67, 1.66786, 0.28", "-60.6651, -186.801, 1.02061, 0.83", "-60.9641, -195.468, -0.870042, 0.28", "-60.9851, -196.559, -1.12371, 0.83", "-60.9827, -198.319, -1.54142, 0.28", "-60.9762, -199.364, -1.79335, 0.83", "-60.9641, -203.694, -2.84735, 0.28", "-60.9609, -204.224, -2.95663, 0.55", "-60.9789, -207.169, -3.60762, 0.28", "-60.9793, -208.722, -3.95834, 0.83", "-60.9564, -211.875, -4.65155, 0.28", "-60.9553, -213.446, -4.99539, 0.55", "-60.9799, -220.407, -6.5119, 0.28", "-60.9805, -220.92, -6.61526, 0.55", "-60.9809, -222.634, -6.9294, 0.28", "-60.9538, -224.494, -7.26362, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "3.0505, -117.501, 0.867572, 0.28", "6.4972, -118.54, 1.41405, 0.28", "8.74276, -119.217, 1.77008, 0.83", "11.8185, -120.143, 2.25774, 0.28", "13.6714, -120.702, 2.55152, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "3.0505, -117.501, 0.867572, 0.83", "3.15338, -119.421, 0.880341, 0.83", "3.36073, -121.435, 1.00083, 0.28", "3.42973, -121.833, 1.02693, 0.55", "3.67966, -123.164, 1.11293, 0.28", "3.75664, -123.588, 1.14319, 0.55", "3.94001, -124.679, 1.22502, 0.28", "4.08712, -125.613, 1.32825, 0.83", "4.40413, -127.601, 1.62427, 0.28", "4.46881, -128.171, 1.71722, 0.55", "4.59068, -129.857, 1.97733, 0.28", "4.60986, -130.586, 2.06895, 0.55", "4.55743, -132.344, 2.19029, 0.28", "4.50096, -133.151, 2.23778, 0.83", "4.41096, -134.476, 2.3563, 0.83", "4.37626, -135.533, 2.46797, 0.28", "4.37663, -136.445, 2.58464, 0.55", "4.41226, -139.402, 3.00768, 0.28", "4.42062, -140.349, 3.17521, 0.55", "4.40856, -142.42, 3.5917, 0.28", "4.37228, -143.81, 3.92591, 0.55", "4.2572, -145.791, 4.48515, 0.28", "4.12533, -147.208, 4.90955, 0.55", "3.86954, -149.423, 5.60834, 0.28", "3.65764, -151.0, 6.03517, 0.83", "3.28833, -153.441, 6.60272, 0.28", "3.17342, -154.308, 6.78104, 0.55", "2.85679, -157.217, 7.30666, 0.28", "2.77165, -158.437, 7.49485, 0.55", "2.65296, -161.377, 7.84459, 0.28", "2.64836, -163.243, 8.02754, 0.83", "2.7072, -165.087, 8.1615, 0.28", "2.72507, -165.497, 8.18371, 0.55", "2.78755, -167.184, 8.27096, 0.28", "2.79114, -167.768, 8.29309, 0.83", "2.77753, -169.411, 8.37459, 0.28", "2.73054, -170.212, 8.391, 0.55", "2.50913, -172.044, 8.36506, 0.28", "2.41059, -172.674, 8.30114, 0.55", "2.1677, -174.08, 8.09506, 0.28", "2.11584, -174.379, 8.05034, 0.55", "1.95967, -175.29, 7.91212, 0.28", "1.85875, -176.01, 7.82034, 0.55", "1.2913, -180.906, 7.30204, 0.28", "1.10274, -182.917, 7.13529, 0.83", "0.973989, -184.609, 7.03949, 0.28", "0.927956, -185.596, 7.01957, 0.55", "0.944395, -190.608, 7.12697, 0.28", "1.05936, -191.759, 7.20791, 1.11", "1.24331, -192.584, 7.33664, 0.28", "1.44527, -193.211, 7.4551, 0.55", "2.28468, -195.216, 7.92913, 0.28", "2.84299, -196.366, 8.25642, 0.28", "4.61166, -199.453, 9.29502, 0.28", "5.06324, -200.223, 9.5575, 0.83", "5.56433, -201.084, 9.84314, 0.28", "6.20626, -202.239, 10.2074, 0.83", "7.40743, -204.575, 10.8706, 0.28", "7.54389, -204.923, 10.9687, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-34.0049, -198.251, -38.5774, 0.28", "-33.4495, -204.103, -37.9967, 0.28", "-33.2977, -206.139, -38.0127, 0.55", "-33.1864, -207.93, -38.0612, 0.28", "-33.1402, -209.111, -38.0895, 0.55", "-33.1095, -211.024, -38.1306, 0.28", "-33.11, -212.732, -38.1363, 0.55", "-33.3168, -217.985, -38.1563, 0.28", "-33.3721, -218.882, -38.1436, 0.55", "-33.5018, -220.665, -38.0355, 0.28", "-33.5822, -221.812, -37.9051, 0.55", "-33.6763, -223.519, -37.6208, 0.28", "-33.7103, -225.113, -37.2915, 1.94", "-33.7161, -228.253, -36.435, 0.28", "-33.664, -230.716, -35.7988, 1.38", "-33.5696, -232.435, -35.3655, 0.28", "-33.4789, -233.548, -35.0901, 0.83", "-33.2701, -235.596, -34.6324, 0.28", "-33.0491, -237.296, -34.2517, 1.94" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-34.0049, -198.251, -38.5774, 0.55", "-36.8064, -199.412, -42.6168, 0.55", "-38.4367, -200.027, -44.4929, 0.28", "-38.9607, -200.224, -45.0958, 0.55", "-41.8538, -201.316, -48.4251, 0.28", "-43.5003, -201.937, -50.3198, 0.83", "-46.4233, -203.039, -53.6835, 0.28", "-48.0384, -203.424, -54.9789, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "18.9286, -32.2474, -7.6793, 0.28", "21.8277, -30.5435, -8.65959, 0.28", "22.6445, -30.0977, -8.89617, 0.83", "25.9447, -28.5661, -9.55602, 0.28", "27.0149, -28.1095, -9.78116, 0.55", "28.9418, -27.2874, -10.1865, 0.28", "30.165, -26.7655, -10.4439, 0.55", "31.473, -26.2424, -10.6688, 0.55", "34.6526, -25.1035, -11.1029, 0.28", "36.5813, -24.5993, -11.1809, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "18.9286, -32.2474, -7.6793, 0.28", "18.2275, -35.2526, -7.27094, 0.28", "17.9696, -36.78, -7.20244, 0.83", "17.6652, -38.9468, -7.14874, 0.28", "17.618, -39.4586, -7.11435, 0.55", "17.492, -41.5358, -6.91796, 0.28", "17.4384, -44.2241, -6.67636, 1.11", "17.6349, -47.6497, -6.40501, 0.28", "17.757, -48.8305, -6.30934, 0.55", "18.2433, -52.0781, -6.03804, 0.28", "18.4231, -53.0755, -5.96322, 0.55", "19.2456, -56.7113, -5.70861, 0.28", "19.7165, -58.5021, -5.57071, 0.83", "20.4417, -60.9811, -5.29416, 0.28", "20.8248, -62.2458, -5.18599, 0.55", "21.4977, -64.4275, -5.08244, 0.28", "21.9566, -65.8653, -4.99595, 0.55", "22.5704, -67.6369, -4.78569, 0.28", "23.2046, -69.4025, -4.53834, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "23.4634, -19.6638, -3.53361, 0.28", "24.3527, -19.7159, -2.57642, 0.28", "25.9534, -19.1692, -0.763135, 0.28", "28.0921, -17.7304, 1.74383, 0.28", "28.6825, -17.1451, 2.37642, 0.83", "29.8282, -15.7732, 3.546, 0.28", "30.4205, -15.0639, 4.15075, 0.83", "31.4492, -13.2573, 5.21767, 0.28", "31.6899, -12.5875, 5.48848, 0.55", "32.2053, -10.4843, 5.87578, 0.28", "32.3121, -10.0208, 5.93724, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "23.4634, -19.6638, -3.53361, 0.55", "23.5132, -20.3925, -3.81003, 0.55", "23.7454, -22.6326, -4.51986, 0.28", "23.9083, -24.0856, -4.85312, 0.28", "24.0068, -24.9641, -5.05463, 0.55", "24.0789, -25.6074, -5.20218, 0.55", "24.3102, -27.67, -5.67527, 0.83", "24.9292, -32.5152, -6.65445, 0.28", "25.1588, -34.2162, -6.896, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-37.8619, 17.1136, -0.712732, 0.55", "-40.0153, 17.5098, -1.25041, 0.55", "-43.0208, 17.965, -1.94277, 0.28", "-45.8366, 18.2758, -2.45826, 0.55", "-47.9781, 18.476, -2.82037, 0.28", "-48.952, 18.5642, -2.92697, 0.28", "-50.1608, 18.6835, -2.98321, 0.55", "-52.3392, 18.7719, -3.00666, 0.55", "-54.3782, 18.8023, -2.83326, 0.28", "-55.1237, 18.8346, -2.69955, 0.55", "-57.3934, 18.9864, -2.26792, 0.28", "-58.772, 19.0852, -1.87212, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-37.8619, 17.1136, -0.712732, 0.28", "-39.4834, 17.2863, -1.7329, 0.28", "-39.6785, 17.322, -1.88569, 0.55", "-40.7675, 17.425, -2.63808, 0.28", "-41.2381, 17.4393, -2.94309, 0.55", "-42.1249, 17.42, -3.42513, 0.28", "-42.8192, 17.3422, -3.76577, 0.55", "-45.7615, 16.8241, -5.01249, 0.28", "-47.6759, 16.4256, -5.75652, 0.55", "-48.3074, 16.2836, -5.98209, 0.28", "-49.9932, 15.87, -6.52523, 0.28", "-52.6191, 15.2256, -7.38928, 0.83", "-53.6083, 14.9573, -7.67865, 0.55", "-54.8921, 14.5691, -7.98864, 0.28", "-55.9013, 14.3132, -8.28948, 0.55", "-57.1046, 14.0634, -8.70088, 0.28", "-58.7013, 13.8179, -9.4217, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-13.5653, 28.527, 13.7176, 0.28", "-12.7524, 28.7172, 14.7443, 0.28", "-12.3767, 28.8051, 15.2189, 0.55", "-10.7854, 29.1774, 17.2288, 0.28", "-9.95332, 29.372, 18.2796, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-13.5653, 28.527, 13.7176, 0.28", "-14.3794, 30.3832, 15.6581, 0.28", "-15.0196, 31.8428, 17.184, 0.83" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "6.95576, 50.3599, -9.70594, 0.28", "10.561, 51.0294, -11.7618, 0.28", "11.396, 51.1515, -12.1967, 0.55", "12.851, 51.286, -12.8691, 0.28", "14.2566, 51.3468, -13.4656, 0.55", "15.4306, 51.3787, -13.9692, 0.28", "17.8139, 51.3507, -14.9149, 0.83", "20.4296, 51.2511, -15.8179, 0.28", "22.5421, 51.1775, -16.538, 0.55", "26.0186, 51.1209, -17.6824, 0.28", "28.5009, 51.1746, -18.5374, 0.55", "32.2232, 51.3543, -19.8296, 0.28", "34.7696, 51.6259, -20.7722, 0.83", "37.5456, 52.1162, -21.8595, 0.28", "38.7774, 52.453, -22.4176, 0.55", "42.0457, 53.6393, -24.046, 0.28", "43.2509, 54.1837, -24.6929, 0.55", "46.5448, 55.9231, -26.6428, 0.28", "47.8714, 56.694, -27.4878, 0.55", "51.8797, 59.2714, -30.1047, 0.28", "53.1099, 60.1517, -30.9241, 0.83", "54.4421, 61.2722, -31.7895, 0.83", "55.4562, 62.2596, -32.4493, 0.83", "58.0616, 65.348, -34.1542, 0.28", "59.6644, 67.7411, -35.212, 0.28", "60.1738, 68.685, -35.5289, 0.55", "61.978, 72.4303, -36.8315, 0.28", "62.4676, 73.5075, -37.2149, 0.55", "63.5648, 76.078, -38.2847, 0.28", "65.1936, 80.1201, -39.9726, 0.28", "66.0716, 82.3376, -40.9759, 0.83", "67.9278, 86.8944, -43.2269, 0.28", "68.4447, 88.1731, -43.9359, 0.55", "70.1928, 92.1633, -46.3955, 0.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "6.95576, 50.3599, -9.70594, 0.28", "4.95381, 54.4375, -9.64088, 0.28", "4.34706, 55.3248, -9.63567, 0.55", "-0.621985, 61.5024, -9.56276, 0.28", "-1.21285, 62.1393, -9.56244, 0.55", "-2.87549, 63.6764, -9.55135, 0.28", "-4.45377, 64.8854, -9.54487, 0.55", "-10.1928, 67.8475, -9.49725, 0.28", "-11.011, 68.1079, -9.52105, 0.55", "-13.1983, 68.5428, -9.58937, 0.28", "-15.6693, 68.9848, -9.72063, 0.83", "-19.0736, 69.5404, -9.90062, 0.28", "-21.6773, 70.0421, -9.93956, 0.83", "-30.9327, 72.1366, -10.1109, 0.28", "-34.2913, 73.0046, -10.2124, 0.55", "-37.8673, 74.005, -10.3198, 0.28", "-40.0336, 74.6764, -10.4632, 0.55", "-49.7174, 77.7408, -11.238, 0.28", "-52.4289, 78.5845, -11.4658, 0.55", "-55.0479, 79.3795, -11.6775, 0.28", "-56.9892, 79.9113, -11.8495, 0.55", "-63.5192, 81.5079, -12.3995, 0.28", "-66.7923, 82.1419, -12.759, 0.28", "-69.3792, 82.4698, -13.0868, 0.55", "-71.8549, 82.7455, -13.3362, 0.28", "-74.4436, 83.0778, -13.6123, 0.83", "-79.1135, 83.7747, -14.1736, 0.28", "-81.8954, 84.2442, -14.5038, 0.83", "-90.1664, 85.9285, -15.8819, 0.28", "-92.6633, 86.5466, -16.4568, 0.55", "-96.1969, 87.6283, -17.4421, 0.28", "-96.9731, 87.8595, -17.7057, 0.55", "-97.9278, 88.1243, -18.0713, 0.28", "-99.9275, 88.6141, -18.9129, 0.55", "-104.8, 89.5685, -21.0556, 0.28", "-108.363, 89.9857, -22.327, 0.83", "-119.11, 90.6219, -25.5551, 0.28", "-122.344, 90.6838, -26.3795, 0.55", "-125.749, 90.6553, -27.0902, 0.28", "-127.407, 90.6125, -27.3131, 0.55", "-135.946, 90.2274, -27.9436, 0.28", "-138.493, 90.0826, -28.0214, 0.55", "-141.729, 89.955, -27.8422, 0.28", "-144.488, 89.9082, -27.5711, 0.55", "-149.688, 89.9526, -26.8852, 0.28", "-152.082, 90.0688, -26.6385, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-22.8426, -42.6426, 11.5619, 0.55", "-21.481, -42.4428, 11.7153, 0.55", "-20.5452, -42.3055, 11.8208, 0.28", "-19.8236, -42.1996, 11.9021, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-22.8426, -42.6426, 11.5619, 0.28", "-22.9167, -47.2773, 12.619, 0.28", "-22.9952, -48.9991, 13.1199, 0.83", "-22.9959, -49.8401, 13.2931, 0.83", "-22.933, -51.7937, 13.6438, 0.28", "-22.9002, -52.4834, 13.7654, 0.55", "-22.8201, -53.681, 13.998, 0.28", "-22.6929, -55.0097, 14.2868, 0.55", "-22.0673, -59.7488, 15.2321, 0.28", "-21.8997, -60.6314, 15.4088, 0.55", "-21.3762, -62.7309, 15.8302, 0.28", "-21.0585, -63.8378, 16.026, 0.55", "-20.6725, -65.1021, 16.2283, 0.28", "-20.1525, -66.7325, 16.5094, 1.38", "-19.7924, -67.9045, 16.7534, 0.83", "-19.3032, -69.7353, 17.0868, 0.83", "-18.7139, -72.2824, 17.4567, 0.28", "-18.5752, -73.1599, 17.5169, 0.55", "-18.5183, -73.9338, 17.544, 0.28", "-18.5123, -75.245, 17.5285, 0.55", "-18.6197, -76.6104, 17.5061, 0.28", "-18.7916, -77.9602, 17.5099, 1.38", "-19.1857, -80.2982, 17.5974, 0.55", "-19.4662, -82.0442, 17.7547, 0.28", "-19.6655, -83.2239, 17.9022, 0.55", "-20.0416, -85.6049, 18.2748, 0.28", "-20.2266, -86.9446, 18.5102, 1.11", "-20.4144, -88.2619, 18.7941, 1.11", "-21.2387, -94.3075, 20.2522, 0.28", "-21.3852, -95.6012, 20.5245, 0.83", "-21.8173, -99.8328, 21.3516, 0.28", "-21.909, -101.083, 21.571, 0.55", "-22.0989, -104.118, 22.0648, 0.28", "-22.1909, -106.078, 22.3604, 0.83", "-22.2913, -109.23, 22.758, 0.28", "-22.304, -109.997, 22.8435, 0.83", "-22.3219, -113.335, 23.149, 0.28", "-22.318, -114.876, 23.2619, 0.83", "-22.3017, -115.125, 23.2705, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "36.5813, -24.5993, -11.1809, 0.28", "35.5526, -21.1865, -11.1916, 0.28", "35.2532, -20.193, -11.1947, 0.83", "34.1047, -16.3828, -11.2067, 0.28", "33.7, -15.0403, -11.2109, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "36.5813, -24.5993, -11.1809, 0.28", "39.0335, -22.3396, -11.812, 0.28", "39.9701, -21.3839, -12.1223, 0.83", "41.6221, -19.5832, -12.7587, 0.83", "44.933, -15.8066, -14.2687, 0.28", "48.4868, -11.655, -16.0294, 0.28", "49.348, -10.6687, -16.4535, 0.83", "51.105, -8.56314, -17.3884, 0.28", "52.5782, -6.78363, -18.233, 0.83", "55.0103, -3.84864, -19.687, 0.28", "55.7398, -3.14376, -20.1262, 0.55", "57.0672, -2.24252, -20.7876, 0.28", "57.6071, -1.92335, -21.0352, 0.55", "59.663, -0.940911, -21.8692, 0.28", "60.3378, -0.678364, -22.1239, 0.83", "68.3482, 1.81988, -24.9323, 0.28", "69.7125, 2.22419, -25.4375, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "23.2046, -69.4025, -4.53834, 0.83", "23.1708, -69.5029, -4.5789, 0.83", "22.3277, -71.4474, -5.49437, 0.28", "21.6495, -72.8837, -6.16817, 0.83", "20.5954, -74.9804, -7.19219, 0.28", "20.1413, -75.8599, -7.6158, 0.83", "18.9122, -78.2189, -8.79237, 0.28", "18.1807, -79.5449, -9.53128, 0.28", "17.7797, -80.1993, -9.94696, 0.55", "17.1665, -81.2565, -10.7138, 0.28", "16.9211, -81.7698, -11.087, 0.55", "16.5372, -82.7405, -11.7614, 0.83", "16.2669, -83.8399, -12.5016, 0.28", "16.2097, -84.1895, -12.7665, 0.55", "15.9728, -86.2569, -14.4831, 0.28", "15.9406, -87.1665, -15.2498, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "23.2046, -69.4025, -4.53834, 0.28", "25.3481, -70.3965, -3.04173, 0.28", "27.565, -70.9903, -1.30045, 0.83", "32.6177, -71.9573, 2.70918, 0.28", "35.0398, -72.261, 4.55023, 0.83", "39.7435, -72.676, 7.9971, 0.28", "41.0688, -72.7298, 8.91155, 0.55", "50.6443, -72.3807, 15.2165, 0.28", "52.1461, -72.2466, 16.1876, 0.55", "56.4737, -71.6562, 18.8386, 0.28", "58.1061, -71.4147, 19.8317, 0.55", "64.0235, -70.4143, 23.2483, 0.28", "65.9218, -70.0825, 24.2477, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "32.3121, -10.0208, 5.93724, 0.28", "32.7403, -8.16786, 6.18062, 0.28", "32.8015, -7.94012, 6.20378, 0.55", "34.3237, -2.47088, 6.74655, 0.28", "34.5362, -1.74085, 6.85614, 0.55", "35.0124, -0.156438, 7.13355, 0.28", "35.3181, 0.86047, 7.31159, 0.83", "37.0599, 6.50739, 8.33454, 0.28", "37.3522, 7.41425, 8.50787, 0.55", "38.9301, 11.992, 9.49283, 0.28", "39.1126, 12.5104, 9.60927, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "32.3121, -10.0208, 5.93724, 0.28", "32.9538, -8.67235, 6.20097, 0.28", "33.2327, -8.08409, 6.3153, 0.55", "33.9637, -6.50227, 6.56837, 0.28", "34.196, -6.00741, 6.62906, 0.55", "35.7491, -2.70887, 6.97549, 0.28", "36.1296, -1.90809, 7.04089, 0.83", "37.532, 1.04257, 7.19359, 0.28", "38.0332, 2.09695, 7.22789, 0.83", "38.7147, 3.49664, 7.23895, 0.28", "38.8712, 3.81785, 7.23126, 0.55", "39.3059, 4.70317, 7.13022, 0.28", "39.5749, 5.23363, 7.03731, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "25.1588, -34.2162, -6.896, 0.83", "25.1168, -34.4178, -6.90215, 0.83", "24.6853, -36.9208, -6.92252, 0.28", "24.5525, -38.0675, -6.97799, 0.55", "24.2887, -40.4485, -7.00516, 0.28", "24.1371, -42.0152, -7.06753, 0.55", "23.8619, -44.8452, -7.20177, 0.28", "23.7443, -46.6646, -7.30061, 0.55", "23.6442, -49.1934, -7.45136, 0.28", "23.5674, -51.6826, -7.61344, 0.83", "23.501, -55.0844, -7.95079, 0.28", "23.4266, -57.567, -8.15601, 0.83", "23.3334, -59.4389, -8.24687, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "25.1588, -34.2162, -6.896, 0.28", "22.4112, -34.905, -4.89846, 0.28", "21.4684, -35.0542, -4.57528, 0.55", "16.889, -35.7393, -3.27764, 0.28", "15.9337, -35.9186, -3.01003, 0.55", "12.8151, -36.6021, -2.08202, 0.28", "11.104, -36.9771, -1.57284, 0.83", "3.00058, -38.4541, 0.502356, 0.28", "1.21152, -38.7834, 0.901332, 0.83", "-1.90146, -39.4551, 1.3958, 0.28", "-3.64472, -39.8582, 1.70529, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-58.7013, 13.8179, -9.4217, 0.55", "-60.1241, 13.8973, -11.4703, 0.55", "-61.2942, 14.1365, -13.4107, 0.28", "-62.1726, 14.4045, -15.0037, 0.28", "-63.8443, 15.2814, -18.538, 0.55", "-64.5638, 15.7281, -20.1156, 0.28", "-64.7203, 15.8551, -20.5081, 0.55", "-65.608, 17.0231, -23.437, 0.28", "-65.8927, 17.613, -24.7181, 0.55", "-66.3663, 19.0467, -27.5675, 0.28", "-66.4449, 19.4527, -28.3305, 0.55", "-66.6928, 20.8988, -31.2229, 0.28", "-66.7008, 21.0645, -31.6028, 0.83", "-66.6472, 21.9933, -34.1669, 0.28", "-66.5385, 22.3582, -35.4305, 0.55", "-66.1535, 23.0872, -39.1512, 0.28", "-65.9339, 23.2974, -40.8933, 0.83", "-65.5258, 23.4148, -44.0823, 0.28", "-65.4025, 23.3884, -45.028, 0.55", "-64.8238, 22.9651, -49.531, 0.28", "-64.4608, 22.5905, -52.3989, 0.83", "-64.1288, 22.0279, -55.3994, 0.28", "-63.9849, 21.6874, -57.0024, 0.55", "-63.8984, 21.315, -58.6154, 0.28", "-63.7927, 20.7409, -61.1046, 0.83" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-58.7013, 13.8179, -9.4217, 0.28", "-59.4204, 14.5482, -10.2734, 0.28", "-59.6556, 14.7912, -10.5326, 0.55", "-60.43, 15.5937, -11.3412, 0.28", "-60.9868, 16.0886, -11.8119, 0.55", "-64.468, 19.1444, -14.8151, 0.28", "-64.7835, 19.4114, -15.07, 0.55", "-65.8807, 20.3083, -15.8795, 0.28", "-66.1575, 20.5485, -16.1001, 0.55", "-68.7942, 22.9284, -18.2775, 0.28", "-70.2158, 24.261, -19.5654, 0.55", "-71.4864, 25.4401, -20.7541, 0.28", "-71.9323, 25.8688, -21.229, 0.55", "-73.7982, 27.7441, -23.4083, 0.28", "-73.9677, 27.9442, -23.6737, 0.55", "-74.4479, 28.642, -24.7357, 0.28", "-74.7558, 29.1131, -25.55, 0.55", "-75.4565, 30.3971, -27.9809, 0.28", "-75.5566, 30.6184, -28.4076, 0.55", "-76.2308, 32.3845, -31.8016, 0.28", "-76.2931, 32.6298, -32.2604, 0.55", "-76.3301, 33.392, -33.6402, 0.28", "-76.2452, 33.9792, -34.659, 0.55", "-75.9917, 34.8897, -36.082, 0.28", "-75.9148, 35.2086, -36.522, 0.28", "-75.9148, 35.2086, -36.522, 0.55", "-75.9018, 36.4301, -38.2391, 0.28", "-75.9096, 36.846, -38.8355, 0.55", "-75.9844, 38.3532, -41.1131, 0.28", "-76.0172, 38.6515, -41.578, 0.55", "-76.5003, 41.8263, -46.655, 0.28", "-76.7145, 42.8961, -48.395, 0.55" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-15.0196, 31.8428, 17.184, 0.28", "-11.3334, 33.5013, 19.1774, 0.28", "-9.57598, 34.2919, 20.1278, 0.55", "-6.69872, 35.5864, 21.6837, 0.28", "-5.41716, 36.163, 22.3768, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-15.0196, 31.8428, 17.184, 0.28", "-16.5089, 34.1474, 17.8122, 0.28", "-17.2082, 35.3523, 18.1738, 0.55", "-18.611, 37.8274, 18.9753, 0.28", "-19.0094, 38.598, 19.1924, 0.55", "-19.961, 40.7117, 19.6769, 0.28", "-20.0696, 40.9808, 19.7425, 0.55", "-20.7217, 43.1366, 20.2938, 0.28", "-20.9999, 43.9782, 20.501, 0.55", "-21.631, 45.7889, 20.9559, 0.28", "-22.2337, 47.5409, 21.3634, 0.83", "-23.1612, 50.1675, 22.1377, 0.28", "-23.5621, 51.3005, 22.5126, 0.55", "-25.7519, 57.915, 24.9114, 0.28", "-26.116, 59.0772, 25.3716, 0.83", "-27.2929, 63.0857, 27.1588, 0.28", "-28.307, 66.8869, 28.9677, 0.28", "-28.7316, 69.1123, 30.092, 0.83", "-29.0019, 71.6743, 31.5191, 0.28", "-28.9773, 72.7017, 32.1815, 0.55", "-28.7453, 75.1321, 33.7907, 0.28", "-28.5538, 76.3491, 34.611, 0.55", "-27.8557, 79.8619, 36.8125, 0.28", "-27.5288, 81.2636, 37.7813, 0.55", "-27.0508, 83.1502, 39.1379, 0.28", "-26.7002, 84.3825, 40.0122, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "70.1928, 92.1633, -46.3955, 0.28", "71.389, 91.9966, -47.1379, 0.28", "72.1056, 91.8661, -47.5617, 0.55", "73.1339, 91.626, -48.289, 0.55", "74.4397, 91.3232, -49.2682, 0.28", "74.9718, 91.1815, -49.6766, 0.55", "76.1408, 90.8618, -50.5716, 0.28", "76.6572, 90.7202, -50.9917, 0.55", "78.3249, 90.3492, -52.3286, 0.28", "78.9101, 90.2207, -52.8027, 0.55", "80.4321, 89.9082, -54.0109, 0.28", "80.7952, 89.8414, -54.3138, 0.55", "82.5017, 89.6082, -55.7245, 0.28", "83.3921, 89.5343, -56.4265, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "70.1928, 92.1633, -46.3955, 0.28", "73.3444, 89.0895, -47.3077, 0.28", "74.19, 88.2647, -47.5525, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-22.3017, -115.125, 23.2705, 0.28", "-22.9391, -117.949, 24.2776, 0.28", "-23.1315, -118.894, 24.6183, 0.55", "-23.8378, -123.064, 26.0994, 0.28", "-23.9738, -123.926, 26.3869, 0.83", "-24.1944, -125.401, 26.8617, 0.83", "-24.3805, -126.626, 27.2464, 0.28", "-24.5427, -127.839, 27.6206, 0.55", "-25.1178, -131.869, 28.8809, 0.28", "-25.2936, -132.925, 29.1852, 0.83", "-25.9938, -136.508, 30.1322, 0.28", "-26.4127, -138.158, 30.5465, 0.83", "-27.0019, -140.136, 31.0254, 0.28", "-27.5214, -141.73, 31.4021, 0.83", "-28.7316, -145.004, 32.1547, 0.28", "-29.408, -146.712, 32.5504, 0.83", "-30.3751, -148.862, 32.9872, 0.28", "-31.2294, -150.644, 33.3134, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-22.3017, -115.125, 23.2705, 0.28", "-22.2999, -117.227, 23.7328, 0.28", "-22.3185, -122.404, 24.8769, 0.28", "-22.4036, -128.515, 26.217, 0.28", "-22.4863, -135.886, 27.8462, 0.28", "-22.4531, -141.643, 29.1536, 0.28", "-22.3609, -147.094, 30.4182, 0.28", "-22.2686, -152.253, 31.6401, 0.28", "-22.232, -155.258, 32.3474, 0.28", "-22.1803, -159.918, 33.4439, 0.28", "-21.6614, -173.229, 36.685, 0.28", "-21.4547, -176.4, 37.4787, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "15.9406, -87.1665, -15.2498, 0.28", "18.3438, -90.3919, -15.1334, 0.28", "18.7611, -90.952, -15.1132, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "15.9406, -87.1665, -15.2498, 0.28", "15.2705, -88.0674, -15.7439, 0.28", "14.9866, -88.449, -15.9532, 0.55", "14.4864, -89.1215, -16.3221, 0.28", "13.9344, -89.8635, -16.729, 0.83", "12.545, -91.7315, -17.7535, 0.28", "12.1832, -92.2178, -18.0203, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "23.3334, -59.4389, -8.24687, 0.83", "23.7319, -60.451, -8.56479, 0.83", "24.978, -64.3044, -9.57034, 0.28", "25.1892, -65.147, -9.82267, 0.83", "25.7718, -67.8783, -10.6754, 0.28", "25.917, -68.8895, -10.8547, 0.55", "26.0554, -70.3793, -10.9908, 0.28", "26.0641, -71.4977, -10.9666, 0.55", "25.7913, -74.1411, -10.5058, 0.28", "25.5566, -75.9311, -10.1457, 0.83", "24.8086, -80.6154, -9.24284, 0.28", "24.6309, -81.7347, -9.04676, 0.83", "24.5046, -82.6221, -8.9112, 0.83", "23.6352, -89.0337, -7.97882, 0.28", "23.5457, -89.7381, -7.87607, 0.55", "22.8808, -94.5519, -7.39766, 0.28", "22.7715, -95.4089, -7.43646, 0.55", "22.3649, -98.8798, -7.80303, 0.28", "22.3125, -99.4445, -7.89065, 0.83", "22.2156, -100.843, -8.1867, 0.83", "22.0247, -103.241, -8.67674, 0.83", "21.2345, -111.519, -10.3728, 0.28", "21.1007, -112.301, -10.5201, 0.55", "20.0374, -116.926, -11.329, 0.28", "19.792, -117.775, -11.461, 0.55", "17.2493, -124.418, -12.3269, 0.28", "16.3508, -126.281, -12.4855, 0.83", "13.314, -131.027, -12.5271, 0.28", "12.6353, -131.925, -12.5258, 0.55", "11.5322, -133.143, -12.5076, 0.55", "9.26839, -135.444, -12.4382, 0.28", "8.52723, -136.134, -12.4136, 0.55", "7.5533, -137.183, -12.3794, 0.28", "7.09052, -137.833, -12.3658, 0.55", "5.88901, -139.759, -12.3347, 0.28", "5.44028, -140.545, -12.3105, 0.55", "3.80446, -143.586, -12.1983, 0.28", "3.22516, -144.698, -12.1401, 0.55", "2.84157, -145.454, -12.0762, 0.28", "2.3783, -146.63, -11.9051, 0.55", "1.21987, -150.314, -11.1549, 0.28", "0.979347, -151.165, -10.9583, 0.83", "0.549704, -153.023, -10.4479, 0.28", "0.42618, -153.715, -10.2499, 0.55", "-0.11141, -158.792, -8.68567, 0.28", "-0.0966522, -159.33, -8.50813, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "23.3334, -59.4389, -8.24687, 0.28", "23.9385, -58.8486, -7.96798, 0.28", "24.3054, -58.4023, -7.83628, 0.55", "25.2748, -57.0954, -7.48172, 0.28", "25.5665, -56.4913, -7.33976, 0.55", "26.0165, -55.3531, -7.06717, 0.28", "26.3275, -54.3815, -6.74209, 0.83", "27.0787, -51.5, -5.65945, 0.28", "27.205, -50.8828, -5.41308, 0.83", "28.0381, -45.5391, -3.1746, 0.28", "28.2245, -43.9867, -2.54331, 0.83", "28.5553, -39.4397, -0.703775, 0.28", "28.5838, -38.8061, -0.44219, 0.55", "28.5973, -37.0908, 0.329917, 0.28", "28.593, -36.272, 0.704837, 0.83", "28.4745, -33.9158, 1.87965, 0.28", "28.4045, -32.8589, 2.29483, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-63.7927, 20.7409, -61.1046, 0.28", "-68.4781, 21.2385, -61.6908, 0.28", "-69.5181, 21.3512, -61.7969, 0.55", "-76.0168, 21.8159, -62.4171, 0.28", "-76.3472, 21.8285, -62.4484, 0.55", "-79.2313, 21.8489, -62.7804, 0.28", "-80.3365, 21.8187, -62.9179, 0.83", "-81.724, 21.6616, -63.0905, 0.83", "-85.6474, 20.9368, -63.5065, 0.28", "-87.0864, 20.4458, -63.56, 0.55", "-89.9315, 19.2141, -63.4771, 0.28", "-91.5017, 18.3989, -62.9711, 0.83", "-93.2461, 17.4434, -62.1366, 0.28", "-93.544, 17.2772, -61.952, 0.55", "-97.0645, 15.3328, -59.3041, 0.28", "-98.4506, 14.6255, -58.162, 0.55", "-106.458, 10.6079, -51.0592, 0.28", "-107.298, 10.2129, -50.2966, 0.83", "-110.269, 8.94073, -47.5977, 0.28", "-111.06, 8.62106, -46.8629, 0.83", "-112.458, 8.15406, -45.4978, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-63.7927, 20.7409, -61.1046, 0.28", "-62.3303, 21.5547, -67.0561, 0.28", "-62.0161, 21.7296, -68.3347, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-62.0161, 21.7296, -68.3347, 0.28", "-59.9695, 20.6794, -71.826, 0.28", "-59.6297, 20.505, -72.4057, 0.55", "-59.2718, 20.3214, -73.0162, 0.28", "-59.0134, 20.1888, -73.457, 0.55", "-57.3472, 19.3338, -76.2994, 0.28", "-56.6767, 18.9898, -77.4432, 0.83" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-62.0161, 21.7296, -68.3347, 0.28", "-62.0043, 21.6315, -71.5371, 0.28", "-62.2298, 21.7411, -72.7968, 0.55", "-62.8015, 22.0156, -74.9214, 0.28", "-63.159, 22.2122, -75.9435, 0.55", "-63.9872, 22.6983, -78.1513, 0.28", "-64.4507, 22.9591, -79.3835, 0.55", "-66.0594, 23.5875, -83.206, 0.28", "-66.2533, 23.6424, -83.7417, 0.55", "-66.9368, 23.7504, -85.8448, 0.28", "-67.5002, 23.6945, -87.9344, 0.83", "-67.9876, 23.4328, -90.2082, 0.28", "-68.071, 23.2815, -90.9654, 0.55", "-68.2131, 21.9121, -95.7337, 0.28", "-68.1753, 21.5421, -96.8097, 0.83", "-67.9418, 20.6005, -99.2111, 0.28", "-67.7325, 20.1132, -100.416, 0.55", "-66.8838, 18.6609, -103.987, 0.28", "-66.6042, 18.3511, -104.855, 0.83", "-65.038, 17.0622, -108.665, 0.28", "-64.6787, 16.8303, -109.488, 0.83", "-63.4185, 16.2058, -112.191, 0.28", "-62.9894, 16.0275, -113.059, 0.83", "-60.6411, 15.2284, -117.56, 0.28", "-60.0471, 15.0879, -118.721, 0.55", "-58.4322, 14.9812, -122.11, 0.28", "-58.0029, 14.9672, -123.136, 0.83" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_29", "dend_22", "dend_19", "dend_0", "dend_46", "dend_39", "dend_31", "dend_30", "dend_26", "dend_23", "dend_21", "dend_20", "dend_10", "dend_1", "dend_52", "dend_47", "dend_41", "dend_40", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_16", "dend_11", "dend_7", "dend_2", "dend_60", "dend_53", "dend_51", "dend_48", "dend_43", "dend_42", "dend_37", "dend_34", "dend_18", "dend_17", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_55", "dend_54", "dend_50", "dend_49", "dend_45", "dend_44", "dend_36", "dend_35", "dend_15", "dend_14", "dend_6", "dend_5", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_29", "dend_22", "dend_19", "dend_0", "dend_46", "dend_39", "dend_31", "dend_30", "dend_26", "dend_23", "dend_21", "dend_20", "dend_10", "dend_1", "dend_52", "dend_47", "dend_41", "dend_40", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_16", "dend_11", "dend_7", "dend_2", "dend_60", "dend_53", "dend_51", "dend_48", "dend_43", "dend_42", "dend_37", "dend_34", "dend_18", "dend_17", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_55", "dend_54", "dend_50", "dend_49", "dend_45", "dend_44", "dend_36", "dend_35", "dend_15", "dend_14", "dend_6", "dend_5", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_DBC_f7a3d54a01_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_38
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_52
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_27
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.44999992506011677)
    connect dend_29(0), soma_0(0.44999992506011677)
    connect dend_22(0), soma_0(0.44999992506011677)
    connect dend_19(0), soma_0(0.44999992506011677)
    connect dend_0(0), soma_0(0.44999992506011677)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.250943, 5.15502, -0.455322, 3.76408 ) }
    soma_0 { pt3dadd( -0.287266, 4.50998, -0.403251, 6.96761 ) }
    soma_0 { pt3dadd( -0.32359, 3.86493, -0.351181, 8.3161 ) }
    soma_0 { pt3dadd( -0.359913, 3.21989, -0.299111, 9.45043 ) }
    soma_0 { pt3dadd( -0.396236, 2.57484, -0.247041, 9.98693 ) }
    soma_0 { pt3dadd( -0.43256, 1.9298, -0.194971, 10.312 ) }
    soma_0 { pt3dadd( -0.468883, 1.28475, -0.142901, 10.5326 ) }
    soma_0 { pt3dadd( -0.505206, 0.639706, -0.0908309, 10.6917 ) }
    soma_0 { pt3dadd( -0.54153, -0.00533917, -0.0387608, 10.8509 ) }
    soma_0 { pt3dadd( -0.577853, -0.650384, 0.0133093, 11.01 ) }
    soma_0 { pt3dadd( -0.614177, -1.29543, 0.0653794, 11.1688 ) }
    soma_0 { pt3dadd( -0.6505, -1.94047, 0.11745, 11.0157 ) }
    soma_0 { pt3dadd( -0.686823, -2.58552, 0.16952, 10.5759 ) }
    soma_0 { pt3dadd( -0.723147, -3.23057, 0.22159, 10.1362 ) }
    soma_0 { pt3dadd( -0.75947, -3.87561, 0.27366, 9.69643 ) }
    soma_0 { pt3dadd( -0.795793, -4.52066, 0.32573, 9.25667 ) }
    soma_0 { pt3dadd( -0.832117, -5.1657, 0.3778, 8.77464 ) }
    soma_0 { pt3dadd( -0.86844, -5.81075, 0.42987, 7.84202 ) }
    soma_0 { pt3dadd( -0.904764, -6.45579, 0.48194, 6.36994 ) }
    soma_0 { pt3dadd( -0.941087, -7.10084, 0.53401, 4.84705 ) }
    soma_0 { pt3dadd( -0.97741, -7.74588, 0.58608, 2.62404 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -4.32706, 4.39755, 0.284896, 0.83 ) }
    dend_38 { pt3dadd( -4.73535, 5.46351, 0.284896, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 23/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.73706, -4.35945, 3.5949, 0.28 ) }
    dend_29 { pt3dadd( -7.08985, -5.29447, 4.1015, 0.28 ) }
    dend_29 { pt3dadd( -8.35034, -6.11787, 4.51226, 1.38 ) }
    dend_29 { pt3dadd( -10.4328, -7.52117, 5.15555, 0.83 ) }
    dend_29 { pt3dadd( -13.1492, -9.35172, 5.9947, 0.28 ) }
    dend_29 { pt3dadd( -14.4449, -10.2249, 6.39498, 1.38 ) }
    dend_29 { pt3dadd( -16.514, -11.6192, 7.03416, 0.28 ) }
    dend_29 { pt3dadd( -18.5405, -12.9702, 7.6846, 0.28 ) }
    dend_29 { pt3dadd( -20.1104, -13.9746, 8.17254, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 32/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -4.50706, -7.33095, 2.1449, 0.55 ) }
    dend_22 { pt3dadd( -4.89311, -11.1783, 2.8639, 0.55 ) }
    dend_22 { pt3dadd( -5.03321, -12.4063, 3.09424, 0.83 ) }
    dend_22 { pt3dadd( -5.22814, -13.8844, 3.35953, 0.55 ) }
    dend_22 { pt3dadd( -5.77891, -17.4658, 4.1297, 1.11 ) }
    dend_22 { pt3dadd( -6.67951, -23.1854, 5.26723, 0.28 ) }
    dend_22 { pt3dadd( -6.91829, -24.7061, 5.51375, 0.83 ) }
    dend_22 { pt3dadd( -7.1151, -25.93, 5.68325, 0.28 ) }
    dend_22 { pt3dadd( -7.45436, -28.0345, 5.88206, 0.83 ) }
    dend_22 { pt3dadd( -8.09738, -32.26, 6.09685, 0.28 ) }
    dend_22 { pt3dadd( -8.54097, -35.0252, 6.088, 0.55 ) }
    dend_22 { pt3dadd( -8.95945, -37.8647, 5.90607, 0.28 ) }
    dend_22 { pt3dadd( -9.11659, -39.0828, 5.78958, 0.55 ) }
    dend_22 { pt3dadd( -9.27932, -40.717, 5.57506, 0.28 ) }
    dend_22 { pt3dadd( -9.46372, -43.8644, 4.9219, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 47/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 4.26294, 2.87505, 2.6749, 0.28 ) }
    dend_19 { pt3dadd( 6.68496, 6.6099, 2.6749, 0.28 ) }
    dend_19 { pt3dadd( 7.80906, 8.61095, 2.73427, 0.83 ) }
    dend_19 { pt3dadd( 9.32048, 11.4696, 2.85389, 0.28 ) }
    dend_19 { pt3dadd( 10.4621, 13.8045, 3.00969, 1.11 ) }
    dend_19 { pt3dadd( 12.2119, 17.5918, 3.31565, 0.28 ) }
    dend_19 { pt3dadd( 13.3444, 20.1023, 3.58191, 0.83 ) }
    dend_19 { pt3dadd( 15.1735, 24.6261, 4.1863, 0.28 ) }
    dend_19 { pt3dadd( 15.9389, 26.6364, 4.48583, 0.55 ) }
    dend_19 { pt3dadd( 17.2614, 30.3172, 5.15392, 0.28 ) }
    dend_19 { pt3dadd( 17.8322, 31.93, 5.48351, 0.83 ) }
    dend_19 { pt3dadd( 19.2789, 35.8691, 6.49849, 0.55 ) }
    dend_19 { pt3dadd( 20.956, 40.2381, 7.79204, 0.28 ) }
    dend_19 { pt3dadd( 21.691, 42.098, 8.39605, 0.83 ) }
    dend_19 { pt3dadd( 23.1209, 45.7591, 9.64686, 0.28 ) }
    dend_19 { pt3dadd( 23.7255, 47.3205, 10.1616, 0.83 ) }
    dend_19 { pt3dadd( 24.845, 50.445, 11.1837, 0.28 ) }
    dend_19 { pt3dadd( 25.1736, 51.4408, 11.4624, 0.55 ) }
    dend_19 { pt3dadd( 25.4998, 52.4504, 11.7007, 0.28 ) }
    dend_19 { pt3dadd( 26.0448, 54.1102, 11.9548, 0.55 ) }
    dend_19 { pt3dadd( 26.935, 56.8298, 12.1396, 0.28 ) }
    dend_19 { pt3dadd( 27.3227, 58.0234, 12.1618, 0.55 ) }
    dend_19 { pt3dadd( 28.1733, 60.7216, 12.0408, 0.28 ) }
    dend_19 { pt3dadd( 28.5198, 61.7672, 12.0002, 0.55 ) }
    dend_19 { pt3dadd( 29.4162, 64.1897, 11.9358, 0.55 ) }
    dend_19 { pt3dadd( 30.352, 66.4347, 11.9377, 0.28 ) }
    dend_19 { pt3dadd( 31.3941, 68.715, 12.0774, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 74/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.78294, -7.12095, -1.9751, 0.55 ) }
    dend_0 { pt3dadd( 3.85148, -8.00685, -2.24231, 0.55 ) }
    dend_0 { pt3dadd( 5.61965, -9.47278, -2.68447, 1.11 ) }
    dend_0 { pt3dadd( 10.0007, -13.105, -3.78003, 0.28 ) }
    dend_0 { pt3dadd( 10.995, -13.9294, -4.02868, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 79/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.97741, -7.74588, 0.58608, 0.55 ) }
    axon_0 { pt3dadd( -1.82074, -22.7222, 0.58608, 0.55 ) }
    axon_0 { pt3dadd( -2.66408, -37.6984, 0.58608, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_38 (entry count 82/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -4.73535, 5.46351, 0.284896, 0.28 ) }
    dend_46 { pt3dadd( -7.00482, 7.52403, 0.911051, 0.28 ) }
    dend_46 { pt3dadd( -8.60628, 8.97804, 1.3529, 0.55 ) }
    dend_46 { pt3dadd( -9.87053, 10.1259, 1.70171, 0.28 ) }
    dend_46 { pt3dadd( -11.1332, 11.2723, 2.05008, 0.55 ) }
    dend_46 { pt3dadd( -14.356, 14.1984, 2.93927, 0.28 ) }
    dend_46 { pt3dadd( -15.6482, 15.3716, 3.29579, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 89/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -4.73535, 5.46351, 0.284896, 0.28 ) }
    dend_39 { pt3dadd( -4.55488, 7.07528, -0.023011, 0.28 ) }
    dend_39 { pt3dadd( -4.3443, 8.51621, -0.35162, 0.83 ) }
    dend_39 { pt3dadd( -3.83427, 11.4741, -1.02286, 0.28 ) }
    dend_39 { pt3dadd( -3.71563, 12.0835, -1.17798, 0.55 ) }
    dend_39 { pt3dadd( -3.36429, 13.6643, -1.58989, 0.28 ) }
    dend_39 { pt3dadd( -3.1217, 14.6514, -1.86202, 0.83 ) }
    dend_39 { pt3dadd( -2.43214, 17.0891, -2.60288, 0.28 ) }
    dend_39 { pt3dadd( -2.05974, 18.2321, -2.98945, 0.55 ) }
    dend_39 { pt3dadd( -1.06756, 20.9413, -3.98637, 0.28 ) }
    dend_39 { pt3dadd( -0.672301, 21.9936, -4.35755, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( -0.176078, 23.2748, -4.77591, 0.28 ) }
    dend_39 { pt3dadd( -0.0281186, 23.6801, -4.91754, 0.55 ) }
    dend_39 { pt3dadd( 0.329114, 24.7273, -5.27613, 0.28 ) }
    dend_39 { pt3dadd( 0.608884, 25.5164, -5.52661, 0.83 ) }
    dend_39 { pt3dadd( 1.36789, 27.7519, -6.1248, 0.28 ) }
    dend_39 { pt3dadd( 1.73192, 28.8801, -6.4012, 0.83 ) }
    dend_39 { pt3dadd( 2.41813, 31.0716, -6.88752, 0.28 ) }
    dend_39 { pt3dadd( 2.91922, 32.695, -7.22935, 0.28 ) }
    dend_39 { pt3dadd( 3.44252, 34.3163, -7.54025, 0.83 ) }
    dend_39 { pt3dadd( 3.76049, 35.2506, -7.74057, 0.55 ) }
    dend_39 { pt3dadd( 3.84933, 35.4857, -7.79187, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 11/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -20.1104, -13.9746, 8.17254, 0.28 ) }
    dend_31 { pt3dadd( -21.9978, -16.7213, 7.9612, 0.28 ) }
    dend_31 { pt3dadd( -22.6632, -17.8452, 7.90115, 0.55 ) }
    dend_31 { pt3dadd( -24.0909, -20.4864, 7.82449, 0.28 ) }
    dend_31 { pt3dadd( -24.7299, -21.6686, 7.79018, 0.83 ) }
    dend_31 { pt3dadd( -26.7043, -25.3214, 7.68416, 0.28 ) }
    dend_31 { pt3dadd( -27.5864, -26.9533, 7.63679, 0.55 ) }
    dend_31 { pt3dadd( -28.5931, -29.1985, 7.54536, 0.28 ) }
    dend_31 { pt3dadd( -29.2921, -30.9651, 7.44503, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 20/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -20.1104, -13.9746, 8.17254, 0.28 ) }
    dend_30 { pt3dadd( -19.5909, -15.8316, 7.90584, 0.28 ) }
    dend_30 { pt3dadd( -19.2215, -17.4815, 7.66804, 0.55 ) }
    dend_30 { pt3dadd( -18.6903, -20.6555, 7.22279, 0.28 ) }
    dend_30 { pt3dadd( -18.6282, -21.0266, 7.17072, 0.55 ) }
    dend_30 { pt3dadd( -18.3589, -22.6359, 6.94496, 0.28 ) }
    dend_30 { pt3dadd( -18.2205, -23.4624, 6.82902, 0.55 ) }
    dend_30 { pt3dadd( -18.1258, -24.255, 6.70545, 0.28 ) }
    dend_30 { pt3dadd( -18.1626, -25.0796, 6.54194, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 29/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -9.46372, -43.8644, 4.9219, 0.28 ) }
    dend_26 { pt3dadd( -7.95485, -45.6096, 4.6827, 0.28 ) }
    dend_26 { pt3dadd( -7.39879, -46.4398, 4.61698, 0.55 ) }
    dend_26 { pt3dadd( -6.96835, -47.2868, 4.60193, 0.28 ) }
    dend_26 { pt3dadd( -6.66858, -47.9791, 4.60353, 0.55 ) }
    dend_26 { pt3dadd( -6.28935, -49.0502, 4.62937, 0.28 ) }
    dend_26 { pt3dadd( -6.13812, -49.5382, 4.65322, 0.83 ) }
    dend_26 { pt3dadd( -5.76116, -51.2525, 4.77664, 0.28 ) }
    dend_26 { pt3dadd( -5.27849, -54.0056, 5.04261, 0.55 ) }
    dend_26 { pt3dadd( -5.11332, -55.1087, 5.16573, 0.55 ) }
    dend_26 { pt3dadd( -4.85212, -56.8956, 5.2615, 0.28 ) }
    dend_26 { pt3dadd( -4.73764, -57.7397, 5.28075, 0.55 ) }
    dend_26 { pt3dadd( -4.57563, -59.0091, 5.25555, 0.28 ) }
    dend_26 { pt3dadd( -4.39865, -60.4659, 5.18117, 0.55 ) }
    dend_26 { pt3dadd( -4.11047, -62.9965, 5.09372, 1.11 ) }
    dend_26 { pt3dadd( -3.75372, -65.9637, 5.04974, 0.28 ) }
    dend_26 { pt3dadd( -3.66138, -66.7024, 5.03272, 0.55 ) }
    dend_26 { pt3dadd( -3.3766, -69.118, 4.97915, 0.28 ) }
    dend_26 { pt3dadd( -3.19674, -71.1682, 4.8428, 1.11 ) }
    dend_26 { pt3dadd( -3.03451, -73.634, 4.64089, 0.28 ) }
    dend_26 { pt3dadd( -2.95969, -75.6554, 4.42837, 0.83 ) }
    dend_26 { pt3dadd( -2.90304, -78.4287, 4.13526, 0.28 ) }
    dend_26 { pt3dadd( -2.84274, -79.6691, 3.93286, 1.11 ) }
    dend_26 { pt3dadd( -2.54499, -83.7616, 3.05472, 0.28 ) }
    dend_26 { pt3dadd( -2.49172, -84.49, 2.87662, 0.55 ) }
    dend_26 { pt3dadd( -2.39958, -85.8522, 2.5228, 0.28 ) }
    dend_26 { pt3dadd( -2.32141, -86.6634, 2.3202, 0.55 ) }
    dend_26 { pt3dadd( -1.8265, -90.5, 1.49541, 0.28 ) }
    dend_26 { pt3dadd( -1.48169, -92.7444, 1.09095, 1.11 ) }
    dend_26 { pt3dadd( -0.893535, -95.8784, 0.682727, 0.28 ) }
    dend_26 { pt3dadd( -0.723038, -96.7466, 0.58063, 0.55 ) }
    dend_26 { pt3dadd( -0.0983233, -99.7963, 0.277232, 0.28 ) }
    dend_26 { pt3dadd( 0.159526, -101.061, 0.170535, 0.55 ) }
    dend_26 { pt3dadd( 0.521358, -102.831, 0.0909903, 0.28 ) }
    dend_26 { pt3dadd( 0.764326, -103.947, 0.059227, 0.83 ) }
    dend_26 { pt3dadd( 1.35332, -106.412, 0.0686786, 0.28 ) }
    dend_26 { pt3dadd( 1.54639, -107.282, 0.0926084, 0.55 ) }
    dend_26 { pt3dadd( 2.05142, -110.1, 0.278157, 0.28 ) }
    dend_26 { pt3dadd( 2.24964, -111.274, 0.355139, 0.55 ) }
    dend_26 { pt3dadd( 2.76789, -114.501, 0.582947, 0.28 ) }
    dend_26 { pt3dadd( 2.86336, -115.233, 0.639232, 0.55 ) }
    dend_26 { pt3dadd( 2.90868, -115.665, 0.678063, 0.55 ) }
    dend_26 { pt3dadd( 3.0505, -117.501, 0.867572, 0.28 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 72/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -9.46372, -43.8644, 4.9219, 0.55 ) }
    dend_23 { pt3dadd( -11.1322, -46.0141, 5.01782, 0.55 ) }
    dend_23 { pt3dadd( -12.7836, -48.1003, 5.10347, 0.28 ) }
    dend_23 { pt3dadd( -13.3804, -48.9348, 5.15557, 0.55 ) }
    dend_23 { pt3dadd( -16.9439, -54.2624, 5.60684, 0.28 ) }
    dend_23 { pt3dadd( -17.5003, -55.132, 5.63572, 0.83 ) }
    dend_23 { pt3dadd( -18.9743, -57.5182, 5.63942, 0.28 ) }
    dend_23 { pt3dadd( -19.5799, -58.6018, 5.60079, 0.55 ) }
    dend_23 { pt3dadd( -23.3739, -66.1973, 5.22315, 0.28 ) }
    dend_23 { pt3dadd( -23.9004, -67.6627, 5.08774, 0.55 ) }
    dend_23 { pt3dadd( -24.7868, -71.5656, 4.61723, 0.28 ) }
    dend_23 { pt3dadd( -24.9398, -72.5562, 4.48477, 0.55 ) }
    dend_23 { pt3dadd( -25.1371, -74.9435, 4.1675, 0.28 ) }
    dend_23 { pt3dadd( -25.2353, -75.8264, 4.02551, 0.55 ) }
    dend_23 { pt3dadd( -26.3413, -85.1799, 2.41592, 0.28 ) }
    dend_23 { pt3dadd( -26.508, -86.1981, 2.25125, 0.55 ) }
    dend_23 { pt3dadd( -26.9003, -88.1621, 1.90929, 0.28 ) }
    dend_23 { pt3dadd( -27.4641, -90.5154, 1.42093, 0.55 ) }
    dend_23 { pt3dadd( -30.1265, -99.8187, -0.662266, 0.28 ) }
    dend_23 { pt3dadd( -30.584, -101.247, -1.0357, 0.83 ) }
    dend_23 { pt3dadd( -31.2683, -103.101, -1.58593, 0.83 ) }
    dend_23 { pt3dadd( -33.0179, -107.948, -3.24912, 0.28 ) }
    dend_23 { pt3dadd( -33.3325, -108.861, -3.60497, 0.55 ) }
    dend_23 { pt3dadd( -33.8762, -110.656, -4.31165, 0.28 ) }
    dend_23 { pt3dadd( -34.5135, -113.87, -5.3998, 0.55 ) }
    dend_23 { pt3dadd( -34.6957, -114.813, -5.61547, 0.55 ) }
    dend_23 { pt3dadd( -35.2874, -118.463, -6.01648, 0.28 ) }
    dend_23 { pt3dadd( -35.4066, -119.51, -6.05597, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_23 { pt3dadd( -35.722, -123.295, -6.16323, 0.28 ) }
    dend_23 { pt3dadd( -35.8348, -124.997, -6.20224, 0.83 ) }
    dend_23 { pt3dadd( -36.0551, -129.079, -6.14937, 0.28 ) }
    dend_23 { pt3dadd( -36.1847, -132.156, -6.09656, 0.83 ) }
    dend_23 { pt3dadd( -36.2707, -137.684, -5.96505, 0.28 ) }
    dend_23 { pt3dadd( -36.2796, -138.762, -5.95317, 0.55 ) }
    dend_23 { pt3dadd( -36.2839, -141.373, -5.96391, 0.28 ) }
    dend_23 { pt3dadd( -36.2989, -142.049, -5.95188, 0.55 ) }
    dend_23 { pt3dadd( -36.3783, -143.707, -5.87495, 0.28 ) }
    dend_23 { pt3dadd( -36.4598, -144.752, -5.77408, 0.55 ) }
    dend_23 { pt3dadd( -36.5959, -146.163, -5.611, 0.28 ) }
    dend_23 { pt3dadd( -36.7754, -148.133, -5.39387, 1.11 ) }
    dend_23 { pt3dadd( -37.3291, -153.849, -4.8658, 0.28 ) }
    dend_23 { pt3dadd( -37.4647, -155.186, -4.76636, 0.83 ) }
    dend_23 { pt3dadd( -37.677, -157.262, -4.661, 0.83 ) }
    dend_23 { pt3dadd( -38.399, -163.903, -4.4556, 0.28 ) }
    dend_23 { pt3dadd( -38.496, -164.675, -4.46166, 0.55 ) }
    dend_23 { pt3dadd( -38.8131, -166.914, -4.55548, 0.28 ) }
    dend_23 { pt3dadd( -38.9953, -167.916, -4.6559, 0.55 ) }
    dend_23 { pt3dadd( -39.4645, -170.279, -4.96795, 0.28 ) }
    dend_23 { pt3dadd( -39.8517, -171.886, -5.25073, 0.83 ) }
    dend_23 { pt3dadd( -40.5567, -174.291, -5.77709, 0.28 ) }
    dend_23 { pt3dadd( -40.6478, -174.601, -5.87581, 0.55 ) }
    dend_23 { pt3dadd( -41.2369, -176.859, -6.73171, 0.28 ) }
    dend_23 { pt3dadd( -41.3935, -177.529, -7.00761, 0.55 ) }
    dend_23 { pt3dadd( -41.627, -178.68, -7.53398, 0.55 ) }
    dend_23 { pt3dadd( -41.7545, -180.18, -8.39793, 0.83 ) }
    dend_23 { pt3dadd( -41.7026, -183.661, -10.6168, 0.28 ) }
    dend_23 { pt3dadd( -41.5007, -184.468, -11.6986, 0.55 ) }
    dend_23 { pt3dadd( -41.1425, -185.084, -13.0213, 0.28 ) }
    dend_23 { pt3dadd( -40.816, -185.463, -14.0435, 0.55 ) }
    dend_23 { pt3dadd( -39.5862, -186.565, -17.4787, 0.28 ) }
    dend_23 { pt3dadd( -39.3442, -186.747, -18.1203, 0.83 ) }
    dend_23 { pt3dadd( -35.971, -188.999, -26.8768, 0.28 ) }
    dend_23 { pt3dadd( -35.7389, -189.16, -27.5228, 0.55 ) }
    dend_23 { pt3dadd( -34.7255, -189.914, -30.505, 0.28 ) }
    dend_23 { pt3dadd( -34.327, -190.329, -31.8172, 0.55 ) }
    dend_23 { pt3dadd( -34.0455, -190.847, -32.9417, 0.28 ) }
    dend_23 { pt3dadd( -33.8689, -191.329, -33.7342, 0.55 ) }
    dend_23 { pt3dadd( -33.7148, -192.884, -34.9231, 0.28 ) }
    dend_23 { pt3dadd( -33.6888, -193.698, -35.5351, 0.55 ) }
    dend_23 { pt3dadd( -33.8622, -196.291, -37.2969, 0.28 ) }
    dend_23 { pt3dadd( -34.0049, -198.251, -38.5774, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 43/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 31.3941, 68.715, 12.0774, 0.28 ) }
    dend_21 { pt3dadd( 30.1019, 71.1873, 10.3457, 0.28 ) }
    dend_21 { pt3dadd( 29.6782, 72.0963, 9.70413, 0.55 ) }
    dend_21 { pt3dadd( 27.923, 76.2648, 6.81061, 0.28 ) }
    dend_21 { pt3dadd( 27.4815, 77.4711, 5.99248, 0.55 ) }
    dend_21 { pt3dadd( 25.3024, 84.1618, 1.55585, 0.28 ) }
    dend_21 { pt3dadd( 24.674, 86.2973, 0.178078, 0.83 ) }
    dend_21 { pt3dadd( 23.9833, 89.2293, -1.61235, 0.28 ) }
    dend_21 { pt3dadd( 23.7203, 90.7939, -2.57935, 0.55 ) }
    dend_21 { pt3dadd( 23.6445, 92.6372, -3.67031, 0.28 ) }
    dend_21 { pt3dadd( 23.6984, 93.2349, -4.01894, 0.55 ) }
    dend_21 { pt3dadd( 24.3323, 95.1221, -5.07834, 0.28 ) }
    dend_21 { pt3dadd( 24.8496, 96.3694, -5.79292, 0.55 ) }
    dend_21 { pt3dadd( 25.8388, 98.9608, -7.15103, 0.28 ) }
    dend_21 { pt3dadd( 26.4674, 100.79, -8.07304, 0.83 ) }
    dend_21 { pt3dadd( 26.9024, 102.097, -8.6183, 0.83 ) }
    dend_21 { pt3dadd( 27.8187, 104.659, -9.46608, 0.28 ) }
    dend_21 { pt3dadd( 28.2091, 105.693, -9.77806, 0.55 ) }
    dend_21 { pt3dadd( 30.1503, 110.882, -11.1477, 0.28 ) }
    dend_21 { pt3dadd( 30.3941, 111.611, -11.2848, 0.55 ) }
    dend_21 { pt3dadd( 31.8875, 116.411, -11.9957, 0.28 ) }
    dend_21 { pt3dadd( 32.489, 118.262, -12.1712, 1.11 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 65/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 31.3941, 68.715, 12.0774, 0.28 ) }
    dend_20 { pt3dadd( 32.1883, 70.8107, 12.1647, 0.28 ) }
    dend_20 { pt3dadd( 32.2656, 71.0782, 12.183, 0.55 ) }
    dend_20 { pt3dadd( 32.9614, 74.1032, 12.4311, 0.28 ) }
    dend_20 { pt3dadd( 33.1432, 75.1517, 12.5496, 0.55 ) }
    dend_20 { pt3dadd( 33.483, 77.6253, 12.8594, 0.28 ) }
    dend_20 { pt3dadd( 33.5853, 78.5052, 12.978, 0.55 ) }
    dend_20 { pt3dadd( 33.6397, 79.994, 13.2207, 0.28 ) }
    dend_20 { pt3dadd( 33.6623, 81.6351, 13.4469, 0.83 ) }
    dend_20 { pt3dadd( 33.6202, 83.7959, 13.7096, 0.28 ) }
    dend_20 { pt3dadd( 33.6158, 84.2101, 13.7422, 0.55 ) }
    dend_20 { pt3dadd( 33.6124, 85.7064, 13.8252, 0.28 ) }
    dend_20 { pt3dadd( 33.6079, 86.7689, 13.8546, 0.83 ) }
    dend_20 { pt3dadd( 33.6147, 90.564, 13.8422, 0.28 ) }
    dend_20 { pt3dadd( 33.6161, 91.4493, 13.811, 0.55 ) }
    dend_20 { pt3dadd( 33.6114, 92.9301, 13.7245, 0.28 ) }
    dend_20 { pt3dadd( 33.6065, 93.3836, 13.6989, 0.55 ) }
    dend_20 { pt3dadd( 33.5095, 96.3215, 13.5167, 0.28 ) }
    dend_20 { pt3dadd( 33.4989, 96.575, 13.5012, 0.55 ) }
    dend_20 { pt3dadd( 33.3571, 98.7581, 13.3688, 0.28 ) }
    dend_20 { pt3dadd( 33.3662, 99.311, 13.332, 0.55 ) }
    dend_20 { pt3dadd( 33.4678, 100.447, 13.268, 0.28 ) }
    dend_20 { pt3dadd( 33.5956, 101.489, 13.2063, 0.83 ) }
    dend_20 { pt3dadd( 33.9523, 103.463, 13.0919, 0.28 ) }
    dend_20 { pt3dadd( 34.0267, 103.813, 13.0722, 0.83 ) }
    dend_20 { pt3dadd( 34.8726, 106.97, 12.8882, 0.28 ) }
    dend_20 { pt3dadd( 35.2275, 108.071, 12.8089, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 92/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 10.995, -13.9294, -4.02868, 0.28 ) }
    dend_10 { pt3dadd( 12.5607, -17.5443, -4.7491, 0.28 ) }
    dend_10 { pt3dadd( 13.4111, -19.5078, -5.14042, 0.55 ) }
    dend_10 { pt3dadd( 14.673, -22.4215, -5.72107, 0.28 ) }
    dend_10 { pt3dadd( 16.2262, -26.0077, -6.43577, 0.83 ) }
    dend_10 { pt3dadd( 17.9189, -29.9161, -7.21469, 0.28 ) }
    dend_10 { pt3dadd( 18.9286, -32.2474, -7.6793, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 10.995, -13.9294, -4.02868, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 13.8774, -15.255, -3.91423, 0.28 ) }
    dend_1 { pt3dadd( 15.5814, -16.0387, -3.84657, 0.83 ) }
    dend_1 { pt3dadd( 18.762, -17.5016, -3.72028, 0.28 ) }
    dend_1 { pt3dadd( 20.9404, -18.5035, -3.63379, 1.11 ) }
    dend_1 { pt3dadd( 23.4634, -19.6638, -3.53361, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 5/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.66408, -37.6984, 0.58608, 0.28 ) }
    axon_1 { pt3dadd( -3.50741, -52.6747, 0.58608, 0.28 ) }
    axon_1 { pt3dadd( -4.35075, -67.651, 0.58608, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 8/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -15.6482, 15.3716, 3.29579, 0.28 ) }
    dend_52 { pt3dadd( -17.9628, 15.7369, 2.84662, 0.28 ) }
    dend_52 { pt3dadd( -19.3615, 15.9573, 2.61875, 0.55 ) }
    dend_52 { pt3dadd( -20.5996, 16.1366, 2.41508, 0.28 ) }
    dend_52 { pt3dadd( -22.5748, 16.38, 2.11725, 0.83 ) }
    dend_52 { pt3dadd( -24.7383, 16.5889, 1.75708, 0.28 ) }
    dend_52 { pt3dadd( -26.4219, 16.7225, 1.45345, 0.28 ) }
    dend_52 { pt3dadd( -28.3207, 16.8252, 1.12758, 0.83 ) }
    dend_52 { pt3dadd( -30.124, 16.8961, 0.817805, 0.28 ) }
    dend_52 { pt3dadd( -31.6215, 16.9426, 0.543783, 0.83 ) }
    dend_52 { pt3dadd( -35.4886, 17.0256, -0.195655, 0.28 ) }
    dend_52 { pt3dadd( -37.8619, 17.1136, -0.712732, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -15.6482, 15.3716, 3.29579, 0.28 ) }
    dend_47 { pt3dadd( -15.2351, 17.981, 5.36298, 0.28 ) }
    dend_47 { pt3dadd( -14.9917, 19.5182, 6.58075, 0.28 ) }
    dend_47 { pt3dadd( -14.8901, 20.16, 7.0892, 0.55 ) }
    dend_47 { pt3dadd( -14.3423, 23.6199, 9.83019, 0.28 ) }
    dend_47 { pt3dadd( -14.0732, 25.319, 11.1762, 0.83 ) }
    dend_47 { pt3dadd( -13.5653, 28.527, 13.7176, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 27/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 3.84933, 35.4857, -7.79187, 0.28 ) }
    dend_41 { pt3dadd( 4.53288, 38.9117, -8.20397, 0.28 ) }
    dend_41 { pt3dadd( 4.67792, 39.6328, -8.3029, 0.55 ) }
    dend_41 { pt3dadd( 4.87881, 40.5829, -8.43761, 0.28 ) }
    dend_41 { pt3dadd( 5.03603, 41.3299, -8.54394, 0.55 ) }
    dend_41 { pt3dadd( 5.68609, 44.4187, -8.98358, 0.28 ) }
    dend_41 { pt3dadd( 6.14516, 46.5999, -9.29406, 0.83 ) }
    dend_41 { pt3dadd( 6.68471, 49.1196, -9.5607, 0.28 ) }
    dend_41 { pt3dadd( 6.89748, 50.1001, -9.67368, 0.55 ) }
    dend_41 { pt3dadd( 6.95576, 50.3599, -9.70594, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 37/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 3.84933, 35.4857, -7.79187, 0.28 ) }
    dend_40 { pt3dadd( 6.3578, 38.6694, -9.21167, 0.28 ) }
    dend_40 { pt3dadd( 7.5087, 40.1662, -9.87327, 0.55 ) }
    dend_40 { pt3dadd( 9.10613, 42.2215, -10.755, 0.28 ) }
    dend_40 { pt3dadd( 9.37138, 42.5477, -10.9184, 0.55 ) }
    dend_40 { pt3dadd( 11.2188, 44.8124, -12.1127, 0.28 ) }
    dend_40 { pt3dadd( 11.9016, 45.639, -12.6147, 0.55 ) }
    dend_40 { pt3dadd( 13.1457, 47.2475, -13.6544, 0.28 ) }
    dend_40 { pt3dadd( 13.5509, 47.7667, -14.0617, 0.55 ) }
    dend_40 { pt3dadd( 15.4497, 50.1917, -16.219, 0.28 ) }
    dend_40 { pt3dadd( 15.8086, 50.5935, -16.8481, 0.83 ) }
    dend_40 { pt3dadd( 16.9017, 51.6756, -19.38, 0.28 ) }
    dend_40 { pt3dadd( 17.2693, 51.9851, -20.3127, 0.55 ) }
    dend_40 { pt3dadd( 17.7685, 52.2996, -21.596, 0.28 ) }
    dend_40 { pt3dadd( 18.3341, 52.5569, -22.9685, 0.55 ) }
    dend_40 { pt3dadd( 22.1415, 53.6658, -31.6454, 0.28 ) }
    dend_40 { pt3dadd( 22.4799, 53.7218, -32.3372, 0.55 ) }
    dend_40 { pt3dadd( 23.5853, 53.7807, -34.2446, 0.28 ) }
    dend_40 { pt3dadd( 24.5447, 53.7296, -35.5854, 0.55 ) }
    dend_40 { pt3dadd( 26.3289, 53.5363, -37.5156, 0.28 ) }
    dend_40 { pt3dadd( 27.0864, 53.4051, -38.1012, 0.55 ) }
    dend_40 { pt3dadd( 28.2382, 53.1691, -38.5882, 0.28 ) }
    dend_40 { pt3dadd( 30.1405, 52.6734, -39.3788, 0.55 ) }
    dend_40 { pt3dadd( 33.1797, 51.7077, -40.5941, 0.28 ) }
    dend_40 { pt3dadd( 34.3214, 51.2796, -41.0488, 0.55 ) }
    dend_40 { pt3dadd( 35.6907, 50.7069, -41.5851, 0.28 ) }
    dend_40 { pt3dadd( 36.8992, 50.1841, -42.0776, 0.55 ) }
    dend_40 { pt3dadd( 38.8197, 49.3663, -42.9635, 0.28 ) }
    dend_40 { pt3dadd( 39.892, 48.9213, -43.5542, 0.83 ) }
    dend_40 { pt3dadd( 43.2926, 47.6308, -45.5927, 0.28 ) }
    dend_40 { pt3dadd( 43.9247, 47.4733, -45.9631, 0.55 ) }
    dend_40 { pt3dadd( 45.4485, 47.2752, -46.8366, 0.28 ) }
    dend_40 { pt3dadd( 46.8625, 47.245, -47.644, 0.55 ) }
    dend_40 { pt3dadd( 48.8099, 47.4131, -48.8156, 0.28 ) }
    dend_40 { pt3dadd( 49.6595, 47.5709, -49.4226, 0.55 ) }
    dend_40 { pt3dadd( 55.1723, 49.0745, -53.7024, 0.28 ) }
    dend_40 { pt3dadd( 56.1117, 49.3315, -54.4814, 0.55 ) }
    dend_40 { pt3dadd( 58.8873, 50.0944, -56.8818, 0.28 ) }
    dend_40 { pt3dadd( 60.2249, 50.4736, -58.0472, 0.55 ) }
    dend_40 { pt3dadd( 63.485, 51.4647, -60.9958, 0.28 ) }
    dend_40 { pt3dadd( 64.4305, 51.7638, -61.9642, 0.55 ) }
    dend_40 { pt3dadd( 65.6087, 52.1826, -63.648, 0.28 ) }
    dend_40 { pt3dadd( 66.3717, 52.3669, -64.7501, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 80/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -29.2921, -30.9651, 7.44503, 0.28 ) }
    dend_33 { pt3dadd( -27.1549, -34.8348, 8.80927, 0.28 ) }
    dend_33 { pt3dadd( -26.7734, -35.5255, 9.05279, 0.55 ) }
    dend_33 { pt3dadd( -25.2266, -38.3262, 10.0402, 0.28 ) }
    dend_33 { pt3dadd( -24.7148, -39.2527, 10.3668, 0.83 ) }
    dend_33 { pt3dadd( -23.4665, -41.513, 11.1636, 0.28 ) }
    dend_33 { pt3dadd( -22.8426, -42.6426, 11.5619, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 87/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -29.2921, -30.9651, 7.44503, 0.28 ) }
    dend_32 { pt3dadd( -29.8968, -33.8383, 8.88437, 0.28 ) }
    dend_32 { pt3dadd( -29.9806, -34.2175, 9.05052, 0.83 ) }
    dend_32 { pt3dadd( -30.4301, -36.141, 9.88922, 0.28 ) }
    dend_32 { pt3dadd( -30.569, -36.742, 10.1009, 0.83 ) }
    dend_32 { pt3dadd( -30.995, -38.4264, 10.6046, 0.28 ) }
    dend_32 { pt3dadd( -31.1151, -38.8652, 10.7153, 0.55 ) }
    dend_32 { pt3dadd( -31.6524, -40.5552, 11.0019, 0.28 ) }
    dend_32 { pt3dadd( -32.3431, -42.5426, 11.2359, 0.83 ) }
    dend_32 { pt3dadd( -33.4142, -45.3188, 11.4548, 0.28 ) }
    dend_32 { pt3dadd( -34.0102, -46.8009, 11.5314, 0.83 ) }
    dend_32 { pt3dadd( -34.7264, -48.4604, 11.5573, 0.28 ) }
    dend_32 { pt3dadd( -35.476, -50.0147, 11.5459, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( -36.08, -51.1124, 11.4838, 0.28 ) }
    dend_32 { pt3dadd( -36.524, -51.8546, 11.4034, 0.55 ) }
    dend_32 { pt3dadd( -37.1779, -52.8276, 11.3128, 0.28 ) }
    dend_32 { pt3dadd( -37.6985, -53.6011, 11.2407, 0.55 ) }
    dend_32 { pt3dadd( -39.5959, -56.2815, 11.0116, 0.83 ) }
    dend_32 { pt3dadd( -40.7518, -57.9107, 10.8855, 0.28 ) }
    dend_32 { pt3dadd( -41.5107, -58.9106, 10.8027, 0.55 ) }
    dend_32 { pt3dadd( -43.52, -61.4103, 10.5831, 0.28 ) }
    dend_32 { pt3dadd( -44.6361, -62.7939, 10.5171, 1.11 ) }
    dend_32 { pt3dadd( -46.6273, -65.3014, 10.4293, 0.28 ) }
    dend_32 { pt3dadd( -47.3245, -66.2596, 10.4351, 0.55 ) }
    dend_32 { pt3dadd( -48.6568, -68.2811, 10.4926, 0.28 ) }
    dend_32 { pt3dadd( -49.3158, -69.384, 10.5192, 0.83 ) }
    dend_32 { pt3dadd( -51.2186, -73.4227, 10.5635, 0.28 ) }
    dend_32 { pt3dadd( -51.7771, -75.0078, 10.561, 0.83 ) }
    dend_32 { pt3dadd( -52.8621, -79.3236, 10.4995, 0.28 ) }
    dend_32 { pt3dadd( -53.241, -81.4042, 10.4608, 1.11 ) }
    dend_32 { pt3dadd( -53.3879, -82.6561, 10.4323, 1.11 ) }
    dend_32 { pt3dadd( -53.6261, -86.1357, 10.3889, 0.28 ) }
    dend_32 { pt3dadd( -53.6924, -89.0753, 10.3527, 0.28 ) }
    dend_32 { pt3dadd( -53.7208, -90.0388, 10.3318, 0.55 ) }
    dend_32 { pt3dadd( -53.8344, -92.5583, 10.2492, 0.28 ) }
    dend_32 { pt3dadd( -53.9314, -93.7784, 10.178, 0.83 ) }
    dend_32 { pt3dadd( -54.2941, -97.005, 9.91988, 0.28 ) }
    dend_32 { pt3dadd( -54.4677, -98.2864, 9.79155, 0.55 ) }
    dend_32 { pt3dadd( -55.3941, -104.809, 9.07525, 0.28 ) }
    dend_32 { pt3dadd( -55.5889, -106.159, 8.96674, 0.55 ) }
    dend_32 { pt3dadd( -56.0719, -109.361, 8.77186, 0.28 ) }
    dend_32 { pt3dadd( -56.2155, -110.292, 8.72935, 0.55 ) }
    dend_32 { pt3dadd( -57.049, -115.409, 8.54036, 0.28 ) }
    dend_32 { pt3dadd( -57.4375, -118.164, 8.50097, 0.83 ) }
    dend_32 { pt3dadd( -57.8379, -122.058, 8.58075, 0.28 ) }
    dend_32 { pt3dadd( -57.9496, -123.27, 8.577, 0.83 ) }
    dend_32 { pt3dadd( -58.0675, -124.797, 8.59523, 0.28 ) }
    dend_32 { pt3dadd( -58.1315, -125.749, 8.53208, 0.55 ) }
    dend_32 { pt3dadd( -58.3016, -128.421, 8.1739, 0.28 ) }
    dend_32 { pt3dadd( -58.3509, -129.377, 8.02449, 0.55 ) }
    dend_32 { pt3dadd( -58.5303, -133.626, 7.31604, 0.28 ) }
    dend_32 { pt3dadd( -58.5965, -135.066, 7.10112, 0.55 ) }
    dend_32 { pt3dadd( -59.0675, -144.694, 5.85228, 0.28 ) }
    dend_32 { pt3dadd( -59.1636, -146.488, 5.64754, 0.83 ) }
    dend_32 { pt3dadd( -59.568, -152.795, 5.03947, 0.28 ) }
    dend_32 { pt3dadd( -59.6253, -153.891, 4.93743, 0.55 ) }
    dend_32 { pt3dadd( -59.8559, -160.246, 4.38901, 0.28 ) }
    dend_32 { pt3dadd( -59.877, -160.874, 4.33102, 0.55 ) }
    dend_32 { pt3dadd( -59.9168, -164.563, 4.05421, 0.28 ) }
    dend_32 { pt3dadd( -59.9152, -165.262, 4.00522, 0.83 ) }
    dend_32 { pt3dadd( -59.9257, -166.493, 3.92519, 0.83 ) }
    dend_32 { pt3dadd( -59.9879, -168.77, 3.80367, 0.83 ) }
    dend_32 { pt3dadd( -60.0609, -171.712, 3.69131, 0.28 ) }
    dend_32 { pt3dadd( -60.1716, -173.909, 3.47937, 0.28 ) }
    dend_32 { pt3dadd( -60.2055, -174.677, 3.3622, 0.55 ) }
    dend_32 { pt3dadd( -60.2996, -177.122, 2.9466, 0.28 ) }
    dend_32 { pt3dadd( -60.3697, -178.643, 2.66792, 0.55 ) }
    dend_32 { pt3dadd( -60.5512, -183.67, 1.66786, 0.28 ) }
    dend_32 { pt3dadd( -60.6651, -186.801, 1.02061, 0.83 ) }
    dend_32 { pt3dadd( -60.9641, -195.468, -0.870042, 0.28 ) }
    dend_32 { pt3dadd( -60.9851, -196.559, -1.12371, 0.83 ) }
    dend_32 { pt3dadd( -60.9827, -198.319, -1.54142, 0.28 ) }
    dend_32 { pt3dadd( -60.9762, -199.364, -1.79335, 0.83 ) }
    dend_32 { pt3dadd( -60.9641, -203.694, -2.84735, 0.28 ) }
    dend_32 { pt3dadd( -60.9609, -204.224, -2.95663, 0.55 ) }
    dend_32 { pt3dadd( -60.9789, -207.169, -3.60762, 0.28 ) }
    dend_32 { pt3dadd( -60.9793, -208.722, -3.95834, 0.83 ) }
    dend_32 { pt3dadd( -60.9564, -211.875, -4.65155, 0.28 ) }
    dend_32 { pt3dadd( -60.9553, -213.446, -4.99539, 0.55 ) }
    dend_32 { pt3dadd( -60.9799, -220.407, -6.5119, 0.28 ) }
    dend_32 { pt3dadd( -60.9805, -220.92, -6.61526, 0.55 ) }
    dend_32 { pt3dadd( -60.9809, -222.634, -6.9294, 0.28 ) }
    dend_32 { pt3dadd( -60.9538, -224.494, -7.26362, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 70/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 3.0505, -117.501, 0.867572, 0.28 ) }
    dend_28 { pt3dadd( 6.4972, -118.54, 1.41405, 0.28 ) }
    dend_28 { pt3dadd( 8.74276, -119.217, 1.77008, 0.83 ) }
    dend_28 { pt3dadd( 11.8185, -120.143, 2.25774, 0.28 ) }
    dend_28 { pt3dadd( 13.6714, -120.702, 2.55152, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 75/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 3.0505, -117.501, 0.867572, 0.83 ) }
    dend_27 { pt3dadd( 3.15338, -119.421, 0.880341, 0.83 ) }
    dend_27 { pt3dadd( 3.36073, -121.435, 1.00083, 0.28 ) }
    dend_27 { pt3dadd( 3.42973, -121.833, 1.02693, 0.55 ) }
    dend_27 { pt3dadd( 3.67966, -123.164, 1.11293, 0.28 ) }
    dend_27 { pt3dadd( 3.75664, -123.588, 1.14319, 0.55 ) }
    dend_27 { pt3dadd( 3.94001, -124.679, 1.22502, 0.28 ) }
    dend_27 { pt3dadd( 4.08712, -125.613, 1.32825, 0.83 ) }
    dend_27 { pt3dadd( 4.40413, -127.601, 1.62427, 0.28 ) }
    dend_27 { pt3dadd( 4.46881, -128.171, 1.71722, 0.55 ) }
    dend_27 { pt3dadd( 4.59068, -129.857, 1.97733, 0.28 ) }
    dend_27 { pt3dadd( 4.60986, -130.586, 2.06895, 0.55 ) }
    dend_27 { pt3dadd( 4.55743, -132.344, 2.19029, 0.28 ) }
    dend_27 { pt3dadd( 4.50096, -133.151, 2.23778, 0.83 ) }
    dend_27 { pt3dadd( 4.41096, -134.476, 2.3563, 0.83 ) }
    dend_27 { pt3dadd( 4.37626, -135.533, 2.46797, 0.28 ) }
    dend_27 { pt3dadd( 4.37663, -136.445, 2.58464, 0.55 ) }
    dend_27 { pt3dadd( 4.41226, -139.402, 3.00768, 0.28 ) }
    dend_27 { pt3dadd( 4.42062, -140.349, 3.17521, 0.55 ) }
    dend_27 { pt3dadd( 4.40856, -142.42, 3.5917, 0.28 ) }
    dend_27 { pt3dadd( 4.37228, -143.81, 3.92591, 0.55 ) }
    dend_27 { pt3dadd( 4.2572, -145.791, 4.48515, 0.28 ) }
    dend_27 { pt3dadd( 4.12533, -147.208, 4.90955, 0.55 ) }
    dend_27 { pt3dadd( 3.86954, -149.423, 5.60834, 0.28 ) }
    dend_27 { pt3dadd( 3.65764, -151.0, 6.03517, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_27 { pt3dadd( 3.28833, -153.441, 6.60272, 0.28 ) }
    dend_27 { pt3dadd( 3.17342, -154.308, 6.78104, 0.55 ) }
    dend_27 { pt3dadd( 2.85679, -157.217, 7.30666, 0.28 ) }
    dend_27 { pt3dadd( 2.77165, -158.437, 7.49485, 0.55 ) }
    dend_27 { pt3dadd( 2.65296, -161.377, 7.84459, 0.28 ) }
    dend_27 { pt3dadd( 2.64836, -163.243, 8.02754, 0.83 ) }
    dend_27 { pt3dadd( 2.7072, -165.087, 8.1615, 0.28 ) }
    dend_27 { pt3dadd( 2.72507, -165.497, 8.18371, 0.55 ) }
    dend_27 { pt3dadd( 2.78755, -167.184, 8.27096, 0.28 ) }
    dend_27 { pt3dadd( 2.79114, -167.768, 8.29309, 0.83 ) }
    dend_27 { pt3dadd( 2.77753, -169.411, 8.37459, 0.28 ) }
    dend_27 { pt3dadd( 2.73054, -170.212, 8.391, 0.55 ) }
    dend_27 { pt3dadd( 2.50913, -172.044, 8.36506, 0.28 ) }
    dend_27 { pt3dadd( 2.41059, -172.674, 8.30114, 0.55 ) }
    dend_27 { pt3dadd( 2.1677, -174.08, 8.09506, 0.28 ) }
    dend_27 { pt3dadd( 2.11584, -174.379, 8.05034, 0.55 ) }
    dend_27 { pt3dadd( 1.95967, -175.29, 7.91212, 0.28 ) }
    dend_27 { pt3dadd( 1.85875, -176.01, 7.82034, 0.55 ) }
    dend_27 { pt3dadd( 1.2913, -180.906, 7.30204, 0.28 ) }
    dend_27 { pt3dadd( 1.10274, -182.917, 7.13529, 0.83 ) }
    dend_27 { pt3dadd( 0.973989, -184.609, 7.03949, 0.28 ) }
    dend_27 { pt3dadd( 0.927956, -185.596, 7.01957, 0.55 ) }
    dend_27 { pt3dadd( 0.944395, -190.608, 7.12697, 0.28 ) }
    dend_27 { pt3dadd( 1.05936, -191.759, 7.20791, 1.11 ) }
    dend_27 { pt3dadd( 1.24331, -192.584, 7.33664, 0.28 ) }
    dend_27 { pt3dadd( 1.44527, -193.211, 7.4551, 0.55 ) }
    dend_27 { pt3dadd( 2.28468, -195.216, 7.92913, 0.28 ) }
    dend_27 { pt3dadd( 2.84299, -196.366, 8.25642, 0.28 ) }
    dend_27 { pt3dadd( 4.61166, -199.453, 9.29502, 0.28 ) }
    dend_27 { pt3dadd( 5.06324, -200.223, 9.5575, 0.83 ) }
    dend_27 { pt3dadd( 5.56433, -201.084, 9.84314, 0.28 ) }
    dend_27 { pt3dadd( 6.20626, -202.239, 10.2074, 0.83 ) }
    dend_27 { pt3dadd( 7.40743, -204.575, 10.8706, 0.28 ) }
    dend_27 { pt3dadd( 7.54389, -204.923, 10.9687, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 34/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -34.0049, -198.251, -38.5774, 0.28 ) }
    dend_25 { pt3dadd( -33.4495, -204.103, -37.9967, 0.28 ) }
    dend_25 { pt3dadd( -33.2977, -206.139, -38.0127, 0.55 ) }
    dend_25 { pt3dadd( -33.1864, -207.93, -38.0612, 0.28 ) }
    dend_25 { pt3dadd( -33.1402, -209.111, -38.0895, 0.55 ) }
    dend_25 { pt3dadd( -33.1095, -211.024, -38.1306, 0.28 ) }
    dend_25 { pt3dadd( -33.11, -212.732, -38.1363, 0.55 ) }
    dend_25 { pt3dadd( -33.3168, -217.985, -38.1563, 0.28 ) }
    dend_25 { pt3dadd( -33.3721, -218.882, -38.1436, 0.55 ) }
    dend_25 { pt3dadd( -33.5018, -220.665, -38.0355, 0.28 ) }
    dend_25 { pt3dadd( -33.5822, -221.812, -37.9051, 0.55 ) }
    dend_25 { pt3dadd( -33.6763, -223.519, -37.6208, 0.28 ) }
    dend_25 { pt3dadd( -33.7103, -225.113, -37.2915, 1.94 ) }
    dend_25 { pt3dadd( -33.7161, -228.253, -36.435, 0.28 ) }
    dend_25 { pt3dadd( -33.664, -230.716, -35.7988, 1.38 ) }
    dend_25 { pt3dadd( -33.5696, -232.435, -35.3655, 0.28 ) }
    dend_25 { pt3dadd( -33.4789, -233.548, -35.0901, 0.83 ) }
    dend_25 { pt3dadd( -33.2701, -235.596, -34.6324, 0.28 ) }
    dend_25 { pt3dadd( -33.0491, -237.296, -34.2517, 1.94 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 53/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -34.0049, -198.251, -38.5774, 0.55 ) }
    dend_24 { pt3dadd( -36.8064, -199.412, -42.6168, 0.55 ) }
    dend_24 { pt3dadd( -38.4367, -200.027, -44.4929, 0.28 ) }
    dend_24 { pt3dadd( -38.9607, -200.224, -45.0958, 0.55 ) }
    dend_24 { pt3dadd( -41.8538, -201.316, -48.4251, 0.28 ) }
    dend_24 { pt3dadd( -43.5003, -201.937, -50.3198, 0.83 ) }
    dend_24 { pt3dadd( -46.4233, -203.039, -53.6835, 0.28 ) }
    dend_24 { pt3dadd( -48.0384, -203.424, -54.9789, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 61/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 18.9286, -32.2474, -7.6793, 0.28 ) }
    dend_16 { pt3dadd( 21.8277, -30.5435, -8.65959, 0.28 ) }
    dend_16 { pt3dadd( 22.6445, -30.0977, -8.89617, 0.83 ) }
    dend_16 { pt3dadd( 25.9447, -28.5661, -9.55602, 0.28 ) }
    dend_16 { pt3dadd( 27.0149, -28.1095, -9.78116, 0.55 ) }
    dend_16 { pt3dadd( 28.9418, -27.2874, -10.1865, 0.28 ) }
    dend_16 { pt3dadd( 30.165, -26.7655, -10.4439, 0.55 ) }
    dend_16 { pt3dadd( 31.473, -26.2424, -10.6688, 0.55 ) }
    dend_16 { pt3dadd( 34.6526, -25.1035, -11.1029, 0.28 ) }
    dend_16 { pt3dadd( 36.5813, -24.5993, -11.1809, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 71/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 18.9286, -32.2474, -7.6793, 0.28 ) }
    dend_11 { pt3dadd( 18.2275, -35.2526, -7.27094, 0.28 ) }
    dend_11 { pt3dadd( 17.9696, -36.78, -7.20244, 0.83 ) }
    dend_11 { pt3dadd( 17.6652, -38.9468, -7.14874, 0.28 ) }
    dend_11 { pt3dadd( 17.618, -39.4586, -7.11435, 0.55 ) }
    dend_11 { pt3dadd( 17.492, -41.5358, -6.91796, 0.28 ) }
    dend_11 { pt3dadd( 17.4384, -44.2241, -6.67636, 1.11 ) }
    dend_11 { pt3dadd( 17.6349, -47.6497, -6.40501, 0.28 ) }
    dend_11 { pt3dadd( 17.757, -48.8305, -6.30934, 0.55 ) }
    dend_11 { pt3dadd( 18.2433, -52.0781, -6.03804, 0.28 ) }
    dend_11 { pt3dadd( 18.4231, -53.0755, -5.96322, 0.55 ) }
    dend_11 { pt3dadd( 19.2456, -56.7113, -5.70861, 0.28 ) }
    dend_11 { pt3dadd( 19.7165, -58.5021, -5.57071, 0.83 ) }
    dend_11 { pt3dadd( 20.4417, -60.9811, -5.29416, 0.28 ) }
    dend_11 { pt3dadd( 20.8248, -62.2458, -5.18599, 0.55 ) }
    dend_11 { pt3dadd( 21.4977, -64.4275, -5.08244, 0.28 ) }
    dend_11 { pt3dadd( 21.9566, -65.8653, -4.99595, 0.55 ) }
    dend_11 { pt3dadd( 22.5704, -67.6369, -4.78569, 0.28 ) }
    dend_11 { pt3dadd( 23.2046, -69.4025, -4.53834, 0.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 90/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 23.4634, -19.6638, -3.53361, 0.28 ) }
    dend_7 { pt3dadd( 24.3527, -19.7159, -2.57642, 0.28 ) }
    dend_7 { pt3dadd( 25.9534, -19.1692, -0.763135, 0.28 ) }
    dend_7 { pt3dadd( 28.0921, -17.7304, 1.74383, 0.28 ) }
    dend_7 { pt3dadd( 28.6825, -17.1451, 2.37642, 0.83 ) }
    dend_7 { pt3dadd( 29.8282, -15.7732, 3.546, 0.28 ) }
    dend_7 { pt3dadd( 30.4205, -15.0639, 4.15075, 0.83 ) }
    dend_7 { pt3dadd( 31.4492, -13.2573, 5.21767, 0.28 ) }
    dend_7 { pt3dadd( 31.6899, -12.5875, 5.48848, 0.55 ) }
    dend_7 { pt3dadd( 32.2053, -10.4843, 5.87578, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_7 { pt3dadd( 32.3121, -10.0208, 5.93724, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 1/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 23.4634, -19.6638, -3.53361, 0.55 ) }
    dend_2 { pt3dadd( 23.5132, -20.3925, -3.81003, 0.55 ) }
    dend_2 { pt3dadd( 23.7454, -22.6326, -4.51986, 0.28 ) }
    dend_2 { pt3dadd( 23.9083, -24.0856, -4.85312, 0.28 ) }
    dend_2 { pt3dadd( 24.0068, -24.9641, -5.05463, 0.55 ) }
    dend_2 { pt3dadd( 24.0789, -25.6074, -5.20218, 0.55 ) }
    dend_2 { pt3dadd( 24.3102, -27.67, -5.67527, 0.83 ) }
    dend_2 { pt3dadd( 24.9292, -32.5152, -6.65445, 0.28 ) }
    dend_2 { pt3dadd( 25.1588, -34.2162, -6.896, 0.28 ) }
    // Section: dend_60, id: dend_60, parent: dend_52 (entry count 10/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -37.8619, 17.1136, -0.712732, 0.55 ) }
    dend_60 { pt3dadd( -40.0153, 17.5098, -1.25041, 0.55 ) }
    dend_60 { pt3dadd( -43.0208, 17.965, -1.94277, 0.28 ) }
    dend_60 { pt3dadd( -45.8366, 18.2758, -2.45826, 0.55 ) }
    dend_60 { pt3dadd( -47.9781, 18.476, -2.82037, 0.28 ) }
    dend_60 { pt3dadd( -48.952, 18.5642, -2.92697, 0.28 ) }
    dend_60 { pt3dadd( -50.1608, 18.6835, -2.98321, 0.55 ) }
    dend_60 { pt3dadd( -52.3392, 18.7719, -3.00666, 0.55 ) }
    dend_60 { pt3dadd( -54.3782, 18.8023, -2.83326, 0.28 ) }
    dend_60 { pt3dadd( -55.1237, 18.8346, -2.69955, 0.55 ) }
    dend_60 { pt3dadd( -57.3934, 18.9864, -2.26792, 0.28 ) }
    dend_60 { pt3dadd( -58.772, 19.0852, -1.87212, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 22/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -37.8619, 17.1136, -0.712732, 0.28 ) }
    dend_53 { pt3dadd( -39.4834, 17.2863, -1.7329, 0.28 ) }
    dend_53 { pt3dadd( -39.6785, 17.322, -1.88569, 0.55 ) }
    dend_53 { pt3dadd( -40.7675, 17.425, -2.63808, 0.28 ) }
    dend_53 { pt3dadd( -41.2381, 17.4393, -2.94309, 0.55 ) }
    dend_53 { pt3dadd( -42.1249, 17.42, -3.42513, 0.28 ) }
    dend_53 { pt3dadd( -42.8192, 17.3422, -3.76577, 0.55 ) }
    dend_53 { pt3dadd( -45.7615, 16.8241, -5.01249, 0.28 ) }
    dend_53 { pt3dadd( -47.6759, 16.4256, -5.75652, 0.55 ) }
    dend_53 { pt3dadd( -48.3074, 16.2836, -5.98209, 0.28 ) }
    dend_53 { pt3dadd( -49.9932, 15.87, -6.52523, 0.28 ) }
    dend_53 { pt3dadd( -52.6191, 15.2256, -7.38928, 0.83 ) }
    dend_53 { pt3dadd( -53.6083, 14.9573, -7.67865, 0.55 ) }
    dend_53 { pt3dadd( -54.8921, 14.5691, -7.98864, 0.28 ) }
    dend_53 { pt3dadd( -55.9013, 14.3132, -8.28948, 0.55 ) }
    dend_53 { pt3dadd( -57.1046, 14.0634, -8.70088, 0.28 ) }
    dend_53 { pt3dadd( -58.7013, 13.8179, -9.4217, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 39/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -13.5653, 28.527, 13.7176, 0.28 ) }
    dend_51 { pt3dadd( -12.7524, 28.7172, 14.7443, 0.28 ) }
    dend_51 { pt3dadd( -12.3767, 28.8051, 15.2189, 0.55 ) }
    dend_51 { pt3dadd( -10.7854, 29.1774, 17.2288, 0.28 ) }
    dend_51 { pt3dadd( -9.95332, 29.372, 18.2796, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 44/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -13.5653, 28.527, 13.7176, 0.28 ) }
    dend_48 { pt3dadd( -14.3794, 30.3832, 15.6581, 0.28 ) }
    dend_48 { pt3dadd( -15.0196, 31.8428, 17.184, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 47/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 6.95576, 50.3599, -9.70594, 0.28 ) }
    dend_43 { pt3dadd( 10.561, 51.0294, -11.7618, 0.28 ) }
    dend_43 { pt3dadd( 11.396, 51.1515, -12.1967, 0.55 ) }
    dend_43 { pt3dadd( 12.851, 51.286, -12.8691, 0.28 ) }
    dend_43 { pt3dadd( 14.2566, 51.3468, -13.4656, 0.55 ) }
    dend_43 { pt3dadd( 15.4306, 51.3787, -13.9692, 0.28 ) }
    dend_43 { pt3dadd( 17.8139, 51.3507, -14.9149, 0.83 ) }
    dend_43 { pt3dadd( 20.4296, 51.2511, -15.8179, 0.28 ) }
    dend_43 { pt3dadd( 22.5421, 51.1775, -16.538, 0.55 ) }
    dend_43 { pt3dadd( 26.0186, 51.1209, -17.6824, 0.28 ) }
    dend_43 { pt3dadd( 28.5009, 51.1746, -18.5374, 0.55 ) }
    dend_43 { pt3dadd( 32.2232, 51.3543, -19.8296, 0.28 ) }
    dend_43 { pt3dadd( 34.7696, 51.6259, -20.7722, 0.83 ) }
    dend_43 { pt3dadd( 37.5456, 52.1162, -21.8595, 0.28 ) }
    dend_43 { pt3dadd( 38.7774, 52.453, -22.4176, 0.55 ) }
    dend_43 { pt3dadd( 42.0457, 53.6393, -24.046, 0.28 ) }
    dend_43 { pt3dadd( 43.2509, 54.1837, -24.6929, 0.55 ) }
    dend_43 { pt3dadd( 46.5448, 55.9231, -26.6428, 0.28 ) }
    dend_43 { pt3dadd( 47.8714, 56.694, -27.4878, 0.55 ) }
    dend_43 { pt3dadd( 51.8797, 59.2714, -30.1047, 0.28 ) }
    dend_43 { pt3dadd( 53.1099, 60.1517, -30.9241, 0.83 ) }
    dend_43 { pt3dadd( 54.4421, 61.2722, -31.7895, 0.83 ) }
    dend_43 { pt3dadd( 55.4562, 62.2596, -32.4493, 0.83 ) }
    dend_43 { pt3dadd( 58.0616, 65.348, -34.1542, 0.28 ) }
    dend_43 { pt3dadd( 59.6644, 67.7411, -35.212, 0.28 ) }
    dend_43 { pt3dadd( 60.1738, 68.685, -35.5289, 0.55 ) }
    dend_43 { pt3dadd( 61.978, 72.4303, -36.8315, 0.28 ) }
    dend_43 { pt3dadd( 62.4676, 73.5075, -37.2149, 0.55 ) }
    dend_43 { pt3dadd( 63.5648, 76.078, -38.2847, 0.28 ) }
    dend_43 { pt3dadd( 65.1936, 80.1201, -39.9726, 0.28 ) }
    dend_43 { pt3dadd( 66.0716, 82.3376, -40.9759, 0.83 ) }
    dend_43 { pt3dadd( 67.9278, 86.8944, -43.2269, 0.28 ) }
    dend_43 { pt3dadd( 68.4447, 88.1731, -43.9359, 0.55 ) }
    dend_43 { pt3dadd( 70.1928, 92.1633, -46.3955, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 81/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 6.95576, 50.3599, -9.70594, 0.28 ) }
    dend_42 { pt3dadd( 4.95381, 54.4375, -9.64088, 0.28 ) }
    dend_42 { pt3dadd( 4.34706, 55.3248, -9.63567, 0.55 ) }
    dend_42 { pt3dadd( -0.621985, 61.5024, -9.56276, 0.28 ) }
    dend_42 { pt3dadd( -1.21285, 62.1393, -9.56244, 0.55 ) }
    dend_42 { pt3dadd( -2.87549, 63.6764, -9.55135, 0.28 ) }
    dend_42 { pt3dadd( -4.45377, 64.8854, -9.54487, 0.55 ) }
    dend_42 { pt3dadd( -10.1928, 67.8475, -9.49725, 0.28 ) }
    dend_42 { pt3dadd( -11.011, 68.1079, -9.52105, 0.55 ) }
    dend_42 { pt3dadd( -13.1983, 68.5428, -9.58937, 0.28 ) }
    dend_42 { pt3dadd( -15.6693, 68.9848, -9.72063, 0.83 ) }
    dend_42 { pt3dadd( -19.0736, 69.5404, -9.90062, 0.28 ) }
    dend_42 { pt3dadd( -21.6773, 70.0421, -9.93956, 0.83 ) }
    dend_42 { pt3dadd( -30.9327, 72.1366, -10.1109, 0.28 ) }
    dend_42 { pt3dadd( -34.2913, 73.0046, -10.2124, 0.55 ) }
    dend_42 { pt3dadd( -37.8673, 74.005, -10.3198, 0.28 ) }
    dend_42 { pt3dadd( -40.0336, 74.6764, -10.4632, 0.55 ) }
    dend_42 { pt3dadd( -49.7174, 77.7408, -11.238, 0.28 ) }
    dend_42 { pt3dadd( -52.4289, 78.5845, -11.4658, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_42 { pt3dadd( -55.0479, 79.3795, -11.6775, 0.28 ) }
    dend_42 { pt3dadd( -56.9892, 79.9113, -11.8495, 0.55 ) }
    dend_42 { pt3dadd( -63.5192, 81.5079, -12.3995, 0.28 ) }
    dend_42 { pt3dadd( -66.7923, 82.1419, -12.759, 0.28 ) }
    dend_42 { pt3dadd( -69.3792, 82.4698, -13.0868, 0.55 ) }
    dend_42 { pt3dadd( -71.8549, 82.7455, -13.3362, 0.28 ) }
    dend_42 { pt3dadd( -74.4436, 83.0778, -13.6123, 0.83 ) }
    dend_42 { pt3dadd( -79.1135, 83.7747, -14.1736, 0.28 ) }
    dend_42 { pt3dadd( -81.8954, 84.2442, -14.5038, 0.83 ) }
    dend_42 { pt3dadd( -90.1664, 85.9285, -15.8819, 0.28 ) }
    dend_42 { pt3dadd( -92.6633, 86.5466, -16.4568, 0.55 ) }
    dend_42 { pt3dadd( -96.1969, 87.6283, -17.4421, 0.28 ) }
    dend_42 { pt3dadd( -96.9731, 87.8595, -17.7057, 0.55 ) }
    dend_42 { pt3dadd( -97.9278, 88.1243, -18.0713, 0.28 ) }
    dend_42 { pt3dadd( -99.9275, 88.6141, -18.9129, 0.55 ) }
    dend_42 { pt3dadd( -104.8, 89.5685, -21.0556, 0.28 ) }
    dend_42 { pt3dadd( -108.363, 89.9857, -22.327, 0.83 ) }
    dend_42 { pt3dadd( -119.11, 90.6219, -25.5551, 0.28 ) }
    dend_42 { pt3dadd( -122.344, 90.6838, -26.3795, 0.55 ) }
    dend_42 { pt3dadd( -125.749, 90.6553, -27.0902, 0.28 ) }
    dend_42 { pt3dadd( -127.407, 90.6125, -27.3131, 0.55 ) }
    dend_42 { pt3dadd( -135.946, 90.2274, -27.9436, 0.28 ) }
    dend_42 { pt3dadd( -138.493, 90.0826, -28.0214, 0.55 ) }
    dend_42 { pt3dadd( -141.729, 89.955, -27.8422, 0.28 ) }
    dend_42 { pt3dadd( -144.488, 89.9082, -27.5711, 0.55 ) }
    dend_42 { pt3dadd( -149.688, 89.9526, -26.8852, 0.28 ) }
    dend_42 { pt3dadd( -152.082, 90.0688, -26.6385, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 27/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -22.8426, -42.6426, 11.5619, 0.55 ) }
    dend_37 { pt3dadd( -21.481, -42.4428, 11.7153, 0.55 ) }
    dend_37 { pt3dadd( -20.5452, -42.3055, 11.8208, 0.28 ) }
    dend_37 { pt3dadd( -19.8236, -42.1996, 11.9021, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 31/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -22.8426, -42.6426, 11.5619, 0.28 ) }
    dend_34 { pt3dadd( -22.9167, -47.2773, 12.619, 0.28 ) }
    dend_34 { pt3dadd( -22.9952, -48.9991, 13.1199, 0.83 ) }
    dend_34 { pt3dadd( -22.9959, -49.8401, 13.2931, 0.83 ) }
    dend_34 { pt3dadd( -22.933, -51.7937, 13.6438, 0.28 ) }
    dend_34 { pt3dadd( -22.9002, -52.4834, 13.7654, 0.55 ) }
    dend_34 { pt3dadd( -22.8201, -53.681, 13.998, 0.28 ) }
    dend_34 { pt3dadd( -22.6929, -55.0097, 14.2868, 0.55 ) }
    dend_34 { pt3dadd( -22.0673, -59.7488, 15.2321, 0.28 ) }
    dend_34 { pt3dadd( -21.8997, -60.6314, 15.4088, 0.55 ) }
    dend_34 { pt3dadd( -21.3762, -62.7309, 15.8302, 0.28 ) }
    dend_34 { pt3dadd( -21.0585, -63.8378, 16.026, 0.55 ) }
    dend_34 { pt3dadd( -20.6725, -65.1021, 16.2283, 0.28 ) }
    dend_34 { pt3dadd( -20.1525, -66.7325, 16.5094, 1.38 ) }
    dend_34 { pt3dadd( -19.7924, -67.9045, 16.7534, 0.83 ) }
    dend_34 { pt3dadd( -19.3032, -69.7353, 17.0868, 0.83 ) }
    dend_34 { pt3dadd( -18.7139, -72.2824, 17.4567, 0.28 ) }
    dend_34 { pt3dadd( -18.5752, -73.1599, 17.5169, 0.55 ) }
    dend_34 { pt3dadd( -18.5183, -73.9338, 17.544, 0.28 ) }
    dend_34 { pt3dadd( -18.5123, -75.245, 17.5285, 0.55 ) }
    dend_34 { pt3dadd( -18.6197, -76.6104, 17.5061, 0.28 ) }
    dend_34 { pt3dadd( -18.7916, -77.9602, 17.5099, 1.38 ) }
    dend_34 { pt3dadd( -19.1857, -80.2982, 17.5974, 0.55 ) }
    dend_34 { pt3dadd( -19.4662, -82.0442, 17.7547, 0.28 ) }
    dend_34 { pt3dadd( -19.6655, -83.2239, 17.9022, 0.55 ) }
    dend_34 { pt3dadd( -20.0416, -85.6049, 18.2748, 0.28 ) }
    dend_34 { pt3dadd( -20.2266, -86.9446, 18.5102, 1.11 ) }
    dend_34 { pt3dadd( -20.4144, -88.2619, 18.7941, 1.11 ) }
    dend_34 { pt3dadd( -21.2387, -94.3075, 20.2522, 0.28 ) }
    dend_34 { pt3dadd( -21.3852, -95.6012, 20.5245, 0.83 ) }
    dend_34 { pt3dadd( -21.8173, -99.8328, 21.3516, 0.28 ) }
    dend_34 { pt3dadd( -21.909, -101.083, 21.571, 0.55 ) }
    dend_34 { pt3dadd( -22.0989, -104.118, 22.0648, 0.28 ) }
    dend_34 { pt3dadd( -22.1909, -106.078, 22.3604, 0.83 ) }
    dend_34 { pt3dadd( -22.2913, -109.23, 22.758, 0.28 ) }
    dend_34 { pt3dadd( -22.304, -109.997, 22.8435, 0.83 ) }
    dend_34 { pt3dadd( -22.3219, -113.335, 23.149, 0.28 ) }
    dend_34 { pt3dadd( -22.318, -114.876, 23.2619, 0.83 ) }
    dend_34 { pt3dadd( -22.3017, -115.125, 23.2705, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 70/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 36.5813, -24.5993, -11.1809, 0.28 ) }
    dend_18 { pt3dadd( 35.5526, -21.1865, -11.1916, 0.28 ) }
    dend_18 { pt3dadd( 35.2532, -20.193, -11.1947, 0.83 ) }
    dend_18 { pt3dadd( 34.1047, -16.3828, -11.2067, 0.28 ) }
    dend_18 { pt3dadd( 33.7, -15.0403, -11.2109, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 75/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 36.5813, -24.5993, -11.1809, 0.28 ) }
    dend_17 { pt3dadd( 39.0335, -22.3396, -11.812, 0.28 ) }
    dend_17 { pt3dadd( 39.9701, -21.3839, -12.1223, 0.83 ) }
    dend_17 { pt3dadd( 41.6221, -19.5832, -12.7587, 0.83 ) }
    dend_17 { pt3dadd( 44.933, -15.8066, -14.2687, 0.28 ) }
    dend_17 { pt3dadd( 48.4868, -11.655, -16.0294, 0.28 ) }
    dend_17 { pt3dadd( 49.348, -10.6687, -16.4535, 0.83 ) }
    dend_17 { pt3dadd( 51.105, -8.56314, -17.3884, 0.28 ) }
    dend_17 { pt3dadd( 52.5782, -6.78363, -18.233, 0.83 ) }
    dend_17 { pt3dadd( 55.0103, -3.84864, -19.687, 0.28 ) }
    dend_17 { pt3dadd( 55.7398, -3.14376, -20.1262, 0.55 ) }
    dend_17 { pt3dadd( 57.0672, -2.24252, -20.7876, 0.28 ) }
    dend_17 { pt3dadd( 57.6071, -1.92335, -21.0352, 0.55 ) }
    dend_17 { pt3dadd( 59.663, -0.940911, -21.8692, 0.28 ) }
    dend_17 { pt3dadd( 60.3378, -0.678364, -22.1239, 0.83 ) }
    dend_17 { pt3dadd( 68.3482, 1.81988, -24.9323, 0.28 ) }
    dend_17 { pt3dadd( 69.7125, 2.22419, -25.4375, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 92/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 23.2046, -69.4025, -4.53834, 0.83 ) }
    dend_13 { pt3dadd( 23.1708, -69.5029, -4.5789, 0.83 ) }
    dend_13 { pt3dadd( 22.3277, -71.4474, -5.49437, 0.28 ) }
    dend_13 { pt3dadd( 21.6495, -72.8837, -6.16817, 0.83 ) }
    dend_13 { pt3dadd( 20.5954, -74.9804, -7.19219, 0.28 ) }
    dend_13 { pt3dadd( 20.1413, -75.8599, -7.6158, 0.83 ) }
    dend_13 { pt3dadd( 18.9122, -78.2189, -8.79237, 0.28 ) }
    dend_13 { pt3dadd( 18.1807, -79.5449, -9.53128, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_13 { pt3dadd( 17.7797, -80.1993, -9.94696, 0.55 ) }
    dend_13 { pt3dadd( 17.1665, -81.2565, -10.7138, 0.28 ) }
    dend_13 { pt3dadd( 16.9211, -81.7698, -11.087, 0.55 ) }
    dend_13 { pt3dadd( 16.5372, -82.7405, -11.7614, 0.83 ) }
    dend_13 { pt3dadd( 16.2669, -83.8399, -12.5016, 0.28 ) }
    dend_13 { pt3dadd( 16.2097, -84.1895, -12.7665, 0.55 ) }
    dend_13 { pt3dadd( 15.9728, -86.2569, -14.4831, 0.28 ) }
    dend_13 { pt3dadd( 15.9406, -87.1665, -15.2498, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 8/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 23.2046, -69.4025, -4.53834, 0.28 ) }
    dend_12 { pt3dadd( 25.3481, -70.3965, -3.04173, 0.28 ) }
    dend_12 { pt3dadd( 27.565, -70.9903, -1.30045, 0.83 ) }
    dend_12 { pt3dadd( 32.6177, -71.9573, 2.70918, 0.28 ) }
    dend_12 { pt3dadd( 35.0398, -72.261, 4.55023, 0.83 ) }
    dend_12 { pt3dadd( 39.7435, -72.676, 7.9971, 0.28 ) }
    dend_12 { pt3dadd( 41.0688, -72.7298, 8.91155, 0.55 ) }
    dend_12 { pt3dadd( 50.6443, -72.3807, 15.2165, 0.28 ) }
    dend_12 { pt3dadd( 52.1461, -72.2466, 16.1876, 0.55 ) }
    dend_12 { pt3dadd( 56.4737, -71.6562, 18.8386, 0.28 ) }
    dend_12 { pt3dadd( 58.1061, -71.4147, 19.8317, 0.55 ) }
    dend_12 { pt3dadd( 64.0235, -70.4143, 23.2483, 0.28 ) }
    dend_12 { pt3dadd( 65.9218, -70.0825, 24.2477, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 21/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 32.3121, -10.0208, 5.93724, 0.28 ) }
    dend_9 { pt3dadd( 32.7403, -8.16786, 6.18062, 0.28 ) }
    dend_9 { pt3dadd( 32.8015, -7.94012, 6.20378, 0.55 ) }
    dend_9 { pt3dadd( 34.3237, -2.47088, 6.74655, 0.28 ) }
    dend_9 { pt3dadd( 34.5362, -1.74085, 6.85614, 0.55 ) }
    dend_9 { pt3dadd( 35.0124, -0.156438, 7.13355, 0.28 ) }
    dend_9 { pt3dadd( 35.3181, 0.86047, 7.31159, 0.83 ) }
    dend_9 { pt3dadd( 37.0599, 6.50739, 8.33454, 0.28 ) }
    dend_9 { pt3dadd( 37.3522, 7.41425, 8.50787, 0.55 ) }
    dend_9 { pt3dadd( 38.9301, 11.992, 9.49283, 0.28 ) }
    dend_9 { pt3dadd( 39.1126, 12.5104, 9.60927, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 32/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 32.3121, -10.0208, 5.93724, 0.28 ) }
    dend_8 { pt3dadd( 32.9538, -8.67235, 6.20097, 0.28 ) }
    dend_8 { pt3dadd( 33.2327, -8.08409, 6.3153, 0.55 ) }
    dend_8 { pt3dadd( 33.9637, -6.50227, 6.56837, 0.28 ) }
    dend_8 { pt3dadd( 34.196, -6.00741, 6.62906, 0.55 ) }
    dend_8 { pt3dadd( 35.7491, -2.70887, 6.97549, 0.28 ) }
    dend_8 { pt3dadd( 36.1296, -1.90809, 7.04089, 0.83 ) }
    dend_8 { pt3dadd( 37.532, 1.04257, 7.19359, 0.28 ) }
    dend_8 { pt3dadd( 38.0332, 2.09695, 7.22789, 0.83 ) }
    dend_8 { pt3dadd( 38.7147, 3.49664, 7.23895, 0.28 ) }
    dend_8 { pt3dadd( 38.8712, 3.81785, 7.23126, 0.55 ) }
    dend_8 { pt3dadd( 39.3059, 4.70317, 7.13022, 0.28 ) }
    dend_8 { pt3dadd( 39.5749, 5.23363, 7.03731, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 25.1588, -34.2162, -6.896, 0.83 ) }
    dend_4 { pt3dadd( 25.1168, -34.4178, -6.90215, 0.83 ) }
    dend_4 { pt3dadd( 24.6853, -36.9208, -6.92252, 0.28 ) }
    dend_4 { pt3dadd( 24.5525, -38.0675, -6.97799, 0.55 ) }
    dend_4 { pt3dadd( 24.2887, -40.4485, -7.00516, 0.28 ) }
    dend_4 { pt3dadd( 24.1371, -42.0152, -7.06753, 0.55 ) }
    dend_4 { pt3dadd( 23.8619, -44.8452, -7.20177, 0.28 ) }
    dend_4 { pt3dadd( 23.7443, -46.6646, -7.30061, 0.55 ) }
    dend_4 { pt3dadd( 23.6442, -49.1934, -7.45136, 0.28 ) }
    dend_4 { pt3dadd( 23.5674, -51.6826, -7.61344, 0.83 ) }
    dend_4 { pt3dadd( 23.501, -55.0844, -7.95079, 0.28 ) }
    dend_4 { pt3dadd( 23.4266, -57.567, -8.15601, 0.83 ) }
    dend_4 { pt3dadd( 23.3334, -59.4389, -8.24687, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 58/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 25.1588, -34.2162, -6.896, 0.28 ) }
    dend_3 { pt3dadd( 22.4112, -34.905, -4.89846, 0.28 ) }
    dend_3 { pt3dadd( 21.4684, -35.0542, -4.57528, 0.55 ) }
    dend_3 { pt3dadd( 16.889, -35.7393, -3.27764, 0.28 ) }
    dend_3 { pt3dadd( 15.9337, -35.9186, -3.01003, 0.55 ) }
    dend_3 { pt3dadd( 12.8151, -36.6021, -2.08202, 0.28 ) }
    dend_3 { pt3dadd( 11.104, -36.9771, -1.57284, 0.83 ) }
    dend_3 { pt3dadd( 3.00058, -38.4541, 0.502356, 0.28 ) }
    dend_3 { pt3dadd( 1.21152, -38.7834, 0.901332, 0.83 ) }
    dend_3 { pt3dadd( -1.90146, -39.4551, 1.3958, 0.28 ) }
    dend_3 { pt3dadd( -3.64472, -39.8582, 1.70529, 0.83 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 69/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -58.7013, 13.8179, -9.4217, 0.55 ) }
    dend_55 { pt3dadd( -60.1241, 13.8973, -11.4703, 0.55 ) }
    dend_55 { pt3dadd( -61.2942, 14.1365, -13.4107, 0.28 ) }
    dend_55 { pt3dadd( -62.1726, 14.4045, -15.0037, 0.28 ) }
    dend_55 { pt3dadd( -63.8443, 15.2814, -18.538, 0.55 ) }
    dend_55 { pt3dadd( -64.5638, 15.7281, -20.1156, 0.28 ) }
    dend_55 { pt3dadd( -64.7203, 15.8551, -20.5081, 0.55 ) }
    dend_55 { pt3dadd( -65.608, 17.0231, -23.437, 0.28 ) }
    dend_55 { pt3dadd( -65.8927, 17.613, -24.7181, 0.55 ) }
    dend_55 { pt3dadd( -66.3663, 19.0467, -27.5675, 0.28 ) }
    dend_55 { pt3dadd( -66.4449, 19.4527, -28.3305, 0.55 ) }
    dend_55 { pt3dadd( -66.6928, 20.8988, -31.2229, 0.28 ) }
    dend_55 { pt3dadd( -66.7008, 21.0645, -31.6028, 0.83 ) }
    dend_55 { pt3dadd( -66.6472, 21.9933, -34.1669, 0.28 ) }
    dend_55 { pt3dadd( -66.5385, 22.3582, -35.4305, 0.55 ) }
    dend_55 { pt3dadd( -66.1535, 23.0872, -39.1512, 0.28 ) }
    dend_55 { pt3dadd( -65.9339, 23.2974, -40.8933, 0.83 ) }
    dend_55 { pt3dadd( -65.5258, 23.4148, -44.0823, 0.28 ) }
    dend_55 { pt3dadd( -65.4025, 23.3884, -45.028, 0.55 ) }
    dend_55 { pt3dadd( -64.8238, 22.9651, -49.531, 0.28 ) }
    dend_55 { pt3dadd( -64.4608, 22.5905, -52.3989, 0.83 ) }
    dend_55 { pt3dadd( -64.1288, 22.0279, -55.3994, 0.28 ) }
    dend_55 { pt3dadd( -63.9849, 21.6874, -57.0024, 0.55 ) }
    dend_55 { pt3dadd( -63.8984, 21.315, -58.6154, 0.28 ) }
    dend_55 { pt3dadd( -63.7927, 20.7409, -61.1046, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 94/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -58.7013, 13.8179, -9.4217, 0.28 ) }
    dend_54 { pt3dadd( -59.4204, 14.5482, -10.2734, 0.28 ) }
    dend_54 { pt3dadd( -59.6556, 14.7912, -10.5326, 0.55 ) }
    dend_54 { pt3dadd( -60.43, 15.5937, -11.3412, 0.28 ) }
    dend_54 { pt3dadd( -60.9868, 16.0886, -11.8119, 0.55 ) }
    dend_54 { pt3dadd( -64.468, 19.1444, -14.8151, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_54 { pt3dadd( -64.7835, 19.4114, -15.07, 0.55 ) }
    dend_54 { pt3dadd( -65.8807, 20.3083, -15.8795, 0.28 ) }
    dend_54 { pt3dadd( -66.1575, 20.5485, -16.1001, 0.55 ) }
    dend_54 { pt3dadd( -68.7942, 22.9284, -18.2775, 0.28 ) }
    dend_54 { pt3dadd( -70.2158, 24.261, -19.5654, 0.55 ) }
    dend_54 { pt3dadd( -71.4864, 25.4401, -20.7541, 0.28 ) }
    dend_54 { pt3dadd( -71.9323, 25.8688, -21.229, 0.55 ) }
    dend_54 { pt3dadd( -73.7982, 27.7441, -23.4083, 0.28 ) }
    dend_54 { pt3dadd( -73.9677, 27.9442, -23.6737, 0.55 ) }
    dend_54 { pt3dadd( -74.4479, 28.642, -24.7357, 0.28 ) }
    dend_54 { pt3dadd( -74.7558, 29.1131, -25.55, 0.55 ) }
    dend_54 { pt3dadd( -75.4565, 30.3971, -27.9809, 0.28 ) }
    dend_54 { pt3dadd( -75.5566, 30.6184, -28.4076, 0.55 ) }
    dend_54 { pt3dadd( -76.2308, 32.3845, -31.8016, 0.28 ) }
    dend_54 { pt3dadd( -76.2931, 32.6298, -32.2604, 0.55 ) }
    dend_54 { pt3dadd( -76.3301, 33.392, -33.6402, 0.28 ) }
    dend_54 { pt3dadd( -76.2452, 33.9792, -34.659, 0.55 ) }
    dend_54 { pt3dadd( -75.9917, 34.8897, -36.082, 0.28 ) }
    dend_54 { pt3dadd( -75.9148, 35.2086, -36.522, 0.28 ) }
    dend_54 { pt3dadd( -75.9148, 35.2086, -36.522, 0.55 ) }
    dend_54 { pt3dadd( -75.9018, 36.4301, -38.2391, 0.28 ) }
    dend_54 { pt3dadd( -75.9096, 36.846, -38.8355, 0.55 ) }
    dend_54 { pt3dadd( -75.9844, 38.3532, -41.1131, 0.28 ) }
    dend_54 { pt3dadd( -76.0172, 38.6515, -41.578, 0.55 ) }
    dend_54 { pt3dadd( -76.5003, 41.8263, -46.655, 0.28 ) }
    dend_54 { pt3dadd( -76.7145, 42.8961, -48.395, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 26/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -15.0196, 31.8428, 17.184, 0.28 ) }
    dend_50 { pt3dadd( -11.3334, 33.5013, 19.1774, 0.28 ) }
    dend_50 { pt3dadd( -9.57598, 34.2919, 20.1278, 0.55 ) }
    dend_50 { pt3dadd( -6.69872, 35.5864, 21.6837, 0.28 ) }
    dend_50 { pt3dadd( -5.41716, 36.163, 22.3768, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 31/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -15.0196, 31.8428, 17.184, 0.28 ) }
    dend_49 { pt3dadd( -16.5089, 34.1474, 17.8122, 0.28 ) }
    dend_49 { pt3dadd( -17.2082, 35.3523, 18.1738, 0.55 ) }
    dend_49 { pt3dadd( -18.611, 37.8274, 18.9753, 0.28 ) }
    dend_49 { pt3dadd( -19.0094, 38.598, 19.1924, 0.55 ) }
    dend_49 { pt3dadd( -19.961, 40.7117, 19.6769, 0.28 ) }
    dend_49 { pt3dadd( -20.0696, 40.9808, 19.7425, 0.55 ) }
    dend_49 { pt3dadd( -20.7217, 43.1366, 20.2938, 0.28 ) }
    dend_49 { pt3dadd( -20.9999, 43.9782, 20.501, 0.55 ) }
    dend_49 { pt3dadd( -21.631, 45.7889, 20.9559, 0.28 ) }
    dend_49 { pt3dadd( -22.2337, 47.5409, 21.3634, 0.83 ) }
    dend_49 { pt3dadd( -23.1612, 50.1675, 22.1377, 0.28 ) }
    dend_49 { pt3dadd( -23.5621, 51.3005, 22.5126, 0.55 ) }
    dend_49 { pt3dadd( -25.7519, 57.915, 24.9114, 0.28 ) }
    dend_49 { pt3dadd( -26.116, 59.0772, 25.3716, 0.83 ) }
    dend_49 { pt3dadd( -27.2929, 63.0857, 27.1588, 0.28 ) }
    dend_49 { pt3dadd( -28.307, 66.8869, 28.9677, 0.28 ) }
    dend_49 { pt3dadd( -28.7316, 69.1123, 30.092, 0.83 ) }
    dend_49 { pt3dadd( -29.0019, 71.6743, 31.5191, 0.28 ) }
    dend_49 { pt3dadd( -28.9773, 72.7017, 32.1815, 0.55 ) }
    dend_49 { pt3dadd( -28.7453, 75.1321, 33.7907, 0.28 ) }
    dend_49 { pt3dadd( -28.5538, 76.3491, 34.611, 0.55 ) }
    dend_49 { pt3dadd( -27.8557, 79.8619, 36.8125, 0.28 ) }
    dend_49 { pt3dadd( -27.5288, 81.2636, 37.7813, 0.55 ) }
    dend_49 { pt3dadd( -27.0508, 83.1502, 39.1379, 0.28 ) }
    dend_49 { pt3dadd( -26.7002, 84.3825, 40.0122, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 57/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 70.1928, 92.1633, -46.3955, 0.28 ) }
    dend_45 { pt3dadd( 71.389, 91.9966, -47.1379, 0.28 ) }
    dend_45 { pt3dadd( 72.1056, 91.8661, -47.5617, 0.55 ) }
    dend_45 { pt3dadd( 73.1339, 91.626, -48.289, 0.55 ) }
    dend_45 { pt3dadd( 74.4397, 91.3232, -49.2682, 0.28 ) }
    dend_45 { pt3dadd( 74.9718, 91.1815, -49.6766, 0.55 ) }
    dend_45 { pt3dadd( 76.1408, 90.8618, -50.5716, 0.28 ) }
    dend_45 { pt3dadd( 76.6572, 90.7202, -50.9917, 0.55 ) }
    dend_45 { pt3dadd( 78.3249, 90.3492, -52.3286, 0.28 ) }
    dend_45 { pt3dadd( 78.9101, 90.2207, -52.8027, 0.55 ) }
    dend_45 { pt3dadd( 80.4321, 89.9082, -54.0109, 0.28 ) }
    dend_45 { pt3dadd( 80.7952, 89.8414, -54.3138, 0.55 ) }
    dend_45 { pt3dadd( 82.5017, 89.6082, -55.7245, 0.28 ) }
    dend_45 { pt3dadd( 83.3921, 89.5343, -56.4265, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 71/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 70.1928, 92.1633, -46.3955, 0.28 ) }
    dend_44 { pt3dadd( 73.3444, 89.0895, -47.3077, 0.28 ) }
    dend_44 { pt3dadd( 74.19, 88.2647, -47.5525, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 74/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -22.3017, -115.125, 23.2705, 0.28 ) }
    dend_36 { pt3dadd( -22.9391, -117.949, 24.2776, 0.28 ) }
    dend_36 { pt3dadd( -23.1315, -118.894, 24.6183, 0.55 ) }
    dend_36 { pt3dadd( -23.8378, -123.064, 26.0994, 0.28 ) }
    dend_36 { pt3dadd( -23.9738, -123.926, 26.3869, 0.83 ) }
    dend_36 { pt3dadd( -24.1944, -125.401, 26.8617, 0.83 ) }
    dend_36 { pt3dadd( -24.3805, -126.626, 27.2464, 0.28 ) }
    dend_36 { pt3dadd( -24.5427, -127.839, 27.6206, 0.55 ) }
    dend_36 { pt3dadd( -25.1178, -131.869, 28.8809, 0.28 ) }
    dend_36 { pt3dadd( -25.2936, -132.925, 29.1852, 0.83 ) }
    dend_36 { pt3dadd( -25.9938, -136.508, 30.1322, 0.28 ) }
    dend_36 { pt3dadd( -26.4127, -138.158, 30.5465, 0.83 ) }
    dend_36 { pt3dadd( -27.0019, -140.136, 31.0254, 0.28 ) }
    dend_36 { pt3dadd( -27.5214, -141.73, 31.4021, 0.83 ) }
    dend_36 { pt3dadd( -28.7316, -145.004, 32.1547, 0.28 ) }
    dend_36 { pt3dadd( -29.408, -146.712, 32.5504, 0.83 ) }
    dend_36 { pt3dadd( -30.3751, -148.862, 32.9872, 0.28 ) }
    dend_36 { pt3dadd( -31.2294, -150.644, 33.3134, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 92/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -22.3017, -115.125, 23.2705, 0.28 ) }
    dend_35 { pt3dadd( -22.2999, -117.227, 23.7328, 0.28 ) }
    dend_35 { pt3dadd( -22.3185, -122.404, 24.8769, 0.28 ) }
    dend_35 { pt3dadd( -22.4036, -128.515, 26.217, 0.28 ) }
    dend_35 { pt3dadd( -22.4863, -135.886, 27.8462, 0.28 ) }
    dend_35 { pt3dadd( -22.4531, -141.643, 29.1536, 0.28 ) }
    dend_35 { pt3dadd( -22.3609, -147.094, 30.4182, 0.28 ) }
    dend_35 { pt3dadd( -22.2686, -152.253, 31.6401, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( -22.232, -155.258, 32.3474, 0.28 ) }
    dend_35 { pt3dadd( -22.1803, -159.918, 33.4439, 0.28 ) }
    dend_35 { pt3dadd( -21.6614, -173.229, 36.685, 0.28 ) }
    dend_35 { pt3dadd( -21.4547, -176.4, 37.4787, 0.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 4/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 15.9406, -87.1665, -15.2498, 0.28 ) }
    dend_15 { pt3dadd( 18.3438, -90.3919, -15.1334, 0.28 ) }
    dend_15 { pt3dadd( 18.7611, -90.952, -15.1132, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 7/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 15.9406, -87.1665, -15.2498, 0.28 ) }
    dend_14 { pt3dadd( 15.2705, -88.0674, -15.7439, 0.28 ) }
    dend_14 { pt3dadd( 14.9866, -88.449, -15.9532, 0.55 ) }
    dend_14 { pt3dadd( 14.4864, -89.1215, -16.3221, 0.28 ) }
    dend_14 { pt3dadd( 13.9344, -89.8635, -16.729, 0.83 ) }
    dend_14 { pt3dadd( 12.545, -91.7315, -17.7535, 0.28 ) }
    dend_14 { pt3dadd( 12.1832, -92.2178, -18.0203, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 14/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 23.3334, -59.4389, -8.24687, 0.83 ) }
    dend_6 { pt3dadd( 23.7319, -60.451, -8.56479, 0.83 ) }
    dend_6 { pt3dadd( 24.978, -64.3044, -9.57034, 0.28 ) }
    dend_6 { pt3dadd( 25.1892, -65.147, -9.82267, 0.83 ) }
    dend_6 { pt3dadd( 25.7718, -67.8783, -10.6754, 0.28 ) }
    dend_6 { pt3dadd( 25.917, -68.8895, -10.8547, 0.55 ) }
    dend_6 { pt3dadd( 26.0554, -70.3793, -10.9908, 0.28 ) }
    dend_6 { pt3dadd( 26.0641, -71.4977, -10.9666, 0.55 ) }
    dend_6 { pt3dadd( 25.7913, -74.1411, -10.5058, 0.28 ) }
    dend_6 { pt3dadd( 25.5566, -75.9311, -10.1457, 0.83 ) }
    dend_6 { pt3dadd( 24.8086, -80.6154, -9.24284, 0.28 ) }
    dend_6 { pt3dadd( 24.6309, -81.7347, -9.04676, 0.83 ) }
    dend_6 { pt3dadd( 24.5046, -82.6221, -8.9112, 0.83 ) }
    dend_6 { pt3dadd( 23.6352, -89.0337, -7.97882, 0.28 ) }
    dend_6 { pt3dadd( 23.5457, -89.7381, -7.87607, 0.55 ) }
    dend_6 { pt3dadd( 22.8808, -94.5519, -7.39766, 0.28 ) }
    dend_6 { pt3dadd( 22.7715, -95.4089, -7.43646, 0.55 ) }
    dend_6 { pt3dadd( 22.3649, -98.8798, -7.80303, 0.28 ) }
    dend_6 { pt3dadd( 22.3125, -99.4445, -7.89065, 0.83 ) }
    dend_6 { pt3dadd( 22.2156, -100.843, -8.1867, 0.83 ) }
    dend_6 { pt3dadd( 22.0247, -103.241, -8.67674, 0.83 ) }
    dend_6 { pt3dadd( 21.2345, -111.519, -10.3728, 0.28 ) }
    dend_6 { pt3dadd( 21.1007, -112.301, -10.5201, 0.55 ) }
    dend_6 { pt3dadd( 20.0374, -116.926, -11.329, 0.28 ) }
    dend_6 { pt3dadd( 19.792, -117.775, -11.461, 0.55 ) }
    dend_6 { pt3dadd( 17.2493, -124.418, -12.3269, 0.28 ) }
    dend_6 { pt3dadd( 16.3508, -126.281, -12.4855, 0.83 ) }
    dend_6 { pt3dadd( 13.314, -131.027, -12.5271, 0.28 ) }
    dend_6 { pt3dadd( 12.6353, -131.925, -12.5258, 0.55 ) }
    dend_6 { pt3dadd( 11.5322, -133.143, -12.5076, 0.55 ) }
    dend_6 { pt3dadd( 9.26839, -135.444, -12.4382, 0.28 ) }
    dend_6 { pt3dadd( 8.52723, -136.134, -12.4136, 0.55 ) }
    dend_6 { pt3dadd( 7.5533, -137.183, -12.3794, 0.28 ) }
    dend_6 { pt3dadd( 7.09052, -137.833, -12.3658, 0.55 ) }
    dend_6 { pt3dadd( 5.88901, -139.759, -12.3347, 0.28 ) }
    dend_6 { pt3dadd( 5.44028, -140.545, -12.3105, 0.55 ) }
    dend_6 { pt3dadd( 3.80446, -143.586, -12.1983, 0.28 ) }
    dend_6 { pt3dadd( 3.22516, -144.698, -12.1401, 0.55 ) }
    dend_6 { pt3dadd( 2.84157, -145.454, -12.0762, 0.28 ) }
    dend_6 { pt3dadd( 2.3783, -146.63, -11.9051, 0.55 ) }
    dend_6 { pt3dadd( 1.21987, -150.314, -11.1549, 0.28 ) }
    dend_6 { pt3dadd( 0.979347, -151.165, -10.9583, 0.83 ) }
    dend_6 { pt3dadd( 0.549704, -153.023, -10.4479, 0.28 ) }
    dend_6 { pt3dadd( 0.42618, -153.715, -10.2499, 0.55 ) }
    dend_6 { pt3dadd( -0.11141, -158.792, -8.68567, 0.28 ) }
    dend_6 { pt3dadd( -0.0966522, -159.33, -8.50813, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 60/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 23.3334, -59.4389, -8.24687, 0.28 ) }
    dend_5 { pt3dadd( 23.9385, -58.8486, -7.96798, 0.28 ) }
    dend_5 { pt3dadd( 24.3054, -58.4023, -7.83628, 0.55 ) }
    dend_5 { pt3dadd( 25.2748, -57.0954, -7.48172, 0.28 ) }
    dend_5 { pt3dadd( 25.5665, -56.4913, -7.33976, 0.55 ) }
    dend_5 { pt3dadd( 26.0165, -55.3531, -7.06717, 0.28 ) }
    dend_5 { pt3dadd( 26.3275, -54.3815, -6.74209, 0.83 ) }
    dend_5 { pt3dadd( 27.0787, -51.5, -5.65945, 0.28 ) }
    dend_5 { pt3dadd( 27.205, -50.8828, -5.41308, 0.83 ) }
    dend_5 { pt3dadd( 28.0381, -45.5391, -3.1746, 0.28 ) }
    dend_5 { pt3dadd( 28.2245, -43.9867, -2.54331, 0.83 ) }
    dend_5 { pt3dadd( 28.5553, -39.4397, -0.703775, 0.28 ) }
    dend_5 { pt3dadd( 28.5838, -38.8061, -0.44219, 0.55 ) }
    dend_5 { pt3dadd( 28.5973, -37.0908, 0.329917, 0.28 ) }
    dend_5 { pt3dadd( 28.593, -36.272, 0.704837, 0.83 ) }
    dend_5 { pt3dadd( 28.4745, -33.9158, 1.87965, 0.28 ) }
    dend_5 { pt3dadd( 28.4045, -32.8589, 2.29483, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 77/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -63.7927, 20.7409, -61.1046, 0.28 ) }
    dend_59 { pt3dadd( -68.4781, 21.2385, -61.6908, 0.28 ) }
    dend_59 { pt3dadd( -69.5181, 21.3512, -61.7969, 0.55 ) }
    dend_59 { pt3dadd( -76.0168, 21.8159, -62.4171, 0.28 ) }
    dend_59 { pt3dadd( -76.3472, 21.8285, -62.4484, 0.55 ) }
    dend_59 { pt3dadd( -79.2313, 21.8489, -62.7804, 0.28 ) }
    dend_59 { pt3dadd( -80.3365, 21.8187, -62.9179, 0.83 ) }
    dend_59 { pt3dadd( -81.724, 21.6616, -63.0905, 0.83 ) }
    dend_59 { pt3dadd( -85.6474, 20.9368, -63.5065, 0.28 ) }
    dend_59 { pt3dadd( -87.0864, 20.4458, -63.56, 0.55 ) }
    dend_59 { pt3dadd( -89.9315, 19.2141, -63.4771, 0.28 ) }
    dend_59 { pt3dadd( -91.5017, 18.3989, -62.9711, 0.83 ) }
    dend_59 { pt3dadd( -93.2461, 17.4434, -62.1366, 0.28 ) }
    dend_59 { pt3dadd( -93.544, 17.2772, -61.952, 0.55 ) }
    dend_59 { pt3dadd( -97.0645, 15.3328, -59.3041, 0.28 ) }
    dend_59 { pt3dadd( -98.4506, 14.6255, -58.162, 0.55 ) }
    dend_59 { pt3dadd( -106.458, 10.6079, -51.0592, 0.28 ) }
    dend_59 { pt3dadd( -107.298, 10.2129, -50.2966, 0.83 ) }
    dend_59 { pt3dadd( -110.269, 8.94073, -47.5977, 0.28 ) }
    dend_59 { pt3dadd( -111.06, 8.62106, -46.8629, 0.83 ) }
    dend_59 { pt3dadd( -112.458, 8.15406, -45.4978, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 98/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -63.7927, 20.7409, -61.1046, 0.28 ) }
    dend_56 { pt3dadd( -62.3303, 21.5547, -67.0561, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_56 { pt3dadd( -62.0161, 21.7296, -68.3347, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 1/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -62.0161, 21.7296, -68.3347, 0.28 ) }
    dend_58 { pt3dadd( -59.9695, 20.6794, -71.826, 0.28 ) }
    dend_58 { pt3dadd( -59.6297, 20.505, -72.4057, 0.55 ) }
    dend_58 { pt3dadd( -59.2718, 20.3214, -73.0162, 0.28 ) }
    dend_58 { pt3dadd( -59.0134, 20.1888, -73.457, 0.55 ) }
    dend_58 { pt3dadd( -57.3472, 19.3338, -76.2994, 0.28 ) }
    dend_58 { pt3dadd( -56.6767, 18.9898, -77.4432, 0.83 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 8/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -62.0161, 21.7296, -68.3347, 0.28 ) }
    dend_57 { pt3dadd( -62.0043, 21.6315, -71.5371, 0.28 ) }
    dend_57 { pt3dadd( -62.2298, 21.7411, -72.7968, 0.55 ) }
    dend_57 { pt3dadd( -62.8015, 22.0156, -74.9214, 0.28 ) }
    dend_57 { pt3dadd( -63.159, 22.2122, -75.9435, 0.55 ) }
    dend_57 { pt3dadd( -63.9872, 22.6983, -78.1513, 0.28 ) }
    dend_57 { pt3dadd( -64.4507, 22.9591, -79.3835, 0.55 ) }
    dend_57 { pt3dadd( -66.0594, 23.5875, -83.206, 0.28 ) }
    dend_57 { pt3dadd( -66.2533, 23.6424, -83.7417, 0.55 ) }
    dend_57 { pt3dadd( -66.9368, 23.7504, -85.8448, 0.28 ) }
    dend_57 { pt3dadd( -67.5002, 23.6945, -87.9344, 0.83 ) }
    dend_57 { pt3dadd( -67.9876, 23.4328, -90.2082, 0.28 ) }
    dend_57 { pt3dadd( -68.071, 23.2815, -90.9654, 0.55 ) }
    dend_57 { pt3dadd( -68.2131, 21.9121, -95.7337, 0.28 ) }
    dend_57 { pt3dadd( -68.1753, 21.5421, -96.8097, 0.83 ) }
    dend_57 { pt3dadd( -67.9418, 20.6005, -99.2111, 0.28 ) }
    dend_57 { pt3dadd( -67.7325, 20.1132, -100.416, 0.55 ) }
    dend_57 { pt3dadd( -66.8838, 18.6609, -103.987, 0.28 ) }
    dend_57 { pt3dadd( -66.6042, 18.3511, -104.855, 0.83 ) }
    dend_57 { pt3dadd( -65.038, 17.0622, -108.665, 0.28 ) }
    dend_57 { pt3dadd( -64.6787, 16.8303, -109.488, 0.83 ) }
    dend_57 { pt3dadd( -63.4185, 16.2058, -112.191, 0.28 ) }
    dend_57 { pt3dadd( -62.9894, 16.0275, -113.059, 0.83 ) }
    dend_57 { pt3dadd( -60.6411, 15.2284, -117.56, 0.28 ) }
    dend_57 { pt3dadd( -60.0471, 15.0879, -118.721, 0.55 ) }
    dend_57 { pt3dadd( -58.4322, 14.9812, -122.11, 0.28 ) }
    dend_57 { pt3dadd( -58.0029, 14.9672, -123.136, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_19 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_26 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_23 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_32 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_27 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_43 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_54 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_49 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_35 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_6 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_59 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_57 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_46 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_29 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_30 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_10 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_47 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_39 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_31 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_48 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_52 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_51 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_7 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_41 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_50 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_33 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_37 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_8 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_60 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_18 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_53 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_4 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_9 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_11 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_3 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_13 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_5 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_15 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_20 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_56 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_58 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_44 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_45 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_36 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_25 OneSecGrp_SectionRef_27.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_35 all.append()
    dend_35 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_19 nseg = 3
    dend_26 nseg = 3
    dend_23 nseg = 9
    dend_21 nseg = 3
    dend_40 nseg = 5
    dend_32 nseg = 11
    dend_27 nseg = 5
    dend_43 nseg = 5
    dend_42 nseg = 9
    dend_34 nseg = 3
    dend_17 nseg = 3
    dend_12 nseg = 3
    dend_55 nseg = 3
    dend_54 nseg = 3
    dend_49 nseg = 3
    dend_35 nseg = 3
    dend_6 nseg = 5
    dend_59 nseg = 3
    dend_57 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_DBC_f7a3d54a01_0_0


