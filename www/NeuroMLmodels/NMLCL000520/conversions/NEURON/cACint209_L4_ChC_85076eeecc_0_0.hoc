// Cell: cACint209_L4_ChC_85076eeecc_0_0
/*
{
  "id" : "cACint209_L4_ChC_85076eeecc_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.44259, -9.54825, -1.27888, 2.30647", "-1.2819, -8.63231, -1.15821, 3.63473", "-1.1212, -7.71637, -1.03754, 6.81375", "-0.960502, -6.80044, -0.916865, 9.18535", "-0.799804, -5.8845, -0.796194, 10.2157", "-0.639107, -4.96856, -0.675522, 11.1797", "-0.478409, -4.05262, -0.554851, 12.0566", "-0.317712, -3.13668, -0.43418, 12.6775", "-0.157014, -2.22074, -0.313508, 13.0617", "0.00368301, -1.3048, -0.192837, 13.2009", "0.16438, -0.388856, -0.0721652, 13.2418", "0.325078, 0.527084, 0.0485063, 12.889", "0.485775, 1.44302, 0.169178, 12.4912", "0.646473, 2.35896, 0.289849, 12.2347", "0.80717, 3.2749, 0.410521, 12.0486", "0.967868, 4.19084, 0.531192, 11.9346", "1.12856, 5.10678, 0.651864, 11.8925", "1.28926, 6.02272, 0.772535, 11.1454", "1.44996, 6.93866, 0.893206, 8.66152", "1.61066, 7.8546, 1.01388, 5.25757", "1.77135, 8.77054, 1.13455, 3.12251" ]
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.66144, -6.91316, -8.0337, 1.77", "-3.66144, -6.91316, -8.0337, 1.77", "-3.32102, -7.9855, -8.19286, 1.77", "-3.06176, -8.78377, -8.31964, 1.77", "-2.6655, -10.035, -8.50675, 1.55", "-2.43277, -10.8647, -8.65535, 1.69", "-2.27344, -11.5093, -8.78483, 1.77", "-2.13387, -12.1365, -8.94145, 1.77", "-1.95667, -12.9773, -9.20471, 1.25", "-1.66944, -14.2671, -9.55963, 0.74", "-2.22157, -13.7051, -10.1676, 0.74", "-2.65214, -13.5064, -10.8147, 0.74", "-3.40711, -13.2364, -11.9778, 1.18", "-3.81296, -13.1685, -12.641, 1.18", "-4.42172, -13.0322, -13.5577, 0.52", "-5.1421, -12.784, -14.5426, 0.52", "-5.96096, -12.82, -15.7873, 0.74", "-6.30603, -13.0006, -16.634, 0.74", "-6.47065, -13.2791, -17.3729, 0.74", "-6.73634, -13.6379, -18.488, 1.11", "-6.97352, -13.8253, -19.2017, 1.69", "-7.36169, -13.9542, -19.9224, 1.77", "-8.24598, -14.2023, -21.5151, 1.33", "-8.71662, -14.4244, -22.486, 1.4", "-8.9939, -14.7201, -23.2152, 1.55", "-9.15155, -15.212, -23.9787, 1.33", "-9.16871, -16.0602, -24.948, 0.74", "-9.02119, -16.7546, -25.5112, 1.03", "-8.8057, -17.3376, -25.8672, 1.47", "-8.57706, -17.7208, -26.123, 1.62", "-8.21488, -18.1784, -26.4757, 1.62", "-7.80442, -18.5461, -26.8003, 0.52", "-7.31652, -18.8921, -27.1584, 0.52", "-7.19514, -19.0729, -27.4662, 0.52", "-7.21981, -19.4429, -28.2634, 0.66", "-7.37763, -19.8063, -29.1058, 0.74", "-7.63502, -19.9546, -29.7, 0.44", "-8.07853, -19.9528, -30.3286, 0.44", "-8.73224, -19.8765, -31.128, 0.44", "-9.19696, -19.9214, -31.8392, 0.44", "-9.45536, -20.0099, -32.3436, 0.44", "-9.93575, -20.3054, -33.3237, 0.66", "-10.1703, -20.7643, -34.314, 1.11", "-10.2917, -20.9325, -34.658, 0.96", "-10.609, -21.2871, -35.4464, 1.18", "-10.7324, -21.4389, -35.7546, 1.69", "-10.933, -21.6725, -36.2014, 1.69", "-11.6976, -22.4994, -37.6963, 0.88", "-12.1645, -22.8928, -38.4768, 2.14", "-13.2237, -23.4245, -39.9192, 2.28", "-13.3725, -23.4629, -40.0843, 2.28", "-14.2318, -23.5384, -40.8859, 0.44", "-14.7223, -23.501, -41.2464, 0.44", "-15.3018, -23.3887, -41.5788, 0.81", "-15.8962, -23.245, -41.9338, 0.81", "-16.1672, -23.2096, -42.128, 0.96", "-16.7056, -23.2556, -42.6012, 0.66", "-17.2469, -23.4305, -43.1571, 1.99", "-17.6524, -23.6398, -43.6261, 2.21", "-18.0483, -23.9157, -44.1159, 2.5", "-19.1376, -24.8628, -45.5679, 0.66", "-19.7023, -25.4806, -46.4254, 0.66", "-20.0512, -25.961, -47.0145, 0.66", "-20.4103, -26.5323, -47.645, 1.55", "-20.5772, -26.8133, -47.9242, 2.21", "-20.7381, -27.1068, -48.1906, 2.21", "-21.182, -28.0401, -48.9918, 0.29", "-21.4195, -28.6421, -49.5487, 0.29", "-21.5748, -29.0577, -49.9258, 1.55", "-21.7683, -29.5592, -50.3707, 1.99", "-21.9464, -30.0081, -50.7783, 2.36", "-22.4469, -31.2291, -51.9211, 0.59", "-22.6957, -31.855, -52.5465, 1.84", "-22.7936, -32.1456, -52.8722, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-6.50143, -1.62167, 2.1563, 1.92", "-6.50143, -1.62167, 2.1563, 1.92", "-6.94245, -2.3633, 2.12122, 1.92", "-7.69263, -3.83389, 2.04493, 1.92", "-8.46622, -5.17553, 1.96798, 2.14", "-9.06254, -6.08286, 1.90289, 2.36", "-9.90754, -7.18077, 1.81316, 2.28", "-10.8359, -8.19445, 1.71053, 2.36", "-11.8746, -9.13246, 1.57728, 2.36", "-13.4867, -10.1841, 1.38709, 1.77", "-14.3735, -10.5301, 1.32045, 1.77", "-15.7638, -10.8121, 1.28339, 1.99", "-17.0028, -10.9279, 1.36206, 1.99", "-17.6158, -10.949, 1.43775, 1.99", "-18.5296, -10.9911, 1.60078, 1.77", "-19.944, -11.2253, 1.9667, 1.47", "-20.9649, -11.5718, 2.25554, 1.47", "-22.2517, -12.2775, 2.58068, 1.33", "-22.8366, -12.7093, 2.6896, 1.99", "-23.8308, -13.5919, 2.79873, 1.99", "-24.9759, -14.7389, 2.81335, 1.77", "-26.2426, -16.1402, 2.70188, 1.92", "-27.4139, -17.4721, 2.46291, 1.69", "-28.1342, -18.2454, 2.23128, 1.69", "-29.0366, -19.1162, 1.89007, 1.84", "-29.8598, -19.8446, 1.57569, 1.84", "-30.9254, -20.7543, 1.18533, 1.69", "-32.0965, -21.7677, 0.81998, 1.55", "-33.2791, -22.8645, 0.543987, 1.4", "-34.248, -23.7674, 0.347301, 1.25", "-35.2619, -24.7548, 0.164668, 1.33", "-36.222, -25.7814, 0.0584312, 1.47", "-37.1208, -26.8705, 0.101516, 1.62", "-37.7563, -27.8893, 0.325375, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.448551, -8.29066, -4.9037, 3.61", "0.448551, -8.29066, -4.9037, 3.61", "0.657663, -9.69529, -4.83477, 2.95", "0.957372, -11.8751, -4.73105, 2.8", "1.13019, -13.3358, -4.63223, 2.8", "1.28071, -14.9693, -4.5077, 3.02", "1.35272, -16.0534, -4.42433, 3.02", "1.38286, -17.1168, -4.33818, 3.02", "1.35381, -18.7192, -4.20605, 3.02", "1.23602, -20.4143, -4.06074, 2.36", "0.919911, -23.3794, -3.90194, 2.36", "0.69171, -25.0404, -3.88644, 2.43", "0.429188, -26.6481, -3.92602, 2.43", "0.086051, -28.5326, -4.03832, 2.43", "-0.447467, -31.1345, -4.26753, 2.28", "-1.02236, -33.8041, -4.56737, 2.14", "-1.82499, -37.3406, -5.0365, 2.06", "-2.38203, -39.7952, -5.40293, 2.43", "-2.73389, -41.3582, -5.66887, 2.58", "-3.11118, -43.0054, -5.98703, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.381405, 7.21333, -7.5337, 1.62", "-0.476153, 8.0257, -7.59871, 1.62", "-0.625979, 9.22085, -7.63651, 1.92", "-0.851931, 10.8174, -7.70188, 1.33", "-1.1369, 12.5358, -7.79818, 1.69", "-1.37063, 13.8073, -7.84718, 2.21", "-1.57097, 14.8702, -7.83875, 2.21", "-1.81218, 16.0667, -7.78021, 1.99", "-2.03856, 17.0842, -7.69136, 1.77", "-2.30737, 18.2161, -7.56071, 1.99", "-2.59891, 19.414, -7.41715, 1.99", "-3.09723, 21.5187, -7.20784, 1.11", "-3.40485, 22.8344, -7.11805, 1.11", "-3.73449, 24.1582, -7.0824, 1.25", "-4.04876, 25.2697, -7.07627, 1.4", "-4.46014, 26.4846, -7.14734, 0.81", "-4.94463, 27.6354, -7.32898, 0.74", "-5.32963, 28.3878, -7.52236, 0.74", "-5.80423, 29.204, -7.78394, 0.74", "-6.35577, 30.093, -8.11654, 0.96", "-6.87575, 30.9298, -8.45247, 0.96", "-7.41825, 31.77, -8.79797, 1.55", "-8.03103, 32.7119, -9.19934, 2.06", "-8.54947, 33.5696, -9.57368, 2.43", "-9.14405, 34.7246, -10.0818, 2.36", "-9.81724, 36.298, -10.7562, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.32144, 7.89733, 0.346303, 2.5", "-2.39503, 8.05164, 0.34714, 2.5", "-3.56177, 10.2134, 0.302053, 1.77", "-4.37613, 11.6742, 0.310387, 1.55", "-5.33128, 13.3369, 0.38817, 1.55", "-6.05906, 14.6056, 0.496677, 1.33", "-7.16949, 16.5735, 0.727566, 1.33", "-7.86389, 17.7757, 0.905218, 1.55", "-8.91159, 19.5567, 1.20714, 1.55", "-9.99969, 21.4935, 1.54203, 1.62", "-10.8684, 23.2197, 1.8233, 1.4", "-11.6784, 25.1196, 2.09799, 1.4", "-12.1391, 26.2866, 2.26861, 1.4", "-12.8556, 28.1635, 2.52795, 1.4", "-13.5358, 30.0384, 2.70897, 1.4", "-14.3006, 32.3559, 2.83171, 1.77", "-14.9444, 34.435, 2.85466, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.82855, 3.96433, 1.3463, 2.58", "6.88269, 4.01452, 1.35122, 2.58", "7.56515, 4.66312, 1.42248, 2.58", "8.33947, 5.40671, 1.52729, 1.84", "8.91269, 5.94619, 1.62028, 2.06", "9.65279, 6.64081, 1.75933, 2.06", "10.1418, 7.08916, 1.88285, 2.58", "10.6846, 7.58344, 2.05128, 2.58", "11.0435, 7.91558, 2.18738, 2.58", "11.6803, 8.47852, 2.45945, 2.58", "12.1283, 8.84644, 2.66148, 2.43", "13.0669, 9.57246, 3.12128, 2.21", "13.7515, 10.0715, 3.47059, 1.99", "14.3009, 10.4485, 3.73395, 1.99", "15.0135, 10.8656, 4.04171, 1.69", "15.6091, 11.1043, 4.26763, 1.69", "16.6638, 11.2416, 4.61432, 2.06", "17.3258, 11.1317, 4.79458, 2.06", "18.89, 10.4841, 5.21308, 1.69", "19.9658, 9.92346, 5.48497, 1.92", "21.6478, 8.83745, 5.88001, 1.92", "23.2494, 7.58749, 6.22147, 2.06", "24.0705, 6.80864, 6.37596, 2.28", "24.6863, 6.09904, 6.50013, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.77135, 8.77054, 1.13455, 0.828859", "4.36343, 23.5449, 1.13455, 0.828859", "6.95552, 38.3192, 1.13455, 0.828859" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-22.7936, -32.1456, -52.8722, 0.96", "-21.2236, -35.9079, -58.4649, 0.96", "-20.9614, -36.7172, -59.507, 0.96", "-20.6662, -37.7893, -60.7311, 0.96", "-20.2897, -39.2767, -62.294, 1.55", "-20.0242, -40.5111, -63.4769, 0.22", "-19.7897, -41.9138, -64.6321, 0.22", "-19.7504, -42.7778, -65.0711, 1.11", "-19.7398, -43.5809, -65.418, 1.4", "-19.6971, -44.6702, -65.7921, 1.4", "-19.5457, -47.0206, -66.4403, 0.22", "-19.2673, -49.4488, -67.019, 0.22", "-19.1385, -50.2528, -67.1916, 0.74", "-19.06, -50.6841, -67.2692, 0.74", "-18.6213, -52.9835, -67.6123, 0.15", "-18.5477, -53.3403, -67.6497, 0.37", "-18.0466, -55.2994, -67.7797, 0.22", "-17.712, -56.4019, -67.8746, 0.22", "-17.447, -57.2807, -67.9472, 0.74", "-17.2221, -58.1653, -68.0059, 0.88", "-17.1866, -58.4573, -68.0206, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-22.7936, -32.1456, -52.8722, 2.87", "-23.2625, -32.2683, -52.9476, 2.87", "-24.7463, -32.7738, -53.2479, 0.22", "-26.0954, -33.3987, -53.553, 0.22", "-26.7488, -33.7365, -53.7035, 1.69", "-26.9544, -33.8507, -53.751, 2.21", "-27.2893, -34.0455, -53.8283, 2.21", "-28.5242, -34.8734, -54.1034, 0.22", "-29.6156, -35.7664, -54.3728, 0.22", "-29.9546, -36.0694, -54.4628, 1.25", "-30.2316, -36.3198, -54.5371, 1.25", "-30.5991, -36.6483, -54.6406, 1.25", "-31.3469, -37.2724, -54.8513, 0.15", "-31.7707, -37.6107, -54.9668, 0.15", "-32.1034, -37.8473, -55.062, 0.96", "-32.48, -38.0884, -55.1824, 1.18", "-32.6523, -38.1838, -55.2402, 1.18", "-33.7595, -38.7054, -55.6757, 0.22", "-34.0523, -38.8033, -55.8053, 0.52", "-34.3179, -38.8776, -55.926, 0.52", "-35.0006, -39.0473, -56.2322, 0.22", "-35.4242, -39.1483, -56.4271, 1.25", "-36.0474, -39.3188, -56.7046, 1.4", "-37.2529, -39.7563, -57.2737, 0.22", "-38.0796, -40.1569, -57.668, 0.22", "-38.3943, -40.3551, -57.8211, 0.74", "-38.7998, -40.6865, -58.0199, 0.88", "-39.3679, -41.3714, -58.3932, 0.22", "-39.8275, -42.2722, -58.7704, 0.22", "-40.0143, -42.8682, -58.9804, 1.99", "-40.0913, -43.2356, -59.0879, 2.36", "-40.1515, -43.5972, -59.192, 2.36", "-40.3974, -45.632, -59.766, 0.15", "-40.4892, -46.8994, -60.145, 0.15", "-40.5042, -47.2297, -60.2302, 0.44", "-40.5135, -47.8666, -60.3776, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-37.7563, -27.8893, 0.325375, 0.96", "-38.8716, -28.2886, -0.0873949, 0.96", "-39.9336, -28.7042, -0.487883, 1.25", "-41.4639, -29.3026, -1.05823, 1.25", "-44.1301, -30.2625, -1.97723, 1.18", "-45.9448, -30.8393, -2.54219, 1.11", "-47.3426, -31.2519, -2.96266, 0.88", "-49.1836, -31.8058, -3.54492, 0.96", "-50.2375, -32.1227, -3.88757, 0.96", "-51.7846, -32.599, -4.40027, 0.96", "-53.3091, -33.0749, -4.81958, 0.96", "-54.6051, -33.4672, -5.10067, 1.18", "-56.1986, -33.9268, -5.3764, 1.03", "-56.987, -34.1312, -5.43203, 1.03", "-58.6352, -34.5012, -5.36522, 1.18", "-59.6357, -34.6828, -5.17534, 1.18", "-61.8866, -34.959, -4.30204, 0.96", "-62.7121, -35.0119, -3.89925, 1.11", "-64.3187, -35.0825, -3.02977, 1.11", "-65.6062, -35.1713, -2.31723, 1.11", "-67.1207, -35.3332, -1.47936, 1.11", "-69.1426, -35.715, -0.384569, 1.55", "-70.5898, -36.1474, 0.338834, 1.03", "-72.3208, -36.8752, 1.17687, 0.88", "-73.7968, -37.7043, 1.8401, 0.74", "-74.6416, -38.3198, 2.19122, 0.74", "-75.7316, -39.3236, 2.5551, 0.74", "-76.8126, -40.5391, 2.80729, 0.66", "-77.7788, -41.7962, 2.98092, 0.88", "-78.409, -42.7138, 3.04991, 1.03", "-79.0651, -43.7943, 3.09343, 1.03", "-79.9034, -45.1864, 3.12577, 0.88", "-80.9504, -46.822, 3.14161, 0.88", "-81.5446, -47.6415, 3.13618, 0.88", "-82.4294, -48.6479, 3.13175, 0.88", "-84.1588, -50.2592, 3.13582, 0.88", "-85.1736, -50.9885, 3.14221, 0.88", "-86.6318, -51.7533, 3.15724, 0.88", "-87.6163, -52.1039, 3.16394, 0.96", "-88.7774, -52.4087, 3.13913, 0.96", "-89.8336, -52.6061, 3.12068, 0.96", "-91.0168, -52.7913, 3.11118, 0.52", "-91.8233, -53.0507, 3.12078, 0.52", "-92.4275, -53.5175, 3.18356, 0.52", "-93.0095, -54.394, 3.38974, 0.81", "-93.4523, -55.3222, 3.66322, 0.96", "-93.7677, -56.3952, 3.99575, 0.96", "-94.1041, -58.3183, 4.60028, 0.81", "-94.2079, -59.2596, 4.90629, 0.81", "-94.2866, -60.4522, 5.34735, 1.11", "-94.3757, -61.1275, 5.65293, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-37.7563, -27.8893, 0.325375, 1.33", "-38.7607, -28.0545, 1.08472, 1.33", "-39.7272, -28.2545, 1.71741, 1.18", "-41.5391, -28.5994, 2.84289, 0.88", "-42.4124, -28.7346, 3.33414, 0.74", "-43.6895, -28.8829, 3.96089, 0.74", "-44.9875, -28.9621, 4.58473, 0.74", "-45.9652, -29.0014, 5.0169, 0.59", "-47.1141, -28.9906, 5.50983, 0.59", "-48.0187, -28.9278, 5.89637, 0.52", "-48.9344, -28.7605, 6.34642, 0.52", "-50.6661, -28.2286, 7.31125, 0.74", "-51.7677, -27.7928, 7.99219, 0.59", "-52.7846, -27.3758, 8.64735, 0.44", "-53.8832, -26.9806, 9.3884, 0.37", "-54.764, -26.7507, 10.0003, 0.66", "-55.5476, -26.6712, 10.4608, 0.66", "-56.054, -26.704, 10.6629, 0.66", "-56.7221, -26.7894, 10.8971, 0.44", "-57.4953, -26.9414, 11.1374, 0.44", "-58.8728, -27.2227, 11.5331, 0.44", "-60.7749, -27.6521, 12.0892, 0.74", "-61.9022, -27.9454, 12.4181, 0.74", "-63.4581, -28.3382, 12.8513, 0.52", "-64.9122, -28.6883, 13.2382, 0.59", "-66.1591, -28.9829, 13.5487, 0.44", "-67.8923, -29.4586, 13.9858, 0.37", "-69.1399, -29.9055, 14.3161, 0.37", "-70.4961, -30.5741, 14.6597, 0.29", "-71.139, -31.0192, 14.8179, 0.29", "-71.8996, -31.6957, 15.0759, 0.29", "-72.5513, -32.3383, 15.3533, 0.37", "-73.292, -33.086, 15.7375, 0.37", "-74.0468, -33.8013, 16.1861, 0.37", "-74.8619, -34.6408, 16.7417, 0.66", "-75.6762, -35.453, 17.3187, 0.81", "-76.3051, -36.0083, 17.7614, 0.81", "-77.2249, -36.6617, 18.3555, 0.22", "-78.3559, -37.3188, 19.0474, 0.22", "-89.3357, -38.3946, 23.5991, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.11118, -43.0054, -5.98703, 1.55", "-2.7459, -44.0238, -5.97659, 1.55", "-2.38238, -45.0612, -5.96369, 1.55", "-2.07465, -45.973, -5.95544, 1.55", "-1.73666, -47.0077, -5.94028, 1.69", "-1.49435, -47.802, -5.92322, 1.69", "-1.33315, -48.3964, -5.9089, 1.69", "-1.11398, -49.384, -5.88102, 1.55", "-0.878922, -50.6773, -5.84451, 1.47", "-0.743986, -51.7563, -5.80092, 1.33", "-0.686574, -52.7921, -5.74623, 1.33", "-0.710734, -54.1696, -5.66216, 1.33", "-0.810495, -55.1815, -5.58242, 1.11", "-0.931618, -55.82, -5.51943, 1.11", "-1.30224, -57.2133, -5.35883, 1.25", "-1.60518, -58.1396, -5.24289, 1.25", "-1.91356, -58.9739, -5.13399, 1.25", "-2.37337, -60.1329, -4.99, 1.4", "-2.84515, -61.2765, -4.86058, 1.4", "-3.21795, -62.2042, -4.77844, 1.55", "-3.4556, -62.8874, -4.7511, 1.55", "-3.7409, -63.8984, -4.74913, 1.33", "-4.01789, -65.1616, -4.80337, 0.96", "-4.09752, -65.6623, -4.8501, 0.81", "-4.1598, -66.2257, -4.90965, 0.81", "-4.25197, -67.5274, -5.04396, 0.96", "-4.28239, -68.4288, -5.12498, 1.33", "-4.29826, -69.4236, -5.1968, 1.69", "-4.31398, -70.0265, -5.22489, 1.84", "-4.34601, -70.7103, -5.23522, 1.99", "-4.42277, -71.5197, -5.21682, 2.06", "-4.50025, -72.2119, -5.18196, 2.06", "-4.57759, -72.9164, -5.1175, 1.84", "-4.64831, -73.6681, -5.01398, 1.62", "-4.71339, -74.5715, -4.85892, 1.18", "-4.74565, -75.2948, -4.72593, 0.88", "-4.77706, -76.2833, -4.52801, 0.88", "-4.79145, -76.9635, -4.36699, 1.03", "-4.80696, -77.6634, -4.17924, 1.11", "-4.83027, -78.1618, -4.03788, 1.11", "-4.95309, -79.4055, -3.67986, 1.03", "-5.07437, -80.2174, -3.44503, 1.18", "-5.19099, -80.8802, -3.26382, 1.25", "-5.38438, -81.8888, -3.01412, 1.18", "-5.57847, -82.8034, -2.81576, 1.03", "-5.799, -83.7164, -2.64529, 0.96", "-6.06765, -84.705, -2.49697, 0.88", "-6.27254, -85.3652, -2.43135, 0.88", "-6.63941, -86.3593, -2.41856, 1.25", "-7.0541, -87.3508, -2.47413, 1.55", "-7.38008, -88.109, -2.55147, 1.62", "-7.62511, -88.7159, -2.6283, 1.62", "-7.91283, -89.5104, -2.73557, 1.4", "-8.27035, -90.6358, -2.87439, 1.11", "-8.56552, -91.7956, -2.99635, 1.11", "-8.813, -93.0764, -3.08411, 1.11", "-9.0249, -94.4426, -3.14655, 1.11", "-9.16001, -95.4421, -3.1722, 1.4", "-9.28397, -96.4776, -3.18322, 1.4", "-9.46264, -98.0927, -3.17575, 1.25", "-9.64594, -99.7464, -3.17329, 1.25", "-9.77654, -100.834, -3.17346, 1.62", "-9.90635, -101.787, -3.18319, 1.77", "-10.0824, -103.062, -3.21738, 1.33", "-10.2364, -104.217, -3.25653, 0.88", "-10.3802, -105.505, -3.31637, 1.25", "-10.4395, -106.142, -3.35595, 1.84", "-10.4857, -106.856, -3.4129, 2.28", "-10.5141, -107.595, -3.48925, 2.43" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-3.11118, -43.0054, -5.98703, 2.14", "-2.98255, -43.6945, -6.23386, 2.14", "-2.7323, -44.7849, -6.57903, 2.14", "-2.30437, -46.6496, -7.16926, 1.69", "-1.9458, -48.2121, -7.66383, 1.84", "-1.59747, -49.73, -8.14429, 1.99", "-1.31567, -50.9579, -8.53296, 2.36", "-1.08063, -51.859, -8.78357, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-9.81724, 36.298, -10.7562, 1.25", "-9.37001, 37.7598, -10.904, 1.25", "-8.99233, 38.7452, -10.9651, 1.03", "-8.49074, 39.9188, -11.0044, 0.81", "-7.93395, 41.2321, -11.0248, 0.81", "-7.45531, 42.5382, -11.041, 1.11", "-7.16228, 43.4832, -11.0507, 1.11", "-6.86603, 44.5845, -11.0135, 0.96", "-6.53721, 46.054, -10.933, 0.66", "-6.34774, 47.0689, -10.8792, 0.52", "-6.14068, 48.3987, -10.8034, 0.52", "-6.02239, 49.3853, -10.7505, 0.52", "-5.75757, 51.4981, -10.6704, 1.18", "-5.6121, 52.5804, -10.6395, 1.62", "-5.49343, 53.358, -10.6234, 1.69", "-5.24585, 54.6503, -10.6255, 1.33", "-5.07416, 55.2935, -10.6425, 0.74", "-4.74112, 56.2852, -10.6935, 0.59", "-4.14908, 57.861, -10.8531, 0.66", "-3.83834, 58.7138, -10.9648, 0.44", "-3.64003, 59.3495, -11.0568, 0.44", "-3.33047, 60.5132, -11.2412, 0.37", "-3.06742, 61.4926, -11.3868, 0.37", "-2.85075, 62.2048, -11.4656, 0.37", "-2.41544, 63.3318, -11.5918, 0.37", "-1.98505, 64.3389, -11.7152, 0.44", "-1.59976, 65.3195, -11.8796, 0.44", "-1.07084, 66.9044, -12.2207, 0.81", "-0.734059, 68.0236, -12.4856, 1.03", "-0.413327, 69.0362, -12.7373, 1.03", "-0.11223, 69.9599, -13.0017, 0.81", "0.312194, 71.3105, -13.453, 0.29", "0.500049, 71.9819, -13.6991, 0.29", "0.871787, 73.6012, -14.3042, 1.77", "0.984422, 74.1397, -14.5019, 2.36", "1.14272, 74.8844, -14.7444, 2.36", "1.46542, 76.3008, -15.1578, 2.28", "1.89064, 77.9993, -15.5794, 0.66", "2.13324, 78.929, -15.8078, 0.88", "2.38407, 79.897, -16.0509, 0.88", "2.66084, 80.982, -16.2982, 0.37", "2.84705, 81.7141, -16.454, 0.37", "3.2128, 83.2377, -16.7494, 0.37", "3.46977, 84.385, -16.9589, 1.11", "3.65517, 85.3001, -17.1195, 1.47", "3.76661, 85.953, -17.2273, 1.69", "3.91231, 87.0535, -17.3954, 1.33", "4.02513, 88.2588, -17.5597, 0.44", "4.04668, 89.5338, -17.7201, 0.29", "4.02368, 90.5323, -17.8484, 0.52", "3.98521, 91.2774, -17.9462, 0.52", "3.89938, 92.5288, -18.1454, 0.29", "3.83242, 93.8186, -18.3525, 0.29", "3.77094, 96.0975, -18.7449, 1.18", "3.7609, 96.955, -18.8897, 1.62", "3.74647, 97.8674, -19.028, 1.84", "3.72715, 99.0184, -19.1808, 1.33", "3.65865, 102.3, -19.5897, 0.22", "3.62002, 104.401, -19.8285, 0.22", "3.57776, 106.297, -20.0147, 0.22", "3.49786, 108.297, -20.1788, 0.74", "3.44084, 109.386, -20.2607, 1.03", "3.4033, 109.899, -20.2948, 1.03", "3.2157, 111.531, -20.4569, 0.15", "3.13712, 112.159, -20.5519, 0.15", "3.05189, 112.88, -20.7132, 0.44", "2.97951, 113.568, -20.8986, 0.66", "2.91447, 114.203, -21.071, 0.66", "2.78094, 116.035, -21.5456, 1.55", "2.71917, 117.384, -21.8679, 2.58", "2.69921, 118.56, -22.1377, 2.58", "2.76408, 121.175, -22.658, 0.29", "2.89431, 122.924, -22.9014, 0.29", "3.18831, 125.431, -23.0941, 0.29", "3.44716, 127.006, -23.1158, 0.96", "3.6073, 127.814, -23.0793, 0.96", "4.23131, 130.446, -22.814, 0.22", "4.97045, 133.247, -22.3895, 0.22", "5.46504, 135.004, -22.0563, 1.77", "5.66882, 135.691, -21.9023, 2.36", "5.92242, 136.53, -21.7053, 2.5", "6.7373, 139.239, -21.0492, 0.15", "7.14406, 140.603, -20.7297, 0.29", "7.41359, 141.517, -20.5351, 0.29", "7.76428, 142.689, -20.3473, 0.15", "8.11834, 143.892, -20.2326, 1.18", "8.34701, 144.641, -20.1996, 1.55", "8.60773, 145.474, -20.1946, 1.18", "8.80211, 146.076, -20.2083, 0.74", "9.35221, 147.943, -20.2766, 0.22", "9.74708, 149.399, -20.3426, 0.22", "10.3555, 151.938, -20.4238, 0.22", "10.6473, 153.302, -20.446, 0.81", "10.7502, 153.847, -20.4466, 0.81", "11.2939, 157.249, -20.3642, 0.22", "11.4981, 158.951, -20.2406, 0.22", "11.6254, 160.485, -20.1244, 1.25", "11.6301, 160.89, -20.0987, 1.69", "11.6119, 161.347, -20.0728, 1.69", "11.5375, 162.317, -20.0185, 1.33", "11.4369, 163.164, -19.9905, 0.59", "11.2059, 164.927, -19.9857, 0.22", "10.9212, 167.447, -20.0523, 0.22", "10.7513, 168.999, -20.1115, 1.03", "10.6787, 169.653, -20.1411, 1.03", "10.6243, 170.339, -20.1669, 1.03", "10.5803, 171.357, -20.187, 0.52", "10.5602, 173.642, -20.1652, 0.22", "10.6359, 174.747, -20.1323, 0.59", "10.7268, 175.458, -20.0966, 0.59", "11.2663, 178.588, -19.8796, 0.22", "11.4837, 179.562, -19.7891, 0.66", "11.6851, 180.26, -19.7118, 0.66", "12.2161, 181.884, -19.5311, 0.15", "12.53, 182.789, -19.4401, 0.81", "12.7471, 183.412, -19.3887, 0.81", "13.0603, 184.332, -19.3387, 0.81", "13.6125, 186.086, -19.285, 0.22", "14.1543, 187.869, -19.2818, 1.33", "14.3718, 188.618, -19.2974, 1.55", "14.5011, 189.055, -19.3086, 1.55", "14.6402, 189.518, -19.3275, 1.03", "15.3153, 191.634, -19.4385, 0.22", "15.9718, 193.522, -19.5513, 0.22", "16.3569, 194.516, -19.6265, 0.22", "16.8093, 195.692, -19.7198, 1.25", "17.0829, 196.451, -19.7898, 1.77", "17.3094, 197.137, -19.8651, 1.77", "17.4901, 197.716, -19.9444, 1.18", "17.7591, 198.633, -20.0855, 0.66", "18.5873, 201.428, -20.5794, 0.22", "19.1614, 203.298, -20.9633, 0.22", "19.5639, 204.575, -21.2206, 1.11", "19.8487, 205.397, -21.3715, 1.4", "20.132, 206.127, -21.496, 1.4", "20.5076, 206.979, -21.6549, 0.96", "21.6837, 209.397, -22.1486, 0.22", "23.0082, 211.916, -22.6475, 0.22", "24.0633, 213.849, -23.0069, 1.77", "24.4409, 214.53, -23.1213, 2.65", "25.0421, 215.595, -23.2781, 2.95" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-9.81724, 36.298, -10.7562, 0.66", "-11.29, 37.0572, -10.7051, 0.66", "-11.8778, 37.3338, -10.6814, 0.66", "-12.567, 37.6328, -10.6465, 0.66", "-13.3559, 37.9417, -10.6066, 1.11", "-13.847, 38.1114, -10.5841, 1.33", "-14.5878, 38.3587, -10.552, 1.33", "-15.3932, 38.603, -10.5147, 0.96", "-15.9451, 38.7757, -10.4711, 0.88", "-16.6003, 38.9829, -10.3977, 0.88", "-17.3718, 39.2279, -10.2721, 0.37", "-17.7661, 39.3508, -10.1892, 0.37", "-18.4348, 39.5605, -10.0224, 0.81", "-19.0095, 39.7489, -9.86169, 0.88", "-19.5398, 39.928, -9.7049, 0.81", "-20.0977, 40.1209, -9.53066, 0.29", "-20.4549, 40.239, -9.42377, 0.29", "-21.0831, 40.4036, -9.26471, 0.74", "-21.5558, 40.5116, -9.16618, 0.74", "-21.8255, 40.5849, -9.10704, 0.74", "-22.132, 40.6941, -9.01693, 0.74", "-22.5029, 40.8458, -8.88395, 0.59", "-22.8597, 40.9892, -8.72944, 0.59", "-23.1678, 41.1051, -8.56546, 0.37", "-24.0005, 41.37, -8.09974, 0.37", "-24.5885, 41.5178, -7.76322, 0.37", "-24.9038, 41.5783, -7.58172, 0.22", "-25.438, 41.6522, -7.28105, 0.22", "-25.7303, 41.6735, -7.13335, 0.22", "-26.6007, 41.7148, -6.74192, 1.03", "-27.0371, 41.7436, -6.57525, 1.4", "-27.2988, 41.7746, -6.48159, 1.4", "-27.9346, 41.889, -6.26696, 0.81", "-28.7517, 42.0703, -6.0202, 0.22", "-29.1946, 42.1743, -5.89574, 0.22", "-30.092, 42.3962, -5.66652, 1.11", "-30.5523, 42.5149, -5.56119, 1.4", "-30.8806, 42.6002, -5.49284, 1.4", "-31.65, 42.7973, -5.34892, 0.66", "-32.3753, 42.9739, -5.22147, 0.52", "-33.2567, 43.1629, -5.07687, 0.74", "-33.8305, 43.2815, -4.9897, 0.88", "-34.6457, 43.4589, -4.87354, 0.66", "-35.2246, 43.5907, -4.79549, 0.66", "-35.6999, 43.7041, -4.7369, 0.66", "-36.5928, 43.9338, -4.62455, 0.29", "-37.3041, 44.1319, -4.51666, 1.03", "-37.9045, 44.3092, -4.40538, 1.25", "-38.0923, 44.3744, -4.35528, 1.25", "-38.5672, 44.5728, -4.19299, 0.81", "-39.1283, 44.8352, -3.95891, 0.29", "-39.4844, 45.0183, -3.77929, 0.52", "-39.7192, 45.1505, -3.65206, 0.66", "-40.5736, 45.6532, -3.19246, 0.22", "-41.0593, 45.9432, -2.94672, 0.22", "-41.4615, 46.181, -2.76478, 0.22", "-42.01, 46.5035, -2.56392, 0.22", "-42.7557, 46.9412, -2.33063, 0.59", "-43.1861, 47.1954, -2.21783, 0.81", "-43.5919, 47.4459, -2.14789, 0.81", "-44.2165, 47.8588, -2.07097, 0.52", "-45.0597, 48.4518, -2.00331, 1.03", "-45.5662, 48.8203, -1.97996, 1.18", "-45.9427, 49.1056, -1.97411, 1.25", "-46.7826, 49.767, -1.98146, 0.29", "-47.5431, 50.382, -2.00343, 0.74", "-47.8293, 50.616, -2.0171, 0.96", "-48.0813, 50.8194, -2.03585, 0.96", "-48.9243, 51.475, -2.11239, 0.22", "-49.2604, 51.7219, -2.14395, 0.22", "-49.7219, 52.0388, -2.18053, 0.66", "-50.0383, 52.2461, -2.21186, 0.88", "-50.4143, 52.4811, -2.24785, 0.44", "-50.9046, 52.7811, -2.28959, 0.37", "-51.1999, 52.9586, -2.30763, 0.44", "-51.5924, 53.2036, -2.3311, 0.44", "-51.8749, 53.3821, -2.34829, 0.44", "-52.4175, 53.7327, -2.37564, 0.22", "-52.7695, 53.9691, -2.38285, 0.22", "-53.1838, 54.2721, -2.38329, 0.29", "-53.4243, 54.4616, -2.37484, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-14.9444, 34.435, 2.85466, 1.47", "-14.4174, 35.4976, 2.6326, 1.47", "-13.9438, 36.6566, 2.41819, 0.81", "-13.6504, 37.5058, 2.27797, 0.81", "-13.3443, 38.6953, 2.10975, 0.81", "-13.033, 40.1439, 1.92363, 0.81", "-12.746, 41.7436, 1.73622, 0.81", "-12.569, 43.3408, 1.57178, 1.03", "-12.4635, 44.7781, 1.43916, 1.03", "-12.3434, 46.9783, 1.23922, 1.18", "-12.2753, 48.3418, 1.12378, 1.18", "-12.2755, 50.7112, 0.936624, 1.18", "-12.3374, 52.3964, 0.808779, 1.4", "-12.3698, 53.5904, 0.712326, 1.4", "-12.4017, 54.4399, 0.640665, 1.4" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-14.9444, 34.435, 2.85466, 0.96", "-16.7192, 35.0612, 2.80762, 0.96", "-17.3515, 35.3041, 2.80302, 0.96", "-18.2281, 35.6484, 2.79646, 0.96", "-19.1435, 36.0196, 2.77937, 0.81", "-19.9316, 36.3531, 2.76408, 0.81", "-21.0154, 36.8291, 2.75206, 1.03", "-21.7491, 37.1827, 2.74082, 1.03", "-22.4315, 37.5766, 2.72135, 1.03", "-23.2807, 38.1492, 2.68517, 0.81", "-23.9021, 38.5891, 2.65696, 0.81", "-24.5815, 39.0911, 2.63223, 0.81", "-25.3821, 39.7223, 2.59638, 0.52", "-26.1169, 40.3703, 2.5615, 0.52", "-26.5255, 40.7717, 2.55137, 0.52", "-27.1054, 41.395, 2.54635, 0.52", "-27.8228, 42.2031, 2.54358, 0.52", "-28.1972, 42.6479, 2.54621, 0.52", "-28.5707, 43.1131, 2.56112, 0.52", "-29.0022, 43.6724, 2.5928, 0.66", "-29.3978, 44.2311, 2.62767, 0.88", "-29.7801, 44.8341, 2.66042, 0.88", "-30.2059, 45.5441, 2.6903, 0.59", "-30.6402, 46.2471, 2.71502, 0.88", "-30.9564, 46.7518, 2.72703, 0.88", "-31.2188, 47.202, 2.72529, 0.96", "-31.4542, 47.6129, 2.71326, 0.96", "-31.6699, 47.9702, 2.6978, 0.96", "-32.0606, 48.5498, 2.67045, 0.74", "-32.6868, 49.3963, 2.62654, 1.25", "-33.1248, 49.9569, 2.59527, 1.25", "-33.624, 50.5814, 2.56102, 0.29", "-33.954, 50.9981, 2.54282, 0.29", "-34.2838, 51.4225, 2.53234, 0.66", "-34.5762, 51.8089, 2.53371, 0.81", "-34.8156, 52.1393, 2.54504, 0.81", "-35.2027, 52.7334, 2.58076, 0.37", "-35.5769, 53.391, 2.58189, 0.37", "-35.8019, 53.8197, 2.55869, 1.03", "-35.9989, 54.1972, 2.52441, 1.25", "-36.258, 54.656, 2.47349, 1.25", "-36.4873, 55.0163, 2.42674, 0.81", "-36.9876, 55.7253, 2.33057, 0.59", "-37.2885, 56.1278, 2.27604, 0.44", "-37.7014, 56.6997, 2.2168, 0.88", "-38.011, 57.1443, 2.18751, 0.88", "-38.5242, 57.9319, 2.17538, 0.59", "-38.85, 58.4602, 2.17609, 0.59", "-39.3435, 59.3237, 2.19581, 0.44", "-39.8779, 60.3228, 2.21727, 1.03", "-40.2969, 61.1779, 2.24357, 1.55", "-40.5256, 61.7134, 2.26695, 1.62", "-40.8247, 62.5027, 2.30774, 1.11", "-41.1233, 63.373, 2.35551, 0.59", "-41.311, 63.978, 2.3978, 0.59", "-41.5983, 64.9936, 2.48121, 0.59", "-41.8775, 66.0086, 2.57893, 0.52", "-42.0583, 66.6752, 2.65882, 0.52", "-42.2789, 67.5109, 2.79058, 0.52", "-42.516, 68.3838, 2.9384, 0.52", "-42.7994, 69.337, 3.10227, 0.37", "-43.2421, 70.5986, 3.33055, 1.55", "-43.418, 71.0116, 3.40972, 1.92", "-43.6076, 71.384, 3.48429, 1.92", "-43.7956, 71.698, 3.54453, 1.92", "-44.2156, 72.2844, 3.65705, 0.88", "-44.7959, 73.0199, 3.79036, 0.44", "-45.2408, 73.5614, 3.88286, 0.44", "-45.7242, 74.1454, 3.96959, 0.44", "-46.398, 74.9772, 4.08329, 0.37", "-46.7575, 75.4301, 4.14145, 0.37", "-47.4982, 76.4034, 4.25567, 0.74", "-47.7911, 76.8051, 4.30371, 0.74", "-48.1524, 77.3228, 4.36199, 0.52", "-48.6372, 78.0367, 4.42275, 1.25", "-48.982, 78.5342, 4.44516, 1.47", "-49.2173, 78.8699, 4.44786, 1.47", "-49.5508, 79.2775, 4.4343, 0.81", "-50.0135, 79.7797, 4.40261, 0.59", "-50.489, 80.2331, 4.35122, 0.88", "-50.897, 80.5925, 4.29676, 1.18", "-51.1539, 80.8119, 4.25783, 1.18", "-51.7782, 81.3757, 4.17512, 0.96", "-52.4299, 82.0287, 4.1123, 0.52", "-52.7888, 82.4488, 4.11094, 0.37", "-53.2762, 83.1202, 4.16502, 0.37", "-53.7172, 83.833, 4.25861, 0.37", "-54.1015, 84.5576, 4.37577, 0.37", "-54.3492, 85.1279, 4.48191, 0.81", "-54.6865, 86.051, 4.6542, 1.84", "-54.8198, 86.4243, 4.72345, 1.92", "-54.9251, 86.6921, 4.76917, 1.92", "-55.1221, 87.1871, 4.83644, 1.62", "-55.4097, 87.8805, 4.88956, 0.88", "-55.7113, 88.6227, 4.91493, 0.29", "-56.1839, 89.7743, 4.92828, 0.29", "-56.5423, 90.6022, 4.94318, 0.29", "-56.7745, 91.0847, 4.96659, 0.29", "-56.8973, 91.3086, 4.98561, 0.29", "-57.2127, 91.7989, 5.04954, 0.66", "-57.6149, 92.3354, 5.14523, 0.81", "-57.9075, 92.6882, 5.21999, 0.81", "-58.4694, 93.3541, 5.36171, 0.37", "-58.9126, 93.8648, 5.47437, 0.37", "-59.3322, 94.3539, 5.58016, 0.81", "-59.6266, 94.7025, 5.65684, 0.81", "-60.0413, 95.2062, 5.77016, 0.37", "-60.451, 95.6749, 5.88918, 0.37", "-60.8679, 96.1113, 6.01997, 0.88", "-61.3795, 96.6232, 6.18584, 1.47", "-61.7655, 97.0057, 6.30857, 1.69", "-62.0799, 97.3179, 6.40398, 1.69", "-62.939, 98.1514, 6.65939, 0.37", "-63.2343, 98.4417, 6.745, 0.37", "-63.7895, 99.0214, 6.89239, 0.37", "-64.4306, 99.7398, 7.04575, 0.81", "-64.8456, 100.266, 7.12982, 1.33", "-65.0979, 100.617, 7.17073, 1.33", "-65.4374, 101.11, 7.21632, 0.81", "-66.1272, 102.073, 7.30099, 0.52", "-66.7056, 102.815, 7.37116, 0.52", "-67.3613, 103.635, 7.44446, 0.52", "-67.7248, 104.086, 7.48175, 0.52", "-68.1938, 104.671, 7.52457, 0.52", "-68.7226, 105.324, 7.5659, 0.52", "-69.6269, 106.422, 7.62975, 0.52", "-69.9551, 106.819, 7.65214, 0.52", "-70.7699, 107.788, 7.71321, 1.25", "-70.9996, 108.063, 7.73206, 1.47", "-71.3025, 108.42, 7.75364, 1.47", "-71.749, 108.913, 7.78481, 0.88", "-72.2937, 109.456, 7.82852, 0.29", "-72.5198, 109.657, 7.85227, 0.29", "-72.986, 110.037, 7.91286, 0.44", "-73.3538, 110.328, 7.97057, 0.44", "-73.6974, 110.595, 8.03443, 0.44", "-73.9016, 110.759, 8.06367, 0.44", "-74.1863, 111.005, 8.11648, 0.29", "-74.5445, 111.419, 8.19664, 0.29", "-74.6633, 111.58, 8.23357, 0.44", "-74.8048, 111.785, 8.28764, 0.44", "-75.1747, 112.316, 8.44316, 0.37", "-75.673, 113.008, 8.66457, 0.44", "-76.508, 114.097, 8.96621, 2.28", "-76.8509, 114.526, 9.06572, 2.5", "-77.1205, 114.865, 9.12316, 2.5", "-77.5673, 115.416, 9.18831, 1.92", "-78.027, 115.969, 9.21137, 0.81", "-78.6533, 116.714, 9.13776, 0.52", "-78.9228, 117.054, 9.07567, 0.52", "-79.5035, 117.84, 8.89929, 0.88", "-79.8307, 118.327, 8.77956, 0.88", "-80.1934, 118.919, 8.63198, 0.66", "-80.4709, 119.408, 8.51004, 0.44", "-80.8423, 120.125, 8.34897, 0.29", "-81.248, 120.953, 8.14743, 0.29", "-81.682, 121.896, 7.88868, 0.29", "-81.8879, 122.363, 7.74859, 0.29", "-82.2733, 123.223, 7.44288, 0.52", "-82.5551, 123.807, 7.20574, 0.88", "-82.8081, 124.279, 6.97921, 0.88", "-83.1208, 124.79, 6.70761, 0.44", "-83.7285, 125.587, 6.26309, 1.11", "-84.3668, 126.266, 5.88318, 2.43", "-84.8891, 126.717, 5.63723, 2.43", "-85.2527, 126.973, 5.50507, 2.43", "-85.7566, 127.273, 5.38407, 1.69", "-86.4758, 127.648, 5.2651, 0.59", "-87.2612, 128.004, 5.2051, 0.74", "-87.5204, 128.114, 5.21082, 0.74", "-87.9533, 128.289, 5.23105, 0.52", "-88.6146, 128.564, 5.2845, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "24.6863, 6.09904, 6.50013, 1.99", "26.1558, 6.27009, 6.48022, 1.99", "27.0139, 6.56202, 6.56809, 1.99", "27.6126, 6.98095, 6.70518, 1.69", "28.4542, 7.56988, 6.8979, 1.69", "28.8087, 7.81793, 6.97907, 1.69", "29.3977, 8.23007, 7.11393, 1.69", "29.7697, 8.65251, 7.21109, 1.92", "30.3121, 9.51697, 7.47579, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "24.6863, 6.09904, 6.50013, 0.74", "25.5937, 8.21107, 6.71261, 0.74", "25.9349, 9.1254, 6.787, 0.74", "26.4098, 10.5587, 6.87869, 0.74", "26.7822, 11.7917, 6.94361, 0.44", "27.0691, 12.8371, 7.00036, 0.44", "27.456, 14.3878, 7.08477, 0.66", "27.6037, 15.1339, 7.11002, 0.88", "27.7946, 16.2208, 7.17352, 0.88", "27.952, 17.2276, 7.27127, 1.03", "28.1925, 18.6744, 7.45167, 0.96", "28.3796, 19.7013, 7.59776, 0.52", "28.5569, 20.5274, 7.72456, 0.52", "28.761, 21.6264, 7.89686, 0.88", "28.9278, 22.5224, 8.04131, 0.66", "29.1186, 23.5261, 8.21252, 0.88", "29.2871, 24.4226, 8.37147, 0.88", "29.5203, 25.748, 8.62086, 0.29", "29.6823, 26.8188, 8.81673, 0.29", "29.7848, 27.5558, 8.93922, 0.29", "29.9577, 28.8125, 9.15551, 0.44", "30.0784, 29.5639, 9.30526, 0.74", "30.2586, 30.4685, 9.49623, 0.88", "30.3893, 31.0162, 9.62154, 1.11", "30.5055, 31.449, 9.71901, 1.11", "30.7292, 32.431, 9.90785, 0.29", "30.97, 33.396, 10.0491, 0.29", "31.2432, 34.3058, 10.1597, 0.29", "33.7401, 44.3318, 13.6314, 0.29", "37.6442, 54.1157, 16.506, 0.29", "40.4132, 64.4668, 18.2713, 0.29", "42.2027, 75.0901, 19.3744, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.95552, 38.3192, 1.13455, 0.59", "9.5476, 53.0936, 1.13455, 0.59", "12.1397, 67.8679, 1.13455, 0.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-94.3757, -61.1275, 5.65293, 0.44", "-95.9496, -61.9252, 6.41999, 0.44", "-96.7499, -62.3867, 6.78481, 0.29", "-97.601, -62.909, 7.12956, 0.29", "-98.1026, -63.2239, 7.31891, 0.29", "-99.174, -63.8779, 7.69884, 0.37", "-99.662, -64.1632, 7.87908, 0.37", "-100.42, -64.5644, 8.09618, 0.29", "-101.143, -65.0049, 8.30637, 0.29", "-101.695, -65.3877, 8.46519, 0.29", "-102.078, -65.6664, 8.57154, 0.29", "-102.676, -66.0886, 8.73629, 0.29", "-103.268, -66.4521, 8.89922, 0.44", "-104.084, -66.9013, 9.13318, 0.44", "-104.513, -67.1573, 9.27428, 0.44", "-105.132, -67.5851, 9.50498, 0.66", "-105.742, -68.1037, 9.76386, 0.66", "-106.049, -68.4492, 9.9204, 0.52", "-106.548, -69.2909, 10.2882, 0.44", "-106.721, -69.8845, 10.5281, 0.66", "-106.789, -70.5062, 10.7668, 0.66", "-106.807, -71.2247, 11.0333, 0.52", "-106.824, -72.1796, 11.3942, 0.52", "-106.811, -73.0496, 11.7099, 0.44", "-106.78, -73.8119, 11.9784, 0.37", "-106.772, -74.9959, 12.3992, 0.37", "-106.809, -75.9315, 12.7536, 0.29", "-106.922, -76.885, 13.1704, 0.29", "-112.883, -82.9641, 14.487, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-94.3757, -61.1275, 5.65293, 1.11", "-95.4162, -61.5558, 5.86152, 1.11", "-96.2256, -61.9613, 6.00446, 1.11", "-97.8656, -62.8413, 6.30075, 0.88", "-99.1162, -63.4758, 6.52516, 0.88", "-101.02, -64.3642, 6.8619, 0.88", "-103.007, -65.2059, 7.19552, 0.88", "-104.096, -65.6605, 7.37539, 0.88", "-105.11, -66.0711, 7.51525, 0.81", "-106.25, -66.5141, 7.64152, 0.81", "-107.074, -66.8014, 7.72693, 0.81", "-108.54, -67.2607, 7.8813, 0.96", "-109.306, -67.5243, 7.95545, 0.96", "-110.087, -67.8737, 8.01047, 0.96", "-110.826, -68.3227, 8.03357, 0.96", "-111.789, -69.0271, 8.0469, 0.96", "-112.109, -69.2736, 8.04346, 0.96", "-113.091, -70.0093, 8.00483, 0.88", "-114.325, -70.8186, 7.92253, 0.88", "-115.21, -71.374, 7.85205, 1.11", "-116.102, -71.9365, 7.77674, 1.11", "-117.134, -72.612, 7.66882, 0.96", "-118.006, -73.2365, 7.6024, 0.96", "-119.201, -74.1829, 7.55246, 0.88", "-120.57, -75.3752, 7.48053, 0.88", "-121.628, -76.3392, 7.3723, 0.96", "-122.474, -77.122, 7.24472, 0.96", "-123.682, -78.2006, 7.02374, 0.88", "-124.256, -78.6821, 6.88939, 0.74", "-125.549, -79.6884, 6.53491, 0.96", "-126.695, -80.4889, 6.20785, 1.11", "-127.628, -81.1069, 5.95668, 1.25", "-128.438, -81.6455, 5.76236, 1.25", "-129.743, -82.5358, 5.47984, 1.03", "-131.5, -83.8201, 5.19886, 0.88", "-132.771, -84.8448, 5.06027, 0.88", "-134.051, -85.9524, 4.94639, 0.88", "-135.119, -86.889, 4.84889, 0.88", "-136.152, -87.7557, 4.75597, 1.33", "-136.964, -88.3716, 4.69349, 1.33", "-137.934, -89.0543, 4.61344, 1.18", "-138.617, -89.506, 4.55068, 0.96", "-139.847, -90.2596, 4.44993, 0.96", "-140.983, -90.8757, 4.37704, 0.96", "-142.513, -91.5896, 4.3307, 0.88", "-143.839, -92.0747, 4.35297, 0.81", "-144.585, -92.2756, 4.40834, 0.81", "-145.455, -92.4765, 4.49954, 0.74", "-146.099, -92.647, 4.57878, 0.74", "-146.919, -92.9351, 4.68852, 0.74", "-148.09, -93.5011, 4.84947, 0.74", "-148.741, -93.9529, 4.92889, 1.11", "-149.73, -94.9208, 5.01972, 1.11", "-150.938, -96.3725, 5.08934, 0.88", "-151.72, -97.4536, 5.11815, 0.88", "-152.318, -98.3623, 5.12893, 0.88", "-153.14, -99.6301, 5.13369, 0.81", "-154.277, -101.266, 5.08895, 0.81", "-154.863, -102.033, 5.0459, 1.18", "-155.511, -102.853, 4.96298, 1.33", "-156.216, -103.682, 4.85034, 1.33", "-157.376, -104.924, 4.64585, 0.88", "-158.532, -106.056, 4.40928, 0.81", "-159.745, -107.153, 4.15762, 0.81", "-161.189, -108.394, 3.83779, 0.81", "-162.284, -109.293, 3.56297, 0.81", "-163.318, -110.117, 3.29399, 1.11", "-163.945, -110.61, 3.12239, 1.25", "-164.696, -111.197, 2.91835, 2.14", "-165.42, -111.797, 2.69667, 2.5", "-166.412, -112.606, 2.39287, 1.92", "-167.839, -113.939, 1.88532, 1.11", "-168.449, -114.588, 1.64094, 0.96", "-169.283, -115.56, 1.2901, 1.4", "-170.353, -116.87, 0.781079, 1.69" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-10.5141, -107.595, -3.48925, 0.37", "-9.65738, -109.569, -2.83423, 0.37", "-9.41973, -110.078, -2.68969, 0.52", "-9.12579, -110.702, -2.53982, 0.66", "-8.79698, -111.412, -2.38571, 0.37", "-8.55137, -111.937, -2.27959, 0.44", "-8.26496, -112.548, -2.16589, 0.44", "-7.92538, -113.275, -2.10682, 0.29", "-7.58071, -113.958, -2.05189, 0.29", "-7.24265, -114.531, -2.01202, 0.59", "-6.90204, -115.023, -1.99631, 0.59", "-6.48749, -115.537, -2.00162, 0.37", "-6.04144, -116.021, -2.03123, 0.66", "-5.60672, -116.429, -2.07641, 0.52", "-4.94519, -116.974, -2.17072, 0.37", "-4.44002, -117.356, -2.26072, 0.37", "-3.68235, -117.919, -2.41909, 0.37", "-2.9474, -118.459, -2.59282, 1.03", "-2.41523, -118.855, -2.73347, 1.18", "-1.91624, -119.235, -2.88298, 0.81", "-1.52488, -119.542, -3.01269, 0.52", "-0.792818, -120.119, -3.25651, 0.52", "-0.0989018, -120.689, -3.49108, 0.59", "0.500668, -121.227, -3.72004, 0.59", "0.984032, -121.712, -3.92348, 0.81", "1.37422, -122.133, -4.09725, 0.81", "1.79965, -122.623, -4.29821, 0.66", "2.10361, -122.997, -4.45171, 0.29", "2.79333, -123.906, -4.81788, 0.52", "3.37858, -124.699, -5.13542, 1.03", "3.58687, -124.988, -5.2537, 1.47", "3.96829, -125.495, -5.47105, 1.62", "4.48503, -126.108, -5.75992, 1.03", "4.99349, -126.636, -6.02032, 0.29", "5.49476, -127.096, -6.25176, 0.29", "6.08409, -127.589, -6.52013, 0.37", "6.69837, -128.096, -6.79888, 0.66", "7.01639, -128.354, -6.93831, 0.81", "7.524, -128.751, -7.14474, 0.96", "7.91029, -129.045, -7.29105, 0.44", "8.21985, -129.276, -7.39735, 0.29", "8.82604, -129.713, -7.57974, 0.29", "9.28368, -130.079, -7.71094, 0.59", "9.72161, -130.475, -7.831, 0.74", "10.0711, -130.827, -7.92402, 0.74", "10.537, -131.352, -8.04813, 0.74", "10.9064, -131.813, -8.15237, 0.44", "11.3927, -132.473, -8.29674, 0.29", "11.677, -132.888, -8.38826, 0.66", "12.0276, -133.416, -8.51119, 0.88", "12.354, -133.903, -8.63022, 0.96", "12.8263, -134.586, -8.79439, 0.66", "13.3149, -135.286, -8.95816, 0.37", "13.8973, -136.075, -9.14471, 0.74", "14.2231, -136.502, -9.24662, 0.81", "14.6, -137.002, -9.3608, 0.37", "15.1031, -137.7, -9.50975, 0.37", "15.5341, -138.327, -9.63616, 0.37", "15.8906, -138.865, -9.74281, 0.37", "16.1751, -139.315, -9.8316, 0.52", "16.5127, -139.847, -9.94502, 0.52", "16.8594, -140.388, -10.0722, 0.37", "17.2119, -140.957, -10.2163, 0.37", "17.6259, -141.606, -10.3849, 0.81", "17.8787, -141.962, -10.485, 0.88", "18.314, -142.505, -10.6534, 0.59", "18.6943, -142.938, -10.7963, 0.37", "19.0858, -143.348, -10.9406, 0.37", "19.5896, -143.842, -11.1193, 0.44", "20.63, -144.786, -11.4753, 0.44", "21.3159, -145.337, -11.7026, 1.18", "21.8356, -145.721, -11.869, 1.47", "22.4104, -146.122, -12.0601, 1.47", "23.2544, -146.707, -12.3544, 1.18", "23.9048, -147.19, -12.6014, 0.29", "24.3054, -147.519, -12.7696, 0.29", "24.6057, -147.786, -12.9142, 0.29", "25.1293, -148.31, -13.2213, 0.59", "25.6223, -148.878, -13.5638, 0.66", "25.8842, -149.234, -13.7823, 0.74", "26.1465, -149.649, -14.0247, 0.59", "26.4294, -150.162, -14.3032, 0.44", "26.7617, -150.817, -14.6497, 0.29", "26.9508, -151.26, -14.8629, 0.37", "27.2182, -152.005, -15.1951, 0.52", "27.3951, -152.576, -15.4134, 1.03", "27.5614, -153.173, -15.6346, 1.55", "27.7072, -153.691, -15.8185, 1.55", "28.0688, -154.998, -16.2758, 0.44", "28.3189, -155.851, -16.5888, 0.37", "28.9696, -157.751, -17.3742, 0.29", "29.1414, -158.154, -17.5623, 0.29", "29.7069, -159.191, -18.1061, 1.47", "29.9474, -159.528, -18.313, 1.92", "30.4502, -160.065, -18.7208, 2.06", "31.2212, -160.722, -19.367, 0.81", "32.2293, -161.412, -20.267, 0.29", "32.8627, -161.817, -20.8586, 0.29", "33.6954, -162.327, -21.6244, 0.44", "34.1094, -162.583, -21.9794, 0.52", "35.1064, -163.218, -22.7565, 0.29", "35.8551, -163.714, -23.2579, 0.88", "36.3031, -164.022, -23.4892, 0.74", "37.3936, -164.824, -23.8437, 0.29", "38.1818, -165.417, -23.9661, 0.29", "38.9659, -166.015, -24.0038, 0.59", "39.4798, -166.413, -23.9848, 0.66", "40.4579, -167.189, -23.9147, 0.29", "41.4326, -168.005, -23.8494, 0.29", "42.0607, -168.59, -23.8419, 0.29", "42.627, -169.197, -23.8651, 1.03", "43.0309, -169.672, -23.91, 1.47", "43.3889, -170.13, -23.9828, 1.18", "44.0312, -171.023, -24.1757, 0.22", "44.599, -171.847, -24.3768, 0.22", "45.3177, -172.911, -24.664, 0.22", "45.6251, -173.348, -24.788, 0.52", "46.1567, -174.079, -25.0043, 0.29", "46.6602, -174.754, -25.2165, 0.29", "46.9794, -175.16, -25.3609, 0.88", "47.4214, -175.706, -25.5397, 0.88", "48.0756, -176.533, -25.7857, 0.29", "48.3761, -176.916, -25.8813, 0.29", "48.9119, -177.577, -25.9957, 0.96", "49.2959, -178.014, -26.0293, 1.4", "49.7088, -178.458, -26.0293, 1.77", "49.971, -178.719, -26.0122, 1.77", "51.0045, -179.684, -25.9234, 0.22", "52.0715, -180.609, -25.8001, 0.22", "52.9134, -181.278, -25.7074, 0.88", "53.2927, -181.566, -25.6756, 1.33", "53.6798, -181.851, -25.664, 1.33", "54.5612, -182.481, -25.6642, 0.22", "55.6484, -183.238, -25.7107, 0.22", "56.7941, -184.053, -25.8232, 0.22", "57.8253, -184.828, -25.9832, 0.22", "58.4215, -185.301, -26.0978, 0.74", "58.7403, -185.572, -26.1714, 0.88", "59.1089, -185.918, -26.2774, 0.52", "59.7439, -186.617, -26.5126, 0.22", "60.0577, -187.016, -26.6444, 0.88", "60.3996, -187.488, -26.7853, 1.33", "60.6697, -187.881, -26.8897, 1.33", "61.2965, -188.842, -27.1149, 0.29", "62.0235, -190.021, -27.3437, 0.29", "62.3754, -190.608, -27.4316, 0.44", "62.6825, -191.124, -27.4877, 0.59", "62.9637, -191.598, -27.5221, 0.59", "63.4163, -192.356, -27.5526, 0.22", "63.8765, -193.134, -27.568, 0.22", "64.1627, -193.609, -27.5777, 0.74", "64.335, -193.892, -27.5894, 0.88", "64.564, -194.253, -27.6212, 0.88", "65.0227, -194.959, -27.6892, 0.22", "65.8356, -196.156, -27.834, 0.22", "66.1976, -196.68, -27.9176, 0.52", "66.4315, -197.022, -27.984, 0.66", "66.7963, -197.553, -28.0999, 0.44", "72.1052, -202.923, -31.0261, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-10.5141, -107.595, -3.48925, 2.28", "-11.0873, -108.698, -3.29388, 2.28", "-11.6306, -109.64, -3.07268, 1.62", "-12.3262, -110.759, -2.80186, 1.33", "-13.0224, -111.81, -2.56272, 0.88", "-13.363, -112.294, -2.46091, 0.88", "-13.903, -113.004, -2.32182, 1.03", "-14.979, -114.27, -2.09517, 1.03", "-15.9065, -115.236, -1.9436, 0.96", "-16.6416, -115.932, -1.86771, 0.88", "-17.2684, -116.525, -1.84553, 1.11", "-17.9509, -117.243, -1.881, 1.33", "-18.4822, -117.929, -1.96759, 1.55", "-18.9017, -118.632, -2.10108, 1.25", "-19.2, -119.343, -2.25949, 0.96", "-19.4471, -120.324, -2.48537, 0.88", "-19.6184, -121.545, -2.77713, 0.88", "-19.7119, -122.851, -3.08324, 0.88", "-19.7519, -124.001, -3.34253, 1.03", "-19.7602, -125.077, -3.57095, 1.03", "-19.7566, -126.343, -3.81238, 1.03", "-19.7441, -127.498, -4.00478, 1.25", "-19.7108, -128.83, -4.18317, 1.55", "-19.6602, -129.848, -4.28375, 1.55", "-19.5442, -131.253, -4.38065, 1.33", "-19.4236, -132.402, -4.43562, 1.33", "-19.3187, -133.428, -4.47119, 1.11", "-19.2022, -134.524, -4.45883, 1.11", "-19.1006, -135.731, -4.40495, 0.96", "-19.0586, -136.627, -4.34211, 0.96", "-19.0509, -137.924, -4.20403, 0.88", "-19.0948, -139.635, -3.98009, 0.88", "-19.1722, -141.118, -3.74847, 1.03", "-19.2702, -142.437, -3.5138, 1.25", "-19.3901, -143.691, -3.27279, 1.33", "-19.5011, -144.679, -3.07336, 1.62", "-19.6072, -145.693, -2.85445, 2.5", "-19.6446, -146.244, -2.73645, 2.8", "-19.6742, -146.927, -2.6232, 3.02", "-19.6729, -147.567, -2.51113, 3.02", "-19.667, -147.996, -2.43807, 3.32" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-1.08063, -51.859, -8.78357, 0.81", "-1.3974, -53.4642, -8.70683, 0.81", "-1.694, -54.5454, -8.59876, 0.66", "-2.10657, -55.7542, -8.44981, 0.66", "-2.59049, -57.0205, -8.28446, 0.52", "-2.79192, -57.5264, -8.21835, 0.52", "-3.32647, -58.8593, -8.04847, 0.74", "-3.85313, -60.2152, -7.81618, 0.74", "-4.32366, -61.3367, -7.63111, 0.88", "-4.88022, -62.5522, -7.45518, 0.59", "-5.25121, -63.3439, -7.37283, 1.03", "-5.58967, -64.1208, -7.30351, 1.25", "-5.91783, -65.034, -7.23379, 1.03", "-6.25608, -66.213, -7.15968, 0.66", "-6.50729, -67.1746, -7.10685, 0.66", "-6.76647, -68.1667, -7.06846, 0.81", "-7.05461, -69.3277, -7.06008, 0.81", "-7.26148, -70.2987, -7.10152, 0.66", "-7.42365, -71.3265, -7.20049, 0.52", "-7.49623, -71.9361, -7.30159, 0.52", "-7.57805, -72.6829, -7.44812, 0.52", "-7.70382, -73.7468, -7.68474, 0.66", "-7.83723, -74.7128, -7.90811, 0.66", "-8.00313, -75.7334, -8.15163, 0.59", "-8.2126, -76.8526, -8.4055, 1.18", "-8.38554, -77.8275, -8.6174, 1.55", "-8.57031, -78.7601, -8.79807, 1.99", "-8.87641, -79.8889, -8.98164, 2.73", "-9.16554, -80.7234, -9.09162, 2.87", "-9.48369, -81.5015, -9.19041, 3.02" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-1.08063, -51.859, -8.78357, 0.52", "-0.685815, -53.0518, -10.0769, 0.52", "-0.596412, -53.3337, -10.3498, 0.52", "-0.274997, -54.2644, -11.2576, 0.52", "1.0493E-4, -54.9532, -11.9454, 0.66", "0.193505, -55.3743, -12.3557, 0.66", "0.380541, -55.7293, -12.6999, 0.44", "0.598487, -56.2205, -13.1621, 0.88", "0.797157, -56.683, -13.5585, 1.33", "1.02567, -57.1817, -13.952, 1.47", "1.27261, -57.7581, -14.474, 1.03", "1.51475, -58.6555, -15.3724, 0.44", "1.47389, -59.2047, -15.9972, 0.44", "1.20926, -59.8346, -16.8697, 0.37", "0.91821, -60.2906, -17.6061, 0.37", "0.513157, -60.8732, -18.7149, 0.37", "0.253999, -61.2523, -19.5625, 0.74", "0.105257, -61.5083, -20.2097, 0.96", "-0.0233777, -61.8632, -21.1113, 0.96", "-0.171777, -62.5074, -22.6996, 0.44", "-0.204444, -62.9515, -23.7163, 1.33", "-0.185465, -63.5636, -25.0012, 1.55", "-0.153711, -64.1284, -26.1223, 1.33", "-0.08563, -64.9019, -27.53, 0.81", "-0.0388612, -65.2346, -28.0761, 1.25", "0.0525531, -65.6482, -28.6764, 0.88", "0.158046, -66.1153, -29.2562, 0.37", "0.255441, -66.529, -29.6823, 0.81", "0.355925, -66.9739, -30.0851, 1.03", "0.430331, -67.242, -30.3034, 1.03", "0.731273, -68.1712, -31.0351, 0.29", "0.901945, -68.6434, -31.3877, 0.29", "1.1614, -69.2552, -31.8195, 1.84", "1.42277, -69.7695, -32.192, 2.14", "2.17101, -71.0356, -33.1766, 0.29", "2.56903, -71.6145, -33.6527, 0.81", "2.98411, -72.1331, -34.1006, 0.81", "3.42327, -72.6146, -34.5536, 0.52", "4.02553, -73.2056, -35.1828, 1.25", "4.4186, -73.5633, -35.6054, 1.4", "5.42962, -74.4464, -36.692, 0.22", "6.05835, -74.9841, -37.335, 0.22", "6.7759, -75.5998, -38.0327, 1.4", "7.22773, -76.0108, -38.451, 2.21", "7.43689, -76.2156, -38.6284, 2.21", "8.80707, -77.668, -39.6939, 0.22", "9.1759, -78.0783, -39.9693, 0.74", "9.50077, -78.4593, -40.2192, 1.03", "10.0231, -79.1208, -40.633, 0.59", "11.2392, -80.7566, -41.6152, 0.22", "12.7727, -82.8838, -42.8992, 0.22", "13.3013, -83.64, -43.3792, 0.81", "13.6913, -84.1987, -43.7467, 0.96", "14.9487, -86.0188, -44.9822, 0.22", "15.7274, -87.1415, -45.7962, 0.22", "16.15, -87.7611, -46.2831, 0.88", "16.5592, -88.3611, -46.8004, 0.88", "17.7047, -90.0364, -48.3002, 0.15", "18.5812, -91.2598, -49.3764, 0.15", "19.0963, -91.9504, -49.9977, 0.15", "19.5657, -92.58, -50.554, 1.62", "19.8593, -92.9867, -50.8935, 1.92", "20.0961, -93.3138, -51.1424, 1.92", "21.6432, -95.4927, -52.6771, 0.22", "21.9788, -95.9588, -52.9825, 0.66", "22.235, -96.3214, -53.208, 0.88", "22.4977, -96.6911, -53.4408, 0.88", "23.3167, -97.8974, -54.2977, 0.15", "23.8891, -98.8744, -55.0975, 0.15", "24.1698, -99.4702, -55.6355, 0.81", "24.3257, -99.8971, -56.0239, 1.03", "24.4295, -100.285, -56.3766, 1.03", "24.64, -101.593, -57.5747, 0.22", "24.7057, -103.016, -58.8988, 0.22", "24.7018, -103.596, -59.4692, 0.22", "24.6744, -104.434, -60.338, 1.03", "24.6614, -104.87, -60.7941, 1.62", "24.6446, -105.309, -61.2798, 1.62", "24.6232, -106.049, -62.1529, 1.03", "24.6006, -107.561, -64.0331, 0.22", "24.5707, -108.266, -65.0044, 0.44", "24.5631, -108.653, -65.5687, 0.44", "24.5575, -109.506, -66.8248, 0.66", "24.5679, -109.935, -67.4427, 0.96", "24.5953, -110.431, -68.1451, 0.37", "24.7396, -112.021, -70.3208, 0.66", "24.7857, -112.347, -70.7586, 0.66", "24.9811, -113.531, -72.3663, 0.22", "25.12, -114.156, -73.1867, 0.22", "25.2698, -114.712, -73.9064, 0.81", "25.4492, -115.211, -74.5419, 0.96", "25.6131, -115.536, -74.8672, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "25.0421, 215.595, -23.2781, 0.37", "27.2011, 214.511, -21.0584, 0.37", "27.6417, 214.29, -20.6055, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "25.0421, 215.595, -23.2781, 0.22", "26.1137, 218.264, -23.0636, 0.22", "26.6666, 219.716, -23.0177, 0.22", "27.0929, 220.865, -23.0107, 0.74", "27.2428, 221.291, -23.014, 0.74", "27.937, 223.264, -23.0293, 0.15", "28.3861, 224.54, -23.0392, 0.15", "28.7333, 225.466, -23.151, 0.66", "28.9021, 226.035, -23.2084, 0.88", "29.0726, 226.684, -23.2404, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-12.4017, 54.4399, 0.640665, 0.66", "-12.8952, 56.6513, 0.309327, 0.66", "-13.0078, 57.4912, 0.216315, 0.96", "-13.1332, 58.4779, 0.125843, 0.96", "-13.2938, 59.8273, 0.0193628, 0.59", "-13.4211, 61.0236, -0.0660136, 0.59", "-13.5479, 62.439, -0.159966, 0.59", "-13.6768, 64.5008, -0.231562, 0.59", "-13.7059, 65.4742, -0.262956, 0.52", "-13.7164, 66.9291, -0.305278, 0.88", "-13.7254, 67.9831, -0.343998, 1.11", "-13.7639, 69.2394, -0.405302, 1.11", "-13.8292, 70.6859, -0.47329, 0.74", "-13.933, 72.2019, -0.540904, 0.74", "-14.086, 74.1421, -0.619693, 0.74", "-14.2197, 75.4795, -0.680546, 0.52", "-14.3957, 76.9081, -0.765493, 0.52", "-14.5374, 77.936, -0.839983, 0.96", "-14.7535, 79.4514, -0.98436, 1.11", "-15.0843, 81.6963, -1.23906, 1.11", "-15.3016, 83.1701, -1.42747, 1.11", "-15.4924, 84.6402, -1.60523, 0.81", "-15.6356, 85.9332, -1.75351, 0.74", "-15.7516, 87.2819, -1.89644, 0.74", "-15.8229, 88.5481, -2.01197, 0.44", "-15.8723, 89.6206, -2.08684, 0.44", "-15.9565, 91.3884, -2.15754, 0.74", "-16.012, 92.6102, -2.17966, 0.74", "-16.0614, 93.91, -2.19201, 0.37", "-16.0716, 95.2601, -2.19905, 0.74", "-16.0662, 96.4366, -2.25328, 0.96", "-16.0514, 97.7828, -2.37336, 0.96", "-16.0316, 99.2597, -2.58718, 0.81", "-16.0028, 100.644, -2.8347, 0.52", "-15.9554, 102.088, -3.13219, 0.52", "-15.8435, 103.982, -3.55869, 1.03", "-15.7623, 104.988, -3.79782, 1.55", "-15.6801, 105.898, -4.02396, 1.69", "-15.6251, 106.49, -4.17094, 1.69", "-15.4794, 107.957, -4.50737, 0.37", "-15.346, 109.186, -4.74021, 0.44", "-15.2469, 109.829, -4.82072, 0.44", "-15.107, 110.571, -4.89196, 0.44", "-14.8461, 111.8, -4.98169, 0.29", "-14.716, 112.323, -5.01799, 0.59", "-14.453, 113.212, -5.07928, 0.44", "-14.021, 114.609, -5.17139, 0.29", "-13.6423, 115.905, -5.25027, 1.18", "-13.4518, 116.602, -5.28867, 1.18", "-13.1746, 117.649, -5.34825, 0.52", "-12.9106, 118.653, -5.40543, 0.29", "-12.5982, 119.802, -5.43696, 0.29", "-12.3312, 120.845, -5.40484, 0.29", "-12.1776, 121.529, -5.34952, 0.29", "-11.9151, 122.894, -5.18742, 0.81", "-11.7046, 124.093, -5.01188, 0.44", "-11.4821, 125.24, -4.85327, 0.22", "-11.2052, 126.398, -4.7122, 0.44", "-11.0885, 126.842, -4.65445, 0.44", "-10.8452, 127.794, -4.5252, 0.29", "-10.6452, 128.655, -4.40084, 0.29", "-10.3692, 129.829, -4.25782, 0.29", "-10.1887, 130.578, -4.1952, 0.29", "-9.94994, 131.54, -4.1271, 0.66", "-9.76082, 132.324, -4.06332, 0.66", "-9.53044, 133.312, -4.00882, 0.74", "-9.32717, 134.389, -3.94089, 0.37", "-9.19598, 135.232, -3.88188, 0.37", "-9.0222, 136.408, -3.83658, 0.52", "-8.88879, 137.294, -3.83877, 0.59", "-8.68397, 138.641, -3.86215, 0.44", "-8.53587, 139.59, -3.88866, 0.29", "-8.42309, 140.256, -3.90453, 0.29", "-8.17538, 141.728, -3.92056, 1.11", "-8.03555, 142.572, -3.91902, 1.25", "-7.93685, 143.174, -3.91075, 1.25", "-7.70797, 144.44, -3.89401, 0.66", "-7.54483, 145.193, -3.91003, 0.29", "-7.2523, 146.365, -3.95262, 0.29", "-6.96028, 147.411, -4.00308, 0.29", "-6.66791, 148.357, -4.05861, 0.29", "-6.19696, 149.77, -4.15756, 0.96", "-5.99141, 150.383, -4.21189, 1.47", "-5.83147, 150.906, -4.26636, 1.47", "-5.7491, 151.215, -4.30287, 1.47", "-5.54561, 152.117, -4.40641, 0.74", "-5.33798, 153.153, -4.51521, 0.29", "-5.15809, 154.216, -4.61587, 0.52", "-4.99032, 155.198, -4.70246, 0.74", "-4.74412, 156.447, -4.80431, 0.44", "-4.51942, 157.44, -4.88089, 0.29", "-4.34017, 158.138, -4.93314, 0.29", "-4.05166, 159.096, -5.00184, 0.66", "-3.82181, 159.78, -5.05333, 0.74", "-3.48447, 160.745, -5.12871, 0.74", "-3.11465, 161.827, -5.20434, 0.29", "-2.80424, 162.795, -5.26458, 0.29", "-2.22593, 164.743, -5.37345, 0.29", "-1.87109, 166.077, -5.37527, 0.52", "-1.6794, 166.885, -5.34292, 1.18", "-1.53583, 167.587, -5.29134, 1.4", "-1.3411, 168.73, -5.17612, 1.4", "-1.21832, 169.63, -5.06814, 0.66", "-0.95859, 171.738, -4.8066, 0.29", "-0.779213, 173.064, -4.67155, 0.29", "-0.647829, 173.861, -4.63776, 0.37", "-0.443054, 174.931, -4.65505, 0.37", "-0.200984, 176.033, -4.72368, 0.37", "0.285624, 177.979, -4.93471, 0.37", "0.883967, 180.084, -5.2831, 0.37", "1.52078, 182.124, -5.64963, 1.33", "1.86196, 183.102, -5.84908, 1.99", "2.15092, 183.876, -6.02169, 1.99", "2.27414, 184.203, -6.09887, 1.99", "2.5044, 184.808, -6.2411, 1.99", "2.99175, 186.071, -6.51331, 0.59", "3.57273, 187.54, -6.77419, 0.29", "3.99468, 188.571, -6.89812, 0.59", "4.32865, 189.369, -6.96836, 0.59", "5.0408, 191.045, -7.06621, 0.37", "5.42623, 191.977, -7.0924, 0.37", "6.02209, 193.491, -7.08783, 0.37", "6.69132, 195.317, -7.03031, 0.74", "6.93147, 196.068, -7.00367, 0.74", "7.13757, 196.846, -6.96549, 0.88", "7.36835, 197.976, -6.89886, 0.44", "7.66135, 199.93, -6.82064, 0.29", "7.75624, 200.973, -6.83462, 0.52", "7.84287, 202.903, -6.97811, 1.25", "7.85556, 203.725, -7.06206, 1.62", "7.85523, 204.263, -7.14454, 1.62", "7.84137, 205.366, -7.36567, 0.96", "7.82183, 207.006, -7.77743, 0.29", "7.83559, 207.947, -8.03832, 0.29", "7.88944, 209.093, -8.34993, 0.29", "7.95612, 210.295, -8.63759, 0.74", "7.98166, 210.842, -8.74052, 0.96", "8.00759, 211.479, -8.82691, 0.96", "8.06614, 213.094, -9.00146, 0.52", "8.14118, 215.323, -9.25412, 0.37", "8.18806, 216.853, -9.4222, 0.29", "8.2115, 218.294, -9.5873, 0.66", "8.21709, 219.26, -9.7175, 0.66", "8.20326, 221.07, -9.9969, 0.29", "8.19457, 221.969, -10.143, 0.29", "8.18175, 224.335, -10.5355, 0.29", "8.206, 226.911, -10.9554, 1.99", "8.21449, 227.496, -11.0418, 2.28", "8.22051, 228.325, -11.1431, 1.55", "8.22392, 229.237, -11.2072, 0.88", "8.21699, 230.728, -11.2226, 0.22", "8.20437, 231.428, -11.1961, 0.22", "8.17269, 232.709, -11.0984, 0.66", "8.15218, 233.519, -11.0365, 0.66", "8.12686, 234.888, -10.9471, 0.29", "8.09123, 237.079, -10.8515, 0.22", "8.10018, 238.188, -10.8202, 0.22", "8.13851, 239.361, -10.8091, 0.52", "8.25638, 240.827, -10.8328, 0.44", "8.41669, 242.103, -10.8838, 0.44", "8.65796, 243.574, -10.9838, 0.44", "9.13669, 245.853, -11.1785, 0.22", "9.53813, 247.549, -11.3358, 0.66", "9.90258, 248.922, -11.4724, 1.77", "10.1152, 249.647, -11.5481, 1.77", "10.3256, 250.297, -11.6177, 1.77", "10.6802, 251.249, -11.7212, 0.88", "11.1148, 252.31, -11.7949, 0.29", "11.4229, 253.031, -11.8172, 0.52", "12.2051, 254.9, -11.8284, 0.22", "12.6527, 255.965, -11.8407, 0.52", "13.1599, 257.164, -11.8711, 0.52", "14.2546, 259.798, -11.9713, 0.22", "15.0805, 261.811, -12.0799, 0.37", "15.6141, 263.136, -12.1562, 0.37", "16.1884, 264.61, -12.2526, 1.92", "16.4393, 265.287, -12.3074, 2.21", "16.6754, 265.987, -12.3898, 2.21", "16.9287, 266.808, -12.5887, 1.18" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-12.4017, 54.4399, 0.640665, 0.66", "-11.9176, 56.113, 0.948581, 0.66", "-11.6197, 57.1318, 1.12757, 0.81", "-11.406, 57.8899, 1.28149, 0.37", "-11.1673, 58.803, 1.47023, 0.29", "-10.7591, 60.3337, 1.77648, 0.29", "-10.4967, 61.23, 1.95793, 0.29", "-10.1907, 62.0917, 2.11433, 0.29", "-9.71036, 63.2285, 2.34727, 0.29", "-9.27974, 64.1615, 2.54793, 0.29", "-8.85044, 65.0908, 2.74728, 0.74", "-8.55273, 65.7155, 2.88997, 0.74", "-7.98549, 66.7739, 3.14199, 0.29", "-7.64939, 67.382, 3.29514, 0.37", "-6.87773, 68.7966, 3.6375, 0.37", "-6.47138, 69.5964, 3.83329, 0.37", "-6.05798, 70.5406, 4.05571, 0.37", "-5.8928, 70.9755, 4.15447, 0.37", "-5.63302, 71.7687, 4.33398, 0.22", "-5.40225, 72.5387, 4.50574, 0.22", "-5.1969, 73.1462, 4.63715, 0.66", "-4.96834, 73.877, 4.75775, 0.96", "-2.41876, 82.5953, 5.46281, 0.96", "2.00248, 90.2743, 7.99683, 0.96", "5.33038, 98.0893, 11.5457, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "30.3121, 9.51697, 7.47579, 0.66", "31.129, 8.19993, 7.0272, 0.66", "31.3595, 7.7869, 6.85708, 0.66", "31.7387, 7.1476, 6.61554, 0.88", "32.4232, 6.10984, 6.26672, 0.88", "32.9143, 5.44469, 6.07192, 0.88", "33.386, 4.89102, 5.92838, 1.03", "33.9389, 4.29266, 5.77986, 1.03", "34.7324, 3.81566, 5.7827, 0.88", "35.3598, 3.69303, 5.89877, 0.88", "35.8991, 3.64121, 6.03314, 0.88", "36.756, 3.52819, 6.26354, 0.81", "37.7485, 3.27424, 6.52306, 0.81", "38.3824, 3.00543, 6.64471, 0.81", "39.1897, 2.50721, 6.69418, 0.74", "40.0518, 1.87145, 6.67662, 0.88", "40.8174, 1.24213, 6.60292, 0.88", "41.6389, 0.486736, 6.46092, 0.52", "42.0498, 0.105328, 6.35348, 0.52", "42.5489, -0.278395, 6.18522, 0.52", "43.1867, -0.647019, 5.9577, 0.52", "43.9136, -0.934305, 5.69957, 0.74", "44.6506, -1.14814, 5.43723, 0.74", "45.5844, -1.35685, 5.10668, 0.74", "46.8178, -1.58721, 4.68678, 0.74", "47.6724, -1.7229, 4.39561, 0.74", "48.3487, -1.79964, 4.17788, 0.74", "49.0822, -1.81635, 3.96899, 0.74", "49.5119, -1.79978, 3.8724, 0.88", "50.7244, -1.67169, 3.64698, 0.88", "51.758, -1.53586, 3.48315, 0.88", "53.039, -1.38158, 3.29204, 0.66", "53.9777, -1.29188, 3.169, 0.66", "56.397, -1.09699, 2.90586, 0.59", "57.237, -1.0399, 2.82747, 0.52", "58.5087, -0.932851, 2.73631, 0.52", "59.2739, -0.833343, 2.70435, 0.52", "60.1033, -0.654254, 2.69283, 0.52", "61.0926, -0.381748, 2.70051, 0.52", "61.7537, -0.187282, 2.71788, 0.52", "62.8356, 0.083669, 2.74592, 0.52", "64.0097, 0.37553, 2.78451, 0.52", "65.1122, 0.615085, 2.81933, 0.52", "66.142, 0.758044, 2.83993, 0.52", "67.3218, 0.786314, 2.84409, 0.52", "68.139, 0.67865, 2.83544, 0.52", "68.9053, 0.48023, 2.85252, 0.52", "69.4226, 0.323787, 2.88996, 0.52", "70.0765, 0.133343, 2.96823, 0.52", "71.4026, -0.197599, 3.218, 0.29", "73.7727, -0.647065, 3.80816, 0.29", "75.9208, -0.934664, 4.43526, 0.29", "77.0156, -1.01199, 4.80811, 0.29", "77.8012, -1.03685, 5.09805, 0.44", "78.6327, -1.01023, 5.44971, 0.59", "79.1555, -0.942705, 5.73815, 0.59", "80.0026, -0.586978, 6.41659, 0.59", "80.4449, -0.21744, 6.85411, 0.59", "89.2874, -2.63676, 7.37372, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "30.3121, 9.51697, 7.47579, 1.11", "31.913, 9.06541, 7.64567, 1.11", "32.8956, 8.66357, 7.75498, 1.11", "34.0355, 8.23332, 7.77165, 1.25", "34.9289, 7.97673, 7.73986, 1.47", "36.1572, 7.75072, 7.65849, 1.4", "37.2594, 7.64518, 7.56122, 1.4", "38.5115, 7.56993, 7.38769, 1.18", "40.2338, 7.75099, 7.04951, 1.18", "41.4322, 8.10217, 6.74276, 1.18", "42.4625, 8.48533, 6.44785, 1.18", "43.075, 8.71834, 6.27105, 0.88", "43.6849, 8.89526, 6.11157, 0.88", "44.6344, 8.9869, 5.91294, 0.88", "46.0688, 8.8093, 5.70486, 1.11", "47.1513, 8.52536, 5.56966, 1.11", "48.2437, 8.15959, 5.44009, 1.11", "49.4751, 7.68301, 5.3054, 1.25", "50.7273, 7.13835, 5.18274, 1.33", "51.3044, 6.86354, 5.13578, 1.47", "52.2556, 6.42525, 5.07884, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-170.353, -116.87, 0.781079, 0.59", "-170.41, -118.624, -0.125239, 0.59", "-170.417, -119.375, -0.4773, 0.59", "-170.398, -120.04, -0.768486, 0.52", "-170.36, -120.813, -1.08416, 0.52", "-170.339, -121.656, -1.40797, 0.88", "-170.32, -122.593, -1.75556, 1.03", "-170.306, -123.169, -1.91866, 1.03", "-170.249, -124.189, -2.19588, 1.03", "-170.17, -125.069, -2.42855, 0.29", "-170.118, -125.698, -2.58948, 0.29", "-170.09, -126.219, -2.71626, 0.29", "-170.091, -127.204, -2.94979, 0.59", "-170.129, -128.023, -3.09627, 0.74", "-170.186, -128.616, -3.17158, 0.88", "-170.262, -129.193, -3.22808, 0.88", "-170.343, -129.734, -3.26203, 0.88", "-170.491, -130.461, -3.28478, 0.81", "-170.871, -132.032, -3.31349, 0.37", "-171.073, -132.883, -3.3223, 1.03", "-171.271, -133.739, -3.29672, 1.33", "-171.454, -134.528, -3.25055, 1.33", "-171.708, -135.541, -3.16964, 1.03", "-171.939, -136.393, -3.09325, 0.74", "-172.158, -137.126, -3.04575, 0.37", "-172.449, -138.107, -2.92968, 0.74", "-172.625, -138.675, -2.84648, 0.74", "-172.83, -139.358, -2.79231, 0.59", "-172.967, -139.868, -2.79015, 0.37", "-173.149, -140.59, -2.86142, 0.37", "-173.463, -141.734, -3.12269, 0.66", "-173.716, -142.518, -3.39551, 0.74", "-174.206, -143.816, -3.93793, 0.52", "-174.423, -144.35, -4.18986, 0.52", "-174.725, -144.978, -4.49847, 1.33", "-175.123, -145.752, -4.90167, 1.55", "-175.649, -146.777, -5.40714, 1.99", "-175.975, -147.404, -5.66259, 2.21", "-176.407, -148.199, -5.92183, 1.99", "-176.953, -149.16, -6.22365, 1.11", "-177.54, -150.258, -6.58607, 0.37", "-177.983, -151.195, -6.90797, 1.11", "-178.189, -151.669, -7.07903, 1.25", "-178.449, -152.28, -7.30066, 1.25", "-179.041, -153.614, -7.82275, 0.29", "-179.427, -154.457, -8.174, 0.29", "-179.817, -155.228, -8.49323, 0.44", "-180.241, -156.026, -8.8275, 0.59", "-180.747, -156.97, -9.20939, 0.88", "-181.172, -157.759, -9.51177, 0.96", "-181.627, -158.525, -9.77313, 0.66", "-182.234, -159.45, -10.027, 0.37", "-182.696, -160.113, -10.1889, 0.29", "-183.197, -160.816, -10.3162, 0.29", "-183.627, -161.441, -10.3988, 0.29", "-184.215, -162.293, -10.4699, 0.29", "-185.099, -163.466, -10.5461, 0.74", "-185.78, -164.288, -10.545, 1.03", "-186.622, -165.255, -10.4936, 2.28", "-187.282, -165.964, -10.422, 2.8", "-187.917, -166.636, -10.3492, 3.09", "-188.941, -167.752, -10.2477, 1.84", "-190.129, -169.028, -10.1354, 0.29", "-190.71, -169.688, -10.0847, 0.29", "-191.471, -170.622, -10.0471, 0.29", "-192.235, -171.646, -10.0233, 0.29", "-192.749, -172.495, -10.0277, 0.88", "-193.143, -173.255, -10.0521, 1.11", "-193.454, -173.902, -10.1041, 0.81", "-193.704, -174.461, -10.1523, 0.52", "-194.081, -175.402, -10.2401, 0.29", "-194.499, -176.52, -10.341, 0.29", "-194.831, -177.476, -10.4304, 0.29", "-195.018, -177.992, -10.478, 0.29", "-195.372, -179.022, -10.575, 0.81", "-195.67, -179.978, -10.6695, 1.11", "-195.881, -180.727, -10.7478, 0.88", "-196.176, -181.791, -10.8626, 0.29", "-196.528, -183.089, -11.0012, 0.29", "-196.886, -184.238, -11.1577, 0.29", "-197.027, -184.654, -11.2236, 0.29", "-197.366, -185.642, -11.4057, 0.74", "-197.615, -186.344, -11.5524, 0.74", "-197.957, -187.331, -11.7776, 0.44", "-198.342, -188.473, -12.0581, 0.29", "-198.542, -189.038, -12.2016, 0.29", "-198.802, -189.834, -12.3737, 0.29", "-199.056, -190.804, -12.5459, 0.29", "-199.172, -191.372, -12.6155, 0.74", "-199.267, -191.906, -12.6509, 0.74", "-199.419, -192.884, -12.6536, 0.44", "-199.607, -193.994, -12.6328, 0.29", "-199.776, -194.964, -12.578, 0.74", "-199.901, -195.646, -12.5304, 1.11", "-200.027, -196.22, -12.4887, 1.69", "-200.14, -196.701, -12.4585, 1.92", "-200.308, -197.393, -12.4316, 1.92", "-200.555, -198.424, -12.4383, 1.62", "-200.858, -199.667, -12.472, 0.29", "-201.095, -200.658, -12.5201, 0.22", "-201.311, -201.474, -12.5673, 0.22", "-201.623, -202.571, -12.6499, 0.59", "-201.904, -203.476, -12.734, 0.74", "-202.123, -204.105, -12.7947, 0.74", "-202.429, -204.916, -12.8589, 0.44", "-202.724, -205.606, -12.9024, 0.29", "-203.073, -206.3, -12.9068, 0.29", "-203.894, -207.708, -12.8219, 0.44", "-204.38, -208.433, -12.7627, 0.59", "-204.872, -209.105, -12.7033, 0.59", "-205.462, -209.867, -12.6581, 0.52", "-206.379, -210.995, -12.625, 1.33", "-207.144, -211.898, -12.6296, 2.06", "-207.869, -212.76, -12.6755, 2.21", "-208.402, -213.441, -12.7546, 2.21", "-209.183, -214.539, -12.9489, 0.81", "-209.667, -215.322, -13.1468, 0.29", "-210.043, -216.022, -13.3767, 0.44", "-210.281, -216.554, -13.5665, 0.44", "-210.581, -217.337, -13.8447, 0.29", "-210.807, -217.92, -14.0678, 0.29", "-211.094, -218.643, -14.3432, 0.29", "-211.305, -219.115, -14.5159, 0.74", "-211.524, -219.549, -14.6485, 0.88", "-211.806, -220.066, -14.7757, 0.88", "-212.258, -220.919, -14.931, 0.29", "-212.698, -221.791, -15.0194, 0.29", "-213.095, -222.694, -15.036, 0.29", "-213.518, -223.801, -15.0113, 0.52", "-213.702, -224.325, -14.9818, 0.52", "-214.003, -225.295, -14.8922, 0.29", "-214.165, -225.976, -14.7956, 0.29", "-214.4, -227.375, -14.5508, 0.59", "-214.501, -228.178, -14.3811, 0.29", "-214.568, -228.712, -14.2412, 0.29", "-214.691, -229.458, -14.0024, 0.74", "-214.956, -230.449, -13.6103, 0.88", "-215.258, -231.193, -13.2711, 0.29", "-215.634, -231.875, -12.9153, 0.29", "-216.196, -232.72, -12.4706, 0.96", "-216.677, -233.373, -12.1614, 1.11", "-217.314, -234.172, -11.8711, 1.11", "-218.011, -235.059, -11.6484, 0.29", "-218.467, -235.707, -11.5454, 0.22", "-218.837, -236.341, -11.5154, 0.44", "-219.195, -237.077, -11.5499, 0.44", "-219.693, -238.292, -11.7179, 0.22", "-219.977, -239.039, -11.874, 0.22", "-220.176, -239.586, -12.0263, 0.22", "-220.405, -240.201, -12.2221, 0.59", "-220.569, -240.642, -12.3671, 0.74", "-221.074, -241.931, -12.8286, 0.29", "-221.349, -242.611, -13.0863, 0.29", "-221.701, -243.456, -13.4146, 0.44", "-222.023, -244.264, -13.7317, 0.44", "-222.427, -245.342, -14.138, 0.52", "-222.654, -245.962, -14.3578, 0.96", "-222.885, -246.585, -14.5558, 1.4", "-223.141, -247.215, -14.7513, 1.4", "-223.787, -248.695, -15.1015, 0.29", "-224.452, -250.156, -15.3444, 0.22", "-224.791, -250.88, -15.409, 0.37", "-225.34, -252.048, -15.4291, 0.37", "-225.898, -253.207, -15.3805, 0.29", "-226.663, -254.736, -15.2303, 0.74", "-227.085, -255.524, -15.1064, 1.11", "-227.574, -256.358, -14.9502, 1.25", "-228.099, -257.176, -14.7959, 1.11", "-228.612, -257.92, -14.6659, 0.59", "-229.298, -258.866, -14.543, 0.29", "-229.722, -259.419, -14.5359, 0.29", "-230.527, -260.461, -14.5747, 0.22", "-231.063, -261.169, -14.6268, 0.22", "-231.363, -261.571, -14.6619, 0.66", "-231.825, -262.203, -14.7191, 0.66", "-232.756, -263.526, -14.8151, 0.29", "-233.318, -264.327, -14.8578, 0.29", "-233.909, -265.128, -14.8839, 0.29", "-234.53, -265.917, -14.901, 0.66", "-235.031, -266.518, -14.911, 0.66", "-235.838, -267.439, -14.9253, 0.22", "-236.396, -268.054, -14.9391, 0.22", "-237.338, -269.081, -14.9768, 0.22", "-238.993, -270.887, -15.0996, 0.22", "-239.494, -271.464, -15.1717, 0.22", "-240.017, -272.115, -15.289, 1.11", "-240.303, -272.514, -15.3914, 1.11", "-240.438, -272.745, -15.4622, 1.11", "-240.712, -273.348, -15.6713, 0.66", "-241.06, -274.344, -16.0563, 0.22", "-241.229, -274.957, -16.2968, 0.52", "-241.508, -276.371, -16.8551, 0.22", "-241.724, -277.524, -17.3003, 0.22", "-241.816, -278.018, -17.4853, 0.59", "-241.931, -278.649, -17.7104, 0.59", "-242.094, -279.562, -18.0382, 0.52", "-242.32, -280.906, -18.5303, 0.22", "-242.437, -281.693, -18.825, 0.22", "-242.488, -282.163, -19.004, 0.22", "-242.534, -282.696, -19.2106, 0.66", "-242.555, -283.478, -19.4657, 0.81", "-242.49, -284.361, -19.6862, 0.59", "-242.193, -285.668, -19.8734, 1.25", "-241.916, -286.379, -19.9188, 1.69", "-241.711, -286.739, -19.9157, 1.92", "-240.787, -287.929, -19.8223, 1.18", "-239.847, -288.856, -19.6647, 0.22", "-238.71, -289.733, -19.4591, 0.22", "-237.926, -290.231, -19.319, 0.22", "-236.939, -290.792, -19.1759, 0.22", "-236.226, -291.173, -19.1057, 0.66", "-235.702, -291.447, -19.0946, 0.66", "-234.288, -292.176, -19.1307, 0.22", "-233.752, -292.457, -19.1671, 0.37", "-233.213, -292.797, -19.2193, 0.37", "-232.782, -293.127, -19.2647, 0.22", "-232.132, -293.701, -19.3432, 0.22", "-236.426, -303.042, -20.3552, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-170.353, -116.87, 0.781079, 0.37", "-171.584, -116.649, 1.22439, 0.37", "-172.108, -116.574, 1.38352, 0.37", "-173.245, -116.443, 1.64143, 0.29", "-174.117, -116.368, 1.80168, 0.44", "-174.963, -116.318, 1.9316, 0.66", "-175.453, -116.301, 1.98981, 0.81", "-175.883, -116.298, 2.01349, 0.81", "-177.23, -116.316, 2.02165, 0.22", "-177.656, -116.328, 2.00076, 0.22", "-178.422, -116.354, 1.96075, 0.74", "-179.052, -116.372, 1.92337, 0.88", "-180.105, -116.403, 1.83138, 0.22", "-180.544, -116.402, 1.75919, 0.22", "-180.956, -116.399, 1.65951, 0.22", "-181.429, -116.398, 1.51836, 0.74", "-181.936, -116.415, 1.33022, 0.88", "-182.502, -116.477, 1.04612, 0.88", "-183.775, -116.735, 0.222385, 0.22", "-184.231, -116.853, -0.111864, 0.22", "-184.61, -116.959, -0.415195, 0.74", "-185.094, -117.11, -0.872378, 0.74", "-186.092, -117.449, -1.7533, 0.29", "-186.401, -117.558, -2.0061, 0.29", "-186.901, -117.744, -2.38212, 0.88", "-187.497, -117.941, -2.79474, 1.03", "-189.281, -118.434, -3.9316, 0.22", "-190.965, -118.854, -4.91367, 0.22", "-191.64, -119.005, -5.2559, 0.22", "-192.039, -119.09, -5.44409, 1.11", "-192.519, -119.197, -5.65301, 1.11", "-193.026, -119.313, -5.82809, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-19.667, -147.996, -2.43807, 0.81", "-18.622, -148.526, -2.33079, 0.81", "-17.7735, -148.907, -2.25808, 0.52", "-16.5601, -149.408, -2.17092, 0.52", "-16.0293, -149.634, -2.13735, 0.37", "-14.9682, -150.101, -2.0751, 0.37", "-14.5469, -150.293, -2.05111, 0.66", "-14.1689, -150.465, -2.04228, 0.88", "-13.8553, -150.611, -2.0319, 0.88", "-13.055, -151.063, -2.00443, 0.59", "-12.3466, -151.551, -1.97776, 0.66", "-11.6429, -152.11, -1.94631, 0.74", "-11.2127, -152.449, -1.92592, 0.74", "-10.8785, -152.692, -1.90951, 0.52", "-10.3322, -153.045, -1.88501, 0.29", "-9.74857, -153.345, -1.8512, 0.96", "-9.21869, -153.575, -1.81222, 1.03", "-8.87033, -153.714, -1.77843, 1.03", "-8.08114, -154.012, -1.68263, 0.66", "-7.74944, -154.141, -1.64368, 0.52", "-6.98734, -154.449, -1.55587, 0.59", "-6.23274, -154.796, -1.4698, 0.59", "-5.5389, -155.16, -1.39501, 0.52", "-4.96472, -155.5, -1.33859, 0.52", "-4.36291, -155.893, -1.28599, 0.96", "-3.98611, -156.144, -1.264, 1.18", "-3.35878, -156.55, -1.24656, 0.66", "-2.61701, -156.991, -1.23314, 0.37", "-2.15188, -157.24, -1.22842, 0.37", "-1.18687, -157.702, -1.22472, 0.88", "-0.335343, -158.094, -1.1991, 1.03", "0.310763, -158.392, -1.16936, 0.81", "0.904509, -158.667, -1.12779, 0.52", "1.59917, -158.991, -1.06139, 0.52", "2.14017, -159.255, -0.993106, 0.52", "2.88226, -159.674, -0.877096, 0.52", "3.50428, -160.071, -0.762613, 1.33", "3.8916, -160.346, -0.686017, 1.69", "4.33436, -160.703, -0.592899, 1.69", "5.0774, -161.342, -0.493286, 1.11", "5.89036, -162.051, -0.443555, 0.44", "6.42334, -162.492, -0.46106, 0.44", "6.85863, -162.836, -0.503503, 0.29", "7.36057, -163.213, -0.59248, 0.29", "8.50917, -164.022, -0.864176, 1.03", "8.84683, -164.244, -0.96308, 1.4", "9.21414, -164.488, -1.09058, 1.4", "10.3911, -165.342, -1.55092, 0.22", "11.0145, -165.82, -1.79937, 0.52", "11.3204, -166.065, -1.91648, 0.52", "11.8422, -166.53, -2.1005, 0.29", "12.5721, -167.202, -2.36291, 0.29", "13.0179, -167.619, -2.51485, 0.29", "13.4682, -168.063, -2.67181, 0.66", "13.7969, -168.396, -2.76659, 0.81", "14.0347, -168.639, -2.82796, 0.81", "14.431, -169.017, -2.90682, 0.59", "14.8808, -169.404, -2.98428, 0.29", "15.306, -169.787, -3.0354, 0.29", "15.7775, -170.287, -3.06563, 0.66", "16.1262, -170.729, -3.05127, 0.66", "16.569, -171.409, -2.97308, 0.29", "16.8037, -171.848, -2.88956, 0.29", "17.1739, -172.651, -2.69213, 0.66", "17.4146, -173.221, -2.51756, 0.66", "17.6924, -173.966, -2.2538, 0.44", "17.9349, -174.726, -1.9623, 1.47", "18.1009, -175.338, -1.71888, 1.84", "18.1884, -175.698, -1.57762, 1.84", "18.2414, -175.922, -1.50131, 1.84", "18.3853, -176.493, -1.31639, 1.33", "18.5819, -177.182, -1.10663, 0.52", "18.6936, -177.545, -0.999809, 0.52", "18.8484, -178.037, -0.855246, 0.52", "19.0951, -178.824, -0.617041, 0.29", "19.2265, -179.23, -0.48809, 0.29", "19.4254, -179.81, -0.288925, 0.29", "19.6217, -180.343, -0.0925485, 0.44", "19.9268, -181.059, 0.181756, 0.44", "20.2252, -181.641, 0.401566, 0.44", "20.4678, -182.048, 0.543787, 1.33", "20.7608, -182.514, 0.677926, 1.84", "21.0568, -182.927, 0.78262, 1.84", "21.5686, -183.566, 0.93365, 0.96", "22.2544, -184.347, 1.10369, 0.22", "22.8475, -184.977, 1.23068, 0.22", "23.6983, -185.825, 1.38704, 0.22", "24.2173, -186.301, 1.47276, 0.22", "24.8128, -186.789, 1.56225, 0.22", "25.3446, -187.18, 1.62814, 0.44", "25.9861, -187.608, 1.68621, 0.88", "26.6102, -188.002, 1.71677, 1.03", "27.0206, -188.258, 1.72761, 1.03", "27.4994, -188.578, 1.73447, 0.88", "27.9795, -188.881, 1.73548, 0.29", "28.325, -189.085, 1.74537, 0.29", "28.8515, -189.369, 1.78965, 0.29", "29.5112, -189.696, 1.87704, 0.37", "30.0055, -189.92, 1.9699, 0.37", "30.4371, -190.096, 2.0704, 0.29", "31.2626, -190.389, 2.29472, 0.29", "31.9097, -190.601, 2.47289, 0.81", "32.2738, -190.719, 2.56838, 0.81", "32.9723, -190.984, 2.75304, 0.59", "33.4766, -191.234, 2.89934, 0.29", "33.9044, -191.49, 3.03562, 0.29", "34.3479, -191.794, 3.19029, 0.66", "34.6699, -192.032, 3.31916, 0.66", "35.6129, -192.76, 3.74934, 0.29", "36.1976, -193.217, 4.06116, 0.29", "36.7859, -193.69, 4.4365, 0.29", "37.2183, -194.053, 4.75867, 0.29", "37.6346, -194.405, 5.11441, 0.88", "37.8211, -194.563, 5.27879, 0.88", "38.3102, -194.983, 5.74162, 0.66", "38.9692, -195.55, 6.41388, 0.29", "39.3011, -195.848, 6.78039, 0.29", "39.6912, -196.212, 7.21749, 0.66", "40.0241, -196.532, 7.56386, 0.44", "45.6469, -201.494, 9.97745, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-19.667, -147.996, -2.43807, 2.14", "-20.2452, -149.758, -2.90212, 2.14", "-20.7224, -151.364, -3.26945, 1.33", "-21.1558, -152.942, -3.58058, 1.03", "-21.4404, -154.141, -3.76937, 1.03", "-21.619, -154.957, -3.88335, 1.25", "-21.7874, -155.755, -3.98581, 1.25", "-22.0377, -157.262, -4.11962, 0.96", "-22.2256, -158.481, -4.18464, 0.96", "-22.5773, -160.617, -4.28376, 0.88", "-22.799, -161.874, -4.31689, 0.88", "-22.9868, -163.065, -4.31848, 0.96", "-23.1689, -164.423, -4.28529, 0.96", "-23.31, -165.582, -4.22271, 0.74", "-23.4355, -166.698, -4.13557, 0.52", "-23.5358, -167.624, -4.03952, 0.52", "-23.6564, -168.759, -3.89863, 0.37", "-23.7496, -169.664, -3.78166, 0.74", "-23.8706, -170.647, -3.6589, 0.74", "-24.0234, -171.753, -3.51112, 1.03", "-24.1342, -172.456, -3.41688, 1.18", "-24.299, -173.429, -3.29918, 1.33", "-24.4419, -174.162, -3.21379, 1.33", "-24.5958, -174.942, -3.08032, 1.18", "-24.8562, -176.073, -2.76591, 0.96", "-25.0856, -176.934, -2.43145, 0.81", "-25.3285, -177.799, -2.02295, 0.81", "-25.5789, -178.747, -1.51373, 0.81", "-25.7874, -179.577, -1.05079, 0.59", "-26.1006, -180.948, -0.308586, 0.66", "-26.2463, -181.535, -0.0300369, 0.66", "-26.5443, -182.59, 0.342273, 1.18", "-26.9304, -183.684, 0.506506, 1.47", "-27.3437, -184.635, 0.455669, 1.55", "-27.7227, -185.329, 0.293041, 1.55", "-28.3473, -186.266, -0.0606515, 1.4", "-29.2375, -187.351, -0.560938, 1.18", "-30.3201, -188.496, -1.15074, 0.66", "-31.2368, -189.392, -1.62273, 0.74", "-32.4482, -190.515, -2.20323, 1.18", "-33.4728, -191.416, -2.63829, 1.25", "-34.5763, -192.339, -3.03244, 1.25", "-35.5418, -193.1, -3.2989, 1.25", "-36.5454, -193.805, -3.51981, 1.33", "-37.1376, -194.159, -3.61715, 1.33", "-38.124, -194.637, -3.70062, 1.03", "-38.9989, -194.973, -3.7122, 0.74", "-39.7083, -195.198, -3.69389, 0.59", "-40.6518, -195.495, -3.64339, 0.59", "-41.6, -195.839, -3.57413, 0.88", "-42.5573, -196.309, -3.46285, 1.18", "-43.4694, -196.884, -3.2945, 1.18", "-44.2867, -197.502, -3.09571, 1.18", "-45.0577, -198.19, -2.88901, 1.18", "-45.6502, -198.794, -2.72838, 1.18", "-46.4696, -199.722, -2.50883, 0.81", "-46.9585, -200.338, -2.38434, 0.59", "-47.4054, -200.983, -2.27849, 0.52", "-48.2525, -202.363, -2.10395, 0.96", "-48.7348, -203.29, -2.02128, 1.18", "-49.1296, -204.155, -1.97579, 1.18", "-49.6222, -205.338, -1.96245, 0.88", "-50.0897, -206.532, -1.98121, 0.59", "-50.472, -207.607, -2.0014, 0.59", "-50.8904, -208.859, -2.02067, 0.59", "-51.2808, -210.027, -2.03682, 0.74", "-51.7362, -211.334, -2.05646, 1.33", "-52.146, -212.469, -2.07527, 1.69", "-52.6712, -213.871, -2.10217, 1.77", "-52.9718, -214.695, -2.11812, 1.77", "-53.3351, -215.735, -2.1627, 1.77", "-53.6278, -216.737, -2.22244, 1.47", "-53.8923, -217.851, -2.30917, 1.03", "-54.1228, -218.948, -2.41688, 1.03", "-54.3796, -220.231, -2.57306, 1.03", "-54.6282, -221.561, -2.73369, 1.11", "-54.8471, -222.814, -2.87002, 1.33", "-55.0096, -223.956, -2.96292, 1.03", "-55.1631, -225.502, -3.03731, 0.81", "-55.2349, -226.584, -3.05446, 1.03", "-55.2853, -227.944, -3.03232, 0.81", "-55.2982, -228.686, -2.99782, 0.81", "-55.2947, -230.691, -2.8816, 0.74", "-55.2546, -232.706, -2.74385, 0.74", "-55.1881, -234.326, -2.62081, 0.74", "-55.0955, -236.693, -2.44133, 0.74", "-55.0674, -238.326, -2.33848, 0.74", "-55.0921, -239.386, -2.28443, 1.18", "-55.2041, -240.474, -2.24154, 1.4", "-55.4523, -241.598, -2.21121, 1.4", "-55.8438, -242.661, -2.19753, 1.47", "-56.5071, -243.829, -2.21658, 1.55", "-57.0342, -244.526, -2.25525, 1.55", "-58.0362, -245.607, -2.34454, 1.11", "-59.3695, -246.815, -2.47019, 0.88", "-60.3559, -247.596, -2.53874, 0.88", "-61.4996, -248.394, -2.59504, 1.03", "-62.2935, -248.911, -2.62969, 1.03", "-62.9259, -249.332, -2.64885, 1.03", "-63.8654, -250.04, -2.62907, 0.81", "-64.9595, -251.046, -2.55647, 0.59", "-66.166, -252.436, -2.42807, 0.59", "-66.9317, -253.519, -2.31309, 0.88", "-67.5115, -254.525, -2.19211, 0.88", "-68.2572, -256.109, -2.00383, 0.74", "-68.671, -257.203, -1.87847, 0.96", "-68.9979, -258.283, -1.7865, 1.11", "-69.1888, -259.06, -1.72654, 1.11", "-69.3682, -259.879, -1.68774, 0.88", "-69.6121, -261.008, -1.70331, 0.66", "-69.7942, -261.802, -1.74522, 0.66", "-70.0984, -263.137, -1.81167, 0.96", "-70.3207, -264.158, -1.86396, 0.96", "-70.5906, -265.464, -1.93365, 0.66", "-70.8361, -266.656, -1.99926, 0.74", "-71.2238, -268.569, -2.07954, 0.96", "-71.448, -269.672, -2.09137, 0.96", "-71.677, -270.822, -2.09532, 0.96", "-71.9457, -272.141, -2.12446, 0.66", "-72.3388, -274.089, -2.20583, 0.66", "-72.6542, -275.952, -2.32649, 0.66", "-72.8085, -277.067, -2.42706, 0.81", "-73.0264, -279.02, -2.63541, 0.74", "-73.155, -280.568, -2.82612, 0.74", "-73.2344, -282.203, -3.04407, 0.96", "-73.2623, -283.577, -3.23614, 0.96", "-73.2805, -284.488, -3.35468, 1.62", "-73.3224, -284.988, -3.40481, 1.62", "-73.4328, -285.642, -3.42468, 1.62", "-73.6502, -286.598, -3.41159, 1.4", "-73.9345, -287.594, -3.3752, 0.88", "-74.3258, -288.868, -3.30462, 0.59", "-74.8535, -290.6, -3.1849, 0.81", "-75.2825, -291.993, -3.07659, 0.96", "-75.612, -293.118, -2.99313, 0.96", "-75.977, -294.477, -2.90936, 1.11", "-76.2129, -295.368, -2.8666, 1.11", "-76.4072, -296.056, -2.84754, 1.33", "-76.6084, -296.726, -2.83878, 1.33", "-77.016, -297.814, -2.82426, 1.03", "-77.5157, -298.885, -2.80911, 0.66", "-77.9355, -299.683, -2.79593, 0.37", "-78.2538, -300.265, -2.78568, 0.37", "-78.6435, -301.028, -2.76357, 0.37", "-78.9961, -301.753, -2.73544, 1.03", "-79.3784, -302.56, -2.70203, 1.25", "-79.6294, -303.16, -2.66897, 1.25", "-80.0316, -304.283, -2.60072, 0.96", "-80.4771, -305.697, -2.5159, 0.52", "-80.856, -306.97, -2.44904, 0.52", "-81.3454, -308.746, -2.36844, 0.52", "-81.6936, -310.194, -2.30299, 0.81", "-81.939, -311.25, -2.25016, 1.03", "-82.1701, -312.204, -2.20161, 1.03", "-82.3561, -312.939, -2.16605, 0.81", "-82.599, -313.825, -2.13135, 0.81", "-82.9842, -315.069, -2.10397, 0.59", "-83.4735, -316.373, -2.10782, 0.44", "-84.2408, -318.01, -2.13625, 0.88", "-84.6378, -318.71, -2.15805, 0.88", "-85.2373, -319.613, -2.19933, 0.59", "-85.8767, -320.381, -2.25026, 0.59", "-86.8978, -321.339, -2.35887, 0.59", "-88.0016, -322.176, -2.50353, 0.81", "-88.6337, -322.574, -2.5924, 0.81", "-89.1446, -322.859, -2.66746, 0.81", "-90.299, -323.409, -2.85018, 0.59", "-91.5679, -323.896, -3.06275, 0.88", "-92.8286, -324.285, -3.28825, 1.03", "-94.0314, -324.596, -3.51587, 1.03", "-95.0271, -324.801, -3.70279, 0.59", "-95.9272, -324.96, -3.86109, 0.59", "-96.6937, -325.097, -3.98512, 0.59", "-97.3562, -325.211, -4.07126, 0.59", "-98.063, -325.361, -4.15254, 0.59", "-98.9899, -325.601, -4.24206, 0.44", "-100.38, -326.052, -4.35302, 0.81", "-101.543, -326.507, -4.42191, 1.11", "-102.815, -327.094, -4.46651, 0.81", "-104.09, -327.781, -4.48802, 0.66", "-104.674, -328.14, -4.4912, 0.66", "-105.376, -328.633, -4.48822, 0.52", "-106.18, -329.252, -4.47188, 0.52", "-106.993, -329.957, -4.44434, 0.52", "-107.81, -330.717, -4.40798, 0.52", "-108.303, -331.221, -4.37942, 1.11", "-109.394, -332.454, -4.31807, 1.4", "-109.982, -333.196, -4.28561, 1.84", "-110.623, -334.096, -4.26364, 2.43" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.48369, -81.5015, -9.19041, 0.66", "-9.4659, -82.838, -9.23392, 0.66", "-9.4693, -83.6625, -9.25694, 0.37", "-9.47734, -84.212, -9.29255, 0.81", "-9.48319, -84.9204, -9.35846, 1.03", "-9.49119, -85.536, -9.41989, 1.11", "-9.50923, -86.1927, -9.49299, 0.88", "-9.54636, -86.9475, -9.60109, 0.59", "-9.58533, -87.8229, -9.76353, 0.29", "-9.60579, -88.4552, -9.90745, 0.29", "-9.606, -88.7435, -9.98696, 0.29", "-9.57629, -89.3878, -10.2141, 0.74", "-9.51225, -89.9821, -10.4721, 1.11", "-9.45032, -90.3548, -10.6532, 1.11", "-9.34331, -90.9018, -10.931, 1.11", "-9.1896, -91.5364, -11.2386, 0.81", "-8.90784, -92.5867, -11.701, 0.44", "-8.62914, -93.5889, -12.0855, 0.59", "-8.47061, -94.1959, -12.2821, 0.88", "-8.32042, -94.8394, -12.4451, 0.88", "-8.13356, -95.7669, -12.6201, 0.81", "-7.97551, -96.6841, -12.7268, 0.44", "-7.86827, -97.4127, -12.7583, 1.03", "-7.79283, -98.0251, -12.763, 0.74", "-7.7147, -98.7936, -12.766, 0.52", "-7.66617, -99.3883, -12.7737, 0.88", "-7.64968, -99.9336, -12.8063, 1.18", "-7.64125, -100.405, -12.8425, 1.18", "-7.64054, -100.946, -12.8863, 0.88", "-7.64869, -101.886, -12.9703, 0.29", "-7.66488, -102.597, -13.0397, 0.29", "-7.70696, -103.613, -13.1554, 1.03", "-7.73743, -104.288, -13.2449, 1.47", "-7.75781, -104.713, -13.3015, 1.47", "-7.77752, -105.18, -13.3662, 1.47", "-7.79122, -105.877, -13.4703, 1.25", "-7.79071, -106.729, -13.5956, 0.44", "-7.7693, -107.432, -13.6968, 0.44", "-7.74405, -108.117, -13.8032, 0.44", "-7.72734, -108.469, -13.8619, 0.59", "-7.68655, -109.295, -14.0019, 0.59", "-7.6467, -109.923, -14.1178, 0.37", "-7.61223, -110.448, -14.215, 0.81", "-7.57754, -110.929, -14.2979, 1.03", "-7.55073, -111.281, -14.352, 1.03", "-7.52151, -111.719, -14.405, 0.59", "-7.46444, -112.434, -14.4821, 0.22", "-7.41302, -112.88, -14.5363, 0.22", "-7.33844, -113.406, -14.6067, 0.22", "-7.24807, -113.972, -14.6873, 0.66", "-7.13134, -114.647, -14.792, 0.88", "-6.94278, -115.631, -14.9603, 0.88", "-6.71706, -116.773, -15.1637, 0.96", "-6.55264, -117.632, -15.331, 1.18", "-6.43814, -118.328, -15.4731, 0.66", "-6.35082, -118.9, -15.5895, 0.52", "-6.21068, -119.992, -15.8084, 0.52", "-6.12291, -120.837, -15.9736, 0.81", "-6.04746, -121.69, -16.142, 0.52", "-5.98922, -122.327, -16.2666, 0.52", "-5.92414, -123.081, -16.4305, 1.47", "-5.85997, -123.85, -16.6193, 1.77", "-5.81573, -124.441, -16.7918, 1.77", "-5.78543, -124.78, -16.9051, 1.77", "-5.72086, -125.338, -17.107, 1.25", "-5.63446, -125.984, -17.3501, 0.81", "-5.53512, -126.769, -17.6462, 0.44", "-5.40314, -127.752, -18.0162, 0.37", "-5.31958, -128.357, -18.2396, 0.52", "-5.20585, -129.088, -18.5105, 0.52", "-5.1104, -129.634, -18.7146, 0.66", "-4.97157, -130.352, -18.9919, 0.66", "-4.80114, -131.267, -19.3855, 0.88", "-4.6579, -132.032, -19.75, 1.25", "-4.58229, -132.461, -19.9801, 1.25", "-4.51606, -132.828, -20.1985, 1.25", "-4.38608, -133.545, -20.6623, 1.11", "-4.27281, -134.175, -21.0957, 0.74", "-4.17611, -134.727, -21.4951, 0.29", "-4.12423, -135.054, -21.7377, 0.29", "-4.00294, -135.851, -22.3135, 0.44", "-3.931, -136.311, -22.6216, 0.88", "-3.86715, -136.732, -22.8662, 1.33", "-3.78908, -137.235, -23.1148, 1.47", "-3.70469, -137.784, -23.3448, 1.47", "-3.62596, -138.275, -23.5236, 1.25", "-3.51346, -138.948, -23.741, 0.44", "-3.31941, -139.94, -24.0008, 0.29", "-3.15087, -140.73, -24.1567, 0.29", "-2.97194, -141.54, -24.2705, 0.29", "-2.82855, -142.189, -24.3282, 0.74", "-2.73215, -142.651, -24.3461, 0.88", "-2.56057, -143.593, -24.3289, 0.96", "-2.45261, -144.405, -24.2754, 1.03", "-2.41361, -145.019, -24.2202, 1.03", "-2.40494, -145.633, -24.148, 0.59", "-2.41199, -146.29, -24.0686, 0.22", "-2.42379, -146.703, -24.0294, 0.22", "-2.47194, -147.652, -23.9895, 0.96", "-2.50768, -148.213, -23.9811, 1.11", "-2.53037, -148.829, -23.9642, 1.11", "-2.52441, -149.419, -23.9399, 0.59", "-2.49325, -150.017, -23.9129, 0.29", "-2.445, -150.528, -23.8857, 0.29", "-2.39562, -150.954, -23.8533, 0.29", "-2.27387, -151.879, -23.7697, 0.44", "-2.15804, -152.663, -23.6815, 0.66", "-2.02979, -153.491, -23.582, 0.66", "-1.934, -154.089, -23.5184, 0.81", "-1.83195, -154.753, -23.4635, 0.81", "-1.73816, -155.386, -23.4234, 0.52", "-1.6479, -156.191, -23.383, 0.66", "-1.59207, -156.788, -23.352, 0.66", "-1.55345, -157.793, -23.3272, 0.37", "-1.56345, -158.682, -23.3338, 0.37", "-1.60648, -159.392, -23.3578, 1.03", "-1.69225, -160.104, -23.4189, 1.47", "-1.82034, -160.802, -23.5089, 1.62", "-2.12957, -162.046, -23.7149, 0.88", "-2.41447, -162.856, -23.8804, 0.59", "-2.70125, -163.474, -24.0263, 0.37", "-3.2692, -164.471, -24.2645, 0.29", "-3.45719, -164.767, -24.321, 0.29", "-3.74859, -165.194, -24.3728, 0.29", "-4.27573, -165.99, -24.4127, 0.29", "-4.79458, -166.744, -24.4376, 0.59", "-5.32845, -167.544, -24.4555, 0.59", "-5.66039, -168.039, -24.46, 0.44", "-6.07693, -168.634, -24.4672, 0.44", "-6.37013, -168.996, -24.4879, 0.29", "-6.82405, -169.511, -24.5514, 1.4", "-7.52921, -170.103, -24.6646, 1.62", "-8.19506, -170.513, -24.7506, 1.4", "-8.84479, -170.814, -24.8094, 1.11", "-9.91922, -171.224, -24.8652, 0.81", "-10.5143, -171.437, -24.8912, 0.59", "-11.1787, -171.69, -24.9391, 0.74", "-11.8239, -171.991, -25.0084, 0.81", "-12.3323, -172.363, -25.0952, 0.52", "-12.7137, -172.736, -25.1882, 0.52", "-13.0556, -173.15, -25.2745, 0.74", "-13.5352, -173.739, -25.4147, 0.74", "-13.7869, -174.103, -25.5001, 0.74", "-14.0546, -174.512, -25.6152, 0.52", "-14.4399, -175.158, -25.7765, 0.52", "-14.6437, -175.513, -25.8547, 0.52", "-15.0108, -176.212, -25.9734, 1.69", "-15.2188, -176.675, -26.0287, 2.14", "-15.5758, -177.653, -26.1202, 1.55", "-15.8826, -178.68, -26.1923, 0.29", "-16.0334, -179.28, -26.2228, 0.29", "-16.217, -180.105, -26.2499, 0.44", "-16.3724, -180.894, -26.2531, 0.59", "-16.5001, -181.594, -26.2412, 0.59", "-16.6137, -182.31, -26.2054, 0.29", "-16.6759, -182.694, -26.1863, 0.29", "-16.7612, -183.231, -26.1607, 0.96", "-16.8293, -183.7, -26.1431, 1.03", "-16.9106, -184.353, -26.1319, 0.52", "-16.9946, -185.2, -26.1382, 0.29", "-17.0299, -185.681, -26.1507, 0.81", "-17.0602, -186.238, -26.1703, 0.96", "-17.0804, -186.668, -26.1884, 0.96", "-17.1156, -187.421, -26.2226, 0.29", "-17.1673, -188.281, -26.2516, 0.29", "-17.2466, -189.181, -26.2967, 1.47", "-17.3108, -189.811, -26.3382, 1.92", "-17.3414, -190.116, -26.3632, 1.92", "-17.4123, -190.877, -26.4225, 1.33", "-17.485, -191.722, -26.4975, 0.29", "-17.558, -192.583, -26.5831, 0.29", "-17.6152, -193.27, -26.6635, 0.29", "-17.741, -194.76, -26.8532, 0.29", "-17.8146, -195.774, -26.9821, 1.4", "-17.8496, -196.392, -27.0602, 2.14", "-17.8607, -196.661, -27.094, 2.28", "-17.869, -197.101, -27.1443, 2.28", "-17.8715, -197.556, -27.1828, 1.92", "-17.8531, -198.219, -27.1872, 0.88", "-17.795, -199.234, -27.1381, 0.29", "-17.7413, -199.856, -27.0795, 0.29", "-17.6669, -200.553, -26.9954, 0.29", "-17.536, -201.645, -26.8434, 0.29", "-17.3968, -202.762, -26.6892, 0.96", "-17.303, -203.51, -26.5959, 1.62", "-17.2498, -203.933, -26.547, 1.62", "-17.2047, -204.331, -26.5088, 1.62", "-17.1298, -205.188, -26.4562, 1.11", "-17.0932, -206.233, -26.4781, 0.29", "-17.1044, -207.011, -26.5342, 0.29", "-17.1304, -207.628, -26.5905, 0.59", "-17.1525, -207.933, -26.621, 0.66", "-17.1881, -208.304, -26.6581, 0.66", "-17.3111, -209.324, -26.7529, 0.29", "-17.5009, -210.507, -26.8637, 0.29", "-17.6764, -211.426, -26.9427, 0.96", "-17.8387, -212.152, -26.9872, 1.4", "-17.968, -212.697, -27.0066, 1.4", "-18.1027, -213.261, -27.0144, 1.4", "-18.2772, -214.009, -27.004, 0.88", "-18.4909, -214.924, -26.9837, 0.29", "-18.6764, -215.76, -26.9561, 0.29", "-18.8693, -216.606, -26.9171, 0.44", "-18.9978, -217.143, -26.8791, 0.66", "-19.1026, -217.576, -26.8351, 0.66", "-19.2763, -218.347, -26.7268, 0.29", "-19.3767, -218.811, -26.6596, 0.29", "-19.5205, -219.402, -26.5946, 0.29", "-19.7607, -220.212, -26.5433, 0.29", "-19.9227, -220.673, -26.5363, 0.52", "-20.161, -221.31, -26.559, 0.66", "-20.352, -221.943, -26.5962, 0.66", "-20.5638, -222.921, -26.6896, 1.4", "-20.6675, -223.771, -26.8222, 2.28", "-20.7047, -224.611, -26.9979, 2.5", "-20.6796, -225.081, -27.1094, 2.5", "-20.3893, -226.708, -27.5524, 0.22", "-20.1875, -227.361, -27.7416, 0.22", "-19.8115, -228.181, -27.9975, 0.37", "-19.5195, -228.662, -28.1589, 0.44", "-19.0139, -229.359, -28.5093, 0.29", "-18.5148, -229.99, -28.9772, 0.88", "-18.2793, -230.275, -29.3271, 1.4", "-18.1308, -230.476, -29.6393, 1.4", "-17.9768, -230.762, -30.1198, 1.11", "-17.645, -231.754, -31.8135, 0.29", "-17.5847, -232.116, -32.4101, 0.29", "-17.5482, -232.758, -33.3909, 0.81", "-17.5556, -233.186, -33.9181, 0.81", "-17.6102, -234.116, -34.8351, 0.22", "-17.6406, -234.512, -35.147, 0.22", "-17.6755, -235.135, -35.4995, 0.44", "-17.694, -235.49, -35.6632, 0.59", "-17.7573, -236.986, -36.2279, 0.22", "-17.7838, -237.509, -36.4115, 0.74", "-17.8096, -237.976, -36.5628, 1.03", "-17.8263, -238.476, -36.7188, 1.03", "-17.8363, -238.964, -36.8654, 0.74", "-17.8416, -239.419, -37.0018, 0.37", "-17.8457, -240.571, -37.3602, 0.22", "-17.8623, -241.718, -37.7142, 0.22", "-17.8837, -242.582, -37.97, 0.88", "-17.9053, -243.221, -38.1539, 1.62", "-17.9214, -243.573, -38.2521, 1.84", "-17.9486, -243.998, -38.3633, 1.84", "-18.0205, -244.877, -38.5709, 0.52", "-18.1082, -245.621, -38.7257, 0.22", "-18.2046, -246.22, -38.8352, 0.22", "-18.3069, -246.738, -38.9167, 0.37", "-18.3511, -246.94, -38.9383, 0.37", "-18.4823, -247.442, -38.9755, 0.22", "-18.604, -247.852, -38.9928, 0.74", "-18.7534, -248.319, -39.0089, 0.74", "-18.8935, -248.742, -39.0151, 0.59", "-19.2088, -249.66, -39.009, 0.22", "-19.3617, -250.085, -38.9908, 0.22", "-19.5719, -250.657, -38.9236, 0.59", "-19.7241, -251.072, -38.84, 0.59", "-19.8642, -251.502, -38.7129, 0.29", "-20.0078, -251.942, -38.553, 0.22", "-20.2493, -252.553, -38.3173, 0.37", "-20.588, -253.29, -38.014, 0.44", "-20.9547, -253.819, -37.7822, 0.59", "-21.4961, -254.364, -37.538, 0.37", "-21.8717, -254.608, -37.4175, 0.22", "-22.9113, -255.006, -37.1852, 2.21", "-23.3411, -255.064, -37.1234, 2.5", "-25.1276, -254.904, -36.9572, 0.22", "-25.7009, -254.759, -36.9202, 0.22", "-26.5206, -254.419, -36.913, 0.66", "-26.9312, -254.195, -36.9278, 0.66", "-27.5337, -253.805, -36.9684, 0.37", "-28.3998, -253.228, -37.0598, 1.92", "-28.7107, -253.024, -37.099, 1.92", "-30.3217, -252.162, -37.3547, 0.44", "-31.0363, -251.858, -37.4784, 0.59", "-31.4506, -251.73, -37.5346, 0.37", "-32.0544, -251.635, -37.5724, 0.37", "-32.6651, -251.595, -37.5979, 0.22", "-34.0593, -251.627, -37.572, 0.29", "-34.5052, -251.708, -37.5079, 0.22", "-35.2089, -251.878, -37.3643, 0.22", "-36.165, -252.108, -37.1411, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-9.48369, -81.5015, -9.19041, 0.74", "-10.919, -82.9503, -8.17133, 0.74", "-11.4905, -83.474, -7.76271, 0.74", "-12.3396, -84.1415, -7.18879, 0.74", "-12.9492, -84.5418, -6.79589, 0.52", "-13.6152, -84.8474, -6.411, 0.52", "-14.2804, -85.0648, -6.06446, 0.88", "-14.9128, -85.0663, -5.84189, 0.88", "-16.0023, -84.8931, -5.56348, 0.59", "-16.7114, -84.7273, -5.42047, 0.37", "-17.8384, -84.5015, -5.25366, 0.37", "-18.5507, -84.4315, -5.20394, 1.11", "-19.1674, -84.4894, -5.20875, 1.47", "-19.7609, -84.6335, -5.22364, 1.47", "-20.1837, -84.7761, -5.22473, 1.47", "-21.1373, -85.1118, -5.20525, 0.96", "-21.9732, -85.3582, -5.15531, 0.59", "-22.714, -85.5109, -5.05491, 0.59", "-23.4387, -85.6182, -4.87714, 0.59", "-24.1891, -85.7281, -4.66703, 0.81", "-24.8922, -85.8353, -4.45205, 0.81", "-25.4203, -85.9195, -4.25213, 0.81", "-26.0324, -86.0449, -3.99941, 0.81", "-26.7441, -86.4075, -3.82968, 0.22", "-27.2966, -87.1511, -3.94489, 0.22", "-27.6829, -87.7392, -4.09978, 0.66", "-27.9044, -88.0876, -4.21261, 0.88", "-28.2375, -88.5921, -4.39934, 0.88", "-28.7558, -89.1786, -4.69782, 0.44", "-29.516, -89.7595, -5.05397, 1.4", "-30.2172, -90.0751, -5.31333, 2.14", "-30.5335, -90.1546, -5.4195, 2.58", "-31.1929, -90.2201, -5.61106, 2.36", "-32.9889, -90.2362, -6.10685, 1.69", "-33.9264, -90.1924, -6.34227, 0.37", "-35.031, -90.1005, -6.54853, 0.37", "-35.9061, -90.0219, -6.66506, 0.37", "-37.6198, -89.919, -6.8129, 1.92", "-38.3101, -89.9114, -6.84858, 2.14", "-38.9823, -89.9594, -6.85985, 2.5", "-40.9732, -90.2778, -6.94136, 0.44", "-41.595, -90.4268, -6.98019, 0.44", "-42.5659, -90.673, -7.0763, 0.44", "-43.4726, -90.8708, -7.20038, 0.44", "-44.4201, -91.0186, -7.3458, 1.4", "-45.4701, -91.1423, -7.52664, 2.06", "-46.4361, -91.2399, -7.73483, 2.06", "-47.6412, -91.301, -8.02184, 0.66", "-48.6181, -91.3191, -8.29955, 0.81", "-49.7029, -91.3315, -8.66286, 0.52", "-50.6442, -91.3733, -9.07526, 1.77", "-51.3238, -91.4486, -9.4607, 2.28", "-53.4118, -91.8808, -10.9654, 1.33", "-54.153, -92.134, -11.6312, 1.77", "-54.5949, -92.3154, -12.0864, 1.77", "-55.4153, -92.6805, -12.9911, 0.74", "-56.0556, -92.9783, -13.7205, 0.52", "-56.9965, -93.4623, -14.7689, 0.52", "-57.9485, -94.0529, -15.8302, 0.88", "-58.8806, -94.6319, -16.7518, 1.47", "-59.8077, -95.2163, -17.5738, 0.22", "-60.2739, -95.5243, -17.9526, 0.22", "-60.8511, -95.9505, -18.3931, 0.81", "-61.3862, -96.4196, -18.786, 0.96", "-62.0253, -97.0511, -19.2339, 1.55", "-62.5838, -97.6867, -19.6078, 1.55", "-63.1751, -98.3814, -19.9904, 0.37", "-63.6039, -98.8743, -20.2673, 0.74", "-64.1697, -99.4819, -20.6356, 0.81", "-64.9236, -100.276, -21.1659, 0.29", "-65.2662, -100.655, -21.4368, 0.96", "-65.7351, -101.208, -21.849, 1.33", "-66.338, -101.978, -22.4598, 0.74", "-66.7766, -102.617, -22.9911, 0.59", "-67.3437, -103.619, -23.8567, 0.29", "-67.5952, -104.264, -24.4135, 0.29", "-67.7499, -104.854, -24.9451, 0.29", "-67.794, -105.305, -25.3481, 1.18", "-67.7764, -105.724, -25.738, 1.69", "-67.67, -106.328, -26.3177, 1.33", "-67.4581, -107.17, -27.1635, 0.22", "-67.3604, -107.554, -27.5606, 0.22", "-67.2561, -108.054, -28.061, 0.96", "-67.2066, -108.411, -28.396, 1.11", "-67.1427, -109.101, -29.0038, 0.52", "-67.0798, -110.223, -29.9279, 0.22", "-67.0656, -110.759, -30.3488, 0.22", "-67.0713, -111.348, -30.796, 0.88", "-67.1016, -111.778, -31.1304, 1.03", "-67.1916, -112.521, -31.7288, 0.22", "-67.24, -112.863, -32.0151, 0.22", "-67.3077, -113.359, -32.4505, 0.66", "-67.3685, -113.909, -32.9417, 0.74", "-67.4656, -115.188, -34.0693, 0.22", "-67.5044, -116.124, -34.8284, 0.22", "-67.5601, -117.331, -35.6786, 0.96", "-67.5844, -117.793, -35.9632, 1.25", "-67.6333, -118.423, -36.2705, 1.25", "-67.7152, -119.37, -36.6186, 0.66", "-67.8565, -120.555, -36.9215, 0.15", "-68.0638, -121.583, -37.0894, 0.37", "-68.2066, -122.066, -37.1452, 0.37", "-68.8561, -123.836, -37.3135, 0.22", "-68.9808, -124.111, -37.3393, 0.74", "-69.2876, -124.697, -37.4041, 0.88", "-70.3523, -126.556, -37.6275, 0.22", "-70.7626, -127.255, -37.7091, 0.74", "-71.1662, -127.934, -37.7786, 0.74", "-72.055, -129.41, -37.9357, 0.22", "-72.7873, -130.651, -38.0576, 0.22", "-73.57, -132.08, -38.1498, 0.22", "-74.2354, -133.435, -38.1891, 0.22", "-74.5597, -134.175, -38.1821, 0.88", "-74.7843, -134.763, -38.1587, 1.11", "-74.9608, -135.361, -38.1191, 1.11", "-75.2911, -136.82, -38.0068, 0.15", "-75.4914, -138.0, -37.9306, 0.15", "-75.5797, -138.653, -37.8937, 0.81", "-75.6453, -139.223, -37.8661, 0.96", "-76.0009, -141.338, -37.9863, 0.22", "-76.1696, -142.328, -38.0743, 0.22", "-76.3826, -143.416, -38.2376, 0.22", "-76.4768, -143.851, -38.3242, 1.18", "-76.5807, -144.264, -38.4314, 1.18", "-77.619, -147.28, -39.5788, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "27.6417, 214.29, -20.6055, 0.37", "28.0895, 213.608, -20.2328, 0.37", "28.4536, 213.1, -19.968, 0.52", "28.9693, 212.413, -19.6115, 0.74", "29.3875, 211.87, -19.3413, 1.11", "29.632, 211.564, -19.1859, 1.11", "29.9869, 211.121, -18.9568, 0.81", "30.7967, 210.16, -18.3832, 0.22", "31.1854, 209.69, -18.1065, 0.22", "31.4291, 209.375, -17.946, 0.66", "31.6769, 209.023, -17.7862, 0.66", "31.9162, 208.657, -17.6337, 0.66", "32.3584, 207.922, -17.3297, 0.44", "32.7583, 207.19, -17.0319, 0.22", "33.1703, 206.377, -16.7234, 0.22", "33.3568, 205.981, -16.583, 0.44", "33.4756, 205.709, -16.5064, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "27.6417, 214.29, -20.6055, 0.22", "29.0716, 214.392, -20.7033, 0.22", "29.3974, 214.437, -20.7368, 0.44", "30.8894, 214.726, -20.8961, 0.22", "31.5287, 214.871, -20.9818, 0.59", "32.0164, 214.992, -21.0703, 0.59", "34.1085, 215.511, -21.45, 0.22", "36.5184, 216.152, -21.9437, 0.22", "37.3785, 216.407, -22.1372, 0.66", "38.0486, 216.637, -22.3125, 0.81", "39.0584, 217.009, -22.6051, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "16.9287, 266.808, -12.5887, 0.59", "17.8315, 267.581, -13.1303, 0.59", "18.127, 267.843, -13.2954, 0.44", "18.7348, 268.418, -13.657, 0.22", "19.2551, 268.951, -13.9678, 0.81", "19.5263, 269.245, -14.1424, 0.96", "19.65, 269.383, -14.2273, 0.96", "20.0252, 269.869, -14.5055, 0.22", "20.5255, 270.65, -14.9784, 0.22", "20.9059, 271.379, -15.4325, 1.11", "21.0827, 271.785, -15.6806, 1.47", "21.1495, 271.984, -15.8076, 1.47", "21.3516, 272.858, -16.3537, 0.22", "21.4545, 273.656, -16.8484, 0.22", "21.4776, 274.127, -17.1321, 0.66", "21.4772, 274.36, -17.2761, 0.66", "21.4107, 275.475, -17.9382, 0.22", "21.3018, 276.491, -18.5221, 0.22", "21.2093, 277.069, -18.8515, 0.22", "21.0805, 277.741, -19.2273, 1.47", "20.9907, 278.124, -19.4301, 1.47", "20.6328, 279.422, -20.0507, 0.22", "20.4956, 279.844, -20.2342, 0.81", "20.3596, 280.198, -20.373, 0.81", "19.982, 281.066, -20.6666, 0.22", "19.6501, 281.754, -20.8753, 0.22", "19.2777, 282.469, -21.0733, 1.47", "19.1104, 282.765, -21.1614, 1.84", "18.478, 283.836, -21.4826, 0.22", "17.9727, 284.657, -21.7215, 0.22", "17.7827, 284.94, -21.8049, 0.22", "17.2615, 285.68, -22.0507, 1.55", "16.9264, 286.124, -22.2143, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "16.9287, 266.808, -12.5887, 0.22", "17.6762, 269.332, -13.1959, 0.22", "18.1122, 270.704, -13.5149, 0.22", "18.4624, 271.768, -13.7551, 0.96", "18.6175, 272.23, -13.8551, 1.18", "18.7801, 272.709, -13.9542, 1.18", "19.0441, 273.491, -14.1081, 0.22", "19.2474, 274.048, -14.2022, 0.44", "19.3427, 274.333, -14.2511, 0.44", "19.593, 275.155, -14.3879, 0.22", "19.8038, 275.876, -14.5046, 0.44", "20.0334, 276.676, -14.6319, 0.44", "20.6965, 279.124, -15.0016, 0.22", "21.2368, 281.186, -15.3266, 0.22", "21.4377, 281.96, -15.4588, 0.66", "21.5466, 282.385, -15.5372, 0.74", "21.7191, 283.06, -15.6841, 0.22", "22.1475, 284.709, -16.0867, 0.22", "22.3948, 285.677, -16.3384, 1.03", "22.5568, 286.32, -16.5138, 1.25", "22.6774, 286.805, -16.6499, 1.25", "23.0792, 288.437, -17.1191, 0.22", "23.7445, 291.121, -17.9054, 0.22", "23.9738, 292.025, -18.1715, 0.74", "24.1053, 292.547, -18.3101, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.33038, 98.0893, 11.5457, 0.37", "7.26551, 102.554, 13.5578, 0.37", "9.67014, 106.772, 15.6553, 0.37", "11.2799, 110.748, 18.7785, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.33038, 98.0893, 11.5457, 0.22", "9.50034, 105.634, 11.012, 0.37", "14.339, 112.68, 9.51332, 0.37", "19.5778, 119.386, 7.67942, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "89.2874, -2.63676, 7.37372, 0.37", "101.224, -5.21824, 7.82105, 0.37", "113.454, -5.98773, 7.86856, 0.37", "125.656, -5.32523, 8.83074, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "89.2874, -2.63676, 7.37372, 0.22", "100.885, -4.94669, 7.10313, 0.37", "112.737, -5.15908, 6.64472, 0.37", "124.551, -6.15176, 6.72542, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "52.2556, 6.42525, 5.07884, 0.52", "53.6581, 6.64515, 5.54938, 0.52", "54.2022, 6.70517, 5.73905, 0.52", "54.7645, 6.75098, 5.97682, 0.52", "55.84, 6.82462, 6.46845, 0.52", "56.4815, 6.85288, 6.77804, 0.88", "57.4634, 6.87659, 7.24438, 0.88", "58.1916, 6.89054, 7.57931, 0.88", "58.9634, 6.81367, 7.94768, 0.81", "59.4556, 6.65576, 8.1615, 0.81", "60.188, 6.23896, 8.45473, 0.59", "60.768, 5.77501, 8.64764, 0.59", "61.3881, 5.17628, 8.78724, 0.59", "62.0034, 4.53372, 8.8548, 0.74", "62.9612, 3.42907, 8.88681, 0.66", "63.3517, 2.93458, 8.88855, 0.66", "63.938, 2.12297, 8.88233, 0.52", "64.335, 1.56219, 8.87154, 0.52", "64.8494, 0.865214, 8.84536, 0.81", "65.4896, -0.00137496, 8.80145, 0.81", "65.9107, -0.601273, 8.78253, 0.81", "66.4141, -1.39027, 8.75487, 0.81", "67.0084, -2.43446, 8.72519, 0.88", "67.475, -3.35752, 8.70615, 1.11", "67.7581, -3.96428, 8.69087, 1.11", "68.2696, -5.18417, 8.66652, 0.88", "68.6047, -6.15257, 8.68011, 0.96", "68.8067, -6.9038, 8.73128, 0.96", "68.9354, -7.52805, 8.80707, 0.96", "69.035, -8.09674, 8.89651, 0.66", "69.1911, -8.9959, 9.09023, 0.66", "69.4318, -10.1731, 9.41663, 0.81", "69.7012, -11.1028, 9.7195, 1.11", "70.094, -12.1461, 10.107, 0.96", "70.4523, -12.8908, 10.3764, 0.81", "71.0175, -13.8356, 10.706, 0.81", "71.7451, -14.8165, 11.0227, 0.59", "72.3891, -15.5578, 11.2295, 0.37", "72.9966, -16.1944, 11.3756, 0.37", "73.9069, -17.1175, 11.5396, 0.59", "74.4088, -17.6349, 11.5884, 0.88", "74.6873, -17.9378, 11.5903, 1.11", "75.0411, -18.3585, 11.5913, 1.11", "75.505, -18.9459, 11.6146, 0.74", "75.8797, -19.3952, 11.6327, 0.74", "76.2494, -19.8546, 11.6426, 0.74", "76.811, -20.5882, 11.6164, 0.74", "77.3802, -21.3654, 11.5422, 0.74", "77.8982, -22.0717, 11.4562, 0.66", "78.3907, -22.7326, 11.3566, 0.66", "79.0455, -23.6016, 11.1991, 0.96", "79.816, -24.6528, 10.9712, 1.4", "80.205, -25.2291, 10.8215, 1.62", "80.6013, -25.8656, 10.632, 1.77" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "52.2556, 6.42525, 5.07884, 0.88", "53.4717, 7.413, 4.84773, 0.88", "54.5572, 8.23189, 4.72779, 0.88", "55.7721, 9.03762, 4.68605, 0.88", "57.0855, 9.79396, 4.71051, 0.88", "58.6361, 10.5984, 4.81411, 0.74", "59.6155, 11.0887, 4.90736, 0.74", "60.9928, 11.7236, 5.12513, 0.88", "62.2259, 12.2311, 5.36894, 0.88", "63.2458, 12.6063, 5.58231, 0.88", "64.237, 12.9533, 5.78624, 0.66", "64.9371, 13.2135, 5.90004, 0.66", "65.8916, 13.6288, 5.94451, 0.88", "66.4722, 13.9288, 5.90393, 0.88", "67.0344, 14.2514, 5.81881, 0.88", "67.6078, 14.5868, 5.71499, 0.88", "68.6744, 15.1972, 5.53187, 0.59", "69.4249, 15.6351, 5.45362, 0.59", "69.9954, 16.0065, 5.42005, 0.81", "70.7417, 16.56, 5.38614, 0.81", "71.3128, 17.0456, 5.35267, 0.81", "71.9585, 17.6404, 5.30693, 0.66", "72.8845, 18.5266, 5.24065, 0.59", "73.877, 19.6075, 5.08925, 0.59", "74.4196, 20.2562, 4.94666, 0.59", "75.0481, 21.0436, 4.70849, 0.44", "75.4473, 21.5251, 4.52544, 0.44", "75.8813, 22.0136, 4.30399, 0.44", "76.968, 23.1566, 3.72642, 0.44", "77.8266, 24.0086, 3.29098, 0.66", "78.5433, 24.7012, 2.93427, 0.66", "79.4296, 25.5438, 2.49241, 0.74", "80.1221, 26.1981, 2.14363, 0.96", "80.6538, 26.6838, 1.88417, 0.96", "81.4335, 27.3259, 1.54838, 0.66", "82.1953, 27.9243, 1.23979, 0.66", "83.4034, 28.854, 0.761735, 0.59", "84.5204, 29.7535, 0.325261, 0.59", "85.2412, 30.3564, 0.0484213, 0.81", "85.7877, 30.8333, -0.162221, 0.81", "86.7182, 31.6236, -0.492266, 0.52", "87.4339, 32.1855, -0.710211, 0.52", "88.3792, 32.8921, -0.957402, 0.52", "89.1739, 33.4739, -1.15352, 0.52", "89.9351, 34.0176, -1.33727, 0.37", "91.2919, 34.9581, -1.65822, 0.37", "92.1856, 35.559, -1.87167, 0.59", "92.7554, 35.9109, -2.00178, 0.59", "93.9674, 36.6097, -2.28816, 0.74", "94.6003, 36.978, -2.44109, 0.74", "95.1391, 37.309, -2.57565, 0.74", "95.9101, 37.8539, -2.79194, 0.74", "96.4342, 38.2199, -2.98277, 0.44", "97.1942, 38.6735, -3.32011, 0.44", "97.8517, 38.993, -3.63204, 0.81", "98.959, 39.4414, -4.17188, 0.81", "99.7743, 39.701, -4.58112, 0.66", "101.197, 40.0895, -5.30008, 0.52", "102.29, 40.3585, -5.89985, 0.44", "103.015, 40.4947, -6.32407, 0.44", "103.653, 40.5877, -6.72154, 0.44", "104.154, 40.6314, -7.05334, 0.44", "104.987, 40.6869, -7.57593, 0.74", "105.694, 40.8184, -7.90561, 0.59", "106.171, 40.9623, -8.12414, 0.59", "114.689, 48.3682, -9.52932, 0.59", "123.465, 55.5062, -10.8733, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-110.623, -334.096, -4.26364, 0.52", "-111.352, -335.859, -4.40293, 0.52", "-111.659, -336.571, -4.45267, 0.29", "-112.085, -337.501, -4.52656, 0.44", "-112.487, -338.367, -4.60157, 0.44", "-112.807, -339.037, -4.66434, 0.29", "-113.294, -340.012, -4.77401, 0.29", "-113.796, -340.939, -4.89676, 0.81", "-114.173, -341.649, -5.01777, 1.18", "-114.37, -342.038, -5.09187, 1.4", "-114.678, -342.684, -5.21791, 1.4", "-114.947, -343.307, -5.33665, 1.11", "-115.477, -344.653, -5.57851, 0.52", "-115.83, -345.71, -5.74226, 0.44", "-116.074, -346.56, -5.85523, 0.74", "-116.352, -347.585, -5.97607, 0.81", "-116.55, -348.357, -6.0617, 0.81", "-116.738, -349.175, -6.14856, 0.74", "-116.971, -350.259, -6.21113, 0.22", "-117.073, -350.76, -6.23172, 0.22", "-117.232, -351.642, -6.26834, 0.22", "-117.342, -352.406, -6.27347, 0.66", "-117.437, -353.204, -6.24175, 0.81", "-117.557, -354.487, -6.13754, 0.66", "-117.629, -355.655, -5.98518, 0.22", "-117.646, -356.697, -5.80178, 0.22", "-117.621, -357.457, -5.63455, 0.22", "-117.589, -358.193, -5.42966, 0.96", "-117.58, -358.57, -5.31586, 1.18", "-117.572, -359.132, -5.14872, 1.18", "-117.572, -359.593, -4.98216, 1.18", "-117.605, -360.472, -4.68408, 0.74", "-117.713, -361.803, -4.28459, 0.22", "-117.765, -362.242, -4.16354, 0.22", "-117.838, -362.753, -4.02682, 0.44", "-117.905, -363.195, -3.92063, 0.44", "-118.062, -364.354, -3.67061, 0.22", "-118.146, -365.083, -3.53779, 0.96", "-118.186, -365.642, -3.45716, 1.18", "-118.212, -366.177, -3.38535, 1.25", "-118.256, -367.197, -3.25987, 0.96", "-118.359, -368.662, -3.10373, 0.29", "-118.466, -369.814, -3.0009, 0.22", "-118.626, -371.115, -2.91662, 0.22", "-118.733, -371.784, -2.88507, 0.81", "-118.849, -372.328, -2.87215, 0.96", "-119.365, -374.219, -2.8554, 0.22", "-119.565, -374.81, -2.85918, 0.22", "-119.916, -375.749, -2.86379, 0.59", "-120.19, -376.435, -2.86309, 0.59", "-120.591, -377.467, -2.85479, 0.52", "-120.899, -378.316, -2.83585, 0.52", "-121.288, -379.468, -2.77854, 0.52", "-121.436, -379.922, -2.74826, 0.96", "-121.68, -380.698, -2.6876, 0.96", "-121.943, -381.572, -2.61114, 0.59", "-122.394, -383.047, -2.4347, 0.22", "-122.848, -384.572, -2.24071, 0.22", "-123.06, -385.285, -2.14346, 0.22", "-123.259, -385.918, -2.05368, 0.96", "-123.399, -386.35, -1.98641, 1.18", "-123.695, -387.209, -1.83334, 0.52", "-124.31, -397.838, -2.10285, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-110.623, -334.096, -4.26364, 0.29", "-112.185, -333.624, -4.65258, 0.29", "-113.015, -333.587, -4.85779, 0.37", "-113.392, -333.667, -4.94878, 0.37", "-114.265, -333.978, -5.12233, 0.37", "-115.069, -334.334, -5.36519, 0.52", "-115.753, -334.664, -5.61354, 0.59", "-116.647, -335.222, -6.0038, 0.59", "-117.424, -335.753, -6.38442, 0.37", "-118.127, -336.255, -6.76146, 0.37", "-119.35, -337.167, -7.48231, 0.37", "-119.905, -337.553, -7.83182, 0.37", "-120.417, -337.883, -8.16291, 0.29", "-120.827, -338.126, -8.42554, 0.29", "-121.296, -338.392, -8.70986, 0.81", "-121.681, -338.622, -8.92001, 0.81", "-122.244, -338.997, -9.12788, 0.81", "-123.213, -339.724, -9.43318, 0.29", "-123.682, -340.112, -9.55783, 0.66", "-124.039, -340.424, -9.62923, 0.66", "-124.376, -340.734, -9.67989, 0.66", "-125.605, -341.914, -9.81863, 0.29", "-126.149, -342.463, -9.87965, 0.44", "-126.62, -342.937, -9.93427, 0.29", "-127.175, -343.484, -10.0151, 0.74", "-127.572, -343.857, -10.1031, 0.74", "-128.206, -344.399, -10.2958, 0.52", "-129.297, -345.234, -10.7164, 0.29", "-129.935, -345.687, -10.9937, 0.52", "-130.355, -345.971, -11.2096, 0.52", "-131.202, -346.531, -11.7326, 0.29", "-131.823, -346.913, -12.1454, 0.29", "-132.196, -347.116, -12.4093, 0.59", "-132.627, -347.333, -12.7434, 0.59", "-133.393, -347.712, -13.3704, 0.22", "-133.828, -347.915, -13.7142, 0.29", "-134.496, -348.224, -14.2052, 0.29", "-134.812, -348.376, -14.4332, 0.29", "-135.626, -348.809, -15.0047, 0.37", "-136.274, -349.21, -15.3646, 0.37", "-136.978, -349.699, -15.6465, 0.52", "-137.816, -350.361, -15.9005, 1.55", "-138.328, -350.818, -16.0245, 1.92", "-138.827, -351.293, -16.1162, 1.92", "-140.012, -352.47, -16.2478, 0.29", "-140.796, -353.298, -16.3091, 0.29", "-141.437, -354.011, -16.3313, 0.29", "-141.952, -354.588, -16.334, 0.74", "-142.208, -354.877, -16.3339, 0.96", "-142.434, -355.123, -16.3401, 1.11", "-143.086, -355.852, -16.3606, 0.52", "-143.509, -356.338, -16.3386, 0.29", "-144.142, -357.038, -16.2778, 0.22", "-144.579, -357.492, -16.233, 0.44", "-144.955, -357.861, -16.195, 0.44", "-146.001, -358.869, -16.0784, 0.22", "-146.64, -359.467, -15.9999, 0.22", "-147.253, -360.02, -15.9313, 1.25", "-147.822, -360.518, -15.8579, 1.55", "-148.094, -360.744, -15.828, 1.62" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "80.6013, -25.8656, 10.632, 0.74", "81.7806, -26.4439, 11.894, 0.74", "82.1246, -26.631, 12.2366, 0.74", "82.7167, -26.9964, 12.775, 0.59", "83.4166, -27.4889, 13.3402, 0.59", "84.07, -28.0006, 13.8133, 0.59", "84.3976, -28.2689, 14.0358, 0.59", "85.0457, -28.862, 14.4122, 0.59", "85.6004, -29.3952, 14.702, 0.81", "86.3373, -30.0969, 15.0821, 0.81", "86.9479, -30.6524, 15.3909, 0.37", "87.5842, -31.1896, 15.7134, 0.37", "88.3276, -31.8079, 16.0995, 0.37", "89.0813, -32.438, 16.5236, 0.37", "89.8013, -33.0106, 16.9541, 0.37", "90.881, -33.8246, 17.6407, 0.22", "92.0315, -34.6622, 18.3974, 0.22", "98.0723, -40.8874, 21.9408, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "80.6013, -25.8656, 10.632, 0.37", "80.6198, -27.1114, 10.136, 0.37", "80.6858, -27.9038, 9.87481, 0.37", "80.79, -28.6444, 9.65798, 0.37", "80.9402, -29.4135, 9.50807, 0.37", "81.0982, -30.0786, 9.40238, 0.37", "81.3122, -30.8588, 9.30544, 0.29", "81.7025, -31.9576, 9.15901, 0.22", "82.1606, -33.1219, 8.95727, 0.22", "82.7851, -34.5692, 8.64376, 0.22", "83.0251, -35.1039, 8.50006, 1.18", "83.2069, -35.5415, 8.33277, 1.4", "83.6002, -36.8757, 7.61243, 1.4", "83.7442, -37.9454, 6.86176, 0.44", "83.7362, -38.3063, 6.58424, 0.44", "83.6553, -38.8511, 6.14256, 0.29", "83.434, -39.7598, 5.45908, 0.29", "83.0835, -40.9086, 4.63432, 0.22", "82.745, -41.7929, 4.10414, 0.22", "82.4924, -42.3218, 3.79848, 1.03", "82.3541, -42.5906, 3.65637, 1.33", "82.1472, -42.9676, 3.48239, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-148.094, -360.744, -15.828, 0.29", "-149.205, -359.797, -15.9008, 0.29", "-149.45, -359.588, -15.9241, 0.52", "-149.827, -359.258, -15.971, 0.59", "-151.951, -357.385, -16.3691, 0.22", "-152.544, -356.866, -16.5017, 0.22", "-153.357, -356.165, -16.705, 0.66", "-153.785, -355.786, -16.8447, 0.66", "-155.588, -354.242, -17.4983, 0.22", "-156.328, -353.633, -17.7883, 0.22", "-157.005, -353.124, -18.0611, 0.52", "-157.486, -352.788, -18.2544, 0.66", "-158.807, -351.937, -18.778, 0.22", "-161.429, -350.287, -19.8101, 0.22", "-163.124, -349.275, -20.4661, 0.22", "-164.701, -348.348, -21.0353, 1.18", "-165.143, -348.093, -21.1945, 1.4", "-165.825, -347.713, -21.4345, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-148.094, -360.744, -15.828, 0.22", "-148.903, -361.958, -15.9331, 0.22", "-149.575, -362.949, -15.9583, 0.22", "-149.866, -363.393, -15.9541, 0.44", "-149.992, -363.588, -15.9494, 0.44", "-151.156, -365.454, -15.8831, 0.22", "-151.701, -366.327, -15.852, 0.44", "-152.166, -367.06, -15.8179, 0.22", "-152.463, -367.552, -15.7765, 0.59", "-152.717, -367.978, -15.7309, 0.66", "-152.906, -368.305, -15.6855, 0.44", "-156.767, -375.825, -14.1582, 0.44" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "axon_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "axon_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_ChC_85076eeecc_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, axon_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_49(0), soma_0(0.49999994654580493)
    connect dend_42(0), soma_0(0.49999994654580493)
    connect dend_27(0), soma_0(0.49999994654580493)
    connect dend_20(0), soma_0(0.49999994654580493)
    connect dend_11(0), soma_0(0.49999994654580493)
    connect dend_0(0), soma_0(0.49999994654580493)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.44259, -9.54825, -1.27888, 2.30647 ) }
    soma_0 { pt3dadd( -1.2819, -8.63231, -1.15821, 3.63473 ) }
    soma_0 { pt3dadd( -1.1212, -7.71637, -1.03754, 6.81375 ) }
    soma_0 { pt3dadd( -0.960502, -6.80044, -0.916865, 9.18535 ) }
    soma_0 { pt3dadd( -0.799804, -5.8845, -0.796194, 10.2157 ) }
    soma_0 { pt3dadd( -0.639107, -4.96856, -0.675522, 11.1797 ) }
    soma_0 { pt3dadd( -0.478409, -4.05262, -0.554851, 12.0566 ) }
    soma_0 { pt3dadd( -0.317712, -3.13668, -0.43418, 12.6775 ) }
    soma_0 { pt3dadd( -0.157014, -2.22074, -0.313508, 13.0617 ) }
    soma_0 { pt3dadd( 0.00368301, -1.3048, -0.192837, 13.2009 ) }
    soma_0 { pt3dadd( 0.16438, -0.388856, -0.0721652, 13.2418 ) }
    soma_0 { pt3dadd( 0.325078, 0.527084, 0.0485063, 12.889 ) }
    soma_0 { pt3dadd( 0.485775, 1.44302, 0.169178, 12.4912 ) }
    soma_0 { pt3dadd( 0.646473, 2.35896, 0.289849, 12.2347 ) }
    soma_0 { pt3dadd( 0.80717, 3.2749, 0.410521, 12.0486 ) }
    soma_0 { pt3dadd( 0.967868, 4.19084, 0.531192, 11.9346 ) }
    soma_0 { pt3dadd( 1.12856, 5.10678, 0.651864, 11.8925 ) }
    soma_0 { pt3dadd( 1.28926, 6.02272, 0.772535, 11.1454 ) }
    soma_0 { pt3dadd( 1.44996, 6.93866, 0.893206, 8.66152 ) }
    soma_0 { pt3dadd( 1.61066, 7.8546, 1.01388, 5.25757 ) }
    soma_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 3.12251 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.66144, -6.91316, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.66144, -6.91316, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.32102, -7.9855, -8.19286, 1.77 ) }
    dend_49 { pt3dadd( -3.06176, -8.78377, -8.31964, 1.77 ) }
    dend_49 { pt3dadd( -2.6655, -10.035, -8.50675, 1.55 ) }
    dend_49 { pt3dadd( -2.43277, -10.8647, -8.65535, 1.69 ) }
    dend_49 { pt3dadd( -2.27344, -11.5093, -8.78483, 1.77 ) }
    dend_49 { pt3dadd( -2.13387, -12.1365, -8.94145, 1.77 ) }
    dend_49 { pt3dadd( -1.95667, -12.9773, -9.20471, 1.25 ) }
    dend_49 { pt3dadd( -1.66944, -14.2671, -9.55963, 0.74 ) }
    dend_49 { pt3dadd( -2.22157, -13.7051, -10.1676, 0.74 ) }
    dend_49 { pt3dadd( -2.65214, -13.5064, -10.8147, 0.74 ) }
    dend_49 { pt3dadd( -3.40711, -13.2364, -11.9778, 1.18 ) }
    dend_49 { pt3dadd( -3.81296, -13.1685, -12.641, 1.18 ) }
    dend_49 { pt3dadd( -4.42172, -13.0322, -13.5577, 0.52 ) }
    dend_49 { pt3dadd( -5.1421, -12.784, -14.5426, 0.52 ) }
    dend_49 { pt3dadd( -5.96096, -12.82, -15.7873, 0.74 ) }
    dend_49 { pt3dadd( -6.30603, -13.0006, -16.634, 0.74 ) }
    dend_49 { pt3dadd( -6.47065, -13.2791, -17.3729, 0.74 ) }
    dend_49 { pt3dadd( -6.73634, -13.6379, -18.488, 1.11 ) }
    dend_49 { pt3dadd( -6.97352, -13.8253, -19.2017, 1.69 ) }
    dend_49 { pt3dadd( -7.36169, -13.9542, -19.9224, 1.77 ) }
    dend_49 { pt3dadd( -8.24598, -14.2023, -21.5151, 1.33 ) }
    dend_49 { pt3dadd( -8.71662, -14.4244, -22.486, 1.4 ) }
    dend_49 { pt3dadd( -8.9939, -14.7201, -23.2152, 1.55 ) }
    dend_49 { pt3dadd( -9.15155, -15.212, -23.9787, 1.33 ) }
    dend_49 { pt3dadd( -9.16871, -16.0602, -24.948, 0.74 ) }
    dend_49 { pt3dadd( -9.02119, -16.7546, -25.5112, 1.03 ) }
    dend_49 { pt3dadd( -8.8057, -17.3376, -25.8672, 1.47 ) }
    dend_49 { pt3dadd( -8.57706, -17.7208, -26.123, 1.62 ) }
    dend_49 { pt3dadd( -8.21488, -18.1784, -26.4757, 1.62 ) }
    dend_49 { pt3dadd( -7.80442, -18.5461, -26.8003, 0.52 ) }
    dend_49 { pt3dadd( -7.31652, -18.8921, -27.1584, 0.52 ) }
    dend_49 { pt3dadd( -7.19514, -19.0729, -27.4662, 0.52 ) }
    dend_49 { pt3dadd( -7.21981, -19.4429, -28.2634, 0.66 ) }
    dend_49 { pt3dadd( -7.37763, -19.8063, -29.1058, 0.74 ) }
    dend_49 { pt3dadd( -7.63502, -19.9546, -29.7, 0.44 ) }
    dend_49 { pt3dadd( -8.07853, -19.9528, -30.3286, 0.44 ) }
    dend_49 { pt3dadd( -8.73224, -19.8765, -31.128, 0.44 ) }
    dend_49 { pt3dadd( -9.19696, -19.9214, -31.8392, 0.44 ) }
    dend_49 { pt3dadd( -9.45536, -20.0099, -32.3436, 0.44 ) }
    dend_49 { pt3dadd( -9.93575, -20.3054, -33.3237, 0.66 ) }
    dend_49 { pt3dadd( -10.1703, -20.7643, -34.314, 1.11 ) }
    dend_49 { pt3dadd( -10.2917, -20.9325, -34.658, 0.96 ) }
    dend_49 { pt3dadd( -10.609, -21.2871, -35.4464, 1.18 ) }
    dend_49 { pt3dadd( -10.7324, -21.4389, -35.7546, 1.69 ) }
    dend_49 { pt3dadd( -10.933, -21.6725, -36.2014, 1.69 ) }
    dend_49 { pt3dadd( -11.6976, -22.4994, -37.6963, 0.88 ) }
    dend_49 { pt3dadd( -12.1645, -22.8928, -38.4768, 2.14 ) }
    dend_49 { pt3dadd( -13.2237, -23.4245, -39.9192, 2.28 ) }
    dend_49 { pt3dadd( -13.3725, -23.4629, -40.0843, 2.28 ) }
    dend_49 { pt3dadd( -14.2318, -23.5384, -40.8859, 0.44 ) }
    dend_49 { pt3dadd( -14.7223, -23.501, -41.2464, 0.44 ) }
    dend_49 { pt3dadd( -15.3018, -23.3887, -41.5788, 0.81 ) }
    dend_49 { pt3dadd( -15.8962, -23.245, -41.9338, 0.81 ) }
    dend_49 { pt3dadd( -16.1672, -23.2096, -42.128, 0.96 ) }
    dend_49 { pt3dadd( -16.7056, -23.2556, -42.6012, 0.66 ) }
    dend_49 { pt3dadd( -17.2469, -23.4305, -43.1571, 1.99 ) }
    dend_49 { pt3dadd( -17.6524, -23.6398, -43.6261, 2.21 ) }
    dend_49 { pt3dadd( -18.0483, -23.9157, -44.1159, 2.5 ) }
    dend_49 { pt3dadd( -19.1376, -24.8628, -45.5679, 0.66 ) }
    dend_49 { pt3dadd( -19.7023, -25.4806, -46.4254, 0.66 ) }
    dend_49 { pt3dadd( -20.0512, -25.961, -47.0145, 0.66 ) }
    dend_49 { pt3dadd( -20.4103, -26.5323, -47.645, 1.55 ) }
    dend_49 { pt3dadd( -20.5772, -26.8133, -47.9242, 2.21 ) }
    dend_49 { pt3dadd( -20.7381, -27.1068, -48.1906, 2.21 ) }
    dend_49 { pt3dadd( -21.182, -28.0401, -48.9918, 0.29 ) }
    dend_49 { pt3dadd( -21.4195, -28.6421, -49.5487, 0.29 ) }
    dend_49 { pt3dadd( -21.5748, -29.0577, -49.9258, 1.55 ) }
    dend_49 { pt3dadd( -21.7683, -29.5592, -50.3707, 1.99 ) }
    dend_49 { pt3dadd( -21.9464, -30.0081, -50.7783, 2.36 ) }
    dend_49 { pt3dadd( -22.4469, -31.2291, -51.9211, 0.59 ) }
    dend_49 { pt3dadd( -22.6957, -31.855, -52.5465, 1.84 ) }
    dend_49 { pt3dadd( -22.7936, -32.1456, -52.8722, 1.84 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 95/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -6.50143, -1.62167, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.50143, -1.62167, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.94245, -2.3633, 2.12122, 1.92 ) }
    dend_42 { pt3dadd( -7.69263, -3.83389, 2.04493, 1.92 ) }
    dend_42 { pt3dadd( -8.46622, -5.17553, 1.96798, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -9.06254, -6.08286, 1.90289, 2.36 ) }
    dend_42 { pt3dadd( -9.90754, -7.18077, 1.81316, 2.28 ) }
    dend_42 { pt3dadd( -10.8359, -8.19445, 1.71053, 2.36 ) }
    dend_42 { pt3dadd( -11.8746, -9.13246, 1.57728, 2.36 ) }
    dend_42 { pt3dadd( -13.4867, -10.1841, 1.38709, 1.77 ) }
    dend_42 { pt3dadd( -14.3735, -10.5301, 1.32045, 1.77 ) }
    dend_42 { pt3dadd( -15.7638, -10.8121, 1.28339, 1.99 ) }
    dend_42 { pt3dadd( -17.0028, -10.9279, 1.36206, 1.99 ) }
    dend_42 { pt3dadd( -17.6158, -10.949, 1.43775, 1.99 ) }
    dend_42 { pt3dadd( -18.5296, -10.9911, 1.60078, 1.77 ) }
    dend_42 { pt3dadd( -19.944, -11.2253, 1.9667, 1.47 ) }
    dend_42 { pt3dadd( -20.9649, -11.5718, 2.25554, 1.47 ) }
    dend_42 { pt3dadd( -22.2517, -12.2775, 2.58068, 1.33 ) }
    dend_42 { pt3dadd( -22.8366, -12.7093, 2.6896, 1.99 ) }
    dend_42 { pt3dadd( -23.8308, -13.5919, 2.79873, 1.99 ) }
    dend_42 { pt3dadd( -24.9759, -14.7389, 2.81335, 1.77 ) }
    dend_42 { pt3dadd( -26.2426, -16.1402, 2.70188, 1.92 ) }
    dend_42 { pt3dadd( -27.4139, -17.4721, 2.46291, 1.69 ) }
    dend_42 { pt3dadd( -28.1342, -18.2454, 2.23128, 1.69 ) }
    dend_42 { pt3dadd( -29.0366, -19.1162, 1.89007, 1.84 ) }
    dend_42 { pt3dadd( -29.8598, -19.8446, 1.57569, 1.84 ) }
    dend_42 { pt3dadd( -30.9254, -20.7543, 1.18533, 1.69 ) }
    dend_42 { pt3dadd( -32.0965, -21.7677, 0.81998, 1.55 ) }
    dend_42 { pt3dadd( -33.2791, -22.8645, 0.543987, 1.4 ) }
    dend_42 { pt3dadd( -34.248, -23.7674, 0.347301, 1.25 ) }
    dend_42 { pt3dadd( -35.2619, -24.7548, 0.164668, 1.33 ) }
    dend_42 { pt3dadd( -36.222, -25.7814, 0.0584312, 1.47 ) }
    dend_42 { pt3dadd( -37.1208, -26.8705, 0.101516, 1.62 ) }
    dend_42 { pt3dadd( -37.7563, -27.8893, 0.325375, 1.77 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 29/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.448551, -8.29066, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.448551, -8.29066, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.657663, -9.69529, -4.83477, 2.95 ) }
    dend_27 { pt3dadd( 0.957372, -11.8751, -4.73105, 2.8 ) }
    dend_27 { pt3dadd( 1.13019, -13.3358, -4.63223, 2.8 ) }
    dend_27 { pt3dadd( 1.28071, -14.9693, -4.5077, 3.02 ) }
    dend_27 { pt3dadd( 1.35272, -16.0534, -4.42433, 3.02 ) }
    dend_27 { pt3dadd( 1.38286, -17.1168, -4.33818, 3.02 ) }
    dend_27 { pt3dadd( 1.35381, -18.7192, -4.20605, 3.02 ) }
    dend_27 { pt3dadd( 1.23602, -20.4143, -4.06074, 2.36 ) }
    dend_27 { pt3dadd( 0.919911, -23.3794, -3.90194, 2.36 ) }
    dend_27 { pt3dadd( 0.69171, -25.0404, -3.88644, 2.43 ) }
    dend_27 { pt3dadd( 0.429188, -26.6481, -3.92602, 2.43 ) }
    dend_27 { pt3dadd( 0.086051, -28.5326, -4.03832, 2.43 ) }
    dend_27 { pt3dadd( -0.447467, -31.1345, -4.26753, 2.28 ) }
    dend_27 { pt3dadd( -1.02236, -33.8041, -4.56737, 2.14 ) }
    dend_27 { pt3dadd( -1.82499, -37.3406, -5.0365, 2.06 ) }
    dend_27 { pt3dadd( -2.38203, -39.7952, -5.40293, 2.43 ) }
    dend_27 { pt3dadd( -2.73389, -41.3582, -5.66887, 2.58 ) }
    dend_27 { pt3dadd( -3.11118, -43.0054, -5.98703, 2.58 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.381405, 7.21333, -7.5337, 1.62 ) }
    dend_20 { pt3dadd( -0.476153, 8.0257, -7.59871, 1.62 ) }
    dend_20 { pt3dadd( -0.625979, 9.22085, -7.63651, 1.92 ) }
    dend_20 { pt3dadd( -0.851931, 10.8174, -7.70188, 1.33 ) }
    dend_20 { pt3dadd( -1.1369, 12.5358, -7.79818, 1.69 ) }
    dend_20 { pt3dadd( -1.37063, 13.8073, -7.84718, 2.21 ) }
    dend_20 { pt3dadd( -1.57097, 14.8702, -7.83875, 2.21 ) }
    dend_20 { pt3dadd( -1.81218, 16.0667, -7.78021, 1.99 ) }
    dend_20 { pt3dadd( -2.03856, 17.0842, -7.69136, 1.77 ) }
    dend_20 { pt3dadd( -2.30737, 18.2161, -7.56071, 1.99 ) }
    dend_20 { pt3dadd( -2.59891, 19.414, -7.41715, 1.99 ) }
    dend_20 { pt3dadd( -3.09723, 21.5187, -7.20784, 1.11 ) }
    dend_20 { pt3dadd( -3.40485, 22.8344, -7.11805, 1.11 ) }
    dend_20 { pt3dadd( -3.73449, 24.1582, -7.0824, 1.25 ) }
    dend_20 { pt3dadd( -4.04876, 25.2697, -7.07627, 1.4 ) }
    dend_20 { pt3dadd( -4.46014, 26.4846, -7.14734, 0.81 ) }
    dend_20 { pt3dadd( -4.94463, 27.6354, -7.32898, 0.74 ) }
    dend_20 { pt3dadd( -5.32963, 28.3878, -7.52236, 0.74 ) }
    dend_20 { pt3dadd( -5.80423, 29.204, -7.78394, 0.74 ) }
    dend_20 { pt3dadd( -6.35577, 30.093, -8.11654, 0.96 ) }
    dend_20 { pt3dadd( -6.87575, 30.9298, -8.45247, 0.96 ) }
    dend_20 { pt3dadd( -7.41825, 31.77, -8.79797, 1.55 ) }
    dend_20 { pt3dadd( -8.03103, 32.7119, -9.19934, 2.06 ) }
    dend_20 { pt3dadd( -8.54947, 33.5696, -9.57368, 2.43 ) }
    dend_20 { pt3dadd( -9.14405, 34.7246, -10.0818, 2.36 ) }
    dend_20 { pt3dadd( -9.81724, 36.298, -10.7562, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.32144, 7.89733, 0.346303, 2.5 ) }
    dend_11 { pt3dadd( -2.39503, 8.05164, 0.34714, 2.5 ) }
    dend_11 { pt3dadd( -3.56177, 10.2134, 0.302053, 1.77 ) }
    dend_11 { pt3dadd( -4.37613, 11.6742, 0.310387, 1.55 ) }
    dend_11 { pt3dadd( -5.33128, 13.3369, 0.38817, 1.55 ) }
    dend_11 { pt3dadd( -6.05906, 14.6056, 0.496677, 1.33 ) }
    dend_11 { pt3dadd( -7.16949, 16.5735, 0.727566, 1.33 ) }
    dend_11 { pt3dadd( -7.86389, 17.7757, 0.905218, 1.55 ) }
    dend_11 { pt3dadd( -8.91159, 19.5567, 1.20714, 1.55 ) }
    dend_11 { pt3dadd( -9.99969, 21.4935, 1.54203, 1.62 ) }
    dend_11 { pt3dadd( -10.8684, 23.2197, 1.8233, 1.4 ) }
    dend_11 { pt3dadd( -11.6784, 25.1196, 2.09799, 1.4 ) }
    dend_11 { pt3dadd( -12.1391, 26.2866, 2.26861, 1.4 ) }
    dend_11 { pt3dadd( -12.8556, 28.1635, 2.52795, 1.4 ) }
    dend_11 { pt3dadd( -13.5358, 30.0384, 2.70897, 1.4 ) }
    dend_11 { pt3dadd( -14.3006, 32.3559, 2.83171, 1.77 ) }
    dend_11 { pt3dadd( -14.9444, 34.435, 2.85466, 2.73 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.82855, 3.96433, 1.3463, 2.58 ) }
    dend_0 { pt3dadd( 6.88269, 4.01452, 1.35122, 2.58 ) }
    dend_0 { pt3dadd( 7.56515, 4.66312, 1.42248, 2.58 ) }
    dend_0 { pt3dadd( 8.33947, 5.40671, 1.52729, 1.84 ) }
    dend_0 { pt3dadd( 8.91269, 5.94619, 1.62028, 2.06 ) }
    dend_0 { pt3dadd( 9.65279, 6.64081, 1.75933, 2.06 ) }
    dend_0 { pt3dadd( 10.1418, 7.08916, 1.88285, 2.58 ) }
    dend_0 { pt3dadd( 10.6846, 7.58344, 2.05128, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 11.0435, 7.91558, 2.18738, 2.58 ) }
    dend_0 { pt3dadd( 11.6803, 8.47852, 2.45945, 2.58 ) }
    dend_0 { pt3dadd( 12.1283, 8.84644, 2.66148, 2.43 ) }
    dend_0 { pt3dadd( 13.0669, 9.57246, 3.12128, 2.21 ) }
    dend_0 { pt3dadd( 13.7515, 10.0715, 3.47059, 1.99 ) }
    dend_0 { pt3dadd( 14.3009, 10.4485, 3.73395, 1.99 ) }
    dend_0 { pt3dadd( 15.0135, 10.8656, 4.04171, 1.69 ) }
    dend_0 { pt3dadd( 15.6091, 11.1043, 4.26763, 1.69 ) }
    dend_0 { pt3dadd( 16.6638, 11.2416, 4.61432, 2.06 ) }
    dend_0 { pt3dadd( 17.3258, 11.1317, 4.79458, 2.06 ) }
    dend_0 { pt3dadd( 18.89, 10.4841, 5.21308, 1.69 ) }
    dend_0 { pt3dadd( 19.9658, 9.92346, 5.48497, 1.92 ) }
    dend_0 { pt3dadd( 21.6478, 8.83745, 5.88001, 1.92 ) }
    dend_0 { pt3dadd( 23.2494, 7.58749, 6.22147, 2.06 ) }
    dend_0 { pt3dadd( 24.0705, 6.80864, 6.37596, 2.28 ) }
    dend_0 { pt3dadd( 24.6863, 6.09904, 6.50013, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 0.828859 ) }
    axon_0 { pt3dadd( 4.36343, 23.5449, 1.13455, 0.828859 ) }
    axon_0 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.828859 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 19/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -22.7936, -32.1456, -52.8722, 0.96 ) }
    dend_51 { pt3dadd( -21.2236, -35.9079, -58.4649, 0.96 ) }
    dend_51 { pt3dadd( -20.9614, -36.7172, -59.507, 0.96 ) }
    dend_51 { pt3dadd( -20.6662, -37.7893, -60.7311, 0.96 ) }
    dend_51 { pt3dadd( -20.2897, -39.2767, -62.294, 1.55 ) }
    dend_51 { pt3dadd( -20.0242, -40.5111, -63.4769, 0.22 ) }
    dend_51 { pt3dadd( -19.7897, -41.9138, -64.6321, 0.22 ) }
    dend_51 { pt3dadd( -19.7504, -42.7778, -65.0711, 1.11 ) }
    dend_51 { pt3dadd( -19.7398, -43.5809, -65.418, 1.4 ) }
    dend_51 { pt3dadd( -19.6971, -44.6702, -65.7921, 1.4 ) }
    dend_51 { pt3dadd( -19.5457, -47.0206, -66.4403, 0.22 ) }
    dend_51 { pt3dadd( -19.2673, -49.4488, -67.019, 0.22 ) }
    dend_51 { pt3dadd( -19.1385, -50.2528, -67.1916, 0.74 ) }
    dend_51 { pt3dadd( -19.06, -50.6841, -67.2692, 0.74 ) }
    dend_51 { pt3dadd( -18.6213, -52.9835, -67.6123, 0.15 ) }
    dend_51 { pt3dadd( -18.5477, -53.3403, -67.6497, 0.37 ) }
    dend_51 { pt3dadd( -18.0466, -55.2994, -67.7797, 0.22 ) }
    dend_51 { pt3dadd( -17.712, -56.4019, -67.8746, 0.22 ) }
    dend_51 { pt3dadd( -17.447, -57.2807, -67.9472, 0.74 ) }
    dend_51 { pt3dadd( -17.2221, -58.1653, -68.0059, 0.88 ) }
    dend_51 { pt3dadd( -17.1866, -58.4573, -68.0206, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 40/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -22.7936, -32.1456, -52.8722, 2.87 ) }
    dend_50 { pt3dadd( -23.2625, -32.2683, -52.9476, 2.87 ) }
    dend_50 { pt3dadd( -24.7463, -32.7738, -53.2479, 0.22 ) }
    dend_50 { pt3dadd( -26.0954, -33.3987, -53.553, 0.22 ) }
    dend_50 { pt3dadd( -26.7488, -33.7365, -53.7035, 1.69 ) }
    dend_50 { pt3dadd( -26.9544, -33.8507, -53.751, 2.21 ) }
    dend_50 { pt3dadd( -27.2893, -34.0455, -53.8283, 2.21 ) }
    dend_50 { pt3dadd( -28.5242, -34.8734, -54.1034, 0.22 ) }
    dend_50 { pt3dadd( -29.6156, -35.7664, -54.3728, 0.22 ) }
    dend_50 { pt3dadd( -29.9546, -36.0694, -54.4628, 1.25 ) }
    dend_50 { pt3dadd( -30.2316, -36.3198, -54.5371, 1.25 ) }
    dend_50 { pt3dadd( -30.5991, -36.6483, -54.6406, 1.25 ) }
    dend_50 { pt3dadd( -31.3469, -37.2724, -54.8513, 0.15 ) }
    dend_50 { pt3dadd( -31.7707, -37.6107, -54.9668, 0.15 ) }
    dend_50 { pt3dadd( -32.1034, -37.8473, -55.062, 0.96 ) }
    dend_50 { pt3dadd( -32.48, -38.0884, -55.1824, 1.18 ) }
    dend_50 { pt3dadd( -32.6523, -38.1838, -55.2402, 1.18 ) }
    dend_50 { pt3dadd( -33.7595, -38.7054, -55.6757, 0.22 ) }
    dend_50 { pt3dadd( -34.0523, -38.8033, -55.8053, 0.52 ) }
    dend_50 { pt3dadd( -34.3179, -38.8776, -55.926, 0.52 ) }
    dend_50 { pt3dadd( -35.0006, -39.0473, -56.2322, 0.22 ) }
    dend_50 { pt3dadd( -35.4242, -39.1483, -56.4271, 1.25 ) }
    dend_50 { pt3dadd( -36.0474, -39.3188, -56.7046, 1.4 ) }
    dend_50 { pt3dadd( -37.2529, -39.7563, -57.2737, 0.22 ) }
    dend_50 { pt3dadd( -38.0796, -40.1569, -57.668, 0.22 ) }
    dend_50 { pt3dadd( -38.3943, -40.3551, -57.8211, 0.74 ) }
    dend_50 { pt3dadd( -38.7998, -40.6865, -58.0199, 0.88 ) }
    dend_50 { pt3dadd( -39.3679, -41.3714, -58.3932, 0.22 ) }
    dend_50 { pt3dadd( -39.8275, -42.2722, -58.7704, 0.22 ) }
    dend_50 { pt3dadd( -40.0143, -42.8682, -58.9804, 1.99 ) }
    dend_50 { pt3dadd( -40.0913, -43.2356, -59.0879, 2.36 ) }
    dend_50 { pt3dadd( -40.1515, -43.5972, -59.192, 2.36 ) }
    dend_50 { pt3dadd( -40.3974, -45.632, -59.766, 0.15 ) }
    dend_50 { pt3dadd( -40.4892, -46.8994, -60.145, 0.15 ) }
    dend_50 { pt3dadd( -40.5042, -47.2297, -60.2302, 0.44 ) }
    dend_50 { pt3dadd( -40.5135, -47.8666, -60.3776, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 76/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -37.7563, -27.8893, 0.325375, 0.96 ) }
    dend_44 { pt3dadd( -38.8716, -28.2886, -0.0873949, 0.96 ) }
    dend_44 { pt3dadd( -39.9336, -28.7042, -0.487883, 1.25 ) }
    dend_44 { pt3dadd( -41.4639, -29.3026, -1.05823, 1.25 ) }
    dend_44 { pt3dadd( -44.1301, -30.2625, -1.97723, 1.18 ) }
    dend_44 { pt3dadd( -45.9448, -30.8393, -2.54219, 1.11 ) }
    dend_44 { pt3dadd( -47.3426, -31.2519, -2.96266, 0.88 ) }
    dend_44 { pt3dadd( -49.1836, -31.8058, -3.54492, 0.96 ) }
    dend_44 { pt3dadd( -50.2375, -32.1227, -3.88757, 0.96 ) }
    dend_44 { pt3dadd( -51.7846, -32.599, -4.40027, 0.96 ) }
    dend_44 { pt3dadd( -53.3091, -33.0749, -4.81958, 0.96 ) }
    dend_44 { pt3dadd( -54.6051, -33.4672, -5.10067, 1.18 ) }
    dend_44 { pt3dadd( -56.1986, -33.9268, -5.3764, 1.03 ) }
    dend_44 { pt3dadd( -56.987, -34.1312, -5.43203, 1.03 ) }
    dend_44 { pt3dadd( -58.6352, -34.5012, -5.36522, 1.18 ) }
    dend_44 { pt3dadd( -59.6357, -34.6828, -5.17534, 1.18 ) }
    dend_44 { pt3dadd( -61.8866, -34.959, -4.30204, 0.96 ) }
    dend_44 { pt3dadd( -62.7121, -35.0119, -3.89925, 1.11 ) }
    dend_44 { pt3dadd( -64.3187, -35.0825, -3.02977, 1.11 ) }
    dend_44 { pt3dadd( -65.6062, -35.1713, -2.31723, 1.11 ) }
    dend_44 { pt3dadd( -67.1207, -35.3332, -1.47936, 1.11 ) }
    dend_44 { pt3dadd( -69.1426, -35.715, -0.384569, 1.55 ) }
    dend_44 { pt3dadd( -70.5898, -36.1474, 0.338834, 1.03 ) }
    dend_44 { pt3dadd( -72.3208, -36.8752, 1.17687, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( -73.7968, -37.7043, 1.8401, 0.74 ) }
    dend_44 { pt3dadd( -74.6416, -38.3198, 2.19122, 0.74 ) }
    dend_44 { pt3dadd( -75.7316, -39.3236, 2.5551, 0.74 ) }
    dend_44 { pt3dadd( -76.8126, -40.5391, 2.80729, 0.66 ) }
    dend_44 { pt3dadd( -77.7788, -41.7962, 2.98092, 0.88 ) }
    dend_44 { pt3dadd( -78.409, -42.7138, 3.04991, 1.03 ) }
    dend_44 { pt3dadd( -79.0651, -43.7943, 3.09343, 1.03 ) }
    dend_44 { pt3dadd( -79.9034, -45.1864, 3.12577, 0.88 ) }
    dend_44 { pt3dadd( -80.9504, -46.822, 3.14161, 0.88 ) }
    dend_44 { pt3dadd( -81.5446, -47.6415, 3.13618, 0.88 ) }
    dend_44 { pt3dadd( -82.4294, -48.6479, 3.13175, 0.88 ) }
    dend_44 { pt3dadd( -84.1588, -50.2592, 3.13582, 0.88 ) }
    dend_44 { pt3dadd( -85.1736, -50.9885, 3.14221, 0.88 ) }
    dend_44 { pt3dadd( -86.6318, -51.7533, 3.15724, 0.88 ) }
    dend_44 { pt3dadd( -87.6163, -52.1039, 3.16394, 0.96 ) }
    dend_44 { pt3dadd( -88.7774, -52.4087, 3.13913, 0.96 ) }
    dend_44 { pt3dadd( -89.8336, -52.6061, 3.12068, 0.96 ) }
    dend_44 { pt3dadd( -91.0168, -52.7913, 3.11118, 0.52 ) }
    dend_44 { pt3dadd( -91.8233, -53.0507, 3.12078, 0.52 ) }
    dend_44 { pt3dadd( -92.4275, -53.5175, 3.18356, 0.52 ) }
    dend_44 { pt3dadd( -93.0095, -54.394, 3.38974, 0.81 ) }
    dend_44 { pt3dadd( -93.4523, -55.3222, 3.66322, 0.96 ) }
    dend_44 { pt3dadd( -93.7677, -56.3952, 3.99575, 0.96 ) }
    dend_44 { pt3dadd( -94.1041, -58.3183, 4.60028, 0.81 ) }
    dend_44 { pt3dadd( -94.2079, -59.2596, 4.90629, 0.81 ) }
    dend_44 { pt3dadd( -94.2866, -60.4522, 5.34735, 1.11 ) }
    dend_44 { pt3dadd( -94.3757, -61.1275, 5.65293, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 27/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -37.7563, -27.8893, 0.325375, 1.33 ) }
    dend_43 { pt3dadd( -38.7607, -28.0545, 1.08472, 1.33 ) }
    dend_43 { pt3dadd( -39.7272, -28.2545, 1.71741, 1.18 ) }
    dend_43 { pt3dadd( -41.5391, -28.5994, 2.84289, 0.88 ) }
    dend_43 { pt3dadd( -42.4124, -28.7346, 3.33414, 0.74 ) }
    dend_43 { pt3dadd( -43.6895, -28.8829, 3.96089, 0.74 ) }
    dend_43 { pt3dadd( -44.9875, -28.9621, 4.58473, 0.74 ) }
    dend_43 { pt3dadd( -45.9652, -29.0014, 5.0169, 0.59 ) }
    dend_43 { pt3dadd( -47.1141, -28.9906, 5.50983, 0.59 ) }
    dend_43 { pt3dadd( -48.0187, -28.9278, 5.89637, 0.52 ) }
    dend_43 { pt3dadd( -48.9344, -28.7605, 6.34642, 0.52 ) }
    dend_43 { pt3dadd( -50.6661, -28.2286, 7.31125, 0.74 ) }
    dend_43 { pt3dadd( -51.7677, -27.7928, 7.99219, 0.59 ) }
    dend_43 { pt3dadd( -52.7846, -27.3758, 8.64735, 0.44 ) }
    dend_43 { pt3dadd( -53.8832, -26.9806, 9.3884, 0.37 ) }
    dend_43 { pt3dadd( -54.764, -26.7507, 10.0003, 0.66 ) }
    dend_43 { pt3dadd( -55.5476, -26.6712, 10.4608, 0.66 ) }
    dend_43 { pt3dadd( -56.054, -26.704, 10.6629, 0.66 ) }
    dend_43 { pt3dadd( -56.7221, -26.7894, 10.8971, 0.44 ) }
    dend_43 { pt3dadd( -57.4953, -26.9414, 11.1374, 0.44 ) }
    dend_43 { pt3dadd( -58.8728, -27.2227, 11.5331, 0.44 ) }
    dend_43 { pt3dadd( -60.7749, -27.6521, 12.0892, 0.74 ) }
    dend_43 { pt3dadd( -61.9022, -27.9454, 12.4181, 0.74 ) }
    dend_43 { pt3dadd( -63.4581, -28.3382, 12.8513, 0.52 ) }
    dend_43 { pt3dadd( -64.9122, -28.6883, 13.2382, 0.59 ) }
    dend_43 { pt3dadd( -66.1591, -28.9829, 13.5487, 0.44 ) }
    dend_43 { pt3dadd( -67.8923, -29.4586, 13.9858, 0.37 ) }
    dend_43 { pt3dadd( -69.1399, -29.9055, 14.3161, 0.37 ) }
    dend_43 { pt3dadd( -70.4961, -30.5741, 14.6597, 0.29 ) }
    dend_43 { pt3dadd( -71.139, -31.0192, 14.8179, 0.29 ) }
    dend_43 { pt3dadd( -71.8996, -31.6957, 15.0759, 0.29 ) }
    dend_43 { pt3dadd( -72.5513, -32.3383, 15.3533, 0.37 ) }
    dend_43 { pt3dadd( -73.292, -33.086, 15.7375, 0.37 ) }
    dend_43 { pt3dadd( -74.0468, -33.8013, 16.1861, 0.37 ) }
    dend_43 { pt3dadd( -74.8619, -34.6408, 16.7417, 0.66 ) }
    dend_43 { pt3dadd( -75.6762, -35.453, 17.3187, 0.81 ) }
    dend_43 { pt3dadd( -76.3051, -36.0083, 17.7614, 0.81 ) }
    dend_43 { pt3dadd( -77.2249, -36.6617, 18.3555, 0.22 ) }
    dend_43 { pt3dadd( -78.3559, -37.3188, 19.0474, 0.22 ) }
    dend_43 { pt3dadd( -89.3357, -38.3946, 23.5991, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 67/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.11118, -43.0054, -5.98703, 1.55 ) }
    dend_33 { pt3dadd( -2.7459, -44.0238, -5.97659, 1.55 ) }
    dend_33 { pt3dadd( -2.38238, -45.0612, -5.96369, 1.55 ) }
    dend_33 { pt3dadd( -2.07465, -45.973, -5.95544, 1.55 ) }
    dend_33 { pt3dadd( -1.73666, -47.0077, -5.94028, 1.69 ) }
    dend_33 { pt3dadd( -1.49435, -47.802, -5.92322, 1.69 ) }
    dend_33 { pt3dadd( -1.33315, -48.3964, -5.9089, 1.69 ) }
    dend_33 { pt3dadd( -1.11398, -49.384, -5.88102, 1.55 ) }
    dend_33 { pt3dadd( -0.878922, -50.6773, -5.84451, 1.47 ) }
    dend_33 { pt3dadd( -0.743986, -51.7563, -5.80092, 1.33 ) }
    dend_33 { pt3dadd( -0.686574, -52.7921, -5.74623, 1.33 ) }
    dend_33 { pt3dadd( -0.710734, -54.1696, -5.66216, 1.33 ) }
    dend_33 { pt3dadd( -0.810495, -55.1815, -5.58242, 1.11 ) }
    dend_33 { pt3dadd( -0.931618, -55.82, -5.51943, 1.11 ) }
    dend_33 { pt3dadd( -1.30224, -57.2133, -5.35883, 1.25 ) }
    dend_33 { pt3dadd( -1.60518, -58.1396, -5.24289, 1.25 ) }
    dend_33 { pt3dadd( -1.91356, -58.9739, -5.13399, 1.25 ) }
    dend_33 { pt3dadd( -2.37337, -60.1329, -4.99, 1.4 ) }
    dend_33 { pt3dadd( -2.84515, -61.2765, -4.86058, 1.4 ) }
    dend_33 { pt3dadd( -3.21795, -62.2042, -4.77844, 1.55 ) }
    dend_33 { pt3dadd( -3.4556, -62.8874, -4.7511, 1.55 ) }
    dend_33 { pt3dadd( -3.7409, -63.8984, -4.74913, 1.33 ) }
    dend_33 { pt3dadd( -4.01789, -65.1616, -4.80337, 0.96 ) }
    dend_33 { pt3dadd( -4.09752, -65.6623, -4.8501, 0.81 ) }
    dend_33 { pt3dadd( -4.1598, -66.2257, -4.90965, 0.81 ) }
    dend_33 { pt3dadd( -4.25197, -67.5274, -5.04396, 0.96 ) }
    dend_33 { pt3dadd( -4.28239, -68.4288, -5.12498, 1.33 ) }
    dend_33 { pt3dadd( -4.29826, -69.4236, -5.1968, 1.69 ) }
    dend_33 { pt3dadd( -4.31398, -70.0265, -5.22489, 1.84 ) }
    dend_33 { pt3dadd( -4.34601, -70.7103, -5.23522, 1.99 ) }
    dend_33 { pt3dadd( -4.42277, -71.5197, -5.21682, 2.06 ) }
    dend_33 { pt3dadd( -4.50025, -72.2119, -5.18196, 2.06 ) }
    dend_33 { pt3dadd( -4.57759, -72.9164, -5.1175, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( -4.64831, -73.6681, -5.01398, 1.62 ) }
    dend_33 { pt3dadd( -4.71339, -74.5715, -4.85892, 1.18 ) }
    dend_33 { pt3dadd( -4.74565, -75.2948, -4.72593, 0.88 ) }
    dend_33 { pt3dadd( -4.77706, -76.2833, -4.52801, 0.88 ) }
    dend_33 { pt3dadd( -4.79145, -76.9635, -4.36699, 1.03 ) }
    dend_33 { pt3dadd( -4.80696, -77.6634, -4.17924, 1.11 ) }
    dend_33 { pt3dadd( -4.83027, -78.1618, -4.03788, 1.11 ) }
    dend_33 { pt3dadd( -4.95309, -79.4055, -3.67986, 1.03 ) }
    dend_33 { pt3dadd( -5.07437, -80.2174, -3.44503, 1.18 ) }
    dend_33 { pt3dadd( -5.19099, -80.8802, -3.26382, 1.25 ) }
    dend_33 { pt3dadd( -5.38438, -81.8888, -3.01412, 1.18 ) }
    dend_33 { pt3dadd( -5.57847, -82.8034, -2.81576, 1.03 ) }
    dend_33 { pt3dadd( -5.799, -83.7164, -2.64529, 0.96 ) }
    dend_33 { pt3dadd( -6.06765, -84.705, -2.49697, 0.88 ) }
    dend_33 { pt3dadd( -6.27254, -85.3652, -2.43135, 0.88 ) }
    dend_33 { pt3dadd( -6.63941, -86.3593, -2.41856, 1.25 ) }
    dend_33 { pt3dadd( -7.0541, -87.3508, -2.47413, 1.55 ) }
    dend_33 { pt3dadd( -7.38008, -88.109, -2.55147, 1.62 ) }
    dend_33 { pt3dadd( -7.62511, -88.7159, -2.6283, 1.62 ) }
    dend_33 { pt3dadd( -7.91283, -89.5104, -2.73557, 1.4 ) }
    dend_33 { pt3dadd( -8.27035, -90.6358, -2.87439, 1.11 ) }
    dend_33 { pt3dadd( -8.56552, -91.7956, -2.99635, 1.11 ) }
    dend_33 { pt3dadd( -8.813, -93.0764, -3.08411, 1.11 ) }
    dend_33 { pt3dadd( -9.0249, -94.4426, -3.14655, 1.11 ) }
    dend_33 { pt3dadd( -9.16001, -95.4421, -3.1722, 1.4 ) }
    dend_33 { pt3dadd( -9.28397, -96.4776, -3.18322, 1.4 ) }
    dend_33 { pt3dadd( -9.46264, -98.0927, -3.17575, 1.25 ) }
    dend_33 { pt3dadd( -9.64594, -99.7464, -3.17329, 1.25 ) }
    dend_33 { pt3dadd( -9.77654, -100.834, -3.17346, 1.62 ) }
    dend_33 { pt3dadd( -9.90635, -101.787, -3.18319, 1.77 ) }
    dend_33 { pt3dadd( -10.0824, -103.062, -3.21738, 1.33 ) }
    dend_33 { pt3dadd( -10.2364, -104.217, -3.25653, 0.88 ) }
    dend_33 { pt3dadd( -10.3802, -105.505, -3.31637, 1.25 ) }
    dend_33 { pt3dadd( -10.4395, -106.142, -3.35595, 1.84 ) }
    dend_33 { pt3dadd( -10.4857, -106.856, -3.4129, 2.28 ) }
    dend_33 { pt3dadd( -10.5141, -107.595, -3.48925, 2.43 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 36/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -3.11118, -43.0054, -5.98703, 2.14 ) }
    dend_28 { pt3dadd( -2.98255, -43.6945, -6.23386, 2.14 ) }
    dend_28 { pt3dadd( -2.7323, -44.7849, -6.57903, 2.14 ) }
    dend_28 { pt3dadd( -2.30437, -46.6496, -7.16926, 1.69 ) }
    dend_28 { pt3dadd( -1.9458, -48.2121, -7.66383, 1.84 ) }
    dend_28 { pt3dadd( -1.59747, -49.73, -8.14429, 1.99 ) }
    dend_28 { pt3dadd( -1.31567, -50.9579, -8.53296, 2.36 ) }
    dend_28 { pt3dadd( -1.08063, -51.859, -8.78357, 2.5 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 44/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -9.81724, 36.298, -10.7562, 1.25 ) }
    dend_22 { pt3dadd( -9.37001, 37.7598, -10.904, 1.25 ) }
    dend_22 { pt3dadd( -8.99233, 38.7452, -10.9651, 1.03 ) }
    dend_22 { pt3dadd( -8.49074, 39.9188, -11.0044, 0.81 ) }
    dend_22 { pt3dadd( -7.93395, 41.2321, -11.0248, 0.81 ) }
    dend_22 { pt3dadd( -7.45531, 42.5382, -11.041, 1.11 ) }
    dend_22 { pt3dadd( -7.16228, 43.4832, -11.0507, 1.11 ) }
    dend_22 { pt3dadd( -6.86603, 44.5845, -11.0135, 0.96 ) }
    dend_22 { pt3dadd( -6.53721, 46.054, -10.933, 0.66 ) }
    dend_22 { pt3dadd( -6.34774, 47.0689, -10.8792, 0.52 ) }
    dend_22 { pt3dadd( -6.14068, 48.3987, -10.8034, 0.52 ) }
    dend_22 { pt3dadd( -6.02239, 49.3853, -10.7505, 0.52 ) }
    dend_22 { pt3dadd( -5.75757, 51.4981, -10.6704, 1.18 ) }
    dend_22 { pt3dadd( -5.6121, 52.5804, -10.6395, 1.62 ) }
    dend_22 { pt3dadd( -5.49343, 53.358, -10.6234, 1.69 ) }
    dend_22 { pt3dadd( -5.24585, 54.6503, -10.6255, 1.33 ) }
    dend_22 { pt3dadd( -5.07416, 55.2935, -10.6425, 0.74 ) }
    dend_22 { pt3dadd( -4.74112, 56.2852, -10.6935, 0.59 ) }
    dend_22 { pt3dadd( -4.14908, 57.861, -10.8531, 0.66 ) }
    dend_22 { pt3dadd( -3.83834, 58.7138, -10.9648, 0.44 ) }
    dend_22 { pt3dadd( -3.64003, 59.3495, -11.0568, 0.44 ) }
    dend_22 { pt3dadd( -3.33047, 60.5132, -11.2412, 0.37 ) }
    dend_22 { pt3dadd( -3.06742, 61.4926, -11.3868, 0.37 ) }
    dend_22 { pt3dadd( -2.85075, 62.2048, -11.4656, 0.37 ) }
    dend_22 { pt3dadd( -2.41544, 63.3318, -11.5918, 0.37 ) }
    dend_22 { pt3dadd( -1.98505, 64.3389, -11.7152, 0.44 ) }
    dend_22 { pt3dadd( -1.59976, 65.3195, -11.8796, 0.44 ) }
    dend_22 { pt3dadd( -1.07084, 66.9044, -12.2207, 0.81 ) }
    dend_22 { pt3dadd( -0.734059, 68.0236, -12.4856, 1.03 ) }
    dend_22 { pt3dadd( -0.413327, 69.0362, -12.7373, 1.03 ) }
    dend_22 { pt3dadd( -0.11223, 69.9599, -13.0017, 0.81 ) }
    dend_22 { pt3dadd( 0.312194, 71.3105, -13.453, 0.29 ) }
    dend_22 { pt3dadd( 0.500049, 71.9819, -13.6991, 0.29 ) }
    dend_22 { pt3dadd( 0.871787, 73.6012, -14.3042, 1.77 ) }
    dend_22 { pt3dadd( 0.984422, 74.1397, -14.5019, 2.36 ) }
    dend_22 { pt3dadd( 1.14272, 74.8844, -14.7444, 2.36 ) }
    dend_22 { pt3dadd( 1.46542, 76.3008, -15.1578, 2.28 ) }
    dend_22 { pt3dadd( 1.89064, 77.9993, -15.5794, 0.66 ) }
    dend_22 { pt3dadd( 2.13324, 78.929, -15.8078, 0.88 ) }
    dend_22 { pt3dadd( 2.38407, 79.897, -16.0509, 0.88 ) }
    dend_22 { pt3dadd( 2.66084, 80.982, -16.2982, 0.37 ) }
    dend_22 { pt3dadd( 2.84705, 81.7141, -16.454, 0.37 ) }
    dend_22 { pt3dadd( 3.2128, 83.2377, -16.7494, 0.37 ) }
    dend_22 { pt3dadd( 3.46977, 84.385, -16.9589, 1.11 ) }
    dend_22 { pt3dadd( 3.65517, 85.3001, -17.1195, 1.47 ) }
    dend_22 { pt3dadd( 3.76661, 85.953, -17.2273, 1.69 ) }
    dend_22 { pt3dadd( 3.91231, 87.0535, -17.3954, 1.33 ) }
    dend_22 { pt3dadd( 4.02513, 88.2588, -17.5597, 0.44 ) }
    dend_22 { pt3dadd( 4.04668, 89.5338, -17.7201, 0.29 ) }
    dend_22 { pt3dadd( 4.02368, 90.5323, -17.8484, 0.52 ) }
    dend_22 { pt3dadd( 3.98521, 91.2774, -17.9462, 0.52 ) }
    dend_22 { pt3dadd( 3.89938, 92.5288, -18.1454, 0.29 ) }
    dend_22 { pt3dadd( 3.83242, 93.8186, -18.3525, 0.29 ) }
    dend_22 { pt3dadd( 3.77094, 96.0975, -18.7449, 1.18 ) }
    dend_22 { pt3dadd( 3.7609, 96.955, -18.8897, 1.62 ) }
    dend_22 { pt3dadd( 3.74647, 97.8674, -19.028, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 3.72715, 99.0184, -19.1808, 1.33 ) }
    dend_22 { pt3dadd( 3.65865, 102.3, -19.5897, 0.22 ) }
    dend_22 { pt3dadd( 3.62002, 104.401, -19.8285, 0.22 ) }
    dend_22 { pt3dadd( 3.57776, 106.297, -20.0147, 0.22 ) }
    dend_22 { pt3dadd( 3.49786, 108.297, -20.1788, 0.74 ) }
    dend_22 { pt3dadd( 3.44084, 109.386, -20.2607, 1.03 ) }
    dend_22 { pt3dadd( 3.4033, 109.899, -20.2948, 1.03 ) }
    dend_22 { pt3dadd( 3.2157, 111.531, -20.4569, 0.15 ) }
    dend_22 { pt3dadd( 3.13712, 112.159, -20.5519, 0.15 ) }
    dend_22 { pt3dadd( 3.05189, 112.88, -20.7132, 0.44 ) }
    dend_22 { pt3dadd( 2.97951, 113.568, -20.8986, 0.66 ) }
    dend_22 { pt3dadd( 2.91447, 114.203, -21.071, 0.66 ) }
    dend_22 { pt3dadd( 2.78094, 116.035, -21.5456, 1.55 ) }
    dend_22 { pt3dadd( 2.71917, 117.384, -21.8679, 2.58 ) }
    dend_22 { pt3dadd( 2.69921, 118.56, -22.1377, 2.58 ) }
    dend_22 { pt3dadd( 2.76408, 121.175, -22.658, 0.29 ) }
    dend_22 { pt3dadd( 2.89431, 122.924, -22.9014, 0.29 ) }
    dend_22 { pt3dadd( 3.18831, 125.431, -23.0941, 0.29 ) }
    dend_22 { pt3dadd( 3.44716, 127.006, -23.1158, 0.96 ) }
    dend_22 { pt3dadd( 3.6073, 127.814, -23.0793, 0.96 ) }
    dend_22 { pt3dadd( 4.23131, 130.446, -22.814, 0.22 ) }
    dend_22 { pt3dadd( 4.97045, 133.247, -22.3895, 0.22 ) }
    dend_22 { pt3dadd( 5.46504, 135.004, -22.0563, 1.77 ) }
    dend_22 { pt3dadd( 5.66882, 135.691, -21.9023, 2.36 ) }
    dend_22 { pt3dadd( 5.92242, 136.53, -21.7053, 2.5 ) }
    dend_22 { pt3dadd( 6.7373, 139.239, -21.0492, 0.15 ) }
    dend_22 { pt3dadd( 7.14406, 140.603, -20.7297, 0.29 ) }
    dend_22 { pt3dadd( 7.41359, 141.517, -20.5351, 0.29 ) }
    dend_22 { pt3dadd( 7.76428, 142.689, -20.3473, 0.15 ) }
    dend_22 { pt3dadd( 8.11834, 143.892, -20.2326, 1.18 ) }
    dend_22 { pt3dadd( 8.34701, 144.641, -20.1996, 1.55 ) }
    dend_22 { pt3dadd( 8.60773, 145.474, -20.1946, 1.18 ) }
    dend_22 { pt3dadd( 8.80211, 146.076, -20.2083, 0.74 ) }
    dend_22 { pt3dadd( 9.35221, 147.943, -20.2766, 0.22 ) }
    dend_22 { pt3dadd( 9.74708, 149.399, -20.3426, 0.22 ) }
    dend_22 { pt3dadd( 10.3555, 151.938, -20.4238, 0.22 ) }
    dend_22 { pt3dadd( 10.6473, 153.302, -20.446, 0.81 ) }
    dend_22 { pt3dadd( 10.7502, 153.847, -20.4466, 0.81 ) }
    dend_22 { pt3dadd( 11.2939, 157.249, -20.3642, 0.22 ) }
    dend_22 { pt3dadd( 11.4981, 158.951, -20.2406, 0.22 ) }
    dend_22 { pt3dadd( 11.6254, 160.485, -20.1244, 1.25 ) }
    dend_22 { pt3dadd( 11.6301, 160.89, -20.0987, 1.69 ) }
    dend_22 { pt3dadd( 11.6119, 161.347, -20.0728, 1.69 ) }
    dend_22 { pt3dadd( 11.5375, 162.317, -20.0185, 1.33 ) }
    dend_22 { pt3dadd( 11.4369, 163.164, -19.9905, 0.59 ) }
    dend_22 { pt3dadd( 11.2059, 164.927, -19.9857, 0.22 ) }
    dend_22 { pt3dadd( 10.9212, 167.447, -20.0523, 0.22 ) }
    dend_22 { pt3dadd( 10.7513, 168.999, -20.1115, 1.03 ) }
    dend_22 { pt3dadd( 10.6787, 169.653, -20.1411, 1.03 ) }
    dend_22 { pt3dadd( 10.6243, 170.339, -20.1669, 1.03 ) }
    dend_22 { pt3dadd( 10.5803, 171.357, -20.187, 0.52 ) }
    dend_22 { pt3dadd( 10.5602, 173.642, -20.1652, 0.22 ) }
    dend_22 { pt3dadd( 10.6359, 174.747, -20.1323, 0.59 ) }
    dend_22 { pt3dadd( 10.7268, 175.458, -20.0966, 0.59 ) }
    dend_22 { pt3dadd( 11.2663, 178.588, -19.8796, 0.22 ) }
    dend_22 { pt3dadd( 11.4837, 179.562, -19.7891, 0.66 ) }
    dend_22 { pt3dadd( 11.6851, 180.26, -19.7118, 0.66 ) }
    dend_22 { pt3dadd( 12.2161, 181.884, -19.5311, 0.15 ) }
    dend_22 { pt3dadd( 12.53, 182.789, -19.4401, 0.81 ) }
    dend_22 { pt3dadd( 12.7471, 183.412, -19.3887, 0.81 ) }
    dend_22 { pt3dadd( 13.0603, 184.332, -19.3387, 0.81 ) }
    dend_22 { pt3dadd( 13.6125, 186.086, -19.285, 0.22 ) }
    dend_22 { pt3dadd( 14.1543, 187.869, -19.2818, 1.33 ) }
    dend_22 { pt3dadd( 14.3718, 188.618, -19.2974, 1.55 ) }
    dend_22 { pt3dadd( 14.5011, 189.055, -19.3086, 1.55 ) }
    dend_22 { pt3dadd( 14.6402, 189.518, -19.3275, 1.03 ) }
    dend_22 { pt3dadd( 15.3153, 191.634, -19.4385, 0.22 ) }
    dend_22 { pt3dadd( 15.9718, 193.522, -19.5513, 0.22 ) }
    dend_22 { pt3dadd( 16.3569, 194.516, -19.6265, 0.22 ) }
    dend_22 { pt3dadd( 16.8093, 195.692, -19.7198, 1.25 ) }
    dend_22 { pt3dadd( 17.0829, 196.451, -19.7898, 1.77 ) }
    dend_22 { pt3dadd( 17.3094, 197.137, -19.8651, 1.77 ) }
    dend_22 { pt3dadd( 17.4901, 197.716, -19.9444, 1.18 ) }
    dend_22 { pt3dadd( 17.7591, 198.633, -20.0855, 0.66 ) }
    dend_22 { pt3dadd( 18.5873, 201.428, -20.5794, 0.22 ) }
    dend_22 { pt3dadd( 19.1614, 203.298, -20.9633, 0.22 ) }
    dend_22 { pt3dadd( 19.5639, 204.575, -21.2206, 1.11 ) }
    dend_22 { pt3dadd( 19.8487, 205.397, -21.3715, 1.4 ) }
    dend_22 { pt3dadd( 20.132, 206.127, -21.496, 1.4 ) }
    dend_22 { pt3dadd( 20.5076, 206.979, -21.6549, 0.96 ) }
    dend_22 { pt3dadd( 21.6837, 209.397, -22.1486, 0.22 ) }
    dend_22 { pt3dadd( 23.0082, 211.916, -22.6475, 0.22 ) }
    dend_22 { pt3dadd( 24.0633, 213.849, -23.0069, 1.77 ) }
    dend_22 { pt3dadd( 24.4409, 214.53, -23.1213, 2.65 ) }
    dend_22 { pt3dadd( 25.0421, 215.595, -23.2781, 2.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 85/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -9.81724, 36.298, -10.7562, 0.66 ) }
    dend_21 { pt3dadd( -11.29, 37.0572, -10.7051, 0.66 ) }
    dend_21 { pt3dadd( -11.8778, 37.3338, -10.6814, 0.66 ) }
    dend_21 { pt3dadd( -12.567, 37.6328, -10.6465, 0.66 ) }
    dend_21 { pt3dadd( -13.3559, 37.9417, -10.6066, 1.11 ) }
    dend_21 { pt3dadd( -13.847, 38.1114, -10.5841, 1.33 ) }
    dend_21 { pt3dadd( -14.5878, 38.3587, -10.552, 1.33 ) }
    dend_21 { pt3dadd( -15.3932, 38.603, -10.5147, 0.96 ) }
    dend_21 { pt3dadd( -15.9451, 38.7757, -10.4711, 0.88 ) }
    dend_21 { pt3dadd( -16.6003, 38.9829, -10.3977, 0.88 ) }
    dend_21 { pt3dadd( -17.3718, 39.2279, -10.2721, 0.37 ) }
    dend_21 { pt3dadd( -17.7661, 39.3508, -10.1892, 0.37 ) }
    dend_21 { pt3dadd( -18.4348, 39.5605, -10.0224, 0.81 ) }
    dend_21 { pt3dadd( -19.0095, 39.7489, -9.86169, 0.88 ) }
    dend_21 { pt3dadd( -19.5398, 39.928, -9.7049, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -20.0977, 40.1209, -9.53066, 0.29 ) }
    dend_21 { pt3dadd( -20.4549, 40.239, -9.42377, 0.29 ) }
    dend_21 { pt3dadd( -21.0831, 40.4036, -9.26471, 0.74 ) }
    dend_21 { pt3dadd( -21.5558, 40.5116, -9.16618, 0.74 ) }
    dend_21 { pt3dadd( -21.8255, 40.5849, -9.10704, 0.74 ) }
    dend_21 { pt3dadd( -22.132, 40.6941, -9.01693, 0.74 ) }
    dend_21 { pt3dadd( -22.5029, 40.8458, -8.88395, 0.59 ) }
    dend_21 { pt3dadd( -22.8597, 40.9892, -8.72944, 0.59 ) }
    dend_21 { pt3dadd( -23.1678, 41.1051, -8.56546, 0.37 ) }
    dend_21 { pt3dadd( -24.0005, 41.37, -8.09974, 0.37 ) }
    dend_21 { pt3dadd( -24.5885, 41.5178, -7.76322, 0.37 ) }
    dend_21 { pt3dadd( -24.9038, 41.5783, -7.58172, 0.22 ) }
    dend_21 { pt3dadd( -25.438, 41.6522, -7.28105, 0.22 ) }
    dend_21 { pt3dadd( -25.7303, 41.6735, -7.13335, 0.22 ) }
    dend_21 { pt3dadd( -26.6007, 41.7148, -6.74192, 1.03 ) }
    dend_21 { pt3dadd( -27.0371, 41.7436, -6.57525, 1.4 ) }
    dend_21 { pt3dadd( -27.2988, 41.7746, -6.48159, 1.4 ) }
    dend_21 { pt3dadd( -27.9346, 41.889, -6.26696, 0.81 ) }
    dend_21 { pt3dadd( -28.7517, 42.0703, -6.0202, 0.22 ) }
    dend_21 { pt3dadd( -29.1946, 42.1743, -5.89574, 0.22 ) }
    dend_21 { pt3dadd( -30.092, 42.3962, -5.66652, 1.11 ) }
    dend_21 { pt3dadd( -30.5523, 42.5149, -5.56119, 1.4 ) }
    dend_21 { pt3dadd( -30.8806, 42.6002, -5.49284, 1.4 ) }
    dend_21 { pt3dadd( -31.65, 42.7973, -5.34892, 0.66 ) }
    dend_21 { pt3dadd( -32.3753, 42.9739, -5.22147, 0.52 ) }
    dend_21 { pt3dadd( -33.2567, 43.1629, -5.07687, 0.74 ) }
    dend_21 { pt3dadd( -33.8305, 43.2815, -4.9897, 0.88 ) }
    dend_21 { pt3dadd( -34.6457, 43.4589, -4.87354, 0.66 ) }
    dend_21 { pt3dadd( -35.2246, 43.5907, -4.79549, 0.66 ) }
    dend_21 { pt3dadd( -35.6999, 43.7041, -4.7369, 0.66 ) }
    dend_21 { pt3dadd( -36.5928, 43.9338, -4.62455, 0.29 ) }
    dend_21 { pt3dadd( -37.3041, 44.1319, -4.51666, 1.03 ) }
    dend_21 { pt3dadd( -37.9045, 44.3092, -4.40538, 1.25 ) }
    dend_21 { pt3dadd( -38.0923, 44.3744, -4.35528, 1.25 ) }
    dend_21 { pt3dadd( -38.5672, 44.5728, -4.19299, 0.81 ) }
    dend_21 { pt3dadd( -39.1283, 44.8352, -3.95891, 0.29 ) }
    dend_21 { pt3dadd( -39.4844, 45.0183, -3.77929, 0.52 ) }
    dend_21 { pt3dadd( -39.7192, 45.1505, -3.65206, 0.66 ) }
    dend_21 { pt3dadd( -40.5736, 45.6532, -3.19246, 0.22 ) }
    dend_21 { pt3dadd( -41.0593, 45.9432, -2.94672, 0.22 ) }
    dend_21 { pt3dadd( -41.4615, 46.181, -2.76478, 0.22 ) }
    dend_21 { pt3dadd( -42.01, 46.5035, -2.56392, 0.22 ) }
    dend_21 { pt3dadd( -42.7557, 46.9412, -2.33063, 0.59 ) }
    dend_21 { pt3dadd( -43.1861, 47.1954, -2.21783, 0.81 ) }
    dend_21 { pt3dadd( -43.5919, 47.4459, -2.14789, 0.81 ) }
    dend_21 { pt3dadd( -44.2165, 47.8588, -2.07097, 0.52 ) }
    dend_21 { pt3dadd( -45.0597, 48.4518, -2.00331, 1.03 ) }
    dend_21 { pt3dadd( -45.5662, 48.8203, -1.97996, 1.18 ) }
    dend_21 { pt3dadd( -45.9427, 49.1056, -1.97411, 1.25 ) }
    dend_21 { pt3dadd( -46.7826, 49.767, -1.98146, 0.29 ) }
    dend_21 { pt3dadd( -47.5431, 50.382, -2.00343, 0.74 ) }
    dend_21 { pt3dadd( -47.8293, 50.616, -2.0171, 0.96 ) }
    dend_21 { pt3dadd( -48.0813, 50.8194, -2.03585, 0.96 ) }
    dend_21 { pt3dadd( -48.9243, 51.475, -2.11239, 0.22 ) }
    dend_21 { pt3dadd( -49.2604, 51.7219, -2.14395, 0.22 ) }
    dend_21 { pt3dadd( -49.7219, 52.0388, -2.18053, 0.66 ) }
    dend_21 { pt3dadd( -50.0383, 52.2461, -2.21186, 0.88 ) }
    dend_21 { pt3dadd( -50.4143, 52.4811, -2.24785, 0.44 ) }
    dend_21 { pt3dadd( -50.9046, 52.7811, -2.28959, 0.37 ) }
    dend_21 { pt3dadd( -51.1999, 52.9586, -2.30763, 0.44 ) }
    dend_21 { pt3dadd( -51.5924, 53.2036, -2.3311, 0.44 ) }
    dend_21 { pt3dadd( -51.8749, 53.3821, -2.34829, 0.44 ) }
    dend_21 { pt3dadd( -52.4175, 53.7327, -2.37564, 0.22 ) }
    dend_21 { pt3dadd( -52.7695, 53.9691, -2.38285, 0.22 ) }
    dend_21 { pt3dadd( -53.1838, 54.2721, -2.38329, 0.29 ) }
    dend_21 { pt3dadd( -53.4243, 54.4616, -2.37484, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -14.9444, 34.435, 2.85466, 1.47 ) }
    dend_13 { pt3dadd( -14.4174, 35.4976, 2.6326, 1.47 ) }
    dend_13 { pt3dadd( -13.9438, 36.6566, 2.41819, 0.81 ) }
    dend_13 { pt3dadd( -13.6504, 37.5058, 2.27797, 0.81 ) }
    dend_13 { pt3dadd( -13.3443, 38.6953, 2.10975, 0.81 ) }
    dend_13 { pt3dadd( -13.033, 40.1439, 1.92363, 0.81 ) }
    dend_13 { pt3dadd( -12.746, 41.7436, 1.73622, 0.81 ) }
    dend_13 { pt3dadd( -12.569, 43.3408, 1.57178, 1.03 ) }
    dend_13 { pt3dadd( -12.4635, 44.7781, 1.43916, 1.03 ) }
    dend_13 { pt3dadd( -12.3434, 46.9783, 1.23922, 1.18 ) }
    dend_13 { pt3dadd( -12.2753, 48.3418, 1.12378, 1.18 ) }
    dend_13 { pt3dadd( -12.2755, 50.7112, 0.936624, 1.18 ) }
    dend_13 { pt3dadd( -12.3374, 52.3964, 0.808779, 1.4 ) }
    dend_13 { pt3dadd( -12.3698, 53.5904, 0.712326, 1.4 ) }
    dend_13 { pt3dadd( -12.4017, 54.4399, 0.640665, 1.4 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -14.9444, 34.435, 2.85466, 0.96 ) }
    dend_12 { pt3dadd( -16.7192, 35.0612, 2.80762, 0.96 ) }
    dend_12 { pt3dadd( -17.3515, 35.3041, 2.80302, 0.96 ) }
    dend_12 { pt3dadd( -18.2281, 35.6484, 2.79646, 0.96 ) }
    dend_12 { pt3dadd( -19.1435, 36.0196, 2.77937, 0.81 ) }
    dend_12 { pt3dadd( -19.9316, 36.3531, 2.76408, 0.81 ) }
    dend_12 { pt3dadd( -21.0154, 36.8291, 2.75206, 1.03 ) }
    dend_12 { pt3dadd( -21.7491, 37.1827, 2.74082, 1.03 ) }
    dend_12 { pt3dadd( -22.4315, 37.5766, 2.72135, 1.03 ) }
    dend_12 { pt3dadd( -23.2807, 38.1492, 2.68517, 0.81 ) }
    dend_12 { pt3dadd( -23.9021, 38.5891, 2.65696, 0.81 ) }
    dend_12 { pt3dadd( -24.5815, 39.0911, 2.63223, 0.81 ) }
    dend_12 { pt3dadd( -25.3821, 39.7223, 2.59638, 0.52 ) }
    dend_12 { pt3dadd( -26.1169, 40.3703, 2.5615, 0.52 ) }
    dend_12 { pt3dadd( -26.5255, 40.7717, 2.55137, 0.52 ) }
    dend_12 { pt3dadd( -27.1054, 41.395, 2.54635, 0.52 ) }
    dend_12 { pt3dadd( -27.8228, 42.2031, 2.54358, 0.52 ) }
    dend_12 { pt3dadd( -28.1972, 42.6479, 2.54621, 0.52 ) }
    dend_12 { pt3dadd( -28.5707, 43.1131, 2.56112, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -29.0022, 43.6724, 2.5928, 0.66 ) }
    dend_12 { pt3dadd( -29.3978, 44.2311, 2.62767, 0.88 ) }
    dend_12 { pt3dadd( -29.7801, 44.8341, 2.66042, 0.88 ) }
    dend_12 { pt3dadd( -30.2059, 45.5441, 2.6903, 0.59 ) }
    dend_12 { pt3dadd( -30.6402, 46.2471, 2.71502, 0.88 ) }
    dend_12 { pt3dadd( -30.9564, 46.7518, 2.72703, 0.88 ) }
    dend_12 { pt3dadd( -31.2188, 47.202, 2.72529, 0.96 ) }
    dend_12 { pt3dadd( -31.4542, 47.6129, 2.71326, 0.96 ) }
    dend_12 { pt3dadd( -31.6699, 47.9702, 2.6978, 0.96 ) }
    dend_12 { pt3dadd( -32.0606, 48.5498, 2.67045, 0.74 ) }
    dend_12 { pt3dadd( -32.6868, 49.3963, 2.62654, 1.25 ) }
    dend_12 { pt3dadd( -33.1248, 49.9569, 2.59527, 1.25 ) }
    dend_12 { pt3dadd( -33.624, 50.5814, 2.56102, 0.29 ) }
    dend_12 { pt3dadd( -33.954, 50.9981, 2.54282, 0.29 ) }
    dend_12 { pt3dadd( -34.2838, 51.4225, 2.53234, 0.66 ) }
    dend_12 { pt3dadd( -34.5762, 51.8089, 2.53371, 0.81 ) }
    dend_12 { pt3dadd( -34.8156, 52.1393, 2.54504, 0.81 ) }
    dend_12 { pt3dadd( -35.2027, 52.7334, 2.58076, 0.37 ) }
    dend_12 { pt3dadd( -35.5769, 53.391, 2.58189, 0.37 ) }
    dend_12 { pt3dadd( -35.8019, 53.8197, 2.55869, 1.03 ) }
    dend_12 { pt3dadd( -35.9989, 54.1972, 2.52441, 1.25 ) }
    dend_12 { pt3dadd( -36.258, 54.656, 2.47349, 1.25 ) }
    dend_12 { pt3dadd( -36.4873, 55.0163, 2.42674, 0.81 ) }
    dend_12 { pt3dadd( -36.9876, 55.7253, 2.33057, 0.59 ) }
    dend_12 { pt3dadd( -37.2885, 56.1278, 2.27604, 0.44 ) }
    dend_12 { pt3dadd( -37.7014, 56.6997, 2.2168, 0.88 ) }
    dend_12 { pt3dadd( -38.011, 57.1443, 2.18751, 0.88 ) }
    dend_12 { pt3dadd( -38.5242, 57.9319, 2.17538, 0.59 ) }
    dend_12 { pt3dadd( -38.85, 58.4602, 2.17609, 0.59 ) }
    dend_12 { pt3dadd( -39.3435, 59.3237, 2.19581, 0.44 ) }
    dend_12 { pt3dadd( -39.8779, 60.3228, 2.21727, 1.03 ) }
    dend_12 { pt3dadd( -40.2969, 61.1779, 2.24357, 1.55 ) }
    dend_12 { pt3dadd( -40.5256, 61.7134, 2.26695, 1.62 ) }
    dend_12 { pt3dadd( -40.8247, 62.5027, 2.30774, 1.11 ) }
    dend_12 { pt3dadd( -41.1233, 63.373, 2.35551, 0.59 ) }
    dend_12 { pt3dadd( -41.311, 63.978, 2.3978, 0.59 ) }
    dend_12 { pt3dadd( -41.5983, 64.9936, 2.48121, 0.59 ) }
    dend_12 { pt3dadd( -41.8775, 66.0086, 2.57893, 0.52 ) }
    dend_12 { pt3dadd( -42.0583, 66.6752, 2.65882, 0.52 ) }
    dend_12 { pt3dadd( -42.2789, 67.5109, 2.79058, 0.52 ) }
    dend_12 { pt3dadd( -42.516, 68.3838, 2.9384, 0.52 ) }
    dend_12 { pt3dadd( -42.7994, 69.337, 3.10227, 0.37 ) }
    dend_12 { pt3dadd( -43.2421, 70.5986, 3.33055, 1.55 ) }
    dend_12 { pt3dadd( -43.418, 71.0116, 3.40972, 1.92 ) }
    dend_12 { pt3dadd( -43.6076, 71.384, 3.48429, 1.92 ) }
    dend_12 { pt3dadd( -43.7956, 71.698, 3.54453, 1.92 ) }
    dend_12 { pt3dadd( -44.2156, 72.2844, 3.65705, 0.88 ) }
    dend_12 { pt3dadd( -44.7959, 73.0199, 3.79036, 0.44 ) }
    dend_12 { pt3dadd( -45.2408, 73.5614, 3.88286, 0.44 ) }
    dend_12 { pt3dadd( -45.7242, 74.1454, 3.96959, 0.44 ) }
    dend_12 { pt3dadd( -46.398, 74.9772, 4.08329, 0.37 ) }
    dend_12 { pt3dadd( -46.7575, 75.4301, 4.14145, 0.37 ) }
    dend_12 { pt3dadd( -47.4982, 76.4034, 4.25567, 0.74 ) }
    dend_12 { pt3dadd( -47.7911, 76.8051, 4.30371, 0.74 ) }
    dend_12 { pt3dadd( -48.1524, 77.3228, 4.36199, 0.52 ) }
    dend_12 { pt3dadd( -48.6372, 78.0367, 4.42275, 1.25 ) }
    dend_12 { pt3dadd( -48.982, 78.5342, 4.44516, 1.47 ) }
    dend_12 { pt3dadd( -49.2173, 78.8699, 4.44786, 1.47 ) }
    dend_12 { pt3dadd( -49.5508, 79.2775, 4.4343, 0.81 ) }
    dend_12 { pt3dadd( -50.0135, 79.7797, 4.40261, 0.59 ) }
    dend_12 { pt3dadd( -50.489, 80.2331, 4.35122, 0.88 ) }
    dend_12 { pt3dadd( -50.897, 80.5925, 4.29676, 1.18 ) }
    dend_12 { pt3dadd( -51.1539, 80.8119, 4.25783, 1.18 ) }
    dend_12 { pt3dadd( -51.7782, 81.3757, 4.17512, 0.96 ) }
    dend_12 { pt3dadd( -52.4299, 82.0287, 4.1123, 0.52 ) }
    dend_12 { pt3dadd( -52.7888, 82.4488, 4.11094, 0.37 ) }
    dend_12 { pt3dadd( -53.2762, 83.1202, 4.16502, 0.37 ) }
    dend_12 { pt3dadd( -53.7172, 83.833, 4.25861, 0.37 ) }
    dend_12 { pt3dadd( -54.1015, 84.5576, 4.37577, 0.37 ) }
    dend_12 { pt3dadd( -54.3492, 85.1279, 4.48191, 0.81 ) }
    dend_12 { pt3dadd( -54.6865, 86.051, 4.6542, 1.84 ) }
    dend_12 { pt3dadd( -54.8198, 86.4243, 4.72345, 1.92 ) }
    dend_12 { pt3dadd( -54.9251, 86.6921, 4.76917, 1.92 ) }
    dend_12 { pt3dadd( -55.1221, 87.1871, 4.83644, 1.62 ) }
    dend_12 { pt3dadd( -55.4097, 87.8805, 4.88956, 0.88 ) }
    dend_12 { pt3dadd( -55.7113, 88.6227, 4.91493, 0.29 ) }
    dend_12 { pt3dadd( -56.1839, 89.7743, 4.92828, 0.29 ) }
    dend_12 { pt3dadd( -56.5423, 90.6022, 4.94318, 0.29 ) }
    dend_12 { pt3dadd( -56.7745, 91.0847, 4.96659, 0.29 ) }
    dend_12 { pt3dadd( -56.8973, 91.3086, 4.98561, 0.29 ) }
    dend_12 { pt3dadd( -57.2127, 91.7989, 5.04954, 0.66 ) }
    dend_12 { pt3dadd( -57.6149, 92.3354, 5.14523, 0.81 ) }
    dend_12 { pt3dadd( -57.9075, 92.6882, 5.21999, 0.81 ) }
    dend_12 { pt3dadd( -58.4694, 93.3541, 5.36171, 0.37 ) }
    dend_12 { pt3dadd( -58.9126, 93.8648, 5.47437, 0.37 ) }
    dend_12 { pt3dadd( -59.3322, 94.3539, 5.58016, 0.81 ) }
    dend_12 { pt3dadd( -59.6266, 94.7025, 5.65684, 0.81 ) }
    dend_12 { pt3dadd( -60.0413, 95.2062, 5.77016, 0.37 ) }
    dend_12 { pt3dadd( -60.451, 95.6749, 5.88918, 0.37 ) }
    dend_12 { pt3dadd( -60.8679, 96.1113, 6.01997, 0.88 ) }
    dend_12 { pt3dadd( -61.3795, 96.6232, 6.18584, 1.47 ) }
    dend_12 { pt3dadd( -61.7655, 97.0057, 6.30857, 1.69 ) }
    dend_12 { pt3dadd( -62.0799, 97.3179, 6.40398, 1.69 ) }
    dend_12 { pt3dadd( -62.939, 98.1514, 6.65939, 0.37 ) }
    dend_12 { pt3dadd( -63.2343, 98.4417, 6.745, 0.37 ) }
    dend_12 { pt3dadd( -63.7895, 99.0214, 6.89239, 0.37 ) }
    dend_12 { pt3dadd( -64.4306, 99.7398, 7.04575, 0.81 ) }
    dend_12 { pt3dadd( -64.8456, 100.266, 7.12982, 1.33 ) }
    dend_12 { pt3dadd( -65.0979, 100.617, 7.17073, 1.33 ) }
    dend_12 { pt3dadd( -65.4374, 101.11, 7.21632, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -66.1272, 102.073, 7.30099, 0.52 ) }
    dend_12 { pt3dadd( -66.7056, 102.815, 7.37116, 0.52 ) }
    dend_12 { pt3dadd( -67.3613, 103.635, 7.44446, 0.52 ) }
    dend_12 { pt3dadd( -67.7248, 104.086, 7.48175, 0.52 ) }
    dend_12 { pt3dadd( -68.1938, 104.671, 7.52457, 0.52 ) }
    dend_12 { pt3dadd( -68.7226, 105.324, 7.5659, 0.52 ) }
    dend_12 { pt3dadd( -69.6269, 106.422, 7.62975, 0.52 ) }
    dend_12 { pt3dadd( -69.9551, 106.819, 7.65214, 0.52 ) }
    dend_12 { pt3dadd( -70.7699, 107.788, 7.71321, 1.25 ) }
    dend_12 { pt3dadd( -70.9996, 108.063, 7.73206, 1.47 ) }
    dend_12 { pt3dadd( -71.3025, 108.42, 7.75364, 1.47 ) }
    dend_12 { pt3dadd( -71.749, 108.913, 7.78481, 0.88 ) }
    dend_12 { pt3dadd( -72.2937, 109.456, 7.82852, 0.29 ) }
    dend_12 { pt3dadd( -72.5198, 109.657, 7.85227, 0.29 ) }
    dend_12 { pt3dadd( -72.986, 110.037, 7.91286, 0.44 ) }
    dend_12 { pt3dadd( -73.3538, 110.328, 7.97057, 0.44 ) }
    dend_12 { pt3dadd( -73.6974, 110.595, 8.03443, 0.44 ) }
    dend_12 { pt3dadd( -73.9016, 110.759, 8.06367, 0.44 ) }
    dend_12 { pt3dadd( -74.1863, 111.005, 8.11648, 0.29 ) }
    dend_12 { pt3dadd( -74.5445, 111.419, 8.19664, 0.29 ) }
    dend_12 { pt3dadd( -74.6633, 111.58, 8.23357, 0.44 ) }
    dend_12 { pt3dadd( -74.8048, 111.785, 8.28764, 0.44 ) }
    dend_12 { pt3dadd( -75.1747, 112.316, 8.44316, 0.37 ) }
    dend_12 { pt3dadd( -75.673, 113.008, 8.66457, 0.44 ) }
    dend_12 { pt3dadd( -76.508, 114.097, 8.96621, 2.28 ) }
    dend_12 { pt3dadd( -76.8509, 114.526, 9.06572, 2.5 ) }
    dend_12 { pt3dadd( -77.1205, 114.865, 9.12316, 2.5 ) }
    dend_12 { pt3dadd( -77.5673, 115.416, 9.18831, 1.92 ) }
    dend_12 { pt3dadd( -78.027, 115.969, 9.21137, 0.81 ) }
    dend_12 { pt3dadd( -78.6533, 116.714, 9.13776, 0.52 ) }
    dend_12 { pt3dadd( -78.9228, 117.054, 9.07567, 0.52 ) }
    dend_12 { pt3dadd( -79.5035, 117.84, 8.89929, 0.88 ) }
    dend_12 { pt3dadd( -79.8307, 118.327, 8.77956, 0.88 ) }
    dend_12 { pt3dadd( -80.1934, 118.919, 8.63198, 0.66 ) }
    dend_12 { pt3dadd( -80.4709, 119.408, 8.51004, 0.44 ) }
    dend_12 { pt3dadd( -80.8423, 120.125, 8.34897, 0.29 ) }
    dend_12 { pt3dadd( -81.248, 120.953, 8.14743, 0.29 ) }
    dend_12 { pt3dadd( -81.682, 121.896, 7.88868, 0.29 ) }
    dend_12 { pt3dadd( -81.8879, 122.363, 7.74859, 0.29 ) }
    dend_12 { pt3dadd( -82.2733, 123.223, 7.44288, 0.52 ) }
    dend_12 { pt3dadd( -82.5551, 123.807, 7.20574, 0.88 ) }
    dend_12 { pt3dadd( -82.8081, 124.279, 6.97921, 0.88 ) }
    dend_12 { pt3dadd( -83.1208, 124.79, 6.70761, 0.44 ) }
    dend_12 { pt3dadd( -83.7285, 125.587, 6.26309, 1.11 ) }
    dend_12 { pt3dadd( -84.3668, 126.266, 5.88318, 2.43 ) }
    dend_12 { pt3dadd( -84.8891, 126.717, 5.63723, 2.43 ) }
    dend_12 { pt3dadd( -85.2527, 126.973, 5.50507, 2.43 ) }
    dend_12 { pt3dadd( -85.7566, 127.273, 5.38407, 1.69 ) }
    dend_12 { pt3dadd( -86.4758, 127.648, 5.2651, 0.59 ) }
    dend_12 { pt3dadd( -87.2612, 128.004, 5.2051, 0.74 ) }
    dend_12 { pt3dadd( -87.5204, 128.114, 5.21082, 0.74 ) }
    dend_12 { pt3dadd( -87.9533, 128.289, 5.23105, 0.52 ) }
    dend_12 { pt3dadd( -88.6146, 128.564, 5.2845, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 24.6863, 6.09904, 6.50013, 1.99 ) }
    dend_2 { pt3dadd( 26.1558, 6.27009, 6.48022, 1.99 ) }
    dend_2 { pt3dadd( 27.0139, 6.56202, 6.56809, 1.99 ) }
    dend_2 { pt3dadd( 27.6126, 6.98095, 6.70518, 1.69 ) }
    dend_2 { pt3dadd( 28.4542, 7.56988, 6.8979, 1.69 ) }
    dend_2 { pt3dadd( 28.8087, 7.81793, 6.97907, 1.69 ) }
    dend_2 { pt3dadd( 29.3977, 8.23007, 7.11393, 1.69 ) }
    dend_2 { pt3dadd( 29.7697, 8.65251, 7.21109, 1.92 ) }
    dend_2 { pt3dadd( 30.3121, 9.51697, 7.47579, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 24.6863, 6.09904, 6.50013, 0.74 ) }
    dend_1 { pt3dadd( 25.5937, 8.21107, 6.71261, 0.74 ) }
    dend_1 { pt3dadd( 25.9349, 9.1254, 6.787, 0.74 ) }
    dend_1 { pt3dadd( 26.4098, 10.5587, 6.87869, 0.74 ) }
    dend_1 { pt3dadd( 26.7822, 11.7917, 6.94361, 0.44 ) }
    dend_1 { pt3dadd( 27.0691, 12.8371, 7.00036, 0.44 ) }
    dend_1 { pt3dadd( 27.456, 14.3878, 7.08477, 0.66 ) }
    dend_1 { pt3dadd( 27.6037, 15.1339, 7.11002, 0.88 ) }
    dend_1 { pt3dadd( 27.7946, 16.2208, 7.17352, 0.88 ) }
    dend_1 { pt3dadd( 27.952, 17.2276, 7.27127, 1.03 ) }
    dend_1 { pt3dadd( 28.1925, 18.6744, 7.45167, 0.96 ) }
    dend_1 { pt3dadd( 28.3796, 19.7013, 7.59776, 0.52 ) }
    dend_1 { pt3dadd( 28.5569, 20.5274, 7.72456, 0.52 ) }
    dend_1 { pt3dadd( 28.761, 21.6264, 7.89686, 0.88 ) }
    dend_1 { pt3dadd( 28.9278, 22.5224, 8.04131, 0.66 ) }
    dend_1 { pt3dadd( 29.1186, 23.5261, 8.21252, 0.88 ) }
    dend_1 { pt3dadd( 29.2871, 24.4226, 8.37147, 0.88 ) }
    dend_1 { pt3dadd( 29.5203, 25.748, 8.62086, 0.29 ) }
    dend_1 { pt3dadd( 29.6823, 26.8188, 8.81673, 0.29 ) }
    dend_1 { pt3dadd( 29.7848, 27.5558, 8.93922, 0.29 ) }
    dend_1 { pt3dadd( 29.9577, 28.8125, 9.15551, 0.44 ) }
    dend_1 { pt3dadd( 30.0784, 29.5639, 9.30526, 0.74 ) }
    dend_1 { pt3dadd( 30.2586, 30.4685, 9.49623, 0.88 ) }
    dend_1 { pt3dadd( 30.3893, 31.0162, 9.62154, 1.11 ) }
    dend_1 { pt3dadd( 30.5055, 31.449, 9.71901, 1.11 ) }
    dend_1 { pt3dadd( 30.7292, 32.431, 9.90785, 0.29 ) }
    dend_1 { pt3dadd( 30.97, 33.396, 10.0491, 0.29 ) }
    dend_1 { pt3dadd( 31.2432, 34.3058, 10.1597, 0.29 ) }
    dend_1 { pt3dadd( 33.7401, 44.3318, 13.6314, 0.29 ) }
    dend_1 { pt3dadd( 37.6442, 54.1157, 16.506, 0.29 ) }
    dend_1 { pt3dadd( 40.4132, 64.4668, 18.2713, 0.29 ) }
    dend_1 { pt3dadd( 42.2027, 75.0901, 19.3744, 0.29 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 94/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 9.5476, 53.0936, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 12.1397, 67.8679, 1.13455, 0.59 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 97/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -94.3757, -61.1275, 5.65293, 0.44 ) }
    dend_48 { pt3dadd( -95.9496, -61.9252, 6.41999, 0.44 ) }
    dend_48 { pt3dadd( -96.7499, -62.3867, 6.78481, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -97.601, -62.909, 7.12956, 0.29 ) }
    dend_48 { pt3dadd( -98.1026, -63.2239, 7.31891, 0.29 ) }
    dend_48 { pt3dadd( -99.174, -63.8779, 7.69884, 0.37 ) }
    dend_48 { pt3dadd( -99.662, -64.1632, 7.87908, 0.37 ) }
    dend_48 { pt3dadd( -100.42, -64.5644, 8.09618, 0.29 ) }
    dend_48 { pt3dadd( -101.143, -65.0049, 8.30637, 0.29 ) }
    dend_48 { pt3dadd( -101.695, -65.3877, 8.46519, 0.29 ) }
    dend_48 { pt3dadd( -102.078, -65.6664, 8.57154, 0.29 ) }
    dend_48 { pt3dadd( -102.676, -66.0886, 8.73629, 0.29 ) }
    dend_48 { pt3dadd( -103.268, -66.4521, 8.89922, 0.44 ) }
    dend_48 { pt3dadd( -104.084, -66.9013, 9.13318, 0.44 ) }
    dend_48 { pt3dadd( -104.513, -67.1573, 9.27428, 0.44 ) }
    dend_48 { pt3dadd( -105.132, -67.5851, 9.50498, 0.66 ) }
    dend_48 { pt3dadd( -105.742, -68.1037, 9.76386, 0.66 ) }
    dend_48 { pt3dadd( -106.049, -68.4492, 9.9204, 0.52 ) }
    dend_48 { pt3dadd( -106.548, -69.2909, 10.2882, 0.44 ) }
    dend_48 { pt3dadd( -106.721, -69.8845, 10.5281, 0.66 ) }
    dend_48 { pt3dadd( -106.789, -70.5062, 10.7668, 0.66 ) }
    dend_48 { pt3dadd( -106.807, -71.2247, 11.0333, 0.52 ) }
    dend_48 { pt3dadd( -106.824, -72.1796, 11.3942, 0.52 ) }
    dend_48 { pt3dadd( -106.811, -73.0496, 11.7099, 0.44 ) }
    dend_48 { pt3dadd( -106.78, -73.8119, 11.9784, 0.37 ) }
    dend_48 { pt3dadd( -106.772, -74.9959, 12.3992, 0.37 ) }
    dend_48 { pt3dadd( -106.809, -75.9315, 12.7536, 0.29 ) }
    dend_48 { pt3dadd( -106.922, -76.885, 13.1704, 0.29 ) }
    dend_48 { pt3dadd( -112.883, -82.9641, 14.487, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -94.3757, -61.1275, 5.65293, 1.11 ) }
    dend_45 { pt3dadd( -95.4162, -61.5558, 5.86152, 1.11 ) }
    dend_45 { pt3dadd( -96.2256, -61.9613, 6.00446, 1.11 ) }
    dend_45 { pt3dadd( -97.8656, -62.8413, 6.30075, 0.88 ) }
    dend_45 { pt3dadd( -99.1162, -63.4758, 6.52516, 0.88 ) }
    dend_45 { pt3dadd( -101.02, -64.3642, 6.8619, 0.88 ) }
    dend_45 { pt3dadd( -103.007, -65.2059, 7.19552, 0.88 ) }
    dend_45 { pt3dadd( -104.096, -65.6605, 7.37539, 0.88 ) }
    dend_45 { pt3dadd( -105.11, -66.0711, 7.51525, 0.81 ) }
    dend_45 { pt3dadd( -106.25, -66.5141, 7.64152, 0.81 ) }
    dend_45 { pt3dadd( -107.074, -66.8014, 7.72693, 0.81 ) }
    dend_45 { pt3dadd( -108.54, -67.2607, 7.8813, 0.96 ) }
    dend_45 { pt3dadd( -109.306, -67.5243, 7.95545, 0.96 ) }
    dend_45 { pt3dadd( -110.087, -67.8737, 8.01047, 0.96 ) }
    dend_45 { pt3dadd( -110.826, -68.3227, 8.03357, 0.96 ) }
    dend_45 { pt3dadd( -111.789, -69.0271, 8.0469, 0.96 ) }
    dend_45 { pt3dadd( -112.109, -69.2736, 8.04346, 0.96 ) }
    dend_45 { pt3dadd( -113.091, -70.0093, 8.00483, 0.88 ) }
    dend_45 { pt3dadd( -114.325, -70.8186, 7.92253, 0.88 ) }
    dend_45 { pt3dadd( -115.21, -71.374, 7.85205, 1.11 ) }
    dend_45 { pt3dadd( -116.102, -71.9365, 7.77674, 1.11 ) }
    dend_45 { pt3dadd( -117.134, -72.612, 7.66882, 0.96 ) }
    dend_45 { pt3dadd( -118.006, -73.2365, 7.6024, 0.96 ) }
    dend_45 { pt3dadd( -119.201, -74.1829, 7.55246, 0.88 ) }
    dend_45 { pt3dadd( -120.57, -75.3752, 7.48053, 0.88 ) }
    dend_45 { pt3dadd( -121.628, -76.3392, 7.3723, 0.96 ) }
    dend_45 { pt3dadd( -122.474, -77.122, 7.24472, 0.96 ) }
    dend_45 { pt3dadd( -123.682, -78.2006, 7.02374, 0.88 ) }
    dend_45 { pt3dadd( -124.256, -78.6821, 6.88939, 0.74 ) }
    dend_45 { pt3dadd( -125.549, -79.6884, 6.53491, 0.96 ) }
    dend_45 { pt3dadd( -126.695, -80.4889, 6.20785, 1.11 ) }
    dend_45 { pt3dadd( -127.628, -81.1069, 5.95668, 1.25 ) }
    dend_45 { pt3dadd( -128.438, -81.6455, 5.76236, 1.25 ) }
    dend_45 { pt3dadd( -129.743, -82.5358, 5.47984, 1.03 ) }
    dend_45 { pt3dadd( -131.5, -83.8201, 5.19886, 0.88 ) }
    dend_45 { pt3dadd( -132.771, -84.8448, 5.06027, 0.88 ) }
    dend_45 { pt3dadd( -134.051, -85.9524, 4.94639, 0.88 ) }
    dend_45 { pt3dadd( -135.119, -86.889, 4.84889, 0.88 ) }
    dend_45 { pt3dadd( -136.152, -87.7557, 4.75597, 1.33 ) }
    dend_45 { pt3dadd( -136.964, -88.3716, 4.69349, 1.33 ) }
    dend_45 { pt3dadd( -137.934, -89.0543, 4.61344, 1.18 ) }
    dend_45 { pt3dadd( -138.617, -89.506, 4.55068, 0.96 ) }
    dend_45 { pt3dadd( -139.847, -90.2596, 4.44993, 0.96 ) }
    dend_45 { pt3dadd( -140.983, -90.8757, 4.37704, 0.96 ) }
    dend_45 { pt3dadd( -142.513, -91.5896, 4.3307, 0.88 ) }
    dend_45 { pt3dadd( -143.839, -92.0747, 4.35297, 0.81 ) }
    dend_45 { pt3dadd( -144.585, -92.2756, 4.40834, 0.81 ) }
    dend_45 { pt3dadd( -145.455, -92.4765, 4.49954, 0.74 ) }
    dend_45 { pt3dadd( -146.099, -92.647, 4.57878, 0.74 ) }
    dend_45 { pt3dadd( -146.919, -92.9351, 4.68852, 0.74 ) }
    dend_45 { pt3dadd( -148.09, -93.5011, 4.84947, 0.74 ) }
    dend_45 { pt3dadd( -148.741, -93.9529, 4.92889, 1.11 ) }
    dend_45 { pt3dadd( -149.73, -94.9208, 5.01972, 1.11 ) }
    dend_45 { pt3dadd( -150.938, -96.3725, 5.08934, 0.88 ) }
    dend_45 { pt3dadd( -151.72, -97.4536, 5.11815, 0.88 ) }
    dend_45 { pt3dadd( -152.318, -98.3623, 5.12893, 0.88 ) }
    dend_45 { pt3dadd( -153.14, -99.6301, 5.13369, 0.81 ) }
    dend_45 { pt3dadd( -154.277, -101.266, 5.08895, 0.81 ) }
    dend_45 { pt3dadd( -154.863, -102.033, 5.0459, 1.18 ) }
    dend_45 { pt3dadd( -155.511, -102.853, 4.96298, 1.33 ) }
    dend_45 { pt3dadd( -156.216, -103.682, 4.85034, 1.33 ) }
    dend_45 { pt3dadd( -157.376, -104.924, 4.64585, 0.88 ) }
    dend_45 { pt3dadd( -158.532, -106.056, 4.40928, 0.81 ) }
    dend_45 { pt3dadd( -159.745, -107.153, 4.15762, 0.81 ) }
    dend_45 { pt3dadd( -161.189, -108.394, 3.83779, 0.81 ) }
    dend_45 { pt3dadd( -162.284, -109.293, 3.56297, 0.81 ) }
    dend_45 { pt3dadd( -163.318, -110.117, 3.29399, 1.11 ) }
    dend_45 { pt3dadd( -163.945, -110.61, 3.12239, 1.25 ) }
    dend_45 { pt3dadd( -164.696, -111.197, 2.91835, 2.14 ) }
    dend_45 { pt3dadd( -165.42, -111.797, 2.69667, 2.5 ) }
    dend_45 { pt3dadd( -166.412, -112.606, 2.39287, 1.92 ) }
    dend_45 { pt3dadd( -167.839, -113.939, 1.88532, 1.11 ) }
    dend_45 { pt3dadd( -168.449, -114.588, 1.64094, 0.96 ) }
    dend_45 { pt3dadd( -169.283, -115.56, 1.2901, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_45 { pt3dadd( -170.353, -116.87, 0.781079, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -10.5141, -107.595, -3.48925, 0.37 ) }
    dend_41 { pt3dadd( -9.65738, -109.569, -2.83423, 0.37 ) }
    dend_41 { pt3dadd( -9.41973, -110.078, -2.68969, 0.52 ) }
    dend_41 { pt3dadd( -9.12579, -110.702, -2.53982, 0.66 ) }
    dend_41 { pt3dadd( -8.79698, -111.412, -2.38571, 0.37 ) }
    dend_41 { pt3dadd( -8.55137, -111.937, -2.27959, 0.44 ) }
    dend_41 { pt3dadd( -8.26496, -112.548, -2.16589, 0.44 ) }
    dend_41 { pt3dadd( -7.92538, -113.275, -2.10682, 0.29 ) }
    dend_41 { pt3dadd( -7.58071, -113.958, -2.05189, 0.29 ) }
    dend_41 { pt3dadd( -7.24265, -114.531, -2.01202, 0.59 ) }
    dend_41 { pt3dadd( -6.90204, -115.023, -1.99631, 0.59 ) }
    dend_41 { pt3dadd( -6.48749, -115.537, -2.00162, 0.37 ) }
    dend_41 { pt3dadd( -6.04144, -116.021, -2.03123, 0.66 ) }
    dend_41 { pt3dadd( -5.60672, -116.429, -2.07641, 0.52 ) }
    dend_41 { pt3dadd( -4.94519, -116.974, -2.17072, 0.37 ) }
    dend_41 { pt3dadd( -4.44002, -117.356, -2.26072, 0.37 ) }
    dend_41 { pt3dadd( -3.68235, -117.919, -2.41909, 0.37 ) }
    dend_41 { pt3dadd( -2.9474, -118.459, -2.59282, 1.03 ) }
    dend_41 { pt3dadd( -2.41523, -118.855, -2.73347, 1.18 ) }
    dend_41 { pt3dadd( -1.91624, -119.235, -2.88298, 0.81 ) }
    dend_41 { pt3dadd( -1.52488, -119.542, -3.01269, 0.52 ) }
    dend_41 { pt3dadd( -0.792818, -120.119, -3.25651, 0.52 ) }
    dend_41 { pt3dadd( -0.0989018, -120.689, -3.49108, 0.59 ) }
    dend_41 { pt3dadd( 0.500668, -121.227, -3.72004, 0.59 ) }
    dend_41 { pt3dadd( 0.984032, -121.712, -3.92348, 0.81 ) }
    dend_41 { pt3dadd( 1.37422, -122.133, -4.09725, 0.81 ) }
    dend_41 { pt3dadd( 1.79965, -122.623, -4.29821, 0.66 ) }
    dend_41 { pt3dadd( 2.10361, -122.997, -4.45171, 0.29 ) }
    dend_41 { pt3dadd( 2.79333, -123.906, -4.81788, 0.52 ) }
    dend_41 { pt3dadd( 3.37858, -124.699, -5.13542, 1.03 ) }
    dend_41 { pt3dadd( 3.58687, -124.988, -5.2537, 1.47 ) }
    dend_41 { pt3dadd( 3.96829, -125.495, -5.47105, 1.62 ) }
    dend_41 { pt3dadd( 4.48503, -126.108, -5.75992, 1.03 ) }
    dend_41 { pt3dadd( 4.99349, -126.636, -6.02032, 0.29 ) }
    dend_41 { pt3dadd( 5.49476, -127.096, -6.25176, 0.29 ) }
    dend_41 { pt3dadd( 6.08409, -127.589, -6.52013, 0.37 ) }
    dend_41 { pt3dadd( 6.69837, -128.096, -6.79888, 0.66 ) }
    dend_41 { pt3dadd( 7.01639, -128.354, -6.93831, 0.81 ) }
    dend_41 { pt3dadd( 7.524, -128.751, -7.14474, 0.96 ) }
    dend_41 { pt3dadd( 7.91029, -129.045, -7.29105, 0.44 ) }
    dend_41 { pt3dadd( 8.21985, -129.276, -7.39735, 0.29 ) }
    dend_41 { pt3dadd( 8.82604, -129.713, -7.57974, 0.29 ) }
    dend_41 { pt3dadd( 9.28368, -130.079, -7.71094, 0.59 ) }
    dend_41 { pt3dadd( 9.72161, -130.475, -7.831, 0.74 ) }
    dend_41 { pt3dadd( 10.0711, -130.827, -7.92402, 0.74 ) }
    dend_41 { pt3dadd( 10.537, -131.352, -8.04813, 0.74 ) }
    dend_41 { pt3dadd( 10.9064, -131.813, -8.15237, 0.44 ) }
    dend_41 { pt3dadd( 11.3927, -132.473, -8.29674, 0.29 ) }
    dend_41 { pt3dadd( 11.677, -132.888, -8.38826, 0.66 ) }
    dend_41 { pt3dadd( 12.0276, -133.416, -8.51119, 0.88 ) }
    dend_41 { pt3dadd( 12.354, -133.903, -8.63022, 0.96 ) }
    dend_41 { pt3dadd( 12.8263, -134.586, -8.79439, 0.66 ) }
    dend_41 { pt3dadd( 13.3149, -135.286, -8.95816, 0.37 ) }
    dend_41 { pt3dadd( 13.8973, -136.075, -9.14471, 0.74 ) }
    dend_41 { pt3dadd( 14.2231, -136.502, -9.24662, 0.81 ) }
    dend_41 { pt3dadd( 14.6, -137.002, -9.3608, 0.37 ) }
    dend_41 { pt3dadd( 15.1031, -137.7, -9.50975, 0.37 ) }
    dend_41 { pt3dadd( 15.5341, -138.327, -9.63616, 0.37 ) }
    dend_41 { pt3dadd( 15.8906, -138.865, -9.74281, 0.37 ) }
    dend_41 { pt3dadd( 16.1751, -139.315, -9.8316, 0.52 ) }
    dend_41 { pt3dadd( 16.5127, -139.847, -9.94502, 0.52 ) }
    dend_41 { pt3dadd( 16.8594, -140.388, -10.0722, 0.37 ) }
    dend_41 { pt3dadd( 17.2119, -140.957, -10.2163, 0.37 ) }
    dend_41 { pt3dadd( 17.6259, -141.606, -10.3849, 0.81 ) }
    dend_41 { pt3dadd( 17.8787, -141.962, -10.485, 0.88 ) }
    dend_41 { pt3dadd( 18.314, -142.505, -10.6534, 0.59 ) }
    dend_41 { pt3dadd( 18.6943, -142.938, -10.7963, 0.37 ) }
    dend_41 { pt3dadd( 19.0858, -143.348, -10.9406, 0.37 ) }
    dend_41 { pt3dadd( 19.5896, -143.842, -11.1193, 0.44 ) }
    dend_41 { pt3dadd( 20.63, -144.786, -11.4753, 0.44 ) }
    dend_41 { pt3dadd( 21.3159, -145.337, -11.7026, 1.18 ) }
    dend_41 { pt3dadd( 21.8356, -145.721, -11.869, 1.47 ) }
    dend_41 { pt3dadd( 22.4104, -146.122, -12.0601, 1.47 ) }
    dend_41 { pt3dadd( 23.2544, -146.707, -12.3544, 1.18 ) }
    dend_41 { pt3dadd( 23.9048, -147.19, -12.6014, 0.29 ) }
    dend_41 { pt3dadd( 24.3054, -147.519, -12.7696, 0.29 ) }
    dend_41 { pt3dadd( 24.6057, -147.786, -12.9142, 0.29 ) }
    dend_41 { pt3dadd( 25.1293, -148.31, -13.2213, 0.59 ) }
    dend_41 { pt3dadd( 25.6223, -148.878, -13.5638, 0.66 ) }
    dend_41 { pt3dadd( 25.8842, -149.234, -13.7823, 0.74 ) }
    dend_41 { pt3dadd( 26.1465, -149.649, -14.0247, 0.59 ) }
    dend_41 { pt3dadd( 26.4294, -150.162, -14.3032, 0.44 ) }
    dend_41 { pt3dadd( 26.7617, -150.817, -14.6497, 0.29 ) }
    dend_41 { pt3dadd( 26.9508, -151.26, -14.8629, 0.37 ) }
    dend_41 { pt3dadd( 27.2182, -152.005, -15.1951, 0.52 ) }
    dend_41 { pt3dadd( 27.3951, -152.576, -15.4134, 1.03 ) }
    dend_41 { pt3dadd( 27.5614, -153.173, -15.6346, 1.55 ) }
    dend_41 { pt3dadd( 27.7072, -153.691, -15.8185, 1.55 ) }
    dend_41 { pt3dadd( 28.0688, -154.998, -16.2758, 0.44 ) }
    dend_41 { pt3dadd( 28.3189, -155.851, -16.5888, 0.37 ) }
    dend_41 { pt3dadd( 28.9696, -157.751, -17.3742, 0.29 ) }
    dend_41 { pt3dadd( 29.1414, -158.154, -17.5623, 0.29 ) }
    dend_41 { pt3dadd( 29.7069, -159.191, -18.1061, 1.47 ) }
    dend_41 { pt3dadd( 29.9474, -159.528, -18.313, 1.92 ) }
    dend_41 { pt3dadd( 30.4502, -160.065, -18.7208, 2.06 ) }
    dend_41 { pt3dadd( 31.2212, -160.722, -19.367, 0.81 ) }
    dend_41 { pt3dadd( 32.2293, -161.412, -20.267, 0.29 ) }
    dend_41 { pt3dadd( 32.8627, -161.817, -20.8586, 0.29 ) }
    dend_41 { pt3dadd( 33.6954, -162.327, -21.6244, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 34.1094, -162.583, -21.9794, 0.52 ) }
    dend_41 { pt3dadd( 35.1064, -163.218, -22.7565, 0.29 ) }
    dend_41 { pt3dadd( 35.8551, -163.714, -23.2579, 0.88 ) }
    dend_41 { pt3dadd( 36.3031, -164.022, -23.4892, 0.74 ) }
    dend_41 { pt3dadd( 37.3936, -164.824, -23.8437, 0.29 ) }
    dend_41 { pt3dadd( 38.1818, -165.417, -23.9661, 0.29 ) }
    dend_41 { pt3dadd( 38.9659, -166.015, -24.0038, 0.59 ) }
    dend_41 { pt3dadd( 39.4798, -166.413, -23.9848, 0.66 ) }
    dend_41 { pt3dadd( 40.4579, -167.189, -23.9147, 0.29 ) }
    dend_41 { pt3dadd( 41.4326, -168.005, -23.8494, 0.29 ) }
    dend_41 { pt3dadd( 42.0607, -168.59, -23.8419, 0.29 ) }
    dend_41 { pt3dadd( 42.627, -169.197, -23.8651, 1.03 ) }
    dend_41 { pt3dadd( 43.0309, -169.672, -23.91, 1.47 ) }
    dend_41 { pt3dadd( 43.3889, -170.13, -23.9828, 1.18 ) }
    dend_41 { pt3dadd( 44.0312, -171.023, -24.1757, 0.22 ) }
    dend_41 { pt3dadd( 44.599, -171.847, -24.3768, 0.22 ) }
    dend_41 { pt3dadd( 45.3177, -172.911, -24.664, 0.22 ) }
    dend_41 { pt3dadd( 45.6251, -173.348, -24.788, 0.52 ) }
    dend_41 { pt3dadd( 46.1567, -174.079, -25.0043, 0.29 ) }
    dend_41 { pt3dadd( 46.6602, -174.754, -25.2165, 0.29 ) }
    dend_41 { pt3dadd( 46.9794, -175.16, -25.3609, 0.88 ) }
    dend_41 { pt3dadd( 47.4214, -175.706, -25.5397, 0.88 ) }
    dend_41 { pt3dadd( 48.0756, -176.533, -25.7857, 0.29 ) }
    dend_41 { pt3dadd( 48.3761, -176.916, -25.8813, 0.29 ) }
    dend_41 { pt3dadd( 48.9119, -177.577, -25.9957, 0.96 ) }
    dend_41 { pt3dadd( 49.2959, -178.014, -26.0293, 1.4 ) }
    dend_41 { pt3dadd( 49.7088, -178.458, -26.0293, 1.77 ) }
    dend_41 { pt3dadd( 49.971, -178.719, -26.0122, 1.77 ) }
    dend_41 { pt3dadd( 51.0045, -179.684, -25.9234, 0.22 ) }
    dend_41 { pt3dadd( 52.0715, -180.609, -25.8001, 0.22 ) }
    dend_41 { pt3dadd( 52.9134, -181.278, -25.7074, 0.88 ) }
    dend_41 { pt3dadd( 53.2927, -181.566, -25.6756, 1.33 ) }
    dend_41 { pt3dadd( 53.6798, -181.851, -25.664, 1.33 ) }
    dend_41 { pt3dadd( 54.5612, -182.481, -25.6642, 0.22 ) }
    dend_41 { pt3dadd( 55.6484, -183.238, -25.7107, 0.22 ) }
    dend_41 { pt3dadd( 56.7941, -184.053, -25.8232, 0.22 ) }
    dend_41 { pt3dadd( 57.8253, -184.828, -25.9832, 0.22 ) }
    dend_41 { pt3dadd( 58.4215, -185.301, -26.0978, 0.74 ) }
    dend_41 { pt3dadd( 58.7403, -185.572, -26.1714, 0.88 ) }
    dend_41 { pt3dadd( 59.1089, -185.918, -26.2774, 0.52 ) }
    dend_41 { pt3dadd( 59.7439, -186.617, -26.5126, 0.22 ) }
    dend_41 { pt3dadd( 60.0577, -187.016, -26.6444, 0.88 ) }
    dend_41 { pt3dadd( 60.3996, -187.488, -26.7853, 1.33 ) }
    dend_41 { pt3dadd( 60.6697, -187.881, -26.8897, 1.33 ) }
    dend_41 { pt3dadd( 61.2965, -188.842, -27.1149, 0.29 ) }
    dend_41 { pt3dadd( 62.0235, -190.021, -27.3437, 0.29 ) }
    dend_41 { pt3dadd( 62.3754, -190.608, -27.4316, 0.44 ) }
    dend_41 { pt3dadd( 62.6825, -191.124, -27.4877, 0.59 ) }
    dend_41 { pt3dadd( 62.9637, -191.598, -27.5221, 0.59 ) }
    dend_41 { pt3dadd( 63.4163, -192.356, -27.5526, 0.22 ) }
    dend_41 { pt3dadd( 63.8765, -193.134, -27.568, 0.22 ) }
    dend_41 { pt3dadd( 64.1627, -193.609, -27.5777, 0.74 ) }
    dend_41 { pt3dadd( 64.335, -193.892, -27.5894, 0.88 ) }
    dend_41 { pt3dadd( 64.564, -194.253, -27.6212, 0.88 ) }
    dend_41 { pt3dadd( 65.0227, -194.959, -27.6892, 0.22 ) }
    dend_41 { pt3dadd( 65.8356, -196.156, -27.834, 0.22 ) }
    dend_41 { pt3dadd( 66.1976, -196.68, -27.9176, 0.52 ) }
    dend_41 { pt3dadd( 66.4315, -197.022, -27.984, 0.66 ) }
    dend_41 { pt3dadd( 66.7963, -197.553, -28.0999, 0.44 ) }
    dend_41 { pt3dadd( 72.1052, -202.923, -31.0261, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -10.5141, -107.595, -3.48925, 2.28 ) }
    dend_34 { pt3dadd( -11.0873, -108.698, -3.29388, 2.28 ) }
    dend_34 { pt3dadd( -11.6306, -109.64, -3.07268, 1.62 ) }
    dend_34 { pt3dadd( -12.3262, -110.759, -2.80186, 1.33 ) }
    dend_34 { pt3dadd( -13.0224, -111.81, -2.56272, 0.88 ) }
    dend_34 { pt3dadd( -13.363, -112.294, -2.46091, 0.88 ) }
    dend_34 { pt3dadd( -13.903, -113.004, -2.32182, 1.03 ) }
    dend_34 { pt3dadd( -14.979, -114.27, -2.09517, 1.03 ) }
    dend_34 { pt3dadd( -15.9065, -115.236, -1.9436, 0.96 ) }
    dend_34 { pt3dadd( -16.6416, -115.932, -1.86771, 0.88 ) }
    dend_34 { pt3dadd( -17.2684, -116.525, -1.84553, 1.11 ) }
    dend_34 { pt3dadd( -17.9509, -117.243, -1.881, 1.33 ) }
    dend_34 { pt3dadd( -18.4822, -117.929, -1.96759, 1.55 ) }
    dend_34 { pt3dadd( -18.9017, -118.632, -2.10108, 1.25 ) }
    dend_34 { pt3dadd( -19.2, -119.343, -2.25949, 0.96 ) }
    dend_34 { pt3dadd( -19.4471, -120.324, -2.48537, 0.88 ) }
    dend_34 { pt3dadd( -19.6184, -121.545, -2.77713, 0.88 ) }
    dend_34 { pt3dadd( -19.7119, -122.851, -3.08324, 0.88 ) }
    dend_34 { pt3dadd( -19.7519, -124.001, -3.34253, 1.03 ) }
    dend_34 { pt3dadd( -19.7602, -125.077, -3.57095, 1.03 ) }
    dend_34 { pt3dadd( -19.7566, -126.343, -3.81238, 1.03 ) }
    dend_34 { pt3dadd( -19.7441, -127.498, -4.00478, 1.25 ) }
    dend_34 { pt3dadd( -19.7108, -128.83, -4.18317, 1.55 ) }
    dend_34 { pt3dadd( -19.6602, -129.848, -4.28375, 1.55 ) }
    dend_34 { pt3dadd( -19.5442, -131.253, -4.38065, 1.33 ) }
    dend_34 { pt3dadd( -19.4236, -132.402, -4.43562, 1.33 ) }
    dend_34 { pt3dadd( -19.3187, -133.428, -4.47119, 1.11 ) }
    dend_34 { pt3dadd( -19.2022, -134.524, -4.45883, 1.11 ) }
    dend_34 { pt3dadd( -19.1006, -135.731, -4.40495, 0.96 ) }
    dend_34 { pt3dadd( -19.0586, -136.627, -4.34211, 0.96 ) }
    dend_34 { pt3dadd( -19.0509, -137.924, -4.20403, 0.88 ) }
    dend_34 { pt3dadd( -19.0948, -139.635, -3.98009, 0.88 ) }
    dend_34 { pt3dadd( -19.1722, -141.118, -3.74847, 1.03 ) }
    dend_34 { pt3dadd( -19.2702, -142.437, -3.5138, 1.25 ) }
    dend_34 { pt3dadd( -19.3901, -143.691, -3.27279, 1.33 ) }
    dend_34 { pt3dadd( -19.5011, -144.679, -3.07336, 1.62 ) }
    dend_34 { pt3dadd( -19.6072, -145.693, -2.85445, 2.5 ) }
    dend_34 { pt3dadd( -19.6446, -146.244, -2.73645, 2.8 ) }
    dend_34 { pt3dadd( -19.6742, -146.927, -2.6232, 3.02 ) }
    dend_34 { pt3dadd( -19.6729, -147.567, -2.51113, 3.02 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( -19.667, -147.996, -2.43807, 3.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -1.08063, -51.859, -8.78357, 0.81 ) }
    dend_30 { pt3dadd( -1.3974, -53.4642, -8.70683, 0.81 ) }
    dend_30 { pt3dadd( -1.694, -54.5454, -8.59876, 0.66 ) }
    dend_30 { pt3dadd( -2.10657, -55.7542, -8.44981, 0.66 ) }
    dend_30 { pt3dadd( -2.59049, -57.0205, -8.28446, 0.52 ) }
    dend_30 { pt3dadd( -2.79192, -57.5264, -8.21835, 0.52 ) }
    dend_30 { pt3dadd( -3.32647, -58.8593, -8.04847, 0.74 ) }
    dend_30 { pt3dadd( -3.85313, -60.2152, -7.81618, 0.74 ) }
    dend_30 { pt3dadd( -4.32366, -61.3367, -7.63111, 0.88 ) }
    dend_30 { pt3dadd( -4.88022, -62.5522, -7.45518, 0.59 ) }
    dend_30 { pt3dadd( -5.25121, -63.3439, -7.37283, 1.03 ) }
    dend_30 { pt3dadd( -5.58967, -64.1208, -7.30351, 1.25 ) }
    dend_30 { pt3dadd( -5.91783, -65.034, -7.23379, 1.03 ) }
    dend_30 { pt3dadd( -6.25608, -66.213, -7.15968, 0.66 ) }
    dend_30 { pt3dadd( -6.50729, -67.1746, -7.10685, 0.66 ) }
    dend_30 { pt3dadd( -6.76647, -68.1667, -7.06846, 0.81 ) }
    dend_30 { pt3dadd( -7.05461, -69.3277, -7.06008, 0.81 ) }
    dend_30 { pt3dadd( -7.26148, -70.2987, -7.10152, 0.66 ) }
    dend_30 { pt3dadd( -7.42365, -71.3265, -7.20049, 0.52 ) }
    dend_30 { pt3dadd( -7.49623, -71.9361, -7.30159, 0.52 ) }
    dend_30 { pt3dadd( -7.57805, -72.6829, -7.44812, 0.52 ) }
    dend_30 { pt3dadd( -7.70382, -73.7468, -7.68474, 0.66 ) }
    dend_30 { pt3dadd( -7.83723, -74.7128, -7.90811, 0.66 ) }
    dend_30 { pt3dadd( -8.00313, -75.7334, -8.15163, 0.59 ) }
    dend_30 { pt3dadd( -8.2126, -76.8526, -8.4055, 1.18 ) }
    dend_30 { pt3dadd( -8.38554, -77.8275, -8.6174, 1.55 ) }
    dend_30 { pt3dadd( -8.57031, -78.7601, -8.79807, 1.99 ) }
    dend_30 { pt3dadd( -8.87641, -79.8889, -8.98164, 2.73 ) }
    dend_30 { pt3dadd( -9.16554, -80.7234, -9.09162, 2.87 ) }
    dend_30 { pt3dadd( -9.48369, -81.5015, -9.19041, 3.02 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -1.08063, -51.859, -8.78357, 0.52 ) }
    dend_29 { pt3dadd( -0.685815, -53.0518, -10.0769, 0.52 ) }
    dend_29 { pt3dadd( -0.596412, -53.3337, -10.3498, 0.52 ) }
    dend_29 { pt3dadd( -0.274997, -54.2644, -11.2576, 0.52 ) }
    dend_29 { pt3dadd( 1.0493E-4, -54.9532, -11.9454, 0.66 ) }
    dend_29 { pt3dadd( 0.193505, -55.3743, -12.3557, 0.66 ) }
    dend_29 { pt3dadd( 0.380541, -55.7293, -12.6999, 0.44 ) }
    dend_29 { pt3dadd( 0.598487, -56.2205, -13.1621, 0.88 ) }
    dend_29 { pt3dadd( 0.797157, -56.683, -13.5585, 1.33 ) }
    dend_29 { pt3dadd( 1.02567, -57.1817, -13.952, 1.47 ) }
    dend_29 { pt3dadd( 1.27261, -57.7581, -14.474, 1.03 ) }
    dend_29 { pt3dadd( 1.51475, -58.6555, -15.3724, 0.44 ) }
    dend_29 { pt3dadd( 1.47389, -59.2047, -15.9972, 0.44 ) }
    dend_29 { pt3dadd( 1.20926, -59.8346, -16.8697, 0.37 ) }
    dend_29 { pt3dadd( 0.91821, -60.2906, -17.6061, 0.37 ) }
    dend_29 { pt3dadd( 0.513157, -60.8732, -18.7149, 0.37 ) }
    dend_29 { pt3dadd( 0.253999, -61.2523, -19.5625, 0.74 ) }
    dend_29 { pt3dadd( 0.105257, -61.5083, -20.2097, 0.96 ) }
    dend_29 { pt3dadd( -0.0233777, -61.8632, -21.1113, 0.96 ) }
    dend_29 { pt3dadd( -0.171777, -62.5074, -22.6996, 0.44 ) }
    dend_29 { pt3dadd( -0.204444, -62.9515, -23.7163, 1.33 ) }
    dend_29 { pt3dadd( -0.185465, -63.5636, -25.0012, 1.55 ) }
    dend_29 { pt3dadd( -0.153711, -64.1284, -26.1223, 1.33 ) }
    dend_29 { pt3dadd( -0.08563, -64.9019, -27.53, 0.81 ) }
    dend_29 { pt3dadd( -0.0388612, -65.2346, -28.0761, 1.25 ) }
    dend_29 { pt3dadd( 0.0525531, -65.6482, -28.6764, 0.88 ) }
    dend_29 { pt3dadd( 0.158046, -66.1153, -29.2562, 0.37 ) }
    dend_29 { pt3dadd( 0.255441, -66.529, -29.6823, 0.81 ) }
    dend_29 { pt3dadd( 0.355925, -66.9739, -30.0851, 1.03 ) }
    dend_29 { pt3dadd( 0.430331, -67.242, -30.3034, 1.03 ) }
    dend_29 { pt3dadd( 0.731273, -68.1712, -31.0351, 0.29 ) }
    dend_29 { pt3dadd( 0.901945, -68.6434, -31.3877, 0.29 ) }
    dend_29 { pt3dadd( 1.1614, -69.2552, -31.8195, 1.84 ) }
    dend_29 { pt3dadd( 1.42277, -69.7695, -32.192, 2.14 ) }
    dend_29 { pt3dadd( 2.17101, -71.0356, -33.1766, 0.29 ) }
    dend_29 { pt3dadd( 2.56903, -71.6145, -33.6527, 0.81 ) }
    dend_29 { pt3dadd( 2.98411, -72.1331, -34.1006, 0.81 ) }
    dend_29 { pt3dadd( 3.42327, -72.6146, -34.5536, 0.52 ) }
    dend_29 { pt3dadd( 4.02553, -73.2056, -35.1828, 1.25 ) }
    dend_29 { pt3dadd( 4.4186, -73.5633, -35.6054, 1.4 ) }
    dend_29 { pt3dadd( 5.42962, -74.4464, -36.692, 0.22 ) }
    dend_29 { pt3dadd( 6.05835, -74.9841, -37.335, 0.22 ) }
    dend_29 { pt3dadd( 6.7759, -75.5998, -38.0327, 1.4 ) }
    dend_29 { pt3dadd( 7.22773, -76.0108, -38.451, 2.21 ) }
    dend_29 { pt3dadd( 7.43689, -76.2156, -38.6284, 2.21 ) }
    dend_29 { pt3dadd( 8.80707, -77.668, -39.6939, 0.22 ) }
    dend_29 { pt3dadd( 9.1759, -78.0783, -39.9693, 0.74 ) }
    dend_29 { pt3dadd( 9.50077, -78.4593, -40.2192, 1.03 ) }
    dend_29 { pt3dadd( 10.0231, -79.1208, -40.633, 0.59 ) }
    dend_29 { pt3dadd( 11.2392, -80.7566, -41.6152, 0.22 ) }
    dend_29 { pt3dadd( 12.7727, -82.8838, -42.8992, 0.22 ) }
    dend_29 { pt3dadd( 13.3013, -83.64, -43.3792, 0.81 ) }
    dend_29 { pt3dadd( 13.6913, -84.1987, -43.7467, 0.96 ) }
    dend_29 { pt3dadd( 14.9487, -86.0188, -44.9822, 0.22 ) }
    dend_29 { pt3dadd( 15.7274, -87.1415, -45.7962, 0.22 ) }
    dend_29 { pt3dadd( 16.15, -87.7611, -46.2831, 0.88 ) }
    dend_29 { pt3dadd( 16.5592, -88.3611, -46.8004, 0.88 ) }
    dend_29 { pt3dadd( 17.7047, -90.0364, -48.3002, 0.15 ) }
    dend_29 { pt3dadd( 18.5812, -91.2598, -49.3764, 0.15 ) }
    dend_29 { pt3dadd( 19.0963, -91.9504, -49.9977, 0.15 ) }
    dend_29 { pt3dadd( 19.5657, -92.58, -50.554, 1.62 ) }
    dend_29 { pt3dadd( 19.8593, -92.9867, -50.8935, 1.92 ) }
    dend_29 { pt3dadd( 20.0961, -93.3138, -51.1424, 1.92 ) }
    dend_29 { pt3dadd( 21.6432, -95.4927, -52.6771, 0.22 ) }
    dend_29 { pt3dadd( 21.9788, -95.9588, -52.9825, 0.66 ) }
    dend_29 { pt3dadd( 22.235, -96.3214, -53.208, 0.88 ) }
    dend_29 { pt3dadd( 22.4977, -96.6911, -53.4408, 0.88 ) }
    dend_29 { pt3dadd( 23.3167, -97.8974, -54.2977, 0.15 ) }
    dend_29 { pt3dadd( 23.8891, -98.8744, -55.0975, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_29 { pt3dadd( 24.1698, -99.4702, -55.6355, 0.81 ) }
    dend_29 { pt3dadd( 24.3257, -99.8971, -56.0239, 1.03 ) }
    dend_29 { pt3dadd( 24.4295, -100.285, -56.3766, 1.03 ) }
    dend_29 { pt3dadd( 24.64, -101.593, -57.5747, 0.22 ) }
    dend_29 { pt3dadd( 24.7057, -103.016, -58.8988, 0.22 ) }
    dend_29 { pt3dadd( 24.7018, -103.596, -59.4692, 0.22 ) }
    dend_29 { pt3dadd( 24.6744, -104.434, -60.338, 1.03 ) }
    dend_29 { pt3dadd( 24.6614, -104.87, -60.7941, 1.62 ) }
    dend_29 { pt3dadd( 24.6446, -105.309, -61.2798, 1.62 ) }
    dend_29 { pt3dadd( 24.6232, -106.049, -62.1529, 1.03 ) }
    dend_29 { pt3dadd( 24.6006, -107.561, -64.0331, 0.22 ) }
    dend_29 { pt3dadd( 24.5707, -108.266, -65.0044, 0.44 ) }
    dend_29 { pt3dadd( 24.5631, -108.653, -65.5687, 0.44 ) }
    dend_29 { pt3dadd( 24.5575, -109.506, -66.8248, 0.66 ) }
    dend_29 { pt3dadd( 24.5679, -109.935, -67.4427, 0.96 ) }
    dend_29 { pt3dadd( 24.5953, -110.431, -68.1451, 0.37 ) }
    dend_29 { pt3dadd( 24.7396, -112.021, -70.3208, 0.66 ) }
    dend_29 { pt3dadd( 24.7857, -112.347, -70.7586, 0.66 ) }
    dend_29 { pt3dadd( 24.9811, -113.531, -72.3663, 0.22 ) }
    dend_29 { pt3dadd( 25.12, -114.156, -73.1867, 0.22 ) }
    dend_29 { pt3dadd( 25.2698, -114.712, -73.9064, 0.81 ) }
    dend_29 { pt3dadd( 25.4492, -115.211, -74.5419, 0.96 ) }
    dend_29 { pt3dadd( 25.6131, -115.536, -74.8672, 0.96 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 25.0421, 215.595, -23.2781, 0.37 ) }
    dend_24 { pt3dadd( 27.2011, 214.511, -21.0584, 0.37 ) }
    dend_24 { pt3dadd( 27.6417, 214.29, -20.6055, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 25.0421, 215.595, -23.2781, 0.22 ) }
    dend_23 { pt3dadd( 26.1137, 218.264, -23.0636, 0.22 ) }
    dend_23 { pt3dadd( 26.6666, 219.716, -23.0177, 0.22 ) }
    dend_23 { pt3dadd( 27.0929, 220.865, -23.0107, 0.74 ) }
    dend_23 { pt3dadd( 27.2428, 221.291, -23.014, 0.74 ) }
    dend_23 { pt3dadd( 27.937, 223.264, -23.0293, 0.15 ) }
    dend_23 { pt3dadd( 28.3861, 224.54, -23.0392, 0.15 ) }
    dend_23 { pt3dadd( 28.7333, 225.466, -23.151, 0.66 ) }
    dend_23 { pt3dadd( 28.9021, 226.035, -23.2084, 0.88 ) }
    dend_23 { pt3dadd( 29.0726, 226.684, -23.2404, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 36/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -12.4017, 54.4399, 0.640665, 0.66 ) }
    dend_17 { pt3dadd( -12.8952, 56.6513, 0.309327, 0.66 ) }
    dend_17 { pt3dadd( -13.0078, 57.4912, 0.216315, 0.96 ) }
    dend_17 { pt3dadd( -13.1332, 58.4779, 0.125843, 0.96 ) }
    dend_17 { pt3dadd( -13.2938, 59.8273, 0.0193628, 0.59 ) }
    dend_17 { pt3dadd( -13.4211, 61.0236, -0.0660136, 0.59 ) }
    dend_17 { pt3dadd( -13.5479, 62.439, -0.159966, 0.59 ) }
    dend_17 { pt3dadd( -13.6768, 64.5008, -0.231562, 0.59 ) }
    dend_17 { pt3dadd( -13.7059, 65.4742, -0.262956, 0.52 ) }
    dend_17 { pt3dadd( -13.7164, 66.9291, -0.305278, 0.88 ) }
    dend_17 { pt3dadd( -13.7254, 67.9831, -0.343998, 1.11 ) }
    dend_17 { pt3dadd( -13.7639, 69.2394, -0.405302, 1.11 ) }
    dend_17 { pt3dadd( -13.8292, 70.6859, -0.47329, 0.74 ) }
    dend_17 { pt3dadd( -13.933, 72.2019, -0.540904, 0.74 ) }
    dend_17 { pt3dadd( -14.086, 74.1421, -0.619693, 0.74 ) }
    dend_17 { pt3dadd( -14.2197, 75.4795, -0.680546, 0.52 ) }
    dend_17 { pt3dadd( -14.3957, 76.9081, -0.765493, 0.52 ) }
    dend_17 { pt3dadd( -14.5374, 77.936, -0.839983, 0.96 ) }
    dend_17 { pt3dadd( -14.7535, 79.4514, -0.98436, 1.11 ) }
    dend_17 { pt3dadd( -15.0843, 81.6963, -1.23906, 1.11 ) }
    dend_17 { pt3dadd( -15.3016, 83.1701, -1.42747, 1.11 ) }
    dend_17 { pt3dadd( -15.4924, 84.6402, -1.60523, 0.81 ) }
    dend_17 { pt3dadd( -15.6356, 85.9332, -1.75351, 0.74 ) }
    dend_17 { pt3dadd( -15.7516, 87.2819, -1.89644, 0.74 ) }
    dend_17 { pt3dadd( -15.8229, 88.5481, -2.01197, 0.44 ) }
    dend_17 { pt3dadd( -15.8723, 89.6206, -2.08684, 0.44 ) }
    dend_17 { pt3dadd( -15.9565, 91.3884, -2.15754, 0.74 ) }
    dend_17 { pt3dadd( -16.012, 92.6102, -2.17966, 0.74 ) }
    dend_17 { pt3dadd( -16.0614, 93.91, -2.19201, 0.37 ) }
    dend_17 { pt3dadd( -16.0716, 95.2601, -2.19905, 0.74 ) }
    dend_17 { pt3dadd( -16.0662, 96.4366, -2.25328, 0.96 ) }
    dend_17 { pt3dadd( -16.0514, 97.7828, -2.37336, 0.96 ) }
    dend_17 { pt3dadd( -16.0316, 99.2597, -2.58718, 0.81 ) }
    dend_17 { pt3dadd( -16.0028, 100.644, -2.8347, 0.52 ) }
    dend_17 { pt3dadd( -15.9554, 102.088, -3.13219, 0.52 ) }
    dend_17 { pt3dadd( -15.8435, 103.982, -3.55869, 1.03 ) }
    dend_17 { pt3dadd( -15.7623, 104.988, -3.79782, 1.55 ) }
    dend_17 { pt3dadd( -15.6801, 105.898, -4.02396, 1.69 ) }
    dend_17 { pt3dadd( -15.6251, 106.49, -4.17094, 1.69 ) }
    dend_17 { pt3dadd( -15.4794, 107.957, -4.50737, 0.37 ) }
    dend_17 { pt3dadd( -15.346, 109.186, -4.74021, 0.44 ) }
    dend_17 { pt3dadd( -15.2469, 109.829, -4.82072, 0.44 ) }
    dend_17 { pt3dadd( -15.107, 110.571, -4.89196, 0.44 ) }
    dend_17 { pt3dadd( -14.8461, 111.8, -4.98169, 0.29 ) }
    dend_17 { pt3dadd( -14.716, 112.323, -5.01799, 0.59 ) }
    dend_17 { pt3dadd( -14.453, 113.212, -5.07928, 0.44 ) }
    dend_17 { pt3dadd( -14.021, 114.609, -5.17139, 0.29 ) }
    dend_17 { pt3dadd( -13.6423, 115.905, -5.25027, 1.18 ) }
    dend_17 { pt3dadd( -13.4518, 116.602, -5.28867, 1.18 ) }
    dend_17 { pt3dadd( -13.1746, 117.649, -5.34825, 0.52 ) }
    dend_17 { pt3dadd( -12.9106, 118.653, -5.40543, 0.29 ) }
    dend_17 { pt3dadd( -12.5982, 119.802, -5.43696, 0.29 ) }
    dend_17 { pt3dadd( -12.3312, 120.845, -5.40484, 0.29 ) }
    dend_17 { pt3dadd( -12.1776, 121.529, -5.34952, 0.29 ) }
    dend_17 { pt3dadd( -11.9151, 122.894, -5.18742, 0.81 ) }
    dend_17 { pt3dadd( -11.7046, 124.093, -5.01188, 0.44 ) }
    dend_17 { pt3dadd( -11.4821, 125.24, -4.85327, 0.22 ) }
    dend_17 { pt3dadd( -11.2052, 126.398, -4.7122, 0.44 ) }
    dend_17 { pt3dadd( -11.0885, 126.842, -4.65445, 0.44 ) }
    dend_17 { pt3dadd( -10.8452, 127.794, -4.5252, 0.29 ) }
    dend_17 { pt3dadd( -10.6452, 128.655, -4.40084, 0.29 ) }
    dend_17 { pt3dadd( -10.3692, 129.829, -4.25782, 0.29 ) }
    dend_17 { pt3dadd( -10.1887, 130.578, -4.1952, 0.29 ) }
    dend_17 { pt3dadd( -9.94994, 131.54, -4.1271, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( -9.76082, 132.324, -4.06332, 0.66 ) }
    dend_17 { pt3dadd( -9.53044, 133.312, -4.00882, 0.74 ) }
    dend_17 { pt3dadd( -9.32717, 134.389, -3.94089, 0.37 ) }
    dend_17 { pt3dadd( -9.19598, 135.232, -3.88188, 0.37 ) }
    dend_17 { pt3dadd( -9.0222, 136.408, -3.83658, 0.52 ) }
    dend_17 { pt3dadd( -8.88879, 137.294, -3.83877, 0.59 ) }
    dend_17 { pt3dadd( -8.68397, 138.641, -3.86215, 0.44 ) }
    dend_17 { pt3dadd( -8.53587, 139.59, -3.88866, 0.29 ) }
    dend_17 { pt3dadd( -8.42309, 140.256, -3.90453, 0.29 ) }
    dend_17 { pt3dadd( -8.17538, 141.728, -3.92056, 1.11 ) }
    dend_17 { pt3dadd( -8.03555, 142.572, -3.91902, 1.25 ) }
    dend_17 { pt3dadd( -7.93685, 143.174, -3.91075, 1.25 ) }
    dend_17 { pt3dadd( -7.70797, 144.44, -3.89401, 0.66 ) }
    dend_17 { pt3dadd( -7.54483, 145.193, -3.91003, 0.29 ) }
    dend_17 { pt3dadd( -7.2523, 146.365, -3.95262, 0.29 ) }
    dend_17 { pt3dadd( -6.96028, 147.411, -4.00308, 0.29 ) }
    dend_17 { pt3dadd( -6.66791, 148.357, -4.05861, 0.29 ) }
    dend_17 { pt3dadd( -6.19696, 149.77, -4.15756, 0.96 ) }
    dend_17 { pt3dadd( -5.99141, 150.383, -4.21189, 1.47 ) }
    dend_17 { pt3dadd( -5.83147, 150.906, -4.26636, 1.47 ) }
    dend_17 { pt3dadd( -5.7491, 151.215, -4.30287, 1.47 ) }
    dend_17 { pt3dadd( -5.54561, 152.117, -4.40641, 0.74 ) }
    dend_17 { pt3dadd( -5.33798, 153.153, -4.51521, 0.29 ) }
    dend_17 { pt3dadd( -5.15809, 154.216, -4.61587, 0.52 ) }
    dend_17 { pt3dadd( -4.99032, 155.198, -4.70246, 0.74 ) }
    dend_17 { pt3dadd( -4.74412, 156.447, -4.80431, 0.44 ) }
    dend_17 { pt3dadd( -4.51942, 157.44, -4.88089, 0.29 ) }
    dend_17 { pt3dadd( -4.34017, 158.138, -4.93314, 0.29 ) }
    dend_17 { pt3dadd( -4.05166, 159.096, -5.00184, 0.66 ) }
    dend_17 { pt3dadd( -3.82181, 159.78, -5.05333, 0.74 ) }
    dend_17 { pt3dadd( -3.48447, 160.745, -5.12871, 0.74 ) }
    dend_17 { pt3dadd( -3.11465, 161.827, -5.20434, 0.29 ) }
    dend_17 { pt3dadd( -2.80424, 162.795, -5.26458, 0.29 ) }
    dend_17 { pt3dadd( -2.22593, 164.743, -5.37345, 0.29 ) }
    dend_17 { pt3dadd( -1.87109, 166.077, -5.37527, 0.52 ) }
    dend_17 { pt3dadd( -1.6794, 166.885, -5.34292, 1.18 ) }
    dend_17 { pt3dadd( -1.53583, 167.587, -5.29134, 1.4 ) }
    dend_17 { pt3dadd( -1.3411, 168.73, -5.17612, 1.4 ) }
    dend_17 { pt3dadd( -1.21832, 169.63, -5.06814, 0.66 ) }
    dend_17 { pt3dadd( -0.95859, 171.738, -4.8066, 0.29 ) }
    dend_17 { pt3dadd( -0.779213, 173.064, -4.67155, 0.29 ) }
    dend_17 { pt3dadd( -0.647829, 173.861, -4.63776, 0.37 ) }
    dend_17 { pt3dadd( -0.443054, 174.931, -4.65505, 0.37 ) }
    dend_17 { pt3dadd( -0.200984, 176.033, -4.72368, 0.37 ) }
    dend_17 { pt3dadd( 0.285624, 177.979, -4.93471, 0.37 ) }
    dend_17 { pt3dadd( 0.883967, 180.084, -5.2831, 0.37 ) }
    dend_17 { pt3dadd( 1.52078, 182.124, -5.64963, 1.33 ) }
    dend_17 { pt3dadd( 1.86196, 183.102, -5.84908, 1.99 ) }
    dend_17 { pt3dadd( 2.15092, 183.876, -6.02169, 1.99 ) }
    dend_17 { pt3dadd( 2.27414, 184.203, -6.09887, 1.99 ) }
    dend_17 { pt3dadd( 2.5044, 184.808, -6.2411, 1.99 ) }
    dend_17 { pt3dadd( 2.99175, 186.071, -6.51331, 0.59 ) }
    dend_17 { pt3dadd( 3.57273, 187.54, -6.77419, 0.29 ) }
    dend_17 { pt3dadd( 3.99468, 188.571, -6.89812, 0.59 ) }
    dend_17 { pt3dadd( 4.32865, 189.369, -6.96836, 0.59 ) }
    dend_17 { pt3dadd( 5.0408, 191.045, -7.06621, 0.37 ) }
    dend_17 { pt3dadd( 5.42623, 191.977, -7.0924, 0.37 ) }
    dend_17 { pt3dadd( 6.02209, 193.491, -7.08783, 0.37 ) }
    dend_17 { pt3dadd( 6.69132, 195.317, -7.03031, 0.74 ) }
    dend_17 { pt3dadd( 6.93147, 196.068, -7.00367, 0.74 ) }
    dend_17 { pt3dadd( 7.13757, 196.846, -6.96549, 0.88 ) }
    dend_17 { pt3dadd( 7.36835, 197.976, -6.89886, 0.44 ) }
    dend_17 { pt3dadd( 7.66135, 199.93, -6.82064, 0.29 ) }
    dend_17 { pt3dadd( 7.75624, 200.973, -6.83462, 0.52 ) }
    dend_17 { pt3dadd( 7.84287, 202.903, -6.97811, 1.25 ) }
    dend_17 { pt3dadd( 7.85556, 203.725, -7.06206, 1.62 ) }
    dend_17 { pt3dadd( 7.85523, 204.263, -7.14454, 1.62 ) }
    dend_17 { pt3dadd( 7.84137, 205.366, -7.36567, 0.96 ) }
    dend_17 { pt3dadd( 7.82183, 207.006, -7.77743, 0.29 ) }
    dend_17 { pt3dadd( 7.83559, 207.947, -8.03832, 0.29 ) }
    dend_17 { pt3dadd( 7.88944, 209.093, -8.34993, 0.29 ) }
    dend_17 { pt3dadd( 7.95612, 210.295, -8.63759, 0.74 ) }
    dend_17 { pt3dadd( 7.98166, 210.842, -8.74052, 0.96 ) }
    dend_17 { pt3dadd( 8.00759, 211.479, -8.82691, 0.96 ) }
    dend_17 { pt3dadd( 8.06614, 213.094, -9.00146, 0.52 ) }
    dend_17 { pt3dadd( 8.14118, 215.323, -9.25412, 0.37 ) }
    dend_17 { pt3dadd( 8.18806, 216.853, -9.4222, 0.29 ) }
    dend_17 { pt3dadd( 8.2115, 218.294, -9.5873, 0.66 ) }
    dend_17 { pt3dadd( 8.21709, 219.26, -9.7175, 0.66 ) }
    dend_17 { pt3dadd( 8.20326, 221.07, -9.9969, 0.29 ) }
    dend_17 { pt3dadd( 8.19457, 221.969, -10.143, 0.29 ) }
    dend_17 { pt3dadd( 8.18175, 224.335, -10.5355, 0.29 ) }
    dend_17 { pt3dadd( 8.206, 226.911, -10.9554, 1.99 ) }
    dend_17 { pt3dadd( 8.21449, 227.496, -11.0418, 2.28 ) }
    dend_17 { pt3dadd( 8.22051, 228.325, -11.1431, 1.55 ) }
    dend_17 { pt3dadd( 8.22392, 229.237, -11.2072, 0.88 ) }
    dend_17 { pt3dadd( 8.21699, 230.728, -11.2226, 0.22 ) }
    dend_17 { pt3dadd( 8.20437, 231.428, -11.1961, 0.22 ) }
    dend_17 { pt3dadd( 8.17269, 232.709, -11.0984, 0.66 ) }
    dend_17 { pt3dadd( 8.15218, 233.519, -11.0365, 0.66 ) }
    dend_17 { pt3dadd( 8.12686, 234.888, -10.9471, 0.29 ) }
    dend_17 { pt3dadd( 8.09123, 237.079, -10.8515, 0.22 ) }
    dend_17 { pt3dadd( 8.10018, 238.188, -10.8202, 0.22 ) }
    dend_17 { pt3dadd( 8.13851, 239.361, -10.8091, 0.52 ) }
    dend_17 { pt3dadd( 8.25638, 240.827, -10.8328, 0.44 ) }
    dend_17 { pt3dadd( 8.41669, 242.103, -10.8838, 0.44 ) }
    dend_17 { pt3dadd( 8.65796, 243.574, -10.9838, 0.44 ) }
    dend_17 { pt3dadd( 9.13669, 245.853, -11.1785, 0.22 ) }
    dend_17 { pt3dadd( 9.53813, 247.549, -11.3358, 0.66 ) }
    dend_17 { pt3dadd( 9.90258, 248.922, -11.4724, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_17 { pt3dadd( 10.1152, 249.647, -11.5481, 1.77 ) }
    dend_17 { pt3dadd( 10.3256, 250.297, -11.6177, 1.77 ) }
    dend_17 { pt3dadd( 10.6802, 251.249, -11.7212, 0.88 ) }
    dend_17 { pt3dadd( 11.1148, 252.31, -11.7949, 0.29 ) }
    dend_17 { pt3dadd( 11.4229, 253.031, -11.8172, 0.52 ) }
    dend_17 { pt3dadd( 12.2051, 254.9, -11.8284, 0.22 ) }
    dend_17 { pt3dadd( 12.6527, 255.965, -11.8407, 0.52 ) }
    dend_17 { pt3dadd( 13.1599, 257.164, -11.8711, 0.52 ) }
    dend_17 { pt3dadd( 14.2546, 259.798, -11.9713, 0.22 ) }
    dend_17 { pt3dadd( 15.0805, 261.811, -12.0799, 0.37 ) }
    dend_17 { pt3dadd( 15.6141, 263.136, -12.1562, 0.37 ) }
    dend_17 { pt3dadd( 16.1884, 264.61, -12.2526, 1.92 ) }
    dend_17 { pt3dadd( 16.4393, 265.287, -12.3074, 2.21 ) }
    dend_17 { pt3dadd( 16.6754, 265.987, -12.3898, 2.21 ) }
    dend_17 { pt3dadd( 16.9287, 266.808, -12.5887, 1.18 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 15/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -12.4017, 54.4399, 0.640665, 0.66 ) }
    dend_14 { pt3dadd( -11.9176, 56.113, 0.948581, 0.66 ) }
    dend_14 { pt3dadd( -11.6197, 57.1318, 1.12757, 0.81 ) }
    dend_14 { pt3dadd( -11.406, 57.8899, 1.28149, 0.37 ) }
    dend_14 { pt3dadd( -11.1673, 58.803, 1.47023, 0.29 ) }
    dend_14 { pt3dadd( -10.7591, 60.3337, 1.77648, 0.29 ) }
    dend_14 { pt3dadd( -10.4967, 61.23, 1.95793, 0.29 ) }
    dend_14 { pt3dadd( -10.1907, 62.0917, 2.11433, 0.29 ) }
    dend_14 { pt3dadd( -9.71036, 63.2285, 2.34727, 0.29 ) }
    dend_14 { pt3dadd( -9.27974, 64.1615, 2.54793, 0.29 ) }
    dend_14 { pt3dadd( -8.85044, 65.0908, 2.74728, 0.74 ) }
    dend_14 { pt3dadd( -8.55273, 65.7155, 2.88997, 0.74 ) }
    dend_14 { pt3dadd( -7.98549, 66.7739, 3.14199, 0.29 ) }
    dend_14 { pt3dadd( -7.64939, 67.382, 3.29514, 0.37 ) }
    dend_14 { pt3dadd( -6.87773, 68.7966, 3.6375, 0.37 ) }
    dend_14 { pt3dadd( -6.47138, 69.5964, 3.83329, 0.37 ) }
    dend_14 { pt3dadd( -6.05798, 70.5406, 4.05571, 0.37 ) }
    dend_14 { pt3dadd( -5.8928, 70.9755, 4.15447, 0.37 ) }
    dend_14 { pt3dadd( -5.63302, 71.7687, 4.33398, 0.22 ) }
    dend_14 { pt3dadd( -5.40225, 72.5387, 4.50574, 0.22 ) }
    dend_14 { pt3dadd( -5.1969, 73.1462, 4.63715, 0.66 ) }
    dend_14 { pt3dadd( -4.96834, 73.877, 4.75775, 0.96 ) }
    dend_14 { pt3dadd( -2.41876, 82.5953, 5.46281, 0.96 ) }
    dend_14 { pt3dadd( 2.00248, 90.2743, 7.99683, 0.96 ) }
    dend_14 { pt3dadd( 5.33038, 98.0893, 11.5457, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 30.3121, 9.51697, 7.47579, 0.66 ) }
    dend_8 { pt3dadd( 31.129, 8.19993, 7.0272, 0.66 ) }
    dend_8 { pt3dadd( 31.3595, 7.7869, 6.85708, 0.66 ) }
    dend_8 { pt3dadd( 31.7387, 7.1476, 6.61554, 0.88 ) }
    dend_8 { pt3dadd( 32.4232, 6.10984, 6.26672, 0.88 ) }
    dend_8 { pt3dadd( 32.9143, 5.44469, 6.07192, 0.88 ) }
    dend_8 { pt3dadd( 33.386, 4.89102, 5.92838, 1.03 ) }
    dend_8 { pt3dadd( 33.9389, 4.29266, 5.77986, 1.03 ) }
    dend_8 { pt3dadd( 34.7324, 3.81566, 5.7827, 0.88 ) }
    dend_8 { pt3dadd( 35.3598, 3.69303, 5.89877, 0.88 ) }
    dend_8 { pt3dadd( 35.8991, 3.64121, 6.03314, 0.88 ) }
    dend_8 { pt3dadd( 36.756, 3.52819, 6.26354, 0.81 ) }
    dend_8 { pt3dadd( 37.7485, 3.27424, 6.52306, 0.81 ) }
    dend_8 { pt3dadd( 38.3824, 3.00543, 6.64471, 0.81 ) }
    dend_8 { pt3dadd( 39.1897, 2.50721, 6.69418, 0.74 ) }
    dend_8 { pt3dadd( 40.0518, 1.87145, 6.67662, 0.88 ) }
    dend_8 { pt3dadd( 40.8174, 1.24213, 6.60292, 0.88 ) }
    dend_8 { pt3dadd( 41.6389, 0.486736, 6.46092, 0.52 ) }
    dend_8 { pt3dadd( 42.0498, 0.105328, 6.35348, 0.52 ) }
    dend_8 { pt3dadd( 42.5489, -0.278395, 6.18522, 0.52 ) }
    dend_8 { pt3dadd( 43.1867, -0.647019, 5.9577, 0.52 ) }
    dend_8 { pt3dadd( 43.9136, -0.934305, 5.69957, 0.74 ) }
    dend_8 { pt3dadd( 44.6506, -1.14814, 5.43723, 0.74 ) }
    dend_8 { pt3dadd( 45.5844, -1.35685, 5.10668, 0.74 ) }
    dend_8 { pt3dadd( 46.8178, -1.58721, 4.68678, 0.74 ) }
    dend_8 { pt3dadd( 47.6724, -1.7229, 4.39561, 0.74 ) }
    dend_8 { pt3dadd( 48.3487, -1.79964, 4.17788, 0.74 ) }
    dend_8 { pt3dadd( 49.0822, -1.81635, 3.96899, 0.74 ) }
    dend_8 { pt3dadd( 49.5119, -1.79978, 3.8724, 0.88 ) }
    dend_8 { pt3dadd( 50.7244, -1.67169, 3.64698, 0.88 ) }
    dend_8 { pt3dadd( 51.758, -1.53586, 3.48315, 0.88 ) }
    dend_8 { pt3dadd( 53.039, -1.38158, 3.29204, 0.66 ) }
    dend_8 { pt3dadd( 53.9777, -1.29188, 3.169, 0.66 ) }
    dend_8 { pt3dadd( 56.397, -1.09699, 2.90586, 0.59 ) }
    dend_8 { pt3dadd( 57.237, -1.0399, 2.82747, 0.52 ) }
    dend_8 { pt3dadd( 58.5087, -0.932851, 2.73631, 0.52 ) }
    dend_8 { pt3dadd( 59.2739, -0.833343, 2.70435, 0.52 ) }
    dend_8 { pt3dadd( 60.1033, -0.654254, 2.69283, 0.52 ) }
    dend_8 { pt3dadd( 61.0926, -0.381748, 2.70051, 0.52 ) }
    dend_8 { pt3dadd( 61.7537, -0.187282, 2.71788, 0.52 ) }
    dend_8 { pt3dadd( 62.8356, 0.083669, 2.74592, 0.52 ) }
    dend_8 { pt3dadd( 64.0097, 0.37553, 2.78451, 0.52 ) }
    dend_8 { pt3dadd( 65.1122, 0.615085, 2.81933, 0.52 ) }
    dend_8 { pt3dadd( 66.142, 0.758044, 2.83993, 0.52 ) }
    dend_8 { pt3dadd( 67.3218, 0.786314, 2.84409, 0.52 ) }
    dend_8 { pt3dadd( 68.139, 0.67865, 2.83544, 0.52 ) }
    dend_8 { pt3dadd( 68.9053, 0.48023, 2.85252, 0.52 ) }
    dend_8 { pt3dadd( 69.4226, 0.323787, 2.88996, 0.52 ) }
    dend_8 { pt3dadd( 70.0765, 0.133343, 2.96823, 0.52 ) }
    dend_8 { pt3dadd( 71.4026, -0.197599, 3.218, 0.29 ) }
    dend_8 { pt3dadd( 73.7727, -0.647065, 3.80816, 0.29 ) }
    dend_8 { pt3dadd( 75.9208, -0.934664, 4.43526, 0.29 ) }
    dend_8 { pt3dadd( 77.0156, -1.01199, 4.80811, 0.29 ) }
    dend_8 { pt3dadd( 77.8012, -1.03685, 5.09805, 0.44 ) }
    dend_8 { pt3dadd( 78.6327, -1.01023, 5.44971, 0.59 ) }
    dend_8 { pt3dadd( 79.1555, -0.942705, 5.73815, 0.59 ) }
    dend_8 { pt3dadd( 80.0026, -0.586978, 6.41659, 0.59 ) }
    dend_8 { pt3dadd( 80.4449, -0.21744, 6.85411, 0.59 ) }
    dend_8 { pt3dadd( 89.2874, -2.63676, 7.37372, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 30.3121, 9.51697, 7.47579, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_3 { pt3dadd( 31.913, 9.06541, 7.64567, 1.11 ) }
    dend_3 { pt3dadd( 32.8956, 8.66357, 7.75498, 1.11 ) }
    dend_3 { pt3dadd( 34.0355, 8.23332, 7.77165, 1.25 ) }
    dend_3 { pt3dadd( 34.9289, 7.97673, 7.73986, 1.47 ) }
    dend_3 { pt3dadd( 36.1572, 7.75072, 7.65849, 1.4 ) }
    dend_3 { pt3dadd( 37.2594, 7.64518, 7.56122, 1.4 ) }
    dend_3 { pt3dadd( 38.5115, 7.56993, 7.38769, 1.18 ) }
    dend_3 { pt3dadd( 40.2338, 7.75099, 7.04951, 1.18 ) }
    dend_3 { pt3dadd( 41.4322, 8.10217, 6.74276, 1.18 ) }
    dend_3 { pt3dadd( 42.4625, 8.48533, 6.44785, 1.18 ) }
    dend_3 { pt3dadd( 43.075, 8.71834, 6.27105, 0.88 ) }
    dend_3 { pt3dadd( 43.6849, 8.89526, 6.11157, 0.88 ) }
    dend_3 { pt3dadd( 44.6344, 8.9869, 5.91294, 0.88 ) }
    dend_3 { pt3dadd( 46.0688, 8.8093, 5.70486, 1.11 ) }
    dend_3 { pt3dadd( 47.1513, 8.52536, 5.56966, 1.11 ) }
    dend_3 { pt3dadd( 48.2437, 8.15959, 5.44009, 1.11 ) }
    dend_3 { pt3dadd( 49.4751, 7.68301, 5.3054, 1.25 ) }
    dend_3 { pt3dadd( 50.7273, 7.13835, 5.18274, 1.33 ) }
    dend_3 { pt3dadd( 51.3044, 6.86354, 5.13578, 1.47 ) }
    dend_3 { pt3dadd( 52.2556, 6.42525, 5.07884, 1.77 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -170.353, -116.87, 0.781079, 0.59 ) }
    dend_47 { pt3dadd( -170.41, -118.624, -0.125239, 0.59 ) }
    dend_47 { pt3dadd( -170.417, -119.375, -0.4773, 0.59 ) }
    dend_47 { pt3dadd( -170.398, -120.04, -0.768486, 0.52 ) }
    dend_47 { pt3dadd( -170.36, -120.813, -1.08416, 0.52 ) }
    dend_47 { pt3dadd( -170.339, -121.656, -1.40797, 0.88 ) }
    dend_47 { pt3dadd( -170.32, -122.593, -1.75556, 1.03 ) }
    dend_47 { pt3dadd( -170.306, -123.169, -1.91866, 1.03 ) }
    dend_47 { pt3dadd( -170.249, -124.189, -2.19588, 1.03 ) }
    dend_47 { pt3dadd( -170.17, -125.069, -2.42855, 0.29 ) }
    dend_47 { pt3dadd( -170.118, -125.698, -2.58948, 0.29 ) }
    dend_47 { pt3dadd( -170.09, -126.219, -2.71626, 0.29 ) }
    dend_47 { pt3dadd( -170.091, -127.204, -2.94979, 0.59 ) }
    dend_47 { pt3dadd( -170.129, -128.023, -3.09627, 0.74 ) }
    dend_47 { pt3dadd( -170.186, -128.616, -3.17158, 0.88 ) }
    dend_47 { pt3dadd( -170.262, -129.193, -3.22808, 0.88 ) }
    dend_47 { pt3dadd( -170.343, -129.734, -3.26203, 0.88 ) }
    dend_47 { pt3dadd( -170.491, -130.461, -3.28478, 0.81 ) }
    dend_47 { pt3dadd( -170.871, -132.032, -3.31349, 0.37 ) }
    dend_47 { pt3dadd( -171.073, -132.883, -3.3223, 1.03 ) }
    dend_47 { pt3dadd( -171.271, -133.739, -3.29672, 1.33 ) }
    dend_47 { pt3dadd( -171.454, -134.528, -3.25055, 1.33 ) }
    dend_47 { pt3dadd( -171.708, -135.541, -3.16964, 1.03 ) }
    dend_47 { pt3dadd( -171.939, -136.393, -3.09325, 0.74 ) }
    dend_47 { pt3dadd( -172.158, -137.126, -3.04575, 0.37 ) }
    dend_47 { pt3dadd( -172.449, -138.107, -2.92968, 0.74 ) }
    dend_47 { pt3dadd( -172.625, -138.675, -2.84648, 0.74 ) }
    dend_47 { pt3dadd( -172.83, -139.358, -2.79231, 0.59 ) }
    dend_47 { pt3dadd( -172.967, -139.868, -2.79015, 0.37 ) }
    dend_47 { pt3dadd( -173.149, -140.59, -2.86142, 0.37 ) }
    dend_47 { pt3dadd( -173.463, -141.734, -3.12269, 0.66 ) }
    dend_47 { pt3dadd( -173.716, -142.518, -3.39551, 0.74 ) }
    dend_47 { pt3dadd( -174.206, -143.816, -3.93793, 0.52 ) }
    dend_47 { pt3dadd( -174.423, -144.35, -4.18986, 0.52 ) }
    dend_47 { pt3dadd( -174.725, -144.978, -4.49847, 1.33 ) }
    dend_47 { pt3dadd( -175.123, -145.752, -4.90167, 1.55 ) }
    dend_47 { pt3dadd( -175.649, -146.777, -5.40714, 1.99 ) }
    dend_47 { pt3dadd( -175.975, -147.404, -5.66259, 2.21 ) }
    dend_47 { pt3dadd( -176.407, -148.199, -5.92183, 1.99 ) }
    dend_47 { pt3dadd( -176.953, -149.16, -6.22365, 1.11 ) }
    dend_47 { pt3dadd( -177.54, -150.258, -6.58607, 0.37 ) }
    dend_47 { pt3dadd( -177.983, -151.195, -6.90797, 1.11 ) }
    dend_47 { pt3dadd( -178.189, -151.669, -7.07903, 1.25 ) }
    dend_47 { pt3dadd( -178.449, -152.28, -7.30066, 1.25 ) }
    dend_47 { pt3dadd( -179.041, -153.614, -7.82275, 0.29 ) }
    dend_47 { pt3dadd( -179.427, -154.457, -8.174, 0.29 ) }
    dend_47 { pt3dadd( -179.817, -155.228, -8.49323, 0.44 ) }
    dend_47 { pt3dadd( -180.241, -156.026, -8.8275, 0.59 ) }
    dend_47 { pt3dadd( -180.747, -156.97, -9.20939, 0.88 ) }
    dend_47 { pt3dadd( -181.172, -157.759, -9.51177, 0.96 ) }
    dend_47 { pt3dadd( -181.627, -158.525, -9.77313, 0.66 ) }
    dend_47 { pt3dadd( -182.234, -159.45, -10.027, 0.37 ) }
    dend_47 { pt3dadd( -182.696, -160.113, -10.1889, 0.29 ) }
    dend_47 { pt3dadd( -183.197, -160.816, -10.3162, 0.29 ) }
    dend_47 { pt3dadd( -183.627, -161.441, -10.3988, 0.29 ) }
    dend_47 { pt3dadd( -184.215, -162.293, -10.4699, 0.29 ) }
    dend_47 { pt3dadd( -185.099, -163.466, -10.5461, 0.74 ) }
    dend_47 { pt3dadd( -185.78, -164.288, -10.545, 1.03 ) }
    dend_47 { pt3dadd( -186.622, -165.255, -10.4936, 2.28 ) }
    dend_47 { pt3dadd( -187.282, -165.964, -10.422, 2.8 ) }
    dend_47 { pt3dadd( -187.917, -166.636, -10.3492, 3.09 ) }
    dend_47 { pt3dadd( -188.941, -167.752, -10.2477, 1.84 ) }
    dend_47 { pt3dadd( -190.129, -169.028, -10.1354, 0.29 ) }
    dend_47 { pt3dadd( -190.71, -169.688, -10.0847, 0.29 ) }
    dend_47 { pt3dadd( -191.471, -170.622, -10.0471, 0.29 ) }
    dend_47 { pt3dadd( -192.235, -171.646, -10.0233, 0.29 ) }
    dend_47 { pt3dadd( -192.749, -172.495, -10.0277, 0.88 ) }
    dend_47 { pt3dadd( -193.143, -173.255, -10.0521, 1.11 ) }
    dend_47 { pt3dadd( -193.454, -173.902, -10.1041, 0.81 ) }
    dend_47 { pt3dadd( -193.704, -174.461, -10.1523, 0.52 ) }
    dend_47 { pt3dadd( -194.081, -175.402, -10.2401, 0.29 ) }
    dend_47 { pt3dadd( -194.499, -176.52, -10.341, 0.29 ) }
    dend_47 { pt3dadd( -194.831, -177.476, -10.4304, 0.29 ) }
    dend_47 { pt3dadd( -195.018, -177.992, -10.478, 0.29 ) }
    dend_47 { pt3dadd( -195.372, -179.022, -10.575, 0.81 ) }
    dend_47 { pt3dadd( -195.67, -179.978, -10.6695, 1.11 ) }
    dend_47 { pt3dadd( -195.881, -180.727, -10.7478, 0.88 ) }
    dend_47 { pt3dadd( -196.176, -181.791, -10.8626, 0.29 ) }
    dend_47 { pt3dadd( -196.528, -183.089, -11.0012, 0.29 ) }
    dend_47 { pt3dadd( -196.886, -184.238, -11.1577, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( -197.027, -184.654, -11.2236, 0.29 ) }
    dend_47 { pt3dadd( -197.366, -185.642, -11.4057, 0.74 ) }
    dend_47 { pt3dadd( -197.615, -186.344, -11.5524, 0.74 ) }
    dend_47 { pt3dadd( -197.957, -187.331, -11.7776, 0.44 ) }
    dend_47 { pt3dadd( -198.342, -188.473, -12.0581, 0.29 ) }
    dend_47 { pt3dadd( -198.542, -189.038, -12.2016, 0.29 ) }
    dend_47 { pt3dadd( -198.802, -189.834, -12.3737, 0.29 ) }
    dend_47 { pt3dadd( -199.056, -190.804, -12.5459, 0.29 ) }
    dend_47 { pt3dadd( -199.172, -191.372, -12.6155, 0.74 ) }
    dend_47 { pt3dadd( -199.267, -191.906, -12.6509, 0.74 ) }
    dend_47 { pt3dadd( -199.419, -192.884, -12.6536, 0.44 ) }
    dend_47 { pt3dadd( -199.607, -193.994, -12.6328, 0.29 ) }
    dend_47 { pt3dadd( -199.776, -194.964, -12.578, 0.74 ) }
    dend_47 { pt3dadd( -199.901, -195.646, -12.5304, 1.11 ) }
    dend_47 { pt3dadd( -200.027, -196.22, -12.4887, 1.69 ) }
    dend_47 { pt3dadd( -200.14, -196.701, -12.4585, 1.92 ) }
    dend_47 { pt3dadd( -200.308, -197.393, -12.4316, 1.92 ) }
    dend_47 { pt3dadd( -200.555, -198.424, -12.4383, 1.62 ) }
    dend_47 { pt3dadd( -200.858, -199.667, -12.472, 0.29 ) }
    dend_47 { pt3dadd( -201.095, -200.658, -12.5201, 0.22 ) }
    dend_47 { pt3dadd( -201.311, -201.474, -12.5673, 0.22 ) }
    dend_47 { pt3dadd( -201.623, -202.571, -12.6499, 0.59 ) }
    dend_47 { pt3dadd( -201.904, -203.476, -12.734, 0.74 ) }
    dend_47 { pt3dadd( -202.123, -204.105, -12.7947, 0.74 ) }
    dend_47 { pt3dadd( -202.429, -204.916, -12.8589, 0.44 ) }
    dend_47 { pt3dadd( -202.724, -205.606, -12.9024, 0.29 ) }
    dend_47 { pt3dadd( -203.073, -206.3, -12.9068, 0.29 ) }
    dend_47 { pt3dadd( -203.894, -207.708, -12.8219, 0.44 ) }
    dend_47 { pt3dadd( -204.38, -208.433, -12.7627, 0.59 ) }
    dend_47 { pt3dadd( -204.872, -209.105, -12.7033, 0.59 ) }
    dend_47 { pt3dadd( -205.462, -209.867, -12.6581, 0.52 ) }
    dend_47 { pt3dadd( -206.379, -210.995, -12.625, 1.33 ) }
    dend_47 { pt3dadd( -207.144, -211.898, -12.6296, 2.06 ) }
    dend_47 { pt3dadd( -207.869, -212.76, -12.6755, 2.21 ) }
    dend_47 { pt3dadd( -208.402, -213.441, -12.7546, 2.21 ) }
    dend_47 { pt3dadd( -209.183, -214.539, -12.9489, 0.81 ) }
    dend_47 { pt3dadd( -209.667, -215.322, -13.1468, 0.29 ) }
    dend_47 { pt3dadd( -210.043, -216.022, -13.3767, 0.44 ) }
    dend_47 { pt3dadd( -210.281, -216.554, -13.5665, 0.44 ) }
    dend_47 { pt3dadd( -210.581, -217.337, -13.8447, 0.29 ) }
    dend_47 { pt3dadd( -210.807, -217.92, -14.0678, 0.29 ) }
    dend_47 { pt3dadd( -211.094, -218.643, -14.3432, 0.29 ) }
    dend_47 { pt3dadd( -211.305, -219.115, -14.5159, 0.74 ) }
    dend_47 { pt3dadd( -211.524, -219.549, -14.6485, 0.88 ) }
    dend_47 { pt3dadd( -211.806, -220.066, -14.7757, 0.88 ) }
    dend_47 { pt3dadd( -212.258, -220.919, -14.931, 0.29 ) }
    dend_47 { pt3dadd( -212.698, -221.791, -15.0194, 0.29 ) }
    dend_47 { pt3dadd( -213.095, -222.694, -15.036, 0.29 ) }
    dend_47 { pt3dadd( -213.518, -223.801, -15.0113, 0.52 ) }
    dend_47 { pt3dadd( -213.702, -224.325, -14.9818, 0.52 ) }
    dend_47 { pt3dadd( -214.003, -225.295, -14.8922, 0.29 ) }
    dend_47 { pt3dadd( -214.165, -225.976, -14.7956, 0.29 ) }
    dend_47 { pt3dadd( -214.4, -227.375, -14.5508, 0.59 ) }
    dend_47 { pt3dadd( -214.501, -228.178, -14.3811, 0.29 ) }
    dend_47 { pt3dadd( -214.568, -228.712, -14.2412, 0.29 ) }
    dend_47 { pt3dadd( -214.691, -229.458, -14.0024, 0.74 ) }
    dend_47 { pt3dadd( -214.956, -230.449, -13.6103, 0.88 ) }
    dend_47 { pt3dadd( -215.258, -231.193, -13.2711, 0.29 ) }
    dend_47 { pt3dadd( -215.634, -231.875, -12.9153, 0.29 ) }
    dend_47 { pt3dadd( -216.196, -232.72, -12.4706, 0.96 ) }
    dend_47 { pt3dadd( -216.677, -233.373, -12.1614, 1.11 ) }
    dend_47 { pt3dadd( -217.314, -234.172, -11.8711, 1.11 ) }
    dend_47 { pt3dadd( -218.011, -235.059, -11.6484, 0.29 ) }
    dend_47 { pt3dadd( -218.467, -235.707, -11.5454, 0.22 ) }
    dend_47 { pt3dadd( -218.837, -236.341, -11.5154, 0.44 ) }
    dend_47 { pt3dadd( -219.195, -237.077, -11.5499, 0.44 ) }
    dend_47 { pt3dadd( -219.693, -238.292, -11.7179, 0.22 ) }
    dend_47 { pt3dadd( -219.977, -239.039, -11.874, 0.22 ) }
    dend_47 { pt3dadd( -220.176, -239.586, -12.0263, 0.22 ) }
    dend_47 { pt3dadd( -220.405, -240.201, -12.2221, 0.59 ) }
    dend_47 { pt3dadd( -220.569, -240.642, -12.3671, 0.74 ) }
    dend_47 { pt3dadd( -221.074, -241.931, -12.8286, 0.29 ) }
    dend_47 { pt3dadd( -221.349, -242.611, -13.0863, 0.29 ) }
    dend_47 { pt3dadd( -221.701, -243.456, -13.4146, 0.44 ) }
    dend_47 { pt3dadd( -222.023, -244.264, -13.7317, 0.44 ) }
    dend_47 { pt3dadd( -222.427, -245.342, -14.138, 0.52 ) }
    dend_47 { pt3dadd( -222.654, -245.962, -14.3578, 0.96 ) }
    dend_47 { pt3dadd( -222.885, -246.585, -14.5558, 1.4 ) }
    dend_47 { pt3dadd( -223.141, -247.215, -14.7513, 1.4 ) }
    dend_47 { pt3dadd( -223.787, -248.695, -15.1015, 0.29 ) }
    dend_47 { pt3dadd( -224.452, -250.156, -15.3444, 0.22 ) }
    dend_47 { pt3dadd( -224.791, -250.88, -15.409, 0.37 ) }
    dend_47 { pt3dadd( -225.34, -252.048, -15.4291, 0.37 ) }
    dend_47 { pt3dadd( -225.898, -253.207, -15.3805, 0.29 ) }
    dend_47 { pt3dadd( -226.663, -254.736, -15.2303, 0.74 ) }
    dend_47 { pt3dadd( -227.085, -255.524, -15.1064, 1.11 ) }
    dend_47 { pt3dadd( -227.574, -256.358, -14.9502, 1.25 ) }
    dend_47 { pt3dadd( -228.099, -257.176, -14.7959, 1.11 ) }
    dend_47 { pt3dadd( -228.612, -257.92, -14.6659, 0.59 ) }
    dend_47 { pt3dadd( -229.298, -258.866, -14.543, 0.29 ) }
    dend_47 { pt3dadd( -229.722, -259.419, -14.5359, 0.29 ) }
    dend_47 { pt3dadd( -230.527, -260.461, -14.5747, 0.22 ) }
    dend_47 { pt3dadd( -231.063, -261.169, -14.6268, 0.22 ) }
    dend_47 { pt3dadd( -231.363, -261.571, -14.6619, 0.66 ) }
    dend_47 { pt3dadd( -231.825, -262.203, -14.7191, 0.66 ) }
    dend_47 { pt3dadd( -232.756, -263.526, -14.8151, 0.29 ) }
    dend_47 { pt3dadd( -233.318, -264.327, -14.8578, 0.29 ) }
    dend_47 { pt3dadd( -233.909, -265.128, -14.8839, 0.29 ) }
    dend_47 { pt3dadd( -234.53, -265.917, -14.901, 0.66 ) }
    dend_47 { pt3dadd( -235.031, -266.518, -14.911, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_47 { pt3dadd( -235.838, -267.439, -14.9253, 0.22 ) }
    dend_47 { pt3dadd( -236.396, -268.054, -14.9391, 0.22 ) }
    dend_47 { pt3dadd( -237.338, -269.081, -14.9768, 0.22 ) }
    dend_47 { pt3dadd( -238.993, -270.887, -15.0996, 0.22 ) }
    dend_47 { pt3dadd( -239.494, -271.464, -15.1717, 0.22 ) }
    dend_47 { pt3dadd( -240.017, -272.115, -15.289, 1.11 ) }
    dend_47 { pt3dadd( -240.303, -272.514, -15.3914, 1.11 ) }
    dend_47 { pt3dadd( -240.438, -272.745, -15.4622, 1.11 ) }
    dend_47 { pt3dadd( -240.712, -273.348, -15.6713, 0.66 ) }
    dend_47 { pt3dadd( -241.06, -274.344, -16.0563, 0.22 ) }
    dend_47 { pt3dadd( -241.229, -274.957, -16.2968, 0.52 ) }
    dend_47 { pt3dadd( -241.508, -276.371, -16.8551, 0.22 ) }
    dend_47 { pt3dadd( -241.724, -277.524, -17.3003, 0.22 ) }
    dend_47 { pt3dadd( -241.816, -278.018, -17.4853, 0.59 ) }
    dend_47 { pt3dadd( -241.931, -278.649, -17.7104, 0.59 ) }
    dend_47 { pt3dadd( -242.094, -279.562, -18.0382, 0.52 ) }
    dend_47 { pt3dadd( -242.32, -280.906, -18.5303, 0.22 ) }
    dend_47 { pt3dadd( -242.437, -281.693, -18.825, 0.22 ) }
    dend_47 { pt3dadd( -242.488, -282.163, -19.004, 0.22 ) }
    dend_47 { pt3dadd( -242.534, -282.696, -19.2106, 0.66 ) }
    dend_47 { pt3dadd( -242.555, -283.478, -19.4657, 0.81 ) }
    dend_47 { pt3dadd( -242.49, -284.361, -19.6862, 0.59 ) }
    dend_47 { pt3dadd( -242.193, -285.668, -19.8734, 1.25 ) }
    dend_47 { pt3dadd( -241.916, -286.379, -19.9188, 1.69 ) }
    dend_47 { pt3dadd( -241.711, -286.739, -19.9157, 1.92 ) }
    dend_47 { pt3dadd( -240.787, -287.929, -19.8223, 1.18 ) }
    dend_47 { pt3dadd( -239.847, -288.856, -19.6647, 0.22 ) }
    dend_47 { pt3dadd( -238.71, -289.733, -19.4591, 0.22 ) }
    dend_47 { pt3dadd( -237.926, -290.231, -19.319, 0.22 ) }
    dend_47 { pt3dadd( -236.939, -290.792, -19.1759, 0.22 ) }
    dend_47 { pt3dadd( -236.226, -291.173, -19.1057, 0.66 ) }
    dend_47 { pt3dadd( -235.702, -291.447, -19.0946, 0.66 ) }
    dend_47 { pt3dadd( -234.288, -292.176, -19.1307, 0.22 ) }
    dend_47 { pt3dadd( -233.752, -292.457, -19.1671, 0.37 ) }
    dend_47 { pt3dadd( -233.213, -292.797, -19.2193, 0.37 ) }
    dend_47 { pt3dadd( -232.782, -293.127, -19.2647, 0.22 ) }
    dend_47 { pt3dadd( -232.132, -293.701, -19.3432, 0.22 ) }
    dend_47 { pt3dadd( -236.426, -303.042, -20.3552, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 38/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -170.353, -116.87, 0.781079, 0.37 ) }
    dend_46 { pt3dadd( -171.584, -116.649, 1.22439, 0.37 ) }
    dend_46 { pt3dadd( -172.108, -116.574, 1.38352, 0.37 ) }
    dend_46 { pt3dadd( -173.245, -116.443, 1.64143, 0.29 ) }
    dend_46 { pt3dadd( -174.117, -116.368, 1.80168, 0.44 ) }
    dend_46 { pt3dadd( -174.963, -116.318, 1.9316, 0.66 ) }
    dend_46 { pt3dadd( -175.453, -116.301, 1.98981, 0.81 ) }
    dend_46 { pt3dadd( -175.883, -116.298, 2.01349, 0.81 ) }
    dend_46 { pt3dadd( -177.23, -116.316, 2.02165, 0.22 ) }
    dend_46 { pt3dadd( -177.656, -116.328, 2.00076, 0.22 ) }
    dend_46 { pt3dadd( -178.422, -116.354, 1.96075, 0.74 ) }
    dend_46 { pt3dadd( -179.052, -116.372, 1.92337, 0.88 ) }
    dend_46 { pt3dadd( -180.105, -116.403, 1.83138, 0.22 ) }
    dend_46 { pt3dadd( -180.544, -116.402, 1.75919, 0.22 ) }
    dend_46 { pt3dadd( -180.956, -116.399, 1.65951, 0.22 ) }
    dend_46 { pt3dadd( -181.429, -116.398, 1.51836, 0.74 ) }
    dend_46 { pt3dadd( -181.936, -116.415, 1.33022, 0.88 ) }
    dend_46 { pt3dadd( -182.502, -116.477, 1.04612, 0.88 ) }
    dend_46 { pt3dadd( -183.775, -116.735, 0.222385, 0.22 ) }
    dend_46 { pt3dadd( -184.231, -116.853, -0.111864, 0.22 ) }
    dend_46 { pt3dadd( -184.61, -116.959, -0.415195, 0.74 ) }
    dend_46 { pt3dadd( -185.094, -117.11, -0.872378, 0.74 ) }
    dend_46 { pt3dadd( -186.092, -117.449, -1.7533, 0.29 ) }
    dend_46 { pt3dadd( -186.401, -117.558, -2.0061, 0.29 ) }
    dend_46 { pt3dadd( -186.901, -117.744, -2.38212, 0.88 ) }
    dend_46 { pt3dadd( -187.497, -117.941, -2.79474, 1.03 ) }
    dend_46 { pt3dadd( -189.281, -118.434, -3.9316, 0.22 ) }
    dend_46 { pt3dadd( -190.965, -118.854, -4.91367, 0.22 ) }
    dend_46 { pt3dadd( -191.64, -119.005, -5.2559, 0.22 ) }
    dend_46 { pt3dadd( -192.039, -119.09, -5.44409, 1.11 ) }
    dend_46 { pt3dadd( -192.519, -119.197, -5.65301, 1.11 ) }
    dend_46 { pt3dadd( -193.026, -119.313, -5.82809, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 70/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -19.667, -147.996, -2.43807, 0.81 ) }
    dend_40 { pt3dadd( -18.622, -148.526, -2.33079, 0.81 ) }
    dend_40 { pt3dadd( -17.7735, -148.907, -2.25808, 0.52 ) }
    dend_40 { pt3dadd( -16.5601, -149.408, -2.17092, 0.52 ) }
    dend_40 { pt3dadd( -16.0293, -149.634, -2.13735, 0.37 ) }
    dend_40 { pt3dadd( -14.9682, -150.101, -2.0751, 0.37 ) }
    dend_40 { pt3dadd( -14.5469, -150.293, -2.05111, 0.66 ) }
    dend_40 { pt3dadd( -14.1689, -150.465, -2.04228, 0.88 ) }
    dend_40 { pt3dadd( -13.8553, -150.611, -2.0319, 0.88 ) }
    dend_40 { pt3dadd( -13.055, -151.063, -2.00443, 0.59 ) }
    dend_40 { pt3dadd( -12.3466, -151.551, -1.97776, 0.66 ) }
    dend_40 { pt3dadd( -11.6429, -152.11, -1.94631, 0.74 ) }
    dend_40 { pt3dadd( -11.2127, -152.449, -1.92592, 0.74 ) }
    dend_40 { pt3dadd( -10.8785, -152.692, -1.90951, 0.52 ) }
    dend_40 { pt3dadd( -10.3322, -153.045, -1.88501, 0.29 ) }
    dend_40 { pt3dadd( -9.74857, -153.345, -1.8512, 0.96 ) }
    dend_40 { pt3dadd( -9.21869, -153.575, -1.81222, 1.03 ) }
    dend_40 { pt3dadd( -8.87033, -153.714, -1.77843, 1.03 ) }
    dend_40 { pt3dadd( -8.08114, -154.012, -1.68263, 0.66 ) }
    dend_40 { pt3dadd( -7.74944, -154.141, -1.64368, 0.52 ) }
    dend_40 { pt3dadd( -6.98734, -154.449, -1.55587, 0.59 ) }
    dend_40 { pt3dadd( -6.23274, -154.796, -1.4698, 0.59 ) }
    dend_40 { pt3dadd( -5.5389, -155.16, -1.39501, 0.52 ) }
    dend_40 { pt3dadd( -4.96472, -155.5, -1.33859, 0.52 ) }
    dend_40 { pt3dadd( -4.36291, -155.893, -1.28599, 0.96 ) }
    dend_40 { pt3dadd( -3.98611, -156.144, -1.264, 1.18 ) }
    dend_40 { pt3dadd( -3.35878, -156.55, -1.24656, 0.66 ) }
    dend_40 { pt3dadd( -2.61701, -156.991, -1.23314, 0.37 ) }
    dend_40 { pt3dadd( -2.15188, -157.24, -1.22842, 0.37 ) }
    dend_40 { pt3dadd( -1.18687, -157.702, -1.22472, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_40 { pt3dadd( -0.335343, -158.094, -1.1991, 1.03 ) }
    dend_40 { pt3dadd( 0.310763, -158.392, -1.16936, 0.81 ) }
    dend_40 { pt3dadd( 0.904509, -158.667, -1.12779, 0.52 ) }
    dend_40 { pt3dadd( 1.59917, -158.991, -1.06139, 0.52 ) }
    dend_40 { pt3dadd( 2.14017, -159.255, -0.993106, 0.52 ) }
    dend_40 { pt3dadd( 2.88226, -159.674, -0.877096, 0.52 ) }
    dend_40 { pt3dadd( 3.50428, -160.071, -0.762613, 1.33 ) }
    dend_40 { pt3dadd( 3.8916, -160.346, -0.686017, 1.69 ) }
    dend_40 { pt3dadd( 4.33436, -160.703, -0.592899, 1.69 ) }
    dend_40 { pt3dadd( 5.0774, -161.342, -0.493286, 1.11 ) }
    dend_40 { pt3dadd( 5.89036, -162.051, -0.443555, 0.44 ) }
    dend_40 { pt3dadd( 6.42334, -162.492, -0.46106, 0.44 ) }
    dend_40 { pt3dadd( 6.85863, -162.836, -0.503503, 0.29 ) }
    dend_40 { pt3dadd( 7.36057, -163.213, -0.59248, 0.29 ) }
    dend_40 { pt3dadd( 8.50917, -164.022, -0.864176, 1.03 ) }
    dend_40 { pt3dadd( 8.84683, -164.244, -0.96308, 1.4 ) }
    dend_40 { pt3dadd( 9.21414, -164.488, -1.09058, 1.4 ) }
    dend_40 { pt3dadd( 10.3911, -165.342, -1.55092, 0.22 ) }
    dend_40 { pt3dadd( 11.0145, -165.82, -1.79937, 0.52 ) }
    dend_40 { pt3dadd( 11.3204, -166.065, -1.91648, 0.52 ) }
    dend_40 { pt3dadd( 11.8422, -166.53, -2.1005, 0.29 ) }
    dend_40 { pt3dadd( 12.5721, -167.202, -2.36291, 0.29 ) }
    dend_40 { pt3dadd( 13.0179, -167.619, -2.51485, 0.29 ) }
    dend_40 { pt3dadd( 13.4682, -168.063, -2.67181, 0.66 ) }
    dend_40 { pt3dadd( 13.7969, -168.396, -2.76659, 0.81 ) }
    dend_40 { pt3dadd( 14.0347, -168.639, -2.82796, 0.81 ) }
    dend_40 { pt3dadd( 14.431, -169.017, -2.90682, 0.59 ) }
    dend_40 { pt3dadd( 14.8808, -169.404, -2.98428, 0.29 ) }
    dend_40 { pt3dadd( 15.306, -169.787, -3.0354, 0.29 ) }
    dend_40 { pt3dadd( 15.7775, -170.287, -3.06563, 0.66 ) }
    dend_40 { pt3dadd( 16.1262, -170.729, -3.05127, 0.66 ) }
    dend_40 { pt3dadd( 16.569, -171.409, -2.97308, 0.29 ) }
    dend_40 { pt3dadd( 16.8037, -171.848, -2.88956, 0.29 ) }
    dend_40 { pt3dadd( 17.1739, -172.651, -2.69213, 0.66 ) }
    dend_40 { pt3dadd( 17.4146, -173.221, -2.51756, 0.66 ) }
    dend_40 { pt3dadd( 17.6924, -173.966, -2.2538, 0.44 ) }
    dend_40 { pt3dadd( 17.9349, -174.726, -1.9623, 1.47 ) }
    dend_40 { pt3dadd( 18.1009, -175.338, -1.71888, 1.84 ) }
    dend_40 { pt3dadd( 18.1884, -175.698, -1.57762, 1.84 ) }
    dend_40 { pt3dadd( 18.2414, -175.922, -1.50131, 1.84 ) }
    dend_40 { pt3dadd( 18.3853, -176.493, -1.31639, 1.33 ) }
    dend_40 { pt3dadd( 18.5819, -177.182, -1.10663, 0.52 ) }
    dend_40 { pt3dadd( 18.6936, -177.545, -0.999809, 0.52 ) }
    dend_40 { pt3dadd( 18.8484, -178.037, -0.855246, 0.52 ) }
    dend_40 { pt3dadd( 19.0951, -178.824, -0.617041, 0.29 ) }
    dend_40 { pt3dadd( 19.2265, -179.23, -0.48809, 0.29 ) }
    dend_40 { pt3dadd( 19.4254, -179.81, -0.288925, 0.29 ) }
    dend_40 { pt3dadd( 19.6217, -180.343, -0.0925485, 0.44 ) }
    dend_40 { pt3dadd( 19.9268, -181.059, 0.181756, 0.44 ) }
    dend_40 { pt3dadd( 20.2252, -181.641, 0.401566, 0.44 ) }
    dend_40 { pt3dadd( 20.4678, -182.048, 0.543787, 1.33 ) }
    dend_40 { pt3dadd( 20.7608, -182.514, 0.677926, 1.84 ) }
    dend_40 { pt3dadd( 21.0568, -182.927, 0.78262, 1.84 ) }
    dend_40 { pt3dadd( 21.5686, -183.566, 0.93365, 0.96 ) }
    dend_40 { pt3dadd( 22.2544, -184.347, 1.10369, 0.22 ) }
    dend_40 { pt3dadd( 22.8475, -184.977, 1.23068, 0.22 ) }
    dend_40 { pt3dadd( 23.6983, -185.825, 1.38704, 0.22 ) }
    dend_40 { pt3dadd( 24.2173, -186.301, 1.47276, 0.22 ) }
    dend_40 { pt3dadd( 24.8128, -186.789, 1.56225, 0.22 ) }
    dend_40 { pt3dadd( 25.3446, -187.18, 1.62814, 0.44 ) }
    dend_40 { pt3dadd( 25.9861, -187.608, 1.68621, 0.88 ) }
    dend_40 { pt3dadd( 26.6102, -188.002, 1.71677, 1.03 ) }
    dend_40 { pt3dadd( 27.0206, -188.258, 1.72761, 1.03 ) }
    dend_40 { pt3dadd( 27.4994, -188.578, 1.73447, 0.88 ) }
    dend_40 { pt3dadd( 27.9795, -188.881, 1.73548, 0.29 ) }
    dend_40 { pt3dadd( 28.325, -189.085, 1.74537, 0.29 ) }
    dend_40 { pt3dadd( 28.8515, -189.369, 1.78965, 0.29 ) }
    dend_40 { pt3dadd( 29.5112, -189.696, 1.87704, 0.37 ) }
    dend_40 { pt3dadd( 30.0055, -189.92, 1.9699, 0.37 ) }
    dend_40 { pt3dadd( 30.4371, -190.096, 2.0704, 0.29 ) }
    dend_40 { pt3dadd( 31.2626, -190.389, 2.29472, 0.29 ) }
    dend_40 { pt3dadd( 31.9097, -190.601, 2.47289, 0.81 ) }
    dend_40 { pt3dadd( 32.2738, -190.719, 2.56838, 0.81 ) }
    dend_40 { pt3dadd( 32.9723, -190.984, 2.75304, 0.59 ) }
    dend_40 { pt3dadd( 33.4766, -191.234, 2.89934, 0.29 ) }
    dend_40 { pt3dadd( 33.9044, -191.49, 3.03562, 0.29 ) }
    dend_40 { pt3dadd( 34.3479, -191.794, 3.19029, 0.66 ) }
    dend_40 { pt3dadd( 34.6699, -192.032, 3.31916, 0.66 ) }
    dend_40 { pt3dadd( 35.6129, -192.76, 3.74934, 0.29 ) }
    dend_40 { pt3dadd( 36.1976, -193.217, 4.06116, 0.29 ) }
    dend_40 { pt3dadd( 36.7859, -193.69, 4.4365, 0.29 ) }
    dend_40 { pt3dadd( 37.2183, -194.053, 4.75867, 0.29 ) }
    dend_40 { pt3dadd( 37.6346, -194.405, 5.11441, 0.88 ) }
    dend_40 { pt3dadd( 37.8211, -194.563, 5.27879, 0.88 ) }
    dend_40 { pt3dadd( 38.3102, -194.983, 5.74162, 0.66 ) }
    dend_40 { pt3dadd( 38.9692, -195.55, 6.41388, 0.29 ) }
    dend_40 { pt3dadd( 39.3011, -195.848, 6.78039, 0.29 ) }
    dend_40 { pt3dadd( 39.6912, -196.212, 7.21749, 0.66 ) }
    dend_40 { pt3dadd( 40.0241, -196.532, 7.56386, 0.44 ) }
    dend_40 { pt3dadd( 45.6469, -201.494, 9.97745, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -19.667, -147.996, -2.43807, 2.14 ) }
    dend_35 { pt3dadd( -20.2452, -149.758, -2.90212, 2.14 ) }
    dend_35 { pt3dadd( -20.7224, -151.364, -3.26945, 1.33 ) }
    dend_35 { pt3dadd( -21.1558, -152.942, -3.58058, 1.03 ) }
    dend_35 { pt3dadd( -21.4404, -154.141, -3.76937, 1.03 ) }
    dend_35 { pt3dadd( -21.619, -154.957, -3.88335, 1.25 ) }
    dend_35 { pt3dadd( -21.7874, -155.755, -3.98581, 1.25 ) }
    dend_35 { pt3dadd( -22.0377, -157.262, -4.11962, 0.96 ) }
    dend_35 { pt3dadd( -22.2256, -158.481, -4.18464, 0.96 ) }
    dend_35 { pt3dadd( -22.5773, -160.617, -4.28376, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( -22.799, -161.874, -4.31689, 0.88 ) }
    dend_35 { pt3dadd( -22.9868, -163.065, -4.31848, 0.96 ) }
    dend_35 { pt3dadd( -23.1689, -164.423, -4.28529, 0.96 ) }
    dend_35 { pt3dadd( -23.31, -165.582, -4.22271, 0.74 ) }
    dend_35 { pt3dadd( -23.4355, -166.698, -4.13557, 0.52 ) }
    dend_35 { pt3dadd( -23.5358, -167.624, -4.03952, 0.52 ) }
    dend_35 { pt3dadd( -23.6564, -168.759, -3.89863, 0.37 ) }
    dend_35 { pt3dadd( -23.7496, -169.664, -3.78166, 0.74 ) }
    dend_35 { pt3dadd( -23.8706, -170.647, -3.6589, 0.74 ) }
    dend_35 { pt3dadd( -24.0234, -171.753, -3.51112, 1.03 ) }
    dend_35 { pt3dadd( -24.1342, -172.456, -3.41688, 1.18 ) }
    dend_35 { pt3dadd( -24.299, -173.429, -3.29918, 1.33 ) }
    dend_35 { pt3dadd( -24.4419, -174.162, -3.21379, 1.33 ) }
    dend_35 { pt3dadd( -24.5958, -174.942, -3.08032, 1.18 ) }
    dend_35 { pt3dadd( -24.8562, -176.073, -2.76591, 0.96 ) }
    dend_35 { pt3dadd( -25.0856, -176.934, -2.43145, 0.81 ) }
    dend_35 { pt3dadd( -25.3285, -177.799, -2.02295, 0.81 ) }
    dend_35 { pt3dadd( -25.5789, -178.747, -1.51373, 0.81 ) }
    dend_35 { pt3dadd( -25.7874, -179.577, -1.05079, 0.59 ) }
    dend_35 { pt3dadd( -26.1006, -180.948, -0.308586, 0.66 ) }
    dend_35 { pt3dadd( -26.2463, -181.535, -0.0300369, 0.66 ) }
    dend_35 { pt3dadd( -26.5443, -182.59, 0.342273, 1.18 ) }
    dend_35 { pt3dadd( -26.9304, -183.684, 0.506506, 1.47 ) }
    dend_35 { pt3dadd( -27.3437, -184.635, 0.455669, 1.55 ) }
    dend_35 { pt3dadd( -27.7227, -185.329, 0.293041, 1.55 ) }
    dend_35 { pt3dadd( -28.3473, -186.266, -0.0606515, 1.4 ) }
    dend_35 { pt3dadd( -29.2375, -187.351, -0.560938, 1.18 ) }
    dend_35 { pt3dadd( -30.3201, -188.496, -1.15074, 0.66 ) }
    dend_35 { pt3dadd( -31.2368, -189.392, -1.62273, 0.74 ) }
    dend_35 { pt3dadd( -32.4482, -190.515, -2.20323, 1.18 ) }
    dend_35 { pt3dadd( -33.4728, -191.416, -2.63829, 1.25 ) }
    dend_35 { pt3dadd( -34.5763, -192.339, -3.03244, 1.25 ) }
    dend_35 { pt3dadd( -35.5418, -193.1, -3.2989, 1.25 ) }
    dend_35 { pt3dadd( -36.5454, -193.805, -3.51981, 1.33 ) }
    dend_35 { pt3dadd( -37.1376, -194.159, -3.61715, 1.33 ) }
    dend_35 { pt3dadd( -38.124, -194.637, -3.70062, 1.03 ) }
    dend_35 { pt3dadd( -38.9989, -194.973, -3.7122, 0.74 ) }
    dend_35 { pt3dadd( -39.7083, -195.198, -3.69389, 0.59 ) }
    dend_35 { pt3dadd( -40.6518, -195.495, -3.64339, 0.59 ) }
    dend_35 { pt3dadd( -41.6, -195.839, -3.57413, 0.88 ) }
    dend_35 { pt3dadd( -42.5573, -196.309, -3.46285, 1.18 ) }
    dend_35 { pt3dadd( -43.4694, -196.884, -3.2945, 1.18 ) }
    dend_35 { pt3dadd( -44.2867, -197.502, -3.09571, 1.18 ) }
    dend_35 { pt3dadd( -45.0577, -198.19, -2.88901, 1.18 ) }
    dend_35 { pt3dadd( -45.6502, -198.794, -2.72838, 1.18 ) }
    dend_35 { pt3dadd( -46.4696, -199.722, -2.50883, 0.81 ) }
    dend_35 { pt3dadd( -46.9585, -200.338, -2.38434, 0.59 ) }
    dend_35 { pt3dadd( -47.4054, -200.983, -2.27849, 0.52 ) }
    dend_35 { pt3dadd( -48.2525, -202.363, -2.10395, 0.96 ) }
    dend_35 { pt3dadd( -48.7348, -203.29, -2.02128, 1.18 ) }
    dend_35 { pt3dadd( -49.1296, -204.155, -1.97579, 1.18 ) }
    dend_35 { pt3dadd( -49.6222, -205.338, -1.96245, 0.88 ) }
    dend_35 { pt3dadd( -50.0897, -206.532, -1.98121, 0.59 ) }
    dend_35 { pt3dadd( -50.472, -207.607, -2.0014, 0.59 ) }
    dend_35 { pt3dadd( -50.8904, -208.859, -2.02067, 0.59 ) }
    dend_35 { pt3dadd( -51.2808, -210.027, -2.03682, 0.74 ) }
    dend_35 { pt3dadd( -51.7362, -211.334, -2.05646, 1.33 ) }
    dend_35 { pt3dadd( -52.146, -212.469, -2.07527, 1.69 ) }
    dend_35 { pt3dadd( -52.6712, -213.871, -2.10217, 1.77 ) }
    dend_35 { pt3dadd( -52.9718, -214.695, -2.11812, 1.77 ) }
    dend_35 { pt3dadd( -53.3351, -215.735, -2.1627, 1.77 ) }
    dend_35 { pt3dadd( -53.6278, -216.737, -2.22244, 1.47 ) }
    dend_35 { pt3dadd( -53.8923, -217.851, -2.30917, 1.03 ) }
    dend_35 { pt3dadd( -54.1228, -218.948, -2.41688, 1.03 ) }
    dend_35 { pt3dadd( -54.3796, -220.231, -2.57306, 1.03 ) }
    dend_35 { pt3dadd( -54.6282, -221.561, -2.73369, 1.11 ) }
    dend_35 { pt3dadd( -54.8471, -222.814, -2.87002, 1.33 ) }
    dend_35 { pt3dadd( -55.0096, -223.956, -2.96292, 1.03 ) }
    dend_35 { pt3dadd( -55.1631, -225.502, -3.03731, 0.81 ) }
    dend_35 { pt3dadd( -55.2349, -226.584, -3.05446, 1.03 ) }
    dend_35 { pt3dadd( -55.2853, -227.944, -3.03232, 0.81 ) }
    dend_35 { pt3dadd( -55.2982, -228.686, -2.99782, 0.81 ) }
    dend_35 { pt3dadd( -55.2947, -230.691, -2.8816, 0.74 ) }
    dend_35 { pt3dadd( -55.2546, -232.706, -2.74385, 0.74 ) }
    dend_35 { pt3dadd( -55.1881, -234.326, -2.62081, 0.74 ) }
    dend_35 { pt3dadd( -55.0955, -236.693, -2.44133, 0.74 ) }
    dend_35 { pt3dadd( -55.0674, -238.326, -2.33848, 0.74 ) }
    dend_35 { pt3dadd( -55.0921, -239.386, -2.28443, 1.18 ) }
    dend_35 { pt3dadd( -55.2041, -240.474, -2.24154, 1.4 ) }
    dend_35 { pt3dadd( -55.4523, -241.598, -2.21121, 1.4 ) }
    dend_35 { pt3dadd( -55.8438, -242.661, -2.19753, 1.47 ) }
    dend_35 { pt3dadd( -56.5071, -243.829, -2.21658, 1.55 ) }
    dend_35 { pt3dadd( -57.0342, -244.526, -2.25525, 1.55 ) }
    dend_35 { pt3dadd( -58.0362, -245.607, -2.34454, 1.11 ) }
    dend_35 { pt3dadd( -59.3695, -246.815, -2.47019, 0.88 ) }
    dend_35 { pt3dadd( -60.3559, -247.596, -2.53874, 0.88 ) }
    dend_35 { pt3dadd( -61.4996, -248.394, -2.59504, 1.03 ) }
    dend_35 { pt3dadd( -62.2935, -248.911, -2.62969, 1.03 ) }
    dend_35 { pt3dadd( -62.9259, -249.332, -2.64885, 1.03 ) }
    dend_35 { pt3dadd( -63.8654, -250.04, -2.62907, 0.81 ) }
    dend_35 { pt3dadd( -64.9595, -251.046, -2.55647, 0.59 ) }
    dend_35 { pt3dadd( -66.166, -252.436, -2.42807, 0.59 ) }
    dend_35 { pt3dadd( -66.9317, -253.519, -2.31309, 0.88 ) }
    dend_35 { pt3dadd( -67.5115, -254.525, -2.19211, 0.88 ) }
    dend_35 { pt3dadd( -68.2572, -256.109, -2.00383, 0.74 ) }
    dend_35 { pt3dadd( -68.671, -257.203, -1.87847, 0.96 ) }
    dend_35 { pt3dadd( -68.9979, -258.283, -1.7865, 1.11 ) }
    dend_35 { pt3dadd( -69.1888, -259.06, -1.72654, 1.11 ) }
    dend_35 { pt3dadd( -69.3682, -259.879, -1.68774, 0.88 ) }
    dend_35 { pt3dadd( -69.6121, -261.008, -1.70331, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_35 { pt3dadd( -69.7942, -261.802, -1.74522, 0.66 ) }
    dend_35 { pt3dadd( -70.0984, -263.137, -1.81167, 0.96 ) }
    dend_35 { pt3dadd( -70.3207, -264.158, -1.86396, 0.96 ) }
    dend_35 { pt3dadd( -70.5906, -265.464, -1.93365, 0.66 ) }
    dend_35 { pt3dadd( -70.8361, -266.656, -1.99926, 0.74 ) }
    dend_35 { pt3dadd( -71.2238, -268.569, -2.07954, 0.96 ) }
    dend_35 { pt3dadd( -71.448, -269.672, -2.09137, 0.96 ) }
    dend_35 { pt3dadd( -71.677, -270.822, -2.09532, 0.96 ) }
    dend_35 { pt3dadd( -71.9457, -272.141, -2.12446, 0.66 ) }
    dend_35 { pt3dadd( -72.3388, -274.089, -2.20583, 0.66 ) }
    dend_35 { pt3dadd( -72.6542, -275.952, -2.32649, 0.66 ) }
    dend_35 { pt3dadd( -72.8085, -277.067, -2.42706, 0.81 ) }
    dend_35 { pt3dadd( -73.0264, -279.02, -2.63541, 0.74 ) }
    dend_35 { pt3dadd( -73.155, -280.568, -2.82612, 0.74 ) }
    dend_35 { pt3dadd( -73.2344, -282.203, -3.04407, 0.96 ) }
    dend_35 { pt3dadd( -73.2623, -283.577, -3.23614, 0.96 ) }
    dend_35 { pt3dadd( -73.2805, -284.488, -3.35468, 1.62 ) }
    dend_35 { pt3dadd( -73.3224, -284.988, -3.40481, 1.62 ) }
    dend_35 { pt3dadd( -73.4328, -285.642, -3.42468, 1.62 ) }
    dend_35 { pt3dadd( -73.6502, -286.598, -3.41159, 1.4 ) }
    dend_35 { pt3dadd( -73.9345, -287.594, -3.3752, 0.88 ) }
    dend_35 { pt3dadd( -74.3258, -288.868, -3.30462, 0.59 ) }
    dend_35 { pt3dadd( -74.8535, -290.6, -3.1849, 0.81 ) }
    dend_35 { pt3dadd( -75.2825, -291.993, -3.07659, 0.96 ) }
    dend_35 { pt3dadd( -75.612, -293.118, -2.99313, 0.96 ) }
    dend_35 { pt3dadd( -75.977, -294.477, -2.90936, 1.11 ) }
    dend_35 { pt3dadd( -76.2129, -295.368, -2.8666, 1.11 ) }
    dend_35 { pt3dadd( -76.4072, -296.056, -2.84754, 1.33 ) }
    dend_35 { pt3dadd( -76.6084, -296.726, -2.83878, 1.33 ) }
    dend_35 { pt3dadd( -77.016, -297.814, -2.82426, 1.03 ) }
    dend_35 { pt3dadd( -77.5157, -298.885, -2.80911, 0.66 ) }
    dend_35 { pt3dadd( -77.9355, -299.683, -2.79593, 0.37 ) }
    dend_35 { pt3dadd( -78.2538, -300.265, -2.78568, 0.37 ) }
    dend_35 { pt3dadd( -78.6435, -301.028, -2.76357, 0.37 ) }
    dend_35 { pt3dadd( -78.9961, -301.753, -2.73544, 1.03 ) }
    dend_35 { pt3dadd( -79.3784, -302.56, -2.70203, 1.25 ) }
    dend_35 { pt3dadd( -79.6294, -303.16, -2.66897, 1.25 ) }
    dend_35 { pt3dadd( -80.0316, -304.283, -2.60072, 0.96 ) }
    dend_35 { pt3dadd( -80.4771, -305.697, -2.5159, 0.52 ) }
    dend_35 { pt3dadd( -80.856, -306.97, -2.44904, 0.52 ) }
    dend_35 { pt3dadd( -81.3454, -308.746, -2.36844, 0.52 ) }
    dend_35 { pt3dadd( -81.6936, -310.194, -2.30299, 0.81 ) }
    dend_35 { pt3dadd( -81.939, -311.25, -2.25016, 1.03 ) }
    dend_35 { pt3dadd( -82.1701, -312.204, -2.20161, 1.03 ) }
    dend_35 { pt3dadd( -82.3561, -312.939, -2.16605, 0.81 ) }
    dend_35 { pt3dadd( -82.599, -313.825, -2.13135, 0.81 ) }
    dend_35 { pt3dadd( -82.9842, -315.069, -2.10397, 0.59 ) }
    dend_35 { pt3dadd( -83.4735, -316.373, -2.10782, 0.44 ) }
    dend_35 { pt3dadd( -84.2408, -318.01, -2.13625, 0.88 ) }
    dend_35 { pt3dadd( -84.6378, -318.71, -2.15805, 0.88 ) }
    dend_35 { pt3dadd( -85.2373, -319.613, -2.19933, 0.59 ) }
    dend_35 { pt3dadd( -85.8767, -320.381, -2.25026, 0.59 ) }
    dend_35 { pt3dadd( -86.8978, -321.339, -2.35887, 0.59 ) }
    dend_35 { pt3dadd( -88.0016, -322.176, -2.50353, 0.81 ) }
    dend_35 { pt3dadd( -88.6337, -322.574, -2.5924, 0.81 ) }
    dend_35 { pt3dadd( -89.1446, -322.859, -2.66746, 0.81 ) }
    dend_35 { pt3dadd( -90.299, -323.409, -2.85018, 0.59 ) }
    dend_35 { pt3dadd( -91.5679, -323.896, -3.06275, 0.88 ) }
    dend_35 { pt3dadd( -92.8286, -324.285, -3.28825, 1.03 ) }
    dend_35 { pt3dadd( -94.0314, -324.596, -3.51587, 1.03 ) }
    dend_35 { pt3dadd( -95.0271, -324.801, -3.70279, 0.59 ) }
    dend_35 { pt3dadd( -95.9272, -324.96, -3.86109, 0.59 ) }
    dend_35 { pt3dadd( -96.6937, -325.097, -3.98512, 0.59 ) }
    dend_35 { pt3dadd( -97.3562, -325.211, -4.07126, 0.59 ) }
    dend_35 { pt3dadd( -98.063, -325.361, -4.15254, 0.59 ) }
    dend_35 { pt3dadd( -98.9899, -325.601, -4.24206, 0.44 ) }
    dend_35 { pt3dadd( -100.38, -326.052, -4.35302, 0.81 ) }
    dend_35 { pt3dadd( -101.543, -326.507, -4.42191, 1.11 ) }
    dend_35 { pt3dadd( -102.815, -327.094, -4.46651, 0.81 ) }
    dend_35 { pt3dadd( -104.09, -327.781, -4.48802, 0.66 ) }
    dend_35 { pt3dadd( -104.674, -328.14, -4.4912, 0.66 ) }
    dend_35 { pt3dadd( -105.376, -328.633, -4.48822, 0.52 ) }
    dend_35 { pt3dadd( -106.18, -329.252, -4.47188, 0.52 ) }
    dend_35 { pt3dadd( -106.993, -329.957, -4.44434, 0.52 ) }
    dend_35 { pt3dadd( -107.81, -330.717, -4.40798, 0.52 ) }
    dend_35 { pt3dadd( -108.303, -331.221, -4.37942, 1.11 ) }
    dend_35 { pt3dadd( -109.394, -332.454, -4.31807, 1.4 ) }
    dend_35 { pt3dadd( -109.982, -333.196, -4.28561, 1.84 ) }
    dend_35 { pt3dadd( -110.623, -334.096, -4.26364, 2.43 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 79/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.48369, -81.5015, -9.19041, 0.66 ) }
    dend_32 { pt3dadd( -9.4659, -82.838, -9.23392, 0.66 ) }
    dend_32 { pt3dadd( -9.4693, -83.6625, -9.25694, 0.37 ) }
    dend_32 { pt3dadd( -9.47734, -84.212, -9.29255, 0.81 ) }
    dend_32 { pt3dadd( -9.48319, -84.9204, -9.35846, 1.03 ) }
    dend_32 { pt3dadd( -9.49119, -85.536, -9.41989, 1.11 ) }
    dend_32 { pt3dadd( -9.50923, -86.1927, -9.49299, 0.88 ) }
    dend_32 { pt3dadd( -9.54636, -86.9475, -9.60109, 0.59 ) }
    dend_32 { pt3dadd( -9.58533, -87.8229, -9.76353, 0.29 ) }
    dend_32 { pt3dadd( -9.60579, -88.4552, -9.90745, 0.29 ) }
    dend_32 { pt3dadd( -9.606, -88.7435, -9.98696, 0.29 ) }
    dend_32 { pt3dadd( -9.57629, -89.3878, -10.2141, 0.74 ) }
    dend_32 { pt3dadd( -9.51225, -89.9821, -10.4721, 1.11 ) }
    dend_32 { pt3dadd( -9.45032, -90.3548, -10.6532, 1.11 ) }
    dend_32 { pt3dadd( -9.34331, -90.9018, -10.931, 1.11 ) }
    dend_32 { pt3dadd( -9.1896, -91.5364, -11.2386, 0.81 ) }
    dend_32 { pt3dadd( -8.90784, -92.5867, -11.701, 0.44 ) }
    dend_32 { pt3dadd( -8.62914, -93.5889, -12.0855, 0.59 ) }
    dend_32 { pt3dadd( -8.47061, -94.1959, -12.2821, 0.88 ) }
    dend_32 { pt3dadd( -8.32042, -94.8394, -12.4451, 0.88 ) }
    dend_32 { pt3dadd( -8.13356, -95.7669, -12.6201, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -7.97551, -96.6841, -12.7268, 0.44 ) }
    dend_32 { pt3dadd( -7.86827, -97.4127, -12.7583, 1.03 ) }
    dend_32 { pt3dadd( -7.79283, -98.0251, -12.763, 0.74 ) }
    dend_32 { pt3dadd( -7.7147, -98.7936, -12.766, 0.52 ) }
    dend_32 { pt3dadd( -7.66617, -99.3883, -12.7737, 0.88 ) }
    dend_32 { pt3dadd( -7.64968, -99.9336, -12.8063, 1.18 ) }
    dend_32 { pt3dadd( -7.64125, -100.405, -12.8425, 1.18 ) }
    dend_32 { pt3dadd( -7.64054, -100.946, -12.8863, 0.88 ) }
    dend_32 { pt3dadd( -7.64869, -101.886, -12.9703, 0.29 ) }
    dend_32 { pt3dadd( -7.66488, -102.597, -13.0397, 0.29 ) }
    dend_32 { pt3dadd( -7.70696, -103.613, -13.1554, 1.03 ) }
    dend_32 { pt3dadd( -7.73743, -104.288, -13.2449, 1.47 ) }
    dend_32 { pt3dadd( -7.75781, -104.713, -13.3015, 1.47 ) }
    dend_32 { pt3dadd( -7.77752, -105.18, -13.3662, 1.47 ) }
    dend_32 { pt3dadd( -7.79122, -105.877, -13.4703, 1.25 ) }
    dend_32 { pt3dadd( -7.79071, -106.729, -13.5956, 0.44 ) }
    dend_32 { pt3dadd( -7.7693, -107.432, -13.6968, 0.44 ) }
    dend_32 { pt3dadd( -7.74405, -108.117, -13.8032, 0.44 ) }
    dend_32 { pt3dadd( -7.72734, -108.469, -13.8619, 0.59 ) }
    dend_32 { pt3dadd( -7.68655, -109.295, -14.0019, 0.59 ) }
    dend_32 { pt3dadd( -7.6467, -109.923, -14.1178, 0.37 ) }
    dend_32 { pt3dadd( -7.61223, -110.448, -14.215, 0.81 ) }
    dend_32 { pt3dadd( -7.57754, -110.929, -14.2979, 1.03 ) }
    dend_32 { pt3dadd( -7.55073, -111.281, -14.352, 1.03 ) }
    dend_32 { pt3dadd( -7.52151, -111.719, -14.405, 0.59 ) }
    dend_32 { pt3dadd( -7.46444, -112.434, -14.4821, 0.22 ) }
    dend_32 { pt3dadd( -7.41302, -112.88, -14.5363, 0.22 ) }
    dend_32 { pt3dadd( -7.33844, -113.406, -14.6067, 0.22 ) }
    dend_32 { pt3dadd( -7.24807, -113.972, -14.6873, 0.66 ) }
    dend_32 { pt3dadd( -7.13134, -114.647, -14.792, 0.88 ) }
    dend_32 { pt3dadd( -6.94278, -115.631, -14.9603, 0.88 ) }
    dend_32 { pt3dadd( -6.71706, -116.773, -15.1637, 0.96 ) }
    dend_32 { pt3dadd( -6.55264, -117.632, -15.331, 1.18 ) }
    dend_32 { pt3dadd( -6.43814, -118.328, -15.4731, 0.66 ) }
    dend_32 { pt3dadd( -6.35082, -118.9, -15.5895, 0.52 ) }
    dend_32 { pt3dadd( -6.21068, -119.992, -15.8084, 0.52 ) }
    dend_32 { pt3dadd( -6.12291, -120.837, -15.9736, 0.81 ) }
    dend_32 { pt3dadd( -6.04746, -121.69, -16.142, 0.52 ) }
    dend_32 { pt3dadd( -5.98922, -122.327, -16.2666, 0.52 ) }
    dend_32 { pt3dadd( -5.92414, -123.081, -16.4305, 1.47 ) }
    dend_32 { pt3dadd( -5.85997, -123.85, -16.6193, 1.77 ) }
    dend_32 { pt3dadd( -5.81573, -124.441, -16.7918, 1.77 ) }
    dend_32 { pt3dadd( -5.78543, -124.78, -16.9051, 1.77 ) }
    dend_32 { pt3dadd( -5.72086, -125.338, -17.107, 1.25 ) }
    dend_32 { pt3dadd( -5.63446, -125.984, -17.3501, 0.81 ) }
    dend_32 { pt3dadd( -5.53512, -126.769, -17.6462, 0.44 ) }
    dend_32 { pt3dadd( -5.40314, -127.752, -18.0162, 0.37 ) }
    dend_32 { pt3dadd( -5.31958, -128.357, -18.2396, 0.52 ) }
    dend_32 { pt3dadd( -5.20585, -129.088, -18.5105, 0.52 ) }
    dend_32 { pt3dadd( -5.1104, -129.634, -18.7146, 0.66 ) }
    dend_32 { pt3dadd( -4.97157, -130.352, -18.9919, 0.66 ) }
    dend_32 { pt3dadd( -4.80114, -131.267, -19.3855, 0.88 ) }
    dend_32 { pt3dadd( -4.6579, -132.032, -19.75, 1.25 ) }
    dend_32 { pt3dadd( -4.58229, -132.461, -19.9801, 1.25 ) }
    dend_32 { pt3dadd( -4.51606, -132.828, -20.1985, 1.25 ) }
    dend_32 { pt3dadd( -4.38608, -133.545, -20.6623, 1.11 ) }
    dend_32 { pt3dadd( -4.27281, -134.175, -21.0957, 0.74 ) }
    dend_32 { pt3dadd( -4.17611, -134.727, -21.4951, 0.29 ) }
    dend_32 { pt3dadd( -4.12423, -135.054, -21.7377, 0.29 ) }
    dend_32 { pt3dadd( -4.00294, -135.851, -22.3135, 0.44 ) }
    dend_32 { pt3dadd( -3.931, -136.311, -22.6216, 0.88 ) }
    dend_32 { pt3dadd( -3.86715, -136.732, -22.8662, 1.33 ) }
    dend_32 { pt3dadd( -3.78908, -137.235, -23.1148, 1.47 ) }
    dend_32 { pt3dadd( -3.70469, -137.784, -23.3448, 1.47 ) }
    dend_32 { pt3dadd( -3.62596, -138.275, -23.5236, 1.25 ) }
    dend_32 { pt3dadd( -3.51346, -138.948, -23.741, 0.44 ) }
    dend_32 { pt3dadd( -3.31941, -139.94, -24.0008, 0.29 ) }
    dend_32 { pt3dadd( -3.15087, -140.73, -24.1567, 0.29 ) }
    dend_32 { pt3dadd( -2.97194, -141.54, -24.2705, 0.29 ) }
    dend_32 { pt3dadd( -2.82855, -142.189, -24.3282, 0.74 ) }
    dend_32 { pt3dadd( -2.73215, -142.651, -24.3461, 0.88 ) }
    dend_32 { pt3dadd( -2.56057, -143.593, -24.3289, 0.96 ) }
    dend_32 { pt3dadd( -2.45261, -144.405, -24.2754, 1.03 ) }
    dend_32 { pt3dadd( -2.41361, -145.019, -24.2202, 1.03 ) }
    dend_32 { pt3dadd( -2.40494, -145.633, -24.148, 0.59 ) }
    dend_32 { pt3dadd( -2.41199, -146.29, -24.0686, 0.22 ) }
    dend_32 { pt3dadd( -2.42379, -146.703, -24.0294, 0.22 ) }
    dend_32 { pt3dadd( -2.47194, -147.652, -23.9895, 0.96 ) }
    dend_32 { pt3dadd( -2.50768, -148.213, -23.9811, 1.11 ) }
    dend_32 { pt3dadd( -2.53037, -148.829, -23.9642, 1.11 ) }
    dend_32 { pt3dadd( -2.52441, -149.419, -23.9399, 0.59 ) }
    dend_32 { pt3dadd( -2.49325, -150.017, -23.9129, 0.29 ) }
    dend_32 { pt3dadd( -2.445, -150.528, -23.8857, 0.29 ) }
    dend_32 { pt3dadd( -2.39562, -150.954, -23.8533, 0.29 ) }
    dend_32 { pt3dadd( -2.27387, -151.879, -23.7697, 0.44 ) }
    dend_32 { pt3dadd( -2.15804, -152.663, -23.6815, 0.66 ) }
    dend_32 { pt3dadd( -2.02979, -153.491, -23.582, 0.66 ) }
    dend_32 { pt3dadd( -1.934, -154.089, -23.5184, 0.81 ) }
    dend_32 { pt3dadd( -1.83195, -154.753, -23.4635, 0.81 ) }
    dend_32 { pt3dadd( -1.73816, -155.386, -23.4234, 0.52 ) }
    dend_32 { pt3dadd( -1.6479, -156.191, -23.383, 0.66 ) }
    dend_32 { pt3dadd( -1.59207, -156.788, -23.352, 0.66 ) }
    dend_32 { pt3dadd( -1.55345, -157.793, -23.3272, 0.37 ) }
    dend_32 { pt3dadd( -1.56345, -158.682, -23.3338, 0.37 ) }
    dend_32 { pt3dadd( -1.60648, -159.392, -23.3578, 1.03 ) }
    dend_32 { pt3dadd( -1.69225, -160.104, -23.4189, 1.47 ) }
    dend_32 { pt3dadd( -1.82034, -160.802, -23.5089, 1.62 ) }
    dend_32 { pt3dadd( -2.12957, -162.046, -23.7149, 0.88 ) }
    dend_32 { pt3dadd( -2.41447, -162.856, -23.8804, 0.59 ) }
    dend_32 { pt3dadd( -2.70125, -163.474, -24.0263, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_32 { pt3dadd( -3.2692, -164.471, -24.2645, 0.29 ) }
    dend_32 { pt3dadd( -3.45719, -164.767, -24.321, 0.29 ) }
    dend_32 { pt3dadd( -3.74859, -165.194, -24.3728, 0.29 ) }
    dend_32 { pt3dadd( -4.27573, -165.99, -24.4127, 0.29 ) }
    dend_32 { pt3dadd( -4.79458, -166.744, -24.4376, 0.59 ) }
    dend_32 { pt3dadd( -5.32845, -167.544, -24.4555, 0.59 ) }
    dend_32 { pt3dadd( -5.66039, -168.039, -24.46, 0.44 ) }
    dend_32 { pt3dadd( -6.07693, -168.634, -24.4672, 0.44 ) }
    dend_32 { pt3dadd( -6.37013, -168.996, -24.4879, 0.29 ) }
    dend_32 { pt3dadd( -6.82405, -169.511, -24.5514, 1.4 ) }
    dend_32 { pt3dadd( -7.52921, -170.103, -24.6646, 1.62 ) }
    dend_32 { pt3dadd( -8.19506, -170.513, -24.7506, 1.4 ) }
    dend_32 { pt3dadd( -8.84479, -170.814, -24.8094, 1.11 ) }
    dend_32 { pt3dadd( -9.91922, -171.224, -24.8652, 0.81 ) }
    dend_32 { pt3dadd( -10.5143, -171.437, -24.8912, 0.59 ) }
    dend_32 { pt3dadd( -11.1787, -171.69, -24.9391, 0.74 ) }
    dend_32 { pt3dadd( -11.8239, -171.991, -25.0084, 0.81 ) }
    dend_32 { pt3dadd( -12.3323, -172.363, -25.0952, 0.52 ) }
    dend_32 { pt3dadd( -12.7137, -172.736, -25.1882, 0.52 ) }
    dend_32 { pt3dadd( -13.0556, -173.15, -25.2745, 0.74 ) }
    dend_32 { pt3dadd( -13.5352, -173.739, -25.4147, 0.74 ) }
    dend_32 { pt3dadd( -13.7869, -174.103, -25.5001, 0.74 ) }
    dend_32 { pt3dadd( -14.0546, -174.512, -25.6152, 0.52 ) }
    dend_32 { pt3dadd( -14.4399, -175.158, -25.7765, 0.52 ) }
    dend_32 { pt3dadd( -14.6437, -175.513, -25.8547, 0.52 ) }
    dend_32 { pt3dadd( -15.0108, -176.212, -25.9734, 1.69 ) }
    dend_32 { pt3dadd( -15.2188, -176.675, -26.0287, 2.14 ) }
    dend_32 { pt3dadd( -15.5758, -177.653, -26.1202, 1.55 ) }
    dend_32 { pt3dadd( -15.8826, -178.68, -26.1923, 0.29 ) }
    dend_32 { pt3dadd( -16.0334, -179.28, -26.2228, 0.29 ) }
    dend_32 { pt3dadd( -16.217, -180.105, -26.2499, 0.44 ) }
    dend_32 { pt3dadd( -16.3724, -180.894, -26.2531, 0.59 ) }
    dend_32 { pt3dadd( -16.5001, -181.594, -26.2412, 0.59 ) }
    dend_32 { pt3dadd( -16.6137, -182.31, -26.2054, 0.29 ) }
    dend_32 { pt3dadd( -16.6759, -182.694, -26.1863, 0.29 ) }
    dend_32 { pt3dadd( -16.7612, -183.231, -26.1607, 0.96 ) }
    dend_32 { pt3dadd( -16.8293, -183.7, -26.1431, 1.03 ) }
    dend_32 { pt3dadd( -16.9106, -184.353, -26.1319, 0.52 ) }
    dend_32 { pt3dadd( -16.9946, -185.2, -26.1382, 0.29 ) }
    dend_32 { pt3dadd( -17.0299, -185.681, -26.1507, 0.81 ) }
    dend_32 { pt3dadd( -17.0602, -186.238, -26.1703, 0.96 ) }
    dend_32 { pt3dadd( -17.0804, -186.668, -26.1884, 0.96 ) }
    dend_32 { pt3dadd( -17.1156, -187.421, -26.2226, 0.29 ) }
    dend_32 { pt3dadd( -17.1673, -188.281, -26.2516, 0.29 ) }
    dend_32 { pt3dadd( -17.2466, -189.181, -26.2967, 1.47 ) }
    dend_32 { pt3dadd( -17.3108, -189.811, -26.3382, 1.92 ) }
    dend_32 { pt3dadd( -17.3414, -190.116, -26.3632, 1.92 ) }
    dend_32 { pt3dadd( -17.4123, -190.877, -26.4225, 1.33 ) }
    dend_32 { pt3dadd( -17.485, -191.722, -26.4975, 0.29 ) }
    dend_32 { pt3dadd( -17.558, -192.583, -26.5831, 0.29 ) }
    dend_32 { pt3dadd( -17.6152, -193.27, -26.6635, 0.29 ) }
    dend_32 { pt3dadd( -17.741, -194.76, -26.8532, 0.29 ) }
    dend_32 { pt3dadd( -17.8146, -195.774, -26.9821, 1.4 ) }
    dend_32 { pt3dadd( -17.8496, -196.392, -27.0602, 2.14 ) }
    dend_32 { pt3dadd( -17.8607, -196.661, -27.094, 2.28 ) }
    dend_32 { pt3dadd( -17.869, -197.101, -27.1443, 2.28 ) }
    dend_32 { pt3dadd( -17.8715, -197.556, -27.1828, 1.92 ) }
    dend_32 { pt3dadd( -17.8531, -198.219, -27.1872, 0.88 ) }
    dend_32 { pt3dadd( -17.795, -199.234, -27.1381, 0.29 ) }
    dend_32 { pt3dadd( -17.7413, -199.856, -27.0795, 0.29 ) }
    dend_32 { pt3dadd( -17.6669, -200.553, -26.9954, 0.29 ) }
    dend_32 { pt3dadd( -17.536, -201.645, -26.8434, 0.29 ) }
    dend_32 { pt3dadd( -17.3968, -202.762, -26.6892, 0.96 ) }
    dend_32 { pt3dadd( -17.303, -203.51, -26.5959, 1.62 ) }
    dend_32 { pt3dadd( -17.2498, -203.933, -26.547, 1.62 ) }
    dend_32 { pt3dadd( -17.2047, -204.331, -26.5088, 1.62 ) }
    dend_32 { pt3dadd( -17.1298, -205.188, -26.4562, 1.11 ) }
    dend_32 { pt3dadd( -17.0932, -206.233, -26.4781, 0.29 ) }
    dend_32 { pt3dadd( -17.1044, -207.011, -26.5342, 0.29 ) }
    dend_32 { pt3dadd( -17.1304, -207.628, -26.5905, 0.59 ) }
    dend_32 { pt3dadd( -17.1525, -207.933, -26.621, 0.66 ) }
    dend_32 { pt3dadd( -17.1881, -208.304, -26.6581, 0.66 ) }
    dend_32 { pt3dadd( -17.3111, -209.324, -26.7529, 0.29 ) }
    dend_32 { pt3dadd( -17.5009, -210.507, -26.8637, 0.29 ) }
    dend_32 { pt3dadd( -17.6764, -211.426, -26.9427, 0.96 ) }
    dend_32 { pt3dadd( -17.8387, -212.152, -26.9872, 1.4 ) }
    dend_32 { pt3dadd( -17.968, -212.697, -27.0066, 1.4 ) }
    dend_32 { pt3dadd( -18.1027, -213.261, -27.0144, 1.4 ) }
    dend_32 { pt3dadd( -18.2772, -214.009, -27.004, 0.88 ) }
    dend_32 { pt3dadd( -18.4909, -214.924, -26.9837, 0.29 ) }
    dend_32 { pt3dadd( -18.6764, -215.76, -26.9561, 0.29 ) }
    dend_32 { pt3dadd( -18.8693, -216.606, -26.9171, 0.44 ) }
    dend_32 { pt3dadd( -18.9978, -217.143, -26.8791, 0.66 ) }
    dend_32 { pt3dadd( -19.1026, -217.576, -26.8351, 0.66 ) }
    dend_32 { pt3dadd( -19.2763, -218.347, -26.7268, 0.29 ) }
    dend_32 { pt3dadd( -19.3767, -218.811, -26.6596, 0.29 ) }
    dend_32 { pt3dadd( -19.5205, -219.402, -26.5946, 0.29 ) }
    dend_32 { pt3dadd( -19.7607, -220.212, -26.5433, 0.29 ) }
    dend_32 { pt3dadd( -19.9227, -220.673, -26.5363, 0.52 ) }
    dend_32 { pt3dadd( -20.161, -221.31, -26.559, 0.66 ) }
    dend_32 { pt3dadd( -20.352, -221.943, -26.5962, 0.66 ) }
    dend_32 { pt3dadd( -20.5638, -222.921, -26.6896, 1.4 ) }
    dend_32 { pt3dadd( -20.6675, -223.771, -26.8222, 2.28 ) }
    dend_32 { pt3dadd( -20.7047, -224.611, -26.9979, 2.5 ) }
    dend_32 { pt3dadd( -20.6796, -225.081, -27.1094, 2.5 ) }
    dend_32 { pt3dadd( -20.3893, -226.708, -27.5524, 0.22 ) }
    dend_32 { pt3dadd( -20.1875, -227.361, -27.7416, 0.22 ) }
    dend_32 { pt3dadd( -19.8115, -228.181, -27.9975, 0.37 ) }
    dend_32 { pt3dadd( -19.5195, -228.662, -28.1589, 0.44 ) }
    dend_32 { pt3dadd( -19.0139, -229.359, -28.5093, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -18.5148, -229.99, -28.9772, 0.88 ) }
    dend_32 { pt3dadd( -18.2793, -230.275, -29.3271, 1.4 ) }
    dend_32 { pt3dadd( -18.1308, -230.476, -29.6393, 1.4 ) }
    dend_32 { pt3dadd( -17.9768, -230.762, -30.1198, 1.11 ) }
    dend_32 { pt3dadd( -17.645, -231.754, -31.8135, 0.29 ) }
    dend_32 { pt3dadd( -17.5847, -232.116, -32.4101, 0.29 ) }
    dend_32 { pt3dadd( -17.5482, -232.758, -33.3909, 0.81 ) }
    dend_32 { pt3dadd( -17.5556, -233.186, -33.9181, 0.81 ) }
    dend_32 { pt3dadd( -17.6102, -234.116, -34.8351, 0.22 ) }
    dend_32 { pt3dadd( -17.6406, -234.512, -35.147, 0.22 ) }
    dend_32 { pt3dadd( -17.6755, -235.135, -35.4995, 0.44 ) }
    dend_32 { pt3dadd( -17.694, -235.49, -35.6632, 0.59 ) }
    dend_32 { pt3dadd( -17.7573, -236.986, -36.2279, 0.22 ) }
    dend_32 { pt3dadd( -17.7838, -237.509, -36.4115, 0.74 ) }
    dend_32 { pt3dadd( -17.8096, -237.976, -36.5628, 1.03 ) }
    dend_32 { pt3dadd( -17.8263, -238.476, -36.7188, 1.03 ) }
    dend_32 { pt3dadd( -17.8363, -238.964, -36.8654, 0.74 ) }
    dend_32 { pt3dadd( -17.8416, -239.419, -37.0018, 0.37 ) }
    dend_32 { pt3dadd( -17.8457, -240.571, -37.3602, 0.22 ) }
    dend_32 { pt3dadd( -17.8623, -241.718, -37.7142, 0.22 ) }
    dend_32 { pt3dadd( -17.8837, -242.582, -37.97, 0.88 ) }
    dend_32 { pt3dadd( -17.9053, -243.221, -38.1539, 1.62 ) }
    dend_32 { pt3dadd( -17.9214, -243.573, -38.2521, 1.84 ) }
    dend_32 { pt3dadd( -17.9486, -243.998, -38.3633, 1.84 ) }
    dend_32 { pt3dadd( -18.0205, -244.877, -38.5709, 0.52 ) }
    dend_32 { pt3dadd( -18.1082, -245.621, -38.7257, 0.22 ) }
    dend_32 { pt3dadd( -18.2046, -246.22, -38.8352, 0.22 ) }
    dend_32 { pt3dadd( -18.3069, -246.738, -38.9167, 0.37 ) }
    dend_32 { pt3dadd( -18.3511, -246.94, -38.9383, 0.37 ) }
    dend_32 { pt3dadd( -18.4823, -247.442, -38.9755, 0.22 ) }
    dend_32 { pt3dadd( -18.604, -247.852, -38.9928, 0.74 ) }
    dend_32 { pt3dadd( -18.7534, -248.319, -39.0089, 0.74 ) }
    dend_32 { pt3dadd( -18.8935, -248.742, -39.0151, 0.59 ) }
    dend_32 { pt3dadd( -19.2088, -249.66, -39.009, 0.22 ) }
    dend_32 { pt3dadd( -19.3617, -250.085, -38.9908, 0.22 ) }
    dend_32 { pt3dadd( -19.5719, -250.657, -38.9236, 0.59 ) }
    dend_32 { pt3dadd( -19.7241, -251.072, -38.84, 0.59 ) }
    dend_32 { pt3dadd( -19.8642, -251.502, -38.7129, 0.29 ) }
    dend_32 { pt3dadd( -20.0078, -251.942, -38.553, 0.22 ) }
    dend_32 { pt3dadd( -20.2493, -252.553, -38.3173, 0.37 ) }
    dend_32 { pt3dadd( -20.588, -253.29, -38.014, 0.44 ) }
    dend_32 { pt3dadd( -20.9547, -253.819, -37.7822, 0.59 ) }
    dend_32 { pt3dadd( -21.4961, -254.364, -37.538, 0.37 ) }
    dend_32 { pt3dadd( -21.8717, -254.608, -37.4175, 0.22 ) }
    dend_32 { pt3dadd( -22.9113, -255.006, -37.1852, 2.21 ) }
    dend_32 { pt3dadd( -23.3411, -255.064, -37.1234, 2.5 ) }
    dend_32 { pt3dadd( -25.1276, -254.904, -36.9572, 0.22 ) }
    dend_32 { pt3dadd( -25.7009, -254.759, -36.9202, 0.22 ) }
    dend_32 { pt3dadd( -26.5206, -254.419, -36.913, 0.66 ) }
    dend_32 { pt3dadd( -26.9312, -254.195, -36.9278, 0.66 ) }
    dend_32 { pt3dadd( -27.5337, -253.805, -36.9684, 0.37 ) }
    dend_32 { pt3dadd( -28.3998, -253.228, -37.0598, 1.92 ) }
    dend_32 { pt3dadd( -28.7107, -253.024, -37.099, 1.92 ) }
    dend_32 { pt3dadd( -30.3217, -252.162, -37.3547, 0.44 ) }
    dend_32 { pt3dadd( -31.0363, -251.858, -37.4784, 0.59 ) }
    dend_32 { pt3dadd( -31.4506, -251.73, -37.5346, 0.37 ) }
    dend_32 { pt3dadd( -32.0544, -251.635, -37.5724, 0.37 ) }
    dend_32 { pt3dadd( -32.6651, -251.595, -37.5979, 0.22 ) }
    dend_32 { pt3dadd( -34.0593, -251.627, -37.572, 0.29 ) }
    dend_32 { pt3dadd( -34.5052, -251.708, -37.5079, 0.22 ) }
    dend_32 { pt3dadd( -35.2089, -251.878, -37.3643, 0.22 ) }
    dend_32 { pt3dadd( -36.165, -252.108, -37.1411, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 62/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -9.48369, -81.5015, -9.19041, 0.74 ) }
    dend_31 { pt3dadd( -10.919, -82.9503, -8.17133, 0.74 ) }
    dend_31 { pt3dadd( -11.4905, -83.474, -7.76271, 0.74 ) }
    dend_31 { pt3dadd( -12.3396, -84.1415, -7.18879, 0.74 ) }
    dend_31 { pt3dadd( -12.9492, -84.5418, -6.79589, 0.52 ) }
    dend_31 { pt3dadd( -13.6152, -84.8474, -6.411, 0.52 ) }
    dend_31 { pt3dadd( -14.2804, -85.0648, -6.06446, 0.88 ) }
    dend_31 { pt3dadd( -14.9128, -85.0663, -5.84189, 0.88 ) }
    dend_31 { pt3dadd( -16.0023, -84.8931, -5.56348, 0.59 ) }
    dend_31 { pt3dadd( -16.7114, -84.7273, -5.42047, 0.37 ) }
    dend_31 { pt3dadd( -17.8384, -84.5015, -5.25366, 0.37 ) }
    dend_31 { pt3dadd( -18.5507, -84.4315, -5.20394, 1.11 ) }
    dend_31 { pt3dadd( -19.1674, -84.4894, -5.20875, 1.47 ) }
    dend_31 { pt3dadd( -19.7609, -84.6335, -5.22364, 1.47 ) }
    dend_31 { pt3dadd( -20.1837, -84.7761, -5.22473, 1.47 ) }
    dend_31 { pt3dadd( -21.1373, -85.1118, -5.20525, 0.96 ) }
    dend_31 { pt3dadd( -21.9732, -85.3582, -5.15531, 0.59 ) }
    dend_31 { pt3dadd( -22.714, -85.5109, -5.05491, 0.59 ) }
    dend_31 { pt3dadd( -23.4387, -85.6182, -4.87714, 0.59 ) }
    dend_31 { pt3dadd( -24.1891, -85.7281, -4.66703, 0.81 ) }
    dend_31 { pt3dadd( -24.8922, -85.8353, -4.45205, 0.81 ) }
    dend_31 { pt3dadd( -25.4203, -85.9195, -4.25213, 0.81 ) }
    dend_31 { pt3dadd( -26.0324, -86.0449, -3.99941, 0.81 ) }
    dend_31 { pt3dadd( -26.7441, -86.4075, -3.82968, 0.22 ) }
    dend_31 { pt3dadd( -27.2966, -87.1511, -3.94489, 0.22 ) }
    dend_31 { pt3dadd( -27.6829, -87.7392, -4.09978, 0.66 ) }
    dend_31 { pt3dadd( -27.9044, -88.0876, -4.21261, 0.88 ) }
    dend_31 { pt3dadd( -28.2375, -88.5921, -4.39934, 0.88 ) }
    dend_31 { pt3dadd( -28.7558, -89.1786, -4.69782, 0.44 ) }
    dend_31 { pt3dadd( -29.516, -89.7595, -5.05397, 1.4 ) }
    dend_31 { pt3dadd( -30.2172, -90.0751, -5.31333, 2.14 ) }
    dend_31 { pt3dadd( -30.5335, -90.1546, -5.4195, 2.58 ) }
    dend_31 { pt3dadd( -31.1929, -90.2201, -5.61106, 2.36 ) }
    dend_31 { pt3dadd( -32.9889, -90.2362, -6.10685, 1.69 ) }
    dend_31 { pt3dadd( -33.9264, -90.1924, -6.34227, 0.37 ) }
    dend_31 { pt3dadd( -35.031, -90.1005, -6.54853, 0.37 ) }
    dend_31 { pt3dadd( -35.9061, -90.0219, -6.66506, 0.37 ) }
    dend_31 { pt3dadd( -37.6198, -89.919, -6.8129, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -38.3101, -89.9114, -6.84858, 2.14 ) }
    dend_31 { pt3dadd( -38.9823, -89.9594, -6.85985, 2.5 ) }
    dend_31 { pt3dadd( -40.9732, -90.2778, -6.94136, 0.44 ) }
    dend_31 { pt3dadd( -41.595, -90.4268, -6.98019, 0.44 ) }
    dend_31 { pt3dadd( -42.5659, -90.673, -7.0763, 0.44 ) }
    dend_31 { pt3dadd( -43.4726, -90.8708, -7.20038, 0.44 ) }
    dend_31 { pt3dadd( -44.4201, -91.0186, -7.3458, 1.4 ) }
    dend_31 { pt3dadd( -45.4701, -91.1423, -7.52664, 2.06 ) }
    dend_31 { pt3dadd( -46.4361, -91.2399, -7.73483, 2.06 ) }
    dend_31 { pt3dadd( -47.6412, -91.301, -8.02184, 0.66 ) }
    dend_31 { pt3dadd( -48.6181, -91.3191, -8.29955, 0.81 ) }
    dend_31 { pt3dadd( -49.7029, -91.3315, -8.66286, 0.52 ) }
    dend_31 { pt3dadd( -50.6442, -91.3733, -9.07526, 1.77 ) }
    dend_31 { pt3dadd( -51.3238, -91.4486, -9.4607, 2.28 ) }
    dend_31 { pt3dadd( -53.4118, -91.8808, -10.9654, 1.33 ) }
    dend_31 { pt3dadd( -54.153, -92.134, -11.6312, 1.77 ) }
    dend_31 { pt3dadd( -54.5949, -92.3154, -12.0864, 1.77 ) }
    dend_31 { pt3dadd( -55.4153, -92.6805, -12.9911, 0.74 ) }
    dend_31 { pt3dadd( -56.0556, -92.9783, -13.7205, 0.52 ) }
    dend_31 { pt3dadd( -56.9965, -93.4623, -14.7689, 0.52 ) }
    dend_31 { pt3dadd( -57.9485, -94.0529, -15.8302, 0.88 ) }
    dend_31 { pt3dadd( -58.8806, -94.6319, -16.7518, 1.47 ) }
    dend_31 { pt3dadd( -59.8077, -95.2163, -17.5738, 0.22 ) }
    dend_31 { pt3dadd( -60.2739, -95.5243, -17.9526, 0.22 ) }
    dend_31 { pt3dadd( -60.8511, -95.9505, -18.3931, 0.81 ) }
    dend_31 { pt3dadd( -61.3862, -96.4196, -18.786, 0.96 ) }
    dend_31 { pt3dadd( -62.0253, -97.0511, -19.2339, 1.55 ) }
    dend_31 { pt3dadd( -62.5838, -97.6867, -19.6078, 1.55 ) }
    dend_31 { pt3dadd( -63.1751, -98.3814, -19.9904, 0.37 ) }
    dend_31 { pt3dadd( -63.6039, -98.8743, -20.2673, 0.74 ) }
    dend_31 { pt3dadd( -64.1697, -99.4819, -20.6356, 0.81 ) }
    dend_31 { pt3dadd( -64.9236, -100.276, -21.1659, 0.29 ) }
    dend_31 { pt3dadd( -65.2662, -100.655, -21.4368, 0.96 ) }
    dend_31 { pt3dadd( -65.7351, -101.208, -21.849, 1.33 ) }
    dend_31 { pt3dadd( -66.338, -101.978, -22.4598, 0.74 ) }
    dend_31 { pt3dadd( -66.7766, -102.617, -22.9911, 0.59 ) }
    dend_31 { pt3dadd( -67.3437, -103.619, -23.8567, 0.29 ) }
    dend_31 { pt3dadd( -67.5952, -104.264, -24.4135, 0.29 ) }
    dend_31 { pt3dadd( -67.7499, -104.854, -24.9451, 0.29 ) }
    dend_31 { pt3dadd( -67.794, -105.305, -25.3481, 1.18 ) }
    dend_31 { pt3dadd( -67.7764, -105.724, -25.738, 1.69 ) }
    dend_31 { pt3dadd( -67.67, -106.328, -26.3177, 1.33 ) }
    dend_31 { pt3dadd( -67.4581, -107.17, -27.1635, 0.22 ) }
    dend_31 { pt3dadd( -67.3604, -107.554, -27.5606, 0.22 ) }
    dend_31 { pt3dadd( -67.2561, -108.054, -28.061, 0.96 ) }
    dend_31 { pt3dadd( -67.2066, -108.411, -28.396, 1.11 ) }
    dend_31 { pt3dadd( -67.1427, -109.101, -29.0038, 0.52 ) }
    dend_31 { pt3dadd( -67.0798, -110.223, -29.9279, 0.22 ) }
    dend_31 { pt3dadd( -67.0656, -110.759, -30.3488, 0.22 ) }
    dend_31 { pt3dadd( -67.0713, -111.348, -30.796, 0.88 ) }
    dend_31 { pt3dadd( -67.1016, -111.778, -31.1304, 1.03 ) }
    dend_31 { pt3dadd( -67.1916, -112.521, -31.7288, 0.22 ) }
    dend_31 { pt3dadd( -67.24, -112.863, -32.0151, 0.22 ) }
    dend_31 { pt3dadd( -67.3077, -113.359, -32.4505, 0.66 ) }
    dend_31 { pt3dadd( -67.3685, -113.909, -32.9417, 0.74 ) }
    dend_31 { pt3dadd( -67.4656, -115.188, -34.0693, 0.22 ) }
    dend_31 { pt3dadd( -67.5044, -116.124, -34.8284, 0.22 ) }
    dend_31 { pt3dadd( -67.5601, -117.331, -35.6786, 0.96 ) }
    dend_31 { pt3dadd( -67.5844, -117.793, -35.9632, 1.25 ) }
    dend_31 { pt3dadd( -67.6333, -118.423, -36.2705, 1.25 ) }
    dend_31 { pt3dadd( -67.7152, -119.37, -36.6186, 0.66 ) }
    dend_31 { pt3dadd( -67.8565, -120.555, -36.9215, 0.15 ) }
    dend_31 { pt3dadd( -68.0638, -121.583, -37.0894, 0.37 ) }
    dend_31 { pt3dadd( -68.2066, -122.066, -37.1452, 0.37 ) }
    dend_31 { pt3dadd( -68.8561, -123.836, -37.3135, 0.22 ) }
    dend_31 { pt3dadd( -68.9808, -124.111, -37.3393, 0.74 ) }
    dend_31 { pt3dadd( -69.2876, -124.697, -37.4041, 0.88 ) }
    dend_31 { pt3dadd( -70.3523, -126.556, -37.6275, 0.22 ) }
    dend_31 { pt3dadd( -70.7626, -127.255, -37.7091, 0.74 ) }
    dend_31 { pt3dadd( -71.1662, -127.934, -37.7786, 0.74 ) }
    dend_31 { pt3dadd( -72.055, -129.41, -37.9357, 0.22 ) }
    dend_31 { pt3dadd( -72.7873, -130.651, -38.0576, 0.22 ) }
    dend_31 { pt3dadd( -73.57, -132.08, -38.1498, 0.22 ) }
    dend_31 { pt3dadd( -74.2354, -133.435, -38.1891, 0.22 ) }
    dend_31 { pt3dadd( -74.5597, -134.175, -38.1821, 0.88 ) }
    dend_31 { pt3dadd( -74.7843, -134.763, -38.1587, 1.11 ) }
    dend_31 { pt3dadd( -74.9608, -135.361, -38.1191, 1.11 ) }
    dend_31 { pt3dadd( -75.2911, -136.82, -38.0068, 0.15 ) }
    dend_31 { pt3dadd( -75.4914, -138.0, -37.9306, 0.15 ) }
    dend_31 { pt3dadd( -75.5797, -138.653, -37.8937, 0.81 ) }
    dend_31 { pt3dadd( -75.6453, -139.223, -37.8661, 0.96 ) }
    dend_31 { pt3dadd( -76.0009, -141.338, -37.9863, 0.22 ) }
    dend_31 { pt3dadd( -76.1696, -142.328, -38.0743, 0.22 ) }
    dend_31 { pt3dadd( -76.3826, -143.416, -38.2376, 0.22 ) }
    dend_31 { pt3dadd( -76.4768, -143.851, -38.3242, 1.18 ) }
    dend_31 { pt3dadd( -76.5807, -144.264, -38.4314, 1.18 ) }
    dend_31 { pt3dadd( -77.619, -147.28, -39.5788, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 27.6417, 214.29, -20.6055, 0.37 ) }
    dend_26 { pt3dadd( 28.0895, 213.608, -20.2328, 0.37 ) }
    dend_26 { pt3dadd( 28.4536, 213.1, -19.968, 0.52 ) }
    dend_26 { pt3dadd( 28.9693, 212.413, -19.6115, 0.74 ) }
    dend_26 { pt3dadd( 29.3875, 211.87, -19.3413, 1.11 ) }
    dend_26 { pt3dadd( 29.632, 211.564, -19.1859, 1.11 ) }
    dend_26 { pt3dadd( 29.9869, 211.121, -18.9568, 0.81 ) }
    dend_26 { pt3dadd( 30.7967, 210.16, -18.3832, 0.22 ) }
    dend_26 { pt3dadd( 31.1854, 209.69, -18.1065, 0.22 ) }
    dend_26 { pt3dadd( 31.4291, 209.375, -17.946, 0.66 ) }
    dend_26 { pt3dadd( 31.6769, 209.023, -17.7862, 0.66 ) }
    dend_26 { pt3dadd( 31.9162, 208.657, -17.6337, 0.66 ) }
    dend_26 { pt3dadd( 32.3584, 207.922, -17.3297, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( 32.7583, 207.19, -17.0319, 0.22 ) }
    dend_26 { pt3dadd( 33.1703, 206.377, -16.7234, 0.22 ) }
    dend_26 { pt3dadd( 33.3568, 205.981, -16.583, 0.44 ) }
    dend_26 { pt3dadd( 33.4756, 205.709, -16.5064, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 27.6417, 214.29, -20.6055, 0.22 ) }
    dend_25 { pt3dadd( 29.0716, 214.392, -20.7033, 0.22 ) }
    dend_25 { pt3dadd( 29.3974, 214.437, -20.7368, 0.44 ) }
    dend_25 { pt3dadd( 30.8894, 214.726, -20.8961, 0.22 ) }
    dend_25 { pt3dadd( 31.5287, 214.871, -20.9818, 0.59 ) }
    dend_25 { pt3dadd( 32.0164, 214.992, -21.0703, 0.59 ) }
    dend_25 { pt3dadd( 34.1085, 215.511, -21.45, 0.22 ) }
    dend_25 { pt3dadd( 36.5184, 216.152, -21.9437, 0.22 ) }
    dend_25 { pt3dadd( 37.3785, 216.407, -22.1372, 0.66 ) }
    dend_25 { pt3dadd( 38.0486, 216.637, -22.3125, 0.81 ) }
    dend_25 { pt3dadd( 39.0584, 217.009, -22.6051, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 16.9287, 266.808, -12.5887, 0.59 ) }
    dend_19 { pt3dadd( 17.8315, 267.581, -13.1303, 0.59 ) }
    dend_19 { pt3dadd( 18.127, 267.843, -13.2954, 0.44 ) }
    dend_19 { pt3dadd( 18.7348, 268.418, -13.657, 0.22 ) }
    dend_19 { pt3dadd( 19.2551, 268.951, -13.9678, 0.81 ) }
    dend_19 { pt3dadd( 19.5263, 269.245, -14.1424, 0.96 ) }
    dend_19 { pt3dadd( 19.65, 269.383, -14.2273, 0.96 ) }
    dend_19 { pt3dadd( 20.0252, 269.869, -14.5055, 0.22 ) }
    dend_19 { pt3dadd( 20.5255, 270.65, -14.9784, 0.22 ) }
    dend_19 { pt3dadd( 20.9059, 271.379, -15.4325, 1.11 ) }
    dend_19 { pt3dadd( 21.0827, 271.785, -15.6806, 1.47 ) }
    dend_19 { pt3dadd( 21.1495, 271.984, -15.8076, 1.47 ) }
    dend_19 { pt3dadd( 21.3516, 272.858, -16.3537, 0.22 ) }
    dend_19 { pt3dadd( 21.4545, 273.656, -16.8484, 0.22 ) }
    dend_19 { pt3dadd( 21.4776, 274.127, -17.1321, 0.66 ) }
    dend_19 { pt3dadd( 21.4772, 274.36, -17.2761, 0.66 ) }
    dend_19 { pt3dadd( 21.4107, 275.475, -17.9382, 0.22 ) }
    dend_19 { pt3dadd( 21.3018, 276.491, -18.5221, 0.22 ) }
    dend_19 { pt3dadd( 21.2093, 277.069, -18.8515, 0.22 ) }
    dend_19 { pt3dadd( 21.0805, 277.741, -19.2273, 1.47 ) }
    dend_19 { pt3dadd( 20.9907, 278.124, -19.4301, 1.47 ) }
    dend_19 { pt3dadd( 20.6328, 279.422, -20.0507, 0.22 ) }
    dend_19 { pt3dadd( 20.4956, 279.844, -20.2342, 0.81 ) }
    dend_19 { pt3dadd( 20.3596, 280.198, -20.373, 0.81 ) }
    dend_19 { pt3dadd( 19.982, 281.066, -20.6666, 0.22 ) }
    dend_19 { pt3dadd( 19.6501, 281.754, -20.8753, 0.22 ) }
    dend_19 { pt3dadd( 19.2777, 282.469, -21.0733, 1.47 ) }
    dend_19 { pt3dadd( 19.1104, 282.765, -21.1614, 1.84 ) }
    dend_19 { pt3dadd( 18.478, 283.836, -21.4826, 0.22 ) }
    dend_19 { pt3dadd( 17.9727, 284.657, -21.7215, 0.22 ) }
    dend_19 { pt3dadd( 17.7827, 284.94, -21.8049, 0.22 ) }
    dend_19 { pt3dadd( 17.2615, 285.68, -22.0507, 1.55 ) }
    dend_19 { pt3dadd( 16.9264, 286.124, -22.2143, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 48/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 16.9287, 266.808, -12.5887, 0.22 ) }
    dend_18 { pt3dadd( 17.6762, 269.332, -13.1959, 0.22 ) }
    dend_18 { pt3dadd( 18.1122, 270.704, -13.5149, 0.22 ) }
    dend_18 { pt3dadd( 18.4624, 271.768, -13.7551, 0.96 ) }
    dend_18 { pt3dadd( 18.6175, 272.23, -13.8551, 1.18 ) }
    dend_18 { pt3dadd( 18.7801, 272.709, -13.9542, 1.18 ) }
    dend_18 { pt3dadd( 19.0441, 273.491, -14.1081, 0.22 ) }
    dend_18 { pt3dadd( 19.2474, 274.048, -14.2022, 0.44 ) }
    dend_18 { pt3dadd( 19.3427, 274.333, -14.2511, 0.44 ) }
    dend_18 { pt3dadd( 19.593, 275.155, -14.3879, 0.22 ) }
    dend_18 { pt3dadd( 19.8038, 275.876, -14.5046, 0.44 ) }
    dend_18 { pt3dadd( 20.0334, 276.676, -14.6319, 0.44 ) }
    dend_18 { pt3dadd( 20.6965, 279.124, -15.0016, 0.22 ) }
    dend_18 { pt3dadd( 21.2368, 281.186, -15.3266, 0.22 ) }
    dend_18 { pt3dadd( 21.4377, 281.96, -15.4588, 0.66 ) }
    dend_18 { pt3dadd( 21.5466, 282.385, -15.5372, 0.74 ) }
    dend_18 { pt3dadd( 21.7191, 283.06, -15.6841, 0.22 ) }
    dend_18 { pt3dadd( 22.1475, 284.709, -16.0867, 0.22 ) }
    dend_18 { pt3dadd( 22.3948, 285.677, -16.3384, 1.03 ) }
    dend_18 { pt3dadd( 22.5568, 286.32, -16.5138, 1.25 ) }
    dend_18 { pt3dadd( 22.6774, 286.805, -16.6499, 1.25 ) }
    dend_18 { pt3dadd( 23.0792, 288.437, -17.1191, 0.22 ) }
    dend_18 { pt3dadd( 23.7445, 291.121, -17.9054, 0.22 ) }
    dend_18 { pt3dadd( 23.9738, 292.025, -18.1715, 0.74 ) }
    dend_18 { pt3dadd( 24.1053, 292.547, -18.3101, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 73/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.33038, 98.0893, 11.5457, 0.37 ) }
    dend_16 { pt3dadd( 7.26551, 102.554, 13.5578, 0.37 ) }
    dend_16 { pt3dadd( 9.67014, 106.772, 15.6553, 0.37 ) }
    dend_16 { pt3dadd( 11.2799, 110.748, 18.7785, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.33038, 98.0893, 11.5457, 0.22 ) }
    dend_15 { pt3dadd( 9.50034, 105.634, 11.012, 0.37 ) }
    dend_15 { pt3dadd( 14.339, 112.68, 9.51332, 0.37 ) }
    dend_15 { pt3dadd( 19.5778, 119.386, 7.67942, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 81/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 89.2874, -2.63676, 7.37372, 0.37 ) }
    dend_10 { pt3dadd( 101.224, -5.21824, 7.82105, 0.37 ) }
    dend_10 { pt3dadd( 113.454, -5.98773, 7.86856, 0.37 ) }
    dend_10 { pt3dadd( 125.656, -5.32523, 8.83074, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 89.2874, -2.63676, 7.37372, 0.22 ) }
    dend_9 { pt3dadd( 100.885, -4.94669, 7.10313, 0.37 ) }
    dend_9 { pt3dadd( 112.737, -5.15908, 6.64472, 0.37 ) }
    dend_9 { pt3dadd( 124.551, -6.15176, 6.72542, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 89/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 52.2556, 6.42525, 5.07884, 0.52 ) }
    dend_5 { pt3dadd( 53.6581, 6.64515, 5.54938, 0.52 ) }
    dend_5 { pt3dadd( 54.2022, 6.70517, 5.73905, 0.52 ) }
    dend_5 { pt3dadd( 54.7645, 6.75098, 5.97682, 0.52 ) }
    dend_5 { pt3dadd( 55.84, 6.82462, 6.46845, 0.52 ) }
    dend_5 { pt3dadd( 56.4815, 6.85288, 6.77804, 0.88 ) }
    dend_5 { pt3dadd( 57.4634, 6.87659, 7.24438, 0.88 ) }
    dend_5 { pt3dadd( 58.1916, 6.89054, 7.57931, 0.88 ) }
    dend_5 { pt3dadd( 58.9634, 6.81367, 7.94768, 0.81 ) }
    dend_5 { pt3dadd( 59.4556, 6.65576, 8.1615, 0.81 ) }
    dend_5 { pt3dadd( 60.188, 6.23896, 8.45473, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_5 { pt3dadd( 60.768, 5.77501, 8.64764, 0.59 ) }
    dend_5 { pt3dadd( 61.3881, 5.17628, 8.78724, 0.59 ) }
    dend_5 { pt3dadd( 62.0034, 4.53372, 8.8548, 0.74 ) }
    dend_5 { pt3dadd( 62.9612, 3.42907, 8.88681, 0.66 ) }
    dend_5 { pt3dadd( 63.3517, 2.93458, 8.88855, 0.66 ) }
    dend_5 { pt3dadd( 63.938, 2.12297, 8.88233, 0.52 ) }
    dend_5 { pt3dadd( 64.335, 1.56219, 8.87154, 0.52 ) }
    dend_5 { pt3dadd( 64.8494, 0.865214, 8.84536, 0.81 ) }
    dend_5 { pt3dadd( 65.4896, -0.00137496, 8.80145, 0.81 ) }
    dend_5 { pt3dadd( 65.9107, -0.601273, 8.78253, 0.81 ) }
    dend_5 { pt3dadd( 66.4141, -1.39027, 8.75487, 0.81 ) }
    dend_5 { pt3dadd( 67.0084, -2.43446, 8.72519, 0.88 ) }
    dend_5 { pt3dadd( 67.475, -3.35752, 8.70615, 1.11 ) }
    dend_5 { pt3dadd( 67.7581, -3.96428, 8.69087, 1.11 ) }
    dend_5 { pt3dadd( 68.2696, -5.18417, 8.66652, 0.88 ) }
    dend_5 { pt3dadd( 68.6047, -6.15257, 8.68011, 0.96 ) }
    dend_5 { pt3dadd( 68.8067, -6.9038, 8.73128, 0.96 ) }
    dend_5 { pt3dadd( 68.9354, -7.52805, 8.80707, 0.96 ) }
    dend_5 { pt3dadd( 69.035, -8.09674, 8.89651, 0.66 ) }
    dend_5 { pt3dadd( 69.1911, -8.9959, 9.09023, 0.66 ) }
    dend_5 { pt3dadd( 69.4318, -10.1731, 9.41663, 0.81 ) }
    dend_5 { pt3dadd( 69.7012, -11.1028, 9.7195, 1.11 ) }
    dend_5 { pt3dadd( 70.094, -12.1461, 10.107, 0.96 ) }
    dend_5 { pt3dadd( 70.4523, -12.8908, 10.3764, 0.81 ) }
    dend_5 { pt3dadd( 71.0175, -13.8356, 10.706, 0.81 ) }
    dend_5 { pt3dadd( 71.7451, -14.8165, 11.0227, 0.59 ) }
    dend_5 { pt3dadd( 72.3891, -15.5578, 11.2295, 0.37 ) }
    dend_5 { pt3dadd( 72.9966, -16.1944, 11.3756, 0.37 ) }
    dend_5 { pt3dadd( 73.9069, -17.1175, 11.5396, 0.59 ) }
    dend_5 { pt3dadd( 74.4088, -17.6349, 11.5884, 0.88 ) }
    dend_5 { pt3dadd( 74.6873, -17.9378, 11.5903, 1.11 ) }
    dend_5 { pt3dadd( 75.0411, -18.3585, 11.5913, 1.11 ) }
    dend_5 { pt3dadd( 75.505, -18.9459, 11.6146, 0.74 ) }
    dend_5 { pt3dadd( 75.8797, -19.3952, 11.6327, 0.74 ) }
    dend_5 { pt3dadd( 76.2494, -19.8546, 11.6426, 0.74 ) }
    dend_5 { pt3dadd( 76.811, -20.5882, 11.6164, 0.74 ) }
    dend_5 { pt3dadd( 77.3802, -21.3654, 11.5422, 0.74 ) }
    dend_5 { pt3dadd( 77.8982, -22.0717, 11.4562, 0.66 ) }
    dend_5 { pt3dadd( 78.3907, -22.7326, 11.3566, 0.66 ) }
    dend_5 { pt3dadd( 79.0455, -23.6016, 11.1991, 0.96 ) }
    dend_5 { pt3dadd( 79.816, -24.6528, 10.9712, 1.4 ) }
    dend_5 { pt3dadd( 80.205, -25.2291, 10.8215, 1.62 ) }
    dend_5 { pt3dadd( 80.6013, -25.8656, 10.632, 1.77 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 52.2556, 6.42525, 5.07884, 0.88 ) }
    dend_4 { pt3dadd( 53.4717, 7.413, 4.84773, 0.88 ) }
    dend_4 { pt3dadd( 54.5572, 8.23189, 4.72779, 0.88 ) }
    dend_4 { pt3dadd( 55.7721, 9.03762, 4.68605, 0.88 ) }
    dend_4 { pt3dadd( 57.0855, 9.79396, 4.71051, 0.88 ) }
    dend_4 { pt3dadd( 58.6361, 10.5984, 4.81411, 0.74 ) }
    dend_4 { pt3dadd( 59.6155, 11.0887, 4.90736, 0.74 ) }
    dend_4 { pt3dadd( 60.9928, 11.7236, 5.12513, 0.88 ) }
    dend_4 { pt3dadd( 62.2259, 12.2311, 5.36894, 0.88 ) }
    dend_4 { pt3dadd( 63.2458, 12.6063, 5.58231, 0.88 ) }
    dend_4 { pt3dadd( 64.237, 12.9533, 5.78624, 0.66 ) }
    dend_4 { pt3dadd( 64.9371, 13.2135, 5.90004, 0.66 ) }
    dend_4 { pt3dadd( 65.8916, 13.6288, 5.94451, 0.88 ) }
    dend_4 { pt3dadd( 66.4722, 13.9288, 5.90393, 0.88 ) }
    dend_4 { pt3dadd( 67.0344, 14.2514, 5.81881, 0.88 ) }
    dend_4 { pt3dadd( 67.6078, 14.5868, 5.71499, 0.88 ) }
    dend_4 { pt3dadd( 68.6744, 15.1972, 5.53187, 0.59 ) }
    dend_4 { pt3dadd( 69.4249, 15.6351, 5.45362, 0.59 ) }
    dend_4 { pt3dadd( 69.9954, 16.0065, 5.42005, 0.81 ) }
    dend_4 { pt3dadd( 70.7417, 16.56, 5.38614, 0.81 ) }
    dend_4 { pt3dadd( 71.3128, 17.0456, 5.35267, 0.81 ) }
    dend_4 { pt3dadd( 71.9585, 17.6404, 5.30693, 0.66 ) }
    dend_4 { pt3dadd( 72.8845, 18.5266, 5.24065, 0.59 ) }
    dend_4 { pt3dadd( 73.877, 19.6075, 5.08925, 0.59 ) }
    dend_4 { pt3dadd( 74.4196, 20.2562, 4.94666, 0.59 ) }
    dend_4 { pt3dadd( 75.0481, 21.0436, 4.70849, 0.44 ) }
    dend_4 { pt3dadd( 75.4473, 21.5251, 4.52544, 0.44 ) }
    dend_4 { pt3dadd( 75.8813, 22.0136, 4.30399, 0.44 ) }
    dend_4 { pt3dadd( 76.968, 23.1566, 3.72642, 0.44 ) }
    dend_4 { pt3dadd( 77.8266, 24.0086, 3.29098, 0.66 ) }
    dend_4 { pt3dadd( 78.5433, 24.7012, 2.93427, 0.66 ) }
    dend_4 { pt3dadd( 79.4296, 25.5438, 2.49241, 0.74 ) }
    dend_4 { pt3dadd( 80.1221, 26.1981, 2.14363, 0.96 ) }
    dend_4 { pt3dadd( 80.6538, 26.6838, 1.88417, 0.96 ) }
    dend_4 { pt3dadd( 81.4335, 27.3259, 1.54838, 0.66 ) }
    dend_4 { pt3dadd( 82.1953, 27.9243, 1.23979, 0.66 ) }
    dend_4 { pt3dadd( 83.4034, 28.854, 0.761735, 0.59 ) }
    dend_4 { pt3dadd( 84.5204, 29.7535, 0.325261, 0.59 ) }
    dend_4 { pt3dadd( 85.2412, 30.3564, 0.0484213, 0.81 ) }
    dend_4 { pt3dadd( 85.7877, 30.8333, -0.162221, 0.81 ) }
    dend_4 { pt3dadd( 86.7182, 31.6236, -0.492266, 0.52 ) }
    dend_4 { pt3dadd( 87.4339, 32.1855, -0.710211, 0.52 ) }
    dend_4 { pt3dadd( 88.3792, 32.8921, -0.957402, 0.52 ) }
    dend_4 { pt3dadd( 89.1739, 33.4739, -1.15352, 0.52 ) }
    dend_4 { pt3dadd( 89.9351, 34.0176, -1.33727, 0.37 ) }
    dend_4 { pt3dadd( 91.2919, 34.9581, -1.65822, 0.37 ) }
    dend_4 { pt3dadd( 92.1856, 35.559, -1.87167, 0.59 ) }
    dend_4 { pt3dadd( 92.7554, 35.9109, -2.00178, 0.59 ) }
    dend_4 { pt3dadd( 93.9674, 36.6097, -2.28816, 0.74 ) }
    dend_4 { pt3dadd( 94.6003, 36.978, -2.44109, 0.74 ) }
    dend_4 { pt3dadd( 95.1391, 37.309, -2.57565, 0.74 ) }
    dend_4 { pt3dadd( 95.9101, 37.8539, -2.79194, 0.74 ) }
    dend_4 { pt3dadd( 96.4342, 38.2199, -2.98277, 0.44 ) }
    dend_4 { pt3dadd( 97.1942, 38.6735, -3.32011, 0.44 ) }
    dend_4 { pt3dadd( 97.8517, 38.993, -3.63204, 0.81 ) }
    dend_4 { pt3dadd( 98.959, 39.4414, -4.17188, 0.81 ) }
    dend_4 { pt3dadd( 99.7743, 39.701, -4.58112, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( 101.197, 40.0895, -5.30008, 0.52 ) }
    dend_4 { pt3dadd( 102.29, 40.3585, -5.89985, 0.44 ) }
    dend_4 { pt3dadd( 103.015, 40.4947, -6.32407, 0.44 ) }
    dend_4 { pt3dadd( 103.653, 40.5877, -6.72154, 0.44 ) }
    dend_4 { pt3dadd( 104.154, 40.6314, -7.05334, 0.44 ) }
    dend_4 { pt3dadd( 104.987, 40.6869, -7.57593, 0.74 ) }
    dend_4 { pt3dadd( 105.694, 40.8184, -7.90561, 0.59 ) }
    dend_4 { pt3dadd( 106.171, 40.9623, -8.12414, 0.59 ) }
    dend_4 { pt3dadd( 114.689, 48.3682, -9.52932, 0.59 ) }
    dend_4 { pt3dadd( 123.465, 55.5062, -10.8733, 0.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -110.623, -334.096, -4.26364, 0.52 ) }
    dend_39 { pt3dadd( -111.352, -335.859, -4.40293, 0.52 ) }
    dend_39 { pt3dadd( -111.659, -336.571, -4.45267, 0.29 ) }
    dend_39 { pt3dadd( -112.085, -337.501, -4.52656, 0.44 ) }
    dend_39 { pt3dadd( -112.487, -338.367, -4.60157, 0.44 ) }
    dend_39 { pt3dadd( -112.807, -339.037, -4.66434, 0.29 ) }
    dend_39 { pt3dadd( -113.294, -340.012, -4.77401, 0.29 ) }
    dend_39 { pt3dadd( -113.796, -340.939, -4.89676, 0.81 ) }
    dend_39 { pt3dadd( -114.173, -341.649, -5.01777, 1.18 ) }
    dend_39 { pt3dadd( -114.37, -342.038, -5.09187, 1.4 ) }
    dend_39 { pt3dadd( -114.678, -342.684, -5.21791, 1.4 ) }
    dend_39 { pt3dadd( -114.947, -343.307, -5.33665, 1.11 ) }
    dend_39 { pt3dadd( -115.477, -344.653, -5.57851, 0.52 ) }
    dend_39 { pt3dadd( -115.83, -345.71, -5.74226, 0.44 ) }
    dend_39 { pt3dadd( -116.074, -346.56, -5.85523, 0.74 ) }
    dend_39 { pt3dadd( -116.352, -347.585, -5.97607, 0.81 ) }
    dend_39 { pt3dadd( -116.55, -348.357, -6.0617, 0.81 ) }
    dend_39 { pt3dadd( -116.738, -349.175, -6.14856, 0.74 ) }
    dend_39 { pt3dadd( -116.971, -350.259, -6.21113, 0.22 ) }
    dend_39 { pt3dadd( -117.073, -350.76, -6.23172, 0.22 ) }
    dend_39 { pt3dadd( -117.232, -351.642, -6.26834, 0.22 ) }
    dend_39 { pt3dadd( -117.342, -352.406, -6.27347, 0.66 ) }
    dend_39 { pt3dadd( -117.437, -353.204, -6.24175, 0.81 ) }
    dend_39 { pt3dadd( -117.557, -354.487, -6.13754, 0.66 ) }
    dend_39 { pt3dadd( -117.629, -355.655, -5.98518, 0.22 ) }
    dend_39 { pt3dadd( -117.646, -356.697, -5.80178, 0.22 ) }
    dend_39 { pt3dadd( -117.621, -357.457, -5.63455, 0.22 ) }
    dend_39 { pt3dadd( -117.589, -358.193, -5.42966, 0.96 ) }
    dend_39 { pt3dadd( -117.58, -358.57, -5.31586, 1.18 ) }
    dend_39 { pt3dadd( -117.572, -359.132, -5.14872, 1.18 ) }
    dend_39 { pt3dadd( -117.572, -359.593, -4.98216, 1.18 ) }
    dend_39 { pt3dadd( -117.605, -360.472, -4.68408, 0.74 ) }
    dend_39 { pt3dadd( -117.713, -361.803, -4.28459, 0.22 ) }
    dend_39 { pt3dadd( -117.765, -362.242, -4.16354, 0.22 ) }
    dend_39 { pt3dadd( -117.838, -362.753, -4.02682, 0.44 ) }
    dend_39 { pt3dadd( -117.905, -363.195, -3.92063, 0.44 ) }
    dend_39 { pt3dadd( -118.062, -364.354, -3.67061, 0.22 ) }
    dend_39 { pt3dadd( -118.146, -365.083, -3.53779, 0.96 ) }
    dend_39 { pt3dadd( -118.186, -365.642, -3.45716, 1.18 ) }
    dend_39 { pt3dadd( -118.212, -366.177, -3.38535, 1.25 ) }
    dend_39 { pt3dadd( -118.256, -367.197, -3.25987, 0.96 ) }
    dend_39 { pt3dadd( -118.359, -368.662, -3.10373, 0.29 ) }
    dend_39 { pt3dadd( -118.466, -369.814, -3.0009, 0.22 ) }
    dend_39 { pt3dadd( -118.626, -371.115, -2.91662, 0.22 ) }
    dend_39 { pt3dadd( -118.733, -371.784, -2.88507, 0.81 ) }
    dend_39 { pt3dadd( -118.849, -372.328, -2.87215, 0.96 ) }
    dend_39 { pt3dadd( -119.365, -374.219, -2.8554, 0.22 ) }
    dend_39 { pt3dadd( -119.565, -374.81, -2.85918, 0.22 ) }
    dend_39 { pt3dadd( -119.916, -375.749, -2.86379, 0.59 ) }
    dend_39 { pt3dadd( -120.19, -376.435, -2.86309, 0.59 ) }
    dend_39 { pt3dadd( -120.591, -377.467, -2.85479, 0.52 ) }
    dend_39 { pt3dadd( -120.899, -378.316, -2.83585, 0.52 ) }
    dend_39 { pt3dadd( -121.288, -379.468, -2.77854, 0.52 ) }
    dend_39 { pt3dadd( -121.436, -379.922, -2.74826, 0.96 ) }
    dend_39 { pt3dadd( -121.68, -380.698, -2.6876, 0.96 ) }
    dend_39 { pt3dadd( -121.943, -381.572, -2.61114, 0.59 ) }
    dend_39 { pt3dadd( -122.394, -383.047, -2.4347, 0.22 ) }
    dend_39 { pt3dadd( -122.848, -384.572, -2.24071, 0.22 ) }
    dend_39 { pt3dadd( -123.06, -385.285, -2.14346, 0.22 ) }
    dend_39 { pt3dadd( -123.259, -385.918, -2.05368, 0.96 ) }
    dend_39 { pt3dadd( -123.399, -386.35, -1.98641, 1.18 ) }
    dend_39 { pt3dadd( -123.695, -387.209, -1.83334, 0.52 ) }
    dend_39 { pt3dadd( -124.31, -397.838, -2.10285, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -110.623, -334.096, -4.26364, 0.29 ) }
    dend_36 { pt3dadd( -112.185, -333.624, -4.65258, 0.29 ) }
    dend_36 { pt3dadd( -113.015, -333.587, -4.85779, 0.37 ) }
    dend_36 { pt3dadd( -113.392, -333.667, -4.94878, 0.37 ) }
    dend_36 { pt3dadd( -114.265, -333.978, -5.12233, 0.37 ) }
    dend_36 { pt3dadd( -115.069, -334.334, -5.36519, 0.52 ) }
    dend_36 { pt3dadd( -115.753, -334.664, -5.61354, 0.59 ) }
    dend_36 { pt3dadd( -116.647, -335.222, -6.0038, 0.59 ) }
    dend_36 { pt3dadd( -117.424, -335.753, -6.38442, 0.37 ) }
    dend_36 { pt3dadd( -118.127, -336.255, -6.76146, 0.37 ) }
    dend_36 { pt3dadd( -119.35, -337.167, -7.48231, 0.37 ) }
    dend_36 { pt3dadd( -119.905, -337.553, -7.83182, 0.37 ) }
    dend_36 { pt3dadd( -120.417, -337.883, -8.16291, 0.29 ) }
    dend_36 { pt3dadd( -120.827, -338.126, -8.42554, 0.29 ) }
    dend_36 { pt3dadd( -121.296, -338.392, -8.70986, 0.81 ) }
    dend_36 { pt3dadd( -121.681, -338.622, -8.92001, 0.81 ) }
    dend_36 { pt3dadd( -122.244, -338.997, -9.12788, 0.81 ) }
    dend_36 { pt3dadd( -123.213, -339.724, -9.43318, 0.29 ) }
    dend_36 { pt3dadd( -123.682, -340.112, -9.55783, 0.66 ) }
    dend_36 { pt3dadd( -124.039, -340.424, -9.62923, 0.66 ) }
    dend_36 { pt3dadd( -124.376, -340.734, -9.67989, 0.66 ) }
    dend_36 { pt3dadd( -125.605, -341.914, -9.81863, 0.29 ) }
    dend_36 { pt3dadd( -126.149, -342.463, -9.87965, 0.44 ) }
    dend_36 { pt3dadd( -126.62, -342.937, -9.93427, 0.29 ) }
    dend_36 { pt3dadd( -127.175, -343.484, -10.0151, 0.74 ) }
    dend_36 { pt3dadd( -127.572, -343.857, -10.1031, 0.74 ) }
    dend_36 { pt3dadd( -128.206, -344.399, -10.2958, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_36 { pt3dadd( -129.297, -345.234, -10.7164, 0.29 ) }
    dend_36 { pt3dadd( -129.935, -345.687, -10.9937, 0.52 ) }
    dend_36 { pt3dadd( -130.355, -345.971, -11.2096, 0.52 ) }
    dend_36 { pt3dadd( -131.202, -346.531, -11.7326, 0.29 ) }
    dend_36 { pt3dadd( -131.823, -346.913, -12.1454, 0.29 ) }
    dend_36 { pt3dadd( -132.196, -347.116, -12.4093, 0.59 ) }
    dend_36 { pt3dadd( -132.627, -347.333, -12.7434, 0.59 ) }
    dend_36 { pt3dadd( -133.393, -347.712, -13.3704, 0.22 ) }
    dend_36 { pt3dadd( -133.828, -347.915, -13.7142, 0.29 ) }
    dend_36 { pt3dadd( -134.496, -348.224, -14.2052, 0.29 ) }
    dend_36 { pt3dadd( -134.812, -348.376, -14.4332, 0.29 ) }
    dend_36 { pt3dadd( -135.626, -348.809, -15.0047, 0.37 ) }
    dend_36 { pt3dadd( -136.274, -349.21, -15.3646, 0.37 ) }
    dend_36 { pt3dadd( -136.978, -349.699, -15.6465, 0.52 ) }
    dend_36 { pt3dadd( -137.816, -350.361, -15.9005, 1.55 ) }
    dend_36 { pt3dadd( -138.328, -350.818, -16.0245, 1.92 ) }
    dend_36 { pt3dadd( -138.827, -351.293, -16.1162, 1.92 ) }
    dend_36 { pt3dadd( -140.012, -352.47, -16.2478, 0.29 ) }
    dend_36 { pt3dadd( -140.796, -353.298, -16.3091, 0.29 ) }
    dend_36 { pt3dadd( -141.437, -354.011, -16.3313, 0.29 ) }
    dend_36 { pt3dadd( -141.952, -354.588, -16.334, 0.74 ) }
    dend_36 { pt3dadd( -142.208, -354.877, -16.3339, 0.96 ) }
    dend_36 { pt3dadd( -142.434, -355.123, -16.3401, 1.11 ) }
    dend_36 { pt3dadd( -143.086, -355.852, -16.3606, 0.52 ) }
    dend_36 { pt3dadd( -143.509, -356.338, -16.3386, 0.29 ) }
    dend_36 { pt3dadd( -144.142, -357.038, -16.2778, 0.22 ) }
    dend_36 { pt3dadd( -144.579, -357.492, -16.233, 0.44 ) }
    dend_36 { pt3dadd( -144.955, -357.861, -16.195, 0.44 ) }
    dend_36 { pt3dadd( -146.001, -358.869, -16.0784, 0.22 ) }
    dend_36 { pt3dadd( -146.64, -359.467, -15.9999, 0.22 ) }
    dend_36 { pt3dadd( -147.253, -360.02, -15.9313, 1.25 ) }
    dend_36 { pt3dadd( -147.822, -360.518, -15.8579, 1.55 ) }
    dend_36 { pt3dadd( -148.094, -360.744, -15.828, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 80.6013, -25.8656, 10.632, 0.74 ) }
    dend_7 { pt3dadd( 81.7806, -26.4439, 11.894, 0.74 ) }
    dend_7 { pt3dadd( 82.1246, -26.631, 12.2366, 0.74 ) }
    dend_7 { pt3dadd( 82.7167, -26.9964, 12.775, 0.59 ) }
    dend_7 { pt3dadd( 83.4166, -27.4889, 13.3402, 0.59 ) }
    dend_7 { pt3dadd( 84.07, -28.0006, 13.8133, 0.59 ) }
    dend_7 { pt3dadd( 84.3976, -28.2689, 14.0358, 0.59 ) }
    dend_7 { pt3dadd( 85.0457, -28.862, 14.4122, 0.59 ) }
    dend_7 { pt3dadd( 85.6004, -29.3952, 14.702, 0.81 ) }
    dend_7 { pt3dadd( 86.3373, -30.0969, 15.0821, 0.81 ) }
    dend_7 { pt3dadd( 86.9479, -30.6524, 15.3909, 0.37 ) }
    dend_7 { pt3dadd( 87.5842, -31.1896, 15.7134, 0.37 ) }
    dend_7 { pt3dadd( 88.3276, -31.8079, 16.0995, 0.37 ) }
    dend_7 { pt3dadd( 89.0813, -32.438, 16.5236, 0.37 ) }
    dend_7 { pt3dadd( 89.8013, -33.0106, 16.9541, 0.37 ) }
    dend_7 { pt3dadd( 90.881, -33.8246, 17.6407, 0.22 ) }
    dend_7 { pt3dadd( 92.0315, -34.6622, 18.3974, 0.22 ) }
    dend_7 { pt3dadd( 98.0723, -40.8874, 21.9408, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 80.6013, -25.8656, 10.632, 0.37 ) }
    dend_6 { pt3dadd( 80.6198, -27.1114, 10.136, 0.37 ) }
    dend_6 { pt3dadd( 80.6858, -27.9038, 9.87481, 0.37 ) }
    dend_6 { pt3dadd( 80.79, -28.6444, 9.65798, 0.37 ) }
    dend_6 { pt3dadd( 80.9402, -29.4135, 9.50807, 0.37 ) }
    dend_6 { pt3dadd( 81.0982, -30.0786, 9.40238, 0.37 ) }
    dend_6 { pt3dadd( 81.3122, -30.8588, 9.30544, 0.29 ) }
    dend_6 { pt3dadd( 81.7025, -31.9576, 9.15901, 0.22 ) }
    dend_6 { pt3dadd( 82.1606, -33.1219, 8.95727, 0.22 ) }
    dend_6 { pt3dadd( 82.7851, -34.5692, 8.64376, 0.22 ) }
    dend_6 { pt3dadd( 83.0251, -35.1039, 8.50006, 1.18 ) }
    dend_6 { pt3dadd( 83.2069, -35.5415, 8.33277, 1.4 ) }
    dend_6 { pt3dadd( 83.6002, -36.8757, 7.61243, 1.4 ) }
    dend_6 { pt3dadd( 83.7442, -37.9454, 6.86176, 0.44 ) }
    dend_6 { pt3dadd( 83.7362, -38.3063, 6.58424, 0.44 ) }
    dend_6 { pt3dadd( 83.6553, -38.8511, 6.14256, 0.29 ) }
    dend_6 { pt3dadd( 83.434, -39.7598, 5.45908, 0.29 ) }
    dend_6 { pt3dadd( 83.0835, -40.9086, 4.63432, 0.22 ) }
    dend_6 { pt3dadd( 82.745, -41.7929, 4.10414, 0.22 ) }
    dend_6 { pt3dadd( 82.4924, -42.3218, 3.79848, 1.03 ) }
    dend_6 { pt3dadd( 82.3541, -42.5906, 3.65637, 1.33 ) }
    dend_6 { pt3dadd( 82.1472, -42.9676, 3.48239, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 73/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -148.094, -360.744, -15.828, 0.29 ) }
    dend_38 { pt3dadd( -149.205, -359.797, -15.9008, 0.29 ) }
    dend_38 { pt3dadd( -149.45, -359.588, -15.9241, 0.52 ) }
    dend_38 { pt3dadd( -149.827, -359.258, -15.971, 0.59 ) }
    dend_38 { pt3dadd( -151.951, -357.385, -16.3691, 0.22 ) }
    dend_38 { pt3dadd( -152.544, -356.866, -16.5017, 0.22 ) }
    dend_38 { pt3dadd( -153.357, -356.165, -16.705, 0.66 ) }
    dend_38 { pt3dadd( -153.785, -355.786, -16.8447, 0.66 ) }
    dend_38 { pt3dadd( -155.588, -354.242, -17.4983, 0.22 ) }
    dend_38 { pt3dadd( -156.328, -353.633, -17.7883, 0.22 ) }
    dend_38 { pt3dadd( -157.005, -353.124, -18.0611, 0.52 ) }
    dend_38 { pt3dadd( -157.486, -352.788, -18.2544, 0.66 ) }
    dend_38 { pt3dadd( -158.807, -351.937, -18.778, 0.22 ) }
    dend_38 { pt3dadd( -161.429, -350.287, -19.8101, 0.22 ) }
    dend_38 { pt3dadd( -163.124, -349.275, -20.4661, 0.22 ) }
    dend_38 { pt3dadd( -164.701, -348.348, -21.0353, 1.18 ) }
    dend_38 { pt3dadd( -165.143, -348.093, -21.1945, 1.4 ) }
    dend_38 { pt3dadd( -165.825, -347.713, -21.4345, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 91/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -148.094, -360.744, -15.828, 0.22 ) }
    dend_37 { pt3dadd( -148.903, -361.958, -15.9331, 0.22 ) }
    dend_37 { pt3dadd( -149.575, -362.949, -15.9583, 0.22 ) }
    dend_37 { pt3dadd( -149.866, -363.393, -15.9541, 0.44 ) }
    dend_37 { pt3dadd( -149.992, -363.588, -15.9494, 0.44 ) }
    dend_37 { pt3dadd( -151.156, -365.454, -15.8831, 0.22 ) }
    dend_37 { pt3dadd( -151.701, -366.327, -15.852, 0.44 ) }
    dend_37 { pt3dadd( -152.166, -367.06, -15.8179, 0.22 ) }
    dend_37 { pt3dadd( -152.463, -367.552, -15.7765, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_37 { pt3dadd( -152.717, -367.978, -15.7309, 0.66 ) }
    dend_37 { pt3dadd( -152.906, -368.305, -15.6855, 0.44 ) }
    dend_37 { pt3dadd( -156.767, -375.825, -14.1582, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, axon_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_5 = new SectionList()
    dend_49 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_49 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_44 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_45 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_17 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_47 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_40 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_31 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_39 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_36 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_11 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_6 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_48 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_46 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 3
    dend_42 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 3
    dend_33 nseg = 3
    dend_22 nseg = 9
    dend_21 nseg = 3
    dend_12 nseg = 7
    dend_1 nseg = 3
    dend_45 nseg = 5
    dend_41 nseg = 7
    dend_34 nseg = 3
    dend_29 nseg = 5
    dend_17 nseg = 11
    dend_14 nseg = 3
    dend_8 nseg = 3
    dend_47 nseg = 11
    dend_40 nseg = 5
    dend_35 nseg = 11
    dend_32 nseg = 11
    dend_31 nseg = 7
    dend_5 nseg = 3
    dend_4 nseg = 5
    dend_39 nseg = 3
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_ChC_85076eeecc_0_0


