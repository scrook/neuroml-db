// Cell: Cell_478513224
/*
{
  "id" : "Cell_478513224",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "389.433, 376.147, 45.36, 12.5526", "395.71, 376.147, 45.36, 12.5526", "401.986, 376.147, 45.36, 12.5526" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "395.71, 376.147, 45.36, 1.0", "401.551, 389.963, 45.36, 1.0", "407.392, 403.779, 45.36, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500039831116067
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "400.868, 372.809, 44.2355, 0.3814", "401.799, 372.154, 44.0745, 0.3304", "402.417, 371.259, 44.0154, 0.2796", "402.655, 370.14, 43.9502, 0.2288", "403.739, 369.963, 43.8749, 0.2288", "404.868, 369.782, 43.7875, 0.2542", "405.903, 369.338, 43.6864, 0.3304", "406.417, 368.425, 43.5064, 0.4322", "406.693, 367.35, 43.2292, 0.5084", "407.322, 366.416, 42.9674, 0.5592", "408.021, 365.511, 42.7386, 0.5592", "408.747, 364.634, 42.5239, 0.5592", "409.562, 363.856, 42.271, 0.5084", "410.378, 363.078, 41.9975, 0.5338", "411.325, 362.468, 41.7508, 0.5848", "412.35, 361.962, 41.5433, 0.6356", "413.355, 361.426, 41.3557, 0.6356", "414.292, 360.79, 41.1452, 0.5848", "415.227, 360.153, 40.9265, 0.5338", "416.165, 359.516, 40.7137, 0.483", "417.109, 358.871, 40.556, 0.5084", "418.055, 358.226, 40.4446, 0.6102", "419.057, 357.682, 40.3752, 0.7118", "420.094, 357.198, 40.3413, 0.7372", "421.13, 356.713, 40.3284, 0.6864", "422.158, 357.13, 40.3234, 0.5848", "423.216, 357.562, 40.3166, 0.4576", "424.296, 357.94, 40.3066, 0.3304", "425.414, 358.167, 40.2926, 0.2796", "426.51, 357.908, 40.2738, 0.305", "427.601, 357.562, 40.2497, 0.356", "428.704, 357.66, 40.2086, 0.356", "429.81, 357.944, 40.1503, 0.305", "430.917, 358.228, 40.0806, 0.2542", "432.025, 358.512, 40.0056, 0.2288", "433.132, 358.796, 39.9302, 0.2796", "434.23, 359.102, 39.8625, 0.356", "435.19, 359.724, 39.8205, 0.4322", "436.15, 360.346, 39.7995, 0.4576", "437.224, 360.631, 39.7944, 0.483", "438.365, 360.717, 39.8009, 0.5084", "439.279, 360.774, 39.8913, 0.5084", "440.388, 361.025, 39.9207, 0.4322", "441.496, 361.193, 39.9095, 0.4068", "442.59, 360.855, 39.9081, 0.3814", "443.682, 360.517, 39.9171, 0.4068", "444.728, 360.059, 39.9571, 0.3304", "445.768, 359.586, 40.0238, 0.2796", "446.806, 359.112, 40.1234, 0.2288", "447.846, 358.638, 40.2422, 0.2542", "448.89, 358.172, 40.35, 0.305", "449.935, 357.705, 40.4449, 0.3814", "450.98, 357.239, 40.5266, 0.4068", "452.022, 356.795, 40.6361, 0.4068", "453.061, 356.377, 40.8022, 0.356", "454.13, 356.081, 40.9721, 0.3304", "455.273, 356.085, 41.0684, 0.305", "456.418, 356.088, 41.0897, 0.3304", "457.562, 356.092, 41.0362, 0.3814", "458.65, 356.295, 40.8668, 0.4068", "459.674, 356.727, 40.5569, 0.4068", "460.471, 357.45, 40.1652, 0.356", "461.117, 358.368, 39.7368, 0.3814", "461.729, 359.314, 39.3187, 0.4068", "462.145, 360.358, 38.9519, 0.483", "462.326, 361.465, 38.5851, 0.483", "462.535, 362.565, 38.2332, 0.483", "463.086, 363.568, 37.9646, 0.4322", "463.258, 364.673, 37.7527, 0.3814", "463.293, 365.816, 37.5752, 0.305", "462.928, 366.797, 37.3842, 0.2542", "462.144, 367.606, 37.1484, 0.2542", "461.359, 368.415, 36.8757, 0.2796", "460.576, 369.224, 36.5753, 0.3304", "459.996, 370.185, 36.3118, 0.356", "459.532, 371.23, 36.1122, 0.4068", "459.069, 372.276, 35.9668, 0.4068", "458.646, 373.336, 35.861, 0.3814", "458.353, 374.441, 35.7734, 0.305", "458.059, 375.548, 35.6868, 0.2796", "458.775, 376.343, 35.5449, 0.2796", "459.624, 377.098, 35.3486, 0.305", "460.474, 377.853, 35.1131, 0.2796", "461.319, 378.612, 34.8555, 0.2542", "462.098, 379.45, 34.6326, 0.2288", "462.973, 380.133, 34.3804, 0.2288", "463.91, 380.714, 34.0777, 0.2288", "465.04, 380.767, 33.8486, 0.2542", "466.185, 380.783, 33.689, 0.2796", "467.329, 380.798, 33.514, 0.305" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500039831116067,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "392.234, 381.463, 45.3454, 0.356", "392.079, 382.59, 45.6518, 0.3814", "391.891, 383.706, 45.7926, 0.4322", "391.329, 384.703, 45.92, 0.4068", "390.951, 385.754, 46.0412, 0.4576", "391.036, 386.875, 46.1639, 0.5084", "391.66, 387.766, 46.2935, 0.5592", "392.757, 387.664, 46.4335, 0.5084", "393.62, 387.795, 46.6539, 0.4576", "394.333, 388.626, 47.0019, 0.4576", "394.995, 389.501, 47.4132, 0.5338", "395.51, 390.51, 47.7666, 0.5084", "396.339, 391.229, 48.0962, 0.483", "397.359, 391.327, 48.5195, 0.4576", "398.359, 390.808, 48.8452, 0.5338", "399.493, 390.66, 49.0952, 0.5592", "400.628, 390.54, 49.3122, 0.5084", "401.759, 390.514, 49.5566, 0.4322", "402.891, 390.486, 49.8106, 0.356", "404.022, 390.46, 50.0612, 0.356", "405.153, 390.432, 50.3168, 0.356", "406.208, 390.062, 50.517, 0.4068", "407.221, 389.533, 50.6428, 0.4322", "408.234, 388.999, 50.7018, 0.4576", "409.329, 388.711, 50.694, 0.4322", "410.453, 388.509, 50.6355, 0.4068", "411.578, 388.308, 50.5464, 0.4322", "412.703, 388.107, 50.4468, 0.483", "413.839, 388.08, 50.3597, 0.5848", "414.98, 388.14, 50.2928, 0.5848", "416.122, 388.199, 50.2429, 0.6356", "417.16, 388.529, 50.2034, 0.5592", "418.034, 389.267, 50.1651, 0.5338", "418.888, 390.027, 50.1197, 0.4576", "419.87, 390.519, 50.0604, 0.4576", "421.0, 390.698, 49.9862, 0.4576", "422.071, 391.01, 49.8708, 0.4576", "423.016, 391.608, 49.667, 0.4576", "424.001, 392.116, 49.4236, 0.4576", "425.128, 392.315, 49.2257, 0.4322", "426.238, 392.564, 49.0672, 0.4322", "427.273, 393.052, 48.9412, 0.4068", "428.018, 393.844, 48.8418, 0.4068", "428.553, 394.855, 48.7589, 0.3814", "429.445, 395.535, 48.6298, 0.4322", "430.383, 396.173, 48.4532, 0.483", "431.32, 396.811, 48.2465, 0.5848", "432.351, 397.211, 48.0505, 0.5848", "433.489, 397.331, 47.899, 0.5592", "434.626, 397.45, 47.7848, 0.4322", "435.764, 397.565, 47.7008, 0.4068", "436.501, 398.406, 47.6336, 0.4322", "437.264, 399.239, 47.5709, 0.5084", "438.266, 399.789, 47.5028, 0.5084", "439.095, 400.281, 47.3217, 0.4576", "439.938, 400.869, 47.1271, 0.3814", "441.074, 400.972, 46.9742, 0.305", "442.217, 400.972, 46.8605, 0.2542", "443.362, 400.972, 46.7824, 0.2288", "444.506, 400.972, 46.7348, 0.2288", "445.587, 401.284, 46.7127, 0.2542", "446.272, 402.149, 46.6939, 0.305", "446.945, 403.028, 46.6693, 0.3814", "447.703, 403.882, 46.6376, 0.4322", "448.676, 404.452, 46.5702, 0.483", "449.571, 405.114, 46.4951, 0.5084", "450.202, 406.065, 46.4262, 0.5084", "450.687, 407.063, 46.3252, 0.4322", "451.561, 407.753, 46.2361, 0.356", "452.629, 408.154, 46.1611, 0.305", "453.682, 408.578, 46.0961, 0.3304", "454.655, 409.178, 46.0306, 0.356", "455.632, 409.759, 45.9239, 0.4068", "456.576, 410.4, 45.8245, 0.4576", "457.375, 411.216, 45.7246, 0.5338", "458.121, 412.054, 45.5834, 0.6102", "458.919, 412.816, 45.3995, 0.6356", "459.893, 413.391, 45.2138, 0.6356", "460.746, 414.142, 45.0349, 0.5848", "461.392, 415.078, 44.8972, 0.5848", "462.002, 416.043, 44.798, 0.5848", "462.73, 416.907, 44.6944, 0.5848", "463.584, 417.656, 44.63, 0.5592", "464.599, 418.163, 44.5925, 0.5338", "465.599, 418.706, 44.5746, 0.5592", "466.467, 419.448, 44.5701, 0.5338", "467.428, 420.062, 44.5796, 0.5084", "468.546, 420.2, 44.6032, 0.483", "469.521, 420.701, 44.6348, 0.5084", "470.286, 421.55, 44.6824, 0.5338", "471.19, 422.19, 44.7502, 0.5338", "472.16, 422.776, 44.8409, 0.5592", "472.98, 423.569, 44.9543, 0.5592", "473.717, 424.437, 45.0898, 0.5084", "473.908, 425.312, 45.4871, 0.3304", "474.189, 426.409, 45.8245, 0.305", "474.977, 426.956, 46.1084, 0.3304", "475.217, 428.047, 46.3481, 0.3304", "475.426, 429.156, 46.5573, 0.3304", "475.561, 430.233, 46.8177, 0.305", "475.561, 431.377, 47.0406, 0.305", "475.561, 432.521, 47.2772, 0.305", "475.561, 433.607, 47.6395, 0.2796", "475.561, 434.714, 48.069, 0.2542", "475.375, 435.809, 48.4473, 0.2288", "475.217, 436.562, 49.0087, 0.2288", "475.217, 437.641, 49.5138, 0.2542", "475.226, 438.785, 49.9055, 0.3304", "475.658, 439.815, 50.1964, 0.4322", "476.053, 440.872, 50.4577, 0.5338", "476.447, 441.936, 50.6926, 0.5338", "477.013, 442.889, 50.9163, 0.5084", "477.303, 443.956, 51.1459, 0.4322", "477.704, 445.002, 51.3811, 0.4322", "478.108, 446.059, 51.6116, 0.4322", "478.43, 447.142, 51.8266, 0.4322", "478.557, 448.276, 51.9865, 0.4068", "479.04, 449.23, 52.1044, 0.4068", "479.246, 450.355, 52.1954, 0.4322", "479.721, 451.385, 52.2757, 0.4322", "480.046, 452.47, 52.3866, 0.3814", "480.587, 453.475, 52.4922, 0.3304", "481.125, 454.472, 52.6372, 0.305", "481.281, 455.596, 52.7792, 0.2796", "481.479, 456.702, 52.9256, 0.2542", "481.51, 457.794, 53.1672, 0.2288", "481.51, 458.931, 53.3963, 0.2288", "481.51, 460.074, 53.5735, 0.2288", "481.51, 461.219, 53.7043, 0.2288", "481.478, 462.362, 53.8009, 0.2288", "480.971, 463.376, 53.872, 0.2288", "480.716, 464.479, 53.9258, 0.2288", "480.47, 465.591, 53.9851, 0.2288", "480.135, 466.641, 54.0966, 0.2288", "479.608, 467.656, 54.2049, 0.2288", "479.346, 468.618, 54.4186, 0.2288", "479.495, 469.738, 54.6014, 0.2288", "479.984, 470.635, 54.7422, 0.2288", "480.697, 471.435, 54.8458, 0.2288", "481.036, 472.527, 54.9175, 0.2542", "481.299, 473.635, 54.9688, 0.305", "481.902, 474.584, 55.0026, 0.4068", "482.654, 475.316, 55.0494, 0.483", "483.221, 476.245, 55.1471, 0.5084", "484.2, 476.818, 55.2479, 0.4322", "484.653, 477.769, 55.3258, 0.3304", "484.984, 478.829, 55.3818, 0.2542", "485.951, 479.434, 55.4179, 0.2288", "486.936, 479.993, 55.4361, 0.2288", "487.996, 480.338, 55.44, 0.2288", "488.536, 481.248, 55.44, 0.2288", "489.289, 482.082, 55.44, 0.2542" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500039831116067,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "398.789, 370.265, 45.306, 0.3814", "399.311, 369.247, 45.421, 0.3814", "399.806, 368.216, 45.4712, 0.4068", "400.281, 367.177, 45.5448, 0.4322", "400.756, 366.138, 45.6347, 0.4576", "401.229, 365.098, 45.7332, 0.4576", "401.622, 364.03, 45.8262, 0.483", "401.904, 362.921, 45.899, 0.5084", "401.704, 361.808, 45.9553, 0.5338", "401.446, 360.694, 46.0009, 0.5592", "401.196, 359.578, 46.0443, 0.5338", "400.947, 358.461, 46.0911, 0.483" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500039831116067
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "391.232, 380.269, 44.1728, 0.3814", "390.182, 380.549, 43.3586, 0.5084", "389.243, 381.165, 43.0486, 0.6102", "388.267, 381.754, 42.7342, 0.661", "387.234, 382.073, 42.331, 0.6864", "386.161, 382.239, 41.8653, 0.6356", "385.086, 382.574, 41.5164, 0.5592", "384.022, 382.938, 41.3123, 0.4576", "382.928, 383.24, 41.0911, 0.4068", "381.836, 383.136, 40.7784, 0.3814", "380.924, 382.472, 40.4684, 0.4322", "380.034, 381.816, 40.075, 0.483", "379.046, 381.475, 39.5466, 0.5338", "377.92, 381.339, 39.0508, 0.5084", "376.898, 381.84, 38.6495, 0.483", "376.007, 382.555, 38.3298, 0.5084", "375.159, 383.305, 38.0369, 0.5848", "374.358, 383.725, 37.6012, 0.6356" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500039831116067
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "395.775, 370.217, 46.8588, 0.4068", "395.066, 369.353, 47.301, 0.4068", "394.866, 368.273, 47.4079, 0.4576", "395.154, 367.263, 47.6395, 0.483", "395.615, 366.242, 47.9186, 0.5338", "396.393, 365.473, 48.071, 0.5338", "397.463, 365.11, 48.2121, 0.5084", "398.525, 364.711, 48.4072, 0.5084", "399.396, 364.028, 48.6948, 0.483", "399.755, 362.966, 49.0, 0.5084", "399.413, 362.079, 49.4827, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500039831116067
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "390.202, 379.35, 46.2563, 0.3304", "389.095, 379.373, 46.6393, 0.4068", "387.962, 379.487, 46.9798, 0.4322" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500039831116067
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "401.879, 374.297, 43.5772, 0.5592", "402.808, 373.777, 44.2534, 0.483", "403.845, 373.545, 44.5956, 0.4322", "404.903, 373.816, 44.844, 0.4322", "405.874, 374.4, 44.9744, 0.4576", "406.924, 374.816, 45.0117, 0.483", "408.019, 375.134, 45.0293, 0.5338", "409.128, 375.193, 44.9344, 0.5592", "410.229, 374.936, 44.8252, 0.5338", "411.079, 374.198, 44.7555, 0.5084", "412.04, 373.641, 44.8034, 0.5592", "413.142, 373.42, 44.8104, 0.7118", "414.27, 373.395, 44.8689, 0.8644", "415.409, 373.35, 44.94, 0.966", "416.514, 373.066, 44.9669, 0.9406", "417.462, 372.46, 44.9025, 0.8898", "418.363, 371.785, 44.7639, 0.839", "419.215, 371.024, 44.651, 0.839", "420.148, 370.363, 44.5735, 0.8136", "420.995, 369.634, 44.6012, 0.788", "421.835, 368.875, 44.681, 0.7626", "422.806, 368.274, 44.7222, 0.7118", "423.9, 368.01, 44.6552, 0.5848", "424.996, 368.235, 44.4749, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500039831116067
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "407.392, 403.779, 45.36, 1.0", "413.233, 417.595, 45.36, 1.0", "419.075, 431.411, 45.36, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "400.947, 358.461, 46.0911, 0.483", "401.353, 357.827, 45.4916, 0.3304", "401.979, 356.913, 44.7451, 0.3814", "402.605, 355.999, 44.3974, 0.4322", "402.457, 354.884, 44.0712, 0.483", "402.18, 353.788, 43.7665, 0.4576", "401.581, 352.813, 43.4798, 0.4322", "400.995, 351.891, 43.1376, 0.3304", "400.43, 351.056, 42.6488, 0.3304", "399.875, 350.231, 42.0563, 0.3304" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "400.947, 358.461, 46.0911, 0.483", "401.353, 357.796, 46.1636, 0.356", "401.949, 356.822, 46.263, 0.5084", "402.544, 355.848, 46.3798, 0.661", "403.161, 355.008, 46.5578, 0.661", "403.862, 354.185, 46.695, 0.5848", "404.299, 353.177, 46.7197, 0.483", "404.395, 352.059, 46.6894, 0.4576", "404.35, 350.938, 46.7312, 0.4322", "404.258, 349.808, 46.8404, 0.356", "404.693, 348.855, 47.054, 0.3304", "405.34, 347.927, 47.3071, 0.356", "405.327, 346.853, 47.5462, 0.483", "404.775, 345.868, 47.7534, 0.5592", "404.095, 344.956, 47.9562, 0.5848", "403.424, 344.065, 48.2017, 0.5338", "402.732, 343.162, 48.4145, 0.4576", "402.526, 342.067, 48.5688, 0.4068", "402.559, 340.951, 48.6265, 0.4068", "402.535, 339.841, 48.7715, 0.4322", "402.316, 338.738, 48.9773, 0.483", "402.199, 337.642, 49.266, 0.5084", "402.445, 336.536, 49.5396, 0.5592", "402.392, 335.399, 49.7834, 0.5848", "401.967, 334.343, 49.987, 0.5592", "401.697, 333.269, 50.0828, 0.4576", "401.846, 332.181, 50.3154, 0.3304" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "374.358, 383.725, 37.6012, 0.6356", "374.098, 382.817, 35.488, 0.3304", "373.394, 382.438, 34.7791, 0.2796", "372.292, 382.748, 34.515, 0.2796", "371.877, 382.225, 34.2331, 0.2796", "371.284, 381.278, 33.9251, 0.305", "370.506, 380.767, 33.5115, 0.2796", "369.544, 380.975, 32.886, 0.2542", "369.57, 380.475, 32.1773, 0.2288", "370.182, 379.554, 31.4457, 0.2288", "370.743, 378.631, 30.7182, 0.2542", "370.18, 377.658, 30.0446, 0.2796", "369.615, 376.686, 29.433, 0.305", "369.049, 375.714, 28.8716, 0.305", "368.486, 374.74, 28.3444, 0.305", "367.984, 373.75, 27.8387, 0.3304", "367.749, 372.685, 27.3214, 0.3814", "367.515, 371.62, 26.8096, 0.483", "366.564, 370.986, 26.0663, 0.5338" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "374.358, 383.725, 37.6012, 0.6356", "373.344, 383.248, 37.1879, 0.4322", "372.252, 383.011, 37.0098, 0.356", "371.221, 383.012, 37.135, 0.305", "370.13, 383.02, 37.4338, 0.305", "369.084, 383.084, 37.8815, 0.356", "368.036, 383.271, 38.2976, 0.3814", "366.93, 383.229, 38.5389, 0.4322", "365.868, 383.388, 38.705, 0.3814", "364.862, 383.875, 38.733, 0.4068", "363.849, 384.381, 38.6151, 0.3814", "362.792, 384.805, 38.4322, 0.4322", "361.716, 385.184, 38.2169, 0.3814", "360.655, 385.517, 37.9187, 0.3814", "359.746, 386.149, 37.5984, 0.356", "359.068, 387.059, 37.298, 0.3814", "358.578, 388.062, 36.9572, 0.3814", "357.764, 388.778, 36.6792, 0.3814", "356.69, 388.714, 36.3756, 0.4068", "355.584, 388.895, 36.0318, 0.4322", "354.615, 389.466, 35.6412, 0.4576", "353.765, 390.137, 35.1392, 0.4322", "352.819, 390.681, 34.5612, 0.4068", "351.682, 390.686, 34.0365, 0.3814", "350.631, 390.244, 33.57, 0.3814", "349.523, 389.98, 33.1299, 0.356", "349.338, 390.315, 32.3652, 0.305", "348.574, 390.447, 31.619, 0.2542", "347.878, 391.233, 31.0598, 0.2288", "347.094, 391.969, 30.6544, 0.2288", "346.388, 392.757, 30.3878, 0.2288", "345.902, 393.698, 30.2453, 0.2288", "345.488, 394.757, 30.2067, 0.2288", "345.101, 395.595, 30.1935, 0.2542", "343.965, 395.71, 30.1748, 0.2796", "342.825, 395.771, 30.1476, 0.305", "341.704, 395.988, 30.1106, 0.305", "340.564, 396.053, 30.0642, 0.305", "339.42, 396.064, 30.0073, 0.305", "338.355, 396.271, 29.8651, 0.2796", "337.234, 396.396, 29.7097, 0.2542", "336.1, 396.51, 29.5803, 0.2542", "334.956, 396.51, 29.4826, 0.305", "333.812, 396.51, 29.4132, 0.356", "332.668, 396.51, 29.3672, 0.356", "331.523, 396.513, 29.3401, 0.305", "330.431, 396.736, 29.3152, 0.2542", "329.657, 397.566, 29.2858, 0.2288", "328.74, 398.22, 29.2524, 0.2288", "327.712, 398.595, 29.1407, 0.2288", "326.583, 398.684, 29.0497, 0.2288", "325.439, 398.684, 28.985, 0.2288", "324.295, 398.684, 28.9464, 0.2288", "323.151, 398.676, 28.933, 0.2288", "322.015, 398.57, 28.9436, 0.2288", "320.871, 398.57, 28.9904, 0.2288", "319.727, 398.57, 29.0545, 0.2288", "318.583, 398.57, 29.1306, 0.2542", "317.449, 398.686, 29.216, 0.2796", "316.337, 398.884, 29.3068, 0.305", "315.973, 399.714, 29.96, 0.2796" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "399.413, 362.079, 49.4827, 0.4576", "399.954, 360.506, 49.7818, 0.483", "400.297, 359.436, 49.9582, 0.4068", "400.73, 358.382, 50.1166, 0.356", "401.164, 357.328, 50.26, 0.356", "401.598, 356.275, 50.3975, 0.4068", "402.031, 355.221, 50.5313, 0.5338", "402.48, 354.172, 50.6705, 0.6356", "402.944, 353.126, 50.7755, 0.661", "403.224, 352.042, 50.8407, 0.6102", "403.229, 350.898, 50.8766, 0.5338", "403.234, 349.754, 50.8931, 0.5084", "403.372, 348.619, 50.8987, 0.5084", "403.522, 347.484, 50.9015, 0.5084", "403.67, 346.349, 50.9057, 0.4322", "403.767, 345.21, 50.911, 0.3814", "403.858, 344.069, 50.9188, 0.356", "403.954, 342.93, 50.9295, 0.4322", "404.118, 341.797, 50.9449, 0.4576", "404.283, 340.666, 50.9662, 0.483", "404.446, 339.534, 50.9942, 0.4068", "404.63, 338.405, 51.0348, 0.356", "404.868, 337.288, 51.0997, 0.305", "405.105, 336.17, 51.1832, 0.305", "405.342, 335.052, 51.2786, 0.2796", "405.581, 333.935, 51.3808, 0.2542", "406.115, 332.962, 51.4744, 0.2796", "406.858, 332.093, 51.5533, 0.3304", "407.602, 331.222, 51.6256, 0.4322", "408.326, 330.337, 51.6989, 0.4576", "409.047, 329.449, 51.7782, 0.5338", "409.769, 328.562, 51.8666, 0.5084", "410.254, 327.866, 52.045, 0.483", "410.695, 327.362, 52.3275, 0.356", "411.411, 326.629, 52.5501, 0.2796", "411.553, 325.502, 52.7162, 0.305", "412.26, 324.631, 52.8298, 0.3814", "412.811, 323.658, 52.8956, 0.4576", "413.323, 322.657, 52.9192, 0.3814", "413.785, 321.656, 52.9189, 0.3304", "413.785, 320.512, 52.9186, 0.305", "413.785, 319.368, 52.9178, 0.356", "413.793, 318.224, 52.9169, 0.356", "414.107, 317.138, 52.9158, 0.305", "414.242, 316.019, 52.9141, 0.2796", "414.242, 314.875, 52.9119, 0.356", "414.242, 313.731, 52.9085, 0.4576", "414.242, 312.587, 52.904, 0.5338", "414.242, 311.443, 52.8976, 0.4576", "414.268, 310.303, 52.8886, 0.3814", "414.801, 309.299, 52.876, 0.2796", "415.576, 308.461, 52.8587, 0.2542", "416.13, 307.467, 52.8343, 0.2288", "416.448, 306.369, 52.8002, 0.2288", "416.802, 305.29, 52.7523, 0.2288", "417.29, 304.312, 52.6842, 0.2288", "417.674, 303.439, 52.5918, 0.2542", "418.104, 302.385, 52.4672, 0.2796", "418.505, 301.325, 52.2752, 0.3304", "418.98, 300.309, 52.0206, 0.3304", "419.047, 299.291, 51.6222, 0.3304", "419.156, 298.158, 51.2478, 0.2796", "419.665, 297.262, 50.8253, 0.2796", "420.18, 296.268, 50.3997, 0.2796", "420.825, 295.357, 50.0581, 0.305", "421.37, 294.381, 49.7364, 0.3304", "421.564, 293.389, 49.3651, 0.3814", "422.031, 292.451, 49.0619, 0.4322", "422.905, 291.944, 48.8149, 0.4322", "423.935, 291.501, 48.6013, 0.4068", "424.851, 290.986, 48.2913, 0.3814", "425.95, 290.919, 47.9349, 0.356", "427.053, 290.69, 47.6286, 0.305", "427.96, 290.153, 47.3668, 0.2542", "428.754, 289.359, 47.1285, 0.2288", "429.535, 288.528, 46.9465, 0.2288", "430.312, 287.701, 46.8126, 0.2288", "430.984, 286.818, 46.6334, 0.2288", "431.652, 285.92, 46.4285, 0.2288", "432.362, 285.03, 46.2613, 0.2288", "433.077, 284.177, 46.1014, 0.2288", "433.816, 283.349, 45.9242, 0.2288", "434.19, 282.29, 45.7985, 0.2288", "434.892, 281.401, 45.7198, 0.2288", "435.583, 280.567, 45.6716, 0.2288", "436.322, 279.726, 45.642, 0.2288", "436.828, 278.705, 45.6282, 0.2288", "437.438, 277.776, 45.6235, 0.2288", "438.167, 276.943, 45.617, 0.2288", "438.902, 276.071, 45.6078, 0.2288", "439.67, 275.237, 45.5952, 0.2288", "440.336, 274.331, 45.5776, 0.2288", "440.725, 273.26, 45.5521, 0.2288", "441.471, 272.404, 45.516, 0.2288", "441.81, 271.312, 45.4681, 0.2288", "442.145, 270.252, 45.4079, 0.2288", "442.656, 269.311, 45.3107, 0.2288", "442.876, 268.211, 45.1352, 0.2288", "443.118, 267.101, 44.9588, 0.2288", "443.548, 266.043, 44.8106, 0.2288", "443.983, 265.002, 44.6502, 0.2542", "444.101, 263.868, 44.5292, 0.2796", "444.148, 262.757, 44.3744, 0.305", "444.288, 261.624, 44.2641, 0.305", "444.329, 260.489, 44.24, 0.305" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "399.413, 362.079, 49.4827, 0.4576", "398.999, 361.179, 50.9368, 0.305", "398.441, 360.181, 51.7009, 0.2796", "398.758, 359.168, 52.0419, 0.2542", "398.312, 358.236, 52.5316, 0.305", "397.41, 357.694, 53.1196, 0.4322", "396.348, 357.279, 53.6368, 0.5848", "395.404, 356.728, 53.9487, 0.6356", "394.792, 355.766, 54.224, 0.6102", "394.196, 354.858, 54.5927, 0.5592", "393.355, 354.112, 54.9965, 0.5592", "392.583, 353.313, 55.4663, 0.5848", "391.831, 352.463, 55.9544, 0.6102", "391.22, 351.544, 56.5239, 0.5848", "390.607, 350.62, 57.1197, 0.5848", "390.009, 349.685, 57.715, 0.5848", "389.203, 348.915, 58.3122, 0.5848", "388.523, 348.013, 58.8857, 0.5084", "387.837, 347.108, 59.4115, 0.4068", "387.148, 346.274, 59.9928, 0.305", "386.63, 345.439, 60.6575, 0.2542", "386.43, 344.322, 61.2587, 0.2796", "385.988, 343.309, 61.8618, 0.3304", "385.344, 342.389, 62.454, 0.3814", "384.759, 341.443, 63.0426, 0.3304", "384.101, 340.607, 63.6989, 0.305", "383.327, 339.861, 64.3737, 0.2796", "382.436, 339.205, 65.0342, 0.305", "381.604, 338.507, 65.6883, 0.305", "380.806, 337.992, 66.3978, 0.305", "380.403, 337.021, 66.9525, 0.305", "380.38, 335.878, 67.3277, 0.2796", "380.38, 334.734, 67.5646, 0.2542", "380.38, 333.59, 67.6973, 0.2288", "380.38, 332.446, 67.7524, 0.2542", "380.38, 331.302, 67.76, 0.2796", "380.38, 330.158, 67.76, 0.305", "380.38, 329.014, 67.76, 0.2796", "380.38, 327.87, 67.76, 0.2542", "380.38, 326.726, 67.76, 0.2288", "380.38, 325.582, 67.76, 0.2288", "380.38, 324.438, 67.76, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "387.962, 379.487, 46.9798, 0.4322", "387.516, 378.974, 46.389, 0.2288", "386.904, 378.392, 45.4406, 0.2542", "385.76, 378.336, 45.1114, 0.3304", "384.622, 378.251, 44.8389, 0.4322", "383.52, 377.958, 44.6169, 0.483", "382.501, 377.438, 44.4391, 0.4322", "381.543, 376.846, 44.2725, 0.356", "380.725, 376.09, 44.058, 0.3304", "380.122, 375.201, 43.813, 0.356", "379.89, 374.08, 43.6122, 0.4068", "379.599, 372.979, 43.4482, 0.4576", "379.131, 371.937, 43.3132, 0.5338", "378.745, 370.86, 43.1995, 0.5592", "378.359, 369.783, 43.0968, 0.5084", "377.542, 369.164, 42.9433, 0.4068", "376.469, 368.818, 42.7179, 0.356", "375.394, 368.47, 42.4407, 0.3814", "374.743, 367.56, 42.1632, 0.5084", "374.509, 366.447, 41.9185, 0.6102", "373.756, 365.601, 41.6968, 0.6864", "372.906, 364.835, 41.4803, 0.6102", "372.014, 364.154, 41.1998, 0.5084", "371.125, 363.461, 40.8677, 0.4068", "370.283, 362.693, 40.5336, 0.4322", "369.401, 362.027, 40.1282, 0.483", "368.756, 361.1, 39.7253, 0.5084", "368.548, 360.026, 39.2899, 0.4576", "367.634, 359.356, 38.9572, 0.4068", "366.495, 359.276, 38.712, 0.4068", "365.383, 359.508, 38.5034, 0.4068", "364.292, 359.488, 38.2939, 0.4068", "363.445, 358.794, 38.2486, 0.3814", "362.947, 357.773, 38.2609, 0.4068", "362.298, 356.831, 38.253, 0.4576", "361.622, 355.909, 38.2172, 0.5084", "360.967, 354.978, 38.1293, 0.5338", "360.463, 353.986, 37.9389, 0.5084", "360.233, 352.871, 37.6936, 0.483", "359.614, 351.93, 37.4595, 0.4322", "358.909, 351.028, 37.242, 0.3814", "357.986, 350.443, 36.9552, 0.356", "356.871, 350.431, 36.6699, 0.3814", "355.825, 350.881, 36.4386, 0.4322", "354.743, 351.253, 36.2443, 0.4322", "353.661, 350.932, 36.0595, 0.4068", "352.997, 350.066, 35.793, 0.4068", "353.115, 348.93, 35.5667, 0.4576", "353.089, 347.787, 35.3884, 0.5338", "352.788, 346.684, 35.2408, 0.5848", "352.513, 345.574, 35.1168, 0.5848", "351.908, 344.603, 35.0081, 0.5084", "351.24, 343.677, 34.9009, 0.4322", "350.355, 342.962, 34.7379, 0.356", "349.29, 342.677, 34.4786, 0.356", "348.23, 342.262, 34.2286, 0.356", "347.513, 341.391, 33.9987, 0.4068", "347.083, 340.348, 33.7744, 0.4322", "346.657, 339.322, 33.5062, 0.4576", "345.948, 338.468, 33.2063, 0.4322", "345.368, 337.55, 32.8896, 0.4068", "344.911, 336.526, 32.5662, 0.3814", "344.1, 335.745, 32.3165, 0.4068", "343.017, 335.453, 32.1493, 0.4068", "341.876, 335.412, 32.0628, 0.4068", "340.752, 335.358, 32.0886, 0.3814", "339.695, 335.004, 32.0662, 0.4068", "338.986, 334.139, 32.0284, 0.4322", "338.153, 333.387, 31.9844, 0.4322", "337.146, 332.854, 31.9248, 0.3814", "336.068, 332.488, 31.8744, 0.3304", "335.0, 332.093, 31.8598, 0.356", "334.241, 331.308, 31.873, 0.4576", "333.708, 330.297, 31.8914, 0.5848", "333.026, 329.391, 31.9102, 0.6356", "332.16, 328.651, 31.9284, 0.6102", "331.396, 327.813, 31.9427, 0.5084", "330.698, 326.907, 31.9542, 0.4322", "330.033, 325.978, 31.9676, 0.3814", "329.4, 325.024, 31.9864, 0.4068", "328.885, 324.007, 32.0132, 0.4068", "328.588, 322.909, 32.0516, 0.4068", "327.834, 322.185, 32.1034, 0.3814", "326.779, 321.747, 32.1706, 0.4068", "325.754, 321.243, 32.263, 0.4322", "324.872, 320.574, 32.4461, 0.483", "324.131, 319.724, 32.6542, 0.5338", "323.32, 318.922, 32.8289, 0.6102", "322.447, 318.183, 32.9647, 0.6102", "321.863, 317.217, 33.0666, 0.5338", "321.284, 316.231, 33.1436, 0.4322", "320.396, 315.527, 33.2038, 0.3814", "319.336, 315.106, 33.2671, 0.4576", "318.303, 314.611, 33.3483, 0.5338", "317.604, 313.733, 33.4919, 0.6356", "316.875, 312.89, 33.7148, 0.661", "316.045, 312.105, 33.903, 0.661", "315.118, 311.433, 34.0505, 0.6356", "314.099, 310.918, 34.1628, 0.6356", "313.288, 310.113, 34.2462, 0.6864", "312.678, 309.147, 34.3106, 0.788", "312.348, 308.052, 34.3734, 0.8136", "311.629, 307.163, 34.4571, 0.8136", "310.829, 306.345, 34.5694, 0.7626", "310.055, 305.506, 34.7301, 0.7118", "309.402, 304.617, 35.0067, 0.6102" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "387.962, 379.487, 46.9798, 0.4322", "387.132, 379.855, 47.2318, 0.4322", "386.098, 380.342, 47.4009, 0.4576", "385.029, 380.702, 47.4494, 0.5848", "383.934, 380.985, 47.4079, 0.6864", "382.837, 381.151, 47.4701, 0.7372", "381.711, 381.142, 47.616, 0.6356", "380.615, 380.953, 47.8624, 0.483" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "424.996, 368.235, 44.4749, 0.2288", "425.552, 368.835, 42.5928, 0.2796", "426.171, 369.557, 42.9912, 0.2542", "427.194, 369.756, 43.2365, 0.305", "428.298, 369.894, 43.3768, 0.356", "429.247, 370.468, 43.4487, 0.4068", "430.29, 370.854, 43.5268, 0.4322", "431.342, 370.534, 43.5266, 0.5338", "432.322, 369.963, 43.3966, 0.6102", "433.359, 369.576, 43.1225, 0.7118", "434.46, 369.371, 42.7792, 0.6864", "435.566, 369.584, 42.4304, 0.6356", "436.596, 369.716, 41.9667, 0.5338", "437.717, 369.677, 41.5537, 0.4576", "438.818, 369.377, 41.2541, 0.4322", "439.924, 369.088, 41.0575, 0.4322", "440.941, 369.545, 40.9405, 0.483", "441.976, 370.034, 40.8884, 0.5084", "443.099, 370.236, 40.8904, 0.5338", "444.16, 370.481, 40.7865, 0.5338", "445.264, 370.639, 40.7996, 0.483", "446.397, 370.751, 40.847, 0.4322", "447.449, 371.165, 40.8948, 0.4068", "448.443, 371.719, 40.9139, 0.4322", "449.28, 372.075, 41.0578, 0.483", "450.355, 372.327, 41.2188, 0.4576", "451.499, 372.356, 41.3246, 0.4322", "452.613, 372.141, 41.3902, 0.3304", "453.716, 371.838, 41.4198, 0.2796", "454.819, 371.533, 41.414, 0.2288", "455.957, 371.506, 41.3473, 0.2542", "457.099, 371.512, 41.246, 0.305", "458.241, 371.517, 41.1233, 0.356", "459.381, 371.488, 40.9909, 0.4068", "460.517, 371.35, 40.8699, 0.4068", "461.652, 371.212, 40.7574, 0.4576", "462.786, 371.092, 40.616, 0.4576", "463.921, 370.973, 40.4454, 0.483", "465.042, 370.991, 40.2556, 0.4068", "466.132, 371.336, 40.0646, 0.3304", "467.223, 371.68, 39.8636, 0.2542", "468.197, 372.226, 39.5976, 0.2542", "469.105, 372.883, 39.2518, 0.2796", "470.079, 373.376, 38.831, 0.305", "471.156, 373.621, 38.3365, 0.2796", "472.053, 374.259, 37.8658, 0.2542", "473.014, 374.24, 37.443, 0.2288", "474.086, 374.482, 36.9835, 0.2796", "475.161, 374.804, 36.4843, 0.3304", "476.238, 375.127, 35.952, 0.3814", "477.227, 375.486, 35.3374, 0.3304", "478.082, 375.9, 34.5806, 0.2796", "478.936, 376.318, 33.7523, 0.2288", "479.082, 377.453, 33.14, 0.2288", "479.495, 378.478, 32.716, 0.2288", "480.187, 379.389, 32.4512, 0.2288", "480.879, 380.3, 32.3162, 0.2288", "481.487, 381.247, 32.2734, 0.2288", "481.656, 382.379, 32.2736, 0.2288", "481.879, 383.499, 32.2742, 0.2288", "482.151, 384.609, 32.2745, 0.2288", "481.982, 385.712, 32.275, 0.2288", "481.668, 386.813, 32.2767, 0.2288", "481.351, 387.912, 32.2801, 0.2288", "481.01, 389.004, 32.277, 0.2288", "480.669, 390.094, 32.2762, 0.2288", "480.327, 391.185, 32.2871, 0.2288", "479.986, 392.276, 32.3224, 0.2288", "479.645, 393.368, 32.398, 0.2542", "479.303, 394.459, 32.5612, 0.305", "478.935, 395.539, 32.7992, 0.356", "478.372, 396.536, 33.1066, 0.356", "477.538, 396.958, 33.6361, 0.305", "477.395, 397.468, 34.3972, 0.2796", "477.812, 398.167, 36.6173, 0.3304" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "424.996, 368.235, 44.4749, 0.2288", "426.117, 367.862, 44.2884, 0.3814", "427.18, 367.466, 44.0964, 0.356", "428.316, 367.361, 43.9048, 0.3814", "429.352, 366.972, 43.6901, 0.4322", "430.091, 366.139, 43.4059, 0.5084", "430.927, 365.372, 43.1228, 0.5338", "431.915, 364.8, 42.8565, 0.5084", "432.956, 364.351, 42.5751, 0.483", "434.026, 364.102, 42.2131, 0.4322", "435.104, 364.126, 41.7861, 0.4576", "436.237, 364.249, 41.4554, 0.483", "437.362, 364.244, 41.246, 0.5084", "438.457, 364.205, 40.9419, 0.4322", "439.483, 363.902, 40.5521, 0.3814", "440.605, 363.727, 40.2097, 0.3814", "441.71, 363.427, 39.9412, 0.4322", "442.842, 363.265, 39.7183, 0.4068" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "399.875, 350.231, 42.0563, 0.3304", "399.41, 351.262, 40.8769, 0.4322", "398.792, 352.202, 39.6511, 0.5338", "397.788, 352.685, 39.1373, 0.5592", "396.698, 352.893, 38.5104, 0.5592", "395.868, 353.415, 37.697, 0.483", "395.6, 353.788, 36.5924, 0.4068", "395.443, 354.378, 35.5029, 0.305", "395.021, 355.401, 34.6489, 0.2542", "395.866, 355.18, 33.9307, 0.2542", "396.75, 354.522, 33.2923, 0.2796", "397.747, 354.164, 32.8378, 0.305", "398.803, 354.536, 32.4736, 0.2796", "399.805, 355.052, 32.1048, 0.2542", "400.807, 355.568, 31.7181, 0.2288", "401.808, 356.083, 31.3337, 0.2288", "402.81, 356.599, 30.9588, 0.2288", "403.811, 357.115, 30.5936, 0.2288", "404.829, 357.604, 30.2725, 0.2288", "405.898, 358.009, 30.0527, 0.2796", "406.969, 358.413, 29.9135, 0.3814", "408.04, 358.818, 29.8354, 0.5084", "408.588, 359.807, 29.7903, 0.5338" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "399.875, 350.231, 42.0563, 0.3304", "400.642, 349.855, 41.5979, 0.5084", "401.76, 349.988, 41.2597, 0.4322", "402.258, 351.016, 41.029, 0.4576", "403.04, 351.709, 40.9273, 0.4322", "404.034, 351.238, 40.9576, 0.4576", "404.984, 350.628, 40.9063, 0.3814", "405.964, 350.205, 40.6725, 0.3814", "407.049, 350.108, 40.3357, 0.3304", "408.168, 350.294, 40.0282, 0.3814", "409.216, 350.661, 39.7471, 0.3814", "410.302, 350.395, 39.464, 0.4068", "411.301, 349.887, 39.2392, 0.3814", "412.376, 349.689, 39.1462, 0.4068", "413.457, 349.883, 38.9931, 0.5084", "414.497, 349.954, 38.7654, 0.6102", "415.574, 349.7, 38.675, 0.661", "416.592, 349.347, 38.7495, 0.6102", "417.612, 348.843, 38.8133, 0.5338", "418.479, 348.141, 38.8937, 0.5338", "419.364, 347.495, 39.0396, 0.5338", "420.43, 347.091, 39.146, 0.5848", "421.487, 346.676, 39.1384, 0.5338", "422.516, 346.224, 39.0006, 0.5592", "423.6, 345.939, 38.8041, 0.5338", "424.708, 345.671, 38.6064, 0.6356", "425.765, 345.239, 38.4132, 0.6356", "426.81, 344.797, 38.2094, 0.6356", "427.818, 344.573, 37.9022, 0.5592", "428.859, 344.441, 37.6253, 0.5592", "429.913, 344.06, 37.485, 0.6356", "430.948, 343.58, 37.3976, 0.661", "432.043, 343.271, 37.3349, 0.661", "433.18, 343.199, 37.2893, 0.6102", "434.324, 343.193, 37.2495, 0.6102", "435.465, 343.148, 37.1708, 0.5848", "436.496, 342.805, 36.9832, 0.5338", "437.459, 342.22, 36.7875, 0.4576", "438.457, 341.666, 36.6366, 0.4322", "439.547, 341.374, 36.5604, 0.4322", "440.635, 341.041, 36.5011, 0.483", "441.664, 340.559, 36.4146, 0.5084", "442.56, 339.857, 36.3378, 0.5338", "443.465, 339.158, 36.2594, 0.5084", "444.423, 338.539, 36.1528, 0.4322", "445.48, 338.221, 35.9556, 0.3304", "446.596, 338.249, 35.8252, 0.2796", "447.655, 338.519, 35.8123, 0.2796", "448.745, 338.297, 35.7207, 0.305", "449.819, 337.981, 35.5026, 0.3304", "450.717, 338.574, 35.1767, 0.3814", "451.753, 338.939, 34.7614, 0.4576", "452.814, 338.547, 34.3101, 0.4576", "453.854, 338.2, 33.8296, 0.4068", "454.995, 338.166, 33.4323, 0.305", "456.139, 338.142, 33.1022, 0.2542", "456.734, 338.181, 32.6575, 0.2288", "457.448, 338.145, 32.1672, 0.2288", "458.422, 337.552, 31.7626, 0.2288", "459.146, 336.698, 31.3874, 0.2288", "459.673, 335.777, 31.003, 0.2288", "460.743, 335.421, 30.7003, 0.2542", "461.859, 335.421, 30.4352, 0.305", "462.53, 334.7, 30.0933, 0.356", "463.479, 334.165, 29.8158, 0.356", "464.622, 334.162, 29.5952, 0.3304", "465.614, 333.922, 29.3336, 0.305", "466.548, 333.476, 29.1175, 0.305", "467.573, 333.111, 28.9405, 0.2796", "468.659, 332.904, 28.7924, 0.2542", "469.786, 332.904, 28.6154, 0.2288", "470.734, 332.937, 28.2629, 0.2288", "471.314, 333.823, 27.9886, 0.2288", "472.256, 334.412, 27.7872, 0.2542", "473.384, 334.601, 27.6541, 0.305", "474.325, 335.223, 27.5836, 0.356", "475.2, 335.939, 27.6066, 0.356", "475.962, 336.771, 27.6661, 0.305", "476.974, 337.224, 27.7197, 0.2542", "478.105, 337.304, 27.7664, 0.2288", "479.216, 337.551, 27.8071, 0.2288", "480.293, 337.907, 27.8808, 0.2288", "481.082, 338.701, 27.9391, 0.2288", "481.992, 339.196, 27.9888, 0.2288", "483.135, 339.196, 28.0333, 0.2288", "484.275, 339.127, 28.0739, 0.2288", "485.342, 338.746, 28.112, 0.2288", "486.245, 338.047, 28.1476, 0.2288", "486.963, 337.239, 28.236, 0.2288", "487.798, 336.559, 28.3422, 0.2288", "488.924, 336.45, 28.4242, 0.2288", "490.069, 336.45, 28.4838, 0.2288", "491.213, 336.45, 28.5219, 0.2288", "492.357, 336.45, 28.5407, 0.2288", "493.501, 336.45, 28.5412, 0.2288", "494.643, 336.391, 28.5337, 0.2288", "495.743, 336.097, 28.5236, 0.2288", "496.745, 335.547, 28.509, 0.2288", "497.647, 334.963, 28.488, 0.2288", "498.777, 334.806, 28.4589, 0.2288", "499.81, 334.36, 28.4208, 0.2288", "500.853, 333.931, 28.373, 0.2288", "501.943, 333.622, 28.2808, 0.2288", "503.021, 333.281, 28.1487, 0.2288", "504.139, 333.055, 28.0288, 0.2288", "505.132, 332.589, 27.8962, 0.2288", "505.639, 331.585, 27.7924, 0.2288", "506.267, 330.798, 27.7145, 0.2288", "507.408, 330.73, 27.6594, 0.2288", "508.463, 330.989, 27.6174, 0.2288", "509.309, 331.715, 27.539, 0.2288", "510.354, 332.159, 27.476, 0.2288", "511.495, 332.218, 27.4215, 0.2288", "512.628, 332.17, 27.362, 0.2288", "513.664, 331.712, 27.2885, 0.2542", "514.593, 331.047, 27.2357, 0.3304", "515.648, 330.616, 27.202, 0.4068", "516.792, 330.616, 27.1788, 0.4322", "517.904, 330.829, 27.1652, 0.3814", "519.033, 330.959, 27.16, 0.3304" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "401.846, 332.181, 50.3154, 0.3304", "401.64, 331.115, 50.6545, 0.356", "401.743, 329.994, 51.2182, 0.356", "401.846, 328.871, 51.4674, 0.3814", "401.951, 327.75, 51.7546, 0.4068", "402.265, 326.765, 51.987, 0.3814", "401.859, 325.714, 52.2183, 0.305", "401.773, 324.592, 52.4045, 0.2542", "401.773, 323.448, 52.5238, 0.2288", "401.773, 322.304, 52.5949, 0.2288", "401.773, 321.16, 52.6355, 0.2288", "401.773, 320.016, 52.6616, 0.2288", "401.658, 318.881, 52.6758, 0.2542", "401.658, 317.737, 52.6898, 0.2796", "401.658, 316.593, 52.71, 0.356", "401.658, 315.449, 52.738, 0.3814", "401.32, 314.388, 52.7775, 0.4576", "400.406, 313.876, 52.8307, 0.4576", "400.036, 312.847, 52.9007, 0.483", "399.509, 311.85, 53.0284, 0.4322", "398.477, 311.399, 53.1633, 0.4322", "397.958, 310.552, 53.3837, 0.483", "397.383, 309.587, 53.5917, 0.5848", "396.712, 308.695, 53.851, 0.6102", "396.283, 307.663, 54.0725, 0.5338", "396.282, 306.687, 54.3718, 0.3814", "396.282, 305.543, 54.5978, 0.2796", "396.282, 304.399, 54.7579, 0.2542", "396.282, 303.255, 54.8724, 0.2796", "396.282, 302.111, 54.95, 0.305", "396.282, 300.967, 55.0116, 0.305", "396.282, 299.823, 55.0651, 0.305", "396.282, 298.679, 55.1356, 0.3304", "396.282, 297.535, 55.2258, 0.3304", "396.32, 296.414, 55.3851, 0.3304", "396.473, 295.317, 55.624, 0.2796", "396.828, 294.238, 55.8779, 0.2542", "397.376, 293.253, 56.1061, 0.2288", "397.9, 292.29, 56.3797, 0.2288", "398.07, 291.165, 56.6062, 0.2288", "398.435, 290.126, 56.8644, 0.2288", "398.586, 288.995, 57.0685, 0.2288", "398.684, 287.856, 57.2384, 0.2288", "398.684, 286.712, 57.3852, 0.2288", "398.684, 285.577, 57.5473, 0.2288", "398.684, 284.498, 57.815, 0.2288", "398.684, 283.356, 58.0384, 0.2288", "398.684, 282.212, 58.2308, 0.2288", "398.771, 281.072, 58.3996, 0.2288", "398.798, 279.929, 58.5581, 0.2288", "398.798, 278.785, 58.7241, 0.2288", "398.798, 277.641, 58.921, 0.2288", "398.798, 276.497, 59.1856, 0.2288", "398.798, 275.353, 59.5252, 0.2288", "398.505, 274.602, 60.1068, 0.2288", "398.242, 273.696, 60.9277, 0.2288", "397.979, 272.79, 61.9094, 0.2288", "397.716, 271.885, 62.9846, 0.2288", "396.799, 271.505, 63.9254, 0.2288", "395.674, 271.293, 64.6909, 0.2542", "394.688, 271.614, 65.3156, 0.2796", "393.803, 272.341, 65.858, 0.3304", "393.031, 272.957, 66.5529, 0.3304", "392.293, 273.542, 67.4436, 0.3304", "391.715, 273.072, 68.5149, 0.2796", "391.195, 272.266, 69.6592, 0.2796", "390.706, 271.319, 70.7529, 0.2796", "390.217, 270.372, 71.7643, 0.305", "390.771, 269.42, 72.583, 0.2796", "391.385, 268.467, 73.2432, 0.2542", "392.001, 267.515, 73.7954, 0.2288", "392.616, 266.563, 74.2924, 0.2288", "393.23, 265.611, 74.7776, 0.2288", "393.846, 264.659, 75.2763, 0.2288", "394.471, 263.708, 75.787, 0.2542", "394.642, 262.794, 76.3893, 0.2796", "394.301, 261.915, 77.1775, 0.305", "393.962, 261.038, 78.087, 0.2796", "394.207, 260.037, 78.9295, 0.2542", "394.654, 258.995, 79.6516, 0.2288", "395.101, 257.953, 80.2623, 0.2288", "395.547, 256.91, 80.7682, 0.2288", "395.993, 255.868, 81.1902, 0.2288", "396.441, 254.826, 81.5671, 0.2288", "396.887, 253.784, 81.9339, 0.2288", "397.333, 252.742, 82.299, 0.2288", "397.582, 251.661, 82.6602, 0.2288", "397.553, 250.526, 83.0155, 0.2288", "397.525, 249.391, 83.3661, 0.2288", "397.497, 248.256, 83.713, 0.2288", "397.469, 247.121, 84.0571, 0.2288", "397.441, 245.986, 84.3993, 0.2288", "397.413, 244.852, 84.7398, 0.2288", "397.384, 243.717, 85.078, 0.2288", "397.357, 242.582, 85.4132, 0.2288", "397.328, 241.446, 85.7506, 0.2288", "397.299, 240.311, 86.0812, 0.2288", "397.272, 239.176, 86.399, 0.2288", "397.243, 238.041, 86.6975, 0.2288", "397.216, 236.906, 86.973, 0.2288", "397.188, 235.771, 87.5087, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "401.846, 332.181, 50.3154, 0.3304", "402.132, 332.133, 50.6649, 0.2288", "403.088, 332.028, 51.2092, 0.2288", "404.053, 331.689, 51.7535, 0.2288", "404.602, 330.759, 52.3925, 0.2288", "405.292, 330.014, 53.0718, 0.2288", "406.099, 329.408, 53.7883, 0.2288", "406.59, 328.479, 54.497, 0.2288", "406.895, 327.383, 55.0833, 0.2796", "407.217, 326.367, 55.7091, 0.3304", "407.795, 325.51, 56.4208, 0.3814", "408.206, 324.533, 57.1698, 0.3814", "408.704, 323.559, 57.9116, 0.3814", "408.971, 322.476, 58.6132, 0.3814", "409.159, 321.352, 59.2452, 0.356", "409.655, 320.391, 59.8844, 0.356", "409.918, 319.326, 60.5111, 0.356", "410.217, 318.292, 61.1638, 0.3814", "410.855, 318.047, 61.9735, 0.356", "410.471, 317.076, 62.5999, 0.3304", "410.999, 316.061, 63.0722, 0.305", "411.831, 315.294, 63.4152, 0.3304", "412.449, 314.464, 63.6779, 0.356", "412.342, 313.331, 63.9218, 0.3814", "412.234, 312.2, 64.1693, 0.356", "412.127, 311.069, 64.4644, 0.3304", "412.02, 309.936, 64.7979, 0.2796", "411.913, 308.805, 65.1613, 0.2542", "411.758, 307.686, 65.5581, 0.2288", "411.496, 306.594, 66.0027, 0.2542", "411.234, 305.503, 66.4849, 0.2796", "410.973, 304.413, 66.9956, 0.305", "410.711, 303.321, 67.5256, 0.2796", "410.449, 302.231, 68.068, 0.2542", "410.522, 301.139, 68.6123, 0.2288", "410.788, 300.045, 69.1552, 0.2542", "411.052, 298.952, 69.7001, 0.305", "411.316, 297.859, 70.2509, 0.356", "411.582, 296.766, 70.8109, 0.356", "411.846, 295.674, 71.3826, 0.356", "412.383, 294.74, 71.9922, 0.356", "413.105, 293.917, 72.6466, 0.4068", "413.827, 293.092, 73.3278, 0.4068", "414.548, 292.267, 74.0194, 0.4068", "415.27, 291.442, 74.7054, 0.356", "415.992, 290.618, 75.3726, 0.305", "416.7, 289.756, 75.9618, 0.305", "417.396, 288.85, 76.4291, 0.3304", "418.122, 287.977, 76.8477, 0.3814", "418.849, 287.103, 77.2411, 0.3304", "419.576, 286.23, 77.6303, 0.305", "420.302, 285.356, 78.0357, 0.305", "421.029, 284.482, 78.4739, 0.356", "421.818, 283.704, 78.9863, 0.356", "422.674, 283.025, 79.5914, 0.305", "423.528, 282.344, 80.2656, 0.2542", "424.383, 281.664, 80.9852, 0.2288", "425.238, 280.985, 81.7258, 0.2288", "426.092, 280.304, 82.4625, 0.2288", "426.948, 279.625, 83.1737, 0.2542", "427.803, 278.945, 83.848, 0.2796", "428.725, 278.36, 84.4494, 0.3304", "429.818, 278.022, 84.9038, 0.3304", "430.91, 277.682, 85.2522, 0.3304", "431.911, 277.198, 85.5548, 0.2796", "432.734, 276.428, 85.8844, 0.2542", "433.557, 275.658, 86.2473, 0.2288", "434.379, 274.889, 86.6482, 0.2288", "435.203, 274.12, 87.0839, 0.2288", "436.025, 273.351, 87.5342, 0.2288", "436.848, 272.581, 87.9808, 0.2796", "437.67, 271.812, 88.4128, 0.3304", "438.493, 271.042, 88.83, 0.4322", "439.334, 270.28, 89.2013, 0.4322", "440.195, 269.527, 89.5023, 0.4576", "441.057, 268.775, 89.7576, 0.3814", "441.538, 267.769, 90.0474, 0.356", "441.958, 266.721, 90.382, 0.2796", "442.378, 265.673, 90.76, 0.2542", "442.798, 264.625, 91.1789, 0.2288", "443.217, 263.578, 91.6308, 0.2542", "443.638, 262.53, 92.1021, 0.2796", "444.057, 261.483, 92.5826, 0.305", "444.478, 260.435, 93.0731, 0.2796", "444.898, 259.387, 93.5777, 0.2542", "445.318, 258.339, 94.099, 0.2288", "445.738, 257.291, 94.6389, 0.2288", "446.074, 256.246, 95.2448, 0.2288", "446.408, 255.2, 95.9022, 0.2288", "446.742, 254.154, 96.5955, 0.2288", "447.076, 253.109, 97.3064, 0.2288", "447.41, 252.063, 98.0168, 0.2288", "447.743, 251.018, 98.7104, 0.2288", "448.077, 249.972, 99.3745, 0.2288", "448.379, 248.917, 99.997, 0.2288", "448.403, 247.773, 100.482, 0.2288", "448.426, 246.629, 100.87, 0.2288", "448.516, 245.502, 101.222, 0.2288", "448.806, 244.426, 101.631, 0.2288", "449.095, 243.349, 102.097, 0.2288", "449.385, 242.274, 102.619, 0.2288", "449.676, 241.197, 103.192, 0.2288", "449.966, 240.121, 103.794, 0.2288", "450.255, 239.044, 104.401, 0.2288", "450.546, 237.969, 105.0, 0.2288", "450.836, 236.893, 105.586, 0.2288", "451.126, 235.816, 106.153, 0.2288", "451.415, 234.74, 106.695, 0.2288", "451.706, 233.664, 107.204, 0.2288", "451.996, 232.588, 107.673, 0.2288", "452.266, 231.493, 108.056, 0.2288", "452.512, 230.375, 108.315, 0.2288", "452.757, 229.259, 108.475, 0.2288", "453.003, 228.141, 108.563, 0.2288", "453.23, 227.022, 108.601, 0.2288", "453.217, 225.878, 108.61, 0.2288", "453.206, 224.734, 108.61, 0.2288", "453.193, 223.59, 108.61, 0.2288", "453.181, 222.446, 108.61, 0.2288", "453.169, 221.302, 108.61, 0.2288", "453.157, 220.158, 108.61, 0.2542" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "309.402, 304.617, 35.0067, 0.6102", "308.88, 303.881, 35.28, 0.4322", "308.88, 302.737, 35.2548, 0.356", "308.792, 301.601, 35.2481, 0.3814", "308.651, 300.468, 35.2369, 0.4322", "308.506, 299.347, 35.1938, 0.5338", "308.079, 298.285, 35.1655, 0.5338", "307.604, 297.252, 35.1898, 0.5338", "307.312, 296.151, 35.2136, 0.5084", "307.174, 295.015, 35.2355, 0.5338", "306.507, 294.137, 35.2554, 0.483", "305.901, 293.194, 35.2722, 0.483", "305.105, 292.635, 35.28, 0.5338" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "309.402, 304.617, 35.0067, 0.6102", "307.898, 303.737, 35.2895, 0.6356", "306.923, 303.182, 35.5964, 0.5338", "305.954, 302.604, 35.9038, 0.4576", "304.868, 302.364, 36.1595, 0.4068", "303.866, 302.732, 36.3835, 0.483", "303.115, 303.535, 36.5098, 0.5084", "302.036, 303.83, 36.5095, 0.6102", "301.012, 304.206, 36.4826, 0.5592", "300.046, 304.637, 36.6094, 0.5592", "298.976, 304.868, 36.7349, 0.4576", "297.877, 304.875, 36.8432, 0.4322", "296.802, 304.645, 37.035, 0.3814", "295.713, 304.511, 37.1599, 0.4068", "294.621, 304.378, 37.109, 0.4576", "293.584, 303.986, 36.9561, 0.5084", "292.6, 303.409, 36.8124, 0.5084", "291.582, 302.896, 36.7063, 0.5084", "290.497, 302.541, 36.6388, 0.5084", "289.475, 302.055, 36.6321, 0.5848", "288.484, 301.504, 36.7136, 0.6102", "287.469, 301.012, 36.8656, 0.6102", "286.426, 300.595, 36.96, 0.5338", "285.315, 300.436, 37.0093, 0.5084", "284.189, 300.456, 37.0994, 0.483", "283.078, 300.663, 37.1748, 0.5084", "281.951, 300.835, 37.2008, 0.4576", "280.81, 300.871, 37.184, 0.4576", "279.683, 300.862, 37.0927, 0.3814", "278.559, 300.803, 36.9317, 0.3814", "277.464, 300.533, 36.771, 0.356", "276.4, 300.121, 36.671, 0.4068", "275.344, 299.718, 36.6568, 0.4576", "274.374, 299.195, 36.6024, 0.483", "273.355, 298.722, 36.5159, 0.4576", "272.24, 298.52, 36.4398, 0.3814", "271.203, 298.128, 36.321, 0.3814", "270.445, 297.318, 36.2337, 0.4322", "269.681, 296.48, 36.2088, 0.483", "268.909, 295.639, 36.2048, 0.4576", "268.381, 294.636, 36.1981, 0.3814", "267.671, 293.785, 36.2326, 0.3304", "266.682, 293.288, 36.1718, 0.3304", "265.669, 292.817, 35.9856, 0.4068", "264.584, 292.587, 35.7025, 0.483", "263.478, 292.315, 35.4354, 0.483", "262.342, 292.339, 35.1974, 0.3814", "261.253, 292.621, 34.9412, 0.2796", "260.165, 292.896, 34.6777, 0.2542", "259.04, 293.082, 34.4898, 0.305", "257.9, 293.153, 34.3717, 0.356", "256.803, 293.466, 34.3045, 0.356", "255.747, 293.904, 34.2818, 0.356", "254.646, 294.215, 34.2972, 0.356", "253.803, 294.967, 34.3403, 0.3814", "252.827, 295.512, 34.4504, 0.3304", "251.867, 296.104, 34.5817, 0.305", "250.86, 296.647, 34.6478, 0.305", "249.807, 297.088, 34.6293, 0.3814", "248.722, 297.267, 34.4582, 0.4068", "247.636, 297.605, 34.2418, 0.3814", "246.72, 298.118, 33.9024, 0.305", "245.602, 297.898, 33.686, 0.2542", "244.588, 298.24, 33.5471, 0.2288", "243.474, 298.243, 33.481, 0.2288", "242.347, 298.126, 33.4796, 0.2288", "241.226, 298.241, 33.5619, 0.2288", "240.083, 298.232, 33.6638, 0.2542", "238.998, 297.903, 33.7254, 0.2796", "237.87, 297.898, 33.838, 0.305", "236.789, 298.103, 34.0382, 0.2796", "235.969, 298.639, 34.2868, 0.2542", "235.345, 299.574, 34.5058, 0.2288", "234.709, 300.442, 34.7082, 0.2288", "233.745, 300.958, 34.827, 0.2288", "232.963, 301.673, 34.8191, 0.2288", "231.824, 301.724, 34.7514, 0.2288", "230.907, 302.245, 34.6478, 0.2542", "229.975, 302.359, 34.393, 0.2796", "229.317, 303.07, 34.0838, 0.305", "228.489, 303.849, 33.8674, 0.2796", "227.569, 304.481, 33.7067, 0.2542", "226.621, 305.105, 33.6745, 0.2542", "225.71, 305.789, 33.7588, 0.2796", "224.96, 306.616, 33.9486, 0.305", "224.581, 307.683, 34.1748, 0.2796", "224.224, 308.6, 34.545, 0.2542", "224.224, 309.681, 35.56, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "380.615, 380.953, 47.8624, 0.483", "380.938, 381.555, 49.4452, 0.4576", "381.406, 382.387, 50.3622, 0.483", "382.462, 382.827, 50.689, 0.4576", "383.539, 383.053, 50.9807, 0.4068", "384.661, 382.832, 51.2428, 0.356", "385.743, 382.635, 51.487, 0.3304", "385.253, 383.427, 51.9408, 0.305", "384.469, 384.219, 52.3222, 0.305", "384.838, 385.291, 52.6358, 0.305" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "380.615, 380.953, 47.8624, 0.483", "379.69, 379.858, 48.0385, 0.5084", "379.158, 378.988, 48.0998, 0.5848", "378.34, 378.495, 48.3339, 0.5848", "377.372, 378.435, 48.718, 0.5848", "376.255, 378.43, 49.0244, 0.5338", "375.178, 378.4, 49.1613, 0.5338", "374.144, 378.214, 49.3158, 0.483", "373.145, 378.272, 49.6476, 0.483", "372.18, 378.744, 50.0682, 0.4322", "371.121, 378.98, 50.5126, 0.3814", "370.095, 378.619, 50.9698, 0.4068", "369.101, 378.094, 51.4254, 0.4322", "368.057, 377.647, 51.7944, 0.483", "366.964, 377.318, 52.0537, 0.4322", "365.855, 377.402, 52.2388, 0.4068", "364.82, 377.869, 52.3659, 0.4322", "363.882, 378.36, 52.5935, 0.4576", "362.841, 378.733, 52.8441, 0.5084", "361.781, 378.56, 53.1188, 0.5338", "360.724, 378.145, 53.3442, 0.5848", "359.635, 378.116, 53.3943, 0.6102", "358.522, 378.327, 53.3638, 0.5848", "357.407, 378.147, 53.2969, 0.5848", "356.307, 377.837, 53.2207, 0.6102", "355.189, 377.605, 53.1325, 0.661", "354.096, 377.776, 52.9967, 0.6864", "352.987, 377.752, 52.9973, 0.6864", "351.885, 377.474, 53.0659, 0.661", "350.802, 377.113, 53.1409, 0.5848", "349.799, 376.588, 53.1759, 0.483", "348.964, 375.819, 53.2008, 0.4322", "348.415, 374.974, 53.4456, 0.483", "347.547, 374.273, 53.7281, 0.5338", "346.467, 373.895, 53.9521, 0.5338", "345.398, 373.488, 54.1274, 0.4576", "344.401, 372.928, 54.255, 0.4576", "343.424, 372.334, 54.3329, 0.5084", "342.393, 371.839, 54.3651, 0.5848", "341.31, 371.473, 54.3917, 0.6102", "340.215, 371.178, 54.4009, 0.5592", "339.114, 371.276, 54.3718, 0.5084", "338.191, 371.882, 54.511, 0.4322", "337.415, 372.569, 54.7896, 0.4322", "336.478, 372.785, 55.2104, 0.4322", "335.392, 372.633, 55.5447, 0.4322", "334.388, 372.109, 55.8079, 0.3814", "333.306, 371.757, 56.0479, 0.3304", "332.273, 372.081, 56.3296, 0.305", "331.775, 372.958, 56.7314, 0.305", "331.071, 373.832, 57.1127, 0.305", "330.006, 374.229, 57.4266, 0.3304", "328.877, 374.089, 57.6839, 0.3814", "327.81, 373.815, 57.9519, 0.4322", "326.702, 373.537, 58.1123, 0.4576", "325.565, 373.438, 58.1356, 0.4322" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "442.842, 363.265, 39.7183, 0.4068", "443.308, 363.371, 38.8024, 0.4322", "444.228, 363.775, 37.2747, 0.5084", "445.259, 364.141, 36.6313, 0.483", "446.366, 364.183, 35.9906, 0.4068", "447.329, 363.91, 35.2192, 0.305", "448.003, 363.808, 34.1642, 0.2542", "448.775, 364.149, 33.0252, 0.2288", "449.621, 364.608, 31.8674, 0.2288", "450.466, 365.066, 30.7222, 0.2288", "451.438, 365.259, 29.7223, 0.2288", "452.573, 365.115, 29.0066, 0.2542", "453.708, 364.97, 28.518, 0.2796", "454.818, 365.121, 28.1442, 0.305", "455.917, 365.395, 27.8317, 0.2796", "457.017, 365.668, 27.5524, 0.2796", "458.115, 365.942, 27.2817, 0.2796", "459.214, 366.215, 26.6871, 0.356" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "442.842, 363.265, 39.7183, 0.4068", "443.405, 363.088, 39.5368, 0.3814", "444.465, 362.676, 39.3747, 0.483", "445.534, 362.367, 39.1731, 0.5084", "446.589, 361.967, 38.9777, 0.5848", "447.52, 361.318, 38.8214, 0.5338", "448.307, 360.495, 38.6887, 0.483", "448.818, 359.494, 38.6254, 0.3814", "449.698, 358.825, 38.6002, 0.305", "450.806, 358.55, 38.5972, 0.2542", "451.857, 358.108, 38.598, 0.2288", "452.864, 357.595, 38.5952, 0.2288", "454.003, 357.508, 38.5862, 0.2288", "455.089, 357.253, 38.5655, 0.2288", "455.838, 356.401, 38.5356, 0.2288", "456.624, 355.612, 38.495, 0.2288", "457.337, 354.724, 38.4423, 0.2288", "458.103, 353.883, 38.3572, 0.2288", "458.962, 353.163, 38.2217, 0.2288", "459.807, 352.4, 38.0794, 0.2796", "460.674, 351.69, 37.9159, 0.3814", "461.713, 351.528, 37.742, 0.483", "462.79, 351.144, 37.6048, 0.483", "463.863, 350.751, 37.5007, 0.3814", "464.808, 350.153, 37.4007, 0.305", "465.717, 349.506, 37.3044, 0.305", "466.812, 349.279, 37.2599, 0.3814", "467.935, 349.42, 37.2322, 0.4576", "469.059, 349.511, 37.1795, 0.483", "470.15, 349.222, 37.0969, 0.4576", "471.191, 348.75, 36.9788, 0.3814", "472.273, 348.518, 36.7822, 0.3304", "473.069, 348.999, 36.4193, 0.3304", "473.995, 349.304, 36.013, 0.356", "474.976, 348.828, 35.6446, 0.4322", "475.903, 348.16, 35.3268, 0.4576", "476.808, 347.461, 35.0711, 0.483", "477.794, 346.942, 34.911, 0.4068", "478.79, 346.711, 34.6192, 0.356", "479.457, 345.957, 34.1967, 0.2796", "480.391, 345.505, 33.6804, 0.2542", "481.496, 345.26, 33.2016, 0.2288", "482.404, 344.63, 32.7197, 0.2288", "482.984, 343.674, 32.2652, 0.2288", "483.085, 342.546, 31.9206, 0.2288", "484.015, 341.971, 31.6484, 0.2288", "485.048, 342.375, 31.3466, 0.2288", "486.02, 342.908, 31.0369, 0.2288", "487.005, 342.329, 30.7815, 0.2542", "487.907, 341.636, 30.5578, 0.305", "489.025, 341.414, 30.343, 0.356", "490.155, 341.491, 30.1042, 0.356", "491.148, 341.37, 29.7377, 0.305", "491.961, 341.13, 29.3138, 0.2542", "492.764, 340.388, 28.9769, 0.2288", "493.829, 340.111, 28.719, 0.2288", "494.85, 339.774, 28.5317, 0.2288", "495.914, 339.378, 28.4052, 0.2288", "497.045, 339.31, 28.3156, 0.2542", "498.172, 339.31, 28.1744, 0.305", "499.306, 339.196, 28.0473, 0.356", "500.44, 339.196, 27.8966, 0.356", "501.585, 339.196, 27.775, 0.305", "502.728, 339.196, 27.6799, 0.2796", "503.784, 339.009, 27.5685, 0.2796", "504.798, 338.624, 27.4893, 0.305", "505.941, 338.624, 27.4249, 0.2796", "507.086, 338.624, 27.3717, 0.2542", "508.23, 338.624, 27.3195, 0.2542", "509.374, 338.624, 27.2673, 0.2796", "510.486, 338.642, 27.1895, 0.305", "511.114, 339.505, 27.0582, 0.2796", "512.03, 339.997, 26.948, 0.2542", "513.057, 340.397, 26.8187, 0.2542", "514.164, 340.569, 26.7226, 0.2796", "515.293, 340.733, 26.6573, 0.305", "516.286, 341.255, 26.6, 0.3304" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "384.838, 385.291, 52.6358, 0.305", "384.995, 385.569, 52.9211, 0.4576", "385.336, 386.547, 53.2638, 0.356", "385.088, 387.664, 53.4814, 0.3304", "384.878, 388.783, 53.5825, 0.3304", "385.001, 389.921, 53.6161, 0.3304", "385.094, 391.051, 53.5447, 0.305", "385.185, 392.181, 53.3848, 0.3304", "385.275, 393.312, 53.1653, 0.356", "385.204, 394.44, 52.957, 0.356", "385.001, 395.565, 52.7867, 0.305", "384.818, 396.695, 52.6484, 0.2542", "384.639, 397.825, 52.5372, 0.305", "384.43, 398.944, 52.404, 0.4068", "384.216, 400.06, 52.2438, 0.5084", "384.002, 401.177, 52.0621, 0.4576", "383.788, 402.293, 51.8694, 0.356", "383.717, 403.433, 51.7191, 0.2542", "383.668, 404.576, 51.6144, 0.2288", "383.553, 405.707, 51.5514, 0.2288", "383.223, 406.803, 51.5189, 0.2542", "382.773, 407.818, 51.5057, 0.2796", "381.878, 408.528, 51.5018, 0.3304", "381.096, 409.337, 51.4976, 0.3304", "380.529, 410.33, 51.492, 0.356", "380.061, 411.355, 51.4839, 0.356", "379.941, 412.493, 51.4724, 0.4068", "379.87, 413.635, 51.4567, 0.4068", "379.818, 414.778, 51.4354, 0.4068", "379.533, 415.868, 51.4044, 0.356", "379.088, 416.922, 51.359, 0.3304", "378.589, 417.944, 51.298, 0.2796", "377.915, 418.87, 51.2212, 0.2542", "377.242, 419.794, 51.1308, 0.2288", "376.596, 420.228, 50.8872, 0.2288", "376.286, 421.103, 50.6268, 0.2288", "375.586, 421.966, 50.4249, 0.2542", "375.315, 423.066, 50.2774, 0.2796", "374.762, 424.058, 50.1799, 0.305", "373.988, 424.859, 50.1276, 0.2796", "373.303, 425.775, 50.1152, 0.2542", "372.702, 426.734, 50.1136, 0.2288", "372.073, 427.685, 50.1108, 0.2288", "371.503, 428.672, 50.1071, 0.2288", "371.191, 429.761, 50.1021, 0.2288", "370.566, 430.713, 50.0951, 0.2288", "369.919, 431.652, 50.085, 0.2288", "369.255, 432.567, 50.0704, 0.2288", "368.706, 433.566, 50.0506, 0.2288", "368.202, 434.593, 50.0248, 0.2288", "367.67, 435.601, 49.994, 0.2288", "367.217, 436.63, 49.919, 0.2288", "366.544, 437.551, 49.8434, 0.2288", "366.008, 438.543, 49.7543, 0.2288", "365.852, 439.663, 49.6902, 0.2288", "365.555, 440.763, 49.6504, 0.2288", "364.907, 441.68, 49.6339, 0.2288", "364.357, 442.682, 49.6423, 0.2288", "363.844, 443.703, 49.6692, 0.2288", "363.243, 444.656, 49.712, 0.2542", "362.364, 445.389, 49.7652, 0.2796", "361.515, 446.154, 49.8282, 0.305", "360.556, 446.414, 50.0203, 0.2796", "359.812, 447.074, 50.1799, 0.2542", "358.815, 447.609, 50.3093, 0.2288", "357.844, 448.216, 50.4112, 0.2288", "356.858, 448.762, 50.4885, 0.2288", "355.842, 449.234, 50.5851, 0.2288", "355.122, 450.081, 50.6509, 0.2288", "354.454, 450.953, 50.7111, 0.2288", "353.534, 451.605, 50.7665, 0.2288", "352.44, 451.919, 50.8306, 0.2288", "351.32, 452.109, 50.9211, 0.2288", "350.185, 452.223, 51.0003, 0.2288", "349.047, 452.315, 51.0784, 0.2288", "347.958, 452.653, 51.1557, 0.2288", "346.907, 452.982, 51.3038, 0.2288", "345.822, 453.32, 51.438, 0.2288", "344.85, 453.825, 51.5578, 0.2288", "343.73, 453.919, 51.6944, 0.2288", "342.651, 454.277, 51.8084, 0.2288", "341.592, 454.674, 51.9039, 0.2288", "340.648, 455.317, 51.9862, 0.2288", "339.53, 455.495, 52.0761, 0.2288", "338.438, 455.655, 52.2435, 0.2288", "337.293, 455.655, 52.3933, 0.2288", "336.159, 455.681, 52.5678, 0.2288", "335.088, 456.001, 52.7612, 0.2288", "333.991, 456.302, 52.9228, 0.2288", "333.07, 456.944, 53.0561, 0.2288", "332.07, 457.371, 53.1636, 0.2288", "331.074, 457.725, 53.3546, 0.2288", "330.109, 458.267, 53.5643, 0.2288", "329.022, 458.62, 53.7144, 0.2288", "327.93, 458.961, 53.8143, 0.2288", "326.816, 459.202, 53.8667, 0.2288", "325.674, 459.202, 53.8518, 0.2288", "324.534, 459.202, 53.7894, 0.2288", "323.391, 459.202, 53.7214, 0.2288", "322.251, 459.189, 53.632, 0.2542", "321.148, 458.892, 53.5413, 0.2796", "320.012, 458.768, 53.4652, 0.3304", "318.868, 458.744, 53.4016, 0.356", "317.767, 458.471, 53.3453, 0.3814", "316.793, 457.92, 53.2552, 0.3814", "315.741, 457.55, 53.1398, 0.3814", "314.611, 457.367, 53.0499, 0.3814", "313.484, 457.166, 52.9813, 0.3814", "312.352, 457.023, 52.9315, 0.3814", "311.234, 456.832, 52.8979, 0.3814", "310.172, 456.408, 52.8777, 0.4068", "309.051, 456.211, 52.8609, 0.4068", "307.919, 456.114, 52.8382, 0.4068", "306.799, 456.265, 52.8049, 0.3304", "305.671, 456.374, 52.7568, 0.305", "304.548, 456.586, 52.6924, 0.2796", "303.41, 456.685, 52.6103, 0.305", "302.267, 456.697, 52.5101, 0.2796", "301.385, 457.028, 52.2483, 0.2542", "300.25, 457.081, 51.9966, 0.2288", "299.127, 457.301, 51.7734, 0.2542", "297.987, 457.371, 51.571, 0.2796", "296.861, 457.257, 51.3587, 0.305", "295.789, 457.49, 51.1011, 0.2796", "294.768, 457.981, 50.834, 0.2796", "293.697, 458.28, 50.5708, 0.305", "292.621, 458.286, 50.1847, 0.356", "291.519, 458.286, 49.7426, 0.356", "290.377, 458.286, 49.3503, 0.3304", "289.247, 458.222, 48.9812, 0.3304", "288.135, 457.989, 48.6332, 0.356", "287.071, 457.714, 48.2479, 0.3814", "285.967, 457.714, 47.8688, 0.3814", "284.909, 457.307, 47.5527, 0.3814", "283.941, 456.739, 47.2724, 0.356", "282.828, 456.709, 46.984, 0.305", "282.084, 457.418, 46.6614, 0.2542", "281.427, 458.045, 46.1905, 0.2288", "281.092, 459.115, 45.7853, 0.2288", "280.966, 460.233, 45.4574, 0.2288", "280.784, 461.317, 45.1296, 0.2542", "280.111, 462.175, 44.8862, 0.2796", "279.29, 462.913, 44.6768, 0.305", "278.549, 463.744, 44.5161, 0.2796", "277.549, 464.271, 44.3724, 0.2542", "276.79, 465.124, 44.296, 0.2288", "275.79, 465.68, 44.289, 0.2288", "274.711, 465.945, 44.3296, 0.2288", "273.771, 466.564, 44.4175, 0.2288", "272.852, 467.046, 44.6737, 0.2288", "272.29, 468.0, 44.9274, 0.2288", "271.814, 468.926, 45.36, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "384.838, 385.291, 52.6358, 0.305", "385.573, 385.363, 52.7537, 0.5338", "386.483, 385.073, 54.1747, 0.5084", "387.31, 384.631, 54.8652, 0.3814", "388.124, 383.899, 55.5307, 0.2796", "388.935, 383.091, 56.121, 0.2288", "389.749, 382.3, 56.653, 0.2288", "390.714, 382.091, 57.3331, 0.2288", "391.589, 381.689, 58.0712, 0.2288", "392.228, 380.771, 58.7672, 0.2288", "392.868, 379.854, 59.4468, 0.2288", "393.507, 378.936, 60.1012, 0.2288", "394.154, 378.023, 60.7144, 0.2288", "394.888, 377.169, 61.262, 0.2288", "395.621, 376.313, 61.773, 0.2288", "396.355, 375.458, 62.2675, 0.2288", "397.089, 374.604, 62.7491, 0.2288", "397.824, 373.749, 63.2195, 0.2288", "398.558, 372.895, 63.6798, 0.2288", "399.292, 372.04, 64.1306, 0.2542", "400.026, 371.185, 64.5697, 0.305", "400.751, 370.322, 64.9916, 0.356", "401.41, 369.394, 65.3722, 0.356", "402.068, 368.466, 65.7188, 0.305", "402.727, 367.539, 66.0391, 0.2796", "403.385, 366.611, 66.3398, 0.2796", "404.044, 365.683, 66.6274, 0.3304", "404.703, 364.755, 66.9077, 0.3304", "405.169, 363.723, 67.1784, 0.3304", "405.57, 362.656, 67.4402, 0.2796", "405.971, 361.589, 67.697, 0.2542", "406.372, 360.521, 67.9535, 0.2288", "406.773, 359.454, 68.215, 0.2288", "407.176, 358.387, 68.4872, 0.2288", "407.576, 357.319, 68.7758, 0.2288", "407.978, 356.252, 69.085, 0.2288", "408.278, 355.164, 69.4383, 0.2288", "408.482, 354.057, 69.851, 0.2288", "408.688, 352.949, 70.3153, 0.2288", "408.893, 351.842, 70.8249, 0.2288", "409.099, 350.734, 71.3745, 0.2288", "409.303, 349.628, 71.9597, 0.2796", "409.475, 348.525, 72.5886, 0.356", "409.529, 347.44, 73.2992, 0.4576", "409.659, 346.395, 74.0765, 0.483", "410.534, 345.744, 74.9028, 0.4576", "411.408, 345.093, 75.7694, 0.3814", "412.282, 344.442, 76.6702, 0.305", "413.156, 343.793, 77.5995, 0.305", "414.03, 343.142, 78.5492, 0.356" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "325.565, 373.438, 58.1356, 0.4322", "324.969, 373.585, 60.8703, 0.2796", "323.993, 373.63, 61.3203, 0.2542", "322.849, 373.63, 61.4785, 0.2288", "321.954, 374.2, 61.6202, 0.2288", "321.146, 374.983, 61.7501, 0.2288", "320.456, 375.883, 61.875, 0.2288", "319.671, 376.702, 62.0063, 0.2288", "318.628, 377.085, 62.1883, 0.2288", "317.657, 377.593, 62.4562, 0.2288", "317.281, 378.625, 62.711, 0.2288", "316.743, 379.236, 63.0529, 0.2288", "315.754, 379.236, 63.4928, 0.2542", "314.609, 379.236, 63.8467, 0.3304", "313.466, 379.236, 64.127, 0.4068", "312.367, 379.477, 64.3563, 0.4322", "311.5, 380.134, 64.5912, 0.356", "310.363, 380.151, 64.8178, 0.3304", "309.219, 380.151, 65.0443, 0.3814", "308.181, 380.151, 65.3705, 0.483", "307.299, 380.494, 65.8686, 0.483", "306.264, 380.494, 66.4672, 0.3814", "305.146, 380.494, 67.0121, 0.2796", "304.032, 380.649, 67.4559, 0.2288", "303.062, 381.168, 67.8868, 0.2288", "302.025, 381.636, 68.2228, 0.2542", "300.978, 381.867, 68.586, 0.2796", "299.84, 381.867, 68.8951, 0.305", "298.702, 381.867, 69.1911, 0.3304", "297.586, 381.867, 69.5324, 0.4068", "296.471, 381.867, 69.8684, 0.5084", "295.327, 381.867, 70.1568, 0.5338", "294.255, 381.867, 70.5065, 0.4576", "293.219, 381.53, 70.7994, 0.3304", "292.16, 381.12, 71.0494, 0.2542", "291.066, 380.954, 71.3224, 0.2542", "289.963, 380.78, 71.5879, 0.2796", "288.866, 380.6, 71.8542, 0.3304", "287.829, 380.243, 72.1235, 0.356", "286.832, 379.705, 72.3296, 0.3814", "285.691, 379.694, 72.4828, 0.356", "284.551, 379.694, 72.6149, 0.305", "283.421, 379.825, 72.7006, 0.2796", "282.289, 379.922, 72.7496, 0.2796", "281.151, 379.987, 72.7745, 0.305", "280.01, 380.037, 72.7894, 0.2796", "278.867, 380.037, 72.795, 0.2542", "277.723, 380.037, 72.7936, 0.2288", "276.66, 379.715, 72.791, 0.2288", "276.226, 378.717, 72.7874, 0.2796", "275.109, 378.548, 72.7824, 0.3304", "273.991, 378.371, 72.7754, 0.4068", "273.156, 377.749, 72.7653, 0.3814", "272.016, 377.673, 72.751, 0.356", "271.032, 377.097, 72.7317, 0.2796", "269.948, 376.743, 72.7065, 0.2542", "268.95, 376.217, 72.6751, 0.2288", "267.84, 375.995, 72.5973, 0.2288", "266.702, 375.918, 72.527, 0.2288", "265.574, 375.819, 72.4632, 0.2542", "264.571, 375.31, 72.3652, 0.305", "263.643, 374.688, 72.2859, 0.356", "262.598, 374.234, 72.224, 0.356", "261.642, 373.628, 72.17, 0.305", "261.02, 372.695, 72.0947, 0.2542", "259.945, 372.35, 72.0406, 0.2288", "258.861, 371.993, 72.0054, 0.2288", "257.936, 371.358, 71.981, 0.2288", "256.876, 370.935, 71.9662, 0.2542", "255.749, 370.77, 71.96, 0.2796", "254.861, 370.242, 71.96, 0.305", "253.93, 369.601, 71.96, 0.2796", "252.995, 368.942, 71.96, 0.2542", "252.047, 368.464, 71.96, 0.2542", "250.994, 368.025, 71.96, 0.2796" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "325.565, 373.438, 58.1356, 0.4322", "324.978, 373.541, 58.0342, 0.356", "323.877, 373.494, 57.8424, 0.305", "322.821, 373.084, 57.6302, 0.305", "321.854, 372.475, 57.4053, 0.356", "320.914, 371.825, 57.1743, 0.4576", "319.906, 371.344, 56.8882, 0.483", "318.816, 371.303, 56.5412, 0.5084", "317.76, 371.658, 56.1512, 0.5084", "316.719, 371.64, 55.6982, 0.5592", "315.665, 371.3, 55.2188, 0.5592", "314.556, 371.282, 54.8159, 0.5338", "313.435, 371.495, 54.4908, 0.4576", "312.301, 371.514, 54.2349, 0.4068", "311.23, 371.156, 54.0196, 0.3814", "310.62, 370.271, 53.7706, 0.4068", "309.781, 369.574, 53.5993, 0.483", "308.698, 369.658, 53.4002, 0.5848", "307.694, 369.743, 53.0258, 0.6356", "306.624, 369.806, 52.5748, 0.5592", "305.565, 370.17, 52.1604, 0.483", "304.782, 370.933, 51.9495, 0.4576", "303.759, 371.413, 51.8213, 0.5338", "302.627, 371.41, 51.7311, 0.5592", "301.594, 370.991, 51.6051, 0.5592", "300.525, 370.595, 51.5239, 0.5338", "299.465, 370.221, 51.5113, 0.5592", "298.368, 369.904, 51.4366, 0.5592", "297.289, 370.014, 51.2198, 0.5848", "296.174, 369.775, 51.0132, 0.6102", "295.165, 369.237, 50.8217, 0.6864", "294.099, 368.859, 50.5873, 0.7626", "293.065, 368.437, 50.3073, 0.788", "292.085, 367.851, 50.0968, 0.7626", "291.035, 367.396, 49.9534, 0.6864", "289.965, 366.992, 49.8518, 0.5848", "288.91, 366.549, 49.7854, 0.5338", "287.815, 366.234, 49.7372, 0.483", "286.702, 366.217, 49.637, 0.5084", "285.594, 366.341, 49.6034, 0.4576", "284.534, 365.954, 49.649, 0.4068", "283.435, 365.681, 49.6891, 0.3304", "282.299, 365.786, 49.7227, 0.3304", "281.193, 366.05, 49.7479, 0.3814", "280.049, 366.079, 49.7605, 0.4068", "278.906, 366.072, 49.7451, 0.4322", "277.764, 366.023, 49.7059, 0.4576", "276.648, 365.803, 49.653, 0.5084", "275.587, 365.381, 49.5835, 0.5084", "274.475, 365.135, 49.4847, 0.4322", "273.367, 364.971, 49.317, 0.4068", "272.31, 364.645, 49.0921, 0.3814", "271.194, 364.771, 48.8995, 0.4576", "270.121, 365.045, 48.7421, 0.4322", "268.993, 364.861, 48.6114, 0.4576", "267.868, 364.687, 48.4949, 0.4068", "266.746, 364.565, 48.3764, 0.4322", "265.67, 364.234, 48.249, 0.4068", "264.588, 363.896, 48.1687, 0.4322", "263.549, 363.544, 48.1872, 0.4322", "262.677, 362.84, 48.3176, 0.5084", "261.759, 362.184, 48.4828, 0.5084", "260.716, 361.716, 48.6385, 0.483", "259.632, 361.353, 48.7802, 0.356", "258.514, 361.129, 48.902, 0.2796", "257.559, 360.659, 49.0095, 0.2542", "256.809, 359.799, 49.1336, 0.305", "255.939, 359.134, 49.3335, 0.356", "254.887, 358.762, 49.5692, 0.4068", "253.827, 358.352, 49.7734, 0.4322", "252.843, 357.772, 49.9517, 0.483", "251.904, 357.119, 50.111, 0.5084", "251.093, 356.327, 50.2678, 0.5338", "250.582, 355.362, 50.493, 0.5338", "250.356, 354.274, 50.7693, 0.483", "250.053, 353.182, 51.0154, 0.4322", "249.533, 352.169, 51.2333, 0.4068", "248.741, 351.373, 51.4444, 0.4322", "247.71, 351.003, 51.7014, 0.4576", "246.656, 350.812, 52.0593, 0.4322", "245.746, 350.252, 52.444, 0.4322", "245.03, 349.374, 52.7691, 0.4068", "244.3, 348.496, 53.0172, 0.3814", "243.56, 347.626, 53.1891, 0.305", "243.137, 346.6, 53.272, 0.2542", "242.869, 345.512, 53.3898, 0.2796", "242.378, 344.5, 53.557, 0.356", "241.635, 343.689, 53.8222, 0.4322", "240.653, 343.241, 54.1856, 0.4322", "239.598, 342.857, 54.4852, 0.4322", "238.889, 342.007, 54.717, 0.4576", "238.041, 341.296, 54.9847, 0.483", "237.112, 340.656, 55.2689, 0.4576", "236.047, 340.259, 55.515, 0.4068", "235.41, 339.365, 55.783, 0.3814", "234.926, 338.337, 56.0616, 0.3814", "234.138, 337.542, 56.2335, 0.356", "233.228, 336.955, 56.4995, 0.3304", "232.232, 336.488, 56.8322, 0.3304" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "414.03, 343.142, 78.5492, 0.356", "414.19, 342.931, 80.2617, 0.2288", "414.53, 343.714, 82.0957, 0.2288", "414.895, 344.692, 82.8649, 0.2288", "415.259, 345.67, 83.7673, 0.2288", "415.624, 346.648, 84.7358, 0.305", "415.989, 347.626, 85.7102, 0.4068", "416.437, 348.591, 86.6169, 0.5084", "416.996, 349.538, 87.3891, 0.4576", "417.555, 350.485, 88.7502, 0.356" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "414.03, 343.142, 78.5492, 0.356", "413.865, 342.858, 79.4959, 0.2796", "413.44, 342.128, 80.6002, 0.2796", "413.015, 341.398, 81.8, 0.305", "412.591, 340.668, 83.0418, 0.2796", "412.069, 339.727, 84.0711, 0.2542", "411.52, 338.724, 84.8593, 0.2288", "410.969, 337.72, 85.4591, 0.2288", "410.496, 336.704, 85.9421, 0.2288", "410.346, 335.631, 86.4917, 0.2288", "410.197, 334.559, 87.1094, 0.2288", "410.048, 333.486, 87.7937, 0.2288", "409.898, 332.413, 88.5074, 0.2542", "409.75, 331.341, 89.2086, 0.3304", "409.6, 330.268, 90.6119, 0.4576" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "232.232, 336.488, 56.8322, 0.3304", "231.928, 335.841, 57.96, 0.305", "231.224, 334.982, 57.9919, 0.2796", "230.15, 334.683, 57.9947, 0.2542", "229.691, 333.686, 58.0616, 0.2288", "229.094, 332.727, 58.179, 0.2542", "228.342, 331.874, 58.2949, 0.2796", "227.518, 331.093, 58.4282, 0.305", "226.559, 330.529, 58.5872, 0.2796", "225.938, 329.584, 58.7384, 0.2796", "225.355, 328.645, 58.9117, 0.2796", "225.085, 327.54, 59.0993, 0.305", "224.622, 326.534, 59.3664, 0.305", "224.306, 325.446, 59.6543, 0.305", "223.726, 324.501, 59.9595, 0.305", "223.415, 323.498, 60.3033, 0.2796", "222.693, 322.729, 60.5898, 0.2542", "222.165, 322.078, 60.9484, 0.2288", "222.046, 320.956, 61.2651, 0.2796", "221.427, 320.031, 61.5065, 0.3304", "220.729, 319.139, 61.7159, 0.3814", "220.215, 318.147, 61.9147, 0.3304", "220.008, 317.024, 62.0634, 0.2796", "219.825, 315.896, 62.1645, 0.2288", "219.742, 314.762, 62.2446, 0.2288", "219.533, 313.646, 62.3132, 0.2288", "219.402, 312.522, 62.4044, 0.2542", "219.106, 311.444, 62.5302, 0.2796", "218.401, 310.589, 62.6368, 0.356", "217.536, 309.844, 62.727, 0.3814", "217.131, 308.872, 62.8032, 0.4068", "217.131, 307.731, 62.8846, 0.3304", "216.982, 306.607, 62.9717, 0.2796", "216.55, 305.553, 63.0577, 0.2288", "216.351, 304.431, 63.156, 0.2542", "216.33, 303.288, 63.2335, 0.305", "216.33, 302.144, 63.2909, 0.4068", "216.05, 301.06, 63.3685, 0.4576", "215.85, 299.934, 63.4155, 0.4576", "215.662, 298.806, 63.4371, 0.4068", "215.26, 297.74, 63.4376, 0.4068", "214.882, 296.677, 63.4178, 0.4576", "214.295, 295.71, 63.3553, 0.483", "213.652, 294.786, 63.2674, 0.4576", "213.206, 293.741, 63.1918, 0.3814", "213.198, 292.618, 63.14, 0.305", "213.585, 291.567, 63.135, 0.2542", "213.585, 290.424, 63.1509, 0.2288", "213.585, 289.28, 63.1674, 0.2288", "213.585, 288.136, 63.1812, 0.2288", "213.585, 286.992, 63.1915, 0.2288", "213.585, 285.896, 63.105, 0.2288", "213.699, 284.767, 63.0454, 0.2288", "213.699, 283.623, 63.0535, 0.2288", "213.699, 282.479, 63.1406, 0.2288", "213.538, 281.384, 63.3301, 0.2796", "212.929, 280.453, 63.6504, 0.3814", "212.46, 279.663, 64.1508, 0.483", "212.247, 278.777, 64.7886, 0.483", "212.441, 277.934, 65.5855, 0.4322", "212.441, 276.859, 66.3326, 0.3814", "211.672, 276.254, 66.9838, 0.4068", "210.781, 275.551, 67.4568, 0.4322", "209.764, 275.033, 67.7779, 0.5084", "209.074, 274.155, 67.9893, 0.5338", "208.222, 273.597, 68.1912, 0.5084", "207.421, 272.961, 68.4258, 0.4068", "206.354, 272.661, 68.5989, 0.3814", "205.673, 271.784, 68.7268, 0.4068", "204.641, 271.505, 68.8139, 0.4322", "203.508, 271.357, 68.8632, 0.4322", "202.393, 271.195, 68.88, 0.4322", "201.296, 270.878, 68.88, 0.4576", "200.314, 270.442, 68.88, 0.3814" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "232.232, 336.488, 56.8322, 0.3304", "232.127, 337.187, 56.9974, 0.305", "231.176, 336.908, 57.2074, 0.2288", "230.072, 337.117, 57.4496, 0.2288", "229.017, 337.519, 57.7119, 0.2288", "228.449, 338.397, 57.9617, 0.2288", "227.56, 339.059, 58.2389, 0.2288", "226.548, 339.425, 58.5402, 0.2288", "225.404, 339.425, 58.7717, 0.2288", "224.345, 339.349, 59.0271, 0.2288", "223.268, 339.082, 59.22, 0.2288", "222.124, 339.082, 59.3597, 0.2288", "221.055, 339.282, 59.498, 0.2288", "220.079, 339.863, 59.6, 0.2288", "219.065, 340.361, 59.684, 0.2288", "218.044, 340.795, 59.7503, 0.2796", "217.029, 341.25, 59.7929, 0.3814", "216.141, 341.865, 59.8595, 0.5084", "215.255, 342.478, 60.0376, 0.5592", "214.451, 343.225, 60.305, 0.5338", "213.64, 344.026, 60.5609, 0.4576", "212.962, 344.919, 60.8073, 0.4068", "212.403, 345.882, 61.068, 0.356", "212.326, 346.919, 61.4701, 0.3304", "212.324, 348.013, 61.9007, 0.2796", "211.82, 349.031, 62.2535, 0.2542", "211.359, 350.064, 62.5514, 0.2288", "210.971, 351.114, 62.8298, 0.2288", "210.684, 352.211, 63.0731, 0.2288", "210.239, 352.95, 63.4309, 0.2542", "210.038, 354.047, 63.7294, 0.3304", "209.759, 355.078, 64.0181, 0.4068", "209.376, 356.008, 64.3465, 0.4322", "208.766, 356.92, 64.6262, 0.356", "208.032, 357.776, 64.8662, 0.2796", "207.156, 358.472, 64.9838, 0.2542", "206.298, 359.216, 65.0692, 0.2796", "205.358, 359.851, 65.1286, 0.305", "204.434, 360.381, 65.2128, 0.2796", "203.4, 360.799, 65.2873, 0.3304", "202.26, 360.855, 65.3593, 0.3814", "201.135, 360.932, 65.4791, 0.4576", "200.029, 361.092, 65.616, 0.3814", "199.12, 361.719, 65.7216, 0.305", "198.41, 362.594, 65.8218, 0.2288", "197.895, 363.598, 65.9081, 0.2542", "197.655, 364.707, 65.9596, 0.2796", "197.279, 365.767, 65.977, 0.305", "196.881, 366.839, 65.9708, 0.305", "196.627, 367.947, 65.9484, 0.3304", "196.516, 369.076, 65.9117, 0.356", "196.425, 370.176, 65.7958, 0.356", "196.31, 371.308, 65.6908, 0.3304", "196.185, 372.44, 65.6071, 0.305", "195.857, 373.529, 65.5421, 0.305", "195.738, 374.663, 65.4931, 0.2796", "195.738, 375.807, 65.4576, 0.2796", "195.786, 376.947, 65.4326, 0.2796", "196.103, 378.044, 65.4038, 0.3304", "196.426, 379.131, 65.3296, 0.3304", "196.71, 380.234, 65.2616, 0.3304", "196.768, 381.366, 65.198, 0.305", "196.768, 382.51, 65.1372, 0.305", "196.857, 383.638, 65.077, 0.305", "197.111, 384.691, 64.9723, 0.2796", "197.203, 385.82, 64.8726, 0.2542", "197.485, 386.927, 64.7651, 0.2288", "197.678, 388.044, 64.6464, 0.2542", "197.683, 389.188, 64.5145, 0.305", "197.601, 390.136, 64.2569, 0.356", "196.964, 391.036, 63.9906, 0.3814", "195.971, 391.381, 63.658, 0.356", "194.966, 391.877, 63.3797, 0.356", "194.188, 392.625, 63.098, 0.356", "193.45, 393.193, 62.72, 0.3814" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_33", "dend_26", "dend_23", "dend_20", "dend_5", "dend_0", "dend_30", "dend_27", "dend_25", "dend_24", "dend_22", "dend_21", "dend_17", "dend_6", "dend_4", "dend_1", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_12", "dend_7", "dend_3", "dend_2", "dend_16", "dend_13", "dend_11", "dend_8", "dend_15", "dend_14", "dend_10", "dend_9" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25193",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "2.2817857"
  }, {
    "group" : "axon",
    "value" : "2.2817857"
  }, {
    "group" : "dend",
    "value" : "2.2817857"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "86.093094"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "2.1611275E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.05215414",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.4234679E-10",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.037689097",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.4237958",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.014336123",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "9.00496E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "8.189897E-4",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.001158E-7",
    "erev" : "-87.28875"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "9.713781E-4",
    "erev" : "-87.28875"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.0E-7",
    "erev" : "-87.28875"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "1.2328998E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0027795825",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_478513224",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_478513224

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_5
create dend_17
public dend_17
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_34, dend_33, dend_26, dend_23, dend_20, dend_5, dend_0, dend_30, dend_27, dend_25, dend_24, dend_22, dend_21, dend_17, dend_6, dend_4, dend_1, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_12, dend_7, dend_3, dend_2, dend_16, dend_13, dend_11, dend_8, dend_15, dend_14, dend_10, dend_9]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_25193, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_25193
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513224
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.500039831116067)
    connect dend_34(0), soma_0(0.500039831116067)
    connect dend_33(0), soma_0(0.500039831116067)
    connect dend_26(0), soma_0(0.500039831116067)
    connect dend_23(0), soma_0(0.500039831116067)
    connect dend_20(0), soma_0(0.500039831116067)
    connect dend_5(0), soma_0(0.500039831116067)
    connect dend_0(0), soma_0(0.500039831116067)
    connect axon_1(0), axon_0(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 389.433, 376.147, 45.36, 12.5526 ) }
    soma_0 { pt3dadd( 395.71, 376.147, 45.36, 12.5526 ) }
    soma_0 { pt3dadd( 401.986, 376.147, 45.36, 12.5526 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 395.71, 376.147, 45.36, 1.0 ) }
    axon_0 { pt3dadd( 401.551, 389.963, 45.36, 1.0 ) }
    axon_0 { pt3dadd( 407.392, 403.779, 45.36, 1.0 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 6/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 400.868, 372.809, 44.2355, 0.3814 ) }
    dend_34 { pt3dadd( 401.799, 372.154, 44.0745, 0.3304 ) }
    dend_34 { pt3dadd( 402.417, 371.259, 44.0154, 0.2796 ) }
    dend_34 { pt3dadd( 402.655, 370.14, 43.9502, 0.2288 ) }
    dend_34 { pt3dadd( 403.739, 369.963, 43.8749, 0.2288 ) }
    dend_34 { pt3dadd( 404.868, 369.782, 43.7875, 0.2542 ) }
    dend_34 { pt3dadd( 405.903, 369.338, 43.6864, 0.3304 ) }
    dend_34 { pt3dadd( 406.417, 368.425, 43.5064, 0.4322 ) }
    dend_34 { pt3dadd( 406.693, 367.35, 43.2292, 0.5084 ) }
    dend_34 { pt3dadd( 407.322, 366.416, 42.9674, 0.5592 ) }
    dend_34 { pt3dadd( 408.021, 365.511, 42.7386, 0.5592 ) }
    dend_34 { pt3dadd( 408.747, 364.634, 42.5239, 0.5592 ) }
    dend_34 { pt3dadd( 409.562, 363.856, 42.271, 0.5084 ) }
    dend_34 { pt3dadd( 410.378, 363.078, 41.9975, 0.5338 ) }
    dend_34 { pt3dadd( 411.325, 362.468, 41.7508, 0.5848 ) }
    dend_34 { pt3dadd( 412.35, 361.962, 41.5433, 0.6356 ) }
    dend_34 { pt3dadd( 413.355, 361.426, 41.3557, 0.6356 ) }
    dend_34 { pt3dadd( 414.292, 360.79, 41.1452, 0.5848 ) }
    dend_34 { pt3dadd( 415.227, 360.153, 40.9265, 0.5338 ) }
    dend_34 { pt3dadd( 416.165, 359.516, 40.7137, 0.483 ) }
    dend_34 { pt3dadd( 417.109, 358.871, 40.556, 0.5084 ) }
    dend_34 { pt3dadd( 418.055, 358.226, 40.4446, 0.6102 ) }
    dend_34 { pt3dadd( 419.057, 357.682, 40.3752, 0.7118 ) }
    dend_34 { pt3dadd( 420.094, 357.198, 40.3413, 0.7372 ) }
    dend_34 { pt3dadd( 421.13, 356.713, 40.3284, 0.6864 ) }
    dend_34 { pt3dadd( 422.158, 357.13, 40.3234, 0.5848 ) }
    dend_34 { pt3dadd( 423.216, 357.562, 40.3166, 0.4576 ) }
    dend_34 { pt3dadd( 424.296, 357.94, 40.3066, 0.3304 ) }
    dend_34 { pt3dadd( 425.414, 358.167, 40.2926, 0.2796 ) }
    dend_34 { pt3dadd( 426.51, 357.908, 40.2738, 0.305 ) }
    dend_34 { pt3dadd( 427.601, 357.562, 40.2497, 0.356 ) }
    dend_34 { pt3dadd( 428.704, 357.66, 40.2086, 0.356 ) }
    dend_34 { pt3dadd( 429.81, 357.944, 40.1503, 0.305 ) }
    dend_34 { pt3dadd( 430.917, 358.228, 40.0806, 0.2542 ) }
    dend_34 { pt3dadd( 432.025, 358.512, 40.0056, 0.2288 ) }
    dend_34 { pt3dadd( 433.132, 358.796, 39.9302, 0.2796 ) }
    dend_34 { pt3dadd( 434.23, 359.102, 39.8625, 0.356 ) }
    dend_34 { pt3dadd( 435.19, 359.724, 39.8205, 0.4322 ) }
    dend_34 { pt3dadd( 436.15, 360.346, 39.7995, 0.4576 ) }
    dend_34 { pt3dadd( 437.224, 360.631, 39.7944, 0.483 ) }
    dend_34 { pt3dadd( 438.365, 360.717, 39.8009, 0.5084 ) }
    dend_34 { pt3dadd( 439.279, 360.774, 39.8913, 0.5084 ) }
    dend_34 { pt3dadd( 440.388, 361.025, 39.9207, 0.4322 ) }
    dend_34 { pt3dadd( 441.496, 361.193, 39.9095, 0.4068 ) }
    dend_34 { pt3dadd( 442.59, 360.855, 39.9081, 0.3814 ) }
    dend_34 { pt3dadd( 443.682, 360.517, 39.9171, 0.4068 ) }
    dend_34 { pt3dadd( 444.728, 360.059, 39.9571, 0.3304 ) }
    dend_34 { pt3dadd( 445.768, 359.586, 40.0238, 0.2796 ) }
    dend_34 { pt3dadd( 446.806, 359.112, 40.1234, 0.2288 ) }
    dend_34 { pt3dadd( 447.846, 358.638, 40.2422, 0.2542 ) }
    dend_34 { pt3dadd( 448.89, 358.172, 40.35, 0.305 ) }
    dend_34 { pt3dadd( 449.935, 357.705, 40.4449, 0.3814 ) }
    dend_34 { pt3dadd( 450.98, 357.239, 40.5266, 0.4068 ) }
    dend_34 { pt3dadd( 452.022, 356.795, 40.6361, 0.4068 ) }
    dend_34 { pt3dadd( 453.061, 356.377, 40.8022, 0.356 ) }
    dend_34 { pt3dadd( 454.13, 356.081, 40.9721, 0.3304 ) }
    dend_34 { pt3dadd( 455.273, 356.085, 41.0684, 0.305 ) }
    dend_34 { pt3dadd( 456.418, 356.088, 41.0897, 0.3304 ) }
    dend_34 { pt3dadd( 457.562, 356.092, 41.0362, 0.3814 ) }
    dend_34 { pt3dadd( 458.65, 356.295, 40.8668, 0.4068 ) }
    dend_34 { pt3dadd( 459.674, 356.727, 40.5569, 0.4068 ) }
    dend_34 { pt3dadd( 460.471, 357.45, 40.1652, 0.356 ) }
    dend_34 { pt3dadd( 461.117, 358.368, 39.7368, 0.3814 ) }
    dend_34 { pt3dadd( 461.729, 359.314, 39.3187, 0.4068 ) }
    dend_34 { pt3dadd( 462.145, 360.358, 38.9519, 0.483 ) }
    dend_34 { pt3dadd( 462.326, 361.465, 38.5851, 0.483 ) }
    dend_34 { pt3dadd( 462.535, 362.565, 38.2332, 0.483 ) }
    dend_34 { pt3dadd( 463.086, 363.568, 37.9646, 0.4322 ) }
    dend_34 { pt3dadd( 463.258, 364.673, 37.7527, 0.3814 ) }
    dend_34 { pt3dadd( 463.293, 365.816, 37.5752, 0.305 ) }
    dend_34 { pt3dadd( 462.928, 366.797, 37.3842, 0.2542 ) }
    dend_34 { pt3dadd( 462.144, 367.606, 37.1484, 0.2542 ) }
    dend_34 { pt3dadd( 461.359, 368.415, 36.8757, 0.2796 ) }
    dend_34 { pt3dadd( 460.576, 369.224, 36.5753, 0.3304 ) }
    dend_34 { pt3dadd( 459.996, 370.185, 36.3118, 0.356 ) }
    dend_34 { pt3dadd( 459.532, 371.23, 36.1122, 0.4068 ) }
    dend_34 { pt3dadd( 459.069, 372.276, 35.9668, 0.4068 ) }
    dend_34 { pt3dadd( 458.646, 373.336, 35.861, 0.3814 ) }
    dend_34 { pt3dadd( 458.353, 374.441, 35.7734, 0.305 ) }
    dend_34 { pt3dadd( 458.059, 375.548, 35.6868, 0.2796 ) }
    dend_34 { pt3dadd( 458.775, 376.343, 35.5449, 0.2796 ) }
    dend_34 { pt3dadd( 459.624, 377.098, 35.3486, 0.305 ) }
    dend_34 { pt3dadd( 460.474, 377.853, 35.1131, 0.2796 ) }
    dend_34 { pt3dadd( 461.319, 378.612, 34.8555, 0.2542 ) }
    dend_34 { pt3dadd( 462.098, 379.45, 34.6326, 0.2288 ) }
    dend_34 { pt3dadd( 462.973, 380.133, 34.3804, 0.2288 ) }
    dend_34 { pt3dadd( 463.91, 380.714, 34.0777, 0.2288 ) }
    dend_34 { pt3dadd( 465.04, 380.767, 33.8486, 0.2542 ) }
    dend_34 { pt3dadd( 466.185, 380.783, 33.689, 0.2796 ) }
    dend_34 { pt3dadd( 467.329, 380.798, 33.514, 0.305 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 96/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 392.234, 381.463, 45.3454, 0.356 ) }
    dend_33 { pt3dadd( 392.079, 382.59, 45.6518, 0.3814 ) }
    dend_33 { pt3dadd( 391.891, 383.706, 45.7926, 0.4322 ) }
    dend_33 { pt3dadd( 391.329, 384.703, 45.92, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_33 { pt3dadd( 390.951, 385.754, 46.0412, 0.4576 ) }
    dend_33 { pt3dadd( 391.036, 386.875, 46.1639, 0.5084 ) }
    dend_33 { pt3dadd( 391.66, 387.766, 46.2935, 0.5592 ) }
    dend_33 { pt3dadd( 392.757, 387.664, 46.4335, 0.5084 ) }
    dend_33 { pt3dadd( 393.62, 387.795, 46.6539, 0.4576 ) }
    dend_33 { pt3dadd( 394.333, 388.626, 47.0019, 0.4576 ) }
    dend_33 { pt3dadd( 394.995, 389.501, 47.4132, 0.5338 ) }
    dend_33 { pt3dadd( 395.51, 390.51, 47.7666, 0.5084 ) }
    dend_33 { pt3dadd( 396.339, 391.229, 48.0962, 0.483 ) }
    dend_33 { pt3dadd( 397.359, 391.327, 48.5195, 0.4576 ) }
    dend_33 { pt3dadd( 398.359, 390.808, 48.8452, 0.5338 ) }
    dend_33 { pt3dadd( 399.493, 390.66, 49.0952, 0.5592 ) }
    dend_33 { pt3dadd( 400.628, 390.54, 49.3122, 0.5084 ) }
    dend_33 { pt3dadd( 401.759, 390.514, 49.5566, 0.4322 ) }
    dend_33 { pt3dadd( 402.891, 390.486, 49.8106, 0.356 ) }
    dend_33 { pt3dadd( 404.022, 390.46, 50.0612, 0.356 ) }
    dend_33 { pt3dadd( 405.153, 390.432, 50.3168, 0.356 ) }
    dend_33 { pt3dadd( 406.208, 390.062, 50.517, 0.4068 ) }
    dend_33 { pt3dadd( 407.221, 389.533, 50.6428, 0.4322 ) }
    dend_33 { pt3dadd( 408.234, 388.999, 50.7018, 0.4576 ) }
    dend_33 { pt3dadd( 409.329, 388.711, 50.694, 0.4322 ) }
    dend_33 { pt3dadd( 410.453, 388.509, 50.6355, 0.4068 ) }
    dend_33 { pt3dadd( 411.578, 388.308, 50.5464, 0.4322 ) }
    dend_33 { pt3dadd( 412.703, 388.107, 50.4468, 0.483 ) }
    dend_33 { pt3dadd( 413.839, 388.08, 50.3597, 0.5848 ) }
    dend_33 { pt3dadd( 414.98, 388.14, 50.2928, 0.5848 ) }
    dend_33 { pt3dadd( 416.122, 388.199, 50.2429, 0.6356 ) }
    dend_33 { pt3dadd( 417.16, 388.529, 50.2034, 0.5592 ) }
    dend_33 { pt3dadd( 418.034, 389.267, 50.1651, 0.5338 ) }
    dend_33 { pt3dadd( 418.888, 390.027, 50.1197, 0.4576 ) }
    dend_33 { pt3dadd( 419.87, 390.519, 50.0604, 0.4576 ) }
    dend_33 { pt3dadd( 421.0, 390.698, 49.9862, 0.4576 ) }
    dend_33 { pt3dadd( 422.071, 391.01, 49.8708, 0.4576 ) }
    dend_33 { pt3dadd( 423.016, 391.608, 49.667, 0.4576 ) }
    dend_33 { pt3dadd( 424.001, 392.116, 49.4236, 0.4576 ) }
    dend_33 { pt3dadd( 425.128, 392.315, 49.2257, 0.4322 ) }
    dend_33 { pt3dadd( 426.238, 392.564, 49.0672, 0.4322 ) }
    dend_33 { pt3dadd( 427.273, 393.052, 48.9412, 0.4068 ) }
    dend_33 { pt3dadd( 428.018, 393.844, 48.8418, 0.4068 ) }
    dend_33 { pt3dadd( 428.553, 394.855, 48.7589, 0.3814 ) }
    dend_33 { pt3dadd( 429.445, 395.535, 48.6298, 0.4322 ) }
    dend_33 { pt3dadd( 430.383, 396.173, 48.4532, 0.483 ) }
    dend_33 { pt3dadd( 431.32, 396.811, 48.2465, 0.5848 ) }
    dend_33 { pt3dadd( 432.351, 397.211, 48.0505, 0.5848 ) }
    dend_33 { pt3dadd( 433.489, 397.331, 47.899, 0.5592 ) }
    dend_33 { pt3dadd( 434.626, 397.45, 47.7848, 0.4322 ) }
    dend_33 { pt3dadd( 435.764, 397.565, 47.7008, 0.4068 ) }
    dend_33 { pt3dadd( 436.501, 398.406, 47.6336, 0.4322 ) }
    dend_33 { pt3dadd( 437.264, 399.239, 47.5709, 0.5084 ) }
    dend_33 { pt3dadd( 438.266, 399.789, 47.5028, 0.5084 ) }
    dend_33 { pt3dadd( 439.095, 400.281, 47.3217, 0.4576 ) }
    dend_33 { pt3dadd( 439.938, 400.869, 47.1271, 0.3814 ) }
    dend_33 { pt3dadd( 441.074, 400.972, 46.9742, 0.305 ) }
    dend_33 { pt3dadd( 442.217, 400.972, 46.8605, 0.2542 ) }
    dend_33 { pt3dadd( 443.362, 400.972, 46.7824, 0.2288 ) }
    dend_33 { pt3dadd( 444.506, 400.972, 46.7348, 0.2288 ) }
    dend_33 { pt3dadd( 445.587, 401.284, 46.7127, 0.2542 ) }
    dend_33 { pt3dadd( 446.272, 402.149, 46.6939, 0.305 ) }
    dend_33 { pt3dadd( 446.945, 403.028, 46.6693, 0.3814 ) }
    dend_33 { pt3dadd( 447.703, 403.882, 46.6376, 0.4322 ) }
    dend_33 { pt3dadd( 448.676, 404.452, 46.5702, 0.483 ) }
    dend_33 { pt3dadd( 449.571, 405.114, 46.4951, 0.5084 ) }
    dend_33 { pt3dadd( 450.202, 406.065, 46.4262, 0.5084 ) }
    dend_33 { pt3dadd( 450.687, 407.063, 46.3252, 0.4322 ) }
    dend_33 { pt3dadd( 451.561, 407.753, 46.2361, 0.356 ) }
    dend_33 { pt3dadd( 452.629, 408.154, 46.1611, 0.305 ) }
    dend_33 { pt3dadd( 453.682, 408.578, 46.0961, 0.3304 ) }
    dend_33 { pt3dadd( 454.655, 409.178, 46.0306, 0.356 ) }
    dend_33 { pt3dadd( 455.632, 409.759, 45.9239, 0.4068 ) }
    dend_33 { pt3dadd( 456.576, 410.4, 45.8245, 0.4576 ) }
    dend_33 { pt3dadd( 457.375, 411.216, 45.7246, 0.5338 ) }
    dend_33 { pt3dadd( 458.121, 412.054, 45.5834, 0.6102 ) }
    dend_33 { pt3dadd( 458.919, 412.816, 45.3995, 0.6356 ) }
    dend_33 { pt3dadd( 459.893, 413.391, 45.2138, 0.6356 ) }
    dend_33 { pt3dadd( 460.746, 414.142, 45.0349, 0.5848 ) }
    dend_33 { pt3dadd( 461.392, 415.078, 44.8972, 0.5848 ) }
    dend_33 { pt3dadd( 462.002, 416.043, 44.798, 0.5848 ) }
    dend_33 { pt3dadd( 462.73, 416.907, 44.6944, 0.5848 ) }
    dend_33 { pt3dadd( 463.584, 417.656, 44.63, 0.5592 ) }
    dend_33 { pt3dadd( 464.599, 418.163, 44.5925, 0.5338 ) }
    dend_33 { pt3dadd( 465.599, 418.706, 44.5746, 0.5592 ) }
    dend_33 { pt3dadd( 466.467, 419.448, 44.5701, 0.5338 ) }
    dend_33 { pt3dadd( 467.428, 420.062, 44.5796, 0.5084 ) }
    dend_33 { pt3dadd( 468.546, 420.2, 44.6032, 0.483 ) }
    dend_33 { pt3dadd( 469.521, 420.701, 44.6348, 0.5084 ) }
    dend_33 { pt3dadd( 470.286, 421.55, 44.6824, 0.5338 ) }
    dend_33 { pt3dadd( 471.19, 422.19, 44.7502, 0.5338 ) }
    dend_33 { pt3dadd( 472.16, 422.776, 44.8409, 0.5592 ) }
    dend_33 { pt3dadd( 472.98, 423.569, 44.9543, 0.5592 ) }
    dend_33 { pt3dadd( 473.717, 424.437, 45.0898, 0.5084 ) }
    dend_33 { pt3dadd( 473.908, 425.312, 45.4871, 0.3304 ) }
    dend_33 { pt3dadd( 474.189, 426.409, 45.8245, 0.305 ) }
    dend_33 { pt3dadd( 474.977, 426.956, 46.1084, 0.3304 ) }
    dend_33 { pt3dadd( 475.217, 428.047, 46.3481, 0.3304 ) }
    dend_33 { pt3dadd( 475.426, 429.156, 46.5573, 0.3304 ) }
    dend_33 { pt3dadd( 475.561, 430.233, 46.8177, 0.305 ) }
    dend_33 { pt3dadd( 475.561, 431.377, 47.0406, 0.305 ) }
    dend_33 { pt3dadd( 475.561, 432.521, 47.2772, 0.305 ) }
    dend_33 { pt3dadd( 475.561, 433.607, 47.6395, 0.2796 ) }
    dend_33 { pt3dadd( 475.561, 434.714, 48.069, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_33 { pt3dadd( 475.375, 435.809, 48.4473, 0.2288 ) }
    dend_33 { pt3dadd( 475.217, 436.562, 49.0087, 0.2288 ) }
    dend_33 { pt3dadd( 475.217, 437.641, 49.5138, 0.2542 ) }
    dend_33 { pt3dadd( 475.226, 438.785, 49.9055, 0.3304 ) }
    dend_33 { pt3dadd( 475.658, 439.815, 50.1964, 0.4322 ) }
    dend_33 { pt3dadd( 476.053, 440.872, 50.4577, 0.5338 ) }
    dend_33 { pt3dadd( 476.447, 441.936, 50.6926, 0.5338 ) }
    dend_33 { pt3dadd( 477.013, 442.889, 50.9163, 0.5084 ) }
    dend_33 { pt3dadd( 477.303, 443.956, 51.1459, 0.4322 ) }
    dend_33 { pt3dadd( 477.704, 445.002, 51.3811, 0.4322 ) }
    dend_33 { pt3dadd( 478.108, 446.059, 51.6116, 0.4322 ) }
    dend_33 { pt3dadd( 478.43, 447.142, 51.8266, 0.4322 ) }
    dend_33 { pt3dadd( 478.557, 448.276, 51.9865, 0.4068 ) }
    dend_33 { pt3dadd( 479.04, 449.23, 52.1044, 0.4068 ) }
    dend_33 { pt3dadd( 479.246, 450.355, 52.1954, 0.4322 ) }
    dend_33 { pt3dadd( 479.721, 451.385, 52.2757, 0.4322 ) }
    dend_33 { pt3dadd( 480.046, 452.47, 52.3866, 0.3814 ) }
    dend_33 { pt3dadd( 480.587, 453.475, 52.4922, 0.3304 ) }
    dend_33 { pt3dadd( 481.125, 454.472, 52.6372, 0.305 ) }
    dend_33 { pt3dadd( 481.281, 455.596, 52.7792, 0.2796 ) }
    dend_33 { pt3dadd( 481.479, 456.702, 52.9256, 0.2542 ) }
    dend_33 { pt3dadd( 481.51, 457.794, 53.1672, 0.2288 ) }
    dend_33 { pt3dadd( 481.51, 458.931, 53.3963, 0.2288 ) }
    dend_33 { pt3dadd( 481.51, 460.074, 53.5735, 0.2288 ) }
    dend_33 { pt3dadd( 481.51, 461.219, 53.7043, 0.2288 ) }
    dend_33 { pt3dadd( 481.478, 462.362, 53.8009, 0.2288 ) }
    dend_33 { pt3dadd( 480.971, 463.376, 53.872, 0.2288 ) }
    dend_33 { pt3dadd( 480.716, 464.479, 53.9258, 0.2288 ) }
    dend_33 { pt3dadd( 480.47, 465.591, 53.9851, 0.2288 ) }
    dend_33 { pt3dadd( 480.135, 466.641, 54.0966, 0.2288 ) }
    dend_33 { pt3dadd( 479.608, 467.656, 54.2049, 0.2288 ) }
    dend_33 { pt3dadd( 479.346, 468.618, 54.4186, 0.2288 ) }
    dend_33 { pt3dadd( 479.495, 469.738, 54.6014, 0.2288 ) }
    dend_33 { pt3dadd( 479.984, 470.635, 54.7422, 0.2288 ) }
    dend_33 { pt3dadd( 480.697, 471.435, 54.8458, 0.2288 ) }
    dend_33 { pt3dadd( 481.036, 472.527, 54.9175, 0.2542 ) }
    dend_33 { pt3dadd( 481.299, 473.635, 54.9688, 0.305 ) }
    dend_33 { pt3dadd( 481.902, 474.584, 55.0026, 0.4068 ) }
    dend_33 { pt3dadd( 482.654, 475.316, 55.0494, 0.483 ) }
    dend_33 { pt3dadd( 483.221, 476.245, 55.1471, 0.5084 ) }
    dend_33 { pt3dadd( 484.2, 476.818, 55.2479, 0.4322 ) }
    dend_33 { pt3dadd( 484.653, 477.769, 55.3258, 0.3304 ) }
    dend_33 { pt3dadd( 484.984, 478.829, 55.3818, 0.2542 ) }
    dend_33 { pt3dadd( 485.951, 479.434, 55.4179, 0.2288 ) }
    dend_33 { pt3dadd( 486.936, 479.993, 55.4361, 0.2288 ) }
    dend_33 { pt3dadd( 487.996, 480.338, 55.44, 0.2288 ) }
    dend_33 { pt3dadd( 488.536, 481.248, 55.44, 0.2288 ) }
    dend_33 { pt3dadd( 489.289, 482.082, 55.44, 0.2542 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 48/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 398.789, 370.265, 45.306, 0.3814 ) }
    dend_26 { pt3dadd( 399.311, 369.247, 45.421, 0.3814 ) }
    dend_26 { pt3dadd( 399.806, 368.216, 45.4712, 0.4068 ) }
    dend_26 { pt3dadd( 400.281, 367.177, 45.5448, 0.4322 ) }
    dend_26 { pt3dadd( 400.756, 366.138, 45.6347, 0.4576 ) }
    dend_26 { pt3dadd( 401.229, 365.098, 45.7332, 0.4576 ) }
    dend_26 { pt3dadd( 401.622, 364.03, 45.8262, 0.483 ) }
    dend_26 { pt3dadd( 401.904, 362.921, 45.899, 0.5084 ) }
    dend_26 { pt3dadd( 401.704, 361.808, 45.9553, 0.5338 ) }
    dend_26 { pt3dadd( 401.446, 360.694, 46.0009, 0.5592 ) }
    dend_26 { pt3dadd( 401.196, 359.578, 46.0443, 0.5338 ) }
    dend_26 { pt3dadd( 400.947, 358.461, 46.0911, 0.483 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 60/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 391.232, 380.269, 44.1728, 0.3814 ) }
    dend_23 { pt3dadd( 390.182, 380.549, 43.3586, 0.5084 ) }
    dend_23 { pt3dadd( 389.243, 381.165, 43.0486, 0.6102 ) }
    dend_23 { pt3dadd( 388.267, 381.754, 42.7342, 0.661 ) }
    dend_23 { pt3dadd( 387.234, 382.073, 42.331, 0.6864 ) }
    dend_23 { pt3dadd( 386.161, 382.239, 41.8653, 0.6356 ) }
    dend_23 { pt3dadd( 385.086, 382.574, 41.5164, 0.5592 ) }
    dend_23 { pt3dadd( 384.022, 382.938, 41.3123, 0.4576 ) }
    dend_23 { pt3dadd( 382.928, 383.24, 41.0911, 0.4068 ) }
    dend_23 { pt3dadd( 381.836, 383.136, 40.7784, 0.3814 ) }
    dend_23 { pt3dadd( 380.924, 382.472, 40.4684, 0.4322 ) }
    dend_23 { pt3dadd( 380.034, 381.816, 40.075, 0.483 ) }
    dend_23 { pt3dadd( 379.046, 381.475, 39.5466, 0.5338 ) }
    dend_23 { pt3dadd( 377.92, 381.339, 39.0508, 0.5084 ) }
    dend_23 { pt3dadd( 376.898, 381.84, 38.6495, 0.483 ) }
    dend_23 { pt3dadd( 376.007, 382.555, 38.3298, 0.5084 ) }
    dend_23 { pt3dadd( 375.159, 383.305, 38.0369, 0.5848 ) }
    dend_23 { pt3dadd( 374.358, 383.725, 37.6012, 0.6356 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 78/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 395.775, 370.217, 46.8588, 0.4068 ) }
    dend_20 { pt3dadd( 395.066, 369.353, 47.301, 0.4068 ) }
    dend_20 { pt3dadd( 394.866, 368.273, 47.4079, 0.4576 ) }
    dend_20 { pt3dadd( 395.154, 367.263, 47.6395, 0.483 ) }
    dend_20 { pt3dadd( 395.615, 366.242, 47.9186, 0.5338 ) }
    dend_20 { pt3dadd( 396.393, 365.473, 48.071, 0.5338 ) }
    dend_20 { pt3dadd( 397.463, 365.11, 48.2121, 0.5084 ) }
    dend_20 { pt3dadd( 398.525, 364.711, 48.4072, 0.5084 ) }
    dend_20 { pt3dadd( 399.396, 364.028, 48.6948, 0.483 ) }
    dend_20 { pt3dadd( 399.755, 362.966, 49.0, 0.5084 ) }
    dend_20 { pt3dadd( 399.413, 362.079, 49.4827, 0.4576 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 89/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 390.202, 379.35, 46.2563, 0.3304 ) }
    dend_5 { pt3dadd( 389.095, 379.373, 46.6393, 0.4068 ) }
    dend_5 { pt3dadd( 387.962, 379.487, 46.9798, 0.4322 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 401.879, 374.297, 43.5772, 0.5592 ) }
    dend_0 { pt3dadd( 402.808, 373.777, 44.2534, 0.483 ) }
    dend_0 { pt3dadd( 403.845, 373.545, 44.5956, 0.4322 ) }
    dend_0 { pt3dadd( 404.903, 373.816, 44.844, 0.4322 ) }
    dend_0 { pt3dadd( 405.874, 374.4, 44.9744, 0.4576 ) }
    dend_0 { pt3dadd( 406.924, 374.816, 45.0117, 0.483 ) }
    dend_0 { pt3dadd( 408.019, 375.134, 45.0293, 0.5338 ) }
    dend_0 { pt3dadd( 409.128, 375.193, 44.9344, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_0 { pt3dadd( 410.229, 374.936, 44.8252, 0.5338 ) }
    dend_0 { pt3dadd( 411.079, 374.198, 44.7555, 0.5084 ) }
    dend_0 { pt3dadd( 412.04, 373.641, 44.8034, 0.5592 ) }
    dend_0 { pt3dadd( 413.142, 373.42, 44.8104, 0.7118 ) }
    dend_0 { pt3dadd( 414.27, 373.395, 44.8689, 0.8644 ) }
    dend_0 { pt3dadd( 415.409, 373.35, 44.94, 0.966 ) }
    dend_0 { pt3dadd( 416.514, 373.066, 44.9669, 0.9406 ) }
    dend_0 { pt3dadd( 417.462, 372.46, 44.9025, 0.8898 ) }
    dend_0 { pt3dadd( 418.363, 371.785, 44.7639, 0.839 ) }
    dend_0 { pt3dadd( 419.215, 371.024, 44.651, 0.839 ) }
    dend_0 { pt3dadd( 420.148, 370.363, 44.5735, 0.8136 ) }
    dend_0 { pt3dadd( 420.995, 369.634, 44.6012, 0.788 ) }
    dend_0 { pt3dadd( 421.835, 368.875, 44.681, 0.7626 ) }
    dend_0 { pt3dadd( 422.806, 368.274, 44.7222, 0.7118 ) }
    dend_0 { pt3dadd( 423.9, 368.01, 44.6552, 0.5848 ) }
    dend_0 { pt3dadd( 424.996, 368.235, 44.4749, 0.2288 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 16/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 407.392, 403.779, 45.36, 1.0 ) }
    axon_1 { pt3dadd( 413.233, 417.595, 45.36, 1.0 ) }
    axon_1 { pt3dadd( 419.075, 431.411, 45.36, 1.0 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 19/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 400.947, 358.461, 46.0911, 0.483 ) }
    dend_30 { pt3dadd( 401.353, 357.827, 45.4916, 0.3304 ) }
    dend_30 { pt3dadd( 401.979, 356.913, 44.7451, 0.3814 ) }
    dend_30 { pt3dadd( 402.605, 355.999, 44.3974, 0.4322 ) }
    dend_30 { pt3dadd( 402.457, 354.884, 44.0712, 0.483 ) }
    dend_30 { pt3dadd( 402.18, 353.788, 43.7665, 0.4576 ) }
    dend_30 { pt3dadd( 401.581, 352.813, 43.4798, 0.4322 ) }
    dend_30 { pt3dadd( 400.995, 351.891, 43.1376, 0.3304 ) }
    dend_30 { pt3dadd( 400.43, 351.056, 42.6488, 0.3304 ) }
    dend_30 { pt3dadd( 399.875, 350.231, 42.0563, 0.3304 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 29/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 400.947, 358.461, 46.0911, 0.483 ) }
    dend_27 { pt3dadd( 401.353, 357.796, 46.1636, 0.356 ) }
    dend_27 { pt3dadd( 401.949, 356.822, 46.263, 0.5084 ) }
    dend_27 { pt3dadd( 402.544, 355.848, 46.3798, 0.661 ) }
    dend_27 { pt3dadd( 403.161, 355.008, 46.5578, 0.661 ) }
    dend_27 { pt3dadd( 403.862, 354.185, 46.695, 0.5848 ) }
    dend_27 { pt3dadd( 404.299, 353.177, 46.7197, 0.483 ) }
    dend_27 { pt3dadd( 404.395, 352.059, 46.6894, 0.4576 ) }
    dend_27 { pt3dadd( 404.35, 350.938, 46.7312, 0.4322 ) }
    dend_27 { pt3dadd( 404.258, 349.808, 46.8404, 0.356 ) }
    dend_27 { pt3dadd( 404.693, 348.855, 47.054, 0.3304 ) }
    dend_27 { pt3dadd( 405.34, 347.927, 47.3071, 0.356 ) }
    dend_27 { pt3dadd( 405.327, 346.853, 47.5462, 0.483 ) }
    dend_27 { pt3dadd( 404.775, 345.868, 47.7534, 0.5592 ) }
    dend_27 { pt3dadd( 404.095, 344.956, 47.9562, 0.5848 ) }
    dend_27 { pt3dadd( 403.424, 344.065, 48.2017, 0.5338 ) }
    dend_27 { pt3dadd( 402.732, 343.162, 48.4145, 0.4576 ) }
    dend_27 { pt3dadd( 402.526, 342.067, 48.5688, 0.4068 ) }
    dend_27 { pt3dadd( 402.559, 340.951, 48.6265, 0.4068 ) }
    dend_27 { pt3dadd( 402.535, 339.841, 48.7715, 0.4322 ) }
    dend_27 { pt3dadd( 402.316, 338.738, 48.9773, 0.483 ) }
    dend_27 { pt3dadd( 402.199, 337.642, 49.266, 0.5084 ) }
    dend_27 { pt3dadd( 402.445, 336.536, 49.5396, 0.5592 ) }
    dend_27 { pt3dadd( 402.392, 335.399, 49.7834, 0.5848 ) }
    dend_27 { pt3dadd( 401.967, 334.343, 49.987, 0.5592 ) }
    dend_27 { pt3dadd( 401.697, 333.269, 50.0828, 0.4576 ) }
    dend_27 { pt3dadd( 401.846, 332.181, 50.3154, 0.3304 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 56/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 374.358, 383.725, 37.6012, 0.6356 ) }
    dend_25 { pt3dadd( 374.098, 382.817, 35.488, 0.3304 ) }
    dend_25 { pt3dadd( 373.394, 382.438, 34.7791, 0.2796 ) }
    dend_25 { pt3dadd( 372.292, 382.748, 34.515, 0.2796 ) }
    dend_25 { pt3dadd( 371.877, 382.225, 34.2331, 0.2796 ) }
    dend_25 { pt3dadd( 371.284, 381.278, 33.9251, 0.305 ) }
    dend_25 { pt3dadd( 370.506, 380.767, 33.5115, 0.2796 ) }
    dend_25 { pt3dadd( 369.544, 380.975, 32.886, 0.2542 ) }
    dend_25 { pt3dadd( 369.57, 380.475, 32.1773, 0.2288 ) }
    dend_25 { pt3dadd( 370.182, 379.554, 31.4457, 0.2288 ) }
    dend_25 { pt3dadd( 370.743, 378.631, 30.7182, 0.2542 ) }
    dend_25 { pt3dadd( 370.18, 377.658, 30.0446, 0.2796 ) }
    dend_25 { pt3dadd( 369.615, 376.686, 29.433, 0.305 ) }
    dend_25 { pt3dadd( 369.049, 375.714, 28.8716, 0.305 ) }
    dend_25 { pt3dadd( 368.486, 374.74, 28.3444, 0.305 ) }
    dend_25 { pt3dadd( 367.984, 373.75, 27.8387, 0.3304 ) }
    dend_25 { pt3dadd( 367.749, 372.685, 27.3214, 0.3814 ) }
    dend_25 { pt3dadd( 367.515, 371.62, 26.8096, 0.483 ) }
    dend_25 { pt3dadd( 366.564, 370.986, 26.0663, 0.5338 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 75/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 374.358, 383.725, 37.6012, 0.6356 ) }
    dend_24 { pt3dadd( 373.344, 383.248, 37.1879, 0.4322 ) }
    dend_24 { pt3dadd( 372.252, 383.011, 37.0098, 0.356 ) }
    dend_24 { pt3dadd( 371.221, 383.012, 37.135, 0.305 ) }
    dend_24 { pt3dadd( 370.13, 383.02, 37.4338, 0.305 ) }
    dend_24 { pt3dadd( 369.084, 383.084, 37.8815, 0.356 ) }
    dend_24 { pt3dadd( 368.036, 383.271, 38.2976, 0.3814 ) }
    dend_24 { pt3dadd( 366.93, 383.229, 38.5389, 0.4322 ) }
    dend_24 { pt3dadd( 365.868, 383.388, 38.705, 0.3814 ) }
    dend_24 { pt3dadd( 364.862, 383.875, 38.733, 0.4068 ) }
    dend_24 { pt3dadd( 363.849, 384.381, 38.6151, 0.3814 ) }
    dend_24 { pt3dadd( 362.792, 384.805, 38.4322, 0.4322 ) }
    dend_24 { pt3dadd( 361.716, 385.184, 38.2169, 0.3814 ) }
    dend_24 { pt3dadd( 360.655, 385.517, 37.9187, 0.3814 ) }
    dend_24 { pt3dadd( 359.746, 386.149, 37.5984, 0.356 ) }
    dend_24 { pt3dadd( 359.068, 387.059, 37.298, 0.3814 ) }
    dend_24 { pt3dadd( 358.578, 388.062, 36.9572, 0.3814 ) }
    dend_24 { pt3dadd( 357.764, 388.778, 36.6792, 0.3814 ) }
    dend_24 { pt3dadd( 356.69, 388.714, 36.3756, 0.4068 ) }
    dend_24 { pt3dadd( 355.584, 388.895, 36.0318, 0.4322 ) }
    dend_24 { pt3dadd( 354.615, 389.466, 35.6412, 0.4576 ) }
    dend_24 { pt3dadd( 353.765, 390.137, 35.1392, 0.4322 ) }
    dend_24 { pt3dadd( 352.819, 390.681, 34.5612, 0.4068 ) }
    dend_24 { pt3dadd( 351.682, 390.686, 34.0365, 0.3814 ) }
    dend_24 { pt3dadd( 350.631, 390.244, 33.57, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_24 { pt3dadd( 349.523, 389.98, 33.1299, 0.356 ) }
    dend_24 { pt3dadd( 349.338, 390.315, 32.3652, 0.305 ) }
    dend_24 { pt3dadd( 348.574, 390.447, 31.619, 0.2542 ) }
    dend_24 { pt3dadd( 347.878, 391.233, 31.0598, 0.2288 ) }
    dend_24 { pt3dadd( 347.094, 391.969, 30.6544, 0.2288 ) }
    dend_24 { pt3dadd( 346.388, 392.757, 30.3878, 0.2288 ) }
    dend_24 { pt3dadd( 345.902, 393.698, 30.2453, 0.2288 ) }
    dend_24 { pt3dadd( 345.488, 394.757, 30.2067, 0.2288 ) }
    dend_24 { pt3dadd( 345.101, 395.595, 30.1935, 0.2542 ) }
    dend_24 { pt3dadd( 343.965, 395.71, 30.1748, 0.2796 ) }
    dend_24 { pt3dadd( 342.825, 395.771, 30.1476, 0.305 ) }
    dend_24 { pt3dadd( 341.704, 395.988, 30.1106, 0.305 ) }
    dend_24 { pt3dadd( 340.564, 396.053, 30.0642, 0.305 ) }
    dend_24 { pt3dadd( 339.42, 396.064, 30.0073, 0.305 ) }
    dend_24 { pt3dadd( 338.355, 396.271, 29.8651, 0.2796 ) }
    dend_24 { pt3dadd( 337.234, 396.396, 29.7097, 0.2542 ) }
    dend_24 { pt3dadd( 336.1, 396.51, 29.5803, 0.2542 ) }
    dend_24 { pt3dadd( 334.956, 396.51, 29.4826, 0.305 ) }
    dend_24 { pt3dadd( 333.812, 396.51, 29.4132, 0.356 ) }
    dend_24 { pt3dadd( 332.668, 396.51, 29.3672, 0.356 ) }
    dend_24 { pt3dadd( 331.523, 396.513, 29.3401, 0.305 ) }
    dend_24 { pt3dadd( 330.431, 396.736, 29.3152, 0.2542 ) }
    dend_24 { pt3dadd( 329.657, 397.566, 29.2858, 0.2288 ) }
    dend_24 { pt3dadd( 328.74, 398.22, 29.2524, 0.2288 ) }
    dend_24 { pt3dadd( 327.712, 398.595, 29.1407, 0.2288 ) }
    dend_24 { pt3dadd( 326.583, 398.684, 29.0497, 0.2288 ) }
    dend_24 { pt3dadd( 325.439, 398.684, 28.985, 0.2288 ) }
    dend_24 { pt3dadd( 324.295, 398.684, 28.9464, 0.2288 ) }
    dend_24 { pt3dadd( 323.151, 398.676, 28.933, 0.2288 ) }
    dend_24 { pt3dadd( 322.015, 398.57, 28.9436, 0.2288 ) }
    dend_24 { pt3dadd( 320.871, 398.57, 28.9904, 0.2288 ) }
    dend_24 { pt3dadd( 319.727, 398.57, 29.0545, 0.2288 ) }
    dend_24 { pt3dadd( 318.583, 398.57, 29.1306, 0.2542 ) }
    dend_24 { pt3dadd( 317.449, 398.686, 29.216, 0.2796 ) }
    dend_24 { pt3dadd( 316.337, 398.884, 29.3068, 0.305 ) }
    dend_24 { pt3dadd( 315.973, 399.714, 29.96, 0.2796 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 36/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 399.413, 362.079, 49.4827, 0.4576 ) }
    dend_22 { pt3dadd( 399.954, 360.506, 49.7818, 0.483 ) }
    dend_22 { pt3dadd( 400.297, 359.436, 49.9582, 0.4068 ) }
    dend_22 { pt3dadd( 400.73, 358.382, 50.1166, 0.356 ) }
    dend_22 { pt3dadd( 401.164, 357.328, 50.26, 0.356 ) }
    dend_22 { pt3dadd( 401.598, 356.275, 50.3975, 0.4068 ) }
    dend_22 { pt3dadd( 402.031, 355.221, 50.5313, 0.5338 ) }
    dend_22 { pt3dadd( 402.48, 354.172, 50.6705, 0.6356 ) }
    dend_22 { pt3dadd( 402.944, 353.126, 50.7755, 0.661 ) }
    dend_22 { pt3dadd( 403.224, 352.042, 50.8407, 0.6102 ) }
    dend_22 { pt3dadd( 403.229, 350.898, 50.8766, 0.5338 ) }
    dend_22 { pt3dadd( 403.234, 349.754, 50.8931, 0.5084 ) }
    dend_22 { pt3dadd( 403.372, 348.619, 50.8987, 0.5084 ) }
    dend_22 { pt3dadd( 403.522, 347.484, 50.9015, 0.5084 ) }
    dend_22 { pt3dadd( 403.67, 346.349, 50.9057, 0.4322 ) }
    dend_22 { pt3dadd( 403.767, 345.21, 50.911, 0.3814 ) }
    dend_22 { pt3dadd( 403.858, 344.069, 50.9188, 0.356 ) }
    dend_22 { pt3dadd( 403.954, 342.93, 50.9295, 0.4322 ) }
    dend_22 { pt3dadd( 404.118, 341.797, 50.9449, 0.4576 ) }
    dend_22 { pt3dadd( 404.283, 340.666, 50.9662, 0.483 ) }
    dend_22 { pt3dadd( 404.446, 339.534, 50.9942, 0.4068 ) }
    dend_22 { pt3dadd( 404.63, 338.405, 51.0348, 0.356 ) }
    dend_22 { pt3dadd( 404.868, 337.288, 51.0997, 0.305 ) }
    dend_22 { pt3dadd( 405.105, 336.17, 51.1832, 0.305 ) }
    dend_22 { pt3dadd( 405.342, 335.052, 51.2786, 0.2796 ) }
    dend_22 { pt3dadd( 405.581, 333.935, 51.3808, 0.2542 ) }
    dend_22 { pt3dadd( 406.115, 332.962, 51.4744, 0.2796 ) }
    dend_22 { pt3dadd( 406.858, 332.093, 51.5533, 0.3304 ) }
    dend_22 { pt3dadd( 407.602, 331.222, 51.6256, 0.4322 ) }
    dend_22 { pt3dadd( 408.326, 330.337, 51.6989, 0.4576 ) }
    dend_22 { pt3dadd( 409.047, 329.449, 51.7782, 0.5338 ) }
    dend_22 { pt3dadd( 409.769, 328.562, 51.8666, 0.5084 ) }
    dend_22 { pt3dadd( 410.254, 327.866, 52.045, 0.483 ) }
    dend_22 { pt3dadd( 410.695, 327.362, 52.3275, 0.356 ) }
    dend_22 { pt3dadd( 411.411, 326.629, 52.5501, 0.2796 ) }
    dend_22 { pt3dadd( 411.553, 325.502, 52.7162, 0.305 ) }
    dend_22 { pt3dadd( 412.26, 324.631, 52.8298, 0.3814 ) }
    dend_22 { pt3dadd( 412.811, 323.658, 52.8956, 0.4576 ) }
    dend_22 { pt3dadd( 413.323, 322.657, 52.9192, 0.3814 ) }
    dend_22 { pt3dadd( 413.785, 321.656, 52.9189, 0.3304 ) }
    dend_22 { pt3dadd( 413.785, 320.512, 52.9186, 0.305 ) }
    dend_22 { pt3dadd( 413.785, 319.368, 52.9178, 0.356 ) }
    dend_22 { pt3dadd( 413.793, 318.224, 52.9169, 0.356 ) }
    dend_22 { pt3dadd( 414.107, 317.138, 52.9158, 0.305 ) }
    dend_22 { pt3dadd( 414.242, 316.019, 52.9141, 0.2796 ) }
    dend_22 { pt3dadd( 414.242, 314.875, 52.9119, 0.356 ) }
    dend_22 { pt3dadd( 414.242, 313.731, 52.9085, 0.4576 ) }
    dend_22 { pt3dadd( 414.242, 312.587, 52.904, 0.5338 ) }
    dend_22 { pt3dadd( 414.242, 311.443, 52.8976, 0.4576 ) }
    dend_22 { pt3dadd( 414.268, 310.303, 52.8886, 0.3814 ) }
    dend_22 { pt3dadd( 414.801, 309.299, 52.876, 0.2796 ) }
    dend_22 { pt3dadd( 415.576, 308.461, 52.8587, 0.2542 ) }
    dend_22 { pt3dadd( 416.13, 307.467, 52.8343, 0.2288 ) }
    dend_22 { pt3dadd( 416.448, 306.369, 52.8002, 0.2288 ) }
    dend_22 { pt3dadd( 416.802, 305.29, 52.7523, 0.2288 ) }
    dend_22 { pt3dadd( 417.29, 304.312, 52.6842, 0.2288 ) }
    dend_22 { pt3dadd( 417.674, 303.439, 52.5918, 0.2542 ) }
    dend_22 { pt3dadd( 418.104, 302.385, 52.4672, 0.2796 ) }
    dend_22 { pt3dadd( 418.505, 301.325, 52.2752, 0.3304 ) }
    dend_22 { pt3dadd( 418.98, 300.309, 52.0206, 0.3304 ) }
    dend_22 { pt3dadd( 419.047, 299.291, 51.6222, 0.3304 ) }
    dend_22 { pt3dadd( 419.156, 298.158, 51.2478, 0.2796 ) }
    dend_22 { pt3dadd( 419.665, 297.262, 50.8253, 0.2796 ) }
    dend_22 { pt3dadd( 420.18, 296.268, 50.3997, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 420.825, 295.357, 50.0581, 0.305 ) }
    dend_22 { pt3dadd( 421.37, 294.381, 49.7364, 0.3304 ) }
    dend_22 { pt3dadd( 421.564, 293.389, 49.3651, 0.3814 ) }
    dend_22 { pt3dadd( 422.031, 292.451, 49.0619, 0.4322 ) }
    dend_22 { pt3dadd( 422.905, 291.944, 48.8149, 0.4322 ) }
    dend_22 { pt3dadd( 423.935, 291.501, 48.6013, 0.4068 ) }
    dend_22 { pt3dadd( 424.851, 290.986, 48.2913, 0.3814 ) }
    dend_22 { pt3dadd( 425.95, 290.919, 47.9349, 0.356 ) }
    dend_22 { pt3dadd( 427.053, 290.69, 47.6286, 0.305 ) }
    dend_22 { pt3dadd( 427.96, 290.153, 47.3668, 0.2542 ) }
    dend_22 { pt3dadd( 428.754, 289.359, 47.1285, 0.2288 ) }
    dend_22 { pt3dadd( 429.535, 288.528, 46.9465, 0.2288 ) }
    dend_22 { pt3dadd( 430.312, 287.701, 46.8126, 0.2288 ) }
    dend_22 { pt3dadd( 430.984, 286.818, 46.6334, 0.2288 ) }
    dend_22 { pt3dadd( 431.652, 285.92, 46.4285, 0.2288 ) }
    dend_22 { pt3dadd( 432.362, 285.03, 46.2613, 0.2288 ) }
    dend_22 { pt3dadd( 433.077, 284.177, 46.1014, 0.2288 ) }
    dend_22 { pt3dadd( 433.816, 283.349, 45.9242, 0.2288 ) }
    dend_22 { pt3dadd( 434.19, 282.29, 45.7985, 0.2288 ) }
    dend_22 { pt3dadd( 434.892, 281.401, 45.7198, 0.2288 ) }
    dend_22 { pt3dadd( 435.583, 280.567, 45.6716, 0.2288 ) }
    dend_22 { pt3dadd( 436.322, 279.726, 45.642, 0.2288 ) }
    dend_22 { pt3dadd( 436.828, 278.705, 45.6282, 0.2288 ) }
    dend_22 { pt3dadd( 437.438, 277.776, 45.6235, 0.2288 ) }
    dend_22 { pt3dadd( 438.167, 276.943, 45.617, 0.2288 ) }
    dend_22 { pt3dadd( 438.902, 276.071, 45.6078, 0.2288 ) }
    dend_22 { pt3dadd( 439.67, 275.237, 45.5952, 0.2288 ) }
    dend_22 { pt3dadd( 440.336, 274.331, 45.5776, 0.2288 ) }
    dend_22 { pt3dadd( 440.725, 273.26, 45.5521, 0.2288 ) }
    dend_22 { pt3dadd( 441.471, 272.404, 45.516, 0.2288 ) }
    dend_22 { pt3dadd( 441.81, 271.312, 45.4681, 0.2288 ) }
    dend_22 { pt3dadd( 442.145, 270.252, 45.4079, 0.2288 ) }
    dend_22 { pt3dadd( 442.656, 269.311, 45.3107, 0.2288 ) }
    dend_22 { pt3dadd( 442.876, 268.211, 45.1352, 0.2288 ) }
    dend_22 { pt3dadd( 443.118, 267.101, 44.9588, 0.2288 ) }
    dend_22 { pt3dadd( 443.548, 266.043, 44.8106, 0.2288 ) }
    dend_22 { pt3dadd( 443.983, 265.002, 44.6502, 0.2542 ) }
    dend_22 { pt3dadd( 444.101, 263.868, 44.5292, 0.2796 ) }
    dend_22 { pt3dadd( 444.148, 262.757, 44.3744, 0.305 ) }
    dend_22 { pt3dadd( 444.288, 261.624, 44.2641, 0.305 ) }
    dend_22 { pt3dadd( 444.329, 260.489, 44.24, 0.305 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 41/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 399.413, 362.079, 49.4827, 0.4576 ) }
    dend_21 { pt3dadd( 398.999, 361.179, 50.9368, 0.305 ) }
    dend_21 { pt3dadd( 398.441, 360.181, 51.7009, 0.2796 ) }
    dend_21 { pt3dadd( 398.758, 359.168, 52.0419, 0.2542 ) }
    dend_21 { pt3dadd( 398.312, 358.236, 52.5316, 0.305 ) }
    dend_21 { pt3dadd( 397.41, 357.694, 53.1196, 0.4322 ) }
    dend_21 { pt3dadd( 396.348, 357.279, 53.6368, 0.5848 ) }
    dend_21 { pt3dadd( 395.404, 356.728, 53.9487, 0.6356 ) }
    dend_21 { pt3dadd( 394.792, 355.766, 54.224, 0.6102 ) }
    dend_21 { pt3dadd( 394.196, 354.858, 54.5927, 0.5592 ) }
    dend_21 { pt3dadd( 393.355, 354.112, 54.9965, 0.5592 ) }
    dend_21 { pt3dadd( 392.583, 353.313, 55.4663, 0.5848 ) }
    dend_21 { pt3dadd( 391.831, 352.463, 55.9544, 0.6102 ) }
    dend_21 { pt3dadd( 391.22, 351.544, 56.5239, 0.5848 ) }
    dend_21 { pt3dadd( 390.607, 350.62, 57.1197, 0.5848 ) }
    dend_21 { pt3dadd( 390.009, 349.685, 57.715, 0.5848 ) }
    dend_21 { pt3dadd( 389.203, 348.915, 58.3122, 0.5848 ) }
    dend_21 { pt3dadd( 388.523, 348.013, 58.8857, 0.5084 ) }
    dend_21 { pt3dadd( 387.837, 347.108, 59.4115, 0.4068 ) }
    dend_21 { pt3dadd( 387.148, 346.274, 59.9928, 0.305 ) }
    dend_21 { pt3dadd( 386.63, 345.439, 60.6575, 0.2542 ) }
    dend_21 { pt3dadd( 386.43, 344.322, 61.2587, 0.2796 ) }
    dend_21 { pt3dadd( 385.988, 343.309, 61.8618, 0.3304 ) }
    dend_21 { pt3dadd( 385.344, 342.389, 62.454, 0.3814 ) }
    dend_21 { pt3dadd( 384.759, 341.443, 63.0426, 0.3304 ) }
    dend_21 { pt3dadd( 384.101, 340.607, 63.6989, 0.305 ) }
    dend_21 { pt3dadd( 383.327, 339.861, 64.3737, 0.2796 ) }
    dend_21 { pt3dadd( 382.436, 339.205, 65.0342, 0.305 ) }
    dend_21 { pt3dadd( 381.604, 338.507, 65.6883, 0.305 ) }
    dend_21 { pt3dadd( 380.806, 337.992, 66.3978, 0.305 ) }
    dend_21 { pt3dadd( 380.403, 337.021, 66.9525, 0.305 ) }
    dend_21 { pt3dadd( 380.38, 335.878, 67.3277, 0.2796 ) }
    dend_21 { pt3dadd( 380.38, 334.734, 67.5646, 0.2542 ) }
    dend_21 { pt3dadd( 380.38, 333.59, 67.6973, 0.2288 ) }
    dend_21 { pt3dadd( 380.38, 332.446, 67.7524, 0.2542 ) }
    dend_21 { pt3dadd( 380.38, 331.302, 67.76, 0.2796 ) }
    dend_21 { pt3dadd( 380.38, 330.158, 67.76, 0.305 ) }
    dend_21 { pt3dadd( 380.38, 329.014, 67.76, 0.2796 ) }
    dend_21 { pt3dadd( 380.38, 327.87, 67.76, 0.2542 ) }
    dend_21 { pt3dadd( 380.38, 326.726, 67.76, 0.2288 ) }
    dend_21 { pt3dadd( 380.38, 325.582, 67.76, 0.2288 ) }
    dend_21 { pt3dadd( 380.38, 324.438, 67.76, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_5 (entry count 83/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 387.962, 379.487, 46.9798, 0.4322 ) }
    dend_17 { pt3dadd( 387.516, 378.974, 46.389, 0.2288 ) }
    dend_17 { pt3dadd( 386.904, 378.392, 45.4406, 0.2542 ) }
    dend_17 { pt3dadd( 385.76, 378.336, 45.1114, 0.3304 ) }
    dend_17 { pt3dadd( 384.622, 378.251, 44.8389, 0.4322 ) }
    dend_17 { pt3dadd( 383.52, 377.958, 44.6169, 0.483 ) }
    dend_17 { pt3dadd( 382.501, 377.438, 44.4391, 0.4322 ) }
    dend_17 { pt3dadd( 381.543, 376.846, 44.2725, 0.356 ) }
    dend_17 { pt3dadd( 380.725, 376.09, 44.058, 0.3304 ) }
    dend_17 { pt3dadd( 380.122, 375.201, 43.813, 0.356 ) }
    dend_17 { pt3dadd( 379.89, 374.08, 43.6122, 0.4068 ) }
    dend_17 { pt3dadd( 379.599, 372.979, 43.4482, 0.4576 ) }
    dend_17 { pt3dadd( 379.131, 371.937, 43.3132, 0.5338 ) }
    dend_17 { pt3dadd( 378.745, 370.86, 43.1995, 0.5592 ) }
    dend_17 { pt3dadd( 378.359, 369.783, 43.0968, 0.5084 ) }
    dend_17 { pt3dadd( 377.542, 369.164, 42.9433, 0.4068 ) }
    dend_17 { pt3dadd( 376.469, 368.818, 42.7179, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_17 { pt3dadd( 375.394, 368.47, 42.4407, 0.3814 ) }
    dend_17 { pt3dadd( 374.743, 367.56, 42.1632, 0.5084 ) }
    dend_17 { pt3dadd( 374.509, 366.447, 41.9185, 0.6102 ) }
    dend_17 { pt3dadd( 373.756, 365.601, 41.6968, 0.6864 ) }
    dend_17 { pt3dadd( 372.906, 364.835, 41.4803, 0.6102 ) }
    dend_17 { pt3dadd( 372.014, 364.154, 41.1998, 0.5084 ) }
    dend_17 { pt3dadd( 371.125, 363.461, 40.8677, 0.4068 ) }
    dend_17 { pt3dadd( 370.283, 362.693, 40.5336, 0.4322 ) }
    dend_17 { pt3dadd( 369.401, 362.027, 40.1282, 0.483 ) }
    dend_17 { pt3dadd( 368.756, 361.1, 39.7253, 0.5084 ) }
    dend_17 { pt3dadd( 368.548, 360.026, 39.2899, 0.4576 ) }
    dend_17 { pt3dadd( 367.634, 359.356, 38.9572, 0.4068 ) }
    dend_17 { pt3dadd( 366.495, 359.276, 38.712, 0.4068 ) }
    dend_17 { pt3dadd( 365.383, 359.508, 38.5034, 0.4068 ) }
    dend_17 { pt3dadd( 364.292, 359.488, 38.2939, 0.4068 ) }
    dend_17 { pt3dadd( 363.445, 358.794, 38.2486, 0.3814 ) }
    dend_17 { pt3dadd( 362.947, 357.773, 38.2609, 0.4068 ) }
    dend_17 { pt3dadd( 362.298, 356.831, 38.253, 0.4576 ) }
    dend_17 { pt3dadd( 361.622, 355.909, 38.2172, 0.5084 ) }
    dend_17 { pt3dadd( 360.967, 354.978, 38.1293, 0.5338 ) }
    dend_17 { pt3dadd( 360.463, 353.986, 37.9389, 0.5084 ) }
    dend_17 { pt3dadd( 360.233, 352.871, 37.6936, 0.483 ) }
    dend_17 { pt3dadd( 359.614, 351.93, 37.4595, 0.4322 ) }
    dend_17 { pt3dadd( 358.909, 351.028, 37.242, 0.3814 ) }
    dend_17 { pt3dadd( 357.986, 350.443, 36.9552, 0.356 ) }
    dend_17 { pt3dadd( 356.871, 350.431, 36.6699, 0.3814 ) }
    dend_17 { pt3dadd( 355.825, 350.881, 36.4386, 0.4322 ) }
    dend_17 { pt3dadd( 354.743, 351.253, 36.2443, 0.4322 ) }
    dend_17 { pt3dadd( 353.661, 350.932, 36.0595, 0.4068 ) }
    dend_17 { pt3dadd( 352.997, 350.066, 35.793, 0.4068 ) }
    dend_17 { pt3dadd( 353.115, 348.93, 35.5667, 0.4576 ) }
    dend_17 { pt3dadd( 353.089, 347.787, 35.3884, 0.5338 ) }
    dend_17 { pt3dadd( 352.788, 346.684, 35.2408, 0.5848 ) }
    dend_17 { pt3dadd( 352.513, 345.574, 35.1168, 0.5848 ) }
    dend_17 { pt3dadd( 351.908, 344.603, 35.0081, 0.5084 ) }
    dend_17 { pt3dadd( 351.24, 343.677, 34.9009, 0.4322 ) }
    dend_17 { pt3dadd( 350.355, 342.962, 34.7379, 0.356 ) }
    dend_17 { pt3dadd( 349.29, 342.677, 34.4786, 0.356 ) }
    dend_17 { pt3dadd( 348.23, 342.262, 34.2286, 0.356 ) }
    dend_17 { pt3dadd( 347.513, 341.391, 33.9987, 0.4068 ) }
    dend_17 { pt3dadd( 347.083, 340.348, 33.7744, 0.4322 ) }
    dend_17 { pt3dadd( 346.657, 339.322, 33.5062, 0.4576 ) }
    dend_17 { pt3dadd( 345.948, 338.468, 33.2063, 0.4322 ) }
    dend_17 { pt3dadd( 345.368, 337.55, 32.8896, 0.4068 ) }
    dend_17 { pt3dadd( 344.911, 336.526, 32.5662, 0.3814 ) }
    dend_17 { pt3dadd( 344.1, 335.745, 32.3165, 0.4068 ) }
    dend_17 { pt3dadd( 343.017, 335.453, 32.1493, 0.4068 ) }
    dend_17 { pt3dadd( 341.876, 335.412, 32.0628, 0.4068 ) }
    dend_17 { pt3dadd( 340.752, 335.358, 32.0886, 0.3814 ) }
    dend_17 { pt3dadd( 339.695, 335.004, 32.0662, 0.4068 ) }
    dend_17 { pt3dadd( 338.986, 334.139, 32.0284, 0.4322 ) }
    dend_17 { pt3dadd( 338.153, 333.387, 31.9844, 0.4322 ) }
    dend_17 { pt3dadd( 337.146, 332.854, 31.9248, 0.3814 ) }
    dend_17 { pt3dadd( 336.068, 332.488, 31.8744, 0.3304 ) }
    dend_17 { pt3dadd( 335.0, 332.093, 31.8598, 0.356 ) }
    dend_17 { pt3dadd( 334.241, 331.308, 31.873, 0.4576 ) }
    dend_17 { pt3dadd( 333.708, 330.297, 31.8914, 0.5848 ) }
    dend_17 { pt3dadd( 333.026, 329.391, 31.9102, 0.6356 ) }
    dend_17 { pt3dadd( 332.16, 328.651, 31.9284, 0.6102 ) }
    dend_17 { pt3dadd( 331.396, 327.813, 31.9427, 0.5084 ) }
    dend_17 { pt3dadd( 330.698, 326.907, 31.9542, 0.4322 ) }
    dend_17 { pt3dadd( 330.033, 325.978, 31.9676, 0.3814 ) }
    dend_17 { pt3dadd( 329.4, 325.024, 31.9864, 0.4068 ) }
    dend_17 { pt3dadd( 328.885, 324.007, 32.0132, 0.4068 ) }
    dend_17 { pt3dadd( 328.588, 322.909, 32.0516, 0.4068 ) }
    dend_17 { pt3dadd( 327.834, 322.185, 32.1034, 0.3814 ) }
    dend_17 { pt3dadd( 326.779, 321.747, 32.1706, 0.4068 ) }
    dend_17 { pt3dadd( 325.754, 321.243, 32.263, 0.4322 ) }
    dend_17 { pt3dadd( 324.872, 320.574, 32.4461, 0.483 ) }
    dend_17 { pt3dadd( 324.131, 319.724, 32.6542, 0.5338 ) }
    dend_17 { pt3dadd( 323.32, 318.922, 32.8289, 0.6102 ) }
    dend_17 { pt3dadd( 322.447, 318.183, 32.9647, 0.6102 ) }
    dend_17 { pt3dadd( 321.863, 317.217, 33.0666, 0.5338 ) }
    dend_17 { pt3dadd( 321.284, 316.231, 33.1436, 0.4322 ) }
    dend_17 { pt3dadd( 320.396, 315.527, 33.2038, 0.3814 ) }
    dend_17 { pt3dadd( 319.336, 315.106, 33.2671, 0.4576 ) }
    dend_17 { pt3dadd( 318.303, 314.611, 33.3483, 0.5338 ) }
    dend_17 { pt3dadd( 317.604, 313.733, 33.4919, 0.6356 ) }
    dend_17 { pt3dadd( 316.875, 312.89, 33.7148, 0.661 ) }
    dend_17 { pt3dadd( 316.045, 312.105, 33.903, 0.661 ) }
    dend_17 { pt3dadd( 315.118, 311.433, 34.0505, 0.6356 ) }
    dend_17 { pt3dadd( 314.099, 310.918, 34.1628, 0.6356 ) }
    dend_17 { pt3dadd( 313.288, 310.113, 34.2462, 0.6864 ) }
    dend_17 { pt3dadd( 312.678, 309.147, 34.3106, 0.788 ) }
    dend_17 { pt3dadd( 312.348, 308.052, 34.3734, 0.8136 ) }
    dend_17 { pt3dadd( 311.629, 307.163, 34.4571, 0.8136 ) }
    dend_17 { pt3dadd( 310.829, 306.345, 34.5694, 0.7626 ) }
    dend_17 { pt3dadd( 310.055, 305.506, 34.7301, 0.7118 ) }
    dend_17 { pt3dadd( 309.402, 304.617, 35.0067, 0.6102 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 89/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 387.962, 379.487, 46.9798, 0.4322 ) }
    dend_6 { pt3dadd( 387.132, 379.855, 47.2318, 0.4322 ) }
    dend_6 { pt3dadd( 386.098, 380.342, 47.4009, 0.4576 ) }
    dend_6 { pt3dadd( 385.029, 380.702, 47.4494, 0.5848 ) }
    dend_6 { pt3dadd( 383.934, 380.985, 47.4079, 0.6864 ) }
    dend_6 { pt3dadd( 382.837, 381.151, 47.4701, 0.7372 ) }
    dend_6 { pt3dadd( 381.711, 381.142, 47.616, 0.6356 ) }
    dend_6 { pt3dadd( 380.615, 380.953, 47.8624, 0.483 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 424.996, 368.235, 44.4749, 0.2288 ) }
    dend_4 { pt3dadd( 425.552, 368.835, 42.5928, 0.2796 ) }
    dend_4 { pt3dadd( 426.171, 369.557, 42.9912, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( 427.194, 369.756, 43.2365, 0.305 ) }
    dend_4 { pt3dadd( 428.298, 369.894, 43.3768, 0.356 ) }
    dend_4 { pt3dadd( 429.247, 370.468, 43.4487, 0.4068 ) }
    dend_4 { pt3dadd( 430.29, 370.854, 43.5268, 0.4322 ) }
    dend_4 { pt3dadd( 431.342, 370.534, 43.5266, 0.5338 ) }
    dend_4 { pt3dadd( 432.322, 369.963, 43.3966, 0.6102 ) }
    dend_4 { pt3dadd( 433.359, 369.576, 43.1225, 0.7118 ) }
    dend_4 { pt3dadd( 434.46, 369.371, 42.7792, 0.6864 ) }
    dend_4 { pt3dadd( 435.566, 369.584, 42.4304, 0.6356 ) }
    dend_4 { pt3dadd( 436.596, 369.716, 41.9667, 0.5338 ) }
    dend_4 { pt3dadd( 437.717, 369.677, 41.5537, 0.4576 ) }
    dend_4 { pt3dadd( 438.818, 369.377, 41.2541, 0.4322 ) }
    dend_4 { pt3dadd( 439.924, 369.088, 41.0575, 0.4322 ) }
    dend_4 { pt3dadd( 440.941, 369.545, 40.9405, 0.483 ) }
    dend_4 { pt3dadd( 441.976, 370.034, 40.8884, 0.5084 ) }
    dend_4 { pt3dadd( 443.099, 370.236, 40.8904, 0.5338 ) }
    dend_4 { pt3dadd( 444.16, 370.481, 40.7865, 0.5338 ) }
    dend_4 { pt3dadd( 445.264, 370.639, 40.7996, 0.483 ) }
    dend_4 { pt3dadd( 446.397, 370.751, 40.847, 0.4322 ) }
    dend_4 { pt3dadd( 447.449, 371.165, 40.8948, 0.4068 ) }
    dend_4 { pt3dadd( 448.443, 371.719, 40.9139, 0.4322 ) }
    dend_4 { pt3dadd( 449.28, 372.075, 41.0578, 0.483 ) }
    dend_4 { pt3dadd( 450.355, 372.327, 41.2188, 0.4576 ) }
    dend_4 { pt3dadd( 451.499, 372.356, 41.3246, 0.4322 ) }
    dend_4 { pt3dadd( 452.613, 372.141, 41.3902, 0.3304 ) }
    dend_4 { pt3dadd( 453.716, 371.838, 41.4198, 0.2796 ) }
    dend_4 { pt3dadd( 454.819, 371.533, 41.414, 0.2288 ) }
    dend_4 { pt3dadd( 455.957, 371.506, 41.3473, 0.2542 ) }
    dend_4 { pt3dadd( 457.099, 371.512, 41.246, 0.305 ) }
    dend_4 { pt3dadd( 458.241, 371.517, 41.1233, 0.356 ) }
    dend_4 { pt3dadd( 459.381, 371.488, 40.9909, 0.4068 ) }
    dend_4 { pt3dadd( 460.517, 371.35, 40.8699, 0.4068 ) }
    dend_4 { pt3dadd( 461.652, 371.212, 40.7574, 0.4576 ) }
    dend_4 { pt3dadd( 462.786, 371.092, 40.616, 0.4576 ) }
    dend_4 { pt3dadd( 463.921, 370.973, 40.4454, 0.483 ) }
    dend_4 { pt3dadd( 465.042, 370.991, 40.2556, 0.4068 ) }
    dend_4 { pt3dadd( 466.132, 371.336, 40.0646, 0.3304 ) }
    dend_4 { pt3dadd( 467.223, 371.68, 39.8636, 0.2542 ) }
    dend_4 { pt3dadd( 468.197, 372.226, 39.5976, 0.2542 ) }
    dend_4 { pt3dadd( 469.105, 372.883, 39.2518, 0.2796 ) }
    dend_4 { pt3dadd( 470.079, 373.376, 38.831, 0.305 ) }
    dend_4 { pt3dadd( 471.156, 373.621, 38.3365, 0.2796 ) }
    dend_4 { pt3dadd( 472.053, 374.259, 37.8658, 0.2542 ) }
    dend_4 { pt3dadd( 473.014, 374.24, 37.443, 0.2288 ) }
    dend_4 { pt3dadd( 474.086, 374.482, 36.9835, 0.2796 ) }
    dend_4 { pt3dadd( 475.161, 374.804, 36.4843, 0.3304 ) }
    dend_4 { pt3dadd( 476.238, 375.127, 35.952, 0.3814 ) }
    dend_4 { pt3dadd( 477.227, 375.486, 35.3374, 0.3304 ) }
    dend_4 { pt3dadd( 478.082, 375.9, 34.5806, 0.2796 ) }
    dend_4 { pt3dadd( 478.936, 376.318, 33.7523, 0.2288 ) }
    dend_4 { pt3dadd( 479.082, 377.453, 33.14, 0.2288 ) }
    dend_4 { pt3dadd( 479.495, 378.478, 32.716, 0.2288 ) }
    dend_4 { pt3dadd( 480.187, 379.389, 32.4512, 0.2288 ) }
    dend_4 { pt3dadd( 480.879, 380.3, 32.3162, 0.2288 ) }
    dend_4 { pt3dadd( 481.487, 381.247, 32.2734, 0.2288 ) }
    dend_4 { pt3dadd( 481.656, 382.379, 32.2736, 0.2288 ) }
    dend_4 { pt3dadd( 481.879, 383.499, 32.2742, 0.2288 ) }
    dend_4 { pt3dadd( 482.151, 384.609, 32.2745, 0.2288 ) }
    dend_4 { pt3dadd( 481.982, 385.712, 32.275, 0.2288 ) }
    dend_4 { pt3dadd( 481.668, 386.813, 32.2767, 0.2288 ) }
    dend_4 { pt3dadd( 481.351, 387.912, 32.2801, 0.2288 ) }
    dend_4 { pt3dadd( 481.01, 389.004, 32.277, 0.2288 ) }
    dend_4 { pt3dadd( 480.669, 390.094, 32.2762, 0.2288 ) }
    dend_4 { pt3dadd( 480.327, 391.185, 32.2871, 0.2288 ) }
    dend_4 { pt3dadd( 479.986, 392.276, 32.3224, 0.2288 ) }
    dend_4 { pt3dadd( 479.645, 393.368, 32.398, 0.2542 ) }
    dend_4 { pt3dadd( 479.303, 394.459, 32.5612, 0.305 ) }
    dend_4 { pt3dadd( 478.935, 395.539, 32.7992, 0.356 ) }
    dend_4 { pt3dadd( 478.372, 396.536, 33.1066, 0.356 ) }
    dend_4 { pt3dadd( 477.538, 396.958, 33.6361, 0.305 ) }
    dend_4 { pt3dadd( 477.395, 397.468, 34.3972, 0.2796 ) }
    dend_4 { pt3dadd( 477.812, 398.167, 36.6173, 0.3304 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 72/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 424.996, 368.235, 44.4749, 0.2288 ) }
    dend_1 { pt3dadd( 426.117, 367.862, 44.2884, 0.3814 ) }
    dend_1 { pt3dadd( 427.18, 367.466, 44.0964, 0.356 ) }
    dend_1 { pt3dadd( 428.316, 367.361, 43.9048, 0.3814 ) }
    dend_1 { pt3dadd( 429.352, 366.972, 43.6901, 0.4322 ) }
    dend_1 { pt3dadd( 430.091, 366.139, 43.4059, 0.5084 ) }
    dend_1 { pt3dadd( 430.927, 365.372, 43.1228, 0.5338 ) }
    dend_1 { pt3dadd( 431.915, 364.8, 42.8565, 0.5084 ) }
    dend_1 { pt3dadd( 432.956, 364.351, 42.5751, 0.483 ) }
    dend_1 { pt3dadd( 434.026, 364.102, 42.2131, 0.4322 ) }
    dend_1 { pt3dadd( 435.104, 364.126, 41.7861, 0.4576 ) }
    dend_1 { pt3dadd( 436.237, 364.249, 41.4554, 0.483 ) }
    dend_1 { pt3dadd( 437.362, 364.244, 41.246, 0.5084 ) }
    dend_1 { pt3dadd( 438.457, 364.205, 40.9419, 0.4322 ) }
    dend_1 { pt3dadd( 439.483, 363.902, 40.5521, 0.3814 ) }
    dend_1 { pt3dadd( 440.605, 363.727, 40.2097, 0.3814 ) }
    dend_1 { pt3dadd( 441.71, 363.427, 39.9412, 0.4322 ) }
    dend_1 { pt3dadd( 442.842, 363.265, 39.7183, 0.4068 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 399.875, 350.231, 42.0563, 0.3304 ) }
    dend_32 { pt3dadd( 399.41, 351.262, 40.8769, 0.4322 ) }
    dend_32 { pt3dadd( 398.792, 352.202, 39.6511, 0.5338 ) }
    dend_32 { pt3dadd( 397.788, 352.685, 39.1373, 0.5592 ) }
    dend_32 { pt3dadd( 396.698, 352.893, 38.5104, 0.5592 ) }
    dend_32 { pt3dadd( 395.868, 353.415, 37.697, 0.483 ) }
    dend_32 { pt3dadd( 395.6, 353.788, 36.5924, 0.4068 ) }
    dend_32 { pt3dadd( 395.443, 354.378, 35.5029, 0.305 ) }
    dend_32 { pt3dadd( 395.021, 355.401, 34.6489, 0.2542 ) }
    dend_32 { pt3dadd( 395.866, 355.18, 33.9307, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_32 { pt3dadd( 396.75, 354.522, 33.2923, 0.2796 ) }
    dend_32 { pt3dadd( 397.747, 354.164, 32.8378, 0.305 ) }
    dend_32 { pt3dadd( 398.803, 354.536, 32.4736, 0.2796 ) }
    dend_32 { pt3dadd( 399.805, 355.052, 32.1048, 0.2542 ) }
    dend_32 { pt3dadd( 400.807, 355.568, 31.7181, 0.2288 ) }
    dend_32 { pt3dadd( 401.808, 356.083, 31.3337, 0.2288 ) }
    dend_32 { pt3dadd( 402.81, 356.599, 30.9588, 0.2288 ) }
    dend_32 { pt3dadd( 403.811, 357.115, 30.5936, 0.2288 ) }
    dend_32 { pt3dadd( 404.829, 357.604, 30.2725, 0.2288 ) }
    dend_32 { pt3dadd( 405.898, 358.009, 30.0527, 0.2796 ) }
    dend_32 { pt3dadd( 406.969, 358.413, 29.9135, 0.3814 ) }
    dend_32 { pt3dadd( 408.04, 358.818, 29.8354, 0.5084 ) }
    dend_32 { pt3dadd( 408.588, 359.807, 29.7903, 0.5338 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 13/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 399.875, 350.231, 42.0563, 0.3304 ) }
    dend_31 { pt3dadd( 400.642, 349.855, 41.5979, 0.5084 ) }
    dend_31 { pt3dadd( 401.76, 349.988, 41.2597, 0.4322 ) }
    dend_31 { pt3dadd( 402.258, 351.016, 41.029, 0.4576 ) }
    dend_31 { pt3dadd( 403.04, 351.709, 40.9273, 0.4322 ) }
    dend_31 { pt3dadd( 404.034, 351.238, 40.9576, 0.4576 ) }
    dend_31 { pt3dadd( 404.984, 350.628, 40.9063, 0.3814 ) }
    dend_31 { pt3dadd( 405.964, 350.205, 40.6725, 0.3814 ) }
    dend_31 { pt3dadd( 407.049, 350.108, 40.3357, 0.3304 ) }
    dend_31 { pt3dadd( 408.168, 350.294, 40.0282, 0.3814 ) }
    dend_31 { pt3dadd( 409.216, 350.661, 39.7471, 0.3814 ) }
    dend_31 { pt3dadd( 410.302, 350.395, 39.464, 0.4068 ) }
    dend_31 { pt3dadd( 411.301, 349.887, 39.2392, 0.3814 ) }
    dend_31 { pt3dadd( 412.376, 349.689, 39.1462, 0.4068 ) }
    dend_31 { pt3dadd( 413.457, 349.883, 38.9931, 0.5084 ) }
    dend_31 { pt3dadd( 414.497, 349.954, 38.7654, 0.6102 ) }
    dend_31 { pt3dadd( 415.574, 349.7, 38.675, 0.661 ) }
    dend_31 { pt3dadd( 416.592, 349.347, 38.7495, 0.6102 ) }
    dend_31 { pt3dadd( 417.612, 348.843, 38.8133, 0.5338 ) }
    dend_31 { pt3dadd( 418.479, 348.141, 38.8937, 0.5338 ) }
    dend_31 { pt3dadd( 419.364, 347.495, 39.0396, 0.5338 ) }
    dend_31 { pt3dadd( 420.43, 347.091, 39.146, 0.5848 ) }
    dend_31 { pt3dadd( 421.487, 346.676, 39.1384, 0.5338 ) }
    dend_31 { pt3dadd( 422.516, 346.224, 39.0006, 0.5592 ) }
    dend_31 { pt3dadd( 423.6, 345.939, 38.8041, 0.5338 ) }
    dend_31 { pt3dadd( 424.708, 345.671, 38.6064, 0.6356 ) }
    dend_31 { pt3dadd( 425.765, 345.239, 38.4132, 0.6356 ) }
    dend_31 { pt3dadd( 426.81, 344.797, 38.2094, 0.6356 ) }
    dend_31 { pt3dadd( 427.818, 344.573, 37.9022, 0.5592 ) }
    dend_31 { pt3dadd( 428.859, 344.441, 37.6253, 0.5592 ) }
    dend_31 { pt3dadd( 429.913, 344.06, 37.485, 0.6356 ) }
    dend_31 { pt3dadd( 430.948, 343.58, 37.3976, 0.661 ) }
    dend_31 { pt3dadd( 432.043, 343.271, 37.3349, 0.661 ) }
    dend_31 { pt3dadd( 433.18, 343.199, 37.2893, 0.6102 ) }
    dend_31 { pt3dadd( 434.324, 343.193, 37.2495, 0.6102 ) }
    dend_31 { pt3dadd( 435.465, 343.148, 37.1708, 0.5848 ) }
    dend_31 { pt3dadd( 436.496, 342.805, 36.9832, 0.5338 ) }
    dend_31 { pt3dadd( 437.459, 342.22, 36.7875, 0.4576 ) }
    dend_31 { pt3dadd( 438.457, 341.666, 36.6366, 0.4322 ) }
    dend_31 { pt3dadd( 439.547, 341.374, 36.5604, 0.4322 ) }
    dend_31 { pt3dadd( 440.635, 341.041, 36.5011, 0.483 ) }
    dend_31 { pt3dadd( 441.664, 340.559, 36.4146, 0.5084 ) }
    dend_31 { pt3dadd( 442.56, 339.857, 36.3378, 0.5338 ) }
    dend_31 { pt3dadd( 443.465, 339.158, 36.2594, 0.5084 ) }
    dend_31 { pt3dadd( 444.423, 338.539, 36.1528, 0.4322 ) }
    dend_31 { pt3dadd( 445.48, 338.221, 35.9556, 0.3304 ) }
    dend_31 { pt3dadd( 446.596, 338.249, 35.8252, 0.2796 ) }
    dend_31 { pt3dadd( 447.655, 338.519, 35.8123, 0.2796 ) }
    dend_31 { pt3dadd( 448.745, 338.297, 35.7207, 0.305 ) }
    dend_31 { pt3dadd( 449.819, 337.981, 35.5026, 0.3304 ) }
    dend_31 { pt3dadd( 450.717, 338.574, 35.1767, 0.3814 ) }
    dend_31 { pt3dadd( 451.753, 338.939, 34.7614, 0.4576 ) }
    dend_31 { pt3dadd( 452.814, 338.547, 34.3101, 0.4576 ) }
    dend_31 { pt3dadd( 453.854, 338.2, 33.8296, 0.4068 ) }
    dend_31 { pt3dadd( 454.995, 338.166, 33.4323, 0.305 ) }
    dend_31 { pt3dadd( 456.139, 338.142, 33.1022, 0.2542 ) }
    dend_31 { pt3dadd( 456.734, 338.181, 32.6575, 0.2288 ) }
    dend_31 { pt3dadd( 457.448, 338.145, 32.1672, 0.2288 ) }
    dend_31 { pt3dadd( 458.422, 337.552, 31.7626, 0.2288 ) }
    dend_31 { pt3dadd( 459.146, 336.698, 31.3874, 0.2288 ) }
    dend_31 { pt3dadd( 459.673, 335.777, 31.003, 0.2288 ) }
    dend_31 { pt3dadd( 460.743, 335.421, 30.7003, 0.2542 ) }
    dend_31 { pt3dadd( 461.859, 335.421, 30.4352, 0.305 ) }
    dend_31 { pt3dadd( 462.53, 334.7, 30.0933, 0.356 ) }
    dend_31 { pt3dadd( 463.479, 334.165, 29.8158, 0.356 ) }
    dend_31 { pt3dadd( 464.622, 334.162, 29.5952, 0.3304 ) }
    dend_31 { pt3dadd( 465.614, 333.922, 29.3336, 0.305 ) }
    dend_31 { pt3dadd( 466.548, 333.476, 29.1175, 0.305 ) }
    dend_31 { pt3dadd( 467.573, 333.111, 28.9405, 0.2796 ) }
    dend_31 { pt3dadd( 468.659, 332.904, 28.7924, 0.2542 ) }
    dend_31 { pt3dadd( 469.786, 332.904, 28.6154, 0.2288 ) }
    dend_31 { pt3dadd( 470.734, 332.937, 28.2629, 0.2288 ) }
    dend_31 { pt3dadd( 471.314, 333.823, 27.9886, 0.2288 ) }
    dend_31 { pt3dadd( 472.256, 334.412, 27.7872, 0.2542 ) }
    dend_31 { pt3dadd( 473.384, 334.601, 27.6541, 0.305 ) }
    dend_31 { pt3dadd( 474.325, 335.223, 27.5836, 0.356 ) }
    dend_31 { pt3dadd( 475.2, 335.939, 27.6066, 0.356 ) }
    dend_31 { pt3dadd( 475.962, 336.771, 27.6661, 0.305 ) }
    dend_31 { pt3dadd( 476.974, 337.224, 27.7197, 0.2542 ) }
    dend_31 { pt3dadd( 478.105, 337.304, 27.7664, 0.2288 ) }
    dend_31 { pt3dadd( 479.216, 337.551, 27.8071, 0.2288 ) }
    dend_31 { pt3dadd( 480.293, 337.907, 27.8808, 0.2288 ) }
    dend_31 { pt3dadd( 481.082, 338.701, 27.9391, 0.2288 ) }
    dend_31 { pt3dadd( 481.992, 339.196, 27.9888, 0.2288 ) }
    dend_31 { pt3dadd( 483.135, 339.196, 28.0333, 0.2288 ) }
    dend_31 { pt3dadd( 484.275, 339.127, 28.0739, 0.2288 ) }
    dend_31 { pt3dadd( 485.342, 338.746, 28.112, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_31 { pt3dadd( 486.245, 338.047, 28.1476, 0.2288 ) }
    dend_31 { pt3dadd( 486.963, 337.239, 28.236, 0.2288 ) }
    dend_31 { pt3dadd( 487.798, 336.559, 28.3422, 0.2288 ) }
    dend_31 { pt3dadd( 488.924, 336.45, 28.4242, 0.2288 ) }
    dend_31 { pt3dadd( 490.069, 336.45, 28.4838, 0.2288 ) }
    dend_31 { pt3dadd( 491.213, 336.45, 28.5219, 0.2288 ) }
    dend_31 { pt3dadd( 492.357, 336.45, 28.5407, 0.2288 ) }
    dend_31 { pt3dadd( 493.501, 336.45, 28.5412, 0.2288 ) }
    dend_31 { pt3dadd( 494.643, 336.391, 28.5337, 0.2288 ) }
    dend_31 { pt3dadd( 495.743, 336.097, 28.5236, 0.2288 ) }
    dend_31 { pt3dadd( 496.745, 335.547, 28.509, 0.2288 ) }
    dend_31 { pt3dadd( 497.647, 334.963, 28.488, 0.2288 ) }
    dend_31 { pt3dadd( 498.777, 334.806, 28.4589, 0.2288 ) }
    dend_31 { pt3dadd( 499.81, 334.36, 28.4208, 0.2288 ) }
    dend_31 { pt3dadd( 500.853, 333.931, 28.373, 0.2288 ) }
    dend_31 { pt3dadd( 501.943, 333.622, 28.2808, 0.2288 ) }
    dend_31 { pt3dadd( 503.021, 333.281, 28.1487, 0.2288 ) }
    dend_31 { pt3dadd( 504.139, 333.055, 28.0288, 0.2288 ) }
    dend_31 { pt3dadd( 505.132, 332.589, 27.8962, 0.2288 ) }
    dend_31 { pt3dadd( 505.639, 331.585, 27.7924, 0.2288 ) }
    dend_31 { pt3dadd( 506.267, 330.798, 27.7145, 0.2288 ) }
    dend_31 { pt3dadd( 507.408, 330.73, 27.6594, 0.2288 ) }
    dend_31 { pt3dadd( 508.463, 330.989, 27.6174, 0.2288 ) }
    dend_31 { pt3dadd( 509.309, 331.715, 27.539, 0.2288 ) }
    dend_31 { pt3dadd( 510.354, 332.159, 27.476, 0.2288 ) }
    dend_31 { pt3dadd( 511.495, 332.218, 27.4215, 0.2288 ) }
    dend_31 { pt3dadd( 512.628, 332.17, 27.362, 0.2288 ) }
    dend_31 { pt3dadd( 513.664, 331.712, 27.2885, 0.2542 ) }
    dend_31 { pt3dadd( 514.593, 331.047, 27.2357, 0.3304 ) }
    dend_31 { pt3dadd( 515.648, 330.616, 27.202, 0.4068 ) }
    dend_31 { pt3dadd( 516.792, 330.616, 27.1788, 0.4322 ) }
    dend_31 { pt3dadd( 517.904, 330.829, 27.1652, 0.3814 ) }
    dend_31 { pt3dadd( 519.033, 330.959, 27.16, 0.3304 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 33/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 401.846, 332.181, 50.3154, 0.3304 ) }
    dend_29 { pt3dadd( 401.64, 331.115, 50.6545, 0.356 ) }
    dend_29 { pt3dadd( 401.743, 329.994, 51.2182, 0.356 ) }
    dend_29 { pt3dadd( 401.846, 328.871, 51.4674, 0.3814 ) }
    dend_29 { pt3dadd( 401.951, 327.75, 51.7546, 0.4068 ) }
    dend_29 { pt3dadd( 402.265, 326.765, 51.987, 0.3814 ) }
    dend_29 { pt3dadd( 401.859, 325.714, 52.2183, 0.305 ) }
    dend_29 { pt3dadd( 401.773, 324.592, 52.4045, 0.2542 ) }
    dend_29 { pt3dadd( 401.773, 323.448, 52.5238, 0.2288 ) }
    dend_29 { pt3dadd( 401.773, 322.304, 52.5949, 0.2288 ) }
    dend_29 { pt3dadd( 401.773, 321.16, 52.6355, 0.2288 ) }
    dend_29 { pt3dadd( 401.773, 320.016, 52.6616, 0.2288 ) }
    dend_29 { pt3dadd( 401.658, 318.881, 52.6758, 0.2542 ) }
    dend_29 { pt3dadd( 401.658, 317.737, 52.6898, 0.2796 ) }
    dend_29 { pt3dadd( 401.658, 316.593, 52.71, 0.356 ) }
    dend_29 { pt3dadd( 401.658, 315.449, 52.738, 0.3814 ) }
    dend_29 { pt3dadd( 401.32, 314.388, 52.7775, 0.4576 ) }
    dend_29 { pt3dadd( 400.406, 313.876, 52.8307, 0.4576 ) }
    dend_29 { pt3dadd( 400.036, 312.847, 52.9007, 0.483 ) }
    dend_29 { pt3dadd( 399.509, 311.85, 53.0284, 0.4322 ) }
    dend_29 { pt3dadd( 398.477, 311.399, 53.1633, 0.4322 ) }
    dend_29 { pt3dadd( 397.958, 310.552, 53.3837, 0.483 ) }
    dend_29 { pt3dadd( 397.383, 309.587, 53.5917, 0.5848 ) }
    dend_29 { pt3dadd( 396.712, 308.695, 53.851, 0.6102 ) }
    dend_29 { pt3dadd( 396.283, 307.663, 54.0725, 0.5338 ) }
    dend_29 { pt3dadd( 396.282, 306.687, 54.3718, 0.3814 ) }
    dend_29 { pt3dadd( 396.282, 305.543, 54.5978, 0.2796 ) }
    dend_29 { pt3dadd( 396.282, 304.399, 54.7579, 0.2542 ) }
    dend_29 { pt3dadd( 396.282, 303.255, 54.8724, 0.2796 ) }
    dend_29 { pt3dadd( 396.282, 302.111, 54.95, 0.305 ) }
    dend_29 { pt3dadd( 396.282, 300.967, 55.0116, 0.305 ) }
    dend_29 { pt3dadd( 396.282, 299.823, 55.0651, 0.305 ) }
    dend_29 { pt3dadd( 396.282, 298.679, 55.1356, 0.3304 ) }
    dend_29 { pt3dadd( 396.282, 297.535, 55.2258, 0.3304 ) }
    dend_29 { pt3dadd( 396.32, 296.414, 55.3851, 0.3304 ) }
    dend_29 { pt3dadd( 396.473, 295.317, 55.624, 0.2796 ) }
    dend_29 { pt3dadd( 396.828, 294.238, 55.8779, 0.2542 ) }
    dend_29 { pt3dadd( 397.376, 293.253, 56.1061, 0.2288 ) }
    dend_29 { pt3dadd( 397.9, 292.29, 56.3797, 0.2288 ) }
    dend_29 { pt3dadd( 398.07, 291.165, 56.6062, 0.2288 ) }
    dend_29 { pt3dadd( 398.435, 290.126, 56.8644, 0.2288 ) }
    dend_29 { pt3dadd( 398.586, 288.995, 57.0685, 0.2288 ) }
    dend_29 { pt3dadd( 398.684, 287.856, 57.2384, 0.2288 ) }
    dend_29 { pt3dadd( 398.684, 286.712, 57.3852, 0.2288 ) }
    dend_29 { pt3dadd( 398.684, 285.577, 57.5473, 0.2288 ) }
    dend_29 { pt3dadd( 398.684, 284.498, 57.815, 0.2288 ) }
    dend_29 { pt3dadd( 398.684, 283.356, 58.0384, 0.2288 ) }
    dend_29 { pt3dadd( 398.684, 282.212, 58.2308, 0.2288 ) }
    dend_29 { pt3dadd( 398.771, 281.072, 58.3996, 0.2288 ) }
    dend_29 { pt3dadd( 398.798, 279.929, 58.5581, 0.2288 ) }
    dend_29 { pt3dadd( 398.798, 278.785, 58.7241, 0.2288 ) }
    dend_29 { pt3dadd( 398.798, 277.641, 58.921, 0.2288 ) }
    dend_29 { pt3dadd( 398.798, 276.497, 59.1856, 0.2288 ) }
    dend_29 { pt3dadd( 398.798, 275.353, 59.5252, 0.2288 ) }
    dend_29 { pt3dadd( 398.505, 274.602, 60.1068, 0.2288 ) }
    dend_29 { pt3dadd( 398.242, 273.696, 60.9277, 0.2288 ) }
    dend_29 { pt3dadd( 397.979, 272.79, 61.9094, 0.2288 ) }
    dend_29 { pt3dadd( 397.716, 271.885, 62.9846, 0.2288 ) }
    dend_29 { pt3dadd( 396.799, 271.505, 63.9254, 0.2288 ) }
    dend_29 { pt3dadd( 395.674, 271.293, 64.6909, 0.2542 ) }
    dend_29 { pt3dadd( 394.688, 271.614, 65.3156, 0.2796 ) }
    dend_29 { pt3dadd( 393.803, 272.341, 65.858, 0.3304 ) }
    dend_29 { pt3dadd( 393.031, 272.957, 66.5529, 0.3304 ) }
    dend_29 { pt3dadd( 392.293, 273.542, 67.4436, 0.3304 ) }
    dend_29 { pt3dadd( 391.715, 273.072, 68.5149, 0.2796 ) }
    dend_29 { pt3dadd( 391.195, 272.266, 69.6592, 0.2796 ) }
    dend_29 { pt3dadd( 390.706, 271.319, 70.7529, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_29 { pt3dadd( 390.217, 270.372, 71.7643, 0.305 ) }
    dend_29 { pt3dadd( 390.771, 269.42, 72.583, 0.2796 ) }
    dend_29 { pt3dadd( 391.385, 268.467, 73.2432, 0.2542 ) }
    dend_29 { pt3dadd( 392.001, 267.515, 73.7954, 0.2288 ) }
    dend_29 { pt3dadd( 392.616, 266.563, 74.2924, 0.2288 ) }
    dend_29 { pt3dadd( 393.23, 265.611, 74.7776, 0.2288 ) }
    dend_29 { pt3dadd( 393.846, 264.659, 75.2763, 0.2288 ) }
    dend_29 { pt3dadd( 394.471, 263.708, 75.787, 0.2542 ) }
    dend_29 { pt3dadd( 394.642, 262.794, 76.3893, 0.2796 ) }
    dend_29 { pt3dadd( 394.301, 261.915, 77.1775, 0.305 ) }
    dend_29 { pt3dadd( 393.962, 261.038, 78.087, 0.2796 ) }
    dend_29 { pt3dadd( 394.207, 260.037, 78.9295, 0.2542 ) }
    dend_29 { pt3dadd( 394.654, 258.995, 79.6516, 0.2288 ) }
    dend_29 { pt3dadd( 395.101, 257.953, 80.2623, 0.2288 ) }
    dend_29 { pt3dadd( 395.547, 256.91, 80.7682, 0.2288 ) }
    dend_29 { pt3dadd( 395.993, 255.868, 81.1902, 0.2288 ) }
    dend_29 { pt3dadd( 396.441, 254.826, 81.5671, 0.2288 ) }
    dend_29 { pt3dadd( 396.887, 253.784, 81.9339, 0.2288 ) }
    dend_29 { pt3dadd( 397.333, 252.742, 82.299, 0.2288 ) }
    dend_29 { pt3dadd( 397.582, 251.661, 82.6602, 0.2288 ) }
    dend_29 { pt3dadd( 397.553, 250.526, 83.0155, 0.2288 ) }
    dend_29 { pt3dadd( 397.525, 249.391, 83.3661, 0.2288 ) }
    dend_29 { pt3dadd( 397.497, 248.256, 83.713, 0.2288 ) }
    dend_29 { pt3dadd( 397.469, 247.121, 84.0571, 0.2288 ) }
    dend_29 { pt3dadd( 397.441, 245.986, 84.3993, 0.2288 ) }
    dend_29 { pt3dadd( 397.413, 244.852, 84.7398, 0.2288 ) }
    dend_29 { pt3dadd( 397.384, 243.717, 85.078, 0.2288 ) }
    dend_29 { pt3dadd( 397.357, 242.582, 85.4132, 0.2288 ) }
    dend_29 { pt3dadd( 397.328, 241.446, 85.7506, 0.2288 ) }
    dend_29 { pt3dadd( 397.299, 240.311, 86.0812, 0.2288 ) }
    dend_29 { pt3dadd( 397.272, 239.176, 86.399, 0.2288 ) }
    dend_29 { pt3dadd( 397.243, 238.041, 86.6975, 0.2288 ) }
    dend_29 { pt3dadd( 397.216, 236.906, 86.973, 0.2288 ) }
    dend_29 { pt3dadd( 397.188, 235.771, 87.5087, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 401.846, 332.181, 50.3154, 0.3304 ) }
    dend_28 { pt3dadd( 402.132, 332.133, 50.6649, 0.2288 ) }
    dend_28 { pt3dadd( 403.088, 332.028, 51.2092, 0.2288 ) }
    dend_28 { pt3dadd( 404.053, 331.689, 51.7535, 0.2288 ) }
    dend_28 { pt3dadd( 404.602, 330.759, 52.3925, 0.2288 ) }
    dend_28 { pt3dadd( 405.292, 330.014, 53.0718, 0.2288 ) }
    dend_28 { pt3dadd( 406.099, 329.408, 53.7883, 0.2288 ) }
    dend_28 { pt3dadd( 406.59, 328.479, 54.497, 0.2288 ) }
    dend_28 { pt3dadd( 406.895, 327.383, 55.0833, 0.2796 ) }
    dend_28 { pt3dadd( 407.217, 326.367, 55.7091, 0.3304 ) }
    dend_28 { pt3dadd( 407.795, 325.51, 56.4208, 0.3814 ) }
    dend_28 { pt3dadd( 408.206, 324.533, 57.1698, 0.3814 ) }
    dend_28 { pt3dadd( 408.704, 323.559, 57.9116, 0.3814 ) }
    dend_28 { pt3dadd( 408.971, 322.476, 58.6132, 0.3814 ) }
    dend_28 { pt3dadd( 409.159, 321.352, 59.2452, 0.356 ) }
    dend_28 { pt3dadd( 409.655, 320.391, 59.8844, 0.356 ) }
    dend_28 { pt3dadd( 409.918, 319.326, 60.5111, 0.356 ) }
    dend_28 { pt3dadd( 410.217, 318.292, 61.1638, 0.3814 ) }
    dend_28 { pt3dadd( 410.855, 318.047, 61.9735, 0.356 ) }
    dend_28 { pt3dadd( 410.471, 317.076, 62.5999, 0.3304 ) }
    dend_28 { pt3dadd( 410.999, 316.061, 63.0722, 0.305 ) }
    dend_28 { pt3dadd( 411.831, 315.294, 63.4152, 0.3304 ) }
    dend_28 { pt3dadd( 412.449, 314.464, 63.6779, 0.356 ) }
    dend_28 { pt3dadd( 412.342, 313.331, 63.9218, 0.3814 ) }
    dend_28 { pt3dadd( 412.234, 312.2, 64.1693, 0.356 ) }
    dend_28 { pt3dadd( 412.127, 311.069, 64.4644, 0.3304 ) }
    dend_28 { pt3dadd( 412.02, 309.936, 64.7979, 0.2796 ) }
    dend_28 { pt3dadd( 411.913, 308.805, 65.1613, 0.2542 ) }
    dend_28 { pt3dadd( 411.758, 307.686, 65.5581, 0.2288 ) }
    dend_28 { pt3dadd( 411.496, 306.594, 66.0027, 0.2542 ) }
    dend_28 { pt3dadd( 411.234, 305.503, 66.4849, 0.2796 ) }
    dend_28 { pt3dadd( 410.973, 304.413, 66.9956, 0.305 ) }
    dend_28 { pt3dadd( 410.711, 303.321, 67.5256, 0.2796 ) }
    dend_28 { pt3dadd( 410.449, 302.231, 68.068, 0.2542 ) }
    dend_28 { pt3dadd( 410.522, 301.139, 68.6123, 0.2288 ) }
    dend_28 { pt3dadd( 410.788, 300.045, 69.1552, 0.2542 ) }
    dend_28 { pt3dadd( 411.052, 298.952, 69.7001, 0.305 ) }
    dend_28 { pt3dadd( 411.316, 297.859, 70.2509, 0.356 ) }
    dend_28 { pt3dadd( 411.582, 296.766, 70.8109, 0.356 ) }
    dend_28 { pt3dadd( 411.846, 295.674, 71.3826, 0.356 ) }
    dend_28 { pt3dadd( 412.383, 294.74, 71.9922, 0.356 ) }
    dend_28 { pt3dadd( 413.105, 293.917, 72.6466, 0.4068 ) }
    dend_28 { pt3dadd( 413.827, 293.092, 73.3278, 0.4068 ) }
    dend_28 { pt3dadd( 414.548, 292.267, 74.0194, 0.4068 ) }
    dend_28 { pt3dadd( 415.27, 291.442, 74.7054, 0.356 ) }
    dend_28 { pt3dadd( 415.992, 290.618, 75.3726, 0.305 ) }
    dend_28 { pt3dadd( 416.7, 289.756, 75.9618, 0.305 ) }
    dend_28 { pt3dadd( 417.396, 288.85, 76.4291, 0.3304 ) }
    dend_28 { pt3dadd( 418.122, 287.977, 76.8477, 0.3814 ) }
    dend_28 { pt3dadd( 418.849, 287.103, 77.2411, 0.3304 ) }
    dend_28 { pt3dadd( 419.576, 286.23, 77.6303, 0.305 ) }
    dend_28 { pt3dadd( 420.302, 285.356, 78.0357, 0.305 ) }
    dend_28 { pt3dadd( 421.029, 284.482, 78.4739, 0.356 ) }
    dend_28 { pt3dadd( 421.818, 283.704, 78.9863, 0.356 ) }
    dend_28 { pt3dadd( 422.674, 283.025, 79.5914, 0.305 ) }
    dend_28 { pt3dadd( 423.528, 282.344, 80.2656, 0.2542 ) }
    dend_28 { pt3dadd( 424.383, 281.664, 80.9852, 0.2288 ) }
    dend_28 { pt3dadd( 425.238, 280.985, 81.7258, 0.2288 ) }
    dend_28 { pt3dadd( 426.092, 280.304, 82.4625, 0.2288 ) }
    dend_28 { pt3dadd( 426.948, 279.625, 83.1737, 0.2542 ) }
    dend_28 { pt3dadd( 427.803, 278.945, 83.848, 0.2796 ) }
    dend_28 { pt3dadd( 428.725, 278.36, 84.4494, 0.3304 ) }
    dend_28 { pt3dadd( 429.818, 278.022, 84.9038, 0.3304 ) }
    dend_28 { pt3dadd( 430.91, 277.682, 85.2522, 0.3304 ) }
    dend_28 { pt3dadd( 431.911, 277.198, 85.5548, 0.2796 ) }
    dend_28 { pt3dadd( 432.734, 276.428, 85.8844, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( 433.557, 275.658, 86.2473, 0.2288 ) }
    dend_28 { pt3dadd( 434.379, 274.889, 86.6482, 0.2288 ) }
    dend_28 { pt3dadd( 435.203, 274.12, 87.0839, 0.2288 ) }
    dend_28 { pt3dadd( 436.025, 273.351, 87.5342, 0.2288 ) }
    dend_28 { pt3dadd( 436.848, 272.581, 87.9808, 0.2796 ) }
    dend_28 { pt3dadd( 437.67, 271.812, 88.4128, 0.3304 ) }
    dend_28 { pt3dadd( 438.493, 271.042, 88.83, 0.4322 ) }
    dend_28 { pt3dadd( 439.334, 270.28, 89.2013, 0.4322 ) }
    dend_28 { pt3dadd( 440.195, 269.527, 89.5023, 0.4576 ) }
    dend_28 { pt3dadd( 441.057, 268.775, 89.7576, 0.3814 ) }
    dend_28 { pt3dadd( 441.538, 267.769, 90.0474, 0.356 ) }
    dend_28 { pt3dadd( 441.958, 266.721, 90.382, 0.2796 ) }
    dend_28 { pt3dadd( 442.378, 265.673, 90.76, 0.2542 ) }
    dend_28 { pt3dadd( 442.798, 264.625, 91.1789, 0.2288 ) }
    dend_28 { pt3dadd( 443.217, 263.578, 91.6308, 0.2542 ) }
    dend_28 { pt3dadd( 443.638, 262.53, 92.1021, 0.2796 ) }
    dend_28 { pt3dadd( 444.057, 261.483, 92.5826, 0.305 ) }
    dend_28 { pt3dadd( 444.478, 260.435, 93.0731, 0.2796 ) }
    dend_28 { pt3dadd( 444.898, 259.387, 93.5777, 0.2542 ) }
    dend_28 { pt3dadd( 445.318, 258.339, 94.099, 0.2288 ) }
    dend_28 { pt3dadd( 445.738, 257.291, 94.6389, 0.2288 ) }
    dend_28 { pt3dadd( 446.074, 256.246, 95.2448, 0.2288 ) }
    dend_28 { pt3dadd( 446.408, 255.2, 95.9022, 0.2288 ) }
    dend_28 { pt3dadd( 446.742, 254.154, 96.5955, 0.2288 ) }
    dend_28 { pt3dadd( 447.076, 253.109, 97.3064, 0.2288 ) }
    dend_28 { pt3dadd( 447.41, 252.063, 98.0168, 0.2288 ) }
    dend_28 { pt3dadd( 447.743, 251.018, 98.7104, 0.2288 ) }
    dend_28 { pt3dadd( 448.077, 249.972, 99.3745, 0.2288 ) }
    dend_28 { pt3dadd( 448.379, 248.917, 99.997, 0.2288 ) }
    dend_28 { pt3dadd( 448.403, 247.773, 100.482, 0.2288 ) }
    dend_28 { pt3dadd( 448.426, 246.629, 100.87, 0.2288 ) }
    dend_28 { pt3dadd( 448.516, 245.502, 101.222, 0.2288 ) }
    dend_28 { pt3dadd( 448.806, 244.426, 101.631, 0.2288 ) }
    dend_28 { pt3dadd( 449.095, 243.349, 102.097, 0.2288 ) }
    dend_28 { pt3dadd( 449.385, 242.274, 102.619, 0.2288 ) }
    dend_28 { pt3dadd( 449.676, 241.197, 103.192, 0.2288 ) }
    dend_28 { pt3dadd( 449.966, 240.121, 103.794, 0.2288 ) }
    dend_28 { pt3dadd( 450.255, 239.044, 104.401, 0.2288 ) }
    dend_28 { pt3dadd( 450.546, 237.969, 105.0, 0.2288 ) }
    dend_28 { pt3dadd( 450.836, 236.893, 105.586, 0.2288 ) }
    dend_28 { pt3dadd( 451.126, 235.816, 106.153, 0.2288 ) }
    dend_28 { pt3dadd( 451.415, 234.74, 106.695, 0.2288 ) }
    dend_28 { pt3dadd( 451.706, 233.664, 107.204, 0.2288 ) }
    dend_28 { pt3dadd( 451.996, 232.588, 107.673, 0.2288 ) }
    dend_28 { pt3dadd( 452.266, 231.493, 108.056, 0.2288 ) }
    dend_28 { pt3dadd( 452.512, 230.375, 108.315, 0.2288 ) }
    dend_28 { pt3dadd( 452.757, 229.259, 108.475, 0.2288 ) }
    dend_28 { pt3dadd( 453.003, 228.141, 108.563, 0.2288 ) }
    dend_28 { pt3dadd( 453.23, 227.022, 108.601, 0.2288 ) }
    dend_28 { pt3dadd( 453.217, 225.878, 108.61, 0.2288 ) }
    dend_28 { pt3dadd( 453.206, 224.734, 108.61, 0.2288 ) }
    dend_28 { pt3dadd( 453.193, 223.59, 108.61, 0.2288 ) }
    dend_28 { pt3dadd( 453.181, 222.446, 108.61, 0.2288 ) }
    dend_28 { pt3dadd( 453.169, 221.302, 108.61, 0.2288 ) }
    dend_28 { pt3dadd( 453.157, 220.158, 108.61, 0.2542 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 55/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 309.402, 304.617, 35.0067, 0.6102 ) }
    dend_19 { pt3dadd( 308.88, 303.881, 35.28, 0.4322 ) }
    dend_19 { pt3dadd( 308.88, 302.737, 35.2548, 0.356 ) }
    dend_19 { pt3dadd( 308.792, 301.601, 35.2481, 0.3814 ) }
    dend_19 { pt3dadd( 308.651, 300.468, 35.2369, 0.4322 ) }
    dend_19 { pt3dadd( 308.506, 299.347, 35.1938, 0.5338 ) }
    dend_19 { pt3dadd( 308.079, 298.285, 35.1655, 0.5338 ) }
    dend_19 { pt3dadd( 307.604, 297.252, 35.1898, 0.5338 ) }
    dend_19 { pt3dadd( 307.312, 296.151, 35.2136, 0.5084 ) }
    dend_19 { pt3dadd( 307.174, 295.015, 35.2355, 0.5338 ) }
    dend_19 { pt3dadd( 306.507, 294.137, 35.2554, 0.483 ) }
    dend_19 { pt3dadd( 305.901, 293.194, 35.2722, 0.483 ) }
    dend_19 { pt3dadd( 305.105, 292.635, 35.28, 0.5338 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 68/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 309.402, 304.617, 35.0067, 0.6102 ) }
    dend_18 { pt3dadd( 307.898, 303.737, 35.2895, 0.6356 ) }
    dend_18 { pt3dadd( 306.923, 303.182, 35.5964, 0.5338 ) }
    dend_18 { pt3dadd( 305.954, 302.604, 35.9038, 0.4576 ) }
    dend_18 { pt3dadd( 304.868, 302.364, 36.1595, 0.4068 ) }
    dend_18 { pt3dadd( 303.866, 302.732, 36.3835, 0.483 ) }
    dend_18 { pt3dadd( 303.115, 303.535, 36.5098, 0.5084 ) }
    dend_18 { pt3dadd( 302.036, 303.83, 36.5095, 0.6102 ) }
    dend_18 { pt3dadd( 301.012, 304.206, 36.4826, 0.5592 ) }
    dend_18 { pt3dadd( 300.046, 304.637, 36.6094, 0.5592 ) }
    dend_18 { pt3dadd( 298.976, 304.868, 36.7349, 0.4576 ) }
    dend_18 { pt3dadd( 297.877, 304.875, 36.8432, 0.4322 ) }
    dend_18 { pt3dadd( 296.802, 304.645, 37.035, 0.3814 ) }
    dend_18 { pt3dadd( 295.713, 304.511, 37.1599, 0.4068 ) }
    dend_18 { pt3dadd( 294.621, 304.378, 37.109, 0.4576 ) }
    dend_18 { pt3dadd( 293.584, 303.986, 36.9561, 0.5084 ) }
    dend_18 { pt3dadd( 292.6, 303.409, 36.8124, 0.5084 ) }
    dend_18 { pt3dadd( 291.582, 302.896, 36.7063, 0.5084 ) }
    dend_18 { pt3dadd( 290.497, 302.541, 36.6388, 0.5084 ) }
    dend_18 { pt3dadd( 289.475, 302.055, 36.6321, 0.5848 ) }
    dend_18 { pt3dadd( 288.484, 301.504, 36.7136, 0.6102 ) }
    dend_18 { pt3dadd( 287.469, 301.012, 36.8656, 0.6102 ) }
    dend_18 { pt3dadd( 286.426, 300.595, 36.96, 0.5338 ) }
    dend_18 { pt3dadd( 285.315, 300.436, 37.0093, 0.5084 ) }
    dend_18 { pt3dadd( 284.189, 300.456, 37.0994, 0.483 ) }
    dend_18 { pt3dadd( 283.078, 300.663, 37.1748, 0.5084 ) }
    dend_18 { pt3dadd( 281.951, 300.835, 37.2008, 0.4576 ) }
    dend_18 { pt3dadd( 280.81, 300.871, 37.184, 0.4576 ) }
    dend_18 { pt3dadd( 279.683, 300.862, 37.0927, 0.3814 ) }
    dend_18 { pt3dadd( 278.559, 300.803, 36.9317, 0.3814 ) }
    dend_18 { pt3dadd( 277.464, 300.533, 36.771, 0.356 ) }
    dend_18 { pt3dadd( 276.4, 300.121, 36.671, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_18 { pt3dadd( 275.344, 299.718, 36.6568, 0.4576 ) }
    dend_18 { pt3dadd( 274.374, 299.195, 36.6024, 0.483 ) }
    dend_18 { pt3dadd( 273.355, 298.722, 36.5159, 0.4576 ) }
    dend_18 { pt3dadd( 272.24, 298.52, 36.4398, 0.3814 ) }
    dend_18 { pt3dadd( 271.203, 298.128, 36.321, 0.3814 ) }
    dend_18 { pt3dadd( 270.445, 297.318, 36.2337, 0.4322 ) }
    dend_18 { pt3dadd( 269.681, 296.48, 36.2088, 0.483 ) }
    dend_18 { pt3dadd( 268.909, 295.639, 36.2048, 0.4576 ) }
    dend_18 { pt3dadd( 268.381, 294.636, 36.1981, 0.3814 ) }
    dend_18 { pt3dadd( 267.671, 293.785, 36.2326, 0.3304 ) }
    dend_18 { pt3dadd( 266.682, 293.288, 36.1718, 0.3304 ) }
    dend_18 { pt3dadd( 265.669, 292.817, 35.9856, 0.4068 ) }
    dend_18 { pt3dadd( 264.584, 292.587, 35.7025, 0.483 ) }
    dend_18 { pt3dadd( 263.478, 292.315, 35.4354, 0.483 ) }
    dend_18 { pt3dadd( 262.342, 292.339, 35.1974, 0.3814 ) }
    dend_18 { pt3dadd( 261.253, 292.621, 34.9412, 0.2796 ) }
    dend_18 { pt3dadd( 260.165, 292.896, 34.6777, 0.2542 ) }
    dend_18 { pt3dadd( 259.04, 293.082, 34.4898, 0.305 ) }
    dend_18 { pt3dadd( 257.9, 293.153, 34.3717, 0.356 ) }
    dend_18 { pt3dadd( 256.803, 293.466, 34.3045, 0.356 ) }
    dend_18 { pt3dadd( 255.747, 293.904, 34.2818, 0.356 ) }
    dend_18 { pt3dadd( 254.646, 294.215, 34.2972, 0.356 ) }
    dend_18 { pt3dadd( 253.803, 294.967, 34.3403, 0.3814 ) }
    dend_18 { pt3dadd( 252.827, 295.512, 34.4504, 0.3304 ) }
    dend_18 { pt3dadd( 251.867, 296.104, 34.5817, 0.305 ) }
    dend_18 { pt3dadd( 250.86, 296.647, 34.6478, 0.305 ) }
    dend_18 { pt3dadd( 249.807, 297.088, 34.6293, 0.3814 ) }
    dend_18 { pt3dadd( 248.722, 297.267, 34.4582, 0.4068 ) }
    dend_18 { pt3dadd( 247.636, 297.605, 34.2418, 0.3814 ) }
    dend_18 { pt3dadd( 246.72, 298.118, 33.9024, 0.305 ) }
    dend_18 { pt3dadd( 245.602, 297.898, 33.686, 0.2542 ) }
    dend_18 { pt3dadd( 244.588, 298.24, 33.5471, 0.2288 ) }
    dend_18 { pt3dadd( 243.474, 298.243, 33.481, 0.2288 ) }
    dend_18 { pt3dadd( 242.347, 298.126, 33.4796, 0.2288 ) }
    dend_18 { pt3dadd( 241.226, 298.241, 33.5619, 0.2288 ) }
    dend_18 { pt3dadd( 240.083, 298.232, 33.6638, 0.2542 ) }
    dend_18 { pt3dadd( 238.998, 297.903, 33.7254, 0.2796 ) }
    dend_18 { pt3dadd( 237.87, 297.898, 33.838, 0.305 ) }
    dend_18 { pt3dadd( 236.789, 298.103, 34.0382, 0.2796 ) }
    dend_18 { pt3dadd( 235.969, 298.639, 34.2868, 0.2542 ) }
    dend_18 { pt3dadd( 235.345, 299.574, 34.5058, 0.2288 ) }
    dend_18 { pt3dadd( 234.709, 300.442, 34.7082, 0.2288 ) }
    dend_18 { pt3dadd( 233.745, 300.958, 34.827, 0.2288 ) }
    dend_18 { pt3dadd( 232.963, 301.673, 34.8191, 0.2288 ) }
    dend_18 { pt3dadd( 231.824, 301.724, 34.7514, 0.2288 ) }
    dend_18 { pt3dadd( 230.907, 302.245, 34.6478, 0.2542 ) }
    dend_18 { pt3dadd( 229.975, 302.359, 34.393, 0.2796 ) }
    dend_18 { pt3dadd( 229.317, 303.07, 34.0838, 0.305 ) }
    dend_18 { pt3dadd( 228.489, 303.849, 33.8674, 0.2796 ) }
    dend_18 { pt3dadd( 227.569, 304.481, 33.7067, 0.2542 ) }
    dend_18 { pt3dadd( 226.621, 305.105, 33.6745, 0.2542 ) }
    dend_18 { pt3dadd( 225.71, 305.789, 33.7588, 0.2796 ) }
    dend_18 { pt3dadd( 224.96, 306.616, 33.9486, 0.305 ) }
    dend_18 { pt3dadd( 224.581, 307.683, 34.1748, 0.2796 ) }
    dend_18 { pt3dadd( 224.224, 308.6, 34.545, 0.2542 ) }
    dend_18 { pt3dadd( 224.224, 309.681, 35.56, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 56/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 380.615, 380.953, 47.8624, 0.483 ) }
    dend_12 { pt3dadd( 380.938, 381.555, 49.4452, 0.4576 ) }
    dend_12 { pt3dadd( 381.406, 382.387, 50.3622, 0.483 ) }
    dend_12 { pt3dadd( 382.462, 382.827, 50.689, 0.4576 ) }
    dend_12 { pt3dadd( 383.539, 383.053, 50.9807, 0.4068 ) }
    dend_12 { pt3dadd( 384.661, 382.832, 51.2428, 0.356 ) }
    dend_12 { pt3dadd( 385.743, 382.635, 51.487, 0.3304 ) }
    dend_12 { pt3dadd( 385.253, 383.427, 51.9408, 0.305 ) }
    dend_12 { pt3dadd( 384.469, 384.219, 52.3222, 0.305 ) }
    dend_12 { pt3dadd( 384.838, 385.291, 52.6358, 0.305 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 66/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 380.615, 380.953, 47.8624, 0.483 ) }
    dend_7 { pt3dadd( 379.69, 379.858, 48.0385, 0.5084 ) }
    dend_7 { pt3dadd( 379.158, 378.988, 48.0998, 0.5848 ) }
    dend_7 { pt3dadd( 378.34, 378.495, 48.3339, 0.5848 ) }
    dend_7 { pt3dadd( 377.372, 378.435, 48.718, 0.5848 ) }
    dend_7 { pt3dadd( 376.255, 378.43, 49.0244, 0.5338 ) }
    dend_7 { pt3dadd( 375.178, 378.4, 49.1613, 0.5338 ) }
    dend_7 { pt3dadd( 374.144, 378.214, 49.3158, 0.483 ) }
    dend_7 { pt3dadd( 373.145, 378.272, 49.6476, 0.483 ) }
    dend_7 { pt3dadd( 372.18, 378.744, 50.0682, 0.4322 ) }
    dend_7 { pt3dadd( 371.121, 378.98, 50.5126, 0.3814 ) }
    dend_7 { pt3dadd( 370.095, 378.619, 50.9698, 0.4068 ) }
    dend_7 { pt3dadd( 369.101, 378.094, 51.4254, 0.4322 ) }
    dend_7 { pt3dadd( 368.057, 377.647, 51.7944, 0.483 ) }
    dend_7 { pt3dadd( 366.964, 377.318, 52.0537, 0.4322 ) }
    dend_7 { pt3dadd( 365.855, 377.402, 52.2388, 0.4068 ) }
    dend_7 { pt3dadd( 364.82, 377.869, 52.3659, 0.4322 ) }
    dend_7 { pt3dadd( 363.882, 378.36, 52.5935, 0.4576 ) }
    dend_7 { pt3dadd( 362.841, 378.733, 52.8441, 0.5084 ) }
    dend_7 { pt3dadd( 361.781, 378.56, 53.1188, 0.5338 ) }
    dend_7 { pt3dadd( 360.724, 378.145, 53.3442, 0.5848 ) }
    dend_7 { pt3dadd( 359.635, 378.116, 53.3943, 0.6102 ) }
    dend_7 { pt3dadd( 358.522, 378.327, 53.3638, 0.5848 ) }
    dend_7 { pt3dadd( 357.407, 378.147, 53.2969, 0.5848 ) }
    dend_7 { pt3dadd( 356.307, 377.837, 53.2207, 0.6102 ) }
    dend_7 { pt3dadd( 355.189, 377.605, 53.1325, 0.661 ) }
    dend_7 { pt3dadd( 354.096, 377.776, 52.9967, 0.6864 ) }
    dend_7 { pt3dadd( 352.987, 377.752, 52.9973, 0.6864 ) }
    dend_7 { pt3dadd( 351.885, 377.474, 53.0659, 0.661 ) }
    dend_7 { pt3dadd( 350.802, 377.113, 53.1409, 0.5848 ) }
    dend_7 { pt3dadd( 349.799, 376.588, 53.1759, 0.483 ) }
    dend_7 { pt3dadd( 348.964, 375.819, 53.2008, 0.4322 ) }
    dend_7 { pt3dadd( 348.415, 374.974, 53.4456, 0.483 ) }
    dend_7 { pt3dadd( 347.547, 374.273, 53.7281, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_7 { pt3dadd( 346.467, 373.895, 53.9521, 0.5338 ) }
    dend_7 { pt3dadd( 345.398, 373.488, 54.1274, 0.4576 ) }
    dend_7 { pt3dadd( 344.401, 372.928, 54.255, 0.4576 ) }
    dend_7 { pt3dadd( 343.424, 372.334, 54.3329, 0.5084 ) }
    dend_7 { pt3dadd( 342.393, 371.839, 54.3651, 0.5848 ) }
    dend_7 { pt3dadd( 341.31, 371.473, 54.3917, 0.6102 ) }
    dend_7 { pt3dadd( 340.215, 371.178, 54.4009, 0.5592 ) }
    dend_7 { pt3dadd( 339.114, 371.276, 54.3718, 0.5084 ) }
    dend_7 { pt3dadd( 338.191, 371.882, 54.511, 0.4322 ) }
    dend_7 { pt3dadd( 337.415, 372.569, 54.7896, 0.4322 ) }
    dend_7 { pt3dadd( 336.478, 372.785, 55.2104, 0.4322 ) }
    dend_7 { pt3dadd( 335.392, 372.633, 55.5447, 0.4322 ) }
    dend_7 { pt3dadd( 334.388, 372.109, 55.8079, 0.3814 ) }
    dend_7 { pt3dadd( 333.306, 371.757, 56.0479, 0.3304 ) }
    dend_7 { pt3dadd( 332.273, 372.081, 56.3296, 0.305 ) }
    dend_7 { pt3dadd( 331.775, 372.958, 56.7314, 0.305 ) }
    dend_7 { pt3dadd( 331.071, 373.832, 57.1127, 0.305 ) }
    dend_7 { pt3dadd( 330.006, 374.229, 57.4266, 0.3304 ) }
    dend_7 { pt3dadd( 328.877, 374.089, 57.6839, 0.3814 ) }
    dend_7 { pt3dadd( 327.81, 373.815, 57.9519, 0.4322 ) }
    dend_7 { pt3dadd( 326.702, 373.537, 58.1123, 0.4576 ) }
    dend_7 { pt3dadd( 325.565, 373.438, 58.1356, 0.4322 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 442.842, 363.265, 39.7183, 0.4068 ) }
    dend_3 { pt3dadd( 443.308, 363.371, 38.8024, 0.4322 ) }
    dend_3 { pt3dadd( 444.228, 363.775, 37.2747, 0.5084 ) }
    dend_3 { pt3dadd( 445.259, 364.141, 36.6313, 0.483 ) }
    dend_3 { pt3dadd( 446.366, 364.183, 35.9906, 0.4068 ) }
    dend_3 { pt3dadd( 447.329, 363.91, 35.2192, 0.305 ) }
    dend_3 { pt3dadd( 448.003, 363.808, 34.1642, 0.2542 ) }
    dend_3 { pt3dadd( 448.775, 364.149, 33.0252, 0.2288 ) }
    dend_3 { pt3dadd( 449.621, 364.608, 31.8674, 0.2288 ) }
    dend_3 { pt3dadd( 450.466, 365.066, 30.7222, 0.2288 ) }
    dend_3 { pt3dadd( 451.438, 365.259, 29.7223, 0.2288 ) }
    dend_3 { pt3dadd( 452.573, 365.115, 29.0066, 0.2542 ) }
    dend_3 { pt3dadd( 453.708, 364.97, 28.518, 0.2796 ) }
    dend_3 { pt3dadd( 454.818, 365.121, 28.1442, 0.305 ) }
    dend_3 { pt3dadd( 455.917, 365.395, 27.8317, 0.2796 ) }
    dend_3 { pt3dadd( 457.017, 365.668, 27.5524, 0.2796 ) }
    dend_3 { pt3dadd( 458.115, 365.942, 27.2817, 0.2796 ) }
    dend_3 { pt3dadd( 459.214, 366.215, 26.6871, 0.356 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 40/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 442.842, 363.265, 39.7183, 0.4068 ) }
    dend_2 { pt3dadd( 443.405, 363.088, 39.5368, 0.3814 ) }
    dend_2 { pt3dadd( 444.465, 362.676, 39.3747, 0.483 ) }
    dend_2 { pt3dadd( 445.534, 362.367, 39.1731, 0.5084 ) }
    dend_2 { pt3dadd( 446.589, 361.967, 38.9777, 0.5848 ) }
    dend_2 { pt3dadd( 447.52, 361.318, 38.8214, 0.5338 ) }
    dend_2 { pt3dadd( 448.307, 360.495, 38.6887, 0.483 ) }
    dend_2 { pt3dadd( 448.818, 359.494, 38.6254, 0.3814 ) }
    dend_2 { pt3dadd( 449.698, 358.825, 38.6002, 0.305 ) }
    dend_2 { pt3dadd( 450.806, 358.55, 38.5972, 0.2542 ) }
    dend_2 { pt3dadd( 451.857, 358.108, 38.598, 0.2288 ) }
    dend_2 { pt3dadd( 452.864, 357.595, 38.5952, 0.2288 ) }
    dend_2 { pt3dadd( 454.003, 357.508, 38.5862, 0.2288 ) }
    dend_2 { pt3dadd( 455.089, 357.253, 38.5655, 0.2288 ) }
    dend_2 { pt3dadd( 455.838, 356.401, 38.5356, 0.2288 ) }
    dend_2 { pt3dadd( 456.624, 355.612, 38.495, 0.2288 ) }
    dend_2 { pt3dadd( 457.337, 354.724, 38.4423, 0.2288 ) }
    dend_2 { pt3dadd( 458.103, 353.883, 38.3572, 0.2288 ) }
    dend_2 { pt3dadd( 458.962, 353.163, 38.2217, 0.2288 ) }
    dend_2 { pt3dadd( 459.807, 352.4, 38.0794, 0.2796 ) }
    dend_2 { pt3dadd( 460.674, 351.69, 37.9159, 0.3814 ) }
    dend_2 { pt3dadd( 461.713, 351.528, 37.742, 0.483 ) }
    dend_2 { pt3dadd( 462.79, 351.144, 37.6048, 0.483 ) }
    dend_2 { pt3dadd( 463.863, 350.751, 37.5007, 0.3814 ) }
    dend_2 { pt3dadd( 464.808, 350.153, 37.4007, 0.305 ) }
    dend_2 { pt3dadd( 465.717, 349.506, 37.3044, 0.305 ) }
    dend_2 { pt3dadd( 466.812, 349.279, 37.2599, 0.3814 ) }
    dend_2 { pt3dadd( 467.935, 349.42, 37.2322, 0.4576 ) }
    dend_2 { pt3dadd( 469.059, 349.511, 37.1795, 0.483 ) }
    dend_2 { pt3dadd( 470.15, 349.222, 37.0969, 0.4576 ) }
    dend_2 { pt3dadd( 471.191, 348.75, 36.9788, 0.3814 ) }
    dend_2 { pt3dadd( 472.273, 348.518, 36.7822, 0.3304 ) }
    dend_2 { pt3dadd( 473.069, 348.999, 36.4193, 0.3304 ) }
    dend_2 { pt3dadd( 473.995, 349.304, 36.013, 0.356 ) }
    dend_2 { pt3dadd( 474.976, 348.828, 35.6446, 0.4322 ) }
    dend_2 { pt3dadd( 475.903, 348.16, 35.3268, 0.4576 ) }
    dend_2 { pt3dadd( 476.808, 347.461, 35.0711, 0.483 ) }
    dend_2 { pt3dadd( 477.794, 346.942, 34.911, 0.4068 ) }
    dend_2 { pt3dadd( 478.79, 346.711, 34.6192, 0.356 ) }
    dend_2 { pt3dadd( 479.457, 345.957, 34.1967, 0.2796 ) }
    dend_2 { pt3dadd( 480.391, 345.505, 33.6804, 0.2542 ) }
    dend_2 { pt3dadd( 481.496, 345.26, 33.2016, 0.2288 ) }
    dend_2 { pt3dadd( 482.404, 344.63, 32.7197, 0.2288 ) }
    dend_2 { pt3dadd( 482.984, 343.674, 32.2652, 0.2288 ) }
    dend_2 { pt3dadd( 483.085, 342.546, 31.9206, 0.2288 ) }
    dend_2 { pt3dadd( 484.015, 341.971, 31.6484, 0.2288 ) }
    dend_2 { pt3dadd( 485.048, 342.375, 31.3466, 0.2288 ) }
    dend_2 { pt3dadd( 486.02, 342.908, 31.0369, 0.2288 ) }
    dend_2 { pt3dadd( 487.005, 342.329, 30.7815, 0.2542 ) }
    dend_2 { pt3dadd( 487.907, 341.636, 30.5578, 0.305 ) }
    dend_2 { pt3dadd( 489.025, 341.414, 30.343, 0.356 ) }
    dend_2 { pt3dadd( 490.155, 341.491, 30.1042, 0.356 ) }
    dend_2 { pt3dadd( 491.148, 341.37, 29.7377, 0.305 ) }
    dend_2 { pt3dadd( 491.961, 341.13, 29.3138, 0.2542 ) }
    dend_2 { pt3dadd( 492.764, 340.388, 28.9769, 0.2288 ) }
    dend_2 { pt3dadd( 493.829, 340.111, 28.719, 0.2288 ) }
    dend_2 { pt3dadd( 494.85, 339.774, 28.5317, 0.2288 ) }
    dend_2 { pt3dadd( 495.914, 339.378, 28.4052, 0.2288 ) }
    dend_2 { pt3dadd( 497.045, 339.31, 28.3156, 0.2542 ) }
    dend_2 { pt3dadd( 498.172, 339.31, 28.1744, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 499.306, 339.196, 28.0473, 0.356 ) }
    dend_2 { pt3dadd( 500.44, 339.196, 27.8966, 0.356 ) }
    dend_2 { pt3dadd( 501.585, 339.196, 27.775, 0.305 ) }
    dend_2 { pt3dadd( 502.728, 339.196, 27.6799, 0.2796 ) }
    dend_2 { pt3dadd( 503.784, 339.009, 27.5685, 0.2796 ) }
    dend_2 { pt3dadd( 504.798, 338.624, 27.4893, 0.305 ) }
    dend_2 { pt3dadd( 505.941, 338.624, 27.4249, 0.2796 ) }
    dend_2 { pt3dadd( 507.086, 338.624, 27.3717, 0.2542 ) }
    dend_2 { pt3dadd( 508.23, 338.624, 27.3195, 0.2542 ) }
    dend_2 { pt3dadd( 509.374, 338.624, 27.2673, 0.2796 ) }
    dend_2 { pt3dadd( 510.486, 338.642, 27.1895, 0.305 ) }
    dend_2 { pt3dadd( 511.114, 339.505, 27.0582, 0.2796 ) }
    dend_2 { pt3dadd( 512.03, 339.997, 26.948, 0.2542 ) }
    dend_2 { pt3dadd( 513.057, 340.397, 26.8187, 0.2542 ) }
    dend_2 { pt3dadd( 514.164, 340.569, 26.7226, 0.2796 ) }
    dend_2 { pt3dadd( 515.293, 340.733, 26.6573, 0.305 ) }
    dend_2 { pt3dadd( 516.286, 341.255, 26.6, 0.3304 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 17/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 384.838, 385.291, 52.6358, 0.305 ) }
    dend_16 { pt3dadd( 384.995, 385.569, 52.9211, 0.4576 ) }
    dend_16 { pt3dadd( 385.336, 386.547, 53.2638, 0.356 ) }
    dend_16 { pt3dadd( 385.088, 387.664, 53.4814, 0.3304 ) }
    dend_16 { pt3dadd( 384.878, 388.783, 53.5825, 0.3304 ) }
    dend_16 { pt3dadd( 385.001, 389.921, 53.6161, 0.3304 ) }
    dend_16 { pt3dadd( 385.094, 391.051, 53.5447, 0.305 ) }
    dend_16 { pt3dadd( 385.185, 392.181, 53.3848, 0.3304 ) }
    dend_16 { pt3dadd( 385.275, 393.312, 53.1653, 0.356 ) }
    dend_16 { pt3dadd( 385.204, 394.44, 52.957, 0.356 ) }
    dend_16 { pt3dadd( 385.001, 395.565, 52.7867, 0.305 ) }
    dend_16 { pt3dadd( 384.818, 396.695, 52.6484, 0.2542 ) }
    dend_16 { pt3dadd( 384.639, 397.825, 52.5372, 0.305 ) }
    dend_16 { pt3dadd( 384.43, 398.944, 52.404, 0.4068 ) }
    dend_16 { pt3dadd( 384.216, 400.06, 52.2438, 0.5084 ) }
    dend_16 { pt3dadd( 384.002, 401.177, 52.0621, 0.4576 ) }
    dend_16 { pt3dadd( 383.788, 402.293, 51.8694, 0.356 ) }
    dend_16 { pt3dadd( 383.717, 403.433, 51.7191, 0.2542 ) }
    dend_16 { pt3dadd( 383.668, 404.576, 51.6144, 0.2288 ) }
    dend_16 { pt3dadd( 383.553, 405.707, 51.5514, 0.2288 ) }
    dend_16 { pt3dadd( 383.223, 406.803, 51.5189, 0.2542 ) }
    dend_16 { pt3dadd( 382.773, 407.818, 51.5057, 0.2796 ) }
    dend_16 { pt3dadd( 381.878, 408.528, 51.5018, 0.3304 ) }
    dend_16 { pt3dadd( 381.096, 409.337, 51.4976, 0.3304 ) }
    dend_16 { pt3dadd( 380.529, 410.33, 51.492, 0.356 ) }
    dend_16 { pt3dadd( 380.061, 411.355, 51.4839, 0.356 ) }
    dend_16 { pt3dadd( 379.941, 412.493, 51.4724, 0.4068 ) }
    dend_16 { pt3dadd( 379.87, 413.635, 51.4567, 0.4068 ) }
    dend_16 { pt3dadd( 379.818, 414.778, 51.4354, 0.4068 ) }
    dend_16 { pt3dadd( 379.533, 415.868, 51.4044, 0.356 ) }
    dend_16 { pt3dadd( 379.088, 416.922, 51.359, 0.3304 ) }
    dend_16 { pt3dadd( 378.589, 417.944, 51.298, 0.2796 ) }
    dend_16 { pt3dadd( 377.915, 418.87, 51.2212, 0.2542 ) }
    dend_16 { pt3dadd( 377.242, 419.794, 51.1308, 0.2288 ) }
    dend_16 { pt3dadd( 376.596, 420.228, 50.8872, 0.2288 ) }
    dend_16 { pt3dadd( 376.286, 421.103, 50.6268, 0.2288 ) }
    dend_16 { pt3dadd( 375.586, 421.966, 50.4249, 0.2542 ) }
    dend_16 { pt3dadd( 375.315, 423.066, 50.2774, 0.2796 ) }
    dend_16 { pt3dadd( 374.762, 424.058, 50.1799, 0.305 ) }
    dend_16 { pt3dadd( 373.988, 424.859, 50.1276, 0.2796 ) }
    dend_16 { pt3dadd( 373.303, 425.775, 50.1152, 0.2542 ) }
    dend_16 { pt3dadd( 372.702, 426.734, 50.1136, 0.2288 ) }
    dend_16 { pt3dadd( 372.073, 427.685, 50.1108, 0.2288 ) }
    dend_16 { pt3dadd( 371.503, 428.672, 50.1071, 0.2288 ) }
    dend_16 { pt3dadd( 371.191, 429.761, 50.1021, 0.2288 ) }
    dend_16 { pt3dadd( 370.566, 430.713, 50.0951, 0.2288 ) }
    dend_16 { pt3dadd( 369.919, 431.652, 50.085, 0.2288 ) }
    dend_16 { pt3dadd( 369.255, 432.567, 50.0704, 0.2288 ) }
    dend_16 { pt3dadd( 368.706, 433.566, 50.0506, 0.2288 ) }
    dend_16 { pt3dadd( 368.202, 434.593, 50.0248, 0.2288 ) }
    dend_16 { pt3dadd( 367.67, 435.601, 49.994, 0.2288 ) }
    dend_16 { pt3dadd( 367.217, 436.63, 49.919, 0.2288 ) }
    dend_16 { pt3dadd( 366.544, 437.551, 49.8434, 0.2288 ) }
    dend_16 { pt3dadd( 366.008, 438.543, 49.7543, 0.2288 ) }
    dend_16 { pt3dadd( 365.852, 439.663, 49.6902, 0.2288 ) }
    dend_16 { pt3dadd( 365.555, 440.763, 49.6504, 0.2288 ) }
    dend_16 { pt3dadd( 364.907, 441.68, 49.6339, 0.2288 ) }
    dend_16 { pt3dadd( 364.357, 442.682, 49.6423, 0.2288 ) }
    dend_16 { pt3dadd( 363.844, 443.703, 49.6692, 0.2288 ) }
    dend_16 { pt3dadd( 363.243, 444.656, 49.712, 0.2542 ) }
    dend_16 { pt3dadd( 362.364, 445.389, 49.7652, 0.2796 ) }
    dend_16 { pt3dadd( 361.515, 446.154, 49.8282, 0.305 ) }
    dend_16 { pt3dadd( 360.556, 446.414, 50.0203, 0.2796 ) }
    dend_16 { pt3dadd( 359.812, 447.074, 50.1799, 0.2542 ) }
    dend_16 { pt3dadd( 358.815, 447.609, 50.3093, 0.2288 ) }
    dend_16 { pt3dadd( 357.844, 448.216, 50.4112, 0.2288 ) }
    dend_16 { pt3dadd( 356.858, 448.762, 50.4885, 0.2288 ) }
    dend_16 { pt3dadd( 355.842, 449.234, 50.5851, 0.2288 ) }
    dend_16 { pt3dadd( 355.122, 450.081, 50.6509, 0.2288 ) }
    dend_16 { pt3dadd( 354.454, 450.953, 50.7111, 0.2288 ) }
    dend_16 { pt3dadd( 353.534, 451.605, 50.7665, 0.2288 ) }
    dend_16 { pt3dadd( 352.44, 451.919, 50.8306, 0.2288 ) }
    dend_16 { pt3dadd( 351.32, 452.109, 50.9211, 0.2288 ) }
    dend_16 { pt3dadd( 350.185, 452.223, 51.0003, 0.2288 ) }
    dend_16 { pt3dadd( 349.047, 452.315, 51.0784, 0.2288 ) }
    dend_16 { pt3dadd( 347.958, 452.653, 51.1557, 0.2288 ) }
    dend_16 { pt3dadd( 346.907, 452.982, 51.3038, 0.2288 ) }
    dend_16 { pt3dadd( 345.822, 453.32, 51.438, 0.2288 ) }
    dend_16 { pt3dadd( 344.85, 453.825, 51.5578, 0.2288 ) }
    dend_16 { pt3dadd( 343.73, 453.919, 51.6944, 0.2288 ) }
    dend_16 { pt3dadd( 342.651, 454.277, 51.8084, 0.2288 ) }
    dend_16 { pt3dadd( 341.592, 454.674, 51.9039, 0.2288 ) }
    dend_16 { pt3dadd( 340.648, 455.317, 51.9862, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_16 { pt3dadd( 339.53, 455.495, 52.0761, 0.2288 ) }
    dend_16 { pt3dadd( 338.438, 455.655, 52.2435, 0.2288 ) }
    dend_16 { pt3dadd( 337.293, 455.655, 52.3933, 0.2288 ) }
    dend_16 { pt3dadd( 336.159, 455.681, 52.5678, 0.2288 ) }
    dend_16 { pt3dadd( 335.088, 456.001, 52.7612, 0.2288 ) }
    dend_16 { pt3dadd( 333.991, 456.302, 52.9228, 0.2288 ) }
    dend_16 { pt3dadd( 333.07, 456.944, 53.0561, 0.2288 ) }
    dend_16 { pt3dadd( 332.07, 457.371, 53.1636, 0.2288 ) }
    dend_16 { pt3dadd( 331.074, 457.725, 53.3546, 0.2288 ) }
    dend_16 { pt3dadd( 330.109, 458.267, 53.5643, 0.2288 ) }
    dend_16 { pt3dadd( 329.022, 458.62, 53.7144, 0.2288 ) }
    dend_16 { pt3dadd( 327.93, 458.961, 53.8143, 0.2288 ) }
    dend_16 { pt3dadd( 326.816, 459.202, 53.8667, 0.2288 ) }
    dend_16 { pt3dadd( 325.674, 459.202, 53.8518, 0.2288 ) }
    dend_16 { pt3dadd( 324.534, 459.202, 53.7894, 0.2288 ) }
    dend_16 { pt3dadd( 323.391, 459.202, 53.7214, 0.2288 ) }
    dend_16 { pt3dadd( 322.251, 459.189, 53.632, 0.2542 ) }
    dend_16 { pt3dadd( 321.148, 458.892, 53.5413, 0.2796 ) }
    dend_16 { pt3dadd( 320.012, 458.768, 53.4652, 0.3304 ) }
    dend_16 { pt3dadd( 318.868, 458.744, 53.4016, 0.356 ) }
    dend_16 { pt3dadd( 317.767, 458.471, 53.3453, 0.3814 ) }
    dend_16 { pt3dadd( 316.793, 457.92, 53.2552, 0.3814 ) }
    dend_16 { pt3dadd( 315.741, 457.55, 53.1398, 0.3814 ) }
    dend_16 { pt3dadd( 314.611, 457.367, 53.0499, 0.3814 ) }
    dend_16 { pt3dadd( 313.484, 457.166, 52.9813, 0.3814 ) }
    dend_16 { pt3dadd( 312.352, 457.023, 52.9315, 0.3814 ) }
    dend_16 { pt3dadd( 311.234, 456.832, 52.8979, 0.3814 ) }
    dend_16 { pt3dadd( 310.172, 456.408, 52.8777, 0.4068 ) }
    dend_16 { pt3dadd( 309.051, 456.211, 52.8609, 0.4068 ) }
    dend_16 { pt3dadd( 307.919, 456.114, 52.8382, 0.4068 ) }
    dend_16 { pt3dadd( 306.799, 456.265, 52.8049, 0.3304 ) }
    dend_16 { pt3dadd( 305.671, 456.374, 52.7568, 0.305 ) }
    dend_16 { pt3dadd( 304.548, 456.586, 52.6924, 0.2796 ) }
    dend_16 { pt3dadd( 303.41, 456.685, 52.6103, 0.305 ) }
    dend_16 { pt3dadd( 302.267, 456.697, 52.5101, 0.2796 ) }
    dend_16 { pt3dadd( 301.385, 457.028, 52.2483, 0.2542 ) }
    dend_16 { pt3dadd( 300.25, 457.081, 51.9966, 0.2288 ) }
    dend_16 { pt3dadd( 299.127, 457.301, 51.7734, 0.2542 ) }
    dend_16 { pt3dadd( 297.987, 457.371, 51.571, 0.2796 ) }
    dend_16 { pt3dadd( 296.861, 457.257, 51.3587, 0.305 ) }
    dend_16 { pt3dadd( 295.789, 457.49, 51.1011, 0.2796 ) }
    dend_16 { pt3dadd( 294.768, 457.981, 50.834, 0.2796 ) }
    dend_16 { pt3dadd( 293.697, 458.28, 50.5708, 0.305 ) }
    dend_16 { pt3dadd( 292.621, 458.286, 50.1847, 0.356 ) }
    dend_16 { pt3dadd( 291.519, 458.286, 49.7426, 0.356 ) }
    dend_16 { pt3dadd( 290.377, 458.286, 49.3503, 0.3304 ) }
    dend_16 { pt3dadd( 289.247, 458.222, 48.9812, 0.3304 ) }
    dend_16 { pt3dadd( 288.135, 457.989, 48.6332, 0.356 ) }
    dend_16 { pt3dadd( 287.071, 457.714, 48.2479, 0.3814 ) }
    dend_16 { pt3dadd( 285.967, 457.714, 47.8688, 0.3814 ) }
    dend_16 { pt3dadd( 284.909, 457.307, 47.5527, 0.3814 ) }
    dend_16 { pt3dadd( 283.941, 456.739, 47.2724, 0.356 ) }
    dend_16 { pt3dadd( 282.828, 456.709, 46.984, 0.305 ) }
    dend_16 { pt3dadd( 282.084, 457.418, 46.6614, 0.2542 ) }
    dend_16 { pt3dadd( 281.427, 458.045, 46.1905, 0.2288 ) }
    dend_16 { pt3dadd( 281.092, 459.115, 45.7853, 0.2288 ) }
    dend_16 { pt3dadd( 280.966, 460.233, 45.4574, 0.2288 ) }
    dend_16 { pt3dadd( 280.784, 461.317, 45.1296, 0.2542 ) }
    dend_16 { pt3dadd( 280.111, 462.175, 44.8862, 0.2796 ) }
    dend_16 { pt3dadd( 279.29, 462.913, 44.6768, 0.305 ) }
    dend_16 { pt3dadd( 278.549, 463.744, 44.5161, 0.2796 ) }
    dend_16 { pt3dadd( 277.549, 464.271, 44.3724, 0.2542 ) }
    dend_16 { pt3dadd( 276.79, 465.124, 44.296, 0.2288 ) }
    dend_16 { pt3dadd( 275.79, 465.68, 44.289, 0.2288 ) }
    dend_16 { pt3dadd( 274.711, 465.945, 44.3296, 0.2288 ) }
    dend_16 { pt3dadd( 273.771, 466.564, 44.4175, 0.2288 ) }
    dend_16 { pt3dadd( 272.852, 467.046, 44.6737, 0.2288 ) }
    dend_16 { pt3dadd( 272.29, 468.0, 44.9274, 0.2288 ) }
    dend_16 { pt3dadd( 271.814, 468.926, 45.36, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 69/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 384.838, 385.291, 52.6358, 0.305 ) }
    dend_13 { pt3dadd( 385.573, 385.363, 52.7537, 0.5338 ) }
    dend_13 { pt3dadd( 386.483, 385.073, 54.1747, 0.5084 ) }
    dend_13 { pt3dadd( 387.31, 384.631, 54.8652, 0.3814 ) }
    dend_13 { pt3dadd( 388.124, 383.899, 55.5307, 0.2796 ) }
    dend_13 { pt3dadd( 388.935, 383.091, 56.121, 0.2288 ) }
    dend_13 { pt3dadd( 389.749, 382.3, 56.653, 0.2288 ) }
    dend_13 { pt3dadd( 390.714, 382.091, 57.3331, 0.2288 ) }
    dend_13 { pt3dadd( 391.589, 381.689, 58.0712, 0.2288 ) }
    dend_13 { pt3dadd( 392.228, 380.771, 58.7672, 0.2288 ) }
    dend_13 { pt3dadd( 392.868, 379.854, 59.4468, 0.2288 ) }
    dend_13 { pt3dadd( 393.507, 378.936, 60.1012, 0.2288 ) }
    dend_13 { pt3dadd( 394.154, 378.023, 60.7144, 0.2288 ) }
    dend_13 { pt3dadd( 394.888, 377.169, 61.262, 0.2288 ) }
    dend_13 { pt3dadd( 395.621, 376.313, 61.773, 0.2288 ) }
    dend_13 { pt3dadd( 396.355, 375.458, 62.2675, 0.2288 ) }
    dend_13 { pt3dadd( 397.089, 374.604, 62.7491, 0.2288 ) }
    dend_13 { pt3dadd( 397.824, 373.749, 63.2195, 0.2288 ) }
    dend_13 { pt3dadd( 398.558, 372.895, 63.6798, 0.2288 ) }
    dend_13 { pt3dadd( 399.292, 372.04, 64.1306, 0.2542 ) }
    dend_13 { pt3dadd( 400.026, 371.185, 64.5697, 0.305 ) }
    dend_13 { pt3dadd( 400.751, 370.322, 64.9916, 0.356 ) }
    dend_13 { pt3dadd( 401.41, 369.394, 65.3722, 0.356 ) }
    dend_13 { pt3dadd( 402.068, 368.466, 65.7188, 0.305 ) }
    dend_13 { pt3dadd( 402.727, 367.539, 66.0391, 0.2796 ) }
    dend_13 { pt3dadd( 403.385, 366.611, 66.3398, 0.2796 ) }
    dend_13 { pt3dadd( 404.044, 365.683, 66.6274, 0.3304 ) }
    dend_13 { pt3dadd( 404.703, 364.755, 66.9077, 0.3304 ) }
    dend_13 { pt3dadd( 405.169, 363.723, 67.1784, 0.3304 ) }
    dend_13 { pt3dadd( 405.57, 362.656, 67.4402, 0.2796 ) }
    dend_13 { pt3dadd( 405.971, 361.589, 67.697, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_13 { pt3dadd( 406.372, 360.521, 67.9535, 0.2288 ) }
    dend_13 { pt3dadd( 406.773, 359.454, 68.215, 0.2288 ) }
    dend_13 { pt3dadd( 407.176, 358.387, 68.4872, 0.2288 ) }
    dend_13 { pt3dadd( 407.576, 357.319, 68.7758, 0.2288 ) }
    dend_13 { pt3dadd( 407.978, 356.252, 69.085, 0.2288 ) }
    dend_13 { pt3dadd( 408.278, 355.164, 69.4383, 0.2288 ) }
    dend_13 { pt3dadd( 408.482, 354.057, 69.851, 0.2288 ) }
    dend_13 { pt3dadd( 408.688, 352.949, 70.3153, 0.2288 ) }
    dend_13 { pt3dadd( 408.893, 351.842, 70.8249, 0.2288 ) }
    dend_13 { pt3dadd( 409.099, 350.734, 71.3745, 0.2288 ) }
    dend_13 { pt3dadd( 409.303, 349.628, 71.9597, 0.2796 ) }
    dend_13 { pt3dadd( 409.475, 348.525, 72.5886, 0.356 ) }
    dend_13 { pt3dadd( 409.529, 347.44, 73.2992, 0.4576 ) }
    dend_13 { pt3dadd( 409.659, 346.395, 74.0765, 0.483 ) }
    dend_13 { pt3dadd( 410.534, 345.744, 74.9028, 0.4576 ) }
    dend_13 { pt3dadd( 411.408, 345.093, 75.7694, 0.3814 ) }
    dend_13 { pt3dadd( 412.282, 344.442, 76.6702, 0.305 ) }
    dend_13 { pt3dadd( 413.156, 343.793, 77.5995, 0.305 ) }
    dend_13 { pt3dadd( 414.03, 343.142, 78.5492, 0.356 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 19/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 325.565, 373.438, 58.1356, 0.4322 ) }
    dend_11 { pt3dadd( 324.969, 373.585, 60.8703, 0.2796 ) }
    dend_11 { pt3dadd( 323.993, 373.63, 61.3203, 0.2542 ) }
    dend_11 { pt3dadd( 322.849, 373.63, 61.4785, 0.2288 ) }
    dend_11 { pt3dadd( 321.954, 374.2, 61.6202, 0.2288 ) }
    dend_11 { pt3dadd( 321.146, 374.983, 61.7501, 0.2288 ) }
    dend_11 { pt3dadd( 320.456, 375.883, 61.875, 0.2288 ) }
    dend_11 { pt3dadd( 319.671, 376.702, 62.0063, 0.2288 ) }
    dend_11 { pt3dadd( 318.628, 377.085, 62.1883, 0.2288 ) }
    dend_11 { pt3dadd( 317.657, 377.593, 62.4562, 0.2288 ) }
    dend_11 { pt3dadd( 317.281, 378.625, 62.711, 0.2288 ) }
    dend_11 { pt3dadd( 316.743, 379.236, 63.0529, 0.2288 ) }
    dend_11 { pt3dadd( 315.754, 379.236, 63.4928, 0.2542 ) }
    dend_11 { pt3dadd( 314.609, 379.236, 63.8467, 0.3304 ) }
    dend_11 { pt3dadd( 313.466, 379.236, 64.127, 0.4068 ) }
    dend_11 { pt3dadd( 312.367, 379.477, 64.3563, 0.4322 ) }
    dend_11 { pt3dadd( 311.5, 380.134, 64.5912, 0.356 ) }
    dend_11 { pt3dadd( 310.363, 380.151, 64.8178, 0.3304 ) }
    dend_11 { pt3dadd( 309.219, 380.151, 65.0443, 0.3814 ) }
    dend_11 { pt3dadd( 308.181, 380.151, 65.3705, 0.483 ) }
    dend_11 { pt3dadd( 307.299, 380.494, 65.8686, 0.483 ) }
    dend_11 { pt3dadd( 306.264, 380.494, 66.4672, 0.3814 ) }
    dend_11 { pt3dadd( 305.146, 380.494, 67.0121, 0.2796 ) }
    dend_11 { pt3dadd( 304.032, 380.649, 67.4559, 0.2288 ) }
    dend_11 { pt3dadd( 303.062, 381.168, 67.8868, 0.2288 ) }
    dend_11 { pt3dadd( 302.025, 381.636, 68.2228, 0.2542 ) }
    dend_11 { pt3dadd( 300.978, 381.867, 68.586, 0.2796 ) }
    dend_11 { pt3dadd( 299.84, 381.867, 68.8951, 0.305 ) }
    dend_11 { pt3dadd( 298.702, 381.867, 69.1911, 0.3304 ) }
    dend_11 { pt3dadd( 297.586, 381.867, 69.5324, 0.4068 ) }
    dend_11 { pt3dadd( 296.471, 381.867, 69.8684, 0.5084 ) }
    dend_11 { pt3dadd( 295.327, 381.867, 70.1568, 0.5338 ) }
    dend_11 { pt3dadd( 294.255, 381.867, 70.5065, 0.4576 ) }
    dend_11 { pt3dadd( 293.219, 381.53, 70.7994, 0.3304 ) }
    dend_11 { pt3dadd( 292.16, 381.12, 71.0494, 0.2542 ) }
    dend_11 { pt3dadd( 291.066, 380.954, 71.3224, 0.2542 ) }
    dend_11 { pt3dadd( 289.963, 380.78, 71.5879, 0.2796 ) }
    dend_11 { pt3dadd( 288.866, 380.6, 71.8542, 0.3304 ) }
    dend_11 { pt3dadd( 287.829, 380.243, 72.1235, 0.356 ) }
    dend_11 { pt3dadd( 286.832, 379.705, 72.3296, 0.3814 ) }
    dend_11 { pt3dadd( 285.691, 379.694, 72.4828, 0.356 ) }
    dend_11 { pt3dadd( 284.551, 379.694, 72.6149, 0.305 ) }
    dend_11 { pt3dadd( 283.421, 379.825, 72.7006, 0.2796 ) }
    dend_11 { pt3dadd( 282.289, 379.922, 72.7496, 0.2796 ) }
    dend_11 { pt3dadd( 281.151, 379.987, 72.7745, 0.305 ) }
    dend_11 { pt3dadd( 280.01, 380.037, 72.7894, 0.2796 ) }
    dend_11 { pt3dadd( 278.867, 380.037, 72.795, 0.2542 ) }
    dend_11 { pt3dadd( 277.723, 380.037, 72.7936, 0.2288 ) }
    dend_11 { pt3dadd( 276.66, 379.715, 72.791, 0.2288 ) }
    dend_11 { pt3dadd( 276.226, 378.717, 72.7874, 0.2796 ) }
    dend_11 { pt3dadd( 275.109, 378.548, 72.7824, 0.3304 ) }
    dend_11 { pt3dadd( 273.991, 378.371, 72.7754, 0.4068 ) }
    dend_11 { pt3dadd( 273.156, 377.749, 72.7653, 0.3814 ) }
    dend_11 { pt3dadd( 272.016, 377.673, 72.751, 0.356 ) }
    dend_11 { pt3dadd( 271.032, 377.097, 72.7317, 0.2796 ) }
    dend_11 { pt3dadd( 269.948, 376.743, 72.7065, 0.2542 ) }
    dend_11 { pt3dadd( 268.95, 376.217, 72.6751, 0.2288 ) }
    dend_11 { pt3dadd( 267.84, 375.995, 72.5973, 0.2288 ) }
    dend_11 { pt3dadd( 266.702, 375.918, 72.527, 0.2288 ) }
    dend_11 { pt3dadd( 265.574, 375.819, 72.4632, 0.2542 ) }
    dend_11 { pt3dadd( 264.571, 375.31, 72.3652, 0.305 ) }
    dend_11 { pt3dadd( 263.643, 374.688, 72.2859, 0.356 ) }
    dend_11 { pt3dadd( 262.598, 374.234, 72.224, 0.356 ) }
    dend_11 { pt3dadd( 261.642, 373.628, 72.17, 0.305 ) }
    dend_11 { pt3dadd( 261.02, 372.695, 72.0947, 0.2542 ) }
    dend_11 { pt3dadd( 259.945, 372.35, 72.0406, 0.2288 ) }
    dend_11 { pt3dadd( 258.861, 371.993, 72.0054, 0.2288 ) }
    dend_11 { pt3dadd( 257.936, 371.358, 71.981, 0.2288 ) }
    dend_11 { pt3dadd( 256.876, 370.935, 71.9662, 0.2542 ) }
    dend_11 { pt3dadd( 255.749, 370.77, 71.96, 0.2796 ) }
    dend_11 { pt3dadd( 254.861, 370.242, 71.96, 0.305 ) }
    dend_11 { pt3dadd( 253.93, 369.601, 71.96, 0.2796 ) }
    dend_11 { pt3dadd( 252.995, 368.942, 71.96, 0.2542 ) }
    dend_11 { pt3dadd( 252.047, 368.464, 71.96, 0.2542 ) }
    dend_11 { pt3dadd( 250.994, 368.025, 71.96, 0.2796 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 94/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 325.565, 373.438, 58.1356, 0.4322 ) }
    dend_8 { pt3dadd( 324.978, 373.541, 58.0342, 0.356 ) }
    dend_8 { pt3dadd( 323.877, 373.494, 57.8424, 0.305 ) }
    dend_8 { pt3dadd( 322.821, 373.084, 57.6302, 0.305 ) }
    dend_8 { pt3dadd( 321.854, 372.475, 57.4053, 0.356 ) }
    dend_8 { pt3dadd( 320.914, 371.825, 57.1743, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_8 { pt3dadd( 319.906, 371.344, 56.8882, 0.483 ) }
    dend_8 { pt3dadd( 318.816, 371.303, 56.5412, 0.5084 ) }
    dend_8 { pt3dadd( 317.76, 371.658, 56.1512, 0.5084 ) }
    dend_8 { pt3dadd( 316.719, 371.64, 55.6982, 0.5592 ) }
    dend_8 { pt3dadd( 315.665, 371.3, 55.2188, 0.5592 ) }
    dend_8 { pt3dadd( 314.556, 371.282, 54.8159, 0.5338 ) }
    dend_8 { pt3dadd( 313.435, 371.495, 54.4908, 0.4576 ) }
    dend_8 { pt3dadd( 312.301, 371.514, 54.2349, 0.4068 ) }
    dend_8 { pt3dadd( 311.23, 371.156, 54.0196, 0.3814 ) }
    dend_8 { pt3dadd( 310.62, 370.271, 53.7706, 0.4068 ) }
    dend_8 { pt3dadd( 309.781, 369.574, 53.5993, 0.483 ) }
    dend_8 { pt3dadd( 308.698, 369.658, 53.4002, 0.5848 ) }
    dend_8 { pt3dadd( 307.694, 369.743, 53.0258, 0.6356 ) }
    dend_8 { pt3dadd( 306.624, 369.806, 52.5748, 0.5592 ) }
    dend_8 { pt3dadd( 305.565, 370.17, 52.1604, 0.483 ) }
    dend_8 { pt3dadd( 304.782, 370.933, 51.9495, 0.4576 ) }
    dend_8 { pt3dadd( 303.759, 371.413, 51.8213, 0.5338 ) }
    dend_8 { pt3dadd( 302.627, 371.41, 51.7311, 0.5592 ) }
    dend_8 { pt3dadd( 301.594, 370.991, 51.6051, 0.5592 ) }
    dend_8 { pt3dadd( 300.525, 370.595, 51.5239, 0.5338 ) }
    dend_8 { pt3dadd( 299.465, 370.221, 51.5113, 0.5592 ) }
    dend_8 { pt3dadd( 298.368, 369.904, 51.4366, 0.5592 ) }
    dend_8 { pt3dadd( 297.289, 370.014, 51.2198, 0.5848 ) }
    dend_8 { pt3dadd( 296.174, 369.775, 51.0132, 0.6102 ) }
    dend_8 { pt3dadd( 295.165, 369.237, 50.8217, 0.6864 ) }
    dend_8 { pt3dadd( 294.099, 368.859, 50.5873, 0.7626 ) }
    dend_8 { pt3dadd( 293.065, 368.437, 50.3073, 0.788 ) }
    dend_8 { pt3dadd( 292.085, 367.851, 50.0968, 0.7626 ) }
    dend_8 { pt3dadd( 291.035, 367.396, 49.9534, 0.6864 ) }
    dend_8 { pt3dadd( 289.965, 366.992, 49.8518, 0.5848 ) }
    dend_8 { pt3dadd( 288.91, 366.549, 49.7854, 0.5338 ) }
    dend_8 { pt3dadd( 287.815, 366.234, 49.7372, 0.483 ) }
    dend_8 { pt3dadd( 286.702, 366.217, 49.637, 0.5084 ) }
    dend_8 { pt3dadd( 285.594, 366.341, 49.6034, 0.4576 ) }
    dend_8 { pt3dadd( 284.534, 365.954, 49.649, 0.4068 ) }
    dend_8 { pt3dadd( 283.435, 365.681, 49.6891, 0.3304 ) }
    dend_8 { pt3dadd( 282.299, 365.786, 49.7227, 0.3304 ) }
    dend_8 { pt3dadd( 281.193, 366.05, 49.7479, 0.3814 ) }
    dend_8 { pt3dadd( 280.049, 366.079, 49.7605, 0.4068 ) }
    dend_8 { pt3dadd( 278.906, 366.072, 49.7451, 0.4322 ) }
    dend_8 { pt3dadd( 277.764, 366.023, 49.7059, 0.4576 ) }
    dend_8 { pt3dadd( 276.648, 365.803, 49.653, 0.5084 ) }
    dend_8 { pt3dadd( 275.587, 365.381, 49.5835, 0.5084 ) }
    dend_8 { pt3dadd( 274.475, 365.135, 49.4847, 0.4322 ) }
    dend_8 { pt3dadd( 273.367, 364.971, 49.317, 0.4068 ) }
    dend_8 { pt3dadd( 272.31, 364.645, 49.0921, 0.3814 ) }
    dend_8 { pt3dadd( 271.194, 364.771, 48.8995, 0.4576 ) }
    dend_8 { pt3dadd( 270.121, 365.045, 48.7421, 0.4322 ) }
    dend_8 { pt3dadd( 268.993, 364.861, 48.6114, 0.4576 ) }
    dend_8 { pt3dadd( 267.868, 364.687, 48.4949, 0.4068 ) }
    dend_8 { pt3dadd( 266.746, 364.565, 48.3764, 0.4322 ) }
    dend_8 { pt3dadd( 265.67, 364.234, 48.249, 0.4068 ) }
    dend_8 { pt3dadd( 264.588, 363.896, 48.1687, 0.4322 ) }
    dend_8 { pt3dadd( 263.549, 363.544, 48.1872, 0.4322 ) }
    dend_8 { pt3dadd( 262.677, 362.84, 48.3176, 0.5084 ) }
    dend_8 { pt3dadd( 261.759, 362.184, 48.4828, 0.5084 ) }
    dend_8 { pt3dadd( 260.716, 361.716, 48.6385, 0.483 ) }
    dend_8 { pt3dadd( 259.632, 361.353, 48.7802, 0.356 ) }
    dend_8 { pt3dadd( 258.514, 361.129, 48.902, 0.2796 ) }
    dend_8 { pt3dadd( 257.559, 360.659, 49.0095, 0.2542 ) }
    dend_8 { pt3dadd( 256.809, 359.799, 49.1336, 0.305 ) }
    dend_8 { pt3dadd( 255.939, 359.134, 49.3335, 0.356 ) }
    dend_8 { pt3dadd( 254.887, 358.762, 49.5692, 0.4068 ) }
    dend_8 { pt3dadd( 253.827, 358.352, 49.7734, 0.4322 ) }
    dend_8 { pt3dadd( 252.843, 357.772, 49.9517, 0.483 ) }
    dend_8 { pt3dadd( 251.904, 357.119, 50.111, 0.5084 ) }
    dend_8 { pt3dadd( 251.093, 356.327, 50.2678, 0.5338 ) }
    dend_8 { pt3dadd( 250.582, 355.362, 50.493, 0.5338 ) }
    dend_8 { pt3dadd( 250.356, 354.274, 50.7693, 0.483 ) }
    dend_8 { pt3dadd( 250.053, 353.182, 51.0154, 0.4322 ) }
    dend_8 { pt3dadd( 249.533, 352.169, 51.2333, 0.4068 ) }
    dend_8 { pt3dadd( 248.741, 351.373, 51.4444, 0.4322 ) }
    dend_8 { pt3dadd( 247.71, 351.003, 51.7014, 0.4576 ) }
    dend_8 { pt3dadd( 246.656, 350.812, 52.0593, 0.4322 ) }
    dend_8 { pt3dadd( 245.746, 350.252, 52.444, 0.4322 ) }
    dend_8 { pt3dadd( 245.03, 349.374, 52.7691, 0.4068 ) }
    dend_8 { pt3dadd( 244.3, 348.496, 53.0172, 0.3814 ) }
    dend_8 { pt3dadd( 243.56, 347.626, 53.1891, 0.305 ) }
    dend_8 { pt3dadd( 243.137, 346.6, 53.272, 0.2542 ) }
    dend_8 { pt3dadd( 242.869, 345.512, 53.3898, 0.2796 ) }
    dend_8 { pt3dadd( 242.378, 344.5, 53.557, 0.356 ) }
    dend_8 { pt3dadd( 241.635, 343.689, 53.8222, 0.4322 ) }
    dend_8 { pt3dadd( 240.653, 343.241, 54.1856, 0.4322 ) }
    dend_8 { pt3dadd( 239.598, 342.857, 54.4852, 0.4322 ) }
    dend_8 { pt3dadd( 238.889, 342.007, 54.717, 0.4576 ) }
    dend_8 { pt3dadd( 238.041, 341.296, 54.9847, 0.483 ) }
    dend_8 { pt3dadd( 237.112, 340.656, 55.2689, 0.4576 ) }
    dend_8 { pt3dadd( 236.047, 340.259, 55.515, 0.4068 ) }
    dend_8 { pt3dadd( 235.41, 339.365, 55.783, 0.3814 ) }
    dend_8 { pt3dadd( 234.926, 338.337, 56.0616, 0.3814 ) }
    dend_8 { pt3dadd( 234.138, 337.542, 56.2335, 0.356 ) }
    dend_8 { pt3dadd( 233.228, 336.955, 56.4995, 0.3304 ) }
    dend_8 { pt3dadd( 232.232, 336.488, 56.8322, 0.3304 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 93/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 414.03, 343.142, 78.5492, 0.356 ) }
    dend_15 { pt3dadd( 414.19, 342.931, 80.2617, 0.2288 ) }
    dend_15 { pt3dadd( 414.53, 343.714, 82.0957, 0.2288 ) }
    dend_15 { pt3dadd( 414.895, 344.692, 82.8649, 0.2288 ) }
    dend_15 { pt3dadd( 415.259, 345.67, 83.7673, 0.2288 ) }
    dend_15 { pt3dadd( 415.624, 346.648, 84.7358, 0.305 ) }
    dend_15 { pt3dadd( 415.989, 347.626, 85.7102, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_15 { pt3dadd( 416.437, 348.591, 86.6169, 0.5084 ) }
    dend_15 { pt3dadd( 416.996, 349.538, 87.3891, 0.4576 ) }
    dend_15 { pt3dadd( 417.555, 350.485, 88.7502, 0.356 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 3/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 414.03, 343.142, 78.5492, 0.356 ) }
    dend_14 { pt3dadd( 413.865, 342.858, 79.4959, 0.2796 ) }
    dend_14 { pt3dadd( 413.44, 342.128, 80.6002, 0.2796 ) }
    dend_14 { pt3dadd( 413.015, 341.398, 81.8, 0.305 ) }
    dend_14 { pt3dadd( 412.591, 340.668, 83.0418, 0.2796 ) }
    dend_14 { pt3dadd( 412.069, 339.727, 84.0711, 0.2542 ) }
    dend_14 { pt3dadd( 411.52, 338.724, 84.8593, 0.2288 ) }
    dend_14 { pt3dadd( 410.969, 337.72, 85.4591, 0.2288 ) }
    dend_14 { pt3dadd( 410.496, 336.704, 85.9421, 0.2288 ) }
    dend_14 { pt3dadd( 410.346, 335.631, 86.4917, 0.2288 ) }
    dend_14 { pt3dadd( 410.197, 334.559, 87.1094, 0.2288 ) }
    dend_14 { pt3dadd( 410.048, 333.486, 87.7937, 0.2288 ) }
    dend_14 { pt3dadd( 409.898, 332.413, 88.5074, 0.2542 ) }
    dend_14 { pt3dadd( 409.75, 331.341, 89.2086, 0.3304 ) }
    dend_14 { pt3dadd( 409.6, 330.268, 90.6119, 0.4576 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 18/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 232.232, 336.488, 56.8322, 0.3304 ) }
    dend_10 { pt3dadd( 231.928, 335.841, 57.96, 0.305 ) }
    dend_10 { pt3dadd( 231.224, 334.982, 57.9919, 0.2796 ) }
    dend_10 { pt3dadd( 230.15, 334.683, 57.9947, 0.2542 ) }
    dend_10 { pt3dadd( 229.691, 333.686, 58.0616, 0.2288 ) }
    dend_10 { pt3dadd( 229.094, 332.727, 58.179, 0.2542 ) }
    dend_10 { pt3dadd( 228.342, 331.874, 58.2949, 0.2796 ) }
    dend_10 { pt3dadd( 227.518, 331.093, 58.4282, 0.305 ) }
    dend_10 { pt3dadd( 226.559, 330.529, 58.5872, 0.2796 ) }
    dend_10 { pt3dadd( 225.938, 329.584, 58.7384, 0.2796 ) }
    dend_10 { pt3dadd( 225.355, 328.645, 58.9117, 0.2796 ) }
    dend_10 { pt3dadd( 225.085, 327.54, 59.0993, 0.305 ) }
    dend_10 { pt3dadd( 224.622, 326.534, 59.3664, 0.305 ) }
    dend_10 { pt3dadd( 224.306, 325.446, 59.6543, 0.305 ) }
    dend_10 { pt3dadd( 223.726, 324.501, 59.9595, 0.305 ) }
    dend_10 { pt3dadd( 223.415, 323.498, 60.3033, 0.2796 ) }
    dend_10 { pt3dadd( 222.693, 322.729, 60.5898, 0.2542 ) }
    dend_10 { pt3dadd( 222.165, 322.078, 60.9484, 0.2288 ) }
    dend_10 { pt3dadd( 222.046, 320.956, 61.2651, 0.2796 ) }
    dend_10 { pt3dadd( 221.427, 320.031, 61.5065, 0.3304 ) }
    dend_10 { pt3dadd( 220.729, 319.139, 61.7159, 0.3814 ) }
    dend_10 { pt3dadd( 220.215, 318.147, 61.9147, 0.3304 ) }
    dend_10 { pt3dadd( 220.008, 317.024, 62.0634, 0.2796 ) }
    dend_10 { pt3dadd( 219.825, 315.896, 62.1645, 0.2288 ) }
    dend_10 { pt3dadd( 219.742, 314.762, 62.2446, 0.2288 ) }
    dend_10 { pt3dadd( 219.533, 313.646, 62.3132, 0.2288 ) }
    dend_10 { pt3dadd( 219.402, 312.522, 62.4044, 0.2542 ) }
    dend_10 { pt3dadd( 219.106, 311.444, 62.5302, 0.2796 ) }
    dend_10 { pt3dadd( 218.401, 310.589, 62.6368, 0.356 ) }
    dend_10 { pt3dadd( 217.536, 309.844, 62.727, 0.3814 ) }
    dend_10 { pt3dadd( 217.131, 308.872, 62.8032, 0.4068 ) }
    dend_10 { pt3dadd( 217.131, 307.731, 62.8846, 0.3304 ) }
    dend_10 { pt3dadd( 216.982, 306.607, 62.9717, 0.2796 ) }
    dend_10 { pt3dadd( 216.55, 305.553, 63.0577, 0.2288 ) }
    dend_10 { pt3dadd( 216.351, 304.431, 63.156, 0.2542 ) }
    dend_10 { pt3dadd( 216.33, 303.288, 63.2335, 0.305 ) }
    dend_10 { pt3dadd( 216.33, 302.144, 63.2909, 0.4068 ) }
    dend_10 { pt3dadd( 216.05, 301.06, 63.3685, 0.4576 ) }
    dend_10 { pt3dadd( 215.85, 299.934, 63.4155, 0.4576 ) }
    dend_10 { pt3dadd( 215.662, 298.806, 63.4371, 0.4068 ) }
    dend_10 { pt3dadd( 215.26, 297.74, 63.4376, 0.4068 ) }
    dend_10 { pt3dadd( 214.882, 296.677, 63.4178, 0.4576 ) }
    dend_10 { pt3dadd( 214.295, 295.71, 63.3553, 0.483 ) }
    dend_10 { pt3dadd( 213.652, 294.786, 63.2674, 0.4576 ) }
    dend_10 { pt3dadd( 213.206, 293.741, 63.1918, 0.3814 ) }
    dend_10 { pt3dadd( 213.198, 292.618, 63.14, 0.305 ) }
    dend_10 { pt3dadd( 213.585, 291.567, 63.135, 0.2542 ) }
    dend_10 { pt3dadd( 213.585, 290.424, 63.1509, 0.2288 ) }
    dend_10 { pt3dadd( 213.585, 289.28, 63.1674, 0.2288 ) }
    dend_10 { pt3dadd( 213.585, 288.136, 63.1812, 0.2288 ) }
    dend_10 { pt3dadd( 213.585, 286.992, 63.1915, 0.2288 ) }
    dend_10 { pt3dadd( 213.585, 285.896, 63.105, 0.2288 ) }
    dend_10 { pt3dadd( 213.699, 284.767, 63.0454, 0.2288 ) }
    dend_10 { pt3dadd( 213.699, 283.623, 63.0535, 0.2288 ) }
    dend_10 { pt3dadd( 213.699, 282.479, 63.1406, 0.2288 ) }
    dend_10 { pt3dadd( 213.538, 281.384, 63.3301, 0.2796 ) }
    dend_10 { pt3dadd( 212.929, 280.453, 63.6504, 0.3814 ) }
    dend_10 { pt3dadd( 212.46, 279.663, 64.1508, 0.483 ) }
    dend_10 { pt3dadd( 212.247, 278.777, 64.7886, 0.483 ) }
    dend_10 { pt3dadd( 212.441, 277.934, 65.5855, 0.4322 ) }
    dend_10 { pt3dadd( 212.441, 276.859, 66.3326, 0.3814 ) }
    dend_10 { pt3dadd( 211.672, 276.254, 66.9838, 0.4068 ) }
    dend_10 { pt3dadd( 210.781, 275.551, 67.4568, 0.4322 ) }
    dend_10 { pt3dadd( 209.764, 275.033, 67.7779, 0.5084 ) }
    dend_10 { pt3dadd( 209.074, 274.155, 67.9893, 0.5338 ) }
    dend_10 { pt3dadd( 208.222, 273.597, 68.1912, 0.5084 ) }
    dend_10 { pt3dadd( 207.421, 272.961, 68.4258, 0.4068 ) }
    dend_10 { pt3dadd( 206.354, 272.661, 68.5989, 0.3814 ) }
    dend_10 { pt3dadd( 205.673, 271.784, 68.7268, 0.4068 ) }
    dend_10 { pt3dadd( 204.641, 271.505, 68.8139, 0.4322 ) }
    dend_10 { pt3dadd( 203.508, 271.357, 68.8632, 0.4322 ) }
    dend_10 { pt3dadd( 202.393, 271.195, 68.88, 0.4322 ) }
    dend_10 { pt3dadd( 201.296, 270.878, 68.88, 0.4576 ) }
    dend_10 { pt3dadd( 200.314, 270.442, 68.88, 0.3814 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 92/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 232.232, 336.488, 56.8322, 0.3304 ) }
    dend_9 { pt3dadd( 232.127, 337.187, 56.9974, 0.305 ) }
    dend_9 { pt3dadd( 231.176, 336.908, 57.2074, 0.2288 ) }
    dend_9 { pt3dadd( 230.072, 337.117, 57.4496, 0.2288 ) }
    dend_9 { pt3dadd( 229.017, 337.519, 57.7119, 0.2288 ) }
    dend_9 { pt3dadd( 228.449, 338.397, 57.9617, 0.2288 ) }
    dend_9 { pt3dadd( 227.56, 339.059, 58.2389, 0.2288 ) }
    dend_9 { pt3dadd( 226.548, 339.425, 58.5402, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 225.404, 339.425, 58.7717, 0.2288 ) }
    dend_9 { pt3dadd( 224.345, 339.349, 59.0271, 0.2288 ) }
    dend_9 { pt3dadd( 223.268, 339.082, 59.22, 0.2288 ) }
    dend_9 { pt3dadd( 222.124, 339.082, 59.3597, 0.2288 ) }
    dend_9 { pt3dadd( 221.055, 339.282, 59.498, 0.2288 ) }
    dend_9 { pt3dadd( 220.079, 339.863, 59.6, 0.2288 ) }
    dend_9 { pt3dadd( 219.065, 340.361, 59.684, 0.2288 ) }
    dend_9 { pt3dadd( 218.044, 340.795, 59.7503, 0.2796 ) }
    dend_9 { pt3dadd( 217.029, 341.25, 59.7929, 0.3814 ) }
    dend_9 { pt3dadd( 216.141, 341.865, 59.8595, 0.5084 ) }
    dend_9 { pt3dadd( 215.255, 342.478, 60.0376, 0.5592 ) }
    dend_9 { pt3dadd( 214.451, 343.225, 60.305, 0.5338 ) }
    dend_9 { pt3dadd( 213.64, 344.026, 60.5609, 0.4576 ) }
    dend_9 { pt3dadd( 212.962, 344.919, 60.8073, 0.4068 ) }
    dend_9 { pt3dadd( 212.403, 345.882, 61.068, 0.356 ) }
    dend_9 { pt3dadd( 212.326, 346.919, 61.4701, 0.3304 ) }
    dend_9 { pt3dadd( 212.324, 348.013, 61.9007, 0.2796 ) }
    dend_9 { pt3dadd( 211.82, 349.031, 62.2535, 0.2542 ) }
    dend_9 { pt3dadd( 211.359, 350.064, 62.5514, 0.2288 ) }
    dend_9 { pt3dadd( 210.971, 351.114, 62.8298, 0.2288 ) }
    dend_9 { pt3dadd( 210.684, 352.211, 63.0731, 0.2288 ) }
    dend_9 { pt3dadd( 210.239, 352.95, 63.4309, 0.2542 ) }
    dend_9 { pt3dadd( 210.038, 354.047, 63.7294, 0.3304 ) }
    dend_9 { pt3dadd( 209.759, 355.078, 64.0181, 0.4068 ) }
    dend_9 { pt3dadd( 209.376, 356.008, 64.3465, 0.4322 ) }
    dend_9 { pt3dadd( 208.766, 356.92, 64.6262, 0.356 ) }
    dend_9 { pt3dadd( 208.032, 357.776, 64.8662, 0.2796 ) }
    dend_9 { pt3dadd( 207.156, 358.472, 64.9838, 0.2542 ) }
    dend_9 { pt3dadd( 206.298, 359.216, 65.0692, 0.2796 ) }
    dend_9 { pt3dadd( 205.358, 359.851, 65.1286, 0.305 ) }
    dend_9 { pt3dadd( 204.434, 360.381, 65.2128, 0.2796 ) }
    dend_9 { pt3dadd( 203.4, 360.799, 65.2873, 0.3304 ) }
    dend_9 { pt3dadd( 202.26, 360.855, 65.3593, 0.3814 ) }
    dend_9 { pt3dadd( 201.135, 360.932, 65.4791, 0.4576 ) }
    dend_9 { pt3dadd( 200.029, 361.092, 65.616, 0.3814 ) }
    dend_9 { pt3dadd( 199.12, 361.719, 65.7216, 0.305 ) }
    dend_9 { pt3dadd( 198.41, 362.594, 65.8218, 0.2288 ) }
    dend_9 { pt3dadd( 197.895, 363.598, 65.9081, 0.2542 ) }
    dend_9 { pt3dadd( 197.655, 364.707, 65.9596, 0.2796 ) }
    dend_9 { pt3dadd( 197.279, 365.767, 65.977, 0.305 ) }
    dend_9 { pt3dadd( 196.881, 366.839, 65.9708, 0.305 ) }
    dend_9 { pt3dadd( 196.627, 367.947, 65.9484, 0.3304 ) }
    dend_9 { pt3dadd( 196.516, 369.076, 65.9117, 0.356 ) }
    dend_9 { pt3dadd( 196.425, 370.176, 65.7958, 0.356 ) }
    dend_9 { pt3dadd( 196.31, 371.308, 65.6908, 0.3304 ) }
    dend_9 { pt3dadd( 196.185, 372.44, 65.6071, 0.305 ) }
    dend_9 { pt3dadd( 195.857, 373.529, 65.5421, 0.305 ) }
    dend_9 { pt3dadd( 195.738, 374.663, 65.4931, 0.2796 ) }
    dend_9 { pt3dadd( 195.738, 375.807, 65.4576, 0.2796 ) }
    dend_9 { pt3dadd( 195.786, 376.947, 65.4326, 0.2796 ) }
    dend_9 { pt3dadd( 196.103, 378.044, 65.4038, 0.3304 ) }
    dend_9 { pt3dadd( 196.426, 379.131, 65.3296, 0.3304 ) }
    dend_9 { pt3dadd( 196.71, 380.234, 65.2616, 0.3304 ) }
    dend_9 { pt3dadd( 196.768, 381.366, 65.198, 0.305 ) }
    dend_9 { pt3dadd( 196.768, 382.51, 65.1372, 0.305 ) }
    dend_9 { pt3dadd( 196.857, 383.638, 65.077, 0.305 ) }
    dend_9 { pt3dadd( 197.111, 384.691, 64.9723, 0.2796 ) }
    dend_9 { pt3dadd( 197.203, 385.82, 64.8726, 0.2542 ) }
    dend_9 { pt3dadd( 197.485, 386.927, 64.7651, 0.2288 ) }
    dend_9 { pt3dadd( 197.678, 388.044, 64.6464, 0.2542 ) }
    dend_9 { pt3dadd( 197.683, 389.188, 64.5145, 0.305 ) }
    dend_9 { pt3dadd( 197.601, 390.136, 64.2569, 0.356 ) }
    dend_9 { pt3dadd( 196.964, 391.036, 63.9906, 0.3814 ) }
    dend_9 { pt3dadd( 195.971, 391.381, 63.658, 0.356 ) }
    dend_9 { pt3dadd( 194.966, 391.877, 63.3797, 0.356 ) }
    dend_9 { pt3dadd( 194.188, 392.625, 63.098, 0.356 ) }
    dend_9 { pt3dadd( 193.45, 393.193, 62.72, 0.3814 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_34, dend_33, dend_26, dend_23, dend_20, dend_5, dend_0, dend_30, dend_27, dend_25, dend_24, dend_22, dend_21, dend_17, dend_6, dend_4, dend_1, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_12, dend_7, dend_3, dend_2, dend_16, dend_13, dend_11, dend_8, dend_15, dend_14, dend_10, dend_9]}
    dend = new SectionList()
    dend_34 dend.append()
    dend_33 dend.append()
    dend_26 dend.append()
    dend_23 dend.append()
    dend_20 dend.append()
    dend_5 dend.append()
    dend_0 dend.append()
    dend_30 dend.append()
    dend_27 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_17 dend.append()
    dend_6 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_32 dend.append()
    dend_31 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_12 dend.append()
    dend_7 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_16 dend.append()
    dend_13 dend.append()
    dend_11 dend.append()
    dend_8 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_10 dend.append()
    dend_9 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_25193, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_25193 = new SectionList()
    soma_0 OneSecGrp_SectionRef_25193.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 2.2817857  // units: uF/cm2
    forsec axon cm = 2.2817857  // units: uF/cm2
    forsec dend cm = 2.2817857  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 86.093094  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 2.1611275E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.05215414  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 1.4234679E-10  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.037689097  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 1.4237958  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.014336123  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 9.00496E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 8.189897E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.001158E-7  // units: S cm-2
        e_pas_nml2 = -87.28875  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 9.713781E-4  // units: S cm-2
        e_pas_nml2 = -87.28875  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-7  // units: S cm-2
        e_pas_nml2 = -87.28875  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 1.2328998E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0027795825  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513224
    forsec soma {
        insert CaDynamics_478513224
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_34 nseg = 5
    dend_33 nseg = 9
    dend_24 nseg = 3
    dend_22 nseg = 5
    dend_21 nseg = 3
    dend_17 nseg = 7
    dend_4 nseg = 5
    dend_31 nseg = 7
    dend_29 nseg = 5
    dend_28 nseg = 7
    dend_18 nseg = 5
    dend_7 nseg = 3
    dend_2 nseg = 5
    dend_16 nseg = 9
    dend_13 nseg = 3
    dend_11 nseg = 5
    dend_8 nseg = 5
    dend_10 nseg = 5
    dend_9 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_478513224


