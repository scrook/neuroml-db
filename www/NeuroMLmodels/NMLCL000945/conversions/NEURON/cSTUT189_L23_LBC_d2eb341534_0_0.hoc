// Cell: cSTUT189_L23_LBC_d2eb341534_0_0
/*
{
  "id" : "cSTUT189_L23_LBC_d2eb341534_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.51694, 11.0104, -0.0819092, 3.19551", "-3.15841, 9.8621, -0.0768064, 5.3635", "-2.79987, 8.71381, -0.0717036, 5.2385", "-2.44133, 7.56552, -0.0666008, 5.40379", "-2.0828, 6.41722, -0.061498, 6.02088", "-1.72426, 5.26893, -0.0563952, 7.0572", "-1.36573, 4.12064, -0.0512924, 8.33548", "-1.00719, 2.97235, -0.0461896, 9.39045", "-0.648657, 1.82405, -0.0410868, 9.67825", "-0.290122, 0.675761, -0.035984, 9.93356", "0.0684139, -0.472532, -0.0308812, 10.1889", "0.426949, -1.62083, -0.0257784, 10.0539", "0.785485, -2.76912, -0.0206756, 9.68551", "1.14402, -3.91741, -0.0155728, 9.07939", "1.50256, -5.0657, -0.0104701, 8.46979", "1.86109, -6.214, -0.00536725, 7.63175", "2.21963, -7.36229, -2.64453E-4, 6.67377", "2.57816, -8.51058, 0.00483835, 5.68988", "2.9367, -9.65888, 0.00994114, 4.70477", "3.29523, -10.8072, 0.0150439, 3.57171", "3.65377, -11.9555, 0.0201467, 2.11631" ]
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.91059, 2.5527, 14.561, 0.83", "-3.4833, 4.92698, 15.0992, 0.83", "-4.44366, 8.7718, 16.0717, 0.83", "-4.94694, 10.8233, 16.6025, 0.55", "-5.47241, 12.6422, 17.1413, 0.83", "-6.32875, 15.5901, 18.0685, 0.55", "-7.15742, 18.3164, 18.9979, 0.55", "-8.01737, 20.9912, 20.0967, 0.55", "-8.7899, 23.0891, 21.18, 0.55", "-9.96569, 26.0094, 23.0328, 0.55", "-11.3186, 29.0915, 25.1607, 0.55", "-12.3845, 31.2619, 26.7987, 0.55", "-14.0356, 34.5395, 29.3839, 0.55", "-15.6443, 37.7806, 31.911, 0.55", "-17.2156, 41.0625, 34.4583, 0.55", "-18.3579, 43.5094, 36.3568, 0.55", "-19.7893, 46.411, 38.6547, 0.55", "-20.6565, 48.2629, 40.0283, 0.55", "-21.408, 49.9902, 41.128, 0.83", "-22.1739, 52.1655, 42.1033, 0.55", "-24.9321, 60.8562, 45.7007, 0.55", "-28.3877, 68.3459, 51.0905, 0.55", "-30.9141, 76.4185, 56.097, 0.55", "-31.5055, 84.6742, 61.3841, 0.55", "-33.4925, 93.1574, 65.8952, 0.55", "-33.6711, 101.537, 71.005, 0.55", "-32.6574, 110.257, 75.3627, 0.55", "-30.5583, 118.518, 80.2417, 0.55", "-27.7438, 126.639, 85.0056, 0.55", "-25.1185, 134.164, 90.7971, 0.55", "-23.1945, 140.94, 97.7258, 0.55", "-22.7187, 148.043, 104.559, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-4.33059, 1.9872, 1.82102, 0.83", "-5.08972, 2.00013, 0.942587, 0.83", "-6.64272, 2.03823, -0.744081, 0.83", "-9.44359, 2.12774, -3.63028, 0.83", "-12.8921, 2.2025, -7.27212, 0.83", "-14.3482, 2.22553, -8.72332, 0.55", "-15.6768, 2.24773, -9.96792, 0.83", "-16.7404, 2.33703, -11.0142, 0.28", "-17.5956, 2.46348, -11.9929, 0.55", "-21.2247, 3.09627, -16.5118, 0.55", "-22.5823, 3.28583, -18.3107, 0.83", "-24.2298, 3.5119, -20.6246, 0.55", "-27.3607, 3.91056, -25.1208, 0.55", "-31.4508, 4.50382, -31.2162, 0.55", "-34.2717, 4.92213, -35.5649, 0.55", "-36.7214, 5.29213, -39.3038, 0.55", "-37.7523, 5.44221, -40.8588, 0.55", "-38.6002, 5.53822, -42.027, 0.55", "-41.1006, 5.73782, -44.8679, 0.55", "-43.8881, 6.03537, -47.4639, 0.55", "-45.8571, 6.2597, -49.119, 0.28", "-48.13, 6.51487, -50.9205, 1.11", "-54.0693, 6.91506, -55.3509, 0.28", "-56.2485, 7.00084, -56.8379, 0.28", "-57.9654, 7.00066, -57.876, 1.11", "-62.0165, 6.89524, -60.1133, 0.28", "-64.5546, 6.75352, -61.4635, 0.83", "-67.3614, 6.5343, -62.8717, 0.28", "-68.6292, 6.42497, -63.457, 1.11", "-72.1748, 6.14196, -65.2737, 0.28", "-73.4176, 6.09493, -65.9253, 0.28", "-75.1564, 6.18545, -66.7501, 1.11", "-78.6253, 6.75213, -68.2465, 0.28", "-79.9127, 7.10464, -68.7079, 0.83", "-83.9094, 8.77174, -69.7912, 0.28", "-85.9247, 9.91378, -70.1507, 1.11", "-89.6035, 12.4918, -70.5467, 0.28", "-92.0715, 14.5397, -70.5582, 0.83", "-94.4624, 16.8778, -70.3087, 0.28", "-97.1666, 19.8668, -69.8426, 0.28", "-97.9992, 20.9299, -69.6164, 0.83", "-99.2051, 22.5931, -69.3475, 0.83", "-100.323, 24.3355, -69.1978, 0.28", "-101.21, 25.8045, -69.2411, 0.55", "-102.288, 27.6153, -69.5714, 0.28", "-103.118, 28.9611, -70.0714, 0.83", "-104.83, 31.702, -71.374, 0.28", "-106.068, 33.585, -72.4503, 0.83", "-107.14, 35.1478, -73.4534, 0.28", "-108.823, 37.4285, -75.0522, 0.83", "-111.956, 41.1668, -77.8639, 0.28", "-113.442, 42.622, -78.9516, 0.83", "-114.721, 43.6327, -79.6715, 0.55", "-115.789, 44.3203, -80.1655, 0.55", "-117.299, 45.1119, -80.68, 0.28", "-119.927, 46.2159, -81.236, 0.83", "-124.391, 47.6739, -81.6465, 0.28", "-126.262, 48.2214, -81.7702, 0.83", "-128.22, 48.8489, -81.8257, 0.28", "-131.218, 49.8553, -81.7809, 0.83", "-133.62, 50.823, -81.708, 1.11", "-136.257, 52.1138, -81.6161, 0.55", "-137.504, 52.791, -81.6594, 0.83", "-140.612, 54.6834, -81.9659, 0.28", "-142.057, 55.6804, -82.1812, 0.83", "-145.511, 58.2289, -82.9696, 0.28", "-147.154, 59.4494, -83.522, 1.11", "-150.327, 61.7111, -84.8534, 0.28", "-152.0, 62.828, -85.6099, 0.55", "-153.849, 63.9372, -86.5504, 0.55", "-156.583, 65.4154, -87.9978, 0.55", "-159.444, 66.7118, -89.4187, 0.28", "-160.621, 67.2389, -89.9981, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "5.05941, 3.92745, 7.73102, 0.83", "5.88781, 4.32924, 8.06558, 0.83", "7.09991, 4.87449, 8.56215, 0.83", "9.32795, 5.91591, 9.53165, 0.83", "11.4498, 6.92335, 10.6202, 0.55", "13.934, 8.05002, 11.9494, 1.11", "16.8063, 9.40713, 13.4602, 0.55", "18.6891, 10.2791, 14.4579, 0.83", "21.4347, 11.6159, 15.8568, 0.55", "24.9009, 13.2892, 17.5197, 0.83", "27.5733, 14.5474, 18.6424, 0.55", "31.7195, 16.4988, 20.1297, 0.55", "34.2404, 17.6144, 20.7596, 0.55", "38.9296, 19.6549, 21.4146, 0.55", "42.7221, 21.2108, 21.4486, 0.83", "45.9203, 22.5056, 21.0943, 0.83", "48.082, 23.3884, 20.683, 0.83", "52.2034, 24.9179, 19.7026, 0.83", "54.2878, 25.683, 19.1765, 0.83", "58.0971, 27.1154, 18.2114, 0.83", "61.082, 28.4436, 17.5524, 0.83", "63.8693, 29.7401, 17.1194, 0.83", "67.1997, 31.3207, 16.8192, 0.83", "70.1134, 32.7534, 16.7998, 0.83", "71.8926, 33.6576, 16.8436, 0.83", "75.5729, 35.5274, 16.9641, 0.83", "77.5456, 36.5086, 17.0572, 0.83", "80.1187, 37.7879, 17.2162, 1.11", "82.1812, 38.7889, 17.3464, 0.55", "84.321, 39.7227, 17.517, 0.55", "87.8013, 41.1082, 17.8942, 0.83", "90.1813, 41.9699, 18.2257, 0.83", "92.719, 42.965, 18.453, 0.55", "94.821, 43.8646, 18.4926, 0.55", "96.8935, 44.9265, 18.3497, 0.83", "98.0341, 45.5796, 18.1554, 0.83", "101.247, 47.7098, 17.0628, 0.55", "105.099, 50.1939, 15.3224, 0.55", "107.498, 51.6858, 14.1005, 0.55", "110.788, 53.6911, 12.2995, 0.55", "114.639, 56.0266, 10.1373, 0.55", "118.264, 58.2221, 8.12182, 0.83", "120.943, 59.8458, 6.68671, 0.55", "123.744, 61.4098, 5.45789, 0.55", "125.653, 62.483, 4.65535, 0.55", "128.725, 64.1614, 3.384, 0.55", "130.194, 64.9636, 2.84649, 0.83", "131.856, 65.8328, 2.357, 0.55", "134.67, 67.3818, 1.45569, 0.55", "136.685, 68.4838, 0.767161, 0.83", "138.777, 69.7702, -2.34861E-4, 0.55", "141.296, 71.3423, -1.02542, 0.55", "143.24, 72.6248, -1.80844, 0.55", "144.517, 73.5651, -2.27681, 0.28", "145.37, 74.2628, -2.53294, 1.11", "149.007, 77.3113, -3.26432, 0.55", "150.999, 79.1138, -3.51823, 0.55", "152.285, 80.278, -3.63597, 0.55", "154.723, 82.3311, -3.8407, 0.55", "155.923, 83.2676, -3.91979, 0.28", "158.165, 84.9629, -4.09333, 0.55", "159.587, 86.0076, -4.20385, 0.55", "161.148, 87.2445, -4.35305, 0.55", "164.226, 89.7292, -4.77895, 0.55", "166.063, 91.1765, -5.11028, 0.55", "167.988, 92.6373, -5.52827, 0.28", "169.074, 93.4701, -5.77903, 0.55", "170.983, 94.9483, -6.21671, 1.38", "174.31, 97.472, -6.91766, 0.55", "176.263, 98.8975, -7.27016, 1.11", "177.963, 100.11, -7.56037, 0.55", "179.886, 101.418, -7.86448, 0.55", "181.366, 102.349, -8.08765, 0.83", "184.826, 104.319, -8.5515, 0.55", "186.608, 105.198, -8.74313, 0.55", "187.662, 105.635, -8.84895, 0.83", "192.09, 107.152, -9.27465, 0.55", "194.363, 107.8, -9.45697, 0.55", "196.529, 108.467, -9.54906, 0.55", "197.938, 108.962, -9.50794, 0.83", "200.111, 109.82, -9.27442, 0.55", "204.536, 111.872, -8.32498, 0.55", "206.944, 113.255, -7.52621, 0.55", "210.366, 115.544, -6.13067, 0.55", "212.579, 117.208, -5.0081, 0.55", "214.059, 118.385, -4.15597, 0.83", "216.415, 120.266, -2.67527, 0.55", "219.298, 122.518, -0.743668, 0.55", "222.218, 124.733, 1.20148, 0.55", "223.976, 125.929, 2.30233, 0.83", "225.378, 126.838, 3.08642, 0.55", "227.115, 127.93, 3.99976, 0.28", "228.413, 128.628, 4.60467, 0.55", "237.709, 132.018, 3.38285, 0.55", "246.842, 135.412, 1.26909, 0.55", "256.193, 138.836, 0.801614, 0.55", "265.718, 141.675, -0.0967968, 0.55", "275.293, 143.461, -2.32574, 0.55", "284.426, 146.057, -5.40594, 0.55", "293.655, 147.256, -9.05424, 0.55", "303.194, 147.511, -12.0447, 0.55", "312.396, 147.686, -15.9552, 0.55", "321.233, 147.911, -20.6299, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "5.82941, 1.87995, -1.46898, 0.55", "7.89789, 2.50186, -2.02954, 0.55", "9.27195, 2.93303, -2.40291, 1.11", "11.6375, 3.5156, -3.05655, 0.55", "13.0764, 3.76823, -3.6099, 0.83", "16.2299, 4.19611, -5.11173, 0.83", "18.8612, 4.52144, -6.5573, 0.55", "21.173, 4.79352, -7.97156, 0.83", "23.2645, 5.04686, -9.22455, 0.55", "26.9453, 5.51778, -11.3323, 0.55", "29.506, 5.79874, -12.6016, 0.55", "32.2034, 6.07487, -13.7953, 1.11", "35.7785, 6.32828, -14.9064, 0.55", "38.2494, 6.49627, -15.3142, 0.55", "39.9136, 6.64868, -15.2738, 0.55", "43.5991, 6.92716, -14.8085, 0.83", "47.0448, 7.05724, -14.2164, 0.55", "49.688, 7.10147, -13.7131, 0.55", "52.7719, 7.03652, -13.3174, 0.55", "56.8723, 7.04646, -13.4112, 0.83", "59.8895, 7.07454, -13.8963, 0.28", "60.723, 7.07082, -14.1615, 0.55", "62.0236, 7.0036, -14.6948, 0.55", "65.0649, 6.58957, -16.4536, 0.55", "68.9283, 5.76156, -19.173, 0.55", "71.3521, 5.12238, -21.233, 0.55", "73.5791, 4.52134, -23.2398, 0.28", "74.9233, 4.17304, -24.4836, 0.55", "77.8332, 3.47216, -27.1369, 0.28", "79.3817, 3.18202, -28.5762, 0.55", "83.0331, 2.71848, -31.9358, 0.28", "84.729, 2.74095, -33.507, 0.55", "87.6821, 3.25903, -36.1368, 0.28", "89.3529, 3.8236, -37.4914, 0.55", "91.7839, 5.06552, -39.18, 0.28", "93.0945, 5.88595, -40.0437, 0.83", "95.8029, 7.82204, -41.7189, 0.28", "97.6149, 9.19946, -42.9734, 0.55", "99.5954, 10.7824, -44.4589, 0.28", "100.664, 11.5959, -45.2589, 0.55", "104.645, 14.4002, -48.0489, 0.28", "105.959, 15.1934, -48.9365, 0.55", "108.943, 16.7977, -50.6962, 0.28", "109.97, 17.2977, -51.2341, 1.11", "111.957, 18.1759, -52.1695, 0.28", "113.168, 18.6957, -52.632, 1.11", "117.907, 20.7161, -53.8451, 0.28", "121.807, 22.3938, -54.6217, 0.28", "124.188, 23.4732, -54.8601, 0.83", "127.439, 25.1239, -54.9763, 0.28", "128.537, 25.7472, -54.9529, 0.55", "130.751, 27.175, -54.6759, 0.28", "132.621, 28.5897, -54.2041, 1.11", "136.358, 31.7723, -52.9868, 0.28", "139.516, 34.7109, -51.7937, 0.28", "140.432, 35.6417, -51.3968, 0.55", "142.509, 37.8614, -50.487, 0.28", "143.369, 38.844, -50.098, 1.66", "144.536, 40.2066, -49.5446, 0.28", "145.99, 41.9255, -48.9664, 0.55", "146.892, 42.9497, -48.6367, 0.28", "148.058, 44.2258, -48.4217, 0.55", "149.459, 45.7368, -48.3696, 0.28", "150.337, 46.6685, -48.5027, 0.55", "151.804, 48.2457, -48.8263, 0.28", "153.095, 49.6477, -49.1984, 1.11", "156.21, 52.9532, -50.3298, 0.28", "157.229, 54.0132, -50.7925, 0.55", "160.566, 57.5343, -52.6388, 0.28", "162.07, 59.1321, -53.5966, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-5.12059, 9.11445, 7.96102, 1.11", "-7.02163, 8.90083, 7.05496, 1.11", "-11.1601, 8.43579, 5.08252, 1.11", "-16.6355, 7.82052, 2.47288, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.92059, 10.46, 0.421023, 2.22", "-2.70059, 13.2095, -1.01898, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.75941, -11.458, 2.43102, 2.49", "3.23941, -15.2118, 2.43102, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.65377, -11.9555, 0.0201467, 0.830638", "8.12441, -26.2738, 0.0201467, 0.830638", "12.5951, -40.5921, 0.0201467, 0.830638" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-16.6355, 7.82052, 2.47288, 0.55", "-18.6924, 6.93879, 3.5175, 0.55", "-20.2063, 6.08125, 4.34841, 0.55", "-21.7332, 5.18586, 5.15304, 0.55", "-23.3544, 4.30833, 5.95248, 0.55", "-25.8964, 3.04464, 7.24101, 0.55", "-28.8026, 1.76309, 8.71569, 0.55", "-32.1364, 0.53955, 10.4216, 0.83", "-35.9988, -0.619582, 12.3594, 0.55", "-38.5133, -1.15746, 13.6262, 0.55", "-41.2265, -1.50324, 14.9448, 0.55", "-43.5883, -1.63377, 16.0364, 0.55", "-46.2502, -1.57297, 17.1983, 0.55", "-48.552, -1.43494, 18.1726, 0.55", "-50.9011, -1.24506, 19.1814, 0.55", "-52.8217, -1.1505, 19.9738, 0.55", "-54.9213, -1.12836, 20.7798, 0.55", "-57.2707, -1.17685, 21.6516, 0.55", "-60.0641, -1.16723, 22.6597, 0.55", "-63.4546, -1.01074, 23.8622, 0.55", "-64.6632, -0.896218, 24.2769, 0.55", "-68.0824, -0.415809, 25.4567, 0.83", "-70.7807, 0.021612, 26.4653, 0.55", "-74.5176, 0.741965, 27.9811, 0.55", "-75.9794, 1.06414, 28.5781, 0.83", "-79.1357, 1.72425, 29.8912, 0.55", "-81.3292, 2.20751, 30.8339, 0.55", "-83.6708, 2.66584, 31.8253, 0.55", "-85.4244, 2.93228, 32.5564, 0.55", "-86.7452, 3.06698, 33.0402, 0.28", "-89.6625, 3.25627, 33.9342, 0.55", "-91.3841, 3.28272, 34.4182, 0.55", "-93.1634, 3.22729, 34.9313, 0.55", "-95.9355, 3.11898, 35.6846, 0.83", "-97.9165, 2.97344, 36.2197, 0.55", "-100.383, 2.75026, 36.9648, 0.55", "-102.713, 2.5448, 37.7575, 0.55", "-104.927, 2.34716, 38.5777, 0.55", "-106.995, 2.19471, 39.4765, 0.55", "-115.455, 2.0529, 44.8077, 0.55", "-124.467, 0.143135, 48.6738, 0.55", "-133.554, -0.496932, 52.7963, 0.55", "-142.008, -2.20288, 57.8418, 0.55", "-148.775, -5.12717, 64.5664, 0.55", "-155.015, -10.3661, 70.2393, 0.55", "-160.99, -16.9432, 74.5753, 0.55", "-167.496, -21.9423, 80.1775, 0.55", "-174.054, -26.8312, 85.821, 0.55", "-181.042, -30.9036, 91.6284, 0.55", "-186.303, -34.8979, 99.0805, 0.55", "-190.469, -39.9536, 106.547, 0.55", "-193.002, -43.7398, 115.408, 0.55", "-193.572, -46.3932, 125.013, 0.55", "-193.46, -49.4541, 134.507, 0.55", "-191.992, -53.6188, 143.429, 0.55", "-191.466, -57.814, 152.441, 0.55", "-191.686, -63.0149, 160.896, 0.55", "-193.826, -68.2116, 169.082, 0.55", "-196.318, -72.205, 177.858, 0.55", "-197.865, -77.4471, 186.147, 0.55", "-197.621, -83.1922, 194.223, 0.55", "-195.758, -90.0354, 201.098, 0.55", "-193.1, -96.5532, 208.044, 0.55", "-190.375, -103.484, 214.527, 0.55", "-187.275, -110.597, 220.624, 0.55", "-184.458, -117.098, 227.524, 0.55", "-181.01, -124.372, 233.22, 0.55", "-176.683, -131.326, 238.734, 0.55", "-172.411, -137.924, 244.731, 0.55", "-167.986, -144.783, 250.292, 0.55", "-165.46, -151.82, 256.736, 0.55", "-164.606, -159.894, 262.277, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-16.6355, 7.82052, 2.47288, 0.83", "-19.4732, 9.95998, 2.03875, 0.83", "-20.6983, 10.9203, 1.07156, 0.83", "-22.1344, 12.0461, -0.0622752, 1.38", "-24.2079, 13.6714, -1.69925, 1.11", "-26.2635, 15.2828, -3.32213, 1.11", "-28.0461, 16.6801, -4.7295, 1.11", "-34.261, 22.5337, -11.7764, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-2.70059, 13.2095, -1.01898, 1.66", "-3.2588, 15.5573, -2.28341, 1.66", "-3.87444, 17.6535, -3.4008, 1.94", "-4.39412, 19.5362, -4.37118, 0.83", "-4.90831, 21.9214, -5.59007, 0.83", "-5.25485, 23.6904, -6.59061, 0.83", "-5.7117, 26.9157, -8.37969, 0.83", "-5.95015, 29.1412, -9.6875, 0.83", "-6.11139, 30.9954, -10.7879, 0.83", "-6.27377, 33.7302, -12.3305, 1.38", "-6.40237, 38.0604, -14.8855, 0.83", "-6.38302, 43.3805, -17.8707, 0.83", "-6.13041, 47.1948, -19.7775, 0.83", "-5.87298, 49.7362, -20.9838, 0.83", "-5.44154, 53.4768, -22.6127, 0.83", "-4.65932, 59.2639, -24.9118, 0.83", "-4.16675, 62.1058, -25.9126, 0.83", "-3.21258, 67.0959, -27.5486, 0.83", "-2.32983, 71.3273, -28.8393, 0.83", "-1.94573, 73.1027, -29.423, 1.94", "-1.58878, 75.1113, -30.0606, 1.11", "-1.33033, 77.1365, -30.6492, 0.55", "-1.14137, 79.1789, -31.3914, 1.38", "-0.864259, 84.1885, -33.3879, 0.55", "-0.740643, 87.6489, -34.8195, 1.11", "-0.632258, 92.1854, -36.7867, 0.55", "-0.601704, 94.9459, -38.0101, 1.94", "-0.648501, 100.797, -40.6404, 0.28", "-0.704566, 102.561, -41.4133, 0.83", "-0.861066, 104.853, -42.3531, 0.28", "-1.00415, 106.547, -42.9946, 1.66", "-1.36611, 110.165, -44.2185, 0.55", "-1.58537, 111.848, -44.6348, 0.28", "-2.25047, 116.399, -45.2438, 0.55", "-2.56553, 118.633, -45.5506, 0.83", "-2.83016, 120.832, -45.8253, 0.83", "-2.98792, 122.427, -46.0576, 0.55", "-3.11445, 124.568, -46.4182, 0.55", "-3.02111, 128.055, -47.1517, 1.11", "-2.50452, 131.43, -47.9593, 0.28", "-2.06599, 133.06, -48.3637, 0.55", "-1.28369, 135.143, -48.9978, 0.28", "-0.801593, 136.198, -49.3617, 0.55", "0.224682, 138.168, -50.0851, 0.55", "1.59068, 140.654, -50.9934, 0.83", "2.37173, 142.159, -51.4706, 0.55", "3.99866, 145.503, -52.5515, 1.38", "5.51725, 148.666, -53.6448, 0.55", "6.32548, 150.52, -54.3751, 0.28", "6.92194, 152.054, -55.0196, 0.55", "7.62745, 154.233, -55.9194, 0.28", "8.12535, 156.05, -56.6006, 1.11", "8.74114, 158.588, -57.3499, 0.55", "9.2514, 160.887, -57.9379, 0.28", "9.73095, 163.117, -58.4164, 0.55", "10.4384, 166.249, -58.9832, 0.55", "10.8959, 168.147, -59.2228, 0.55", "11.6496, 171.294, -59.5789, 0.55", "12.2119, 173.523, -59.8237, 0.28", "12.7726, 175.601, -60.1157, 0.55", "13.5414, 178.384, -60.6337, 0.83", "14.3504, 181.115, -61.3785, 0.55", "15.0878, 183.658, -62.4073, 0.28", "15.542, 185.412, -63.4544, 0.55", "15.8472, 186.933, -64.503, 0.55", "15.9402, 187.747, -65.1316, 0.55", "16.1167, 190.664, -67.4809, 0.28", "16.2029, 192.935, -69.1881, 1.11", "16.3151, 197.053, -71.8082, 0.83", "16.4711, 199.277, -73.0106, 0.55", "16.7858, 202.18, -74.3096, 0.83", "16.9958, 203.663, -74.8014, 0.83", "17.4594, 206.284, -75.2897, 0.28", "17.774, 207.883, -75.4078, 0.55", "18.642, 211.841, -75.4176, 0.55", "19.6049, 215.843, -75.3454, 0.28", "20.4685, 219.325, -75.2131, 0.55", "21.0119, 221.656, -75.1646, 1.11", "21.5002, 223.813, -75.1964, 0.55", "21.8308, 225.432, -75.2682, 0.28", "21.9403, 226.283, -75.3027, 0.55", "22.081, 227.686, -75.2987, 0.28", "22.1033, 228.395, -75.2431, 0.55", "22.1091, 230.004, -75.0108, 0.55", "22.1474, 231.717, -74.6719, 0.83", "22.2973, 235.471, -73.6928, 0.55", "22.4775, 238.544, -72.867, 0.83", "22.8255, 243.057, -71.7294, 0.55", "23.0158, 245.181, -71.295, 0.55", "23.4103, 249.083, -70.6651, 0.28", "23.6779, 251.299, -70.4869, 1.38", "24.087, 254.083, -70.5748, 0.55", "24.4809, 256.648, -70.9587, 0.83", "24.7764, 259.182, -71.7563, 0.28", "24.8157, 259.948, -72.0562, 0.55", "24.7686, 262.202, -73.1591, 0.28", "24.6596, 263.701, -73.9502, 0.55", "24.4869, 265.161, -74.6769, 0.55", "23.9344, 268.953, -76.4752, 0.28", "23.7522, 270.18, -77.04, 0.83", "23.3558, 272.899, -78.2939, 0.55", "22.928, 275.865, -79.6525, 0.28", "22.6618, 277.617, -80.4218, 0.55", "22.3683, 279.836, -81.1941, 0.28", "22.2948, 280.427, -81.3469, 0.55", "22.07, 282.024, -81.6617, 0.28", "21.8617, 283.363, -81.847, 0.55", "21.4337, 285.86, -82.108, 0.28", "20.6683, 289.86, -82.4844, 0.55", "20.0999, 292.562, -82.7978, 1.11", "19.2465, 296.559, -83.4658, 0.55", "18.9627, 297.89, -83.7359, 0.83", "18.2257, 301.305, -84.6381, 0.55", "17.4478, 304.901, -85.795, 0.55", "17.048, 307.095, -86.7115, 0.83", "16.7513, 310.341, -88.2437, 0.28", "16.7686, 312.285, -89.2118, 0.83", "16.9945, 315.023, -90.4359, 0.28", "17.1365, 316.02, -90.8355, 0.55", "17.8843, 320.098, -92.3466, 0.28", "18.5936, 323.555, -93.4097, 0.28", "19.2951, 326.678, -94.2006, 0.28", "20.4682, 331.368, -95.2229, 0.28", "20.8094, 332.66, -95.4031, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.70059, 13.2095, -1.01898, 0.83", "-4.90787, 15.8932, -1.13643, 0.83", "-6.52193, 18.0696, -1.38167, 0.83", "-7.58699, 19.6678, -1.59481, 0.55", "-8.4818, 21.115, -1.83105, 0.83", "-9.22102, 22.3046, -2.08859, 0.55", "-10.2306, 23.9615, -2.47818, 0.83", "-11.4368, 26.3334, -3.80014, 0.83", "-12.1829, 27.9795, -5.02781, 0.83", "-12.6853, 29.1594, -6.0128, 0.83", "-13.6775, 31.4309, -7.92063, 0.55", "-14.4637, 33.2557, -9.45738, 0.83", "-17.9047, 41.2945, -15.9398, 0.83", "-18.7355, 43.2025, -17.3519, 0.83", "-20.1849, 46.5307, -19.5538, 0.83", "-21.6569, 50.0685, -21.4407, 0.83", "-22.8612, 53.0628, -22.629, 0.83", "-24.5382, 57.3301, -23.7219, 0.83", "-25.7786, 60.7267, -24.0673, 0.83", "-26.7478, 63.8299, -24.3218, 0.83", "-27.7544, 67.9808, -24.5364, 0.83", "-28.4194, 71.6929, -24.5901, 0.83", "-29.0198, 76.2411, -24.4362, 0.83", "-29.268, 79.4018, -24.328, 0.83", "-29.3623, 81.7638, -24.3061, 0.55", "-29.4672, 84.6771, -24.3821, 1.11", "-29.5305, 88.0667, -24.5653, 0.55", "-29.5231, 91.3592, -24.7725, 0.55", "-29.5842, 94.2504, -24.9852, 0.55", "-29.8017, 96.8648, -25.1935, 0.55", "-30.31, 100.207, -25.4589, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.23941, -15.2118, 2.43102, 0.83", "3.92863, -17.1821, 3.83201, 0.83", "5.17801, -20.7537, 6.37167, 1.66", "6.36633, -24.1508, 8.7872, 1.94", "7.70559, -27.9794, 11.5095, 1.94", "9.70452, -33.6938, 15.5728, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.23941, -15.2118, 2.43102, 0.83", "1.73765, -19.4425, 2.05309, 0.83", "0.454982, -22.5723, 1.86629, 0.83", "-0.279451, -24.3757, 1.72013, 0.55", "-1.46892, -26.9271, 1.39139, 1.11", "-2.72604, -29.5469, 0.950663, 0.83", "-3.49866, -31.2882, 0.634336, 0.55", "-4.85812, -34.4219, -0.177522, 0.83", "-6.35574, -37.8695, -1.34156, 0.55", "-7.45934, -40.6201, -2.63526, 0.55", "-8.25085, -42.7563, -3.89952, 0.83", "-9.37788, -46.0078, -6.12682, 0.83", "-10.5327, -49.4143, -8.71835, 0.55", "-11.1944, -51.781, -10.7093, 0.55", "-12.0448, -54.9431, -13.6056, 1.11", "-12.4272, -56.4485, -15.2076, 0.55", "-12.6278, -57.1157, -16.057, 0.55", "-13.0877, -58.4097, -17.9025, 0.55", "-13.6476, -59.872, -20.0855, 0.83", "-14.489, -61.766, -23.0357, 0.83", "-16.2761, -64.9311, -27.8732, 0.55", "-17.2257, -66.3036, -29.9725, 0.28", "-18.0843, -67.478, -31.6849, 0.83", "-19.24, -69.0053, -33.7884, 0.55", "-19.9213, -69.916, -34.9051, 0.55", "-21.3696, -72.1201, -37.0987, 1.38", "-23.8278, -76.5101, -40.4661, 0.55", "-24.3098, -77.6438, -41.2065, 0.83", "-24.8438, -80.191, -42.5413, 0.28", "-24.882, -81.471, -43.0256, 1.11", "-24.7341, -83.3564, -43.5836, 1.11", "-24.5239, -84.6989, -43.8749, 1.11", "-24.1276, -86.975, -44.1809, 0.55", "-23.2533, -92.3053, -44.8499, 0.28", "-22.5925, -96.5591, -45.3105, 0.55", "-22.2415, -98.9436, -45.5945, 0.55", "-21.7663, -102.165, -45.9722, 1.94", "-21.4752, -104.474, -46.2241, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "12.5951, -40.5921, 0.0201467, 0.756209", "17.0657, -54.9104, 0.0201467, 0.756209", "21.5363, -69.2287, 0.0201467, 0.756209" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-34.261, 22.5337, -11.7764, 0.83", "-34.6668, 22.5389, -11.8236, 0.83", "-37.539, 22.6288, -12.0402, 0.83", "-40.884, 22.9063, -12.3712, 0.83", "-43.3495, 23.214, -12.7226, 0.83", "-46.4211, 23.6605, -13.2375, 0.83", "-48.2549, 23.9648, -13.5617, 0.83", "-50.773, 24.5057, -14.0286, 0.55", "-54.5781, 25.6058, -14.7925, 1.38", "-56.9145, 26.4053, -15.2876, 0.55", "-58.2447, 26.8739, -15.594, 0.55", "-60.4949, 27.6655, -16.2713, 0.55", "-63.2909, 28.6396, -17.1916, 0.55", "-64.8756, 29.2176, -17.7373, 0.83", "-67.3596, 30.061, -18.4923, 0.83", "-69.81, 30.8621, -19.2414, 0.55", "-74.1319, 32.2504, -20.6044, 0.55", "-78.2354, 33.509, -22.1688, 0.55", "-80.0317, 34.0494, -22.9202, 0.55", "-82.5192, 34.7218, -24.0101, 0.83", "-85.1722, 35.4373, -25.2363, 0.55", "-87.9273, 36.1904, -26.5104, 1.66", "-92.1934, 37.2831, -28.3658, 0.28", "-93.1027, 37.5372, -28.7578, 0.55", "-95.7723, 38.4053, -29.7285, 0.28", "-97.0334, 38.8835, -30.0936, 0.55", "-99.6735, 40.0052, -30.6352, 0.55", "-102.034, 41.1363, -30.9406, 0.55", "-104.9, 42.6601, -31.1482, 0.83", "-107.953, 44.4033, -31.3996, 0.55", "-109.461, 45.3497, -31.5443, 0.55", "-112.189, 47.1697, -31.8436, 0.55", "-114.513, 48.9694, -32.2238, 0.83", "-116.015, 50.2709, -32.5303, 0.55", "-117.263, 51.4998, -32.8297, 0.55", "-118.456, 52.8026, -33.0906, 0.28", "-120.795, 55.4872, -33.4935, 0.55", "-123.42, 58.5543, -33.721, 0.28", "-125.017, 60.4218, -33.8096, 0.55", "-126.869, 62.4521, -33.885, 0.28", "-128.96, 64.4817, -33.9596, 0.55", "-130.886, 66.106, -33.9875, 0.83", "-135.779, 69.5685, -34.0425, 0.55", "-137.014, 70.2957, -34.0813, 1.11", "-139.838, 71.7819, -34.3095, 0.55", "-142.595, 73.0435, -34.6018, 0.83", "-145.379, 74.2831, -34.9912, 0.28", "-146.369, 74.7139, -35.227, 0.83", "-148.878, 75.8036, -36.0965, 0.28", "-150.052, 76.4011, -36.5674, 0.55", "-151.71, 77.4933, -37.4433, 0.55", "-153.719, 79.0475, -38.893, 0.55", "-155.98, 80.8995, -40.8049, 0.55", "-157.697, 82.3939, -42.3585, 0.55", "-158.869, 83.4431, -43.4417, 0.55", "-161.306, 85.8306, -45.9977, 0.55", "-163.111, 87.8171, -48.1809, 0.28", "-163.67, 88.4843, -49.0054, 0.55", "-164.322, 89.3404, -50.0636, 0.28", "-165.201, 90.7672, -51.9561, 1.11", "-166.021, 92.4091, -54.1287, 0.55", "-166.219, 92.9941, -55.1983, 0.83", "-166.656, 94.903, -59.1932, 0.28", "-166.77, 95.5851, -60.7848, 0.55", "-166.887, 96.4235, -62.9093, 0.28", "-166.938, 96.8191, -63.9407, 0.83", "-167.6, 101.063, -74.9454, 0.55", "-167.656, 101.484, -76.0714, 0.83", "-167.772, 102.977, -80.0782, 0.28", "-167.793, 103.439, -81.372, 0.55", "-167.844, 103.893, -82.709, 0.28", "-167.942, 104.689, -84.9991, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-34.261, 22.5337, -11.7764, 1.11", "-34.3343, 25.855, -16.7715, 1.11", "-34.3177, 28.8068, -20.8455, 0.28", "-34.3673, 29.3637, -21.6475, 0.83", "-34.6911, 31.9883, -25.2032, 0.28", "-34.7773, 32.6736, -26.1085, 0.55", "-35.0883, 35.3025, -29.3924, 0.55", "-35.3323, 37.3725, -32.0091, 2.22", "-36.4581, 46.415, -43.0169, 0.28", "-36.6601, 47.8932, -44.7431, 1.94", "-37.7238, 55.8342, -53.5197, 0.28", "-37.973, 57.6369, -55.4784, 0.55", "-38.3373, 60.208, -58.2178, 0.28", "-38.5064, 61.3975, -59.3997, 1.66", "-38.9453, 64.48, -62.12, 0.28", "-39.534, 67.652, -64.8323, 0.28", "-40.0893, 69.7868, -66.494, 2.49", "-41.8589, 75.2954, -70.893, 0.28", "-43.2939, 79.1653, -73.7762, 0.28", "-43.8743, 80.6565, -74.7564, 1.66", "-45.2656, 84.1387, -76.6986, 0.28", "-46.0115, 85.9452, -77.5305, 0.83", "-47.9217, 90.6617, -79.4524, 0.28", "-48.821, 92.9318, -80.2675, 1.11", "-50.1942, 96.8518, -81.8739, 0.28", "-51.0522, 99.7947, -83.084, 0.28", "-51.5316, 101.968, -83.9412, 0.83", "-52.0722, 105.217, -85.4172, 0.28", "-52.1523, 105.751, -85.6679, 0.83", "-52.4327, 107.439, -86.6011, 0.28", "-52.6835, 108.826, -87.4272, 0.83", "-52.882, 109.994, -88.0805, 0.83", "-53.5753, 115.738, -91.0555, 0.28", "-53.6899, 118.177, -92.3807, 1.11", "-53.6276, 120.492, -93.696, 0.28", "-53.4865, 121.843, -94.4356, 0.83", "-53.0672, 124.227, -95.8649, 0.28", "-52.4555, 126.653, -97.4138, 0.83", "-51.003, 131.153, -100.656, 0.28", "-50.3435, 133.007, -102.216, 0.28", "-49.7199, 134.695, -103.894, 0.55", "-48.497, 138.048, -107.563, 0.28", "-48.1549, 138.983, -108.62, 0.83", "-47.2497, 141.751, -111.742, 0.28", "-46.8959, 142.863, -112.993, 0.83", "-46.0011, 145.548, -116.261, 0.28", "-45.581, 146.632, -117.61, 0.83", "-45.0022, 147.761, -118.957, 0.28", "-44.7625, 148.136, -119.408, 0.28", "-43.8734, 149.321, -120.769, 0.83", "-41.1102, 152.763, -124.777, 0.28", "-40.5781, 153.373, -125.505, 0.55", "-39.6014, 154.392, -127.009, 0.28", "-39.0933, 154.86, -127.869, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-30.31, 100.207, -25.4589, 0.55", "-29.1213, 103.575, -26.0724, 0.55", "-28.8041, 104.496, -26.2555, 0.28", "-28.3472, 105.976, -26.582, 0.55", "-27.2671, 109.879, -27.6566, 0.28", "-26.4895, 112.709, -28.5317, 0.55", "-25.875, 115.377, -29.4136, 0.55", "-25.4389, 118.032, -30.3751, 0.55", "-24.9831, 121.244, -31.6483, 0.55", "-24.5296, 124.554, -32.981, 0.55", "-24.2608, 126.673, -33.7789, 0.55", "-23.8839, 130.099, -35.0323, 0.55", "-23.5076, 134.016, -36.2942, 0.55", "-23.1618, 137.198, -37.078, 0.55", "-22.6323, 141.597, -37.7338, 0.28", "-22.4497, 143.096, -37.8206, 0.55", "-22.2425, 144.666, -37.84, 0.55", "-21.9157, 146.813, -37.7972, 0.55", "-21.7252, 148.391, -37.7121, 0.55", "-21.5371, 150.865, -37.6988, 0.83", "-21.3661, 153.235, -37.8106, 0.55", "-21.0642, 155.875, -37.9445, 0.28", "-20.5878, 159.123, -38.1609, 0.55", "-20.16, 161.651, -38.3618, 0.28", "-19.8747, 163.262, -38.5052, 1.38", "-19.2739, 166.215, -38.7802, 1.38", "-17.9574, 172.415, -39.2298, 0.28", "-17.5568, 174.307, -39.3731, 0.83", "-17.2579, 175.66, -39.4725, 0.83", "-16.3846, 179.691, -39.7843, 0.28", "-15.9839, 181.671, -39.918, 0.55", "-15.6344, 183.6, -40.0903, 0.55", "-15.1643, 186.599, -40.4725, 0.55", "-14.6654, 189.851, -40.7679, 0.28", "-14.4571, 191.029, -40.8738, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-30.31, 100.207, -25.4589, 0.83", "-30.6404, 102.072, -25.8485, 0.83", "-31.2551, 105.542, -26.5734, 0.28", "-31.7926, 108.576, -27.2073, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "9.70452, -33.6938, 15.5728, 1.66", "8.72452, -35.7022, 17.1228, 1.66" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "9.70452, -33.6938, 15.5728, 0.55", "12.5782, -34.9734, 15.6236, 0.55", "16.8845, -36.8398, 15.6843, 0.55", "20.2041, -38.2104, 15.7596, 0.55", "22.7727, -39.2485, 15.8197, 0.55", "27.8749, -41.236, 16.0922, 0.55", "30.2009, -42.1352, 16.2808, 0.55", "34.4839, -43.7082, 16.7629, 0.55", "36.3924, -44.3427, 17.0651, 0.55", "39.7698, -45.4337, 17.7002, 0.55", "43.6601, -46.5818, 18.5225, 0.55", "47.3421, -47.5042, 19.3556, 0.55", "52.1535, -48.6449, 20.4597, 0.55", "56.8626, -49.5844, 21.5634, 0.55", "59.4896, -50.0107, 22.15, 0.55", "64.198, -50.6009, 23.1346, 0.55", "66.918, -50.8453, 23.6423, 0.55", "69.8721, -51.0237, 24.1582, 0.55", "72.8477, -51.1286, 24.6398, 0.55", "76.1607, -51.1954, 25.1625, 0.55", "79.217, -51.2614, 25.6651, 0.55", "81.0962, -51.2904, 25.9669, 0.55", "85.0184, -51.309, 26.5773, 0.55", "88.3165, -51.2711, 27.0553, 0.55", "91.6157, -51.1684, 27.4672, 0.55", "92.9942, -51.1156, 27.6199, 0.55", "95.4434, -50.9507, 27.9251, 0.55", "97.6347, -50.8156, 28.2283, 0.55", "99.0316, -50.7434, 28.4531, 0.55", "102.403, -50.6724, 29.0193, 0.55", "105.744, -50.7054, 29.5715, 0.55", "109.956, -50.9458, 30.3093, 0.55", "113.475, -51.3762, 30.8929, 0.55", "115.169, -51.6816, 31.2175, 0.55", "118.32, -52.4677, 31.9416, 0.55", "120.584, -53.2456, 32.5767, 0.55", "122.812, -54.2207, 33.4757, 0.28", "124.242, -55.0994, 34.2359, 1.38", "127.304, -57.2373, 36.1698, 0.55", "129.11, -58.6432, 37.5276, 0.55", "130.542, -59.9781, 38.8976, 0.83", "133.24, -62.7879, 42.0737, 0.55", "134.392, -64.0986, 43.7196, 0.55", "143.833, -65.2941, 46.7787, 0.55", "153.473, -65.4874, 49.4329, 0.55", "163.138, -66.9398, 51.5199, 0.55", "172.097, -69.5314, 55.0789, 0.55", "180.3, -72.3968, 59.9855, 0.55", "189.287, -74.2407, 63.9437, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-21.4752, -104.474, -46.2241, 0.28", "-21.8816, -107.365, -46.8567, 0.28", "-22.0611, -108.68, -47.1466, 0.83", "-22.4805, -112.936, -48.2129, 0.28", "-22.5679, -114.041, -48.4597, 0.83", "-22.7368, -116.176, -48.9367, 0.28", "-22.9172, -118.457, -49.4462, 0.55", "-23.0731, -120.042, -49.8396, 0.55", "-23.3705, -123.541, -50.7597, 0.28", "-23.3983, -125.143, -51.1931, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-21.4752, -104.474, -46.2241, 0.28", "-23.6636, -112.253, -45.8894, 0.28", "-24.1517, -113.988, -45.8148, 0.55", "-24.812, -116.336, -45.7138, 0.55", "-25.3934, -118.402, -45.6248, 0.28", "-25.923, -120.285, -45.5438, 0.55", "-26.5499, -122.513, -45.448, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-14.4571, 191.029, -40.8738, 0.28", "-14.8128, 192.621, -41.3505, 0.28", "-15.1226, 193.887, -41.785, 0.83", "-15.633, 195.625, -42.5205, 0.28", "-16.122, 197.166, -43.1854, 0.28", "-16.3423, 197.848, -43.4648, 0.55", "-17.02, 199.776, -44.1911, 0.28", "-17.4994, 200.975, -44.6686, 0.83", "-18.5276, 202.867, -45.6527, 0.28", "-19.337, 204.095, -46.4516, 0.28", "-19.7847, 204.742, -46.9004, 0.55", "-20.8029, 206.103, -47.8957, 0.28", "-21.8124, 207.31, -48.8675, 0.83", "-23.5743, 209.244, -50.6332, 0.83", "-24.9249, 210.604, -51.8246, 0.83", "-26.2985, 211.901, -52.9936, 0.28", "-28.0656, 213.537, -54.3919, 0.55", "-30.0677, 215.401, -55.8467, 0.28", "-31.2833, 216.53, -56.6593, 1.11", "-34.5133, 219.558, -58.6751, 0.28", "-35.6451, 220.519, -59.3127, 0.83", "-37.3445, 221.863, -60.249, 0.28", "-38.0739, 222.436, -60.6195, 0.55", "-39.8509, 223.81, -61.4331, 0.28", "-40.1397, 224.031, -61.5713, 0.55", "-41.4343, 224.979, -62.3703, 0.28", "-43.143, 226.204, -63.3793, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-14.4571, 191.029, -40.8738, 0.28", "-13.4038, 192.901, -40.2575, 0.28", "-12.7729, 194.166, -39.8677, 0.55", "-12.0833, 195.808, -39.3052, 0.28", "-11.6151, 196.959, -39.1679, 0.55", "-10.9538, 198.497, -39.2607, 0.28", "-10.849, 198.741, -39.2754, 0.55", "-10.1629, 200.499, -39.607, 0.28", "-9.50179, 202.342, -40.1361, 0.83", "-7.92991, 206.391, -41.9869, 0.28", "-7.30174, 207.926, -42.9046, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "8.72452, -35.7022, 17.1228, 1.66", "8.6854, -36.3407, 17.214, 1.66", "8.54855, -38.2685, 17.5077, 1.11", "8.3802, -43.26, 18.4324, 1.11", "8.2942, -48.3857, 19.5706, 1.11", "8.18282, -51.6148, 20.4268, 1.11", "8.0724, -55.3506, 21.5437, 1.11", "8.07873, -57.4774, 22.2605, 1.11", "8.24467, -61.6395, 23.8348, 1.11", "8.47005, -65.797, 25.6078, 1.11", "8.70521, -72.9798, 28.8437, 1.11", "8.78325, -76.7196, 30.4911, 1.11", "8.80323, -80.3669, 32.0654, 1.11", "8.61571, -84.216, 33.5855, 1.11", "8.02655, -88.6114, 35.1307, 0.83", "7.33946, -91.7862, 36.108, 0.55", "6.60195, -94.3176, 36.7213, 0.55", "5.81262, -96.6821, 37.1284, 0.55", "4.46947, -100.116, 37.6126, 0.55", "2.48616, -104.873, 38.1277, 0.55", "0.99914, -108.649, 38.4332, 0.55", "-0.15432, -111.757, 38.698, 0.55", "-1.46729, -115.516, 39.1189, 0.28", "-3.65817, -124.47, 42.414, 0.28", "-6.80678, -132.68, 46.7937, 0.28", "-10.0059, -140.447, 51.9231, 0.28", "-12.8637, -147.467, 58.247, 0.28", "-14.156, -154.05, 65.5094, 0.28", "-14.1873, -159.55, 73.7664, 0.28", "-14.27, -164.953, 82.0902, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.72452, -35.7022, 17.1228, 0.55", "10.3072, -36.2319, 18.9938, 0.55", "11.083, -36.504, 19.7761, 0.55", "13.3271, -37.2108, 22.0179, 0.55", "19.0618, -38.8081, 27.4265, 0.55", "20.3565, -39.0853, 28.5855, 0.55", "23.626, -39.5325, 31.4469, 0.55", "25.9713, -39.8184, 33.6051, 0.28", "29.5046, -40.1288, 36.8839, 0.28", "30.9207, -40.2123, 38.198, 0.28", "32.9016, -40.1188, 39.5309, 0.28", "36.0438, -39.6825, 41.7127, 0.28", "43.398, -40.9697, 48.359, 0.28", "49.5482, -42.8465, 56.0055, 0.28", "55.5814, -44.7098, 63.7482, 0.28", "61.0237, -44.7938, 72.137, 0.28", "66.7717, -46.2067, 80.1907, 0.28", "71.1612, -48.7637, 88.7845, 0.28", "75.5901, -53.1743, 96.5255, 0.28", "78.7027, -57.2866, 105.041, 0.28", "81.0853, -61.0084, 113.972, 0.28", "84.6623, -64.8422, 122.442, 0.28", "88.5535, -68.385, 130.907, 0.28", "91.5971, -70.5689, 140.165, 0.28", "96.8756, -72.8319, 148.336, 0.28", "103.033, -73.5445, 156.181, 0.28", "108.588, -74.6722, 164.415, 0.28", "114.628, -74.167, 172.369, 0.28", "120.299, -74.1543, 180.605, 0.28", "125.932, -73.496, 188.84, 0.28", "130.579, -71.4941, 197.453, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "189.287, -74.2407, 63.9437, 0.28", "198.926, -76.8229, 64.2259, 0.28", "208.156, -80.5605, 64.5398, 0.28", "217.556, -83.6436, 65.8236, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "189.287, -74.2407, 63.9437, 0.28", "197.812, -75.6897, 68.9542, 0.28", "206.784, -78.1943, 72.5488, 0.28", "216.103, -80.0785, 75.6179, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-26.5499, -122.513, -45.448, 0.28", "-28.8492, -125.71, -45.4297, 0.28", "-29.5597, -126.693, -45.4268, 0.55", "-31.3626, -129.3, -45.5761, 0.28", "-32.4636, -130.877, -45.7056, 0.83", "-34.3877, -133.538, -45.9564, 0.28", "-35.8628, -135.562, -46.1537, 0.28", "-37.3813, -137.608, -46.5296, 0.83", "-39.8225, -140.884, -47.3138, 0.28", "-40.6414, -142.028, -47.702, 0.55", "-43.3162, -145.974, -49.2941, 0.28", "-44.3016, -147.508, -50.0226, 0.83", "-47.2017, -152.124, -52.4749, 0.28", "-47.8859, -153.334, -53.1703, 0.83", "-49.669, -156.985, -55.3236, 0.28", "-50.0658, -158.117, -55.9604, 0.55", "-50.4244, -159.947, -56.9295, 0.28", "-50.6445, -161.576, -57.7423, 0.83", "-50.7981, -166.021, -59.5154, 0.28", "-50.7604, -167.305, -59.9615, 0.83", "-50.3516, -171.067, -60.8291, 0.28", "-50.075, -172.549, -61.1318, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-26.5499, -122.513, -45.448, 0.28", "-24.9153, -126.246, -46.3779, 0.28", "-24.0653, -128.187, -46.8614, 1.11", "-23.3036, -129.927, -47.2948, 0.28", "-22.5848, -131.568, -47.7037, 1.38" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_27", "dend_26", "dend_25", "dend_20", "dend_13", "dend_0", "dend_24", "dend_21", "dend_19", "dend_14", "dend_6", "dend_1", "dend_23", "dend_22", "dend_16", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "dend_18", "dend_17", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_28", "dend_27", "dend_26", "dend_25", "dend_20", "dend_13", "dend_0", "dend_24", "dend_21", "dend_19", "dend_14", "dend_6", "dend_1", "dend_23", "dend_22", "dend_16", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "dend_18", "dend_17", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_13", "dend_0", "axon_0", "axon_0", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L23_LBC_d2eb341534_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_27, dend_26, dend_25, dend_20, dend_13, dend_0, dend_24, dend_21, dend_19, dend_14, dend_6, dend_1, dend_23, dend_22, dend_16, dend_15, dend_10, dend_7, dend_5, dend_2, dend_18, dend_17, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_27, dend_26, dend_25, dend_20, dend_13, dend_0, dend_24, dend_21, dend_19, dend_14, dend_6, dend_1, dend_23, dend_22, dend_16, dend_15, dend_10, dend_7, dend_5, dend_2, dend_18, dend_17, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_30
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_13, dend_0, axon_0, axon_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_28(0), soma_0(0.49999927224605856)
    connect dend_27(0), soma_0(0.49999927224605856)
    connect dend_26(0), soma_0(0.49999927224605856)
    connect dend_25(0), soma_0(0.49999927224605856)
    connect dend_20(0), soma_0(0.49999927224605856)
    connect dend_13(0), soma_0(0.49999927224605856)
    connect dend_0(0), soma_0(0.49999927224605856)
    connect axon_0(0), soma_0(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.51694, 11.0104, -0.0819092, 3.19551 ) }
    soma_0 { pt3dadd( -3.15841, 9.8621, -0.0768064, 5.3635 ) }
    soma_0 { pt3dadd( -2.79987, 8.71381, -0.0717036, 5.2385 ) }
    soma_0 { pt3dadd( -2.44133, 7.56552, -0.0666008, 5.40379 ) }
    soma_0 { pt3dadd( -2.0828, 6.41722, -0.061498, 6.02088 ) }
    soma_0 { pt3dadd( -1.72426, 5.26893, -0.0563952, 7.0572 ) }
    soma_0 { pt3dadd( -1.36573, 4.12064, -0.0512924, 8.33548 ) }
    soma_0 { pt3dadd( -1.00719, 2.97235, -0.0461896, 9.39045 ) }
    soma_0 { pt3dadd( -0.648657, 1.82405, -0.0410868, 9.67825 ) }
    soma_0 { pt3dadd( -0.290122, 0.675761, -0.035984, 9.93356 ) }
    soma_0 { pt3dadd( 0.0684139, -0.472532, -0.0308812, 10.1889 ) }
    soma_0 { pt3dadd( 0.426949, -1.62083, -0.0257784, 10.0539 ) }
    soma_0 { pt3dadd( 0.785485, -2.76912, -0.0206756, 9.68551 ) }
    soma_0 { pt3dadd( 1.14402, -3.91741, -0.0155728, 9.07939 ) }
    soma_0 { pt3dadd( 1.50256, -5.0657, -0.0104701, 8.46979 ) }
    soma_0 { pt3dadd( 1.86109, -6.214, -0.00536725, 7.63175 ) }
    soma_0 { pt3dadd( 2.21963, -7.36229, -2.64453E-4, 6.67377 ) }
    soma_0 { pt3dadd( 2.57816, -8.51058, 0.00483835, 5.68988 ) }
    soma_0 { pt3dadd( 2.9367, -9.65888, 0.00994114, 4.70477 ) }
    soma_0 { pt3dadd( 3.29523, -10.8072, 0.0150439, 3.57171 ) }
    soma_0 { pt3dadd( 3.65377, -11.9555, 0.0201467, 2.11631 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.91059, 2.5527, 14.561, 0.83 ) }
    dend_28 { pt3dadd( -3.4833, 4.92698, 15.0992, 0.83 ) }
    dend_28 { pt3dadd( -4.44366, 8.7718, 16.0717, 0.83 ) }
    dend_28 { pt3dadd( -4.94694, 10.8233, 16.6025, 0.55 ) }
    dend_28 { pt3dadd( -5.47241, 12.6422, 17.1413, 0.83 ) }
    dend_28 { pt3dadd( -6.32875, 15.5901, 18.0685, 0.55 ) }
    dend_28 { pt3dadd( -7.15742, 18.3164, 18.9979, 0.55 ) }
    dend_28 { pt3dadd( -8.01737, 20.9912, 20.0967, 0.55 ) }
    dend_28 { pt3dadd( -8.7899, 23.0891, 21.18, 0.55 ) }
    dend_28 { pt3dadd( -9.96569, 26.0094, 23.0328, 0.55 ) }
    dend_28 { pt3dadd( -11.3186, 29.0915, 25.1607, 0.55 ) }
    dend_28 { pt3dadd( -12.3845, 31.2619, 26.7987, 0.55 ) }
    dend_28 { pt3dadd( -14.0356, 34.5395, 29.3839, 0.55 ) }
    dend_28 { pt3dadd( -15.6443, 37.7806, 31.911, 0.55 ) }
    dend_28 { pt3dadd( -17.2156, 41.0625, 34.4583, 0.55 ) }
    dend_28 { pt3dadd( -18.3579, 43.5094, 36.3568, 0.55 ) }
    dend_28 { pt3dadd( -19.7893, 46.411, 38.6547, 0.55 ) }
    dend_28 { pt3dadd( -20.6565, 48.2629, 40.0283, 0.55 ) }
    dend_28 { pt3dadd( -21.408, 49.9902, 41.128, 0.83 ) }
    dend_28 { pt3dadd( -22.1739, 52.1655, 42.1033, 0.55 ) }
    dend_28 { pt3dadd( -24.9321, 60.8562, 45.7007, 0.55 ) }
    dend_28 { pt3dadd( -28.3877, 68.3459, 51.0905, 0.55 ) }
    dend_28 { pt3dadd( -30.9141, 76.4185, 56.097, 0.55 ) }
    dend_28 { pt3dadd( -31.5055, 84.6742, 61.3841, 0.55 ) }
    dend_28 { pt3dadd( -33.4925, 93.1574, 65.8952, 0.55 ) }
    dend_28 { pt3dadd( -33.6711, 101.537, 71.005, 0.55 ) }
    dend_28 { pt3dadd( -32.6574, 110.257, 75.3627, 0.55 ) }
    dend_28 { pt3dadd( -30.5583, 118.518, 80.2417, 0.55 ) }
    dend_28 { pt3dadd( -27.7438, 126.639, 85.0056, 0.55 ) }
    dend_28 { pt3dadd( -25.1185, 134.164, 90.7971, 0.55 ) }
    dend_28 { pt3dadd( -23.1945, 140.94, 97.7258, 0.55 ) }
    dend_28 { pt3dadd( -22.7187, 148.043, 104.559, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -4.33059, 1.9872, 1.82102, 0.83 ) }
    dend_27 { pt3dadd( -5.08972, 2.00013, 0.942587, 0.83 ) }
    dend_27 { pt3dadd( -6.64272, 2.03823, -0.744081, 0.83 ) }
    dend_27 { pt3dadd( -9.44359, 2.12774, -3.63028, 0.83 ) }
    dend_27 { pt3dadd( -12.8921, 2.2025, -7.27212, 0.83 ) }
    dend_27 { pt3dadd( -14.3482, 2.22553, -8.72332, 0.55 ) }
    dend_27 { pt3dadd( -15.6768, 2.24773, -9.96792, 0.83 ) }
    dend_27 { pt3dadd( -16.7404, 2.33703, -11.0142, 0.28 ) }
    dend_27 { pt3dadd( -17.5956, 2.46348, -11.9929, 0.55 ) }
    dend_27 { pt3dadd( -21.2247, 3.09627, -16.5118, 0.55 ) }
    dend_27 { pt3dadd( -22.5823, 3.28583, -18.3107, 0.83 ) }
    dend_27 { pt3dadd( -24.2298, 3.5119, -20.6246, 0.55 ) }
    dend_27 { pt3dadd( -27.3607, 3.91056, -25.1208, 0.55 ) }
    dend_27 { pt3dadd( -31.4508, 4.50382, -31.2162, 0.55 ) }
    dend_27 { pt3dadd( -34.2717, 4.92213, -35.5649, 0.55 ) }
    dend_27 { pt3dadd( -36.7214, 5.29213, -39.3038, 0.55 ) }
    dend_27 { pt3dadd( -37.7523, 5.44221, -40.8588, 0.55 ) }
    dend_27 { pt3dadd( -38.6002, 5.53822, -42.027, 0.55 ) }
    dend_27 { pt3dadd( -41.1006, 5.73782, -44.8679, 0.55 ) }
    dend_27 { pt3dadd( -43.8881, 6.03537, -47.4639, 0.55 ) }
    dend_27 { pt3dadd( -45.8571, 6.2597, -49.119, 0.28 ) }
    dend_27 { pt3dadd( -48.13, 6.51487, -50.9205, 1.11 ) }
    dend_27 { pt3dadd( -54.0693, 6.91506, -55.3509, 0.28 ) }
    dend_27 { pt3dadd( -56.2485, 7.00084, -56.8379, 0.28 ) }
    dend_27 { pt3dadd( -57.9654, 7.00066, -57.876, 1.11 ) }
    dend_27 { pt3dadd( -62.0165, 6.89524, -60.1133, 0.28 ) }
    dend_27 { pt3dadd( -64.5546, 6.75352, -61.4635, 0.83 ) }
    dend_27 { pt3dadd( -67.3614, 6.5343, -62.8717, 0.28 ) }
    dend_27 { pt3dadd( -68.6292, 6.42497, -63.457, 1.11 ) }
    dend_27 { pt3dadd( -72.1748, 6.14196, -65.2737, 0.28 ) }
    dend_27 { pt3dadd( -73.4176, 6.09493, -65.9253, 0.28 ) }
    dend_27 { pt3dadd( -75.1564, 6.18545, -66.7501, 1.11 ) }
    dend_27 { pt3dadd( -78.6253, 6.75213, -68.2465, 0.28 ) }
    dend_27 { pt3dadd( -79.9127, 7.10464, -68.7079, 0.83 ) }
    dend_27 { pt3dadd( -83.9094, 8.77174, -69.7912, 0.28 ) }
    dend_27 { pt3dadd( -85.9247, 9.91378, -70.1507, 1.11 ) }
    dend_27 { pt3dadd( -89.6035, 12.4918, -70.5467, 0.28 ) }
    dend_27 { pt3dadd( -92.0715, 14.5397, -70.5582, 0.83 ) }
    dend_27 { pt3dadd( -94.4624, 16.8778, -70.3087, 0.28 ) }
    dend_27 { pt3dadd( -97.1666, 19.8668, -69.8426, 0.28 ) }
    dend_27 { pt3dadd( -97.9992, 20.9299, -69.6164, 0.83 ) }
    dend_27 { pt3dadd( -99.2051, 22.5931, -69.3475, 0.83 ) }
    dend_27 { pt3dadd( -100.323, 24.3355, -69.1978, 0.28 ) }
    dend_27 { pt3dadd( -101.21, 25.8045, -69.2411, 0.55 ) }
    dend_27 { pt3dadd( -102.288, 27.6153, -69.5714, 0.28 ) }
    dend_27 { pt3dadd( -103.118, 28.9611, -70.0714, 0.83 ) }
    dend_27 { pt3dadd( -104.83, 31.702, -71.374, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( -106.068, 33.585, -72.4503, 0.83 ) }
    dend_27 { pt3dadd( -107.14, 35.1478, -73.4534, 0.28 ) }
    dend_27 { pt3dadd( -108.823, 37.4285, -75.0522, 0.83 ) }
    dend_27 { pt3dadd( -111.956, 41.1668, -77.8639, 0.28 ) }
    dend_27 { pt3dadd( -113.442, 42.622, -78.9516, 0.83 ) }
    dend_27 { pt3dadd( -114.721, 43.6327, -79.6715, 0.55 ) }
    dend_27 { pt3dadd( -115.789, 44.3203, -80.1655, 0.55 ) }
    dend_27 { pt3dadd( -117.299, 45.1119, -80.68, 0.28 ) }
    dend_27 { pt3dadd( -119.927, 46.2159, -81.236, 0.83 ) }
    dend_27 { pt3dadd( -124.391, 47.6739, -81.6465, 0.28 ) }
    dend_27 { pt3dadd( -126.262, 48.2214, -81.7702, 0.83 ) }
    dend_27 { pt3dadd( -128.22, 48.8489, -81.8257, 0.28 ) }
    dend_27 { pt3dadd( -131.218, 49.8553, -81.7809, 0.83 ) }
    dend_27 { pt3dadd( -133.62, 50.823, -81.708, 1.11 ) }
    dend_27 { pt3dadd( -136.257, 52.1138, -81.6161, 0.55 ) }
    dend_27 { pt3dadd( -137.504, 52.791, -81.6594, 0.83 ) }
    dend_27 { pt3dadd( -140.612, 54.6834, -81.9659, 0.28 ) }
    dend_27 { pt3dadd( -142.057, 55.6804, -82.1812, 0.83 ) }
    dend_27 { pt3dadd( -145.511, 58.2289, -82.9696, 0.28 ) }
    dend_27 { pt3dadd( -147.154, 59.4494, -83.522, 1.11 ) }
    dend_27 { pt3dadd( -150.327, 61.7111, -84.8534, 0.28 ) }
    dend_27 { pt3dadd( -152.0, 62.828, -85.6099, 0.55 ) }
    dend_27 { pt3dadd( -153.849, 63.9372, -86.5504, 0.55 ) }
    dend_27 { pt3dadd( -156.583, 65.4154, -87.9978, 0.55 ) }
    dend_27 { pt3dadd( -159.444, 66.7118, -89.4187, 0.28 ) }
    dend_27 { pt3dadd( -160.621, 67.2389, -89.9981, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 5.05941, 3.92745, 7.73102, 0.83 ) }
    dend_26 { pt3dadd( 5.88781, 4.32924, 8.06558, 0.83 ) }
    dend_26 { pt3dadd( 7.09991, 4.87449, 8.56215, 0.83 ) }
    dend_26 { pt3dadd( 9.32795, 5.91591, 9.53165, 0.83 ) }
    dend_26 { pt3dadd( 11.4498, 6.92335, 10.6202, 0.55 ) }
    dend_26 { pt3dadd( 13.934, 8.05002, 11.9494, 1.11 ) }
    dend_26 { pt3dadd( 16.8063, 9.40713, 13.4602, 0.55 ) }
    dend_26 { pt3dadd( 18.6891, 10.2791, 14.4579, 0.83 ) }
    dend_26 { pt3dadd( 21.4347, 11.6159, 15.8568, 0.55 ) }
    dend_26 { pt3dadd( 24.9009, 13.2892, 17.5197, 0.83 ) }
    dend_26 { pt3dadd( 27.5733, 14.5474, 18.6424, 0.55 ) }
    dend_26 { pt3dadd( 31.7195, 16.4988, 20.1297, 0.55 ) }
    dend_26 { pt3dadd( 34.2404, 17.6144, 20.7596, 0.55 ) }
    dend_26 { pt3dadd( 38.9296, 19.6549, 21.4146, 0.55 ) }
    dend_26 { pt3dadd( 42.7221, 21.2108, 21.4486, 0.83 ) }
    dend_26 { pt3dadd( 45.9203, 22.5056, 21.0943, 0.83 ) }
    dend_26 { pt3dadd( 48.082, 23.3884, 20.683, 0.83 ) }
    dend_26 { pt3dadd( 52.2034, 24.9179, 19.7026, 0.83 ) }
    dend_26 { pt3dadd( 54.2878, 25.683, 19.1765, 0.83 ) }
    dend_26 { pt3dadd( 58.0971, 27.1154, 18.2114, 0.83 ) }
    dend_26 { pt3dadd( 61.082, 28.4436, 17.5524, 0.83 ) }
    dend_26 { pt3dadd( 63.8693, 29.7401, 17.1194, 0.83 ) }
    dend_26 { pt3dadd( 67.1997, 31.3207, 16.8192, 0.83 ) }
    dend_26 { pt3dadd( 70.1134, 32.7534, 16.7998, 0.83 ) }
    dend_26 { pt3dadd( 71.8926, 33.6576, 16.8436, 0.83 ) }
    dend_26 { pt3dadd( 75.5729, 35.5274, 16.9641, 0.83 ) }
    dend_26 { pt3dadd( 77.5456, 36.5086, 17.0572, 0.83 ) }
    dend_26 { pt3dadd( 80.1187, 37.7879, 17.2162, 1.11 ) }
    dend_26 { pt3dadd( 82.1812, 38.7889, 17.3464, 0.55 ) }
    dend_26 { pt3dadd( 84.321, 39.7227, 17.517, 0.55 ) }
    dend_26 { pt3dadd( 87.8013, 41.1082, 17.8942, 0.83 ) }
    dend_26 { pt3dadd( 90.1813, 41.9699, 18.2257, 0.83 ) }
    dend_26 { pt3dadd( 92.719, 42.965, 18.453, 0.55 ) }
    dend_26 { pt3dadd( 94.821, 43.8646, 18.4926, 0.55 ) }
    dend_26 { pt3dadd( 96.8935, 44.9265, 18.3497, 0.83 ) }
    dend_26 { pt3dadd( 98.0341, 45.5796, 18.1554, 0.83 ) }
    dend_26 { pt3dadd( 101.247, 47.7098, 17.0628, 0.55 ) }
    dend_26 { pt3dadd( 105.099, 50.1939, 15.3224, 0.55 ) }
    dend_26 { pt3dadd( 107.498, 51.6858, 14.1005, 0.55 ) }
    dend_26 { pt3dadd( 110.788, 53.6911, 12.2995, 0.55 ) }
    dend_26 { pt3dadd( 114.639, 56.0266, 10.1373, 0.55 ) }
    dend_26 { pt3dadd( 118.264, 58.2221, 8.12182, 0.83 ) }
    dend_26 { pt3dadd( 120.943, 59.8458, 6.68671, 0.55 ) }
    dend_26 { pt3dadd( 123.744, 61.4098, 5.45789, 0.55 ) }
    dend_26 { pt3dadd( 125.653, 62.483, 4.65535, 0.55 ) }
    dend_26 { pt3dadd( 128.725, 64.1614, 3.384, 0.55 ) }
    dend_26 { pt3dadd( 130.194, 64.9636, 2.84649, 0.83 ) }
    dend_26 { pt3dadd( 131.856, 65.8328, 2.357, 0.55 ) }
    dend_26 { pt3dadd( 134.67, 67.3818, 1.45569, 0.55 ) }
    dend_26 { pt3dadd( 136.685, 68.4838, 0.767161, 0.83 ) }
    dend_26 { pt3dadd( 138.777, 69.7702, -2.34861E-4, 0.55 ) }
    dend_26 { pt3dadd( 141.296, 71.3423, -1.02542, 0.55 ) }
    dend_26 { pt3dadd( 143.24, 72.6248, -1.80844, 0.55 ) }
    dend_26 { pt3dadd( 144.517, 73.5651, -2.27681, 0.28 ) }
    dend_26 { pt3dadd( 145.37, 74.2628, -2.53294, 1.11 ) }
    dend_26 { pt3dadd( 149.007, 77.3113, -3.26432, 0.55 ) }
    dend_26 { pt3dadd( 150.999, 79.1138, -3.51823, 0.55 ) }
    dend_26 { pt3dadd( 152.285, 80.278, -3.63597, 0.55 ) }
    dend_26 { pt3dadd( 154.723, 82.3311, -3.8407, 0.55 ) }
    dend_26 { pt3dadd( 155.923, 83.2676, -3.91979, 0.28 ) }
    dend_26 { pt3dadd( 158.165, 84.9629, -4.09333, 0.55 ) }
    dend_26 { pt3dadd( 159.587, 86.0076, -4.20385, 0.55 ) }
    dend_26 { pt3dadd( 161.148, 87.2445, -4.35305, 0.55 ) }
    dend_26 { pt3dadd( 164.226, 89.7292, -4.77895, 0.55 ) }
    dend_26 { pt3dadd( 166.063, 91.1765, -5.11028, 0.55 ) }
    dend_26 { pt3dadd( 167.988, 92.6373, -5.52827, 0.28 ) }
    dend_26 { pt3dadd( 169.074, 93.4701, -5.77903, 0.55 ) }
    dend_26 { pt3dadd( 170.983, 94.9483, -6.21671, 1.38 ) }
    dend_26 { pt3dadd( 174.31, 97.472, -6.91766, 0.55 ) }
    dend_26 { pt3dadd( 176.263, 98.8975, -7.27016, 1.11 ) }
    dend_26 { pt3dadd( 177.963, 100.11, -7.56037, 0.55 ) }
    dend_26 { pt3dadd( 179.886, 101.418, -7.86448, 0.55 ) }
    dend_26 { pt3dadd( 181.366, 102.349, -8.08765, 0.83 ) }
    dend_26 { pt3dadd( 184.826, 104.319, -8.5515, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_26 { pt3dadd( 186.608, 105.198, -8.74313, 0.55 ) }
    dend_26 { pt3dadd( 187.662, 105.635, -8.84895, 0.83 ) }
    dend_26 { pt3dadd( 192.09, 107.152, -9.27465, 0.55 ) }
    dend_26 { pt3dadd( 194.363, 107.8, -9.45697, 0.55 ) }
    dend_26 { pt3dadd( 196.529, 108.467, -9.54906, 0.55 ) }
    dend_26 { pt3dadd( 197.938, 108.962, -9.50794, 0.83 ) }
    dend_26 { pt3dadd( 200.111, 109.82, -9.27442, 0.55 ) }
    dend_26 { pt3dadd( 204.536, 111.872, -8.32498, 0.55 ) }
    dend_26 { pt3dadd( 206.944, 113.255, -7.52621, 0.55 ) }
    dend_26 { pt3dadd( 210.366, 115.544, -6.13067, 0.55 ) }
    dend_26 { pt3dadd( 212.579, 117.208, -5.0081, 0.55 ) }
    dend_26 { pt3dadd( 214.059, 118.385, -4.15597, 0.83 ) }
    dend_26 { pt3dadd( 216.415, 120.266, -2.67527, 0.55 ) }
    dend_26 { pt3dadd( 219.298, 122.518, -0.743668, 0.55 ) }
    dend_26 { pt3dadd( 222.218, 124.733, 1.20148, 0.55 ) }
    dend_26 { pt3dadd( 223.976, 125.929, 2.30233, 0.83 ) }
    dend_26 { pt3dadd( 225.378, 126.838, 3.08642, 0.55 ) }
    dend_26 { pt3dadd( 227.115, 127.93, 3.99976, 0.28 ) }
    dend_26 { pt3dadd( 228.413, 128.628, 4.60467, 0.55 ) }
    dend_26 { pt3dadd( 237.709, 132.018, 3.38285, 0.55 ) }
    dend_26 { pt3dadd( 246.842, 135.412, 1.26909, 0.55 ) }
    dend_26 { pt3dadd( 256.193, 138.836, 0.801614, 0.55 ) }
    dend_26 { pt3dadd( 265.718, 141.675, -0.0967968, 0.55 ) }
    dend_26 { pt3dadd( 275.293, 143.461, -2.32574, 0.55 ) }
    dend_26 { pt3dadd( 284.426, 146.057, -5.40594, 0.55 ) }
    dend_26 { pt3dadd( 293.655, 147.256, -9.05424, 0.55 ) }
    dend_26 { pt3dadd( 303.194, 147.511, -12.0447, 0.55 ) }
    dend_26 { pt3dadd( 312.396, 147.686, -15.9552, 0.55 ) }
    dend_26 { pt3dadd( 321.233, 147.911, -20.6299, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 5.82941, 1.87995, -1.46898, 0.55 ) }
    dend_25 { pt3dadd( 7.89789, 2.50186, -2.02954, 0.55 ) }
    dend_25 { pt3dadd( 9.27195, 2.93303, -2.40291, 1.11 ) }
    dend_25 { pt3dadd( 11.6375, 3.5156, -3.05655, 0.55 ) }
    dend_25 { pt3dadd( 13.0764, 3.76823, -3.6099, 0.83 ) }
    dend_25 { pt3dadd( 16.2299, 4.19611, -5.11173, 0.83 ) }
    dend_25 { pt3dadd( 18.8612, 4.52144, -6.5573, 0.55 ) }
    dend_25 { pt3dadd( 21.173, 4.79352, -7.97156, 0.83 ) }
    dend_25 { pt3dadd( 23.2645, 5.04686, -9.22455, 0.55 ) }
    dend_25 { pt3dadd( 26.9453, 5.51778, -11.3323, 0.55 ) }
    dend_25 { pt3dadd( 29.506, 5.79874, -12.6016, 0.55 ) }
    dend_25 { pt3dadd( 32.2034, 6.07487, -13.7953, 1.11 ) }
    dend_25 { pt3dadd( 35.7785, 6.32828, -14.9064, 0.55 ) }
    dend_25 { pt3dadd( 38.2494, 6.49627, -15.3142, 0.55 ) }
    dend_25 { pt3dadd( 39.9136, 6.64868, -15.2738, 0.55 ) }
    dend_25 { pt3dadd( 43.5991, 6.92716, -14.8085, 0.83 ) }
    dend_25 { pt3dadd( 47.0448, 7.05724, -14.2164, 0.55 ) }
    dend_25 { pt3dadd( 49.688, 7.10147, -13.7131, 0.55 ) }
    dend_25 { pt3dadd( 52.7719, 7.03652, -13.3174, 0.55 ) }
    dend_25 { pt3dadd( 56.8723, 7.04646, -13.4112, 0.83 ) }
    dend_25 { pt3dadd( 59.8895, 7.07454, -13.8963, 0.28 ) }
    dend_25 { pt3dadd( 60.723, 7.07082, -14.1615, 0.55 ) }
    dend_25 { pt3dadd( 62.0236, 7.0036, -14.6948, 0.55 ) }
    dend_25 { pt3dadd( 65.0649, 6.58957, -16.4536, 0.55 ) }
    dend_25 { pt3dadd( 68.9283, 5.76156, -19.173, 0.55 ) }
    dend_25 { pt3dadd( 71.3521, 5.12238, -21.233, 0.55 ) }
    dend_25 { pt3dadd( 73.5791, 4.52134, -23.2398, 0.28 ) }
    dend_25 { pt3dadd( 74.9233, 4.17304, -24.4836, 0.55 ) }
    dend_25 { pt3dadd( 77.8332, 3.47216, -27.1369, 0.28 ) }
    dend_25 { pt3dadd( 79.3817, 3.18202, -28.5762, 0.55 ) }
    dend_25 { pt3dadd( 83.0331, 2.71848, -31.9358, 0.28 ) }
    dend_25 { pt3dadd( 84.729, 2.74095, -33.507, 0.55 ) }
    dend_25 { pt3dadd( 87.6821, 3.25903, -36.1368, 0.28 ) }
    dend_25 { pt3dadd( 89.3529, 3.8236, -37.4914, 0.55 ) }
    dend_25 { pt3dadd( 91.7839, 5.06552, -39.18, 0.28 ) }
    dend_25 { pt3dadd( 93.0945, 5.88595, -40.0437, 0.83 ) }
    dend_25 { pt3dadd( 95.8029, 7.82204, -41.7189, 0.28 ) }
    dend_25 { pt3dadd( 97.6149, 9.19946, -42.9734, 0.55 ) }
    dend_25 { pt3dadd( 99.5954, 10.7824, -44.4589, 0.28 ) }
    dend_25 { pt3dadd( 100.664, 11.5959, -45.2589, 0.55 ) }
    dend_25 { pt3dadd( 104.645, 14.4002, -48.0489, 0.28 ) }
    dend_25 { pt3dadd( 105.959, 15.1934, -48.9365, 0.55 ) }
    dend_25 { pt3dadd( 108.943, 16.7977, -50.6962, 0.28 ) }
    dend_25 { pt3dadd( 109.97, 17.2977, -51.2341, 1.11 ) }
    dend_25 { pt3dadd( 111.957, 18.1759, -52.1695, 0.28 ) }
    dend_25 { pt3dadd( 113.168, 18.6957, -52.632, 1.11 ) }
    dend_25 { pt3dadd( 117.907, 20.7161, -53.8451, 0.28 ) }
    dend_25 { pt3dadd( 121.807, 22.3938, -54.6217, 0.28 ) }
    dend_25 { pt3dadd( 124.188, 23.4732, -54.8601, 0.83 ) }
    dend_25 { pt3dadd( 127.439, 25.1239, -54.9763, 0.28 ) }
    dend_25 { pt3dadd( 128.537, 25.7472, -54.9529, 0.55 ) }
    dend_25 { pt3dadd( 130.751, 27.175, -54.6759, 0.28 ) }
    dend_25 { pt3dadd( 132.621, 28.5897, -54.2041, 1.11 ) }
    dend_25 { pt3dadd( 136.358, 31.7723, -52.9868, 0.28 ) }
    dend_25 { pt3dadd( 139.516, 34.7109, -51.7937, 0.28 ) }
    dend_25 { pt3dadd( 140.432, 35.6417, -51.3968, 0.55 ) }
    dend_25 { pt3dadd( 142.509, 37.8614, -50.487, 0.28 ) }
    dend_25 { pt3dadd( 143.369, 38.844, -50.098, 1.66 ) }
    dend_25 { pt3dadd( 144.536, 40.2066, -49.5446, 0.28 ) }
    dend_25 { pt3dadd( 145.99, 41.9255, -48.9664, 0.55 ) }
    dend_25 { pt3dadd( 146.892, 42.9497, -48.6367, 0.28 ) }
    dend_25 { pt3dadd( 148.058, 44.2258, -48.4217, 0.55 ) }
    dend_25 { pt3dadd( 149.459, 45.7368, -48.3696, 0.28 ) }
    dend_25 { pt3dadd( 150.337, 46.6685, -48.5027, 0.55 ) }
    dend_25 { pt3dadd( 151.804, 48.2457, -48.8263, 0.28 ) }
    dend_25 { pt3dadd( 153.095, 49.6477, -49.1984, 1.11 ) }
    dend_25 { pt3dadd( 156.21, 52.9532, -50.3298, 0.28 ) }
    dend_25 { pt3dadd( 157.229, 54.0132, -50.7925, 0.55 ) }
    dend_25 { pt3dadd( 160.566, 57.5343, -52.6388, 0.28 ) }
    dend_25 { pt3dadd( 162.07, 59.1321, -53.5966, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 99/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -5.12059, 9.11445, 7.96102, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( -7.02163, 8.90083, 7.05496, 1.11 ) }
    dend_20 { pt3dadd( -11.1601, 8.43579, 5.08252, 1.11 ) }
    dend_20 { pt3dadd( -16.6355, 7.82052, 2.47288, 1.38 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 3/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.92059, 10.46, 0.421023, 2.22 ) }
    dend_13 { pt3dadd( -2.70059, 13.2095, -1.01898, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 5/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.75941, -11.458, 2.43102, 2.49 ) }
    dend_0 { pt3dadd( 3.23941, -15.2118, 2.43102, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 7/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.65377, -11.9555, 0.0201467, 0.830638 ) }
    axon_0 { pt3dadd( 8.12441, -26.2738, 0.0201467, 0.830638 ) }
    axon_0 { pt3dadd( 12.5951, -40.5921, 0.0201467, 0.830638 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 10/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -16.6355, 7.82052, 2.47288, 0.55 ) }
    dend_24 { pt3dadd( -18.6924, 6.93879, 3.5175, 0.55 ) }
    dend_24 { pt3dadd( -20.2063, 6.08125, 4.34841, 0.55 ) }
    dend_24 { pt3dadd( -21.7332, 5.18586, 5.15304, 0.55 ) }
    dend_24 { pt3dadd( -23.3544, 4.30833, 5.95248, 0.55 ) }
    dend_24 { pt3dadd( -25.8964, 3.04464, 7.24101, 0.55 ) }
    dend_24 { pt3dadd( -28.8026, 1.76309, 8.71569, 0.55 ) }
    dend_24 { pt3dadd( -32.1364, 0.53955, 10.4216, 0.83 ) }
    dend_24 { pt3dadd( -35.9988, -0.619582, 12.3594, 0.55 ) }
    dend_24 { pt3dadd( -38.5133, -1.15746, 13.6262, 0.55 ) }
    dend_24 { pt3dadd( -41.2265, -1.50324, 14.9448, 0.55 ) }
    dend_24 { pt3dadd( -43.5883, -1.63377, 16.0364, 0.55 ) }
    dend_24 { pt3dadd( -46.2502, -1.57297, 17.1983, 0.55 ) }
    dend_24 { pt3dadd( -48.552, -1.43494, 18.1726, 0.55 ) }
    dend_24 { pt3dadd( -50.9011, -1.24506, 19.1814, 0.55 ) }
    dend_24 { pt3dadd( -52.8217, -1.1505, 19.9738, 0.55 ) }
    dend_24 { pt3dadd( -54.9213, -1.12836, 20.7798, 0.55 ) }
    dend_24 { pt3dadd( -57.2707, -1.17685, 21.6516, 0.55 ) }
    dend_24 { pt3dadd( -60.0641, -1.16723, 22.6597, 0.55 ) }
    dend_24 { pt3dadd( -63.4546, -1.01074, 23.8622, 0.55 ) }
    dend_24 { pt3dadd( -64.6632, -0.896218, 24.2769, 0.55 ) }
    dend_24 { pt3dadd( -68.0824, -0.415809, 25.4567, 0.83 ) }
    dend_24 { pt3dadd( -70.7807, 0.021612, 26.4653, 0.55 ) }
    dend_24 { pt3dadd( -74.5176, 0.741965, 27.9811, 0.55 ) }
    dend_24 { pt3dadd( -75.9794, 1.06414, 28.5781, 0.83 ) }
    dend_24 { pt3dadd( -79.1357, 1.72425, 29.8912, 0.55 ) }
    dend_24 { pt3dadd( -81.3292, 2.20751, 30.8339, 0.55 ) }
    dend_24 { pt3dadd( -83.6708, 2.66584, 31.8253, 0.55 ) }
    dend_24 { pt3dadd( -85.4244, 2.93228, 32.5564, 0.55 ) }
    dend_24 { pt3dadd( -86.7452, 3.06698, 33.0402, 0.28 ) }
    dend_24 { pt3dadd( -89.6625, 3.25627, 33.9342, 0.55 ) }
    dend_24 { pt3dadd( -91.3841, 3.28272, 34.4182, 0.55 ) }
    dend_24 { pt3dadd( -93.1634, 3.22729, 34.9313, 0.55 ) }
    dend_24 { pt3dadd( -95.9355, 3.11898, 35.6846, 0.83 ) }
    dend_24 { pt3dadd( -97.9165, 2.97344, 36.2197, 0.55 ) }
    dend_24 { pt3dadd( -100.383, 2.75026, 36.9648, 0.55 ) }
    dend_24 { pt3dadd( -102.713, 2.5448, 37.7575, 0.55 ) }
    dend_24 { pt3dadd( -104.927, 2.34716, 38.5777, 0.55 ) }
    dend_24 { pt3dadd( -106.995, 2.19471, 39.4765, 0.55 ) }
    dend_24 { pt3dadd( -115.455, 2.0529, 44.8077, 0.55 ) }
    dend_24 { pt3dadd( -124.467, 0.143135, 48.6738, 0.55 ) }
    dend_24 { pt3dadd( -133.554, -0.496932, 52.7963, 0.55 ) }
    dend_24 { pt3dadd( -142.008, -2.20288, 57.8418, 0.55 ) }
    dend_24 { pt3dadd( -148.775, -5.12717, 64.5664, 0.55 ) }
    dend_24 { pt3dadd( -155.015, -10.3661, 70.2393, 0.55 ) }
    dend_24 { pt3dadd( -160.99, -16.9432, 74.5753, 0.55 ) }
    dend_24 { pt3dadd( -167.496, -21.9423, 80.1775, 0.55 ) }
    dend_24 { pt3dadd( -174.054, -26.8312, 85.821, 0.55 ) }
    dend_24 { pt3dadd( -181.042, -30.9036, 91.6284, 0.55 ) }
    dend_24 { pt3dadd( -186.303, -34.8979, 99.0805, 0.55 ) }
    dend_24 { pt3dadd( -190.469, -39.9536, 106.547, 0.55 ) }
    dend_24 { pt3dadd( -193.002, -43.7398, 115.408, 0.55 ) }
    dend_24 { pt3dadd( -193.572, -46.3932, 125.013, 0.55 ) }
    dend_24 { pt3dadd( -193.46, -49.4541, 134.507, 0.55 ) }
    dend_24 { pt3dadd( -191.992, -53.6188, 143.429, 0.55 ) }
    dend_24 { pt3dadd( -191.466, -57.814, 152.441, 0.55 ) }
    dend_24 { pt3dadd( -191.686, -63.0149, 160.896, 0.55 ) }
    dend_24 { pt3dadd( -193.826, -68.2116, 169.082, 0.55 ) }
    dend_24 { pt3dadd( -196.318, -72.205, 177.858, 0.55 ) }
    dend_24 { pt3dadd( -197.865, -77.4471, 186.147, 0.55 ) }
    dend_24 { pt3dadd( -197.621, -83.1922, 194.223, 0.55 ) }
    dend_24 { pt3dadd( -195.758, -90.0354, 201.098, 0.55 ) }
    dend_24 { pt3dadd( -193.1, -96.5532, 208.044, 0.55 ) }
    dend_24 { pt3dadd( -190.375, -103.484, 214.527, 0.55 ) }
    dend_24 { pt3dadd( -187.275, -110.597, 220.624, 0.55 ) }
    dend_24 { pt3dadd( -184.458, -117.098, 227.524, 0.55 ) }
    dend_24 { pt3dadd( -181.01, -124.372, 233.22, 0.55 ) }
    dend_24 { pt3dadd( -176.683, -131.326, 238.734, 0.55 ) }
    dend_24 { pt3dadd( -172.411, -137.924, 244.731, 0.55 ) }
    dend_24 { pt3dadd( -167.986, -144.783, 250.292, 0.55 ) }
    dend_24 { pt3dadd( -165.46, -151.82, 256.736, 0.55 ) }
    dend_24 { pt3dadd( -164.606, -159.894, 262.277, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 82/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -16.6355, 7.82052, 2.47288, 0.83 ) }
    dend_21 { pt3dadd( -19.4732, 9.95998, 2.03875, 0.83 ) }
    dend_21 { pt3dadd( -20.6983, 10.9203, 1.07156, 0.83 ) }
    dend_21 { pt3dadd( -22.1344, 12.0461, -0.0622752, 1.38 ) }
    dend_21 { pt3dadd( -24.2079, 13.6714, -1.69925, 1.11 ) }
    dend_21 { pt3dadd( -26.2635, 15.2828, -3.32213, 1.11 ) }
    dend_21 { pt3dadd( -28.0461, 16.6801, -4.7295, 1.11 ) }
    dend_21 { pt3dadd( -34.261, 22.5337, -11.7764, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -2.70059, 13.2095, -1.01898, 1.66 ) }
    dend_19 { pt3dadd( -3.2588, 15.5573, -2.28341, 1.66 ) }
    dend_19 { pt3dadd( -3.87444, 17.6535, -3.4008, 1.94 ) }
    dend_19 { pt3dadd( -4.39412, 19.5362, -4.37118, 0.83 ) }
    dend_19 { pt3dadd( -4.90831, 21.9214, -5.59007, 0.83 ) }
    dend_19 { pt3dadd( -5.25485, 23.6904, -6.59061, 0.83 ) }
    dend_19 { pt3dadd( -5.7117, 26.9157, -8.37969, 0.83 ) }
    dend_19 { pt3dadd( -5.95015, 29.1412, -9.6875, 0.83 ) }
    dend_19 { pt3dadd( -6.11139, 30.9954, -10.7879, 0.83 ) }
    dend_19 { pt3dadd( -6.27377, 33.7302, -12.3305, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_19 { pt3dadd( -6.40237, 38.0604, -14.8855, 0.83 ) }
    dend_19 { pt3dadd( -6.38302, 43.3805, -17.8707, 0.83 ) }
    dend_19 { pt3dadd( -6.13041, 47.1948, -19.7775, 0.83 ) }
    dend_19 { pt3dadd( -5.87298, 49.7362, -20.9838, 0.83 ) }
    dend_19 { pt3dadd( -5.44154, 53.4768, -22.6127, 0.83 ) }
    dend_19 { pt3dadd( -4.65932, 59.2639, -24.9118, 0.83 ) }
    dend_19 { pt3dadd( -4.16675, 62.1058, -25.9126, 0.83 ) }
    dend_19 { pt3dadd( -3.21258, 67.0959, -27.5486, 0.83 ) }
    dend_19 { pt3dadd( -2.32983, 71.3273, -28.8393, 0.83 ) }
    dend_19 { pt3dadd( -1.94573, 73.1027, -29.423, 1.94 ) }
    dend_19 { pt3dadd( -1.58878, 75.1113, -30.0606, 1.11 ) }
    dend_19 { pt3dadd( -1.33033, 77.1365, -30.6492, 0.55 ) }
    dend_19 { pt3dadd( -1.14137, 79.1789, -31.3914, 1.38 ) }
    dend_19 { pt3dadd( -0.864259, 84.1885, -33.3879, 0.55 ) }
    dend_19 { pt3dadd( -0.740643, 87.6489, -34.8195, 1.11 ) }
    dend_19 { pt3dadd( -0.632258, 92.1854, -36.7867, 0.55 ) }
    dend_19 { pt3dadd( -0.601704, 94.9459, -38.0101, 1.94 ) }
    dend_19 { pt3dadd( -0.648501, 100.797, -40.6404, 0.28 ) }
    dend_19 { pt3dadd( -0.704566, 102.561, -41.4133, 0.83 ) }
    dend_19 { pt3dadd( -0.861066, 104.853, -42.3531, 0.28 ) }
    dend_19 { pt3dadd( -1.00415, 106.547, -42.9946, 1.66 ) }
    dend_19 { pt3dadd( -1.36611, 110.165, -44.2185, 0.55 ) }
    dend_19 { pt3dadd( -1.58537, 111.848, -44.6348, 0.28 ) }
    dend_19 { pt3dadd( -2.25047, 116.399, -45.2438, 0.55 ) }
    dend_19 { pt3dadd( -2.56553, 118.633, -45.5506, 0.83 ) }
    dend_19 { pt3dadd( -2.83016, 120.832, -45.8253, 0.83 ) }
    dend_19 { pt3dadd( -2.98792, 122.427, -46.0576, 0.55 ) }
    dend_19 { pt3dadd( -3.11445, 124.568, -46.4182, 0.55 ) }
    dend_19 { pt3dadd( -3.02111, 128.055, -47.1517, 1.11 ) }
    dend_19 { pt3dadd( -2.50452, 131.43, -47.9593, 0.28 ) }
    dend_19 { pt3dadd( -2.06599, 133.06, -48.3637, 0.55 ) }
    dend_19 { pt3dadd( -1.28369, 135.143, -48.9978, 0.28 ) }
    dend_19 { pt3dadd( -0.801593, 136.198, -49.3617, 0.55 ) }
    dend_19 { pt3dadd( 0.224682, 138.168, -50.0851, 0.55 ) }
    dend_19 { pt3dadd( 1.59068, 140.654, -50.9934, 0.83 ) }
    dend_19 { pt3dadd( 2.37173, 142.159, -51.4706, 0.55 ) }
    dend_19 { pt3dadd( 3.99866, 145.503, -52.5515, 1.38 ) }
    dend_19 { pt3dadd( 5.51725, 148.666, -53.6448, 0.55 ) }
    dend_19 { pt3dadd( 6.32548, 150.52, -54.3751, 0.28 ) }
    dend_19 { pt3dadd( 6.92194, 152.054, -55.0196, 0.55 ) }
    dend_19 { pt3dadd( 7.62745, 154.233, -55.9194, 0.28 ) }
    dend_19 { pt3dadd( 8.12535, 156.05, -56.6006, 1.11 ) }
    dend_19 { pt3dadd( 8.74114, 158.588, -57.3499, 0.55 ) }
    dend_19 { pt3dadd( 9.2514, 160.887, -57.9379, 0.28 ) }
    dend_19 { pt3dadd( 9.73095, 163.117, -58.4164, 0.55 ) }
    dend_19 { pt3dadd( 10.4384, 166.249, -58.9832, 0.55 ) }
    dend_19 { pt3dadd( 10.8959, 168.147, -59.2228, 0.55 ) }
    dend_19 { pt3dadd( 11.6496, 171.294, -59.5789, 0.55 ) }
    dend_19 { pt3dadd( 12.2119, 173.523, -59.8237, 0.28 ) }
    dend_19 { pt3dadd( 12.7726, 175.601, -60.1157, 0.55 ) }
    dend_19 { pt3dadd( 13.5414, 178.384, -60.6337, 0.83 ) }
    dend_19 { pt3dadd( 14.3504, 181.115, -61.3785, 0.55 ) }
    dend_19 { pt3dadd( 15.0878, 183.658, -62.4073, 0.28 ) }
    dend_19 { pt3dadd( 15.542, 185.412, -63.4544, 0.55 ) }
    dend_19 { pt3dadd( 15.8472, 186.933, -64.503, 0.55 ) }
    dend_19 { pt3dadd( 15.9402, 187.747, -65.1316, 0.55 ) }
    dend_19 { pt3dadd( 16.1167, 190.664, -67.4809, 0.28 ) }
    dend_19 { pt3dadd( 16.2029, 192.935, -69.1881, 1.11 ) }
    dend_19 { pt3dadd( 16.3151, 197.053, -71.8082, 0.83 ) }
    dend_19 { pt3dadd( 16.4711, 199.277, -73.0106, 0.55 ) }
    dend_19 { pt3dadd( 16.7858, 202.18, -74.3096, 0.83 ) }
    dend_19 { pt3dadd( 16.9958, 203.663, -74.8014, 0.83 ) }
    dend_19 { pt3dadd( 17.4594, 206.284, -75.2897, 0.28 ) }
    dend_19 { pt3dadd( 17.774, 207.883, -75.4078, 0.55 ) }
    dend_19 { pt3dadd( 18.642, 211.841, -75.4176, 0.55 ) }
    dend_19 { pt3dadd( 19.6049, 215.843, -75.3454, 0.28 ) }
    dend_19 { pt3dadd( 20.4685, 219.325, -75.2131, 0.55 ) }
    dend_19 { pt3dadd( 21.0119, 221.656, -75.1646, 1.11 ) }
    dend_19 { pt3dadd( 21.5002, 223.813, -75.1964, 0.55 ) }
    dend_19 { pt3dadd( 21.8308, 225.432, -75.2682, 0.28 ) }
    dend_19 { pt3dadd( 21.9403, 226.283, -75.3027, 0.55 ) }
    dend_19 { pt3dadd( 22.081, 227.686, -75.2987, 0.28 ) }
    dend_19 { pt3dadd( 22.1033, 228.395, -75.2431, 0.55 ) }
    dend_19 { pt3dadd( 22.1091, 230.004, -75.0108, 0.55 ) }
    dend_19 { pt3dadd( 22.1474, 231.717, -74.6719, 0.83 ) }
    dend_19 { pt3dadd( 22.2973, 235.471, -73.6928, 0.55 ) }
    dend_19 { pt3dadd( 22.4775, 238.544, -72.867, 0.83 ) }
    dend_19 { pt3dadd( 22.8255, 243.057, -71.7294, 0.55 ) }
    dend_19 { pt3dadd( 23.0158, 245.181, -71.295, 0.55 ) }
    dend_19 { pt3dadd( 23.4103, 249.083, -70.6651, 0.28 ) }
    dend_19 { pt3dadd( 23.6779, 251.299, -70.4869, 1.38 ) }
    dend_19 { pt3dadd( 24.087, 254.083, -70.5748, 0.55 ) }
    dend_19 { pt3dadd( 24.4809, 256.648, -70.9587, 0.83 ) }
    dend_19 { pt3dadd( 24.7764, 259.182, -71.7563, 0.28 ) }
    dend_19 { pt3dadd( 24.8157, 259.948, -72.0562, 0.55 ) }
    dend_19 { pt3dadd( 24.7686, 262.202, -73.1591, 0.28 ) }
    dend_19 { pt3dadd( 24.6596, 263.701, -73.9502, 0.55 ) }
    dend_19 { pt3dadd( 24.4869, 265.161, -74.6769, 0.55 ) }
    dend_19 { pt3dadd( 23.9344, 268.953, -76.4752, 0.28 ) }
    dend_19 { pt3dadd( 23.7522, 270.18, -77.04, 0.83 ) }
    dend_19 { pt3dadd( 23.3558, 272.899, -78.2939, 0.55 ) }
    dend_19 { pt3dadd( 22.928, 275.865, -79.6525, 0.28 ) }
    dend_19 { pt3dadd( 22.6618, 277.617, -80.4218, 0.55 ) }
    dend_19 { pt3dadd( 22.3683, 279.836, -81.1941, 0.28 ) }
    dend_19 { pt3dadd( 22.2948, 280.427, -81.3469, 0.55 ) }
    dend_19 { pt3dadd( 22.07, 282.024, -81.6617, 0.28 ) }
    dend_19 { pt3dadd( 21.8617, 283.363, -81.847, 0.55 ) }
    dend_19 { pt3dadd( 21.4337, 285.86, -82.108, 0.28 ) }
    dend_19 { pt3dadd( 20.6683, 289.86, -82.4844, 0.55 ) }
    dend_19 { pt3dadd( 20.0999, 292.562, -82.7978, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_19 { pt3dadd( 19.2465, 296.559, -83.4658, 0.55 ) }
    dend_19 { pt3dadd( 18.9627, 297.89, -83.7359, 0.83 ) }
    dend_19 { pt3dadd( 18.2257, 301.305, -84.6381, 0.55 ) }
    dend_19 { pt3dadd( 17.4478, 304.901, -85.795, 0.55 ) }
    dend_19 { pt3dadd( 17.048, 307.095, -86.7115, 0.83 ) }
    dend_19 { pt3dadd( 16.7513, 310.341, -88.2437, 0.28 ) }
    dend_19 { pt3dadd( 16.7686, 312.285, -89.2118, 0.83 ) }
    dend_19 { pt3dadd( 16.9945, 315.023, -90.4359, 0.28 ) }
    dend_19 { pt3dadd( 17.1365, 316.02, -90.8355, 0.55 ) }
    dend_19 { pt3dadd( 17.8843, 320.098, -92.3466, 0.28 ) }
    dend_19 { pt3dadd( 18.5936, 323.555, -93.4097, 0.28 ) }
    dend_19 { pt3dadd( 19.2951, 326.678, -94.2006, 0.28 ) }
    dend_19 { pt3dadd( 20.4682, 331.368, -95.2229, 0.28 ) }
    dend_19 { pt3dadd( 20.8094, 332.66, -95.4031, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 14/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.70059, 13.2095, -1.01898, 0.83 ) }
    dend_14 { pt3dadd( -4.90787, 15.8932, -1.13643, 0.83 ) }
    dend_14 { pt3dadd( -6.52193, 18.0696, -1.38167, 0.83 ) }
    dend_14 { pt3dadd( -7.58699, 19.6678, -1.59481, 0.55 ) }
    dend_14 { pt3dadd( -8.4818, 21.115, -1.83105, 0.83 ) }
    dend_14 { pt3dadd( -9.22102, 22.3046, -2.08859, 0.55 ) }
    dend_14 { pt3dadd( -10.2306, 23.9615, -2.47818, 0.83 ) }
    dend_14 { pt3dadd( -11.4368, 26.3334, -3.80014, 0.83 ) }
    dend_14 { pt3dadd( -12.1829, 27.9795, -5.02781, 0.83 ) }
    dend_14 { pt3dadd( -12.6853, 29.1594, -6.0128, 0.83 ) }
    dend_14 { pt3dadd( -13.6775, 31.4309, -7.92063, 0.55 ) }
    dend_14 { pt3dadd( -14.4637, 33.2557, -9.45738, 0.83 ) }
    dend_14 { pt3dadd( -17.9047, 41.2945, -15.9398, 0.83 ) }
    dend_14 { pt3dadd( -18.7355, 43.2025, -17.3519, 0.83 ) }
    dend_14 { pt3dadd( -20.1849, 46.5307, -19.5538, 0.83 ) }
    dend_14 { pt3dadd( -21.6569, 50.0685, -21.4407, 0.83 ) }
    dend_14 { pt3dadd( -22.8612, 53.0628, -22.629, 0.83 ) }
    dend_14 { pt3dadd( -24.5382, 57.3301, -23.7219, 0.83 ) }
    dend_14 { pt3dadd( -25.7786, 60.7267, -24.0673, 0.83 ) }
    dend_14 { pt3dadd( -26.7478, 63.8299, -24.3218, 0.83 ) }
    dend_14 { pt3dadd( -27.7544, 67.9808, -24.5364, 0.83 ) }
    dend_14 { pt3dadd( -28.4194, 71.6929, -24.5901, 0.83 ) }
    dend_14 { pt3dadd( -29.0198, 76.2411, -24.4362, 0.83 ) }
    dend_14 { pt3dadd( -29.268, 79.4018, -24.328, 0.83 ) }
    dend_14 { pt3dadd( -29.3623, 81.7638, -24.3061, 0.55 ) }
    dend_14 { pt3dadd( -29.4672, 84.6771, -24.3821, 1.11 ) }
    dend_14 { pt3dadd( -29.5305, 88.0667, -24.5653, 0.55 ) }
    dend_14 { pt3dadd( -29.5231, 91.3592, -24.7725, 0.55 ) }
    dend_14 { pt3dadd( -29.5842, 94.2504, -24.9852, 0.55 ) }
    dend_14 { pt3dadd( -29.8017, 96.8648, -25.1935, 0.55 ) }
    dend_14 { pt3dadd( -30.31, 100.207, -25.4589, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.23941, -15.2118, 2.43102, 0.83 ) }
    dend_6 { pt3dadd( 3.92863, -17.1821, 3.83201, 0.83 ) }
    dend_6 { pt3dadd( 5.17801, -20.7537, 6.37167, 1.66 ) }
    dend_6 { pt3dadd( 6.36633, -24.1508, 8.7872, 1.94 ) }
    dend_6 { pt3dadd( 7.70559, -27.9794, 11.5095, 1.94 ) }
    dend_6 { pt3dadd( 9.70452, -33.6938, 15.5728, 1.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 51/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.23941, -15.2118, 2.43102, 0.83 ) }
    dend_1 { pt3dadd( 1.73765, -19.4425, 2.05309, 0.83 ) }
    dend_1 { pt3dadd( 0.454982, -22.5723, 1.86629, 0.83 ) }
    dend_1 { pt3dadd( -0.279451, -24.3757, 1.72013, 0.55 ) }
    dend_1 { pt3dadd( -1.46892, -26.9271, 1.39139, 1.11 ) }
    dend_1 { pt3dadd( -2.72604, -29.5469, 0.950663, 0.83 ) }
    dend_1 { pt3dadd( -3.49866, -31.2882, 0.634336, 0.55 ) }
    dend_1 { pt3dadd( -4.85812, -34.4219, -0.177522, 0.83 ) }
    dend_1 { pt3dadd( -6.35574, -37.8695, -1.34156, 0.55 ) }
    dend_1 { pt3dadd( -7.45934, -40.6201, -2.63526, 0.55 ) }
    dend_1 { pt3dadd( -8.25085, -42.7563, -3.89952, 0.83 ) }
    dend_1 { pt3dadd( -9.37788, -46.0078, -6.12682, 0.83 ) }
    dend_1 { pt3dadd( -10.5327, -49.4143, -8.71835, 0.55 ) }
    dend_1 { pt3dadd( -11.1944, -51.781, -10.7093, 0.55 ) }
    dend_1 { pt3dadd( -12.0448, -54.9431, -13.6056, 1.11 ) }
    dend_1 { pt3dadd( -12.4272, -56.4485, -15.2076, 0.55 ) }
    dend_1 { pt3dadd( -12.6278, -57.1157, -16.057, 0.55 ) }
    dend_1 { pt3dadd( -13.0877, -58.4097, -17.9025, 0.55 ) }
    dend_1 { pt3dadd( -13.6476, -59.872, -20.0855, 0.83 ) }
    dend_1 { pt3dadd( -14.489, -61.766, -23.0357, 0.83 ) }
    dend_1 { pt3dadd( -16.2761, -64.9311, -27.8732, 0.55 ) }
    dend_1 { pt3dadd( -17.2257, -66.3036, -29.9725, 0.28 ) }
    dend_1 { pt3dadd( -18.0843, -67.478, -31.6849, 0.83 ) }
    dend_1 { pt3dadd( -19.24, -69.0053, -33.7884, 0.55 ) }
    dend_1 { pt3dadd( -19.9213, -69.916, -34.9051, 0.55 ) }
    dend_1 { pt3dadd( -21.3696, -72.1201, -37.0987, 1.38 ) }
    dend_1 { pt3dadd( -23.8278, -76.5101, -40.4661, 0.55 ) }
    dend_1 { pt3dadd( -24.3098, -77.6438, -41.2065, 0.83 ) }
    dend_1 { pt3dadd( -24.8438, -80.191, -42.5413, 0.28 ) }
    dend_1 { pt3dadd( -24.882, -81.471, -43.0256, 1.11 ) }
    dend_1 { pt3dadd( -24.7341, -83.3564, -43.5836, 1.11 ) }
    dend_1 { pt3dadd( -24.5239, -84.6989, -43.8749, 1.11 ) }
    dend_1 { pt3dadd( -24.1276, -86.975, -44.1809, 0.55 ) }
    dend_1 { pt3dadd( -23.2533, -92.3053, -44.8499, 0.28 ) }
    dend_1 { pt3dadd( -22.5925, -96.5591, -45.3105, 0.55 ) }
    dend_1 { pt3dadd( -22.2415, -98.9436, -45.5945, 0.55 ) }
    dend_1 { pt3dadd( -21.7663, -102.165, -45.9722, 1.94 ) }
    dend_1 { pt3dadd( -21.4752, -104.474, -46.2241, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 89/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 12.5951, -40.5921, 0.0201467, 0.756209 ) }
    axon_1 { pt3dadd( 17.0657, -54.9104, 0.0201467, 0.756209 ) }
    axon_1 { pt3dadd( 21.5363, -69.2287, 0.0201467, 0.756209 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 92/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -34.261, 22.5337, -11.7764, 0.83 ) }
    dend_23 { pt3dadd( -34.6668, 22.5389, -11.8236, 0.83 ) }
    dend_23 { pt3dadd( -37.539, 22.6288, -12.0402, 0.83 ) }
    dend_23 { pt3dadd( -40.884, 22.9063, -12.3712, 0.83 ) }
    dend_23 { pt3dadd( -43.3495, 23.214, -12.7226, 0.83 ) }
    dend_23 { pt3dadd( -46.4211, 23.6605, -13.2375, 0.83 ) }
    dend_23 { pt3dadd( -48.2549, 23.9648, -13.5617, 0.83 ) }
    dend_23 { pt3dadd( -50.773, 24.5057, -14.0286, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_23 { pt3dadd( -54.5781, 25.6058, -14.7925, 1.38 ) }
    dend_23 { pt3dadd( -56.9145, 26.4053, -15.2876, 0.55 ) }
    dend_23 { pt3dadd( -58.2447, 26.8739, -15.594, 0.55 ) }
    dend_23 { pt3dadd( -60.4949, 27.6655, -16.2713, 0.55 ) }
    dend_23 { pt3dadd( -63.2909, 28.6396, -17.1916, 0.55 ) }
    dend_23 { pt3dadd( -64.8756, 29.2176, -17.7373, 0.83 ) }
    dend_23 { pt3dadd( -67.3596, 30.061, -18.4923, 0.83 ) }
    dend_23 { pt3dadd( -69.81, 30.8621, -19.2414, 0.55 ) }
    dend_23 { pt3dadd( -74.1319, 32.2504, -20.6044, 0.55 ) }
    dend_23 { pt3dadd( -78.2354, 33.509, -22.1688, 0.55 ) }
    dend_23 { pt3dadd( -80.0317, 34.0494, -22.9202, 0.55 ) }
    dend_23 { pt3dadd( -82.5192, 34.7218, -24.0101, 0.83 ) }
    dend_23 { pt3dadd( -85.1722, 35.4373, -25.2363, 0.55 ) }
    dend_23 { pt3dadd( -87.9273, 36.1904, -26.5104, 1.66 ) }
    dend_23 { pt3dadd( -92.1934, 37.2831, -28.3658, 0.28 ) }
    dend_23 { pt3dadd( -93.1027, 37.5372, -28.7578, 0.55 ) }
    dend_23 { pt3dadd( -95.7723, 38.4053, -29.7285, 0.28 ) }
    dend_23 { pt3dadd( -97.0334, 38.8835, -30.0936, 0.55 ) }
    dend_23 { pt3dadd( -99.6735, 40.0052, -30.6352, 0.55 ) }
    dend_23 { pt3dadd( -102.034, 41.1363, -30.9406, 0.55 ) }
    dend_23 { pt3dadd( -104.9, 42.6601, -31.1482, 0.83 ) }
    dend_23 { pt3dadd( -107.953, 44.4033, -31.3996, 0.55 ) }
    dend_23 { pt3dadd( -109.461, 45.3497, -31.5443, 0.55 ) }
    dend_23 { pt3dadd( -112.189, 47.1697, -31.8436, 0.55 ) }
    dend_23 { pt3dadd( -114.513, 48.9694, -32.2238, 0.83 ) }
    dend_23 { pt3dadd( -116.015, 50.2709, -32.5303, 0.55 ) }
    dend_23 { pt3dadd( -117.263, 51.4998, -32.8297, 0.55 ) }
    dend_23 { pt3dadd( -118.456, 52.8026, -33.0906, 0.28 ) }
    dend_23 { pt3dadd( -120.795, 55.4872, -33.4935, 0.55 ) }
    dend_23 { pt3dadd( -123.42, 58.5543, -33.721, 0.28 ) }
    dend_23 { pt3dadd( -125.017, 60.4218, -33.8096, 0.55 ) }
    dend_23 { pt3dadd( -126.869, 62.4521, -33.885, 0.28 ) }
    dend_23 { pt3dadd( -128.96, 64.4817, -33.9596, 0.55 ) }
    dend_23 { pt3dadd( -130.886, 66.106, -33.9875, 0.83 ) }
    dend_23 { pt3dadd( -135.779, 69.5685, -34.0425, 0.55 ) }
    dend_23 { pt3dadd( -137.014, 70.2957, -34.0813, 1.11 ) }
    dend_23 { pt3dadd( -139.838, 71.7819, -34.3095, 0.55 ) }
    dend_23 { pt3dadd( -142.595, 73.0435, -34.6018, 0.83 ) }
    dend_23 { pt3dadd( -145.379, 74.2831, -34.9912, 0.28 ) }
    dend_23 { pt3dadd( -146.369, 74.7139, -35.227, 0.83 ) }
    dend_23 { pt3dadd( -148.878, 75.8036, -36.0965, 0.28 ) }
    dend_23 { pt3dadd( -150.052, 76.4011, -36.5674, 0.55 ) }
    dend_23 { pt3dadd( -151.71, 77.4933, -37.4433, 0.55 ) }
    dend_23 { pt3dadd( -153.719, 79.0475, -38.893, 0.55 ) }
    dend_23 { pt3dadd( -155.98, 80.8995, -40.8049, 0.55 ) }
    dend_23 { pt3dadd( -157.697, 82.3939, -42.3585, 0.55 ) }
    dend_23 { pt3dadd( -158.869, 83.4431, -43.4417, 0.55 ) }
    dend_23 { pt3dadd( -161.306, 85.8306, -45.9977, 0.55 ) }
    dend_23 { pt3dadd( -163.111, 87.8171, -48.1809, 0.28 ) }
    dend_23 { pt3dadd( -163.67, 88.4843, -49.0054, 0.55 ) }
    dend_23 { pt3dadd( -164.322, 89.3404, -50.0636, 0.28 ) }
    dend_23 { pt3dadd( -165.201, 90.7672, -51.9561, 1.11 ) }
    dend_23 { pt3dadd( -166.021, 92.4091, -54.1287, 0.55 ) }
    dend_23 { pt3dadd( -166.219, 92.9941, -55.1983, 0.83 ) }
    dend_23 { pt3dadd( -166.656, 94.903, -59.1932, 0.28 ) }
    dend_23 { pt3dadd( -166.77, 95.5851, -60.7848, 0.55 ) }
    dend_23 { pt3dadd( -166.887, 96.4235, -62.9093, 0.28 ) }
    dend_23 { pt3dadd( -166.938, 96.8191, -63.9407, 0.83 ) }
    dend_23 { pt3dadd( -167.6, 101.063, -74.9454, 0.55 ) }
    dend_23 { pt3dadd( -167.656, 101.484, -76.0714, 0.83 ) }
    dend_23 { pt3dadd( -167.772, 102.977, -80.0782, 0.28 ) }
    dend_23 { pt3dadd( -167.793, 103.439, -81.372, 0.55 ) }
    dend_23 { pt3dadd( -167.844, 103.893, -82.709, 0.28 ) }
    dend_23 { pt3dadd( -167.942, 104.689, -84.9991, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 64/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -34.261, 22.5337, -11.7764, 1.11 ) }
    dend_22 { pt3dadd( -34.3343, 25.855, -16.7715, 1.11 ) }
    dend_22 { pt3dadd( -34.3177, 28.8068, -20.8455, 0.28 ) }
    dend_22 { pt3dadd( -34.3673, 29.3637, -21.6475, 0.83 ) }
    dend_22 { pt3dadd( -34.6911, 31.9883, -25.2032, 0.28 ) }
    dend_22 { pt3dadd( -34.7773, 32.6736, -26.1085, 0.55 ) }
    dend_22 { pt3dadd( -35.0883, 35.3025, -29.3924, 0.55 ) }
    dend_22 { pt3dadd( -35.3323, 37.3725, -32.0091, 2.22 ) }
    dend_22 { pt3dadd( -36.4581, 46.415, -43.0169, 0.28 ) }
    dend_22 { pt3dadd( -36.6601, 47.8932, -44.7431, 1.94 ) }
    dend_22 { pt3dadd( -37.7238, 55.8342, -53.5197, 0.28 ) }
    dend_22 { pt3dadd( -37.973, 57.6369, -55.4784, 0.55 ) }
    dend_22 { pt3dadd( -38.3373, 60.208, -58.2178, 0.28 ) }
    dend_22 { pt3dadd( -38.5064, 61.3975, -59.3997, 1.66 ) }
    dend_22 { pt3dadd( -38.9453, 64.48, -62.12, 0.28 ) }
    dend_22 { pt3dadd( -39.534, 67.652, -64.8323, 0.28 ) }
    dend_22 { pt3dadd( -40.0893, 69.7868, -66.494, 2.49 ) }
    dend_22 { pt3dadd( -41.8589, 75.2954, -70.893, 0.28 ) }
    dend_22 { pt3dadd( -43.2939, 79.1653, -73.7762, 0.28 ) }
    dend_22 { pt3dadd( -43.8743, 80.6565, -74.7564, 1.66 ) }
    dend_22 { pt3dadd( -45.2656, 84.1387, -76.6986, 0.28 ) }
    dend_22 { pt3dadd( -46.0115, 85.9452, -77.5305, 0.83 ) }
    dend_22 { pt3dadd( -47.9217, 90.6617, -79.4524, 0.28 ) }
    dend_22 { pt3dadd( -48.821, 92.9318, -80.2675, 1.11 ) }
    dend_22 { pt3dadd( -50.1942, 96.8518, -81.8739, 0.28 ) }
    dend_22 { pt3dadd( -51.0522, 99.7947, -83.084, 0.28 ) }
    dend_22 { pt3dadd( -51.5316, 101.968, -83.9412, 0.83 ) }
    dend_22 { pt3dadd( -52.0722, 105.217, -85.4172, 0.28 ) }
    dend_22 { pt3dadd( -52.1523, 105.751, -85.6679, 0.83 ) }
    dend_22 { pt3dadd( -52.4327, 107.439, -86.6011, 0.28 ) }
    dend_22 { pt3dadd( -52.6835, 108.826, -87.4272, 0.83 ) }
    dend_22 { pt3dadd( -52.882, 109.994, -88.0805, 0.83 ) }
    dend_22 { pt3dadd( -53.5753, 115.738, -91.0555, 0.28 ) }
    dend_22 { pt3dadd( -53.6899, 118.177, -92.3807, 1.11 ) }
    dend_22 { pt3dadd( -53.6276, 120.492, -93.696, 0.28 ) }
    dend_22 { pt3dadd( -53.4865, 121.843, -94.4356, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_22 { pt3dadd( -53.0672, 124.227, -95.8649, 0.28 ) }
    dend_22 { pt3dadd( -52.4555, 126.653, -97.4138, 0.83 ) }
    dend_22 { pt3dadd( -51.003, 131.153, -100.656, 0.28 ) }
    dend_22 { pt3dadd( -50.3435, 133.007, -102.216, 0.28 ) }
    dend_22 { pt3dadd( -49.7199, 134.695, -103.894, 0.55 ) }
    dend_22 { pt3dadd( -48.497, 138.048, -107.563, 0.28 ) }
    dend_22 { pt3dadd( -48.1549, 138.983, -108.62, 0.83 ) }
    dend_22 { pt3dadd( -47.2497, 141.751, -111.742, 0.28 ) }
    dend_22 { pt3dadd( -46.8959, 142.863, -112.993, 0.83 ) }
    dend_22 { pt3dadd( -46.0011, 145.548, -116.261, 0.28 ) }
    dend_22 { pt3dadd( -45.581, 146.632, -117.61, 0.83 ) }
    dend_22 { pt3dadd( -45.0022, 147.761, -118.957, 0.28 ) }
    dend_22 { pt3dadd( -44.7625, 148.136, -119.408, 0.28 ) }
    dend_22 { pt3dadd( -43.8734, 149.321, -120.769, 0.83 ) }
    dend_22 { pt3dadd( -41.1102, 152.763, -124.777, 0.28 ) }
    dend_22 { pt3dadd( -40.5781, 153.373, -125.505, 0.55 ) }
    dend_22 { pt3dadd( -39.6014, 154.392, -127.009, 0.28 ) }
    dend_22 { pt3dadd( -39.0933, 154.86, -127.869, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 18/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -30.31, 100.207, -25.4589, 0.55 ) }
    dend_16 { pt3dadd( -29.1213, 103.575, -26.0724, 0.55 ) }
    dend_16 { pt3dadd( -28.8041, 104.496, -26.2555, 0.28 ) }
    dend_16 { pt3dadd( -28.3472, 105.976, -26.582, 0.55 ) }
    dend_16 { pt3dadd( -27.2671, 109.879, -27.6566, 0.28 ) }
    dend_16 { pt3dadd( -26.4895, 112.709, -28.5317, 0.55 ) }
    dend_16 { pt3dadd( -25.875, 115.377, -29.4136, 0.55 ) }
    dend_16 { pt3dadd( -25.4389, 118.032, -30.3751, 0.55 ) }
    dend_16 { pt3dadd( -24.9831, 121.244, -31.6483, 0.55 ) }
    dend_16 { pt3dadd( -24.5296, 124.554, -32.981, 0.55 ) }
    dend_16 { pt3dadd( -24.2608, 126.673, -33.7789, 0.55 ) }
    dend_16 { pt3dadd( -23.8839, 130.099, -35.0323, 0.55 ) }
    dend_16 { pt3dadd( -23.5076, 134.016, -36.2942, 0.55 ) }
    dend_16 { pt3dadd( -23.1618, 137.198, -37.078, 0.55 ) }
    dend_16 { pt3dadd( -22.6323, 141.597, -37.7338, 0.28 ) }
    dend_16 { pt3dadd( -22.4497, 143.096, -37.8206, 0.55 ) }
    dend_16 { pt3dadd( -22.2425, 144.666, -37.84, 0.55 ) }
    dend_16 { pt3dadd( -21.9157, 146.813, -37.7972, 0.55 ) }
    dend_16 { pt3dadd( -21.7252, 148.391, -37.7121, 0.55 ) }
    dend_16 { pt3dadd( -21.5371, 150.865, -37.6988, 0.83 ) }
    dend_16 { pt3dadd( -21.3661, 153.235, -37.8106, 0.55 ) }
    dend_16 { pt3dadd( -21.0642, 155.875, -37.9445, 0.28 ) }
    dend_16 { pt3dadd( -20.5878, 159.123, -38.1609, 0.55 ) }
    dend_16 { pt3dadd( -20.16, 161.651, -38.3618, 0.28 ) }
    dend_16 { pt3dadd( -19.8747, 163.262, -38.5052, 1.38 ) }
    dend_16 { pt3dadd( -19.2739, 166.215, -38.7802, 1.38 ) }
    dend_16 { pt3dadd( -17.9574, 172.415, -39.2298, 0.28 ) }
    dend_16 { pt3dadd( -17.5568, 174.307, -39.3731, 0.83 ) }
    dend_16 { pt3dadd( -17.2579, 175.66, -39.4725, 0.83 ) }
    dend_16 { pt3dadd( -16.3846, 179.691, -39.7843, 0.28 ) }
    dend_16 { pt3dadd( -15.9839, 181.671, -39.918, 0.55 ) }
    dend_16 { pt3dadd( -15.6344, 183.6, -40.0903, 0.55 ) }
    dend_16 { pt3dadd( -15.1643, 186.599, -40.4725, 0.55 ) }
    dend_16 { pt3dadd( -14.6654, 189.851, -40.7679, 0.28 ) }
    dend_16 { pt3dadd( -14.4571, 191.029, -40.8738, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 53/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -30.31, 100.207, -25.4589, 0.83 ) }
    dend_15 { pt3dadd( -30.6404, 102.072, -25.8485, 0.83 ) }
    dend_15 { pt3dadd( -31.2551, 105.542, -26.5734, 0.28 ) }
    dend_15 { pt3dadd( -31.7926, 108.576, -27.2073, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 57/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 9.70452, -33.6938, 15.5728, 1.66 ) }
    dend_10 { pt3dadd( 8.72452, -35.7022, 17.1228, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 59/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 9.70452, -33.6938, 15.5728, 0.55 ) }
    dend_7 { pt3dadd( 12.5782, -34.9734, 15.6236, 0.55 ) }
    dend_7 { pt3dadd( 16.8845, -36.8398, 15.6843, 0.55 ) }
    dend_7 { pt3dadd( 20.2041, -38.2104, 15.7596, 0.55 ) }
    dend_7 { pt3dadd( 22.7727, -39.2485, 15.8197, 0.55 ) }
    dend_7 { pt3dadd( 27.8749, -41.236, 16.0922, 0.55 ) }
    dend_7 { pt3dadd( 30.2009, -42.1352, 16.2808, 0.55 ) }
    dend_7 { pt3dadd( 34.4839, -43.7082, 16.7629, 0.55 ) }
    dend_7 { pt3dadd( 36.3924, -44.3427, 17.0651, 0.55 ) }
    dend_7 { pt3dadd( 39.7698, -45.4337, 17.7002, 0.55 ) }
    dend_7 { pt3dadd( 43.6601, -46.5818, 18.5225, 0.55 ) }
    dend_7 { pt3dadd( 47.3421, -47.5042, 19.3556, 0.55 ) }
    dend_7 { pt3dadd( 52.1535, -48.6449, 20.4597, 0.55 ) }
    dend_7 { pt3dadd( 56.8626, -49.5844, 21.5634, 0.55 ) }
    dend_7 { pt3dadd( 59.4896, -50.0107, 22.15, 0.55 ) }
    dend_7 { pt3dadd( 64.198, -50.6009, 23.1346, 0.55 ) }
    dend_7 { pt3dadd( 66.918, -50.8453, 23.6423, 0.55 ) }
    dend_7 { pt3dadd( 69.8721, -51.0237, 24.1582, 0.55 ) }
    dend_7 { pt3dadd( 72.8477, -51.1286, 24.6398, 0.55 ) }
    dend_7 { pt3dadd( 76.1607, -51.1954, 25.1625, 0.55 ) }
    dend_7 { pt3dadd( 79.217, -51.2614, 25.6651, 0.55 ) }
    dend_7 { pt3dadd( 81.0962, -51.2904, 25.9669, 0.55 ) }
    dend_7 { pt3dadd( 85.0184, -51.309, 26.5773, 0.55 ) }
    dend_7 { pt3dadd( 88.3165, -51.2711, 27.0553, 0.55 ) }
    dend_7 { pt3dadd( 91.6157, -51.1684, 27.4672, 0.55 ) }
    dend_7 { pt3dadd( 92.9942, -51.1156, 27.6199, 0.55 ) }
    dend_7 { pt3dadd( 95.4434, -50.9507, 27.9251, 0.55 ) }
    dend_7 { pt3dadd( 97.6347, -50.8156, 28.2283, 0.55 ) }
    dend_7 { pt3dadd( 99.0316, -50.7434, 28.4531, 0.55 ) }
    dend_7 { pt3dadd( 102.403, -50.6724, 29.0193, 0.55 ) }
    dend_7 { pt3dadd( 105.744, -50.7054, 29.5715, 0.55 ) }
    dend_7 { pt3dadd( 109.956, -50.9458, 30.3093, 0.55 ) }
    dend_7 { pt3dadd( 113.475, -51.3762, 30.8929, 0.55 ) }
    dend_7 { pt3dadd( 115.169, -51.6816, 31.2175, 0.55 ) }
    dend_7 { pt3dadd( 118.32, -52.4677, 31.9416, 0.55 ) }
    dend_7 { pt3dadd( 120.584, -53.2456, 32.5767, 0.55 ) }
    dend_7 { pt3dadd( 122.812, -54.2207, 33.4757, 0.28 ) }
    dend_7 { pt3dadd( 124.242, -55.0994, 34.2359, 1.38 ) }
    dend_7 { pt3dadd( 127.304, -57.2373, 36.1698, 0.55 ) }
    dend_7 { pt3dadd( 129.11, -58.6432, 37.5276, 0.55 ) }
    dend_7 { pt3dadd( 130.542, -59.9781, 38.8976, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_7 { pt3dadd( 133.24, -62.7879, 42.0737, 0.55 ) }
    dend_7 { pt3dadd( 134.392, -64.0986, 43.7196, 0.55 ) }
    dend_7 { pt3dadd( 143.833, -65.2941, 46.7787, 0.55 ) }
    dend_7 { pt3dadd( 153.473, -65.4874, 49.4329, 0.55 ) }
    dend_7 { pt3dadd( 163.138, -66.9398, 51.5199, 0.55 ) }
    dend_7 { pt3dadd( 172.097, -69.5314, 55.0789, 0.55 ) }
    dend_7 { pt3dadd( 180.3, -72.3968, 59.9855, 0.55 ) }
    dend_7 { pt3dadd( 189.287, -74.2407, 63.9437, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 8/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -21.4752, -104.474, -46.2241, 0.28 ) }
    dend_5 { pt3dadd( -21.8816, -107.365, -46.8567, 0.28 ) }
    dend_5 { pt3dadd( -22.0611, -108.68, -47.1466, 0.83 ) }
    dend_5 { pt3dadd( -22.4805, -112.936, -48.2129, 0.28 ) }
    dend_5 { pt3dadd( -22.5679, -114.041, -48.4597, 0.83 ) }
    dend_5 { pt3dadd( -22.7368, -116.176, -48.9367, 0.28 ) }
    dend_5 { pt3dadd( -22.9172, -118.457, -49.4462, 0.55 ) }
    dend_5 { pt3dadd( -23.0731, -120.042, -49.8396, 0.55 ) }
    dend_5 { pt3dadd( -23.3705, -123.541, -50.7597, 0.28 ) }
    dend_5 { pt3dadd( -23.3983, -125.143, -51.1931, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 18/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -21.4752, -104.474, -46.2241, 0.28 ) }
    dend_2 { pt3dadd( -23.6636, -112.253, -45.8894, 0.28 ) }
    dend_2 { pt3dadd( -24.1517, -113.988, -45.8148, 0.55 ) }
    dend_2 { pt3dadd( -24.812, -116.336, -45.7138, 0.55 ) }
    dend_2 { pt3dadd( -25.3934, -118.402, -45.6248, 0.28 ) }
    dend_2 { pt3dadd( -25.923, -120.285, -45.5438, 0.55 ) }
    dend_2 { pt3dadd( -26.5499, -122.513, -45.448, 1.38 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 25/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -14.4571, 191.029, -40.8738, 0.28 ) }
    dend_18 { pt3dadd( -14.8128, 192.621, -41.3505, 0.28 ) }
    dend_18 { pt3dadd( -15.1226, 193.887, -41.785, 0.83 ) }
    dend_18 { pt3dadd( -15.633, 195.625, -42.5205, 0.28 ) }
    dend_18 { pt3dadd( -16.122, 197.166, -43.1854, 0.28 ) }
    dend_18 { pt3dadd( -16.3423, 197.848, -43.4648, 0.55 ) }
    dend_18 { pt3dadd( -17.02, 199.776, -44.1911, 0.28 ) }
    dend_18 { pt3dadd( -17.4994, 200.975, -44.6686, 0.83 ) }
    dend_18 { pt3dadd( -18.5276, 202.867, -45.6527, 0.28 ) }
    dend_18 { pt3dadd( -19.337, 204.095, -46.4516, 0.28 ) }
    dend_18 { pt3dadd( -19.7847, 204.742, -46.9004, 0.55 ) }
    dend_18 { pt3dadd( -20.8029, 206.103, -47.8957, 0.28 ) }
    dend_18 { pt3dadd( -21.8124, 207.31, -48.8675, 0.83 ) }
    dend_18 { pt3dadd( -23.5743, 209.244, -50.6332, 0.83 ) }
    dend_18 { pt3dadd( -24.9249, 210.604, -51.8246, 0.83 ) }
    dend_18 { pt3dadd( -26.2985, 211.901, -52.9936, 0.28 ) }
    dend_18 { pt3dadd( -28.0656, 213.537, -54.3919, 0.55 ) }
    dend_18 { pt3dadd( -30.0677, 215.401, -55.8467, 0.28 ) }
    dend_18 { pt3dadd( -31.2833, 216.53, -56.6593, 1.11 ) }
    dend_18 { pt3dadd( -34.5133, 219.558, -58.6751, 0.28 ) }
    dend_18 { pt3dadd( -35.6451, 220.519, -59.3127, 0.83 ) }
    dend_18 { pt3dadd( -37.3445, 221.863, -60.249, 0.28 ) }
    dend_18 { pt3dadd( -38.0739, 222.436, -60.6195, 0.55 ) }
    dend_18 { pt3dadd( -39.8509, 223.81, -61.4331, 0.28 ) }
    dend_18 { pt3dadd( -40.1397, 224.031, -61.5713, 0.55 ) }
    dend_18 { pt3dadd( -41.4343, 224.979, -62.3703, 0.28 ) }
    dend_18 { pt3dadd( -43.143, 226.204, -63.3793, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 52/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -14.4571, 191.029, -40.8738, 0.28 ) }
    dend_17 { pt3dadd( -13.4038, 192.901, -40.2575, 0.28 ) }
    dend_17 { pt3dadd( -12.7729, 194.166, -39.8677, 0.55 ) }
    dend_17 { pt3dadd( -12.0833, 195.808, -39.3052, 0.28 ) }
    dend_17 { pt3dadd( -11.6151, 196.959, -39.1679, 0.55 ) }
    dend_17 { pt3dadd( -10.9538, 198.497, -39.2607, 0.28 ) }
    dend_17 { pt3dadd( -10.849, 198.741, -39.2754, 0.55 ) }
    dend_17 { pt3dadd( -10.1629, 200.499, -39.607, 0.28 ) }
    dend_17 { pt3dadd( -9.50179, 202.342, -40.1361, 0.83 ) }
    dend_17 { pt3dadd( -7.92991, 206.391, -41.9869, 0.28 ) }
    dend_17 { pt3dadd( -7.30174, 207.926, -42.9046, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 63/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 8.72452, -35.7022, 17.1228, 1.66 ) }
    dend_12 { pt3dadd( 8.6854, -36.3407, 17.214, 1.66 ) }
    dend_12 { pt3dadd( 8.54855, -38.2685, 17.5077, 1.11 ) }
    dend_12 { pt3dadd( 8.3802, -43.26, 18.4324, 1.11 ) }
    dend_12 { pt3dadd( 8.2942, -48.3857, 19.5706, 1.11 ) }
    dend_12 { pt3dadd( 8.18282, -51.6148, 20.4268, 1.11 ) }
    dend_12 { pt3dadd( 8.0724, -55.3506, 21.5437, 1.11 ) }
    dend_12 { pt3dadd( 8.07873, -57.4774, 22.2605, 1.11 ) }
    dend_12 { pt3dadd( 8.24467, -61.6395, 23.8348, 1.11 ) }
    dend_12 { pt3dadd( 8.47005, -65.797, 25.6078, 1.11 ) }
    dend_12 { pt3dadd( 8.70521, -72.9798, 28.8437, 1.11 ) }
    dend_12 { pt3dadd( 8.78325, -76.7196, 30.4911, 1.11 ) }
    dend_12 { pt3dadd( 8.80323, -80.3669, 32.0654, 1.11 ) }
    dend_12 { pt3dadd( 8.61571, -84.216, 33.5855, 1.11 ) }
    dend_12 { pt3dadd( 8.02655, -88.6114, 35.1307, 0.83 ) }
    dend_12 { pt3dadd( 7.33946, -91.7862, 36.108, 0.55 ) }
    dend_12 { pt3dadd( 6.60195, -94.3176, 36.7213, 0.55 ) }
    dend_12 { pt3dadd( 5.81262, -96.6821, 37.1284, 0.55 ) }
    dend_12 { pt3dadd( 4.46947, -100.116, 37.6126, 0.55 ) }
    dend_12 { pt3dadd( 2.48616, -104.873, 38.1277, 0.55 ) }
    dend_12 { pt3dadd( 0.99914, -108.649, 38.4332, 0.55 ) }
    dend_12 { pt3dadd( -0.15432, -111.757, 38.698, 0.55 ) }
    dend_12 { pt3dadd( -1.46729, -115.516, 39.1189, 0.28 ) }
    dend_12 { pt3dadd( -3.65817, -124.47, 42.414, 0.28 ) }
    dend_12 { pt3dadd( -6.80678, -132.68, 46.7937, 0.28 ) }
    dend_12 { pt3dadd( -10.0059, -140.447, 51.9231, 0.28 ) }
    dend_12 { pt3dadd( -12.8637, -147.467, 58.247, 0.28 ) }
    dend_12 { pt3dadd( -14.156, -154.05, 65.5094, 0.28 ) }
    dend_12 { pt3dadd( -14.1873, -159.55, 73.7664, 0.28 ) }
    dend_12 { pt3dadd( -14.27, -164.953, 82.0902, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 93/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.72452, -35.7022, 17.1228, 0.55 ) }
    dend_11 { pt3dadd( 10.3072, -36.2319, 18.9938, 0.55 ) }
    dend_11 { pt3dadd( 11.083, -36.504, 19.7761, 0.55 ) }
    dend_11 { pt3dadd( 13.3271, -37.2108, 22.0179, 0.55 ) }
    dend_11 { pt3dadd( 19.0618, -38.8081, 27.4265, 0.55 ) }
    dend_11 { pt3dadd( 20.3565, -39.0853, 28.5855, 0.55 ) }
    dend_11 { pt3dadd( 23.626, -39.5325, 31.4469, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_11 { pt3dadd( 25.9713, -39.8184, 33.6051, 0.28 ) }
    dend_11 { pt3dadd( 29.5046, -40.1288, 36.8839, 0.28 ) }
    dend_11 { pt3dadd( 30.9207, -40.2123, 38.198, 0.28 ) }
    dend_11 { pt3dadd( 32.9016, -40.1188, 39.5309, 0.28 ) }
    dend_11 { pt3dadd( 36.0438, -39.6825, 41.7127, 0.28 ) }
    dend_11 { pt3dadd( 43.398, -40.9697, 48.359, 0.28 ) }
    dend_11 { pt3dadd( 49.5482, -42.8465, 56.0055, 0.28 ) }
    dend_11 { pt3dadd( 55.5814, -44.7098, 63.7482, 0.28 ) }
    dend_11 { pt3dadd( 61.0237, -44.7938, 72.137, 0.28 ) }
    dend_11 { pt3dadd( 66.7717, -46.2067, 80.1907, 0.28 ) }
    dend_11 { pt3dadd( 71.1612, -48.7637, 88.7845, 0.28 ) }
    dend_11 { pt3dadd( 75.5901, -53.1743, 96.5255, 0.28 ) }
    dend_11 { pt3dadd( 78.7027, -57.2866, 105.041, 0.28 ) }
    dend_11 { pt3dadd( 81.0853, -61.0084, 113.972, 0.28 ) }
    dend_11 { pt3dadd( 84.6623, -64.8422, 122.442, 0.28 ) }
    dend_11 { pt3dadd( 88.5535, -68.385, 130.907, 0.28 ) }
    dend_11 { pt3dadd( 91.5971, -70.5689, 140.165, 0.28 ) }
    dend_11 { pt3dadd( 96.8756, -72.8319, 148.336, 0.28 ) }
    dend_11 { pt3dadd( 103.033, -73.5445, 156.181, 0.28 ) }
    dend_11 { pt3dadd( 108.588, -74.6722, 164.415, 0.28 ) }
    dend_11 { pt3dadd( 114.628, -74.167, 172.369, 0.28 ) }
    dend_11 { pt3dadd( 120.299, -74.1543, 180.605, 0.28 ) }
    dend_11 { pt3dadd( 125.932, -73.496, 188.84, 0.28 ) }
    dend_11 { pt3dadd( 130.579, -71.4941, 197.453, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 189.287, -74.2407, 63.9437, 0.28 ) }
    dend_9 { pt3dadd( 198.926, -76.8229, 64.2259, 0.28 ) }
    dend_9 { pt3dadd( 208.156, -80.5605, 64.5398, 0.28 ) }
    dend_9 { pt3dadd( 217.556, -83.6436, 65.8236, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 28/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 189.287, -74.2407, 63.9437, 0.28 ) }
    dend_8 { pt3dadd( 197.812, -75.6897, 68.9542, 0.28 ) }
    dend_8 { pt3dadd( 206.784, -78.1943, 72.5488, 0.28 ) }
    dend_8 { pt3dadd( 216.103, -80.0785, 75.6179, 0.28 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 32/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -26.5499, -122.513, -45.448, 0.28 ) }
    dend_4 { pt3dadd( -28.8492, -125.71, -45.4297, 0.28 ) }
    dend_4 { pt3dadd( -29.5597, -126.693, -45.4268, 0.55 ) }
    dend_4 { pt3dadd( -31.3626, -129.3, -45.5761, 0.28 ) }
    dend_4 { pt3dadd( -32.4636, -130.877, -45.7056, 0.83 ) }
    dend_4 { pt3dadd( -34.3877, -133.538, -45.9564, 0.28 ) }
    dend_4 { pt3dadd( -35.8628, -135.562, -46.1537, 0.28 ) }
    dend_4 { pt3dadd( -37.3813, -137.608, -46.5296, 0.83 ) }
    dend_4 { pt3dadd( -39.8225, -140.884, -47.3138, 0.28 ) }
    dend_4 { pt3dadd( -40.6414, -142.028, -47.702, 0.55 ) }
    dend_4 { pt3dadd( -43.3162, -145.974, -49.2941, 0.28 ) }
    dend_4 { pt3dadd( -44.3016, -147.508, -50.0226, 0.83 ) }
    dend_4 { pt3dadd( -47.2017, -152.124, -52.4749, 0.28 ) }
    dend_4 { pt3dadd( -47.8859, -153.334, -53.1703, 0.83 ) }
    dend_4 { pt3dadd( -49.669, -156.985, -55.3236, 0.28 ) }
    dend_4 { pt3dadd( -50.0658, -158.117, -55.9604, 0.55 ) }
    dend_4 { pt3dadd( -50.4244, -159.947, -56.9295, 0.28 ) }
    dend_4 { pt3dadd( -50.6445, -161.576, -57.7423, 0.83 ) }
    dend_4 { pt3dadd( -50.7981, -166.021, -59.5154, 0.28 ) }
    dend_4 { pt3dadd( -50.7604, -167.305, -59.9615, 0.83 ) }
    dend_4 { pt3dadd( -50.3516, -171.067, -60.8291, 0.28 ) }
    dend_4 { pt3dadd( -50.075, -172.549, -61.1318, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 54/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -26.5499, -122.513, -45.448, 0.28 ) }
    dend_3 { pt3dadd( -24.9153, -126.246, -46.3779, 0.28 ) }
    dend_3 { pt3dadd( -24.0653, -128.187, -46.8614, 1.11 ) }
    dend_3 { pt3dadd( -23.3036, -129.927, -47.2948, 0.28 ) }
    dend_3 { pt3dadd( -22.5848, -131.568, -47.7037, 1.38 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_27, dend_26, dend_25, dend_20, dend_13, dend_0, dend_24, dend_21, dend_19, dend_14, dend_6, dend_1, dend_23, dend_22, dend_16, dend_15, dend_10, dend_7, dend_5, dend_2, dend_18, dend_17, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3]}
    ModelViewParmSubset_2 = new SectionList()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_27, dend_26, dend_25, dend_20, dend_13, dend_0, dend_24, dend_21, dend_19, dend_14, dend_6, dend_1, dend_23, dend_22, dend_16, dend_15, dend_10, dend_7, dend_5, dend_2, dend_18, dend_17, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_28 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_24 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_19 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_14 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_7 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_12 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_11 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_4 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_13 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_20 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_10 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_21 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_5 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_17 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_9 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_8 OneSecGrp_SectionRef_30.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_13, dend_0, axon_0, axon_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    axon_1 all.append()
    axon_1 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_28 nseg = 9
    dend_27 nseg = 11
    dend_26 nseg = 19
    dend_25 nseg = 9
    dend_24 nseg = 21
    dend_19 nseg = 17
    dend_14 nseg = 5
    dend_1 nseg = 5
    dend_23 nseg = 9
    dend_22 nseg = 9
    dend_16 nseg = 5
    dend_7 nseg = 9
    dend_18 nseg = 3
    dend_12 nseg = 7
    dend_11 nseg = 11
    dend_4 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L23_LBC_d2eb341534_0_0


