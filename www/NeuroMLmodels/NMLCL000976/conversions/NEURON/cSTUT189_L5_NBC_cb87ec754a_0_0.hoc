// Cell: cSTUT189_L5_NBC_cb87ec754a_0_0
/*
{
  "id" : "cSTUT189_L5_NBC_cb87ec754a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.277629, -9.42436, 0.0, 2.9454", "-0.225418, -8.4907, 0.0, 4.92187", "-0.173208, -7.55704, 0.0, 6.69655", "-0.120997, -6.62338, 0.0, 8.28957", "-0.0687862, -5.68972, 0.0, 9.36061", "-0.0165755, -4.75606, 0.0, 10.2397", "0.0356352, -3.8224, 0.0, 11.0293", "0.087846, -2.88873, 0.0, 11.6457", "0.140057, -1.95507, 0.0, 12.2691", "0.192267, -1.02141, 0.0, 12.5588", "0.244478, -0.0877535, 0.0, 12.7806", "0.296689, 0.845907, 0.0, 13.0398", "0.3489, 1.77957, 0.0, 13.1732", "0.40111, 2.71323, 0.0, 13.0581", "0.453321, 3.64689, 0.0, 12.8607", "0.505532, 4.58055, 0.0, 12.1633", "0.557743, 5.51421, 0.0, 11.3807", "0.609953, 6.44787, 0.0, 10.3357", "0.662164, 7.38153, 0.0, 8.86929", "0.714375, 8.31519, 0.0, 6.73974", "0.766585, 9.24885, 0.0, 3.85991" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.0596826, 9.24235, 5.51, 1.4", "-0.0596826, 9.24235, 5.51, 1.4", "-0.389408, 10.6894, 5.8221, 1.47", "-0.617223, 11.7816, 6.04824, 1.47", "-0.812459, 12.9078, 6.27216, 1.55", "-0.929274, 13.7422, 6.44222, 1.55", "-1.0366, 14.6435, 6.61737, 1.55", "-1.08536, 15.2487, 6.72895, 1.55", "-1.11835, 16.0499, 6.87655, 1.55", "-1.13515, 16.9958, 7.05195, 1.55", "-1.16021, 18.0944, 7.28183, 1.92", "-1.22441, 19.3994, 7.58508, 2.14", "-1.33043, 20.6922, 7.9181, 1.18", "-1.45156, 21.7495, 8.22047, 1.25", "-1.59833, 22.8776, 8.56256, 1.25", "-1.81794, 24.2763, 9.00984, 1.33", "-2.05115, 25.5575, 9.44461, 1.47", "-2.28148, 26.6572, 9.86523, 1.77", "-2.55545, 27.7361, 10.3107, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-0.299673, -8.88065, 3.35, 2.29", "-0.299673, -8.88065, 3.35, 2.29", "-0.616994, -10.0046, 3.85779, 1.62", "-0.864885, -11.125, 4.34959, 1.4", "-1.04438, -12.093, 4.72578, 1.4", "-1.18675, -12.8096, 4.97004, 1.25", "-1.35878, -13.5891, 5.20137, 1.25", "-1.54849, -14.4421, 5.41144, 1.18", "-1.66278, -15.003, 5.51544, 1.18", "-1.89714, -16.3397, 5.71539, 1.55", "-2.09542, -17.4841, 5.86067, 1.62", "-2.31326, -18.6008, 5.98894, 1.47", "-2.5791, -19.8215, 6.10006, 1.47", "-2.79901, -20.7674, 6.18654, 1.47", "-3.03405, -21.8335, 6.27654, 1.47", "-3.15615, -22.5441, 6.34985, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "5.04042, 8.08735, -5.24, 2.43", "5.04042, 8.08735, -5.24, 2.43", "6.32117, 9.03932, -5.11255, 1.55", "7.56576, 9.98639, -5.01101, 1.47", "8.4416, 10.6665, -4.9579, 1.25", "10.1095, 11.9742, -4.81249, 1.11", "11.1239, 12.7696, -4.69047, 1.25", "12.4151, 13.7976, -4.46342, 1.4", "13.8972, 14.9932, -4.11441, 1.62", "15.5553, 16.2969, -3.65895, 1.03", "16.7586, 17.1614, -3.28531, 0.88", "17.9688, 17.9138, -2.85091, 1.11", "19.3577, 18.6836, -2.25, 0.88", "20.6735, 19.3423, -1.60608, 1.47", "21.3866, 19.6707, -1.20409, 1.33", "22.6575, 20.2347, -0.447889, 1.03", "23.8568, 20.8057, 0.2396, 1.03", "24.7913, 21.2994, 0.753011, 1.18", "25.8984, 21.9775, 1.34006, 1.18", "27.3342, 22.9651, 2.05451, 1.4", "28.2346, 23.642, 2.45203, 1.03", "29.1846, 24.4032, 2.71061, 0.81", "30.0774, 25.1034, 2.80283, 0.74", "31.0655, 25.8474, 2.76979, 1.11", "32.3718, 26.7754, 2.612, 1.11", "33.3129, 27.3999, 2.43204, 1.33", "35.2983, 28.6448, 2.09253, 1.33", "37.0492, 29.7215, 1.8748, 0.88", "38.4578, 30.614, 1.79969, 1.11", "39.2333, 31.124, 1.81013, 1.33", "40.3841, 31.9404, 1.92822, 1.33", "41.8501, 33.0719, 2.20801, 0.96", "43.0129, 34.0118, 2.56205, 0.96", "44.2453, 35.0723, 3.02781, 1.4", "45.0577, 35.7963, 3.39493, 1.4", "46.0793, 36.7452, 3.88118, 1.4", "47.2549, 37.8597, 4.43613, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.129629, -10.3401, -2.13, 1.84", "-0.129629, -10.3401, -2.13, 1.84", "-0.685466, -11.6124, -1.99961, 1.55", "-1.07779, -12.6473, -1.91143, 1.47", "-1.69105, -14.619, -1.71392, 1.47", "-2.13136, -16.3708, -1.53383, 1.25", "-2.34667, -17.5026, -1.42285, 1.18", "-2.5147, -18.8814, -1.29958, 1.33", "-2.61222, -20.6016, -1.16251, 1.7", "-2.59507, -22.4207, -1.04146, 1.4", "-2.50237, -23.8451, -0.961911, 1.18", "-2.28727, -25.9208, -0.841767, 1.4", "-2.01259, -28.2186, -0.709179, 1.4", "-1.80566, -29.7703, -0.62582, 1.55", "-1.56285, -31.4795, -0.557842, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.330332, 1.55635, -10.46, 3.02", "0.330332, 1.55635, -10.46, 3.02", "-1.72964, 1.48027, -10.46, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.766585, 9.24885, 0.0, 0.673133", "1.60408, 24.2255, 0.0, 0.673133", "2.44158, 39.2021, 0.0, 0.673133" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.55545, 27.7361, 10.3107, 2.21", "-2.61638, 29.5578, 11.4347, 2.21" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.55545, 27.7361, 10.3107, 0.59", "-3.31826, 28.0972, 10.8413, 0.59", "-4.3824, 28.6089, 11.498, 0.59", "-5.13474, 28.9633, 11.9299, 0.44", "-6.25076, 29.4729, 12.5304, 0.29", "-6.67671, 29.6615, 12.7399, 0.29", "-7.16144, 29.8764, 12.978, 0.29", "-7.6488, 30.1163, 13.2098, 0.44", "-8.13093, 30.3696, 13.4128, 0.66", "-8.84289, 30.773, 13.7381, 0.66", "-9.35289, 31.0865, 14.0163, 0.44", "-9.93333, 31.468, 14.3829, 0.44", "-10.4815, 31.8599, 14.8096, 0.66", "-10.7892, 32.1015, 15.096, 0.66", "-11.363, 32.5815, 15.696, 0.29", "-11.7424, 32.906, 16.1348, 0.29", "-12.4185, 33.4564, 16.9144, 0.44", "-13.0611, 33.9248, 17.5958, 0.37", "-13.6009, 34.267, 18.126, 0.37", "-14.1579, 34.5822, 18.618, 0.66", "-14.759, 34.894, 19.0905, 1.18", "-15.5538, 35.2779, 19.6226, 1.47", "-16.4898, 35.6954, 20.157, 0.37", "-17.077, 35.9385, 20.4511, 0.29", "-17.7674, 36.2074, 20.7655, 0.29", "-18.4582, 36.4709, 21.0577, 0.15", "-19.0393, 36.7023, 21.2968, 0.37", "-19.99, 37.106, 21.7151, 0.22", "-20.5804, 37.3904, 21.9725, 0.22", "-21.4228, 37.8305, 22.35, 0.22", "-21.8689, 38.0742, 22.5519, 0.96", "-22.6615, 38.5322, 22.9051, 1.84", "-23.2302, 38.8851, 23.162, 1.84", "-24.0603, 39.4511, 23.5312, 0.22", "-24.5162, 39.7918, 23.7312, 0.22", "-24.9079, 40.1066, 23.9101, 0.22", "-25.2978, 40.4132, 24.0839, 0.22", "-25.5635, 40.6107, 24.1937, 0.22", "-25.7371, 40.7312, 24.2607, 0.22", "-26.0982, 40.9661, 24.4188, 0.52", "-26.3928, 41.1673, 24.5506, 1.03", "-26.7386, 41.4245, 24.7274, 1.25", "-27.3331, 41.8957, 25.031, 0.81", "-27.8466, 42.3388, 25.2893, 0.22", "-28.1684, 42.6327, 25.474, 0.22", "-28.5688, 43.0286, 25.7568, 0.59", "-29.2559, 43.8031, 26.3093, 0.07", "-29.4561, 44.073, 26.4904, 0.15", "-29.8614, 44.7438, 26.8843, 0.15", "-30.414, 45.8437, 27.4495, 0.07", "-30.8616, 46.8676, 27.896, 0.07", "-31.0564, 47.3836, 28.1045, 0.07", "-31.3031, 48.143, 28.3797, 0.07", "-31.5911, 49.1401, 28.7034, 0.07", "-31.7712, 49.8335, 28.9058, 0.07", "-31.9304, 50.4835, 29.0623, 0.07", "-32.1404, 51.2497, 29.2381, 0.22", "-32.2787, 51.671, 29.3522, 0.44", "-32.5589, 52.3569, 29.5682, 0.07", "-32.9385, 53.1365, 29.8614, 0.07", "-33.1419, 53.5061, 30.0154, 0.07", "-33.4432, 53.9944, 30.2181, 0.37", "-33.5594, 54.1644, 30.2826, 0.37", "-33.9479, 54.6891, 30.4978, 0.07", "-34.3886, 55.2493, 30.7236, 0.07", "-34.5625, 55.4709, 30.8005, 0.37", "-35.071, 56.1619, 31.0104, 1.11", "-35.375, 56.6152, 31.1355, 0.81", "-35.9227, 57.4908, 31.3423, 0.07", "-36.2039, 57.9522, 31.4306, 0.07", "-36.5119, 58.4455, 31.5133, 0.59", "-37.0624, 59.3068, 31.6682, 0.15", "-37.7103, 60.2707, 31.8519, 0.15", "-38.1778, 60.9003, 31.9819, 0.15", "-38.7158, 61.5441, 32.1384, 0.44", "-39.3913, 62.2545, 32.3745, 0.15", "-39.7248, 62.5589, 32.4806, 0.15", "-40.3147, 63.0266, 32.6422, 0.74", "-41.1551, 63.6387, 32.8317, 0.07", "-41.7916, 64.0851, 32.941, 0.07", "-42.3722, 64.4985, 33.0101, 0.07", "-43.3109, 65.1811, 33.0495, 0.07", "-43.9719, 65.6757, 33.0087, 0.52", "-44.3004, 65.9255, 32.951, 0.52", "-45.0661, 66.5224, 32.7358, 0.07", "-45.7326, 67.0708, 32.4906, 0.37", "-46.6165, 67.8047, 32.1264, 0.07", "-47.5769, 68.5866, 31.7209, 0.07", "-48.2947, 69.1652, 31.3756, 0.07", "-49.2152, 69.902, 30.8975, 0.07", "-50.2414, 70.7241, 30.3166, 0.07", "-50.7739, 71.143, 29.9913, 0.07", "-51.3579, 71.6025, 29.6213, 0.07", "-51.9502, 72.0688, 29.2714, 0.07", "-52.4989, 72.4989, 28.9664, 0.81" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-3.15615, -22.5441, 6.34985, 0.52", "-2.81808, -22.5479, 7.18482, 0.52", "-2.2813, -22.5862, 8.47358, 0.52", "-1.75381, -22.6747, 9.72695, 0.59", "-1.2027, -22.8384, 11.0557, 0.59", "-0.722139, -23.0469, 12.2187, 0.59", "-0.252047, -23.3283, 13.358, 0.59", "0.256054, -23.7801, 14.6406, 0.59", "0.455415, -24.0693, 15.1543, 0.59", "0.697523, -24.5438, 15.7533, 0.59", "0.899679, -24.9975, 16.236, 0.52", "1.17347, -25.6393, 16.8815, 0.52", "1.48208, -26.3538, 17.5615, 0.59", "2.02747, -27.4554, 18.6226, 0.81", "2.65948, -28.5485, 19.7729, 0.52", "3.07129, -29.1683, 20.4718, 0.59", "3.58358, -29.8231, 21.2654, 0.81", "4.03027, -30.3171, 21.9146, 1.11", "5.01726, -31.2878, 23.2382, 0.37", "5.7082, -31.9069, 24.1391, 0.59", "6.31785, -32.4301, 24.9201, 0.66", "7.20354, -33.1241, 26.0382, 0.37", "7.84555, -33.5607, 26.8654, 0.37", "8.19834, -33.7671, 27.38, 0.37", "8.69311, -34.0322, 28.2331, 0.37", "9.031, -34.225, 28.9811, 0.96", "9.40904, -34.4859, 30.0573, 0.96", "9.74943, -34.8008, 31.2719, 0.96", "10.2372, -35.4095, 33.3627, 0.66", "10.5656, -35.9684, 35.1517, 0.37", "10.8096, -36.6128, 37.0364, 0.37", "10.9435, -37.263, 38.8451, 0.37", "10.9627, -37.5387, 39.5836, 0.37", "10.9528, -38.1063, 41.0591, 0.66", "10.9275, -38.796, 42.787, 0.66", "10.9221, -39.4309, 44.3463, 0.81", "10.947, -40.2866, 46.3928, 0.88", "11.0007, -41.0713, 48.1854, 0.88", "11.1274, -41.9887, 50.1768, 0.37", "11.2978, -42.78, 51.8101, 0.29", "11.4413, -43.3058, 52.7447, 0.29", "11.6235, -43.8751, 53.6404, 0.29", "11.8966, -44.7223, 54.8091, 0.52", "12.2292, -45.7784, 56.1489, 0.96", "12.5925, -47.0593, 57.6426, 0.96", "12.8668, -48.1146, 58.8499, 0.29", "13.1029, -49.0998, 59.9724, 0.29", "13.3235, -50.0857, 61.1197, 0.29", "13.4642, -50.8239, 61.9919, 0.88", "13.6069, -51.7144, 62.9371, 2.21" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-3.15615, -22.5441, 6.34985, 0.96", "-3.56894, -23.4863, 6.37254, 0.96", "-4.135, -24.7825, 6.4661, 0.81", "-4.60022, -25.9144, 6.66594, 0.74", "-5.09121, -27.1318, 6.999, 0.88", "-5.60239, -28.4168, 7.44989, 0.88", "-5.74886, -28.8156, 7.60185, 0.88", "-5.94569, -29.447, 7.88543, 0.66", "-6.32443, -30.7626, 8.52631, 0.66", "-6.59091, -31.6242, 8.95413, 0.88", "-6.82828, -32.3218, 9.29416, 0.88", "-7.24994, -33.4104, 9.79287, 1.03", "-7.68156, -34.4691, 10.237, 1.03", "-8.16007, -35.6428, 10.653, 0.88", "-8.63159, -36.8292, 11.0082, 0.59", "-8.85714, -37.4415, 11.1935, 0.44", "-9.25363, -38.5653, 11.5696, 1.03", "-9.51438, -39.3267, 11.8525, 1.03", "-9.73326, -40.0608, 12.1229, 1.03", "-10.0423, -41.2741, 12.5602, 0.88", "-10.3329, -42.5683, 13.0028, 0.81", "-10.6487, -44.0678, 13.508, 1.03", "-10.8966, -45.2478, 13.8909, 1.47", "-11.1748, -46.4952, 14.296, 1.11", "-11.4543, -47.7357, 14.6903, 0.74", "-11.6523, -48.6615, 14.9722, 0.66", "-11.8364, -49.5755, 15.2421, 0.66", "-12.0609, -50.7326, 15.5783, 1.03", "-12.353, -52.2211, 16.0036, 0.96", "-12.6012, -53.4076, 16.3275, 0.81", "-12.8403, -54.4611, 16.5909, 1.11", "-13.1789, -55.7872, 16.8987, 0.74", "-13.5002, -56.8977, 17.1709, 0.37", "-13.7646, -57.7159, 17.3968, 0.37", "-14.0407, -58.5053, 17.6424, 0.96", "-14.3782, -59.4308, 17.9516, 1.55", "-14.6116, -60.0677, 18.1685, 1.7", "-15.1078, -61.4487, 18.6427, 0.81", "-15.4482, -62.4357, 18.9957, 0.74", "-15.704, -63.2372, 19.2793, 0.74", "-16.0022, -64.3269, 19.6353, 0.44", "-16.2677, -65.4834, 19.9679, 0.37", "-16.48, -66.5314, 20.2168, 0.37", "-16.6225, -67.2628, 20.3368, 0.37", "-16.8256, -68.2601, 20.4511, 0.74", "-17.0351, -69.2595, 20.531, 1.03", "-17.1123, -69.6292, 20.5645, 1.03", "-17.2999, -70.6057, 20.6628, 0.59", "-17.4239, -71.2726, 20.7505, 0.59", "-17.6538, -72.4467, 20.9706, 0.81", "-17.8894, -73.6073, 21.3026, 0.52", "-18.0691, -74.5059, 21.6518, 0.96", "-18.2433, -75.4723, 22.0961, 1.25", "-18.4207, -76.6747, 22.7148, 0.66", "-18.5811, -77.8854, 23.344, 0.29", "-18.7324, -78.9639, 23.9238, 0.29", "-18.8724, -79.8075, 24.3611, 0.29", "-18.9553, -80.2314, 24.5571, 0.74", "-19.1445, -81.054, 24.8874, 0.96", "-19.5651, -82.6547, 25.3729, 0.22", "-19.8657, -83.6362, 25.5726, 0.22", "-20.1398, -84.426, 25.6763, 0.52", "-20.3577, -84.9962, 25.7338, 1.03", "-20.6173, -85.6333, 25.8014, 1.11", "-20.9676, -86.4371, 25.9005, 0.59", "-21.3684, -87.3023, 26.0286, 0.22", "-21.6017, -87.7915, 26.1004, 0.22", "-21.7935, -88.1934, 26.1673, 0.22", "-22.034, -88.7137, 26.2567, 0.44", "-22.3449, -89.4248, 26.3772, 0.96", "-22.6821, -90.2375, 26.5082, 0.96", "-22.9424, -90.866, 26.6085, 0.44", "-23.3628, -91.8579, 26.7803, 0.22", "-23.6003, -92.4198, 26.8914, 0.59", "-23.7982, -92.9048, 26.9937, 0.59", "-24.1079, -93.719, 27.1694, 0.15", "-24.3997, -94.5467, 27.3813, 0.15", "-24.6705, -95.3573, 27.65, 0.15", "-24.9209, -96.1452, 27.9343, 0.52", "-25.075, -96.6258, 28.1266, 1.33", "-25.3316, -97.4056, 28.4599, 1.55", "-25.6553, -98.37, 28.8669, 1.18", "-26.1901, -99.8962, 29.4572, 0.37", "-26.6299, -101.06, 29.86, 0.22", "-27.0448, -102.065, 30.1679, 0.22", "-27.4712, -103.028, 30.4328, 0.37", "-27.9633, -104.079, 30.6759, 0.96", "-28.4697, -105.116, 30.8664, 0.22", "-28.8689, -105.907, 30.9736, 0.22", "-29.3719, -106.897, 31.0854, 0.22", "-29.6845, -107.531, 31.1355, 0.37", "-30.0043, -108.195, 31.1838, 0.88", "-30.4608, -109.209, 31.3048, 0.88", "-31.0115, -110.556, 31.5208, 0.22", "-31.2634, -111.235, 31.6533, 0.44", "-31.5502, -112.054, 31.8344, 0.88", "-31.812, -112.818, 32.0106, 0.37", "-32.3255, -114.306, 32.3476, 0.15", "-32.6986, -115.396, 32.5743, 0.15", "-32.9732, -116.233, 32.7691, 0.15", "-33.1077, -116.665, 32.8755, 0.29", "-33.3467, -117.458, 33.084, 0.96", "-33.6154, -118.387, 33.3461, 0.29", "-33.8493, -119.223, 33.596, 0.15", "-34.1137, -120.231, 33.9448, 0.15", "-34.3085, -121.009, 34.2389, 0.15", "-34.5245, -121.912, 34.5897, 0.15", "-34.6881, -122.606, 34.8563, 0.15", "-34.9002, -123.478, 35.1767, 0.29", "-35.1, -124.208, 35.4166, 0.81", "-35.4108, -125.247, 35.7028, 1.11", "-35.7218, -126.219, 35.9346, 0.29", "-36.0646, -127.269, 36.1405, 0.15", "-36.3745, -128.202, 36.2868, 0.15", "-36.6799, -129.13, 36.3965, 0.15", "-36.8801, -129.753, 36.4528, 0.15", "-36.9837, -130.092, 36.474, 0.37", "-37.1436, -130.599, 36.5189, 0.88", "-37.2889, -131.0, 36.5604, 1.11", "-37.6384, -131.812, 36.6476, 0.29", "-38.0369, -132.553, 36.726, 0.15", "-38.3296, -133.019, 36.7694, 0.15", "-38.9927, -133.943, 36.815, 0.15", "-39.4326, -134.494, 36.8248, 0.59", "-39.9133, -135.059, 36.8177, 0.59", "-41.0717, -136.357, 36.7421, 0.15", "-41.765, -137.129, 36.6376, 0.15", "-42.514, -137.984, 36.4627, 0.15", "-42.7241, -138.238, 36.3895, 0.37", "-43.3261, -139.018, 36.1432, 0.96", "-43.8349, -139.718, 35.9051, 0.22", "-44.284, -140.393, 35.6681, 0.22", "-44.5104, -140.774, 35.5637, 0.22", "-44.7255, -141.188, 35.4807, 0.44", "-44.9723, -141.667, 35.3806, 0.81", "-45.3616, -142.381, 35.2214, 0.22", "-45.7541, -143.04, 35.0811, 0.29", "-46.2404, -143.807, 34.9275, 0.22", "-46.8228, -144.682, 34.7384, 0.88", "-47.5824, -145.749, 34.4927, 0.07", "-48.0131, -146.327, 34.3548, 0.07", "-48.5518, -147.012, 34.1692, 0.15", "-49.2375, -147.834, 33.9253, 0.07", "-49.4769, -148.104, 33.8409, 0.29", "-50.0062, -148.681, 33.6951, 0.44", "-50.4278, -149.152, 33.5959, 0.15", "-50.9802, -149.786, 33.4625, 0.15", "-51.2878, -150.141, 33.3813, 0.37", "-51.6542, -150.569, 33.2833, 0.44", "-52.2285, -151.276, 33.1311, 0.15", "-52.5507, -151.695, 33.0516, 0.15", "-52.829, -152.048, 32.9982, 0.37", "-53.0696, -152.359, 32.9672, 0.52", "-53.5243, -152.986, 32.8978, 0.15", "-53.6907, -153.23, 32.8703, 0.15", "-54.0925, -153.856, 32.8021, 0.52", "-54.6733, -154.81, 32.7083, 0.15", "-55.0154, -155.411, 32.6473, 0.52", "-55.5379, -156.406, 32.548, 0.15", "-55.6931, -156.738, 32.505, 0.37", "-55.7931, -156.986, 32.4611, 0.81", "-55.9088, -157.334, 32.3747, 1.03", "-56.0808, -157.969, 32.1803, 0.07", "-56.2847, -158.702, 31.9183, 0.15", "-56.5013, -159.384, 31.6202, 0.29", "-56.7119, -160.005, 31.2875, 0.15", "-56.8957, -160.515, 30.9612, 0.15", "-57.0189, -160.848, 30.7139, 0.29", "-57.1861, -161.308, 30.3424, 0.37", "-57.4402, -161.998, 29.7503, 0.22", "-57.6783, -162.624, 29.2094, 0.22", "-57.9329, -163.282, 28.627, 0.22", "-58.0721, -163.638, 28.3003, 0.22", "-58.1918, -163.96, 27.9818, 0.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "47.2549, 37.8597, 4.43613, 0.59", "49.2328, 38.1348, 4.58901, 0.59", "50.3307, 38.2926, 4.71679, 0.59", "51.9082, 38.4531, 4.97048, 0.59", "53.11, 38.5376, 5.10716, 0.59", "54.0215, 38.585, 5.14435, 0.44", "55.5339, 38.6763, 5.06936, 0.59", "57.0509, 38.8169, 4.85068, 0.59", "58.7163, 39.0468, 4.45944, 0.66", "60.4385, 39.4215, 3.89375, 0.66", "61.8914, 39.9316, 3.30461, 0.66", "63.4375, 40.7693, 2.53609, 0.52", "64.2877, 41.394, 2.0627, 0.52", "65.0237, 42.0493, 1.67406, 0.88", "65.9404, 42.935, 1.24566, 1.03", "67.1116, 44.0592, 0.842924, 0.74", "68.7256, 45.422, 0.496784, 0.81", "69.5806, 45.9763, 0.410216, 0.59", "71.226, 46.7445, 0.396246, 0.52", "72.6247, 47.1817, 0.527287, 0.81", "73.4034, 47.3314, 0.697379, 1.03", "75.2444, 47.5792, 1.2763, 0.59", "76.9909, 47.8086, 1.92087, 0.44", "78.4611, 48.0684, 2.4945, 0.52", "79.8927, 48.4575, 3.02061, 0.52", "81.6985, 49.1673, 3.58658, 0.59", "83.1651, 49.9217, 3.9045, 0.66", "84.5441, 50.7867, 4.03369, 1.11", "85.5033, 51.4611, 4.01674, 1.18", "87.374, 52.8111, 3.78998, 0.74", "88.6152, 53.7143, 3.56623, 0.37", "89.4639, 54.3385, 3.3983, 0.37", "90.4639, 55.0709, 3.19342, 0.44", "91.1118, 55.5535, 3.07214, 0.44", "91.8693, 56.1672, 2.91177, 0.44", "92.9693, 57.1686, 2.67798, 0.74", "94.0605, 58.3029, 2.37424, 0.96", "95.3497, 59.7779, 1.89912, 0.88", "96.2123, 60.795, 1.50253, 0.66", "97.0897, 61.7702, 1.00735, 0.66", "97.9904, 62.6859, 0.379165, 0.37", "98.8174, 63.4307, -0.322688, 0.29", "99.5122, 63.9976, -1.00717, 0.52", "100.176, 64.5267, -1.70123, 1.11", "101.06, 65.2724, -2.64289, 0.59", "101.916, 66.1042, -3.48817, 0.37", "102.502, 66.8035, -4.01326, 0.37", "103.448, 68.1261, -4.68101, 0.88", "103.996, 68.9725, -4.97349, 0.96", "104.958, 70.4801, -5.33996, 0.74", "105.933, 71.9164, -5.55513, 0.59", "106.897, 73.1289, -5.64657, 0.44", "107.785, 74.0828, -5.64976, 1.03", "108.383, 74.6657, -5.64365, 1.03", "109.484, 75.6891, -5.67958, 0.81", "110.165, 76.342, -5.72246, 0.88", "111.244, 77.5526, -5.80699, 0.59", "112.366, 79.1088, -5.85131, 0.44", "113.381, 80.8148, -5.76565, 0.44", "113.919, 81.8382, -5.6275, 0.44", "114.559, 83.1406, -5.31633, 0.59", "115.529, 85.0033, -4.63347, 0.74", "116.219, 86.1028, -4.05106, 0.44", "117.127, 87.2182, -3.25743, 0.44", "118.072, 88.1767, -2.42273, 0.66", "119.274, 89.2548, -1.36147, 0.88", "120.638, 90.356, -0.190269, 0.88", "122.193, 91.5162, 1.09656, 0.37", "123.488, 92.5071, 2.09358, 0.29", "123.799, 92.757, 2.31273, 0.29", "124.465, 93.3269, 2.73992, 0.29", "124.973, 93.774, 3.0065, 0.29", "125.45, 94.2018, 3.19344, 0.29", "126.681, 95.2705, 3.53289, 0.37", "127.759, 96.1069, 3.72714, 0.74", "129.055, 97.0488, 3.82, 0.96", "130.238, 97.8821, 3.80755, 1.18", "131.272, 98.5964, 3.74642, 1.11", "132.098, 99.158, 3.66068, 0.88", "133.256, 99.9302, 3.52121, 0.66", "135.124, 101.138, 3.33616, 0.44", "136.493, 101.964, 3.28249, 0.66", "137.286, 102.413, 3.31445, 0.44", "138.1, 102.828, 3.42153, 0.44", "139.37, 103.418, 3.70615, 0.74", "140.555, 103.926, 4.07616, 1.18", "142.197, 104.605, 4.72488, 1.11", "143.56, 105.214, 5.29686, 0.81", "145.064, 105.944, 5.93332, 0.44", "146.241, 106.54, 6.42693, 0.44", "146.973, 106.917, 6.7189, 0.44", "147.976, 107.432, 7.0805, 0.66", "149.343, 108.11, 7.54913, 0.37", "150.047, 108.45, 7.78502, 0.29", "150.737, 108.804, 8.03664, 0.29", "151.596, 109.268, 8.40669, 0.29", "152.559, 109.835, 8.87193, 0.81", "153.448, 110.441, 9.37328, 1.03", "154.63, 111.392, 10.1749, 0.59", "155.876, 112.504, 11.193, 0.52", "156.863, 113.441, 12.0683, 0.74", "157.528, 114.075, 12.7026, 0.37", "158.773, 115.217, 13.8915, 0.29", "159.877, 116.179, 14.9036, 0.29", "161.398, 117.399, 16.2752, 0.29", "161.976, 117.835, 16.7692, 0.88", "162.947, 118.551, 17.5422, 0.88", "164.11, 119.364, 18.3799, 0.29", "165.023, 119.978, 18.947, 0.22", "165.995, 120.652, 19.4472, 0.29", "167.03, 121.396, 19.8722, 0.74", "167.785, 121.939, 20.1502, 0.29", "169.353, 123.064, 20.6247, 0.22", "170.46, 123.859, 20.9353, 0.22", "171.416, 124.529, 21.1545, 0.37", "172.66, 125.362, 21.3791, 0.74", "173.549, 125.922, 21.5457, 0.74", "174.516, 126.526, 21.7254, 0.29", "175.707, 127.266, 21.9586, 0.22", "176.584, 127.768, 22.1593, 0.37", "177.719, 128.345, 22.4735, 0.22", "178.89, 128.873, 22.83, 0.22", "179.495, 129.108, 23.0306, 0.37", "180.799, 129.551, 23.4795, 0.37", "182.179, 129.972, 23.9829, 0.37", "183.277, 130.33, 24.4129, 0.44", "184.039, 130.601, 24.7292, 0.81", "185.187, 131.056, 25.2331, 1.47", "185.9, 131.369, 25.5787, 1.62", "187.474, 132.132, 26.4136, 0.59", "189.376, 133.113, 27.5093, 0.29", "190.59, 133.763, 28.2397, 0.22", "191.343, 134.175, 28.7157, 0.22", "192.001, 134.549, 29.134, 0.22", "192.648, 134.922, 29.5438, 0.22", "193.284, 135.288, 29.9292, 0.22", "194.177, 135.757, 30.4611, 0.37", "194.956, 136.14, 30.8967, 0.88", "195.61, 136.448, 31.237, 1.25", "196.631, 136.931, 31.7668, 1.25", "197.617, 137.412, 32.3126, 0.29", "198.61, 137.92, 32.9133, 0.15", "199.379, 138.331, 33.3862, 0.29", "200.391, 138.889, 33.9733, 0.15", "201.019, 139.245, 34.339, 0.15", "201.525, 139.545, 34.6196, 0.44", "202.806, 140.314, 35.2042, 0.74", "203.855, 140.942, 35.6233, 0.22", "205.034, 141.635, 36.0375, 0.15", "205.863, 142.126, 36.2935, 0.66", "206.612, 142.614, 36.4872, 0.66", "208.464, 143.916, 36.9539, 0.22", "209.332, 144.589, 37.1748, 0.66", "210.034, 145.205, 37.3705, 1.18", "210.713, 145.871, 37.5947, 0.96", "212.249, 147.495, 38.1667, 0.15", "212.791, 148.116, 38.4009, 0.15", "213.41, 148.897, 38.6959, 0.22", "214.125, 149.745, 39.0343, 0.07", "215.132, 150.815, 39.5612, 0.07", "215.541, 151.196, 39.8014, 0.74", "216.356, 151.859, 40.3061, 1.03", "217.259, 152.542, 40.8615, 0.44", "218.686, 153.539, 41.8652, 0.15", "219.666, 154.174, 42.6531, 0.15", "220.305, 154.565, 43.2487, 0.15", "220.822, 154.865, 43.8123, 0.37", "221.536, 155.23, 44.7054, 0.59", "222.906, 155.832, 46.7167, 0.22", "223.628, 156.115, 47.9551, 0.44", "224.223, 156.31, 49.1235, 0.44", "224.57, 156.397, 49.8891, 0.44", "224.874, 156.426, 50.6379, 0.44", "225.394, 156.353, 51.9534, 0.44", "225.542, 156.307, 52.3114, 0.44", "225.775, 156.228, 52.8431, 0.44", "226.224, 156.066, 53.7504, 0.44", "226.702, 155.877, 54.6349, 0.44", "227.978, 155.331, 56.859, 0.22", "228.866, 154.924, 58.3044, 0.22", "229.569, 154.576, 59.4391, 0.22", "230.209, 154.225, 60.4914, 0.74", "231.566, 153.362, 62.8037, 0.22", "232.656, 152.583, 64.7823, 0.52", "233.476, 151.942, 66.3334, 0.22", "234.217, 151.344, 67.8073, 0.52", "234.897, 150.794, 69.2545, 0.52", "235.579, 150.232, 70.9619, 0.29", "236.151, 149.755, 72.7988, 0.29", "236.348, 149.605, 73.673, 0.29", "236.545, 149.532, 74.9239, 0.29", "236.636, 149.587, 75.5519, 0.29", "236.84, 149.868, 76.7787, 0.29", "237.169, 150.349, 78.1758, 0.29", "237.409, 150.618, 78.8526, 0.29", "237.821, 150.953, 79.7581, 0.52", "238.565, 151.415, 81.2397, 0.22", "239.578, 151.969, 82.9542, 0.22", "240.36, 152.373, 84.1307, 0.22", "241.034, 152.764, 85.0709, 0.52", "242.219, 153.588, 86.705, 0.52", "243.289, 154.369, 88.2107, 0.52", "244.77, 155.592, 90.3061, 0.22", "245.757, 156.534, 91.6603, 0.22", "246.766, 157.64, 93.0603, 0.22", "247.509, 158.566, 94.0473, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "47.2549, 37.8597, 4.43613, 0.81", "47.5288, 39.4885, 3.99737, 0.81", "47.8491, 40.8763, 3.43113, 0.52", "48.1456, 41.8935, 2.87268, 0.66", "48.5753, 43.2112, 1.88959, 0.44", "48.8877, 44.2284, 0.944729, 0.44", "49.163, 45.1995, -0.0929754, 0.44", "49.3735, 45.8291, -1.0464, 0.44", "49.5609, 46.2557, -1.96274, 0.44", "49.8013, 46.7268, -3.28659, 0.44", "49.9674, 47.0402, -4.2974, 0.44", "50.0903, 47.2515, -4.92147, 0.44", "50.3197, 47.6678, -5.87748, 0.59", "50.6348, 48.3156, -6.88534, 0.59", "50.7917, 48.6515, -7.23672, 0.59", "51.1219, 49.3635, -7.78203, 0.66", "51.3952, 49.9983, -8.16663, 0.96", "51.6284, 50.6698, -8.49048, 0.96", "51.9004, 51.6676, -8.85801, 0.96", "52.258, 53.1308, -9.2746, 0.88", "52.4824, 54.0674, -9.49468, 0.52", "52.7549, 55.0584, -9.68188, 0.29", "53.0216, 55.9039, -9.8056, 0.29", "53.3087, 56.6665, -9.88557, 0.44", "53.6542, 57.4547, -9.92698, 0.88", "54.0811, 58.3656, -9.9681, 0.66", "54.7103, 59.7322, -10.0908, 0.52", "55.0386, 60.5172, -10.2182, 0.59", "55.5351, 61.8839, -10.5496, 0.74", "55.978, 63.3782, -11.055, 0.88", "56.2112, 64.3935, -11.502, 0.52", "56.3935, 65.4661, -12.071, 0.52", "56.5427, 66.5784, -12.7641, 0.59", "56.6536, 67.1664, -13.1864, 0.59", "56.8418, 67.8577, -13.7433, 0.81", "57.1654, 68.7072, -14.4471, 0.81", "57.579, 69.5277, -15.0259, 0.81", "58.1128, 70.398, -15.5096, 0.52", "58.9673, 71.6695, -16.0266, 0.29", "59.3909, 72.265, -16.1958, 0.29", "59.9744, 73.0112, -16.3307, 0.59", "60.8645, 74.051, -16.4176, 0.81", "61.4244, 74.6781, -16.4401, 1.03", "62.093, 75.461, -16.426, 0.29", "62.6803, 76.2209, -16.403, 0.22", "63.2522, 77.0742, -16.4018, 0.22", "63.6104, 77.7729, -16.4463, 0.29", "64.0229, 78.8296, -16.5631, 0.74", "64.304, 79.7372, -16.6515, 0.88", "64.5291, 80.6291, -16.7378, 0.88", "64.7371, 81.6842, -16.8249, 0.52", "65.0019, 83.3815, -16.9327, 0.52", "65.1334, 84.4381, -16.989, 0.44", "65.2792, 85.9843, -17.0778, 0.44", "65.3345, 87.057, -17.1558, 0.44", "65.333, 88.0916, -17.2356, 0.74", "65.2899, 88.8072, -17.2764, 0.88", "65.095, 90.3101, -17.3207, 0.96", "64.8771, 91.7069, -17.2998, 0.29", "64.755, 92.6866, -17.203, 0.22", "64.7406, 93.4605, -17.021, 0.22", "64.8947, 94.6149, -16.5903, 0.74", "64.9943, 95.0035, -16.4182, 0.74", "65.4687, 96.3497, -15.7865, 0.52", "65.9904, 97.6943, -15.2286, 0.44", "66.4522, 98.8995, -14.8633, 0.44", "66.8523, 100.133, -14.6438, 0.66", "67.1478, 101.402, -14.5866, 0.66", "67.2852, 102.316, -14.5879, 0.66", "67.3947, 103.769, -14.6891, 0.29", "67.428, 104.784, -14.7641, 0.29", "67.4535, 105.921, -14.7541, 0.44", "67.4684, 106.63, -14.6538, 0.44", "67.5062, 107.88, -14.2653, 0.74", "67.5222, 108.447, -14.0273, 1.11", "67.5478, 109.786, -13.3992, 0.44", "67.5472, 111.191, -12.7536, 0.74", "67.5186, 111.86, -12.4984, 0.52", "67.4382, 112.658, -12.2931, 0.29", "67.3018, 113.464, -12.2175, 0.22", "67.0166, 114.593, -12.2842, 0.59", "66.7306, 115.482, -12.4699, 0.96", "66.3776, 116.44, -12.7273, 0.66", "65.945, 117.584, -12.9985, 0.44", "65.5173, 118.79, -13.2006, 0.44", "65.0933, 120.194, -13.2345, 0.22", "64.9267, 120.951, -13.1277, 0.37", "64.7821, 122.118, -12.7834, 0.59", "64.7397, 123.408, -12.2374, 0.29", "64.7845, 124.695, -11.5905, 0.29", "64.8399, 126.036, -10.8766, 0.37", "64.824, 126.688, -10.5305, 0.29", "64.6864, 127.705, -10.054, 0.66", "64.4422, 128.595, -9.7285, 1.11", "64.1366, 129.338, -9.53265, 1.11", "63.4627, 130.685, -9.31176, 0.37", "62.6408, 132.276, -9.15915, 0.22", "62.312, 132.924, -9.11299, 0.59", "61.9889, 133.557, -9.08008, 1.11", "61.2984, 134.974, -9.03385, 0.29", "60.6106, 136.565, -9.02144, 0.96", "60.2356, 137.667, -9.07231, 0.15", "60.0806, 138.279, -9.13153, 0.22", "59.75, 139.725, -9.34555, 0.07", "59.6177, 140.325, -9.49127, 0.22", "59.5466, 140.66, -9.61157, 0.22", "59.3642, 141.652, -10.1048, 0.07", "59.3072, 142.078, -10.37, 0.22", "59.2778, 142.519, -10.6862, 0.22", "59.3054, 143.318, -11.3409, 0.15", "59.3182, 143.714, -11.6837, 0.29", "59.3107, 144.47, -12.332, 0.07", "59.2802, 144.914, -12.6925, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.56285, -31.4795, -0.557842, 0.81", "-0.671174, -32.4432, -1.6641, 0.81", "0.482261, -33.5685, -3.01723, 0.81", "1.19387, -34.1831, -3.79184, 0.81", "2.07718, -34.8424, -4.64386, 0.88", "2.97946, -35.3971, -5.40675, 1.18", "3.63921, -35.7222, -5.90038, 1.18", "4.18351, -35.9012, -6.24805, 1.18", "5.17785, -36.1555, -6.7427, 0.96", "6.40238, -36.4513, -7.25007, 0.96", "7.79803, -36.7836, -7.75869, 0.81", "9.55844, -37.2382, -8.29827, 0.81", "10.6029, -37.5389, -8.54094, 0.81", "12.2042, -38.0418, -8.7522, 0.81", "13.6179, -38.5297, -8.75716, 0.88", "14.7872, -38.9888, -8.56545, 0.88", "15.8129, -39.468, -8.1422, 0.59", "16.8037, -39.9842, -7.43008, 0.59", "17.8994, -40.5557, -6.32191, 0.59", "18.5975, -40.9022, -5.40434, 0.74", "19.2569, -41.2082, -4.38786, 0.59", "20.0495, -41.569, -3.08928, 0.59", "20.7884, -41.9105, -1.91442, 0.88", "21.7172, -42.342, -0.608245, 0.88", "22.637, -42.7943, 0.483109, 1.03", "23.7489, -43.3881, 1.55189, 0.81", "24.5769, -43.8678, 2.18421, 0.66", "25.5202, -44.4857, 2.75488, 0.66", "26.6204, -45.339, 3.38381, 0.44", "27.8688, -46.4457, 4.16019, 0.44", "28.7774, -47.33, 4.87804, 0.66", "29.2616, -47.8453, 5.3878, 1.11", "30.0762, -48.7606, 6.59298, 1.25", "30.9739, -49.8, 8.29636, 0.44", "31.6591, -50.5834, 9.7726, 0.52", "32.3994, -51.3879, 11.4687, 0.52", "32.9466, -51.9576, 12.733, 0.52", "33.6919, -52.7701, 14.4878, 0.59", "34.1187, -53.2711, 15.5149, 0.96", "34.5678, -53.8531, 16.6089, 1.11", "35.082, -54.5886, 17.8896, 0.81", "35.6101, -55.3856, 19.2554, 0.52", "36.0224, -55.9511, 20.345, 0.52", "36.1795, -56.1472, 20.7517, 0.52", "36.4196, -56.4203, 21.3694, 0.52", "36.6771, -56.6679, 21.9095, 0.52", "37.2649, -57.1324, 22.8192, 0.96", "38.3215, -57.8696, 24.0398, 0.44", "38.9757, -58.3215, 24.6574, 0.81", "39.6273, -58.799, 25.2278, 1.03", "40.914, -59.8305, 26.2438, 0.44", "41.7096, -60.5197, 26.8569, 0.44", "42.2701, -61.0371, 27.3033, 0.88", "42.8114, -61.567, 27.7906, 1.55", "43.5463, -62.2954, 28.5572, 1.55", "44.3632, -63.1483, 29.5782, 0.52", "45.2638, -64.1812, 30.916, 0.22", "45.6776, -64.6865, 31.5939, 0.22", "46.1088, -65.2453, 32.3884, 0.22", "46.4335, -65.6845, 33.0385, 0.74", "46.8081, -66.1901, 33.7812, 1.18", "47.0957, -66.5793, 34.3483, 1.18", "47.911, -67.6634, 35.7675, 0.22", "48.2927, -68.1346, 36.3385, 0.22", "48.9481, -68.8806, 37.149, 0.88", "49.8564, -69.8692, 38.1301, 0.15", "50.2889, -70.3162, 38.5411, 0.96", "50.8049, -70.8344, 38.9763, 1.25", "51.9215, -71.9142, 39.736, 0.15", "53.224, -73.1389, 40.4801, 0.15", "53.8027, -73.6812, 40.7683, 0.15", "54.7996, -74.6348, 41.2166, 0.15", "55.2955, -75.1242, 41.4469, 0.96", "56.177, -76.0368, 41.8872, 1.4", "56.527, -76.4159, 42.067, 1.33", "57.4095, -77.4236, 42.6117, 0.22", "57.8992, -77.9794, 42.9373, 0.29", "58.6561, -78.8371, 43.476, 0.59", "59.3311, -79.5759, 43.9733, 0.59", "59.9858, -80.2457, 44.4845, 1.7", "60.6133, -80.8323, 44.9779, 0.81", "61.7564, -81.7971, 45.8835, 0.15", "62.2386, -82.1731, 46.2786, 0.44", "62.8525, -82.6114, 46.7623, 0.74", "64.0298, -83.4105, 47.7276, 0.22", "64.7071, -83.8503, 48.2949, 0.96", "65.394, -84.2747, 48.8721, 1.25", "66.2532, -84.808, 49.6518, 0.29", "67.365, -85.4932, 50.6698, 0.07", "67.9119, -85.826, 51.1669, 0.29", "68.6944, -86.3031, 51.8469, 0.74", "69.9452, -87.0868, 52.9516, 0.15", "70.7927, -87.6474, 53.7712, 0.15", "71.1757, -87.9271, 54.2, 0.15", "71.4759, -88.1824, 54.6205, 0.74", "71.6558, -88.3491, 54.9034, 0.96", "72.411, -89.1061, 56.2196, 0.15", "72.8554, -89.573, 57.0221, 0.15", "73.4054, -90.1823, 58.0158, 0.88", "74.1046, -91.0452, 59.424, 0.15", "74.2684, -91.273, 59.8028, 0.15", "74.5326, -91.6555, 60.3993, 0.29", "74.7226, -91.9493, 60.834, 0.29", "75.1204, -92.5961, 61.8335, 0.15", "75.4853, -93.2547, 62.9564, 0.15", "75.7658, -93.7839, 63.9865, 0.15", "76.0054, -94.2678, 65.0748, 1.03", "76.3159, -94.9553, 66.947, 0.15", "76.5201, -95.4113, 68.4295, 0.15", "76.6696, -95.6865, 69.491, 0.15", "76.8654, -96.0131, 70.933, 0.15", "77.0374, -96.3113, 72.4422, 0.15", "77.1837, -96.5914, 74.1424, 0.15", "77.2865, -96.7954, 75.5973, 0.15", "77.3842, -96.9855, 76.9838, 0.15", "77.5006, -97.2141, 78.6956, 0.15", "77.6097, -97.47, 80.6224, 0.15", "77.6735, -97.6106, 81.7004, 0.15", "77.818, -97.9549, 84.3493, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.56285, -31.4795, -0.557842, 0.96", "-2.4914, -32.7209, -0.915752, 0.96", "-3.27914, -34.0634, -1.31672, 0.74", "-3.92162, -35.5145, -1.77029, 0.74", "-4.45703, -37.0424, -2.25934, 1.03", "-4.76473, -38.1177, -2.6156, 1.18", "-5.19131, -39.7774, -3.18382, 0.81", "-5.42205, -41.0984, -3.6393, 0.81", "-5.63295, -42.4997, -4.12259, 0.88", "-5.75112, -43.2337, -4.37226, 1.25", "-6.00454, -44.5662, -4.79777, 1.25", "-6.48276, -46.7426, -5.45966, 0.96", "-6.91078, -48.5035, -5.90759, 0.74", "-7.27801, -50.0385, -6.19523, 0.74", "-7.57808, -51.4854, -6.40296, 0.96", "-7.78051, -52.8264, -6.53902, 0.74", "-7.89632, -54.3796, -6.62241, 0.74", "-7.88954, -56.6387, -6.6126, 0.96", "-7.78421, -58.2349, -6.51754, 0.74", "-7.59022, -59.7499, -6.36317, 0.81", "-7.28177, -61.5151, -6.0994, 1.18", "-6.89477, -63.3281, -5.75276, 1.18", "-6.27042, -65.909, -5.1807, 0.96", "-5.7406, -68.0502, -4.66202, 0.96", "-5.36727, -69.6919, -4.2224, 1.03", "-5.01087, -71.4731, -3.68825, 0.74", "-4.75067, -73.0588, -3.19403, 0.74", "-4.61461, -74.6406, -2.68909, 1.03", "-4.66778, -76.2977, -2.1859, 0.88", "-4.98202, -78.0642, -1.7083, 0.66", "-5.28461, -79.1017, -1.46136, 0.59", "-5.65079, -80.1153, -1.25456, 0.81", "-6.37585, -81.9423, -0.93497, 0.59", "-6.95065, -83.4017, -0.738836, 0.81", "-7.35161, -84.5584, -0.660543, 0.81", "-7.74159, -85.9613, -0.677263, 0.81", "-8.02385, -87.2376, -0.767956, 1.25", "-8.28124, -88.676, -0.950035, 1.25", "-8.60322, -90.6409, -1.36717, 0.66", "-8.84467, -92.0891, -1.79483, 0.66", "-9.06752, -93.3288, -2.27641, 1.03", "-9.2857, -94.6102, -2.90816, 1.33", "-9.38071, -95.6246, -3.49195, 0.88", "-9.32776, -96.8343, -4.25965, 0.59", "-9.12616, -97.6243, -4.76717, 0.59", "-8.7064, -98.4515, -5.19513, 0.59", "-7.95968, -99.4851, -5.61156, 0.59", "-6.8094, -100.915, -6.06412, 0.22", "-6.21001, -101.685, -6.27333, 0.74", "-5.64216, -102.488, -6.48698, 1.11", "-4.80776, -103.932, -6.92253, 0.52", "-4.36415, -104.991, -7.29925, 0.66", "-4.0196, -106.204, -7.77351, 0.96", "-3.73639, -107.707, -8.34834, 0.81", "-3.55652, -108.908, -8.75873, 0.59", "-3.4001, -110.145, -9.12877, 0.59", "-3.251, -111.579, -9.47489, 0.44", "-3.15775, -113.108, -9.67258, 0.74", "-3.15402, -114.87, -9.75865, 0.74", "-3.24998, -116.245, -9.76837, 0.81", "-3.42681, -117.414, -9.77332, 1.03", "-3.77473, -118.843, -9.82989, 1.03", "-4.43025, -120.868, -10.0534, 0.59", "-5.00187, -122.399, -10.3249, 0.44", "-5.55685, -123.778, -10.6116, 0.52", "-6.09955, -125.071, -10.876, 1.03", "-6.72317, -126.556, -11.1162, 0.81", "-7.29374, -127.992, -11.2285, 0.29", "-7.81753, -129.53, -11.1699, 0.29", "-8.12406, -130.641, -10.9628, 0.44", "-8.37732, -131.723, -10.6217, 0.96", "-8.68127, -133.177, -10.0538, 1.11", "-8.99639, -134.879, -9.3777, 0.59", "-9.24869, -136.324, -8.83937, 0.59", "-9.57064, -138.278, -8.23487, 0.52", "-9.71003, -139.34, -8.01279, 0.52", "-9.87578, -141.094, -7.79976, 0.81", "-9.99278, -142.889, -7.77822, 0.88", "-10.0449, -143.928, -7.86601, 0.66", "-10.0908, -145.219, -8.1169, 0.52", "-10.1003, -146.563, -8.51577, 0.81", "-10.0634, -147.429, -8.82634, 0.52", "-9.92268, -148.68, -9.31772, 0.37", "-9.75017, -149.663, -9.70904, 0.96", "-9.38816, -151.255, -10.2966, 0.74", "-9.08545, -152.373, -10.6612, 0.96", "-8.83077, -153.277, -10.8604, 0.96", "-8.48438, -154.651, -10.9615, 0.37", "-8.31261, -155.684, -10.7921, 0.29", "-8.225, -157.224, -10.1722, 0.59", "-8.25116, -157.847, -9.78197, 0.59", "-8.36376, -159.044, -8.90243, 0.59", "-8.50426, -160.243, -7.96504, 0.96", "-8.68049, -161.644, -6.84925, 0.52", "-8.80088, -162.574, -6.13376, 0.44", "-8.93584, -163.542, -5.43147, 0.44", "-9.09395, -164.515, -4.72522, 0.88", "-9.27678, -165.525, -4.02804, 0.44", "-9.49208, -166.56, -3.36739, 0.37", "-9.78579, -167.69, -2.72394, 0.74", "-10.1904, -168.93, -2.11237, 0.22", "-10.6618, -170.132, -1.57475, 0.29", "-11.2148, -171.335, -1.03448, 0.59", "-11.9377, -172.777, -0.393516, 1.18", "-12.5836, -174.064, 0.157128, 0.66", "-13.0988, -175.272, 0.6741, 0.37", "-13.4339, -176.313, 1.15987, 0.29", "-13.5849, -177.091, 1.58049, 0.29", "-13.6222, -177.647, 1.9308, 0.74", "-13.6006, -178.217, 2.34671, 1.11", "-13.42, -179.831, 3.51216, 0.44", "-13.2949, -180.845, 4.14822, 0.44", "-13.2412, -181.646, 4.50691, 0.44", "-13.2387, -182.794, 4.90178, 0.29", "-13.3169, -183.959, 5.20361, 0.29", "-13.5054, -185.468, 5.49879, 0.59", "-13.7556, -187.014, 5.71777, 1.18", "-14.093, -189.209, 6.00193, 1.4", "-14.2478, -190.353, 6.15877, 1.18", "-14.3785, -191.916, 6.34904, 0.52", "-14.4149, -193.044, 6.42755, 0.52", "-14.4057, -194.42, 6.44467, 0.96", "-14.2961, -196.013, 6.32726, 0.74", "-14.1674, -196.904, 6.17512, 0.74", "-13.8707, -198.357, 5.74968, 0.37", "-13.5235, -199.648, 5.22209, 0.44", "-13.2867, -200.416, 4.83573, 0.44", "-12.9984, -201.29, 4.3508, 0.44", "-12.6923, -202.244, 3.83335, 0.29", "-12.4746, -203.051, 3.51453, 0.29", "-12.3421, -203.817, 3.39532, 0.29", "-12.2707, -204.94, 3.52319, 0.88", "-12.2932, -206.114, 3.89515, 0.81", "-12.3412, -207.004, 4.28906, 0.22", "-12.3862, -208.562, 5.04771, 0.22", "-12.3318, -209.734, 5.6088, 0.44", "-12.1145, -211.229, 6.25583, 1.11", "-11.7995, -212.409, 6.69173, 0.52", "-11.1842, -213.858, 7.06533, 0.22", "-10.3499, -215.28, 7.20912, 0.22", "-9.2198, -216.881, 7.15361, 0.22", "-8.40165, -217.972, 7.02996, 0.37", "-7.96607, -218.578, 6.94059, 0.52", "-7.43796, -219.449, 6.83404, 0.52", "-6.87847, -220.794, 6.75987, 1.11", "-6.63302, -221.95, 6.79246, 1.11", "-6.50005, -223.729, 6.95082, 0.52", "-6.49651, -225.347, 7.16351, 0.29", "-6.55393, -226.936, 7.41671, 0.52", "-6.63293, -228.411, 7.65131, 0.52", "-6.6735, -229.512, 7.77986, 0.22", "-6.67933, -230.203, 7.8052, 0.22", "-6.67188, -230.93, 7.77719, 0.59", "-6.66819, -231.908, 7.69032, 1.11", "-6.69775, -233.535, 7.48767, 1.11", "-6.80462, -235.422, 7.25095, 0.44", "-6.92817, -236.66, 7.11287, 0.44", "-7.09289, -237.95, 7.01876, 0.44", "-7.37038, -239.605, 6.96202, 0.29", "-7.57955, -240.464, 6.98219, 0.29", "-7.86829, -241.425, 7.06939, 0.88", "-8.14957, -242.321, 7.17257, 0.96", "-8.56283, -243.791, 7.32961, 0.37", "-8.84571, -244.964, 7.44452, 0.37", "-9.29582, -246.745, 7.65224, 0.37", "-9.45234, -247.265, 7.72446, 0.37", "-9.74775, -248.156, 7.86142, 1.03", "-9.95787, -248.757, 7.9554, 1.03", "-10.3414, -249.876, 8.12807, 0.52", "-10.8508, -251.754, 8.45099, 0.22", "-11.0256, -252.653, 8.63825, 0.22", "-11.2252, -253.664, 8.91469, 0.29", "-11.4008, -254.451, 9.18153, 0.59", "-11.5618, -255.11, 9.42413, 0.88", "-11.7694, -255.886, 9.70203, 0.96", "-12.0907, -257.058, 10.1259, 0.37", "-12.4846, -258.46, 10.6479, 0.22", "-12.6569, -259.152, 10.906, 0.22", "-12.8059, -259.928, 11.19, 0.96", "-12.9905, -261.285, 11.6618, 0.44", "-13.0689, -262.652, 12.0843, 0.22", "-13.0307, -263.527, 12.2985, 0.22", "-12.9048, -264.679, 12.5293, 0.22", "-12.8534, -265.115, 12.6109, 0.22", "-12.7735, -265.932, 12.7516, 0.74", "-12.7391, -266.909, 12.8891, 0.88", "-12.8438, -268.187, 12.9859, 0.22", "-13.0297, -269.07, 13.0053, 0.22", "-13.2541, -269.764, 13.0124, 0.22", "-13.5693, -270.537, 13.0331, 0.22", "-13.9246, -271.285, 13.0633, 0.66", "-14.3826, -272.159, 13.1316, 0.74", "-15.0206, -273.317, 13.2475, 0.44", "-15.6484, -274.465, 13.3457, 0.44", "-16.4384, -275.896, 13.4111, 0.74", "-17.2109, -277.258, 13.4211, 0.96", "-17.9093, -278.469, 13.3747, 0.59", "-18.7062, -279.84, 13.249, 0.22", "-19.318, -280.873, 13.1762, 0.22", "-19.9657, -281.954, 13.139, 0.22", "-20.4249, -282.699, 13.1562, 0.22", "-20.6321, -283.015, 13.1904, 0.22", "-21.2051, -283.838, 13.3749, 0.88", "-22.7539, -286.017, 14.1467, 0.22", "-23.3219, -286.813, 14.4874, 0.22", "-23.7025, -287.355, 14.7337, 0.74", "-24.1594, -288.051, 15.0425, 0.96", "-25.1358, -289.673, 15.7378, 0.37", "-25.7887, -290.906, 16.2281, 0.22", "-26.1831, -291.803, 16.5053, 0.88", "-26.3683, -292.309, 16.6671, 0.88", "-26.7077, -293.506, 17.0752, 0.22", "-26.8162, -294.049, 17.2569, 0.22", "-26.8893, -294.589, 17.4202, 0.22", "-27.0061, -295.693, 17.7089, 0.81", "-27.1206, -297.387, 18.1062, 0.29", "-27.177, -298.794, 18.4427, 0.44", "-27.1875, -299.946, 18.7073, 0.88", "-27.1667, -300.865, 18.9351, 0.88", "-27.0878, -301.988, 19.2399, 0.29", "-26.9493, -302.954, 19.5404, 0.22", "-26.7323, -303.927, 19.8831, 0.22", "-26.5124, -304.627, 20.2179, 0.22", "-26.239, -305.392, 20.6708, 0.22", "-26.0534, -305.909, 21.0245, 0.22", "-25.8377, -306.665, 21.5579, 0.74", "-25.7965, -306.975, 21.7674, 0.74", "-25.7527, -308.66, 22.7661, 0.22", "-25.816, -309.414, 23.1606, 0.22", "-25.9366, -310.035, 23.4282, 0.22", "-26.2223, -310.982, 23.76, 1.11", "-26.7445, -312.215, 24.0569, 0.29", "-27.2265, -313.168, 24.1775, 0.22", "-27.768, -314.149, 24.1686, 0.22", "-28.239, -315.047, 24.1297, 0.44", "-28.6669, -315.913, 24.1293, 0.88", "-29.3053, -317.304, 24.2448, 0.96", "-29.8459, -318.62, 24.5099, 0.29", "-30.1929, -319.536, 24.8128, 0.66", "-30.6018, -320.844, 25.3784, 0.74", "-30.987, -322.446, 26.1921, 0.29", "-31.1871, -323.752, 26.9018, 0.66", "-31.2883, -325.333, 27.8362, 0.22", "-31.3052, -325.954, 28.2329, 0.22", "-31.3232, -326.717, 28.734, 0.81", "-31.3319, -327.296, 29.0792, 0.96", "-31.3306, -328.463, 29.6901, 0.37", "-31.3429, -329.667, 30.2601, 0.22", "-31.4075, -330.552, 30.6589, 0.22", "-31.4861, -331.161, 30.9505, 0.22", "-31.551, -331.549, 31.1684, 0.66", "-31.6613, -332.11, 31.5294, 1.11", "-31.8554, -333.03, 32.1469, 0.88", "-32.1225, -334.36, 32.896, 0.22", "-32.3495, -335.607, 33.466, 0.88", "-32.6281, -337.085, 34.0315, 0.22", "-32.8034, -337.974, 34.3082, 0.22", "-32.9955, -338.836, 34.5326, 0.74", "-33.4337, -340.457, 34.9673, 0.15", "-33.7857, -341.525, 35.2258, 0.15", "-34.0207, -342.11, 35.3513, 0.66", "-34.3811, -342.929, 35.495, 0.81", "-35.0049, -344.279, 35.7612, 0.22", "-35.6691, -345.594, 36.1981, 0.22", "-35.973, -346.153, 36.5106, 0.59", "-36.4741, -346.993, 37.1163, 1.03" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.72964, 1.48027, -10.46, 1.99", "-1.67097, 3.70892, -12.2695, 1.99", "-1.70996, 5.89194, -13.9385, 1.77", "-1.86897, 7.50435, -15.1126, 1.84", "-2.10287, 9.02152, -16.1653, 1.4", "-2.44148, 10.6054, -17.2175, 1.25", "-2.85842, 12.0874, -18.161, 1.4", "-3.32381, 13.3279, -18.8759, 1.4", "-4.18709, 15.2736, -19.8122, 1.03", "-5.02777, 17.0514, -20.5162, 1.03", "-6.03085, 19.0223, -21.227, 1.11", "-7.13725, 21.1059, -21.9236, 0.96", "-8.32609, 23.3786, -22.633, 0.96", "-9.43381, 25.5862, -23.2992, 0.88", "-10.1018, 27.0157, -23.6605, 1.18" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.72964, 1.48027, -10.46, 3.32", "-3.47464, 0.451458, -10.4651, 3.32" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "2.44158, 39.2021, 0.0, 0.28953", "3.27908, 54.1787, 0.0, 0.28953", "4.11658, 69.1553, 0.0, 0.28953" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-2.61638, 29.5578, 11.4347, 1.7", "-2.89329, 30.6722, 11.9442, 1.7", "-3.25148, 32.1347, 12.6095, 1.03", "-3.69095, 33.9292, 13.4257, 0.74", "-4.00685, 35.219, 14.0124, 0.74", "-4.31315, 36.4697, 14.5813, 0.74", "-4.5609, 37.4813, 15.0415, 1.03", "-4.85521, 38.8375, 15.7525, 1.84" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-2.61638, 29.5578, 11.4347, 0.29", "-2.33134, 30.2071, 12.3362, 0.29", "-1.76065, 31.3841, 13.8219, 0.22", "-1.30698, 32.2934, 14.7617, 0.22", "-0.982528, 32.9608, 15.4079, 0.37", "-0.579236, 33.8378, 16.2202, 0.37", "-0.158817, 34.787, 17.0935, 0.37", "0.188632, 35.6103, 17.8071, 0.37", "0.71044, 36.8629, 18.7743, 0.22", "1.19812, 37.9527, 19.5812, 0.22", "1.70665, 39.0917, 20.4182, 0.22", "2.00054, 39.7297, 20.8962, 0.22", "2.35305, 40.486, 21.5184, 0.22", "2.57793, 40.9382, 21.9551, 0.37", "3.20377, 42.0761, 23.1771, 0.37", "3.69427, 42.8811, 24.0198, 0.22", "4.39875, 43.9642, 25.1834, 0.44", "4.92043, 44.766, 26.0776, 0.81", "5.43677, 45.5739, 27.0094, 0.81", "6.07421, 46.5791, 28.2015, 0.29", "6.6796, 47.5558, 29.3565, 0.22", "7.27486, 48.5177, 30.4759, 0.22", "7.83081, 49.4521, 31.4714, 0.22", "8.3057, 50.2778, 32.2954, 0.22", "8.7859, 51.1043, 33.1003, 0.22", "9.34181, 52.0055, 34.0371, 0.22", "9.61549, 52.4393, 34.5263, 0.66", "9.94167, 52.932, 35.0725, 1.55", "10.7943, 54.1405, 36.4271, 2.06", "12.0438, 55.8329, 38.2845, 0.22", "12.7621, 56.799, 39.3395, 0.22", "13.4243, 57.6764, 40.3232, 0.22", "13.9521, 58.3995, 41.131, 0.44", "14.463, 59.1491, 41.9846, 0.44", "15.026, 60.0816, 42.9943, 0.22", "15.6235, 61.3568, 44.1955, 0.22", "16.1486, 62.7693, 45.325, 0.44", "16.5732, 64.1565, 46.3591, 0.15", "16.9014, 65.6077, 47.4432, 0.15", "17.0214, 66.3486, 47.9804, 0.15", "17.2035, 67.8393, 49.0214, 0.15", "17.3594, 69.0446, 49.7791, 0.37", "17.5307, 70.1424, 50.4464, 0.59", "17.8314, 71.4851, 51.2703, 1.25", "18.2089, 72.704, 52.058, 2.21", "18.5374, 73.5072, 52.6408, 2.21", "19.3515, 75.0704, 53.8541, 0.52", "20.1588, 76.3684, 54.9031, 0.15", "20.8691, 77.3687, 55.669, 0.15", "21.5256, 78.1824, 56.2606, 0.29", "22.095, 78.8245, 56.705, 0.29", "22.8254, 79.6454, 57.215, 0.07", "23.6155, 80.539, 57.7046, 0.07", "24.2204, 81.2403, 58.0555, 0.07", "24.7277, 81.8562, 58.34, 0.88", "25.354, 82.6548, 58.6858, 1.62", "27.0279, 84.8874, 59.5734, 0.15", "27.858, 85.998, 60.0246, 0.15", "28.6823, 87.105, 60.4794, 0.15", "29.2931, 87.9072, 60.8192, 0.29", "29.9818, 88.7791, 61.2774, 0.29", "31.2958, 90.3703, 62.3049, 0.07", "32.3131, 91.5524, 63.2, 0.07", "32.8555, 92.1812, 63.7207, 0.07", "33.6335, 93.0644, 64.5177, 0.96", "35.3532, 94.9572, 66.3834, 0.15", "36.1579, 95.8394, 67.3014, 0.15", "36.7213, 96.4494, 68.0018, 0.15", "37.1364, 96.92, 68.4967, 0.15", "37.6049, 97.4627, 69.0311, 0.37", "38.1246, 98.0982, 69.5858, 0.37", "39.1536, 99.3873, 70.4995, 0.15", "40.0067, 100.491, 71.2272, 0.15", "40.83, 101.622, 71.9869, 0.15", "41.7738, 102.984, 72.9176, 0.15", "42.2996, 103.764, 73.4567, 0.15", "43.174, 105.08, 74.3608, 0.15", "44.193, 106.634, 75.4029, 0.07", "45.343, 108.475, 76.5954, 0.07", "46.4327, 110.25, 77.8183, 0.07" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-58.1918, -163.96, 27.9818, 0.74", "-58.4722, -165.006, 27.6826, 0.74", "-58.8114, -166.143, 27.3747, 0.29", "-59.325, -167.642, 26.963, 0.07", "-59.7727, -168.876, 26.5971, 0.15", "-60.0618, -169.666, 26.3587, 0.52", "-60.3192, -170.358, 26.1323, 0.74", "-60.5388, -170.899, 25.9355, 0.88", "-61.1614, -172.328, 25.4204, 0.22", "-61.5653, -173.221, 25.11, 0.22", "-61.9646, -174.138, 24.8046, 0.22", "-62.3771, -175.163, 24.4672, 0.15", "-62.6645, -175.927, 24.2112, 0.74", "-63.0628, -177.035, 23.8203, 0.88", "-63.4035, -178.052, 23.4613, 0.22", "-63.7675, -179.199, 23.0279, 0.15", "-64.0153, -180.119, 22.6246, 0.15", "-64.1681, -180.815, 22.2825, 0.29", "-64.3118, -181.569, 21.8544, 0.66", "-64.5095, -182.53, 21.2474, 1.03", "-64.8221, -183.596, 20.5026, 0.37", "-65.2597, -184.715, 19.6556, 0.22", "-65.5467, -185.349, 19.1796, 0.44", "-65.8406, -185.943, 18.7566, 0.74", "-66.3332, -186.871, 18.1639, 1.03", "-67.2385, -188.432, 17.2792, 0.29", "-67.7863, -189.338, 16.8527, 0.29", "-68.2901, -190.175, 16.5275, 0.74", "-68.7116, -190.908, 16.2847, 0.74", "-69.4744, -192.315, 15.8636, 0.29", "-70.1537, -193.613, 15.5179, 0.22", "-70.5339, -194.317, 15.3368, 0.22", "-71.0672, -195.122, 15.0696, 0.22", "-71.5306, -195.67, 14.7967, 0.29", "-72.0044, -196.122, 14.4667, 0.74", "-72.6181, -196.61, 13.9846, 0.96", "-73.5183, -197.301, 13.2298, 0.44", "-74.5155, -198.115, 12.3736, 0.22", "-75.0326, -198.578, 11.9375, 0.22", "-75.5051, -199.064, 11.5554, 0.22", "-76.0553, -199.701, 11.1856, 0.81", "-76.6331, -200.477, 10.8653, 0.44", "-77.1353, -201.238, 10.6624, 0.22", "-77.5615, -201.919, 10.5051, 0.37", "-77.8254, -202.321, 10.3907, 0.37", "-78.6697, -203.433, 9.97158, 0.22", "-79.0091, -203.808, 9.77568, 0.59", "-79.7737, -204.539, 9.29336, 0.88", "-80.5414, -205.262, 8.7482, 0.22", "-81.1234, -205.836, 8.29002, 0.22", "-81.5152, -206.245, 7.95038, 0.22", "-81.9694, -206.756, 7.52027, 0.22", "-82.4298, -207.299, 7.09011, 0.66", "-83.1799, -208.302, 6.40623, 0.15", "-83.4361, -208.724, 6.13508, 0.15", "-83.6853, -209.221, 5.83623, 0.15", "-83.7899, -209.492, 5.66018, 0.15", "-83.888, -209.838, 5.43144, 0.15", "-84.055, -210.556, 4.92262, 0.88", "-84.43, -212.05, 3.83915, 0.22", "-84.5098, -212.314, 3.64215, 0.22", "-84.7358, -212.953, 3.17148, 0.22", "-85.0155, -213.667, 2.6704, 0.22", "-85.2063, -214.121, 2.38414, 0.22", "-85.5821, -214.952, 1.94866, 0.66", "-86.185, -216.092, 1.50109, 0.29", "-86.6507, -216.927, 1.22791, 0.29", "-87.06, -217.657, 1.03635, 0.44", "-87.531, -218.541, 0.839969, 0.74", "-87.8921, -219.289, 0.717403, 0.81", "-88.5797, -220.752, 0.543391, 0.22", "-89.0563, -221.669, 0.483167, 0.22", "-89.2825, -222.063, 0.463112, 0.22", "-89.5525, -222.518, 0.441144, 0.22", "-89.9442, -223.205, 0.3795, 0.22", "-90.4711, -224.206, 0.195904, 0.59", "-90.9932, -225.303, -0.146509, 0.22", "-91.316, -225.997, -0.438581, 0.22", "-91.7122, -226.81, -0.89254, 0.59", "-92.2837, -227.934, -1.64448, 0.22", "-92.6924, -228.784, -2.28417, 0.22", "-92.9747, -229.448, -2.80559, 0.44", "-93.2806, -230.251, -3.41828, 1.03", "-93.6962, -231.372, -4.22152, 0.22", "-93.8834, -231.921, -4.5483, 0.22", "-94.0559, -232.57, -4.78339, 0.22", "-94.1728, -233.322, -4.93306, 0.22", "-94.2783, -234.472, -5.07245, 0.22", "-94.3038, -234.858, -5.10467, 0.44", "-94.3541, -235.817, -5.15452, 0.88", "-94.4013, -236.669, -5.20479, 0.88", "-94.5384, -238.417, -5.32196, 0.22", "-94.6459, -239.391, -5.40116, 0.22", "-94.8315, -240.713, -5.54809, 0.22", "-94.9317, -241.306, -5.61453, 0.22", "-95.042, -241.806, -5.67025, 0.59", "-95.2679, -242.626, -5.76097, 0.81", "-95.4311, -243.126, -5.82716, 0.59", "-95.8121, -244.261, -6.02439, 0.22", "-96.0738, -244.999, -6.17382, 0.22", "-96.3861, -245.712, -6.33347, 0.22", "-96.7152, -246.324, -6.50948, 0.22", "-97.2791, -247.224, -6.82542, 0.22", "-97.6993, -247.841, -7.08419, 0.44", "-98.1859, -248.517, -7.41606, 0.74", "-98.7177, -249.315, -7.85858, 0.29", "-99.1829, -250.105, -8.34237, 0.22", "-99.3021, -250.319, -8.47901, 0.22", "-99.5536, -250.758, -8.78408, 0.22", "-99.807, -251.205, -9.10717, 0.22", "-100.09, -251.736, -9.46613, 0.29", "-100.414, -252.442, -9.85962, 0.66", "-100.719, -253.102, -10.1557, 0.88", "-101.499, -254.625, -10.7757, 0.22", "-101.84, -255.214, -10.9936, 0.22", "-102.278, -255.878, -11.2204, 0.22", "-102.937, -256.716, -11.4308, 0.22", "-103.524, -257.376, -11.5146, 0.15", "-103.934, -257.811, -11.5195, 0.15", "-104.23, -258.116, -11.4822, 0.52", "-104.741, -258.646, -11.4001, 0.81", "-105.824, -259.904, -11.2298, 0.15", "-106.229, -260.463, -11.1865, 0.15", "-106.742, -261.391, -11.1711, 0.15", "-106.845, -261.62, -11.1813, 0.37", "-107.12, -262.353, -11.2607, 0.74", "-107.53, -263.648, -11.4786, 0.15", "-107.732, -264.397, -11.6556, 0.15", "-107.92, -265.135, -11.8301, 0.37", "-108.083, -265.833, -12.0064, 0.37", "-108.26, -266.709, -12.2265, 0.37", "-108.456, -267.838, -12.518, 0.29", "-108.651, -269.052, -12.8137, 0.81", "-108.769, -269.966, -13.0302, 0.66", "-108.847, -270.825, -13.2572, 0.59", "-108.903, -271.754, -13.5431, 0.15", "-108.957, -272.408, -13.7776, 0.15", "-109.045, -273.019, -14.0386, 0.66", "-109.105, -273.288, -14.1666, 0.66", "-109.379, -274.276, -14.6456, 0.22", "-109.568, -274.985, -14.9624, 0.22", "-109.773, -275.85, -15.3276, 0.59", "-109.969, -276.979, -15.7536, 0.15", "-110.041, -277.545, -15.9496, 0.15", "-110.129, -278.354, -16.208, 0.81", "-110.262, -280.003, -16.6742, 0.15", "-110.304, -280.669, -16.8361, 0.52", "-110.356, -281.7, -17.0558, 0.15", "-110.398, -282.184, -17.154, 0.15", "-110.562, -283.269, -17.4146, 0.15", "-110.641, -283.635, -17.5179, 0.15", "-110.884, -284.508, -17.7826, 0.88", "-111.135, -285.339, -18.052, 0.22", "-111.556, -286.618, -18.4926, 0.15", "-111.964, -287.863, -18.9371, 0.15", "-112.162, -288.455, -19.1535, 0.22", "-112.42, -289.152, -19.4315, 0.81" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-58.1918, -163.96, 27.9818, 0.07", "-58.5449, -163.204, 27.1061, 0.07", "-58.8725, -162.529, 26.4104, 0.07", "-59.1965, -161.914, 25.7924, 0.37", "-59.8028, -160.832, 24.7575, 0.07", "-60.0353, -160.435, 24.3987, 0.07", "-60.4202, -159.816, 23.8401, 0.22", "-61.2004, -158.685, 22.8699, 0.07", "-61.8252, -157.904, 22.2054, 0.07", "-62.2702, -157.409, 21.7768, 0.07", "-62.6853, -157.015, 21.438, 0.22", "-63.4801, -156.339, 20.8474, 0.07", "-63.9924, -155.94, 20.4757, 0.37", "-65.5423, -154.834, 19.4201, 0.07", "-66.0536, -154.486, 19.0835, 0.22", "-67.3342, -153.661, 18.23, 0.07", "-67.8718, -153.329, 17.8785, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-36.4741, -346.993, 37.1163, 0.15", "-36.9296, -347.621, 37.8885, 0.15", "-37.3447, -348.295, 38.5875, 0.15", "-37.6656, -348.881, 39.1353, 0.07", "-37.9367, -349.403, 39.6206, 0.07", "-38.1356, -349.798, 39.9834, 0.07", "-38.2745, -350.079, 40.2358, 0.37", "-38.5059, -350.619, 40.6738, 0.66", "-38.8826, -351.522, 41.3667, 0.07", "-39.0924, -352.044, 41.7965, 0.07", "-39.2886, -352.536, 42.2411, 0.07", "-39.3864, -352.781, 42.4936, 0.52", "-39.557, -353.234, 42.9926, 0.88", "-39.8367, -354.06, 43.9533, 0.15", "-40.0507, -354.779, 44.8048, 0.15", "-40.1509, -355.163, 45.2465, 0.15", "-40.253, -355.673, 45.8527, 0.15", "-40.32, -356.164, 46.4528, 0.88", "-40.3816, -357.066, 47.6024, 0.07", "-40.3851, -357.357, 47.9829, 0.07", "-40.3838, -357.673, 48.3802, 0.37", "-40.3848, -358.438, 49.3053, 0.15", "-40.3924, -358.919, 49.8618, 0.37", "-40.4411, -359.593, 50.6435, 0.22", "-40.5105, -360.141, 51.2478, 0.44", "-40.5924, -360.584, 51.7124, 0.81", "-40.7462, -361.178, 52.3016, 0.29", "-41.0195, -361.891, 52.9055, 0.15", "-41.438, -362.77, 53.5248, 0.15", "-41.8157, -363.495, 53.9275, 0.15", "-42.0608, -363.953, 54.1365, 0.81", "-42.3131, -364.447, 54.3283, 1.47", "-43.0749, -366.042, 54.8195, 0.15", "-43.5774, -367.167, 55.1841, 0.07", "-44.0791, -368.375, 55.5714, 0.07", "-44.3354, -369.01, 55.8003, 0.15", "-44.7417, -370.075, 56.2029, 0.07", "-44.9554, -370.66, 56.4287, 0.22", "-45.8523, -373.126, 57.4611, 0.07", "-46.1375, -373.845, 57.7792, 0.29", "-46.7657, -375.267, 58.4271, 0.07", "-47.1123, -375.982, 58.7415, 0.07", "-47.5275, -376.754, 59.0643, 0.44", "-48.3119, -378.165, 59.6188, 0.15", "-48.9201, -379.236, 59.9913, 0.07", "-49.2728, -379.845, 60.2157, 0.07", "-49.6177, -380.437, 60.4439, 0.29", "-50.6447, -382.189, 61.181, 0.07", "-51.1708, -383.099, 61.5827, 0.07", "-51.5741, -383.813, 61.8939, 0.07", "-51.9732, -384.519, 62.2257, 0.07", "-52.3523, -385.182, 62.5401, 0.15" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-36.4741, -346.993, 37.1163, 0.22", "-36.1266, -347.893, 37.9844, 0.22", "-35.4631, -349.293, 39.4042, 0.37", "-34.993, -350.171, 40.3653, 0.15", "-34.6041, -350.857, 41.1309, 0.15", "-34.469, -351.079, 41.4181, 0.37", "-34.1586, -351.599, 42.1853, 0.88", "-33.5272, -352.575, 43.9354, 0.15", "-33.2521, -353.012, 44.8672, 0.52", "-33.1783, -353.143, 45.1698, 1.03", "-32.7459, -354.059, 47.3933, 0.22", "-32.5043, -354.688, 48.9753, 0.22", "-32.446, -354.873, 49.4548, 0.37", "-32.2803, -355.751, 51.5674, 0.22", "-32.2363, -356.121, 52.3581, 0.22", "-32.2051, -356.656, 53.365, 0.22", "-32.199, -357.092, 54.0527, 0.22", "-32.1852, -357.591, 54.7334, 0.88", "-32.0757, -359.031, 56.4356, 0.15", "-31.9807, -359.808, 57.2053, 0.22", "-31.8062, -360.803, 57.9896, 0.07", "-31.5272, -362.075, 58.7639, 0.07", "-31.189, -363.351, 59.2714, 1.18", "-30.5909, -365.457, 59.7425, 0.07", "-30.3171, -366.366, 59.7535, 0.74", "-29.633, -368.711, 59.4849, 0.07", "-29.4513, -369.39, 59.3153, 0.44", "-28.9067, -371.823, 58.4047, 0.07", "-28.7033, -373.105, 57.8536, 1.11", "-28.4469, -375.578, 56.5962, 0.07", "-28.4003, -376.143, 56.2889, 0.22", "-28.2915, -377.952, 55.2663, 0.07", "-28.2163, -378.816, 54.7062, 0.07", "-28.0328, -380.092, 53.6828, 0.96", "-27.6452, -381.579, 52.3298, 0.07", "-27.4219, -382.127, 51.8093, 0.07", "-27.2761, -382.407, 51.5186, 0.29", "-26.5795, -383.523, 50.2334, 0.07", "-25.9355, -384.505, 49.063, 0.07", "-25.611, -385.006, 48.4444, 0.66", "-24.9077, -386.208, 47.0519, 0.07", "-24.4639, -387.099, 46.1152, 0.07", "-24.0274, -388.107, 45.2184, 0.07", "-23.7569, -388.803, 44.7329, 0.96", "-23.2773, -390.115, 43.9093, 0.15", "-22.9969, -390.925, 43.4274, 0.15", "-22.6807, -391.935, 42.9208, 0.74", "-22.0846, -393.902, 42.1714, 0.15", "-21.7582, -394.975, 41.8619, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-10.1018, 27.0157, -23.6605, 0.59", "-10.1238, 28.0809, -22.5934, 0.59", "-10.1123, 28.9525, -21.8086, 0.59", "-10.1088, 29.8332, -21.0606, 0.59", "-10.141, 30.7194, -20.3385, 0.74", "-10.2052, 31.4283, -19.7951, 0.74", "-10.3757, 32.5049, -19.0617, 0.44", "-10.4508, 32.7835, -18.9294, 0.44", "-10.6803, 33.4259, -18.7376, 0.44", "-10.9503, 34.0413, -18.6078, 0.66", "-11.3914, 34.8603, -18.4607, 0.81", "-12.0555, 35.9094, -18.2472, 0.59", "-12.6049, 36.6768, -18.0562, 0.37", "-13.3241, 37.6771, -17.7712, 0.22", "-13.7536, 38.2936, -17.5788, 0.44", "-14.0311, 38.7311, -17.4325, 0.74", "-14.5963, 39.7582, -17.0824, 0.37", "-15.0622, 40.7593, -16.7358, 0.22", "-15.2646, 41.2881, -16.5925, 0.22", "-15.4796, 41.9687, -16.4565, 0.66", "-15.7244, 42.8795, -16.3404, 0.52", "-16.0173, 44.0137, -16.2816, 0.81", "-16.1507, 44.5126, -16.2975, 0.81", "-16.5367, 45.769, -16.4329, 0.44", "-16.9995, 46.9513, -16.6446, 0.74", "-17.5567, 48.0026, -16.9211, 0.44", "-18.2975, 49.0365, -17.2986, 0.29", "-18.8813, 49.6558, -17.5998, 0.29", "-19.5473, 50.214, -17.9539, 0.29", "-20.2692, 50.6945, -18.345, 0.88", "-21.1955, 51.2204, -18.8358, 0.59", "-21.806, 51.5495, -19.1458, 0.59", "-22.655, 52.0241, -19.5455, 0.29", "-23.6394, 52.6382, -19.9698, 0.74", "-24.0395, 52.9376, -20.1362, 0.74", "-24.6054, 53.479, -20.3817, 0.29", "-24.9577, 53.9647, -20.5427, 0.22", "-25.1764, 54.4019, -20.6566, 0.22", "-25.3682, 54.9912, -20.7844, 0.22", "-25.5693, 55.7817, -20.9466, 0.74", "-25.7477, 56.4433, -21.1107, 0.74", "-25.9381, 57.0656, -21.3035, 0.29", "-26.1038, 57.5201, -21.4583, 0.29", "-26.356, 58.1444, -21.6736, 0.52", "-26.6553, 58.846, -21.948, 0.52", "-27.1245, 59.8975, -22.4002, 0.22", "-27.4049, 60.5461, -22.7144, 0.15", "-27.8088, 61.477, -23.1814, 0.59", "-28.2054, 62.4526, -23.6717, 0.22", "-28.3985, 62.9931, -23.9454, 0.22", "-28.4484, 63.1786, -24.036, 0.22", "-28.5769, 63.8807, -24.3676, 0.22" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-10.1018, 27.0157, -23.6605, 1.03", "-9.69186, 27.5764, -23.8568, 1.03", "-8.64978, 28.6062, -24.2557, 0.88", "-7.78651, 29.3699, -24.597, 0.88", "-7.18599, 29.8916, -24.8531, 0.59", "-6.67071, 30.364, -25.0844, 0.59", "-5.8035, 31.212, -25.4902, 0.96", "-4.8134, 32.1876, -25.9572, 0.52", "-3.99546, 33.0883, -26.3496, 0.66", "-3.67024, 33.5559, -26.5332, 0.66", "-3.30333, 34.2783, -26.7896, 0.66", "-3.1081, 34.8163, -26.9467, 0.66", "-2.86035, 35.7657, -27.1832, 1.18", "-2.60221, 36.9628, -27.4579, 0.96", "-2.46679, 37.6018, -27.6114, 0.96", "-2.25162, 38.5492, -27.8842, 0.88", "-1.9697, 39.5965, -28.2765, 1.03", "-1.79544, 40.206, -28.5393, 1.18", "-1.51912, 41.0684, -28.9379, 0.74", "-1.22169, 41.8796, -29.3231, 0.74", "-0.976886, 42.4881, -29.624, 0.96", "-0.582173, 43.4183, -30.0907, 1.11", "-0.102069, 44.4295, -30.6364, 0.96", "0.686917, 45.8692, -31.4533, 0.59", "1.14818, 46.6004, -31.8736, 0.59", "1.81778, 47.4915, -32.4158, 0.74", "2.14217, 47.8555, -32.6569, 0.74", "2.88058, 48.551, -33.1448, 0.59", "3.67513, 49.177, -33.6249, 0.59", "4.37521, 49.6808, -34.0217, 0.59", "5.17681, 50.2931, -34.4662, 0.52", "5.76331, 50.8198, -34.7985, 0.52", "6.40305, 51.5564, -35.2306, 0.74", "6.73473, 52.1381, -35.5439, 0.88", "7.00848, 52.9328, -35.989, 0.59", "7.18336, 53.8623, -36.5602, 0.44", "7.26637, 54.8313, -37.1931, 0.59", "7.30596, 55.7479, -37.8199, 0.96", "7.38301, 56.8903, -38.6324, 0.52", "7.50915, 57.7739, -39.278, 0.52", "7.68131, 58.4386, -39.7623, 0.52", "8.09414, 59.4512, -40.4981, 0.37", "8.41575, 60.0635, -40.9225, 0.37", "9.05021, 61.1506, -41.602, 0.44", "9.53439, 62.0201, -42.0742, 0.59", "9.90688, 62.8389, -42.4502, 0.59", "10.1151, 63.474, -42.6945, 0.59", "10.3092, 64.6086, -43.0916, 0.59", "10.3398, 65.5061, -43.4233, 0.66", "10.2553, 66.6054, -43.8657, 0.74", "10.1289, 67.6188, -44.3233, 0.52", "10.008, 68.489, -44.7851, 0.29", "9.92725, 69.3281, -45.3749, 0.29", "9.99536, 69.8425, -46.0782, 0.44", "10.1889, 69.977, -46.7573, 0.59", "10.517, 69.8813, -47.6665, 0.29", "10.7383, 69.715, -48.2185, 0.29", "11.0837, 69.3539, -49.0566, 0.29", "11.3484, 69.0455, -49.6691, 0.29", "11.5953, 68.7568, -50.2638, 0.44", "11.8257, 68.5298, -50.8969, 0.44", "11.983, 68.433, -51.4568, 0.52", "12.0504, 68.5792, -51.9351, 0.52", "11.9843, 69.0035, -52.2745, 0.52", "11.7696, 69.6868, -52.6433, 0.66", "11.4262, 70.5083, -52.9898, 0.66", "11.0007, 71.2763, -53.2399, 0.37", "10.3977, 72.0562, -53.4637, 0.37", "9.7956, 72.588, -53.6265, 0.37", "9.29643, 72.8341, -53.7409, 0.37", "8.88084, 72.9148, -53.8296, 0.37", "8.13109, 72.8876, -53.9969, 0.29", "7.26608, 72.655, -54.209, 0.22", "6.54509, 72.2725, -54.4121, 0.22", "5.63465, 71.446, -54.7335, 0.66", "5.32007, 70.9483, -54.903, 0.37", "5.07611, 70.3379, -55.133, 0.22", "4.91663, 69.58, -55.4432, 0.22", "4.8742, 68.9785, -55.718, 0.22", "4.8789, 68.1098, -56.1309, 0.29", "4.94964, 66.9541, -56.7039, 0.15", "5.02631, 65.8902, -57.2715, 0.15", "5.09777, 64.6298, -57.995, 0.15", "5.13275, 63.7083, -58.5905, 0.15", "5.13356, 63.4214, -58.7941, 0.15" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-3.47464, 0.451458, -10.4651, 1.25", "-2.92294, -0.824388, -11.4808, 1.25", "-2.51504, -1.57419, -12.0381, 1.25", "-1.94505, -2.50225, -12.702, 1.25", "-1.59435, -3.08586, -13.09, 1.25", "-1.15655, -3.9246, -13.5993, 1.11", "-0.882122, -4.59599, -13.9763, 1.33", "-0.562926, -5.71251, -14.4834, 0.81", "-0.483486, -6.59908, -14.7771, 0.66", "-0.551323, -7.33767, -14.9715, 0.66", "-0.788576, -8.47578, -15.2217, 1.03", "-1.14592, -9.8081, -15.4669, 1.4", "-1.43397, -10.8487, -15.6351, 1.99", "-1.81827, -12.3201, -15.8323, 1.33", "-2.04259, -13.4414, -15.9645, 0.96", "-2.24561, -14.7731, -16.1221, 0.81", "-2.3211, -15.7915, -16.2374, 0.74", "-2.30844, -16.8775, -16.3417, 0.96", "-2.21161, -17.8493, -16.4382, 1.33", "-2.0592, -18.6666, -16.5224, 1.47" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-3.47464, 0.451458, -10.4651, 1.77", "-4.97852, -0.369955, -10.6558, 1.77", "-6.4926, -1.24186, -10.8802, 1.62", "-7.79038, -2.03589, -11.1283, 1.84", "-8.67209, -2.57535, -11.2969, 2.06", "-10.2549, -3.54382, -11.5995, 1.84", "-11.7394, -4.45205, -11.8832, 1.84", "-13.2488, -5.44071, -12.23, 1.84", "-14.4301, -6.2233, -12.5474, 2.36" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-4.85521, 38.8375, 15.7525, 0.52", "-4.44135, 40.078, 15.0558, 0.52", "-4.10357, 41.3021, 14.3182, 0.52", "-3.96815, 41.9609, 13.8753, 0.52", "-3.84195, 42.8024, 13.2806, 0.59", "-3.74588, 43.5786, 12.7084, 0.44", "-3.68018, 44.1592, 12.2726, 0.44", "-3.63717, 44.7821, 11.7956, 0.52", "-3.56497, 45.6942, 11.0995, 0.88", "-3.511, 46.3295, 10.5922, 1.25", "-3.43511, 47.1831, 9.90951, 1.18", "-3.32507, 48.3208, 9.02403, 1.18", "-3.19714, 49.4143, 8.19559, 0.52", "-3.02939, 50.5751, 7.34081, 0.44", "-2.9088, 51.3361, 6.78792, 0.44", "-2.82873, 51.8384, 6.43139, 0.44", "-2.69033, 52.7363, 5.83557, 0.52", "-2.56331, 53.54, 5.36575, 0.59", "-2.38304, 54.5959, 4.85112, 0.66", "-2.22845, 55.45, 4.51476, 0.66", "-2.08127, 56.2791, 4.26382, 0.96", "-1.93345, 57.1408, 4.06432, 1.18", "-1.69705, 58.4918, 3.8652, 0.96", "-1.5262, 59.4657, 3.78455, 0.44", "-1.41446, 60.0913, 3.75388, 0.29", "-1.26393, 60.8622, 3.72505, 0.29", "-1.17337, 61.2359, 3.704, 0.29", "-0.944383, 61.924, 3.65324, 0.59", "-0.763766, 62.3065, 3.61909, 0.96", "-0.194828, 63.2243, 3.4871, 1.25", "0.155338, 63.6928, 3.38072, 1.11", "0.93431, 64.6563, 3.08781, 0.52", "1.5063, 65.3961, 2.83472, 0.52", "1.98762, 66.07, 2.59806, 0.22", "2.49553, 66.8401, 2.31914, 0.29", "2.93776, 67.5511, 2.03054, 0.59", "3.33637, 68.2238, 1.69971, 1.11", "3.78317, 69.002, 1.25247, 1.25", "4.30943, 69.9126, 0.633841, 0.96", "4.71124, 70.5406, 0.0857626, 0.29", "5.06989, 70.973, -0.463616, 0.22", "5.39402, 71.2346, -1.0329, 0.22", "5.65424, 71.3835, -1.57954, 0.37", "5.96391, 71.5414, -2.4145, 0.59", "6.23698, 71.7143, -3.432, 0.74", "6.47138, 71.9339, -4.51351, 0.96", "6.65549, 72.1484, -5.40723, 1.18", "6.86577, 72.4259, -6.40697, 1.18", "7.11753, 72.7753, -7.52308, 1.25", "7.44499, 73.22, -8.68219, 1.25", "7.78806, 73.6796, -9.58063, 0.52", "8.08381, 74.0646, -10.1526, 0.29", "8.48934, 74.5716, -10.7226, 0.29", "8.79035, 74.935, -11.0208, 0.66", "9.31186, 75.6279, -11.3897, 0.66", "9.91449, 76.6256, -11.7283, 0.52", "10.1723, 77.2783, -11.8701, 0.59", "10.3511, 78.0314, -11.9885, 0.74", "10.4086, 78.4863, -12.0368, 0.74", "10.4429, 79.5805, -12.1767, 0.29", "10.4046, 80.3609, -12.2829, 0.29", "10.2964, 81.5569, -12.442, 0.44", "10.2519, 82.0218, -12.5043, 0.81", "10.2089, 82.6482, -12.6062, 0.81", "10.1805, 83.8876, -12.874, 0.66", "10.2368, 84.9481, -13.174, 0.66", "10.2919, 85.379, -13.3118, 0.66", "10.4381, 86.2218, -13.6142, 0.44", "10.6211, 87.3208, -14.0356, 0.59", "10.726, 88.0851, -14.3283, 0.44", "10.8139, 89.1419, -14.7286, 0.52", "10.821, 89.8108, -14.9969, 0.52", "10.7791, 90.5051, -15.2956, 0.44", "10.6894, 91.2967, -15.6706, 0.81", "10.5537, 92.1967, -16.1348, 1.03", "10.3758, 93.2828, -16.7483, 0.66", "10.2509, 93.9934, -17.1817, 0.44", "10.1615, 94.6353, -17.5701, 0.29", "10.1128, 95.3184, -17.9232, 0.29", "10.1022, 95.7502, -18.0899, 0.29", "10.0997, 96.3778, -18.2941, 0.29", "10.0994, 96.9213, -18.4326, 0.44", "10.0634, 98.2248, -18.7393, 0.74", "9.95739, 99.8832, -19.1323, 0.59", "9.82002, 101.21, -19.5016, 0.44", "9.70868, 102.023, -19.7927, 0.44", "9.66542, 102.294, -19.9301, 0.59", "9.56688, 102.869, -20.3598, 0.59", "9.47735, 103.345, -20.8598, 0.59", "9.39668, 103.827, -21.5221, 0.59", "9.35786, 104.23, -22.1533, 0.74", "9.35329, 104.864, -23.1177, 0.96", "9.38246, 105.449, -23.9211, 1.18", "9.44932, 106.11, -24.689, 0.59", "9.53919, 106.784, -25.3348, 0.59", "9.65023, 107.561, -25.9319, 0.59", "9.70101, 108.034, -26.2154, 0.29", "9.7129, 108.831, -26.5737, 0.22", "9.65787, 109.391, -26.8009, 0.22", "9.49824, 110.118, -27.0942, 0.22", "9.24929, 110.797, -27.4324, 0.22", "8.83482, 111.62, -27.9432, 0.81", "8.30715, 112.48, -28.579, 0.22", "7.8414, 113.163, -29.1491, 0.37", "7.34619, 113.819, -29.7591, 0.88", "6.37337, 114.977, -30.97, 0.15", "5.86257, 115.547, -31.6334, 0.15", "5.61888, 115.812, -31.9868, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-4.85521, 38.8375, 15.7525, 0.81", "-4.8102, 39.7288, 16.6037, 0.81", "-4.79477, 40.5647, 17.3114, 0.81", "-4.86658, 41.4976, 18.0323, 0.81", "-4.95677, 42.0314, 18.4116, 0.59", "-5.08036, 42.5988, 18.7961, 0.59", "-5.21487, 43.151, 19.1443, 0.44", "-5.34888, 43.5953, 19.3498, 0.44", "-5.64118, 44.429, 19.677, 0.44", "-5.85972, 45.0193, 19.9037, 0.74", "-6.10172, 45.7211, 20.2197, 1.11", "-6.27473, 46.2438, 20.4652, 1.11", "-6.57826, 47.2287, 20.943, 0.52", "-6.78094, 48.0126, 21.3179, 0.66", "-6.9252, 48.7557, 21.6765, 0.96", "-7.05373, 49.5375, 22.0637, 1.33", "-7.22983, 50.5887, 22.5963, 1.77" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-112.42, -289.152, -19.4315, 0.29", "-112.629, -290.344, -19.0583, 0.29", "-112.874, -291.572, -18.7946, 0.66", "-113.233, -293.287, -18.549, 0.15", "-113.436, -294.263, -18.4606, 0.15", "-113.589, -294.9, -18.4608, 0.59", "-113.981, -296.226, -18.5807, 0.07", "-114.341, -297.08, -18.8197, 0.07", "-114.581, -297.519, -19.0194, 0.15", "-114.83, -297.969, -19.3269, 0.37", "-115.384, -299.041, -20.1945, 0.07", "-115.752, -299.776, -20.8636, 0.07", "-115.932, -300.139, -21.2176, 0.07", "-116.153, -300.559, -21.6184, 0.81", "-116.708, -301.659, -22.6267, 0.22", "-117.029, -302.379, -23.2356, 0.44", "-117.324, -303.29, -23.8865, 0.15", "-117.45, -303.821, -24.2333, 0.15", "-117.522, -304.229, -24.4762, 0.44", "-117.636, -304.897, -24.8519, 0.66", "-117.867, -306.133, -25.4472, 0.15", "-117.984, -306.941, -25.7965, 0.15", "-118.011, -307.638, -26.0656, 0.15", "-117.984, -308.403, -26.3657, 0.37" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-112.42, -289.152, -19.4315, 0.07", "-114.374, -287.996, -19.5402, 0.07", "-115.766, -287.149, -19.6792, 0.07", "-117.055, -286.37, -19.8415, 0.07", "-117.669, -285.989, -19.9332, 0.15", "-118.766, -285.229, -20.119, 0.07", "-119.477, -284.671, -20.2513, 0.07", "-120.066, -284.077, -20.4425, 0.22", "-120.517, -283.578, -20.5384, 0.15", "-120.791, -283.269, -20.5786, 0.15", "-121.696, -282.293, -20.7025, 0.29", "-122.486, -281.525, -20.7979, 0.07", "-123.299, -280.821, -20.887, 0.15", "-125.119, -279.414, -21.1288, 0.07", "-126.195, -278.759, -21.29, 0.15", "-127.075, -278.39, -21.4424, 0.15", "-127.873, -278.204, -21.6012, 0.15", "-128.683, -278.17, -21.7848, 0.15", "-129.856, -278.236, -22.0956, 0.15", "-130.893, -278.43, -22.4544, 0.07", "-131.895, -278.729, -22.7415, 0.07", "-132.514, -278.964, -22.891, 0.66", "-133.682, -279.52, -23.1829, 0.81" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-21.7582, -394.975, 41.8619, 0.15", "-21.3481, -396.223, 40.9247, 0.15", "-21.2035, -396.912, 40.4696, 0.15", "-21.1303, -397.232, 40.2812, 0.15", "-21.0429, -397.591, 40.0709, 0.52", "-20.925, -398.094, 39.792, 0.81", "-20.6528, -399.344, 39.086, 0.22", "-20.4659, -400.302, 38.5874, 0.22", "-20.354, -400.983, 38.2429, 0.15", "-20.2433, -401.56, 37.955, 0.22", "-20.0522, -402.296, 37.5817, 0.29", "-19.7892, -403.04, 37.1926, 0.22", "-19.5874, -403.49, 36.9465, 0.22", "-19.3574, -403.996, 36.653, 0.37", "-19.0715, -404.677, 36.2341, 0.37", "-18.7023, -405.578, 35.6847, 0.22", "-18.5279, -405.942, 35.4462, 0.22", "-18.2398, -406.484, 35.0683, 0.22", "-18.101, -406.755, 34.8612, 0.22", "-17.9354, -407.156, 34.5295, 0.22", "-17.7813, -407.569, 34.1912, 0.15", "-17.4635, -408.39, 33.562, 0.44", "-17.0991, -409.369, 32.8742, 0.22", "-16.9103, -409.954, 32.5077, 0.29", "-16.5487, -411.165, 31.803, 0.07", "-16.3313, -411.939, 31.3864, 0.66", "-16.055, -413.021, 30.8557, 0.07", "-15.8855, -413.761, 30.5301, 0.07", "-15.6537, -414.604, 30.1683, 0.29", "-15.3586, -415.501, 29.7832, 0.07", "-15.2093, -415.926, 29.5951, 0.44", "-15.1406, -416.155, 29.4822, 0.44", "-14.9271, -416.89, 29.0919, 0.74", "-14.4635, -418.021, 28.427, 0.07", "-14.2231, -418.482, 28.149, 0.22", "-13.8485, -419.102, 27.7942, 0.07", "-13.524, -419.647, 27.4838, 0.07", "-13.2238, -420.138, 27.2141, 0.66", "-12.3114, -421.482, 26.5577, 0.07", "-11.8268, -422.043, 26.3275, 0.07", "-11.205, -422.586, 26.0989, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-21.7582, -394.975, 41.8619, 0.07", "-20.5365, -395.361, 42.4431, 0.07", "-19.9666, -395.513, 42.7058, 0.29", "-19.2671, -395.682, 43.022, 0.07", "-18.6811, -395.809, 43.2832, 0.52", "-17.0581, -396.052, 43.9229, 0.07", "-16.0927, -396.14, 44.2562, 0.07", "-15.7112, -396.151, 44.3763, 0.59", "-15.1823, -396.143, 44.5234, 0.74", "-14.6618, -396.1, 44.6533, 0.37", "-13.2722, -395.893, 44.9362, 0.07", "-12.5604, -395.709, 45.0035, 0.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-2.0592, -18.6666, -16.5224, 0.59", "-2.08681, -18.5878, -17.8111, 0.59", "-2.11189, -18.5719, -18.8137, 0.59", "-2.17297, -18.5984, -20.2572, 0.52", "-2.27522, -18.6421, -21.3843, 0.52", "-2.37913, -18.6752, -22.1882, 0.52", "-2.44958, -18.6811, -22.5876, 0.52", "-2.64682, -18.646, -23.2879, 0.52", "-2.75767, -18.6012, -23.5994, 0.52", "-3.03778, -18.3868, -24.312, 0.66", "-3.12179, -18.258, -24.5771, 0.66", "-3.23924, -17.8287, -25.3483, 0.29", "-3.21994, -17.4071, -26.1218, 0.88", "-3.02586, -17.1058, -26.7757, 0.37", "-2.71575, -16.8873, -27.4036, 0.29", "-2.37227, -16.7249, -27.9342, 0.29", "-2.08576, -16.6158, -28.3156, 0.29", "-1.87333, -16.5506, -28.5529, 0.44", "-1.4255, -16.3729, -29.0225, 0.52", "-1.00448, -16.1065, -29.4435, 0.15", "-0.662187, -15.7987, -29.7502, 0.15", "-0.28175, -15.3796, -30.0461, 0.15", "-0.0121658, -15.0229, -30.2359, 0.15", "0.279883, -14.5377, -30.4665, 0.15", "0.598134, -13.8876, -30.7395, 0.15", "0.943768, -13.1508, -31.0333, 0.29", "1.14615, -12.7047, -31.2141, 0.15", "1.44987, -11.9635, -31.5043, 0.22", "1.80582, -10.9622, -31.8873, 0.07", "1.9371, -10.5424, -32.0517, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.0592, -18.6666, -16.5224, 0.88", "-1.82604, -19.6543, -17.2001, 0.88", "-1.64575, -20.5549, -17.9972, 0.74", "-1.48693, -21.3483, -18.6993, 0.88", "-1.25376, -22.5131, -19.7301, 0.88", "-1.06265, -23.4678, -20.5751, 0.96", "-0.85386, -24.5108, -21.4981, 0.96", "-0.810529, -25.0712, -22.1934, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-14.4301, -6.2233, -12.5474, 0.81", "-16.2298, -5.95817, -12.5875, 0.81", "-17.5455, -5.66687, -12.4994, 0.44", "-18.3776, -5.35922, -12.3484, 0.44", "-19.3885, -4.79116, -12.0455, 0.66", "-20.0474, -4.31386, -11.796, 0.74", "-20.9322, -3.56932, -11.4301, 0.44", "-21.7715, -2.68561, -11.002, 0.59", "-22.7915, -1.45649, -10.46, 0.59", "-23.7389, -0.188329, -9.97864, 0.59", "-24.5079, 0.908995, -9.59525, 0.59", "-25.3548, 2.08223, -9.19188, 0.81", "-25.9926, 2.85634, -8.91914, 0.66", "-26.54, 3.38685, -8.7112, 0.88", "-27.786, 4.35842, -8.24469, 0.37", "-28.4978, 4.84925, -7.95411, 0.44", "-29.469, 5.49878, -7.51142, 0.59", "-30.5852, 6.27895, -6.95667, 0.44", "-31.5678, 7.05737, -6.45826, 0.44", "-32.4166, 7.8593, -6.08579, 0.44", "-33.1956, 8.73252, -5.84043, 0.66", "-33.8304, 9.55042, -5.75578, 0.81", "-34.3359, 10.2797, -5.76829, 0.81", "-35.1274, 11.4311, -5.88023, 0.66", "-36.1599, 12.8519, -6.15494, 0.59", "-37.0146, 13.8705, -6.49275, 0.59", "-38.1686, 14.9946, -7.0417, 0.74", "-38.6209, 15.3473, -7.27011, 0.52", "-39.5659, 15.9242, -7.73887, 0.22", "-40.5328, 16.3705, -8.21151, 0.22", "-41.5144, 16.7443, -8.72121, 0.22", "-42.1555, 16.9812, -9.07211, 0.37", "-42.8928, 17.2639, -9.47995, 0.81", "-43.5982, 17.5539, -9.86509, 0.81", "-44.5246, 17.9892, -10.3668, 0.59", "-45.5881, 18.5438, -10.899, 0.37", "-46.4392, 19.0323, -11.3213, 0.29", "-47.2715, 19.547, -11.7868, 0.37", "-47.7999, 19.8954, -12.1556, 0.29", "-48.6322, 20.4736, -12.8249, 0.29", "-49.396, 21.0318, -13.4946, 0.81", "-50.1919, 21.62, -14.2286, 0.52", "-50.8593, 22.1186, -14.9059, 0.52", "-51.8434, 22.8765, -15.9899, 0.37", "-52.3824, 23.3135, -16.6663, 0.66", "-52.9172, 23.7596, -17.4405, 0.66", "-53.6821, 24.4021, -18.687, 0.44", "-54.4683, 25.0438, -20.048, 0.81", "-54.8243, 25.3259, -20.6645, 0.81", "-55.4121, 25.7647, -21.699, 0.37", "-55.8663, 26.0301, -22.5325, 0.22", "-56.3615, 26.1616, -23.3438, 0.22", "-56.8014, 26.1091, -23.9513, 0.22", "-57.2087, 25.9721, -24.4128, 0.81", "-57.5244, 25.8431, -24.7395, 1.03", "-58.3134, 25.4778, -25.4895, 0.66", "-59.4316, 24.9456, -26.4963, 0.29", "-60.877, 24.2841, -27.8362, 0.29", "-61.6653, 23.9704, -28.6142, 0.22", "-62.2318, 23.7914, -29.2399, 0.22", "-62.5436, 23.7266, -29.6248, 0.22", "-62.994, 23.7222, -30.2789, 0.22", "-63.4206, 23.8302, -31.0191, 0.22", "-63.7232, 23.9767, -31.5949, 0.22", "-64.2551, 24.2213, -32.6476, 0.22", "-64.5608, 24.3724, -33.2847, 0.66", "-65.1101, 24.6669, -34.5032, 0.66", "-65.6163, 24.9344, -35.6826, 0.15", "-66.1202, 25.1532, -36.7874, 0.15", "-66.8216, 25.3982, -38.2413, 0.74" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-14.4301, -6.2233, -12.5474, 1.55", "-14.5916, -8.50875, -13.1045, 1.55", "-14.8159, -10.2702, -13.5362, 1.4", "-15.1287, -11.7959, -13.8715, 1.33", "-15.6047, -13.4874, -14.1574, 0.96", "-16.1085, -14.9287, -14.3082, 0.88", "-16.6499, -16.2629, -14.3575, 1.4", "-17.2261, -17.3146, -14.2971, 1.47", "-18.4156, -19.1025, -14.0313, 1.03", "-19.5801, -20.6228, -13.7275, 0.96", "-20.9082, -22.2501, -13.3363, 1.03", "-22.0537, -23.6838, -12.9629, 1.03", "-23.274, -25.2934, -12.544, 1.11", "-24.102, -26.4749, -12.291, 0.88", "-25.1129, -28.0819, -12.0438, 0.88", "-25.7695, -29.2675, -11.9657, 1.11", "-26.593, -30.9752, -11.9928, 1.11", "-27.2117, -32.4865, -12.0915, 0.96", "-27.8451, -34.3845, -12.2508, 1.03", "-28.1959, -35.6293, -12.3709, 1.11", "-28.698, -37.5082, -12.4849, 0.96", "-29.0809, -38.8254, -12.5449, 0.88", "-29.2828, -39.4487, -12.5631, 0.81", "-29.7124, -40.7119, -12.5852, 0.74", "-30.1649, -41.9721, -12.6016, 0.88", "-30.8671, -43.7457, -12.6369, 1.03", "-31.3373, -44.7512, -12.6393, 1.25", "-32.2924, -46.4807, -12.621, 1.25", "-33.3179, -48.114, -12.5831, 1.18", "-34.3319, -49.6453, -12.5607, 1.11", "-35.3264, -51.095, -12.5545, 1.03", "-36.7971, -53.2114, -12.5856, 0.96", "-37.8212, -54.5839, -12.5532, 0.96", "-38.5962, -55.4857, -12.4713, 1.25" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-7.22983, 50.5887, 22.5963, 0.29", "-7.68781, 51.6944, 23.7965, 0.29", "-8.01463, 52.4515, 24.6147, 0.22", "-8.28375, 53.0578, 25.2739, 0.22", "-8.41495, 53.3847, 25.6226, 0.22", "-8.51198, 53.6691, 25.9247, 0.59", "-8.64567, 54.1487, 26.437, 1.03", "-8.71504, 54.6724, 26.9855, 1.33", "-8.80914, 55.4996, 27.7845, 0.59", "-8.88126, 56.0708, 28.3008, 0.22", "-8.95812, 56.6616, 28.7252, 0.22", "-9.05034, 57.4493, 29.1511, 0.22", "-9.11365, 58.0168, 29.3722, 0.74", "-9.20576, 58.8406, 29.5648, 1.84", "-9.29118, 59.5272, 29.6468, 1.84", "-9.61965, 61.6645, 29.7097, 0.22", "-9.83269, 62.9126, 29.6503, 0.22", "-9.93483, 63.6012, 29.5808, 0.22", "-10.0667, 64.9957, 29.4234, 0.22", "-10.0799, 65.348, 29.3807, 0.44", "-10.0674, 66.0857, 29.2852, 1.18", "-9.98349, 67.1973, 29.1478, 1.7", "-9.79813, 69.0986, 28.9556, 0.15", "-9.67495, 70.3186, 28.8694, 0.15", "-9.6312, 70.7189, 28.8662, 0.74", "-9.5538, 71.4888, 28.8848, 1.7", "-9.54225, 71.619, 28.8926, 1.7", "-9.50779, 73.0027, 29.0033, 0.15", "-9.55282, 73.5206, 29.0465, 0.15", "-9.69225, 74.3369, 29.1013, 0.15", "-9.87445, 75.0868, 29.1446, 0.29", "-9.98213, 75.4169, 29.1637, 0.29", "-10.4023, 76.5145, 29.2104, 0.07", "-10.6119, 77.0105, 29.2211, 0.22", "-10.8258, 77.484, 29.2087, 0.66", "-11.3368, 78.5515, 29.1395, 0.96", "-11.7767, 79.472, 29.0513, 0.22", "-12.3019, 80.6028, 28.9034, 0.66", "-12.6756, 81.4885, 28.7824, 0.44", "-12.9031, 82.0913, 28.7018, 0.74", "-13.1143, 82.74, 28.63, 1.55", "-13.3232, 83.5761, 28.5674, 1.84", "-13.635, 85.3443, 28.5706, 0.22", "-13.7376, 86.3196, 28.6878, 0.22", "-13.7508, 86.6559, 28.7695, 0.59", "-13.7505, 87.3309, 29.0183, 1.25", "-13.7454, 88.0749, 29.3603, 1.62", "-13.7416, 89.5323, 30.1262, 0.22", "-13.7448, 90.2652, 30.5384, 0.22", "-13.8078, 91.3749, 31.1376, 1.03", "-14.0174, 93.0788, 31.9495, 0.15", "-14.2347, 94.1553, 32.3707, 0.15", "-14.3828, 94.6835, 32.5259, 0.52", "-14.5512, 95.1467, 32.6035, 1.03", "-14.9478, 96.0684, 32.6505, 1.18", "-15.5967, 97.3295, 32.583, 0.22", "-15.9557, 97.9215, 32.4915, 0.22", "-16.3609, 98.5282, 32.3868, 0.22", "-17.0213, 99.4367, 32.2238, 0.22", "-17.3399, 99.8392, 32.1479, 0.74", "-17.98, 100.591, 32.0109, 1.77", "-18.8282, 101.512, 31.8474, 0.22", "-19.398, 102.083, 31.7271, 0.22", "-19.878, 102.516, 31.6118, 0.22", "-20.182, 102.77, 31.527, 0.22", "-20.867, 103.366, 31.3263, 0.07", "-21.4793, 103.968, 31.1295, 0.07", "-21.882, 104.414, 31.0048, 0.07", "-22.3385, 104.969, 30.8808, 0.37", "-22.8293, 105.62, 30.7868, 1.03", "-23.5947, 106.708, 30.7014, 0.52", "-24.4515, 108.034, 30.7096, 0.15", "-24.8473, 108.71, 30.7641, 0.29", "-25.1179, 109.207, 30.8291, 0.96", "-25.4573, 109.861, 30.9384, 1.11", "-25.8577, 110.643, 31.0982, 0.22", "-26.3238, 111.574, 31.3283, 0.22", "-26.6258, 112.18, 31.5255, 0.37", "-26.9156, 112.752, 31.7307, 0.96", "-27.1799, 113.244, 31.9348, 0.96", "-27.5746, 113.902, 32.244, 0.15", "-28.0808, 114.628, 32.6043, 0.22", "-28.6492, 115.342, 32.9796, 0.37", "-29.2576, 116.038, 33.3727, 0.74", "-30.0221, 116.846, 33.8518, 0.22", "-31.0025, 117.805, 34.4402, 0.66", "-31.805, 118.553, 34.924, 0.07", "-32.111, 118.837, 35.1132, 0.07", "-32.4996, 119.207, 35.3385, 0.15", "-32.9495, 119.647, 35.5741, 0.81", "-33.4313, 120.143, 35.7988, 1.25", "-34.1984, 120.974, 36.1386, 0.37", "-35.0421, 121.92, 36.4849, 0.22", "-35.856, 122.829, 36.7805, 0.37", "-36.6869, 123.754, 37.0507, 0.88", "-37.1346, 124.253, 37.1808, 0.37", "-37.7414, 124.937, 37.3489, 0.15", "-38.3191, 125.592, 37.5032, 0.15", "-38.7759, 126.143, 37.6517, 0.37", "-39.2448, 126.786, 37.8801, 0.74", "-39.6329, 127.369, 38.1179, 0.29", "-40.2447, 128.373, 38.5712, 0.15", "-40.4215, 128.706, 38.7354, 0.44", "-40.8096, 129.522, 39.1701, 1.03", "-41.2135, 130.435, 39.6709, 0.44", "-41.5527, 131.238, 40.1323, 0.15", "-41.9302, 132.145, 40.6634, 0.74", "-42.4462, 133.424, 41.3671, 0.15", "-42.661, 133.998, 41.661, 0.22", "-42.8558, 134.582, 41.935, 0.81", "-42.9893, 135.057, 42.1291, 0.81", "-43.205, 135.905, 42.4446, 0.22", "-43.5135, 137.116, 42.8432, 0.15", "-43.7188, 137.953, 43.1061, 0.22", "-43.8628, 138.56, 43.2907, 0.37", "-44.1302, 139.721, 43.6365, 0.96", "-44.4782, 141.171, 44.0492, 0.15", "-44.6561, 141.834, 44.2235, 0.15", "-44.8337, 142.39, 44.3602, 0.15", "-45.0846, 143.038, 44.4973, 0.66", "-45.2526, 143.416, 44.5633, 0.66", "-45.7361, 144.368, 44.6873, 0.07", "-46.1278, 145.135, 44.783, 0.07", "-46.2872, 145.446, 44.834, 0.44", "-46.4876, 145.836, 44.9112, 0.74", "-46.7103, 146.276, 45.0207, 0.96", "-46.9357, 146.738, 45.1625, 0.96", "-47.4653, 147.862, 45.567, 0.15", "-47.8309, 148.663, 45.8837, 0.15", "-48.2653, 149.584, 46.2542, 0.15", "-48.5041, 150.064, 46.4411, 0.15", "-48.7578, 150.529, 46.6164, 0.15", "-49.0263, 150.953, 46.7717, 0.37", "-49.3183, 151.346, 46.9341, 0.81", "-49.7018, 151.793, 47.16, 1.03", "-50.2348, 152.37, 47.5091, 0.37", "-50.8246, 152.975, 47.9149, 0.15", "-51.5528, 153.695, 48.4537, 0.29", "-52.563, 154.635, 49.2617, 0.29", "-53.308, 155.29, 49.8992, 0.15", "-53.7957, 155.705, 50.3392, 0.29", "-54.3583, 156.17, 50.8746, 0.88", "-55.0609, 156.732, 51.5687, 0.15", "-55.7227, 157.251, 52.2403, 0.15", "-56.2901, 157.677, 52.7992, 0.15", "-56.9222, 158.157, 53.4277, 0.96" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-7.22983, 50.5887, 22.5963, 0.22", "-6.54319, 51.4277, 22.8903, 0.22", "-6.10111, 52.0114, 23.0392, 0.15", "-5.68266, 52.595, 23.1876, 0.22", "-5.33499, 53.1015, 23.3307, 0.15", "-5.04428, 53.5336, 23.4603, 0.37", "-4.89285, 53.7752, 23.5392, 0.37", "-4.48582, 54.4934, 23.7935, 0.15", "-4.12505, 55.1919, 24.0497, 0.15", "-3.91313, 55.6255, 24.2203, 0.66", "-3.60913, 56.252, 24.4762, 1.03", "-3.18535, 57.1052, 24.8473, 0.15", "-2.96344, 57.5385, 25.0362, 0.15", "-2.70265, 58.0349, 25.2475, 0.15", "-2.42262, 58.5656, 25.4404, 0.59", "-2.07449, 59.2346, 25.6579, 0.07", "-1.84436, 59.6962, 25.7936, 0.07", "-1.62545, 60.149, 25.9019, 0.66", "-1.54524, 60.3361, 25.9389, 0.66", "-1.36804, 60.8198, 26.0402, 0.15", "-1.22032, 61.3146, 26.1429, 0.15", "-1.15138, 61.5858, 26.1974, 0.52", "-1.03249, 62.0769, 26.2838, 1.55", "-0.935599, 62.4651, 26.362, 1.77", "-0.697425, 63.3852, 26.5618, 0.74", "-0.493262, 64.1308, 26.752, 0.15", "-0.36564, 64.5801, 26.8786, 0.15", "-0.245126, 65.0169, 27.0215, 0.22", "-0.125541, 65.53, 27.2201, 0.22", "-0.0218024, 66.0423, 27.4464, 0.37", "0.0796056, 66.6265, 27.7318, 0.52", "0.135513, 66.9889, 27.9252, 1.47", "0.212678, 67.4791, 28.2253, 2.06", "0.382913, 68.4687, 28.8712, 0.29", "0.461902, 68.8887, 29.1477, 0.29", "0.601662, 69.5776, 29.6145, 0.74", "0.737443, 70.1944, 30.0125, 0.22", "0.96726, 71.0937, 30.5614, 0.29", "1.07207, 71.4585, 30.7656, 0.52", "1.15099, 71.7179, 30.8936, 0.22", "1.30777, 72.348, 31.1276, 0.22", "1.42927, 72.9534, 31.3039, 0.22", "1.5532, 73.7016, 31.4741, 0.22", "1.59332, 74.0325, 31.5312, 0.44", "1.64568, 74.6314, 31.6313, 1.25", "1.73739, 76.0081, 31.8619, 0.07", "1.77173, 76.7735, 31.9826, 0.07", "1.77798, 77.1091, 32.0358, 0.22", "1.77697, 77.6091, 32.1092, 0.96", "1.76654, 78.1154, 32.1844, 0.29", "1.73871, 78.9508, 32.3034, 0.07", "1.71954, 79.449, 32.38, 0.07", "1.70406, 79.7334, 32.4092, 0.15", "1.672, 80.2446, 32.4426, 1.25", "1.56039, 82.038, 32.5047, 0.15", "1.54213, 82.3189, 32.5081, 0.44", "1.50421, 82.8671, 32.5011, 0.96", "1.44151, 83.7955, 32.4938, 1.18", "1.35989, 85.0253, 32.4897, 0.07", "1.33309, 85.4463, 32.4881, 0.22", "1.30511, 86.0777, 32.493, 0.88", "1.28819, 86.5869, 32.5077, 0.44", "1.28018, 87.2177, 32.54, 0.15", "1.28031, 87.7727, 32.5886, 0.15", "1.27936, 88.1192, 32.6169, 0.37", "1.26258, 89.002, 32.6765, 1.55", "1.22316, 90.4259, 32.7572, 0.07", "1.19774, 91.0655, 32.7866, 0.07", "1.17465, 91.528, 32.7981, 0.37", "1.15468, 91.8785, 32.8107, 0.37", "1.10016, 92.6923, 32.8398, 0.07", "1.08188, 92.8982, 32.8469, 0.29", "1.02602, 93.4605, 32.8761, 1.18", "0.906904, 94.7474, 32.9347, 0.07", "0.852906, 95.5889, 32.9549, 0.07", "0.843237, 95.8723, 32.9554, 0.07", "0.837546, 96.2305, 32.9414, 0.37", "0.833377, 96.7342, 32.9065, 0.96", "0.827789, 97.4617, 32.8256, 0.07", "0.814648, 98.1188, 32.7027, 0.29", "0.772088, 99.1449, 32.427, 0.07", "0.721162, 100.159, 32.1072, 0.07", "0.713108, 100.298, 32.0538, 0.44", "0.673953, 100.977, 31.7064, 1.18", "0.633788, 101.773, 31.1598, 0.15", "0.615084, 102.2, 30.7725, 0.15", "0.605958, 102.426, 30.4943, 0.59", "0.598484, 102.645, 30.1434, 0.59", "0.570329, 103.115, 29.3011, 0.22", "0.557819, 103.345, 28.8288, 0.22", "0.554327, 103.538, 28.429, 0.22", "0.552235, 103.685, 28.1308, 0.22", "0.53724, 103.984, 27.5442, 0.37", "0.509395, 104.248, 27.0574, 1.03", "0.464675, 104.571, 26.4983, 0.74", "0.432808, 104.897, 25.9231, 0.22", "0.435675, 105.299, 25.2424, 0.22", "0.443437, 105.409, 25.0601, 0.22", "0.466597, 105.653, 24.647, 0.22", "0.482824, 105.835, 24.3188, 0.22", "0.494796, 106.117, 23.8158, 0.22", "0.493166, 106.376, 23.3414, 0.88", "0.484557, 106.824, 22.5003, 0.15", "0.471934, 107.192, 21.7832, 0.15", "0.45817, 107.536, 21.1441, 0.15", "0.434328, 107.943, 20.4345, 0.74", "0.400909, 108.43, 19.604, 0.44", "0.379091, 108.809, 18.9653, 0.44", "0.378722, 109.122, 18.4675, 0.44", "0.378399, 109.461, 17.9653, 0.74", "0.351095, 109.92, 17.3273, 0.22", "0.309096, 110.18, 16.9854, 0.22", "0.244635, 110.411, 16.6974, 0.44", "0.132578, 110.711, 16.3378, 0.44", "-0.041054, 111.11, 15.8701, 0.22", "-0.244986, 111.566, 15.3917, 0.29", "-0.450049, 112.06, 14.9763, 0.22", "-0.617379, 112.527, 14.6647, 0.22", "-0.700725, 112.819, 14.5094, 0.66", "-0.82911, 113.498, 14.2481, 0.96", "-0.942572, 114.616, 13.95, 0.22", "-0.976257, 115.278, 13.8418, 0.37", "-0.992565, 115.749, 13.8187, 0.07", "-1.00376, 116.248, 13.8544, 0.07", "-1.00823, 116.755, 13.9329, 0.07", "-1.00833, 117.117, 14.0212, 0.29", "-1.00863, 117.508, 14.1409, 0.66", "-1.01029, 118.048, 14.3236, 0.88", "-1.01298, 118.97, 14.6526, 0.15", "-1.01026, 119.444, 14.8159, 0.15", "-0.98704, 119.776, 14.9302, 0.22", "-0.93309, 120.081, 15.0284, 0.22", "-0.77817, 120.608, 15.1865, 0.22", "-0.602795, 121.073, 15.3166, 0.22", "-0.416664, 121.495, 15.426, 0.81", "0.0451255, 122.498, 15.682, 0.22", "0.4417, 123.284, 15.8854, 0.22", "0.845569, 124.024, 16.0831, 0.22", "1.00487, 124.297, 16.1583, 0.37", "1.25993, 124.704, 16.2823, 0.96", "1.90505, 125.686, 16.6338, 0.15", "2.28217, 126.242, 16.8658, 0.15", "2.45709, 126.506, 16.9938, 0.15", "2.64908, 126.802, 17.1501, 0.15", "2.96677, 127.267, 17.4189, 0.15", "3.15192, 127.517, 17.5875, 0.29", "3.44436, 127.875, 17.8727, 0.66", "3.57704, 128.034, 18.0042, 0.66", "4.05456, 128.604, 18.4644, 0.15", "4.31408, 128.921, 18.7008, 0.22", "4.83225, 129.553, 19.1674, 0.15", "5.14958, 129.928, 19.4315, 0.15", "5.58006, 130.421, 19.7775, 0.15", "5.82635, 130.702, 19.9642, 0.29", "6.28002, 131.22, 20.2894, 0.15", "6.53692, 131.529, 20.4614, 0.15", "6.79481, 131.854, 20.6068, 0.37", "7.21066, 132.406, 20.819, 0.15", "7.47494, 132.775, 20.9698, 0.29" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-117.984, -308.403, -26.3657, 0.07", "-117.63, -308.023, -26.335, 0.07", "-117.11, -307.408, -26.3619, 0.29", "-116.695, -306.902, -26.4317, 0.07", "-116.273, -306.385, -26.5816, 0.07", "-115.798, -305.805, -26.8355, 0.15", "-115.459, -305.387, -27.0492, 0.15", "-115.234, -305.108, -27.2395, 0.15", "-114.945, -304.72, -27.5851, 0.29", "-114.617, -304.263, -28.0762, 0.07", "-114.402, -303.954, -28.4477, 0.29", "-114.201, -303.712, -28.7696, 0.44", "-114.104, -303.619, -28.9098, 0.44", "-113.708, -303.289, -29.493, 0.15", "-113.419, -303.048, -29.9387, 0.15", "-113.305, -302.954, -30.1075, 0.15", "-112.87, -302.607, -30.7738, 0.15", "-112.682, -302.465, -31.0884, 0.37", "-112.216, -302.107, -31.9483, 0.22", "-111.99, -301.929, -32.3841, 0.22", "-111.867, -301.82, -32.6339, 0.22", "-111.608, -301.549, -33.1801, 0.15", "-111.318, -301.222, -33.7734, 0.15", "-111.041, -300.944, -34.2648, 0.15", "-110.838, -300.774, -34.5485, 0.37", "-110.464, -300.516, -34.9182, 0.44", "-110.07, -300.243, -35.224, 0.22", "-109.632, -299.947, -35.4871, 0.37", "-109.351, -299.764, -35.6123, 0.37", "-108.728, -299.389, -35.8257, 0.22", "-107.874, -298.901, -36.0852, 0.22", "-107.007, -298.489, -36.2876, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-117.984, -308.403, -26.3657, 0.15", "-118.35, -309.389, -26.4859, 0.15", "-118.678, -310.526, -26.5391, 0.29", "-118.985, -311.678, -26.5361, 0.15", "-119.327, -312.764, -26.4971, 0.15", "-119.629, -313.654, -26.4531, 0.15", "-119.808, -314.162, -26.4263, 0.15", "-120.2, -315.247, -26.3245, 0.29", "-120.605, -316.444, -26.2138, 0.81", "-121.009, -317.979, -26.1069, 0.15", "-121.236, -319.187, -26.0528, 0.22", "-121.373, -320.417, -26.0265, 0.07", "-121.36, -321.71, -25.9979, 0.07", "-121.189, -322.963, -25.9363, 0.37", "-120.649, -324.775, -25.7739, 0.15", "-120.202, -325.814, -25.6333, 0.15", "-119.828, -326.551, -25.5041, 0.37", "-118.852, -328.354, -25.1052, 0.15", "-118.283, -329.45, -24.8304, 0.15", "-117.916, -330.3, -24.5969, 0.15", "-117.792, -330.741, -24.4759, 0.15", "-117.617, -331.866, -24.205, 0.37", "-117.564, -333.228, -23.9543, 0.07", "-117.676, -334.296, -23.8346, 0.07", "-117.862, -335.225, -23.7657, 0.22", "-118.226, -336.717, -23.6563, 0.07", "-118.389, -337.308, -23.62, 0.07", "-118.753, -338.429, -23.5538, 0.52", "-119.478, -340.318, -23.4803, 0.07", "-119.806, -341.065, -23.4455, 0.07" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.810529, -25.0712, -22.1934, 0.44", "-0.835385, -25.3308, -22.5533, 0.44", "-0.983062, -26.2439, -23.9812, 0.44", "-1.07812, -26.7026, -24.8114, 0.44", "-1.18575, -27.2709, -25.9605, 0.44", "-1.23114, -27.5147, -26.4914, 0.44", "-1.28564, -27.7581, -27.0237, 0.44", "-1.3545, -27.9631, -27.4748, 0.44", "-1.44731, -28.1807, -27.9714, 0.44", "-1.5865, -28.488, -28.6798, 0.44", "-1.75612, -28.9137, -29.645, 0.44", "-1.85661, -29.2823, -30.4268, 0.44", "-1.95708, -29.8101, -31.4815, 0.44", "-2.03968, -30.4657, -32.7401, 0.44", "-2.0464, -30.6799, -33.1511, 0.29", "-2.02273, -31.2114, -34.2351, 0.22", "-1.96511, -31.5615, -34.9943, 0.22", "-1.90005, -31.802, -35.5545, 0.22", "-1.8561, -31.9326, -35.8582, 0.22", "-1.77506, -32.1894, -36.3722, 0.29", "-1.6352, -32.623, -37.1884, 0.29", "-1.54078, -32.9002, -37.6838, 0.29", "-1.43128, -33.1583, -38.2355, 0.29", "-1.3555, -33.2591, -38.5229, 0.29", "-1.19914, -33.3904, -38.9554, 0.29", "-0.910754, -33.6033, -39.5962, 0.29", "-0.483903, -33.89, -40.3207, 0.22", "0.138733, -34.3259, -41.2589, 0.37", "0.483669, -34.5982, -41.7742, 0.37", "0.736174, -34.8508, -42.2237, 0.22", "1.05757, -35.2903, -42.9503, 0.22", "1.20526, -35.6058, -43.403, 0.22", "1.30945, -35.9703, -43.8474, 0.29", "1.38483, -36.4976, -44.4202, 0.29", "1.35261, -37.1144, -45.0861, 0.29", "1.24643, -37.4818, -45.5008, 0.29", "1.10232, -37.7801, -45.8599, 0.29", "0.953413, -38.0184, -46.1567, 0.22", "0.639225, -38.4433, -46.6919, 0.22", "0.169759, -39.0577, -47.4, 0.22", "-0.00433391, -39.3394, -47.7186, 0.22", "-0.137123, -39.737, -48.1654, 0.22", "-0.177477, -40.1438, -48.6287, 0.29", "-0.170384, -40.3973, -48.9091, 0.29", "-0.152964, -40.6218, -49.1318, 0.29", "-0.148631, -41.233, -49.6468, 0.29", "-0.222956, -41.9673, -50.1995, 0.22", "-0.340886, -42.6013, -50.6406, 0.22", "-0.482888, -43.2139, -51.0767, 0.22", "-0.595334, -43.7334, -51.4976, 0.22", "-0.804542, -44.5485, -52.1815, 0.22", "-0.900942, -44.8452, -52.4318, 0.22", "-1.03852, -45.1786, -52.7565, 0.22", "-1.21439, -45.677, -53.3676, 0.44", "-1.18204, -46.1001, -54.2937, 0.44" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-0.810529, -25.0712, -22.1934, 0.52", "0.142421, -26.4079, -22.8775, 0.52", "0.778651, -27.5565, -23.4682, 0.52", "1.20704, -28.5673, -23.9842, 0.59", "1.42117, -29.2265, -24.297, 0.96", "1.55122, -29.8061, -24.542, 0.96", "1.76445, -31.4223, -25.117, 0.81", "1.74075, -32.7169, -25.4689, 0.52", "1.62298, -34.0016, -25.7298, 0.52", "1.4891, -35.0615, -25.9377, 0.74", "1.32119, -36.4148, -26.2272, 0.74", "1.15892, -37.8877, -26.6227, 0.66", "1.09157, -38.8067, -26.9204, 0.52", "1.11445, -39.856, -27.3328, 0.37", "1.21732, -40.8983, -27.8729, 0.66", "1.34744, -41.8344, -28.4463, 0.88", "1.47285, -42.7682, -29.0819, 0.88", "1.51689, -43.449, -29.5693, 0.66", "1.48157, -44.4019, -30.2197, 0.52", "1.37051, -45.3967, -30.8201, 0.52", "1.23715, -46.418, -31.3421, 0.59", "1.08823, -47.3876, -31.8019, 0.59", "0.885342, -48.5215, -32.3469, 0.59", "0.703011, -49.3925, -32.803, 0.59", "0.535477, -50.0868, -33.1676, 0.66", "0.268739, -51.1219, -33.6687, 0.59", "-0.00373215, -52.1871, -34.1496, 0.52", "-0.29681, -53.3987, -34.6178, 0.81", "-0.593306, -54.653, -34.9917, 1.03", "-0.923156, -55.9699, -35.2467, 0.59", "-1.26923, -57.3096, -35.3486, 0.44", "-1.45345, -58.0841, -35.3055, 0.59", "-1.65406, -59.0706, -35.159, 0.59", "-1.79581, -59.9844, -34.9347, 0.52", "-1.90474, -61.1413, -34.5485, 0.52", "-1.91991, -62.0509, -34.1915, 0.66", "-1.89325, -62.6289, -33.9224, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-38.5962, -55.4857, -12.4713, 0.59", "-39.1208, -55.6075, -11.7857, 0.59", "-40.3802, -56.0215, -10.1146, 0.52", "-41.0576, -56.3015, -9.27092, 0.52", "-41.6647, -56.599, -8.56858, 0.52", "-42.3316, -56.9781, -7.82049, 0.52", "-43.1948, -57.5045, -6.92231, 0.66", "-43.8962, -58.0291, -6.2646, 0.81", "-44.8614, -58.8863, -5.50478, 0.52", "-45.4681, -59.5088, -5.06826, 0.52", "-46.1608, -60.3402, -4.61203, 0.74", "-46.7945, -61.2378, -4.24372, 0.44", "-47.4565, -62.3163, -3.95029, 0.59", "-47.9773, -63.2407, -3.74798, 0.81", "-48.4841, -64.1711, -3.53612, 0.66", "-49.1772, -65.4027, -3.24186, 0.59", "-49.8823, -66.5665, -2.96808, 0.52", "-50.9578, -68.1566, -2.57574, 0.44", "-51.8954, -69.3165, -2.25609, 0.52", "-52.8146, -70.2637, -1.96514, 0.44", "-53.4878, -70.8671, -1.76793, 0.44", "-54.3011, -71.5515, -1.53702, 0.37", "-55.2456, -72.3951, -1.23052, 0.22", "-55.9185, -73.095, -0.975539, 0.59", "-56.4421, -73.7729, -0.753943, 0.88", "-57.1898, -74.9519, -0.388047, 0.59", "-57.7719, -75.9883, -0.0425105, 0.44", "-58.3622, -77.091, 0.373461, 0.59", "-58.7758, -77.8789, 0.721068, 0.52", "-59.2558, -78.8095, 1.16879, 0.29", "-59.7311, -79.7452, 1.68751, 0.29", "-60.4233, -81.0509, 2.56227, 0.37", "-61.0761, -82.1645, 3.47516, 0.29", "-61.5533, -82.8902, 4.19285, 0.29", "-61.8547, -83.3286, 4.6941, 0.52", "-62.221, -83.8575, 5.36057, 0.37", "-62.7381, -84.6106, 6.32945, 0.29", "-63.3924, -85.4638, 7.42945, 0.37", "-64.0477, -86.1974, 8.34084, 0.66", "-64.7009, -86.8488, 9.11179, 1.03", "-65.7625, -87.848, 10.2708, 0.81", "-66.6166, -88.6409, 11.1518, 1.25", "-67.627, -89.6362, 12.1527, 0.96", "-68.6056, -90.6524, 13.0728, 0.37", "-69.5862, -91.6918, 13.9042, 0.44", "-70.4142, -92.5524, 14.5209, 0.44", "-71.0878, -93.2378, 14.939, 0.59", "-72.1502, -94.2907, 15.4606, 0.96", "-72.9074, -95.0008, 15.6784, 0.37", "-73.8928, -95.8132, 15.7548, 0.22", "-74.6313, -96.3603, 15.7173, 0.22", "-75.2734, -96.8218, 15.6465, 0.66", "-76.1798, -97.5066, 15.5343, 0.74", "-77.257, -98.3964, 15.4224, 0.37", "-78.2534, -99.3918, 15.3872, 0.44", "-78.9579, -100.285, 15.4485, 0.37", "-79.5247, -101.195, 15.5668, 0.22", "-79.9338, -102.066, 15.7163, 0.22", "-80.1373, -102.655, 15.8372, 0.59", "-80.3647, -103.478, 16.0299, 0.88", "-80.6925, -104.583, 16.3122, 0.29", "-80.8976, -105.132, 16.4595, 0.22", "-81.3666, -106.064, 16.742, 0.52", "-82.0744, -107.173, 17.1148, 0.22", "-82.4545, -107.693, 17.3, 0.22", "-83.1801, -108.65, 17.6453, 0.29", "-83.5617, -109.191, 17.853, 0.29", "-84.1165, -110.036, 18.2186, 0.22", "-84.3604, -110.434, 18.4062, 0.74", "-84.7045, -111.05, 18.7005, 0.96", "-85.2468, -112.041, 19.1945, 0.59", "-85.8849, -113.218, 19.834, 0.15", "-86.318, -113.946, 20.2966, 0.15", "-86.5868, -114.338, 20.5719, 0.59", "-87.3513, -115.277, 21.309, 0.96", "-88.3239, -116.26, 22.1735, 0.22", "-88.9524, -116.762, 22.6761, 0.15", "-90.0117, -117.448, 23.4354, 0.15", "-90.4476, -117.707, 23.7504, 0.66", "-90.811, -117.905, 24.0334, 0.96", "-91.2406, -118.126, 24.379, 1.11", "-92.1521, -118.576, 25.0509, 0.52", "-93.1101, -119.051, 25.7277, 0.15", "-94.0279, -119.545, 26.4139, 0.15", "-94.524, -119.833, 26.8293, 0.15", "-94.9692, -120.115, 27.2291, 0.59", "-95.8246, -120.695, 28.0344, 0.96", "-97.0083, -121.55, 29.1621, 0.22", "-97.8521, -122.198, 30.019, 0.22", "-98.457, -122.683, 30.6934, 0.22", "-98.8935, -123.058, 31.2405, 0.59", "-99.4758, -123.609, 32.1321, 1.11", "-99.8733, -124.059, 32.9461, 0.44", "-100.322, -124.666, 34.2111, 0.22", "-100.571, -125.063, 35.1184, 0.22", "-100.626, -125.181, 35.3905, 0.22", "-100.723, -125.402, 35.9378, 0.22", "-100.902, -125.742, 36.8192, 0.22", "-101.106, -125.991, 37.5427, 0.22", "-101.31, -126.126, 38.062, 0.44", "-101.74, -126.318, 38.9752, 0.81", "-102.386, -126.566, 40.236, 0.81", "-103.005, -126.795, 41.3725, 0.66", "-103.537, -127.003, 42.3213, 0.66", "-104.652, -127.435, 44.2576, 0.22", "-105.335, -127.685, 45.4201, 0.22", "-105.721, -127.824, 46.0588, 0.66", "-106.165, -128.0, 46.7292, 0.74", "-107.192, -128.497, 48.111, 0.22", "-108.058, -128.991, 49.1533, 0.15", "-108.934, -129.548, 50.0894, 0.15", "-109.874, -130.165, 51.0397, 0.15", "-110.702, -130.718, 51.8099, 1.18", "-111.713, -131.397, 52.6723, 0.07", "-112.678, -132.096, 53.35, 0.07", "-113.319, -132.601, 53.7112, 0.07", "-113.7, -132.884, 53.8964, 0.07", "-114.477, -133.378, 54.2838, 0.96", "-115.984, -134.18, 55.0885, 0.07", "-117.182, -134.753, 55.7127, 0.07", "-117.966, -135.103, 56.1184, 0.66", "-120.49, -136.177, 57.426, 0.07", "-121.801, -136.73, 58.1434, 0.07", "-123.057, -137.259, 58.8712, 0.07", "-124.143, -137.689, 59.5743, 0.07", "-125.273, -138.089, 60.4321, 0.07", "-126.02, -138.333, 61.0371, 0.07", "-127.115, -138.637, 61.9763, 0.07", "-128.435, -138.927, 63.1334, 0.15", "-130.648, -139.297, 65.1783, 0.07", "-132.282, -139.478, 66.7479, 0.07", "-133.128, -139.539, 67.5778, 0.07", "-134.253, -139.563, 68.73, 0.07", "-134.823, -139.533, 69.3152, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-38.5962, -55.4857, -12.4713, 0.66", "-39.4388, -56.8598, -12.8897, 0.66", "-40.3723, -58.3067, -13.2075, 0.66", "-41.0115, -59.3324, -13.3596, 0.66", "-41.4644, -60.093, -13.4407, 0.66", "-42.3283, -61.6256, -13.5583, 0.59", "-43.0522, -63.0383, -13.596, 0.66", "-43.5754, -64.2096, -13.5089, 0.88", "-44.065, -65.6552, -13.224, 0.59", "-44.4104, -67.2895, -12.6871, 0.59", "-44.4882, -68.2988, -12.2337, 0.59", "-44.4197, -69.7522, -11.4043, 0.81", "-44.303, -71.0354, -10.5513, 0.81", "-44.1814, -72.3835, -9.58407, 0.88", "-44.102, -74.0328, -8.32487, 0.88", "-44.1587, -75.5246, -7.18066, 0.74", "-44.4555, -77.1095, -6.0632, 0.74", "-45.0821, -78.7936, -5.08707, 0.74", "-45.5729, -79.7096, -4.64366, 0.81", "-46.3013, -80.8356, -4.20177, 0.81", "-47.3551, -82.3431, -3.76, 0.74", "-48.4589, -83.9346, -3.49007, 0.74", "-49.381, -85.405, -3.3813, 0.74", "-50.0189, -86.6255, -3.35742, 0.81", "-50.4997, -87.7647, -3.34166, 0.81", "-51.1182, -89.6797, -3.31, 0.59", "-51.6704, -92.0432, -3.21508, 0.81", "-51.9327, -93.6908, -3.1089, 0.66", "-52.1775, -95.6986, -2.93375, 0.59", "-52.3517, -97.1795, -2.81118, 0.59", "-52.4862, -98.2852, -2.69579, 0.52", "-52.7386, -100.054, -2.49189, 0.88", "-53.0606, -101.705, -2.3001, 0.88", "-53.5702, -103.649, -2.16058, 0.81", "-54.2051, -105.553, -2.10676, 0.81", "-54.5797, -106.487, -2.10978, 0.88", "-55.4437, -108.343, -2.15901, 0.81", "-56.3011, -109.98, -2.19554, 0.81", "-57.0296, -111.236, -2.17309, 0.96", "-58.0512, -112.852, -2.02048, 0.74", "-58.6921, -113.772, -1.83572, 0.74", "-59.6244, -114.977, -1.44979, 0.44", "-60.3796, -115.883, -1.015, 0.66", "-61.3297, -116.925, -0.398909, 0.59", "-62.1925, -117.729, 0.130114, 0.59", "-63.0497, -118.354, 0.620351, 0.96", "-64.5909, -119.231, 1.43866, 0.52", "-65.9262, -119.88, 2.08922, 0.52", "-66.8311, -120.32, 2.461, 0.52", "-68.0638, -120.973, 2.91951, 0.52", "-69.3119, -121.773, 3.32974, 0.59", "-70.7539, -122.971, 3.77574, 0.52", "-71.7569, -124.091, 4.05975, 0.66", "-72.79, -125.577, 4.31814, 0.74", "-73.4966, -126.8, 4.48132, 1.03", "-74.1844, -128.201, 4.58825, 1.03", "-74.9353, -129.924, 4.64096, 0.96", "-75.4955, -131.387, 4.61563, 0.66", "-76.1052, -133.102, 4.57178, 0.52", "-76.7266, -134.968, 4.47875, 0.59", "-77.2501, -136.595, 4.31952, 0.44", "-77.5799, -137.65, 4.16391, 0.88", "-78.0882, -139.35, 3.80669, 0.59", "-78.4576, -140.754, 3.43794, 0.59", "-78.8113, -142.404, 2.90994, 0.66", "-79.0304, -143.371, 2.54677, 0.66", "-79.3102, -144.324, 2.16472, 0.96", "-79.7198, -145.382, 1.73634, 0.96", "-80.4787, -146.899, 1.20564, 0.44", "-81.214, -148.12, 0.87084, 0.44", "-82.1797, -149.529, 0.635812, 0.44", "-82.9156, -150.528, 0.585576, 0.88", "-84.0914, -152.041, 0.707376, 0.66", "-85.2958, -153.565, 1.02377, 0.52", "-86.2331, -154.856, 1.42518, 0.74", "-86.7605, -155.751, 1.78363, 0.74", "-87.1828, -156.755, 2.25616, 0.74", "-87.5173, -157.99, 2.92612, 0.59", "-87.6543, -158.946, 3.48551, 0.81", "-87.8141, -160.767, 4.56907, 0.88", "-87.9916, -162.479, 5.56667, 0.59", "-88.223, -163.858, 6.3333, 0.66", "-88.6523, -165.517, 7.18982, 0.66", "-88.9049, -166.183, 7.50355, 0.66", "-89.6444, -167.674, 8.12356, 0.52", "-90.5851, -169.297, 8.68766, 0.52", "-91.4637, -170.857, 9.09067, 0.74", "-92.0086, -171.972, 9.27837, 0.96", "-92.7102, -173.786, 9.47702, 1.18", "-93.1703, -175.392, 9.6287, 0.66", "-93.4222, -176.602, 9.72755, 0.66", "-93.7966, -178.557, 9.87203, 0.59", "-94.2506, -180.504, 9.99417, 0.81", "-94.8976, -182.509, 10.087, 0.66", "-95.7239, -184.336, 10.1537, 0.66", "-96.4997, -185.593, 10.1919, 0.66", "-97.6764, -187.067, 10.2372, 0.59", "-99.0852, -188.43, 10.2873, 0.52", "-100.585, -189.671, 10.3616, 0.44", "-101.454, -190.362, 10.4265, 0.44", "-102.116, -190.928, 10.5002, 0.44", "-102.594, -191.411, 10.5775, 0.44", "-103.469, -192.478, 10.8062, 0.44", "-104.556, -194.011, 11.1869, 0.52", "-105.637, -195.676, 11.6585, 0.52", "-106.483, -197.018, 12.0531, 0.59", "-107.229, -198.173, 12.4278, 0.44", "-107.927, -199.199, 12.8036, 0.44", "-108.934, -200.597, 13.4023, 0.66", "-109.757, -201.656, 13.9367, 0.66", "-110.646, -202.773, 14.5834, 0.74", "-111.748, -204.239, 15.5484, 0.52", "-112.427, -205.287, 16.3166, 0.52", "-112.985, -206.444, 17.2057, 0.66", "-113.346, -207.648, 18.1071, 0.59", "-113.502, -208.788, 18.8459, 0.44", "-113.523, -210.073, 19.5217, 0.44", "-113.474, -211.638, 20.1512, 0.44", "-113.436, -213.188, 20.6625, 0.52", "-113.505, -215.194, 21.2106, 0.88", "-113.747, -216.691, 21.5745, 0.96", "-114.251, -218.147, 21.9361, 0.74", "-115.037, -219.643, 22.3652, 0.44", "-115.562, -220.416, 22.6182, 0.74", "-116.257, -221.319, 22.9923, 1.03", "-117.12, -222.421, 23.5607, 0.44", "-117.898, -223.545, 24.1393, 0.37", "-118.282, -224.36, 24.5284, 0.37", "-118.481, -225.147, 24.8438, 0.74", "-118.647, -226.456, 25.3571, 1.11", "-118.697, -227.602, 25.8158, 0.74", "-118.714, -229.16, 26.4507, 0.59", "-118.798, -231.183, 27.3263, 0.52", "-118.966, -232.498, 27.973, 0.29", "-119.222, -233.672, 28.6321, 0.29", "-119.465, -234.442, 29.0949, 0.81", "-119.892, -235.587, 29.7461, 1.11", "-120.598, -237.306, 30.5887, 0.52", "-121.249, -238.95, 31.2085, 0.44", "-121.635, -240.127, 31.5541, 0.88", "-121.99, -241.623, 31.8558, 0.88", "-122.259, -243.561, 32.1225, 0.66", "-122.308, -245.084, 32.2747, 0.37", "-122.215, -246.711, 32.3875, 0.29", "-122.116, -247.772, 32.4481, 0.29", "-122.053, -248.506, 32.5074, 0.74", "-122.015, -249.49, 32.649, 1.03", "-122.125, -250.891, 32.964, 0.29", "-122.434, -252.175, 33.2727, 0.22", "-122.755, -252.982, 33.4228, 0.22", "-123.054, -253.626, 33.5055, 0.44", "-123.571, -254.762, 33.6105, 0.66", "-124.04, -255.922, 33.6756, 0.29", "-124.349, -256.923, 33.6947, 0.29", "-124.511, -257.769, 33.7391, 0.29", "-124.63, -258.951, 33.8621, 0.66", "-124.73, -260.333, 34.1007, 0.37", "-124.792, -261.331, 34.326, 0.44", "-124.898, -262.392, 34.6434, 0.37", "-125.067, -263.443, 35.0725, 0.37", "-125.28, -264.442, 35.6057, 0.74", "-125.596, -265.781, 36.4622, 1.11", "-125.756, -266.581, 37.0482, 1.11", "-125.905, -267.842, 38.1005, 0.66", "-125.928, -269.232, 39.3899, 0.44", "-125.844, -270.362, 40.4801, 0.44", "-125.699, -271.423, 41.5275, 0.29", "-125.528, -272.502, 42.5871, 0.29", "-125.438, -273.391, 43.4087, 0.29", "-125.447, -273.982, 43.8334, 0.29", "-125.695, -274.9, 44.2273, 0.59", "-126.122, -275.804, 44.4393, 0.96", "-126.725, -276.881, 44.6295, 0.96", "-127.397, -278.069, 44.838, 0.44", "-128.239, -279.71, 45.1402, 0.29", "-128.713, -280.815, 45.3795, 0.29", "-129.108, -281.98, 45.6844, 0.66", "-129.434, -283.244, 46.0405, 0.44", "-129.714, -284.454, 46.3808, 0.29", "-129.944, -285.441, 46.6307, 0.44", "-130.199, -286.492, 46.8938, 1.25", "-130.463, -287.559, 47.1168, 1.25", "-130.818, -288.993, 47.3887, 1.03", "-131.235, -290.616, 47.6621, 0.52", "-131.674, -292.229, 47.9447, 0.29", "-132.074, -293.652, 48.2269, 0.29", "-132.314, -294.462, 48.4134, 0.29", "-132.635, -295.456, 48.6765, 0.37", "-132.925, -296.158, 48.8844, 0.29", "-133.276, -296.795, 49.0559, 0.29", "-133.676, -297.349, 49.1458, 0.52", "-134.376, -298.202, 49.1747, 1.18", "-134.972, -298.922, 49.1472, 1.18", "-136.142, -300.457, 48.9859, 0.81", "-136.861, -301.65, 48.7755, 0.29", "-137.234, -302.533, 48.581, 0.29", "-137.417, -303.23, 48.425, 0.52", "-137.557, -304.259, 48.2303, 0.88", "-137.655, -305.595, 48.0792, 0.29", "-137.714, -307.022, 48.0897, 0.22", "-137.805, -308.019, 48.2801, 0.22", "-137.942, -308.782, 48.5432, 0.44", "-138.188, -309.691, 49.0131, 0.59", "-138.673, -310.989, 49.862, 0.29", "-139.104, -311.941, 50.5692, 0.81", "-139.596, -312.939, 51.3308, 0.81", "-139.919, -313.61, 51.7968, 0.81", "-140.536, -314.985, 52.6211, 0.29", "-140.971, -315.985, 53.0965, 0.29", "-141.312, -316.771, 53.4066, 0.88", "-141.822, -317.845, 53.7407, 1.18", "-142.471, -319.097, 54.0905, 0.52", "-142.886, -319.881, 54.3032, 0.37", "-143.473, -321.067, 54.5958, 0.22", "-143.803, -321.855, 54.8073, 0.44", "-144.159, -322.95, 55.1181, 0.96", "-144.501, -324.441, 55.5041, 0.22", "-144.637, -325.357, 55.708, 0.22", "-144.756, -326.441, 55.9006, 0.37", "-144.855, -327.284, 56.0093, 0.37", "-145.085, -328.604, 56.0757, 0.22", "-145.382, -329.785, 56.0692, 0.22", "-145.725, -330.787, 56.0343, 0.81", "-146.235, -332.045, 56.0058, 0.88", "-146.818, -333.402, 56.027, 0.29", "-147.369, -334.741, 56.1332, 0.22", "-147.772, -335.824, 56.2847, 0.22", "-148.162, -337.04, 56.521, 0.96", "-148.487, -338.245, 56.7435, 0.81", "-148.783, -339.57, 56.982, 0.37", "-149.126, -341.293, 57.2783, 0.22", "-149.425, -342.698, 57.4777, 0.22", "-149.768, -344.165, 57.5775, 0.22", "-150.114, -345.555, 57.5726, 0.22", "-150.249, -346.108, 57.5566, 0.59", "-150.489, -347.132, 57.5183, 1.03", "-150.866, -348.759, 57.4644, 0.37", "-151.175, -350.124, 57.488, 0.22", "-151.376, -350.959, 57.6034, 0.22", "-151.766, -352.324, 58.0605, 0.22", "-152.052, -353.158, 58.4672, 0.22", "-152.298, -353.779, 58.8777, 0.22", "-152.565, -354.428, 59.3663, 0.37", "-152.955, -355.386, 60.0895, 0.22", "-153.212, -356.069, 60.5739, 0.22", "-153.391, -356.62, 60.9152, 0.74", "-153.575, -357.46, 61.4299, 1.03", "-153.683, -358.602, 62.1736, 0.66", "-153.682, -359.636, 62.8629, 0.29", "-153.651, -360.337, 63.3439, 0.29", "-153.627, -360.805, 63.6523, 0.29", "-153.598, -361.599, 64.1495, 0.29", "-153.586, -362.64, 64.7865, 0.22", "-153.591, -363.134, 65.057, 0.22", "-153.62, -364.176, 65.5634, 0.22", "-153.663, -365.21, 66.0409, 0.22", "-153.742, -366.617, 66.6926, 0.74", "-153.845, -367.878, 67.2308, 0.74", "-153.969, -369.041, 67.6993, 0.74", "-154.104, -370.174, 68.1369, 0.37", "-154.285, -371.579, 68.693, 0.37", "-154.435, -372.584, 69.1152, 0.37", "-154.609, -373.707, 69.5996, 0.88", "-154.779, -375.05, 70.1114, 0.88", "-154.892, -376.18, 70.558, 0.44", "-155.019, -377.581, 71.1293, 0.22", "-155.088, -378.296, 71.4503, 0.22", "-155.204, -379.263, 71.9459, 0.37", "-155.444, -380.719, 72.87, 0.74", "-155.846, -381.994, 73.9156, 0.22", "-156.349, -382.77, 74.7118, 0.22", "-156.769, -383.105, 75.1385, 0.22", "-157.336, -383.416, 75.5893, 0.22", "-157.818, -383.655, 75.8892, 0.22", "-158.859, -384.224, 76.5116, 0.22", "-159.476, -384.677, 76.8438, 0.81", "-160.198, -385.402, 77.2644, 1.18", "-160.644, -385.993, 77.5471, 1.18", "-161.42, -387.313, 78.086, 0.37", "-162.24, -389.019, 78.6703, 0.22", "-162.799, -390.423, 79.0796, 0.22", "-163.126, -391.307, 79.2997, 0.22", "-163.575, -392.537, 79.515, 0.37", "-164.043, -393.782, 79.6642, 0.74", "-164.56, -395.041, 79.727, 0.59", "-165.092, -396.153, 79.6702, 0.29", "-165.655, -397.19, 79.5916, 0.15", "-166.325, -398.373, 79.4891, 0.15", "-166.682, -399.023, 79.4596, 0.44", "-167.263, -400.175, 79.5026, 0.66", "-167.726, -401.4, 79.7152, 0.22", "-167.988, -402.676, 80.2313, 0.22", "-168.044, -403.541, 80.8, 0.81", "-168.056, -404.599, 81.7063, 0.96", "-168.066, -405.464, 82.5617, 0.96", "-168.076, -406.255, 83.4352, 0.44", "-168.121, -407.115, 84.4502, 0.29", "-168.246, -407.877, 85.2934, 0.22", "-168.488, -408.636, 85.9826, 0.22", "-168.853, -409.433, 86.504, 0.22", "-169.09, -409.883, 86.7211, 0.22", "-169.303, -410.253, 86.8564, 0.74", "-169.849, -411.176, 87.0875, 1.03", "-170.642, -412.551, 87.3387, 0.22", "-171.167, -413.509, 87.4868, 0.22", "-171.432, -414.025, 87.5625, 0.74", "-171.736, -414.657, 87.6349, 0.96", "-172.188, -415.654, 87.7759, 0.29", "-172.539, -416.463, 87.9104, 0.22", "-172.791, -417.073, 88.0223, 0.22", "-173.145, -417.931, 88.2039, 0.37", "-173.641, -418.956, 88.4412, 0.22", "-174.365, -420.207, 88.8248, 0.22", "-174.656, -420.647, 89.0157, 0.22", "-174.961, -421.049, 89.2417, 0.44", "-175.449, -421.644, 89.6451, 0.88", "-176.059, -422.349, 90.1998, 0.44", "-176.875, -423.308, 91.0076, 0.22", "-177.461, -424.052, 91.5783, 0.22", "-178.036, -424.83, 92.1275, 0.22", "-178.468, -425.42, 92.5046, 0.22", "-178.783, -425.87, 92.7524, 0.22", "-179.085, -426.336, 92.9509, 0.59", "-179.664, -427.233, 93.2461, 1.25", "-180.481, -428.439, 93.5862, 0.44", "-181.228, -429.512, 93.8639, 0.44", "-181.779, -430.303, 94.0908, 0.52", "-182.669, -431.609, 94.581, 0.22", "-183.318, -432.554, 95.0075, 0.15", "-183.904, -433.395, 95.4583, 0.15", "-184.148, -433.732, 95.6588, 0.37", "-184.942, -434.761, 96.3115, 1.03", "-186.244, -436.311, 97.3835, 0.22", "-186.841, -436.958, 97.8705, 0.22", "-187.205, -437.348, 98.1617, 0.22", "-187.853, -438.053, 98.6897, 0.22", "-188.677, -438.931, 99.321, 1.47" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-56.9222, 158.157, 53.4277, 0.07", "-57.8765, 159.265, 54.077, 0.07", "-58.5213, 160.049, 54.4986, 0.66", "-59.1619, 160.856, 54.9043, 0.15", "-59.7627, 161.628, 55.2779, 0.59", "-60.2979, 162.311, 55.6125, 0.15", "-60.7197, 162.85, 55.8762, 0.52", "-61.1259, 163.419, 56.1065, 0.15", "-61.5469, 164.03, 56.3349, 0.29", "-61.9422, 164.616, 56.5436, 0.07", "-62.2472, 165.05, 56.7131, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-56.9222, 158.157, 53.4277, 0.22", "-57.2352, 159.37, 54.0918, 0.22", "-58.0778, 161.12, 54.8934, 0.07", "-58.5997, 161.903, 55.1873, 0.07", "-59.3357, 162.849, 55.4632, 0.29", "-60.3212, 164.017, 55.7281, 0.07", "-61.3571, 165.213, 55.9493, 0.07", "-62.1296, 165.967, 56.0021, 0.52", "-63.356, 167.03, 55.963, 0.07", "-64.1154, 167.671, 55.895, 0.07", "-64.7022, 168.181, 55.8216, 0.07", "-65.0477, 168.515, 55.772, 0.22", "-65.8164, 169.362, 55.6535, 0.44", "-66.9371, 170.742, 55.4605, 0.07", "-67.46, 171.49, 55.3756, 0.07", "-67.7205, 171.911, 55.3473, 0.52", "-68.2663, 172.848, 55.3096, 0.74", "-69.0225, 174.21, 55.2844, 0.07", "-69.5138, 175.159, 55.2967, 0.07", "-69.971, 176.122, 55.362, 0.37", "-70.6643, 177.67, 55.5406, 0.07", "-70.9852, 178.394, 55.6629, 0.22", "-71.186, 178.864, 55.7843, 0.37", "-71.5426, 179.781, 56.1296, 0.96", "-71.9947, 181.11, 56.7911, 0.15", "-72.1419, 181.631, 57.1132, 0.15", "-72.3373, 182.654, 57.8603, 0.59", "-72.5438, 184.01, 58.9752, 0.07", "-72.7024, 184.899, 59.8, 0.07", "-72.8835, 185.832, 60.7727, 0.59", "-73.1186, 186.728, 61.7839, 0.15", "-73.4196, 187.596, 62.7833, 0.15", "-73.6958, 188.224, 63.5349, 0.88", "-74.3307, 189.294, 64.8193, 0.07", "-74.7963, 189.953, 65.5484, 0.07", "-75.5201, 190.889, 66.4585, 0.07", "-75.928, 191.387, 66.8723, 0.81", "-76.4161, 191.991, 67.3322, 1.25", "-77.2395, 193.013, 68.0447, 0.22", "-78.1494, 194.169, 68.804, 0.15", "-79.1098, 195.368, 69.5654, 0.37", "-80.4469, 197.075, 70.6373, 0.07", "-81.2468, 198.111, 71.2818, 0.07", "-82.0894, 199.233, 71.9561, 0.96" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-1.89325, -62.6289, -33.9224, 0.22", "-1.44383, -62.7734, -34.3477, 0.22", "-1.23442, -62.8779, -34.5475, 0.22", "-1.09731, -62.9743, -34.6954, 0.22", "-1.00396, -63.063, -34.8084, 0.22", "-0.881903, -63.2085, -34.9691, 0.29", "-0.719394, -63.4584, -35.2012, 0.29", "-0.643224, -63.7035, -35.3409, 0.29", "-0.604099, -64.0001, -35.4525, 0.29", "-0.589934, -64.2854, -35.523, 0.29", "-0.588398, -64.4573, -35.5499, 0.52", "-0.598287, -64.7815, -35.5874, 0.88", "-0.624567, -65.2604, -35.615, 0.29", "-0.653657, -65.7633, -35.6174, 0.29", "-0.672542, -66.1678, -35.5961, 0.52", "-0.683275, -66.4362, -35.5735, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.89325, -62.6289, -33.9224, 0.15", "-2.2644, -63.535, -33.072, 0.15", "-2.46662, -64.0286, -32.6087, 0.15", "-2.66031, -64.5015, -32.165, 0.15", "-2.81541, -64.8801, -31.8096, 0.15", "-2.99732, -65.3242, -31.3928, 0.15", "-3.22918, -65.8903, -30.8616, 0.15" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-188.677, -438.931, 99.321, 0.22", "-189.562, -439.388, 100.813, 0.22", "-189.825, -439.623, 101.314, 0.22", "-190.076, -439.911, 101.808, 0.22", "-190.44, -440.496, 102.563, 0.22", "-190.77, -441.139, 103.269, 0.22", "-190.954, -441.513, 103.657, 0.37", "-191.217, -442.142, 104.183, 1.03", "-191.355, -442.428, 104.402, 1.03", "-191.996, -443.556, 105.246, 0.37", "-192.625, -444.482, 105.886, 0.29", "-192.99, -444.932, 106.207, 0.29", "-193.705, -445.676, 106.809, 0.59", "-194.417, -446.338, 107.4, 0.22", "-194.903, -446.766, 107.829, 0.52", "-195.747, -447.493, 108.633, 0.96", "-196.707, -448.377, 109.66, 0.22", "-197.316, -449.0, 110.378, 0.22", "-197.692, -449.425, 110.899, 0.22", "-198.016, -449.837, 111.414, 0.22", "-198.325, -450.282, 111.988, 0.22", "-198.508, -450.612, 112.475, 0.22", "-198.727, -451.406, 113.426, 1.4" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-188.677, -438.931, 99.321, 0.22", "-187.474, -439.294, 100.668, 0.22", "-186.728, -439.535, 101.396, 0.22", "-186.279, -439.686, 101.729, 0.22", "-185.542, -439.94, 102.218, 0.07", "-185.012, -440.122, 102.57, 0.07", "-184.775, -440.204, 102.728, 0.07", "-183.913, -440.493, 103.201, 0.88", "-182.159, -441.103, 104.004, 0.15", "-181.097, -441.485, 104.425, 0.44" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-82.0894, 199.233, 71.9561, 0.07", "-82.2467, 200.678, 73.1304, 0.07", "-82.3215, 201.596, 73.8855, 0.59", "-82.4079, 203.19, 75.1917, 0.15", "-82.4256, 204.377, 76.1804, 0.74", "-82.408, 205.441, 77.0848, 0.07", "-82.3908, 206.476, 77.9635, 0.07", "-82.3333, 207.207, 78.6309, 0.07", "-82.2347, 208.062, 79.4286, 0.74", "-82.0363, 209.429, 80.6511, 0.07", "-81.9041, 210.282, 81.3923, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-82.0894, 199.233, 71.9561, 0.07", "-83.3516, 199.199, 71.9096, 0.07", "-84.4091, 199.215, 71.7709, 0.07", "-85.5125, 199.296, 71.5257, 0.07", "-85.9531, 199.351, 71.3847, 0.29", "-86.8508, 199.495, 71.0658, 0.74", "-87.7959, 199.676, 70.7217, 0.29", "-88.6581, 199.901, 70.3813, 0.29", "-89.7869, 200.229, 69.9867, 0.29", "-91.0439, 200.596, 69.6713, 0.29", "-91.4719, 200.708, 69.6175, 0.74", "-92.2414, 200.878, 69.6662, 1.47", "-93.3273, 201.077, 69.9443, 0.52", "-94.3075, 201.23, 70.3712, 0.22", "-95.3456, 201.375, 70.9666, 0.15", "-96.0537, 201.461, 71.4286, 0.29", "-97.1025, 201.573, 72.1443, 0.07", "-97.5447, 201.615, 72.4642, 0.52", "-98.6169, 201.735, 73.2607, 0.07", "-99.3821, 201.871, 73.8644, 0.81" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.683275, -66.4362, -35.5735, 0.22", "-0.0888552, -67.2308, -35.7032, 0.22", "0.372045, -67.8844, -35.8401, 0.22", "0.748511, -68.4291, -35.9677, 0.22", "1.05679, -68.8579, -36.0996, 0.22", "1.68092, -69.6918, -36.4105, 0.22", "2.01768, -70.1174, -36.586, 0.22", "2.33074, -70.4913, -36.7755, 0.22", "2.64041, -70.8706, -36.9955, 0.22", "3.09156, -71.4409, -37.4047, 0.37", "3.34282, -71.7693, -37.6696, 0.52", "3.5293, -72.0195, -37.8775, 0.29", "3.5887, -72.1098, -37.951, 0.29", "3.78721, -72.5517, -38.269, 0.22", "3.88918, -73.1773, -38.6119, 0.22", "3.89159, -73.485, -38.743, 0.22", "3.8645, -73.796, -38.8623, 0.29", "3.82326, -74.0681, -38.9628, 0.29", "3.70057, -74.7879, -39.2052, 0.15", "3.63744, -75.1545, -39.2934, 0.22" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-0.683275, -66.4362, -35.5735, 0.07", "-1.37939, -66.9011, -34.3478, 0.07", "-2.45612, -67.6201, -32.4519, 0.07", "-3.3666, -68.2281, -30.8488, 0.07", "-3.80636, -68.5217, -30.0745, 0.29", "-4.76844, -69.1642, -28.3805, 0.22", "-5.15713, -69.4237, -27.6961, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-198.727, -451.406, 113.426, 0.07", "-198.282, -450.967, 113.775, 0.07", "-197.923, -450.598, 114.058, 0.07", "-197.641, -450.316, 114.268, 0.22", "-197.5, -450.179, 114.36, 0.22", "-197.219, -449.903, 114.525, 0.22", "-196.766, -449.487, 114.749, 0.15", "-196.437, -449.211, 114.853, 0.15", "-195.988, -448.892, 114.919, 0.15", "-195.684, -448.721, 114.936, 0.37", "-195.395, -448.602, 114.938, 0.59", "-194.651, -448.417, 114.913, 0.15", "-193.938, -448.328, 114.847, 0.15", "-193.646, -448.312, 114.806, 0.15", "-193.132, -448.328, 114.717, 0.29", "-192.575, -448.389, 114.623, 0.15", "-192.08, -448.478, 114.539, 0.52", "-191.329, -448.653, 114.409, 0.15", "-190.895, -448.763, 114.343, 0.29", "-190.329, -448.894, 114.266, 0.29", "-189.788, -449.012, 114.188, 0.15", "-189.233, -449.134, 114.104, 0.44", "-188.786, -449.227, 114.021, 0.15", "-188.438, -449.295, 113.94, 0.22", "-187.664, -449.415, 113.721, 0.07", "-187.225, -449.454, 113.578, 0.59", "-186.527, -449.467, 113.299, 0.07", "-185.822, -449.436, 112.962, 0.37", "-185.277, -449.39, 112.664, 0.15", "-185.048, -449.363, 112.515, 0.44", "-184.785, -449.325, 112.317, 0.44", "-184.202, -449.221, 111.871, 0.07", "-183.787, -449.148, 111.559, 0.07", "-183.346, -449.092, 111.23, 0.07", "-182.84, -449.052, 110.867, 0.07", "-182.553, -449.048, 110.669, 0.07", "-182.061, -449.073, 110.338, 0.37", "-181.353, -449.163, 109.902, 0.07", "-181.017, -449.223, 109.713, 0.07", "-180.421, -449.34, 109.4, 0.52", "-179.669, -449.503, 109.031, 0.07", "-179.293, -449.593, 108.851, 0.07", "-178.72, -449.753, 108.584, 0.52", "-178.046, -449.984, 108.312, 0.15", "-177.682, -450.124, 108.192, 0.15", "-177.589, -450.165, 108.167, 0.15", "-177.288, -450.297, 108.107, 0.29", "-177.055, -450.398, 108.071, 0.29", "-176.438, -450.664, 107.997, 0.07", "-175.916, -450.857, 107.961, 0.07", "-175.617, -450.951, 107.942, 0.15", "-175.053, -451.108, 107.9, 0.07", "-174.818, -451.167, 107.876, 0.07", "-174.417, -451.276, 107.831, 0.29", "-173.559, -451.537, 107.705, 0.07", "-173.096, -451.701, 107.609, 0.07", "-172.813, -451.806, 107.524, 0.29", "-172.404, -451.956, 107.363, 0.37", "-171.663, -452.238, 106.994, 0.07", "-171.171, -452.454, 106.705, 0.15", "-170.631, -452.739, 106.354, 0.15", "-170.109, -453.018, 106.011, 0.15", "-169.744, -453.192, 105.784, 0.29", "-169.378, -453.355, 105.553, 0.59", "-168.968, -453.526, 105.289, 0.88", "-168.456, -453.756, 105.006, 0.29", "-167.977, -454.002, 104.823, 0.29", "-167.467, -454.308, 104.704, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-198.727, -451.406, 113.426, 0.44", "-199.546, -451.961, 113.195, 0.44", "-200.543, -452.699, 113.012, 0.22", "-201.403, -453.388, 112.918, 0.66", "-202.209, -454.092, 112.881, 0.15", "-202.818, -454.652, 112.88, 0.15", "-203.181, -454.995, 112.907, 0.15", "-203.761, -455.564, 113.086, 0.15", "-204.119, -455.917, 113.279, 0.52", "-204.731, -456.502, 113.689, 0.96", "-205.437, -457.159, 114.197, 0.66", "-206.118, -457.765, 114.694, 0.22", "-207.21, -458.74, 115.47, 0.22", "-207.643, -459.149, 115.767, 0.22", "-208.078, -459.591, 116.072, 0.22", "-208.384, -459.93, 116.293, 0.22", "-208.737, -460.365, 116.534, 0.37", "-209.221, -460.98, 116.808, 0.88", "-209.688, -461.549, 117.032, 0.52", "-210.335, -462.28, 117.332, 0.15", "-210.836, -462.784, 117.553, 0.15", "-211.378, -463.274, 117.767, 0.81", "-212.232, -464.019, 118.053, 0.15", "-213.186, -464.822, 118.322, 0.15", "-213.522, -465.109, 118.398, 0.66", "-214.048, -465.601, 118.477, 1.03", "-214.832, -466.464, 118.533, 0.15", "-215.366, -467.165, 118.529, 0.15", "-215.457, -467.302, 118.518, 0.15", "-215.731, -467.7, 118.471, 0.59", "-216.082, -468.148, 118.415, 0.81", "-216.735, -468.868, 118.328, 0.22", "-217.184, -469.309, 118.282, 0.22", "-217.977, -469.996, 118.228, 0.44", "-218.8, -470.648, 118.16, 0.15", "-219.336, -471.016, 118.104, 0.15", "-219.839, -471.307, 118.041, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-219.839, -471.307, 118.041, 0.22", "-220.477, -472.14, 117.87, 0.22", "-220.738, -472.458, 117.802, 0.22", "-221.184, -472.99, 117.698, 0.29", "-221.631, -473.523, 117.579, 0.15", "-221.924, -473.877, 117.479, 0.15", "-222.21, -474.241, 117.362, 0.15", "-222.492, -474.596, 117.242, 0.52", "-222.818, -475.063, 117.07, 0.74", "-223.286, -475.899, 116.745, 0.29", "-223.542, -476.467, 116.51, 0.15", "-223.717, -476.92, 116.328, 0.15", "-223.799, -477.161, 116.24, 0.15", "-223.916, -477.613, 116.092, 0.37", "-224.038, -478.21, 115.942, 0.15", "-224.132, -478.774, 115.858, 0.15", "-224.23, -479.391, 115.805, 0.22", "-224.306, -479.863, 115.774, 0.81", "-224.409, -480.419, 115.728, 0.66", "-224.61, -481.297, 115.648, 0.44", "-224.76, -481.81, 115.592, 0.44", "-225.028, -482.639, 115.491, 0.15", "-225.162, -483.027, 115.434, 0.15", "-225.435, -483.75, 115.306, 0.15", "-225.651, -484.261, 115.205, 0.81", "-226.135, -485.345, 114.989, 0.15", "-226.281, -485.648, 114.929, 0.15", "-226.437, -485.967, 114.866, 0.15", "-226.615, -486.371, 114.795, 0.15", "-226.726, -486.692, 114.753, 0.37", "-226.877, -487.33, 114.674, 0.74", "-226.998, -488.093, 114.576, 0.22", "-227.078, -488.69, 114.492, 0.22", "-227.131, -489.237, 114.419, 0.59", "-227.163, -489.918, 114.346, 0.22", "-227.171, -490.827, 114.256, 0.15", "-227.164, -491.248, 114.22, 0.15", "-227.162, -491.653, 114.196, 0.37", "-227.197, -492.226, 114.168, 0.66", "-227.321, -492.838, 114.127, 0.22", "-227.519, -493.334, 114.094, 0.15", "-227.739, -493.702, 114.081, 0.15", "-227.99, -494.052, 114.071, 0.29", "-228.241, -494.366, 114.062, 0.88", "-228.777, -495.005, 114.052, 0.22", "-229.169, -495.449, 114.068, 0.15", "-229.569, -495.907, 114.105, 0.15", "-229.742, -496.115, 114.127, 0.15", "-230.076, -496.547, 114.177, 0.22", "-230.575, -497.231, 114.244, 0.15", "-231.225, -498.153, 114.318, 0.15", "-231.427, -498.427, 114.333, 0.37", "-231.728, -498.832, 114.329, 0.37", "-232.103, -499.346, 114.3, 0.22", "-232.497, -499.932, 114.247, 0.22", "-232.766, -500.397, 114.193, 0.66", "-233.02, -500.954, 114.115, 0.66", "-233.38, -501.891, 113.998, 0.15", "-233.495, -502.213, 113.954, 0.15", "-233.728, -502.918, 113.857, 0.59", "-233.905, -503.503, 113.778, 0.15", "-234.097, -504.215, 113.675, 0.15", "-234.215, -504.731, 113.588, 0.44", "-234.423, -505.667, 113.391, 0.15", "-234.5, -505.993, 113.304, 0.15", "-234.614, -506.379, 113.17, 0.15", "-234.751, -506.749, 113.012, 0.37", "-235.037, -507.381, 112.698, 0.44", "-235.367, -508.018, 112.344, 0.22", "-235.502, -508.23, 112.223, 0.22", "-235.794, -508.597, 112.014, 0.15", "-236.125, -508.925, 111.833, 0.15", "-236.28, -509.05, 111.765, 0.15", "-236.583, -509.259, 111.657, 0.29", "-237.072, -509.594, 111.487, 0.37", "-237.529, -509.93, 111.327, 0.22", "-238.038, -510.359, 111.16, 0.15", "-238.585, -510.852, 110.984, 0.29", "-239.073, -511.31, 110.82, 0.15", "-239.379, -511.604, 110.712, 0.15", "-239.778, -511.986, 110.572, 0.52", "-240.412, -512.578, 110.342, 0.15", "-240.846, -512.992, 110.167, 0.15", "-241.421, -513.579, 109.865, 0.15", "-241.754, -513.933, 109.641, 0.52", "-242.052, -514.232, 109.412, 0.52", "-242.578, -514.745, 108.955, 0.15", "-242.864, -515.009, 108.675, 0.15", "-243.469, -515.58, 108.005, 0.15", "-243.782, -515.893, 107.602, 0.29", "-244.125, -516.286, 107.074, 0.96" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-219.839, -471.307, 118.041, 0.88", "-220.5, -471.814, 118.569, 0.88", "-221.314, -472.462, 119.15, 0.22", "-222.085, -473.122, 119.662, 0.15", "-222.725, -473.711, 120.071, 0.15", "-223.088, -474.071, 120.294, 0.37", "-223.618, -474.648, 120.608, 1.03", "-224.304, -475.489, 120.99, 0.44", "-224.888, -476.314, 121.278, 0.15", "-225.177, -476.781, 121.419, 0.15", "-225.518, -477.388, 121.596, 0.37", "-226.01, -478.29, 121.869, 0.15", "-226.308, -478.809, 122.041, 0.29", "-226.963, -479.813, 122.405, 0.07", "-227.591, -480.603, 122.681, 0.07", "-228.276, -481.333, 122.953, 0.07", "-228.727, -481.729, 123.113, 0.29", "-229.665, -482.41, 123.406, 0.07", "-230.44, -482.884, 123.635, 0.59", "-231.552, -483.459, 123.964, 0.15", "-232.264, -483.793, 124.198, 0.15", "-233.249, -484.24, 124.609, 0.15", "-233.754, -484.487, 124.863, 0.37", "-234.681, -485.004, 125.426, 0.07", "-235.226, -485.363, 125.822, 0.22", "-235.836, -485.833, 126.299, 0.07", "-236.46, -486.348, 126.762, 0.07", "-237.025, -486.834, 127.157, 0.59", "-237.902, -487.575, 127.684, 0.15", "-238.603, -488.157, 128.031, 0.74", "-239.828, -489.109, 128.513, 0.07", "-240.854, -489.86, 128.865, 0.07", "-241.725, -490.455, 129.127, 0.29", "-242.994, -491.262, 129.478, 0.07", "-243.735, -491.702, 129.663, 0.44", "-245.309, -492.569, 130.026, 0.07", "-245.928, -492.893, 130.161, 0.07", "-246.797, -493.341, 130.36, 0.37", "-248.227, -494.099, 130.718, 0.07", "-249.673, -494.893, 131.101, 0.07", "-250.578, -495.427, 131.349, 0.37", "-251.777, -496.216, 131.682, 0.15", "-252.865, -497.023, 131.978, 0.07", "-253.64, -497.634, 132.203, 0.22", "-254.194, -498.116, 132.377, 0.52", "-254.736, -498.668, 132.561, 0.88", "-255.444, -499.52, 132.82, 0.44", "-256.007, -500.367, 133.029, 0.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_35", "dend_32", "dend_25", "dend_0", "dend_46", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_26", "dend_22", "dend_1", "dend_48", "dend_47", "dend_38", "dend_37", "dend_30", "dend_27", "dend_24", "dend_23", "dend_13", "dend_2", "dend_56", "dend_49", "dend_40", "dend_39", "dend_29", "dend_28", "dend_21", "dend_14", "dend_12", "dend_3", "dend_51", "dend_50", "dend_42", "dend_41", "dend_20", "dend_15", "dend_11", "dend_4", "dend_55", "dend_52", "dend_17", "dend_16", "dend_6", "dend_5", "dend_54", "dend_53", "dend_19", "dend_18", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_35", "dend_32", "dend_25", "dend_0", "dend_46", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_26", "dend_22", "dend_1", "dend_48", "dend_47", "dend_38", "dend_37", "dend_30", "dend_27", "dend_24", "dend_23", "dend_13", "dend_2", "dend_56", "dend_49", "dend_40", "dend_39", "dend_29", "dend_28", "dend_21", "dend_14", "dend_12", "dend_3", "dend_51", "dend_50", "dend_42", "dend_41", "dend_20", "dend_15", "dend_11", "dend_4", "dend_55", "dend_52", "dend_17", "dend_16", "dend_6", "dend_5", "dend_54", "dend_53", "dend_19", "dend_18", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L5_NBC_cb87ec754a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_0
create dend_22
public dend_22
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_56, id: dend_56, parent: dend_48
create dend_56
public dend_56
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_13
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, axon_0, axon_0, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.450000292725816)
    connect dend_35(0), soma_0(0.450000292725816)
    connect dend_32(0), soma_0(0.450000292725816)
    connect dend_25(0), soma_0(0.450000292725816)
    connect dend_0(0), soma_0(0.450000292725816)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_56(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_21(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.277629, -9.42436, 0.0, 2.9454 ) }
    soma_0 { pt3dadd( -0.225418, -8.4907, 0.0, 4.92187 ) }
    soma_0 { pt3dadd( -0.173208, -7.55704, 0.0, 6.69655 ) }
    soma_0 { pt3dadd( -0.120997, -6.62338, 0.0, 8.28957 ) }
    soma_0 { pt3dadd( -0.0687862, -5.68972, 0.0, 9.36061 ) }
    soma_0 { pt3dadd( -0.0165755, -4.75606, 0.0, 10.2397 ) }
    soma_0 { pt3dadd( 0.0356352, -3.8224, 0.0, 11.0293 ) }
    soma_0 { pt3dadd( 0.087846, -2.88873, 0.0, 11.6457 ) }
    soma_0 { pt3dadd( 0.140057, -1.95507, 0.0, 12.2691 ) }
    soma_0 { pt3dadd( 0.192267, -1.02141, 0.0, 12.5588 ) }
    soma_0 { pt3dadd( 0.244478, -0.0877535, 0.0, 12.7806 ) }
    soma_0 { pt3dadd( 0.296689, 0.845907, 0.0, 13.0398 ) }
    soma_0 { pt3dadd( 0.3489, 1.77957, 0.0, 13.1732 ) }
    soma_0 { pt3dadd( 0.40111, 2.71323, 0.0, 13.0581 ) }
    soma_0 { pt3dadd( 0.453321, 3.64689, 0.0, 12.8607 ) }
    soma_0 { pt3dadd( 0.505532, 4.58055, 0.0, 12.1633 ) }
    soma_0 { pt3dadd( 0.557743, 5.51421, 0.0, 11.3807 ) }
    soma_0 { pt3dadd( 0.609953, 6.44787, 0.0, 10.3357 ) }
    soma_0 { pt3dadd( 0.662164, 7.38153, 0.0, 8.86929 ) }
    soma_0 { pt3dadd( 0.714375, 8.31519, 0.0, 6.73974 ) }
    soma_0 { pt3dadd( 0.766585, 9.24885, 0.0, 3.85991 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.0596826, 9.24235, 5.51, 1.4 ) }
    dend_44 { pt3dadd( -0.0596826, 9.24235, 5.51, 1.4 ) }
    dend_44 { pt3dadd( -0.389408, 10.6894, 5.8221, 1.47 ) }
    dend_44 { pt3dadd( -0.617223, 11.7816, 6.04824, 1.47 ) }
    dend_44 { pt3dadd( -0.812459, 12.9078, 6.27216, 1.55 ) }
    dend_44 { pt3dadd( -0.929274, 13.7422, 6.44222, 1.55 ) }
    dend_44 { pt3dadd( -1.0366, 14.6435, 6.61737, 1.55 ) }
    dend_44 { pt3dadd( -1.08536, 15.2487, 6.72895, 1.55 ) }
    dend_44 { pt3dadd( -1.11835, 16.0499, 6.87655, 1.55 ) }
    dend_44 { pt3dadd( -1.13515, 16.9958, 7.05195, 1.55 ) }
    dend_44 { pt3dadd( -1.16021, 18.0944, 7.28183, 1.92 ) }
    dend_44 { pt3dadd( -1.22441, 19.3994, 7.58508, 2.14 ) }
    dend_44 { pt3dadd( -1.33043, 20.6922, 7.9181, 1.18 ) }
    dend_44 { pt3dadd( -1.45156, 21.7495, 8.22047, 1.25 ) }
    dend_44 { pt3dadd( -1.59833, 22.8776, 8.56256, 1.25 ) }
    dend_44 { pt3dadd( -1.81794, 24.2763, 9.00984, 1.33 ) }
    dend_44 { pt3dadd( -2.05115, 25.5575, 9.44461, 1.47 ) }
    dend_44 { pt3dadd( -2.28148, 26.6572, 9.86523, 1.77 ) }
    dend_44 { pt3dadd( -2.55545, 27.7361, 10.3107, 2.14 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 40/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -0.299673, -8.88065, 3.35, 2.29 ) }
    dend_35 { pt3dadd( -0.299673, -8.88065, 3.35, 2.29 ) }
    dend_35 { pt3dadd( -0.616994, -10.0046, 3.85779, 1.62 ) }
    dend_35 { pt3dadd( -0.864885, -11.125, 4.34959, 1.4 ) }
    dend_35 { pt3dadd( -1.04438, -12.093, 4.72578, 1.4 ) }
    dend_35 { pt3dadd( -1.18675, -12.8096, 4.97004, 1.25 ) }
    dend_35 { pt3dadd( -1.35878, -13.5891, 5.20137, 1.25 ) }
    dend_35 { pt3dadd( -1.54849, -14.4421, 5.41144, 1.18 ) }
    dend_35 { pt3dadd( -1.66278, -15.003, 5.51544, 1.18 ) }
    dend_35 { pt3dadd( -1.89714, -16.3397, 5.71539, 1.55 ) }
    dend_35 { pt3dadd( -2.09542, -17.4841, 5.86067, 1.62 ) }
    dend_35 { pt3dadd( -2.31326, -18.6008, 5.98894, 1.47 ) }
    dend_35 { pt3dadd( -2.5791, -19.8215, 6.10006, 1.47 ) }
    dend_35 { pt3dadd( -2.79901, -20.7674, 6.18654, 1.47 ) }
    dend_35 { pt3dadd( -3.03405, -21.8335, 6.27654, 1.47 ) }
    dend_35 { pt3dadd( -3.15615, -22.5441, 6.34985, 1.47 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 56/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 5.04042, 8.08735, -5.24, 2.43 ) }
    dend_32 { pt3dadd( 5.04042, 8.08735, -5.24, 2.43 ) }
    dend_32 { pt3dadd( 6.32117, 9.03932, -5.11255, 1.55 ) }
    dend_32 { pt3dadd( 7.56576, 9.98639, -5.01101, 1.47 ) }
    dend_32 { pt3dadd( 8.4416, 10.6665, -4.9579, 1.25 ) }
    dend_32 { pt3dadd( 10.1095, 11.9742, -4.81249, 1.11 ) }
    dend_32 { pt3dadd( 11.1239, 12.7696, -4.69047, 1.25 ) }
    dend_32 { pt3dadd( 12.4151, 13.7976, -4.46342, 1.4 ) }
    dend_32 { pt3dadd( 13.8972, 14.9932, -4.11441, 1.62 ) }
    dend_32 { pt3dadd( 15.5553, 16.2969, -3.65895, 1.03 ) }
    dend_32 { pt3dadd( 16.7586, 17.1614, -3.28531, 0.88 ) }
    dend_32 { pt3dadd( 17.9688, 17.9138, -2.85091, 1.11 ) }
    dend_32 { pt3dadd( 19.3577, 18.6836, -2.25, 0.88 ) }
    dend_32 { pt3dadd( 20.6735, 19.3423, -1.60608, 1.47 ) }
    dend_32 { pt3dadd( 21.3866, 19.6707, -1.20409, 1.33 ) }
    dend_32 { pt3dadd( 22.6575, 20.2347, -0.447889, 1.03 ) }
    dend_32 { pt3dadd( 23.8568, 20.8057, 0.2396, 1.03 ) }
    dend_32 { pt3dadd( 24.7913, 21.2994, 0.753011, 1.18 ) }
    dend_32 { pt3dadd( 25.8984, 21.9775, 1.34006, 1.18 ) }
    dend_32 { pt3dadd( 27.3342, 22.9651, 2.05451, 1.4 ) }
    dend_32 { pt3dadd( 28.2346, 23.642, 2.45203, 1.03 ) }
    dend_32 { pt3dadd( 29.1846, 24.4032, 2.71061, 0.81 ) }
    dend_32 { pt3dadd( 30.0774, 25.1034, 2.80283, 0.74 ) }
    dend_32 { pt3dadd( 31.0655, 25.8474, 2.76979, 1.11 ) }
    dend_32 { pt3dadd( 32.3718, 26.7754, 2.612, 1.11 ) }
    dend_32 { pt3dadd( 33.3129, 27.3999, 2.43204, 1.33 ) }
    dend_32 { pt3dadd( 35.2983, 28.6448, 2.09253, 1.33 ) }
    dend_32 { pt3dadd( 37.0492, 29.7215, 1.8748, 0.88 ) }
    dend_32 { pt3dadd( 38.4578, 30.614, 1.79969, 1.11 ) }
    dend_32 { pt3dadd( 39.2333, 31.124, 1.81013, 1.33 ) }
    dend_32 { pt3dadd( 40.3841, 31.9404, 1.92822, 1.33 ) }
    dend_32 { pt3dadd( 41.8501, 33.0719, 2.20801, 0.96 ) }
    dend_32 { pt3dadd( 43.0129, 34.0118, 2.56205, 0.96 ) }
    dend_32 { pt3dadd( 44.2453, 35.0723, 3.02781, 1.4 ) }
    dend_32 { pt3dadd( 45.0577, 35.7963, 3.39493, 1.4 ) }
    dend_32 { pt3dadd( 46.0793, 36.7452, 3.88118, 1.4 ) }
    dend_32 { pt3dadd( 47.2549, 37.8597, 4.43613, 1.84 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 93/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.129629, -10.3401, -2.13, 1.84 ) }
    dend_25 { pt3dadd( -0.129629, -10.3401, -2.13, 1.84 ) }
    dend_25 { pt3dadd( -0.685466, -11.6124, -1.99961, 1.55 ) }
    dend_25 { pt3dadd( -1.07779, -12.6473, -1.91143, 1.47 ) }
    dend_25 { pt3dadd( -1.69105, -14.619, -1.71392, 1.47 ) }
    dend_25 { pt3dadd( -2.13136, -16.3708, -1.53383, 1.25 ) }
    dend_25 { pt3dadd( -2.34667, -17.5026, -1.42285, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_25 { pt3dadd( -2.5147, -18.8814, -1.29958, 1.33 ) }
    dend_25 { pt3dadd( -2.61222, -20.6016, -1.16251, 1.7 ) }
    dend_25 { pt3dadd( -2.59507, -22.4207, -1.04146, 1.4 ) }
    dend_25 { pt3dadd( -2.50237, -23.8451, -0.961911, 1.18 ) }
    dend_25 { pt3dadd( -2.28727, -25.9208, -0.841767, 1.4 ) }
    dend_25 { pt3dadd( -2.01259, -28.2186, -0.709179, 1.4 ) }
    dend_25 { pt3dadd( -1.80566, -29.7703, -0.62582, 1.55 ) }
    dend_25 { pt3dadd( -1.56285, -31.4795, -0.557842, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 8/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.330332, 1.55635, -10.46, 3.02 ) }
    dend_0 { pt3dadd( 0.330332, 1.55635, -10.46, 3.02 ) }
    dend_0 { pt3dadd( -1.72964, 1.48027, -10.46, 3.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 11/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.766585, 9.24885, 0.0, 0.673133 ) }
    axon_0 { pt3dadd( 1.60408, 24.2255, 0.0, 0.673133 ) }
    axon_0 { pt3dadd( 2.44158, 39.2021, 0.0, 0.673133 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 14/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.55545, 27.7361, 10.3107, 2.21 ) }
    dend_46 { pt3dadd( -2.61638, 29.5578, 11.4347, 2.21 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 16/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.55545, 27.7361, 10.3107, 0.59 ) }
    dend_45 { pt3dadd( -3.31826, 28.0972, 10.8413, 0.59 ) }
    dend_45 { pt3dadd( -4.3824, 28.6089, 11.498, 0.59 ) }
    dend_45 { pt3dadd( -5.13474, 28.9633, 11.9299, 0.44 ) }
    dend_45 { pt3dadd( -6.25076, 29.4729, 12.5304, 0.29 ) }
    dend_45 { pt3dadd( -6.67671, 29.6615, 12.7399, 0.29 ) }
    dend_45 { pt3dadd( -7.16144, 29.8764, 12.978, 0.29 ) }
    dend_45 { pt3dadd( -7.6488, 30.1163, 13.2098, 0.44 ) }
    dend_45 { pt3dadd( -8.13093, 30.3696, 13.4128, 0.66 ) }
    dend_45 { pt3dadd( -8.84289, 30.773, 13.7381, 0.66 ) }
    dend_45 { pt3dadd( -9.35289, 31.0865, 14.0163, 0.44 ) }
    dend_45 { pt3dadd( -9.93333, 31.468, 14.3829, 0.44 ) }
    dend_45 { pt3dadd( -10.4815, 31.8599, 14.8096, 0.66 ) }
    dend_45 { pt3dadd( -10.7892, 32.1015, 15.096, 0.66 ) }
    dend_45 { pt3dadd( -11.363, 32.5815, 15.696, 0.29 ) }
    dend_45 { pt3dadd( -11.7424, 32.906, 16.1348, 0.29 ) }
    dend_45 { pt3dadd( -12.4185, 33.4564, 16.9144, 0.44 ) }
    dend_45 { pt3dadd( -13.0611, 33.9248, 17.5958, 0.37 ) }
    dend_45 { pt3dadd( -13.6009, 34.267, 18.126, 0.37 ) }
    dend_45 { pt3dadd( -14.1579, 34.5822, 18.618, 0.66 ) }
    dend_45 { pt3dadd( -14.759, 34.894, 19.0905, 1.18 ) }
    dend_45 { pt3dadd( -15.5538, 35.2779, 19.6226, 1.47 ) }
    dend_45 { pt3dadd( -16.4898, 35.6954, 20.157, 0.37 ) }
    dend_45 { pt3dadd( -17.077, 35.9385, 20.4511, 0.29 ) }
    dend_45 { pt3dadd( -17.7674, 36.2074, 20.7655, 0.29 ) }
    dend_45 { pt3dadd( -18.4582, 36.4709, 21.0577, 0.15 ) }
    dend_45 { pt3dadd( -19.0393, 36.7023, 21.2968, 0.37 ) }
    dend_45 { pt3dadd( -19.99, 37.106, 21.7151, 0.22 ) }
    dend_45 { pt3dadd( -20.5804, 37.3904, 21.9725, 0.22 ) }
    dend_45 { pt3dadd( -21.4228, 37.8305, 22.35, 0.22 ) }
    dend_45 { pt3dadd( -21.8689, 38.0742, 22.5519, 0.96 ) }
    dend_45 { pt3dadd( -22.6615, 38.5322, 22.9051, 1.84 ) }
    dend_45 { pt3dadd( -23.2302, 38.8851, 23.162, 1.84 ) }
    dend_45 { pt3dadd( -24.0603, 39.4511, 23.5312, 0.22 ) }
    dend_45 { pt3dadd( -24.5162, 39.7918, 23.7312, 0.22 ) }
    dend_45 { pt3dadd( -24.9079, 40.1066, 23.9101, 0.22 ) }
    dend_45 { pt3dadd( -25.2978, 40.4132, 24.0839, 0.22 ) }
    dend_45 { pt3dadd( -25.5635, 40.6107, 24.1937, 0.22 ) }
    dend_45 { pt3dadd( -25.7371, 40.7312, 24.2607, 0.22 ) }
    dend_45 { pt3dadd( -26.0982, 40.9661, 24.4188, 0.52 ) }
    dend_45 { pt3dadd( -26.3928, 41.1673, 24.5506, 1.03 ) }
    dend_45 { pt3dadd( -26.7386, 41.4245, 24.7274, 1.25 ) }
    dend_45 { pt3dadd( -27.3331, 41.8957, 25.031, 0.81 ) }
    dend_45 { pt3dadd( -27.8466, 42.3388, 25.2893, 0.22 ) }
    dend_45 { pt3dadd( -28.1684, 42.6327, 25.474, 0.22 ) }
    dend_45 { pt3dadd( -28.5688, 43.0286, 25.7568, 0.59 ) }
    dend_45 { pt3dadd( -29.2559, 43.8031, 26.3093, 0.07 ) }
    dend_45 { pt3dadd( -29.4561, 44.073, 26.4904, 0.15 ) }
    dend_45 { pt3dadd( -29.8614, 44.7438, 26.8843, 0.15 ) }
    dend_45 { pt3dadd( -30.414, 45.8437, 27.4495, 0.07 ) }
    dend_45 { pt3dadd( -30.8616, 46.8676, 27.896, 0.07 ) }
    dend_45 { pt3dadd( -31.0564, 47.3836, 28.1045, 0.07 ) }
    dend_45 { pt3dadd( -31.3031, 48.143, 28.3797, 0.07 ) }
    dend_45 { pt3dadd( -31.5911, 49.1401, 28.7034, 0.07 ) }
    dend_45 { pt3dadd( -31.7712, 49.8335, 28.9058, 0.07 ) }
    dend_45 { pt3dadd( -31.9304, 50.4835, 29.0623, 0.07 ) }
    dend_45 { pt3dadd( -32.1404, 51.2497, 29.2381, 0.22 ) }
    dend_45 { pt3dadd( -32.2787, 51.671, 29.3522, 0.44 ) }
    dend_45 { pt3dadd( -32.5589, 52.3569, 29.5682, 0.07 ) }
    dend_45 { pt3dadd( -32.9385, 53.1365, 29.8614, 0.07 ) }
    dend_45 { pt3dadd( -33.1419, 53.5061, 30.0154, 0.07 ) }
    dend_45 { pt3dadd( -33.4432, 53.9944, 30.2181, 0.37 ) }
    dend_45 { pt3dadd( -33.5594, 54.1644, 30.2826, 0.37 ) }
    dend_45 { pt3dadd( -33.9479, 54.6891, 30.4978, 0.07 ) }
    dend_45 { pt3dadd( -34.3886, 55.2493, 30.7236, 0.07 ) }
    dend_45 { pt3dadd( -34.5625, 55.4709, 30.8005, 0.37 ) }
    dend_45 { pt3dadd( -35.071, 56.1619, 31.0104, 1.11 ) }
    dend_45 { pt3dadd( -35.375, 56.6152, 31.1355, 0.81 ) }
    dend_45 { pt3dadd( -35.9227, 57.4908, 31.3423, 0.07 ) }
    dend_45 { pt3dadd( -36.2039, 57.9522, 31.4306, 0.07 ) }
    dend_45 { pt3dadd( -36.5119, 58.4455, 31.5133, 0.59 ) }
    dend_45 { pt3dadd( -37.0624, 59.3068, 31.6682, 0.15 ) }
    dend_45 { pt3dadd( -37.7103, 60.2707, 31.8519, 0.15 ) }
    dend_45 { pt3dadd( -38.1778, 60.9003, 31.9819, 0.15 ) }
    dend_45 { pt3dadd( -38.7158, 61.5441, 32.1384, 0.44 ) }
    dend_45 { pt3dadd( -39.3913, 62.2545, 32.3745, 0.15 ) }
    dend_45 { pt3dadd( -39.7248, 62.5589, 32.4806, 0.15 ) }
    dend_45 { pt3dadd( -40.3147, 63.0266, 32.6422, 0.74 ) }
    dend_45 { pt3dadd( -41.1551, 63.6387, 32.8317, 0.07 ) }
    dend_45 { pt3dadd( -41.7916, 64.0851, 32.941, 0.07 ) }
    dend_45 { pt3dadd( -42.3722, 64.4985, 33.0101, 0.07 ) }
    dend_45 { pt3dadd( -43.3109, 65.1811, 33.0495, 0.07 ) }
    dend_45 { pt3dadd( -43.9719, 65.6757, 33.0087, 0.52 ) }
    dend_45 { pt3dadd( -44.3004, 65.9255, 32.951, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_45 { pt3dadd( -45.0661, 66.5224, 32.7358, 0.07 ) }
    dend_45 { pt3dadd( -45.7326, 67.0708, 32.4906, 0.37 ) }
    dend_45 { pt3dadd( -46.6165, 67.8047, 32.1264, 0.07 ) }
    dend_45 { pt3dadd( -47.5769, 68.5866, 31.7209, 0.07 ) }
    dend_45 { pt3dadd( -48.2947, 69.1652, 31.3756, 0.07 ) }
    dend_45 { pt3dadd( -49.2152, 69.902, 30.8975, 0.07 ) }
    dend_45 { pt3dadd( -50.2414, 70.7241, 30.3166, 0.07 ) }
    dend_45 { pt3dadd( -50.7739, 71.143, 29.9913, 0.07 ) }
    dend_45 { pt3dadd( -51.3579, 71.6025, 29.6213, 0.07 ) }
    dend_45 { pt3dadd( -51.9502, 72.0688, 29.2714, 0.07 ) }
    dend_45 { pt3dadd( -52.4989, 72.4989, 28.9664, 0.81 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 11/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -3.15615, -22.5441, 6.34985, 0.52 ) }
    dend_43 { pt3dadd( -2.81808, -22.5479, 7.18482, 0.52 ) }
    dend_43 { pt3dadd( -2.2813, -22.5862, 8.47358, 0.52 ) }
    dend_43 { pt3dadd( -1.75381, -22.6747, 9.72695, 0.59 ) }
    dend_43 { pt3dadd( -1.2027, -22.8384, 11.0557, 0.59 ) }
    dend_43 { pt3dadd( -0.722139, -23.0469, 12.2187, 0.59 ) }
    dend_43 { pt3dadd( -0.252047, -23.3283, 13.358, 0.59 ) }
    dend_43 { pt3dadd( 0.256054, -23.7801, 14.6406, 0.59 ) }
    dend_43 { pt3dadd( 0.455415, -24.0693, 15.1543, 0.59 ) }
    dend_43 { pt3dadd( 0.697523, -24.5438, 15.7533, 0.59 ) }
    dend_43 { pt3dadd( 0.899679, -24.9975, 16.236, 0.52 ) }
    dend_43 { pt3dadd( 1.17347, -25.6393, 16.8815, 0.52 ) }
    dend_43 { pt3dadd( 1.48208, -26.3538, 17.5615, 0.59 ) }
    dend_43 { pt3dadd( 2.02747, -27.4554, 18.6226, 0.81 ) }
    dend_43 { pt3dadd( 2.65948, -28.5485, 19.7729, 0.52 ) }
    dend_43 { pt3dadd( 3.07129, -29.1683, 20.4718, 0.59 ) }
    dend_43 { pt3dadd( 3.58358, -29.8231, 21.2654, 0.81 ) }
    dend_43 { pt3dadd( 4.03027, -30.3171, 21.9146, 1.11 ) }
    dend_43 { pt3dadd( 5.01726, -31.2878, 23.2382, 0.37 ) }
    dend_43 { pt3dadd( 5.7082, -31.9069, 24.1391, 0.59 ) }
    dend_43 { pt3dadd( 6.31785, -32.4301, 24.9201, 0.66 ) }
    dend_43 { pt3dadd( 7.20354, -33.1241, 26.0382, 0.37 ) }
    dend_43 { pt3dadd( 7.84555, -33.5607, 26.8654, 0.37 ) }
    dend_43 { pt3dadd( 8.19834, -33.7671, 27.38, 0.37 ) }
    dend_43 { pt3dadd( 8.69311, -34.0322, 28.2331, 0.37 ) }
    dend_43 { pt3dadd( 9.031, -34.225, 28.9811, 0.96 ) }
    dend_43 { pt3dadd( 9.40904, -34.4859, 30.0573, 0.96 ) }
    dend_43 { pt3dadd( 9.74943, -34.8008, 31.2719, 0.96 ) }
    dend_43 { pt3dadd( 10.2372, -35.4095, 33.3627, 0.66 ) }
    dend_43 { pt3dadd( 10.5656, -35.9684, 35.1517, 0.37 ) }
    dend_43 { pt3dadd( 10.8096, -36.6128, 37.0364, 0.37 ) }
    dend_43 { pt3dadd( 10.9435, -37.263, 38.8451, 0.37 ) }
    dend_43 { pt3dadd( 10.9627, -37.5387, 39.5836, 0.37 ) }
    dend_43 { pt3dadd( 10.9528, -38.1063, 41.0591, 0.66 ) }
    dend_43 { pt3dadd( 10.9275, -38.796, 42.787, 0.66 ) }
    dend_43 { pt3dadd( 10.9221, -39.4309, 44.3463, 0.81 ) }
    dend_43 { pt3dadd( 10.947, -40.2866, 46.3928, 0.88 ) }
    dend_43 { pt3dadd( 11.0007, -41.0713, 48.1854, 0.88 ) }
    dend_43 { pt3dadd( 11.1274, -41.9887, 50.1768, 0.37 ) }
    dend_43 { pt3dadd( 11.2978, -42.78, 51.8101, 0.29 ) }
    dend_43 { pt3dadd( 11.4413, -43.3058, 52.7447, 0.29 ) }
    dend_43 { pt3dadd( 11.6235, -43.8751, 53.6404, 0.29 ) }
    dend_43 { pt3dadd( 11.8966, -44.7223, 54.8091, 0.52 ) }
    dend_43 { pt3dadd( 12.2292, -45.7784, 56.1489, 0.96 ) }
    dend_43 { pt3dadd( 12.5925, -47.0593, 57.6426, 0.96 ) }
    dend_43 { pt3dadd( 12.8668, -48.1146, 58.8499, 0.29 ) }
    dend_43 { pt3dadd( 13.1029, -49.0998, 59.9724, 0.29 ) }
    dend_43 { pt3dadd( 13.3235, -50.0857, 61.1197, 0.29 ) }
    dend_43 { pt3dadd( 13.4642, -50.8239, 61.9919, 0.88 ) }
    dend_43 { pt3dadd( 13.6069, -51.7144, 62.9371, 2.21 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 61/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -3.15615, -22.5441, 6.34985, 0.96 ) }
    dend_36 { pt3dadd( -3.56894, -23.4863, 6.37254, 0.96 ) }
    dend_36 { pt3dadd( -4.135, -24.7825, 6.4661, 0.81 ) }
    dend_36 { pt3dadd( -4.60022, -25.9144, 6.66594, 0.74 ) }
    dend_36 { pt3dadd( -5.09121, -27.1318, 6.999, 0.88 ) }
    dend_36 { pt3dadd( -5.60239, -28.4168, 7.44989, 0.88 ) }
    dend_36 { pt3dadd( -5.74886, -28.8156, 7.60185, 0.88 ) }
    dend_36 { pt3dadd( -5.94569, -29.447, 7.88543, 0.66 ) }
    dend_36 { pt3dadd( -6.32443, -30.7626, 8.52631, 0.66 ) }
    dend_36 { pt3dadd( -6.59091, -31.6242, 8.95413, 0.88 ) }
    dend_36 { pt3dadd( -6.82828, -32.3218, 9.29416, 0.88 ) }
    dend_36 { pt3dadd( -7.24994, -33.4104, 9.79287, 1.03 ) }
    dend_36 { pt3dadd( -7.68156, -34.4691, 10.237, 1.03 ) }
    dend_36 { pt3dadd( -8.16007, -35.6428, 10.653, 0.88 ) }
    dend_36 { pt3dadd( -8.63159, -36.8292, 11.0082, 0.59 ) }
    dend_36 { pt3dadd( -8.85714, -37.4415, 11.1935, 0.44 ) }
    dend_36 { pt3dadd( -9.25363, -38.5653, 11.5696, 1.03 ) }
    dend_36 { pt3dadd( -9.51438, -39.3267, 11.8525, 1.03 ) }
    dend_36 { pt3dadd( -9.73326, -40.0608, 12.1229, 1.03 ) }
    dend_36 { pt3dadd( -10.0423, -41.2741, 12.5602, 0.88 ) }
    dend_36 { pt3dadd( -10.3329, -42.5683, 13.0028, 0.81 ) }
    dend_36 { pt3dadd( -10.6487, -44.0678, 13.508, 1.03 ) }
    dend_36 { pt3dadd( -10.8966, -45.2478, 13.8909, 1.47 ) }
    dend_36 { pt3dadd( -11.1748, -46.4952, 14.296, 1.11 ) }
    dend_36 { pt3dadd( -11.4543, -47.7357, 14.6903, 0.74 ) }
    dend_36 { pt3dadd( -11.6523, -48.6615, 14.9722, 0.66 ) }
    dend_36 { pt3dadd( -11.8364, -49.5755, 15.2421, 0.66 ) }
    dend_36 { pt3dadd( -12.0609, -50.7326, 15.5783, 1.03 ) }
    dend_36 { pt3dadd( -12.353, -52.2211, 16.0036, 0.96 ) }
    dend_36 { pt3dadd( -12.6012, -53.4076, 16.3275, 0.81 ) }
    dend_36 { pt3dadd( -12.8403, -54.4611, 16.5909, 1.11 ) }
    dend_36 { pt3dadd( -13.1789, -55.7872, 16.8987, 0.74 ) }
    dend_36 { pt3dadd( -13.5002, -56.8977, 17.1709, 0.37 ) }
    dend_36 { pt3dadd( -13.7646, -57.7159, 17.3968, 0.37 ) }
    dend_36 { pt3dadd( -14.0407, -58.5053, 17.6424, 0.96 ) }
    dend_36 { pt3dadd( -14.3782, -59.4308, 17.9516, 1.55 ) }
    dend_36 { pt3dadd( -14.6116, -60.0677, 18.1685, 1.7 ) }
    dend_36 { pt3dadd( -15.1078, -61.4487, 18.6427, 0.81 ) }
    dend_36 { pt3dadd( -15.4482, -62.4357, 18.9957, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_36 { pt3dadd( -15.704, -63.2372, 19.2793, 0.74 ) }
    dend_36 { pt3dadd( -16.0022, -64.3269, 19.6353, 0.44 ) }
    dend_36 { pt3dadd( -16.2677, -65.4834, 19.9679, 0.37 ) }
    dend_36 { pt3dadd( -16.48, -66.5314, 20.2168, 0.37 ) }
    dend_36 { pt3dadd( -16.6225, -67.2628, 20.3368, 0.37 ) }
    dend_36 { pt3dadd( -16.8256, -68.2601, 20.4511, 0.74 ) }
    dend_36 { pt3dadd( -17.0351, -69.2595, 20.531, 1.03 ) }
    dend_36 { pt3dadd( -17.1123, -69.6292, 20.5645, 1.03 ) }
    dend_36 { pt3dadd( -17.2999, -70.6057, 20.6628, 0.59 ) }
    dend_36 { pt3dadd( -17.4239, -71.2726, 20.7505, 0.59 ) }
    dend_36 { pt3dadd( -17.6538, -72.4467, 20.9706, 0.81 ) }
    dend_36 { pt3dadd( -17.8894, -73.6073, 21.3026, 0.52 ) }
    dend_36 { pt3dadd( -18.0691, -74.5059, 21.6518, 0.96 ) }
    dend_36 { pt3dadd( -18.2433, -75.4723, 22.0961, 1.25 ) }
    dend_36 { pt3dadd( -18.4207, -76.6747, 22.7148, 0.66 ) }
    dend_36 { pt3dadd( -18.5811, -77.8854, 23.344, 0.29 ) }
    dend_36 { pt3dadd( -18.7324, -78.9639, 23.9238, 0.29 ) }
    dend_36 { pt3dadd( -18.8724, -79.8075, 24.3611, 0.29 ) }
    dend_36 { pt3dadd( -18.9553, -80.2314, 24.5571, 0.74 ) }
    dend_36 { pt3dadd( -19.1445, -81.054, 24.8874, 0.96 ) }
    dend_36 { pt3dadd( -19.5651, -82.6547, 25.3729, 0.22 ) }
    dend_36 { pt3dadd( -19.8657, -83.6362, 25.5726, 0.22 ) }
    dend_36 { pt3dadd( -20.1398, -84.426, 25.6763, 0.52 ) }
    dend_36 { pt3dadd( -20.3577, -84.9962, 25.7338, 1.03 ) }
    dend_36 { pt3dadd( -20.6173, -85.6333, 25.8014, 1.11 ) }
    dend_36 { pt3dadd( -20.9676, -86.4371, 25.9005, 0.59 ) }
    dend_36 { pt3dadd( -21.3684, -87.3023, 26.0286, 0.22 ) }
    dend_36 { pt3dadd( -21.6017, -87.7915, 26.1004, 0.22 ) }
    dend_36 { pt3dadd( -21.7935, -88.1934, 26.1673, 0.22 ) }
    dend_36 { pt3dadd( -22.034, -88.7137, 26.2567, 0.44 ) }
    dend_36 { pt3dadd( -22.3449, -89.4248, 26.3772, 0.96 ) }
    dend_36 { pt3dadd( -22.6821, -90.2375, 26.5082, 0.96 ) }
    dend_36 { pt3dadd( -22.9424, -90.866, 26.6085, 0.44 ) }
    dend_36 { pt3dadd( -23.3628, -91.8579, 26.7803, 0.22 ) }
    dend_36 { pt3dadd( -23.6003, -92.4198, 26.8914, 0.59 ) }
    dend_36 { pt3dadd( -23.7982, -92.9048, 26.9937, 0.59 ) }
    dend_36 { pt3dadd( -24.1079, -93.719, 27.1694, 0.15 ) }
    dend_36 { pt3dadd( -24.3997, -94.5467, 27.3813, 0.15 ) }
    dend_36 { pt3dadd( -24.6705, -95.3573, 27.65, 0.15 ) }
    dend_36 { pt3dadd( -24.9209, -96.1452, 27.9343, 0.52 ) }
    dend_36 { pt3dadd( -25.075, -96.6258, 28.1266, 1.33 ) }
    dend_36 { pt3dadd( -25.3316, -97.4056, 28.4599, 1.55 ) }
    dend_36 { pt3dadd( -25.6553, -98.37, 28.8669, 1.18 ) }
    dend_36 { pt3dadd( -26.1901, -99.8962, 29.4572, 0.37 ) }
    dend_36 { pt3dadd( -26.6299, -101.06, 29.86, 0.22 ) }
    dend_36 { pt3dadd( -27.0448, -102.065, 30.1679, 0.22 ) }
    dend_36 { pt3dadd( -27.4712, -103.028, 30.4328, 0.37 ) }
    dend_36 { pt3dadd( -27.9633, -104.079, 30.6759, 0.96 ) }
    dend_36 { pt3dadd( -28.4697, -105.116, 30.8664, 0.22 ) }
    dend_36 { pt3dadd( -28.8689, -105.907, 30.9736, 0.22 ) }
    dend_36 { pt3dadd( -29.3719, -106.897, 31.0854, 0.22 ) }
    dend_36 { pt3dadd( -29.6845, -107.531, 31.1355, 0.37 ) }
    dend_36 { pt3dadd( -30.0043, -108.195, 31.1838, 0.88 ) }
    dend_36 { pt3dadd( -30.4608, -109.209, 31.3048, 0.88 ) }
    dend_36 { pt3dadd( -31.0115, -110.556, 31.5208, 0.22 ) }
    dend_36 { pt3dadd( -31.2634, -111.235, 31.6533, 0.44 ) }
    dend_36 { pt3dadd( -31.5502, -112.054, 31.8344, 0.88 ) }
    dend_36 { pt3dadd( -31.812, -112.818, 32.0106, 0.37 ) }
    dend_36 { pt3dadd( -32.3255, -114.306, 32.3476, 0.15 ) }
    dend_36 { pt3dadd( -32.6986, -115.396, 32.5743, 0.15 ) }
    dend_36 { pt3dadd( -32.9732, -116.233, 32.7691, 0.15 ) }
    dend_36 { pt3dadd( -33.1077, -116.665, 32.8755, 0.29 ) }
    dend_36 { pt3dadd( -33.3467, -117.458, 33.084, 0.96 ) }
    dend_36 { pt3dadd( -33.6154, -118.387, 33.3461, 0.29 ) }
    dend_36 { pt3dadd( -33.8493, -119.223, 33.596, 0.15 ) }
    dend_36 { pt3dadd( -34.1137, -120.231, 33.9448, 0.15 ) }
    dend_36 { pt3dadd( -34.3085, -121.009, 34.2389, 0.15 ) }
    dend_36 { pt3dadd( -34.5245, -121.912, 34.5897, 0.15 ) }
    dend_36 { pt3dadd( -34.6881, -122.606, 34.8563, 0.15 ) }
    dend_36 { pt3dadd( -34.9002, -123.478, 35.1767, 0.29 ) }
    dend_36 { pt3dadd( -35.1, -124.208, 35.4166, 0.81 ) }
    dend_36 { pt3dadd( -35.4108, -125.247, 35.7028, 1.11 ) }
    dend_36 { pt3dadd( -35.7218, -126.219, 35.9346, 0.29 ) }
    dend_36 { pt3dadd( -36.0646, -127.269, 36.1405, 0.15 ) }
    dend_36 { pt3dadd( -36.3745, -128.202, 36.2868, 0.15 ) }
    dend_36 { pt3dadd( -36.6799, -129.13, 36.3965, 0.15 ) }
    dend_36 { pt3dadd( -36.8801, -129.753, 36.4528, 0.15 ) }
    dend_36 { pt3dadd( -36.9837, -130.092, 36.474, 0.37 ) }
    dend_36 { pt3dadd( -37.1436, -130.599, 36.5189, 0.88 ) }
    dend_36 { pt3dadd( -37.2889, -131.0, 36.5604, 1.11 ) }
    dend_36 { pt3dadd( -37.6384, -131.812, 36.6476, 0.29 ) }
    dend_36 { pt3dadd( -38.0369, -132.553, 36.726, 0.15 ) }
    dend_36 { pt3dadd( -38.3296, -133.019, 36.7694, 0.15 ) }
    dend_36 { pt3dadd( -38.9927, -133.943, 36.815, 0.15 ) }
    dend_36 { pt3dadd( -39.4326, -134.494, 36.8248, 0.59 ) }
    dend_36 { pt3dadd( -39.9133, -135.059, 36.8177, 0.59 ) }
    dend_36 { pt3dadd( -41.0717, -136.357, 36.7421, 0.15 ) }
    dend_36 { pt3dadd( -41.765, -137.129, 36.6376, 0.15 ) }
    dend_36 { pt3dadd( -42.514, -137.984, 36.4627, 0.15 ) }
    dend_36 { pt3dadd( -42.7241, -138.238, 36.3895, 0.37 ) }
    dend_36 { pt3dadd( -43.3261, -139.018, 36.1432, 0.96 ) }
    dend_36 { pt3dadd( -43.8349, -139.718, 35.9051, 0.22 ) }
    dend_36 { pt3dadd( -44.284, -140.393, 35.6681, 0.22 ) }
    dend_36 { pt3dadd( -44.5104, -140.774, 35.5637, 0.22 ) }
    dend_36 { pt3dadd( -44.7255, -141.188, 35.4807, 0.44 ) }
    dend_36 { pt3dadd( -44.9723, -141.667, 35.3806, 0.81 ) }
    dend_36 { pt3dadd( -45.3616, -142.381, 35.2214, 0.22 ) }
    dend_36 { pt3dadd( -45.7541, -143.04, 35.0811, 0.29 ) }
    dend_36 { pt3dadd( -46.2404, -143.807, 34.9275, 0.22 ) }
    dend_36 { pt3dadd( -46.8228, -144.682, 34.7384, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -47.5824, -145.749, 34.4927, 0.07 ) }
    dend_36 { pt3dadd( -48.0131, -146.327, 34.3548, 0.07 ) }
    dend_36 { pt3dadd( -48.5518, -147.012, 34.1692, 0.15 ) }
    dend_36 { pt3dadd( -49.2375, -147.834, 33.9253, 0.07 ) }
    dend_36 { pt3dadd( -49.4769, -148.104, 33.8409, 0.29 ) }
    dend_36 { pt3dadd( -50.0062, -148.681, 33.6951, 0.44 ) }
    dend_36 { pt3dadd( -50.4278, -149.152, 33.5959, 0.15 ) }
    dend_36 { pt3dadd( -50.9802, -149.786, 33.4625, 0.15 ) }
    dend_36 { pt3dadd( -51.2878, -150.141, 33.3813, 0.37 ) }
    dend_36 { pt3dadd( -51.6542, -150.569, 33.2833, 0.44 ) }
    dend_36 { pt3dadd( -52.2285, -151.276, 33.1311, 0.15 ) }
    dend_36 { pt3dadd( -52.5507, -151.695, 33.0516, 0.15 ) }
    dend_36 { pt3dadd( -52.829, -152.048, 32.9982, 0.37 ) }
    dend_36 { pt3dadd( -53.0696, -152.359, 32.9672, 0.52 ) }
    dend_36 { pt3dadd( -53.5243, -152.986, 32.8978, 0.15 ) }
    dend_36 { pt3dadd( -53.6907, -153.23, 32.8703, 0.15 ) }
    dend_36 { pt3dadd( -54.0925, -153.856, 32.8021, 0.52 ) }
    dend_36 { pt3dadd( -54.6733, -154.81, 32.7083, 0.15 ) }
    dend_36 { pt3dadd( -55.0154, -155.411, 32.6473, 0.52 ) }
    dend_36 { pt3dadd( -55.5379, -156.406, 32.548, 0.15 ) }
    dend_36 { pt3dadd( -55.6931, -156.738, 32.505, 0.37 ) }
    dend_36 { pt3dadd( -55.7931, -156.986, 32.4611, 0.81 ) }
    dend_36 { pt3dadd( -55.9088, -157.334, 32.3747, 1.03 ) }
    dend_36 { pt3dadd( -56.0808, -157.969, 32.1803, 0.07 ) }
    dend_36 { pt3dadd( -56.2847, -158.702, 31.9183, 0.15 ) }
    dend_36 { pt3dadd( -56.5013, -159.384, 31.6202, 0.29 ) }
    dend_36 { pt3dadd( -56.7119, -160.005, 31.2875, 0.15 ) }
    dend_36 { pt3dadd( -56.8957, -160.515, 30.9612, 0.15 ) }
    dend_36 { pt3dadd( -57.0189, -160.848, 30.7139, 0.29 ) }
    dend_36 { pt3dadd( -57.1861, -161.308, 30.3424, 0.37 ) }
    dend_36 { pt3dadd( -57.4402, -161.998, 29.7503, 0.22 ) }
    dend_36 { pt3dadd( -57.6783, -162.624, 29.2094, 0.22 ) }
    dend_36 { pt3dadd( -57.9329, -163.282, 28.627, 0.22 ) }
    dend_36 { pt3dadd( -58.0721, -163.638, 28.3003, 0.22 ) }
    dend_36 { pt3dadd( -58.1918, -163.96, 27.9818, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 35/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 47.2549, 37.8597, 4.43613, 0.59 ) }
    dend_34 { pt3dadd( 49.2328, 38.1348, 4.58901, 0.59 ) }
    dend_34 { pt3dadd( 50.3307, 38.2926, 4.71679, 0.59 ) }
    dend_34 { pt3dadd( 51.9082, 38.4531, 4.97048, 0.59 ) }
    dend_34 { pt3dadd( 53.11, 38.5376, 5.10716, 0.59 ) }
    dend_34 { pt3dadd( 54.0215, 38.585, 5.14435, 0.44 ) }
    dend_34 { pt3dadd( 55.5339, 38.6763, 5.06936, 0.59 ) }
    dend_34 { pt3dadd( 57.0509, 38.8169, 4.85068, 0.59 ) }
    dend_34 { pt3dadd( 58.7163, 39.0468, 4.45944, 0.66 ) }
    dend_34 { pt3dadd( 60.4385, 39.4215, 3.89375, 0.66 ) }
    dend_34 { pt3dadd( 61.8914, 39.9316, 3.30461, 0.66 ) }
    dend_34 { pt3dadd( 63.4375, 40.7693, 2.53609, 0.52 ) }
    dend_34 { pt3dadd( 64.2877, 41.394, 2.0627, 0.52 ) }
    dend_34 { pt3dadd( 65.0237, 42.0493, 1.67406, 0.88 ) }
    dend_34 { pt3dadd( 65.9404, 42.935, 1.24566, 1.03 ) }
    dend_34 { pt3dadd( 67.1116, 44.0592, 0.842924, 0.74 ) }
    dend_34 { pt3dadd( 68.7256, 45.422, 0.496784, 0.81 ) }
    dend_34 { pt3dadd( 69.5806, 45.9763, 0.410216, 0.59 ) }
    dend_34 { pt3dadd( 71.226, 46.7445, 0.396246, 0.52 ) }
    dend_34 { pt3dadd( 72.6247, 47.1817, 0.527287, 0.81 ) }
    dend_34 { pt3dadd( 73.4034, 47.3314, 0.697379, 1.03 ) }
    dend_34 { pt3dadd( 75.2444, 47.5792, 1.2763, 0.59 ) }
    dend_34 { pt3dadd( 76.9909, 47.8086, 1.92087, 0.44 ) }
    dend_34 { pt3dadd( 78.4611, 48.0684, 2.4945, 0.52 ) }
    dend_34 { pt3dadd( 79.8927, 48.4575, 3.02061, 0.52 ) }
    dend_34 { pt3dadd( 81.6985, 49.1673, 3.58658, 0.59 ) }
    dend_34 { pt3dadd( 83.1651, 49.9217, 3.9045, 0.66 ) }
    dend_34 { pt3dadd( 84.5441, 50.7867, 4.03369, 1.11 ) }
    dend_34 { pt3dadd( 85.5033, 51.4611, 4.01674, 1.18 ) }
    dend_34 { pt3dadd( 87.374, 52.8111, 3.78998, 0.74 ) }
    dend_34 { pt3dadd( 88.6152, 53.7143, 3.56623, 0.37 ) }
    dend_34 { pt3dadd( 89.4639, 54.3385, 3.3983, 0.37 ) }
    dend_34 { pt3dadd( 90.4639, 55.0709, 3.19342, 0.44 ) }
    dend_34 { pt3dadd( 91.1118, 55.5535, 3.07214, 0.44 ) }
    dend_34 { pt3dadd( 91.8693, 56.1672, 2.91177, 0.44 ) }
    dend_34 { pt3dadd( 92.9693, 57.1686, 2.67798, 0.74 ) }
    dend_34 { pt3dadd( 94.0605, 58.3029, 2.37424, 0.96 ) }
    dend_34 { pt3dadd( 95.3497, 59.7779, 1.89912, 0.88 ) }
    dend_34 { pt3dadd( 96.2123, 60.795, 1.50253, 0.66 ) }
    dend_34 { pt3dadd( 97.0897, 61.7702, 1.00735, 0.66 ) }
    dend_34 { pt3dadd( 97.9904, 62.6859, 0.379165, 0.37 ) }
    dend_34 { pt3dadd( 98.8174, 63.4307, -0.322688, 0.29 ) }
    dend_34 { pt3dadd( 99.5122, 63.9976, -1.00717, 0.52 ) }
    dend_34 { pt3dadd( 100.176, 64.5267, -1.70123, 1.11 ) }
    dend_34 { pt3dadd( 101.06, 65.2724, -2.64289, 0.59 ) }
    dend_34 { pt3dadd( 101.916, 66.1042, -3.48817, 0.37 ) }
    dend_34 { pt3dadd( 102.502, 66.8035, -4.01326, 0.37 ) }
    dend_34 { pt3dadd( 103.448, 68.1261, -4.68101, 0.88 ) }
    dend_34 { pt3dadd( 103.996, 68.9725, -4.97349, 0.96 ) }
    dend_34 { pt3dadd( 104.958, 70.4801, -5.33996, 0.74 ) }
    dend_34 { pt3dadd( 105.933, 71.9164, -5.55513, 0.59 ) }
    dend_34 { pt3dadd( 106.897, 73.1289, -5.64657, 0.44 ) }
    dend_34 { pt3dadd( 107.785, 74.0828, -5.64976, 1.03 ) }
    dend_34 { pt3dadd( 108.383, 74.6657, -5.64365, 1.03 ) }
    dend_34 { pt3dadd( 109.484, 75.6891, -5.67958, 0.81 ) }
    dend_34 { pt3dadd( 110.165, 76.342, -5.72246, 0.88 ) }
    dend_34 { pt3dadd( 111.244, 77.5526, -5.80699, 0.59 ) }
    dend_34 { pt3dadd( 112.366, 79.1088, -5.85131, 0.44 ) }
    dend_34 { pt3dadd( 113.381, 80.8148, -5.76565, 0.44 ) }
    dend_34 { pt3dadd( 113.919, 81.8382, -5.6275, 0.44 ) }
    dend_34 { pt3dadd( 114.559, 83.1406, -5.31633, 0.59 ) }
    dend_34 { pt3dadd( 115.529, 85.0033, -4.63347, 0.74 ) }
    dend_34 { pt3dadd( 116.219, 86.1028, -4.05106, 0.44 ) }
    dend_34 { pt3dadd( 117.127, 87.2182, -3.25743, 0.44 ) }
    dend_34 { pt3dadd( 118.072, 88.1767, -2.42273, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_34 { pt3dadd( 119.274, 89.2548, -1.36147, 0.88 ) }
    dend_34 { pt3dadd( 120.638, 90.356, -0.190269, 0.88 ) }
    dend_34 { pt3dadd( 122.193, 91.5162, 1.09656, 0.37 ) }
    dend_34 { pt3dadd( 123.488, 92.5071, 2.09358, 0.29 ) }
    dend_34 { pt3dadd( 123.799, 92.757, 2.31273, 0.29 ) }
    dend_34 { pt3dadd( 124.465, 93.3269, 2.73992, 0.29 ) }
    dend_34 { pt3dadd( 124.973, 93.774, 3.0065, 0.29 ) }
    dend_34 { pt3dadd( 125.45, 94.2018, 3.19344, 0.29 ) }
    dend_34 { pt3dadd( 126.681, 95.2705, 3.53289, 0.37 ) }
    dend_34 { pt3dadd( 127.759, 96.1069, 3.72714, 0.74 ) }
    dend_34 { pt3dadd( 129.055, 97.0488, 3.82, 0.96 ) }
    dend_34 { pt3dadd( 130.238, 97.8821, 3.80755, 1.18 ) }
    dend_34 { pt3dadd( 131.272, 98.5964, 3.74642, 1.11 ) }
    dend_34 { pt3dadd( 132.098, 99.158, 3.66068, 0.88 ) }
    dend_34 { pt3dadd( 133.256, 99.9302, 3.52121, 0.66 ) }
    dend_34 { pt3dadd( 135.124, 101.138, 3.33616, 0.44 ) }
    dend_34 { pt3dadd( 136.493, 101.964, 3.28249, 0.66 ) }
    dend_34 { pt3dadd( 137.286, 102.413, 3.31445, 0.44 ) }
    dend_34 { pt3dadd( 138.1, 102.828, 3.42153, 0.44 ) }
    dend_34 { pt3dadd( 139.37, 103.418, 3.70615, 0.74 ) }
    dend_34 { pt3dadd( 140.555, 103.926, 4.07616, 1.18 ) }
    dend_34 { pt3dadd( 142.197, 104.605, 4.72488, 1.11 ) }
    dend_34 { pt3dadd( 143.56, 105.214, 5.29686, 0.81 ) }
    dend_34 { pt3dadd( 145.064, 105.944, 5.93332, 0.44 ) }
    dend_34 { pt3dadd( 146.241, 106.54, 6.42693, 0.44 ) }
    dend_34 { pt3dadd( 146.973, 106.917, 6.7189, 0.44 ) }
    dend_34 { pt3dadd( 147.976, 107.432, 7.0805, 0.66 ) }
    dend_34 { pt3dadd( 149.343, 108.11, 7.54913, 0.37 ) }
    dend_34 { pt3dadd( 150.047, 108.45, 7.78502, 0.29 ) }
    dend_34 { pt3dadd( 150.737, 108.804, 8.03664, 0.29 ) }
    dend_34 { pt3dadd( 151.596, 109.268, 8.40669, 0.29 ) }
    dend_34 { pt3dadd( 152.559, 109.835, 8.87193, 0.81 ) }
    dend_34 { pt3dadd( 153.448, 110.441, 9.37328, 1.03 ) }
    dend_34 { pt3dadd( 154.63, 111.392, 10.1749, 0.59 ) }
    dend_34 { pt3dadd( 155.876, 112.504, 11.193, 0.52 ) }
    dend_34 { pt3dadd( 156.863, 113.441, 12.0683, 0.74 ) }
    dend_34 { pt3dadd( 157.528, 114.075, 12.7026, 0.37 ) }
    dend_34 { pt3dadd( 158.773, 115.217, 13.8915, 0.29 ) }
    dend_34 { pt3dadd( 159.877, 116.179, 14.9036, 0.29 ) }
    dend_34 { pt3dadd( 161.398, 117.399, 16.2752, 0.29 ) }
    dend_34 { pt3dadd( 161.976, 117.835, 16.7692, 0.88 ) }
    dend_34 { pt3dadd( 162.947, 118.551, 17.5422, 0.88 ) }
    dend_34 { pt3dadd( 164.11, 119.364, 18.3799, 0.29 ) }
    dend_34 { pt3dadd( 165.023, 119.978, 18.947, 0.22 ) }
    dend_34 { pt3dadd( 165.995, 120.652, 19.4472, 0.29 ) }
    dend_34 { pt3dadd( 167.03, 121.396, 19.8722, 0.74 ) }
    dend_34 { pt3dadd( 167.785, 121.939, 20.1502, 0.29 ) }
    dend_34 { pt3dadd( 169.353, 123.064, 20.6247, 0.22 ) }
    dend_34 { pt3dadd( 170.46, 123.859, 20.9353, 0.22 ) }
    dend_34 { pt3dadd( 171.416, 124.529, 21.1545, 0.37 ) }
    dend_34 { pt3dadd( 172.66, 125.362, 21.3791, 0.74 ) }
    dend_34 { pt3dadd( 173.549, 125.922, 21.5457, 0.74 ) }
    dend_34 { pt3dadd( 174.516, 126.526, 21.7254, 0.29 ) }
    dend_34 { pt3dadd( 175.707, 127.266, 21.9586, 0.22 ) }
    dend_34 { pt3dadd( 176.584, 127.768, 22.1593, 0.37 ) }
    dend_34 { pt3dadd( 177.719, 128.345, 22.4735, 0.22 ) }
    dend_34 { pt3dadd( 178.89, 128.873, 22.83, 0.22 ) }
    dend_34 { pt3dadd( 179.495, 129.108, 23.0306, 0.37 ) }
    dend_34 { pt3dadd( 180.799, 129.551, 23.4795, 0.37 ) }
    dend_34 { pt3dadd( 182.179, 129.972, 23.9829, 0.37 ) }
    dend_34 { pt3dadd( 183.277, 130.33, 24.4129, 0.44 ) }
    dend_34 { pt3dadd( 184.039, 130.601, 24.7292, 0.81 ) }
    dend_34 { pt3dadd( 185.187, 131.056, 25.2331, 1.47 ) }
    dend_34 { pt3dadd( 185.9, 131.369, 25.5787, 1.62 ) }
    dend_34 { pt3dadd( 187.474, 132.132, 26.4136, 0.59 ) }
    dend_34 { pt3dadd( 189.376, 133.113, 27.5093, 0.29 ) }
    dend_34 { pt3dadd( 190.59, 133.763, 28.2397, 0.22 ) }
    dend_34 { pt3dadd( 191.343, 134.175, 28.7157, 0.22 ) }
    dend_34 { pt3dadd( 192.001, 134.549, 29.134, 0.22 ) }
    dend_34 { pt3dadd( 192.648, 134.922, 29.5438, 0.22 ) }
    dend_34 { pt3dadd( 193.284, 135.288, 29.9292, 0.22 ) }
    dend_34 { pt3dadd( 194.177, 135.757, 30.4611, 0.37 ) }
    dend_34 { pt3dadd( 194.956, 136.14, 30.8967, 0.88 ) }
    dend_34 { pt3dadd( 195.61, 136.448, 31.237, 1.25 ) }
    dend_34 { pt3dadd( 196.631, 136.931, 31.7668, 1.25 ) }
    dend_34 { pt3dadd( 197.617, 137.412, 32.3126, 0.29 ) }
    dend_34 { pt3dadd( 198.61, 137.92, 32.9133, 0.15 ) }
    dend_34 { pt3dadd( 199.379, 138.331, 33.3862, 0.29 ) }
    dend_34 { pt3dadd( 200.391, 138.889, 33.9733, 0.15 ) }
    dend_34 { pt3dadd( 201.019, 139.245, 34.339, 0.15 ) }
    dend_34 { pt3dadd( 201.525, 139.545, 34.6196, 0.44 ) }
    dend_34 { pt3dadd( 202.806, 140.314, 35.2042, 0.74 ) }
    dend_34 { pt3dadd( 203.855, 140.942, 35.6233, 0.22 ) }
    dend_34 { pt3dadd( 205.034, 141.635, 36.0375, 0.15 ) }
    dend_34 { pt3dadd( 205.863, 142.126, 36.2935, 0.66 ) }
    dend_34 { pt3dadd( 206.612, 142.614, 36.4872, 0.66 ) }
    dend_34 { pt3dadd( 208.464, 143.916, 36.9539, 0.22 ) }
    dend_34 { pt3dadd( 209.332, 144.589, 37.1748, 0.66 ) }
    dend_34 { pt3dadd( 210.034, 145.205, 37.3705, 1.18 ) }
    dend_34 { pt3dadd( 210.713, 145.871, 37.5947, 0.96 ) }
    dend_34 { pt3dadd( 212.249, 147.495, 38.1667, 0.15 ) }
    dend_34 { pt3dadd( 212.791, 148.116, 38.4009, 0.15 ) }
    dend_34 { pt3dadd( 213.41, 148.897, 38.6959, 0.22 ) }
    dend_34 { pt3dadd( 214.125, 149.745, 39.0343, 0.07 ) }
    dend_34 { pt3dadd( 215.132, 150.815, 39.5612, 0.07 ) }
    dend_34 { pt3dadd( 215.541, 151.196, 39.8014, 0.74 ) }
    dend_34 { pt3dadd( 216.356, 151.859, 40.3061, 1.03 ) }
    dend_34 { pt3dadd( 217.259, 152.542, 40.8615, 0.44 ) }
    dend_34 { pt3dadd( 218.686, 153.539, 41.8652, 0.15 ) }
    dend_34 { pt3dadd( 219.666, 154.174, 42.6531, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_34 { pt3dadd( 220.305, 154.565, 43.2487, 0.15 ) }
    dend_34 { pt3dadd( 220.822, 154.865, 43.8123, 0.37 ) }
    dend_34 { pt3dadd( 221.536, 155.23, 44.7054, 0.59 ) }
    dend_34 { pt3dadd( 222.906, 155.832, 46.7167, 0.22 ) }
    dend_34 { pt3dadd( 223.628, 156.115, 47.9551, 0.44 ) }
    dend_34 { pt3dadd( 224.223, 156.31, 49.1235, 0.44 ) }
    dend_34 { pt3dadd( 224.57, 156.397, 49.8891, 0.44 ) }
    dend_34 { pt3dadd( 224.874, 156.426, 50.6379, 0.44 ) }
    dend_34 { pt3dadd( 225.394, 156.353, 51.9534, 0.44 ) }
    dend_34 { pt3dadd( 225.542, 156.307, 52.3114, 0.44 ) }
    dend_34 { pt3dadd( 225.775, 156.228, 52.8431, 0.44 ) }
    dend_34 { pt3dadd( 226.224, 156.066, 53.7504, 0.44 ) }
    dend_34 { pt3dadd( 226.702, 155.877, 54.6349, 0.44 ) }
    dend_34 { pt3dadd( 227.978, 155.331, 56.859, 0.22 ) }
    dend_34 { pt3dadd( 228.866, 154.924, 58.3044, 0.22 ) }
    dend_34 { pt3dadd( 229.569, 154.576, 59.4391, 0.22 ) }
    dend_34 { pt3dadd( 230.209, 154.225, 60.4914, 0.74 ) }
    dend_34 { pt3dadd( 231.566, 153.362, 62.8037, 0.22 ) }
    dend_34 { pt3dadd( 232.656, 152.583, 64.7823, 0.52 ) }
    dend_34 { pt3dadd( 233.476, 151.942, 66.3334, 0.22 ) }
    dend_34 { pt3dadd( 234.217, 151.344, 67.8073, 0.52 ) }
    dend_34 { pt3dadd( 234.897, 150.794, 69.2545, 0.52 ) }
    dend_34 { pt3dadd( 235.579, 150.232, 70.9619, 0.29 ) }
    dend_34 { pt3dadd( 236.151, 149.755, 72.7988, 0.29 ) }
    dend_34 { pt3dadd( 236.348, 149.605, 73.673, 0.29 ) }
    dend_34 { pt3dadd( 236.545, 149.532, 74.9239, 0.29 ) }
    dend_34 { pt3dadd( 236.636, 149.587, 75.5519, 0.29 ) }
    dend_34 { pt3dadd( 236.84, 149.868, 76.7787, 0.29 ) }
    dend_34 { pt3dadd( 237.169, 150.349, 78.1758, 0.29 ) }
    dend_34 { pt3dadd( 237.409, 150.618, 78.8526, 0.29 ) }
    dend_34 { pt3dadd( 237.821, 150.953, 79.7581, 0.52 ) }
    dend_34 { pt3dadd( 238.565, 151.415, 81.2397, 0.22 ) }
    dend_34 { pt3dadd( 239.578, 151.969, 82.9542, 0.22 ) }
    dend_34 { pt3dadd( 240.36, 152.373, 84.1307, 0.22 ) }
    dend_34 { pt3dadd( 241.034, 152.764, 85.0709, 0.52 ) }
    dend_34 { pt3dadd( 242.219, 153.588, 86.705, 0.52 ) }
    dend_34 { pt3dadd( 243.289, 154.369, 88.2107, 0.52 ) }
    dend_34 { pt3dadd( 244.77, 155.592, 90.3061, 0.22 ) }
    dend_34 { pt3dadd( 245.757, 156.534, 91.6603, 0.22 ) }
    dend_34 { pt3dadd( 246.766, 157.64, 93.0603, 0.22 ) }
    dend_34 { pt3dadd( 247.509, 158.566, 94.0473, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 41/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 47.2549, 37.8597, 4.43613, 0.81 ) }
    dend_33 { pt3dadd( 47.5288, 39.4885, 3.99737, 0.81 ) }
    dend_33 { pt3dadd( 47.8491, 40.8763, 3.43113, 0.52 ) }
    dend_33 { pt3dadd( 48.1456, 41.8935, 2.87268, 0.66 ) }
    dend_33 { pt3dadd( 48.5753, 43.2112, 1.88959, 0.44 ) }
    dend_33 { pt3dadd( 48.8877, 44.2284, 0.944729, 0.44 ) }
    dend_33 { pt3dadd( 49.163, 45.1995, -0.0929754, 0.44 ) }
    dend_33 { pt3dadd( 49.3735, 45.8291, -1.0464, 0.44 ) }
    dend_33 { pt3dadd( 49.5609, 46.2557, -1.96274, 0.44 ) }
    dend_33 { pt3dadd( 49.8013, 46.7268, -3.28659, 0.44 ) }
    dend_33 { pt3dadd( 49.9674, 47.0402, -4.2974, 0.44 ) }
    dend_33 { pt3dadd( 50.0903, 47.2515, -4.92147, 0.44 ) }
    dend_33 { pt3dadd( 50.3197, 47.6678, -5.87748, 0.59 ) }
    dend_33 { pt3dadd( 50.6348, 48.3156, -6.88534, 0.59 ) }
    dend_33 { pt3dadd( 50.7917, 48.6515, -7.23672, 0.59 ) }
    dend_33 { pt3dadd( 51.1219, 49.3635, -7.78203, 0.66 ) }
    dend_33 { pt3dadd( 51.3952, 49.9983, -8.16663, 0.96 ) }
    dend_33 { pt3dadd( 51.6284, 50.6698, -8.49048, 0.96 ) }
    dend_33 { pt3dadd( 51.9004, 51.6676, -8.85801, 0.96 ) }
    dend_33 { pt3dadd( 52.258, 53.1308, -9.2746, 0.88 ) }
    dend_33 { pt3dadd( 52.4824, 54.0674, -9.49468, 0.52 ) }
    dend_33 { pt3dadd( 52.7549, 55.0584, -9.68188, 0.29 ) }
    dend_33 { pt3dadd( 53.0216, 55.9039, -9.8056, 0.29 ) }
    dend_33 { pt3dadd( 53.3087, 56.6665, -9.88557, 0.44 ) }
    dend_33 { pt3dadd( 53.6542, 57.4547, -9.92698, 0.88 ) }
    dend_33 { pt3dadd( 54.0811, 58.3656, -9.9681, 0.66 ) }
    dend_33 { pt3dadd( 54.7103, 59.7322, -10.0908, 0.52 ) }
    dend_33 { pt3dadd( 55.0386, 60.5172, -10.2182, 0.59 ) }
    dend_33 { pt3dadd( 55.5351, 61.8839, -10.5496, 0.74 ) }
    dend_33 { pt3dadd( 55.978, 63.3782, -11.055, 0.88 ) }
    dend_33 { pt3dadd( 56.2112, 64.3935, -11.502, 0.52 ) }
    dend_33 { pt3dadd( 56.3935, 65.4661, -12.071, 0.52 ) }
    dend_33 { pt3dadd( 56.5427, 66.5784, -12.7641, 0.59 ) }
    dend_33 { pt3dadd( 56.6536, 67.1664, -13.1864, 0.59 ) }
    dend_33 { pt3dadd( 56.8418, 67.8577, -13.7433, 0.81 ) }
    dend_33 { pt3dadd( 57.1654, 68.7072, -14.4471, 0.81 ) }
    dend_33 { pt3dadd( 57.579, 69.5277, -15.0259, 0.81 ) }
    dend_33 { pt3dadd( 58.1128, 70.398, -15.5096, 0.52 ) }
    dend_33 { pt3dadd( 58.9673, 71.6695, -16.0266, 0.29 ) }
    dend_33 { pt3dadd( 59.3909, 72.265, -16.1958, 0.29 ) }
    dend_33 { pt3dadd( 59.9744, 73.0112, -16.3307, 0.59 ) }
    dend_33 { pt3dadd( 60.8645, 74.051, -16.4176, 0.81 ) }
    dend_33 { pt3dadd( 61.4244, 74.6781, -16.4401, 1.03 ) }
    dend_33 { pt3dadd( 62.093, 75.461, -16.426, 0.29 ) }
    dend_33 { pt3dadd( 62.6803, 76.2209, -16.403, 0.22 ) }
    dend_33 { pt3dadd( 63.2522, 77.0742, -16.4018, 0.22 ) }
    dend_33 { pt3dadd( 63.6104, 77.7729, -16.4463, 0.29 ) }
    dend_33 { pt3dadd( 64.0229, 78.8296, -16.5631, 0.74 ) }
    dend_33 { pt3dadd( 64.304, 79.7372, -16.6515, 0.88 ) }
    dend_33 { pt3dadd( 64.5291, 80.6291, -16.7378, 0.88 ) }
    dend_33 { pt3dadd( 64.7371, 81.6842, -16.8249, 0.52 ) }
    dend_33 { pt3dadd( 65.0019, 83.3815, -16.9327, 0.52 ) }
    dend_33 { pt3dadd( 65.1334, 84.4381, -16.989, 0.44 ) }
    dend_33 { pt3dadd( 65.2792, 85.9843, -17.0778, 0.44 ) }
    dend_33 { pt3dadd( 65.3345, 87.057, -17.1558, 0.44 ) }
    dend_33 { pt3dadd( 65.333, 88.0916, -17.2356, 0.74 ) }
    dend_33 { pt3dadd( 65.2899, 88.8072, -17.2764, 0.88 ) }
    dend_33 { pt3dadd( 65.095, 90.3101, -17.3207, 0.96 ) }
    dend_33 { pt3dadd( 64.8771, 91.7069, -17.2998, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_33 { pt3dadd( 64.755, 92.6866, -17.203, 0.22 ) }
    dend_33 { pt3dadd( 64.7406, 93.4605, -17.021, 0.22 ) }
    dend_33 { pt3dadd( 64.8947, 94.6149, -16.5903, 0.74 ) }
    dend_33 { pt3dadd( 64.9943, 95.0035, -16.4182, 0.74 ) }
    dend_33 { pt3dadd( 65.4687, 96.3497, -15.7865, 0.52 ) }
    dend_33 { pt3dadd( 65.9904, 97.6943, -15.2286, 0.44 ) }
    dend_33 { pt3dadd( 66.4522, 98.8995, -14.8633, 0.44 ) }
    dend_33 { pt3dadd( 66.8523, 100.133, -14.6438, 0.66 ) }
    dend_33 { pt3dadd( 67.1478, 101.402, -14.5866, 0.66 ) }
    dend_33 { pt3dadd( 67.2852, 102.316, -14.5879, 0.66 ) }
    dend_33 { pt3dadd( 67.3947, 103.769, -14.6891, 0.29 ) }
    dend_33 { pt3dadd( 67.428, 104.784, -14.7641, 0.29 ) }
    dend_33 { pt3dadd( 67.4535, 105.921, -14.7541, 0.44 ) }
    dend_33 { pt3dadd( 67.4684, 106.63, -14.6538, 0.44 ) }
    dend_33 { pt3dadd( 67.5062, 107.88, -14.2653, 0.74 ) }
    dend_33 { pt3dadd( 67.5222, 108.447, -14.0273, 1.11 ) }
    dend_33 { pt3dadd( 67.5478, 109.786, -13.3992, 0.44 ) }
    dend_33 { pt3dadd( 67.5472, 111.191, -12.7536, 0.74 ) }
    dend_33 { pt3dadd( 67.5186, 111.86, -12.4984, 0.52 ) }
    dend_33 { pt3dadd( 67.4382, 112.658, -12.2931, 0.29 ) }
    dend_33 { pt3dadd( 67.3018, 113.464, -12.2175, 0.22 ) }
    dend_33 { pt3dadd( 67.0166, 114.593, -12.2842, 0.59 ) }
    dend_33 { pt3dadd( 66.7306, 115.482, -12.4699, 0.96 ) }
    dend_33 { pt3dadd( 66.3776, 116.44, -12.7273, 0.66 ) }
    dend_33 { pt3dadd( 65.945, 117.584, -12.9985, 0.44 ) }
    dend_33 { pt3dadd( 65.5173, 118.79, -13.2006, 0.44 ) }
    dend_33 { pt3dadd( 65.0933, 120.194, -13.2345, 0.22 ) }
    dend_33 { pt3dadd( 64.9267, 120.951, -13.1277, 0.37 ) }
    dend_33 { pt3dadd( 64.7821, 122.118, -12.7834, 0.59 ) }
    dend_33 { pt3dadd( 64.7397, 123.408, -12.2374, 0.29 ) }
    dend_33 { pt3dadd( 64.7845, 124.695, -11.5905, 0.29 ) }
    dend_33 { pt3dadd( 64.8399, 126.036, -10.8766, 0.37 ) }
    dend_33 { pt3dadd( 64.824, 126.688, -10.5305, 0.29 ) }
    dend_33 { pt3dadd( 64.6864, 127.705, -10.054, 0.66 ) }
    dend_33 { pt3dadd( 64.4422, 128.595, -9.7285, 1.11 ) }
    dend_33 { pt3dadd( 64.1366, 129.338, -9.53265, 1.11 ) }
    dend_33 { pt3dadd( 63.4627, 130.685, -9.31176, 0.37 ) }
    dend_33 { pt3dadd( 62.6408, 132.276, -9.15915, 0.22 ) }
    dend_33 { pt3dadd( 62.312, 132.924, -9.11299, 0.59 ) }
    dend_33 { pt3dadd( 61.9889, 133.557, -9.08008, 1.11 ) }
    dend_33 { pt3dadd( 61.2984, 134.974, -9.03385, 0.29 ) }
    dend_33 { pt3dadd( 60.6106, 136.565, -9.02144, 0.96 ) }
    dend_33 { pt3dadd( 60.2356, 137.667, -9.07231, 0.15 ) }
    dend_33 { pt3dadd( 60.0806, 138.279, -9.13153, 0.22 ) }
    dend_33 { pt3dadd( 59.75, 139.725, -9.34555, 0.07 ) }
    dend_33 { pt3dadd( 59.6177, 140.325, -9.49127, 0.22 ) }
    dend_33 { pt3dadd( 59.5466, 140.66, -9.61157, 0.22 ) }
    dend_33 { pt3dadd( 59.3642, 141.652, -10.1048, 0.07 ) }
    dend_33 { pt3dadd( 59.3072, 142.078, -10.37, 0.22 ) }
    dend_33 { pt3dadd( 59.2778, 142.519, -10.6862, 0.22 ) }
    dend_33 { pt3dadd( 59.3054, 143.318, -11.3409, 0.15 ) }
    dend_33 { pt3dadd( 59.3182, 143.714, -11.6837, 0.29 ) }
    dend_33 { pt3dadd( 59.3107, 144.47, -12.332, 0.07 ) }
    dend_33 { pt3dadd( 59.2802, 144.914, -12.6925, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 54/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.56285, -31.4795, -0.557842, 0.81 ) }
    dend_31 { pt3dadd( -0.671174, -32.4432, -1.6641, 0.81 ) }
    dend_31 { pt3dadd( 0.482261, -33.5685, -3.01723, 0.81 ) }
    dend_31 { pt3dadd( 1.19387, -34.1831, -3.79184, 0.81 ) }
    dend_31 { pt3dadd( 2.07718, -34.8424, -4.64386, 0.88 ) }
    dend_31 { pt3dadd( 2.97946, -35.3971, -5.40675, 1.18 ) }
    dend_31 { pt3dadd( 3.63921, -35.7222, -5.90038, 1.18 ) }
    dend_31 { pt3dadd( 4.18351, -35.9012, -6.24805, 1.18 ) }
    dend_31 { pt3dadd( 5.17785, -36.1555, -6.7427, 0.96 ) }
    dend_31 { pt3dadd( 6.40238, -36.4513, -7.25007, 0.96 ) }
    dend_31 { pt3dadd( 7.79803, -36.7836, -7.75869, 0.81 ) }
    dend_31 { pt3dadd( 9.55844, -37.2382, -8.29827, 0.81 ) }
    dend_31 { pt3dadd( 10.6029, -37.5389, -8.54094, 0.81 ) }
    dend_31 { pt3dadd( 12.2042, -38.0418, -8.7522, 0.81 ) }
    dend_31 { pt3dadd( 13.6179, -38.5297, -8.75716, 0.88 ) }
    dend_31 { pt3dadd( 14.7872, -38.9888, -8.56545, 0.88 ) }
    dend_31 { pt3dadd( 15.8129, -39.468, -8.1422, 0.59 ) }
    dend_31 { pt3dadd( 16.8037, -39.9842, -7.43008, 0.59 ) }
    dend_31 { pt3dadd( 17.8994, -40.5557, -6.32191, 0.59 ) }
    dend_31 { pt3dadd( 18.5975, -40.9022, -5.40434, 0.74 ) }
    dend_31 { pt3dadd( 19.2569, -41.2082, -4.38786, 0.59 ) }
    dend_31 { pt3dadd( 20.0495, -41.569, -3.08928, 0.59 ) }
    dend_31 { pt3dadd( 20.7884, -41.9105, -1.91442, 0.88 ) }
    dend_31 { pt3dadd( 21.7172, -42.342, -0.608245, 0.88 ) }
    dend_31 { pt3dadd( 22.637, -42.7943, 0.483109, 1.03 ) }
    dend_31 { pt3dadd( 23.7489, -43.3881, 1.55189, 0.81 ) }
    dend_31 { pt3dadd( 24.5769, -43.8678, 2.18421, 0.66 ) }
    dend_31 { pt3dadd( 25.5202, -44.4857, 2.75488, 0.66 ) }
    dend_31 { pt3dadd( 26.6204, -45.339, 3.38381, 0.44 ) }
    dend_31 { pt3dadd( 27.8688, -46.4457, 4.16019, 0.44 ) }
    dend_31 { pt3dadd( 28.7774, -47.33, 4.87804, 0.66 ) }
    dend_31 { pt3dadd( 29.2616, -47.8453, 5.3878, 1.11 ) }
    dend_31 { pt3dadd( 30.0762, -48.7606, 6.59298, 1.25 ) }
    dend_31 { pt3dadd( 30.9739, -49.8, 8.29636, 0.44 ) }
    dend_31 { pt3dadd( 31.6591, -50.5834, 9.7726, 0.52 ) }
    dend_31 { pt3dadd( 32.3994, -51.3879, 11.4687, 0.52 ) }
    dend_31 { pt3dadd( 32.9466, -51.9576, 12.733, 0.52 ) }
    dend_31 { pt3dadd( 33.6919, -52.7701, 14.4878, 0.59 ) }
    dend_31 { pt3dadd( 34.1187, -53.2711, 15.5149, 0.96 ) }
    dend_31 { pt3dadd( 34.5678, -53.8531, 16.6089, 1.11 ) }
    dend_31 { pt3dadd( 35.082, -54.5886, 17.8896, 0.81 ) }
    dend_31 { pt3dadd( 35.6101, -55.3856, 19.2554, 0.52 ) }
    dend_31 { pt3dadd( 36.0224, -55.9511, 20.345, 0.52 ) }
    dend_31 { pt3dadd( 36.1795, -56.1472, 20.7517, 0.52 ) }
    dend_31 { pt3dadd( 36.4196, -56.4203, 21.3694, 0.52 ) }
    dend_31 { pt3dadd( 36.6771, -56.6679, 21.9095, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_31 { pt3dadd( 37.2649, -57.1324, 22.8192, 0.96 ) }
    dend_31 { pt3dadd( 38.3215, -57.8696, 24.0398, 0.44 ) }
    dend_31 { pt3dadd( 38.9757, -58.3215, 24.6574, 0.81 ) }
    dend_31 { pt3dadd( 39.6273, -58.799, 25.2278, 1.03 ) }
    dend_31 { pt3dadd( 40.914, -59.8305, 26.2438, 0.44 ) }
    dend_31 { pt3dadd( 41.7096, -60.5197, 26.8569, 0.44 ) }
    dend_31 { pt3dadd( 42.2701, -61.0371, 27.3033, 0.88 ) }
    dend_31 { pt3dadd( 42.8114, -61.567, 27.7906, 1.55 ) }
    dend_31 { pt3dadd( 43.5463, -62.2954, 28.5572, 1.55 ) }
    dend_31 { pt3dadd( 44.3632, -63.1483, 29.5782, 0.52 ) }
    dend_31 { pt3dadd( 45.2638, -64.1812, 30.916, 0.22 ) }
    dend_31 { pt3dadd( 45.6776, -64.6865, 31.5939, 0.22 ) }
    dend_31 { pt3dadd( 46.1088, -65.2453, 32.3884, 0.22 ) }
    dend_31 { pt3dadd( 46.4335, -65.6845, 33.0385, 0.74 ) }
    dend_31 { pt3dadd( 46.8081, -66.1901, 33.7812, 1.18 ) }
    dend_31 { pt3dadd( 47.0957, -66.5793, 34.3483, 1.18 ) }
    dend_31 { pt3dadd( 47.911, -67.6634, 35.7675, 0.22 ) }
    dend_31 { pt3dadd( 48.2927, -68.1346, 36.3385, 0.22 ) }
    dend_31 { pt3dadd( 48.9481, -68.8806, 37.149, 0.88 ) }
    dend_31 { pt3dadd( 49.8564, -69.8692, 38.1301, 0.15 ) }
    dend_31 { pt3dadd( 50.2889, -70.3162, 38.5411, 0.96 ) }
    dend_31 { pt3dadd( 50.8049, -70.8344, 38.9763, 1.25 ) }
    dend_31 { pt3dadd( 51.9215, -71.9142, 39.736, 0.15 ) }
    dend_31 { pt3dadd( 53.224, -73.1389, 40.4801, 0.15 ) }
    dend_31 { pt3dadd( 53.8027, -73.6812, 40.7683, 0.15 ) }
    dend_31 { pt3dadd( 54.7996, -74.6348, 41.2166, 0.15 ) }
    dend_31 { pt3dadd( 55.2955, -75.1242, 41.4469, 0.96 ) }
    dend_31 { pt3dadd( 56.177, -76.0368, 41.8872, 1.4 ) }
    dend_31 { pt3dadd( 56.527, -76.4159, 42.067, 1.33 ) }
    dend_31 { pt3dadd( 57.4095, -77.4236, 42.6117, 0.22 ) }
    dend_31 { pt3dadd( 57.8992, -77.9794, 42.9373, 0.29 ) }
    dend_31 { pt3dadd( 58.6561, -78.8371, 43.476, 0.59 ) }
    dend_31 { pt3dadd( 59.3311, -79.5759, 43.9733, 0.59 ) }
    dend_31 { pt3dadd( 59.9858, -80.2457, 44.4845, 1.7 ) }
    dend_31 { pt3dadd( 60.6133, -80.8323, 44.9779, 0.81 ) }
    dend_31 { pt3dadd( 61.7564, -81.7971, 45.8835, 0.15 ) }
    dend_31 { pt3dadd( 62.2386, -82.1731, 46.2786, 0.44 ) }
    dend_31 { pt3dadd( 62.8525, -82.6114, 46.7623, 0.74 ) }
    dend_31 { pt3dadd( 64.0298, -83.4105, 47.7276, 0.22 ) }
    dend_31 { pt3dadd( 64.7071, -83.8503, 48.2949, 0.96 ) }
    dend_31 { pt3dadd( 65.394, -84.2747, 48.8721, 1.25 ) }
    dend_31 { pt3dadd( 66.2532, -84.808, 49.6518, 0.29 ) }
    dend_31 { pt3dadd( 67.365, -85.4932, 50.6698, 0.07 ) }
    dend_31 { pt3dadd( 67.9119, -85.826, 51.1669, 0.29 ) }
    dend_31 { pt3dadd( 68.6944, -86.3031, 51.8469, 0.74 ) }
    dend_31 { pt3dadd( 69.9452, -87.0868, 52.9516, 0.15 ) }
    dend_31 { pt3dadd( 70.7927, -87.6474, 53.7712, 0.15 ) }
    dend_31 { pt3dadd( 71.1757, -87.9271, 54.2, 0.15 ) }
    dend_31 { pt3dadd( 71.4759, -88.1824, 54.6205, 0.74 ) }
    dend_31 { pt3dadd( 71.6558, -88.3491, 54.9034, 0.96 ) }
    dend_31 { pt3dadd( 72.411, -89.1061, 56.2196, 0.15 ) }
    dend_31 { pt3dadd( 72.8554, -89.573, 57.0221, 0.15 ) }
    dend_31 { pt3dadd( 73.4054, -90.1823, 58.0158, 0.88 ) }
    dend_31 { pt3dadd( 74.1046, -91.0452, 59.424, 0.15 ) }
    dend_31 { pt3dadd( 74.2684, -91.273, 59.8028, 0.15 ) }
    dend_31 { pt3dadd( 74.5326, -91.6555, 60.3993, 0.29 ) }
    dend_31 { pt3dadd( 74.7226, -91.9493, 60.834, 0.29 ) }
    dend_31 { pt3dadd( 75.1204, -92.5961, 61.8335, 0.15 ) }
    dend_31 { pt3dadd( 75.4853, -93.2547, 62.9564, 0.15 ) }
    dend_31 { pt3dadd( 75.7658, -93.7839, 63.9865, 0.15 ) }
    dend_31 { pt3dadd( 76.0054, -94.2678, 65.0748, 1.03 ) }
    dend_31 { pt3dadd( 76.3159, -94.9553, 66.947, 0.15 ) }
    dend_31 { pt3dadd( 76.5201, -95.4113, 68.4295, 0.15 ) }
    dend_31 { pt3dadd( 76.6696, -95.6865, 69.491, 0.15 ) }
    dend_31 { pt3dadd( 76.8654, -96.0131, 70.933, 0.15 ) }
    dend_31 { pt3dadd( 77.0374, -96.3113, 72.4422, 0.15 ) }
    dend_31 { pt3dadd( 77.1837, -96.5914, 74.1424, 0.15 ) }
    dend_31 { pt3dadd( 77.2865, -96.7954, 75.5973, 0.15 ) }
    dend_31 { pt3dadd( 77.3842, -96.9855, 76.9838, 0.15 ) }
    dend_31 { pt3dadd( 77.5006, -97.2141, 78.6956, 0.15 ) }
    dend_31 { pt3dadd( 77.6097, -97.47, 80.6224, 0.15 ) }
    dend_31 { pt3dadd( 77.6735, -97.6106, 81.7004, 0.15 ) }
    dend_31 { pt3dadd( 77.818, -97.9549, 84.3493, 0.15 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 73/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.56285, -31.4795, -0.557842, 0.96 ) }
    dend_26 { pt3dadd( -2.4914, -32.7209, -0.915752, 0.96 ) }
    dend_26 { pt3dadd( -3.27914, -34.0634, -1.31672, 0.74 ) }
    dend_26 { pt3dadd( -3.92162, -35.5145, -1.77029, 0.74 ) }
    dend_26 { pt3dadd( -4.45703, -37.0424, -2.25934, 1.03 ) }
    dend_26 { pt3dadd( -4.76473, -38.1177, -2.6156, 1.18 ) }
    dend_26 { pt3dadd( -5.19131, -39.7774, -3.18382, 0.81 ) }
    dend_26 { pt3dadd( -5.42205, -41.0984, -3.6393, 0.81 ) }
    dend_26 { pt3dadd( -5.63295, -42.4997, -4.12259, 0.88 ) }
    dend_26 { pt3dadd( -5.75112, -43.2337, -4.37226, 1.25 ) }
    dend_26 { pt3dadd( -6.00454, -44.5662, -4.79777, 1.25 ) }
    dend_26 { pt3dadd( -6.48276, -46.7426, -5.45966, 0.96 ) }
    dend_26 { pt3dadd( -6.91078, -48.5035, -5.90759, 0.74 ) }
    dend_26 { pt3dadd( -7.27801, -50.0385, -6.19523, 0.74 ) }
    dend_26 { pt3dadd( -7.57808, -51.4854, -6.40296, 0.96 ) }
    dend_26 { pt3dadd( -7.78051, -52.8264, -6.53902, 0.74 ) }
    dend_26 { pt3dadd( -7.89632, -54.3796, -6.62241, 0.74 ) }
    dend_26 { pt3dadd( -7.88954, -56.6387, -6.6126, 0.96 ) }
    dend_26 { pt3dadd( -7.78421, -58.2349, -6.51754, 0.74 ) }
    dend_26 { pt3dadd( -7.59022, -59.7499, -6.36317, 0.81 ) }
    dend_26 { pt3dadd( -7.28177, -61.5151, -6.0994, 1.18 ) }
    dend_26 { pt3dadd( -6.89477, -63.3281, -5.75276, 1.18 ) }
    dend_26 { pt3dadd( -6.27042, -65.909, -5.1807, 0.96 ) }
    dend_26 { pt3dadd( -5.7406, -68.0502, -4.66202, 0.96 ) }
    dend_26 { pt3dadd( -5.36727, -69.6919, -4.2224, 1.03 ) }
    dend_26 { pt3dadd( -5.01087, -71.4731, -3.68825, 0.74 ) }
    dend_26 { pt3dadd( -4.75067, -73.0588, -3.19403, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_26 { pt3dadd( -4.61461, -74.6406, -2.68909, 1.03 ) }
    dend_26 { pt3dadd( -4.66778, -76.2977, -2.1859, 0.88 ) }
    dend_26 { pt3dadd( -4.98202, -78.0642, -1.7083, 0.66 ) }
    dend_26 { pt3dadd( -5.28461, -79.1017, -1.46136, 0.59 ) }
    dend_26 { pt3dadd( -5.65079, -80.1153, -1.25456, 0.81 ) }
    dend_26 { pt3dadd( -6.37585, -81.9423, -0.93497, 0.59 ) }
    dend_26 { pt3dadd( -6.95065, -83.4017, -0.738836, 0.81 ) }
    dend_26 { pt3dadd( -7.35161, -84.5584, -0.660543, 0.81 ) }
    dend_26 { pt3dadd( -7.74159, -85.9613, -0.677263, 0.81 ) }
    dend_26 { pt3dadd( -8.02385, -87.2376, -0.767956, 1.25 ) }
    dend_26 { pt3dadd( -8.28124, -88.676, -0.950035, 1.25 ) }
    dend_26 { pt3dadd( -8.60322, -90.6409, -1.36717, 0.66 ) }
    dend_26 { pt3dadd( -8.84467, -92.0891, -1.79483, 0.66 ) }
    dend_26 { pt3dadd( -9.06752, -93.3288, -2.27641, 1.03 ) }
    dend_26 { pt3dadd( -9.2857, -94.6102, -2.90816, 1.33 ) }
    dend_26 { pt3dadd( -9.38071, -95.6246, -3.49195, 0.88 ) }
    dend_26 { pt3dadd( -9.32776, -96.8343, -4.25965, 0.59 ) }
    dend_26 { pt3dadd( -9.12616, -97.6243, -4.76717, 0.59 ) }
    dend_26 { pt3dadd( -8.7064, -98.4515, -5.19513, 0.59 ) }
    dend_26 { pt3dadd( -7.95968, -99.4851, -5.61156, 0.59 ) }
    dend_26 { pt3dadd( -6.8094, -100.915, -6.06412, 0.22 ) }
    dend_26 { pt3dadd( -6.21001, -101.685, -6.27333, 0.74 ) }
    dend_26 { pt3dadd( -5.64216, -102.488, -6.48698, 1.11 ) }
    dend_26 { pt3dadd( -4.80776, -103.932, -6.92253, 0.52 ) }
    dend_26 { pt3dadd( -4.36415, -104.991, -7.29925, 0.66 ) }
    dend_26 { pt3dadd( -4.0196, -106.204, -7.77351, 0.96 ) }
    dend_26 { pt3dadd( -3.73639, -107.707, -8.34834, 0.81 ) }
    dend_26 { pt3dadd( -3.55652, -108.908, -8.75873, 0.59 ) }
    dend_26 { pt3dadd( -3.4001, -110.145, -9.12877, 0.59 ) }
    dend_26 { pt3dadd( -3.251, -111.579, -9.47489, 0.44 ) }
    dend_26 { pt3dadd( -3.15775, -113.108, -9.67258, 0.74 ) }
    dend_26 { pt3dadd( -3.15402, -114.87, -9.75865, 0.74 ) }
    dend_26 { pt3dadd( -3.24998, -116.245, -9.76837, 0.81 ) }
    dend_26 { pt3dadd( -3.42681, -117.414, -9.77332, 1.03 ) }
    dend_26 { pt3dadd( -3.77473, -118.843, -9.82989, 1.03 ) }
    dend_26 { pt3dadd( -4.43025, -120.868, -10.0534, 0.59 ) }
    dend_26 { pt3dadd( -5.00187, -122.399, -10.3249, 0.44 ) }
    dend_26 { pt3dadd( -5.55685, -123.778, -10.6116, 0.52 ) }
    dend_26 { pt3dadd( -6.09955, -125.071, -10.876, 1.03 ) }
    dend_26 { pt3dadd( -6.72317, -126.556, -11.1162, 0.81 ) }
    dend_26 { pt3dadd( -7.29374, -127.992, -11.2285, 0.29 ) }
    dend_26 { pt3dadd( -7.81753, -129.53, -11.1699, 0.29 ) }
    dend_26 { pt3dadd( -8.12406, -130.641, -10.9628, 0.44 ) }
    dend_26 { pt3dadd( -8.37732, -131.723, -10.6217, 0.96 ) }
    dend_26 { pt3dadd( -8.68127, -133.177, -10.0538, 1.11 ) }
    dend_26 { pt3dadd( -8.99639, -134.879, -9.3777, 0.59 ) }
    dend_26 { pt3dadd( -9.24869, -136.324, -8.83937, 0.59 ) }
    dend_26 { pt3dadd( -9.57064, -138.278, -8.23487, 0.52 ) }
    dend_26 { pt3dadd( -9.71003, -139.34, -8.01279, 0.52 ) }
    dend_26 { pt3dadd( -9.87578, -141.094, -7.79976, 0.81 ) }
    dend_26 { pt3dadd( -9.99278, -142.889, -7.77822, 0.88 ) }
    dend_26 { pt3dadd( -10.0449, -143.928, -7.86601, 0.66 ) }
    dend_26 { pt3dadd( -10.0908, -145.219, -8.1169, 0.52 ) }
    dend_26 { pt3dadd( -10.1003, -146.563, -8.51577, 0.81 ) }
    dend_26 { pt3dadd( -10.0634, -147.429, -8.82634, 0.52 ) }
    dend_26 { pt3dadd( -9.92268, -148.68, -9.31772, 0.37 ) }
    dend_26 { pt3dadd( -9.75017, -149.663, -9.70904, 0.96 ) }
    dend_26 { pt3dadd( -9.38816, -151.255, -10.2966, 0.74 ) }
    dend_26 { pt3dadd( -9.08545, -152.373, -10.6612, 0.96 ) }
    dend_26 { pt3dadd( -8.83077, -153.277, -10.8604, 0.96 ) }
    dend_26 { pt3dadd( -8.48438, -154.651, -10.9615, 0.37 ) }
    dend_26 { pt3dadd( -8.31261, -155.684, -10.7921, 0.29 ) }
    dend_26 { pt3dadd( -8.225, -157.224, -10.1722, 0.59 ) }
    dend_26 { pt3dadd( -8.25116, -157.847, -9.78197, 0.59 ) }
    dend_26 { pt3dadd( -8.36376, -159.044, -8.90243, 0.59 ) }
    dend_26 { pt3dadd( -8.50426, -160.243, -7.96504, 0.96 ) }
    dend_26 { pt3dadd( -8.68049, -161.644, -6.84925, 0.52 ) }
    dend_26 { pt3dadd( -8.80088, -162.574, -6.13376, 0.44 ) }
    dend_26 { pt3dadd( -8.93584, -163.542, -5.43147, 0.44 ) }
    dend_26 { pt3dadd( -9.09395, -164.515, -4.72522, 0.88 ) }
    dend_26 { pt3dadd( -9.27678, -165.525, -4.02804, 0.44 ) }
    dend_26 { pt3dadd( -9.49208, -166.56, -3.36739, 0.37 ) }
    dend_26 { pt3dadd( -9.78579, -167.69, -2.72394, 0.74 ) }
    dend_26 { pt3dadd( -10.1904, -168.93, -2.11237, 0.22 ) }
    dend_26 { pt3dadd( -10.6618, -170.132, -1.57475, 0.29 ) }
    dend_26 { pt3dadd( -11.2148, -171.335, -1.03448, 0.59 ) }
    dend_26 { pt3dadd( -11.9377, -172.777, -0.393516, 1.18 ) }
    dend_26 { pt3dadd( -12.5836, -174.064, 0.157128, 0.66 ) }
    dend_26 { pt3dadd( -13.0988, -175.272, 0.6741, 0.37 ) }
    dend_26 { pt3dadd( -13.4339, -176.313, 1.15987, 0.29 ) }
    dend_26 { pt3dadd( -13.5849, -177.091, 1.58049, 0.29 ) }
    dend_26 { pt3dadd( -13.6222, -177.647, 1.9308, 0.74 ) }
    dend_26 { pt3dadd( -13.6006, -178.217, 2.34671, 1.11 ) }
    dend_26 { pt3dadd( -13.42, -179.831, 3.51216, 0.44 ) }
    dend_26 { pt3dadd( -13.2949, -180.845, 4.14822, 0.44 ) }
    dend_26 { pt3dadd( -13.2412, -181.646, 4.50691, 0.44 ) }
    dend_26 { pt3dadd( -13.2387, -182.794, 4.90178, 0.29 ) }
    dend_26 { pt3dadd( -13.3169, -183.959, 5.20361, 0.29 ) }
    dend_26 { pt3dadd( -13.5054, -185.468, 5.49879, 0.59 ) }
    dend_26 { pt3dadd( -13.7556, -187.014, 5.71777, 1.18 ) }
    dend_26 { pt3dadd( -14.093, -189.209, 6.00193, 1.4 ) }
    dend_26 { pt3dadd( -14.2478, -190.353, 6.15877, 1.18 ) }
    dend_26 { pt3dadd( -14.3785, -191.916, 6.34904, 0.52 ) }
    dend_26 { pt3dadd( -14.4149, -193.044, 6.42755, 0.52 ) }
    dend_26 { pt3dadd( -14.4057, -194.42, 6.44467, 0.96 ) }
    dend_26 { pt3dadd( -14.2961, -196.013, 6.32726, 0.74 ) }
    dend_26 { pt3dadd( -14.1674, -196.904, 6.17512, 0.74 ) }
    dend_26 { pt3dadd( -13.8707, -198.357, 5.74968, 0.37 ) }
    dend_26 { pt3dadd( -13.5235, -199.648, 5.22209, 0.44 ) }
    dend_26 { pt3dadd( -13.2867, -200.416, 4.83573, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( -12.9984, -201.29, 4.3508, 0.44 ) }
    dend_26 { pt3dadd( -12.6923, -202.244, 3.83335, 0.29 ) }
    dend_26 { pt3dadd( -12.4746, -203.051, 3.51453, 0.29 ) }
    dend_26 { pt3dadd( -12.3421, -203.817, 3.39532, 0.29 ) }
    dend_26 { pt3dadd( -12.2707, -204.94, 3.52319, 0.88 ) }
    dend_26 { pt3dadd( -12.2932, -206.114, 3.89515, 0.81 ) }
    dend_26 { pt3dadd( -12.3412, -207.004, 4.28906, 0.22 ) }
    dend_26 { pt3dadd( -12.3862, -208.562, 5.04771, 0.22 ) }
    dend_26 { pt3dadd( -12.3318, -209.734, 5.6088, 0.44 ) }
    dend_26 { pt3dadd( -12.1145, -211.229, 6.25583, 1.11 ) }
    dend_26 { pt3dadd( -11.7995, -212.409, 6.69173, 0.52 ) }
    dend_26 { pt3dadd( -11.1842, -213.858, 7.06533, 0.22 ) }
    dend_26 { pt3dadd( -10.3499, -215.28, 7.20912, 0.22 ) }
    dend_26 { pt3dadd( -9.2198, -216.881, 7.15361, 0.22 ) }
    dend_26 { pt3dadd( -8.40165, -217.972, 7.02996, 0.37 ) }
    dend_26 { pt3dadd( -7.96607, -218.578, 6.94059, 0.52 ) }
    dend_26 { pt3dadd( -7.43796, -219.449, 6.83404, 0.52 ) }
    dend_26 { pt3dadd( -6.87847, -220.794, 6.75987, 1.11 ) }
    dend_26 { pt3dadd( -6.63302, -221.95, 6.79246, 1.11 ) }
    dend_26 { pt3dadd( -6.50005, -223.729, 6.95082, 0.52 ) }
    dend_26 { pt3dadd( -6.49651, -225.347, 7.16351, 0.29 ) }
    dend_26 { pt3dadd( -6.55393, -226.936, 7.41671, 0.52 ) }
    dend_26 { pt3dadd( -6.63293, -228.411, 7.65131, 0.52 ) }
    dend_26 { pt3dadd( -6.6735, -229.512, 7.77986, 0.22 ) }
    dend_26 { pt3dadd( -6.67933, -230.203, 7.8052, 0.22 ) }
    dend_26 { pt3dadd( -6.67188, -230.93, 7.77719, 0.59 ) }
    dend_26 { pt3dadd( -6.66819, -231.908, 7.69032, 1.11 ) }
    dend_26 { pt3dadd( -6.69775, -233.535, 7.48767, 1.11 ) }
    dend_26 { pt3dadd( -6.80462, -235.422, 7.25095, 0.44 ) }
    dend_26 { pt3dadd( -6.92817, -236.66, 7.11287, 0.44 ) }
    dend_26 { pt3dadd( -7.09289, -237.95, 7.01876, 0.44 ) }
    dend_26 { pt3dadd( -7.37038, -239.605, 6.96202, 0.29 ) }
    dend_26 { pt3dadd( -7.57955, -240.464, 6.98219, 0.29 ) }
    dend_26 { pt3dadd( -7.86829, -241.425, 7.06939, 0.88 ) }
    dend_26 { pt3dadd( -8.14957, -242.321, 7.17257, 0.96 ) }
    dend_26 { pt3dadd( -8.56283, -243.791, 7.32961, 0.37 ) }
    dend_26 { pt3dadd( -8.84571, -244.964, 7.44452, 0.37 ) }
    dend_26 { pt3dadd( -9.29582, -246.745, 7.65224, 0.37 ) }
    dend_26 { pt3dadd( -9.45234, -247.265, 7.72446, 0.37 ) }
    dend_26 { pt3dadd( -9.74775, -248.156, 7.86142, 1.03 ) }
    dend_26 { pt3dadd( -9.95787, -248.757, 7.9554, 1.03 ) }
    dend_26 { pt3dadd( -10.3414, -249.876, 8.12807, 0.52 ) }
    dend_26 { pt3dadd( -10.8508, -251.754, 8.45099, 0.22 ) }
    dend_26 { pt3dadd( -11.0256, -252.653, 8.63825, 0.22 ) }
    dend_26 { pt3dadd( -11.2252, -253.664, 8.91469, 0.29 ) }
    dend_26 { pt3dadd( -11.4008, -254.451, 9.18153, 0.59 ) }
    dend_26 { pt3dadd( -11.5618, -255.11, 9.42413, 0.88 ) }
    dend_26 { pt3dadd( -11.7694, -255.886, 9.70203, 0.96 ) }
    dend_26 { pt3dadd( -12.0907, -257.058, 10.1259, 0.37 ) }
    dend_26 { pt3dadd( -12.4846, -258.46, 10.6479, 0.22 ) }
    dend_26 { pt3dadd( -12.6569, -259.152, 10.906, 0.22 ) }
    dend_26 { pt3dadd( -12.8059, -259.928, 11.19, 0.96 ) }
    dend_26 { pt3dadd( -12.9905, -261.285, 11.6618, 0.44 ) }
    dend_26 { pt3dadd( -13.0689, -262.652, 12.0843, 0.22 ) }
    dend_26 { pt3dadd( -13.0307, -263.527, 12.2985, 0.22 ) }
    dend_26 { pt3dadd( -12.9048, -264.679, 12.5293, 0.22 ) }
    dend_26 { pt3dadd( -12.8534, -265.115, 12.6109, 0.22 ) }
    dend_26 { pt3dadd( -12.7735, -265.932, 12.7516, 0.74 ) }
    dend_26 { pt3dadd( -12.7391, -266.909, 12.8891, 0.88 ) }
    dend_26 { pt3dadd( -12.8438, -268.187, 12.9859, 0.22 ) }
    dend_26 { pt3dadd( -13.0297, -269.07, 13.0053, 0.22 ) }
    dend_26 { pt3dadd( -13.2541, -269.764, 13.0124, 0.22 ) }
    dend_26 { pt3dadd( -13.5693, -270.537, 13.0331, 0.22 ) }
    dend_26 { pt3dadd( -13.9246, -271.285, 13.0633, 0.66 ) }
    dend_26 { pt3dadd( -14.3826, -272.159, 13.1316, 0.74 ) }
    dend_26 { pt3dadd( -15.0206, -273.317, 13.2475, 0.44 ) }
    dend_26 { pt3dadd( -15.6484, -274.465, 13.3457, 0.44 ) }
    dend_26 { pt3dadd( -16.4384, -275.896, 13.4111, 0.74 ) }
    dend_26 { pt3dadd( -17.2109, -277.258, 13.4211, 0.96 ) }
    dend_26 { pt3dadd( -17.9093, -278.469, 13.3747, 0.59 ) }
    dend_26 { pt3dadd( -18.7062, -279.84, 13.249, 0.22 ) }
    dend_26 { pt3dadd( -19.318, -280.873, 13.1762, 0.22 ) }
    dend_26 { pt3dadd( -19.9657, -281.954, 13.139, 0.22 ) }
    dend_26 { pt3dadd( -20.4249, -282.699, 13.1562, 0.22 ) }
    dend_26 { pt3dadd( -20.6321, -283.015, 13.1904, 0.22 ) }
    dend_26 { pt3dadd( -21.2051, -283.838, 13.3749, 0.88 ) }
    dend_26 { pt3dadd( -22.7539, -286.017, 14.1467, 0.22 ) }
    dend_26 { pt3dadd( -23.3219, -286.813, 14.4874, 0.22 ) }
    dend_26 { pt3dadd( -23.7025, -287.355, 14.7337, 0.74 ) }
    dend_26 { pt3dadd( -24.1594, -288.051, 15.0425, 0.96 ) }
    dend_26 { pt3dadd( -25.1358, -289.673, 15.7378, 0.37 ) }
    dend_26 { pt3dadd( -25.7887, -290.906, 16.2281, 0.22 ) }
    dend_26 { pt3dadd( -26.1831, -291.803, 16.5053, 0.88 ) }
    dend_26 { pt3dadd( -26.3683, -292.309, 16.6671, 0.88 ) }
    dend_26 { pt3dadd( -26.7077, -293.506, 17.0752, 0.22 ) }
    dend_26 { pt3dadd( -26.8162, -294.049, 17.2569, 0.22 ) }
    dend_26 { pt3dadd( -26.8893, -294.589, 17.4202, 0.22 ) }
    dend_26 { pt3dadd( -27.0061, -295.693, 17.7089, 0.81 ) }
    dend_26 { pt3dadd( -27.1206, -297.387, 18.1062, 0.29 ) }
    dend_26 { pt3dadd( -27.177, -298.794, 18.4427, 0.44 ) }
    dend_26 { pt3dadd( -27.1875, -299.946, 18.7073, 0.88 ) }
    dend_26 { pt3dadd( -27.1667, -300.865, 18.9351, 0.88 ) }
    dend_26 { pt3dadd( -27.0878, -301.988, 19.2399, 0.29 ) }
    dend_26 { pt3dadd( -26.9493, -302.954, 19.5404, 0.22 ) }
    dend_26 { pt3dadd( -26.7323, -303.927, 19.8831, 0.22 ) }
    dend_26 { pt3dadd( -26.5124, -304.627, 20.2179, 0.22 ) }
    dend_26 { pt3dadd( -26.239, -305.392, 20.6708, 0.22 ) }
    dend_26 { pt3dadd( -26.0534, -305.909, 21.0245, 0.22 ) }
    dend_26 { pt3dadd( -25.8377, -306.665, 21.5579, 0.74 ) }
    dend_26 { pt3dadd( -25.7965, -306.975, 21.7674, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_26 { pt3dadd( -25.7527, -308.66, 22.7661, 0.22 ) }
    dend_26 { pt3dadd( -25.816, -309.414, 23.1606, 0.22 ) }
    dend_26 { pt3dadd( -25.9366, -310.035, 23.4282, 0.22 ) }
    dend_26 { pt3dadd( -26.2223, -310.982, 23.76, 1.11 ) }
    dend_26 { pt3dadd( -26.7445, -312.215, 24.0569, 0.29 ) }
    dend_26 { pt3dadd( -27.2265, -313.168, 24.1775, 0.22 ) }
    dend_26 { pt3dadd( -27.768, -314.149, 24.1686, 0.22 ) }
    dend_26 { pt3dadd( -28.239, -315.047, 24.1297, 0.44 ) }
    dend_26 { pt3dadd( -28.6669, -315.913, 24.1293, 0.88 ) }
    dend_26 { pt3dadd( -29.3053, -317.304, 24.2448, 0.96 ) }
    dend_26 { pt3dadd( -29.8459, -318.62, 24.5099, 0.29 ) }
    dend_26 { pt3dadd( -30.1929, -319.536, 24.8128, 0.66 ) }
    dend_26 { pt3dadd( -30.6018, -320.844, 25.3784, 0.74 ) }
    dend_26 { pt3dadd( -30.987, -322.446, 26.1921, 0.29 ) }
    dend_26 { pt3dadd( -31.1871, -323.752, 26.9018, 0.66 ) }
    dend_26 { pt3dadd( -31.2883, -325.333, 27.8362, 0.22 ) }
    dend_26 { pt3dadd( -31.3052, -325.954, 28.2329, 0.22 ) }
    dend_26 { pt3dadd( -31.3232, -326.717, 28.734, 0.81 ) }
    dend_26 { pt3dadd( -31.3319, -327.296, 29.0792, 0.96 ) }
    dend_26 { pt3dadd( -31.3306, -328.463, 29.6901, 0.37 ) }
    dend_26 { pt3dadd( -31.3429, -329.667, 30.2601, 0.22 ) }
    dend_26 { pt3dadd( -31.4075, -330.552, 30.6589, 0.22 ) }
    dend_26 { pt3dadd( -31.4861, -331.161, 30.9505, 0.22 ) }
    dend_26 { pt3dadd( -31.551, -331.549, 31.1684, 0.66 ) }
    dend_26 { pt3dadd( -31.6613, -332.11, 31.5294, 1.11 ) }
    dend_26 { pt3dadd( -31.8554, -333.03, 32.1469, 0.88 ) }
    dend_26 { pt3dadd( -32.1225, -334.36, 32.896, 0.22 ) }
    dend_26 { pt3dadd( -32.3495, -335.607, 33.466, 0.88 ) }
    dend_26 { pt3dadd( -32.6281, -337.085, 34.0315, 0.22 ) }
    dend_26 { pt3dadd( -32.8034, -337.974, 34.3082, 0.22 ) }
    dend_26 { pt3dadd( -32.9955, -338.836, 34.5326, 0.74 ) }
    dend_26 { pt3dadd( -33.4337, -340.457, 34.9673, 0.15 ) }
    dend_26 { pt3dadd( -33.7857, -341.525, 35.2258, 0.15 ) }
    dend_26 { pt3dadd( -34.0207, -342.11, 35.3513, 0.66 ) }
    dend_26 { pt3dadd( -34.3811, -342.929, 35.495, 0.81 ) }
    dend_26 { pt3dadd( -35.0049, -344.279, 35.7612, 0.22 ) }
    dend_26 { pt3dadd( -35.6691, -345.594, 36.1981, 0.22 ) }
    dend_26 { pt3dadd( -35.973, -346.153, 36.5106, 0.59 ) }
    dend_26 { pt3dadd( -36.4741, -346.993, 37.1163, 1.03 ) }
    // Section: dend_22, id: dend_22, parent: dend_0 (entry count 39/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.72964, 1.48027, -10.46, 1.99 ) }
    dend_22 { pt3dadd( -1.67097, 3.70892, -12.2695, 1.99 ) }
    dend_22 { pt3dadd( -1.70996, 5.89194, -13.9385, 1.77 ) }
    dend_22 { pt3dadd( -1.86897, 7.50435, -15.1126, 1.84 ) }
    dend_22 { pt3dadd( -2.10287, 9.02152, -16.1653, 1.4 ) }
    dend_22 { pt3dadd( -2.44148, 10.6054, -17.2175, 1.25 ) }
    dend_22 { pt3dadd( -2.85842, 12.0874, -18.161, 1.4 ) }
    dend_22 { pt3dadd( -3.32381, 13.3279, -18.8759, 1.4 ) }
    dend_22 { pt3dadd( -4.18709, 15.2736, -19.8122, 1.03 ) }
    dend_22 { pt3dadd( -5.02777, 17.0514, -20.5162, 1.03 ) }
    dend_22 { pt3dadd( -6.03085, 19.0223, -21.227, 1.11 ) }
    dend_22 { pt3dadd( -7.13725, 21.1059, -21.9236, 0.96 ) }
    dend_22 { pt3dadd( -8.32609, 23.3786, -22.633, 0.96 ) }
    dend_22 { pt3dadd( -9.43381, 25.5862, -23.2992, 0.88 ) }
    dend_22 { pt3dadd( -10.1018, 27.0157, -23.6605, 1.18 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 54/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.72964, 1.48027, -10.46, 3.32 ) }
    dend_1 { pt3dadd( -3.47464, 0.451458, -10.4651, 3.32 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 2.44158, 39.2021, 0.0, 0.28953 ) }
    axon_1 { pt3dadd( 3.27908, 54.1787, 0.0, 0.28953 ) }
    axon_1 { pt3dadd( 4.11658, 69.1553, 0.0, 0.28953 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 59/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -2.61638, 29.5578, 11.4347, 1.7 ) }
    dend_48 { pt3dadd( -2.89329, 30.6722, 11.9442, 1.7 ) }
    dend_48 { pt3dadd( -3.25148, 32.1347, 12.6095, 1.03 ) }
    dend_48 { pt3dadd( -3.69095, 33.9292, 13.4257, 0.74 ) }
    dend_48 { pt3dadd( -4.00685, 35.219, 14.0124, 0.74 ) }
    dend_48 { pt3dadd( -4.31315, 36.4697, 14.5813, 0.74 ) }
    dend_48 { pt3dadd( -4.5609, 37.4813, 15.0415, 1.03 ) }
    dend_48 { pt3dadd( -4.85521, 38.8375, 15.7525, 1.84 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 67/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -2.61638, 29.5578, 11.4347, 0.29 ) }
    dend_47 { pt3dadd( -2.33134, 30.2071, 12.3362, 0.29 ) }
    dend_47 { pt3dadd( -1.76065, 31.3841, 13.8219, 0.22 ) }
    dend_47 { pt3dadd( -1.30698, 32.2934, 14.7617, 0.22 ) }
    dend_47 { pt3dadd( -0.982528, 32.9608, 15.4079, 0.37 ) }
    dend_47 { pt3dadd( -0.579236, 33.8378, 16.2202, 0.37 ) }
    dend_47 { pt3dadd( -0.158817, 34.787, 17.0935, 0.37 ) }
    dend_47 { pt3dadd( 0.188632, 35.6103, 17.8071, 0.37 ) }
    dend_47 { pt3dadd( 0.71044, 36.8629, 18.7743, 0.22 ) }
    dend_47 { pt3dadd( 1.19812, 37.9527, 19.5812, 0.22 ) }
    dend_47 { pt3dadd( 1.70665, 39.0917, 20.4182, 0.22 ) }
    dend_47 { pt3dadd( 2.00054, 39.7297, 20.8962, 0.22 ) }
    dend_47 { pt3dadd( 2.35305, 40.486, 21.5184, 0.22 ) }
    dend_47 { pt3dadd( 2.57793, 40.9382, 21.9551, 0.37 ) }
    dend_47 { pt3dadd( 3.20377, 42.0761, 23.1771, 0.37 ) }
    dend_47 { pt3dadd( 3.69427, 42.8811, 24.0198, 0.22 ) }
    dend_47 { pt3dadd( 4.39875, 43.9642, 25.1834, 0.44 ) }
    dend_47 { pt3dadd( 4.92043, 44.766, 26.0776, 0.81 ) }
    dend_47 { pt3dadd( 5.43677, 45.5739, 27.0094, 0.81 ) }
    dend_47 { pt3dadd( 6.07421, 46.5791, 28.2015, 0.29 ) }
    dend_47 { pt3dadd( 6.6796, 47.5558, 29.3565, 0.22 ) }
    dend_47 { pt3dadd( 7.27486, 48.5177, 30.4759, 0.22 ) }
    dend_47 { pt3dadd( 7.83081, 49.4521, 31.4714, 0.22 ) }
    dend_47 { pt3dadd( 8.3057, 50.2778, 32.2954, 0.22 ) }
    dend_47 { pt3dadd( 8.7859, 51.1043, 33.1003, 0.22 ) }
    dend_47 { pt3dadd( 9.34181, 52.0055, 34.0371, 0.22 ) }
    dend_47 { pt3dadd( 9.61549, 52.4393, 34.5263, 0.66 ) }
    dend_47 { pt3dadd( 9.94167, 52.932, 35.0725, 1.55 ) }
    dend_47 { pt3dadd( 10.7943, 54.1405, 36.4271, 2.06 ) }
    dend_47 { pt3dadd( 12.0438, 55.8329, 38.2845, 0.22 ) }
    dend_47 { pt3dadd( 12.7621, 56.799, 39.3395, 0.22 ) }
    dend_47 { pt3dadd( 13.4243, 57.6764, 40.3232, 0.22 ) }
    dend_47 { pt3dadd( 13.9521, 58.3995, 41.131, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_47 { pt3dadd( 14.463, 59.1491, 41.9846, 0.44 ) }
    dend_47 { pt3dadd( 15.026, 60.0816, 42.9943, 0.22 ) }
    dend_47 { pt3dadd( 15.6235, 61.3568, 44.1955, 0.22 ) }
    dend_47 { pt3dadd( 16.1486, 62.7693, 45.325, 0.44 ) }
    dend_47 { pt3dadd( 16.5732, 64.1565, 46.3591, 0.15 ) }
    dend_47 { pt3dadd( 16.9014, 65.6077, 47.4432, 0.15 ) }
    dend_47 { pt3dadd( 17.0214, 66.3486, 47.9804, 0.15 ) }
    dend_47 { pt3dadd( 17.2035, 67.8393, 49.0214, 0.15 ) }
    dend_47 { pt3dadd( 17.3594, 69.0446, 49.7791, 0.37 ) }
    dend_47 { pt3dadd( 17.5307, 70.1424, 50.4464, 0.59 ) }
    dend_47 { pt3dadd( 17.8314, 71.4851, 51.2703, 1.25 ) }
    dend_47 { pt3dadd( 18.2089, 72.704, 52.058, 2.21 ) }
    dend_47 { pt3dadd( 18.5374, 73.5072, 52.6408, 2.21 ) }
    dend_47 { pt3dadd( 19.3515, 75.0704, 53.8541, 0.52 ) }
    dend_47 { pt3dadd( 20.1588, 76.3684, 54.9031, 0.15 ) }
    dend_47 { pt3dadd( 20.8691, 77.3687, 55.669, 0.15 ) }
    dend_47 { pt3dadd( 21.5256, 78.1824, 56.2606, 0.29 ) }
    dend_47 { pt3dadd( 22.095, 78.8245, 56.705, 0.29 ) }
    dend_47 { pt3dadd( 22.8254, 79.6454, 57.215, 0.07 ) }
    dend_47 { pt3dadd( 23.6155, 80.539, 57.7046, 0.07 ) }
    dend_47 { pt3dadd( 24.2204, 81.2403, 58.0555, 0.07 ) }
    dend_47 { pt3dadd( 24.7277, 81.8562, 58.34, 0.88 ) }
    dend_47 { pt3dadd( 25.354, 82.6548, 58.6858, 1.62 ) }
    dend_47 { pt3dadd( 27.0279, 84.8874, 59.5734, 0.15 ) }
    dend_47 { pt3dadd( 27.858, 85.998, 60.0246, 0.15 ) }
    dend_47 { pt3dadd( 28.6823, 87.105, 60.4794, 0.15 ) }
    dend_47 { pt3dadd( 29.2931, 87.9072, 60.8192, 0.29 ) }
    dend_47 { pt3dadd( 29.9818, 88.7791, 61.2774, 0.29 ) }
    dend_47 { pt3dadd( 31.2958, 90.3703, 62.3049, 0.07 ) }
    dend_47 { pt3dadd( 32.3131, 91.5524, 63.2, 0.07 ) }
    dend_47 { pt3dadd( 32.8555, 92.1812, 63.7207, 0.07 ) }
    dend_47 { pt3dadd( 33.6335, 93.0644, 64.5177, 0.96 ) }
    dend_47 { pt3dadd( 35.3532, 94.9572, 66.3834, 0.15 ) }
    dend_47 { pt3dadd( 36.1579, 95.8394, 67.3014, 0.15 ) }
    dend_47 { pt3dadd( 36.7213, 96.4494, 68.0018, 0.15 ) }
    dend_47 { pt3dadd( 37.1364, 96.92, 68.4967, 0.15 ) }
    dend_47 { pt3dadd( 37.6049, 97.4627, 69.0311, 0.37 ) }
    dend_47 { pt3dadd( 38.1246, 98.0982, 69.5858, 0.37 ) }
    dend_47 { pt3dadd( 39.1536, 99.3873, 70.4995, 0.15 ) }
    dend_47 { pt3dadd( 40.0067, 100.491, 71.2272, 0.15 ) }
    dend_47 { pt3dadd( 40.83, 101.622, 71.9869, 0.15 ) }
    dend_47 { pt3dadd( 41.7738, 102.984, 72.9176, 0.15 ) }
    dend_47 { pt3dadd( 42.2996, 103.764, 73.4567, 0.15 ) }
    dend_47 { pt3dadd( 43.174, 105.08, 74.3608, 0.15 ) }
    dend_47 { pt3dadd( 44.193, 106.634, 75.4029, 0.07 ) }
    dend_47 { pt3dadd( 45.343, 108.475, 76.5954, 0.07 ) }
    dend_47 { pt3dadd( 46.4327, 110.25, 77.8183, 0.07 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 47/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -58.1918, -163.96, 27.9818, 0.74 ) }
    dend_38 { pt3dadd( -58.4722, -165.006, 27.6826, 0.74 ) }
    dend_38 { pt3dadd( -58.8114, -166.143, 27.3747, 0.29 ) }
    dend_38 { pt3dadd( -59.325, -167.642, 26.963, 0.07 ) }
    dend_38 { pt3dadd( -59.7727, -168.876, 26.5971, 0.15 ) }
    dend_38 { pt3dadd( -60.0618, -169.666, 26.3587, 0.52 ) }
    dend_38 { pt3dadd( -60.3192, -170.358, 26.1323, 0.74 ) }
    dend_38 { pt3dadd( -60.5388, -170.899, 25.9355, 0.88 ) }
    dend_38 { pt3dadd( -61.1614, -172.328, 25.4204, 0.22 ) }
    dend_38 { pt3dadd( -61.5653, -173.221, 25.11, 0.22 ) }
    dend_38 { pt3dadd( -61.9646, -174.138, 24.8046, 0.22 ) }
    dend_38 { pt3dadd( -62.3771, -175.163, 24.4672, 0.15 ) }
    dend_38 { pt3dadd( -62.6645, -175.927, 24.2112, 0.74 ) }
    dend_38 { pt3dadd( -63.0628, -177.035, 23.8203, 0.88 ) }
    dend_38 { pt3dadd( -63.4035, -178.052, 23.4613, 0.22 ) }
    dend_38 { pt3dadd( -63.7675, -179.199, 23.0279, 0.15 ) }
    dend_38 { pt3dadd( -64.0153, -180.119, 22.6246, 0.15 ) }
    dend_38 { pt3dadd( -64.1681, -180.815, 22.2825, 0.29 ) }
    dend_38 { pt3dadd( -64.3118, -181.569, 21.8544, 0.66 ) }
    dend_38 { pt3dadd( -64.5095, -182.53, 21.2474, 1.03 ) }
    dend_38 { pt3dadd( -64.8221, -183.596, 20.5026, 0.37 ) }
    dend_38 { pt3dadd( -65.2597, -184.715, 19.6556, 0.22 ) }
    dend_38 { pt3dadd( -65.5467, -185.349, 19.1796, 0.44 ) }
    dend_38 { pt3dadd( -65.8406, -185.943, 18.7566, 0.74 ) }
    dend_38 { pt3dadd( -66.3332, -186.871, 18.1639, 1.03 ) }
    dend_38 { pt3dadd( -67.2385, -188.432, 17.2792, 0.29 ) }
    dend_38 { pt3dadd( -67.7863, -189.338, 16.8527, 0.29 ) }
    dend_38 { pt3dadd( -68.2901, -190.175, 16.5275, 0.74 ) }
    dend_38 { pt3dadd( -68.7116, -190.908, 16.2847, 0.74 ) }
    dend_38 { pt3dadd( -69.4744, -192.315, 15.8636, 0.29 ) }
    dend_38 { pt3dadd( -70.1537, -193.613, 15.5179, 0.22 ) }
    dend_38 { pt3dadd( -70.5339, -194.317, 15.3368, 0.22 ) }
    dend_38 { pt3dadd( -71.0672, -195.122, 15.0696, 0.22 ) }
    dend_38 { pt3dadd( -71.5306, -195.67, 14.7967, 0.29 ) }
    dend_38 { pt3dadd( -72.0044, -196.122, 14.4667, 0.74 ) }
    dend_38 { pt3dadd( -72.6181, -196.61, 13.9846, 0.96 ) }
    dend_38 { pt3dadd( -73.5183, -197.301, 13.2298, 0.44 ) }
    dend_38 { pt3dadd( -74.5155, -198.115, 12.3736, 0.22 ) }
    dend_38 { pt3dadd( -75.0326, -198.578, 11.9375, 0.22 ) }
    dend_38 { pt3dadd( -75.5051, -199.064, 11.5554, 0.22 ) }
    dend_38 { pt3dadd( -76.0553, -199.701, 11.1856, 0.81 ) }
    dend_38 { pt3dadd( -76.6331, -200.477, 10.8653, 0.44 ) }
    dend_38 { pt3dadd( -77.1353, -201.238, 10.6624, 0.22 ) }
    dend_38 { pt3dadd( -77.5615, -201.919, 10.5051, 0.37 ) }
    dend_38 { pt3dadd( -77.8254, -202.321, 10.3907, 0.37 ) }
    dend_38 { pt3dadd( -78.6697, -203.433, 9.97158, 0.22 ) }
    dend_38 { pt3dadd( -79.0091, -203.808, 9.77568, 0.59 ) }
    dend_38 { pt3dadd( -79.7737, -204.539, 9.29336, 0.88 ) }
    dend_38 { pt3dadd( -80.5414, -205.262, 8.7482, 0.22 ) }
    dend_38 { pt3dadd( -81.1234, -205.836, 8.29002, 0.22 ) }
    dend_38 { pt3dadd( -81.5152, -206.245, 7.95038, 0.22 ) }
    dend_38 { pt3dadd( -81.9694, -206.756, 7.52027, 0.22 ) }
    dend_38 { pt3dadd( -82.4298, -207.299, 7.09011, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( -83.1799, -208.302, 6.40623, 0.15 ) }
    dend_38 { pt3dadd( -83.4361, -208.724, 6.13508, 0.15 ) }
    dend_38 { pt3dadd( -83.6853, -209.221, 5.83623, 0.15 ) }
    dend_38 { pt3dadd( -83.7899, -209.492, 5.66018, 0.15 ) }
    dend_38 { pt3dadd( -83.888, -209.838, 5.43144, 0.15 ) }
    dend_38 { pt3dadd( -84.055, -210.556, 4.92262, 0.88 ) }
    dend_38 { pt3dadd( -84.43, -212.05, 3.83915, 0.22 ) }
    dend_38 { pt3dadd( -84.5098, -212.314, 3.64215, 0.22 ) }
    dend_38 { pt3dadd( -84.7358, -212.953, 3.17148, 0.22 ) }
    dend_38 { pt3dadd( -85.0155, -213.667, 2.6704, 0.22 ) }
    dend_38 { pt3dadd( -85.2063, -214.121, 2.38414, 0.22 ) }
    dend_38 { pt3dadd( -85.5821, -214.952, 1.94866, 0.66 ) }
    dend_38 { pt3dadd( -86.185, -216.092, 1.50109, 0.29 ) }
    dend_38 { pt3dadd( -86.6507, -216.927, 1.22791, 0.29 ) }
    dend_38 { pt3dadd( -87.06, -217.657, 1.03635, 0.44 ) }
    dend_38 { pt3dadd( -87.531, -218.541, 0.839969, 0.74 ) }
    dend_38 { pt3dadd( -87.8921, -219.289, 0.717403, 0.81 ) }
    dend_38 { pt3dadd( -88.5797, -220.752, 0.543391, 0.22 ) }
    dend_38 { pt3dadd( -89.0563, -221.669, 0.483167, 0.22 ) }
    dend_38 { pt3dadd( -89.2825, -222.063, 0.463112, 0.22 ) }
    dend_38 { pt3dadd( -89.5525, -222.518, 0.441144, 0.22 ) }
    dend_38 { pt3dadd( -89.9442, -223.205, 0.3795, 0.22 ) }
    dend_38 { pt3dadd( -90.4711, -224.206, 0.195904, 0.59 ) }
    dend_38 { pt3dadd( -90.9932, -225.303, -0.146509, 0.22 ) }
    dend_38 { pt3dadd( -91.316, -225.997, -0.438581, 0.22 ) }
    dend_38 { pt3dadd( -91.7122, -226.81, -0.89254, 0.59 ) }
    dend_38 { pt3dadd( -92.2837, -227.934, -1.64448, 0.22 ) }
    dend_38 { pt3dadd( -92.6924, -228.784, -2.28417, 0.22 ) }
    dend_38 { pt3dadd( -92.9747, -229.448, -2.80559, 0.44 ) }
    dend_38 { pt3dadd( -93.2806, -230.251, -3.41828, 1.03 ) }
    dend_38 { pt3dadd( -93.6962, -231.372, -4.22152, 0.22 ) }
    dend_38 { pt3dadd( -93.8834, -231.921, -4.5483, 0.22 ) }
    dend_38 { pt3dadd( -94.0559, -232.57, -4.78339, 0.22 ) }
    dend_38 { pt3dadd( -94.1728, -233.322, -4.93306, 0.22 ) }
    dend_38 { pt3dadd( -94.2783, -234.472, -5.07245, 0.22 ) }
    dend_38 { pt3dadd( -94.3038, -234.858, -5.10467, 0.44 ) }
    dend_38 { pt3dadd( -94.3541, -235.817, -5.15452, 0.88 ) }
    dend_38 { pt3dadd( -94.4013, -236.669, -5.20479, 0.88 ) }
    dend_38 { pt3dadd( -94.5384, -238.417, -5.32196, 0.22 ) }
    dend_38 { pt3dadd( -94.6459, -239.391, -5.40116, 0.22 ) }
    dend_38 { pt3dadd( -94.8315, -240.713, -5.54809, 0.22 ) }
    dend_38 { pt3dadd( -94.9317, -241.306, -5.61453, 0.22 ) }
    dend_38 { pt3dadd( -95.042, -241.806, -5.67025, 0.59 ) }
    dend_38 { pt3dadd( -95.2679, -242.626, -5.76097, 0.81 ) }
    dend_38 { pt3dadd( -95.4311, -243.126, -5.82716, 0.59 ) }
    dend_38 { pt3dadd( -95.8121, -244.261, -6.02439, 0.22 ) }
    dend_38 { pt3dadd( -96.0738, -244.999, -6.17382, 0.22 ) }
    dend_38 { pt3dadd( -96.3861, -245.712, -6.33347, 0.22 ) }
    dend_38 { pt3dadd( -96.7152, -246.324, -6.50948, 0.22 ) }
    dend_38 { pt3dadd( -97.2791, -247.224, -6.82542, 0.22 ) }
    dend_38 { pt3dadd( -97.6993, -247.841, -7.08419, 0.44 ) }
    dend_38 { pt3dadd( -98.1859, -248.517, -7.41606, 0.74 ) }
    dend_38 { pt3dadd( -98.7177, -249.315, -7.85858, 0.29 ) }
    dend_38 { pt3dadd( -99.1829, -250.105, -8.34237, 0.22 ) }
    dend_38 { pt3dadd( -99.3021, -250.319, -8.47901, 0.22 ) }
    dend_38 { pt3dadd( -99.5536, -250.758, -8.78408, 0.22 ) }
    dend_38 { pt3dadd( -99.807, -251.205, -9.10717, 0.22 ) }
    dend_38 { pt3dadd( -100.09, -251.736, -9.46613, 0.29 ) }
    dend_38 { pt3dadd( -100.414, -252.442, -9.85962, 0.66 ) }
    dend_38 { pt3dadd( -100.719, -253.102, -10.1557, 0.88 ) }
    dend_38 { pt3dadd( -101.499, -254.625, -10.7757, 0.22 ) }
    dend_38 { pt3dadd( -101.84, -255.214, -10.9936, 0.22 ) }
    dend_38 { pt3dadd( -102.278, -255.878, -11.2204, 0.22 ) }
    dend_38 { pt3dadd( -102.937, -256.716, -11.4308, 0.22 ) }
    dend_38 { pt3dadd( -103.524, -257.376, -11.5146, 0.15 ) }
    dend_38 { pt3dadd( -103.934, -257.811, -11.5195, 0.15 ) }
    dend_38 { pt3dadd( -104.23, -258.116, -11.4822, 0.52 ) }
    dend_38 { pt3dadd( -104.741, -258.646, -11.4001, 0.81 ) }
    dend_38 { pt3dadd( -105.824, -259.904, -11.2298, 0.15 ) }
    dend_38 { pt3dadd( -106.229, -260.463, -11.1865, 0.15 ) }
    dend_38 { pt3dadd( -106.742, -261.391, -11.1711, 0.15 ) }
    dend_38 { pt3dadd( -106.845, -261.62, -11.1813, 0.37 ) }
    dend_38 { pt3dadd( -107.12, -262.353, -11.2607, 0.74 ) }
    dend_38 { pt3dadd( -107.53, -263.648, -11.4786, 0.15 ) }
    dend_38 { pt3dadd( -107.732, -264.397, -11.6556, 0.15 ) }
    dend_38 { pt3dadd( -107.92, -265.135, -11.8301, 0.37 ) }
    dend_38 { pt3dadd( -108.083, -265.833, -12.0064, 0.37 ) }
    dend_38 { pt3dadd( -108.26, -266.709, -12.2265, 0.37 ) }
    dend_38 { pt3dadd( -108.456, -267.838, -12.518, 0.29 ) }
    dend_38 { pt3dadd( -108.651, -269.052, -12.8137, 0.81 ) }
    dend_38 { pt3dadd( -108.769, -269.966, -13.0302, 0.66 ) }
    dend_38 { pt3dadd( -108.847, -270.825, -13.2572, 0.59 ) }
    dend_38 { pt3dadd( -108.903, -271.754, -13.5431, 0.15 ) }
    dend_38 { pt3dadd( -108.957, -272.408, -13.7776, 0.15 ) }
    dend_38 { pt3dadd( -109.045, -273.019, -14.0386, 0.66 ) }
    dend_38 { pt3dadd( -109.105, -273.288, -14.1666, 0.66 ) }
    dend_38 { pt3dadd( -109.379, -274.276, -14.6456, 0.22 ) }
    dend_38 { pt3dadd( -109.568, -274.985, -14.9624, 0.22 ) }
    dend_38 { pt3dadd( -109.773, -275.85, -15.3276, 0.59 ) }
    dend_38 { pt3dadd( -109.969, -276.979, -15.7536, 0.15 ) }
    dend_38 { pt3dadd( -110.041, -277.545, -15.9496, 0.15 ) }
    dend_38 { pt3dadd( -110.129, -278.354, -16.208, 0.81 ) }
    dend_38 { pt3dadd( -110.262, -280.003, -16.6742, 0.15 ) }
    dend_38 { pt3dadd( -110.304, -280.669, -16.8361, 0.52 ) }
    dend_38 { pt3dadd( -110.356, -281.7, -17.0558, 0.15 ) }
    dend_38 { pt3dadd( -110.398, -282.184, -17.154, 0.15 ) }
    dend_38 { pt3dadd( -110.562, -283.269, -17.4146, 0.15 ) }
    dend_38 { pt3dadd( -110.641, -283.635, -17.5179, 0.15 ) }
    dend_38 { pt3dadd( -110.884, -284.508, -17.7826, 0.88 ) }
    dend_38 { pt3dadd( -111.135, -285.339, -18.052, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_38 { pt3dadd( -111.556, -286.618, -18.4926, 0.15 ) }
    dend_38 { pt3dadd( -111.964, -287.863, -18.9371, 0.15 ) }
    dend_38 { pt3dadd( -112.162, -288.455, -19.1535, 0.22 ) }
    dend_38 { pt3dadd( -112.42, -289.152, -19.4315, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 4/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -58.1918, -163.96, 27.9818, 0.07 ) }
    dend_37 { pt3dadd( -58.5449, -163.204, 27.1061, 0.07 ) }
    dend_37 { pt3dadd( -58.8725, -162.529, 26.4104, 0.07 ) }
    dend_37 { pt3dadd( -59.1965, -161.914, 25.7924, 0.37 ) }
    dend_37 { pt3dadd( -59.8028, -160.832, 24.7575, 0.07 ) }
    dend_37 { pt3dadd( -60.0353, -160.435, 24.3987, 0.07 ) }
    dend_37 { pt3dadd( -60.4202, -159.816, 23.8401, 0.22 ) }
    dend_37 { pt3dadd( -61.2004, -158.685, 22.8699, 0.07 ) }
    dend_37 { pt3dadd( -61.8252, -157.904, 22.2054, 0.07 ) }
    dend_37 { pt3dadd( -62.2702, -157.409, 21.7768, 0.07 ) }
    dend_37 { pt3dadd( -62.6853, -157.015, 21.438, 0.22 ) }
    dend_37 { pt3dadd( -63.4801, -156.339, 20.8474, 0.07 ) }
    dend_37 { pt3dadd( -63.9924, -155.94, 20.4757, 0.37 ) }
    dend_37 { pt3dadd( -65.5423, -154.834, 19.4201, 0.07 ) }
    dend_37 { pt3dadd( -66.0536, -154.486, 19.0835, 0.22 ) }
    dend_37 { pt3dadd( -67.3342, -153.661, 18.23, 0.07 ) }
    dend_37 { pt3dadd( -67.8718, -153.329, 17.8785, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -36.4741, -346.993, 37.1163, 0.15 ) }
    dend_30 { pt3dadd( -36.9296, -347.621, 37.8885, 0.15 ) }
    dend_30 { pt3dadd( -37.3447, -348.295, 38.5875, 0.15 ) }
    dend_30 { pt3dadd( -37.6656, -348.881, 39.1353, 0.07 ) }
    dend_30 { pt3dadd( -37.9367, -349.403, 39.6206, 0.07 ) }
    dend_30 { pt3dadd( -38.1356, -349.798, 39.9834, 0.07 ) }
    dend_30 { pt3dadd( -38.2745, -350.079, 40.2358, 0.37 ) }
    dend_30 { pt3dadd( -38.5059, -350.619, 40.6738, 0.66 ) }
    dend_30 { pt3dadd( -38.8826, -351.522, 41.3667, 0.07 ) }
    dend_30 { pt3dadd( -39.0924, -352.044, 41.7965, 0.07 ) }
    dend_30 { pt3dadd( -39.2886, -352.536, 42.2411, 0.07 ) }
    dend_30 { pt3dadd( -39.3864, -352.781, 42.4936, 0.52 ) }
    dend_30 { pt3dadd( -39.557, -353.234, 42.9926, 0.88 ) }
    dend_30 { pt3dadd( -39.8367, -354.06, 43.9533, 0.15 ) }
    dend_30 { pt3dadd( -40.0507, -354.779, 44.8048, 0.15 ) }
    dend_30 { pt3dadd( -40.1509, -355.163, 45.2465, 0.15 ) }
    dend_30 { pt3dadd( -40.253, -355.673, 45.8527, 0.15 ) }
    dend_30 { pt3dadd( -40.32, -356.164, 46.4528, 0.88 ) }
    dend_30 { pt3dadd( -40.3816, -357.066, 47.6024, 0.07 ) }
    dend_30 { pt3dadd( -40.3851, -357.357, 47.9829, 0.07 ) }
    dend_30 { pt3dadd( -40.3838, -357.673, 48.3802, 0.37 ) }
    dend_30 { pt3dadd( -40.3848, -358.438, 49.3053, 0.15 ) }
    dend_30 { pt3dadd( -40.3924, -358.919, 49.8618, 0.37 ) }
    dend_30 { pt3dadd( -40.4411, -359.593, 50.6435, 0.22 ) }
    dend_30 { pt3dadd( -40.5105, -360.141, 51.2478, 0.44 ) }
    dend_30 { pt3dadd( -40.5924, -360.584, 51.7124, 0.81 ) }
    dend_30 { pt3dadd( -40.7462, -361.178, 52.3016, 0.29 ) }
    dend_30 { pt3dadd( -41.0195, -361.891, 52.9055, 0.15 ) }
    dend_30 { pt3dadd( -41.438, -362.77, 53.5248, 0.15 ) }
    dend_30 { pt3dadd( -41.8157, -363.495, 53.9275, 0.15 ) }
    dend_30 { pt3dadd( -42.0608, -363.953, 54.1365, 0.81 ) }
    dend_30 { pt3dadd( -42.3131, -364.447, 54.3283, 1.47 ) }
    dend_30 { pt3dadd( -43.0749, -366.042, 54.8195, 0.15 ) }
    dend_30 { pt3dadd( -43.5774, -367.167, 55.1841, 0.07 ) }
    dend_30 { pt3dadd( -44.0791, -368.375, 55.5714, 0.07 ) }
    dend_30 { pt3dadd( -44.3354, -369.01, 55.8003, 0.15 ) }
    dend_30 { pt3dadd( -44.7417, -370.075, 56.2029, 0.07 ) }
    dend_30 { pt3dadd( -44.9554, -370.66, 56.4287, 0.22 ) }
    dend_30 { pt3dadd( -45.8523, -373.126, 57.4611, 0.07 ) }
    dend_30 { pt3dadd( -46.1375, -373.845, 57.7792, 0.29 ) }
    dend_30 { pt3dadd( -46.7657, -375.267, 58.4271, 0.07 ) }
    dend_30 { pt3dadd( -47.1123, -375.982, 58.7415, 0.07 ) }
    dend_30 { pt3dadd( -47.5275, -376.754, 59.0643, 0.44 ) }
    dend_30 { pt3dadd( -48.3119, -378.165, 59.6188, 0.15 ) }
    dend_30 { pt3dadd( -48.9201, -379.236, 59.9913, 0.07 ) }
    dend_30 { pt3dadd( -49.2728, -379.845, 60.2157, 0.07 ) }
    dend_30 { pt3dadd( -49.6177, -380.437, 60.4439, 0.29 ) }
    dend_30 { pt3dadd( -50.6447, -382.189, 61.181, 0.07 ) }
    dend_30 { pt3dadd( -51.1708, -383.099, 61.5827, 0.07 ) }
    dend_30 { pt3dadd( -51.5741, -383.813, 61.8939, 0.07 ) }
    dend_30 { pt3dadd( -51.9732, -384.519, 62.2257, 0.07 ) }
    dend_30 { pt3dadd( -52.3523, -385.182, 62.5401, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 73/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -36.4741, -346.993, 37.1163, 0.22 ) }
    dend_27 { pt3dadd( -36.1266, -347.893, 37.9844, 0.22 ) }
    dend_27 { pt3dadd( -35.4631, -349.293, 39.4042, 0.37 ) }
    dend_27 { pt3dadd( -34.993, -350.171, 40.3653, 0.15 ) }
    dend_27 { pt3dadd( -34.6041, -350.857, 41.1309, 0.15 ) }
    dend_27 { pt3dadd( -34.469, -351.079, 41.4181, 0.37 ) }
    dend_27 { pt3dadd( -34.1586, -351.599, 42.1853, 0.88 ) }
    dend_27 { pt3dadd( -33.5272, -352.575, 43.9354, 0.15 ) }
    dend_27 { pt3dadd( -33.2521, -353.012, 44.8672, 0.52 ) }
    dend_27 { pt3dadd( -33.1783, -353.143, 45.1698, 1.03 ) }
    dend_27 { pt3dadd( -32.7459, -354.059, 47.3933, 0.22 ) }
    dend_27 { pt3dadd( -32.5043, -354.688, 48.9753, 0.22 ) }
    dend_27 { pt3dadd( -32.446, -354.873, 49.4548, 0.37 ) }
    dend_27 { pt3dadd( -32.2803, -355.751, 51.5674, 0.22 ) }
    dend_27 { pt3dadd( -32.2363, -356.121, 52.3581, 0.22 ) }
    dend_27 { pt3dadd( -32.2051, -356.656, 53.365, 0.22 ) }
    dend_27 { pt3dadd( -32.199, -357.092, 54.0527, 0.22 ) }
    dend_27 { pt3dadd( -32.1852, -357.591, 54.7334, 0.88 ) }
    dend_27 { pt3dadd( -32.0757, -359.031, 56.4356, 0.15 ) }
    dend_27 { pt3dadd( -31.9807, -359.808, 57.2053, 0.22 ) }
    dend_27 { pt3dadd( -31.8062, -360.803, 57.9896, 0.07 ) }
    dend_27 { pt3dadd( -31.5272, -362.075, 58.7639, 0.07 ) }
    dend_27 { pt3dadd( -31.189, -363.351, 59.2714, 1.18 ) }
    dend_27 { pt3dadd( -30.5909, -365.457, 59.7425, 0.07 ) }
    dend_27 { pt3dadd( -30.3171, -366.366, 59.7535, 0.74 ) }
    dend_27 { pt3dadd( -29.633, -368.711, 59.4849, 0.07 ) }
    dend_27 { pt3dadd( -29.4513, -369.39, 59.3153, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_27 { pt3dadd( -28.9067, -371.823, 58.4047, 0.07 ) }
    dend_27 { pt3dadd( -28.7033, -373.105, 57.8536, 1.11 ) }
    dend_27 { pt3dadd( -28.4469, -375.578, 56.5962, 0.07 ) }
    dend_27 { pt3dadd( -28.4003, -376.143, 56.2889, 0.22 ) }
    dend_27 { pt3dadd( -28.2915, -377.952, 55.2663, 0.07 ) }
    dend_27 { pt3dadd( -28.2163, -378.816, 54.7062, 0.07 ) }
    dend_27 { pt3dadd( -28.0328, -380.092, 53.6828, 0.96 ) }
    dend_27 { pt3dadd( -27.6452, -381.579, 52.3298, 0.07 ) }
    dend_27 { pt3dadd( -27.4219, -382.127, 51.8093, 0.07 ) }
    dend_27 { pt3dadd( -27.2761, -382.407, 51.5186, 0.29 ) }
    dend_27 { pt3dadd( -26.5795, -383.523, 50.2334, 0.07 ) }
    dend_27 { pt3dadd( -25.9355, -384.505, 49.063, 0.07 ) }
    dend_27 { pt3dadd( -25.611, -385.006, 48.4444, 0.66 ) }
    dend_27 { pt3dadd( -24.9077, -386.208, 47.0519, 0.07 ) }
    dend_27 { pt3dadd( -24.4639, -387.099, 46.1152, 0.07 ) }
    dend_27 { pt3dadd( -24.0274, -388.107, 45.2184, 0.07 ) }
    dend_27 { pt3dadd( -23.7569, -388.803, 44.7329, 0.96 ) }
    dend_27 { pt3dadd( -23.2773, -390.115, 43.9093, 0.15 ) }
    dend_27 { pt3dadd( -22.9969, -390.925, 43.4274, 0.15 ) }
    dend_27 { pt3dadd( -22.6807, -391.935, 42.9208, 0.74 ) }
    dend_27 { pt3dadd( -22.0846, -393.902, 42.1714, 0.15 ) }
    dend_27 { pt3dadd( -21.7582, -394.975, 41.8619, 0.81 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 22/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -10.1018, 27.0157, -23.6605, 0.59 ) }
    dend_24 { pt3dadd( -10.1238, 28.0809, -22.5934, 0.59 ) }
    dend_24 { pt3dadd( -10.1123, 28.9525, -21.8086, 0.59 ) }
    dend_24 { pt3dadd( -10.1088, 29.8332, -21.0606, 0.59 ) }
    dend_24 { pt3dadd( -10.141, 30.7194, -20.3385, 0.74 ) }
    dend_24 { pt3dadd( -10.2052, 31.4283, -19.7951, 0.74 ) }
    dend_24 { pt3dadd( -10.3757, 32.5049, -19.0617, 0.44 ) }
    dend_24 { pt3dadd( -10.4508, 32.7835, -18.9294, 0.44 ) }
    dend_24 { pt3dadd( -10.6803, 33.4259, -18.7376, 0.44 ) }
    dend_24 { pt3dadd( -10.9503, 34.0413, -18.6078, 0.66 ) }
    dend_24 { pt3dadd( -11.3914, 34.8603, -18.4607, 0.81 ) }
    dend_24 { pt3dadd( -12.0555, 35.9094, -18.2472, 0.59 ) }
    dend_24 { pt3dadd( -12.6049, 36.6768, -18.0562, 0.37 ) }
    dend_24 { pt3dadd( -13.3241, 37.6771, -17.7712, 0.22 ) }
    dend_24 { pt3dadd( -13.7536, 38.2936, -17.5788, 0.44 ) }
    dend_24 { pt3dadd( -14.0311, 38.7311, -17.4325, 0.74 ) }
    dend_24 { pt3dadd( -14.5963, 39.7582, -17.0824, 0.37 ) }
    dend_24 { pt3dadd( -15.0622, 40.7593, -16.7358, 0.22 ) }
    dend_24 { pt3dadd( -15.2646, 41.2881, -16.5925, 0.22 ) }
    dend_24 { pt3dadd( -15.4796, 41.9687, -16.4565, 0.66 ) }
    dend_24 { pt3dadd( -15.7244, 42.8795, -16.3404, 0.52 ) }
    dend_24 { pt3dadd( -16.0173, 44.0137, -16.2816, 0.81 ) }
    dend_24 { pt3dadd( -16.1507, 44.5126, -16.2975, 0.81 ) }
    dend_24 { pt3dadd( -16.5367, 45.769, -16.4329, 0.44 ) }
    dend_24 { pt3dadd( -16.9995, 46.9513, -16.6446, 0.74 ) }
    dend_24 { pt3dadd( -17.5567, 48.0026, -16.9211, 0.44 ) }
    dend_24 { pt3dadd( -18.2975, 49.0365, -17.2986, 0.29 ) }
    dend_24 { pt3dadd( -18.8813, 49.6558, -17.5998, 0.29 ) }
    dend_24 { pt3dadd( -19.5473, 50.214, -17.9539, 0.29 ) }
    dend_24 { pt3dadd( -20.2692, 50.6945, -18.345, 0.88 ) }
    dend_24 { pt3dadd( -21.1955, 51.2204, -18.8358, 0.59 ) }
    dend_24 { pt3dadd( -21.806, 51.5495, -19.1458, 0.59 ) }
    dend_24 { pt3dadd( -22.655, 52.0241, -19.5455, 0.29 ) }
    dend_24 { pt3dadd( -23.6394, 52.6382, -19.9698, 0.74 ) }
    dend_24 { pt3dadd( -24.0395, 52.9376, -20.1362, 0.74 ) }
    dend_24 { pt3dadd( -24.6054, 53.479, -20.3817, 0.29 ) }
    dend_24 { pt3dadd( -24.9577, 53.9647, -20.5427, 0.22 ) }
    dend_24 { pt3dadd( -25.1764, 54.4019, -20.6566, 0.22 ) }
    dend_24 { pt3dadd( -25.3682, 54.9912, -20.7844, 0.22 ) }
    dend_24 { pt3dadd( -25.5693, 55.7817, -20.9466, 0.74 ) }
    dend_24 { pt3dadd( -25.7477, 56.4433, -21.1107, 0.74 ) }
    dend_24 { pt3dadd( -25.9381, 57.0656, -21.3035, 0.29 ) }
    dend_24 { pt3dadd( -26.1038, 57.5201, -21.4583, 0.29 ) }
    dend_24 { pt3dadd( -26.356, 58.1444, -21.6736, 0.52 ) }
    dend_24 { pt3dadd( -26.6553, 58.846, -21.948, 0.52 ) }
    dend_24 { pt3dadd( -27.1245, 59.8975, -22.4002, 0.22 ) }
    dend_24 { pt3dadd( -27.4049, 60.5461, -22.7144, 0.15 ) }
    dend_24 { pt3dadd( -27.8088, 61.477, -23.1814, 0.59 ) }
    dend_24 { pt3dadd( -28.2054, 62.4526, -23.6717, 0.22 ) }
    dend_24 { pt3dadd( -28.3985, 62.9931, -23.9454, 0.22 ) }
    dend_24 { pt3dadd( -28.4484, 63.1786, -24.036, 0.22 ) }
    dend_24 { pt3dadd( -28.5769, 63.8807, -24.3676, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 74/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -10.1018, 27.0157, -23.6605, 1.03 ) }
    dend_23 { pt3dadd( -9.69186, 27.5764, -23.8568, 1.03 ) }
    dend_23 { pt3dadd( -8.64978, 28.6062, -24.2557, 0.88 ) }
    dend_23 { pt3dadd( -7.78651, 29.3699, -24.597, 0.88 ) }
    dend_23 { pt3dadd( -7.18599, 29.8916, -24.8531, 0.59 ) }
    dend_23 { pt3dadd( -6.67071, 30.364, -25.0844, 0.59 ) }
    dend_23 { pt3dadd( -5.8035, 31.212, -25.4902, 0.96 ) }
    dend_23 { pt3dadd( -4.8134, 32.1876, -25.9572, 0.52 ) }
    dend_23 { pt3dadd( -3.99546, 33.0883, -26.3496, 0.66 ) }
    dend_23 { pt3dadd( -3.67024, 33.5559, -26.5332, 0.66 ) }
    dend_23 { pt3dadd( -3.30333, 34.2783, -26.7896, 0.66 ) }
    dend_23 { pt3dadd( -3.1081, 34.8163, -26.9467, 0.66 ) }
    dend_23 { pt3dadd( -2.86035, 35.7657, -27.1832, 1.18 ) }
    dend_23 { pt3dadd( -2.60221, 36.9628, -27.4579, 0.96 ) }
    dend_23 { pt3dadd( -2.46679, 37.6018, -27.6114, 0.96 ) }
    dend_23 { pt3dadd( -2.25162, 38.5492, -27.8842, 0.88 ) }
    dend_23 { pt3dadd( -1.9697, 39.5965, -28.2765, 1.03 ) }
    dend_23 { pt3dadd( -1.79544, 40.206, -28.5393, 1.18 ) }
    dend_23 { pt3dadd( -1.51912, 41.0684, -28.9379, 0.74 ) }
    dend_23 { pt3dadd( -1.22169, 41.8796, -29.3231, 0.74 ) }
    dend_23 { pt3dadd( -0.976886, 42.4881, -29.624, 0.96 ) }
    dend_23 { pt3dadd( -0.582173, 43.4183, -30.0907, 1.11 ) }
    dend_23 { pt3dadd( -0.102069, 44.4295, -30.6364, 0.96 ) }
    dend_23 { pt3dadd( 0.686917, 45.8692, -31.4533, 0.59 ) }
    dend_23 { pt3dadd( 1.14818, 46.6004, -31.8736, 0.59 ) }
    dend_23 { pt3dadd( 1.81778, 47.4915, -32.4158, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_23 { pt3dadd( 2.14217, 47.8555, -32.6569, 0.74 ) }
    dend_23 { pt3dadd( 2.88058, 48.551, -33.1448, 0.59 ) }
    dend_23 { pt3dadd( 3.67513, 49.177, -33.6249, 0.59 ) }
    dend_23 { pt3dadd( 4.37521, 49.6808, -34.0217, 0.59 ) }
    dend_23 { pt3dadd( 5.17681, 50.2931, -34.4662, 0.52 ) }
    dend_23 { pt3dadd( 5.76331, 50.8198, -34.7985, 0.52 ) }
    dend_23 { pt3dadd( 6.40305, 51.5564, -35.2306, 0.74 ) }
    dend_23 { pt3dadd( 6.73473, 52.1381, -35.5439, 0.88 ) }
    dend_23 { pt3dadd( 7.00848, 52.9328, -35.989, 0.59 ) }
    dend_23 { pt3dadd( 7.18336, 53.8623, -36.5602, 0.44 ) }
    dend_23 { pt3dadd( 7.26637, 54.8313, -37.1931, 0.59 ) }
    dend_23 { pt3dadd( 7.30596, 55.7479, -37.8199, 0.96 ) }
    dend_23 { pt3dadd( 7.38301, 56.8903, -38.6324, 0.52 ) }
    dend_23 { pt3dadd( 7.50915, 57.7739, -39.278, 0.52 ) }
    dend_23 { pt3dadd( 7.68131, 58.4386, -39.7623, 0.52 ) }
    dend_23 { pt3dadd( 8.09414, 59.4512, -40.4981, 0.37 ) }
    dend_23 { pt3dadd( 8.41575, 60.0635, -40.9225, 0.37 ) }
    dend_23 { pt3dadd( 9.05021, 61.1506, -41.602, 0.44 ) }
    dend_23 { pt3dadd( 9.53439, 62.0201, -42.0742, 0.59 ) }
    dend_23 { pt3dadd( 9.90688, 62.8389, -42.4502, 0.59 ) }
    dend_23 { pt3dadd( 10.1151, 63.474, -42.6945, 0.59 ) }
    dend_23 { pt3dadd( 10.3092, 64.6086, -43.0916, 0.59 ) }
    dend_23 { pt3dadd( 10.3398, 65.5061, -43.4233, 0.66 ) }
    dend_23 { pt3dadd( 10.2553, 66.6054, -43.8657, 0.74 ) }
    dend_23 { pt3dadd( 10.1289, 67.6188, -44.3233, 0.52 ) }
    dend_23 { pt3dadd( 10.008, 68.489, -44.7851, 0.29 ) }
    dend_23 { pt3dadd( 9.92725, 69.3281, -45.3749, 0.29 ) }
    dend_23 { pt3dadd( 9.99536, 69.8425, -46.0782, 0.44 ) }
    dend_23 { pt3dadd( 10.1889, 69.977, -46.7573, 0.59 ) }
    dend_23 { pt3dadd( 10.517, 69.8813, -47.6665, 0.29 ) }
    dend_23 { pt3dadd( 10.7383, 69.715, -48.2185, 0.29 ) }
    dend_23 { pt3dadd( 11.0837, 69.3539, -49.0566, 0.29 ) }
    dend_23 { pt3dadd( 11.3484, 69.0455, -49.6691, 0.29 ) }
    dend_23 { pt3dadd( 11.5953, 68.7568, -50.2638, 0.44 ) }
    dend_23 { pt3dadd( 11.8257, 68.5298, -50.8969, 0.44 ) }
    dend_23 { pt3dadd( 11.983, 68.433, -51.4568, 0.52 ) }
    dend_23 { pt3dadd( 12.0504, 68.5792, -51.9351, 0.52 ) }
    dend_23 { pt3dadd( 11.9843, 69.0035, -52.2745, 0.52 ) }
    dend_23 { pt3dadd( 11.7696, 69.6868, -52.6433, 0.66 ) }
    dend_23 { pt3dadd( 11.4262, 70.5083, -52.9898, 0.66 ) }
    dend_23 { pt3dadd( 11.0007, 71.2763, -53.2399, 0.37 ) }
    dend_23 { pt3dadd( 10.3977, 72.0562, -53.4637, 0.37 ) }
    dend_23 { pt3dadd( 9.7956, 72.588, -53.6265, 0.37 ) }
    dend_23 { pt3dadd( 9.29643, 72.8341, -53.7409, 0.37 ) }
    dend_23 { pt3dadd( 8.88084, 72.9148, -53.8296, 0.37 ) }
    dend_23 { pt3dadd( 8.13109, 72.8876, -53.9969, 0.29 ) }
    dend_23 { pt3dadd( 7.26608, 72.655, -54.209, 0.22 ) }
    dend_23 { pt3dadd( 6.54509, 72.2725, -54.4121, 0.22 ) }
    dend_23 { pt3dadd( 5.63465, 71.446, -54.7335, 0.66 ) }
    dend_23 { pt3dadd( 5.32007, 70.9483, -54.903, 0.37 ) }
    dend_23 { pt3dadd( 5.07611, 70.3379, -55.133, 0.22 ) }
    dend_23 { pt3dadd( 4.91663, 69.58, -55.4432, 0.22 ) }
    dend_23 { pt3dadd( 4.8742, 68.9785, -55.718, 0.22 ) }
    dend_23 { pt3dadd( 4.8789, 68.1098, -56.1309, 0.29 ) }
    dend_23 { pt3dadd( 4.94964, 66.9541, -56.7039, 0.15 ) }
    dend_23 { pt3dadd( 5.02631, 65.8902, -57.2715, 0.15 ) }
    dend_23 { pt3dadd( 5.09777, 64.6298, -57.995, 0.15 ) }
    dend_23 { pt3dadd( 5.13275, 63.7083, -58.5905, 0.15 ) }
    dend_23 { pt3dadd( 5.13356, 63.4214, -58.7941, 0.15 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -3.47464, 0.451458, -10.4651, 1.25 ) }
    dend_13 { pt3dadd( -2.92294, -0.824388, -11.4808, 1.25 ) }
    dend_13 { pt3dadd( -2.51504, -1.57419, -12.0381, 1.25 ) }
    dend_13 { pt3dadd( -1.94505, -2.50225, -12.702, 1.25 ) }
    dend_13 { pt3dadd( -1.59435, -3.08586, -13.09, 1.25 ) }
    dend_13 { pt3dadd( -1.15655, -3.9246, -13.5993, 1.11 ) }
    dend_13 { pt3dadd( -0.882122, -4.59599, -13.9763, 1.33 ) }
    dend_13 { pt3dadd( -0.562926, -5.71251, -14.4834, 0.81 ) }
    dend_13 { pt3dadd( -0.483486, -6.59908, -14.7771, 0.66 ) }
    dend_13 { pt3dadd( -0.551323, -7.33767, -14.9715, 0.66 ) }
    dend_13 { pt3dadd( -0.788576, -8.47578, -15.2217, 1.03 ) }
    dend_13 { pt3dadd( -1.14592, -9.8081, -15.4669, 1.4 ) }
    dend_13 { pt3dadd( -1.43397, -10.8487, -15.6351, 1.99 ) }
    dend_13 { pt3dadd( -1.81827, -12.3201, -15.8323, 1.33 ) }
    dend_13 { pt3dadd( -2.04259, -13.4414, -15.9645, 0.96 ) }
    dend_13 { pt3dadd( -2.24561, -14.7731, -16.1221, 0.81 ) }
    dend_13 { pt3dadd( -2.3211, -15.7915, -16.2374, 0.74 ) }
    dend_13 { pt3dadd( -2.30844, -16.8775, -16.3417, 0.96 ) }
    dend_13 { pt3dadd( -2.21161, -17.8493, -16.4382, 1.33 ) }
    dend_13 { pt3dadd( -2.0592, -18.6666, -16.5224, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 79/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -3.47464, 0.451458, -10.4651, 1.77 ) }
    dend_2 { pt3dadd( -4.97852, -0.369955, -10.6558, 1.77 ) }
    dend_2 { pt3dadd( -6.4926, -1.24186, -10.8802, 1.62 ) }
    dend_2 { pt3dadd( -7.79038, -2.03589, -11.1283, 1.84 ) }
    dend_2 { pt3dadd( -8.67209, -2.57535, -11.2969, 2.06 ) }
    dend_2 { pt3dadd( -10.2549, -3.54382, -11.5995, 1.84 ) }
    dend_2 { pt3dadd( -11.7394, -4.45205, -11.8832, 1.84 ) }
    dend_2 { pt3dadd( -13.2488, -5.44071, -12.23, 1.84 ) }
    dend_2 { pt3dadd( -14.4301, -6.2233, -12.5474, 2.36 ) }
    // Section: dend_56, id: dend_56, parent: dend_48 (entry count 88/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -4.85521, 38.8375, 15.7525, 0.52 ) }
    dend_56 { pt3dadd( -4.44135, 40.078, 15.0558, 0.52 ) }
    dend_56 { pt3dadd( -4.10357, 41.3021, 14.3182, 0.52 ) }
    dend_56 { pt3dadd( -3.96815, 41.9609, 13.8753, 0.52 ) }
    dend_56 { pt3dadd( -3.84195, 42.8024, 13.2806, 0.59 ) }
    dend_56 { pt3dadd( -3.74588, 43.5786, 12.7084, 0.44 ) }
    dend_56 { pt3dadd( -3.68018, 44.1592, 12.2726, 0.44 ) }
    dend_56 { pt3dadd( -3.63717, 44.7821, 11.7956, 0.52 ) }
    dend_56 { pt3dadd( -3.56497, 45.6942, 11.0995, 0.88 ) }
    dend_56 { pt3dadd( -3.511, 46.3295, 10.5922, 1.25 ) }
    dend_56 { pt3dadd( -3.43511, 47.1831, 9.90951, 1.18 ) }
    dend_56 { pt3dadd( -3.32507, 48.3208, 9.02403, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_56 { pt3dadd( -3.19714, 49.4143, 8.19559, 0.52 ) }
    dend_56 { pt3dadd( -3.02939, 50.5751, 7.34081, 0.44 ) }
    dend_56 { pt3dadd( -2.9088, 51.3361, 6.78792, 0.44 ) }
    dend_56 { pt3dadd( -2.82873, 51.8384, 6.43139, 0.44 ) }
    dend_56 { pt3dadd( -2.69033, 52.7363, 5.83557, 0.52 ) }
    dend_56 { pt3dadd( -2.56331, 53.54, 5.36575, 0.59 ) }
    dend_56 { pt3dadd( -2.38304, 54.5959, 4.85112, 0.66 ) }
    dend_56 { pt3dadd( -2.22845, 55.45, 4.51476, 0.66 ) }
    dend_56 { pt3dadd( -2.08127, 56.2791, 4.26382, 0.96 ) }
    dend_56 { pt3dadd( -1.93345, 57.1408, 4.06432, 1.18 ) }
    dend_56 { pt3dadd( -1.69705, 58.4918, 3.8652, 0.96 ) }
    dend_56 { pt3dadd( -1.5262, 59.4657, 3.78455, 0.44 ) }
    dend_56 { pt3dadd( -1.41446, 60.0913, 3.75388, 0.29 ) }
    dend_56 { pt3dadd( -1.26393, 60.8622, 3.72505, 0.29 ) }
    dend_56 { pt3dadd( -1.17337, 61.2359, 3.704, 0.29 ) }
    dend_56 { pt3dadd( -0.944383, 61.924, 3.65324, 0.59 ) }
    dend_56 { pt3dadd( -0.763766, 62.3065, 3.61909, 0.96 ) }
    dend_56 { pt3dadd( -0.194828, 63.2243, 3.4871, 1.25 ) }
    dend_56 { pt3dadd( 0.155338, 63.6928, 3.38072, 1.11 ) }
    dend_56 { pt3dadd( 0.93431, 64.6563, 3.08781, 0.52 ) }
    dend_56 { pt3dadd( 1.5063, 65.3961, 2.83472, 0.52 ) }
    dend_56 { pt3dadd( 1.98762, 66.07, 2.59806, 0.22 ) }
    dend_56 { pt3dadd( 2.49553, 66.8401, 2.31914, 0.29 ) }
    dend_56 { pt3dadd( 2.93776, 67.5511, 2.03054, 0.59 ) }
    dend_56 { pt3dadd( 3.33637, 68.2238, 1.69971, 1.11 ) }
    dend_56 { pt3dadd( 3.78317, 69.002, 1.25247, 1.25 ) }
    dend_56 { pt3dadd( 4.30943, 69.9126, 0.633841, 0.96 ) }
    dend_56 { pt3dadd( 4.71124, 70.5406, 0.0857626, 0.29 ) }
    dend_56 { pt3dadd( 5.06989, 70.973, -0.463616, 0.22 ) }
    dend_56 { pt3dadd( 5.39402, 71.2346, -1.0329, 0.22 ) }
    dend_56 { pt3dadd( 5.65424, 71.3835, -1.57954, 0.37 ) }
    dend_56 { pt3dadd( 5.96391, 71.5414, -2.4145, 0.59 ) }
    dend_56 { pt3dadd( 6.23698, 71.7143, -3.432, 0.74 ) }
    dend_56 { pt3dadd( 6.47138, 71.9339, -4.51351, 0.96 ) }
    dend_56 { pt3dadd( 6.65549, 72.1484, -5.40723, 1.18 ) }
    dend_56 { pt3dadd( 6.86577, 72.4259, -6.40697, 1.18 ) }
    dend_56 { pt3dadd( 7.11753, 72.7753, -7.52308, 1.25 ) }
    dend_56 { pt3dadd( 7.44499, 73.22, -8.68219, 1.25 ) }
    dend_56 { pt3dadd( 7.78806, 73.6796, -9.58063, 0.52 ) }
    dend_56 { pt3dadd( 8.08381, 74.0646, -10.1526, 0.29 ) }
    dend_56 { pt3dadd( 8.48934, 74.5716, -10.7226, 0.29 ) }
    dend_56 { pt3dadd( 8.79035, 74.935, -11.0208, 0.66 ) }
    dend_56 { pt3dadd( 9.31186, 75.6279, -11.3897, 0.66 ) }
    dend_56 { pt3dadd( 9.91449, 76.6256, -11.7283, 0.52 ) }
    dend_56 { pt3dadd( 10.1723, 77.2783, -11.8701, 0.59 ) }
    dend_56 { pt3dadd( 10.3511, 78.0314, -11.9885, 0.74 ) }
    dend_56 { pt3dadd( 10.4086, 78.4863, -12.0368, 0.74 ) }
    dend_56 { pt3dadd( 10.4429, 79.5805, -12.1767, 0.29 ) }
    dend_56 { pt3dadd( 10.4046, 80.3609, -12.2829, 0.29 ) }
    dend_56 { pt3dadd( 10.2964, 81.5569, -12.442, 0.44 ) }
    dend_56 { pt3dadd( 10.2519, 82.0218, -12.5043, 0.81 ) }
    dend_56 { pt3dadd( 10.2089, 82.6482, -12.6062, 0.81 ) }
    dend_56 { pt3dadd( 10.1805, 83.8876, -12.874, 0.66 ) }
    dend_56 { pt3dadd( 10.2368, 84.9481, -13.174, 0.66 ) }
    dend_56 { pt3dadd( 10.2919, 85.379, -13.3118, 0.66 ) }
    dend_56 { pt3dadd( 10.4381, 86.2218, -13.6142, 0.44 ) }
    dend_56 { pt3dadd( 10.6211, 87.3208, -14.0356, 0.59 ) }
    dend_56 { pt3dadd( 10.726, 88.0851, -14.3283, 0.44 ) }
    dend_56 { pt3dadd( 10.8139, 89.1419, -14.7286, 0.52 ) }
    dend_56 { pt3dadd( 10.821, 89.8108, -14.9969, 0.52 ) }
    dend_56 { pt3dadd( 10.7791, 90.5051, -15.2956, 0.44 ) }
    dend_56 { pt3dadd( 10.6894, 91.2967, -15.6706, 0.81 ) }
    dend_56 { pt3dadd( 10.5537, 92.1967, -16.1348, 1.03 ) }
    dend_56 { pt3dadd( 10.3758, 93.2828, -16.7483, 0.66 ) }
    dend_56 { pt3dadd( 10.2509, 93.9934, -17.1817, 0.44 ) }
    dend_56 { pt3dadd( 10.1615, 94.6353, -17.5701, 0.29 ) }
    dend_56 { pt3dadd( 10.1128, 95.3184, -17.9232, 0.29 ) }
    dend_56 { pt3dadd( 10.1022, 95.7502, -18.0899, 0.29 ) }
    dend_56 { pt3dadd( 10.0997, 96.3778, -18.2941, 0.29 ) }
    dend_56 { pt3dadd( 10.0994, 96.9213, -18.4326, 0.44 ) }
    dend_56 { pt3dadd( 10.0634, 98.2248, -18.7393, 0.74 ) }
    dend_56 { pt3dadd( 9.95739, 99.8832, -19.1323, 0.59 ) }
    dend_56 { pt3dadd( 9.82002, 101.21, -19.5016, 0.44 ) }
    dend_56 { pt3dadd( 9.70868, 102.023, -19.7927, 0.44 ) }
    dend_56 { pt3dadd( 9.66542, 102.294, -19.9301, 0.59 ) }
    dend_56 { pt3dadd( 9.56688, 102.869, -20.3598, 0.59 ) }
    dend_56 { pt3dadd( 9.47735, 103.345, -20.8598, 0.59 ) }
    dend_56 { pt3dadd( 9.39668, 103.827, -21.5221, 0.59 ) }
    dend_56 { pt3dadd( 9.35786, 104.23, -22.1533, 0.74 ) }
    dend_56 { pt3dadd( 9.35329, 104.864, -23.1177, 0.96 ) }
    dend_56 { pt3dadd( 9.38246, 105.449, -23.9211, 1.18 ) }
    dend_56 { pt3dadd( 9.44932, 106.11, -24.689, 0.59 ) }
    dend_56 { pt3dadd( 9.53919, 106.784, -25.3348, 0.59 ) }
    dend_56 { pt3dadd( 9.65023, 107.561, -25.9319, 0.59 ) }
    dend_56 { pt3dadd( 9.70101, 108.034, -26.2154, 0.29 ) }
    dend_56 { pt3dadd( 9.7129, 108.831, -26.5737, 0.22 ) }
    dend_56 { pt3dadd( 9.65787, 109.391, -26.8009, 0.22 ) }
    dend_56 { pt3dadd( 9.49824, 110.118, -27.0942, 0.22 ) }
    dend_56 { pt3dadd( 9.24929, 110.797, -27.4324, 0.22 ) }
    dend_56 { pt3dadd( 8.83482, 111.62, -27.9432, 0.81 ) }
    dend_56 { pt3dadd( 8.30715, 112.48, -28.579, 0.22 ) }
    dend_56 { pt3dadd( 7.8414, 113.163, -29.1491, 0.37 ) }
    dend_56 { pt3dadd( 7.34619, 113.819, -29.7591, 0.88 ) }
    dend_56 { pt3dadd( 6.37337, 114.977, -30.97, 0.15 ) }
    dend_56 { pt3dadd( 5.86257, 115.547, -31.6334, 0.15 ) }
    dend_56 { pt3dadd( 5.61888, 115.812, -31.9868, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 96/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -4.85521, 38.8375, 15.7525, 0.81 ) }
    dend_49 { pt3dadd( -4.8102, 39.7288, 16.6037, 0.81 ) }
    dend_49 { pt3dadd( -4.79477, 40.5647, 17.3114, 0.81 ) }
    dend_49 { pt3dadd( -4.86658, 41.4976, 18.0323, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_49 { pt3dadd( -4.95677, 42.0314, 18.4116, 0.59 ) }
    dend_49 { pt3dadd( -5.08036, 42.5988, 18.7961, 0.59 ) }
    dend_49 { pt3dadd( -5.21487, 43.151, 19.1443, 0.44 ) }
    dend_49 { pt3dadd( -5.34888, 43.5953, 19.3498, 0.44 ) }
    dend_49 { pt3dadd( -5.64118, 44.429, 19.677, 0.44 ) }
    dend_49 { pt3dadd( -5.85972, 45.0193, 19.9037, 0.74 ) }
    dend_49 { pt3dadd( -6.10172, 45.7211, 20.2197, 1.11 ) }
    dend_49 { pt3dadd( -6.27473, 46.2438, 20.4652, 1.11 ) }
    dend_49 { pt3dadd( -6.57826, 47.2287, 20.943, 0.52 ) }
    dend_49 { pt3dadd( -6.78094, 48.0126, 21.3179, 0.66 ) }
    dend_49 { pt3dadd( -6.9252, 48.7557, 21.6765, 0.96 ) }
    dend_49 { pt3dadd( -7.05373, 49.5375, 22.0637, 1.33 ) }
    dend_49 { pt3dadd( -7.22983, 50.5887, 22.5963, 1.77 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -112.42, -289.152, -19.4315, 0.29 ) }
    dend_40 { pt3dadd( -112.629, -290.344, -19.0583, 0.29 ) }
    dend_40 { pt3dadd( -112.874, -291.572, -18.7946, 0.66 ) }
    dend_40 { pt3dadd( -113.233, -293.287, -18.549, 0.15 ) }
    dend_40 { pt3dadd( -113.436, -294.263, -18.4606, 0.15 ) }
    dend_40 { pt3dadd( -113.589, -294.9, -18.4608, 0.59 ) }
    dend_40 { pt3dadd( -113.981, -296.226, -18.5807, 0.07 ) }
    dend_40 { pt3dadd( -114.341, -297.08, -18.8197, 0.07 ) }
    dend_40 { pt3dadd( -114.581, -297.519, -19.0194, 0.15 ) }
    dend_40 { pt3dadd( -114.83, -297.969, -19.3269, 0.37 ) }
    dend_40 { pt3dadd( -115.384, -299.041, -20.1945, 0.07 ) }
    dend_40 { pt3dadd( -115.752, -299.776, -20.8636, 0.07 ) }
    dend_40 { pt3dadd( -115.932, -300.139, -21.2176, 0.07 ) }
    dend_40 { pt3dadd( -116.153, -300.559, -21.6184, 0.81 ) }
    dend_40 { pt3dadd( -116.708, -301.659, -22.6267, 0.22 ) }
    dend_40 { pt3dadd( -117.029, -302.379, -23.2356, 0.44 ) }
    dend_40 { pt3dadd( -117.324, -303.29, -23.8865, 0.15 ) }
    dend_40 { pt3dadd( -117.45, -303.821, -24.2333, 0.15 ) }
    dend_40 { pt3dadd( -117.522, -304.229, -24.4762, 0.44 ) }
    dend_40 { pt3dadd( -117.636, -304.897, -24.8519, 0.66 ) }
    dend_40 { pt3dadd( -117.867, -306.133, -25.4472, 0.15 ) }
    dend_40 { pt3dadd( -117.984, -306.941, -25.7965, 0.15 ) }
    dend_40 { pt3dadd( -118.011, -307.638, -26.0656, 0.15 ) }
    dend_40 { pt3dadd( -117.984, -308.403, -26.3657, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 37/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -112.42, -289.152, -19.4315, 0.07 ) }
    dend_39 { pt3dadd( -114.374, -287.996, -19.5402, 0.07 ) }
    dend_39 { pt3dadd( -115.766, -287.149, -19.6792, 0.07 ) }
    dend_39 { pt3dadd( -117.055, -286.37, -19.8415, 0.07 ) }
    dend_39 { pt3dadd( -117.669, -285.989, -19.9332, 0.15 ) }
    dend_39 { pt3dadd( -118.766, -285.229, -20.119, 0.07 ) }
    dend_39 { pt3dadd( -119.477, -284.671, -20.2513, 0.07 ) }
    dend_39 { pt3dadd( -120.066, -284.077, -20.4425, 0.22 ) }
    dend_39 { pt3dadd( -120.517, -283.578, -20.5384, 0.15 ) }
    dend_39 { pt3dadd( -120.791, -283.269, -20.5786, 0.15 ) }
    dend_39 { pt3dadd( -121.696, -282.293, -20.7025, 0.29 ) }
    dend_39 { pt3dadd( -122.486, -281.525, -20.7979, 0.07 ) }
    dend_39 { pt3dadd( -123.299, -280.821, -20.887, 0.15 ) }
    dend_39 { pt3dadd( -125.119, -279.414, -21.1288, 0.07 ) }
    dend_39 { pt3dadd( -126.195, -278.759, -21.29, 0.15 ) }
    dend_39 { pt3dadd( -127.075, -278.39, -21.4424, 0.15 ) }
    dend_39 { pt3dadd( -127.873, -278.204, -21.6012, 0.15 ) }
    dend_39 { pt3dadd( -128.683, -278.17, -21.7848, 0.15 ) }
    dend_39 { pt3dadd( -129.856, -278.236, -22.0956, 0.15 ) }
    dend_39 { pt3dadd( -130.893, -278.43, -22.4544, 0.07 ) }
    dend_39 { pt3dadd( -131.895, -278.729, -22.7415, 0.07 ) }
    dend_39 { pt3dadd( -132.514, -278.964, -22.891, 0.66 ) }
    dend_39 { pt3dadd( -133.682, -279.52, -23.1829, 0.81 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -21.7582, -394.975, 41.8619, 0.15 ) }
    dend_29 { pt3dadd( -21.3481, -396.223, 40.9247, 0.15 ) }
    dend_29 { pt3dadd( -21.2035, -396.912, 40.4696, 0.15 ) }
    dend_29 { pt3dadd( -21.1303, -397.232, 40.2812, 0.15 ) }
    dend_29 { pt3dadd( -21.0429, -397.591, 40.0709, 0.52 ) }
    dend_29 { pt3dadd( -20.925, -398.094, 39.792, 0.81 ) }
    dend_29 { pt3dadd( -20.6528, -399.344, 39.086, 0.22 ) }
    dend_29 { pt3dadd( -20.4659, -400.302, 38.5874, 0.22 ) }
    dend_29 { pt3dadd( -20.354, -400.983, 38.2429, 0.15 ) }
    dend_29 { pt3dadd( -20.2433, -401.56, 37.955, 0.22 ) }
    dend_29 { pt3dadd( -20.0522, -402.296, 37.5817, 0.29 ) }
    dend_29 { pt3dadd( -19.7892, -403.04, 37.1926, 0.22 ) }
    dend_29 { pt3dadd( -19.5874, -403.49, 36.9465, 0.22 ) }
    dend_29 { pt3dadd( -19.3574, -403.996, 36.653, 0.37 ) }
    dend_29 { pt3dadd( -19.0715, -404.677, 36.2341, 0.37 ) }
    dend_29 { pt3dadd( -18.7023, -405.578, 35.6847, 0.22 ) }
    dend_29 { pt3dadd( -18.5279, -405.942, 35.4462, 0.22 ) }
    dend_29 { pt3dadd( -18.2398, -406.484, 35.0683, 0.22 ) }
    dend_29 { pt3dadd( -18.101, -406.755, 34.8612, 0.22 ) }
    dend_29 { pt3dadd( -17.9354, -407.156, 34.5295, 0.22 ) }
    dend_29 { pt3dadd( -17.7813, -407.569, 34.1912, 0.15 ) }
    dend_29 { pt3dadd( -17.4635, -408.39, 33.562, 0.44 ) }
    dend_29 { pt3dadd( -17.0991, -409.369, 32.8742, 0.22 ) }
    dend_29 { pt3dadd( -16.9103, -409.954, 32.5077, 0.29 ) }
    dend_29 { pt3dadd( -16.5487, -411.165, 31.803, 0.07 ) }
    dend_29 { pt3dadd( -16.3313, -411.939, 31.3864, 0.66 ) }
    dend_29 { pt3dadd( -16.055, -413.021, 30.8557, 0.07 ) }
    dend_29 { pt3dadd( -15.8855, -413.761, 30.5301, 0.07 ) }
    dend_29 { pt3dadd( -15.6537, -414.604, 30.1683, 0.29 ) }
    dend_29 { pt3dadd( -15.3586, -415.501, 29.7832, 0.07 ) }
    dend_29 { pt3dadd( -15.2093, -415.926, 29.5951, 0.44 ) }
    dend_29 { pt3dadd( -15.1406, -416.155, 29.4822, 0.44 ) }
    dend_29 { pt3dadd( -14.9271, -416.89, 29.0919, 0.74 ) }
    dend_29 { pt3dadd( -14.4635, -418.021, 28.427, 0.07 ) }
    dend_29 { pt3dadd( -14.2231, -418.482, 28.149, 0.22 ) }
    dend_29 { pt3dadd( -13.8485, -419.102, 27.7942, 0.07 ) }
    dend_29 { pt3dadd( -13.524, -419.647, 27.4838, 0.07 ) }
    dend_29 { pt3dadd( -13.2238, -420.138, 27.2141, 0.66 ) }
    dend_29 { pt3dadd( -12.3114, -421.482, 26.5577, 0.07 ) }
    dend_29 { pt3dadd( -11.8268, -422.043, 26.3275, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_29 { pt3dadd( -11.205, -422.586, 26.0989, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 1/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -21.7582, -394.975, 41.8619, 0.07 ) }
    dend_28 { pt3dadd( -20.5365, -395.361, 42.4431, 0.07 ) }
    dend_28 { pt3dadd( -19.9666, -395.513, 42.7058, 0.29 ) }
    dend_28 { pt3dadd( -19.2671, -395.682, 43.022, 0.07 ) }
    dend_28 { pt3dadd( -18.6811, -395.809, 43.2832, 0.52 ) }
    dend_28 { pt3dadd( -17.0581, -396.052, 43.9229, 0.07 ) }
    dend_28 { pt3dadd( -16.0927, -396.14, 44.2562, 0.07 ) }
    dend_28 { pt3dadd( -15.7112, -396.151, 44.3763, 0.59 ) }
    dend_28 { pt3dadd( -15.1823, -396.143, 44.5234, 0.74 ) }
    dend_28 { pt3dadd( -14.6618, -396.1, 44.6533, 0.37 ) }
    dend_28 { pt3dadd( -13.2722, -395.893, 44.9362, 0.07 ) }
    dend_28 { pt3dadd( -12.5604, -395.709, 45.0035, 0.44 ) }
    // Section: dend_21, id: dend_21, parent: dend_13 (entry count 13/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -2.0592, -18.6666, -16.5224, 0.59 ) }
    dend_21 { pt3dadd( -2.08681, -18.5878, -17.8111, 0.59 ) }
    dend_21 { pt3dadd( -2.11189, -18.5719, -18.8137, 0.59 ) }
    dend_21 { pt3dadd( -2.17297, -18.5984, -20.2572, 0.52 ) }
    dend_21 { pt3dadd( -2.27522, -18.6421, -21.3843, 0.52 ) }
    dend_21 { pt3dadd( -2.37913, -18.6752, -22.1882, 0.52 ) }
    dend_21 { pt3dadd( -2.44958, -18.6811, -22.5876, 0.52 ) }
    dend_21 { pt3dadd( -2.64682, -18.646, -23.2879, 0.52 ) }
    dend_21 { pt3dadd( -2.75767, -18.6012, -23.5994, 0.52 ) }
    dend_21 { pt3dadd( -3.03778, -18.3868, -24.312, 0.66 ) }
    dend_21 { pt3dadd( -3.12179, -18.258, -24.5771, 0.66 ) }
    dend_21 { pt3dadd( -3.23924, -17.8287, -25.3483, 0.29 ) }
    dend_21 { pt3dadd( -3.21994, -17.4071, -26.1218, 0.88 ) }
    dend_21 { pt3dadd( -3.02586, -17.1058, -26.7757, 0.37 ) }
    dend_21 { pt3dadd( -2.71575, -16.8873, -27.4036, 0.29 ) }
    dend_21 { pt3dadd( -2.37227, -16.7249, -27.9342, 0.29 ) }
    dend_21 { pt3dadd( -2.08576, -16.6158, -28.3156, 0.29 ) }
    dend_21 { pt3dadd( -1.87333, -16.5506, -28.5529, 0.44 ) }
    dend_21 { pt3dadd( -1.4255, -16.3729, -29.0225, 0.52 ) }
    dend_21 { pt3dadd( -1.00448, -16.1065, -29.4435, 0.15 ) }
    dend_21 { pt3dadd( -0.662187, -15.7987, -29.7502, 0.15 ) }
    dend_21 { pt3dadd( -0.28175, -15.3796, -30.0461, 0.15 ) }
    dend_21 { pt3dadd( -0.0121658, -15.0229, -30.2359, 0.15 ) }
    dend_21 { pt3dadd( 0.279883, -14.5377, -30.4665, 0.15 ) }
    dend_21 { pt3dadd( 0.598134, -13.8876, -30.7395, 0.15 ) }
    dend_21 { pt3dadd( 0.943768, -13.1508, -31.0333, 0.29 ) }
    dend_21 { pt3dadd( 1.14615, -12.7047, -31.2141, 0.15 ) }
    dend_21 { pt3dadd( 1.44987, -11.9635, -31.5043, 0.22 ) }
    dend_21 { pt3dadd( 1.80582, -10.9622, -31.8873, 0.07 ) }
    dend_21 { pt3dadd( 1.9371, -10.5424, -32.0517, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 43/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.0592, -18.6666, -16.5224, 0.88 ) }
    dend_14 { pt3dadd( -1.82604, -19.6543, -17.2001, 0.88 ) }
    dend_14 { pt3dadd( -1.64575, -20.5549, -17.9972, 0.74 ) }
    dend_14 { pt3dadd( -1.48693, -21.3483, -18.6993, 0.88 ) }
    dend_14 { pt3dadd( -1.25376, -22.5131, -19.7301, 0.88 ) }
    dend_14 { pt3dadd( -1.06265, -23.4678, -20.5751, 0.96 ) }
    dend_14 { pt3dadd( -0.85386, -24.5108, -21.4981, 0.96 ) }
    dend_14 { pt3dadd( -0.810529, -25.0712, -22.1934, 0.96 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -14.4301, -6.2233, -12.5474, 0.81 ) }
    dend_12 { pt3dadd( -16.2298, -5.95817, -12.5875, 0.81 ) }
    dend_12 { pt3dadd( -17.5455, -5.66687, -12.4994, 0.44 ) }
    dend_12 { pt3dadd( -18.3776, -5.35922, -12.3484, 0.44 ) }
    dend_12 { pt3dadd( -19.3885, -4.79116, -12.0455, 0.66 ) }
    dend_12 { pt3dadd( -20.0474, -4.31386, -11.796, 0.74 ) }
    dend_12 { pt3dadd( -20.9322, -3.56932, -11.4301, 0.44 ) }
    dend_12 { pt3dadd( -21.7715, -2.68561, -11.002, 0.59 ) }
    dend_12 { pt3dadd( -22.7915, -1.45649, -10.46, 0.59 ) }
    dend_12 { pt3dadd( -23.7389, -0.188329, -9.97864, 0.59 ) }
    dend_12 { pt3dadd( -24.5079, 0.908995, -9.59525, 0.59 ) }
    dend_12 { pt3dadd( -25.3548, 2.08223, -9.19188, 0.81 ) }
    dend_12 { pt3dadd( -25.9926, 2.85634, -8.91914, 0.66 ) }
    dend_12 { pt3dadd( -26.54, 3.38685, -8.7112, 0.88 ) }
    dend_12 { pt3dadd( -27.786, 4.35842, -8.24469, 0.37 ) }
    dend_12 { pt3dadd( -28.4978, 4.84925, -7.95411, 0.44 ) }
    dend_12 { pt3dadd( -29.469, 5.49878, -7.51142, 0.59 ) }
    dend_12 { pt3dadd( -30.5852, 6.27895, -6.95667, 0.44 ) }
    dend_12 { pt3dadd( -31.5678, 7.05737, -6.45826, 0.44 ) }
    dend_12 { pt3dadd( -32.4166, 7.8593, -6.08579, 0.44 ) }
    dend_12 { pt3dadd( -33.1956, 8.73252, -5.84043, 0.66 ) }
    dend_12 { pt3dadd( -33.8304, 9.55042, -5.75578, 0.81 ) }
    dend_12 { pt3dadd( -34.3359, 10.2797, -5.76829, 0.81 ) }
    dend_12 { pt3dadd( -35.1274, 11.4311, -5.88023, 0.66 ) }
    dend_12 { pt3dadd( -36.1599, 12.8519, -6.15494, 0.59 ) }
    dend_12 { pt3dadd( -37.0146, 13.8705, -6.49275, 0.59 ) }
    dend_12 { pt3dadd( -38.1686, 14.9946, -7.0417, 0.74 ) }
    dend_12 { pt3dadd( -38.6209, 15.3473, -7.27011, 0.52 ) }
    dend_12 { pt3dadd( -39.5659, 15.9242, -7.73887, 0.22 ) }
    dend_12 { pt3dadd( -40.5328, 16.3705, -8.21151, 0.22 ) }
    dend_12 { pt3dadd( -41.5144, 16.7443, -8.72121, 0.22 ) }
    dend_12 { pt3dadd( -42.1555, 16.9812, -9.07211, 0.37 ) }
    dend_12 { pt3dadd( -42.8928, 17.2639, -9.47995, 0.81 ) }
    dend_12 { pt3dadd( -43.5982, 17.5539, -9.86509, 0.81 ) }
    dend_12 { pt3dadd( -44.5246, 17.9892, -10.3668, 0.59 ) }
    dend_12 { pt3dadd( -45.5881, 18.5438, -10.899, 0.37 ) }
    dend_12 { pt3dadd( -46.4392, 19.0323, -11.3213, 0.29 ) }
    dend_12 { pt3dadd( -47.2715, 19.547, -11.7868, 0.37 ) }
    dend_12 { pt3dadd( -47.7999, 19.8954, -12.1556, 0.29 ) }
    dend_12 { pt3dadd( -48.6322, 20.4736, -12.8249, 0.29 ) }
    dend_12 { pt3dadd( -49.396, 21.0318, -13.4946, 0.81 ) }
    dend_12 { pt3dadd( -50.1919, 21.62, -14.2286, 0.52 ) }
    dend_12 { pt3dadd( -50.8593, 22.1186, -14.9059, 0.52 ) }
    dend_12 { pt3dadd( -51.8434, 22.8765, -15.9899, 0.37 ) }
    dend_12 { pt3dadd( -52.3824, 23.3135, -16.6663, 0.66 ) }
    dend_12 { pt3dadd( -52.9172, 23.7596, -17.4405, 0.66 ) }
    dend_12 { pt3dadd( -53.6821, 24.4021, -18.687, 0.44 ) }
    dend_12 { pt3dadd( -54.4683, 25.0438, -20.048, 0.81 ) }
    dend_12 { pt3dadd( -54.8243, 25.3259, -20.6645, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -55.4121, 25.7647, -21.699, 0.37 ) }
    dend_12 { pt3dadd( -55.8663, 26.0301, -22.5325, 0.22 ) }
    dend_12 { pt3dadd( -56.3615, 26.1616, -23.3438, 0.22 ) }
    dend_12 { pt3dadd( -56.8014, 26.1091, -23.9513, 0.22 ) }
    dend_12 { pt3dadd( -57.2087, 25.9721, -24.4128, 0.81 ) }
    dend_12 { pt3dadd( -57.5244, 25.8431, -24.7395, 1.03 ) }
    dend_12 { pt3dadd( -58.3134, 25.4778, -25.4895, 0.66 ) }
    dend_12 { pt3dadd( -59.4316, 24.9456, -26.4963, 0.29 ) }
    dend_12 { pt3dadd( -60.877, 24.2841, -27.8362, 0.29 ) }
    dend_12 { pt3dadd( -61.6653, 23.9704, -28.6142, 0.22 ) }
    dend_12 { pt3dadd( -62.2318, 23.7914, -29.2399, 0.22 ) }
    dend_12 { pt3dadd( -62.5436, 23.7266, -29.6248, 0.22 ) }
    dend_12 { pt3dadd( -62.994, 23.7222, -30.2789, 0.22 ) }
    dend_12 { pt3dadd( -63.4206, 23.8302, -31.0191, 0.22 ) }
    dend_12 { pt3dadd( -63.7232, 23.9767, -31.5949, 0.22 ) }
    dend_12 { pt3dadd( -64.2551, 24.2213, -32.6476, 0.22 ) }
    dend_12 { pt3dadd( -64.5608, 24.3724, -33.2847, 0.66 ) }
    dend_12 { pt3dadd( -65.1101, 24.6669, -34.5032, 0.66 ) }
    dend_12 { pt3dadd( -65.6163, 24.9344, -35.6826, 0.15 ) }
    dend_12 { pt3dadd( -66.1202, 25.1532, -36.7874, 0.15 ) }
    dend_12 { pt3dadd( -66.8216, 25.3982, -38.2413, 0.74 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 21/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -14.4301, -6.2233, -12.5474, 1.55 ) }
    dend_3 { pt3dadd( -14.5916, -8.50875, -13.1045, 1.55 ) }
    dend_3 { pt3dadd( -14.8159, -10.2702, -13.5362, 1.4 ) }
    dend_3 { pt3dadd( -15.1287, -11.7959, -13.8715, 1.33 ) }
    dend_3 { pt3dadd( -15.6047, -13.4874, -14.1574, 0.96 ) }
    dend_3 { pt3dadd( -16.1085, -14.9287, -14.3082, 0.88 ) }
    dend_3 { pt3dadd( -16.6499, -16.2629, -14.3575, 1.4 ) }
    dend_3 { pt3dadd( -17.2261, -17.3146, -14.2971, 1.47 ) }
    dend_3 { pt3dadd( -18.4156, -19.1025, -14.0313, 1.03 ) }
    dend_3 { pt3dadd( -19.5801, -20.6228, -13.7275, 0.96 ) }
    dend_3 { pt3dadd( -20.9082, -22.2501, -13.3363, 1.03 ) }
    dend_3 { pt3dadd( -22.0537, -23.6838, -12.9629, 1.03 ) }
    dend_3 { pt3dadd( -23.274, -25.2934, -12.544, 1.11 ) }
    dend_3 { pt3dadd( -24.102, -26.4749, -12.291, 0.88 ) }
    dend_3 { pt3dadd( -25.1129, -28.0819, -12.0438, 0.88 ) }
    dend_3 { pt3dadd( -25.7695, -29.2675, -11.9657, 1.11 ) }
    dend_3 { pt3dadd( -26.593, -30.9752, -11.9928, 1.11 ) }
    dend_3 { pt3dadd( -27.2117, -32.4865, -12.0915, 0.96 ) }
    dend_3 { pt3dadd( -27.8451, -34.3845, -12.2508, 1.03 ) }
    dend_3 { pt3dadd( -28.1959, -35.6293, -12.3709, 1.11 ) }
    dend_3 { pt3dadd( -28.698, -37.5082, -12.4849, 0.96 ) }
    dend_3 { pt3dadd( -29.0809, -38.8254, -12.5449, 0.88 ) }
    dend_3 { pt3dadd( -29.2828, -39.4487, -12.5631, 0.81 ) }
    dend_3 { pt3dadd( -29.7124, -40.7119, -12.5852, 0.74 ) }
    dend_3 { pt3dadd( -30.1649, -41.9721, -12.6016, 0.88 ) }
    dend_3 { pt3dadd( -30.8671, -43.7457, -12.6369, 1.03 ) }
    dend_3 { pt3dadd( -31.3373, -44.7512, -12.6393, 1.25 ) }
    dend_3 { pt3dadd( -32.2924, -46.4807, -12.621, 1.25 ) }
    dend_3 { pt3dadd( -33.3179, -48.114, -12.5831, 1.18 ) }
    dend_3 { pt3dadd( -34.3319, -49.6453, -12.5607, 1.11 ) }
    dend_3 { pt3dadd( -35.3264, -51.095, -12.5545, 1.03 ) }
    dend_3 { pt3dadd( -36.7971, -53.2114, -12.5856, 0.96 ) }
    dend_3 { pt3dadd( -37.8212, -54.5839, -12.5532, 0.96 ) }
    dend_3 { pt3dadd( -38.5962, -55.4857, -12.4713, 1.25 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -7.22983, 50.5887, 22.5963, 0.29 ) }
    dend_51 { pt3dadd( -7.68781, 51.6944, 23.7965, 0.29 ) }
    dend_51 { pt3dadd( -8.01463, 52.4515, 24.6147, 0.22 ) }
    dend_51 { pt3dadd( -8.28375, 53.0578, 25.2739, 0.22 ) }
    dend_51 { pt3dadd( -8.41495, 53.3847, 25.6226, 0.22 ) }
    dend_51 { pt3dadd( -8.51198, 53.6691, 25.9247, 0.59 ) }
    dend_51 { pt3dadd( -8.64567, 54.1487, 26.437, 1.03 ) }
    dend_51 { pt3dadd( -8.71504, 54.6724, 26.9855, 1.33 ) }
    dend_51 { pt3dadd( -8.80914, 55.4996, 27.7845, 0.59 ) }
    dend_51 { pt3dadd( -8.88126, 56.0708, 28.3008, 0.22 ) }
    dend_51 { pt3dadd( -8.95812, 56.6616, 28.7252, 0.22 ) }
    dend_51 { pt3dadd( -9.05034, 57.4493, 29.1511, 0.22 ) }
    dend_51 { pt3dadd( -9.11365, 58.0168, 29.3722, 0.74 ) }
    dend_51 { pt3dadd( -9.20576, 58.8406, 29.5648, 1.84 ) }
    dend_51 { pt3dadd( -9.29118, 59.5272, 29.6468, 1.84 ) }
    dend_51 { pt3dadd( -9.61965, 61.6645, 29.7097, 0.22 ) }
    dend_51 { pt3dadd( -9.83269, 62.9126, 29.6503, 0.22 ) }
    dend_51 { pt3dadd( -9.93483, 63.6012, 29.5808, 0.22 ) }
    dend_51 { pt3dadd( -10.0667, 64.9957, 29.4234, 0.22 ) }
    dend_51 { pt3dadd( -10.0799, 65.348, 29.3807, 0.44 ) }
    dend_51 { pt3dadd( -10.0674, 66.0857, 29.2852, 1.18 ) }
    dend_51 { pt3dadd( -9.98349, 67.1973, 29.1478, 1.7 ) }
    dend_51 { pt3dadd( -9.79813, 69.0986, 28.9556, 0.15 ) }
    dend_51 { pt3dadd( -9.67495, 70.3186, 28.8694, 0.15 ) }
    dend_51 { pt3dadd( -9.6312, 70.7189, 28.8662, 0.74 ) }
    dend_51 { pt3dadd( -9.5538, 71.4888, 28.8848, 1.7 ) }
    dend_51 { pt3dadd( -9.54225, 71.619, 28.8926, 1.7 ) }
    dend_51 { pt3dadd( -9.50779, 73.0027, 29.0033, 0.15 ) }
    dend_51 { pt3dadd( -9.55282, 73.5206, 29.0465, 0.15 ) }
    dend_51 { pt3dadd( -9.69225, 74.3369, 29.1013, 0.15 ) }
    dend_51 { pt3dadd( -9.87445, 75.0868, 29.1446, 0.29 ) }
    dend_51 { pt3dadd( -9.98213, 75.4169, 29.1637, 0.29 ) }
    dend_51 { pt3dadd( -10.4023, 76.5145, 29.2104, 0.07 ) }
    dend_51 { pt3dadd( -10.6119, 77.0105, 29.2211, 0.22 ) }
    dend_51 { pt3dadd( -10.8258, 77.484, 29.2087, 0.66 ) }
    dend_51 { pt3dadd( -11.3368, 78.5515, 29.1395, 0.96 ) }
    dend_51 { pt3dadd( -11.7767, 79.472, 29.0513, 0.22 ) }
    dend_51 { pt3dadd( -12.3019, 80.6028, 28.9034, 0.66 ) }
    dend_51 { pt3dadd( -12.6756, 81.4885, 28.7824, 0.44 ) }
    dend_51 { pt3dadd( -12.9031, 82.0913, 28.7018, 0.74 ) }
    dend_51 { pt3dadd( -13.1143, 82.74, 28.63, 1.55 ) }
    dend_51 { pt3dadd( -13.3232, 83.5761, 28.5674, 1.84 ) }
    dend_51 { pt3dadd( -13.635, 85.3443, 28.5706, 0.22 ) }
    dend_51 { pt3dadd( -13.7376, 86.3196, 28.6878, 0.22 ) }
    dend_51 { pt3dadd( -13.7508, 86.6559, 28.7695, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_51 { pt3dadd( -13.7505, 87.3309, 29.0183, 1.25 ) }
    dend_51 { pt3dadd( -13.7454, 88.0749, 29.3603, 1.62 ) }
    dend_51 { pt3dadd( -13.7416, 89.5323, 30.1262, 0.22 ) }
    dend_51 { pt3dadd( -13.7448, 90.2652, 30.5384, 0.22 ) }
    dend_51 { pt3dadd( -13.8078, 91.3749, 31.1376, 1.03 ) }
    dend_51 { pt3dadd( -14.0174, 93.0788, 31.9495, 0.15 ) }
    dend_51 { pt3dadd( -14.2347, 94.1553, 32.3707, 0.15 ) }
    dend_51 { pt3dadd( -14.3828, 94.6835, 32.5259, 0.52 ) }
    dend_51 { pt3dadd( -14.5512, 95.1467, 32.6035, 1.03 ) }
    dend_51 { pt3dadd( -14.9478, 96.0684, 32.6505, 1.18 ) }
    dend_51 { pt3dadd( -15.5967, 97.3295, 32.583, 0.22 ) }
    dend_51 { pt3dadd( -15.9557, 97.9215, 32.4915, 0.22 ) }
    dend_51 { pt3dadd( -16.3609, 98.5282, 32.3868, 0.22 ) }
    dend_51 { pt3dadd( -17.0213, 99.4367, 32.2238, 0.22 ) }
    dend_51 { pt3dadd( -17.3399, 99.8392, 32.1479, 0.74 ) }
    dend_51 { pt3dadd( -17.98, 100.591, 32.0109, 1.77 ) }
    dend_51 { pt3dadd( -18.8282, 101.512, 31.8474, 0.22 ) }
    dend_51 { pt3dadd( -19.398, 102.083, 31.7271, 0.22 ) }
    dend_51 { pt3dadd( -19.878, 102.516, 31.6118, 0.22 ) }
    dend_51 { pt3dadd( -20.182, 102.77, 31.527, 0.22 ) }
    dend_51 { pt3dadd( -20.867, 103.366, 31.3263, 0.07 ) }
    dend_51 { pt3dadd( -21.4793, 103.968, 31.1295, 0.07 ) }
    dend_51 { pt3dadd( -21.882, 104.414, 31.0048, 0.07 ) }
    dend_51 { pt3dadd( -22.3385, 104.969, 30.8808, 0.37 ) }
    dend_51 { pt3dadd( -22.8293, 105.62, 30.7868, 1.03 ) }
    dend_51 { pt3dadd( -23.5947, 106.708, 30.7014, 0.52 ) }
    dend_51 { pt3dadd( -24.4515, 108.034, 30.7096, 0.15 ) }
    dend_51 { pt3dadd( -24.8473, 108.71, 30.7641, 0.29 ) }
    dend_51 { pt3dadd( -25.1179, 109.207, 30.8291, 0.96 ) }
    dend_51 { pt3dadd( -25.4573, 109.861, 30.9384, 1.11 ) }
    dend_51 { pt3dadd( -25.8577, 110.643, 31.0982, 0.22 ) }
    dend_51 { pt3dadd( -26.3238, 111.574, 31.3283, 0.22 ) }
    dend_51 { pt3dadd( -26.6258, 112.18, 31.5255, 0.37 ) }
    dend_51 { pt3dadd( -26.9156, 112.752, 31.7307, 0.96 ) }
    dend_51 { pt3dadd( -27.1799, 113.244, 31.9348, 0.96 ) }
    dend_51 { pt3dadd( -27.5746, 113.902, 32.244, 0.15 ) }
    dend_51 { pt3dadd( -28.0808, 114.628, 32.6043, 0.22 ) }
    dend_51 { pt3dadd( -28.6492, 115.342, 32.9796, 0.37 ) }
    dend_51 { pt3dadd( -29.2576, 116.038, 33.3727, 0.74 ) }
    dend_51 { pt3dadd( -30.0221, 116.846, 33.8518, 0.22 ) }
    dend_51 { pt3dadd( -31.0025, 117.805, 34.4402, 0.66 ) }
    dend_51 { pt3dadd( -31.805, 118.553, 34.924, 0.07 ) }
    dend_51 { pt3dadd( -32.111, 118.837, 35.1132, 0.07 ) }
    dend_51 { pt3dadd( -32.4996, 119.207, 35.3385, 0.15 ) }
    dend_51 { pt3dadd( -32.9495, 119.647, 35.5741, 0.81 ) }
    dend_51 { pt3dadd( -33.4313, 120.143, 35.7988, 1.25 ) }
    dend_51 { pt3dadd( -34.1984, 120.974, 36.1386, 0.37 ) }
    dend_51 { pt3dadd( -35.0421, 121.92, 36.4849, 0.22 ) }
    dend_51 { pt3dadd( -35.856, 122.829, 36.7805, 0.37 ) }
    dend_51 { pt3dadd( -36.6869, 123.754, 37.0507, 0.88 ) }
    dend_51 { pt3dadd( -37.1346, 124.253, 37.1808, 0.37 ) }
    dend_51 { pt3dadd( -37.7414, 124.937, 37.3489, 0.15 ) }
    dend_51 { pt3dadd( -38.3191, 125.592, 37.5032, 0.15 ) }
    dend_51 { pt3dadd( -38.7759, 126.143, 37.6517, 0.37 ) }
    dend_51 { pt3dadd( -39.2448, 126.786, 37.8801, 0.74 ) }
    dend_51 { pt3dadd( -39.6329, 127.369, 38.1179, 0.29 ) }
    dend_51 { pt3dadd( -40.2447, 128.373, 38.5712, 0.15 ) }
    dend_51 { pt3dadd( -40.4215, 128.706, 38.7354, 0.44 ) }
    dend_51 { pt3dadd( -40.8096, 129.522, 39.1701, 1.03 ) }
    dend_51 { pt3dadd( -41.2135, 130.435, 39.6709, 0.44 ) }
    dend_51 { pt3dadd( -41.5527, 131.238, 40.1323, 0.15 ) }
    dend_51 { pt3dadd( -41.9302, 132.145, 40.6634, 0.74 ) }
    dend_51 { pt3dadd( -42.4462, 133.424, 41.3671, 0.15 ) }
    dend_51 { pt3dadd( -42.661, 133.998, 41.661, 0.22 ) }
    dend_51 { pt3dadd( -42.8558, 134.582, 41.935, 0.81 ) }
    dend_51 { pt3dadd( -42.9893, 135.057, 42.1291, 0.81 ) }
    dend_51 { pt3dadd( -43.205, 135.905, 42.4446, 0.22 ) }
    dend_51 { pt3dadd( -43.5135, 137.116, 42.8432, 0.15 ) }
    dend_51 { pt3dadd( -43.7188, 137.953, 43.1061, 0.22 ) }
    dend_51 { pt3dadd( -43.8628, 138.56, 43.2907, 0.37 ) }
    dend_51 { pt3dadd( -44.1302, 139.721, 43.6365, 0.96 ) }
    dend_51 { pt3dadd( -44.4782, 141.171, 44.0492, 0.15 ) }
    dend_51 { pt3dadd( -44.6561, 141.834, 44.2235, 0.15 ) }
    dend_51 { pt3dadd( -44.8337, 142.39, 44.3602, 0.15 ) }
    dend_51 { pt3dadd( -45.0846, 143.038, 44.4973, 0.66 ) }
    dend_51 { pt3dadd( -45.2526, 143.416, 44.5633, 0.66 ) }
    dend_51 { pt3dadd( -45.7361, 144.368, 44.6873, 0.07 ) }
    dend_51 { pt3dadd( -46.1278, 145.135, 44.783, 0.07 ) }
    dend_51 { pt3dadd( -46.2872, 145.446, 44.834, 0.44 ) }
    dend_51 { pt3dadd( -46.4876, 145.836, 44.9112, 0.74 ) }
    dend_51 { pt3dadd( -46.7103, 146.276, 45.0207, 0.96 ) }
    dend_51 { pt3dadd( -46.9357, 146.738, 45.1625, 0.96 ) }
    dend_51 { pt3dadd( -47.4653, 147.862, 45.567, 0.15 ) }
    dend_51 { pt3dadd( -47.8309, 148.663, 45.8837, 0.15 ) }
    dend_51 { pt3dadd( -48.2653, 149.584, 46.2542, 0.15 ) }
    dend_51 { pt3dadd( -48.5041, 150.064, 46.4411, 0.15 ) }
    dend_51 { pt3dadd( -48.7578, 150.529, 46.6164, 0.15 ) }
    dend_51 { pt3dadd( -49.0263, 150.953, 46.7717, 0.37 ) }
    dend_51 { pt3dadd( -49.3183, 151.346, 46.9341, 0.81 ) }
    dend_51 { pt3dadd( -49.7018, 151.793, 47.16, 1.03 ) }
    dend_51 { pt3dadd( -50.2348, 152.37, 47.5091, 0.37 ) }
    dend_51 { pt3dadd( -50.8246, 152.975, 47.9149, 0.15 ) }
    dend_51 { pt3dadd( -51.5528, 153.695, 48.4537, 0.29 ) }
    dend_51 { pt3dadd( -52.563, 154.635, 49.2617, 0.29 ) }
    dend_51 { pt3dadd( -53.308, 155.29, 49.8992, 0.15 ) }
    dend_51 { pt3dadd( -53.7957, 155.705, 50.3392, 0.29 ) }
    dend_51 { pt3dadd( -54.3583, 156.17, 50.8746, 0.88 ) }
    dend_51 { pt3dadd( -55.0609, 156.732, 51.5687, 0.15 ) }
    dend_51 { pt3dadd( -55.7227, 157.251, 52.2403, 0.15 ) }
    dend_51 { pt3dadd( -56.2901, 157.677, 52.7992, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_51 { pt3dadd( -56.9222, 158.157, 53.4277, 0.96 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 1/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -7.22983, 50.5887, 22.5963, 0.22 ) }
    dend_50 { pt3dadd( -6.54319, 51.4277, 22.8903, 0.22 ) }
    dend_50 { pt3dadd( -6.10111, 52.0114, 23.0392, 0.15 ) }
    dend_50 { pt3dadd( -5.68266, 52.595, 23.1876, 0.22 ) }
    dend_50 { pt3dadd( -5.33499, 53.1015, 23.3307, 0.15 ) }
    dend_50 { pt3dadd( -5.04428, 53.5336, 23.4603, 0.37 ) }
    dend_50 { pt3dadd( -4.89285, 53.7752, 23.5392, 0.37 ) }
    dend_50 { pt3dadd( -4.48582, 54.4934, 23.7935, 0.15 ) }
    dend_50 { pt3dadd( -4.12505, 55.1919, 24.0497, 0.15 ) }
    dend_50 { pt3dadd( -3.91313, 55.6255, 24.2203, 0.66 ) }
    dend_50 { pt3dadd( -3.60913, 56.252, 24.4762, 1.03 ) }
    dend_50 { pt3dadd( -3.18535, 57.1052, 24.8473, 0.15 ) }
    dend_50 { pt3dadd( -2.96344, 57.5385, 25.0362, 0.15 ) }
    dend_50 { pt3dadd( -2.70265, 58.0349, 25.2475, 0.15 ) }
    dend_50 { pt3dadd( -2.42262, 58.5656, 25.4404, 0.59 ) }
    dend_50 { pt3dadd( -2.07449, 59.2346, 25.6579, 0.07 ) }
    dend_50 { pt3dadd( -1.84436, 59.6962, 25.7936, 0.07 ) }
    dend_50 { pt3dadd( -1.62545, 60.149, 25.9019, 0.66 ) }
    dend_50 { pt3dadd( -1.54524, 60.3361, 25.9389, 0.66 ) }
    dend_50 { pt3dadd( -1.36804, 60.8198, 26.0402, 0.15 ) }
    dend_50 { pt3dadd( -1.22032, 61.3146, 26.1429, 0.15 ) }
    dend_50 { pt3dadd( -1.15138, 61.5858, 26.1974, 0.52 ) }
    dend_50 { pt3dadd( -1.03249, 62.0769, 26.2838, 1.55 ) }
    dend_50 { pt3dadd( -0.935599, 62.4651, 26.362, 1.77 ) }
    dend_50 { pt3dadd( -0.697425, 63.3852, 26.5618, 0.74 ) }
    dend_50 { pt3dadd( -0.493262, 64.1308, 26.752, 0.15 ) }
    dend_50 { pt3dadd( -0.36564, 64.5801, 26.8786, 0.15 ) }
    dend_50 { pt3dadd( -0.245126, 65.0169, 27.0215, 0.22 ) }
    dend_50 { pt3dadd( -0.125541, 65.53, 27.2201, 0.22 ) }
    dend_50 { pt3dadd( -0.0218024, 66.0423, 27.4464, 0.37 ) }
    dend_50 { pt3dadd( 0.0796056, 66.6265, 27.7318, 0.52 ) }
    dend_50 { pt3dadd( 0.135513, 66.9889, 27.9252, 1.47 ) }
    dend_50 { pt3dadd( 0.212678, 67.4791, 28.2253, 2.06 ) }
    dend_50 { pt3dadd( 0.382913, 68.4687, 28.8712, 0.29 ) }
    dend_50 { pt3dadd( 0.461902, 68.8887, 29.1477, 0.29 ) }
    dend_50 { pt3dadd( 0.601662, 69.5776, 29.6145, 0.74 ) }
    dend_50 { pt3dadd( 0.737443, 70.1944, 30.0125, 0.22 ) }
    dend_50 { pt3dadd( 0.96726, 71.0937, 30.5614, 0.29 ) }
    dend_50 { pt3dadd( 1.07207, 71.4585, 30.7656, 0.52 ) }
    dend_50 { pt3dadd( 1.15099, 71.7179, 30.8936, 0.22 ) }
    dend_50 { pt3dadd( 1.30777, 72.348, 31.1276, 0.22 ) }
    dend_50 { pt3dadd( 1.42927, 72.9534, 31.3039, 0.22 ) }
    dend_50 { pt3dadd( 1.5532, 73.7016, 31.4741, 0.22 ) }
    dend_50 { pt3dadd( 1.59332, 74.0325, 31.5312, 0.44 ) }
    dend_50 { pt3dadd( 1.64568, 74.6314, 31.6313, 1.25 ) }
    dend_50 { pt3dadd( 1.73739, 76.0081, 31.8619, 0.07 ) }
    dend_50 { pt3dadd( 1.77173, 76.7735, 31.9826, 0.07 ) }
    dend_50 { pt3dadd( 1.77798, 77.1091, 32.0358, 0.22 ) }
    dend_50 { pt3dadd( 1.77697, 77.6091, 32.1092, 0.96 ) }
    dend_50 { pt3dadd( 1.76654, 78.1154, 32.1844, 0.29 ) }
    dend_50 { pt3dadd( 1.73871, 78.9508, 32.3034, 0.07 ) }
    dend_50 { pt3dadd( 1.71954, 79.449, 32.38, 0.07 ) }
    dend_50 { pt3dadd( 1.70406, 79.7334, 32.4092, 0.15 ) }
    dend_50 { pt3dadd( 1.672, 80.2446, 32.4426, 1.25 ) }
    dend_50 { pt3dadd( 1.56039, 82.038, 32.5047, 0.15 ) }
    dend_50 { pt3dadd( 1.54213, 82.3189, 32.5081, 0.44 ) }
    dend_50 { pt3dadd( 1.50421, 82.8671, 32.5011, 0.96 ) }
    dend_50 { pt3dadd( 1.44151, 83.7955, 32.4938, 1.18 ) }
    dend_50 { pt3dadd( 1.35989, 85.0253, 32.4897, 0.07 ) }
    dend_50 { pt3dadd( 1.33309, 85.4463, 32.4881, 0.22 ) }
    dend_50 { pt3dadd( 1.30511, 86.0777, 32.493, 0.88 ) }
    dend_50 { pt3dadd( 1.28819, 86.5869, 32.5077, 0.44 ) }
    dend_50 { pt3dadd( 1.28018, 87.2177, 32.54, 0.15 ) }
    dend_50 { pt3dadd( 1.28031, 87.7727, 32.5886, 0.15 ) }
    dend_50 { pt3dadd( 1.27936, 88.1192, 32.6169, 0.37 ) }
    dend_50 { pt3dadd( 1.26258, 89.002, 32.6765, 1.55 ) }
    dend_50 { pt3dadd( 1.22316, 90.4259, 32.7572, 0.07 ) }
    dend_50 { pt3dadd( 1.19774, 91.0655, 32.7866, 0.07 ) }
    dend_50 { pt3dadd( 1.17465, 91.528, 32.7981, 0.37 ) }
    dend_50 { pt3dadd( 1.15468, 91.8785, 32.8107, 0.37 ) }
    dend_50 { pt3dadd( 1.10016, 92.6923, 32.8398, 0.07 ) }
    dend_50 { pt3dadd( 1.08188, 92.8982, 32.8469, 0.29 ) }
    dend_50 { pt3dadd( 1.02602, 93.4605, 32.8761, 1.18 ) }
    dend_50 { pt3dadd( 0.906904, 94.7474, 32.9347, 0.07 ) }
    dend_50 { pt3dadd( 0.852906, 95.5889, 32.9549, 0.07 ) }
    dend_50 { pt3dadd( 0.843237, 95.8723, 32.9554, 0.07 ) }
    dend_50 { pt3dadd( 0.837546, 96.2305, 32.9414, 0.37 ) }
    dend_50 { pt3dadd( 0.833377, 96.7342, 32.9065, 0.96 ) }
    dend_50 { pt3dadd( 0.827789, 97.4617, 32.8256, 0.07 ) }
    dend_50 { pt3dadd( 0.814648, 98.1188, 32.7027, 0.29 ) }
    dend_50 { pt3dadd( 0.772088, 99.1449, 32.427, 0.07 ) }
    dend_50 { pt3dadd( 0.721162, 100.159, 32.1072, 0.07 ) }
    dend_50 { pt3dadd( 0.713108, 100.298, 32.0538, 0.44 ) }
    dend_50 { pt3dadd( 0.673953, 100.977, 31.7064, 1.18 ) }
    dend_50 { pt3dadd( 0.633788, 101.773, 31.1598, 0.15 ) }
    dend_50 { pt3dadd( 0.615084, 102.2, 30.7725, 0.15 ) }
    dend_50 { pt3dadd( 0.605958, 102.426, 30.4943, 0.59 ) }
    dend_50 { pt3dadd( 0.598484, 102.645, 30.1434, 0.59 ) }
    dend_50 { pt3dadd( 0.570329, 103.115, 29.3011, 0.22 ) }
    dend_50 { pt3dadd( 0.557819, 103.345, 28.8288, 0.22 ) }
    dend_50 { pt3dadd( 0.554327, 103.538, 28.429, 0.22 ) }
    dend_50 { pt3dadd( 0.552235, 103.685, 28.1308, 0.22 ) }
    dend_50 { pt3dadd( 0.53724, 103.984, 27.5442, 0.37 ) }
    dend_50 { pt3dadd( 0.509395, 104.248, 27.0574, 1.03 ) }
    dend_50 { pt3dadd( 0.464675, 104.571, 26.4983, 0.74 ) }
    dend_50 { pt3dadd( 0.432808, 104.897, 25.9231, 0.22 ) }
    dend_50 { pt3dadd( 0.435675, 105.299, 25.2424, 0.22 ) }
    dend_50 { pt3dadd( 0.443437, 105.409, 25.0601, 0.22 ) }
    dend_50 { pt3dadd( 0.466597, 105.653, 24.647, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_50 { pt3dadd( 0.482824, 105.835, 24.3188, 0.22 ) }
    dend_50 { pt3dadd( 0.494796, 106.117, 23.8158, 0.22 ) }
    dend_50 { pt3dadd( 0.493166, 106.376, 23.3414, 0.88 ) }
    dend_50 { pt3dadd( 0.484557, 106.824, 22.5003, 0.15 ) }
    dend_50 { pt3dadd( 0.471934, 107.192, 21.7832, 0.15 ) }
    dend_50 { pt3dadd( 0.45817, 107.536, 21.1441, 0.15 ) }
    dend_50 { pt3dadd( 0.434328, 107.943, 20.4345, 0.74 ) }
    dend_50 { pt3dadd( 0.400909, 108.43, 19.604, 0.44 ) }
    dend_50 { pt3dadd( 0.379091, 108.809, 18.9653, 0.44 ) }
    dend_50 { pt3dadd( 0.378722, 109.122, 18.4675, 0.44 ) }
    dend_50 { pt3dadd( 0.378399, 109.461, 17.9653, 0.74 ) }
    dend_50 { pt3dadd( 0.351095, 109.92, 17.3273, 0.22 ) }
    dend_50 { pt3dadd( 0.309096, 110.18, 16.9854, 0.22 ) }
    dend_50 { pt3dadd( 0.244635, 110.411, 16.6974, 0.44 ) }
    dend_50 { pt3dadd( 0.132578, 110.711, 16.3378, 0.44 ) }
    dend_50 { pt3dadd( -0.041054, 111.11, 15.8701, 0.22 ) }
    dend_50 { pt3dadd( -0.244986, 111.566, 15.3917, 0.29 ) }
    dend_50 { pt3dadd( -0.450049, 112.06, 14.9763, 0.22 ) }
    dend_50 { pt3dadd( -0.617379, 112.527, 14.6647, 0.22 ) }
    dend_50 { pt3dadd( -0.700725, 112.819, 14.5094, 0.66 ) }
    dend_50 { pt3dadd( -0.82911, 113.498, 14.2481, 0.96 ) }
    dend_50 { pt3dadd( -0.942572, 114.616, 13.95, 0.22 ) }
    dend_50 { pt3dadd( -0.976257, 115.278, 13.8418, 0.37 ) }
    dend_50 { pt3dadd( -0.992565, 115.749, 13.8187, 0.07 ) }
    dend_50 { pt3dadd( -1.00376, 116.248, 13.8544, 0.07 ) }
    dend_50 { pt3dadd( -1.00823, 116.755, 13.9329, 0.07 ) }
    dend_50 { pt3dadd( -1.00833, 117.117, 14.0212, 0.29 ) }
    dend_50 { pt3dadd( -1.00863, 117.508, 14.1409, 0.66 ) }
    dend_50 { pt3dadd( -1.01029, 118.048, 14.3236, 0.88 ) }
    dend_50 { pt3dadd( -1.01298, 118.97, 14.6526, 0.15 ) }
    dend_50 { pt3dadd( -1.01026, 119.444, 14.8159, 0.15 ) }
    dend_50 { pt3dadd( -0.98704, 119.776, 14.9302, 0.22 ) }
    dend_50 { pt3dadd( -0.93309, 120.081, 15.0284, 0.22 ) }
    dend_50 { pt3dadd( -0.77817, 120.608, 15.1865, 0.22 ) }
    dend_50 { pt3dadd( -0.602795, 121.073, 15.3166, 0.22 ) }
    dend_50 { pt3dadd( -0.416664, 121.495, 15.426, 0.81 ) }
    dend_50 { pt3dadd( 0.0451255, 122.498, 15.682, 0.22 ) }
    dend_50 { pt3dadd( 0.4417, 123.284, 15.8854, 0.22 ) }
    dend_50 { pt3dadd( 0.845569, 124.024, 16.0831, 0.22 ) }
    dend_50 { pt3dadd( 1.00487, 124.297, 16.1583, 0.37 ) }
    dend_50 { pt3dadd( 1.25993, 124.704, 16.2823, 0.96 ) }
    dend_50 { pt3dadd( 1.90505, 125.686, 16.6338, 0.15 ) }
    dend_50 { pt3dadd( 2.28217, 126.242, 16.8658, 0.15 ) }
    dend_50 { pt3dadd( 2.45709, 126.506, 16.9938, 0.15 ) }
    dend_50 { pt3dadd( 2.64908, 126.802, 17.1501, 0.15 ) }
    dend_50 { pt3dadd( 2.96677, 127.267, 17.4189, 0.15 ) }
    dend_50 { pt3dadd( 3.15192, 127.517, 17.5875, 0.29 ) }
    dend_50 { pt3dadd( 3.44436, 127.875, 17.8727, 0.66 ) }
    dend_50 { pt3dadd( 3.57704, 128.034, 18.0042, 0.66 ) }
    dend_50 { pt3dadd( 4.05456, 128.604, 18.4644, 0.15 ) }
    dend_50 { pt3dadd( 4.31408, 128.921, 18.7008, 0.22 ) }
    dend_50 { pt3dadd( 4.83225, 129.553, 19.1674, 0.15 ) }
    dend_50 { pt3dadd( 5.14958, 129.928, 19.4315, 0.15 ) }
    dend_50 { pt3dadd( 5.58006, 130.421, 19.7775, 0.15 ) }
    dend_50 { pt3dadd( 5.82635, 130.702, 19.9642, 0.29 ) }
    dend_50 { pt3dadd( 6.28002, 131.22, 20.2894, 0.15 ) }
    dend_50 { pt3dadd( 6.53692, 131.529, 20.4614, 0.15 ) }
    dend_50 { pt3dadd( 6.79481, 131.854, 20.6068, 0.37 ) }
    dend_50 { pt3dadd( 7.21066, 132.406, 20.819, 0.15 ) }
    dend_50 { pt3dadd( 7.47494, 132.775, 20.9698, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 60/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -117.984, -308.403, -26.3657, 0.07 ) }
    dend_42 { pt3dadd( -117.63, -308.023, -26.335, 0.07 ) }
    dend_42 { pt3dadd( -117.11, -307.408, -26.3619, 0.29 ) }
    dend_42 { pt3dadd( -116.695, -306.902, -26.4317, 0.07 ) }
    dend_42 { pt3dadd( -116.273, -306.385, -26.5816, 0.07 ) }
    dend_42 { pt3dadd( -115.798, -305.805, -26.8355, 0.15 ) }
    dend_42 { pt3dadd( -115.459, -305.387, -27.0492, 0.15 ) }
    dend_42 { pt3dadd( -115.234, -305.108, -27.2395, 0.15 ) }
    dend_42 { pt3dadd( -114.945, -304.72, -27.5851, 0.29 ) }
    dend_42 { pt3dadd( -114.617, -304.263, -28.0762, 0.07 ) }
    dend_42 { pt3dadd( -114.402, -303.954, -28.4477, 0.29 ) }
    dend_42 { pt3dadd( -114.201, -303.712, -28.7696, 0.44 ) }
    dend_42 { pt3dadd( -114.104, -303.619, -28.9098, 0.44 ) }
    dend_42 { pt3dadd( -113.708, -303.289, -29.493, 0.15 ) }
    dend_42 { pt3dadd( -113.419, -303.048, -29.9387, 0.15 ) }
    dend_42 { pt3dadd( -113.305, -302.954, -30.1075, 0.15 ) }
    dend_42 { pt3dadd( -112.87, -302.607, -30.7738, 0.15 ) }
    dend_42 { pt3dadd( -112.682, -302.465, -31.0884, 0.37 ) }
    dend_42 { pt3dadd( -112.216, -302.107, -31.9483, 0.22 ) }
    dend_42 { pt3dadd( -111.99, -301.929, -32.3841, 0.22 ) }
    dend_42 { pt3dadd( -111.867, -301.82, -32.6339, 0.22 ) }
    dend_42 { pt3dadd( -111.608, -301.549, -33.1801, 0.15 ) }
    dend_42 { pt3dadd( -111.318, -301.222, -33.7734, 0.15 ) }
    dend_42 { pt3dadd( -111.041, -300.944, -34.2648, 0.15 ) }
    dend_42 { pt3dadd( -110.838, -300.774, -34.5485, 0.37 ) }
    dend_42 { pt3dadd( -110.464, -300.516, -34.9182, 0.44 ) }
    dend_42 { pt3dadd( -110.07, -300.243, -35.224, 0.22 ) }
    dend_42 { pt3dadd( -109.632, -299.947, -35.4871, 0.37 ) }
    dend_42 { pt3dadd( -109.351, -299.764, -35.6123, 0.37 ) }
    dend_42 { pt3dadd( -108.728, -299.389, -35.8257, 0.22 ) }
    dend_42 { pt3dadd( -107.874, -298.901, -36.0852, 0.22 ) }
    dend_42 { pt3dadd( -107.007, -298.489, -36.2876, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 92/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -117.984, -308.403, -26.3657, 0.15 ) }
    dend_41 { pt3dadd( -118.35, -309.389, -26.4859, 0.15 ) }
    dend_41 { pt3dadd( -118.678, -310.526, -26.5391, 0.29 ) }
    dend_41 { pt3dadd( -118.985, -311.678, -26.5361, 0.15 ) }
    dend_41 { pt3dadd( -119.327, -312.764, -26.4971, 0.15 ) }
    dend_41 { pt3dadd( -119.629, -313.654, -26.4531, 0.15 ) }
    dend_41 { pt3dadd( -119.808, -314.162, -26.4263, 0.15 ) }
    dend_41 { pt3dadd( -120.2, -315.247, -26.3245, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_41 { pt3dadd( -120.605, -316.444, -26.2138, 0.81 ) }
    dend_41 { pt3dadd( -121.009, -317.979, -26.1069, 0.15 ) }
    dend_41 { pt3dadd( -121.236, -319.187, -26.0528, 0.22 ) }
    dend_41 { pt3dadd( -121.373, -320.417, -26.0265, 0.07 ) }
    dend_41 { pt3dadd( -121.36, -321.71, -25.9979, 0.07 ) }
    dend_41 { pt3dadd( -121.189, -322.963, -25.9363, 0.37 ) }
    dend_41 { pt3dadd( -120.649, -324.775, -25.7739, 0.15 ) }
    dend_41 { pt3dadd( -120.202, -325.814, -25.6333, 0.15 ) }
    dend_41 { pt3dadd( -119.828, -326.551, -25.5041, 0.37 ) }
    dend_41 { pt3dadd( -118.852, -328.354, -25.1052, 0.15 ) }
    dend_41 { pt3dadd( -118.283, -329.45, -24.8304, 0.15 ) }
    dend_41 { pt3dadd( -117.916, -330.3, -24.5969, 0.15 ) }
    dend_41 { pt3dadd( -117.792, -330.741, -24.4759, 0.15 ) }
    dend_41 { pt3dadd( -117.617, -331.866, -24.205, 0.37 ) }
    dend_41 { pt3dadd( -117.564, -333.228, -23.9543, 0.07 ) }
    dend_41 { pt3dadd( -117.676, -334.296, -23.8346, 0.07 ) }
    dend_41 { pt3dadd( -117.862, -335.225, -23.7657, 0.22 ) }
    dend_41 { pt3dadd( -118.226, -336.717, -23.6563, 0.07 ) }
    dend_41 { pt3dadd( -118.389, -337.308, -23.62, 0.07 ) }
    dend_41 { pt3dadd( -118.753, -338.429, -23.5538, 0.52 ) }
    dend_41 { pt3dadd( -119.478, -340.318, -23.4803, 0.07 ) }
    dend_41 { pt3dadd( -119.806, -341.065, -23.4455, 0.07 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 22/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.810529, -25.0712, -22.1934, 0.44 ) }
    dend_20 { pt3dadd( -0.835385, -25.3308, -22.5533, 0.44 ) }
    dend_20 { pt3dadd( -0.983062, -26.2439, -23.9812, 0.44 ) }
    dend_20 { pt3dadd( -1.07812, -26.7026, -24.8114, 0.44 ) }
    dend_20 { pt3dadd( -1.18575, -27.2709, -25.9605, 0.44 ) }
    dend_20 { pt3dadd( -1.23114, -27.5147, -26.4914, 0.44 ) }
    dend_20 { pt3dadd( -1.28564, -27.7581, -27.0237, 0.44 ) }
    dend_20 { pt3dadd( -1.3545, -27.9631, -27.4748, 0.44 ) }
    dend_20 { pt3dadd( -1.44731, -28.1807, -27.9714, 0.44 ) }
    dend_20 { pt3dadd( -1.5865, -28.488, -28.6798, 0.44 ) }
    dend_20 { pt3dadd( -1.75612, -28.9137, -29.645, 0.44 ) }
    dend_20 { pt3dadd( -1.85661, -29.2823, -30.4268, 0.44 ) }
    dend_20 { pt3dadd( -1.95708, -29.8101, -31.4815, 0.44 ) }
    dend_20 { pt3dadd( -2.03968, -30.4657, -32.7401, 0.44 ) }
    dend_20 { pt3dadd( -2.0464, -30.6799, -33.1511, 0.29 ) }
    dend_20 { pt3dadd( -2.02273, -31.2114, -34.2351, 0.22 ) }
    dend_20 { pt3dadd( -1.96511, -31.5615, -34.9943, 0.22 ) }
    dend_20 { pt3dadd( -1.90005, -31.802, -35.5545, 0.22 ) }
    dend_20 { pt3dadd( -1.8561, -31.9326, -35.8582, 0.22 ) }
    dend_20 { pt3dadd( -1.77506, -32.1894, -36.3722, 0.29 ) }
    dend_20 { pt3dadd( -1.6352, -32.623, -37.1884, 0.29 ) }
    dend_20 { pt3dadd( -1.54078, -32.9002, -37.6838, 0.29 ) }
    dend_20 { pt3dadd( -1.43128, -33.1583, -38.2355, 0.29 ) }
    dend_20 { pt3dadd( -1.3555, -33.2591, -38.5229, 0.29 ) }
    dend_20 { pt3dadd( -1.19914, -33.3904, -38.9554, 0.29 ) }
    dend_20 { pt3dadd( -0.910754, -33.6033, -39.5962, 0.29 ) }
    dend_20 { pt3dadd( -0.483903, -33.89, -40.3207, 0.22 ) }
    dend_20 { pt3dadd( 0.138733, -34.3259, -41.2589, 0.37 ) }
    dend_20 { pt3dadd( 0.483669, -34.5982, -41.7742, 0.37 ) }
    dend_20 { pt3dadd( 0.736174, -34.8508, -42.2237, 0.22 ) }
    dend_20 { pt3dadd( 1.05757, -35.2903, -42.9503, 0.22 ) }
    dend_20 { pt3dadd( 1.20526, -35.6058, -43.403, 0.22 ) }
    dend_20 { pt3dadd( 1.30945, -35.9703, -43.8474, 0.29 ) }
    dend_20 { pt3dadd( 1.38483, -36.4976, -44.4202, 0.29 ) }
    dend_20 { pt3dadd( 1.35261, -37.1144, -45.0861, 0.29 ) }
    dend_20 { pt3dadd( 1.24643, -37.4818, -45.5008, 0.29 ) }
    dend_20 { pt3dadd( 1.10232, -37.7801, -45.8599, 0.29 ) }
    dend_20 { pt3dadd( 0.953413, -38.0184, -46.1567, 0.22 ) }
    dend_20 { pt3dadd( 0.639225, -38.4433, -46.6919, 0.22 ) }
    dend_20 { pt3dadd( 0.169759, -39.0577, -47.4, 0.22 ) }
    dend_20 { pt3dadd( -0.00433391, -39.3394, -47.7186, 0.22 ) }
    dend_20 { pt3dadd( -0.137123, -39.737, -48.1654, 0.22 ) }
    dend_20 { pt3dadd( -0.177477, -40.1438, -48.6287, 0.29 ) }
    dend_20 { pt3dadd( -0.170384, -40.3973, -48.9091, 0.29 ) }
    dend_20 { pt3dadd( -0.152964, -40.6218, -49.1318, 0.29 ) }
    dend_20 { pt3dadd( -0.148631, -41.233, -49.6468, 0.29 ) }
    dend_20 { pt3dadd( -0.222956, -41.9673, -50.1995, 0.22 ) }
    dend_20 { pt3dadd( -0.340886, -42.6013, -50.6406, 0.22 ) }
    dend_20 { pt3dadd( -0.482888, -43.2139, -51.0767, 0.22 ) }
    dend_20 { pt3dadd( -0.595334, -43.7334, -51.4976, 0.22 ) }
    dend_20 { pt3dadd( -0.804542, -44.5485, -52.1815, 0.22 ) }
    dend_20 { pt3dadd( -0.900942, -44.8452, -52.4318, 0.22 ) }
    dend_20 { pt3dadd( -1.03852, -45.1786, -52.7565, 0.22 ) }
    dend_20 { pt3dadd( -1.21439, -45.677, -53.3676, 0.44 ) }
    dend_20 { pt3dadd( -1.18204, -46.1001, -54.2937, 0.44 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -0.810529, -25.0712, -22.1934, 0.52 ) }
    dend_15 { pt3dadd( 0.142421, -26.4079, -22.8775, 0.52 ) }
    dend_15 { pt3dadd( 0.778651, -27.5565, -23.4682, 0.52 ) }
    dend_15 { pt3dadd( 1.20704, -28.5673, -23.9842, 0.59 ) }
    dend_15 { pt3dadd( 1.42117, -29.2265, -24.297, 0.96 ) }
    dend_15 { pt3dadd( 1.55122, -29.8061, -24.542, 0.96 ) }
    dend_15 { pt3dadd( 1.76445, -31.4223, -25.117, 0.81 ) }
    dend_15 { pt3dadd( 1.74075, -32.7169, -25.4689, 0.52 ) }
    dend_15 { pt3dadd( 1.62298, -34.0016, -25.7298, 0.52 ) }
    dend_15 { pt3dadd( 1.4891, -35.0615, -25.9377, 0.74 ) }
    dend_15 { pt3dadd( 1.32119, -36.4148, -26.2272, 0.74 ) }
    dend_15 { pt3dadd( 1.15892, -37.8877, -26.6227, 0.66 ) }
    dend_15 { pt3dadd( 1.09157, -38.8067, -26.9204, 0.52 ) }
    dend_15 { pt3dadd( 1.11445, -39.856, -27.3328, 0.37 ) }
    dend_15 { pt3dadd( 1.21732, -40.8983, -27.8729, 0.66 ) }
    dend_15 { pt3dadd( 1.34744, -41.8344, -28.4463, 0.88 ) }
    dend_15 { pt3dadd( 1.47285, -42.7682, -29.0819, 0.88 ) }
    dend_15 { pt3dadd( 1.51689, -43.449, -29.5693, 0.66 ) }
    dend_15 { pt3dadd( 1.48157, -44.4019, -30.2197, 0.52 ) }
    dend_15 { pt3dadd( 1.37051, -45.3967, -30.8201, 0.52 ) }
    dend_15 { pt3dadd( 1.23715, -46.418, -31.3421, 0.59 ) }
    dend_15 { pt3dadd( 1.08823, -47.3876, -31.8019, 0.59 ) }
    dend_15 { pt3dadd( 0.885342, -48.5215, -32.3469, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_15 { pt3dadd( 0.703011, -49.3925, -32.803, 0.59 ) }
    dend_15 { pt3dadd( 0.535477, -50.0868, -33.1676, 0.66 ) }
    dend_15 { pt3dadd( 0.268739, -51.1219, -33.6687, 0.59 ) }
    dend_15 { pt3dadd( -0.00373215, -52.1871, -34.1496, 0.52 ) }
    dend_15 { pt3dadd( -0.29681, -53.3987, -34.6178, 0.81 ) }
    dend_15 { pt3dadd( -0.593306, -54.653, -34.9917, 1.03 ) }
    dend_15 { pt3dadd( -0.923156, -55.9699, -35.2467, 0.59 ) }
    dend_15 { pt3dadd( -1.26923, -57.3096, -35.3486, 0.44 ) }
    dend_15 { pt3dadd( -1.45345, -58.0841, -35.3055, 0.59 ) }
    dend_15 { pt3dadd( -1.65406, -59.0706, -35.159, 0.59 ) }
    dend_15 { pt3dadd( -1.79581, -59.9844, -34.9347, 0.52 ) }
    dend_15 { pt3dadd( -1.90474, -61.1413, -34.5485, 0.52 ) }
    dend_15 { pt3dadd( -1.91991, -62.0509, -34.1915, 0.66 ) }
    dend_15 { pt3dadd( -1.89325, -62.6289, -33.9224, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 14/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -38.5962, -55.4857, -12.4713, 0.59 ) }
    dend_11 { pt3dadd( -39.1208, -55.6075, -11.7857, 0.59 ) }
    dend_11 { pt3dadd( -40.3802, -56.0215, -10.1146, 0.52 ) }
    dend_11 { pt3dadd( -41.0576, -56.3015, -9.27092, 0.52 ) }
    dend_11 { pt3dadd( -41.6647, -56.599, -8.56858, 0.52 ) }
    dend_11 { pt3dadd( -42.3316, -56.9781, -7.82049, 0.52 ) }
    dend_11 { pt3dadd( -43.1948, -57.5045, -6.92231, 0.66 ) }
    dend_11 { pt3dadd( -43.8962, -58.0291, -6.2646, 0.81 ) }
    dend_11 { pt3dadd( -44.8614, -58.8863, -5.50478, 0.52 ) }
    dend_11 { pt3dadd( -45.4681, -59.5088, -5.06826, 0.52 ) }
    dend_11 { pt3dadd( -46.1608, -60.3402, -4.61203, 0.74 ) }
    dend_11 { pt3dadd( -46.7945, -61.2378, -4.24372, 0.44 ) }
    dend_11 { pt3dadd( -47.4565, -62.3163, -3.95029, 0.59 ) }
    dend_11 { pt3dadd( -47.9773, -63.2407, -3.74798, 0.81 ) }
    dend_11 { pt3dadd( -48.4841, -64.1711, -3.53612, 0.66 ) }
    dend_11 { pt3dadd( -49.1772, -65.4027, -3.24186, 0.59 ) }
    dend_11 { pt3dadd( -49.8823, -66.5665, -2.96808, 0.52 ) }
    dend_11 { pt3dadd( -50.9578, -68.1566, -2.57574, 0.44 ) }
    dend_11 { pt3dadd( -51.8954, -69.3165, -2.25609, 0.52 ) }
    dend_11 { pt3dadd( -52.8146, -70.2637, -1.96514, 0.44 ) }
    dend_11 { pt3dadd( -53.4878, -70.8671, -1.76793, 0.44 ) }
    dend_11 { pt3dadd( -54.3011, -71.5515, -1.53702, 0.37 ) }
    dend_11 { pt3dadd( -55.2456, -72.3951, -1.23052, 0.22 ) }
    dend_11 { pt3dadd( -55.9185, -73.095, -0.975539, 0.59 ) }
    dend_11 { pt3dadd( -56.4421, -73.7729, -0.753943, 0.88 ) }
    dend_11 { pt3dadd( -57.1898, -74.9519, -0.388047, 0.59 ) }
    dend_11 { pt3dadd( -57.7719, -75.9883, -0.0425105, 0.44 ) }
    dend_11 { pt3dadd( -58.3622, -77.091, 0.373461, 0.59 ) }
    dend_11 { pt3dadd( -58.7758, -77.8789, 0.721068, 0.52 ) }
    dend_11 { pt3dadd( -59.2558, -78.8095, 1.16879, 0.29 ) }
    dend_11 { pt3dadd( -59.7311, -79.7452, 1.68751, 0.29 ) }
    dend_11 { pt3dadd( -60.4233, -81.0509, 2.56227, 0.37 ) }
    dend_11 { pt3dadd( -61.0761, -82.1645, 3.47516, 0.29 ) }
    dend_11 { pt3dadd( -61.5533, -82.8902, 4.19285, 0.29 ) }
    dend_11 { pt3dadd( -61.8547, -83.3286, 4.6941, 0.52 ) }
    dend_11 { pt3dadd( -62.221, -83.8575, 5.36057, 0.37 ) }
    dend_11 { pt3dadd( -62.7381, -84.6106, 6.32945, 0.29 ) }
    dend_11 { pt3dadd( -63.3924, -85.4638, 7.42945, 0.37 ) }
    dend_11 { pt3dadd( -64.0477, -86.1974, 8.34084, 0.66 ) }
    dend_11 { pt3dadd( -64.7009, -86.8488, 9.11179, 1.03 ) }
    dend_11 { pt3dadd( -65.7625, -87.848, 10.2708, 0.81 ) }
    dend_11 { pt3dadd( -66.6166, -88.6409, 11.1518, 1.25 ) }
    dend_11 { pt3dadd( -67.627, -89.6362, 12.1527, 0.96 ) }
    dend_11 { pt3dadd( -68.6056, -90.6524, 13.0728, 0.37 ) }
    dend_11 { pt3dadd( -69.5862, -91.6918, 13.9042, 0.44 ) }
    dend_11 { pt3dadd( -70.4142, -92.5524, 14.5209, 0.44 ) }
    dend_11 { pt3dadd( -71.0878, -93.2378, 14.939, 0.59 ) }
    dend_11 { pt3dadd( -72.1502, -94.2907, 15.4606, 0.96 ) }
    dend_11 { pt3dadd( -72.9074, -95.0008, 15.6784, 0.37 ) }
    dend_11 { pt3dadd( -73.8928, -95.8132, 15.7548, 0.22 ) }
    dend_11 { pt3dadd( -74.6313, -96.3603, 15.7173, 0.22 ) }
    dend_11 { pt3dadd( -75.2734, -96.8218, 15.6465, 0.66 ) }
    dend_11 { pt3dadd( -76.1798, -97.5066, 15.5343, 0.74 ) }
    dend_11 { pt3dadd( -77.257, -98.3964, 15.4224, 0.37 ) }
    dend_11 { pt3dadd( -78.2534, -99.3918, 15.3872, 0.44 ) }
    dend_11 { pt3dadd( -78.9579, -100.285, 15.4485, 0.37 ) }
    dend_11 { pt3dadd( -79.5247, -101.195, 15.5668, 0.22 ) }
    dend_11 { pt3dadd( -79.9338, -102.066, 15.7163, 0.22 ) }
    dend_11 { pt3dadd( -80.1373, -102.655, 15.8372, 0.59 ) }
    dend_11 { pt3dadd( -80.3647, -103.478, 16.0299, 0.88 ) }
    dend_11 { pt3dadd( -80.6925, -104.583, 16.3122, 0.29 ) }
    dend_11 { pt3dadd( -80.8976, -105.132, 16.4595, 0.22 ) }
    dend_11 { pt3dadd( -81.3666, -106.064, 16.742, 0.52 ) }
    dend_11 { pt3dadd( -82.0744, -107.173, 17.1148, 0.22 ) }
    dend_11 { pt3dadd( -82.4545, -107.693, 17.3, 0.22 ) }
    dend_11 { pt3dadd( -83.1801, -108.65, 17.6453, 0.29 ) }
    dend_11 { pt3dadd( -83.5617, -109.191, 17.853, 0.29 ) }
    dend_11 { pt3dadd( -84.1165, -110.036, 18.2186, 0.22 ) }
    dend_11 { pt3dadd( -84.3604, -110.434, 18.4062, 0.74 ) }
    dend_11 { pt3dadd( -84.7045, -111.05, 18.7005, 0.96 ) }
    dend_11 { pt3dadd( -85.2468, -112.041, 19.1945, 0.59 ) }
    dend_11 { pt3dadd( -85.8849, -113.218, 19.834, 0.15 ) }
    dend_11 { pt3dadd( -86.318, -113.946, 20.2966, 0.15 ) }
    dend_11 { pt3dadd( -86.5868, -114.338, 20.5719, 0.59 ) }
    dend_11 { pt3dadd( -87.3513, -115.277, 21.309, 0.96 ) }
    dend_11 { pt3dadd( -88.3239, -116.26, 22.1735, 0.22 ) }
    dend_11 { pt3dadd( -88.9524, -116.762, 22.6761, 0.15 ) }
    dend_11 { pt3dadd( -90.0117, -117.448, 23.4354, 0.15 ) }
    dend_11 { pt3dadd( -90.4476, -117.707, 23.7504, 0.66 ) }
    dend_11 { pt3dadd( -90.811, -117.905, 24.0334, 0.96 ) }
    dend_11 { pt3dadd( -91.2406, -118.126, 24.379, 1.11 ) }
    dend_11 { pt3dadd( -92.1521, -118.576, 25.0509, 0.52 ) }
    dend_11 { pt3dadd( -93.1101, -119.051, 25.7277, 0.15 ) }
    dend_11 { pt3dadd( -94.0279, -119.545, 26.4139, 0.15 ) }
    dend_11 { pt3dadd( -94.524, -119.833, 26.8293, 0.15 ) }
    dend_11 { pt3dadd( -94.9692, -120.115, 27.2291, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_11 { pt3dadd( -95.8246, -120.695, 28.0344, 0.96 ) }
    dend_11 { pt3dadd( -97.0083, -121.55, 29.1621, 0.22 ) }
    dend_11 { pt3dadd( -97.8521, -122.198, 30.019, 0.22 ) }
    dend_11 { pt3dadd( -98.457, -122.683, 30.6934, 0.22 ) }
    dend_11 { pt3dadd( -98.8935, -123.058, 31.2405, 0.59 ) }
    dend_11 { pt3dadd( -99.4758, -123.609, 32.1321, 1.11 ) }
    dend_11 { pt3dadd( -99.8733, -124.059, 32.9461, 0.44 ) }
    dend_11 { pt3dadd( -100.322, -124.666, 34.2111, 0.22 ) }
    dend_11 { pt3dadd( -100.571, -125.063, 35.1184, 0.22 ) }
    dend_11 { pt3dadd( -100.626, -125.181, 35.3905, 0.22 ) }
    dend_11 { pt3dadd( -100.723, -125.402, 35.9378, 0.22 ) }
    dend_11 { pt3dadd( -100.902, -125.742, 36.8192, 0.22 ) }
    dend_11 { pt3dadd( -101.106, -125.991, 37.5427, 0.22 ) }
    dend_11 { pt3dadd( -101.31, -126.126, 38.062, 0.44 ) }
    dend_11 { pt3dadd( -101.74, -126.318, 38.9752, 0.81 ) }
    dend_11 { pt3dadd( -102.386, -126.566, 40.236, 0.81 ) }
    dend_11 { pt3dadd( -103.005, -126.795, 41.3725, 0.66 ) }
    dend_11 { pt3dadd( -103.537, -127.003, 42.3213, 0.66 ) }
    dend_11 { pt3dadd( -104.652, -127.435, 44.2576, 0.22 ) }
    dend_11 { pt3dadd( -105.335, -127.685, 45.4201, 0.22 ) }
    dend_11 { pt3dadd( -105.721, -127.824, 46.0588, 0.66 ) }
    dend_11 { pt3dadd( -106.165, -128.0, 46.7292, 0.74 ) }
    dend_11 { pt3dadd( -107.192, -128.497, 48.111, 0.22 ) }
    dend_11 { pt3dadd( -108.058, -128.991, 49.1533, 0.15 ) }
    dend_11 { pt3dadd( -108.934, -129.548, 50.0894, 0.15 ) }
    dend_11 { pt3dadd( -109.874, -130.165, 51.0397, 0.15 ) }
    dend_11 { pt3dadd( -110.702, -130.718, 51.8099, 1.18 ) }
    dend_11 { pt3dadd( -111.713, -131.397, 52.6723, 0.07 ) }
    dend_11 { pt3dadd( -112.678, -132.096, 53.35, 0.07 ) }
    dend_11 { pt3dadd( -113.319, -132.601, 53.7112, 0.07 ) }
    dend_11 { pt3dadd( -113.7, -132.884, 53.8964, 0.07 ) }
    dend_11 { pt3dadd( -114.477, -133.378, 54.2838, 0.96 ) }
    dend_11 { pt3dadd( -115.984, -134.18, 55.0885, 0.07 ) }
    dend_11 { pt3dadd( -117.182, -134.753, 55.7127, 0.07 ) }
    dend_11 { pt3dadd( -117.966, -135.103, 56.1184, 0.66 ) }
    dend_11 { pt3dadd( -120.49, -136.177, 57.426, 0.07 ) }
    dend_11 { pt3dadd( -121.801, -136.73, 58.1434, 0.07 ) }
    dend_11 { pt3dadd( -123.057, -137.259, 58.8712, 0.07 ) }
    dend_11 { pt3dadd( -124.143, -137.689, 59.5743, 0.07 ) }
    dend_11 { pt3dadd( -125.273, -138.089, 60.4321, 0.07 ) }
    dend_11 { pt3dadd( -126.02, -138.333, 61.0371, 0.07 ) }
    dend_11 { pt3dadd( -127.115, -138.637, 61.9763, 0.07 ) }
    dend_11 { pt3dadd( -128.435, -138.927, 63.1334, 0.15 ) }
    dend_11 { pt3dadd( -130.648, -139.297, 65.1783, 0.07 ) }
    dend_11 { pt3dadd( -132.282, -139.478, 66.7479, 0.07 ) }
    dend_11 { pt3dadd( -133.128, -139.539, 67.5778, 0.07 ) }
    dend_11 { pt3dadd( -134.253, -139.563, 68.73, 0.07 ) }
    dend_11 { pt3dadd( -134.823, -139.533, 69.3152, 0.59 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 48/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -38.5962, -55.4857, -12.4713, 0.66 ) }
    dend_4 { pt3dadd( -39.4388, -56.8598, -12.8897, 0.66 ) }
    dend_4 { pt3dadd( -40.3723, -58.3067, -13.2075, 0.66 ) }
    dend_4 { pt3dadd( -41.0115, -59.3324, -13.3596, 0.66 ) }
    dend_4 { pt3dadd( -41.4644, -60.093, -13.4407, 0.66 ) }
    dend_4 { pt3dadd( -42.3283, -61.6256, -13.5583, 0.59 ) }
    dend_4 { pt3dadd( -43.0522, -63.0383, -13.596, 0.66 ) }
    dend_4 { pt3dadd( -43.5754, -64.2096, -13.5089, 0.88 ) }
    dend_4 { pt3dadd( -44.065, -65.6552, -13.224, 0.59 ) }
    dend_4 { pt3dadd( -44.4104, -67.2895, -12.6871, 0.59 ) }
    dend_4 { pt3dadd( -44.4882, -68.2988, -12.2337, 0.59 ) }
    dend_4 { pt3dadd( -44.4197, -69.7522, -11.4043, 0.81 ) }
    dend_4 { pt3dadd( -44.303, -71.0354, -10.5513, 0.81 ) }
    dend_4 { pt3dadd( -44.1814, -72.3835, -9.58407, 0.88 ) }
    dend_4 { pt3dadd( -44.102, -74.0328, -8.32487, 0.88 ) }
    dend_4 { pt3dadd( -44.1587, -75.5246, -7.18066, 0.74 ) }
    dend_4 { pt3dadd( -44.4555, -77.1095, -6.0632, 0.74 ) }
    dend_4 { pt3dadd( -45.0821, -78.7936, -5.08707, 0.74 ) }
    dend_4 { pt3dadd( -45.5729, -79.7096, -4.64366, 0.81 ) }
    dend_4 { pt3dadd( -46.3013, -80.8356, -4.20177, 0.81 ) }
    dend_4 { pt3dadd( -47.3551, -82.3431, -3.76, 0.74 ) }
    dend_4 { pt3dadd( -48.4589, -83.9346, -3.49007, 0.74 ) }
    dend_4 { pt3dadd( -49.381, -85.405, -3.3813, 0.74 ) }
    dend_4 { pt3dadd( -50.0189, -86.6255, -3.35742, 0.81 ) }
    dend_4 { pt3dadd( -50.4997, -87.7647, -3.34166, 0.81 ) }
    dend_4 { pt3dadd( -51.1182, -89.6797, -3.31, 0.59 ) }
    dend_4 { pt3dadd( -51.6704, -92.0432, -3.21508, 0.81 ) }
    dend_4 { pt3dadd( -51.9327, -93.6908, -3.1089, 0.66 ) }
    dend_4 { pt3dadd( -52.1775, -95.6986, -2.93375, 0.59 ) }
    dend_4 { pt3dadd( -52.3517, -97.1795, -2.81118, 0.59 ) }
    dend_4 { pt3dadd( -52.4862, -98.2852, -2.69579, 0.52 ) }
    dend_4 { pt3dadd( -52.7386, -100.054, -2.49189, 0.88 ) }
    dend_4 { pt3dadd( -53.0606, -101.705, -2.3001, 0.88 ) }
    dend_4 { pt3dadd( -53.5702, -103.649, -2.16058, 0.81 ) }
    dend_4 { pt3dadd( -54.2051, -105.553, -2.10676, 0.81 ) }
    dend_4 { pt3dadd( -54.5797, -106.487, -2.10978, 0.88 ) }
    dend_4 { pt3dadd( -55.4437, -108.343, -2.15901, 0.81 ) }
    dend_4 { pt3dadd( -56.3011, -109.98, -2.19554, 0.81 ) }
    dend_4 { pt3dadd( -57.0296, -111.236, -2.17309, 0.96 ) }
    dend_4 { pt3dadd( -58.0512, -112.852, -2.02048, 0.74 ) }
    dend_4 { pt3dadd( -58.6921, -113.772, -1.83572, 0.74 ) }
    dend_4 { pt3dadd( -59.6244, -114.977, -1.44979, 0.44 ) }
    dend_4 { pt3dadd( -60.3796, -115.883, -1.015, 0.66 ) }
    dend_4 { pt3dadd( -61.3297, -116.925, -0.398909, 0.59 ) }
    dend_4 { pt3dadd( -62.1925, -117.729, 0.130114, 0.59 ) }
    dend_4 { pt3dadd( -63.0497, -118.354, 0.620351, 0.96 ) }
    dend_4 { pt3dadd( -64.5909, -119.231, 1.43866, 0.52 ) }
    dend_4 { pt3dadd( -65.9262, -119.88, 2.08922, 0.52 ) }
    dend_4 { pt3dadd( -66.8311, -120.32, 2.461, 0.52 ) }
    dend_4 { pt3dadd( -68.0638, -120.973, 2.91951, 0.52 ) }
    dend_4 { pt3dadd( -69.3119, -121.773, 3.32974, 0.59 ) }
    dend_4 { pt3dadd( -70.7539, -122.971, 3.77574, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_4 { pt3dadd( -71.7569, -124.091, 4.05975, 0.66 ) }
    dend_4 { pt3dadd( -72.79, -125.577, 4.31814, 0.74 ) }
    dend_4 { pt3dadd( -73.4966, -126.8, 4.48132, 1.03 ) }
    dend_4 { pt3dadd( -74.1844, -128.201, 4.58825, 1.03 ) }
    dend_4 { pt3dadd( -74.9353, -129.924, 4.64096, 0.96 ) }
    dend_4 { pt3dadd( -75.4955, -131.387, 4.61563, 0.66 ) }
    dend_4 { pt3dadd( -76.1052, -133.102, 4.57178, 0.52 ) }
    dend_4 { pt3dadd( -76.7266, -134.968, 4.47875, 0.59 ) }
    dend_4 { pt3dadd( -77.2501, -136.595, 4.31952, 0.44 ) }
    dend_4 { pt3dadd( -77.5799, -137.65, 4.16391, 0.88 ) }
    dend_4 { pt3dadd( -78.0882, -139.35, 3.80669, 0.59 ) }
    dend_4 { pt3dadd( -78.4576, -140.754, 3.43794, 0.59 ) }
    dend_4 { pt3dadd( -78.8113, -142.404, 2.90994, 0.66 ) }
    dend_4 { pt3dadd( -79.0304, -143.371, 2.54677, 0.66 ) }
    dend_4 { pt3dadd( -79.3102, -144.324, 2.16472, 0.96 ) }
    dend_4 { pt3dadd( -79.7198, -145.382, 1.73634, 0.96 ) }
    dend_4 { pt3dadd( -80.4787, -146.899, 1.20564, 0.44 ) }
    dend_4 { pt3dadd( -81.214, -148.12, 0.87084, 0.44 ) }
    dend_4 { pt3dadd( -82.1797, -149.529, 0.635812, 0.44 ) }
    dend_4 { pt3dadd( -82.9156, -150.528, 0.585576, 0.88 ) }
    dend_4 { pt3dadd( -84.0914, -152.041, 0.707376, 0.66 ) }
    dend_4 { pt3dadd( -85.2958, -153.565, 1.02377, 0.52 ) }
    dend_4 { pt3dadd( -86.2331, -154.856, 1.42518, 0.74 ) }
    dend_4 { pt3dadd( -86.7605, -155.751, 1.78363, 0.74 ) }
    dend_4 { pt3dadd( -87.1828, -156.755, 2.25616, 0.74 ) }
    dend_4 { pt3dadd( -87.5173, -157.99, 2.92612, 0.59 ) }
    dend_4 { pt3dadd( -87.6543, -158.946, 3.48551, 0.81 ) }
    dend_4 { pt3dadd( -87.8141, -160.767, 4.56907, 0.88 ) }
    dend_4 { pt3dadd( -87.9916, -162.479, 5.56667, 0.59 ) }
    dend_4 { pt3dadd( -88.223, -163.858, 6.3333, 0.66 ) }
    dend_4 { pt3dadd( -88.6523, -165.517, 7.18982, 0.66 ) }
    dend_4 { pt3dadd( -88.9049, -166.183, 7.50355, 0.66 ) }
    dend_4 { pt3dadd( -89.6444, -167.674, 8.12356, 0.52 ) }
    dend_4 { pt3dadd( -90.5851, -169.297, 8.68766, 0.52 ) }
    dend_4 { pt3dadd( -91.4637, -170.857, 9.09067, 0.74 ) }
    dend_4 { pt3dadd( -92.0086, -171.972, 9.27837, 0.96 ) }
    dend_4 { pt3dadd( -92.7102, -173.786, 9.47702, 1.18 ) }
    dend_4 { pt3dadd( -93.1703, -175.392, 9.6287, 0.66 ) }
    dend_4 { pt3dadd( -93.4222, -176.602, 9.72755, 0.66 ) }
    dend_4 { pt3dadd( -93.7966, -178.557, 9.87203, 0.59 ) }
    dend_4 { pt3dadd( -94.2506, -180.504, 9.99417, 0.81 ) }
    dend_4 { pt3dadd( -94.8976, -182.509, 10.087, 0.66 ) }
    dend_4 { pt3dadd( -95.7239, -184.336, 10.1537, 0.66 ) }
    dend_4 { pt3dadd( -96.4997, -185.593, 10.1919, 0.66 ) }
    dend_4 { pt3dadd( -97.6764, -187.067, 10.2372, 0.59 ) }
    dend_4 { pt3dadd( -99.0852, -188.43, 10.2873, 0.52 ) }
    dend_4 { pt3dadd( -100.585, -189.671, 10.3616, 0.44 ) }
    dend_4 { pt3dadd( -101.454, -190.362, 10.4265, 0.44 ) }
    dend_4 { pt3dadd( -102.116, -190.928, 10.5002, 0.44 ) }
    dend_4 { pt3dadd( -102.594, -191.411, 10.5775, 0.44 ) }
    dend_4 { pt3dadd( -103.469, -192.478, 10.8062, 0.44 ) }
    dend_4 { pt3dadd( -104.556, -194.011, 11.1869, 0.52 ) }
    dend_4 { pt3dadd( -105.637, -195.676, 11.6585, 0.52 ) }
    dend_4 { pt3dadd( -106.483, -197.018, 12.0531, 0.59 ) }
    dend_4 { pt3dadd( -107.229, -198.173, 12.4278, 0.44 ) }
    dend_4 { pt3dadd( -107.927, -199.199, 12.8036, 0.44 ) }
    dend_4 { pt3dadd( -108.934, -200.597, 13.4023, 0.66 ) }
    dend_4 { pt3dadd( -109.757, -201.656, 13.9367, 0.66 ) }
    dend_4 { pt3dadd( -110.646, -202.773, 14.5834, 0.74 ) }
    dend_4 { pt3dadd( -111.748, -204.239, 15.5484, 0.52 ) }
    dend_4 { pt3dadd( -112.427, -205.287, 16.3166, 0.52 ) }
    dend_4 { pt3dadd( -112.985, -206.444, 17.2057, 0.66 ) }
    dend_4 { pt3dadd( -113.346, -207.648, 18.1071, 0.59 ) }
    dend_4 { pt3dadd( -113.502, -208.788, 18.8459, 0.44 ) }
    dend_4 { pt3dadd( -113.523, -210.073, 19.5217, 0.44 ) }
    dend_4 { pt3dadd( -113.474, -211.638, 20.1512, 0.44 ) }
    dend_4 { pt3dadd( -113.436, -213.188, 20.6625, 0.52 ) }
    dend_4 { pt3dadd( -113.505, -215.194, 21.2106, 0.88 ) }
    dend_4 { pt3dadd( -113.747, -216.691, 21.5745, 0.96 ) }
    dend_4 { pt3dadd( -114.251, -218.147, 21.9361, 0.74 ) }
    dend_4 { pt3dadd( -115.037, -219.643, 22.3652, 0.44 ) }
    dend_4 { pt3dadd( -115.562, -220.416, 22.6182, 0.74 ) }
    dend_4 { pt3dadd( -116.257, -221.319, 22.9923, 1.03 ) }
    dend_4 { pt3dadd( -117.12, -222.421, 23.5607, 0.44 ) }
    dend_4 { pt3dadd( -117.898, -223.545, 24.1393, 0.37 ) }
    dend_4 { pt3dadd( -118.282, -224.36, 24.5284, 0.37 ) }
    dend_4 { pt3dadd( -118.481, -225.147, 24.8438, 0.74 ) }
    dend_4 { pt3dadd( -118.647, -226.456, 25.3571, 1.11 ) }
    dend_4 { pt3dadd( -118.697, -227.602, 25.8158, 0.74 ) }
    dend_4 { pt3dadd( -118.714, -229.16, 26.4507, 0.59 ) }
    dend_4 { pt3dadd( -118.798, -231.183, 27.3263, 0.52 ) }
    dend_4 { pt3dadd( -118.966, -232.498, 27.973, 0.29 ) }
    dend_4 { pt3dadd( -119.222, -233.672, 28.6321, 0.29 ) }
    dend_4 { pt3dadd( -119.465, -234.442, 29.0949, 0.81 ) }
    dend_4 { pt3dadd( -119.892, -235.587, 29.7461, 1.11 ) }
    dend_4 { pt3dadd( -120.598, -237.306, 30.5887, 0.52 ) }
    dend_4 { pt3dadd( -121.249, -238.95, 31.2085, 0.44 ) }
    dend_4 { pt3dadd( -121.635, -240.127, 31.5541, 0.88 ) }
    dend_4 { pt3dadd( -121.99, -241.623, 31.8558, 0.88 ) }
    dend_4 { pt3dadd( -122.259, -243.561, 32.1225, 0.66 ) }
    dend_4 { pt3dadd( -122.308, -245.084, 32.2747, 0.37 ) }
    dend_4 { pt3dadd( -122.215, -246.711, 32.3875, 0.29 ) }
    dend_4 { pt3dadd( -122.116, -247.772, 32.4481, 0.29 ) }
    dend_4 { pt3dadd( -122.053, -248.506, 32.5074, 0.74 ) }
    dend_4 { pt3dadd( -122.015, -249.49, 32.649, 1.03 ) }
    dend_4 { pt3dadd( -122.125, -250.891, 32.964, 0.29 ) }
    dend_4 { pt3dadd( -122.434, -252.175, 33.2727, 0.22 ) }
    dend_4 { pt3dadd( -122.755, -252.982, 33.4228, 0.22 ) }
    dend_4 { pt3dadd( -123.054, -253.626, 33.5055, 0.44 ) }
    dend_4 { pt3dadd( -123.571, -254.762, 33.6105, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( -124.04, -255.922, 33.6756, 0.29 ) }
    dend_4 { pt3dadd( -124.349, -256.923, 33.6947, 0.29 ) }
    dend_4 { pt3dadd( -124.511, -257.769, 33.7391, 0.29 ) }
    dend_4 { pt3dadd( -124.63, -258.951, 33.8621, 0.66 ) }
    dend_4 { pt3dadd( -124.73, -260.333, 34.1007, 0.37 ) }
    dend_4 { pt3dadd( -124.792, -261.331, 34.326, 0.44 ) }
    dend_4 { pt3dadd( -124.898, -262.392, 34.6434, 0.37 ) }
    dend_4 { pt3dadd( -125.067, -263.443, 35.0725, 0.37 ) }
    dend_4 { pt3dadd( -125.28, -264.442, 35.6057, 0.74 ) }
    dend_4 { pt3dadd( -125.596, -265.781, 36.4622, 1.11 ) }
    dend_4 { pt3dadd( -125.756, -266.581, 37.0482, 1.11 ) }
    dend_4 { pt3dadd( -125.905, -267.842, 38.1005, 0.66 ) }
    dend_4 { pt3dadd( -125.928, -269.232, 39.3899, 0.44 ) }
    dend_4 { pt3dadd( -125.844, -270.362, 40.4801, 0.44 ) }
    dend_4 { pt3dadd( -125.699, -271.423, 41.5275, 0.29 ) }
    dend_4 { pt3dadd( -125.528, -272.502, 42.5871, 0.29 ) }
    dend_4 { pt3dadd( -125.438, -273.391, 43.4087, 0.29 ) }
    dend_4 { pt3dadd( -125.447, -273.982, 43.8334, 0.29 ) }
    dend_4 { pt3dadd( -125.695, -274.9, 44.2273, 0.59 ) }
    dend_4 { pt3dadd( -126.122, -275.804, 44.4393, 0.96 ) }
    dend_4 { pt3dadd( -126.725, -276.881, 44.6295, 0.96 ) }
    dend_4 { pt3dadd( -127.397, -278.069, 44.838, 0.44 ) }
    dend_4 { pt3dadd( -128.239, -279.71, 45.1402, 0.29 ) }
    dend_4 { pt3dadd( -128.713, -280.815, 45.3795, 0.29 ) }
    dend_4 { pt3dadd( -129.108, -281.98, 45.6844, 0.66 ) }
    dend_4 { pt3dadd( -129.434, -283.244, 46.0405, 0.44 ) }
    dend_4 { pt3dadd( -129.714, -284.454, 46.3808, 0.29 ) }
    dend_4 { pt3dadd( -129.944, -285.441, 46.6307, 0.44 ) }
    dend_4 { pt3dadd( -130.199, -286.492, 46.8938, 1.25 ) }
    dend_4 { pt3dadd( -130.463, -287.559, 47.1168, 1.25 ) }
    dend_4 { pt3dadd( -130.818, -288.993, 47.3887, 1.03 ) }
    dend_4 { pt3dadd( -131.235, -290.616, 47.6621, 0.52 ) }
    dend_4 { pt3dadd( -131.674, -292.229, 47.9447, 0.29 ) }
    dend_4 { pt3dadd( -132.074, -293.652, 48.2269, 0.29 ) }
    dend_4 { pt3dadd( -132.314, -294.462, 48.4134, 0.29 ) }
    dend_4 { pt3dadd( -132.635, -295.456, 48.6765, 0.37 ) }
    dend_4 { pt3dadd( -132.925, -296.158, 48.8844, 0.29 ) }
    dend_4 { pt3dadd( -133.276, -296.795, 49.0559, 0.29 ) }
    dend_4 { pt3dadd( -133.676, -297.349, 49.1458, 0.52 ) }
    dend_4 { pt3dadd( -134.376, -298.202, 49.1747, 1.18 ) }
    dend_4 { pt3dadd( -134.972, -298.922, 49.1472, 1.18 ) }
    dend_4 { pt3dadd( -136.142, -300.457, 48.9859, 0.81 ) }
    dend_4 { pt3dadd( -136.861, -301.65, 48.7755, 0.29 ) }
    dend_4 { pt3dadd( -137.234, -302.533, 48.581, 0.29 ) }
    dend_4 { pt3dadd( -137.417, -303.23, 48.425, 0.52 ) }
    dend_4 { pt3dadd( -137.557, -304.259, 48.2303, 0.88 ) }
    dend_4 { pt3dadd( -137.655, -305.595, 48.0792, 0.29 ) }
    dend_4 { pt3dadd( -137.714, -307.022, 48.0897, 0.22 ) }
    dend_4 { pt3dadd( -137.805, -308.019, 48.2801, 0.22 ) }
    dend_4 { pt3dadd( -137.942, -308.782, 48.5432, 0.44 ) }
    dend_4 { pt3dadd( -138.188, -309.691, 49.0131, 0.59 ) }
    dend_4 { pt3dadd( -138.673, -310.989, 49.862, 0.29 ) }
    dend_4 { pt3dadd( -139.104, -311.941, 50.5692, 0.81 ) }
    dend_4 { pt3dadd( -139.596, -312.939, 51.3308, 0.81 ) }
    dend_4 { pt3dadd( -139.919, -313.61, 51.7968, 0.81 ) }
    dend_4 { pt3dadd( -140.536, -314.985, 52.6211, 0.29 ) }
    dend_4 { pt3dadd( -140.971, -315.985, 53.0965, 0.29 ) }
    dend_4 { pt3dadd( -141.312, -316.771, 53.4066, 0.88 ) }
    dend_4 { pt3dadd( -141.822, -317.845, 53.7407, 1.18 ) }
    dend_4 { pt3dadd( -142.471, -319.097, 54.0905, 0.52 ) }
    dend_4 { pt3dadd( -142.886, -319.881, 54.3032, 0.37 ) }
    dend_4 { pt3dadd( -143.473, -321.067, 54.5958, 0.22 ) }
    dend_4 { pt3dadd( -143.803, -321.855, 54.8073, 0.44 ) }
    dend_4 { pt3dadd( -144.159, -322.95, 55.1181, 0.96 ) }
    dend_4 { pt3dadd( -144.501, -324.441, 55.5041, 0.22 ) }
    dend_4 { pt3dadd( -144.637, -325.357, 55.708, 0.22 ) }
    dend_4 { pt3dadd( -144.756, -326.441, 55.9006, 0.37 ) }
    dend_4 { pt3dadd( -144.855, -327.284, 56.0093, 0.37 ) }
    dend_4 { pt3dadd( -145.085, -328.604, 56.0757, 0.22 ) }
    dend_4 { pt3dadd( -145.382, -329.785, 56.0692, 0.22 ) }
    dend_4 { pt3dadd( -145.725, -330.787, 56.0343, 0.81 ) }
    dend_4 { pt3dadd( -146.235, -332.045, 56.0058, 0.88 ) }
    dend_4 { pt3dadd( -146.818, -333.402, 56.027, 0.29 ) }
    dend_4 { pt3dadd( -147.369, -334.741, 56.1332, 0.22 ) }
    dend_4 { pt3dadd( -147.772, -335.824, 56.2847, 0.22 ) }
    dend_4 { pt3dadd( -148.162, -337.04, 56.521, 0.96 ) }
    dend_4 { pt3dadd( -148.487, -338.245, 56.7435, 0.81 ) }
    dend_4 { pt3dadd( -148.783, -339.57, 56.982, 0.37 ) }
    dend_4 { pt3dadd( -149.126, -341.293, 57.2783, 0.22 ) }
    dend_4 { pt3dadd( -149.425, -342.698, 57.4777, 0.22 ) }
    dend_4 { pt3dadd( -149.768, -344.165, 57.5775, 0.22 ) }
    dend_4 { pt3dadd( -150.114, -345.555, 57.5726, 0.22 ) }
    dend_4 { pt3dadd( -150.249, -346.108, 57.5566, 0.59 ) }
    dend_4 { pt3dadd( -150.489, -347.132, 57.5183, 1.03 ) }
    dend_4 { pt3dadd( -150.866, -348.759, 57.4644, 0.37 ) }
    dend_4 { pt3dadd( -151.175, -350.124, 57.488, 0.22 ) }
    dend_4 { pt3dadd( -151.376, -350.959, 57.6034, 0.22 ) }
    dend_4 { pt3dadd( -151.766, -352.324, 58.0605, 0.22 ) }
    dend_4 { pt3dadd( -152.052, -353.158, 58.4672, 0.22 ) }
    dend_4 { pt3dadd( -152.298, -353.779, 58.8777, 0.22 ) }
    dend_4 { pt3dadd( -152.565, -354.428, 59.3663, 0.37 ) }
    dend_4 { pt3dadd( -152.955, -355.386, 60.0895, 0.22 ) }
    dend_4 { pt3dadd( -153.212, -356.069, 60.5739, 0.22 ) }
    dend_4 { pt3dadd( -153.391, -356.62, 60.9152, 0.74 ) }
    dend_4 { pt3dadd( -153.575, -357.46, 61.4299, 1.03 ) }
    dend_4 { pt3dadd( -153.683, -358.602, 62.1736, 0.66 ) }
    dend_4 { pt3dadd( -153.682, -359.636, 62.8629, 0.29 ) }
    dend_4 { pt3dadd( -153.651, -360.337, 63.3439, 0.29 ) }
    dend_4 { pt3dadd( -153.627, -360.805, 63.6523, 0.29 ) }
    dend_4 { pt3dadd( -153.598, -361.599, 64.1495, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_4 { pt3dadd( -153.586, -362.64, 64.7865, 0.22 ) }
    dend_4 { pt3dadd( -153.591, -363.134, 65.057, 0.22 ) }
    dend_4 { pt3dadd( -153.62, -364.176, 65.5634, 0.22 ) }
    dend_4 { pt3dadd( -153.663, -365.21, 66.0409, 0.22 ) }
    dend_4 { pt3dadd( -153.742, -366.617, 66.6926, 0.74 ) }
    dend_4 { pt3dadd( -153.845, -367.878, 67.2308, 0.74 ) }
    dend_4 { pt3dadd( -153.969, -369.041, 67.6993, 0.74 ) }
    dend_4 { pt3dadd( -154.104, -370.174, 68.1369, 0.37 ) }
    dend_4 { pt3dadd( -154.285, -371.579, 68.693, 0.37 ) }
    dend_4 { pt3dadd( -154.435, -372.584, 69.1152, 0.37 ) }
    dend_4 { pt3dadd( -154.609, -373.707, 69.5996, 0.88 ) }
    dend_4 { pt3dadd( -154.779, -375.05, 70.1114, 0.88 ) }
    dend_4 { pt3dadd( -154.892, -376.18, 70.558, 0.44 ) }
    dend_4 { pt3dadd( -155.019, -377.581, 71.1293, 0.22 ) }
    dend_4 { pt3dadd( -155.088, -378.296, 71.4503, 0.22 ) }
    dend_4 { pt3dadd( -155.204, -379.263, 71.9459, 0.37 ) }
    dend_4 { pt3dadd( -155.444, -380.719, 72.87, 0.74 ) }
    dend_4 { pt3dadd( -155.846, -381.994, 73.9156, 0.22 ) }
    dend_4 { pt3dadd( -156.349, -382.77, 74.7118, 0.22 ) }
    dend_4 { pt3dadd( -156.769, -383.105, 75.1385, 0.22 ) }
    dend_4 { pt3dadd( -157.336, -383.416, 75.5893, 0.22 ) }
    dend_4 { pt3dadd( -157.818, -383.655, 75.8892, 0.22 ) }
    dend_4 { pt3dadd( -158.859, -384.224, 76.5116, 0.22 ) }
    dend_4 { pt3dadd( -159.476, -384.677, 76.8438, 0.81 ) }
    dend_4 { pt3dadd( -160.198, -385.402, 77.2644, 1.18 ) }
    dend_4 { pt3dadd( -160.644, -385.993, 77.5471, 1.18 ) }
    dend_4 { pt3dadd( -161.42, -387.313, 78.086, 0.37 ) }
    dend_4 { pt3dadd( -162.24, -389.019, 78.6703, 0.22 ) }
    dend_4 { pt3dadd( -162.799, -390.423, 79.0796, 0.22 ) }
    dend_4 { pt3dadd( -163.126, -391.307, 79.2997, 0.22 ) }
    dend_4 { pt3dadd( -163.575, -392.537, 79.515, 0.37 ) }
    dend_4 { pt3dadd( -164.043, -393.782, 79.6642, 0.74 ) }
    dend_4 { pt3dadd( -164.56, -395.041, 79.727, 0.59 ) }
    dend_4 { pt3dadd( -165.092, -396.153, 79.6702, 0.29 ) }
    dend_4 { pt3dadd( -165.655, -397.19, 79.5916, 0.15 ) }
    dend_4 { pt3dadd( -166.325, -398.373, 79.4891, 0.15 ) }
    dend_4 { pt3dadd( -166.682, -399.023, 79.4596, 0.44 ) }
    dend_4 { pt3dadd( -167.263, -400.175, 79.5026, 0.66 ) }
    dend_4 { pt3dadd( -167.726, -401.4, 79.7152, 0.22 ) }
    dend_4 { pt3dadd( -167.988, -402.676, 80.2313, 0.22 ) }
    dend_4 { pt3dadd( -168.044, -403.541, 80.8, 0.81 ) }
    dend_4 { pt3dadd( -168.056, -404.599, 81.7063, 0.96 ) }
    dend_4 { pt3dadd( -168.066, -405.464, 82.5617, 0.96 ) }
    dend_4 { pt3dadd( -168.076, -406.255, 83.4352, 0.44 ) }
    dend_4 { pt3dadd( -168.121, -407.115, 84.4502, 0.29 ) }
    dend_4 { pt3dadd( -168.246, -407.877, 85.2934, 0.22 ) }
    dend_4 { pt3dadd( -168.488, -408.636, 85.9826, 0.22 ) }
    dend_4 { pt3dadd( -168.853, -409.433, 86.504, 0.22 ) }
    dend_4 { pt3dadd( -169.09, -409.883, 86.7211, 0.22 ) }
    dend_4 { pt3dadd( -169.303, -410.253, 86.8564, 0.74 ) }
    dend_4 { pt3dadd( -169.849, -411.176, 87.0875, 1.03 ) }
    dend_4 { pt3dadd( -170.642, -412.551, 87.3387, 0.22 ) }
    dend_4 { pt3dadd( -171.167, -413.509, 87.4868, 0.22 ) }
    dend_4 { pt3dadd( -171.432, -414.025, 87.5625, 0.74 ) }
    dend_4 { pt3dadd( -171.736, -414.657, 87.6349, 0.96 ) }
    dend_4 { pt3dadd( -172.188, -415.654, 87.7759, 0.29 ) }
    dend_4 { pt3dadd( -172.539, -416.463, 87.9104, 0.22 ) }
    dend_4 { pt3dadd( -172.791, -417.073, 88.0223, 0.22 ) }
    dend_4 { pt3dadd( -173.145, -417.931, 88.2039, 0.37 ) }
    dend_4 { pt3dadd( -173.641, -418.956, 88.4412, 0.22 ) }
    dend_4 { pt3dadd( -174.365, -420.207, 88.8248, 0.22 ) }
    dend_4 { pt3dadd( -174.656, -420.647, 89.0157, 0.22 ) }
    dend_4 { pt3dadd( -174.961, -421.049, 89.2417, 0.44 ) }
    dend_4 { pt3dadd( -175.449, -421.644, 89.6451, 0.88 ) }
    dend_4 { pt3dadd( -176.059, -422.349, 90.1998, 0.44 ) }
    dend_4 { pt3dadd( -176.875, -423.308, 91.0076, 0.22 ) }
    dend_4 { pt3dadd( -177.461, -424.052, 91.5783, 0.22 ) }
    dend_4 { pt3dadd( -178.036, -424.83, 92.1275, 0.22 ) }
    dend_4 { pt3dadd( -178.468, -425.42, 92.5046, 0.22 ) }
    dend_4 { pt3dadd( -178.783, -425.87, 92.7524, 0.22 ) }
    dend_4 { pt3dadd( -179.085, -426.336, 92.9509, 0.59 ) }
    dend_4 { pt3dadd( -179.664, -427.233, 93.2461, 1.25 ) }
    dend_4 { pt3dadd( -180.481, -428.439, 93.5862, 0.44 ) }
    dend_4 { pt3dadd( -181.228, -429.512, 93.8639, 0.44 ) }
    dend_4 { pt3dadd( -181.779, -430.303, 94.0908, 0.52 ) }
    dend_4 { pt3dadd( -182.669, -431.609, 94.581, 0.22 ) }
    dend_4 { pt3dadd( -183.318, -432.554, 95.0075, 0.15 ) }
    dend_4 { pt3dadd( -183.904, -433.395, 95.4583, 0.15 ) }
    dend_4 { pt3dadd( -184.148, -433.732, 95.6588, 0.37 ) }
    dend_4 { pt3dadd( -184.942, -434.761, 96.3115, 1.03 ) }
    dend_4 { pt3dadd( -186.244, -436.311, 97.3835, 0.22 ) }
    dend_4 { pt3dadd( -186.841, -436.958, 97.8705, 0.22 ) }
    dend_4 { pt3dadd( -187.205, -437.348, 98.1617, 0.22 ) }
    dend_4 { pt3dadd( -187.853, -438.053, 98.6897, 0.22 ) }
    dend_4 { pt3dadd( -188.677, -438.931, 99.321, 1.47 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 85/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -56.9222, 158.157, 53.4277, 0.07 ) }
    dend_55 { pt3dadd( -57.8765, 159.265, 54.077, 0.07 ) }
    dend_55 { pt3dadd( -58.5213, 160.049, 54.4986, 0.66 ) }
    dend_55 { pt3dadd( -59.1619, 160.856, 54.9043, 0.15 ) }
    dend_55 { pt3dadd( -59.7627, 161.628, 55.2779, 0.59 ) }
    dend_55 { pt3dadd( -60.2979, 162.311, 55.6125, 0.15 ) }
    dend_55 { pt3dadd( -60.7197, 162.85, 55.8762, 0.52 ) }
    dend_55 { pt3dadd( -61.1259, 163.419, 56.1065, 0.15 ) }
    dend_55 { pt3dadd( -61.5469, 164.03, 56.3349, 0.29 ) }
    dend_55 { pt3dadd( -61.9422, 164.616, 56.5436, 0.07 ) }
    dend_55 { pt3dadd( -62.2472, 165.05, 56.7131, 0.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 96/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -56.9222, 158.157, 53.4277, 0.22 ) }
    dend_52 { pt3dadd( -57.2352, 159.37, 54.0918, 0.22 ) }
    dend_52 { pt3dadd( -58.0778, 161.12, 54.8934, 0.07 ) }
    dend_52 { pt3dadd( -58.5997, 161.903, 55.1873, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_52 { pt3dadd( -59.3357, 162.849, 55.4632, 0.29 ) }
    dend_52 { pt3dadd( -60.3212, 164.017, 55.7281, 0.07 ) }
    dend_52 { pt3dadd( -61.3571, 165.213, 55.9493, 0.07 ) }
    dend_52 { pt3dadd( -62.1296, 165.967, 56.0021, 0.52 ) }
    dend_52 { pt3dadd( -63.356, 167.03, 55.963, 0.07 ) }
    dend_52 { pt3dadd( -64.1154, 167.671, 55.895, 0.07 ) }
    dend_52 { pt3dadd( -64.7022, 168.181, 55.8216, 0.07 ) }
    dend_52 { pt3dadd( -65.0477, 168.515, 55.772, 0.22 ) }
    dend_52 { pt3dadd( -65.8164, 169.362, 55.6535, 0.44 ) }
    dend_52 { pt3dadd( -66.9371, 170.742, 55.4605, 0.07 ) }
    dend_52 { pt3dadd( -67.46, 171.49, 55.3756, 0.07 ) }
    dend_52 { pt3dadd( -67.7205, 171.911, 55.3473, 0.52 ) }
    dend_52 { pt3dadd( -68.2663, 172.848, 55.3096, 0.74 ) }
    dend_52 { pt3dadd( -69.0225, 174.21, 55.2844, 0.07 ) }
    dend_52 { pt3dadd( -69.5138, 175.159, 55.2967, 0.07 ) }
    dend_52 { pt3dadd( -69.971, 176.122, 55.362, 0.37 ) }
    dend_52 { pt3dadd( -70.6643, 177.67, 55.5406, 0.07 ) }
    dend_52 { pt3dadd( -70.9852, 178.394, 55.6629, 0.22 ) }
    dend_52 { pt3dadd( -71.186, 178.864, 55.7843, 0.37 ) }
    dend_52 { pt3dadd( -71.5426, 179.781, 56.1296, 0.96 ) }
    dend_52 { pt3dadd( -71.9947, 181.11, 56.7911, 0.15 ) }
    dend_52 { pt3dadd( -72.1419, 181.631, 57.1132, 0.15 ) }
    dend_52 { pt3dadd( -72.3373, 182.654, 57.8603, 0.59 ) }
    dend_52 { pt3dadd( -72.5438, 184.01, 58.9752, 0.07 ) }
    dend_52 { pt3dadd( -72.7024, 184.899, 59.8, 0.07 ) }
    dend_52 { pt3dadd( -72.8835, 185.832, 60.7727, 0.59 ) }
    dend_52 { pt3dadd( -73.1186, 186.728, 61.7839, 0.15 ) }
    dend_52 { pt3dadd( -73.4196, 187.596, 62.7833, 0.15 ) }
    dend_52 { pt3dadd( -73.6958, 188.224, 63.5349, 0.88 ) }
    dend_52 { pt3dadd( -74.3307, 189.294, 64.8193, 0.07 ) }
    dend_52 { pt3dadd( -74.7963, 189.953, 65.5484, 0.07 ) }
    dend_52 { pt3dadd( -75.5201, 190.889, 66.4585, 0.07 ) }
    dend_52 { pt3dadd( -75.928, 191.387, 66.8723, 0.81 ) }
    dend_52 { pt3dadd( -76.4161, 191.991, 67.3322, 1.25 ) }
    dend_52 { pt3dadd( -77.2395, 193.013, 68.0447, 0.22 ) }
    dend_52 { pt3dadd( -78.1494, 194.169, 68.804, 0.15 ) }
    dend_52 { pt3dadd( -79.1098, 195.368, 69.5654, 0.37 ) }
    dend_52 { pt3dadd( -80.4469, 197.075, 70.6373, 0.07 ) }
    dend_52 { pt3dadd( -81.2468, 198.111, 71.2818, 0.07 ) }
    dend_52 { pt3dadd( -82.0894, 199.233, 71.9561, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 40/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -1.89325, -62.6289, -33.9224, 0.22 ) }
    dend_17 { pt3dadd( -1.44383, -62.7734, -34.3477, 0.22 ) }
    dend_17 { pt3dadd( -1.23442, -62.8779, -34.5475, 0.22 ) }
    dend_17 { pt3dadd( -1.09731, -62.9743, -34.6954, 0.22 ) }
    dend_17 { pt3dadd( -1.00396, -63.063, -34.8084, 0.22 ) }
    dend_17 { pt3dadd( -0.881903, -63.2085, -34.9691, 0.29 ) }
    dend_17 { pt3dadd( -0.719394, -63.4584, -35.2012, 0.29 ) }
    dend_17 { pt3dadd( -0.643224, -63.7035, -35.3409, 0.29 ) }
    dend_17 { pt3dadd( -0.604099, -64.0001, -35.4525, 0.29 ) }
    dend_17 { pt3dadd( -0.589934, -64.2854, -35.523, 0.29 ) }
    dend_17 { pt3dadd( -0.588398, -64.4573, -35.5499, 0.52 ) }
    dend_17 { pt3dadd( -0.598287, -64.7815, -35.5874, 0.88 ) }
    dend_17 { pt3dadd( -0.624567, -65.2604, -35.615, 0.29 ) }
    dend_17 { pt3dadd( -0.653657, -65.7633, -35.6174, 0.29 ) }
    dend_17 { pt3dadd( -0.672542, -66.1678, -35.5961, 0.52 ) }
    dend_17 { pt3dadd( -0.683275, -66.4362, -35.5735, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 56/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.89325, -62.6289, -33.9224, 0.15 ) }
    dend_16 { pt3dadd( -2.2644, -63.535, -33.072, 0.15 ) }
    dend_16 { pt3dadd( -2.46662, -64.0286, -32.6087, 0.15 ) }
    dend_16 { pt3dadd( -2.66031, -64.5015, -32.165, 0.15 ) }
    dend_16 { pt3dadd( -2.81541, -64.8801, -31.8096, 0.15 ) }
    dend_16 { pt3dadd( -2.99732, -65.3242, -31.3928, 0.15 ) }
    dend_16 { pt3dadd( -3.22918, -65.8903, -30.8616, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 63/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -188.677, -438.931, 99.321, 0.22 ) }
    dend_6 { pt3dadd( -189.562, -439.388, 100.813, 0.22 ) }
    dend_6 { pt3dadd( -189.825, -439.623, 101.314, 0.22 ) }
    dend_6 { pt3dadd( -190.076, -439.911, 101.808, 0.22 ) }
    dend_6 { pt3dadd( -190.44, -440.496, 102.563, 0.22 ) }
    dend_6 { pt3dadd( -190.77, -441.139, 103.269, 0.22 ) }
    dend_6 { pt3dadd( -190.954, -441.513, 103.657, 0.37 ) }
    dend_6 { pt3dadd( -191.217, -442.142, 104.183, 1.03 ) }
    dend_6 { pt3dadd( -191.355, -442.428, 104.402, 1.03 ) }
    dend_6 { pt3dadd( -191.996, -443.556, 105.246, 0.37 ) }
    dend_6 { pt3dadd( -192.625, -444.482, 105.886, 0.29 ) }
    dend_6 { pt3dadd( -192.99, -444.932, 106.207, 0.29 ) }
    dend_6 { pt3dadd( -193.705, -445.676, 106.809, 0.59 ) }
    dend_6 { pt3dadd( -194.417, -446.338, 107.4, 0.22 ) }
    dend_6 { pt3dadd( -194.903, -446.766, 107.829, 0.52 ) }
    dend_6 { pt3dadd( -195.747, -447.493, 108.633, 0.96 ) }
    dend_6 { pt3dadd( -196.707, -448.377, 109.66, 0.22 ) }
    dend_6 { pt3dadd( -197.316, -449.0, 110.378, 0.22 ) }
    dend_6 { pt3dadd( -197.692, -449.425, 110.899, 0.22 ) }
    dend_6 { pt3dadd( -198.016, -449.837, 111.414, 0.22 ) }
    dend_6 { pt3dadd( -198.325, -450.282, 111.988, 0.22 ) }
    dend_6 { pt3dadd( -198.508, -450.612, 112.475, 0.22 ) }
    dend_6 { pt3dadd( -198.727, -451.406, 113.426, 1.4 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -188.677, -438.931, 99.321, 0.22 ) }
    dend_5 { pt3dadd( -187.474, -439.294, 100.668, 0.22 ) }
    dend_5 { pt3dadd( -186.728, -439.535, 101.396, 0.22 ) }
    dend_5 { pt3dadd( -186.279, -439.686, 101.729, 0.22 ) }
    dend_5 { pt3dadd( -185.542, -439.94, 102.218, 0.07 ) }
    dend_5 { pt3dadd( -185.012, -440.122, 102.57, 0.07 ) }
    dend_5 { pt3dadd( -184.775, -440.204, 102.728, 0.07 ) }
    dend_5 { pt3dadd( -183.913, -440.493, 103.201, 0.88 ) }
    dend_5 { pt3dadd( -182.159, -441.103, 104.004, 0.15 ) }
    dend_5 { pt3dadd( -181.097, -441.485, 104.425, 0.44 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 96/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -82.0894, 199.233, 71.9561, 0.07 ) }
    dend_54 { pt3dadd( -82.2467, 200.678, 73.1304, 0.07 ) }
    dend_54 { pt3dadd( -82.3215, 201.596, 73.8855, 0.59 ) }
    dend_54 { pt3dadd( -82.4079, 203.19, 75.1917, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_54 { pt3dadd( -82.4256, 204.377, 76.1804, 0.74 ) }
    dend_54 { pt3dadd( -82.408, 205.441, 77.0848, 0.07 ) }
    dend_54 { pt3dadd( -82.3908, 206.476, 77.9635, 0.07 ) }
    dend_54 { pt3dadd( -82.3333, 207.207, 78.6309, 0.07 ) }
    dend_54 { pt3dadd( -82.2347, 208.062, 79.4286, 0.74 ) }
    dend_54 { pt3dadd( -82.0363, 209.429, 80.6511, 0.07 ) }
    dend_54 { pt3dadd( -81.9041, 210.282, 81.3923, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 7/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -82.0894, 199.233, 71.9561, 0.07 ) }
    dend_53 { pt3dadd( -83.3516, 199.199, 71.9096, 0.07 ) }
    dend_53 { pt3dadd( -84.4091, 199.215, 71.7709, 0.07 ) }
    dend_53 { pt3dadd( -85.5125, 199.296, 71.5257, 0.07 ) }
    dend_53 { pt3dadd( -85.9531, 199.351, 71.3847, 0.29 ) }
    dend_53 { pt3dadd( -86.8508, 199.495, 71.0658, 0.74 ) }
    dend_53 { pt3dadd( -87.7959, 199.676, 70.7217, 0.29 ) }
    dend_53 { pt3dadd( -88.6581, 199.901, 70.3813, 0.29 ) }
    dend_53 { pt3dadd( -89.7869, 200.229, 69.9867, 0.29 ) }
    dend_53 { pt3dadd( -91.0439, 200.596, 69.6713, 0.29 ) }
    dend_53 { pt3dadd( -91.4719, 200.708, 69.6175, 0.74 ) }
    dend_53 { pt3dadd( -92.2414, 200.878, 69.6662, 1.47 ) }
    dend_53 { pt3dadd( -93.3273, 201.077, 69.9443, 0.52 ) }
    dend_53 { pt3dadd( -94.3075, 201.23, 70.3712, 0.22 ) }
    dend_53 { pt3dadd( -95.3456, 201.375, 70.9666, 0.15 ) }
    dend_53 { pt3dadd( -96.0537, 201.461, 71.4286, 0.29 ) }
    dend_53 { pt3dadd( -97.1025, 201.573, 72.1443, 0.07 ) }
    dend_53 { pt3dadd( -97.5447, 201.615, 72.4642, 0.52 ) }
    dend_53 { pt3dadd( -98.6169, 201.735, 73.2607, 0.07 ) }
    dend_53 { pt3dadd( -99.3821, 201.871, 73.8644, 0.81 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 27/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.683275, -66.4362, -35.5735, 0.22 ) }
    dend_19 { pt3dadd( -0.0888552, -67.2308, -35.7032, 0.22 ) }
    dend_19 { pt3dadd( 0.372045, -67.8844, -35.8401, 0.22 ) }
    dend_19 { pt3dadd( 0.748511, -68.4291, -35.9677, 0.22 ) }
    dend_19 { pt3dadd( 1.05679, -68.8579, -36.0996, 0.22 ) }
    dend_19 { pt3dadd( 1.68092, -69.6918, -36.4105, 0.22 ) }
    dend_19 { pt3dadd( 2.01768, -70.1174, -36.586, 0.22 ) }
    dend_19 { pt3dadd( 2.33074, -70.4913, -36.7755, 0.22 ) }
    dend_19 { pt3dadd( 2.64041, -70.8706, -36.9955, 0.22 ) }
    dend_19 { pt3dadd( 3.09156, -71.4409, -37.4047, 0.37 ) }
    dend_19 { pt3dadd( 3.34282, -71.7693, -37.6696, 0.52 ) }
    dend_19 { pt3dadd( 3.5293, -72.0195, -37.8775, 0.29 ) }
    dend_19 { pt3dadd( 3.5887, -72.1098, -37.951, 0.29 ) }
    dend_19 { pt3dadd( 3.78721, -72.5517, -38.269, 0.22 ) }
    dend_19 { pt3dadd( 3.88918, -73.1773, -38.6119, 0.22 ) }
    dend_19 { pt3dadd( 3.89159, -73.485, -38.743, 0.22 ) }
    dend_19 { pt3dadd( 3.8645, -73.796, -38.8623, 0.29 ) }
    dend_19 { pt3dadd( 3.82326, -74.0681, -38.9628, 0.29 ) }
    dend_19 { pt3dadd( 3.70057, -74.7879, -39.2052, 0.15 ) }
    dend_19 { pt3dadd( 3.63744, -75.1545, -39.2934, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 47/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -0.683275, -66.4362, -35.5735, 0.07 ) }
    dend_18 { pt3dadd( -1.37939, -66.9011, -34.3478, 0.07 ) }
    dend_18 { pt3dadd( -2.45612, -67.6201, -32.4519, 0.07 ) }
    dend_18 { pt3dadd( -3.3666, -68.2281, -30.8488, 0.07 ) }
    dend_18 { pt3dadd( -3.80636, -68.5217, -30.0745, 0.29 ) }
    dend_18 { pt3dadd( -4.76844, -69.1642, -28.3805, 0.22 ) }
    dend_18 { pt3dadd( -5.15713, -69.4237, -27.6961, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 54/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -198.727, -451.406, 113.426, 0.07 ) }
    dend_10 { pt3dadd( -198.282, -450.967, 113.775, 0.07 ) }
    dend_10 { pt3dadd( -197.923, -450.598, 114.058, 0.07 ) }
    dend_10 { pt3dadd( -197.641, -450.316, 114.268, 0.22 ) }
    dend_10 { pt3dadd( -197.5, -450.179, 114.36, 0.22 ) }
    dend_10 { pt3dadd( -197.219, -449.903, 114.525, 0.22 ) }
    dend_10 { pt3dadd( -196.766, -449.487, 114.749, 0.15 ) }
    dend_10 { pt3dadd( -196.437, -449.211, 114.853, 0.15 ) }
    dend_10 { pt3dadd( -195.988, -448.892, 114.919, 0.15 ) }
    dend_10 { pt3dadd( -195.684, -448.721, 114.936, 0.37 ) }
    dend_10 { pt3dadd( -195.395, -448.602, 114.938, 0.59 ) }
    dend_10 { pt3dadd( -194.651, -448.417, 114.913, 0.15 ) }
    dend_10 { pt3dadd( -193.938, -448.328, 114.847, 0.15 ) }
    dend_10 { pt3dadd( -193.646, -448.312, 114.806, 0.15 ) }
    dend_10 { pt3dadd( -193.132, -448.328, 114.717, 0.29 ) }
    dend_10 { pt3dadd( -192.575, -448.389, 114.623, 0.15 ) }
    dend_10 { pt3dadd( -192.08, -448.478, 114.539, 0.52 ) }
    dend_10 { pt3dadd( -191.329, -448.653, 114.409, 0.15 ) }
    dend_10 { pt3dadd( -190.895, -448.763, 114.343, 0.29 ) }
    dend_10 { pt3dadd( -190.329, -448.894, 114.266, 0.29 ) }
    dend_10 { pt3dadd( -189.788, -449.012, 114.188, 0.15 ) }
    dend_10 { pt3dadd( -189.233, -449.134, 114.104, 0.44 ) }
    dend_10 { pt3dadd( -188.786, -449.227, 114.021, 0.15 ) }
    dend_10 { pt3dadd( -188.438, -449.295, 113.94, 0.22 ) }
    dend_10 { pt3dadd( -187.664, -449.415, 113.721, 0.07 ) }
    dend_10 { pt3dadd( -187.225, -449.454, 113.578, 0.59 ) }
    dend_10 { pt3dadd( -186.527, -449.467, 113.299, 0.07 ) }
    dend_10 { pt3dadd( -185.822, -449.436, 112.962, 0.37 ) }
    dend_10 { pt3dadd( -185.277, -449.39, 112.664, 0.15 ) }
    dend_10 { pt3dadd( -185.048, -449.363, 112.515, 0.44 ) }
    dend_10 { pt3dadd( -184.785, -449.325, 112.317, 0.44 ) }
    dend_10 { pt3dadd( -184.202, -449.221, 111.871, 0.07 ) }
    dend_10 { pt3dadd( -183.787, -449.148, 111.559, 0.07 ) }
    dend_10 { pt3dadd( -183.346, -449.092, 111.23, 0.07 ) }
    dend_10 { pt3dadd( -182.84, -449.052, 110.867, 0.07 ) }
    dend_10 { pt3dadd( -182.553, -449.048, 110.669, 0.07 ) }
    dend_10 { pt3dadd( -182.061, -449.073, 110.338, 0.37 ) }
    dend_10 { pt3dadd( -181.353, -449.163, 109.902, 0.07 ) }
    dend_10 { pt3dadd( -181.017, -449.223, 109.713, 0.07 ) }
    dend_10 { pt3dadd( -180.421, -449.34, 109.4, 0.52 ) }
    dend_10 { pt3dadd( -179.669, -449.503, 109.031, 0.07 ) }
    dend_10 { pt3dadd( -179.293, -449.593, 108.851, 0.07 ) }
    dend_10 { pt3dadd( -178.72, -449.753, 108.584, 0.52 ) }
    dend_10 { pt3dadd( -178.046, -449.984, 108.312, 0.15 ) }
    dend_10 { pt3dadd( -177.682, -450.124, 108.192, 0.15 ) }
    dend_10 { pt3dadd( -177.589, -450.165, 108.167, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( -177.288, -450.297, 108.107, 0.29 ) }
    dend_10 { pt3dadd( -177.055, -450.398, 108.071, 0.29 ) }
    dend_10 { pt3dadd( -176.438, -450.664, 107.997, 0.07 ) }
    dend_10 { pt3dadd( -175.916, -450.857, 107.961, 0.07 ) }
    dend_10 { pt3dadd( -175.617, -450.951, 107.942, 0.15 ) }
    dend_10 { pt3dadd( -175.053, -451.108, 107.9, 0.07 ) }
    dend_10 { pt3dadd( -174.818, -451.167, 107.876, 0.07 ) }
    dend_10 { pt3dadd( -174.417, -451.276, 107.831, 0.29 ) }
    dend_10 { pt3dadd( -173.559, -451.537, 107.705, 0.07 ) }
    dend_10 { pt3dadd( -173.096, -451.701, 107.609, 0.07 ) }
    dend_10 { pt3dadd( -172.813, -451.806, 107.524, 0.29 ) }
    dend_10 { pt3dadd( -172.404, -451.956, 107.363, 0.37 ) }
    dend_10 { pt3dadd( -171.663, -452.238, 106.994, 0.07 ) }
    dend_10 { pt3dadd( -171.171, -452.454, 106.705, 0.15 ) }
    dend_10 { pt3dadd( -170.631, -452.739, 106.354, 0.15 ) }
    dend_10 { pt3dadd( -170.109, -453.018, 106.011, 0.15 ) }
    dend_10 { pt3dadd( -169.744, -453.192, 105.784, 0.29 ) }
    dend_10 { pt3dadd( -169.378, -453.355, 105.553, 0.59 ) }
    dend_10 { pt3dadd( -168.968, -453.526, 105.289, 0.88 ) }
    dend_10 { pt3dadd( -168.456, -453.756, 105.006, 0.29 ) }
    dend_10 { pt3dadd( -167.977, -454.002, 104.823, 0.29 ) }
    dend_10 { pt3dadd( -167.467, -454.308, 104.704, 0.15 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 22/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -198.727, -451.406, 113.426, 0.44 ) }
    dend_7 { pt3dadd( -199.546, -451.961, 113.195, 0.44 ) }
    dend_7 { pt3dadd( -200.543, -452.699, 113.012, 0.22 ) }
    dend_7 { pt3dadd( -201.403, -453.388, 112.918, 0.66 ) }
    dend_7 { pt3dadd( -202.209, -454.092, 112.881, 0.15 ) }
    dend_7 { pt3dadd( -202.818, -454.652, 112.88, 0.15 ) }
    dend_7 { pt3dadd( -203.181, -454.995, 112.907, 0.15 ) }
    dend_7 { pt3dadd( -203.761, -455.564, 113.086, 0.15 ) }
    dend_7 { pt3dadd( -204.119, -455.917, 113.279, 0.52 ) }
    dend_7 { pt3dadd( -204.731, -456.502, 113.689, 0.96 ) }
    dend_7 { pt3dadd( -205.437, -457.159, 114.197, 0.66 ) }
    dend_7 { pt3dadd( -206.118, -457.765, 114.694, 0.22 ) }
    dend_7 { pt3dadd( -207.21, -458.74, 115.47, 0.22 ) }
    dend_7 { pt3dadd( -207.643, -459.149, 115.767, 0.22 ) }
    dend_7 { pt3dadd( -208.078, -459.591, 116.072, 0.22 ) }
    dend_7 { pt3dadd( -208.384, -459.93, 116.293, 0.22 ) }
    dend_7 { pt3dadd( -208.737, -460.365, 116.534, 0.37 ) }
    dend_7 { pt3dadd( -209.221, -460.98, 116.808, 0.88 ) }
    dend_7 { pt3dadd( -209.688, -461.549, 117.032, 0.52 ) }
    dend_7 { pt3dadd( -210.335, -462.28, 117.332, 0.15 ) }
    dend_7 { pt3dadd( -210.836, -462.784, 117.553, 0.15 ) }
    dend_7 { pt3dadd( -211.378, -463.274, 117.767, 0.81 ) }
    dend_7 { pt3dadd( -212.232, -464.019, 118.053, 0.15 ) }
    dend_7 { pt3dadd( -213.186, -464.822, 118.322, 0.15 ) }
    dend_7 { pt3dadd( -213.522, -465.109, 118.398, 0.66 ) }
    dend_7 { pt3dadd( -214.048, -465.601, 118.477, 1.03 ) }
    dend_7 { pt3dadd( -214.832, -466.464, 118.533, 0.15 ) }
    dend_7 { pt3dadd( -215.366, -467.165, 118.529, 0.15 ) }
    dend_7 { pt3dadd( -215.457, -467.302, 118.518, 0.15 ) }
    dend_7 { pt3dadd( -215.731, -467.7, 118.471, 0.59 ) }
    dend_7 { pt3dadd( -216.082, -468.148, 118.415, 0.81 ) }
    dend_7 { pt3dadd( -216.735, -468.868, 118.328, 0.22 ) }
    dend_7 { pt3dadd( -217.184, -469.309, 118.282, 0.22 ) }
    dend_7 { pt3dadd( -217.977, -469.996, 118.228, 0.44 ) }
    dend_7 { pt3dadd( -218.8, -470.648, 118.16, 0.15 ) }
    dend_7 { pt3dadd( -219.336, -471.016, 118.104, 0.15 ) }
    dend_7 { pt3dadd( -219.839, -471.307, 118.041, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 59/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -219.839, -471.307, 118.041, 0.22 ) }
    dend_9 { pt3dadd( -220.477, -472.14, 117.87, 0.22 ) }
    dend_9 { pt3dadd( -220.738, -472.458, 117.802, 0.22 ) }
    dend_9 { pt3dadd( -221.184, -472.99, 117.698, 0.29 ) }
    dend_9 { pt3dadd( -221.631, -473.523, 117.579, 0.15 ) }
    dend_9 { pt3dadd( -221.924, -473.877, 117.479, 0.15 ) }
    dend_9 { pt3dadd( -222.21, -474.241, 117.362, 0.15 ) }
    dend_9 { pt3dadd( -222.492, -474.596, 117.242, 0.52 ) }
    dend_9 { pt3dadd( -222.818, -475.063, 117.07, 0.74 ) }
    dend_9 { pt3dadd( -223.286, -475.899, 116.745, 0.29 ) }
    dend_9 { pt3dadd( -223.542, -476.467, 116.51, 0.15 ) }
    dend_9 { pt3dadd( -223.717, -476.92, 116.328, 0.15 ) }
    dend_9 { pt3dadd( -223.799, -477.161, 116.24, 0.15 ) }
    dend_9 { pt3dadd( -223.916, -477.613, 116.092, 0.37 ) }
    dend_9 { pt3dadd( -224.038, -478.21, 115.942, 0.15 ) }
    dend_9 { pt3dadd( -224.132, -478.774, 115.858, 0.15 ) }
    dend_9 { pt3dadd( -224.23, -479.391, 115.805, 0.22 ) }
    dend_9 { pt3dadd( -224.306, -479.863, 115.774, 0.81 ) }
    dend_9 { pt3dadd( -224.409, -480.419, 115.728, 0.66 ) }
    dend_9 { pt3dadd( -224.61, -481.297, 115.648, 0.44 ) }
    dend_9 { pt3dadd( -224.76, -481.81, 115.592, 0.44 ) }
    dend_9 { pt3dadd( -225.028, -482.639, 115.491, 0.15 ) }
    dend_9 { pt3dadd( -225.162, -483.027, 115.434, 0.15 ) }
    dend_9 { pt3dadd( -225.435, -483.75, 115.306, 0.15 ) }
    dend_9 { pt3dadd( -225.651, -484.261, 115.205, 0.81 ) }
    dend_9 { pt3dadd( -226.135, -485.345, 114.989, 0.15 ) }
    dend_9 { pt3dadd( -226.281, -485.648, 114.929, 0.15 ) }
    dend_9 { pt3dadd( -226.437, -485.967, 114.866, 0.15 ) }
    dend_9 { pt3dadd( -226.615, -486.371, 114.795, 0.15 ) }
    dend_9 { pt3dadd( -226.726, -486.692, 114.753, 0.37 ) }
    dend_9 { pt3dadd( -226.877, -487.33, 114.674, 0.74 ) }
    dend_9 { pt3dadd( -226.998, -488.093, 114.576, 0.22 ) }
    dend_9 { pt3dadd( -227.078, -488.69, 114.492, 0.22 ) }
    dend_9 { pt3dadd( -227.131, -489.237, 114.419, 0.59 ) }
    dend_9 { pt3dadd( -227.163, -489.918, 114.346, 0.22 ) }
    dend_9 { pt3dadd( -227.171, -490.827, 114.256, 0.15 ) }
    dend_9 { pt3dadd( -227.164, -491.248, 114.22, 0.15 ) }
    dend_9 { pt3dadd( -227.162, -491.653, 114.196, 0.37 ) }
    dend_9 { pt3dadd( -227.197, -492.226, 114.168, 0.66 ) }
    dend_9 { pt3dadd( -227.321, -492.838, 114.127, 0.22 ) }
    dend_9 { pt3dadd( -227.519, -493.334, 114.094, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_9 { pt3dadd( -227.739, -493.702, 114.081, 0.15 ) }
    dend_9 { pt3dadd( -227.99, -494.052, 114.071, 0.29 ) }
    dend_9 { pt3dadd( -228.241, -494.366, 114.062, 0.88 ) }
    dend_9 { pt3dadd( -228.777, -495.005, 114.052, 0.22 ) }
    dend_9 { pt3dadd( -229.169, -495.449, 114.068, 0.15 ) }
    dend_9 { pt3dadd( -229.569, -495.907, 114.105, 0.15 ) }
    dend_9 { pt3dadd( -229.742, -496.115, 114.127, 0.15 ) }
    dend_9 { pt3dadd( -230.076, -496.547, 114.177, 0.22 ) }
    dend_9 { pt3dadd( -230.575, -497.231, 114.244, 0.15 ) }
    dend_9 { pt3dadd( -231.225, -498.153, 114.318, 0.15 ) }
    dend_9 { pt3dadd( -231.427, -498.427, 114.333, 0.37 ) }
    dend_9 { pt3dadd( -231.728, -498.832, 114.329, 0.37 ) }
    dend_9 { pt3dadd( -232.103, -499.346, 114.3, 0.22 ) }
    dend_9 { pt3dadd( -232.497, -499.932, 114.247, 0.22 ) }
    dend_9 { pt3dadd( -232.766, -500.397, 114.193, 0.66 ) }
    dend_9 { pt3dadd( -233.02, -500.954, 114.115, 0.66 ) }
    dend_9 { pt3dadd( -233.38, -501.891, 113.998, 0.15 ) }
    dend_9 { pt3dadd( -233.495, -502.213, 113.954, 0.15 ) }
    dend_9 { pt3dadd( -233.728, -502.918, 113.857, 0.59 ) }
    dend_9 { pt3dadd( -233.905, -503.503, 113.778, 0.15 ) }
    dend_9 { pt3dadd( -234.097, -504.215, 113.675, 0.15 ) }
    dend_9 { pt3dadd( -234.215, -504.731, 113.588, 0.44 ) }
    dend_9 { pt3dadd( -234.423, -505.667, 113.391, 0.15 ) }
    dend_9 { pt3dadd( -234.5, -505.993, 113.304, 0.15 ) }
    dend_9 { pt3dadd( -234.614, -506.379, 113.17, 0.15 ) }
    dend_9 { pt3dadd( -234.751, -506.749, 113.012, 0.37 ) }
    dend_9 { pt3dadd( -235.037, -507.381, 112.698, 0.44 ) }
    dend_9 { pt3dadd( -235.367, -508.018, 112.344, 0.22 ) }
    dend_9 { pt3dadd( -235.502, -508.23, 112.223, 0.22 ) }
    dend_9 { pt3dadd( -235.794, -508.597, 112.014, 0.15 ) }
    dend_9 { pt3dadd( -236.125, -508.925, 111.833, 0.15 ) }
    dend_9 { pt3dadd( -236.28, -509.05, 111.765, 0.15 ) }
    dend_9 { pt3dadd( -236.583, -509.259, 111.657, 0.29 ) }
    dend_9 { pt3dadd( -237.072, -509.594, 111.487, 0.37 ) }
    dend_9 { pt3dadd( -237.529, -509.93, 111.327, 0.22 ) }
    dend_9 { pt3dadd( -238.038, -510.359, 111.16, 0.15 ) }
    dend_9 { pt3dadd( -238.585, -510.852, 110.984, 0.29 ) }
    dend_9 { pt3dadd( -239.073, -511.31, 110.82, 0.15 ) }
    dend_9 { pt3dadd( -239.379, -511.604, 110.712, 0.15 ) }
    dend_9 { pt3dadd( -239.778, -511.986, 110.572, 0.52 ) }
    dend_9 { pt3dadd( -240.412, -512.578, 110.342, 0.15 ) }
    dend_9 { pt3dadd( -240.846, -512.992, 110.167, 0.15 ) }
    dend_9 { pt3dadd( -241.421, -513.579, 109.865, 0.15 ) }
    dend_9 { pt3dadd( -241.754, -513.933, 109.641, 0.52 ) }
    dend_9 { pt3dadd( -242.052, -514.232, 109.412, 0.52 ) }
    dend_9 { pt3dadd( -242.578, -514.745, 108.955, 0.15 ) }
    dend_9 { pt3dadd( -242.864, -515.009, 108.675, 0.15 ) }
    dend_9 { pt3dadd( -243.469, -515.58, 108.005, 0.15 ) }
    dend_9 { pt3dadd( -243.782, -515.893, 107.602, 0.29 ) }
    dend_9 { pt3dadd( -244.125, -516.286, 107.074, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -219.839, -471.307, 118.041, 0.88 ) }
    dend_8 { pt3dadd( -220.5, -471.814, 118.569, 0.88 ) }
    dend_8 { pt3dadd( -221.314, -472.462, 119.15, 0.22 ) }
    dend_8 { pt3dadd( -222.085, -473.122, 119.662, 0.15 ) }
    dend_8 { pt3dadd( -222.725, -473.711, 120.071, 0.15 ) }
    dend_8 { pt3dadd( -223.088, -474.071, 120.294, 0.37 ) }
    dend_8 { pt3dadd( -223.618, -474.648, 120.608, 1.03 ) }
    dend_8 { pt3dadd( -224.304, -475.489, 120.99, 0.44 ) }
    dend_8 { pt3dadd( -224.888, -476.314, 121.278, 0.15 ) }
    dend_8 { pt3dadd( -225.177, -476.781, 121.419, 0.15 ) }
    dend_8 { pt3dadd( -225.518, -477.388, 121.596, 0.37 ) }
    dend_8 { pt3dadd( -226.01, -478.29, 121.869, 0.15 ) }
    dend_8 { pt3dadd( -226.308, -478.809, 122.041, 0.29 ) }
    dend_8 { pt3dadd( -226.963, -479.813, 122.405, 0.07 ) }
    dend_8 { pt3dadd( -227.591, -480.603, 122.681, 0.07 ) }
    dend_8 { pt3dadd( -228.276, -481.333, 122.953, 0.07 ) }
    dend_8 { pt3dadd( -228.727, -481.729, 123.113, 0.29 ) }
    dend_8 { pt3dadd( -229.665, -482.41, 123.406, 0.07 ) }
    dend_8 { pt3dadd( -230.44, -482.884, 123.635, 0.59 ) }
    dend_8 { pt3dadd( -231.552, -483.459, 123.964, 0.15 ) }
    dend_8 { pt3dadd( -232.264, -483.793, 124.198, 0.15 ) }
    dend_8 { pt3dadd( -233.249, -484.24, 124.609, 0.15 ) }
    dend_8 { pt3dadd( -233.754, -484.487, 124.863, 0.37 ) }
    dend_8 { pt3dadd( -234.681, -485.004, 125.426, 0.07 ) }
    dend_8 { pt3dadd( -235.226, -485.363, 125.822, 0.22 ) }
    dend_8 { pt3dadd( -235.836, -485.833, 126.299, 0.07 ) }
    dend_8 { pt3dadd( -236.46, -486.348, 126.762, 0.07 ) }
    dend_8 { pt3dadd( -237.025, -486.834, 127.157, 0.59 ) }
    dend_8 { pt3dadd( -237.902, -487.575, 127.684, 0.15 ) }
    dend_8 { pt3dadd( -238.603, -488.157, 128.031, 0.74 ) }
    dend_8 { pt3dadd( -239.828, -489.109, 128.513, 0.07 ) }
    dend_8 { pt3dadd( -240.854, -489.86, 128.865, 0.07 ) }
    dend_8 { pt3dadd( -241.725, -490.455, 129.127, 0.29 ) }
    dend_8 { pt3dadd( -242.994, -491.262, 129.478, 0.07 ) }
    dend_8 { pt3dadd( -243.735, -491.702, 129.663, 0.44 ) }
    dend_8 { pt3dadd( -245.309, -492.569, 130.026, 0.07 ) }
    dend_8 { pt3dadd( -245.928, -492.893, 130.161, 0.07 ) }
    dend_8 { pt3dadd( -246.797, -493.341, 130.36, 0.37 ) }
    dend_8 { pt3dadd( -248.227, -494.099, 130.718, 0.07 ) }
    dend_8 { pt3dadd( -249.673, -494.893, 131.101, 0.07 ) }
    dend_8 { pt3dadd( -250.578, -495.427, 131.349, 0.37 ) }
    dend_8 { pt3dadd( -251.777, -496.216, 131.682, 0.15 ) }
    dend_8 { pt3dadd( -252.865, -497.023, 131.978, 0.07 ) }
    dend_8 { pt3dadd( -253.64, -497.634, 132.203, 0.22 ) }
    dend_8 { pt3dadd( -254.194, -498.116, 132.377, 0.52 ) }
    dend_8 { pt3dadd( -254.736, -498.668, 132.561, 0.88 ) }
    dend_8 { pt3dadd( -255.444, -499.52, 132.82, 0.44 ) }
    dend_8 { pt3dadd( -256.007, -500.367, 133.029, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_45 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_43 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_36 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_34 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_31 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_26 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_47 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_24 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_23 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_56 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_51 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_50 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_20 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_15 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_11 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_9 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_8 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_2 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_46 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_48 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_49 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_16 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_17 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_18 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_19 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_55 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_54 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_53 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_40 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_42 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_41 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_28 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_29 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_5 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_6 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_7 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, axon_0, axon_0, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_32 nseg = 3
    dend_45 nseg = 3
    dend_43 nseg = 3
    dend_36 nseg = 7
    dend_34 nseg = 15
    dend_33 nseg = 7
    dend_31 nseg = 7
    dend_26 nseg = 17
    dend_47 nseg = 5
    dend_38 nseg = 7
    dend_30 nseg = 3
    dend_27 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 5
    dend_56 nseg = 5
    dend_12 nseg = 5
    dend_3 nseg = 3
    dend_51 nseg = 7
    dend_50 nseg = 5
    dend_20 nseg = 3
    dend_15 nseg = 3
    dend_11 nseg = 9
    dend_4 nseg = 23
    dend_52 nseg = 3
    dend_9 nseg = 3
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L5_NBC_cb87ec754a_0_0


