// Cell: dSTUT214_L5_LBC_5dc27443f3_0_0
/*
{
  "id" : "dSTUT214_L5_LBC_5dc27443f3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.24986, 8.66179, -0.266886, 1.81928", "-1.99773, 7.71094, -0.243919, 3.13771", "-1.74561, 6.7601, -0.220952, 4.2898", "-1.49349, 5.80925, -0.197985, 6.24218", "-1.24137, 4.8584, -0.175018, 7.75134", "-0.989246, 3.90756, -0.152051, 8.81916", "-0.737124, 2.95671, -0.129084, 9.30643", "-0.485002, 2.00586, -0.106117, 9.79367", "-0.23288, 1.05502, -0.0831497, 10.3575", "0.0192416, 0.104171, -0.0601827, 10.6175", "0.271364, -0.846675, -0.0372157, 10.6286", "0.523485, -1.79752, -0.0142487, 10.564", "0.775607, -2.74837, 0.00871831, 10.4925", "1.02773, -3.69921, 0.0316853, 10.2088", "1.27985, -4.65006, 0.0546523, 9.65193", "1.53197, -5.60091, 0.0776193, 9.00896", "1.7841, -6.55175, 0.100586, 8.08521", "2.03622, -7.5026, 0.123553, 6.83318", "2.28834, -8.45345, 0.14652, 5.15146", "2.54046, -9.40429, 0.169487, 3.38897", "2.79258, -10.3551, 0.192454, 2.13858" ]
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-4.45367, 0.250762, 4.43561, 0.96", "-5.1011, -0.452215, 5.5644, 0.96", "-5.62356, -0.892925, 6.36104, 0.88", "-7.35458, -2.12826, 8.66297, 0.81", "-8.10575, -2.64012, 9.55781, 0.74", "-9.28661, -3.48502, 10.8817, 0.66", "-10.0016, -4.01379, 11.7959, 0.59", "-10.5748, -4.49533, 12.6781, 0.81", "-11.0175, -4.84589, 13.3666, 0.81", "-11.9645, -5.4514, 14.7774, 0.59", "-12.7814, -5.89612, 16.034, 1.33", "-14.7516, -6.81357, 19.2073, 1.55", "-16.1963, -7.41459, 21.7465, 0.74", "-16.7115, -7.57681, 22.6699, 0.59", "-17.4305, -7.73825, 23.947, 1.03", "-17.7231, -7.76499, 24.4477, 1.47", "-18.5481, -7.73654, 25.7881, 1.47", "-20.1819, -7.55396, 28.4406, 0.81", "-20.7695, -7.48831, 29.6054, 0.59", "-21.3088, -7.50955, 30.9721, 0.59", "-21.6418, -7.6067, 31.9614, 0.96", "-21.9402, -7.79385, 33.0274, 0.96", "-22.7193, -8.51118, 36.3953, 0.59", "-23.0338, -8.98957, 38.4459, 0.59", "-23.1753, -9.37389, 40.0363, 0.44", "-23.2219, -9.63773, 41.0358, 1.18", "-23.2375, -9.95348, 41.9201, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.51366, 8.37777, 1.68561, 3.24", "-1.51897, 8.95578, 1.79043, 3.24", "-1.53701, 10.9189, 2.14644, 2.58", "-1.55112, 12.4552, 2.42504, 2.36", "-1.56262, 13.7067, 2.65199, 2.36", "-1.57592, 15.1544, 2.91452, 2.36", "-1.58234, 15.8538, 3.04137, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.55634, -6.66873, 3.06561, 1.18", "5.77466, -6.74883, 3.26332, 1.18", "7.10852, -7.3568, 4.23113, 0.88", "7.8416, -7.69423, 4.64769, 1.11", "9.8816, -8.57769, 5.56587, 1.33", "10.8979, -8.9845, 5.9248, 1.33", "12.0515, -9.43366, 6.33275, 1.25", "13.4449, -9.96208, 6.75333, 0.96", "14.5774, -10.4091, 7.00832, 0.96", "15.5214, -10.8029, 7.1613, 1.25", "16.6813, -11.2526, 7.31858, 1.25", "18.3163, -11.7808, 7.63705, 1.47", "19.4072, -12.0656, 7.93153, 0.74", "20.248, -12.2186, 8.26986, 0.74", "21.4861, -12.3901, 8.86575, 0.59", "23.0884, -12.5894, 9.66719, 0.59", "23.7283, -12.6623, 9.97408, 0.81", "24.464, -12.7445, 10.2605, 0.81", "26.1856, -12.8756, 10.9872, 0.52", "26.8426, -12.8871, 11.2745, 0.52", "27.9088, -12.8571, 11.7304, 0.52", "28.7396, -12.9555, 11.9818, 0.59", "30.0297, -13.3369, 12.2242, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.77634, -10.3018, 1.87561, 2.43", "1.77634, -10.3018, 1.87561, 2.43", "1.8451, -11.4593, 1.60558, 2.06", "1.9478, -13.1883, 1.20226, 1.33", "2.04864, -14.8861, 0.806223, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.79258, -10.3551, 0.192454, 0.59", "6.63706, -24.8541, 0.192454, 0.59", "10.4816, -39.353, 0.192454, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.58234, 15.8538, 3.04137, 2.06", "-1.11944, 16.8163, 4.41452, 2.06", "-0.158836, 18.837, 6.95798, 1.92", "0.763237, 20.8615, 9.28975, 1.47", "1.17345, 21.8297, 10.3016, 1.47", "1.81435, 23.4567, 11.8368, 1.25", "2.28787, 24.6588, 12.971, 1.77", "2.76667, 25.966, 14.1349, 1.55", "3.33959, 27.5952, 15.2844, 1.62", "3.7116, 28.7538, 15.9543, 2.21", "4.09139, 30.0556, 16.6308, 2.65" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.58234, 15.8538, 3.04137, 0.59", "-3.62836, 16.0082, 3.05279, 0.59", "-4.73824, 16.0116, 3.08974, 0.59", "-5.70984, 15.9409, 3.07278, 0.59", "-7.71449, 15.7159, 2.87693, 0.52", "-9.05772, 15.5612, 2.67967, 0.81", "-10.0929, 15.4524, 2.50606, 1.18", "-10.8729, 15.3358, 2.37615, 1.18", "-12.7748, 15.021, 2.02323, 0.66", "-14.4511, 14.7752, 1.7241, 0.66", "-15.5546, 14.6501, 1.56038, 1.25", "-16.1778, 14.6001, 1.49293, 1.47", "-17.5871, 14.5347, 1.37231, 0.52", "-18.6095, 14.5164, 1.34342, 0.52", "-20.2398, 14.5221, 1.5067, 0.52", "-21.2508, 14.5039, 1.71388, 1.03", "-21.9678, 14.4583, 1.88848, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "30.0297, -13.3369, 12.2242, 0.52", "29.9242, -15.6066, 11.947, 0.52", "29.7239, -16.5314, 11.8501, 0.37", "29.049, -18.6334, 11.5748, 0.37", "28.4324, -20.1259, 11.2189, 0.59", "28.0603, -20.9367, 10.9641, 0.22", "27.1847, -22.72, 10.3849, 0.22", "26.5234, -23.8896, 9.92946, 0.22", "25.3368, -25.7747, 9.14349, 0.74", "23.5231, -28.3366, 8.04532, 0.29", "22.3233, -30.016, 7.29464, 0.07", "21.7625, -30.8653, 6.86943, 0.07" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "30.0297, -13.3369, 12.2242, 1.03", "32.0633, -13.3995, 13.7277, 1.03", "32.9835, -13.4713, 13.991, 0.52", "34.4453, -13.4448, 14.2271, 0.52", "37.3944, -13.2555, 14.5956, 0.37", "39.0833, -13.1397, 14.691, 0.37", "43.1751, -12.8583, 14.7513, 0.37", "53.7675, -12.2353, 14.1345, 0.37", "59.9738, -11.886, 13.4763, 0.66", "61.5994, -11.7838, 13.224, 0.66", "65.5383, -11.4762, 12.3086, 0.74", "67.2736, -11.2978, 11.7821, 0.74", "69.496, -11.0124, 10.8476, 0.37", "70.8663, -10.8263, 10.121, 0.37", "72.1966, -10.745, 9.49479, 0.37", "73.4749, -10.6087, 9.10928, 0.81", "75.1087, -10.2907, 8.95967, 0.81", "76.3795, -10.0133, 8.94951, 0.81", "78.3968, -9.69218, 9.10021, 0.37", "79.8908, -9.65055, 9.24884, 0.29", "81.545, -9.83338, 9.46192, 0.29", "83.5706, -10.256, 9.83774, 0.44", "85.0844, -10.673, 10.2567, 0.44", "87.4236, -11.4001, 11.0249, 0.44", "89.4829, -12.0689, 11.7273, 0.88", "90.359, -12.3194, 12.0701, 0.88", "92.4692, -12.6947, 13.1232, 0.52", "94.3754, -12.672, 14.3443, 0.74", "95.9348, -12.3353, 15.4341, 0.81", "96.8941, -11.9615, 16.0878, 0.81", "98.1132, -11.3797, 16.8615, 0.52", "99.6949, -10.6012, 17.7462, 0.52", "100.514, -10.2351, 18.1218, 0.74", "101.82, -9.78389, 18.5971, 0.74", "103.245, -9.48088, 19.0394, 0.59", "104.637, -9.38147, 19.3786, 0.59", "106.433, -9.47238, 19.695, 0.66", "107.775, -9.70346, 19.813, 0.88", "108.676, -9.95748, 19.8302, 0.88", "109.734, -10.4353, 19.7667, 0.52", "111.026, -11.2828, 19.5874, 0.52", "111.897, -12.0991, 19.3656, 0.52", "113.168, -13.7733, 18.8936, 0.44", "113.958, -14.9838, 18.4625, 0.44", "114.964, -16.649, 17.7441, 0.59", "115.38, -17.3475, 17.38, 0.74", "116.063, -18.3174, 16.7243, 0.52", "116.706, -18.609, 16.2304, 0.37", "119.045, -18.0616, 14.946, 0.52", "119.971, -17.7956, 14.4993, 0.52", "121.083, -17.5066, 14.0297, 0.52", "122.964, -17.1176, 13.3388, 0.52", "124.757, -16.7515, 12.7657, 0.52", "126.524, -16.4073, 12.2618, 0.66", "127.987, -16.1887, 11.9205, 0.66", "129.47, -15.9722, 11.5759, 0.37", "130.86, -15.8045, 11.2662, 0.37", "132.399, -15.6856, 10.9579, 0.37", "133.446, -15.63, 10.7222, 0.66", "133.983, -15.6176, 10.5674, 0.66", "134.641, -15.6365, 10.2742, 0.66", "135.293, -15.714, 9.88088, 0.66", "136.295, -15.9298, 9.16914, 0.37", "137.664, -16.3474, 8.15811, 0.37", "139.093, -16.7669, 7.20483, 0.37", "140.312, -17.0511, 6.48705, 0.22", "141.485, -17.2632, 5.92209, 0.37", "142.443, -17.3262, 5.60354, 0.44", "143.388, -17.2309, 5.45313, 0.44", "145.398, -16.7338, 5.4664, 0.52", "146.048, -16.516, 5.52266, 0.37", "147.068, -16.1251, 5.65047, 0.37", "148.063, -15.7441, 5.73898, 0.52", "148.77, -15.4518, 5.69801, 0.66", "149.346, -15.2013, 5.55054, 0.88", "149.751, -14.9976, 5.3729, 0.88", "150.276, -14.6948, 5.12076, 1.03", "150.94, -14.2555, 4.77361, 1.03", "151.963, -13.5802, 4.21905, 0.52", "153.183, -12.8395, 3.53431, 0.29", "154.227, -12.3541, 2.99804, 0.66", "155.037, -12.0512, 2.59561, 0.81", "155.832, -11.8205, 2.21432, 0.81", "156.552, -11.6441, 1.87476, 0.81", "157.725, -11.4165, 1.36741, 0.37", "159.979, -11.1638, 0.423533, 0.37", "161.102, -11.1026, -0.00458717, 0.44", "162.065, -11.0375, -0.34906, 0.59", "162.951, -10.9252, -0.645119, 0.59", "164.251, -10.6559, -1.04242, 0.59", "165.44, -10.2912, -1.36515, 0.52", "166.78, -9.77468, -1.70475, 0.74", "167.705, -9.44938, -1.88967, 0.74", "169.035, -9.07515, -2.19923, 0.37", "170.049, -8.85631, -2.47555, 0.44", "171.163, -8.67295, -2.82193, 0.66", "171.994, -8.58558, -3.09718, 0.74", "172.911, -8.58383, -3.39782, 0.74", "174.823, -8.68896, -4.04399, 0.59", "175.367, -8.73444, -4.24094, 0.59", "176.16, -8.78309, -4.55866, 0.59", "176.948, -8.82861, -4.92409, 0.37", "178.165, -8.85144, -5.52814, 0.59", "179.227, -8.82086, -6.09833, 0.81", "180.03, -8.76248, -6.48775, 0.81", "181.259, -8.68835, -7.01475, 0.52", "182.623, -8.57517, -7.51917, 0.37", "183.559, -8.467, -7.80182, 0.29", "184.264, -8.35985, -7.9535, 0.29", "185.851, -7.99275, -8.13975, 0.52", "187.425, -7.51412, -8.22182, 0.52", "188.479, -7.19508, -8.2198, 0.88", "189.34, -6.98285, -8.2343, 0.88", "190.002, -6.87651, -8.32125, 0.88", "191.452, -6.7298, -8.69249, 0.37", "192.45, -6.65848, -9.12572, 0.37", "193.85, -6.59116, -9.89943, 0.37", "195.519, -6.60114, -10.841, 0.29", "196.788, -6.65988, -11.6738, 0.29", "197.567, -6.67458, -12.2328, 0.52", "197.964, -6.66521, -12.5468, 0.74", "198.642, -6.59645, -13.1446, 0.44", "199.995, -6.36624, -14.3489, 0.37", "202.211, -5.90321, -16.205, 0.44", "203.461, -5.67204, -17.2532, 0.44", "204.705, -5.48211, -18.3645, 1.03", "205.943, -5.32296, -19.5433, 1.47" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "2.04864, -14.8861, 0.806223, 1.18", "1.78204, -16.3961, 2.29319, 1.18", "1.58777, -17.0808, 2.94724, 1.18", "1.09502, -18.8176, 4.6062, 1.18", "0.743625, -20.0562, 5.78926, 0.88", "0.52494, -20.827, 6.52551, 0.74", "0.334157, -21.4995, 7.16783, 1.03", "-0.203823, -22.7437, 8.17617, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "2.04864, -14.8861, 0.806223, 0.96", "1.57797, -16.1836, -1.59322, 0.96", "1.2494, -17.3523, -3.39581, 0.96", "1.19884, -17.5196, -3.62533, 1.4", "0.631605, -19.6796, -6.42285, 0.88", "0.540975, -20.1393, -6.98875, 0.88", "0.429729, -20.9493, -7.95686, 0.52", "0.38254, -22.0204, -9.14619, 0.52", "0.373107, -23.7992, -11.0192, 0.88", "0.44722, -26.0287, -13.2382, 0.52", "0.600115, -27.7294, -14.8463, 0.52", "0.740232, -28.7337, -15.8138, 0.52", "0.927438, -29.8289, -16.8442, 0.52", "1.09911, -30.7389, -17.6533, 0.52", "1.35761, -31.9367, -18.5865, 0.88", "1.5104, -32.8414, -19.1646, 1.11", "1.73746, -34.7677, -20.204, 0.44", "1.84423, -36.0151, -20.8273, 0.74", "1.92446, -36.9041, -21.2366, 0.96", "2.0323, -37.7866, -21.6164, 0.96", "2.2035, -39.1688, -22.2397, 0.66", "2.27509, -39.8335, -22.5627, 0.66", "2.46112, -41.4616, -23.4189, 0.44", "2.54865, -42.3175, -24.0811, 0.59", "2.65483, -43.1548, -24.913, 0.44", "2.78542, -44.5326, -26.9737, 0.37", "2.80024, -45.2787, -28.5765, 0.96", "2.78543, -45.5326, -29.2394, 1.33", "2.4823, -47.0553, -33.8022, 0.81", "2.36525, -47.4215, -34.9752, 1.11", "1.63585, -49.1657, -40.6443, 0.66", "0.947928, -50.5511, -44.9587, 1.55", "0.231195, -51.946, -48.8481, 0.96", "-0.547658, -53.3985, -52.4038, 0.81", "-0.887915, -54.0293, -53.6701, 0.96", "-1.28563, -54.7897, -54.8303, 0.37", "-1.87334, -56.084, -56.0616, 0.29", "-2.45712, -57.5801, -56.8967, 0.29", "-2.76143, -58.4873, -57.1668, 0.52", "-2.888, -59.0076, -57.2409, 0.52", "-3.35113, -61.2604, -57.5761, 0.29", "-3.46467, -61.8836, -57.69, 0.59", "-3.55141, -62.4484, -57.8028, 0.59", "-3.66792, -63.1682, -57.9684, 0.29", "-3.92097, -64.6374, -58.3733, 0.29", "-4.18595, -66.077, -58.8634, 0.59", "-4.29796, -66.5689, -59.0635, 0.81", "-4.90461, -68.8165, -60.0676, 0.22", "-5.24566, -69.9489, -60.6453, 0.22", "-5.75285, -71.5254, -61.538, 0.22", "-6.37457, -73.3794, -62.6506, 0.81", "-6.97464, -75.0476, -63.7454, 0.44", "-7.33358, -76.0077, -64.4227, 0.44", "-7.95405, -77.6235, -65.638, 0.88", "-8.32654, -78.7403, -66.4486, 0.74", "-8.46174, -79.2038, -66.7652, 0.74", "-9.10603, -81.4912, -68.1552, 0.44", "-9.36921, -82.4953, -68.6826, 0.44", "-9.62424, -83.3281, -69.0775, 0.29", "-10.064, -84.58, -69.5658, 0.29", "-10.9234, -86.6624, -70.2556, 0.29", "-11.4693, -87.8608, -70.591, 0.74", "-11.9403, -88.8526, -70.7843, 0.74", "-12.9031, -90.7394, -71.1264, 0.44", "-13.3533, -91.605, -71.2582, 0.44", "-13.8237, -92.5471, -71.3589, 0.29", "-14.0046, -92.9524, -71.3679, 0.66", "-14.4714, -94.0252, -71.3649, 0.37", "-14.8477, -94.897, -71.3284, 0.88", "-15.2297, -95.687, -71.2813, 0.88", "-15.8187, -96.7458, -71.2554, 0.59", "-16.4509, -97.7645, -71.2514, 0.29", "-17.1726, -98.7747, -71.3593, 0.66", "-17.5356, -99.2311, -71.475, 0.66", "-18.7115, -100.721, -72.152, 0.22", "-19.1196, -101.278, -72.4966, 0.22", "-19.4307, -101.718, -72.8161, 0.74", "-20.4087, -103.281, -74.1316, 0.44", "-20.9146, -104.231, -75.0295, 0.44", "-21.5043, -105.531, -76.3842, 0.29", "-21.6255, -105.919, -76.8452, 0.44" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.4816, -39.353, 0.192454, 0.15", "14.326, -53.852, 0.192454, 0.15", "18.1705, -68.351, 0.192454, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "4.09139, 30.0556, 16.6308, 0.81", "5.54511, 31.7982, 16.221, 0.81", "6.14289, 32.5317, 15.9723, 0.81", "7.22407, 33.7539, 15.437, 0.81", "8.68869, 35.2771, 14.6686, 0.96", "9.46564, 36.0434, 14.2508, 1.25", "10.1508, 36.6911, 13.8823, 1.25", "11.4112, 37.8786, 13.1566, 0.96", "12.4443, 38.8747, 12.5326, 0.81", "13.3775, 39.7739, 11.9434, 1.33", "13.979, 40.3472, 11.5189, 1.62", "14.8958, 41.1618, 10.8747, 0.74", "15.7506, 41.864, 10.2986, 0.59", "16.6084, 42.5859, 9.71075, 0.52", "17.544, 43.509, 8.90679, 0.44", "18.0891, 44.0859, 8.28143, 0.44", "19.0266, 45.0252, 6.89118, 0.74", "19.5703, 45.4946, 5.92618, 0.74", "20.4651, 46.064, 4.23499, 0.52", "21.2676, 46.4104, 2.79342, 0.88", "22.1002, 46.7215, 1.2592, 0.88", "22.7654, 47.09, -0.159877, 0.59", "23.0749, 47.3071, -0.887438, 0.59", "23.4584, 47.5686, -1.7258, 0.44", "24.133, 47.989, -2.75422, 0.44", "24.7296, 48.4305, -3.4218, 0.44", "26.017, 49.6124, -4.48465, 0.44", "27.0738, 50.7918, -5.23282, 0.74", "27.9359, 51.9934, -5.7894, 0.96", "29.4964, 54.6741, -6.66024, 0.44", "29.8399, 55.3683, -6.8276, 0.96", "30.4307, 56.6959, -7.07713, 0.37", "30.972, 58.1175, -7.26951, 0.37", "31.3925, 59.7427, -7.65168, 0.37", "31.5874, 61.0687, -8.11103, 0.74", "31.6592, 62.0197, -8.56778, 0.44", "31.717, 63.2318, -9.18871, 0.52", "31.7216, 64.1657, -9.68751, 1.11", "31.6744, 66.9373, -11.1784, 0.44", "31.6176, 68.4192, -11.9475, 0.29", "31.5073, 69.7883, -12.6318, 0.29", "31.4036, 70.803, -13.0968, 0.81", "31.313, 71.6785, -13.4645, 0.81", "31.2061, 73.0101, -13.9623, 0.52", "31.0859, 74.7894, -14.5253, 0.52", "30.9034, 76.8516, -15.2462, 0.44", "30.8316, 77.4093, -15.4548, 0.88", "30.7113, 78.3332, -15.8331, 0.88", "30.6003, 79.632, -16.3935, 0.37", "30.5905, 80.6216, -16.9158, 0.22", "30.6387, 81.5796, -17.4665, 0.22", "30.7407, 82.5418, -18.0532, 0.22", "30.9404, 83.7547, -18.8487, 0.22", "31.2949, 85.3576, -19.8541, 0.22", "31.9673, 87.6461, -21.2071, 0.81", "32.2291, 88.3259, -21.5678, 0.81", "32.8228, 89.5957, -22.1914, 0.81", "33.3896, 90.685, -22.6678, 0.44", "34.1678, 92.1284, -23.2216, 0.44", "34.4615, 92.67, -23.3841, 0.96", "35.0006, 93.6509, -23.5965, 0.52", "35.692, 94.8436, -23.8639, 0.37", "36.3034, 95.8989, -24.0924, 0.66", "36.7855, 96.7614, -24.318, 0.66", "37.26, 97.6613, -24.59, 0.29", "37.9589, 98.982, -24.9878, 0.29", "38.6484, 100.257, -25.3642, 0.59", "39.1355, 101.103, -25.6113, 0.37", "39.7444, 102.08, -25.9253, 0.66", "40.2569, 102.867, -26.1903, 0.66", "41.1618, 104.245, -26.6529, 0.29", "41.8303, 105.297, -26.9808, 0.29", "42.2562, 105.971, -27.1925, 0.29", "42.659, 106.542, -27.4036, 0.66", "42.9598, 106.942, -27.5656, 0.66", "43.3291, 107.47, -27.8344, 0.66", "43.9064, 108.38, -28.3647, 0.37", "44.5261, 109.417, -29.075, 0.37", "45.2328, 110.62, -30.0565, 0.96", "45.6268, 111.238, -30.6363, 0.96", "46.6568, 112.711, -32.1793, 0.29", "47.3344, 113.626, -33.2315, 0.29", "47.9716, 114.459, -34.176, 0.29", "48.9426, 115.61, -35.4067, 0.29", "49.5029, 116.199, -36.0, 0.74", "50.0269, 116.712, -36.4845, 0.74", "51.4866, 118.088, -37.5374, 0.29", "53.2898, 119.86, -38.6275, 0.29", "55.2094, 121.812, -39.5411, 0.29", "56.122, 122.8, -39.8868, 0.29", "56.9366, 123.736, -40.1554, 0.29", "58.2818, 125.328, -40.4735, 0.66", "58.9502, 126.081, -40.6215, 0.66", "59.7877, 126.916, -40.8635, 0.37", "60.6405, 127.712, -41.2392, 1.03", "61.4333, 128.364, -41.6658, 1.03", "62.6634, 129.257, -42.4667, 0.66", "65.066, 130.866, -44.3423, 0.22", "67.0659, 132.159, -46.0418, 0.52", "68.7891, 133.286, -47.6201, 0.29", "69.9122, 134.044, -48.7355, 0.29", "70.915, 134.82, -49.8317, 0.66", "71.3296, 135.226, -50.319, 0.66", "72.1892, 136.27, -51.1094, 0.22", "72.7019, 136.994, -51.5161, 0.52", "73.1354, 137.65, -51.7981, 0.52", "75.0609, 140.686, -52.787, 0.22", "76.5292, 142.994, -53.4019, 0.22", "78.7391, 146.441, -54.1979, 0.22", "79.8971, 148.251, -54.5593, 0.52", "80.5515, 149.259, -54.7206, 0.22", "81.4349, 150.588, -54.8214, 0.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.09139, 30.0556, 16.6308, 0.66", "3.07023, 32.7975, 17.4037, 0.66", "2.88033, 33.683, 17.6305, 0.74", "2.73931, 34.8745, 17.964, 0.74", "2.58464, 36.0436, 18.1289, 1.03", "2.43723, 37.1617, 18.2321, 1.03", "2.25213, 38.4773, 18.3216, 0.74", "2.1846, 40.0465, 18.4689, 1.11", "2.15911, 41.4563, 18.5167, 1.47", "2.09028, 44.3614, 18.348, 1.62", "2.03112, 45.2567, 18.2155, 1.62", "1.95394, 45.8104, 18.0971, 1.62" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-21.9678, 14.4583, 1.88848, 0.29", "-22.5702, 14.6386, 3.12915, 0.29", "-23.085, 14.7861, 3.99319, 0.88", "-23.6471, 14.9221, 4.85697, 1.11", "-25.6071, 15.3491, 7.68147, 1.03", "-26.2271, 15.4578, 8.53705, 0.59", "-26.7198, 15.5279, 9.24053, 0.29", "-27.3523, 15.6055, 10.249, 0.29", "-27.7042, 15.6572, 10.825, 0.52", "-27.9259, 15.6996, 11.1733, 0.74", "-28.4562, 15.8172, 11.8117, 0.74", "-29.5096, 16.0859, 13.1322, 0.37", "-29.9285, 16.2136, 13.6853, 0.59", "-30.2145, 16.323, 14.0412, 0.59", "-30.8082, 16.5794, 14.6912, 0.29", "-31.6315, 16.9465, 15.5136, 0.59", "-32.0246, 17.1124, 15.8283, 0.37", "-32.9836, 17.4526, 16.4145, 0.29", "-33.8622, 17.7198, 16.8775, 1.25", "-34.2294, 17.8143, 17.0418, 1.62", "-34.6422, 17.9232, 17.1835, 1.62", "-35.8887, 18.2789, 17.5286, 0.29", "-36.6938, 18.5031, 17.7287, 0.29", "-37.6017, 18.7555, 17.9304, 0.52", "-38.0862, 18.8933, 18.0344, 0.59", "-39.5529, 19.3223, 18.3369, 0.22", "-40.2705, 19.5442, 18.4757, 0.74", "-40.9292, 19.7675, 18.6119, 0.74", "-41.6282, 20.0138, 18.7566, 0.22", "-42.0761, 20.1713, 18.8492, 0.37", "-42.509, 20.3359, 18.9389, 0.37" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-21.9678, 14.4583, 1.88848, 0.44", "-22.9206, 14.0397, 1.82799, 0.44", "-23.5715, 13.7364, 1.79523, 0.44", "-24.1853, 13.4464, 1.7729, 0.96", "-24.7659, 13.1579, 1.74191, 1.25", "-25.5616, 12.7395, 1.70285, 0.74", "-26.1006, 12.4457, 1.68848, 0.59", "-26.6205, 12.1537, 1.66681, 0.59", "-27.1179, 11.8765, 1.62513, 0.59", "-27.8991, 11.463, 1.52788, 0.44", "-28.9516, 10.9411, 1.36261, 0.81", "-30.2924, 10.3286, 1.06164, 0.81", "-30.9466, 10.0381, 0.834745, 0.81", "-31.6069, 9.74627, 0.514499, 0.44", "-32.1149, 9.53664, 0.227977, 0.44", "-32.7607, 9.29447, -0.140964, 0.44", "-33.7929, 8.95047, -0.733897, 0.44", "-35.035, 8.59653, -1.40694, 0.88", "-35.9528, 8.36372, -1.81988, 0.88", "-36.8539, 8.15952, -2.14083, 0.52", "-38.2842, 7.89204, -2.51334, 0.52", "-38.8002, 7.81472, -2.60148, 0.52", "-39.6689, 7.70553, -2.61952, 0.88", "-40.3128, 7.6291, -2.55658, 0.88", "-40.9918, 7.52738, -2.44767, 1.18", "-41.6249, 7.39343, -2.32892, 1.18", "-42.5595, 7.10603, -2.094, 0.74", "-43.5003, 6.72782, -1.75399, 0.52", "-44.4036, 6.30283, -1.34677, 0.52", "-45.1004, 5.97569, -1.00042, 0.88", "-46.046, 5.56989, -0.51167, 0.88", "-47.0752, 5.16693, 0.0282788, 0.88", "-48.2968, 4.73434, 0.665002, 1.03", "-48.9581, 4.49841, 0.985579, 0.96", "-49.832, 4.18448, 1.39508, 0.74", "-51.0347, 3.77712, 1.91161, 0.52", "-51.5364, 3.60957, 2.08874, 0.81", "-52.115, 3.40554, 2.23113, 0.81", "-53.0249, 3.02583, 2.38675, 0.52", "-53.3205, 2.8762, 2.43494, 0.88", "-53.6783, 2.65604, 2.49088, 1.18", "-54.496, 2.13738, 2.62522, 1.18", "-55.509, 1.54595, 2.80602, 0.59", "-55.9711, 1.30136, 2.89395, 0.74", "-56.5169, 1.04582, 3.00287, 0.74", "-57.2752, 0.702189, 3.19661, 0.44", "-57.8101, 0.455439, 3.35609, 0.44", "-58.3314, 0.197696, 3.52825, 0.74", "-58.92, -0.106423, 3.69766, 0.74", "-59.4668, -0.395813, 3.90142, 0.74", "-60.6334, -1.01988, 4.41956, 0.29", "-61.3576, -1.43636, 4.79059, 0.37", "-62.1048, -1.90893, 5.20762, 0.37", "-63.0201, -2.51526, 5.74535, 0.37", "-64.6363, -3.60883, 6.6473, 0.74", "-65.1502, -3.96838, 6.89612, 1.03", "-66.2354, -4.77199, 7.37752, 0.59", "-67.1427, -5.47604, 7.79714, 0.44", "-67.7183, -5.92828, 8.06417, 0.88", "-68.5239, -6.5566, 8.41918, 0.74", "-69.3322, -7.15253, 8.65546, 0.37", "-70.2998, -7.7653, 8.92261, 0.37", "-70.8111, -8.00215, 9.04945, 0.81", "-71.2425, -8.12743, 9.15924, 1.03", "-71.6545, -8.18904, 9.28106, 1.03", "-72.1934, -8.20801, 9.46521, 0.66", "-73.0075, -8.17693, 9.72384, 0.37", "-73.7666, -8.12441, 9.90729, 0.59", "-74.451, -8.06306, 10.0549, 0.59", "-75.1072, -7.99942, 10.2083, 0.37", "-75.8303, -7.94308, 10.4132, 0.66", "-76.4057, -7.91733, 10.546, 0.88", "-76.6732, -7.9092, 10.5818, 0.88", "-77.967, -7.84495, 10.6387, 0.29", "-78.7725, -7.80279, 10.5971, 0.29", "-79.8487, -7.74605, 10.4307, 0.29", "-81.513, -7.67992, 10.0298, 0.44", "-82.7312, -7.68766, 9.65458, 0.44", "-83.2258, -7.72999, 9.45987, 0.44", "-83.512, -7.7843, 9.31503, 0.59", "-84.053, -7.9134, 9.01665, 0.59", "-84.4326, -8.01386, 8.82306, 0.59", "-85.1447, -8.23236, 8.56732, 0.37", "-85.7376, -8.44086, 8.34795, 0.37", "-86.2705, -8.63248, 8.1331, 0.66", "-86.7876, -8.82327, 7.87696, 0.66", "-87.2842, -9.02426, 7.59964, 0.66", "-88.2005, -9.42453, 7.03184, 0.44", "-88.9902, -9.78498, 6.51638, 0.66", "-89.4499, -10.0103, 6.17372, 0.66", "-90.6072, -10.5868, 5.24457, 0.29", "-91.2823, -10.9187, 4.70006, 0.29", "-91.8881, -11.2151, 4.22209, 0.66", "-92.3314, -11.4202, 3.90588, 0.88", "-93.922, -12.0904, 2.88523, 0.44", "-94.4802, -12.2979, 2.5391, 0.29", "-95.3292, -12.5656, 2.10825, 0.29", "-95.9919, -12.7636, 1.8124, 0.66", "-96.6129, -12.9673, 1.55033, 0.66", "-97.0704, -13.1474, 1.39796, 0.66", "-98.0447, -13.6045, 1.04171, 0.37", "-99.0483, -14.0966, 0.556732, 0.29", "-99.4472, -14.279, 0.328808, 0.29", "-100.501, -14.6974, -0.368608, 0.29", "-101.504, -15.0302, -1.09203, 1.25", "-103.681, -15.5513, -2.71877, 0.29", "-104.357, -15.6585, -3.24908, 0.29", "-104.748, -15.689, -3.56842, 0.59", "-105.549, -15.7018, -4.19075, 0.44", "-106.002, -15.6853, -4.50506, 0.22", "-106.521, -15.6485, -4.81641, 0.81", "-107.887, -15.5503, -5.30458, 0.44", "-108.625, -15.5229, -5.48534, 0.59", "-109.05, -15.5206, -5.55422, 0.59", "-110.095, -15.5356, -5.57389, 0.29", "-110.993, -15.5513, -5.48778, 0.59", "-111.514, -15.5583, -5.34585, 0.59", "-112.46, -15.5596, -4.93665, 0.29", "-113.188, -15.556, -4.55079, 0.29", "-114.421, -15.5204, -3.76365, 0.74", "-114.979, -15.4883, -3.3443, 0.74", "-115.923, -15.3934, -2.57383, 0.37", "-116.61, -15.2665, -1.98486, 0.37", "-117.183, -15.0869, -1.46759, 0.44", "-117.82, -14.7945, -0.909843, 0.74", "-118.223, -14.5513, -0.600688, 0.74", "-118.687, -14.2149, -0.280402, 0.37", "-119.126, -13.826, -0.0171985, 0.59", "-119.625, -13.3003, 0.27646, 0.37", "-120.015, -12.8561, 0.483621, 0.29", "-120.292, -12.5283, 0.618472, 0.52", "-120.661, -12.108, 0.789278, 0.74", "-121.234, -11.5194, 1.04397, 0.29", "-121.543, -11.2385, 1.17437, 0.74", "-121.99, -10.8816, 1.347, 0.74", "-122.619, -10.4243, 1.55699, 0.29", "-123.277, -9.98908, 1.74292, 0.29", "-123.954, -9.60148, 1.88786, 0.29", "-124.719, -9.21657, 2.01013, 0.29", "-125.49, -8.85798, 2.08269, 0.29", "-126.318, -8.50576, 2.10711, 0.96", "-126.723, -8.35598, 2.09842, 0.96", "-127.94, -7.9545, 2.03196, 0.29", "-128.288, -7.85386, 2.00392, 0.66", "-129.009, -7.67887, 1.9446, 0.66", "-129.809, -7.51648, 1.89767, 0.29", "-130.407, -7.42722, 1.89908, 0.29", "-130.781, -7.38043, 1.90723, 0.66", "-131.191, -7.33445, 1.92635, 0.88", "-131.846, -7.26369, 1.96679, 0.66", "-132.329, -7.19045, 1.99845, 0.15", "-133.017, -7.04288, 2.03842, 0.15", "-133.676, -6.86351, 2.05841, 0.15", "-134.214, -6.6873, 2.06485, 0.81", "-134.67, -6.51543, 2.03988, 1.03", "-135.883, -6.04809, 1.91899, 0.29", "-136.518, -5.80273, 1.84303, 0.81", "-137.006, -5.60527, 1.76605, 0.81", "-137.927, -5.24733, 1.61373, 0.29", "-138.878, -4.92085, 1.4005, 0.29", "-139.575, -4.72938, 1.2213, 0.29", "-140.427, -4.56748, 0.964675, 0.29", "-141.033, -4.50647, 0.693164, 1.18", "-141.58, -4.51442, 0.357679, 1.18", "-142.403, -4.64404, -0.327498, 0.52", "-142.867, -4.76923, -0.78147, 0.88", "-143.293, -4.92158, -1.2782, 0.88", "-144.429, -5.42254, -2.81035, 0.44", "-144.954, -5.6601, -3.53819, 0.44", "-145.385, -5.83387, -4.16248, 0.74", "-145.659, -5.91515, -4.54872, 0.74", "-146.377, -6.05859, -5.51021, 0.44", "-146.908, -6.12185, -6.12286, 0.44", "-147.377, -6.13763, -6.54298, 0.88", "-147.853, -6.13431, -6.90978, 0.88", "-148.36, -6.1253, -7.26252, 0.88", "-149.366, -6.14329, -7.9748, 0.52", "-150.228, -6.20975, -8.58368, 0.52", "-150.751, -6.29432, -8.94904, 0.59", "-151.296, -6.4366, -9.33388, 0.44", "-151.872, -6.62403, -9.7227, 0.44", "-152.598, -6.85535, -10.1767, 0.44", "-153.32, -7.05362, -10.5896, 0.88", "-153.791, -7.17448, -10.8578, 0.88", "-154.408, -7.32674, -11.2163, 0.37", "-155.056, -7.45155, -11.5975, 0.37", "-155.987, -7.5862, -12.1159, 0.59", "-157.161, -7.69035, -12.7085, 0.37", "-157.573, -7.71965, -12.9076, 0.74", "-158.297, -7.7449, -13.2458, 0.74", "-159.494, -7.73374, -13.7537, 0.37", "-159.949, -7.72609, -13.9203, 0.59", "-161.01, -7.69525, -14.2369, 0.29", "-161.791, -7.65798, -14.4019, 0.29", "-162.501, -7.65109, -14.5158, 0.29", "-163.511, -7.67981, -14.6449, 0.59", "-163.845, -7.70297, -14.6746, 1.11", "-164.109, -7.72551, -14.6973, 1.4", "-164.916, -7.84377, -14.756, 0.81", "-165.757, -8.00489, -14.8251, 0.37", "-166.523, -8.21861, -14.8998, 0.22", "-167.092, -8.42054, -14.9571, 0.22", "-168.026, -8.81507, -15.086, 0.22", "-169.055, -9.32831, -15.267, 0.22", "-169.259, -9.44677, -15.3114, 0.44", "-169.619, -9.68821, -15.4058, 0.44", "-169.991, -9.98248, -15.5446, 0.22", "-170.618, -10.5301, -15.8711, 0.44", "-170.905, -10.7767, -16.074, 0.44", "-171.43, -11.1808, -16.4688, 0.22", "-171.954, -11.5329, -16.827, 0.22", "-172.696, -11.9556, -17.2756, 0.59", "-172.913, -12.0589, -17.3947, 0.59", "-174.315, -12.5457, -18.1986, 0.29", "-174.813, -12.7024, -18.4824, 0.29", "-175.567, -12.9108, -18.9041, 0.29", "-176.083, -13.0391, -19.1706, 0.81", "-176.544, -13.1413, -19.3789, 0.81", "-178.38, -13.4418, -20.2337, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "205.943, -5.32296, -19.5433, 0.29", "206.975, -6.20396, -19.0653, 0.29", "207.628, -6.76596, -18.9218, 0.29", "208.578, -7.68196, -18.9878, 0.52", "208.827, -7.90872, -18.9508, 0.52", "209.128, -8.17433, -18.8688, 0.37", "209.693, -8.67159, -18.7153, 0.52", "210.954, -9.69953, -18.4702, 0.37", "212.174, -10.6962, -18.2646, 0.88", "214.58, -12.7755, -17.7949, 0.29", "214.893, -13.0525, -17.6875, 0.74" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "205.943, -5.32296, -19.5433, 0.29", "206.795, -5.12411, -20.33, 0.29", "207.165, -5.07225, -20.6166, 0.44", "207.702, -4.999, -21.0018, 0.44", "208.271, -4.90163, -21.388, 0.74", "209.048, -4.74447, -21.8989, 0.74", "209.815, -4.56634, -22.3964, 0.44", "210.67, -4.367, -22.9045, 0.66", "211.114, -4.24341, -23.167, 0.66", "211.841, -3.9668, -23.6631, 0.74", "212.165, -3.79902, -23.9177, 0.29", "212.52, -3.55829, -24.2384, 0.37", "212.945, -3.21921, -24.6046, 0.81", "213.182, -3.01603, -24.7877, 1.03", "214.392, -1.98859, -25.5877, 0.29", "215.076, -1.40313, -25.9833, 0.29", "216.082, -0.526423, -26.5027, 0.29", "216.958, 0.239785, -26.9459, 0.29", "217.686, 0.87977, -27.3275, 1.03", "218.095, 1.24409, -27.5662, 1.03", "218.519, 1.61425, -27.8288, 1.03", "218.86, 1.88617, -28.1103, 0.66", "219.531, 2.38605, -28.8338, 0.52", "219.92, 2.73288, -29.4069, 0.52", "220.264, 3.11773, -30.0322, 0.37", "220.589, 3.52845, -30.6468, 0.37", "220.852, 3.83701, -31.0932, 0.29", "221.321, 4.32994, -31.8087, 0.29", "221.967, 4.9766, -32.6862, 0.29", "222.217, 5.23566, -33.0446, 0.29", "222.516, 5.59415, -33.5475, 0.29", "222.875, 6.06326, -34.2383, 0.81", "223.26, 6.52317, -34.9609, 1.03", "223.547, 6.76302, -35.3842, 1.03", "224.205, 7.15967, -36.1267, 0.29", "224.749, 7.4848, -36.6353, 0.74", "225.061, 7.69081, -36.8851, 1.11", "225.438, 7.9503, -37.1314, 1.11", "226.415, 8.57856, -37.629, 0.29", "227.154, 8.98342, -37.9285, 0.29", "227.996, 9.31633, -38.2006, 0.29", "228.659, 9.50865, -38.4026, 0.29", "229.223, 9.63105, -38.5846, 0.74", "229.872, 9.73291, -38.8353, 0.74", "230.735, 9.80968, -39.2183, 0.37", "231.829, 9.8344, -39.7479, 0.96", "232.266, 9.82042, -39.9975, 0.96", "233.034, 9.76937, -40.4855, 0.29", "233.831, 9.7116, -41.0957, 0.29", "234.13, 9.69394, -41.3493, 0.59", "234.584, 9.68611, -41.7822, 0.59", "235.401, 9.74636, -42.638, 0.29", "235.893, 9.79096, -43.1771, 0.29", "236.776, 9.85414, -44.2012, 1.18" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-0.203823, -22.7437, 8.17617, 1.03", "1.00543, -25.7368, 8.94287, 1.03", "1.90461, -27.6153, 9.40017, 1.03", "2.50123, -28.7239, 9.65846, 0.74", "3.33953, -30.1313, 9.96007, 0.74", "3.96431, -31.1441, 10.1562, 1.03", "4.49024, -32.0136, 10.3054, 1.25", "4.93274, -32.7181, 10.4592, 1.33", "5.15143, -33.1285, 10.4999, 1.62", "5.55208, -34.0495, 10.5543, 1.62", "5.87668, -35.0124, 10.5769, 1.62", "6.23443, -36.438, 10.5945, 1.47", "6.48942, -37.8358, 10.6469, 0.59", "6.65702, -39.1955, 10.7052, 0.59", "6.7567, -40.4382, 10.76, 0.88", "6.81316, -41.3477, 10.798, 1.25", "6.88102, -42.1521, 10.821, 1.55", "7.01946, -43.4645, 10.8398, 1.55", "7.18244, -44.8069, 10.8424, 0.96", "7.33906, -46.0675, 10.8389, 0.74", "7.41271, -46.7641, 10.8354, 0.74", "7.54787, -48.0534, 10.8208, 0.74", "7.69527, -49.4693, 10.7906, 1.33", "7.90844, -51.329, 10.7172, 1.18", "8.10337, -52.8988, 10.6893, 1.18", "8.19556, -53.8103, 10.6819, 1.62" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.203823, -22.7437, 8.17617, 1.03", "-0.924572, -23.9103, 10.3521, 1.03", "-1.36766, -24.7343, 11.7235, 1.03", "-2.14894, -26.2145, 14.0022, 0.81", "-2.91266, -27.6413, 16.1238, 0.66", "-3.17115, -28.1374, 16.8302, 0.66", "-3.41259, -28.6295, 17.493, 0.66", "-3.66096, -29.3366, 18.3351, 0.52", "-3.84575, -30.1542, 19.1763, 0.52", "-3.97463, -31.2234, 20.0555, 0.81", "-4.00289, -31.9964, 20.5669, 0.66", "-4.01981, -32.672, 20.9697, 0.96", "-4.04431, -34.1842, 21.8244, 0.52", "-4.00002, -35.0976, 22.3266, 1.11", "-3.89598, -35.9162, 22.7111, 1.03", "-3.79471, -36.541, 22.942, 0.88", "-3.71969, -37.0643, 23.1117, 0.88", "-3.66798, -37.9316, 23.3412, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "1.95394, 45.8104, 18.0971, 0.74", "3.79473, 49.0905, 20.5182, 0.74", "4.68794, 50.9882, 21.8447, 0.59", "5.18457, 52.2503, 22.718, 0.59", "5.8323, 54.3723, 24.1341, 0.59", "6.17349, 55.9079, 25.1013, 0.59", "6.40634, 57.4732, 26.008, 0.59", "6.47417, 60.3793, 27.3009, 0.66", "6.41753, 61.6798, 27.7968, 0.66", "6.15468, 63.5763, 28.5029, 1.03", "5.76566, 65.3408, 29.1133, 1.03", "5.16867, 67.4529, 29.7851, 0.44", "4.80326, 68.4066, 30.0013, 0.59", "4.00794, 69.8767, 30.107, 0.59", "3.23129, 71.0907, 30.0684, 1.11", "2.84154, 71.6418, 29.9917, 1.33", "2.2459, 72.4829, 29.8202, 1.33", "1.00668, 74.2964, 29.3586, 0.81", "0.187381, 75.8256, 28.9337, 0.44", "-0.223319, 77.1558, 28.4427, 0.44", "-0.455999, 78.5752, 27.6904, 0.74", "-0.562784, 79.9788, 26.8571, 0.66", "-0.577742, 80.675, 26.4236, 0.66", "-0.635742, 82.2499, 25.5672, 0.52", "-0.856084, 84.1095, 24.6553, 0.37", "-1.38234, 86.4424, 23.6307, 0.37", "-1.64085, 87.4458, 23.3058, 0.37", "-2.06022, 89.1166, 22.9392, 0.37", "-2.61714, 91.842, 22.5527, 0.37", "-2.76786, 93.5266, 22.5414, 0.88", "-2.66333, 94.6368, 22.7044, 0.88", "-2.10342, 96.9315, 23.3088, 0.74", "-1.59216, 98.4127, 23.817, 0.59", "-0.805263, 100.115, 24.5998, 0.59", "0.761544, 102.885, 26.1368, 0.81", "2.00798, 104.921, 27.4326, 0.59", "2.5806, 105.878, 28.1166, 0.59", "3.05824, 106.767, 28.8185, 1.11", "3.68694, 108.205, 30.0611, 0.88", "4.02969, 109.425, 31.15, 0.88", "4.13953, 110.812, 32.1883, 0.74", "4.11838, 112.239, 33.0799, 0.59", "4.08654, 113.364, 33.6593, 0.44", "4.02839, 114.526, 34.1135, 0.81", "3.9361, 115.682, 34.4219, 1.03", "3.71057, 117.707, 34.8545, 0.52", "3.55191, 118.817, 35.0541, 0.52", "3.37936, 119.926, 35.2464, 0.96", "3.1632, 121.191, 35.4895, 0.96", "2.89866, 122.475, 35.7741, 0.66", "2.45539, 124.273, 36.226, 0.37", "2.13788, 125.389, 36.5319, 0.37", "1.92916, 126.145, 36.7256, 0.37", "1.57796, 127.472, 37.0521, 0.37", "1.31924, 128.548, 37.2959, 0.66", "1.09851, 129.717, 37.5104, 0.66", "0.983328, 130.866, 37.6535, 0.81", "0.931396, 132.118, 37.8044, 0.52", "0.885846, 133.365, 37.9865, 0.37", "0.800712, 134.389, 38.1914, 0.37", "0.682237, 135.215, 38.3994, 0.66", "0.445369, 136.418, 38.743, 0.66", "0.16683, 137.821, 39.1211, 0.37", "0.0213242, 138.708, 39.315, 0.37", "-0.146707, 140.478, 39.5632, 0.96", "-0.192599, 141.379, 39.6529, 1.33", "-0.252704, 142.591, 39.7428, 1.33", "-0.310322, 144.332, 39.8817, 1.03", "-0.316547, 145.932, 40.0004, 0.74", "-0.268709, 147.452, 40.125, 0.44", "-0.209599, 148.593, 40.2452, 0.44", "-0.166857, 149.69, 40.3629, 0.44", "-0.145936, 151.672, 40.5869, 0.66", "-0.153669, 152.604, 40.7255, 0.96", "-0.179206, 153.093, 40.8136, 0.96", "-0.359339, 154.907, 41.0929, 0.52", "-0.551793, 156.427, 41.2713, 0.52", "-0.793643, 158.171, 41.4115, 0.52", "-1.00003, 159.615, 41.442, 0.52", "-1.28074, 162.049, 41.5499, 0.74", "-1.42629, 163.597, 41.7088, 0.52", "-1.5057, 164.715, 41.89, 0.52", "-1.55943, 165.954, 42.152, 0.52", "-1.62687, 167.481, 42.4195, 0.81", "-1.7431, 169.669, 42.6784, 0.81", "-1.80779, 171.091, 42.8075, 0.59", "-1.90827, 172.262, 42.8738, 0.37", "-2.05003, 173.705, 42.9408, 0.37", "-2.31402, 175.934, 43.03, 0.37", "-2.46363, 177.05, 43.0567, 0.52", "-2.59981, 178.35, 43.0191, 0.52", "-2.73467, 180.53, 42.9455, 0.52", "-2.80471, 182.845, 42.9602, 0.74", "-2.79998, 184.33, 43.0382, 0.96", "-2.74411, 185.896, 43.1971, 0.37", "-2.6661, 187.639, 43.3991, 0.29", "-2.59526, 188.739, 43.5246, 0.29", "-2.4884, 190.339, 43.7001, 0.81", "-2.48991, 191.032, 43.7264, 0.81", "-2.52407, 191.787, 43.7709, 0.96", "-2.59922, 192.379, 43.8421, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "1.95394, 45.8104, 18.0971, 0.66", "0.470217, 47.293, 16.4667, 0.66", "-0.462294, 48.1418, 15.4542, 0.66", "-0.899791, 48.5639, 14.9314, 0.66", "-1.54496, 49.2232, 14.0952, 0.52", "-2.50462, 50.2141, 12.8414, 0.81", "-2.93368, 50.6973, 12.2601, 0.81", "-3.48183, 51.4341, 11.4119, 0.59", "-4.01861, 52.2391, 10.4096, 0.59", "-4.42466, 52.9122, 9.55182, 0.44", "-4.66556, 53.3589, 9.02976, 0.44", "-5.0577, 54.2228, 8.12963, 0.96", "-5.26455, 54.7211, 7.59303, 1.18", "-5.75713, 55.9636, 6.19808, 0.88", "-6.13735, 56.9533, 5.04822, 0.37", "-6.34756, 57.607, 4.25372, 1.03", "-6.50531, 58.2719, 3.40722, 1.03", "-6.74022, 59.4014, 1.82682, 0.52", "-6.81272, 59.8555, 1.1932, 0.52", "-6.85565, 60.2035, 0.715275, 0.81", "-6.9256, 60.6384, 0.110003, 0.81", "-7.05764, 61.1006, -0.555442, 0.74", "-7.55144, 62.1779, -1.9982, 1.03", "-7.97715, 62.7865, -2.75099, 1.03", "-8.77147, 63.5528, -3.72313, 0.59", "-9.3714, 64.022, -4.32432, 0.81", "-10.1103, 64.473, -4.97986, 0.81", "-10.404, 64.6231, -5.21464, 0.66", "-10.9311, 64.8666, -5.60414, 0.66", "-12.2611, 65.4217, -6.60193, 0.52", "-13.1327, 65.7733, -7.26859, 0.37", "-14.6709, 66.4414, -8.58061, 0.29", "-15.0119, 66.5916, -8.88872, 0.29", "-15.5638, 66.8266, -9.38987, 0.29", "-16.1562, 67.0871, -9.91519, 0.29", "-17.0959, 67.5151, -10.6351, 0.81", "-17.8866, 67.8936, -11.1713, 0.81", "-19.1068, 68.5975, -11.8986, 0.59", "-19.3713, 68.7646, -12.0481, 0.59", "-20.0592, 69.2463, -12.3776, 0.29", "-20.7882, 69.7474, -12.927, 0.52", "-20.9203, 69.8319, -13.0575, 0.81", "-21.3616, 70.0844, -13.5463, 0.81", "-21.9034, 70.3597, -14.2024, 0.74", "-22.1684, 70.4647, -14.531, 0.88", "-25.5149, 71.4313, -18.7168, 0.88", "-26.4498, 71.6129, -19.871, 0.66", "-27.0634, 71.6974, -20.5893, 0.88", "-27.9877, 71.783, -21.6206, 0.96", "-28.702, 71.8439, -22.3439, 0.52", "-29.2422, 71.895, -22.8074, 0.74", "-30.4265, 72.0405, -23.368, 0.44", "-31.0989, 72.1756, -23.6079, 0.29", "-31.7308, 72.3423, -23.7786, 0.29", "-32.8131, 72.6341, -23.9961, 1.18", "-33.2882, 72.7467, -24.0956, 1.92", "-34.1861, 72.8566, -24.3619, 1.47", "-35.4992, 72.8826, -24.8287, 0.37", "-36.0727, 72.8307, -25.0546, 0.29", "-37.1413, 72.5903, -25.473, 0.29", "-38.3475, 72.1457, -25.9753, 0.29", "-40.0969, 71.2257, -26.834, 0.29", "-40.9505, 70.6357, -27.301, 0.29", "-41.6027, 70.1392, -27.6782, 0.29", "-42.4421, 69.5442, -28.1816, 0.29", "-43.0234, 69.1969, -28.5131, 0.29", "-44.3814, 68.5371, -29.2375, 0.29", "-45.0183, 68.2565, -29.5837, 0.29", "-46.0454, 67.9272, -30.1815, 0.29", "-46.6281, 67.8532, -30.5053, 0.52", "-47.261, 67.9047, -30.805, 0.52", "-48.2412, 68.1174, -31.1822, 0.52", "-49.3428, 68.4707, -31.5184, 0.66", "-49.9131, 68.6789, -31.6779, 0.96", "-50.4421, 68.8794, -31.8037, 1.18", "-51.9875, 69.5474, -32.1279, 0.52", "-53.0357, 70.0849, -32.3743, 0.29", "-53.6043, 70.4411, -32.5391, 0.52", "-53.841, 70.6293, -32.6214, 0.74", "-54.3282, 71.0527, -32.8221, 0.74", "-55.1547, 71.7746, -33.1954, 0.44", "-56.0299, 72.5285, -33.6325, 0.44", "-56.9572, 73.2935, -34.1214, 0.37", "-57.704, 73.8602, -34.5009, 0.37", "-58.623, 74.4566, -34.9561, 0.37", "-59.8893, 75.2029, -35.6518, 0.37", "-60.723, 75.6541, -36.1064, 0.88", "-60.9482, 75.7723, -36.2171, 0.88", "-61.726, 76.1495, -36.5412, 0.66", "-63.0784, 76.7392, -37.0174, 0.96", "-64.7114, 77.3453, -37.3674, 0.81", "-65.744, 77.624, -37.4244, 1.11", "-66.8496, 77.8079, -37.3027, 0.59", "-68.1944, 77.9796, -37.0397, 0.59", "-69.0481, 78.0885, -36.787, 0.74", "-70.1406, 78.2294, -36.3535, 0.52", "-70.7351, 78.288, -36.1023, 0.52", "-71.5917, 78.3867, -35.7953, 0.52", "-72.5051, 78.5281, -35.5127, 0.52", "-73.3185, 78.7445, -35.343, 0.52", "-74.5838, 79.2183, -35.1536, 1.33", "-75.1553, 79.5025, -35.083, 2.28", "-75.8409, 79.8747, -35.0088, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "8.19556, -53.8103, 10.6819, 0.59", "9.3172, -54.5999, 11.8765, 0.59", "9.89072, -55.0692, 12.4357, 0.59", "11.7383, -56.9513, 14.194, 0.44", "12.0621, -57.3862, 14.5364, 0.44", "12.5241, -58.1206, 15.0494, 0.44", "13.1173, -59.1822, 15.7661, 0.44", "13.4266, -59.9081, 16.1882, 0.44", "13.8324, -60.9894, 16.7896, 0.44", "14.3496, -62.4343, 17.5543, 0.44", "14.6009, -63.2438, 18.0696, 0.81", "14.9896, -64.7038, 19.1674, 0.59", "15.0891, -65.1168, 19.5185, 0.59", "15.3248, -66.269, 20.7399, 0.29", "15.3869, -66.7845, 21.3469, 0.29", "15.4382, -68.2015, 22.9781, 0.29", "15.3821, -69.0871, 23.8885, 0.29", "15.2073, -70.083, 24.7784, 1.03", "14.4326, -73.0333, 26.9328, 1.11", "14.0108, -74.2682, 27.7413, 1.33", "13.4707, -75.6772, 28.506, 0.66", "12.3785, -78.2345, 29.1111, 0.15", "12.0024, -78.9885, 28.7854, 0.15", "11.6366, -79.6702, 28.0353, 0.15" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "8.19556, -53.8103, 10.6819, 1.33", "7.96934, -54.7642, 10.4836, 1.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-75.8409, 79.8747, -35.0088, 0.37", "-77.4445, 79.9316, -35.1271, 0.37", "-78.1631, 79.9104, -35.1865, 0.37", "-79.1317, 79.7849, -35.2727, 0.37", "-80.2248, 79.5165, -35.46, 0.88", "-80.6953, 79.3839, -35.5604, 0.88", "-81.5063, 79.1727, -35.743, 0.52", "-82.1356, 79.0222, -35.9195, 0.29", "-82.9501, 78.8721, -36.2036, 0.29", "-84.1522, 78.7801, -36.6992, 0.37", "-84.5678, 78.8378, -36.8696, 0.37", "-85.2208, 79.042, -37.1333, 0.37", "-85.872, 79.3119, -37.3438, 0.37", "-86.9951, 79.7619, -37.6737, 0.66", "-87.6866, 79.9984, -37.8491, 0.66", "-88.6939, 80.2428, -38.0277, 0.37", "-89.3522, 80.3322, -38.1156, 0.29", "-90.5281, 80.3918, -38.216, 0.29", "-91.6728, 80.4019, -38.1928, 0.29", "-92.6754, 80.3839, -38.0442, 0.29", "-93.7515, 80.3659, -37.8643, 0.29", "-94.5123, 80.3721, -37.7388, 0.88", "-94.9172, 80.3936, -37.6821, 1.03", "-96.1379, 80.5763, -37.5962, 0.29", "-97.1312, 80.8026, -37.5653, 0.29", "-98.4974, 81.0897, -37.6127, 0.96", "-99.149, 81.199, -37.6883, 1.25", "-99.4074, 81.2265, -37.7489, 1.47", "-100.575, 81.2757, -38.069, 0.96", "-101.637, 81.2703, -38.5536, 0.52", "-102.938, 81.2921, -39.264, 0.44", "-103.955, 81.3264, -39.8562, 0.44", "-105.653, 81.4151, -40.9053, 1.11", "-106.308, 81.4762, -41.3201, 1.11", "-109.839, 81.9766, -43.6115, 0.29", "-110.708, 82.1302, -44.2181, 0.29", "-111.31, 82.2408, -44.6691, 0.96", "-111.895, 82.3377, -45.0987, 1.18", "-112.856, 82.5103, -45.7238, 0.88", "-113.923, 82.6868, -46.3277, 0.52", "-114.595, 82.7328, -46.6167, 0.52", "-115.382, 82.6935, -46.9825, 0.52", "-117.022, 82.5121, -47.8391, 0.37", "-117.919, 82.3962, -48.3173, 0.37", "-118.872, 82.2764, -48.8249, 0.37", "-120.199, 82.1362, -49.529, 0.37", "-121.174, 82.0713, -50.0263, 0.37", "-122.247, 82.0028, -50.5534, 0.37", "-123.008, 81.857, -50.9675, 1.11", "-123.253, 81.7866, -51.1257, 1.47" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-75.8409, 79.8747, -35.0088, 0.29", "-77.9418, 82.7589, -36.4237, 0.29", "-78.5898, 83.7015, -36.7323, 0.29", "-78.9689, 84.2913, -36.8771, 0.29", "-79.8716, 85.6227, -37.1606, 0.29", "-80.1666, 86.0459, -37.2307, 0.52", "-80.6805, 86.784, -37.3135, 0.37", "-81.1144, 87.407, -37.2222, 0.66", "-81.3746, 87.7637, -37.1385, 0.81", "-82.2131, 88.9452, -36.779, 0.29", "-82.8407, 89.8237, -36.4585, 0.52", "-83.2362, 90.356, -36.23, 0.74", "-84.1383, 91.4942, -35.6307, 0.29", "-84.9126, 92.4372, -35.0334, 0.29", "-85.3398, 92.9349, -34.6354, 1.25", "-85.582, 93.2315, -34.3564, 1.84", "-85.8721, 93.5832, -33.9858, 1.84", "-86.8958, 94.694, -32.6358, 0.29", "-87.227, 95.014, -32.1668, 0.29", "-88.218, 95.8302, -30.5885, 0.29", "-88.6094, 96.1467, -29.8451, 0.52", "-88.8172, 96.3229, -29.3852, 0.29", "-89.2646, 96.7673, -28.1844, 0.29", "-89.4555, 97.0075, -27.5438, 0.29", "-89.9576, 97.7009, -25.8509, 0.88", "-90.4339, 98.3049, -24.3246, 0.29", "-90.6547, 98.5424, -23.7162, 0.29", "-91.1033, 99.0261, -22.6014, 0.81", "-91.3352, 99.3188, -22.0411, 0.81", "-91.6905, 99.834, -21.1822, 0.37", "-92.1438, 100.565, -20.1286, 0.29", "-92.4195, 101.03, -19.4712, 0.29", "-92.7091, 101.565, -18.7419, 0.29", "-92.9224, 102.018, -18.152, 0.29", "-93.3484, 103.16, -16.7482, 0.88", "-93.4306, 103.461, -16.3885, 1.25", "-93.575, 103.994, -15.7654, 1.25", "-93.8374, 104.721, -14.9851, 0.29", "-94.1421, 105.314, -14.4001, 0.22", "-94.6303, 105.96, -13.8694, 0.88", "-95.464, 106.809, -13.4194, 0.88", "-96.1389, 107.463, -13.0975, 0.59", "-98.2363, 109.392, -12.1877, 0.59", "-98.6044, 109.721, -12.0454, 0.59", "-99.4426, 110.445, -11.7384, 0.29", "-100.185, 111.094, -11.4436, 0.37", "-101.308, 112.091, -10.8975, 0.37", "-101.929, 112.679, -10.4745, 0.37", "-102.183, 112.936, -10.2566, 0.44", "-102.413, 113.15, -10.0767, 0.44", "-103.186, 113.787, -9.54503, 0.22", "-103.792, 114.244, -9.19593, 0.37", "-104.514, 114.721, -8.8561, 0.29", "-105.343, 115.226, -8.47647, 0.29", "-106.288, 115.758, -8.03982, 0.29", "-107.25, 116.287, -7.5944, 0.29", "-107.872, 116.656, -7.30924, 0.29", "-108.606, 117.168, -6.97463, 0.29", "-109.328, 117.781, -6.65933, 0.52", "-109.626, 118.115, -6.53937, 0.74", "-110.066, 118.836, -6.31974, 0.52", "-110.588, 119.937, -5.97452, 0.29", "-110.862, 120.565, -5.76203, 0.29", "-111.096, 121.082, -5.58295, 0.37", "-111.334, 121.531, -5.40535, 0.37", "-112.133, 122.737, -4.8312, 0.59", "-112.769, 123.512, -4.39416, 0.29", "-113.997, 124.772, -3.5921, 0.29", "-115.444, 126.088, -2.70753, 0.29", "-116.112, 126.672, -2.30974, 0.29", "-116.902, 127.329, -1.87588, 0.29", "-117.583, 127.855, -1.56168, 0.59", "-118.218, 128.295, -1.26561, 0.59", "-119.362, 128.893, -0.709661, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "7.96934, -54.7642, 10.4836, 0.74", "8.54042, -56.7262, 10.4361, 0.74", "8.88836, -57.8118, 10.4566, 0.74", "9.27624, -59.0817, 10.541, 0.96", "9.6288, -60.262, 10.7396, 0.74", "10.0387, -61.6342, 11.0368, 0.59", "10.3497, -62.6753, 11.2623, 0.59", "10.8155, -64.151, 11.686, 0.59", "11.3888, -65.9262, 12.2833, 0.52", "12.1491, -68.223, 13.1653, 0.52", "12.3381, -68.8499, 13.4322, 1.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "7.96934, -54.7642, 10.4836, 0.59", "7.49478, -55.2876, 10.5025, 0.59", "7.15579, -55.6151, 10.5905, 0.88", "6.7601, -55.9786, 10.746, 0.88", "6.29854, -56.3952, 10.9457, 0.59", "5.6649, -56.9266, 11.2152, 0.59", "5.38817, -57.1646, 11.3482, 1.4", "4.89781, -57.5913, 11.6386, 1.4", "4.46917, -57.9656, 11.9056, 1.03", "4.17542, -58.2138, 12.0832, 1.55", "3.83012, -58.5026, 12.2736, 1.55", "3.26746, -58.9937, 12.5169, 1.03", "2.94679, -59.2904, 12.6361, 0.81", "2.51914, -59.702, 12.7795, 0.81", "2.16251, -60.0505, 12.8727, 0.37", "1.89546, -60.3063, 12.9136, 0.37", "1.82957, -60.3674, 12.9179, 0.96", "1.64228, -60.5345, 12.9164, 1.4", "0.837905, -61.3091, 12.8956, 0.59", "0.192721, -61.9529, 12.8742, 0.52", "-0.309939, -62.4469, 12.8558, 0.52", "-0.897349, -62.9799, 12.8328, 0.37", "-1.38742, -63.3844, 12.7945, 0.29", "-1.96823, -63.8184, 12.7021, 1.25", "-2.12171, -63.9236, 12.6635, 1.4", "-2.6418, -64.2703, 12.536, 0.52", "-3.03397, -64.5175, 12.4322, 0.81", "-3.54028, -64.79, 12.2742, 1.03", "-4.24281, -65.0733, 12.0617, 0.52", "-4.68144, -65.2198, 11.9411, 0.52", "-5.02916, -65.3527, 11.8639, 0.37", "-5.52951, -65.6217, 11.8213, 0.29", "-5.68466, -65.731, 11.8346, 0.74", "-5.98287, -65.9602, 11.9141, 1.03", "-6.16776, -66.0946, 11.9818, 0.81", "-6.57968, -66.3723, 12.1271, 0.59", "-7.20706, -66.7839, 12.3366, 0.37", "-7.49907, -66.9746, 12.4026, 0.29", "-7.74935, -67.1066, 12.4362, 0.29", "-7.98585, -67.2059, 12.4433, 0.96", "-8.24242, -67.2885, 12.4108, 0.96", "-8.5671, -67.3739, 12.3331, 0.81", "-9.17245, -67.5545, 12.1684, 0.44", "-9.50484, -67.7066, 12.0882, 0.29", "-9.91944, -67.9811, 12.0074, 0.29", "-10.3588, -68.3586, 11.9483, 1.4", "-10.6091, -68.6125, 11.9299, 1.4", "-11.0465, -69.1077, 11.944, 0.44", "-11.2827, -69.396, 11.9782, 0.29", "-11.4334, -69.5861, 12.0121, 0.88", "-11.729, -69.9515, 12.0883, 0.96", "-11.969, -70.2355, 12.1534, 0.59", "-12.3946, -70.7317, 12.2567, 0.44", "-12.813, -71.2213, 12.3549, 0.37", "-13.2326, -71.695, 12.4509, 0.22", "-13.6072, -72.0948, 12.5295, 0.59", "-13.9676, -72.4545, 12.5952, 0.29", "-14.0791, -72.5571, 12.6109, 0.74", "-14.3071, -72.7398, 12.6278, 0.96", "-14.5641, -72.908, 12.6377, 0.59", "-15.0064, -73.1436, 12.6427, 0.44", "-15.3104, -73.295, 12.6498, 0.74", "-15.571, -73.4311, 12.655, 0.96", "-16.1158, -73.7446, 12.6654, 0.37", "-16.5185, -74.0207, 12.6727, 0.29", "-16.7742, -74.2391, 12.6615, 0.29", "-17.059, -74.5304, 12.6278, 0.52", "-17.2318, -74.7242, 12.595, 0.52", "-17.3869, -74.8919, 12.5759, 0.52", "-17.7607, -75.2343, 12.5593, 0.52", "-18.2209, -75.578, 12.5688, 0.52", "-18.4216, -75.6897, 12.582, 0.88", "-18.8412, -75.8641, 12.6225, 0.88", "-19.6385, -76.1156, 12.6795, 0.37", "-20.2036, -76.2719, 12.6878, 0.29", "-20.4904, -76.3539, 12.6794, 0.96", "-20.9623, -76.5258, 12.6423, 1.03", "-21.499, -76.7857, 12.5535, 0.52", "-21.96, -77.0834, 12.4, 0.52", "-22.4088, -77.4556, 12.171, 0.52", "-22.8275, -77.8891, 11.9024, 0.52", "-23.1493, -78.2775, 11.6672, 0.52", "-23.5646, -78.8523, 11.3331, 0.44", "-23.9703, -79.4881, 10.9607, 0.74", "-24.2028, -79.9035, 10.7223, 0.81", "-24.4418, -80.3658, 10.4463, 0.52", "-24.5738, -80.6249, 10.2785, 0.88", "-24.6707, -80.8133, 10.1557, 0.88", "-25.0045, -81.4561, 9.75111, 0.44", "-25.3176, -81.9778, 9.42086, 0.37", "-25.4622, -82.205, 9.26996, 0.37", "-25.732, -82.6148, 8.99177, 0.37", "-25.9549, -82.9418, 8.77694, 0.59", "-26.1655, -83.2328, 8.60166, 0.59", "-26.7693, -83.9595, 8.23088, 0.29", "-27.0395, -84.255, 8.09706, 0.29", "-27.2807, -84.5178, 7.98203, 0.59", "-27.6325, -84.9257, 7.80315, 0.59", "-27.8662, -85.2075, 7.6825, 0.37", "-28.2093, -85.6237, 7.5266, 0.37", "-28.4367, -85.884, 7.45515, 0.81", "-28.6202, -86.0763, 7.39999, 0.81", "-28.8727, -86.3184, 7.31693, 0.81", "-29.2187, -86.6719, 7.14446, 0.37", "-29.4676, -86.956, 6.98526, 0.37", "-29.7739, -87.3188, 6.77057, 0.66", "-29.9443, -87.5071, 6.65571, 0.96", "-30.2863, -87.8424, 6.44161, 0.96", "-30.8412, -88.3057, 6.09712, 0.29", "-31.1043, -88.4928, 5.90474, 0.29", "-31.4499, -88.7393, 5.61548, 0.44", "-31.5945, -88.853, 5.49009, 0.81", "-31.8135, -89.0498, 5.27675, 0.81", "-32.0202, -89.2518, 5.05473, 0.81", "-32.5762, -89.7772, 4.46735, 0.52", "-32.8461, -90.0398, 4.16968, 0.59", "-33.1656, -90.3834, 3.79375, 0.59", "-33.6884, -90.9699, 3.20745, 0.29", "-34.0257, -91.362, 2.84844, 0.96", "-34.23, -91.5962, 2.65277, 1.25", "-34.3629, -91.7341, 2.54605, 1.25", "-34.875, -92.1748, 2.21083, 0.37", "-35.2416, -92.451, 2.01541, 0.37", "-35.5623, -92.671, 1.89677, 1.03", "-35.8673, -92.8678, 1.80734, 1.25", "-36.1871, -93.057, 1.72722, 1.25", "-36.8123, -93.3738, 1.63797, 0.29", "-37.1439, -93.5088, 1.63129, 0.44", "-37.4892, -93.6312, 1.64495, 0.59", "-37.9317, -93.7726, 1.65965, 0.59", "-38.4703, -93.9315, 1.66511, 0.29", "-39.1467, -94.1198, 1.634, 0.29", "-39.8006, -94.3091, 1.55431, 0.29", "-40.2214, -94.4407, 1.4829, 0.29", "-40.896, -94.6816, 1.33057, 0.81", "-41.1148, -94.7684, 1.27185, 0.81", "-41.7952, -95.0702, 1.06598, 0.52", "-42.4403, -95.4002, 0.882229, 0.52", "-42.9913, -95.7219, 0.76644, 0.44", "-43.372, -95.9705, 0.740587, 0.81", "-43.8382, -96.3055, 0.803407, 0.81", "-44.1407, -96.5489, 0.926351, 0.81", "-44.6843, -97.0233, 1.29007, 0.37", "-44.9092, -97.2343, 1.495, 0.37", "-45.2079, -97.5275, 1.80742, 0.81", "-45.5417, -97.8533, 2.17174, 0.81", "-46.1921, -98.4538, 2.8801, 0.44", "-46.5017, -98.6884, 3.19624, 0.37", "-46.8406, -98.9128, 3.51065, 0.29", "-47.1041, -99.0797, 3.73325, 0.29", "-47.3674, -99.2562, 3.93553, 0.74", "-47.8103, -99.6028, 4.28301, 0.29", "-48.398, -100.12, 4.72858, 0.29", "-48.7163, -100.421, 4.97059, 0.66", "-49.0273, -100.724, 5.18785, 0.81", "-49.3386, -101.064, 5.40102, 0.81", "-49.9281, -101.764, 5.77217, 0.44", "-50.1888, -102.096, 5.90845, 0.29", "-50.5737, -102.604, 6.08284, 0.29", "-50.8572, -102.946, 6.20197, 0.29", "-51.1733, -103.303, 6.32553, 0.29", "-51.4154, -103.55, 6.39647, 0.96", "-51.6875, -103.81, 6.41252, 1.25" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-123.253, 81.7866, -51.1257, 0.37", "-124.141, 80.94, -50.6175, 0.37", "-124.877, 80.3307, -50.1369, 0.37", "-126.088, 79.538, -49.2981, 0.37", "-126.749, 79.2024, -48.8302, 0.22", "-127.374, 78.9549, -48.39, 0.22", "-128.372, 78.6251, -47.6933, 0.37", "-128.922, 78.5507, -47.3043, 0.37", "-129.703, 78.5395, -46.7595, 0.22", "-130.421, 78.586, -46.3294, 0.22", "-131.058, 78.6175, -46.0204, 0.81", "-131.419, 78.611, -45.8793, 0.88", "-131.969, 78.547, -45.7144, 0.66", "-133.012, 78.3812, -45.4253, 0.29", "-134.398, 78.1483, -45.051, 0.29", "-135.351, 78.0087, -44.7973, 0.29", "-136.653, 77.8442, -44.4607, 0.29", "-138.322, 77.6491, -44.0274, 0.29", "-139.108, 77.5604, -43.8239, 0.66", "-139.723, 77.4888, -43.661, 0.88", "-140.027, 77.4466, -43.5827, 0.88", "-140.896, 77.3299, -43.3782, 0.29", "-141.695, 77.1997, -43.2065, 0.29", "-142.67, 77.0128, -43.0128, 1.33", "-143.033, 76.9279, -42.9481, 1.77", "-144.558, 76.586, -42.6995, 0.29", "-145.618, 76.3591, -42.5374, 0.29", "-146.965, 76.0838, -42.3299, 0.29", "-147.621, 75.9701, -42.2201, 0.29", "-148.279, 75.8921, -42.0557, 0.74", "-149.299, 75.8118, -41.6823, 0.29", "-150.327, 75.7836, -41.0998, 0.29", "-151.187, 75.7952, -40.474, 0.81", "-151.623, 75.8077, -40.1004, 0.81", "-152.917, 75.8638, -38.8024, 0.22", "-153.737, 75.891, -37.9015, 0.22", "-154.609, 75.8755, -36.9169, 0.88", "-155.105, 75.8513, -36.3898, 1.18", "-156.256, 75.7295, -35.3373, 0.29", "-157.0, 75.5804, -34.7761, 0.29", "-158.169, 75.238, -34.0529, 0.29", "-159.193, 74.9168, -33.5068, 0.29", "-160.195, 74.6134, -33.0373, 0.81", "-161.518, 74.2868, -32.4536, 0.22", "-162.62, 74.1002, -31.999, 0.22", "-163.334, 74.0359, -31.7318, 0.29", "-164.4, 74.0901, -31.3508, 0.29", "-165.278, 74.2541, -30.9723, 0.29", "-166.218, 74.5367, -30.4696, 0.52", "-166.825, 74.7823, -30.0937, 0.59", "-167.622, 75.1828, -29.5406, 0.29", "-168.04, 75.4204, -29.2305, 0.29", "-169.172, 76.0739, -28.282, 0.29", "-169.815, 76.4049, -27.7112, 0.29", "-170.533, 76.7077, -27.036, 0.59", "-171.217, 76.9513, -26.4362, 0.74", "-172.222, 77.285, -25.7135, 0.44", "-173.063, 77.5515, -25.2432, 1.55", "-173.657, 77.7076, -25.0271, 1.99", "-175.318, 77.9772, -24.5815, 0.29", "-176.458, 78.0164, -24.3574, 0.29", "-178.059, 77.9151, -24.1563, 0.29", "-178.657, 77.8328, -24.1112, 0.29", "-179.906, 77.5941, -24.0758, 0.44", "-180.694, 77.4071, -24.0681, 0.44", "-181.612, 77.1322, -24.0586, 0.29", "-182.794, 76.7222, -23.9546, 0.29", "-183.566, 76.4535, -23.8527, 0.29", "-184.354, 76.2142, -23.7621, 0.37", "-185.064, 76.0474, -23.6817, 0.59", "-185.887, 75.892, -23.5856, 0.59", "-186.869, 75.7295, -23.4442, 0.44", "-187.676, 75.662, -23.2393, 0.29", "-187.989, 75.678, -23.1371, 0.88", "-188.67, 75.7648, -22.8819, 0.88", "-189.079, 75.8158, -22.7139, 0.88", "-189.984, 75.8783, -22.3211, 0.29", "-191.062, 75.9004, -21.8479, 0.29", "-191.899, 75.939, -21.4834, 0.29", "-192.665, 76.0423, -21.1646, 0.29", "-193.351, 76.1974, -20.8915, 0.52", "-194.236, 76.464, -20.5563, 0.52", "-195.443, 76.8714, -20.1373, 0.29", "-196.353, 77.1891, -19.8597, 0.29", "-197.269, 77.549, -19.5858, 0.74", "-197.846, 77.8091, -19.4471, 1.03", "-198.59, 78.1964, -19.324, 0.37", "-199.337, 78.5907, -19.2543, 0.37", "-199.981, 78.8806, -19.223, 0.96", "-200.475, 79.0528, -19.2028, 1.18", "-201.756, 79.4771, -19.1425, 0.29", "-202.513, 79.7654, -19.0964, 0.29", "-203.314, 80.0867, -19.0451, 0.29", "-204.102, 80.3874, -18.968, 0.37", "-205.016, 80.7011, -18.8443, 0.37", "-206.103, 81.0745, -18.6527, 0.37", "-206.969, 81.3421, -18.4657, 0.37", "-207.886, 81.6173, -18.2716, 0.37", "-209.108, 82.0502, -18.0262, 0.37", "-210.077, 82.4311, -17.8458, 0.37", "-210.933, 82.7827, -17.6891, 0.37", "-211.964, 83.1843, -17.4526, 0.37", "-212.991, 83.5631, -17.1595, 0.37", "-214.187, 83.964, -16.7412, 1.4", "-214.412, 84.0316, -16.6531, 2.06", "-214.958, 84.1644, -16.4178, 2.28", "-216.275, 84.3934, -15.8234, 0.29", "-217.152, 84.4817, -15.3795, 0.29", "-218.476, 84.4681, -14.6302, 0.29", "-219.335, 84.3894, -14.0988, 0.29", "-220.291, 84.247, -13.4772, 0.29", "-221.257, 84.0449, -12.8312, 0.29", "-222.187, 83.8093, -12.2023, 0.29", "-222.831, 83.6432, -11.7468, 0.29", "-223.466, 83.4836, -11.2826, 0.44", "-224.404, 83.2652, -10.6484, 0.44", "-225.192, 83.1677, -10.1783, 0.29", "-225.76, 83.2056, -9.89402, 0.29", "-226.335, 83.3399, -9.65629, 0.74", "-226.911, 83.5101, -9.44098, 0.74", "-228.2, 83.9661, -8.99749, 0.29", "-229.322, 84.4659, -8.62638, 0.29", "-230.524, 85.0705, -8.24058, 0.29", "-231.431, 85.544, -7.95265, 1.18" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-123.253, 81.7866, -51.1257, 0.44", "-124.718, 81.8301, -51.1399, 0.44", "-125.565, 81.8372, -51.1015, 0.44", "-126.696, 81.8879, -51.0061, 0.44", "-127.465, 81.968, -50.9185, 0.44", "-128.351, 82.1329, -50.7894, 0.44", "-129.095, 82.3157, -50.655, 0.44", "-129.646, 82.5052, -50.4945, 0.44", "-130.214, 82.7975, -50.3056, 0.66", "-130.713, 83.137, -50.1338, 0.66", "-131.392, 83.676, -49.9139, 0.29", "-132.124, 84.3386, -49.6938, 0.29", "-132.841, 85.0617, -49.4906, 1.11", "-133.051, 85.2887, -49.4336, 1.11", "-133.665, 85.9117, -49.2712, 0.29", "-134.036, 86.3056, -49.1726, 0.29", "-134.276, 86.6004, -49.107, 1.03", "-134.46, 86.8733, -49.0512, 1.03", "-134.731, 87.2859, -48.9628, 1.03", "-135.496, 88.4934, -48.6867, 0.29", "-135.929, 89.207, -48.5048, 0.29", "-136.326, 89.8441, -48.3302, 0.29", "-136.68, 90.3414, -48.1698, 0.29", "-137.334, 91.1795, -47.8663, 1.33", "-137.567, 91.4568, -47.7617, 1.69", "-138.489, 92.4273, -47.3694, 0.37", "-139.035, 92.9044, -47.1575, 0.37", "-140.008, 93.6264, -46.8049, 0.37", "-140.808, 94.173, -46.5288, 0.37", "-141.614, 94.7185, -46.2596, 0.37", "-142.244, 95.1738, -46.0642, 0.37", "-142.548, 95.4195, -45.984, 0.81", "-143.0, 95.8675, -45.9111, 0.81", "-143.482, 96.4705, -45.9253, 0.52", "-143.883, 97.0002, -45.9761, 0.52", "-144.472, 97.7169, -46.063, 1.03", "-144.762, 98.0599, -46.115, 1.03", "-145.311, 98.6504, -46.2093, 0.88", "-146.131, 99.4334, -46.333, 0.37", "-147.083, 100.234, -46.4424, 0.37", "-148.098, 101.05, -46.4698, 0.37", "-148.607, 101.466, -46.4453, 0.37", "-149.451, 102.174, -46.3422, 0.37", "-150.012, 102.659, -46.2277, 1.18", "-150.428, 103.03, -46.1154, 1.69", "-151.939, 104.525, -45.654, 0.44", "-152.74, 105.453, -45.3921, 0.44", "-153.458, 106.382, -45.1531, 0.44", "-153.737, 106.78, -45.0646, 0.96", "-154.016, 107.199, -44.984, 1.33", "-154.703, 108.224, -44.8025, 0.37", "-155.32, 109.184, -44.6642, 0.37", "-155.709, 109.828, -44.5791, 0.37", "-156.143, 110.628, -44.4857, 0.37", "-156.683, 111.618, -44.38, 0.37", "-157.197, 112.482, -44.3096, 0.37", "-157.603, 113.104, -44.2442, 0.59", "-158.015, 113.708, -44.1564, 0.59", "-158.562, 114.52, -44.092, 0.29", "-158.805, 114.893, -44.0834, 0.29", "-159.695, 116.154, -44.0931, 1.33", "-160.059, 116.623, -44.0967, 2.14", "-160.377, 116.989, -44.1002, 2.28", "-161.466, 118.07, -44.1342, 1.11", "-162.281, 118.747, -44.1839, 0.29", "-163.266, 119.525, -44.2496, 0.29", "-163.931, 120.034, -44.2961, 0.29", "-164.547, 120.525, -44.356, 0.44", "-165.168, 121.063, -44.4385, 0.44", "-165.913, 121.783, -44.5339, 0.44", "-166.595, 122.546, -44.6544, 0.66", "-166.925, 122.997, -44.72, 0.66", "-167.366, 123.699, -44.7949, 0.29", "-167.802, 124.546, -44.7875, 0.29", "-168.108, 125.249, -44.7074, 0.29", "-168.378, 125.926, -44.6049, 0.29", "-168.795, 126.888, -44.4287, 0.44", "-169.1, 127.538, -44.2751, 0.44", "-169.608, 128.556, -43.9367, 1.03", "-169.842, 129.071, -43.6889, 1.03" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "12.3381, -68.8499, 13.4322, 0.59", "12.6215, -70.7056, 13.1247, 0.59", "12.6965, -71.9805, 12.9016, 0.59", "12.7254, -73.5519, 12.6394, 0.59", "12.7457, -74.7077, 12.4572, 0.59", "12.7602, -76.4513, 12.2458, 0.88", "12.7227, -78.0796, 12.0937, 0.88", "12.6064, -79.2843, 12.0253, 0.66", "12.3304, -80.6674, 12.0417, 0.81", "11.9232, -82.1159, 12.1634, 0.74", "11.5672, -83.2706, 12.3444, 0.96", "11.2491, -84.4137, 12.6081, 0.74", "10.9414, -85.658, 12.9453, 0.59", "10.6417, -87.0321, 13.3269, 0.52", "10.5552, -87.4959, 13.4532, 1.03", "10.4113, -88.769, 13.7255, 0.52", "10.422, -90.2302, 13.893, 0.81", "10.5327, -91.1199, 13.9218, 1.03", "10.6825, -91.9713, 13.8829, 1.03", "10.8761, -93.0954, 13.7712, 0.88", "11.0462, -94.3216, 13.6239, 0.74", "11.1284, -95.1203, 13.5188, 0.74", "11.2045, -96.0953, 13.3885, 0.44", "11.3462, -97.6986, 13.1393, 0.44", "11.4305, -98.6848, 12.9807, 0.66", "11.4968, -99.4158, 12.8753, 0.66", "11.585, -100.385, 12.7363, 0.52", "11.6736, -101.577, 12.5511, 0.81", "11.7429, -102.639, 12.3433, 1.03", "11.7882, -103.358, 12.1715, 1.03", "11.817, -104.352, 11.9177, 0.66", "11.7781, -105.521, 11.5858, 0.52", "11.6985, -106.47, 11.3, 0.52", "11.5916, -107.275, 11.0758, 0.52", "11.4485, -108.251, 10.8397, 0.74", "11.3326, -109.001, 10.6763, 0.74", "11.0296, -110.835, 10.3529, 0.59", "10.8721, -111.947, 10.2395, 0.59", "10.78, -113.007, 10.1717, 0.96", "10.7577, -113.577, 10.1632, 0.96", "10.7398, -114.715, 10.2189, 0.59", "10.7063, -116.16, 10.3274, 0.44", "10.6645, -117.468, 10.4766, 0.44", "10.6212, -118.588, 10.6006, 0.44", "10.5899, -119.775, 10.7011, 0.44", "10.5962, -120.985, 10.7677, 0.44", "10.6937, -122.65, 10.7994, 0.59", "10.7635, -123.303, 10.8116, 0.81", "10.9179, -124.356, 10.8175, 0.44", "11.1388, -125.761, 10.8531, 0.44", "11.2928, -126.617, 10.895, 0.81", "11.4749, -127.464, 10.9704, 0.81", "11.7734, -128.698, 11.0745, 0.81", "12.0048, -129.599, 11.1013, 0.52", "12.2967, -130.71, 11.0717, 0.52", "12.4883, -131.592, 10.9888, 0.81", "12.6067, -132.648, 10.8365, 1.03", "12.6092, -134.176, 10.5683, 0.52", "12.5286, -135.279, 10.3454, 0.52", "12.3885, -136.315, 10.1567, 0.88", "12.1718, -137.587, 9.95586, 0.88", "11.8576, -139.087, 9.77404, 0.44", "11.4859, -140.622, 9.64509, 0.74", "11.322, -141.341, 9.66336, 0.74", "11.0309, -142.656, 9.72762, 0.37", "10.8418, -143.623, 9.79397, 0.66", "10.7211, -144.551, 9.87419, 0.96", "10.6646, -145.65, 9.95457, 0.96", "10.6671, -148.08, 10.0701, 0.37", "10.7386, -149.572, 10.1788, 0.37", "10.801, -150.221, 10.2551, 0.88", "10.864, -150.788, 10.327, 0.88", "10.9567, -151.826, 10.418, 0.88", "11.0051, -152.902, 10.4548, 0.52", "11.0001, -154.408, 10.5538, 0.52", "10.9854, -155.971, 10.7811, 0.44", "10.9697, -157.26, 11.0127, 0.52", "10.9304, -159.076, 11.3775, 0.74", "10.8799, -160.494, 11.6848, 0.74", "10.7151, -162.835, 12.1824, 0.59", "10.5985, -163.98, 12.3993, 0.59", "10.4473, -165.146, 12.644, 0.44", "10.3047, -166.185, 12.8702, 0.44", "10.2277, -166.744, 12.982, 0.81", "10.0838, -167.805, 13.0933, 0.81", "9.96188, -168.667, 13.0764, 0.74", "9.81802, -169.542, 13.0807, 0.59", "9.5914, -170.836, 13.1311, 0.29", "9.47497, -171.478, 13.1853, 0.52", "9.21035, -173.084, 13.341, 0.52", "9.07374, -174.083, 13.4573, 0.52", "8.8732, -175.672, 13.6953, 0.74", "8.77182, -176.491, 13.8682, 1.11", "8.66272, -177.123, 14.0756, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "12.3381, -68.8499, 13.4322, 0.52", "13.5588, -67.7111, 14.479, 0.52", "14.2222, -67.0923, 15.0479, 0.52", "14.7768, -66.575, 15.5235, 0.52", "15.2571, -66.1269, 15.9354, 0.52" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-169.842, 129.071, -43.6889, 0.22", "-171.315, 131.393, -44.7545, 0.22", "-171.888, 132.054, -45.1683, 0.22", "-172.382, 132.466, -45.4943, 0.22", "-172.934, 132.935, -45.8475, 0.22", "-174.141, 134.148, -46.6635, 0.22", "-175.053, 135.262, -47.3692, 1.25", "-175.425, 135.707, -47.6678, 1.55", "-176.705, 137.408, -48.7039, 0.37", "-177.146, 138.092, -49.0484, 0.37", "-177.855, 139.379, -49.5798, 0.37", "-178.399, 140.659, -49.9785, 0.37", "-178.759, 141.72, -50.2873, 0.66", "-178.991, 142.519, -50.5217, 1.33", "-179.414, 144.195, -50.9728, 0.52", "-179.827, 145.652, -51.3742, 0.52", "-180.159, 146.698, -51.6583, 0.37", "-180.463, 147.783, -51.9327, 0.37", "-180.661, 148.702, -52.1644, 0.37", "-180.957, 150.484, -52.594, 2.65", "-181.0, 150.816, -52.6692, 3.32", "-181.091, 151.281, -52.7986, 3.32", "-181.881, 153.931, -53.5847, 0.44", "-182.454, 155.485, -54.0607, 0.44", "-182.748, 156.221, -54.3064, 0.59", "-183.012, 156.859, -54.5444, 0.59", "-184.392, 159.991, -55.8104, 0.29", "-184.998, 161.247, -56.371, 0.29", "-185.605, 162.359, -56.921, 0.29", "-186.281, 163.546, -57.4955, 0.29", "-186.522, 164.029, -57.7145, 0.29", "-187.093, 165.443, -58.2745, 1.11", "-187.369, 166.36, -58.5537, 1.11", "-187.595, 167.075, -58.7721, 0.88", "-188.22, 168.632, -59.1689, 0.52", "-189.003, 170.216, -59.4368, 0.29", "-189.519, 171.143, -59.5361, 0.29", "-189.831, 171.688, -59.5538, 0.66", "-190.554, 172.917, -59.533, 0.66", "-191.152, 173.866, -59.4722, 0.29", "-191.677, 174.561, -59.3634, 0.29", "-192.778, 175.6, -59.0623, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-169.842, 129.071, -43.6889, 0.37", "-169.689, 130.005, -42.9566, 0.37", "-169.534, 131.079, -42.0819, 0.37", "-169.452, 131.804, -41.4697, 0.37", "-169.337, 133.228, -40.2294, 0.37", "-169.287, 134.26, -39.3335, 0.52", "-169.273, 135.305, -38.4576, 1.18", "-169.288, 135.988, -37.8783, 1.18", "-169.325, 136.469, -37.5221, 1.18", "-169.346, 136.783, -37.3223, 1.03", "-169.374, 137.483, -36.97, 0.44", "-169.327, 138.431, -36.5067, 0.88", "-169.193, 139.883, -35.8253, 0.37", "-169.054, 141.218, -35.1907, 0.29", "-168.964, 142.109, -34.739, 0.29", "-168.9, 142.772, -34.3632, 0.66", "-168.766, 144.453, -33.3174, 0.37", "-168.717, 145.414, -32.6773, 0.37", "-168.718, 146.434, -31.9904, 0.29", "-168.792, 147.395, -31.3421, 0.29", "-168.967, 148.233, -30.7911, 0.29", "-169.294, 149.302, -30.1447, 0.88", "-169.479, 149.855, -29.8641, 0.88", "-169.855, 151.076, -29.3345, 0.37", "-170.243, 152.343, -28.8836, 0.37", "-170.742, 154.081, -28.3937, 0.37", "-171.114, 155.501, -28.0341, 0.37", "-171.449, 156.848, -27.6877, 0.37", "-171.683, 157.843, -27.4283, 0.37", "-172.058, 159.476, -26.9891, 0.37", "-172.428, 161.358, -26.4847, 0.37", "-172.696, 162.918, -26.0663, 1.47", "-172.827, 163.525, -25.8911, 1.69", "-172.973, 164.15, -25.678, 1.69", "-173.331, 165.717, -25.0846, 0.44", "-173.604, 166.947, -24.5855, 0.44", "-173.899, 168.087, -24.1021, 0.44", "-174.358, 169.672, -23.4289, 0.44", "-174.815, 171.174, -22.7773, 0.37", "-175.15, 172.294, -22.2749, 0.37", "-175.319, 172.847, -22.0115, 0.37", "-175.627, 173.708, -21.5597, 0.96", "-175.96, 174.54, -21.0855, 1.25", "-176.085, 174.793, -20.9319, 1.25" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "8.66272, -177.123, 14.0756, 0.44", "7.73581, -177.529, 14.1282, 0.44", "7.00602, -177.725, 14.1335, 0.29", "6.01921, -177.921, 14.1236, 0.22", "5.32307, -178.023, 14.1109, 0.59", "4.91589, -178.067, 14.1018, 0.59", "3.74733, -178.195, 14.0756, 0.29", "2.59075, -178.198, 14.0386, 0.29", "2.33772, -178.178, 14.0235, 0.52", "1.91842, -178.127, 13.9748, 0.52", "1.57656, -178.073, 13.9329, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "8.66272, -177.123, 14.0756, 0.37", "8.68465, -179.561, 13.7669, 0.37", "8.65327, -180.934, 13.6132, 0.81", "8.59893, -181.725, 13.5411, 0.88", "8.5124, -182.553, 13.4822, 0.66", "8.29959, -184.086, 13.399, 0.37", "8.21044, -184.663, 13.3748, 0.37", "8.03746, -185.657, 13.3914, 0.37", "7.89005, -186.865, 13.4084, 0.37", "7.80539, -187.961, 13.4147, 0.74", "7.74975, -189.024, 13.3903, 1.11", "7.70198, -189.949, 13.3528, 0.81", "7.65902, -191.699, 13.2589, 0.37", "7.63729, -193.724, 13.1164, 0.37", "7.56419, -195.02, 13.0063, 0.37", "7.41363, -196.349, 12.8784, 0.37", "7.2855, -197.12, 12.7938, 0.96", "7.13445, -197.732, 12.7219, 0.96", "6.72189, -198.962, 12.5805, 0.44", "6.14061, -200.525, 12.4084, 0.37", "5.89263, -201.396, 12.2937, 0.37", "5.78165, -202.067, 12.2016, 1.11", "5.69026, -203.061, 12.0529, 0.88", "5.61343, -204.464, 11.8445, 0.66", "5.57642, -206.274, 11.5883, 0.52", "5.56992, -207.871, 11.3739, 0.52", "5.52861, -209.3, 11.1997, 0.52", "5.4136, -211.019, 10.9998, 0.81", "5.31506, -211.867, 10.9045, 0.96", "5.14581, -212.857, 10.8045, 0.96", "4.912, -213.916, 10.7113, 0.81", "4.59559, -215.208, 10.581, 0.44", "4.26533, -216.642, 10.3804, 0.29", "4.11051, -217.49, 10.2224, 0.29", "3.94793, -218.372, 10.0352, 0.29", "3.69924, -219.482, 9.77905, 0.29", "3.36683, -220.767, 9.42299, 1.03", "3.26565, -221.116, 9.30914, 1.47", "2.76023, -222.932, 8.66437, 0.44", "2.41842, -224.218, 8.17655, 0.37", "2.06036, -225.525, 7.67554, 0.37", "1.63807, -227.051, 7.08382, 0.29", "1.23687, -228.52, 6.5066, 0.29", "1.01582, -229.392, 6.15428, 0.29", "0.681641, -230.835, 5.54849, 0.29", "0.35594, -232.626, 4.77722, 0.66", "0.203681, -233.711, 4.3267, 1.18", "0.0805639, -234.668, 3.97884, 1.18", "-0.00374937, -235.325, 3.75594, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "15.2571, -66.1269, 15.9354, 0.44", "15.2418, -66.3575, 16.9228, 0.44", "15.1468, -66.8603, 18.9089, 1.11", "15.0693, -67.7228, 22.0668, 0.44", "15.1109, -69.3359, 27.8122, 0.88", "15.1816, -69.8804, 29.6806, 1.25", "15.2303, -70.2557, 30.9685, 0.88", "15.272, -70.6238, 32.2785, 0.74", "15.5228, -71.8486, 36.6249, 0.37", "15.6472, -72.1786, 37.6483, 0.66", "15.8073, -72.5224, 38.4261, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "15.2571, -66.1269, 15.9354, 0.44", "15.4743, -66.3155, 17.1994, 0.44", "17.3563, -67.9492, 28.1476, 0.44", "17.6022, -68.1627, 29.5782, 0.37", "17.7564, -68.2965, 30.4752, 0.37", "17.8709, -68.396, 31.1416, 0.74", "17.9635, -68.4764, 31.6804, 0.74" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-192.778, 175.6, -59.0623, 0.59", "-193.374, 176.463, -58.9643, 0.59", "-194.168, 177.246, -58.8108, 0.37", "-194.941, 177.847, -58.6524, 0.37", "-195.775, 178.456, -58.4718, 0.37", "-196.933, 179.302, -58.209, 0.37", "-197.854, 179.984, -57.9915, 0.37", "-198.917, 180.741, -57.6886, 0.37", "-199.744, 181.296, -57.4499, 0.37", "-200.655, 181.904, -57.1742, 0.37", "-201.256, 182.347, -57.017, 0.37", "-201.643, 182.741, -56.9415, 1.03", "-201.854, 183.024, -56.9092, 1.33", "-202.303, 183.73, -56.8454, 1.11", "-202.918, 184.724, -56.7628, 0.37", "-203.591, 185.817, -56.6743, 0.37", "-204.441, 187.223, -56.5749, 0.29", "-205.096, 188.331, -56.5058, 0.29", "-205.639, 189.269, -56.4524, 0.52", "-206.165, 190.21, -56.4021, 1.55", "-206.38, 190.617, -56.3761, 1.92" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-192.778, 175.6, -59.0623, 0.52", "-193.331, 176.737, -60.0885, 0.52", "-193.766, 177.821, -61.2005, 0.52", "-194.088, 178.833, -62.2157, 0.52", "-194.332, 179.752, -63.0836, 1.25", "-195.004, 182.547, -65.561, 2.28", "-195.164, 183.184, -66.1076, 2.28", "-195.749, 185.413, -68.1154, 0.29", "-196.001, 186.371, -69.0185, 0.44", "-196.199, 187.203, -69.774, 0.44", "-196.382, 188.054, -70.4651, 0.44", "-196.512, 188.837, -70.9533, 0.44", "-196.898, 190.445, -71.94, 0.29", "-197.203, 191.279, -72.4024, 1.03", "-197.529, 192.038, -72.7966, 1.55", "-198.029, 193.221, -73.3905, 0.88", "-198.534, 194.607, -74.0503, 0.52", "-198.915, 195.847, -74.5856, 0.52", "-199.234, 196.859, -74.9314, 0.52", "-199.723, 198.382, -75.3834, 0.52", "-200.004, 199.411, -75.6381, 0.52", "-200.254, 200.417, -75.8531, 0.52", "-200.449, 201.401, -76.0486, 0.52", "-200.673, 203.176, -76.3741, 0.52", "-200.838, 205.002, -76.72, 0.52", "-201.007, 206.717, -77.0057, 2.21" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-176.085, 174.793, -20.9319, 0.29", "-178.572, 176.218, -19.9308, 0.29", "-179.782, 176.91, -19.4439, 0.29", "-180.666, 177.417, -19.0877, 0.29", "-181.331, 177.798, -18.8199, 0.74", "-181.877, 178.111, -18.6001, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-176.085, 174.793, -20.9319, 0.29", "-176.365, 175.51, -20.5016, 0.29", "-176.514, 175.905, -20.2786, 0.29", "-176.799, 176.976, -19.7615, 0.29", "-176.874, 177.383, -19.5898, 0.74", "-176.966, 177.811, -19.4175, 0.74", "-177.211, 178.776, -19.0394, 0.37", "-177.391, 179.459, -18.7995, 0.29", "-177.644, 180.552, -18.4657, 0.37", "-177.802, 181.316, -18.2674, 0.37", "-178.097, 182.672, -17.8897, 0.29", "-178.313, 183.565, -17.6121, 0.29", "-178.61, 184.563, -17.2528, 0.29", "-179.001, 185.511, -16.8459, 0.29", "-179.33, 186.145, -16.5318, 0.29", "-179.77, 186.956, -16.0704, 0.29", "-180.085, 187.568, -15.6798, 0.29", "-180.398, 188.203, -15.239, 0.29", "-180.625, 188.682, -14.8658, 0.29", "-180.898, 189.334, -14.3507, 1.03", "-181.07, 189.894, -13.9419, 1.33", "-181.173, 190.449, -13.589, 1.33", "-181.302, 191.51, -12.9478, 0.29", "-181.417, 192.487, -12.3403, 0.29", "-181.566, 193.369, -11.7397, 0.29", "-181.71, 193.981, -11.2693, 0.29", "-181.949, 194.722, -10.634, 0.29", "-182.088, 195.088, -10.2833, 0.29", "-182.407, 195.844, -9.49083, 0.29", "-182.732, 196.56, -8.71772, 0.74", "-182.956, 197.035, -8.15231, 0.88", "-183.272, 197.726, -7.32564, 0.44", "-183.441, 198.131, -6.85821, 0.44", "-183.651, 198.777, -6.19772, 0.96", "-183.808, 199.332, -5.71922, 1.25", "-184.19, 200.573, -4.80498, 0.29", "-184.434, 201.252, -4.38297, 0.37", "-184.604, 201.692, -4.11908, 0.37", "-184.892, 202.441, -3.59412, 0.37", "-185.239, 203.318, -2.98764, 0.37", "-185.441, 203.847, -2.63296, 0.37", "-185.685, 204.447, -2.24383, 0.37", "-186.334, 205.892, -1.1286, 1.33", "-186.811, 207.006, -0.0860712, 2.06" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.00374937, -235.325, 3.75594, 0.29", "-1.19023, -236.421, 4.10973, 0.29", "-1.89492, -237.241, 4.42842, 0.29", "-2.2407, -237.795, 4.61511, 0.74", "-2.65902, -238.534, 4.85124, 0.29", "-2.98041, -239.135, 4.99976, 0.29", "-3.76359, -240.6, 5.36166, 0.59", "-3.94279, -241.044, 5.46797, 0.74", "-4.53896, -242.714, 5.8977, 0.37", "-4.87351, -243.585, 6.13018, 0.96", "-5.2615, -244.456, 6.35147, 0.81" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-0.00374937, -235.325, 3.75594, 0.37", "1.13559, -235.592, 3.80929, 0.37", "1.91974, -235.872, 3.8688, 0.37", "2.73889, -236.232, 4.10617, 0.37", "3.34718, -236.501, 4.50332, 0.29", "4.08825, -236.774, 5.17281, 0.29", "4.78618, -237.031, 5.80334, 0.52", "5.15128, -237.17, 6.25409, 0.52", "6.17435, -237.636, 7.92408, 1.11", "7.01643, -238.087, 9.75204, 0.59", "7.25174, -238.195, 10.4658, 0.59" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-206.38, 190.617, -56.3761, 0.37", "-207.205, 192.206, -55.6576, 0.37", "-207.958, 193.655, -55.0021, 0.37", "-208.515, 194.727, -54.5171, 0.37", "-209.464, 196.554, -53.6907, 1.18", "-209.916, 197.425, -53.2965, 1.62" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-206.38, 190.617, -56.3761, 0.29", "-207.666, 190.581, -56.9295, 0.29", "-208.666, 190.577, -57.3393, 0.52", "-210.193, 190.569, -57.8806, 1.03", "-211.007, 190.574, -58.1325, 1.03", "-211.757, 190.597, -58.3486, 0.88", "-212.821, 190.687, -58.6439, 0.81", "-213.477, 190.791, -58.8507, 0.29", "-214.222, 190.961, -59.0596, 0.29", "-214.935, 191.137, -59.2086, 0.29", "-215.323, 191.17, -59.3296, 0.52", "-216.224, 191.198, -59.6779, 0.52", "-217.332, 191.195, -60.1359, 1.18", "-217.73, 191.183, -60.2981, 1.47", "-218.301, 191.174, -60.5191, 1.47", "-220.925, 191.15, -61.4105, 0.52", "-221.766, 191.131, -61.6302, 0.29", "-222.774, 191.116, -61.8235, 0.29", "-224.259, 191.194, -61.9872, 0.29", "-225.49, 191.314, -62.0397, 0.29", "-226.353, 191.408, -62.0112, 0.29", "-227.66, 191.55, -61.8393, 0.29", "-228.215, 191.594, -61.7621, 0.29", "-229.141, 191.689, -61.6242, 0.88", "-229.629, 191.754, -61.546, 1.25", "-231.147, 191.937, -61.334, 0.37", "-231.899, 191.983, -61.3311, 0.29", "-232.577, 191.995, -61.4131, 0.74", "-233.077, 191.992, -61.487, 0.74", "-234.057, 191.98, -61.645, 0.37", "-234.983, 191.961, -61.8172, 0.37", "-237.043, 191.905, -62.2707, 0.37", "-237.694, 191.867, -62.4028, 0.37", "-238.977, 191.764, -62.6078, 0.29", "-239.587, 191.699, -62.6664, 0.29", "-240.937, 191.494, -62.6456, 0.66", "-242.098, 191.288, -62.5237, 0.74", "-243.237, 191.087, -62.3068, 0.52", "-244.043, 190.93, -62.1428, 0.96", "-244.789, 190.776, -61.9988, 0.96", "-246.114, 190.524, -61.7019, 0.29", "-247.081, 190.381, -61.4283, 0.96", "-247.647, 190.32, -61.2626, 1.11", "-248.601, 190.326, -61.039, 0.44", "-249.316, 190.448, -60.9031, 0.44", "-250.193, 190.765, -60.7837, 0.44", "-250.944, 191.147, -60.698, 0.44", "-251.506, 191.453, -60.6212, 0.44", "-252.437, 191.892, -60.4887, 0.44", "-253.112, 192.131, -60.4055, 0.44", "-254.309, 192.472, -60.2496, 0.44", "-255.018, 192.653, -60.1643, 0.81", "-255.894, 192.841, -60.0613, 0.81", "-257.1, 193.056, -59.9137, 0.52", "-258.341, 193.268, -59.7638, 0.37", "-258.95, 193.383, -59.7153, 0.37", "-259.628, 193.523, -59.6944, 1.03", "-260.63, 193.753, -59.7429, 1.47", "-261.225, 193.914, -59.8178, 1.47", "-261.945, 194.166, -59.9691, 0.44", "-263.416, 194.609, -60.3706, 0.29", "-264.677, 194.844, -60.772, 0.29", "-266.226, 194.949, -61.3524, 0.29", "-267.32, 194.952, -61.8041, 0.52", "-268.661, 194.948, -62.3563, 0.74", "-270.309, 195.003, -63.0369, 0.59", "-271.306, 195.107, -63.4805, 0.59", "-272.879, 195.344, -64.1937, 0.37", "-273.96, 195.513, -64.6143, 0.37", "-275.092, 195.671, -64.9541, 0.37", "-276.313, 195.8, -65.1943, 0.37", "-277.8, 195.969, -65.3319, 0.59", "-278.71, 195.977, -65.3075, 0.59", "-279.99, 195.733, -65.0428, 2.06", "-280.459, 195.529, -64.8827, 2.87", "-281.385, 194.897, -64.4528, 2.5", "-282.093, 194.273, -64.0189, 1.55", "-282.79, 193.54, -63.487, 0.37", "-283.144, 193.108, -63.1917, 0.37", "-283.723, 192.312, -62.6759, 0.37", "-284.342, 191.484, -62.1331, 0.37", "-285.107, 190.408, -61.4573, 0.37", "-285.305, 190.123, -61.2925, 0.66", "-285.69, 189.578, -60.9895, 0.44", "-286.125, 188.977, -60.666, 0.37", "-286.728, 188.195, -60.185, 0.37", "-287.257, 187.591, -59.76, 0.37", "-287.912, 186.894, -59.2179, 0.37", "-288.403, 186.42, -58.8, 0.59", "-288.884, 186.011, -58.3955, 0.59", "-289.693, 185.382, -57.7062, 0.37", "-290.354, 184.906, -57.1249, 0.66", "-290.86, 184.622, -56.6718, 0.66", "-291.262, 184.442, -56.2748, 0.66", "-291.663, 184.308, -55.8606, 0.37", "-292.055, 184.226, -55.4562, 0.74", "-292.404, 184.195, -55.1079, 0.74", "-293.123, 184.202, -54.3428, 0.52", "-294.136, 184.28, -53.29, 0.29", "-294.791, 184.296, -52.6157, 0.29", "-295.33, 184.249, -52.0646, 1.47", "-295.725, 184.157, -51.6751, 1.99", "-296.156, 183.969, -51.2633, 1.99", "-297.263, 183.314, -50.2631, 0.29", "-298.215, 182.687, -49.4848, 0.29", "-299.081, 182.046, -48.7925, 0.29", "-299.825, 181.483, -48.2151, 0.29", "-300.897, 180.714, -47.4344, 0.29", "-301.526, 180.278, -47.0244, 0.44", "-302.474, 179.634, -46.5076, 0.44", "-303.384, 179.107, -46.0921, 0.44", "-304.446, 178.584, -45.6572, 0.44", "-305.457, 178.148, -45.2618, 0.44", "-306.55, 177.691, -44.8378, 0.44", "-307.874, 177.104, -44.2965, 0.44", "-308.864, 176.651, -43.8727, 0.44", "-310.188, 176.03, -43.3515, 0.44", "-311.065, 175.556, -43.0284, 1.62", "-311.552, 175.281, -42.8483, 2.5", "-311.904, 175.093, -42.7143, 2.5", "-313.794, 174.045, -41.9943, 0.37", "-314.705, 173.458, -41.6632, 0.37", "-315.645, 172.793, -41.3515, 0.37", "-316.413, 172.219, -41.0611, 0.81", "-317.113, 171.728, -40.7422, 0.37", "-317.651, 171.411, -40.4429, 0.52", "-318.027, 171.263, -40.1588, 0.81", "-318.505, 171.147, -39.7393, 0.81", "-319.511, 170.984, -38.8859, 0.37", "-320.374, 170.801, -38.1742, 0.37", "-321.264, 170.547, -37.4533, 0.37", "-321.925, 170.327, -36.8869, 0.37", "-322.703, 170.037, -36.1948, 0.37", "-324.075, 169.422, -34.9368, 0.29", "-324.833, 168.949, -34.2319, 0.29", "-325.49, 168.333, -33.5542, 0.29", "-326.068, 167.511, -32.8259, 0.88", "-326.321, 166.985, -32.4029, 0.88", "-326.576, 166.204, -31.7972, 0.29", "-326.84, 165.037, -30.9062, 0.29", "-327.111, 163.757, -29.9307, 0.37", "-327.453, 162.122, -28.7067, 0.66", "-327.704, 161.078, -27.954, 0.66", "-327.88, 160.406, -27.4587, 0.22", "-328.009, 159.93, -27.0997, 0.59", "-328.175, 159.418, -26.6959, 0.81", "-328.294, 159.113, -26.4524, 0.81", "-328.828, 157.866, -25.4058, 0.29", "-328.952, 157.517, -25.1271, 0.29", "-329.151, 156.688, -24.5034, 0.52", "-329.208, 156.185, -24.1107, 0.52", "-329.253, 155.487, -23.5388, 0.52", "-329.35, 154.073, -22.2944, 0.66", "-329.446, 153.194, -21.4452, 0.52", "-329.538, 152.639, -20.809, 0.96", "-329.797, 151.693, -19.5184, 0.66", "-330.019, 151.112, -18.6096, 0.29", "-330.431, 150.408, -17.3312, 0.29", "-330.81, 149.972, -16.4386, 0.29", "-331.609, 149.211, -14.7431, 0.29", "-331.911, 148.947, -14.1563, 1.47", "-332.127, 148.763, -13.7666, 1.77", "-332.883, 148.142, -12.3832, 0.37", "-333.663, 147.536, -11.0184, 0.37", "-334.088, 147.195, -10.2806, 0.66", "-334.513, 146.838, -9.50305, 0.66", "-334.82, 146.559, -8.84122, 0.59", "-335.457, 146.019, -7.28554, 0.37", "-335.861, 145.723, -6.16876, 0.37", "-336.267, 145.451, -4.94222, 0.37", "-336.678, 145.163, -3.51011, 0.96", "-336.937, 144.932, -2.37145, 0.22", "-337.169, 144.651, -1.12436, 0.22", "-337.269, 144.479, -0.489561, 0.22", "-337.429, 144.205, 0.446843, 0.52", "-337.755, 143.691, 1.88256, 0.74", "-338.047, 143.327, 2.78197, 0.66", "-338.526, 142.79, 4.04299, 0.29", "-338.906, 142.386, 4.92409, 0.96", "-339.092, 142.227, 5.28889, 1.33", "-339.962, 141.715, 6.72617, 0.37", "-340.771, 141.281, 7.99738, 0.37", "-341.178, 141.054, 8.66029, 0.37", "-341.97, 140.625, 10.0625, 0.37", "-342.472, 140.345, 11.0452, 0.37", "-343.35, 139.766, 13.0027, 0.37", "-343.869, 139.325, 14.3464, 0.37", "-344.183, 138.923, 15.4673, 0.37", "-344.441, 138.453, 16.8743, 1.11", "-344.521, 138.265, 17.5185, 1.11", "-344.605, 137.903, 18.6209, 0.44", "-344.662, 137.638, 19.4445, 0.29", "-344.863, 137.165, 21.11, 0.29", "-345.018, 136.709, 22.6656, 0.81", "-345.155, 136.101, 24.4406, 0.52", "-345.277, 135.537, 25.8883, 0.52", "-345.34, 135.037, 27.0801, 0.52", "-345.335, 134.757, 27.7662, 0.81", "-345.277, 134.043, 29.4318, 0.44", "-345.215, 133.645, 30.3964, 0.37", "-345.116, 133.258, 31.5853, 0.37", "-344.99, 132.665, 33.6817, 0.37", "-344.859, 131.951, 36.0044, 1.55", "-344.816, 131.662, 36.9125, 2.36", "-344.798, 131.509, 37.386, 2.58", "-344.615, 130.607, 39.8617, 0.52", "-344.479, 130.241, 40.637, 0.74", "-344.225, 129.569, 41.6185, 0.74", "-343.878, 128.811, 42.5842, 0.44", "-343.457, 128.085, 43.6092, 0.37", "-343.133, 127.559, 44.4059, 0.44", "-342.667, 126.829, 45.5009, 0.44", "-342.285, 126.316, 46.4531, 0.44", "-341.669, 125.55, 48.1155, 0.81", "-341.317, 125.079, 49.1796, 1.11", "-341.063, 124.562, 50.2031, 0.37", "-340.856, 123.987, 51.1291, 0.37", "-340.317, 122.247, 53.3232, 1.4", "-340.138, 121.664, 53.974, 1.99", "-339.974, 121.043, 54.5908, 1.99", "-339.514, 119.176, 56.3005, 0.52", "-339.191, 117.857, 57.437, 0.52", "-338.974, 116.79, 58.2789, 0.52", "-338.743, 115.02, 59.4597, 0.52", "-338.591, 114.006, 60.1062, 0.74", "-338.357, 112.934, 60.8055, 0.74", "-338.178, 112.238, 61.2917, 0.52", "-338.002, 111.423, 61.8771, 0.52", "-337.81, 110.214, 62.7727, 0.44", "-337.665, 108.799, 63.8331, 0.44", "-337.573, 107.785, 64.675, 0.52", "-337.503, 106.607, 65.7761, 0.44", "-337.454, 105.687, 66.7127, 0.44", "-337.398, 104.997, 67.4633, 2.36", "-337.334, 104.284, 68.2696, 3.46" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-201.007, 206.717, -77.0057, 0.37", "-202.182, 208.342, -76.7519, 0.37", "-202.841, 209.243, -76.6015, 0.37", "-203.316, 209.914, -76.4852, 0.59", "-203.843, 210.722, -76.347, 0.44", "-204.162, 211.239, -76.2615, 0.37", "-204.48, 211.785, -76.1788, 0.37", "-205.005, 212.811, -76.0546, 0.29", "-205.351, 213.524, -75.9712, 0.29", "-205.673, 214.251, -75.8837, 0.29", "-206.065, 215.205, -75.7512, 0.88", "-206.262, 215.709, -75.69, 1.11", "-206.406, 216.123, -75.6521, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-201.007, 206.717, -77.0057, 0.29", "-200.844, 208.803, -77.8087, 0.29", "-200.78, 209.908, -78.1914, 0.29", "-200.759, 210.834, -78.6063, 0.44", "-200.759, 211.333, -78.8442, 0.44", "-200.774, 212.315, -79.2945, 0.37", "-200.803, 213.315, -79.7213, 0.37", "-200.845, 214.486, -80.187, 0.37", "-200.959, 216.471, -81.0033, 0.81", "-201.03, 217.256, -81.3199, 0.59", "-201.193, 218.635, -81.8481, 1.33", "-201.35, 219.635, -82.2179, 1.92", "-201.416, 220.065, -82.3802, 1.92" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-186.811, 207.006, -0.0860712, 0.52", "-187.809, 209.629, 1.65389, 0.52", "-188.435, 211.077, 2.65635, 0.52", "-189.236, 212.723, 3.86347, 0.52", "-189.771, 213.797, 4.65652, 0.52", "-190.429, 215.151, 5.63894, 0.52", "-190.815, 216.001, 6.23733, 0.66", "-191.204, 216.837, 6.85183, 0.29", "-191.475, 217.413, 7.24922, 0.29", "-192.168, 218.982, 8.17703, 0.29", "-192.643, 220.069, 8.83161, 0.29", "-193.105, 221.233, 9.46241, 0.29", "-193.551, 222.453, 10.1036, 1.25", "-193.8, 223.159, 10.4749, 1.55", "-194.273, 224.492, 11.1538, 0.22", "-194.976, 226.025, 12.0099, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-186.811, 207.006, -0.0860712, 0.29", "-187.294, 207.951, 0.823533, 0.29", "-187.539, 208.493, 1.37396, 0.29", "-187.779, 209.057, 1.9502, 0.29", "-188.077, 209.754, 2.62158, 0.37", "-188.27, 210.217, 3.02107, 0.37", "-188.426, 210.61, 3.32564, 0.29", "-188.69, 211.4, 3.8387, 0.29", "-188.873, 211.97, 4.17486, 0.29", "-189.144, 212.805, 4.60492, 0.29", "-189.417, 213.726, 5.06864, 0.29", "-189.612, 214.423, 5.41199, 0.52", "-189.742, 214.877, 5.63167, 0.29", "-190.006, 215.824, 6.08319, 0.29", "-190.183, 216.558, 6.44043, 0.29", "-190.379, 217.495, 6.9081, 0.59", "-190.523, 218.194, 7.26265, 0.74", "-190.666, 218.888, 7.60409, 0.22", "-190.762, 219.352, 7.813, 0.22", "-190.926, 220.109, 8.09878, 0.22", "-191.055, 220.716, 8.31396, 0.22", "-191.175, 221.219, 8.48264, 0.74", "-191.244, 221.501, 8.58622, 0.74", "-191.348, 221.856, 8.74693, 0.29", "-191.552, 222.456, 9.05687, 0.59", "-191.798, 223.105, 9.46172, 0.29", "-192.061, 223.77, 9.91553, 0.29", "-192.317, 224.325, 10.351, 0.29", "-192.593, 224.835, 10.8059, 0.29", "-192.889, 225.321, 11.3228, 0.29", "-193.223, 225.834, 11.9414, 0.29", "-193.462, 226.207, 12.4288, 0.29", "-193.855, 226.869, 13.3342, 0.29", "-194.071, 227.267, 13.8785, 0.29", "-194.38, 227.88, 14.7208, 1.4", "-194.56, 228.244, 15.2429, 1.77", "-194.845, 228.95, 16.2093, 0.37", "-194.961, 229.325, 16.7196, 0.66", "-194.985, 229.523, 16.9417, 0.66" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-209.916, 197.425, -53.2965, 0.29", "-209.252, 198.8, -51.9918, 0.29", "-208.981, 199.555, -51.1868, 0.22", "-208.79, 200.361, -50.2326, 0.22", "-208.684, 201.369, -48.832, 0.44", "-208.681, 201.946, -47.9706, 0.44", "-208.718, 202.807, -46.7628, 0.44", "-208.866, 203.395, -45.8731, 0.74", "-208.982, 203.875, -45.1347, 0.74", "-209.198, 204.623, -44.0374, 0.44", "-209.34, 205.25, -43.1806, 0.29", "-209.429, 206.111, -42.1208, 0.29", "-209.395, 207.06, -41.1219, 0.29", "-209.005, 209.193, -39.1396, 0.29", "-208.672, 210.35, -38.1447, 0.29", "-208.322, 211.18, -37.4202, 0.29", "-207.958, 211.981, -36.7327, 0.29", "-207.539, 212.969, -35.959, 0.81", "-207.05, 214.251, -35.0384, 1.47", "-206.742, 215.19, -34.4523, 1.84", "-205.696, 218.58, -32.53, 0.29", "-205.319, 220.053, -31.7535, 0.29", "-204.86, 221.825, -30.7805, 0.29", "-204.195, 224.225, -29.4614, 1.84", "-203.669, 226.074, -28.4843, 0.37", "-203.327, 227.307, -27.8324, 0.37", "-203.078, 228.226, -27.3378, 0.37", "-202.214, 231.111, -25.5133, 0.66", "-201.814, 232.26, -24.5667, 0.37", "-201.629, 232.829, -23.963, 0.37", "-201.407, 233.649, -22.936, 0.59", "-201.328, 234.043, -22.4612, 0.59", "-201.258, 234.719, -21.7172, 0.44", "-201.264, 237.618, -18.9704, 0.44", "-201.297, 239.054, -17.7079, 0.29", "-201.325, 240.407, -16.6107, 0.29", "-201.402, 242.317, -15.2388, 0.29", "-201.442, 243.206, -14.638, 0.29", "-201.51, 244.43, -13.8944, 0.29", "-201.616, 245.771, -13.1753, 1.18", "-201.641, 246.267, -12.8943, 1.55", "-201.678, 247.746, -11.8018, 0.66", "-201.505, 249.482, -10.1309, 1.03", "-201.36, 250.062, -9.4761, 1.03", "-200.878, 251.332, -7.87106, 0.29", "-200.632, 251.89, -7.13831, 0.29", "-200.07, 253.116, -5.58154, 0.66", "-199.251, 254.648, -3.51967, 0.37", "-198.731, 255.612, -2.21586, 0.37", "-198.421, 256.131, -1.4807, 0.37", "-197.947, 256.83, -0.498783, 1.47", "-197.414, 257.626, 0.434909, 1.69" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-209.916, 197.425, -53.2965, 0.29", "-210.037, 200.589, -53.5359, 0.29", "-210.021, 202.499, -53.5929, 0.29", "-209.971, 204.331, -53.5623, 1.69", "-209.862, 207.096, -53.4084, 0.29", "-209.814, 208.13, -53.3082, 0.29", "-209.77, 209.54, -53.1, 0.29", "-209.655, 210.804, -52.7891, 0.29", "-209.591, 211.73, -52.5176, 0.29", "-209.56, 212.998, -52.1231, 0.59", "-209.653, 214.349, -51.6909, 0.29", "-209.86, 215.801, -51.1958, 0.29", "-210.023, 216.508, -50.9486, 0.59", "-210.314, 217.377, -50.6484, 0.59", "-210.726, 218.316, -50.2552, 0.29", "-211.132, 219.067, -49.8872, 0.29", "-211.616, 219.927, -49.4543, 0.88", "-211.906, 220.454, -49.1901, 1.03", "-212.548, 221.569, -48.5945, 0.29", "-213.234, 222.727, -47.9563, 0.29", "-213.855, 223.727, -47.4644, 0.29", "-214.358, 224.53, -47.1529, 0.29", "-214.968, 225.459, -46.8956, 0.29", "-215.649, 226.4, -46.7434, 0.66", "-216.059, 226.897, -46.7357, 0.88", "-216.871, 227.799, -46.8642, 0.29", "-217.552, 228.429, -47.0245, 0.29", "-218.552, 229.21, -47.37, 0.29", "-219.624, 229.939, -47.9239, 0.29", "-220.537, 230.488, -48.4799, 0.29", "-221.6, 231.059, -49.1691, 0.59", "-222.814, 231.624, -49.9611, 0.44", "-224.235, 232.218, -50.8605, 0.81", "-225.828, 232.803, -51.8168, 0.37", "-226.939, 233.194, -52.3876, 0.29", "-227.68, 233.454, -52.6889, 0.29", "-228.453, 233.734, -52.9238, 0.29", "-229.611, 234.254, -53.1781, 0.59", "-231.042, 234.94, -53.3404, 0.29", "-232.224, 235.541, -53.3766, 0.22", "-232.88, 235.904, -53.4006, 0.22", "-233.899, 236.527, -53.4394, 1.25", "-234.455, 236.907, -53.4679, 1.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-201.416, 220.065, -82.3802, 0.44", "-202.344, 221.297, -82.485, 0.44", "-203.245, 222.53, -82.6424, 0.37", "-203.81, 223.349, -82.7576, 0.37", "-204.358, 224.163, -82.8646, 0.37", "-204.816, 224.833, -82.9622, 0.37", "-205.543, 225.888, -83.1082, 0.29", "-206.305, 227.105, -83.3125, 1.25", "-206.676, 227.732, -83.4473, 1.62", "-207.023, 228.301, -83.6153, 1.62", "-207.975, 229.859, -84.1371, 0.29", "-208.41, 230.607, -84.3997, 0.29", "-208.933, 231.582, -84.7874, 0.29", "-209.384, 232.493, -85.2209, 0.59", "-210.151, 234.152, -86.0674, 0.29", "-210.399, 234.705, -86.3541, 0.29", "-210.758, 235.489, -86.7618, 0.29", "-210.993, 235.955, -86.9889, 0.29", "-211.321, 236.594, -87.2485, 0.59", "-211.68, 237.365, -87.4968, 0.59", "-212.357, 238.904, -87.9301, 0.29", "-212.782, 239.835, -88.2128, 0.29", "-213.251, 240.891, -88.5352, 0.29", "-213.848, 242.284, -88.9722, 0.37", "-214.149, 243.015, -89.2033, 0.37", "-214.632, 244.319, -89.6127, 0.37", "-214.99, 245.413, -89.945, 0.37", "-215.428, 246.926, -90.3643, 0.44", "-215.677, 247.947, -90.6303, 0.66", "-215.842, 248.719, -90.8134, 0.66", "-216.094, 250.338, -91.0939, 0.29", "-216.161, 251.075, -91.1737, 0.74", "-216.244, 252.538, -91.2536, 0.29", "-216.323, 254.194, -91.2681, 0.37", "-216.358, 255.162, -91.2581, 0.37", "-216.436, 256.824, -91.2316, 0.37", "-216.509, 257.867, -91.21, 0.37", "-216.641, 259.052, -91.1886, 0.37", "-216.852, 260.356, -91.1718, 0.29", "-217.112, 261.613, -91.1641, 0.29", "-217.499, 263.375, -91.2572, 0.29", "-217.681, 264.163, -91.3525, 0.29", "-217.927, 265.229, -91.5116, 1.03", "-218.108, 266.034, -91.6472, 1.33", "-218.494, 267.706, -91.9236, 0.52", "-218.824, 269.129, -92.147, 0.52", "-219.122, 270.502, -92.3711, 0.52", "-219.361, 271.63, -92.5481, 0.81", "-219.492, 272.242, -92.635, 0.81", "-219.887, 273.929, -92.8109, 0.37", "-220.223, 275.33, -92.9005, 0.37", "-220.502, 276.499, -92.9308, 0.96", "-220.626, 277.021, -92.9425, 1.33", "-220.794, 277.687, -92.9499, 1.4", "-221.219, 279.211, -92.9468, 0.52", "-221.557, 280.307, -92.929, 0.44", "-222.055, 281.717, -92.8704, 0.37", "-222.512, 282.964, -92.814, 0.37", "-222.886, 284.006, -92.7724, 0.37", "-223.137, 284.709, -92.7461, 0.37", "-223.603, 285.897, -92.6757, 0.74", "-223.729, 286.16, -92.6447, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-201.416, 220.065, -82.3802, 0.37", "-202.183, 221.543, -83.3782, 0.37", "-202.635, 222.615, -84.0143, 0.74", "-203.216, 224.347, -85.0422, 0.29", "-203.477, 225.275, -85.6455, 0.29", "-203.706, 226.249, -86.2956, 1.25", "-203.788, 226.636, -86.5569, 1.25", "-203.927, 227.646, -87.2148, 0.29", "-203.994, 228.649, -87.8663, 0.29", "-204.037, 229.738, -88.5967, 0.29", "-204.1, 230.368, -89.0797, 0.29", "-204.216, 230.904, -89.5553, 0.29", "-204.405, 231.535, -90.1603, 0.29", "-204.712, 232.235, -90.8449, 1.03", "-205.41, 233.595, -92.0977, 0.37", "-205.797, 234.336, -92.7464, 0.37", "-206.116, 234.969, -93.349, 0.37", "-206.399, 235.512, -93.8845, 1.03", "-206.9, 236.438, -94.8293, 0.52", "-207.23, 237.098, -95.501, 0.52", "-207.497, 237.809, -96.115, 0.44", "-207.945, 239.4, -97.4202, 1.62" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_51", "dend_22", "dend_17", "dend_0", "dend_26", "dend_23", "dend_21", "dend_18", "dend_2", "dend_1", "dend_50", "dend_27", "dend_25", "dend_24", "dend_20", "dend_19", "dend_4", "dend_3", "dend_49", "dend_28", "dend_16", "dend_5", "dend_30", "dend_29", "dend_7", "dend_6", "dend_48", "dend_31", "dend_11", "dend_8", "dend_37", "dend_32", "dend_15", "dend_12", "dend_10", "dend_9", "dend_43", "dend_38", "dend_36", "dend_33", "dend_14", "dend_13", "dend_45", "dend_44", "dend_42", "dend_39", "dend_35", "dend_34", "dend_47", "dend_46", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_51", "dend_22", "dend_17", "dend_0", "dend_26", "dend_23", "dend_21", "dend_18", "dend_2", "dend_1", "dend_50", "dend_27", "dend_25", "dend_24", "dend_20", "dend_19", "dend_4", "dend_3", "dend_49", "dend_28", "dend_16", "dend_5", "dend_30", "dend_29", "dend_7", "dend_6", "dend_48", "dend_31", "dend_11", "dend_8", "dend_37", "dend_32", "dend_15", "dend_12", "dend_10", "dend_9", "dend_43", "dend_38", "dend_36", "dend_33", "dend_14", "dend_13", "dend_45", "dend_44", "dend_42", "dend_39", "dend_35", "dend_34", "dend_47", "dend_46", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L5_LBC_5dc27443f3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_50, id: dend_50, parent: dend_26
create dend_50
public dend_50
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_27
create dend_49
public dend_49
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_16, id: dend_16, parent: dend_4
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_48, id: dend_48, parent: dend_30
create dend_48
public dend_48
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_51(0), soma_0(0.4500009556479821)
    connect dend_22(0), soma_0(0.4500009556479821)
    connect dend_17(0), soma_0(0.4500009556479821)
    connect dend_0(0), soma_0(0.4500009556479821)
    connect axon_0(0), soma_0(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_50(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_16(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_48(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.24986, 8.66179, -0.266886, 1.81928 ) }
    soma_0 { pt3dadd( -1.99773, 7.71094, -0.243919, 3.13771 ) }
    soma_0 { pt3dadd( -1.74561, 6.7601, -0.220952, 4.2898 ) }
    soma_0 { pt3dadd( -1.49349, 5.80925, -0.197985, 6.24218 ) }
    soma_0 { pt3dadd( -1.24137, 4.8584, -0.175018, 7.75134 ) }
    soma_0 { pt3dadd( -0.989246, 3.90756, -0.152051, 8.81916 ) }
    soma_0 { pt3dadd( -0.737124, 2.95671, -0.129084, 9.30643 ) }
    soma_0 { pt3dadd( -0.485002, 2.00586, -0.106117, 9.79367 ) }
    soma_0 { pt3dadd( -0.23288, 1.05502, -0.0831497, 10.3575 ) }
    soma_0 { pt3dadd( 0.0192416, 0.104171, -0.0601827, 10.6175 ) }
    soma_0 { pt3dadd( 0.271364, -0.846675, -0.0372157, 10.6286 ) }
    soma_0 { pt3dadd( 0.523485, -1.79752, -0.0142487, 10.564 ) }
    soma_0 { pt3dadd( 0.775607, -2.74837, 0.00871831, 10.4925 ) }
    soma_0 { pt3dadd( 1.02773, -3.69921, 0.0316853, 10.2088 ) }
    soma_0 { pt3dadd( 1.27985, -4.65006, 0.0546523, 9.65193 ) }
    soma_0 { pt3dadd( 1.53197, -5.60091, 0.0776193, 9.00896 ) }
    soma_0 { pt3dadd( 1.7841, -6.55175, 0.100586, 8.08521 ) }
    soma_0 { pt3dadd( 2.03622, -7.5026, 0.123553, 6.83318 ) }
    soma_0 { pt3dadd( 2.28834, -8.45345, 0.14652, 5.15146 ) }
    soma_0 { pt3dadd( 2.54046, -9.40429, 0.169487, 3.38897 ) }
    soma_0 { pt3dadd( 2.79258, -10.3551, 0.192454, 2.13858 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 21/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -4.45367, 0.250762, 4.43561, 0.96 ) }
    dend_51 { pt3dadd( -5.1011, -0.452215, 5.5644, 0.96 ) }
    dend_51 { pt3dadd( -5.62356, -0.892925, 6.36104, 0.88 ) }
    dend_51 { pt3dadd( -7.35458, -2.12826, 8.66297, 0.81 ) }
    dend_51 { pt3dadd( -8.10575, -2.64012, 9.55781, 0.74 ) }
    dend_51 { pt3dadd( -9.28661, -3.48502, 10.8817, 0.66 ) }
    dend_51 { pt3dadd( -10.0016, -4.01379, 11.7959, 0.59 ) }
    dend_51 { pt3dadd( -10.5748, -4.49533, 12.6781, 0.81 ) }
    dend_51 { pt3dadd( -11.0175, -4.84589, 13.3666, 0.81 ) }
    dend_51 { pt3dadd( -11.9645, -5.4514, 14.7774, 0.59 ) }
    dend_51 { pt3dadd( -12.7814, -5.89612, 16.034, 1.33 ) }
    dend_51 { pt3dadd( -14.7516, -6.81357, 19.2073, 1.55 ) }
    dend_51 { pt3dadd( -16.1963, -7.41459, 21.7465, 0.74 ) }
    dend_51 { pt3dadd( -16.7115, -7.57681, 22.6699, 0.59 ) }
    dend_51 { pt3dadd( -17.4305, -7.73825, 23.947, 1.03 ) }
    dend_51 { pt3dadd( -17.7231, -7.76499, 24.4477, 1.47 ) }
    dend_51 { pt3dadd( -18.5481, -7.73654, 25.7881, 1.47 ) }
    dend_51 { pt3dadd( -20.1819, -7.55396, 28.4406, 0.81 ) }
    dend_51 { pt3dadd( -20.7695, -7.48831, 29.6054, 0.59 ) }
    dend_51 { pt3dadd( -21.3088, -7.50955, 30.9721, 0.59 ) }
    dend_51 { pt3dadd( -21.6418, -7.6067, 31.9614, 0.96 ) }
    dend_51 { pt3dadd( -21.9402, -7.79385, 33.0274, 0.96 ) }
    dend_51 { pt3dadd( -22.7193, -8.51118, 36.3953, 0.59 ) }
    dend_51 { pt3dadd( -23.0338, -8.98957, 38.4459, 0.59 ) }
    dend_51 { pt3dadd( -23.1753, -9.37389, 40.0363, 0.44 ) }
    dend_51 { pt3dadd( -23.2219, -9.63773, 41.0358, 1.18 ) }
    dend_51 { pt3dadd( -23.2375, -9.95348, 41.9201, 1.47 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 48/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.51366, 8.37777, 1.68561, 3.24 ) }
    dend_22 { pt3dadd( -1.51897, 8.95578, 1.79043, 3.24 ) }
    dend_22 { pt3dadd( -1.53701, 10.9189, 2.14644, 2.58 ) }
    dend_22 { pt3dadd( -1.55112, 12.4552, 2.42504, 2.36 ) }
    dend_22 { pt3dadd( -1.56262, 13.7067, 2.65199, 2.36 ) }
    dend_22 { pt3dadd( -1.57592, 15.1544, 2.91452, 2.36 ) }
    dend_22 { pt3dadd( -1.58234, 15.8538, 3.04137, 2.5 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 55/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.55634, -6.66873, 3.06561, 1.18 ) }
    dend_17 { pt3dadd( 5.77466, -6.74883, 3.26332, 1.18 ) }
    dend_17 { pt3dadd( 7.10852, -7.3568, 4.23113, 0.88 ) }
    dend_17 { pt3dadd( 7.8416, -7.69423, 4.64769, 1.11 ) }
    dend_17 { pt3dadd( 9.8816, -8.57769, 5.56587, 1.33 ) }
    dend_17 { pt3dadd( 10.8979, -8.9845, 5.9248, 1.33 ) }
    dend_17 { pt3dadd( 12.0515, -9.43366, 6.33275, 1.25 ) }
    dend_17 { pt3dadd( 13.4449, -9.96208, 6.75333, 0.96 ) }
    dend_17 { pt3dadd( 14.5774, -10.4091, 7.00832, 0.96 ) }
    dend_17 { pt3dadd( 15.5214, -10.8029, 7.1613, 1.25 ) }
    dend_17 { pt3dadd( 16.6813, -11.2526, 7.31858, 1.25 ) }
    dend_17 { pt3dadd( 18.3163, -11.7808, 7.63705, 1.47 ) }
    dend_17 { pt3dadd( 19.4072, -12.0656, 7.93153, 0.74 ) }
    dend_17 { pt3dadd( 20.248, -12.2186, 8.26986, 0.74 ) }
    dend_17 { pt3dadd( 21.4861, -12.3901, 8.86575, 0.59 ) }
    dend_17 { pt3dadd( 23.0884, -12.5894, 9.66719, 0.59 ) }
    dend_17 { pt3dadd( 23.7283, -12.6623, 9.97408, 0.81 ) }
    dend_17 { pt3dadd( 24.464, -12.7445, 10.2605, 0.81 ) }
    dend_17 { pt3dadd( 26.1856, -12.8756, 10.9872, 0.52 ) }
    dend_17 { pt3dadd( 26.8426, -12.8871, 11.2745, 0.52 ) }
    dend_17 { pt3dadd( 27.9088, -12.8571, 11.7304, 0.52 ) }
    dend_17 { pt3dadd( 28.7396, -12.9555, 11.9818, 0.59 ) }
    dend_17 { pt3dadd( 30.0297, -13.3369, 12.2242, 1.47 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 78/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.77634, -10.3018, 1.87561, 2.43 ) }
    dend_0 { pt3dadd( 1.77634, -10.3018, 1.87561, 2.43 ) }
    dend_0 { pt3dadd( 1.8451, -11.4593, 1.60558, 2.06 ) }
    dend_0 { pt3dadd( 1.9478, -13.1883, 1.20226, 1.33 ) }
    dend_0 { pt3dadd( 2.04864, -14.8861, 0.806223, 0.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.79258, -10.3551, 0.192454, 0.59 ) }
    axon_0 { pt3dadd( 6.63706, -24.8541, 0.192454, 0.59 ) }
    axon_0 { pt3dadd( 10.4816, -39.353, 0.192454, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 86/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.58234, 15.8538, 3.04137, 2.06 ) }
    dend_26 { pt3dadd( -1.11944, 16.8163, 4.41452, 2.06 ) }
    dend_26 { pt3dadd( -0.158836, 18.837, 6.95798, 1.92 ) }
    dend_26 { pt3dadd( 0.763237, 20.8615, 9.28975, 1.47 ) }
    dend_26 { pt3dadd( 1.17345, 21.8297, 10.3016, 1.47 ) }
    dend_26 { pt3dadd( 1.81435, 23.4567, 11.8368, 1.25 ) }
    dend_26 { pt3dadd( 2.28787, 24.6588, 12.971, 1.77 ) }
    dend_26 { pt3dadd( 2.76667, 25.966, 14.1349, 1.55 ) }
    dend_26 { pt3dadd( 3.33959, 27.5952, 15.2844, 1.62 ) }
    dend_26 { pt3dadd( 3.7116, 28.7538, 15.9543, 2.21 ) }
    dend_26 { pt3dadd( 4.09139, 30.0556, 16.6308, 2.65 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 97/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.58234, 15.8538, 3.04137, 0.59 ) }
    dend_23 { pt3dadd( -3.62836, 16.0082, 3.05279, 0.59 ) }
    dend_23 { pt3dadd( -4.73824, 16.0116, 3.08974, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( -5.70984, 15.9409, 3.07278, 0.59 ) }
    dend_23 { pt3dadd( -7.71449, 15.7159, 2.87693, 0.52 ) }
    dend_23 { pt3dadd( -9.05772, 15.5612, 2.67967, 0.81 ) }
    dend_23 { pt3dadd( -10.0929, 15.4524, 2.50606, 1.18 ) }
    dend_23 { pt3dadd( -10.8729, 15.3358, 2.37615, 1.18 ) }
    dend_23 { pt3dadd( -12.7748, 15.021, 2.02323, 0.66 ) }
    dend_23 { pt3dadd( -14.4511, 14.7752, 1.7241, 0.66 ) }
    dend_23 { pt3dadd( -15.5546, 14.6501, 1.56038, 1.25 ) }
    dend_23 { pt3dadd( -16.1778, 14.6001, 1.49293, 1.47 ) }
    dend_23 { pt3dadd( -17.5871, 14.5347, 1.37231, 0.52 ) }
    dend_23 { pt3dadd( -18.6095, 14.5164, 1.34342, 0.52 ) }
    dend_23 { pt3dadd( -20.2398, 14.5221, 1.5067, 0.52 ) }
    dend_23 { pt3dadd( -21.2508, 14.5039, 1.71388, 1.03 ) }
    dend_23 { pt3dadd( -21.9678, 14.4583, 1.88848, 1.33 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 14/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 30.0297, -13.3369, 12.2242, 0.52 ) }
    dend_21 { pt3dadd( 29.9242, -15.6066, 11.947, 0.52 ) }
    dend_21 { pt3dadd( 29.7239, -16.5314, 11.8501, 0.37 ) }
    dend_21 { pt3dadd( 29.049, -18.6334, 11.5748, 0.37 ) }
    dend_21 { pt3dadd( 28.4324, -20.1259, 11.2189, 0.59 ) }
    dend_21 { pt3dadd( 28.0603, -20.9367, 10.9641, 0.22 ) }
    dend_21 { pt3dadd( 27.1847, -22.72, 10.3849, 0.22 ) }
    dend_21 { pt3dadd( 26.5234, -23.8896, 9.92946, 0.22 ) }
    dend_21 { pt3dadd( 25.3368, -25.7747, 9.14349, 0.74 ) }
    dend_21 { pt3dadd( 23.5231, -28.3366, 8.04532, 0.29 ) }
    dend_21 { pt3dadd( 22.3233, -30.016, 7.29464, 0.07 ) }
    dend_21 { pt3dadd( 21.7625, -30.8653, 6.86943, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 26/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 30.0297, -13.3369, 12.2242, 1.03 ) }
    dend_18 { pt3dadd( 32.0633, -13.3995, 13.7277, 1.03 ) }
    dend_18 { pt3dadd( 32.9835, -13.4713, 13.991, 0.52 ) }
    dend_18 { pt3dadd( 34.4453, -13.4448, 14.2271, 0.52 ) }
    dend_18 { pt3dadd( 37.3944, -13.2555, 14.5956, 0.37 ) }
    dend_18 { pt3dadd( 39.0833, -13.1397, 14.691, 0.37 ) }
    dend_18 { pt3dadd( 43.1751, -12.8583, 14.7513, 0.37 ) }
    dend_18 { pt3dadd( 53.7675, -12.2353, 14.1345, 0.37 ) }
    dend_18 { pt3dadd( 59.9738, -11.886, 13.4763, 0.66 ) }
    dend_18 { pt3dadd( 61.5994, -11.7838, 13.224, 0.66 ) }
    dend_18 { pt3dadd( 65.5383, -11.4762, 12.3086, 0.74 ) }
    dend_18 { pt3dadd( 67.2736, -11.2978, 11.7821, 0.74 ) }
    dend_18 { pt3dadd( 69.496, -11.0124, 10.8476, 0.37 ) }
    dend_18 { pt3dadd( 70.8663, -10.8263, 10.121, 0.37 ) }
    dend_18 { pt3dadd( 72.1966, -10.745, 9.49479, 0.37 ) }
    dend_18 { pt3dadd( 73.4749, -10.6087, 9.10928, 0.81 ) }
    dend_18 { pt3dadd( 75.1087, -10.2907, 8.95967, 0.81 ) }
    dend_18 { pt3dadd( 76.3795, -10.0133, 8.94951, 0.81 ) }
    dend_18 { pt3dadd( 78.3968, -9.69218, 9.10021, 0.37 ) }
    dend_18 { pt3dadd( 79.8908, -9.65055, 9.24884, 0.29 ) }
    dend_18 { pt3dadd( 81.545, -9.83338, 9.46192, 0.29 ) }
    dend_18 { pt3dadd( 83.5706, -10.256, 9.83774, 0.44 ) }
    dend_18 { pt3dadd( 85.0844, -10.673, 10.2567, 0.44 ) }
    dend_18 { pt3dadd( 87.4236, -11.4001, 11.0249, 0.44 ) }
    dend_18 { pt3dadd( 89.4829, -12.0689, 11.7273, 0.88 ) }
    dend_18 { pt3dadd( 90.359, -12.3194, 12.0701, 0.88 ) }
    dend_18 { pt3dadd( 92.4692, -12.6947, 13.1232, 0.52 ) }
    dend_18 { pt3dadd( 94.3754, -12.672, 14.3443, 0.74 ) }
    dend_18 { pt3dadd( 95.9348, -12.3353, 15.4341, 0.81 ) }
    dend_18 { pt3dadd( 96.8941, -11.9615, 16.0878, 0.81 ) }
    dend_18 { pt3dadd( 98.1132, -11.3797, 16.8615, 0.52 ) }
    dend_18 { pt3dadd( 99.6949, -10.6012, 17.7462, 0.52 ) }
    dend_18 { pt3dadd( 100.514, -10.2351, 18.1218, 0.74 ) }
    dend_18 { pt3dadd( 101.82, -9.78389, 18.5971, 0.74 ) }
    dend_18 { pt3dadd( 103.245, -9.48088, 19.0394, 0.59 ) }
    dend_18 { pt3dadd( 104.637, -9.38147, 19.3786, 0.59 ) }
    dend_18 { pt3dadd( 106.433, -9.47238, 19.695, 0.66 ) }
    dend_18 { pt3dadd( 107.775, -9.70346, 19.813, 0.88 ) }
    dend_18 { pt3dadd( 108.676, -9.95748, 19.8302, 0.88 ) }
    dend_18 { pt3dadd( 109.734, -10.4353, 19.7667, 0.52 ) }
    dend_18 { pt3dadd( 111.026, -11.2828, 19.5874, 0.52 ) }
    dend_18 { pt3dadd( 111.897, -12.0991, 19.3656, 0.52 ) }
    dend_18 { pt3dadd( 113.168, -13.7733, 18.8936, 0.44 ) }
    dend_18 { pt3dadd( 113.958, -14.9838, 18.4625, 0.44 ) }
    dend_18 { pt3dadd( 114.964, -16.649, 17.7441, 0.59 ) }
    dend_18 { pt3dadd( 115.38, -17.3475, 17.38, 0.74 ) }
    dend_18 { pt3dadd( 116.063, -18.3174, 16.7243, 0.52 ) }
    dend_18 { pt3dadd( 116.706, -18.609, 16.2304, 0.37 ) }
    dend_18 { pt3dadd( 119.045, -18.0616, 14.946, 0.52 ) }
    dend_18 { pt3dadd( 119.971, -17.7956, 14.4993, 0.52 ) }
    dend_18 { pt3dadd( 121.083, -17.5066, 14.0297, 0.52 ) }
    dend_18 { pt3dadd( 122.964, -17.1176, 13.3388, 0.52 ) }
    dend_18 { pt3dadd( 124.757, -16.7515, 12.7657, 0.52 ) }
    dend_18 { pt3dadd( 126.524, -16.4073, 12.2618, 0.66 ) }
    dend_18 { pt3dadd( 127.987, -16.1887, 11.9205, 0.66 ) }
    dend_18 { pt3dadd( 129.47, -15.9722, 11.5759, 0.37 ) }
    dend_18 { pt3dadd( 130.86, -15.8045, 11.2662, 0.37 ) }
    dend_18 { pt3dadd( 132.399, -15.6856, 10.9579, 0.37 ) }
    dend_18 { pt3dadd( 133.446, -15.63, 10.7222, 0.66 ) }
    dend_18 { pt3dadd( 133.983, -15.6176, 10.5674, 0.66 ) }
    dend_18 { pt3dadd( 134.641, -15.6365, 10.2742, 0.66 ) }
    dend_18 { pt3dadd( 135.293, -15.714, 9.88088, 0.66 ) }
    dend_18 { pt3dadd( 136.295, -15.9298, 9.16914, 0.37 ) }
    dend_18 { pt3dadd( 137.664, -16.3474, 8.15811, 0.37 ) }
    dend_18 { pt3dadd( 139.093, -16.7669, 7.20483, 0.37 ) }
    dend_18 { pt3dadd( 140.312, -17.0511, 6.48705, 0.22 ) }
    dend_18 { pt3dadd( 141.485, -17.2632, 5.92209, 0.37 ) }
    dend_18 { pt3dadd( 142.443, -17.3262, 5.60354, 0.44 ) }
    dend_18 { pt3dadd( 143.388, -17.2309, 5.45313, 0.44 ) }
    dend_18 { pt3dadd( 145.398, -16.7338, 5.4664, 0.52 ) }
    dend_18 { pt3dadd( 146.048, -16.516, 5.52266, 0.37 ) }
    dend_18 { pt3dadd( 147.068, -16.1251, 5.65047, 0.37 ) }
    dend_18 { pt3dadd( 148.063, -15.7441, 5.73898, 0.52 ) }
    dend_18 { pt3dadd( 148.77, -15.4518, 5.69801, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_18 { pt3dadd( 149.346, -15.2013, 5.55054, 0.88 ) }
    dend_18 { pt3dadd( 149.751, -14.9976, 5.3729, 0.88 ) }
    dend_18 { pt3dadd( 150.276, -14.6948, 5.12076, 1.03 ) }
    dend_18 { pt3dadd( 150.94, -14.2555, 4.77361, 1.03 ) }
    dend_18 { pt3dadd( 151.963, -13.5802, 4.21905, 0.52 ) }
    dend_18 { pt3dadd( 153.183, -12.8395, 3.53431, 0.29 ) }
    dend_18 { pt3dadd( 154.227, -12.3541, 2.99804, 0.66 ) }
    dend_18 { pt3dadd( 155.037, -12.0512, 2.59561, 0.81 ) }
    dend_18 { pt3dadd( 155.832, -11.8205, 2.21432, 0.81 ) }
    dend_18 { pt3dadd( 156.552, -11.6441, 1.87476, 0.81 ) }
    dend_18 { pt3dadd( 157.725, -11.4165, 1.36741, 0.37 ) }
    dend_18 { pt3dadd( 159.979, -11.1638, 0.423533, 0.37 ) }
    dend_18 { pt3dadd( 161.102, -11.1026, -0.00458717, 0.44 ) }
    dend_18 { pt3dadd( 162.065, -11.0375, -0.34906, 0.59 ) }
    dend_18 { pt3dadd( 162.951, -10.9252, -0.645119, 0.59 ) }
    dend_18 { pt3dadd( 164.251, -10.6559, -1.04242, 0.59 ) }
    dend_18 { pt3dadd( 165.44, -10.2912, -1.36515, 0.52 ) }
    dend_18 { pt3dadd( 166.78, -9.77468, -1.70475, 0.74 ) }
    dend_18 { pt3dadd( 167.705, -9.44938, -1.88967, 0.74 ) }
    dend_18 { pt3dadd( 169.035, -9.07515, -2.19923, 0.37 ) }
    dend_18 { pt3dadd( 170.049, -8.85631, -2.47555, 0.44 ) }
    dend_18 { pt3dadd( 171.163, -8.67295, -2.82193, 0.66 ) }
    dend_18 { pt3dadd( 171.994, -8.58558, -3.09718, 0.74 ) }
    dend_18 { pt3dadd( 172.911, -8.58383, -3.39782, 0.74 ) }
    dend_18 { pt3dadd( 174.823, -8.68896, -4.04399, 0.59 ) }
    dend_18 { pt3dadd( 175.367, -8.73444, -4.24094, 0.59 ) }
    dend_18 { pt3dadd( 176.16, -8.78309, -4.55866, 0.59 ) }
    dend_18 { pt3dadd( 176.948, -8.82861, -4.92409, 0.37 ) }
    dend_18 { pt3dadd( 178.165, -8.85144, -5.52814, 0.59 ) }
    dend_18 { pt3dadd( 179.227, -8.82086, -6.09833, 0.81 ) }
    dend_18 { pt3dadd( 180.03, -8.76248, -6.48775, 0.81 ) }
    dend_18 { pt3dadd( 181.259, -8.68835, -7.01475, 0.52 ) }
    dend_18 { pt3dadd( 182.623, -8.57517, -7.51917, 0.37 ) }
    dend_18 { pt3dadd( 183.559, -8.467, -7.80182, 0.29 ) }
    dend_18 { pt3dadd( 184.264, -8.35985, -7.9535, 0.29 ) }
    dend_18 { pt3dadd( 185.851, -7.99275, -8.13975, 0.52 ) }
    dend_18 { pt3dadd( 187.425, -7.51412, -8.22182, 0.52 ) }
    dend_18 { pt3dadd( 188.479, -7.19508, -8.2198, 0.88 ) }
    dend_18 { pt3dadd( 189.34, -6.98285, -8.2343, 0.88 ) }
    dend_18 { pt3dadd( 190.002, -6.87651, -8.32125, 0.88 ) }
    dend_18 { pt3dadd( 191.452, -6.7298, -8.69249, 0.37 ) }
    dend_18 { pt3dadd( 192.45, -6.65848, -9.12572, 0.37 ) }
    dend_18 { pt3dadd( 193.85, -6.59116, -9.89943, 0.37 ) }
    dend_18 { pt3dadd( 195.519, -6.60114, -10.841, 0.29 ) }
    dend_18 { pt3dadd( 196.788, -6.65988, -11.6738, 0.29 ) }
    dend_18 { pt3dadd( 197.567, -6.67458, -12.2328, 0.52 ) }
    dend_18 { pt3dadd( 197.964, -6.66521, -12.5468, 0.74 ) }
    dend_18 { pt3dadd( 198.642, -6.59645, -13.1446, 0.44 ) }
    dend_18 { pt3dadd( 199.995, -6.36624, -14.3489, 0.37 ) }
    dend_18 { pt3dadd( 202.211, -5.90321, -16.205, 0.44 ) }
    dend_18 { pt3dadd( 203.461, -5.67204, -17.2532, 0.44 ) }
    dend_18 { pt3dadd( 204.705, -5.48211, -18.3645, 1.03 ) }
    dend_18 { pt3dadd( 205.943, -5.32296, -19.5433, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 2.04864, -14.8861, 0.806223, 1.18 ) }
    dend_2 { pt3dadd( 1.78204, -16.3961, 2.29319, 1.18 ) }
    dend_2 { pt3dadd( 1.58777, -17.0808, 2.94724, 1.18 ) }
    dend_2 { pt3dadd( 1.09502, -18.8176, 4.6062, 1.18 ) }
    dend_2 { pt3dadd( 0.743625, -20.0562, 5.78926, 0.88 ) }
    dend_2 { pt3dadd( 0.52494, -20.827, 6.52551, 0.74 ) }
    dend_2 { pt3dadd( 0.334157, -21.4995, 7.16783, 1.03 ) }
    dend_2 { pt3dadd( -0.203823, -22.7437, 8.17617, 1.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 2.04864, -14.8861, 0.806223, 0.96 ) }
    dend_1 { pt3dadd( 1.57797, -16.1836, -1.59322, 0.96 ) }
    dend_1 { pt3dadd( 1.2494, -17.3523, -3.39581, 0.96 ) }
    dend_1 { pt3dadd( 1.19884, -17.5196, -3.62533, 1.4 ) }
    dend_1 { pt3dadd( 0.631605, -19.6796, -6.42285, 0.88 ) }
    dend_1 { pt3dadd( 0.540975, -20.1393, -6.98875, 0.88 ) }
    dend_1 { pt3dadd( 0.429729, -20.9493, -7.95686, 0.52 ) }
    dend_1 { pt3dadd( 0.38254, -22.0204, -9.14619, 0.52 ) }
    dend_1 { pt3dadd( 0.373107, -23.7992, -11.0192, 0.88 ) }
    dend_1 { pt3dadd( 0.44722, -26.0287, -13.2382, 0.52 ) }
    dend_1 { pt3dadd( 0.600115, -27.7294, -14.8463, 0.52 ) }
    dend_1 { pt3dadd( 0.740232, -28.7337, -15.8138, 0.52 ) }
    dend_1 { pt3dadd( 0.927438, -29.8289, -16.8442, 0.52 ) }
    dend_1 { pt3dadd( 1.09911, -30.7389, -17.6533, 0.52 ) }
    dend_1 { pt3dadd( 1.35761, -31.9367, -18.5865, 0.88 ) }
    dend_1 { pt3dadd( 1.5104, -32.8414, -19.1646, 1.11 ) }
    dend_1 { pt3dadd( 1.73746, -34.7677, -20.204, 0.44 ) }
    dend_1 { pt3dadd( 1.84423, -36.0151, -20.8273, 0.74 ) }
    dend_1 { pt3dadd( 1.92446, -36.9041, -21.2366, 0.96 ) }
    dend_1 { pt3dadd( 2.0323, -37.7866, -21.6164, 0.96 ) }
    dend_1 { pt3dadd( 2.2035, -39.1688, -22.2397, 0.66 ) }
    dend_1 { pt3dadd( 2.27509, -39.8335, -22.5627, 0.66 ) }
    dend_1 { pt3dadd( 2.46112, -41.4616, -23.4189, 0.44 ) }
    dend_1 { pt3dadd( 2.54865, -42.3175, -24.0811, 0.59 ) }
    dend_1 { pt3dadd( 2.65483, -43.1548, -24.913, 0.44 ) }
    dend_1 { pt3dadd( 2.78542, -44.5326, -26.9737, 0.37 ) }
    dend_1 { pt3dadd( 2.80024, -45.2787, -28.5765, 0.96 ) }
    dend_1 { pt3dadd( 2.78543, -45.5326, -29.2394, 1.33 ) }
    dend_1 { pt3dadd( 2.4823, -47.0553, -33.8022, 0.81 ) }
    dend_1 { pt3dadd( 2.36525, -47.4215, -34.9752, 1.11 ) }
    dend_1 { pt3dadd( 1.63585, -49.1657, -40.6443, 0.66 ) }
    dend_1 { pt3dadd( 0.947928, -50.5511, -44.9587, 1.55 ) }
    dend_1 { pt3dadd( 0.231195, -51.946, -48.8481, 0.96 ) }
    dend_1 { pt3dadd( -0.547658, -53.3985, -52.4038, 0.81 ) }
    dend_1 { pt3dadd( -0.887915, -54.0293, -53.6701, 0.96 ) }
    dend_1 { pt3dadd( -1.28563, -54.7897, -54.8303, 0.37 ) }
    dend_1 { pt3dadd( -1.87334, -56.084, -56.0616, 0.29 ) }
    dend_1 { pt3dadd( -2.45712, -57.5801, -56.8967, 0.29 ) }
    dend_1 { pt3dadd( -2.76143, -58.4873, -57.1668, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -2.888, -59.0076, -57.2409, 0.52 ) }
    dend_1 { pt3dadd( -3.35113, -61.2604, -57.5761, 0.29 ) }
    dend_1 { pt3dadd( -3.46467, -61.8836, -57.69, 0.59 ) }
    dend_1 { pt3dadd( -3.55141, -62.4484, -57.8028, 0.59 ) }
    dend_1 { pt3dadd( -3.66792, -63.1682, -57.9684, 0.29 ) }
    dend_1 { pt3dadd( -3.92097, -64.6374, -58.3733, 0.29 ) }
    dend_1 { pt3dadd( -4.18595, -66.077, -58.8634, 0.59 ) }
    dend_1 { pt3dadd( -4.29796, -66.5689, -59.0635, 0.81 ) }
    dend_1 { pt3dadd( -4.90461, -68.8165, -60.0676, 0.22 ) }
    dend_1 { pt3dadd( -5.24566, -69.9489, -60.6453, 0.22 ) }
    dend_1 { pt3dadd( -5.75285, -71.5254, -61.538, 0.22 ) }
    dend_1 { pt3dadd( -6.37457, -73.3794, -62.6506, 0.81 ) }
    dend_1 { pt3dadd( -6.97464, -75.0476, -63.7454, 0.44 ) }
    dend_1 { pt3dadd( -7.33358, -76.0077, -64.4227, 0.44 ) }
    dend_1 { pt3dadd( -7.95405, -77.6235, -65.638, 0.88 ) }
    dend_1 { pt3dadd( -8.32654, -78.7403, -66.4486, 0.74 ) }
    dend_1 { pt3dadd( -8.46174, -79.2038, -66.7652, 0.74 ) }
    dend_1 { pt3dadd( -9.10603, -81.4912, -68.1552, 0.44 ) }
    dend_1 { pt3dadd( -9.36921, -82.4953, -68.6826, 0.44 ) }
    dend_1 { pt3dadd( -9.62424, -83.3281, -69.0775, 0.29 ) }
    dend_1 { pt3dadd( -10.064, -84.58, -69.5658, 0.29 ) }
    dend_1 { pt3dadd( -10.9234, -86.6624, -70.2556, 0.29 ) }
    dend_1 { pt3dadd( -11.4693, -87.8608, -70.591, 0.74 ) }
    dend_1 { pt3dadd( -11.9403, -88.8526, -70.7843, 0.74 ) }
    dend_1 { pt3dadd( -12.9031, -90.7394, -71.1264, 0.44 ) }
    dend_1 { pt3dadd( -13.3533, -91.605, -71.2582, 0.44 ) }
    dend_1 { pt3dadd( -13.8237, -92.5471, -71.3589, 0.29 ) }
    dend_1 { pt3dadd( -14.0046, -92.9524, -71.3679, 0.66 ) }
    dend_1 { pt3dadd( -14.4714, -94.0252, -71.3649, 0.37 ) }
    dend_1 { pt3dadd( -14.8477, -94.897, -71.3284, 0.88 ) }
    dend_1 { pt3dadd( -15.2297, -95.687, -71.2813, 0.88 ) }
    dend_1 { pt3dadd( -15.8187, -96.7458, -71.2554, 0.59 ) }
    dend_1 { pt3dadd( -16.4509, -97.7645, -71.2514, 0.29 ) }
    dend_1 { pt3dadd( -17.1726, -98.7747, -71.3593, 0.66 ) }
    dend_1 { pt3dadd( -17.5356, -99.2311, -71.475, 0.66 ) }
    dend_1 { pt3dadd( -18.7115, -100.721, -72.152, 0.22 ) }
    dend_1 { pt3dadd( -19.1196, -101.278, -72.4966, 0.22 ) }
    dend_1 { pt3dadd( -19.4307, -101.718, -72.8161, 0.74 ) }
    dend_1 { pt3dadd( -20.4087, -103.281, -74.1316, 0.44 ) }
    dend_1 { pt3dadd( -20.9146, -104.231, -75.0295, 0.44 ) }
    dend_1 { pt3dadd( -21.5043, -105.531, -76.3842, 0.29 ) }
    dend_1 { pt3dadd( -21.6255, -105.919, -76.8452, 0.44 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 42/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.4816, -39.353, 0.192454, 0.15 ) }
    axon_1 { pt3dadd( 14.326, -53.852, 0.192454, 0.15 ) }
    axon_1 { pt3dadd( 18.1705, -68.351, 0.192454, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_26 (entry count 45/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 4.09139, 30.0556, 16.6308, 0.81 ) }
    dend_50 { pt3dadd( 5.54511, 31.7982, 16.221, 0.81 ) }
    dend_50 { pt3dadd( 6.14289, 32.5317, 15.9723, 0.81 ) }
    dend_50 { pt3dadd( 7.22407, 33.7539, 15.437, 0.81 ) }
    dend_50 { pt3dadd( 8.68869, 35.2771, 14.6686, 0.96 ) }
    dend_50 { pt3dadd( 9.46564, 36.0434, 14.2508, 1.25 ) }
    dend_50 { pt3dadd( 10.1508, 36.6911, 13.8823, 1.25 ) }
    dend_50 { pt3dadd( 11.4112, 37.8786, 13.1566, 0.96 ) }
    dend_50 { pt3dadd( 12.4443, 38.8747, 12.5326, 0.81 ) }
    dend_50 { pt3dadd( 13.3775, 39.7739, 11.9434, 1.33 ) }
    dend_50 { pt3dadd( 13.979, 40.3472, 11.5189, 1.62 ) }
    dend_50 { pt3dadd( 14.8958, 41.1618, 10.8747, 0.74 ) }
    dend_50 { pt3dadd( 15.7506, 41.864, 10.2986, 0.59 ) }
    dend_50 { pt3dadd( 16.6084, 42.5859, 9.71075, 0.52 ) }
    dend_50 { pt3dadd( 17.544, 43.509, 8.90679, 0.44 ) }
    dend_50 { pt3dadd( 18.0891, 44.0859, 8.28143, 0.44 ) }
    dend_50 { pt3dadd( 19.0266, 45.0252, 6.89118, 0.74 ) }
    dend_50 { pt3dadd( 19.5703, 45.4946, 5.92618, 0.74 ) }
    dend_50 { pt3dadd( 20.4651, 46.064, 4.23499, 0.52 ) }
    dend_50 { pt3dadd( 21.2676, 46.4104, 2.79342, 0.88 ) }
    dend_50 { pt3dadd( 22.1002, 46.7215, 1.2592, 0.88 ) }
    dend_50 { pt3dadd( 22.7654, 47.09, -0.159877, 0.59 ) }
    dend_50 { pt3dadd( 23.0749, 47.3071, -0.887438, 0.59 ) }
    dend_50 { pt3dadd( 23.4584, 47.5686, -1.7258, 0.44 ) }
    dend_50 { pt3dadd( 24.133, 47.989, -2.75422, 0.44 ) }
    dend_50 { pt3dadd( 24.7296, 48.4305, -3.4218, 0.44 ) }
    dend_50 { pt3dadd( 26.017, 49.6124, -4.48465, 0.44 ) }
    dend_50 { pt3dadd( 27.0738, 50.7918, -5.23282, 0.74 ) }
    dend_50 { pt3dadd( 27.9359, 51.9934, -5.7894, 0.96 ) }
    dend_50 { pt3dadd( 29.4964, 54.6741, -6.66024, 0.44 ) }
    dend_50 { pt3dadd( 29.8399, 55.3683, -6.8276, 0.96 ) }
    dend_50 { pt3dadd( 30.4307, 56.6959, -7.07713, 0.37 ) }
    dend_50 { pt3dadd( 30.972, 58.1175, -7.26951, 0.37 ) }
    dend_50 { pt3dadd( 31.3925, 59.7427, -7.65168, 0.37 ) }
    dend_50 { pt3dadd( 31.5874, 61.0687, -8.11103, 0.74 ) }
    dend_50 { pt3dadd( 31.6592, 62.0197, -8.56778, 0.44 ) }
    dend_50 { pt3dadd( 31.717, 63.2318, -9.18871, 0.52 ) }
    dend_50 { pt3dadd( 31.7216, 64.1657, -9.68751, 1.11 ) }
    dend_50 { pt3dadd( 31.6744, 66.9373, -11.1784, 0.44 ) }
    dend_50 { pt3dadd( 31.6176, 68.4192, -11.9475, 0.29 ) }
    dend_50 { pt3dadd( 31.5073, 69.7883, -12.6318, 0.29 ) }
    dend_50 { pt3dadd( 31.4036, 70.803, -13.0968, 0.81 ) }
    dend_50 { pt3dadd( 31.313, 71.6785, -13.4645, 0.81 ) }
    dend_50 { pt3dadd( 31.2061, 73.0101, -13.9623, 0.52 ) }
    dend_50 { pt3dadd( 31.0859, 74.7894, -14.5253, 0.52 ) }
    dend_50 { pt3dadd( 30.9034, 76.8516, -15.2462, 0.44 ) }
    dend_50 { pt3dadd( 30.8316, 77.4093, -15.4548, 0.88 ) }
    dend_50 { pt3dadd( 30.7113, 78.3332, -15.8331, 0.88 ) }
    dend_50 { pt3dadd( 30.6003, 79.632, -16.3935, 0.37 ) }
    dend_50 { pt3dadd( 30.5905, 80.6216, -16.9158, 0.22 ) }
    dend_50 { pt3dadd( 30.6387, 81.5796, -17.4665, 0.22 ) }
    dend_50 { pt3dadd( 30.7407, 82.5418, -18.0532, 0.22 ) }
    dend_50 { pt3dadd( 30.9404, 83.7547, -18.8487, 0.22 ) }
    dend_50 { pt3dadd( 31.2949, 85.3576, -19.8541, 0.22 ) }
    dend_50 { pt3dadd( 31.9673, 87.6461, -21.2071, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_50 { pt3dadd( 32.2291, 88.3259, -21.5678, 0.81 ) }
    dend_50 { pt3dadd( 32.8228, 89.5957, -22.1914, 0.81 ) }
    dend_50 { pt3dadd( 33.3896, 90.685, -22.6678, 0.44 ) }
    dend_50 { pt3dadd( 34.1678, 92.1284, -23.2216, 0.44 ) }
    dend_50 { pt3dadd( 34.4615, 92.67, -23.3841, 0.96 ) }
    dend_50 { pt3dadd( 35.0006, 93.6509, -23.5965, 0.52 ) }
    dend_50 { pt3dadd( 35.692, 94.8436, -23.8639, 0.37 ) }
    dend_50 { pt3dadd( 36.3034, 95.8989, -24.0924, 0.66 ) }
    dend_50 { pt3dadd( 36.7855, 96.7614, -24.318, 0.66 ) }
    dend_50 { pt3dadd( 37.26, 97.6613, -24.59, 0.29 ) }
    dend_50 { pt3dadd( 37.9589, 98.982, -24.9878, 0.29 ) }
    dend_50 { pt3dadd( 38.6484, 100.257, -25.3642, 0.59 ) }
    dend_50 { pt3dadd( 39.1355, 101.103, -25.6113, 0.37 ) }
    dend_50 { pt3dadd( 39.7444, 102.08, -25.9253, 0.66 ) }
    dend_50 { pt3dadd( 40.2569, 102.867, -26.1903, 0.66 ) }
    dend_50 { pt3dadd( 41.1618, 104.245, -26.6529, 0.29 ) }
    dend_50 { pt3dadd( 41.8303, 105.297, -26.9808, 0.29 ) }
    dend_50 { pt3dadd( 42.2562, 105.971, -27.1925, 0.29 ) }
    dend_50 { pt3dadd( 42.659, 106.542, -27.4036, 0.66 ) }
    dend_50 { pt3dadd( 42.9598, 106.942, -27.5656, 0.66 ) }
    dend_50 { pt3dadd( 43.3291, 107.47, -27.8344, 0.66 ) }
    dend_50 { pt3dadd( 43.9064, 108.38, -28.3647, 0.37 ) }
    dend_50 { pt3dadd( 44.5261, 109.417, -29.075, 0.37 ) }
    dend_50 { pt3dadd( 45.2328, 110.62, -30.0565, 0.96 ) }
    dend_50 { pt3dadd( 45.6268, 111.238, -30.6363, 0.96 ) }
    dend_50 { pt3dadd( 46.6568, 112.711, -32.1793, 0.29 ) }
    dend_50 { pt3dadd( 47.3344, 113.626, -33.2315, 0.29 ) }
    dend_50 { pt3dadd( 47.9716, 114.459, -34.176, 0.29 ) }
    dend_50 { pt3dadd( 48.9426, 115.61, -35.4067, 0.29 ) }
    dend_50 { pt3dadd( 49.5029, 116.199, -36.0, 0.74 ) }
    dend_50 { pt3dadd( 50.0269, 116.712, -36.4845, 0.74 ) }
    dend_50 { pt3dadd( 51.4866, 118.088, -37.5374, 0.29 ) }
    dend_50 { pt3dadd( 53.2898, 119.86, -38.6275, 0.29 ) }
    dend_50 { pt3dadd( 55.2094, 121.812, -39.5411, 0.29 ) }
    dend_50 { pt3dadd( 56.122, 122.8, -39.8868, 0.29 ) }
    dend_50 { pt3dadd( 56.9366, 123.736, -40.1554, 0.29 ) }
    dend_50 { pt3dadd( 58.2818, 125.328, -40.4735, 0.66 ) }
    dend_50 { pt3dadd( 58.9502, 126.081, -40.6215, 0.66 ) }
    dend_50 { pt3dadd( 59.7877, 126.916, -40.8635, 0.37 ) }
    dend_50 { pt3dadd( 60.6405, 127.712, -41.2392, 1.03 ) }
    dend_50 { pt3dadd( 61.4333, 128.364, -41.6658, 1.03 ) }
    dend_50 { pt3dadd( 62.6634, 129.257, -42.4667, 0.66 ) }
    dend_50 { pt3dadd( 65.066, 130.866, -44.3423, 0.22 ) }
    dend_50 { pt3dadd( 67.0659, 132.159, -46.0418, 0.52 ) }
    dend_50 { pt3dadd( 68.7891, 133.286, -47.6201, 0.29 ) }
    dend_50 { pt3dadd( 69.9122, 134.044, -48.7355, 0.29 ) }
    dend_50 { pt3dadd( 70.915, 134.82, -49.8317, 0.66 ) }
    dend_50 { pt3dadd( 71.3296, 135.226, -50.319, 0.66 ) }
    dend_50 { pt3dadd( 72.1892, 136.27, -51.1094, 0.22 ) }
    dend_50 { pt3dadd( 72.7019, 136.994, -51.5161, 0.52 ) }
    dend_50 { pt3dadd( 73.1354, 137.65, -51.7981, 0.52 ) }
    dend_50 { pt3dadd( 75.0609, 140.686, -52.787, 0.22 ) }
    dend_50 { pt3dadd( 76.5292, 142.994, -53.4019, 0.22 ) }
    dend_50 { pt3dadd( 78.7391, 146.441, -54.1979, 0.22 ) }
    dend_50 { pt3dadd( 79.8971, 148.251, -54.5593, 0.52 ) }
    dend_50 { pt3dadd( 80.5515, 149.259, -54.7206, 0.22 ) }
    dend_50 { pt3dadd( 81.4349, 150.588, -54.8214, 0.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 57/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.09139, 30.0556, 16.6308, 0.66 ) }
    dend_27 { pt3dadd( 3.07023, 32.7975, 17.4037, 0.66 ) }
    dend_27 { pt3dadd( 2.88033, 33.683, 17.6305, 0.74 ) }
    dend_27 { pt3dadd( 2.73931, 34.8745, 17.964, 0.74 ) }
    dend_27 { pt3dadd( 2.58464, 36.0436, 18.1289, 1.03 ) }
    dend_27 { pt3dadd( 2.43723, 37.1617, 18.2321, 1.03 ) }
    dend_27 { pt3dadd( 2.25213, 38.4773, 18.3216, 0.74 ) }
    dend_27 { pt3dadd( 2.1846, 40.0465, 18.4689, 1.11 ) }
    dend_27 { pt3dadd( 2.15911, 41.4563, 18.5167, 1.47 ) }
    dend_27 { pt3dadd( 2.09028, 44.3614, 18.348, 1.62 ) }
    dend_27 { pt3dadd( 2.03112, 45.2567, 18.2155, 1.62 ) }
    dend_27 { pt3dadd( 1.95394, 45.8104, 18.0971, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 69/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -21.9678, 14.4583, 1.88848, 0.29 ) }
    dend_25 { pt3dadd( -22.5702, 14.6386, 3.12915, 0.29 ) }
    dend_25 { pt3dadd( -23.085, 14.7861, 3.99319, 0.88 ) }
    dend_25 { pt3dadd( -23.6471, 14.9221, 4.85697, 1.11 ) }
    dend_25 { pt3dadd( -25.6071, 15.3491, 7.68147, 1.03 ) }
    dend_25 { pt3dadd( -26.2271, 15.4578, 8.53705, 0.59 ) }
    dend_25 { pt3dadd( -26.7198, 15.5279, 9.24053, 0.29 ) }
    dend_25 { pt3dadd( -27.3523, 15.6055, 10.249, 0.29 ) }
    dend_25 { pt3dadd( -27.7042, 15.6572, 10.825, 0.52 ) }
    dend_25 { pt3dadd( -27.9259, 15.6996, 11.1733, 0.74 ) }
    dend_25 { pt3dadd( -28.4562, 15.8172, 11.8117, 0.74 ) }
    dend_25 { pt3dadd( -29.5096, 16.0859, 13.1322, 0.37 ) }
    dend_25 { pt3dadd( -29.9285, 16.2136, 13.6853, 0.59 ) }
    dend_25 { pt3dadd( -30.2145, 16.323, 14.0412, 0.59 ) }
    dend_25 { pt3dadd( -30.8082, 16.5794, 14.6912, 0.29 ) }
    dend_25 { pt3dadd( -31.6315, 16.9465, 15.5136, 0.59 ) }
    dend_25 { pt3dadd( -32.0246, 17.1124, 15.8283, 0.37 ) }
    dend_25 { pt3dadd( -32.9836, 17.4526, 16.4145, 0.29 ) }
    dend_25 { pt3dadd( -33.8622, 17.7198, 16.8775, 1.25 ) }
    dend_25 { pt3dadd( -34.2294, 17.8143, 17.0418, 1.62 ) }
    dend_25 { pt3dadd( -34.6422, 17.9232, 17.1835, 1.62 ) }
    dend_25 { pt3dadd( -35.8887, 18.2789, 17.5286, 0.29 ) }
    dend_25 { pt3dadd( -36.6938, 18.5031, 17.7287, 0.29 ) }
    dend_25 { pt3dadd( -37.6017, 18.7555, 17.9304, 0.52 ) }
    dend_25 { pt3dadd( -38.0862, 18.8933, 18.0344, 0.59 ) }
    dend_25 { pt3dadd( -39.5529, 19.3223, 18.3369, 0.22 ) }
    dend_25 { pt3dadd( -40.2705, 19.5442, 18.4757, 0.74 ) }
    dend_25 { pt3dadd( -40.9292, 19.7675, 18.6119, 0.74 ) }
    dend_25 { pt3dadd( -41.6282, 20.0138, 18.7566, 0.22 ) }
    dend_25 { pt3dadd( -42.0761, 20.1713, 18.8492, 0.37 ) }
    dend_25 { pt3dadd( -42.509, 20.3359, 18.9389, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 0/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -21.9678, 14.4583, 1.88848, 0.44 ) }
    dend_24 { pt3dadd( -22.9206, 14.0397, 1.82799, 0.44 ) }
    dend_24 { pt3dadd( -23.5715, 13.7364, 1.79523, 0.44 ) }
    dend_24 { pt3dadd( -24.1853, 13.4464, 1.7729, 0.96 ) }
    dend_24 { pt3dadd( -24.7659, 13.1579, 1.74191, 1.25 ) }
    dend_24 { pt3dadd( -25.5616, 12.7395, 1.70285, 0.74 ) }
    dend_24 { pt3dadd( -26.1006, 12.4457, 1.68848, 0.59 ) }
    dend_24 { pt3dadd( -26.6205, 12.1537, 1.66681, 0.59 ) }
    dend_24 { pt3dadd( -27.1179, 11.8765, 1.62513, 0.59 ) }
    dend_24 { pt3dadd( -27.8991, 11.463, 1.52788, 0.44 ) }
    dend_24 { pt3dadd( -28.9516, 10.9411, 1.36261, 0.81 ) }
    dend_24 { pt3dadd( -30.2924, 10.3286, 1.06164, 0.81 ) }
    dend_24 { pt3dadd( -30.9466, 10.0381, 0.834745, 0.81 ) }
    dend_24 { pt3dadd( -31.6069, 9.74627, 0.514499, 0.44 ) }
    dend_24 { pt3dadd( -32.1149, 9.53664, 0.227977, 0.44 ) }
    dend_24 { pt3dadd( -32.7607, 9.29447, -0.140964, 0.44 ) }
    dend_24 { pt3dadd( -33.7929, 8.95047, -0.733897, 0.44 ) }
    dend_24 { pt3dadd( -35.035, 8.59653, -1.40694, 0.88 ) }
    dend_24 { pt3dadd( -35.9528, 8.36372, -1.81988, 0.88 ) }
    dend_24 { pt3dadd( -36.8539, 8.15952, -2.14083, 0.52 ) }
    dend_24 { pt3dadd( -38.2842, 7.89204, -2.51334, 0.52 ) }
    dend_24 { pt3dadd( -38.8002, 7.81472, -2.60148, 0.52 ) }
    dend_24 { pt3dadd( -39.6689, 7.70553, -2.61952, 0.88 ) }
    dend_24 { pt3dadd( -40.3128, 7.6291, -2.55658, 0.88 ) }
    dend_24 { pt3dadd( -40.9918, 7.52738, -2.44767, 1.18 ) }
    dend_24 { pt3dadd( -41.6249, 7.39343, -2.32892, 1.18 ) }
    dend_24 { pt3dadd( -42.5595, 7.10603, -2.094, 0.74 ) }
    dend_24 { pt3dadd( -43.5003, 6.72782, -1.75399, 0.52 ) }
    dend_24 { pt3dadd( -44.4036, 6.30283, -1.34677, 0.52 ) }
    dend_24 { pt3dadd( -45.1004, 5.97569, -1.00042, 0.88 ) }
    dend_24 { pt3dadd( -46.046, 5.56989, -0.51167, 0.88 ) }
    dend_24 { pt3dadd( -47.0752, 5.16693, 0.0282788, 0.88 ) }
    dend_24 { pt3dadd( -48.2968, 4.73434, 0.665002, 1.03 ) }
    dend_24 { pt3dadd( -48.9581, 4.49841, 0.985579, 0.96 ) }
    dend_24 { pt3dadd( -49.832, 4.18448, 1.39508, 0.74 ) }
    dend_24 { pt3dadd( -51.0347, 3.77712, 1.91161, 0.52 ) }
    dend_24 { pt3dadd( -51.5364, 3.60957, 2.08874, 0.81 ) }
    dend_24 { pt3dadd( -52.115, 3.40554, 2.23113, 0.81 ) }
    dend_24 { pt3dadd( -53.0249, 3.02583, 2.38675, 0.52 ) }
    dend_24 { pt3dadd( -53.3205, 2.8762, 2.43494, 0.88 ) }
    dend_24 { pt3dadd( -53.6783, 2.65604, 2.49088, 1.18 ) }
    dend_24 { pt3dadd( -54.496, 2.13738, 2.62522, 1.18 ) }
    dend_24 { pt3dadd( -55.509, 1.54595, 2.80602, 0.59 ) }
    dend_24 { pt3dadd( -55.9711, 1.30136, 2.89395, 0.74 ) }
    dend_24 { pt3dadd( -56.5169, 1.04582, 3.00287, 0.74 ) }
    dend_24 { pt3dadd( -57.2752, 0.702189, 3.19661, 0.44 ) }
    dend_24 { pt3dadd( -57.8101, 0.455439, 3.35609, 0.44 ) }
    dend_24 { pt3dadd( -58.3314, 0.197696, 3.52825, 0.74 ) }
    dend_24 { pt3dadd( -58.92, -0.106423, 3.69766, 0.74 ) }
    dend_24 { pt3dadd( -59.4668, -0.395813, 3.90142, 0.74 ) }
    dend_24 { pt3dadd( -60.6334, -1.01988, 4.41956, 0.29 ) }
    dend_24 { pt3dadd( -61.3576, -1.43636, 4.79059, 0.37 ) }
    dend_24 { pt3dadd( -62.1048, -1.90893, 5.20762, 0.37 ) }
    dend_24 { pt3dadd( -63.0201, -2.51526, 5.74535, 0.37 ) }
    dend_24 { pt3dadd( -64.6363, -3.60883, 6.6473, 0.74 ) }
    dend_24 { pt3dadd( -65.1502, -3.96838, 6.89612, 1.03 ) }
    dend_24 { pt3dadd( -66.2354, -4.77199, 7.37752, 0.59 ) }
    dend_24 { pt3dadd( -67.1427, -5.47604, 7.79714, 0.44 ) }
    dend_24 { pt3dadd( -67.7183, -5.92828, 8.06417, 0.88 ) }
    dend_24 { pt3dadd( -68.5239, -6.5566, 8.41918, 0.74 ) }
    dend_24 { pt3dadd( -69.3322, -7.15253, 8.65546, 0.37 ) }
    dend_24 { pt3dadd( -70.2998, -7.7653, 8.92261, 0.37 ) }
    dend_24 { pt3dadd( -70.8111, -8.00215, 9.04945, 0.81 ) }
    dend_24 { pt3dadd( -71.2425, -8.12743, 9.15924, 1.03 ) }
    dend_24 { pt3dadd( -71.6545, -8.18904, 9.28106, 1.03 ) }
    dend_24 { pt3dadd( -72.1934, -8.20801, 9.46521, 0.66 ) }
    dend_24 { pt3dadd( -73.0075, -8.17693, 9.72384, 0.37 ) }
    dend_24 { pt3dadd( -73.7666, -8.12441, 9.90729, 0.59 ) }
    dend_24 { pt3dadd( -74.451, -8.06306, 10.0549, 0.59 ) }
    dend_24 { pt3dadd( -75.1072, -7.99942, 10.2083, 0.37 ) }
    dend_24 { pt3dadd( -75.8303, -7.94308, 10.4132, 0.66 ) }
    dend_24 { pt3dadd( -76.4057, -7.91733, 10.546, 0.88 ) }
    dend_24 { pt3dadd( -76.6732, -7.9092, 10.5818, 0.88 ) }
    dend_24 { pt3dadd( -77.967, -7.84495, 10.6387, 0.29 ) }
    dend_24 { pt3dadd( -78.7725, -7.80279, 10.5971, 0.29 ) }
    dend_24 { pt3dadd( -79.8487, -7.74605, 10.4307, 0.29 ) }
    dend_24 { pt3dadd( -81.513, -7.67992, 10.0298, 0.44 ) }
    dend_24 { pt3dadd( -82.7312, -7.68766, 9.65458, 0.44 ) }
    dend_24 { pt3dadd( -83.2258, -7.72999, 9.45987, 0.44 ) }
    dend_24 { pt3dadd( -83.512, -7.7843, 9.31503, 0.59 ) }
    dend_24 { pt3dadd( -84.053, -7.9134, 9.01665, 0.59 ) }
    dend_24 { pt3dadd( -84.4326, -8.01386, 8.82306, 0.59 ) }
    dend_24 { pt3dadd( -85.1447, -8.23236, 8.56732, 0.37 ) }
    dend_24 { pt3dadd( -85.7376, -8.44086, 8.34795, 0.37 ) }
    dend_24 { pt3dadd( -86.2705, -8.63248, 8.1331, 0.66 ) }
    dend_24 { pt3dadd( -86.7876, -8.82327, 7.87696, 0.66 ) }
    dend_24 { pt3dadd( -87.2842, -9.02426, 7.59964, 0.66 ) }
    dend_24 { pt3dadd( -88.2005, -9.42453, 7.03184, 0.44 ) }
    dend_24 { pt3dadd( -88.9902, -9.78498, 6.51638, 0.66 ) }
    dend_24 { pt3dadd( -89.4499, -10.0103, 6.17372, 0.66 ) }
    dend_24 { pt3dadd( -90.6072, -10.5868, 5.24457, 0.29 ) }
    dend_24 { pt3dadd( -91.2823, -10.9187, 4.70006, 0.29 ) }
    dend_24 { pt3dadd( -91.8881, -11.2151, 4.22209, 0.66 ) }
    dend_24 { pt3dadd( -92.3314, -11.4202, 3.90588, 0.88 ) }
    dend_24 { pt3dadd( -93.922, -12.0904, 2.88523, 0.44 ) }
    dend_24 { pt3dadd( -94.4802, -12.2979, 2.5391, 0.29 ) }
    dend_24 { pt3dadd( -95.3292, -12.5656, 2.10825, 0.29 ) }
    dend_24 { pt3dadd( -95.9919, -12.7636, 1.8124, 0.66 ) }
    dend_24 { pt3dadd( -96.6129, -12.9673, 1.55033, 0.66 ) }
    dend_24 { pt3dadd( -97.0704, -13.1474, 1.39796, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_24 { pt3dadd( -98.0447, -13.6045, 1.04171, 0.37 ) }
    dend_24 { pt3dadd( -99.0483, -14.0966, 0.556732, 0.29 ) }
    dend_24 { pt3dadd( -99.4472, -14.279, 0.328808, 0.29 ) }
    dend_24 { pt3dadd( -100.501, -14.6974, -0.368608, 0.29 ) }
    dend_24 { pt3dadd( -101.504, -15.0302, -1.09203, 1.25 ) }
    dend_24 { pt3dadd( -103.681, -15.5513, -2.71877, 0.29 ) }
    dend_24 { pt3dadd( -104.357, -15.6585, -3.24908, 0.29 ) }
    dend_24 { pt3dadd( -104.748, -15.689, -3.56842, 0.59 ) }
    dend_24 { pt3dadd( -105.549, -15.7018, -4.19075, 0.44 ) }
    dend_24 { pt3dadd( -106.002, -15.6853, -4.50506, 0.22 ) }
    dend_24 { pt3dadd( -106.521, -15.6485, -4.81641, 0.81 ) }
    dend_24 { pt3dadd( -107.887, -15.5503, -5.30458, 0.44 ) }
    dend_24 { pt3dadd( -108.625, -15.5229, -5.48534, 0.59 ) }
    dend_24 { pt3dadd( -109.05, -15.5206, -5.55422, 0.59 ) }
    dend_24 { pt3dadd( -110.095, -15.5356, -5.57389, 0.29 ) }
    dend_24 { pt3dadd( -110.993, -15.5513, -5.48778, 0.59 ) }
    dend_24 { pt3dadd( -111.514, -15.5583, -5.34585, 0.59 ) }
    dend_24 { pt3dadd( -112.46, -15.5596, -4.93665, 0.29 ) }
    dend_24 { pt3dadd( -113.188, -15.556, -4.55079, 0.29 ) }
    dend_24 { pt3dadd( -114.421, -15.5204, -3.76365, 0.74 ) }
    dend_24 { pt3dadd( -114.979, -15.4883, -3.3443, 0.74 ) }
    dend_24 { pt3dadd( -115.923, -15.3934, -2.57383, 0.37 ) }
    dend_24 { pt3dadd( -116.61, -15.2665, -1.98486, 0.37 ) }
    dend_24 { pt3dadd( -117.183, -15.0869, -1.46759, 0.44 ) }
    dend_24 { pt3dadd( -117.82, -14.7945, -0.909843, 0.74 ) }
    dend_24 { pt3dadd( -118.223, -14.5513, -0.600688, 0.74 ) }
    dend_24 { pt3dadd( -118.687, -14.2149, -0.280402, 0.37 ) }
    dend_24 { pt3dadd( -119.126, -13.826, -0.0171985, 0.59 ) }
    dend_24 { pt3dadd( -119.625, -13.3003, 0.27646, 0.37 ) }
    dend_24 { pt3dadd( -120.015, -12.8561, 0.483621, 0.29 ) }
    dend_24 { pt3dadd( -120.292, -12.5283, 0.618472, 0.52 ) }
    dend_24 { pt3dadd( -120.661, -12.108, 0.789278, 0.74 ) }
    dend_24 { pt3dadd( -121.234, -11.5194, 1.04397, 0.29 ) }
    dend_24 { pt3dadd( -121.543, -11.2385, 1.17437, 0.74 ) }
    dend_24 { pt3dadd( -121.99, -10.8816, 1.347, 0.74 ) }
    dend_24 { pt3dadd( -122.619, -10.4243, 1.55699, 0.29 ) }
    dend_24 { pt3dadd( -123.277, -9.98908, 1.74292, 0.29 ) }
    dend_24 { pt3dadd( -123.954, -9.60148, 1.88786, 0.29 ) }
    dend_24 { pt3dadd( -124.719, -9.21657, 2.01013, 0.29 ) }
    dend_24 { pt3dadd( -125.49, -8.85798, 2.08269, 0.29 ) }
    dend_24 { pt3dadd( -126.318, -8.50576, 2.10711, 0.96 ) }
    dend_24 { pt3dadd( -126.723, -8.35598, 2.09842, 0.96 ) }
    dend_24 { pt3dadd( -127.94, -7.9545, 2.03196, 0.29 ) }
    dend_24 { pt3dadd( -128.288, -7.85386, 2.00392, 0.66 ) }
    dend_24 { pt3dadd( -129.009, -7.67887, 1.9446, 0.66 ) }
    dend_24 { pt3dadd( -129.809, -7.51648, 1.89767, 0.29 ) }
    dend_24 { pt3dadd( -130.407, -7.42722, 1.89908, 0.29 ) }
    dend_24 { pt3dadd( -130.781, -7.38043, 1.90723, 0.66 ) }
    dend_24 { pt3dadd( -131.191, -7.33445, 1.92635, 0.88 ) }
    dend_24 { pt3dadd( -131.846, -7.26369, 1.96679, 0.66 ) }
    dend_24 { pt3dadd( -132.329, -7.19045, 1.99845, 0.15 ) }
    dend_24 { pt3dadd( -133.017, -7.04288, 2.03842, 0.15 ) }
    dend_24 { pt3dadd( -133.676, -6.86351, 2.05841, 0.15 ) }
    dend_24 { pt3dadd( -134.214, -6.6873, 2.06485, 0.81 ) }
    dend_24 { pt3dadd( -134.67, -6.51543, 2.03988, 1.03 ) }
    dend_24 { pt3dadd( -135.883, -6.04809, 1.91899, 0.29 ) }
    dend_24 { pt3dadd( -136.518, -5.80273, 1.84303, 0.81 ) }
    dend_24 { pt3dadd( -137.006, -5.60527, 1.76605, 0.81 ) }
    dend_24 { pt3dadd( -137.927, -5.24733, 1.61373, 0.29 ) }
    dend_24 { pt3dadd( -138.878, -4.92085, 1.4005, 0.29 ) }
    dend_24 { pt3dadd( -139.575, -4.72938, 1.2213, 0.29 ) }
    dend_24 { pt3dadd( -140.427, -4.56748, 0.964675, 0.29 ) }
    dend_24 { pt3dadd( -141.033, -4.50647, 0.693164, 1.18 ) }
    dend_24 { pt3dadd( -141.58, -4.51442, 0.357679, 1.18 ) }
    dend_24 { pt3dadd( -142.403, -4.64404, -0.327498, 0.52 ) }
    dend_24 { pt3dadd( -142.867, -4.76923, -0.78147, 0.88 ) }
    dend_24 { pt3dadd( -143.293, -4.92158, -1.2782, 0.88 ) }
    dend_24 { pt3dadd( -144.429, -5.42254, -2.81035, 0.44 ) }
    dend_24 { pt3dadd( -144.954, -5.6601, -3.53819, 0.44 ) }
    dend_24 { pt3dadd( -145.385, -5.83387, -4.16248, 0.74 ) }
    dend_24 { pt3dadd( -145.659, -5.91515, -4.54872, 0.74 ) }
    dend_24 { pt3dadd( -146.377, -6.05859, -5.51021, 0.44 ) }
    dend_24 { pt3dadd( -146.908, -6.12185, -6.12286, 0.44 ) }
    dend_24 { pt3dadd( -147.377, -6.13763, -6.54298, 0.88 ) }
    dend_24 { pt3dadd( -147.853, -6.13431, -6.90978, 0.88 ) }
    dend_24 { pt3dadd( -148.36, -6.1253, -7.26252, 0.88 ) }
    dend_24 { pt3dadd( -149.366, -6.14329, -7.9748, 0.52 ) }
    dend_24 { pt3dadd( -150.228, -6.20975, -8.58368, 0.52 ) }
    dend_24 { pt3dadd( -150.751, -6.29432, -8.94904, 0.59 ) }
    dend_24 { pt3dadd( -151.296, -6.4366, -9.33388, 0.44 ) }
    dend_24 { pt3dadd( -151.872, -6.62403, -9.7227, 0.44 ) }
    dend_24 { pt3dadd( -152.598, -6.85535, -10.1767, 0.44 ) }
    dend_24 { pt3dadd( -153.32, -7.05362, -10.5896, 0.88 ) }
    dend_24 { pt3dadd( -153.791, -7.17448, -10.8578, 0.88 ) }
    dend_24 { pt3dadd( -154.408, -7.32674, -11.2163, 0.37 ) }
    dend_24 { pt3dadd( -155.056, -7.45155, -11.5975, 0.37 ) }
    dend_24 { pt3dadd( -155.987, -7.5862, -12.1159, 0.59 ) }
    dend_24 { pt3dadd( -157.161, -7.69035, -12.7085, 0.37 ) }
    dend_24 { pt3dadd( -157.573, -7.71965, -12.9076, 0.74 ) }
    dend_24 { pt3dadd( -158.297, -7.7449, -13.2458, 0.74 ) }
    dend_24 { pt3dadd( -159.494, -7.73374, -13.7537, 0.37 ) }
    dend_24 { pt3dadd( -159.949, -7.72609, -13.9203, 0.59 ) }
    dend_24 { pt3dadd( -161.01, -7.69525, -14.2369, 0.29 ) }
    dend_24 { pt3dadd( -161.791, -7.65798, -14.4019, 0.29 ) }
    dend_24 { pt3dadd( -162.501, -7.65109, -14.5158, 0.29 ) }
    dend_24 { pt3dadd( -163.511, -7.67981, -14.6449, 0.59 ) }
    dend_24 { pt3dadd( -163.845, -7.70297, -14.6746, 1.11 ) }
    dend_24 { pt3dadd( -164.109, -7.72551, -14.6973, 1.4 ) }
    dend_24 { pt3dadd( -164.916, -7.84377, -14.756, 0.81 ) }
    dend_24 { pt3dadd( -165.757, -8.00489, -14.8251, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -166.523, -8.21861, -14.8998, 0.22 ) }
    dend_24 { pt3dadd( -167.092, -8.42054, -14.9571, 0.22 ) }
    dend_24 { pt3dadd( -168.026, -8.81507, -15.086, 0.22 ) }
    dend_24 { pt3dadd( -169.055, -9.32831, -15.267, 0.22 ) }
    dend_24 { pt3dadd( -169.259, -9.44677, -15.3114, 0.44 ) }
    dend_24 { pt3dadd( -169.619, -9.68821, -15.4058, 0.44 ) }
    dend_24 { pt3dadd( -169.991, -9.98248, -15.5446, 0.22 ) }
    dend_24 { pt3dadd( -170.618, -10.5301, -15.8711, 0.44 ) }
    dend_24 { pt3dadd( -170.905, -10.7767, -16.074, 0.44 ) }
    dend_24 { pt3dadd( -171.43, -11.1808, -16.4688, 0.22 ) }
    dend_24 { pt3dadd( -171.954, -11.5329, -16.827, 0.22 ) }
    dend_24 { pt3dadd( -172.696, -11.9556, -17.2756, 0.59 ) }
    dend_24 { pt3dadd( -172.913, -12.0589, -17.3947, 0.59 ) }
    dend_24 { pt3dadd( -174.315, -12.5457, -18.1986, 0.29 ) }
    dend_24 { pt3dadd( -174.813, -12.7024, -18.4824, 0.29 ) }
    dend_24 { pt3dadd( -175.567, -12.9108, -18.9041, 0.29 ) }
    dend_24 { pt3dadd( -176.083, -13.0391, -19.1706, 0.81 ) }
    dend_24 { pt3dadd( -176.544, -13.1413, -19.3789, 0.81 ) }
    dend_24 { pt3dadd( -178.38, -13.4418, -20.2337, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 19/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 205.943, -5.32296, -19.5433, 0.29 ) }
    dend_20 { pt3dadd( 206.975, -6.20396, -19.0653, 0.29 ) }
    dend_20 { pt3dadd( 207.628, -6.76596, -18.9218, 0.29 ) }
    dend_20 { pt3dadd( 208.578, -7.68196, -18.9878, 0.52 ) }
    dend_20 { pt3dadd( 208.827, -7.90872, -18.9508, 0.52 ) }
    dend_20 { pt3dadd( 209.128, -8.17433, -18.8688, 0.37 ) }
    dend_20 { pt3dadd( 209.693, -8.67159, -18.7153, 0.52 ) }
    dend_20 { pt3dadd( 210.954, -9.69953, -18.4702, 0.37 ) }
    dend_20 { pt3dadd( 212.174, -10.6962, -18.2646, 0.88 ) }
    dend_20 { pt3dadd( 214.58, -12.7755, -17.7949, 0.29 ) }
    dend_20 { pt3dadd( 214.893, -13.0525, -17.6875, 0.74 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 30/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 205.943, -5.32296, -19.5433, 0.29 ) }
    dend_19 { pt3dadd( 206.795, -5.12411, -20.33, 0.29 ) }
    dend_19 { pt3dadd( 207.165, -5.07225, -20.6166, 0.44 ) }
    dend_19 { pt3dadd( 207.702, -4.999, -21.0018, 0.44 ) }
    dend_19 { pt3dadd( 208.271, -4.90163, -21.388, 0.74 ) }
    dend_19 { pt3dadd( 209.048, -4.74447, -21.8989, 0.74 ) }
    dend_19 { pt3dadd( 209.815, -4.56634, -22.3964, 0.44 ) }
    dend_19 { pt3dadd( 210.67, -4.367, -22.9045, 0.66 ) }
    dend_19 { pt3dadd( 211.114, -4.24341, -23.167, 0.66 ) }
    dend_19 { pt3dadd( 211.841, -3.9668, -23.6631, 0.74 ) }
    dend_19 { pt3dadd( 212.165, -3.79902, -23.9177, 0.29 ) }
    dend_19 { pt3dadd( 212.52, -3.55829, -24.2384, 0.37 ) }
    dend_19 { pt3dadd( 212.945, -3.21921, -24.6046, 0.81 ) }
    dend_19 { pt3dadd( 213.182, -3.01603, -24.7877, 1.03 ) }
    dend_19 { pt3dadd( 214.392, -1.98859, -25.5877, 0.29 ) }
    dend_19 { pt3dadd( 215.076, -1.40313, -25.9833, 0.29 ) }
    dend_19 { pt3dadd( 216.082, -0.526423, -26.5027, 0.29 ) }
    dend_19 { pt3dadd( 216.958, 0.239785, -26.9459, 0.29 ) }
    dend_19 { pt3dadd( 217.686, 0.87977, -27.3275, 1.03 ) }
    dend_19 { pt3dadd( 218.095, 1.24409, -27.5662, 1.03 ) }
    dend_19 { pt3dadd( 218.519, 1.61425, -27.8288, 1.03 ) }
    dend_19 { pt3dadd( 218.86, 1.88617, -28.1103, 0.66 ) }
    dend_19 { pt3dadd( 219.531, 2.38605, -28.8338, 0.52 ) }
    dend_19 { pt3dadd( 219.92, 2.73288, -29.4069, 0.52 ) }
    dend_19 { pt3dadd( 220.264, 3.11773, -30.0322, 0.37 ) }
    dend_19 { pt3dadd( 220.589, 3.52845, -30.6468, 0.37 ) }
    dend_19 { pt3dadd( 220.852, 3.83701, -31.0932, 0.29 ) }
    dend_19 { pt3dadd( 221.321, 4.32994, -31.8087, 0.29 ) }
    dend_19 { pt3dadd( 221.967, 4.9766, -32.6862, 0.29 ) }
    dend_19 { pt3dadd( 222.217, 5.23566, -33.0446, 0.29 ) }
    dend_19 { pt3dadd( 222.516, 5.59415, -33.5475, 0.29 ) }
    dend_19 { pt3dadd( 222.875, 6.06326, -34.2383, 0.81 ) }
    dend_19 { pt3dadd( 223.26, 6.52317, -34.9609, 1.03 ) }
    dend_19 { pt3dadd( 223.547, 6.76302, -35.3842, 1.03 ) }
    dend_19 { pt3dadd( 224.205, 7.15967, -36.1267, 0.29 ) }
    dend_19 { pt3dadd( 224.749, 7.4848, -36.6353, 0.74 ) }
    dend_19 { pt3dadd( 225.061, 7.69081, -36.8851, 1.11 ) }
    dend_19 { pt3dadd( 225.438, 7.9503, -37.1314, 1.11 ) }
    dend_19 { pt3dadd( 226.415, 8.57856, -37.629, 0.29 ) }
    dend_19 { pt3dadd( 227.154, 8.98342, -37.9285, 0.29 ) }
    dend_19 { pt3dadd( 227.996, 9.31633, -38.2006, 0.29 ) }
    dend_19 { pt3dadd( 228.659, 9.50865, -38.4026, 0.29 ) }
    dend_19 { pt3dadd( 229.223, 9.63105, -38.5846, 0.74 ) }
    dend_19 { pt3dadd( 229.872, 9.73291, -38.8353, 0.74 ) }
    dend_19 { pt3dadd( 230.735, 9.80968, -39.2183, 0.37 ) }
    dend_19 { pt3dadd( 231.829, 9.8344, -39.7479, 0.96 ) }
    dend_19 { pt3dadd( 232.266, 9.82042, -39.9975, 0.96 ) }
    dend_19 { pt3dadd( 233.034, 9.76937, -40.4855, 0.29 ) }
    dend_19 { pt3dadd( 233.831, 9.7116, -41.0957, 0.29 ) }
    dend_19 { pt3dadd( 234.13, 9.69394, -41.3493, 0.59 ) }
    dend_19 { pt3dadd( 234.584, 9.68611, -41.7822, 0.59 ) }
    dend_19 { pt3dadd( 235.401, 9.74636, -42.638, 0.29 ) }
    dend_19 { pt3dadd( 235.893, 9.79096, -43.1771, 0.29 ) }
    dend_19 { pt3dadd( 236.776, 9.85414, -44.2012, 1.18 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 84/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -0.203823, -22.7437, 8.17617, 1.03 ) }
    dend_4 { pt3dadd( 1.00543, -25.7368, 8.94287, 1.03 ) }
    dend_4 { pt3dadd( 1.90461, -27.6153, 9.40017, 1.03 ) }
    dend_4 { pt3dadd( 2.50123, -28.7239, 9.65846, 0.74 ) }
    dend_4 { pt3dadd( 3.33953, -30.1313, 9.96007, 0.74 ) }
    dend_4 { pt3dadd( 3.96431, -31.1441, 10.1562, 1.03 ) }
    dend_4 { pt3dadd( 4.49024, -32.0136, 10.3054, 1.25 ) }
    dend_4 { pt3dadd( 4.93274, -32.7181, 10.4592, 1.33 ) }
    dend_4 { pt3dadd( 5.15143, -33.1285, 10.4999, 1.62 ) }
    dend_4 { pt3dadd( 5.55208, -34.0495, 10.5543, 1.62 ) }
    dend_4 { pt3dadd( 5.87668, -35.0124, 10.5769, 1.62 ) }
    dend_4 { pt3dadd( 6.23443, -36.438, 10.5945, 1.47 ) }
    dend_4 { pt3dadd( 6.48942, -37.8358, 10.6469, 0.59 ) }
    dend_4 { pt3dadd( 6.65702, -39.1955, 10.7052, 0.59 ) }
    dend_4 { pt3dadd( 6.7567, -40.4382, 10.76, 0.88 ) }
    dend_4 { pt3dadd( 6.81316, -41.3477, 10.798, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( 6.88102, -42.1521, 10.821, 1.55 ) }
    dend_4 { pt3dadd( 7.01946, -43.4645, 10.8398, 1.55 ) }
    dend_4 { pt3dadd( 7.18244, -44.8069, 10.8424, 0.96 ) }
    dend_4 { pt3dadd( 7.33906, -46.0675, 10.8389, 0.74 ) }
    dend_4 { pt3dadd( 7.41271, -46.7641, 10.8354, 0.74 ) }
    dend_4 { pt3dadd( 7.54787, -48.0534, 10.8208, 0.74 ) }
    dend_4 { pt3dadd( 7.69527, -49.4693, 10.7906, 1.33 ) }
    dend_4 { pt3dadd( 7.90844, -51.329, 10.7172, 1.18 ) }
    dend_4 { pt3dadd( 8.10337, -52.8988, 10.6893, 1.18 ) }
    dend_4 { pt3dadd( 8.19556, -53.8103, 10.6819, 1.62 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 10/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.203823, -22.7437, 8.17617, 1.03 ) }
    dend_3 { pt3dadd( -0.924572, -23.9103, 10.3521, 1.03 ) }
    dend_3 { pt3dadd( -1.36766, -24.7343, 11.7235, 1.03 ) }
    dend_3 { pt3dadd( -2.14894, -26.2145, 14.0022, 0.81 ) }
    dend_3 { pt3dadd( -2.91266, -27.6413, 16.1238, 0.66 ) }
    dend_3 { pt3dadd( -3.17115, -28.1374, 16.8302, 0.66 ) }
    dend_3 { pt3dadd( -3.41259, -28.6295, 17.493, 0.66 ) }
    dend_3 { pt3dadd( -3.66096, -29.3366, 18.3351, 0.52 ) }
    dend_3 { pt3dadd( -3.84575, -30.1542, 19.1763, 0.52 ) }
    dend_3 { pt3dadd( -3.97463, -31.2234, 20.0555, 0.81 ) }
    dend_3 { pt3dadd( -4.00289, -31.9964, 20.5669, 0.66 ) }
    dend_3 { pt3dadd( -4.01981, -32.672, 20.9697, 0.96 ) }
    dend_3 { pt3dadd( -4.04431, -34.1842, 21.8244, 0.52 ) }
    dend_3 { pt3dadd( -4.00002, -35.0976, 22.3266, 1.11 ) }
    dend_3 { pt3dadd( -3.89598, -35.9162, 22.7111, 1.03 ) }
    dend_3 { pt3dadd( -3.79471, -36.541, 22.942, 0.88 ) }
    dend_3 { pt3dadd( -3.71969, -37.0643, 23.1117, 0.88 ) }
    dend_3 { pt3dadd( -3.66798, -37.9316, 23.3412, 0.52 ) }
    // Section: dend_49, id: dend_49, parent: dend_27 (entry count 28/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 1.95394, 45.8104, 18.0971, 0.74 ) }
    dend_49 { pt3dadd( 3.79473, 49.0905, 20.5182, 0.74 ) }
    dend_49 { pt3dadd( 4.68794, 50.9882, 21.8447, 0.59 ) }
    dend_49 { pt3dadd( 5.18457, 52.2503, 22.718, 0.59 ) }
    dend_49 { pt3dadd( 5.8323, 54.3723, 24.1341, 0.59 ) }
    dend_49 { pt3dadd( 6.17349, 55.9079, 25.1013, 0.59 ) }
    dend_49 { pt3dadd( 6.40634, 57.4732, 26.008, 0.59 ) }
    dend_49 { pt3dadd( 6.47417, 60.3793, 27.3009, 0.66 ) }
    dend_49 { pt3dadd( 6.41753, 61.6798, 27.7968, 0.66 ) }
    dend_49 { pt3dadd( 6.15468, 63.5763, 28.5029, 1.03 ) }
    dend_49 { pt3dadd( 5.76566, 65.3408, 29.1133, 1.03 ) }
    dend_49 { pt3dadd( 5.16867, 67.4529, 29.7851, 0.44 ) }
    dend_49 { pt3dadd( 4.80326, 68.4066, 30.0013, 0.59 ) }
    dend_49 { pt3dadd( 4.00794, 69.8767, 30.107, 0.59 ) }
    dend_49 { pt3dadd( 3.23129, 71.0907, 30.0684, 1.11 ) }
    dend_49 { pt3dadd( 2.84154, 71.6418, 29.9917, 1.33 ) }
    dend_49 { pt3dadd( 2.2459, 72.4829, 29.8202, 1.33 ) }
    dend_49 { pt3dadd( 1.00668, 74.2964, 29.3586, 0.81 ) }
    dend_49 { pt3dadd( 0.187381, 75.8256, 28.9337, 0.44 ) }
    dend_49 { pt3dadd( -0.223319, 77.1558, 28.4427, 0.44 ) }
    dend_49 { pt3dadd( -0.455999, 78.5752, 27.6904, 0.74 ) }
    dend_49 { pt3dadd( -0.562784, 79.9788, 26.8571, 0.66 ) }
    dend_49 { pt3dadd( -0.577742, 80.675, 26.4236, 0.66 ) }
    dend_49 { pt3dadd( -0.635742, 82.2499, 25.5672, 0.52 ) }
    dend_49 { pt3dadd( -0.856084, 84.1095, 24.6553, 0.37 ) }
    dend_49 { pt3dadd( -1.38234, 86.4424, 23.6307, 0.37 ) }
    dend_49 { pt3dadd( -1.64085, 87.4458, 23.3058, 0.37 ) }
    dend_49 { pt3dadd( -2.06022, 89.1166, 22.9392, 0.37 ) }
    dend_49 { pt3dadd( -2.61714, 91.842, 22.5527, 0.37 ) }
    dend_49 { pt3dadd( -2.76786, 93.5266, 22.5414, 0.88 ) }
    dend_49 { pt3dadd( -2.66333, 94.6368, 22.7044, 0.88 ) }
    dend_49 { pt3dadd( -2.10342, 96.9315, 23.3088, 0.74 ) }
    dend_49 { pt3dadd( -1.59216, 98.4127, 23.817, 0.59 ) }
    dend_49 { pt3dadd( -0.805263, 100.115, 24.5998, 0.59 ) }
    dend_49 { pt3dadd( 0.761544, 102.885, 26.1368, 0.81 ) }
    dend_49 { pt3dadd( 2.00798, 104.921, 27.4326, 0.59 ) }
    dend_49 { pt3dadd( 2.5806, 105.878, 28.1166, 0.59 ) }
    dend_49 { pt3dadd( 3.05824, 106.767, 28.8185, 1.11 ) }
    dend_49 { pt3dadd( 3.68694, 108.205, 30.0611, 0.88 ) }
    dend_49 { pt3dadd( 4.02969, 109.425, 31.15, 0.88 ) }
    dend_49 { pt3dadd( 4.13953, 110.812, 32.1883, 0.74 ) }
    dend_49 { pt3dadd( 4.11838, 112.239, 33.0799, 0.59 ) }
    dend_49 { pt3dadd( 4.08654, 113.364, 33.6593, 0.44 ) }
    dend_49 { pt3dadd( 4.02839, 114.526, 34.1135, 0.81 ) }
    dend_49 { pt3dadd( 3.9361, 115.682, 34.4219, 1.03 ) }
    dend_49 { pt3dadd( 3.71057, 117.707, 34.8545, 0.52 ) }
    dend_49 { pt3dadd( 3.55191, 118.817, 35.0541, 0.52 ) }
    dend_49 { pt3dadd( 3.37936, 119.926, 35.2464, 0.96 ) }
    dend_49 { pt3dadd( 3.1632, 121.191, 35.4895, 0.96 ) }
    dend_49 { pt3dadd( 2.89866, 122.475, 35.7741, 0.66 ) }
    dend_49 { pt3dadd( 2.45539, 124.273, 36.226, 0.37 ) }
    dend_49 { pt3dadd( 2.13788, 125.389, 36.5319, 0.37 ) }
    dend_49 { pt3dadd( 1.92916, 126.145, 36.7256, 0.37 ) }
    dend_49 { pt3dadd( 1.57796, 127.472, 37.0521, 0.37 ) }
    dend_49 { pt3dadd( 1.31924, 128.548, 37.2959, 0.66 ) }
    dend_49 { pt3dadd( 1.09851, 129.717, 37.5104, 0.66 ) }
    dend_49 { pt3dadd( 0.983328, 130.866, 37.6535, 0.81 ) }
    dend_49 { pt3dadd( 0.931396, 132.118, 37.8044, 0.52 ) }
    dend_49 { pt3dadd( 0.885846, 133.365, 37.9865, 0.37 ) }
    dend_49 { pt3dadd( 0.800712, 134.389, 38.1914, 0.37 ) }
    dend_49 { pt3dadd( 0.682237, 135.215, 38.3994, 0.66 ) }
    dend_49 { pt3dadd( 0.445369, 136.418, 38.743, 0.66 ) }
    dend_49 { pt3dadd( 0.16683, 137.821, 39.1211, 0.37 ) }
    dend_49 { pt3dadd( 0.0213242, 138.708, 39.315, 0.37 ) }
    dend_49 { pt3dadd( -0.146707, 140.478, 39.5632, 0.96 ) }
    dend_49 { pt3dadd( -0.192599, 141.379, 39.6529, 1.33 ) }
    dend_49 { pt3dadd( -0.252704, 142.591, 39.7428, 1.33 ) }
    dend_49 { pt3dadd( -0.310322, 144.332, 39.8817, 1.03 ) }
    dend_49 { pt3dadd( -0.316547, 145.932, 40.0004, 0.74 ) }
    dend_49 { pt3dadd( -0.268709, 147.452, 40.125, 0.44 ) }
    dend_49 { pt3dadd( -0.209599, 148.593, 40.2452, 0.44 ) }
    dend_49 { pt3dadd( -0.166857, 149.69, 40.3629, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_49 { pt3dadd( -0.145936, 151.672, 40.5869, 0.66 ) }
    dend_49 { pt3dadd( -0.153669, 152.604, 40.7255, 0.96 ) }
    dend_49 { pt3dadd( -0.179206, 153.093, 40.8136, 0.96 ) }
    dend_49 { pt3dadd( -0.359339, 154.907, 41.0929, 0.52 ) }
    dend_49 { pt3dadd( -0.551793, 156.427, 41.2713, 0.52 ) }
    dend_49 { pt3dadd( -0.793643, 158.171, 41.4115, 0.52 ) }
    dend_49 { pt3dadd( -1.00003, 159.615, 41.442, 0.52 ) }
    dend_49 { pt3dadd( -1.28074, 162.049, 41.5499, 0.74 ) }
    dend_49 { pt3dadd( -1.42629, 163.597, 41.7088, 0.52 ) }
    dend_49 { pt3dadd( -1.5057, 164.715, 41.89, 0.52 ) }
    dend_49 { pt3dadd( -1.55943, 165.954, 42.152, 0.52 ) }
    dend_49 { pt3dadd( -1.62687, 167.481, 42.4195, 0.81 ) }
    dend_49 { pt3dadd( -1.7431, 169.669, 42.6784, 0.81 ) }
    dend_49 { pt3dadd( -1.80779, 171.091, 42.8075, 0.59 ) }
    dend_49 { pt3dadd( -1.90827, 172.262, 42.8738, 0.37 ) }
    dend_49 { pt3dadd( -2.05003, 173.705, 42.9408, 0.37 ) }
    dend_49 { pt3dadd( -2.31402, 175.934, 43.03, 0.37 ) }
    dend_49 { pt3dadd( -2.46363, 177.05, 43.0567, 0.52 ) }
    dend_49 { pt3dadd( -2.59981, 178.35, 43.0191, 0.52 ) }
    dend_49 { pt3dadd( -2.73467, 180.53, 42.9455, 0.52 ) }
    dend_49 { pt3dadd( -2.80471, 182.845, 42.9602, 0.74 ) }
    dend_49 { pt3dadd( -2.79998, 184.33, 43.0382, 0.96 ) }
    dend_49 { pt3dadd( -2.74411, 185.896, 43.1971, 0.37 ) }
    dend_49 { pt3dadd( -2.6661, 187.639, 43.3991, 0.29 ) }
    dend_49 { pt3dadd( -2.59526, 188.739, 43.5246, 0.29 ) }
    dend_49 { pt3dadd( -2.4884, 190.339, 43.7001, 0.81 ) }
    dend_49 { pt3dadd( -2.48991, 191.032, 43.7264, 0.81 ) }
    dend_49 { pt3dadd( -2.52407, 191.787, 43.7709, 0.96 ) }
    dend_49 { pt3dadd( -2.59922, 192.379, 43.8421, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 1.95394, 45.8104, 18.0971, 0.66 ) }
    dend_28 { pt3dadd( 0.470217, 47.293, 16.4667, 0.66 ) }
    dend_28 { pt3dadd( -0.462294, 48.1418, 15.4542, 0.66 ) }
    dend_28 { pt3dadd( -0.899791, 48.5639, 14.9314, 0.66 ) }
    dend_28 { pt3dadd( -1.54496, 49.2232, 14.0952, 0.52 ) }
    dend_28 { pt3dadd( -2.50462, 50.2141, 12.8414, 0.81 ) }
    dend_28 { pt3dadd( -2.93368, 50.6973, 12.2601, 0.81 ) }
    dend_28 { pt3dadd( -3.48183, 51.4341, 11.4119, 0.59 ) }
    dend_28 { pt3dadd( -4.01861, 52.2391, 10.4096, 0.59 ) }
    dend_28 { pt3dadd( -4.42466, 52.9122, 9.55182, 0.44 ) }
    dend_28 { pt3dadd( -4.66556, 53.3589, 9.02976, 0.44 ) }
    dend_28 { pt3dadd( -5.0577, 54.2228, 8.12963, 0.96 ) }
    dend_28 { pt3dadd( -5.26455, 54.7211, 7.59303, 1.18 ) }
    dend_28 { pt3dadd( -5.75713, 55.9636, 6.19808, 0.88 ) }
    dend_28 { pt3dadd( -6.13735, 56.9533, 5.04822, 0.37 ) }
    dend_28 { pt3dadd( -6.34756, 57.607, 4.25372, 1.03 ) }
    dend_28 { pt3dadd( -6.50531, 58.2719, 3.40722, 1.03 ) }
    dend_28 { pt3dadd( -6.74022, 59.4014, 1.82682, 0.52 ) }
    dend_28 { pt3dadd( -6.81272, 59.8555, 1.1932, 0.52 ) }
    dend_28 { pt3dadd( -6.85565, 60.2035, 0.715275, 0.81 ) }
    dend_28 { pt3dadd( -6.9256, 60.6384, 0.110003, 0.81 ) }
    dend_28 { pt3dadd( -7.05764, 61.1006, -0.555442, 0.74 ) }
    dend_28 { pt3dadd( -7.55144, 62.1779, -1.9982, 1.03 ) }
    dend_28 { pt3dadd( -7.97715, 62.7865, -2.75099, 1.03 ) }
    dend_28 { pt3dadd( -8.77147, 63.5528, -3.72313, 0.59 ) }
    dend_28 { pt3dadd( -9.3714, 64.022, -4.32432, 0.81 ) }
    dend_28 { pt3dadd( -10.1103, 64.473, -4.97986, 0.81 ) }
    dend_28 { pt3dadd( -10.404, 64.6231, -5.21464, 0.66 ) }
    dend_28 { pt3dadd( -10.9311, 64.8666, -5.60414, 0.66 ) }
    dend_28 { pt3dadd( -12.2611, 65.4217, -6.60193, 0.52 ) }
    dend_28 { pt3dadd( -13.1327, 65.7733, -7.26859, 0.37 ) }
    dend_28 { pt3dadd( -14.6709, 66.4414, -8.58061, 0.29 ) }
    dend_28 { pt3dadd( -15.0119, 66.5916, -8.88872, 0.29 ) }
    dend_28 { pt3dadd( -15.5638, 66.8266, -9.38987, 0.29 ) }
    dend_28 { pt3dadd( -16.1562, 67.0871, -9.91519, 0.29 ) }
    dend_28 { pt3dadd( -17.0959, 67.5151, -10.6351, 0.81 ) }
    dend_28 { pt3dadd( -17.8866, 67.8936, -11.1713, 0.81 ) }
    dend_28 { pt3dadd( -19.1068, 68.5975, -11.8986, 0.59 ) }
    dend_28 { pt3dadd( -19.3713, 68.7646, -12.0481, 0.59 ) }
    dend_28 { pt3dadd( -20.0592, 69.2463, -12.3776, 0.29 ) }
    dend_28 { pt3dadd( -20.7882, 69.7474, -12.927, 0.52 ) }
    dend_28 { pt3dadd( -20.9203, 69.8319, -13.0575, 0.81 ) }
    dend_28 { pt3dadd( -21.3616, 70.0844, -13.5463, 0.81 ) }
    dend_28 { pt3dadd( -21.9034, 70.3597, -14.2024, 0.74 ) }
    dend_28 { pt3dadd( -22.1684, 70.4647, -14.531, 0.88 ) }
    dend_28 { pt3dadd( -25.5149, 71.4313, -18.7168, 0.88 ) }
    dend_28 { pt3dadd( -26.4498, 71.6129, -19.871, 0.66 ) }
    dend_28 { pt3dadd( -27.0634, 71.6974, -20.5893, 0.88 ) }
    dend_28 { pt3dadd( -27.9877, 71.783, -21.6206, 0.96 ) }
    dend_28 { pt3dadd( -28.702, 71.8439, -22.3439, 0.52 ) }
    dend_28 { pt3dadd( -29.2422, 71.895, -22.8074, 0.74 ) }
    dend_28 { pt3dadd( -30.4265, 72.0405, -23.368, 0.44 ) }
    dend_28 { pt3dadd( -31.0989, 72.1756, -23.6079, 0.29 ) }
    dend_28 { pt3dadd( -31.7308, 72.3423, -23.7786, 0.29 ) }
    dend_28 { pt3dadd( -32.8131, 72.6341, -23.9961, 1.18 ) }
    dend_28 { pt3dadd( -33.2882, 72.7467, -24.0956, 1.92 ) }
    dend_28 { pt3dadd( -34.1861, 72.8566, -24.3619, 1.47 ) }
    dend_28 { pt3dadd( -35.4992, 72.8826, -24.8287, 0.37 ) }
    dend_28 { pt3dadd( -36.0727, 72.8307, -25.0546, 0.29 ) }
    dend_28 { pt3dadd( -37.1413, 72.5903, -25.473, 0.29 ) }
    dend_28 { pt3dadd( -38.3475, 72.1457, -25.9753, 0.29 ) }
    dend_28 { pt3dadd( -40.0969, 71.2257, -26.834, 0.29 ) }
    dend_28 { pt3dadd( -40.9505, 70.6357, -27.301, 0.29 ) }
    dend_28 { pt3dadd( -41.6027, 70.1392, -27.6782, 0.29 ) }
    dend_28 { pt3dadd( -42.4421, 69.5442, -28.1816, 0.29 ) }
    dend_28 { pt3dadd( -43.0234, 69.1969, -28.5131, 0.29 ) }
    dend_28 { pt3dadd( -44.3814, 68.5371, -29.2375, 0.29 ) }
    dend_28 { pt3dadd( -45.0183, 68.2565, -29.5837, 0.29 ) }
    dend_28 { pt3dadd( -46.0454, 67.9272, -30.1815, 0.29 ) }
    dend_28 { pt3dadd( -46.6281, 67.8532, -30.5053, 0.52 ) }
    dend_28 { pt3dadd( -47.261, 67.9047, -30.805, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -48.2412, 68.1174, -31.1822, 0.52 ) }
    dend_28 { pt3dadd( -49.3428, 68.4707, -31.5184, 0.66 ) }
    dend_28 { pt3dadd( -49.9131, 68.6789, -31.6779, 0.96 ) }
    dend_28 { pt3dadd( -50.4421, 68.8794, -31.8037, 1.18 ) }
    dend_28 { pt3dadd( -51.9875, 69.5474, -32.1279, 0.52 ) }
    dend_28 { pt3dadd( -53.0357, 70.0849, -32.3743, 0.29 ) }
    dend_28 { pt3dadd( -53.6043, 70.4411, -32.5391, 0.52 ) }
    dend_28 { pt3dadd( -53.841, 70.6293, -32.6214, 0.74 ) }
    dend_28 { pt3dadd( -54.3282, 71.0527, -32.8221, 0.74 ) }
    dend_28 { pt3dadd( -55.1547, 71.7746, -33.1954, 0.44 ) }
    dend_28 { pt3dadd( -56.0299, 72.5285, -33.6325, 0.44 ) }
    dend_28 { pt3dadd( -56.9572, 73.2935, -34.1214, 0.37 ) }
    dend_28 { pt3dadd( -57.704, 73.8602, -34.5009, 0.37 ) }
    dend_28 { pt3dadd( -58.623, 74.4566, -34.9561, 0.37 ) }
    dend_28 { pt3dadd( -59.8893, 75.2029, -35.6518, 0.37 ) }
    dend_28 { pt3dadd( -60.723, 75.6541, -36.1064, 0.88 ) }
    dend_28 { pt3dadd( -60.9482, 75.7723, -36.2171, 0.88 ) }
    dend_28 { pt3dadd( -61.726, 76.1495, -36.5412, 0.66 ) }
    dend_28 { pt3dadd( -63.0784, 76.7392, -37.0174, 0.96 ) }
    dend_28 { pt3dadd( -64.7114, 77.3453, -37.3674, 0.81 ) }
    dend_28 { pt3dadd( -65.744, 77.624, -37.4244, 1.11 ) }
    dend_28 { pt3dadd( -66.8496, 77.8079, -37.3027, 0.59 ) }
    dend_28 { pt3dadd( -68.1944, 77.9796, -37.0397, 0.59 ) }
    dend_28 { pt3dadd( -69.0481, 78.0885, -36.787, 0.74 ) }
    dend_28 { pt3dadd( -70.1406, 78.2294, -36.3535, 0.52 ) }
    dend_28 { pt3dadd( -70.7351, 78.288, -36.1023, 0.52 ) }
    dend_28 { pt3dadd( -71.5917, 78.3867, -35.7953, 0.52 ) }
    dend_28 { pt3dadd( -72.5051, 78.5281, -35.5127, 0.52 ) }
    dend_28 { pt3dadd( -73.3185, 78.7445, -35.343, 0.52 ) }
    dend_28 { pt3dadd( -74.5838, 79.2183, -35.1536, 1.33 ) }
    dend_28 { pt3dadd( -75.1553, 79.5025, -35.083, 2.28 ) }
    dend_28 { pt3dadd( -75.8409, 79.8747, -35.0088, 2.5 ) }
    // Section: dend_16, id: dend_16, parent: dend_4 (entry count 32/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 8.19556, -53.8103, 10.6819, 0.59 ) }
    dend_16 { pt3dadd( 9.3172, -54.5999, 11.8765, 0.59 ) }
    dend_16 { pt3dadd( 9.89072, -55.0692, 12.4357, 0.59 ) }
    dend_16 { pt3dadd( 11.7383, -56.9513, 14.194, 0.44 ) }
    dend_16 { pt3dadd( 12.0621, -57.3862, 14.5364, 0.44 ) }
    dend_16 { pt3dadd( 12.5241, -58.1206, 15.0494, 0.44 ) }
    dend_16 { pt3dadd( 13.1173, -59.1822, 15.7661, 0.44 ) }
    dend_16 { pt3dadd( 13.4266, -59.9081, 16.1882, 0.44 ) }
    dend_16 { pt3dadd( 13.8324, -60.9894, 16.7896, 0.44 ) }
    dend_16 { pt3dadd( 14.3496, -62.4343, 17.5543, 0.44 ) }
    dend_16 { pt3dadd( 14.6009, -63.2438, 18.0696, 0.81 ) }
    dend_16 { pt3dadd( 14.9896, -64.7038, 19.1674, 0.59 ) }
    dend_16 { pt3dadd( 15.0891, -65.1168, 19.5185, 0.59 ) }
    dend_16 { pt3dadd( 15.3248, -66.269, 20.7399, 0.29 ) }
    dend_16 { pt3dadd( 15.3869, -66.7845, 21.3469, 0.29 ) }
    dend_16 { pt3dadd( 15.4382, -68.2015, 22.9781, 0.29 ) }
    dend_16 { pt3dadd( 15.3821, -69.0871, 23.8885, 0.29 ) }
    dend_16 { pt3dadd( 15.2073, -70.083, 24.7784, 1.03 ) }
    dend_16 { pt3dadd( 14.4326, -73.0333, 26.9328, 1.11 ) }
    dend_16 { pt3dadd( 14.0108, -74.2682, 27.7413, 1.33 ) }
    dend_16 { pt3dadd( 13.4707, -75.6772, 28.506, 0.66 ) }
    dend_16 { pt3dadd( 12.3785, -78.2345, 29.1111, 0.15 ) }
    dend_16 { pt3dadd( 12.0024, -78.9885, 28.7854, 0.15 ) }
    dend_16 { pt3dadd( 11.6366, -79.6702, 28.0353, 0.15 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 56/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 8.19556, -53.8103, 10.6819, 1.33 ) }
    dend_5 { pt3dadd( 7.96934, -54.7642, 10.4836, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 58/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -75.8409, 79.8747, -35.0088, 0.37 ) }
    dend_30 { pt3dadd( -77.4445, 79.9316, -35.1271, 0.37 ) }
    dend_30 { pt3dadd( -78.1631, 79.9104, -35.1865, 0.37 ) }
    dend_30 { pt3dadd( -79.1317, 79.7849, -35.2727, 0.37 ) }
    dend_30 { pt3dadd( -80.2248, 79.5165, -35.46, 0.88 ) }
    dend_30 { pt3dadd( -80.6953, 79.3839, -35.5604, 0.88 ) }
    dend_30 { pt3dadd( -81.5063, 79.1727, -35.743, 0.52 ) }
    dend_30 { pt3dadd( -82.1356, 79.0222, -35.9195, 0.29 ) }
    dend_30 { pt3dadd( -82.9501, 78.8721, -36.2036, 0.29 ) }
    dend_30 { pt3dadd( -84.1522, 78.7801, -36.6992, 0.37 ) }
    dend_30 { pt3dadd( -84.5678, 78.8378, -36.8696, 0.37 ) }
    dend_30 { pt3dadd( -85.2208, 79.042, -37.1333, 0.37 ) }
    dend_30 { pt3dadd( -85.872, 79.3119, -37.3438, 0.37 ) }
    dend_30 { pt3dadd( -86.9951, 79.7619, -37.6737, 0.66 ) }
    dend_30 { pt3dadd( -87.6866, 79.9984, -37.8491, 0.66 ) }
    dend_30 { pt3dadd( -88.6939, 80.2428, -38.0277, 0.37 ) }
    dend_30 { pt3dadd( -89.3522, 80.3322, -38.1156, 0.29 ) }
    dend_30 { pt3dadd( -90.5281, 80.3918, -38.216, 0.29 ) }
    dend_30 { pt3dadd( -91.6728, 80.4019, -38.1928, 0.29 ) }
    dend_30 { pt3dadd( -92.6754, 80.3839, -38.0442, 0.29 ) }
    dend_30 { pt3dadd( -93.7515, 80.3659, -37.8643, 0.29 ) }
    dend_30 { pt3dadd( -94.5123, 80.3721, -37.7388, 0.88 ) }
    dend_30 { pt3dadd( -94.9172, 80.3936, -37.6821, 1.03 ) }
    dend_30 { pt3dadd( -96.1379, 80.5763, -37.5962, 0.29 ) }
    dend_30 { pt3dadd( -97.1312, 80.8026, -37.5653, 0.29 ) }
    dend_30 { pt3dadd( -98.4974, 81.0897, -37.6127, 0.96 ) }
    dend_30 { pt3dadd( -99.149, 81.199, -37.6883, 1.25 ) }
    dend_30 { pt3dadd( -99.4074, 81.2265, -37.7489, 1.47 ) }
    dend_30 { pt3dadd( -100.575, 81.2757, -38.069, 0.96 ) }
    dend_30 { pt3dadd( -101.637, 81.2703, -38.5536, 0.52 ) }
    dend_30 { pt3dadd( -102.938, 81.2921, -39.264, 0.44 ) }
    dend_30 { pt3dadd( -103.955, 81.3264, -39.8562, 0.44 ) }
    dend_30 { pt3dadd( -105.653, 81.4151, -40.9053, 1.11 ) }
    dend_30 { pt3dadd( -106.308, 81.4762, -41.3201, 1.11 ) }
    dend_30 { pt3dadd( -109.839, 81.9766, -43.6115, 0.29 ) }
    dend_30 { pt3dadd( -110.708, 82.1302, -44.2181, 0.29 ) }
    dend_30 { pt3dadd( -111.31, 82.2408, -44.6691, 0.96 ) }
    dend_30 { pt3dadd( -111.895, 82.3377, -45.0987, 1.18 ) }
    dend_30 { pt3dadd( -112.856, 82.5103, -45.7238, 0.88 ) }
    dend_30 { pt3dadd( -113.923, 82.6868, -46.3277, 0.52 ) }
    dend_30 { pt3dadd( -114.595, 82.7328, -46.6167, 0.52 ) }
    dend_30 { pt3dadd( -115.382, 82.6935, -46.9825, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_30 { pt3dadd( -117.022, 82.5121, -47.8391, 0.37 ) }
    dend_30 { pt3dadd( -117.919, 82.3962, -48.3173, 0.37 ) }
    dend_30 { pt3dadd( -118.872, 82.2764, -48.8249, 0.37 ) }
    dend_30 { pt3dadd( -120.199, 82.1362, -49.529, 0.37 ) }
    dend_30 { pt3dadd( -121.174, 82.0713, -50.0263, 0.37 ) }
    dend_30 { pt3dadd( -122.247, 82.0028, -50.5534, 0.37 ) }
    dend_30 { pt3dadd( -123.008, 81.857, -50.9675, 1.11 ) }
    dend_30 { pt3dadd( -123.253, 81.7866, -51.1257, 1.47 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 8/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -75.8409, 79.8747, -35.0088, 0.29 ) }
    dend_29 { pt3dadd( -77.9418, 82.7589, -36.4237, 0.29 ) }
    dend_29 { pt3dadd( -78.5898, 83.7015, -36.7323, 0.29 ) }
    dend_29 { pt3dadd( -78.9689, 84.2913, -36.8771, 0.29 ) }
    dend_29 { pt3dadd( -79.8716, 85.6227, -37.1606, 0.29 ) }
    dend_29 { pt3dadd( -80.1666, 86.0459, -37.2307, 0.52 ) }
    dend_29 { pt3dadd( -80.6805, 86.784, -37.3135, 0.37 ) }
    dend_29 { pt3dadd( -81.1144, 87.407, -37.2222, 0.66 ) }
    dend_29 { pt3dadd( -81.3746, 87.7637, -37.1385, 0.81 ) }
    dend_29 { pt3dadd( -82.2131, 88.9452, -36.779, 0.29 ) }
    dend_29 { pt3dadd( -82.8407, 89.8237, -36.4585, 0.52 ) }
    dend_29 { pt3dadd( -83.2362, 90.356, -36.23, 0.74 ) }
    dend_29 { pt3dadd( -84.1383, 91.4942, -35.6307, 0.29 ) }
    dend_29 { pt3dadd( -84.9126, 92.4372, -35.0334, 0.29 ) }
    dend_29 { pt3dadd( -85.3398, 92.9349, -34.6354, 1.25 ) }
    dend_29 { pt3dadd( -85.582, 93.2315, -34.3564, 1.84 ) }
    dend_29 { pt3dadd( -85.8721, 93.5832, -33.9858, 1.84 ) }
    dend_29 { pt3dadd( -86.8958, 94.694, -32.6358, 0.29 ) }
    dend_29 { pt3dadd( -87.227, 95.014, -32.1668, 0.29 ) }
    dend_29 { pt3dadd( -88.218, 95.8302, -30.5885, 0.29 ) }
    dend_29 { pt3dadd( -88.6094, 96.1467, -29.8451, 0.52 ) }
    dend_29 { pt3dadd( -88.8172, 96.3229, -29.3852, 0.29 ) }
    dend_29 { pt3dadd( -89.2646, 96.7673, -28.1844, 0.29 ) }
    dend_29 { pt3dadd( -89.4555, 97.0075, -27.5438, 0.29 ) }
    dend_29 { pt3dadd( -89.9576, 97.7009, -25.8509, 0.88 ) }
    dend_29 { pt3dadd( -90.4339, 98.3049, -24.3246, 0.29 ) }
    dend_29 { pt3dadd( -90.6547, 98.5424, -23.7162, 0.29 ) }
    dend_29 { pt3dadd( -91.1033, 99.0261, -22.6014, 0.81 ) }
    dend_29 { pt3dadd( -91.3352, 99.3188, -22.0411, 0.81 ) }
    dend_29 { pt3dadd( -91.6905, 99.834, -21.1822, 0.37 ) }
    dend_29 { pt3dadd( -92.1438, 100.565, -20.1286, 0.29 ) }
    dend_29 { pt3dadd( -92.4195, 101.03, -19.4712, 0.29 ) }
    dend_29 { pt3dadd( -92.7091, 101.565, -18.7419, 0.29 ) }
    dend_29 { pt3dadd( -92.9224, 102.018, -18.152, 0.29 ) }
    dend_29 { pt3dadd( -93.3484, 103.16, -16.7482, 0.88 ) }
    dend_29 { pt3dadd( -93.4306, 103.461, -16.3885, 1.25 ) }
    dend_29 { pt3dadd( -93.575, 103.994, -15.7654, 1.25 ) }
    dend_29 { pt3dadd( -93.8374, 104.721, -14.9851, 0.29 ) }
    dend_29 { pt3dadd( -94.1421, 105.314, -14.4001, 0.22 ) }
    dend_29 { pt3dadd( -94.6303, 105.96, -13.8694, 0.88 ) }
    dend_29 { pt3dadd( -95.464, 106.809, -13.4194, 0.88 ) }
    dend_29 { pt3dadd( -96.1389, 107.463, -13.0975, 0.59 ) }
    dend_29 { pt3dadd( -98.2363, 109.392, -12.1877, 0.59 ) }
    dend_29 { pt3dadd( -98.6044, 109.721, -12.0454, 0.59 ) }
    dend_29 { pt3dadd( -99.4426, 110.445, -11.7384, 0.29 ) }
    dend_29 { pt3dadd( -100.185, 111.094, -11.4436, 0.37 ) }
    dend_29 { pt3dadd( -101.308, 112.091, -10.8975, 0.37 ) }
    dend_29 { pt3dadd( -101.929, 112.679, -10.4745, 0.37 ) }
    dend_29 { pt3dadd( -102.183, 112.936, -10.2566, 0.44 ) }
    dend_29 { pt3dadd( -102.413, 113.15, -10.0767, 0.44 ) }
    dend_29 { pt3dadd( -103.186, 113.787, -9.54503, 0.22 ) }
    dend_29 { pt3dadd( -103.792, 114.244, -9.19593, 0.37 ) }
    dend_29 { pt3dadd( -104.514, 114.721, -8.8561, 0.29 ) }
    dend_29 { pt3dadd( -105.343, 115.226, -8.47647, 0.29 ) }
    dend_29 { pt3dadd( -106.288, 115.758, -8.03982, 0.29 ) }
    dend_29 { pt3dadd( -107.25, 116.287, -7.5944, 0.29 ) }
    dend_29 { pt3dadd( -107.872, 116.656, -7.30924, 0.29 ) }
    dend_29 { pt3dadd( -108.606, 117.168, -6.97463, 0.29 ) }
    dend_29 { pt3dadd( -109.328, 117.781, -6.65933, 0.52 ) }
    dend_29 { pt3dadd( -109.626, 118.115, -6.53937, 0.74 ) }
    dend_29 { pt3dadd( -110.066, 118.836, -6.31974, 0.52 ) }
    dend_29 { pt3dadd( -110.588, 119.937, -5.97452, 0.29 ) }
    dend_29 { pt3dadd( -110.862, 120.565, -5.76203, 0.29 ) }
    dend_29 { pt3dadd( -111.096, 121.082, -5.58295, 0.37 ) }
    dend_29 { pt3dadd( -111.334, 121.531, -5.40535, 0.37 ) }
    dend_29 { pt3dadd( -112.133, 122.737, -4.8312, 0.59 ) }
    dend_29 { pt3dadd( -112.769, 123.512, -4.39416, 0.29 ) }
    dend_29 { pt3dadd( -113.997, 124.772, -3.5921, 0.29 ) }
    dend_29 { pt3dadd( -115.444, 126.088, -2.70753, 0.29 ) }
    dend_29 { pt3dadd( -116.112, 126.672, -2.30974, 0.29 ) }
    dend_29 { pt3dadd( -116.902, 127.329, -1.87588, 0.29 ) }
    dend_29 { pt3dadd( -117.583, 127.855, -1.56168, 0.59 ) }
    dend_29 { pt3dadd( -118.218, 128.295, -1.26561, 0.59 ) }
    dend_29 { pt3dadd( -119.362, 128.893, -0.709661, 0.96 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 7.96934, -54.7642, 10.4836, 0.74 ) }
    dend_7 { pt3dadd( 8.54042, -56.7262, 10.4361, 0.74 ) }
    dend_7 { pt3dadd( 8.88836, -57.8118, 10.4566, 0.74 ) }
    dend_7 { pt3dadd( 9.27624, -59.0817, 10.541, 0.96 ) }
    dend_7 { pt3dadd( 9.6288, -60.262, 10.7396, 0.74 ) }
    dend_7 { pt3dadd( 10.0387, -61.6342, 11.0368, 0.59 ) }
    dend_7 { pt3dadd( 10.3497, -62.6753, 11.2623, 0.59 ) }
    dend_7 { pt3dadd( 10.8155, -64.151, 11.686, 0.59 ) }
    dend_7 { pt3dadd( 11.3888, -65.9262, 12.2833, 0.52 ) }
    dend_7 { pt3dadd( 12.1491, -68.223, 13.1653, 0.52 ) }
    dend_7 { pt3dadd( 12.3381, -68.8499, 13.4322, 1.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 93/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 7.96934, -54.7642, 10.4836, 0.59 ) }
    dend_6 { pt3dadd( 7.49478, -55.2876, 10.5025, 0.59 ) }
    dend_6 { pt3dadd( 7.15579, -55.6151, 10.5905, 0.88 ) }
    dend_6 { pt3dadd( 6.7601, -55.9786, 10.746, 0.88 ) }
    dend_6 { pt3dadd( 6.29854, -56.3952, 10.9457, 0.59 ) }
    dend_6 { pt3dadd( 5.6649, -56.9266, 11.2152, 0.59 ) }
    dend_6 { pt3dadd( 5.38817, -57.1646, 11.3482, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_6 { pt3dadd( 4.89781, -57.5913, 11.6386, 1.4 ) }
    dend_6 { pt3dadd( 4.46917, -57.9656, 11.9056, 1.03 ) }
    dend_6 { pt3dadd( 4.17542, -58.2138, 12.0832, 1.55 ) }
    dend_6 { pt3dadd( 3.83012, -58.5026, 12.2736, 1.55 ) }
    dend_6 { pt3dadd( 3.26746, -58.9937, 12.5169, 1.03 ) }
    dend_6 { pt3dadd( 2.94679, -59.2904, 12.6361, 0.81 ) }
    dend_6 { pt3dadd( 2.51914, -59.702, 12.7795, 0.81 ) }
    dend_6 { pt3dadd( 2.16251, -60.0505, 12.8727, 0.37 ) }
    dend_6 { pt3dadd( 1.89546, -60.3063, 12.9136, 0.37 ) }
    dend_6 { pt3dadd( 1.82957, -60.3674, 12.9179, 0.96 ) }
    dend_6 { pt3dadd( 1.64228, -60.5345, 12.9164, 1.4 ) }
    dend_6 { pt3dadd( 0.837905, -61.3091, 12.8956, 0.59 ) }
    dend_6 { pt3dadd( 0.192721, -61.9529, 12.8742, 0.52 ) }
    dend_6 { pt3dadd( -0.309939, -62.4469, 12.8558, 0.52 ) }
    dend_6 { pt3dadd( -0.897349, -62.9799, 12.8328, 0.37 ) }
    dend_6 { pt3dadd( -1.38742, -63.3844, 12.7945, 0.29 ) }
    dend_6 { pt3dadd( -1.96823, -63.8184, 12.7021, 1.25 ) }
    dend_6 { pt3dadd( -2.12171, -63.9236, 12.6635, 1.4 ) }
    dend_6 { pt3dadd( -2.6418, -64.2703, 12.536, 0.52 ) }
    dend_6 { pt3dadd( -3.03397, -64.5175, 12.4322, 0.81 ) }
    dend_6 { pt3dadd( -3.54028, -64.79, 12.2742, 1.03 ) }
    dend_6 { pt3dadd( -4.24281, -65.0733, 12.0617, 0.52 ) }
    dend_6 { pt3dadd( -4.68144, -65.2198, 11.9411, 0.52 ) }
    dend_6 { pt3dadd( -5.02916, -65.3527, 11.8639, 0.37 ) }
    dend_6 { pt3dadd( -5.52951, -65.6217, 11.8213, 0.29 ) }
    dend_6 { pt3dadd( -5.68466, -65.731, 11.8346, 0.74 ) }
    dend_6 { pt3dadd( -5.98287, -65.9602, 11.9141, 1.03 ) }
    dend_6 { pt3dadd( -6.16776, -66.0946, 11.9818, 0.81 ) }
    dend_6 { pt3dadd( -6.57968, -66.3723, 12.1271, 0.59 ) }
    dend_6 { pt3dadd( -7.20706, -66.7839, 12.3366, 0.37 ) }
    dend_6 { pt3dadd( -7.49907, -66.9746, 12.4026, 0.29 ) }
    dend_6 { pt3dadd( -7.74935, -67.1066, 12.4362, 0.29 ) }
    dend_6 { pt3dadd( -7.98585, -67.2059, 12.4433, 0.96 ) }
    dend_6 { pt3dadd( -8.24242, -67.2885, 12.4108, 0.96 ) }
    dend_6 { pt3dadd( -8.5671, -67.3739, 12.3331, 0.81 ) }
    dend_6 { pt3dadd( -9.17245, -67.5545, 12.1684, 0.44 ) }
    dend_6 { pt3dadd( -9.50484, -67.7066, 12.0882, 0.29 ) }
    dend_6 { pt3dadd( -9.91944, -67.9811, 12.0074, 0.29 ) }
    dend_6 { pt3dadd( -10.3588, -68.3586, 11.9483, 1.4 ) }
    dend_6 { pt3dadd( -10.6091, -68.6125, 11.9299, 1.4 ) }
    dend_6 { pt3dadd( -11.0465, -69.1077, 11.944, 0.44 ) }
    dend_6 { pt3dadd( -11.2827, -69.396, 11.9782, 0.29 ) }
    dend_6 { pt3dadd( -11.4334, -69.5861, 12.0121, 0.88 ) }
    dend_6 { pt3dadd( -11.729, -69.9515, 12.0883, 0.96 ) }
    dend_6 { pt3dadd( -11.969, -70.2355, 12.1534, 0.59 ) }
    dend_6 { pt3dadd( -12.3946, -70.7317, 12.2567, 0.44 ) }
    dend_6 { pt3dadd( -12.813, -71.2213, 12.3549, 0.37 ) }
    dend_6 { pt3dadd( -13.2326, -71.695, 12.4509, 0.22 ) }
    dend_6 { pt3dadd( -13.6072, -72.0948, 12.5295, 0.59 ) }
    dend_6 { pt3dadd( -13.9676, -72.4545, 12.5952, 0.29 ) }
    dend_6 { pt3dadd( -14.0791, -72.5571, 12.6109, 0.74 ) }
    dend_6 { pt3dadd( -14.3071, -72.7398, 12.6278, 0.96 ) }
    dend_6 { pt3dadd( -14.5641, -72.908, 12.6377, 0.59 ) }
    dend_6 { pt3dadd( -15.0064, -73.1436, 12.6427, 0.44 ) }
    dend_6 { pt3dadd( -15.3104, -73.295, 12.6498, 0.74 ) }
    dend_6 { pt3dadd( -15.571, -73.4311, 12.655, 0.96 ) }
    dend_6 { pt3dadd( -16.1158, -73.7446, 12.6654, 0.37 ) }
    dend_6 { pt3dadd( -16.5185, -74.0207, 12.6727, 0.29 ) }
    dend_6 { pt3dadd( -16.7742, -74.2391, 12.6615, 0.29 ) }
    dend_6 { pt3dadd( -17.059, -74.5304, 12.6278, 0.52 ) }
    dend_6 { pt3dadd( -17.2318, -74.7242, 12.595, 0.52 ) }
    dend_6 { pt3dadd( -17.3869, -74.8919, 12.5759, 0.52 ) }
    dend_6 { pt3dadd( -17.7607, -75.2343, 12.5593, 0.52 ) }
    dend_6 { pt3dadd( -18.2209, -75.578, 12.5688, 0.52 ) }
    dend_6 { pt3dadd( -18.4216, -75.6897, 12.582, 0.88 ) }
    dend_6 { pt3dadd( -18.8412, -75.8641, 12.6225, 0.88 ) }
    dend_6 { pt3dadd( -19.6385, -76.1156, 12.6795, 0.37 ) }
    dend_6 { pt3dadd( -20.2036, -76.2719, 12.6878, 0.29 ) }
    dend_6 { pt3dadd( -20.4904, -76.3539, 12.6794, 0.96 ) }
    dend_6 { pt3dadd( -20.9623, -76.5258, 12.6423, 1.03 ) }
    dend_6 { pt3dadd( -21.499, -76.7857, 12.5535, 0.52 ) }
    dend_6 { pt3dadd( -21.96, -77.0834, 12.4, 0.52 ) }
    dend_6 { pt3dadd( -22.4088, -77.4556, 12.171, 0.52 ) }
    dend_6 { pt3dadd( -22.8275, -77.8891, 11.9024, 0.52 ) }
    dend_6 { pt3dadd( -23.1493, -78.2775, 11.6672, 0.52 ) }
    dend_6 { pt3dadd( -23.5646, -78.8523, 11.3331, 0.44 ) }
    dend_6 { pt3dadd( -23.9703, -79.4881, 10.9607, 0.74 ) }
    dend_6 { pt3dadd( -24.2028, -79.9035, 10.7223, 0.81 ) }
    dend_6 { pt3dadd( -24.4418, -80.3658, 10.4463, 0.52 ) }
    dend_6 { pt3dadd( -24.5738, -80.6249, 10.2785, 0.88 ) }
    dend_6 { pt3dadd( -24.6707, -80.8133, 10.1557, 0.88 ) }
    dend_6 { pt3dadd( -25.0045, -81.4561, 9.75111, 0.44 ) }
    dend_6 { pt3dadd( -25.3176, -81.9778, 9.42086, 0.37 ) }
    dend_6 { pt3dadd( -25.4622, -82.205, 9.26996, 0.37 ) }
    dend_6 { pt3dadd( -25.732, -82.6148, 8.99177, 0.37 ) }
    dend_6 { pt3dadd( -25.9549, -82.9418, 8.77694, 0.59 ) }
    dend_6 { pt3dadd( -26.1655, -83.2328, 8.60166, 0.59 ) }
    dend_6 { pt3dadd( -26.7693, -83.9595, 8.23088, 0.29 ) }
    dend_6 { pt3dadd( -27.0395, -84.255, 8.09706, 0.29 ) }
    dend_6 { pt3dadd( -27.2807, -84.5178, 7.98203, 0.59 ) }
    dend_6 { pt3dadd( -27.6325, -84.9257, 7.80315, 0.59 ) }
    dend_6 { pt3dadd( -27.8662, -85.2075, 7.6825, 0.37 ) }
    dend_6 { pt3dadd( -28.2093, -85.6237, 7.5266, 0.37 ) }
    dend_6 { pt3dadd( -28.4367, -85.884, 7.45515, 0.81 ) }
    dend_6 { pt3dadd( -28.6202, -86.0763, 7.39999, 0.81 ) }
    dend_6 { pt3dadd( -28.8727, -86.3184, 7.31693, 0.81 ) }
    dend_6 { pt3dadd( -29.2187, -86.6719, 7.14446, 0.37 ) }
    dend_6 { pt3dadd( -29.4676, -86.956, 6.98526, 0.37 ) }
    dend_6 { pt3dadd( -29.7739, -87.3188, 6.77057, 0.66 ) }
    dend_6 { pt3dadd( -29.9443, -87.5071, 6.65571, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_6 { pt3dadd( -30.2863, -87.8424, 6.44161, 0.96 ) }
    dend_6 { pt3dadd( -30.8412, -88.3057, 6.09712, 0.29 ) }
    dend_6 { pt3dadd( -31.1043, -88.4928, 5.90474, 0.29 ) }
    dend_6 { pt3dadd( -31.4499, -88.7393, 5.61548, 0.44 ) }
    dend_6 { pt3dadd( -31.5945, -88.853, 5.49009, 0.81 ) }
    dend_6 { pt3dadd( -31.8135, -89.0498, 5.27675, 0.81 ) }
    dend_6 { pt3dadd( -32.0202, -89.2518, 5.05473, 0.81 ) }
    dend_6 { pt3dadd( -32.5762, -89.7772, 4.46735, 0.52 ) }
    dend_6 { pt3dadd( -32.8461, -90.0398, 4.16968, 0.59 ) }
    dend_6 { pt3dadd( -33.1656, -90.3834, 3.79375, 0.59 ) }
    dend_6 { pt3dadd( -33.6884, -90.9699, 3.20745, 0.29 ) }
    dend_6 { pt3dadd( -34.0257, -91.362, 2.84844, 0.96 ) }
    dend_6 { pt3dadd( -34.23, -91.5962, 2.65277, 1.25 ) }
    dend_6 { pt3dadd( -34.3629, -91.7341, 2.54605, 1.25 ) }
    dend_6 { pt3dadd( -34.875, -92.1748, 2.21083, 0.37 ) }
    dend_6 { pt3dadd( -35.2416, -92.451, 2.01541, 0.37 ) }
    dend_6 { pt3dadd( -35.5623, -92.671, 1.89677, 1.03 ) }
    dend_6 { pt3dadd( -35.8673, -92.8678, 1.80734, 1.25 ) }
    dend_6 { pt3dadd( -36.1871, -93.057, 1.72722, 1.25 ) }
    dend_6 { pt3dadd( -36.8123, -93.3738, 1.63797, 0.29 ) }
    dend_6 { pt3dadd( -37.1439, -93.5088, 1.63129, 0.44 ) }
    dend_6 { pt3dadd( -37.4892, -93.6312, 1.64495, 0.59 ) }
    dend_6 { pt3dadd( -37.9317, -93.7726, 1.65965, 0.59 ) }
    dend_6 { pt3dadd( -38.4703, -93.9315, 1.66511, 0.29 ) }
    dend_6 { pt3dadd( -39.1467, -94.1198, 1.634, 0.29 ) }
    dend_6 { pt3dadd( -39.8006, -94.3091, 1.55431, 0.29 ) }
    dend_6 { pt3dadd( -40.2214, -94.4407, 1.4829, 0.29 ) }
    dend_6 { pt3dadd( -40.896, -94.6816, 1.33057, 0.81 ) }
    dend_6 { pt3dadd( -41.1148, -94.7684, 1.27185, 0.81 ) }
    dend_6 { pt3dadd( -41.7952, -95.0702, 1.06598, 0.52 ) }
    dend_6 { pt3dadd( -42.4403, -95.4002, 0.882229, 0.52 ) }
    dend_6 { pt3dadd( -42.9913, -95.7219, 0.76644, 0.44 ) }
    dend_6 { pt3dadd( -43.372, -95.9705, 0.740587, 0.81 ) }
    dend_6 { pt3dadd( -43.8382, -96.3055, 0.803407, 0.81 ) }
    dend_6 { pt3dadd( -44.1407, -96.5489, 0.926351, 0.81 ) }
    dend_6 { pt3dadd( -44.6843, -97.0233, 1.29007, 0.37 ) }
    dend_6 { pt3dadd( -44.9092, -97.2343, 1.495, 0.37 ) }
    dend_6 { pt3dadd( -45.2079, -97.5275, 1.80742, 0.81 ) }
    dend_6 { pt3dadd( -45.5417, -97.8533, 2.17174, 0.81 ) }
    dend_6 { pt3dadd( -46.1921, -98.4538, 2.8801, 0.44 ) }
    dend_6 { pt3dadd( -46.5017, -98.6884, 3.19624, 0.37 ) }
    dend_6 { pt3dadd( -46.8406, -98.9128, 3.51065, 0.29 ) }
    dend_6 { pt3dadd( -47.1041, -99.0797, 3.73325, 0.29 ) }
    dend_6 { pt3dadd( -47.3674, -99.2562, 3.93553, 0.74 ) }
    dend_6 { pt3dadd( -47.8103, -99.6028, 4.28301, 0.29 ) }
    dend_6 { pt3dadd( -48.398, -100.12, 4.72858, 0.29 ) }
    dend_6 { pt3dadd( -48.7163, -100.421, 4.97059, 0.66 ) }
    dend_6 { pt3dadd( -49.0273, -100.724, 5.18785, 0.81 ) }
    dend_6 { pt3dadd( -49.3386, -101.064, 5.40102, 0.81 ) }
    dend_6 { pt3dadd( -49.9281, -101.764, 5.77217, 0.44 ) }
    dend_6 { pt3dadd( -50.1888, -102.096, 5.90845, 0.29 ) }
    dend_6 { pt3dadd( -50.5737, -102.604, 6.08284, 0.29 ) }
    dend_6 { pt3dadd( -50.8572, -102.946, 6.20197, 0.29 ) }
    dend_6 { pt3dadd( -51.1733, -103.303, 6.32553, 0.29 ) }
    dend_6 { pt3dadd( -51.4154, -103.55, 6.39647, 0.96 ) }
    dend_6 { pt3dadd( -51.6875, -103.81, 6.41252, 1.25 ) }
    // Section: dend_48, id: dend_48, parent: dend_30 (entry count 56/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -123.253, 81.7866, -51.1257, 0.37 ) }
    dend_48 { pt3dadd( -124.141, 80.94, -50.6175, 0.37 ) }
    dend_48 { pt3dadd( -124.877, 80.3307, -50.1369, 0.37 ) }
    dend_48 { pt3dadd( -126.088, 79.538, -49.2981, 0.37 ) }
    dend_48 { pt3dadd( -126.749, 79.2024, -48.8302, 0.22 ) }
    dend_48 { pt3dadd( -127.374, 78.9549, -48.39, 0.22 ) }
    dend_48 { pt3dadd( -128.372, 78.6251, -47.6933, 0.37 ) }
    dend_48 { pt3dadd( -128.922, 78.5507, -47.3043, 0.37 ) }
    dend_48 { pt3dadd( -129.703, 78.5395, -46.7595, 0.22 ) }
    dend_48 { pt3dadd( -130.421, 78.586, -46.3294, 0.22 ) }
    dend_48 { pt3dadd( -131.058, 78.6175, -46.0204, 0.81 ) }
    dend_48 { pt3dadd( -131.419, 78.611, -45.8793, 0.88 ) }
    dend_48 { pt3dadd( -131.969, 78.547, -45.7144, 0.66 ) }
    dend_48 { pt3dadd( -133.012, 78.3812, -45.4253, 0.29 ) }
    dend_48 { pt3dadd( -134.398, 78.1483, -45.051, 0.29 ) }
    dend_48 { pt3dadd( -135.351, 78.0087, -44.7973, 0.29 ) }
    dend_48 { pt3dadd( -136.653, 77.8442, -44.4607, 0.29 ) }
    dend_48 { pt3dadd( -138.322, 77.6491, -44.0274, 0.29 ) }
    dend_48 { pt3dadd( -139.108, 77.5604, -43.8239, 0.66 ) }
    dend_48 { pt3dadd( -139.723, 77.4888, -43.661, 0.88 ) }
    dend_48 { pt3dadd( -140.027, 77.4466, -43.5827, 0.88 ) }
    dend_48 { pt3dadd( -140.896, 77.3299, -43.3782, 0.29 ) }
    dend_48 { pt3dadd( -141.695, 77.1997, -43.2065, 0.29 ) }
    dend_48 { pt3dadd( -142.67, 77.0128, -43.0128, 1.33 ) }
    dend_48 { pt3dadd( -143.033, 76.9279, -42.9481, 1.77 ) }
    dend_48 { pt3dadd( -144.558, 76.586, -42.6995, 0.29 ) }
    dend_48 { pt3dadd( -145.618, 76.3591, -42.5374, 0.29 ) }
    dend_48 { pt3dadd( -146.965, 76.0838, -42.3299, 0.29 ) }
    dend_48 { pt3dadd( -147.621, 75.9701, -42.2201, 0.29 ) }
    dend_48 { pt3dadd( -148.279, 75.8921, -42.0557, 0.74 ) }
    dend_48 { pt3dadd( -149.299, 75.8118, -41.6823, 0.29 ) }
    dend_48 { pt3dadd( -150.327, 75.7836, -41.0998, 0.29 ) }
    dend_48 { pt3dadd( -151.187, 75.7952, -40.474, 0.81 ) }
    dend_48 { pt3dadd( -151.623, 75.8077, -40.1004, 0.81 ) }
    dend_48 { pt3dadd( -152.917, 75.8638, -38.8024, 0.22 ) }
    dend_48 { pt3dadd( -153.737, 75.891, -37.9015, 0.22 ) }
    dend_48 { pt3dadd( -154.609, 75.8755, -36.9169, 0.88 ) }
    dend_48 { pt3dadd( -155.105, 75.8513, -36.3898, 1.18 ) }
    dend_48 { pt3dadd( -156.256, 75.7295, -35.3373, 0.29 ) }
    dend_48 { pt3dadd( -157.0, 75.5804, -34.7761, 0.29 ) }
    dend_48 { pt3dadd( -158.169, 75.238, -34.0529, 0.29 ) }
    dend_48 { pt3dadd( -159.193, 74.9168, -33.5068, 0.29 ) }
    dend_48 { pt3dadd( -160.195, 74.6134, -33.0373, 0.81 ) }
    dend_48 { pt3dadd( -161.518, 74.2868, -32.4536, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_48 { pt3dadd( -162.62, 74.1002, -31.999, 0.22 ) }
    dend_48 { pt3dadd( -163.334, 74.0359, -31.7318, 0.29 ) }
    dend_48 { pt3dadd( -164.4, 74.0901, -31.3508, 0.29 ) }
    dend_48 { pt3dadd( -165.278, 74.2541, -30.9723, 0.29 ) }
    dend_48 { pt3dadd( -166.218, 74.5367, -30.4696, 0.52 ) }
    dend_48 { pt3dadd( -166.825, 74.7823, -30.0937, 0.59 ) }
    dend_48 { pt3dadd( -167.622, 75.1828, -29.5406, 0.29 ) }
    dend_48 { pt3dadd( -168.04, 75.4204, -29.2305, 0.29 ) }
    dend_48 { pt3dadd( -169.172, 76.0739, -28.282, 0.29 ) }
    dend_48 { pt3dadd( -169.815, 76.4049, -27.7112, 0.29 ) }
    dend_48 { pt3dadd( -170.533, 76.7077, -27.036, 0.59 ) }
    dend_48 { pt3dadd( -171.217, 76.9513, -26.4362, 0.74 ) }
    dend_48 { pt3dadd( -172.222, 77.285, -25.7135, 0.44 ) }
    dend_48 { pt3dadd( -173.063, 77.5515, -25.2432, 1.55 ) }
    dend_48 { pt3dadd( -173.657, 77.7076, -25.0271, 1.99 ) }
    dend_48 { pt3dadd( -175.318, 77.9772, -24.5815, 0.29 ) }
    dend_48 { pt3dadd( -176.458, 78.0164, -24.3574, 0.29 ) }
    dend_48 { pt3dadd( -178.059, 77.9151, -24.1563, 0.29 ) }
    dend_48 { pt3dadd( -178.657, 77.8328, -24.1112, 0.29 ) }
    dend_48 { pt3dadd( -179.906, 77.5941, -24.0758, 0.44 ) }
    dend_48 { pt3dadd( -180.694, 77.4071, -24.0681, 0.44 ) }
    dend_48 { pt3dadd( -181.612, 77.1322, -24.0586, 0.29 ) }
    dend_48 { pt3dadd( -182.794, 76.7222, -23.9546, 0.29 ) }
    dend_48 { pt3dadd( -183.566, 76.4535, -23.8527, 0.29 ) }
    dend_48 { pt3dadd( -184.354, 76.2142, -23.7621, 0.37 ) }
    dend_48 { pt3dadd( -185.064, 76.0474, -23.6817, 0.59 ) }
    dend_48 { pt3dadd( -185.887, 75.892, -23.5856, 0.59 ) }
    dend_48 { pt3dadd( -186.869, 75.7295, -23.4442, 0.44 ) }
    dend_48 { pt3dadd( -187.676, 75.662, -23.2393, 0.29 ) }
    dend_48 { pt3dadd( -187.989, 75.678, -23.1371, 0.88 ) }
    dend_48 { pt3dadd( -188.67, 75.7648, -22.8819, 0.88 ) }
    dend_48 { pt3dadd( -189.079, 75.8158, -22.7139, 0.88 ) }
    dend_48 { pt3dadd( -189.984, 75.8783, -22.3211, 0.29 ) }
    dend_48 { pt3dadd( -191.062, 75.9004, -21.8479, 0.29 ) }
    dend_48 { pt3dadd( -191.899, 75.939, -21.4834, 0.29 ) }
    dend_48 { pt3dadd( -192.665, 76.0423, -21.1646, 0.29 ) }
    dend_48 { pt3dadd( -193.351, 76.1974, -20.8915, 0.52 ) }
    dend_48 { pt3dadd( -194.236, 76.464, -20.5563, 0.52 ) }
    dend_48 { pt3dadd( -195.443, 76.8714, -20.1373, 0.29 ) }
    dend_48 { pt3dadd( -196.353, 77.1891, -19.8597, 0.29 ) }
    dend_48 { pt3dadd( -197.269, 77.549, -19.5858, 0.74 ) }
    dend_48 { pt3dadd( -197.846, 77.8091, -19.4471, 1.03 ) }
    dend_48 { pt3dadd( -198.59, 78.1964, -19.324, 0.37 ) }
    dend_48 { pt3dadd( -199.337, 78.5907, -19.2543, 0.37 ) }
    dend_48 { pt3dadd( -199.981, 78.8806, -19.223, 0.96 ) }
    dend_48 { pt3dadd( -200.475, 79.0528, -19.2028, 1.18 ) }
    dend_48 { pt3dadd( -201.756, 79.4771, -19.1425, 0.29 ) }
    dend_48 { pt3dadd( -202.513, 79.7654, -19.0964, 0.29 ) }
    dend_48 { pt3dadd( -203.314, 80.0867, -19.0451, 0.29 ) }
    dend_48 { pt3dadd( -204.102, 80.3874, -18.968, 0.37 ) }
    dend_48 { pt3dadd( -205.016, 80.7011, -18.8443, 0.37 ) }
    dend_48 { pt3dadd( -206.103, 81.0745, -18.6527, 0.37 ) }
    dend_48 { pt3dadd( -206.969, 81.3421, -18.4657, 0.37 ) }
    dend_48 { pt3dadd( -207.886, 81.6173, -18.2716, 0.37 ) }
    dend_48 { pt3dadd( -209.108, 82.0502, -18.0262, 0.37 ) }
    dend_48 { pt3dadd( -210.077, 82.4311, -17.8458, 0.37 ) }
    dend_48 { pt3dadd( -210.933, 82.7827, -17.6891, 0.37 ) }
    dend_48 { pt3dadd( -211.964, 83.1843, -17.4526, 0.37 ) }
    dend_48 { pt3dadd( -212.991, 83.5631, -17.1595, 0.37 ) }
    dend_48 { pt3dadd( -214.187, 83.964, -16.7412, 1.4 ) }
    dend_48 { pt3dadd( -214.412, 84.0316, -16.6531, 2.06 ) }
    dend_48 { pt3dadd( -214.958, 84.1644, -16.4178, 2.28 ) }
    dend_48 { pt3dadd( -216.275, 84.3934, -15.8234, 0.29 ) }
    dend_48 { pt3dadd( -217.152, 84.4817, -15.3795, 0.29 ) }
    dend_48 { pt3dadd( -218.476, 84.4681, -14.6302, 0.29 ) }
    dend_48 { pt3dadd( -219.335, 84.3894, -14.0988, 0.29 ) }
    dend_48 { pt3dadd( -220.291, 84.247, -13.4772, 0.29 ) }
    dend_48 { pt3dadd( -221.257, 84.0449, -12.8312, 0.29 ) }
    dend_48 { pt3dadd( -222.187, 83.8093, -12.2023, 0.29 ) }
    dend_48 { pt3dadd( -222.831, 83.6432, -11.7468, 0.29 ) }
    dend_48 { pt3dadd( -223.466, 83.4836, -11.2826, 0.44 ) }
    dend_48 { pt3dadd( -224.404, 83.2652, -10.6484, 0.44 ) }
    dend_48 { pt3dadd( -225.192, 83.1677, -10.1783, 0.29 ) }
    dend_48 { pt3dadd( -225.76, 83.2056, -9.89402, 0.29 ) }
    dend_48 { pt3dadd( -226.335, 83.3399, -9.65629, 0.74 ) }
    dend_48 { pt3dadd( -226.911, 83.5101, -9.44098, 0.74 ) }
    dend_48 { pt3dadd( -228.2, 83.9661, -8.99749, 0.29 ) }
    dend_48 { pt3dadd( -229.322, 84.4659, -8.62638, 0.29 ) }
    dend_48 { pt3dadd( -230.524, 85.0705, -8.24058, 0.29 ) }
    dend_48 { pt3dadd( -231.431, 85.544, -7.95265, 1.18 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -123.253, 81.7866, -51.1257, 0.44 ) }
    dend_31 { pt3dadd( -124.718, 81.8301, -51.1399, 0.44 ) }
    dend_31 { pt3dadd( -125.565, 81.8372, -51.1015, 0.44 ) }
    dend_31 { pt3dadd( -126.696, 81.8879, -51.0061, 0.44 ) }
    dend_31 { pt3dadd( -127.465, 81.968, -50.9185, 0.44 ) }
    dend_31 { pt3dadd( -128.351, 82.1329, -50.7894, 0.44 ) }
    dend_31 { pt3dadd( -129.095, 82.3157, -50.655, 0.44 ) }
    dend_31 { pt3dadd( -129.646, 82.5052, -50.4945, 0.44 ) }
    dend_31 { pt3dadd( -130.214, 82.7975, -50.3056, 0.66 ) }
    dend_31 { pt3dadd( -130.713, 83.137, -50.1338, 0.66 ) }
    dend_31 { pt3dadd( -131.392, 83.676, -49.9139, 0.29 ) }
    dend_31 { pt3dadd( -132.124, 84.3386, -49.6938, 0.29 ) }
    dend_31 { pt3dadd( -132.841, 85.0617, -49.4906, 1.11 ) }
    dend_31 { pt3dadd( -133.051, 85.2887, -49.4336, 1.11 ) }
    dend_31 { pt3dadd( -133.665, 85.9117, -49.2712, 0.29 ) }
    dend_31 { pt3dadd( -134.036, 86.3056, -49.1726, 0.29 ) }
    dend_31 { pt3dadd( -134.276, 86.6004, -49.107, 1.03 ) }
    dend_31 { pt3dadd( -134.46, 86.8733, -49.0512, 1.03 ) }
    dend_31 { pt3dadd( -134.731, 87.2859, -48.9628, 1.03 ) }
    dend_31 { pt3dadd( -135.496, 88.4934, -48.6867, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_31 { pt3dadd( -135.929, 89.207, -48.5048, 0.29 ) }
    dend_31 { pt3dadd( -136.326, 89.8441, -48.3302, 0.29 ) }
    dend_31 { pt3dadd( -136.68, 90.3414, -48.1698, 0.29 ) }
    dend_31 { pt3dadd( -137.334, 91.1795, -47.8663, 1.33 ) }
    dend_31 { pt3dadd( -137.567, 91.4568, -47.7617, 1.69 ) }
    dend_31 { pt3dadd( -138.489, 92.4273, -47.3694, 0.37 ) }
    dend_31 { pt3dadd( -139.035, 92.9044, -47.1575, 0.37 ) }
    dend_31 { pt3dadd( -140.008, 93.6264, -46.8049, 0.37 ) }
    dend_31 { pt3dadd( -140.808, 94.173, -46.5288, 0.37 ) }
    dend_31 { pt3dadd( -141.614, 94.7185, -46.2596, 0.37 ) }
    dend_31 { pt3dadd( -142.244, 95.1738, -46.0642, 0.37 ) }
    dend_31 { pt3dadd( -142.548, 95.4195, -45.984, 0.81 ) }
    dend_31 { pt3dadd( -143.0, 95.8675, -45.9111, 0.81 ) }
    dend_31 { pt3dadd( -143.482, 96.4705, -45.9253, 0.52 ) }
    dend_31 { pt3dadd( -143.883, 97.0002, -45.9761, 0.52 ) }
    dend_31 { pt3dadd( -144.472, 97.7169, -46.063, 1.03 ) }
    dend_31 { pt3dadd( -144.762, 98.0599, -46.115, 1.03 ) }
    dend_31 { pt3dadd( -145.311, 98.6504, -46.2093, 0.88 ) }
    dend_31 { pt3dadd( -146.131, 99.4334, -46.333, 0.37 ) }
    dend_31 { pt3dadd( -147.083, 100.234, -46.4424, 0.37 ) }
    dend_31 { pt3dadd( -148.098, 101.05, -46.4698, 0.37 ) }
    dend_31 { pt3dadd( -148.607, 101.466, -46.4453, 0.37 ) }
    dend_31 { pt3dadd( -149.451, 102.174, -46.3422, 0.37 ) }
    dend_31 { pt3dadd( -150.012, 102.659, -46.2277, 1.18 ) }
    dend_31 { pt3dadd( -150.428, 103.03, -46.1154, 1.69 ) }
    dend_31 { pt3dadd( -151.939, 104.525, -45.654, 0.44 ) }
    dend_31 { pt3dadd( -152.74, 105.453, -45.3921, 0.44 ) }
    dend_31 { pt3dadd( -153.458, 106.382, -45.1531, 0.44 ) }
    dend_31 { pt3dadd( -153.737, 106.78, -45.0646, 0.96 ) }
    dend_31 { pt3dadd( -154.016, 107.199, -44.984, 1.33 ) }
    dend_31 { pt3dadd( -154.703, 108.224, -44.8025, 0.37 ) }
    dend_31 { pt3dadd( -155.32, 109.184, -44.6642, 0.37 ) }
    dend_31 { pt3dadd( -155.709, 109.828, -44.5791, 0.37 ) }
    dend_31 { pt3dadd( -156.143, 110.628, -44.4857, 0.37 ) }
    dend_31 { pt3dadd( -156.683, 111.618, -44.38, 0.37 ) }
    dend_31 { pt3dadd( -157.197, 112.482, -44.3096, 0.37 ) }
    dend_31 { pt3dadd( -157.603, 113.104, -44.2442, 0.59 ) }
    dend_31 { pt3dadd( -158.015, 113.708, -44.1564, 0.59 ) }
    dend_31 { pt3dadd( -158.562, 114.52, -44.092, 0.29 ) }
    dend_31 { pt3dadd( -158.805, 114.893, -44.0834, 0.29 ) }
    dend_31 { pt3dadd( -159.695, 116.154, -44.0931, 1.33 ) }
    dend_31 { pt3dadd( -160.059, 116.623, -44.0967, 2.14 ) }
    dend_31 { pt3dadd( -160.377, 116.989, -44.1002, 2.28 ) }
    dend_31 { pt3dadd( -161.466, 118.07, -44.1342, 1.11 ) }
    dend_31 { pt3dadd( -162.281, 118.747, -44.1839, 0.29 ) }
    dend_31 { pt3dadd( -163.266, 119.525, -44.2496, 0.29 ) }
    dend_31 { pt3dadd( -163.931, 120.034, -44.2961, 0.29 ) }
    dend_31 { pt3dadd( -164.547, 120.525, -44.356, 0.44 ) }
    dend_31 { pt3dadd( -165.168, 121.063, -44.4385, 0.44 ) }
    dend_31 { pt3dadd( -165.913, 121.783, -44.5339, 0.44 ) }
    dend_31 { pt3dadd( -166.595, 122.546, -44.6544, 0.66 ) }
    dend_31 { pt3dadd( -166.925, 122.997, -44.72, 0.66 ) }
    dend_31 { pt3dadd( -167.366, 123.699, -44.7949, 0.29 ) }
    dend_31 { pt3dadd( -167.802, 124.546, -44.7875, 0.29 ) }
    dend_31 { pt3dadd( -168.108, 125.249, -44.7074, 0.29 ) }
    dend_31 { pt3dadd( -168.378, 125.926, -44.6049, 0.29 ) }
    dend_31 { pt3dadd( -168.795, 126.888, -44.4287, 0.44 ) }
    dend_31 { pt3dadd( -169.1, 127.538, -44.2751, 0.44 ) }
    dend_31 { pt3dadd( -169.608, 128.556, -43.9367, 1.03 ) }
    dend_31 { pt3dadd( -169.842, 129.071, -43.6889, 1.03 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 60/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 12.3381, -68.8499, 13.4322, 0.59 ) }
    dend_11 { pt3dadd( 12.6215, -70.7056, 13.1247, 0.59 ) }
    dend_11 { pt3dadd( 12.6965, -71.9805, 12.9016, 0.59 ) }
    dend_11 { pt3dadd( 12.7254, -73.5519, 12.6394, 0.59 ) }
    dend_11 { pt3dadd( 12.7457, -74.7077, 12.4572, 0.59 ) }
    dend_11 { pt3dadd( 12.7602, -76.4513, 12.2458, 0.88 ) }
    dend_11 { pt3dadd( 12.7227, -78.0796, 12.0937, 0.88 ) }
    dend_11 { pt3dadd( 12.6064, -79.2843, 12.0253, 0.66 ) }
    dend_11 { pt3dadd( 12.3304, -80.6674, 12.0417, 0.81 ) }
    dend_11 { pt3dadd( 11.9232, -82.1159, 12.1634, 0.74 ) }
    dend_11 { pt3dadd( 11.5672, -83.2706, 12.3444, 0.96 ) }
    dend_11 { pt3dadd( 11.2491, -84.4137, 12.6081, 0.74 ) }
    dend_11 { pt3dadd( 10.9414, -85.658, 12.9453, 0.59 ) }
    dend_11 { pt3dadd( 10.6417, -87.0321, 13.3269, 0.52 ) }
    dend_11 { pt3dadd( 10.5552, -87.4959, 13.4532, 1.03 ) }
    dend_11 { pt3dadd( 10.4113, -88.769, 13.7255, 0.52 ) }
    dend_11 { pt3dadd( 10.422, -90.2302, 13.893, 0.81 ) }
    dend_11 { pt3dadd( 10.5327, -91.1199, 13.9218, 1.03 ) }
    dend_11 { pt3dadd( 10.6825, -91.9713, 13.8829, 1.03 ) }
    dend_11 { pt3dadd( 10.8761, -93.0954, 13.7712, 0.88 ) }
    dend_11 { pt3dadd( 11.0462, -94.3216, 13.6239, 0.74 ) }
    dend_11 { pt3dadd( 11.1284, -95.1203, 13.5188, 0.74 ) }
    dend_11 { pt3dadd( 11.2045, -96.0953, 13.3885, 0.44 ) }
    dend_11 { pt3dadd( 11.3462, -97.6986, 13.1393, 0.44 ) }
    dend_11 { pt3dadd( 11.4305, -98.6848, 12.9807, 0.66 ) }
    dend_11 { pt3dadd( 11.4968, -99.4158, 12.8753, 0.66 ) }
    dend_11 { pt3dadd( 11.585, -100.385, 12.7363, 0.52 ) }
    dend_11 { pt3dadd( 11.6736, -101.577, 12.5511, 0.81 ) }
    dend_11 { pt3dadd( 11.7429, -102.639, 12.3433, 1.03 ) }
    dend_11 { pt3dadd( 11.7882, -103.358, 12.1715, 1.03 ) }
    dend_11 { pt3dadd( 11.817, -104.352, 11.9177, 0.66 ) }
    dend_11 { pt3dadd( 11.7781, -105.521, 11.5858, 0.52 ) }
    dend_11 { pt3dadd( 11.6985, -106.47, 11.3, 0.52 ) }
    dend_11 { pt3dadd( 11.5916, -107.275, 11.0758, 0.52 ) }
    dend_11 { pt3dadd( 11.4485, -108.251, 10.8397, 0.74 ) }
    dend_11 { pt3dadd( 11.3326, -109.001, 10.6763, 0.74 ) }
    dend_11 { pt3dadd( 11.0296, -110.835, 10.3529, 0.59 ) }
    dend_11 { pt3dadd( 10.8721, -111.947, 10.2395, 0.59 ) }
    dend_11 { pt3dadd( 10.78, -113.007, 10.1717, 0.96 ) }
    dend_11 { pt3dadd( 10.7577, -113.577, 10.1632, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_11 { pt3dadd( 10.7398, -114.715, 10.2189, 0.59 ) }
    dend_11 { pt3dadd( 10.7063, -116.16, 10.3274, 0.44 ) }
    dend_11 { pt3dadd( 10.6645, -117.468, 10.4766, 0.44 ) }
    dend_11 { pt3dadd( 10.6212, -118.588, 10.6006, 0.44 ) }
    dend_11 { pt3dadd( 10.5899, -119.775, 10.7011, 0.44 ) }
    dend_11 { pt3dadd( 10.5962, -120.985, 10.7677, 0.44 ) }
    dend_11 { pt3dadd( 10.6937, -122.65, 10.7994, 0.59 ) }
    dend_11 { pt3dadd( 10.7635, -123.303, 10.8116, 0.81 ) }
    dend_11 { pt3dadd( 10.9179, -124.356, 10.8175, 0.44 ) }
    dend_11 { pt3dadd( 11.1388, -125.761, 10.8531, 0.44 ) }
    dend_11 { pt3dadd( 11.2928, -126.617, 10.895, 0.81 ) }
    dend_11 { pt3dadd( 11.4749, -127.464, 10.9704, 0.81 ) }
    dend_11 { pt3dadd( 11.7734, -128.698, 11.0745, 0.81 ) }
    dend_11 { pt3dadd( 12.0048, -129.599, 11.1013, 0.52 ) }
    dend_11 { pt3dadd( 12.2967, -130.71, 11.0717, 0.52 ) }
    dend_11 { pt3dadd( 12.4883, -131.592, 10.9888, 0.81 ) }
    dend_11 { pt3dadd( 12.6067, -132.648, 10.8365, 1.03 ) }
    dend_11 { pt3dadd( 12.6092, -134.176, 10.5683, 0.52 ) }
    dend_11 { pt3dadd( 12.5286, -135.279, 10.3454, 0.52 ) }
    dend_11 { pt3dadd( 12.3885, -136.315, 10.1567, 0.88 ) }
    dend_11 { pt3dadd( 12.1718, -137.587, 9.95586, 0.88 ) }
    dend_11 { pt3dadd( 11.8576, -139.087, 9.77404, 0.44 ) }
    dend_11 { pt3dadd( 11.4859, -140.622, 9.64509, 0.74 ) }
    dend_11 { pt3dadd( 11.322, -141.341, 9.66336, 0.74 ) }
    dend_11 { pt3dadd( 11.0309, -142.656, 9.72762, 0.37 ) }
    dend_11 { pt3dadd( 10.8418, -143.623, 9.79397, 0.66 ) }
    dend_11 { pt3dadd( 10.7211, -144.551, 9.87419, 0.96 ) }
    dend_11 { pt3dadd( 10.6646, -145.65, 9.95457, 0.96 ) }
    dend_11 { pt3dadd( 10.6671, -148.08, 10.0701, 0.37 ) }
    dend_11 { pt3dadd( 10.7386, -149.572, 10.1788, 0.37 ) }
    dend_11 { pt3dadd( 10.801, -150.221, 10.2551, 0.88 ) }
    dend_11 { pt3dadd( 10.864, -150.788, 10.327, 0.88 ) }
    dend_11 { pt3dadd( 10.9567, -151.826, 10.418, 0.88 ) }
    dend_11 { pt3dadd( 11.0051, -152.902, 10.4548, 0.52 ) }
    dend_11 { pt3dadd( 11.0001, -154.408, 10.5538, 0.52 ) }
    dend_11 { pt3dadd( 10.9854, -155.971, 10.7811, 0.44 ) }
    dend_11 { pt3dadd( 10.9697, -157.26, 11.0127, 0.52 ) }
    dend_11 { pt3dadd( 10.9304, -159.076, 11.3775, 0.74 ) }
    dend_11 { pt3dadd( 10.8799, -160.494, 11.6848, 0.74 ) }
    dend_11 { pt3dadd( 10.7151, -162.835, 12.1824, 0.59 ) }
    dend_11 { pt3dadd( 10.5985, -163.98, 12.3993, 0.59 ) }
    dend_11 { pt3dadd( 10.4473, -165.146, 12.644, 0.44 ) }
    dend_11 { pt3dadd( 10.3047, -166.185, 12.8702, 0.44 ) }
    dend_11 { pt3dadd( 10.2277, -166.744, 12.982, 0.81 ) }
    dend_11 { pt3dadd( 10.0838, -167.805, 13.0933, 0.81 ) }
    dend_11 { pt3dadd( 9.96188, -168.667, 13.0764, 0.74 ) }
    dend_11 { pt3dadd( 9.81802, -169.542, 13.0807, 0.59 ) }
    dend_11 { pt3dadd( 9.5914, -170.836, 13.1311, 0.29 ) }
    dend_11 { pt3dadd( 9.47497, -171.478, 13.1853, 0.52 ) }
    dend_11 { pt3dadd( 9.21035, -173.084, 13.341, 0.52 ) }
    dend_11 { pt3dadd( 9.07374, -174.083, 13.4573, 0.52 ) }
    dend_11 { pt3dadd( 8.8732, -175.672, 13.6953, 0.74 ) }
    dend_11 { pt3dadd( 8.77182, -176.491, 13.8682, 1.11 ) }
    dend_11 { pt3dadd( 8.66272, -177.123, 14.0756, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 54/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 12.3381, -68.8499, 13.4322, 0.52 ) }
    dend_8 { pt3dadd( 13.5588, -67.7111, 14.479, 0.52 ) }
    dend_8 { pt3dadd( 14.2222, -67.0923, 15.0479, 0.52 ) }
    dend_8 { pt3dadd( 14.7768, -66.575, 15.5235, 0.52 ) }
    dend_8 { pt3dadd( 15.2571, -66.1269, 15.9354, 0.52 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 59/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -169.842, 129.071, -43.6889, 0.22 ) }
    dend_37 { pt3dadd( -171.315, 131.393, -44.7545, 0.22 ) }
    dend_37 { pt3dadd( -171.888, 132.054, -45.1683, 0.22 ) }
    dend_37 { pt3dadd( -172.382, 132.466, -45.4943, 0.22 ) }
    dend_37 { pt3dadd( -172.934, 132.935, -45.8475, 0.22 ) }
    dend_37 { pt3dadd( -174.141, 134.148, -46.6635, 0.22 ) }
    dend_37 { pt3dadd( -175.053, 135.262, -47.3692, 1.25 ) }
    dend_37 { pt3dadd( -175.425, 135.707, -47.6678, 1.55 ) }
    dend_37 { pt3dadd( -176.705, 137.408, -48.7039, 0.37 ) }
    dend_37 { pt3dadd( -177.146, 138.092, -49.0484, 0.37 ) }
    dend_37 { pt3dadd( -177.855, 139.379, -49.5798, 0.37 ) }
    dend_37 { pt3dadd( -178.399, 140.659, -49.9785, 0.37 ) }
    dend_37 { pt3dadd( -178.759, 141.72, -50.2873, 0.66 ) }
    dend_37 { pt3dadd( -178.991, 142.519, -50.5217, 1.33 ) }
    dend_37 { pt3dadd( -179.414, 144.195, -50.9728, 0.52 ) }
    dend_37 { pt3dadd( -179.827, 145.652, -51.3742, 0.52 ) }
    dend_37 { pt3dadd( -180.159, 146.698, -51.6583, 0.37 ) }
    dend_37 { pt3dadd( -180.463, 147.783, -51.9327, 0.37 ) }
    dend_37 { pt3dadd( -180.661, 148.702, -52.1644, 0.37 ) }
    dend_37 { pt3dadd( -180.957, 150.484, -52.594, 2.65 ) }
    dend_37 { pt3dadd( -181.0, 150.816, -52.6692, 3.32 ) }
    dend_37 { pt3dadd( -181.091, 151.281, -52.7986, 3.32 ) }
    dend_37 { pt3dadd( -181.881, 153.931, -53.5847, 0.44 ) }
    dend_37 { pt3dadd( -182.454, 155.485, -54.0607, 0.44 ) }
    dend_37 { pt3dadd( -182.748, 156.221, -54.3064, 0.59 ) }
    dend_37 { pt3dadd( -183.012, 156.859, -54.5444, 0.59 ) }
    dend_37 { pt3dadd( -184.392, 159.991, -55.8104, 0.29 ) }
    dend_37 { pt3dadd( -184.998, 161.247, -56.371, 0.29 ) }
    dend_37 { pt3dadd( -185.605, 162.359, -56.921, 0.29 ) }
    dend_37 { pt3dadd( -186.281, 163.546, -57.4955, 0.29 ) }
    dend_37 { pt3dadd( -186.522, 164.029, -57.7145, 0.29 ) }
    dend_37 { pt3dadd( -187.093, 165.443, -58.2745, 1.11 ) }
    dend_37 { pt3dadd( -187.369, 166.36, -58.5537, 1.11 ) }
    dend_37 { pt3dadd( -187.595, 167.075, -58.7721, 0.88 ) }
    dend_37 { pt3dadd( -188.22, 168.632, -59.1689, 0.52 ) }
    dend_37 { pt3dadd( -189.003, 170.216, -59.4368, 0.29 ) }
    dend_37 { pt3dadd( -189.519, 171.143, -59.5361, 0.29 ) }
    dend_37 { pt3dadd( -189.831, 171.688, -59.5538, 0.66 ) }
    dend_37 { pt3dadd( -190.554, 172.917, -59.533, 0.66 ) }
    dend_37 { pt3dadd( -191.152, 173.866, -59.4722, 0.29 ) }
    dend_37 { pt3dadd( -191.677, 174.561, -59.3634, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( -192.778, 175.6, -59.0623, 0.88 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 1/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -169.842, 129.071, -43.6889, 0.37 ) }
    dend_32 { pt3dadd( -169.689, 130.005, -42.9566, 0.37 ) }
    dend_32 { pt3dadd( -169.534, 131.079, -42.0819, 0.37 ) }
    dend_32 { pt3dadd( -169.452, 131.804, -41.4697, 0.37 ) }
    dend_32 { pt3dadd( -169.337, 133.228, -40.2294, 0.37 ) }
    dend_32 { pt3dadd( -169.287, 134.26, -39.3335, 0.52 ) }
    dend_32 { pt3dadd( -169.273, 135.305, -38.4576, 1.18 ) }
    dend_32 { pt3dadd( -169.288, 135.988, -37.8783, 1.18 ) }
    dend_32 { pt3dadd( -169.325, 136.469, -37.5221, 1.18 ) }
    dend_32 { pt3dadd( -169.346, 136.783, -37.3223, 1.03 ) }
    dend_32 { pt3dadd( -169.374, 137.483, -36.97, 0.44 ) }
    dend_32 { pt3dadd( -169.327, 138.431, -36.5067, 0.88 ) }
    dend_32 { pt3dadd( -169.193, 139.883, -35.8253, 0.37 ) }
    dend_32 { pt3dadd( -169.054, 141.218, -35.1907, 0.29 ) }
    dend_32 { pt3dadd( -168.964, 142.109, -34.739, 0.29 ) }
    dend_32 { pt3dadd( -168.9, 142.772, -34.3632, 0.66 ) }
    dend_32 { pt3dadd( -168.766, 144.453, -33.3174, 0.37 ) }
    dend_32 { pt3dadd( -168.717, 145.414, -32.6773, 0.37 ) }
    dend_32 { pt3dadd( -168.718, 146.434, -31.9904, 0.29 ) }
    dend_32 { pt3dadd( -168.792, 147.395, -31.3421, 0.29 ) }
    dend_32 { pt3dadd( -168.967, 148.233, -30.7911, 0.29 ) }
    dend_32 { pt3dadd( -169.294, 149.302, -30.1447, 0.88 ) }
    dend_32 { pt3dadd( -169.479, 149.855, -29.8641, 0.88 ) }
    dend_32 { pt3dadd( -169.855, 151.076, -29.3345, 0.37 ) }
    dend_32 { pt3dadd( -170.243, 152.343, -28.8836, 0.37 ) }
    dend_32 { pt3dadd( -170.742, 154.081, -28.3937, 0.37 ) }
    dend_32 { pt3dadd( -171.114, 155.501, -28.0341, 0.37 ) }
    dend_32 { pt3dadd( -171.449, 156.848, -27.6877, 0.37 ) }
    dend_32 { pt3dadd( -171.683, 157.843, -27.4283, 0.37 ) }
    dend_32 { pt3dadd( -172.058, 159.476, -26.9891, 0.37 ) }
    dend_32 { pt3dadd( -172.428, 161.358, -26.4847, 0.37 ) }
    dend_32 { pt3dadd( -172.696, 162.918, -26.0663, 1.47 ) }
    dend_32 { pt3dadd( -172.827, 163.525, -25.8911, 1.69 ) }
    dend_32 { pt3dadd( -172.973, 164.15, -25.678, 1.69 ) }
    dend_32 { pt3dadd( -173.331, 165.717, -25.0846, 0.44 ) }
    dend_32 { pt3dadd( -173.604, 166.947, -24.5855, 0.44 ) }
    dend_32 { pt3dadd( -173.899, 168.087, -24.1021, 0.44 ) }
    dend_32 { pt3dadd( -174.358, 169.672, -23.4289, 0.44 ) }
    dend_32 { pt3dadd( -174.815, 171.174, -22.7773, 0.37 ) }
    dend_32 { pt3dadd( -175.15, 172.294, -22.2749, 0.37 ) }
    dend_32 { pt3dadd( -175.319, 172.847, -22.0115, 0.37 ) }
    dend_32 { pt3dadd( -175.627, 173.708, -21.5597, 0.96 ) }
    dend_32 { pt3dadd( -175.96, 174.54, -21.0855, 1.25 ) }
    dend_32 { pt3dadd( -176.085, 174.793, -20.9319, 1.25 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 45/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 8.66272, -177.123, 14.0756, 0.44 ) }
    dend_15 { pt3dadd( 7.73581, -177.529, 14.1282, 0.44 ) }
    dend_15 { pt3dadd( 7.00602, -177.725, 14.1335, 0.29 ) }
    dend_15 { pt3dadd( 6.01921, -177.921, 14.1236, 0.22 ) }
    dend_15 { pt3dadd( 5.32307, -178.023, 14.1109, 0.59 ) }
    dend_15 { pt3dadd( 4.91589, -178.067, 14.1018, 0.59 ) }
    dend_15 { pt3dadd( 3.74733, -178.195, 14.0756, 0.29 ) }
    dend_15 { pt3dadd( 2.59075, -178.198, 14.0386, 0.29 ) }
    dend_15 { pt3dadd( 2.33772, -178.178, 14.0235, 0.52 ) }
    dend_15 { pt3dadd( 1.91842, -178.127, 13.9748, 0.52 ) }
    dend_15 { pt3dadd( 1.57656, -178.073, 13.9329, 0.52 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 56/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 8.66272, -177.123, 14.0756, 0.37 ) }
    dend_12 { pt3dadd( 8.68465, -179.561, 13.7669, 0.37 ) }
    dend_12 { pt3dadd( 8.65327, -180.934, 13.6132, 0.81 ) }
    dend_12 { pt3dadd( 8.59893, -181.725, 13.5411, 0.88 ) }
    dend_12 { pt3dadd( 8.5124, -182.553, 13.4822, 0.66 ) }
    dend_12 { pt3dadd( 8.29959, -184.086, 13.399, 0.37 ) }
    dend_12 { pt3dadd( 8.21044, -184.663, 13.3748, 0.37 ) }
    dend_12 { pt3dadd( 8.03746, -185.657, 13.3914, 0.37 ) }
    dend_12 { pt3dadd( 7.89005, -186.865, 13.4084, 0.37 ) }
    dend_12 { pt3dadd( 7.80539, -187.961, 13.4147, 0.74 ) }
    dend_12 { pt3dadd( 7.74975, -189.024, 13.3903, 1.11 ) }
    dend_12 { pt3dadd( 7.70198, -189.949, 13.3528, 0.81 ) }
    dend_12 { pt3dadd( 7.65902, -191.699, 13.2589, 0.37 ) }
    dend_12 { pt3dadd( 7.63729, -193.724, 13.1164, 0.37 ) }
    dend_12 { pt3dadd( 7.56419, -195.02, 13.0063, 0.37 ) }
    dend_12 { pt3dadd( 7.41363, -196.349, 12.8784, 0.37 ) }
    dend_12 { pt3dadd( 7.2855, -197.12, 12.7938, 0.96 ) }
    dend_12 { pt3dadd( 7.13445, -197.732, 12.7219, 0.96 ) }
    dend_12 { pt3dadd( 6.72189, -198.962, 12.5805, 0.44 ) }
    dend_12 { pt3dadd( 6.14061, -200.525, 12.4084, 0.37 ) }
    dend_12 { pt3dadd( 5.89263, -201.396, 12.2937, 0.37 ) }
    dend_12 { pt3dadd( 5.78165, -202.067, 12.2016, 1.11 ) }
    dend_12 { pt3dadd( 5.69026, -203.061, 12.0529, 0.88 ) }
    dend_12 { pt3dadd( 5.61343, -204.464, 11.8445, 0.66 ) }
    dend_12 { pt3dadd( 5.57642, -206.274, 11.5883, 0.52 ) }
    dend_12 { pt3dadd( 5.56992, -207.871, 11.3739, 0.52 ) }
    dend_12 { pt3dadd( 5.52861, -209.3, 11.1997, 0.52 ) }
    dend_12 { pt3dadd( 5.4136, -211.019, 10.9998, 0.81 ) }
    dend_12 { pt3dadd( 5.31506, -211.867, 10.9045, 0.96 ) }
    dend_12 { pt3dadd( 5.14581, -212.857, 10.8045, 0.96 ) }
    dend_12 { pt3dadd( 4.912, -213.916, 10.7113, 0.81 ) }
    dend_12 { pt3dadd( 4.59559, -215.208, 10.581, 0.44 ) }
    dend_12 { pt3dadd( 4.26533, -216.642, 10.3804, 0.29 ) }
    dend_12 { pt3dadd( 4.11051, -217.49, 10.2224, 0.29 ) }
    dend_12 { pt3dadd( 3.94793, -218.372, 10.0352, 0.29 ) }
    dend_12 { pt3dadd( 3.69924, -219.482, 9.77905, 0.29 ) }
    dend_12 { pt3dadd( 3.36683, -220.767, 9.42299, 1.03 ) }
    dend_12 { pt3dadd( 3.26565, -221.116, 9.30914, 1.47 ) }
    dend_12 { pt3dadd( 2.76023, -222.932, 8.66437, 0.44 ) }
    dend_12 { pt3dadd( 2.41842, -224.218, 8.17655, 0.37 ) }
    dend_12 { pt3dadd( 2.06036, -225.525, 7.67554, 0.37 ) }
    dend_12 { pt3dadd( 1.63807, -227.051, 7.08382, 0.29 ) }
    dend_12 { pt3dadd( 1.23687, -228.52, 6.5066, 0.29 ) }
    dend_12 { pt3dadd( 1.01582, -229.392, 6.15428, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_12 { pt3dadd( 0.681641, -230.835, 5.54849, 0.29 ) }
    dend_12 { pt3dadd( 0.35594, -232.626, 4.77722, 0.66 ) }
    dend_12 { pt3dadd( 0.203681, -233.711, 4.3267, 1.18 ) }
    dend_12 { pt3dadd( 0.0805639, -234.668, 3.97884, 1.18 ) }
    dend_12 { pt3dadd( -0.00374937, -235.325, 3.75594, 1.18 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 5/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 15.2571, -66.1269, 15.9354, 0.44 ) }
    dend_10 { pt3dadd( 15.2418, -66.3575, 16.9228, 0.44 ) }
    dend_10 { pt3dadd( 15.1468, -66.8603, 18.9089, 1.11 ) }
    dend_10 { pt3dadd( 15.0693, -67.7228, 22.0668, 0.44 ) }
    dend_10 { pt3dadd( 15.1109, -69.3359, 27.8122, 0.88 ) }
    dend_10 { pt3dadd( 15.1816, -69.8804, 29.6806, 1.25 ) }
    dend_10 { pt3dadd( 15.2303, -70.2557, 30.9685, 0.88 ) }
    dend_10 { pt3dadd( 15.272, -70.6238, 32.2785, 0.74 ) }
    dend_10 { pt3dadd( 15.5228, -71.8486, 36.6249, 0.37 ) }
    dend_10 { pt3dadd( 15.6472, -72.1786, 37.6483, 0.66 ) }
    dend_10 { pt3dadd( 15.8073, -72.5224, 38.4261, 0.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 16/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 15.2571, -66.1269, 15.9354, 0.44 ) }
    dend_9 { pt3dadd( 15.4743, -66.3155, 17.1994, 0.44 ) }
    dend_9 { pt3dadd( 17.3563, -67.9492, 28.1476, 0.44 ) }
    dend_9 { pt3dadd( 17.6022, -68.1627, 29.5782, 0.37 ) }
    dend_9 { pt3dadd( 17.7564, -68.2965, 30.4752, 0.37 ) }
    dend_9 { pt3dadd( 17.8709, -68.396, 31.1416, 0.74 ) }
    dend_9 { pt3dadd( 17.9635, -68.4764, 31.6804, 0.74 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 23/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -192.778, 175.6, -59.0623, 0.59 ) }
    dend_43 { pt3dadd( -193.374, 176.463, -58.9643, 0.59 ) }
    dend_43 { pt3dadd( -194.168, 177.246, -58.8108, 0.37 ) }
    dend_43 { pt3dadd( -194.941, 177.847, -58.6524, 0.37 ) }
    dend_43 { pt3dadd( -195.775, 178.456, -58.4718, 0.37 ) }
    dend_43 { pt3dadd( -196.933, 179.302, -58.209, 0.37 ) }
    dend_43 { pt3dadd( -197.854, 179.984, -57.9915, 0.37 ) }
    dend_43 { pt3dadd( -198.917, 180.741, -57.6886, 0.37 ) }
    dend_43 { pt3dadd( -199.744, 181.296, -57.4499, 0.37 ) }
    dend_43 { pt3dadd( -200.655, 181.904, -57.1742, 0.37 ) }
    dend_43 { pt3dadd( -201.256, 182.347, -57.017, 0.37 ) }
    dend_43 { pt3dadd( -201.643, 182.741, -56.9415, 1.03 ) }
    dend_43 { pt3dadd( -201.854, 183.024, -56.9092, 1.33 ) }
    dend_43 { pt3dadd( -202.303, 183.73, -56.8454, 1.11 ) }
    dend_43 { pt3dadd( -202.918, 184.724, -56.7628, 0.37 ) }
    dend_43 { pt3dadd( -203.591, 185.817, -56.6743, 0.37 ) }
    dend_43 { pt3dadd( -204.441, 187.223, -56.5749, 0.29 ) }
    dend_43 { pt3dadd( -205.096, 188.331, -56.5058, 0.29 ) }
    dend_43 { pt3dadd( -205.639, 189.269, -56.4524, 0.52 ) }
    dend_43 { pt3dadd( -206.165, 190.21, -56.4021, 1.55 ) }
    dend_43 { pt3dadd( -206.38, 190.617, -56.3761, 1.92 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 44/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -192.778, 175.6, -59.0623, 0.52 ) }
    dend_38 { pt3dadd( -193.331, 176.737, -60.0885, 0.52 ) }
    dend_38 { pt3dadd( -193.766, 177.821, -61.2005, 0.52 ) }
    dend_38 { pt3dadd( -194.088, 178.833, -62.2157, 0.52 ) }
    dend_38 { pt3dadd( -194.332, 179.752, -63.0836, 1.25 ) }
    dend_38 { pt3dadd( -195.004, 182.547, -65.561, 2.28 ) }
    dend_38 { pt3dadd( -195.164, 183.184, -66.1076, 2.28 ) }
    dend_38 { pt3dadd( -195.749, 185.413, -68.1154, 0.29 ) }
    dend_38 { pt3dadd( -196.001, 186.371, -69.0185, 0.44 ) }
    dend_38 { pt3dadd( -196.199, 187.203, -69.774, 0.44 ) }
    dend_38 { pt3dadd( -196.382, 188.054, -70.4651, 0.44 ) }
    dend_38 { pt3dadd( -196.512, 188.837, -70.9533, 0.44 ) }
    dend_38 { pt3dadd( -196.898, 190.445, -71.94, 0.29 ) }
    dend_38 { pt3dadd( -197.203, 191.279, -72.4024, 1.03 ) }
    dend_38 { pt3dadd( -197.529, 192.038, -72.7966, 1.55 ) }
    dend_38 { pt3dadd( -198.029, 193.221, -73.3905, 0.88 ) }
    dend_38 { pt3dadd( -198.534, 194.607, -74.0503, 0.52 ) }
    dend_38 { pt3dadd( -198.915, 195.847, -74.5856, 0.52 ) }
    dend_38 { pt3dadd( -199.234, 196.859, -74.9314, 0.52 ) }
    dend_38 { pt3dadd( -199.723, 198.382, -75.3834, 0.52 ) }
    dend_38 { pt3dadd( -200.004, 199.411, -75.6381, 0.52 ) }
    dend_38 { pt3dadd( -200.254, 200.417, -75.8531, 0.52 ) }
    dend_38 { pt3dadd( -200.449, 201.401, -76.0486, 0.52 ) }
    dend_38 { pt3dadd( -200.673, 203.176, -76.3741, 0.52 ) }
    dend_38 { pt3dadd( -200.838, 205.002, -76.72, 0.52 ) }
    dend_38 { pt3dadd( -201.007, 206.717, -77.0057, 2.21 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 70/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -176.085, 174.793, -20.9319, 0.29 ) }
    dend_36 { pt3dadd( -178.572, 176.218, -19.9308, 0.29 ) }
    dend_36 { pt3dadd( -179.782, 176.91, -19.4439, 0.29 ) }
    dend_36 { pt3dadd( -180.666, 177.417, -19.0877, 0.29 ) }
    dend_36 { pt3dadd( -181.331, 177.798, -18.8199, 0.74 ) }
    dend_36 { pt3dadd( -181.877, 178.111, -18.6001, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 76/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -176.085, 174.793, -20.9319, 0.29 ) }
    dend_33 { pt3dadd( -176.365, 175.51, -20.5016, 0.29 ) }
    dend_33 { pt3dadd( -176.514, 175.905, -20.2786, 0.29 ) }
    dend_33 { pt3dadd( -176.799, 176.976, -19.7615, 0.29 ) }
    dend_33 { pt3dadd( -176.874, 177.383, -19.5898, 0.74 ) }
    dend_33 { pt3dadd( -176.966, 177.811, -19.4175, 0.74 ) }
    dend_33 { pt3dadd( -177.211, 178.776, -19.0394, 0.37 ) }
    dend_33 { pt3dadd( -177.391, 179.459, -18.7995, 0.29 ) }
    dend_33 { pt3dadd( -177.644, 180.552, -18.4657, 0.37 ) }
    dend_33 { pt3dadd( -177.802, 181.316, -18.2674, 0.37 ) }
    dend_33 { pt3dadd( -178.097, 182.672, -17.8897, 0.29 ) }
    dend_33 { pt3dadd( -178.313, 183.565, -17.6121, 0.29 ) }
    dend_33 { pt3dadd( -178.61, 184.563, -17.2528, 0.29 ) }
    dend_33 { pt3dadd( -179.001, 185.511, -16.8459, 0.29 ) }
    dend_33 { pt3dadd( -179.33, 186.145, -16.5318, 0.29 ) }
    dend_33 { pt3dadd( -179.77, 186.956, -16.0704, 0.29 ) }
    dend_33 { pt3dadd( -180.085, 187.568, -15.6798, 0.29 ) }
    dend_33 { pt3dadd( -180.398, 188.203, -15.239, 0.29 ) }
    dend_33 { pt3dadd( -180.625, 188.682, -14.8658, 0.29 ) }
    dend_33 { pt3dadd( -180.898, 189.334, -14.3507, 1.03 ) }
    dend_33 { pt3dadd( -181.07, 189.894, -13.9419, 1.33 ) }
    dend_33 { pt3dadd( -181.173, 190.449, -13.589, 1.33 ) }
    dend_33 { pt3dadd( -181.302, 191.51, -12.9478, 0.29 ) }
    dend_33 { pt3dadd( -181.417, 192.487, -12.3403, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_33 { pt3dadd( -181.566, 193.369, -11.7397, 0.29 ) }
    dend_33 { pt3dadd( -181.71, 193.981, -11.2693, 0.29 ) }
    dend_33 { pt3dadd( -181.949, 194.722, -10.634, 0.29 ) }
    dend_33 { pt3dadd( -182.088, 195.088, -10.2833, 0.29 ) }
    dend_33 { pt3dadd( -182.407, 195.844, -9.49083, 0.29 ) }
    dend_33 { pt3dadd( -182.732, 196.56, -8.71772, 0.74 ) }
    dend_33 { pt3dadd( -182.956, 197.035, -8.15231, 0.88 ) }
    dend_33 { pt3dadd( -183.272, 197.726, -7.32564, 0.44 ) }
    dend_33 { pt3dadd( -183.441, 198.131, -6.85821, 0.44 ) }
    dend_33 { pt3dadd( -183.651, 198.777, -6.19772, 0.96 ) }
    dend_33 { pt3dadd( -183.808, 199.332, -5.71922, 1.25 ) }
    dend_33 { pt3dadd( -184.19, 200.573, -4.80498, 0.29 ) }
    dend_33 { pt3dadd( -184.434, 201.252, -4.38297, 0.37 ) }
    dend_33 { pt3dadd( -184.604, 201.692, -4.11908, 0.37 ) }
    dend_33 { pt3dadd( -184.892, 202.441, -3.59412, 0.37 ) }
    dend_33 { pt3dadd( -185.239, 203.318, -2.98764, 0.37 ) }
    dend_33 { pt3dadd( -185.441, 203.847, -2.63296, 0.37 ) }
    dend_33 { pt3dadd( -185.685, 204.447, -2.24383, 0.37 ) }
    dend_33 { pt3dadd( -186.334, 205.892, -1.1286, 1.33 ) }
    dend_33 { pt3dadd( -186.811, 207.006, -0.0860712, 2.06 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.00374937, -235.325, 3.75594, 0.29 ) }
    dend_14 { pt3dadd( -1.19023, -236.421, 4.10973, 0.29 ) }
    dend_14 { pt3dadd( -1.89492, -237.241, 4.42842, 0.29 ) }
    dend_14 { pt3dadd( -2.2407, -237.795, 4.61511, 0.74 ) }
    dend_14 { pt3dadd( -2.65902, -238.534, 4.85124, 0.29 ) }
    dend_14 { pt3dadd( -2.98041, -239.135, 4.99976, 0.29 ) }
    dend_14 { pt3dadd( -3.76359, -240.6, 5.36166, 0.59 ) }
    dend_14 { pt3dadd( -3.94279, -241.044, 5.46797, 0.74 ) }
    dend_14 { pt3dadd( -4.53896, -242.714, 5.8977, 0.37 ) }
    dend_14 { pt3dadd( -4.87351, -243.585, 6.13018, 0.96 ) }
    dend_14 { pt3dadd( -5.2615, -244.456, 6.35147, 0.81 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 31/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -0.00374937, -235.325, 3.75594, 0.37 ) }
    dend_13 { pt3dadd( 1.13559, -235.592, 3.80929, 0.37 ) }
    dend_13 { pt3dadd( 1.91974, -235.872, 3.8688, 0.37 ) }
    dend_13 { pt3dadd( 2.73889, -236.232, 4.10617, 0.37 ) }
    dend_13 { pt3dadd( 3.34718, -236.501, 4.50332, 0.29 ) }
    dend_13 { pt3dadd( 4.08825, -236.774, 5.17281, 0.29 ) }
    dend_13 { pt3dadd( 4.78618, -237.031, 5.80334, 0.52 ) }
    dend_13 { pt3dadd( 5.15128, -237.17, 6.25409, 0.52 ) }
    dend_13 { pt3dadd( 6.17435, -237.636, 7.92408, 1.11 ) }
    dend_13 { pt3dadd( 7.01643, -238.087, 9.75204, 0.59 ) }
    dend_13 { pt3dadd( 7.25174, -238.195, 10.4658, 0.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 42/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -206.38, 190.617, -56.3761, 0.37 ) }
    dend_45 { pt3dadd( -207.205, 192.206, -55.6576, 0.37 ) }
    dend_45 { pt3dadd( -207.958, 193.655, -55.0021, 0.37 ) }
    dend_45 { pt3dadd( -208.515, 194.727, -54.5171, 0.37 ) }
    dend_45 { pt3dadd( -209.464, 196.554, -53.6907, 1.18 ) }
    dend_45 { pt3dadd( -209.916, 197.425, -53.2965, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 48/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -206.38, 190.617, -56.3761, 0.29 ) }
    dend_44 { pt3dadd( -207.666, 190.581, -56.9295, 0.29 ) }
    dend_44 { pt3dadd( -208.666, 190.577, -57.3393, 0.52 ) }
    dend_44 { pt3dadd( -210.193, 190.569, -57.8806, 1.03 ) }
    dend_44 { pt3dadd( -211.007, 190.574, -58.1325, 1.03 ) }
    dend_44 { pt3dadd( -211.757, 190.597, -58.3486, 0.88 ) }
    dend_44 { pt3dadd( -212.821, 190.687, -58.6439, 0.81 ) }
    dend_44 { pt3dadd( -213.477, 190.791, -58.8507, 0.29 ) }
    dend_44 { pt3dadd( -214.222, 190.961, -59.0596, 0.29 ) }
    dend_44 { pt3dadd( -214.935, 191.137, -59.2086, 0.29 ) }
    dend_44 { pt3dadd( -215.323, 191.17, -59.3296, 0.52 ) }
    dend_44 { pt3dadd( -216.224, 191.198, -59.6779, 0.52 ) }
    dend_44 { pt3dadd( -217.332, 191.195, -60.1359, 1.18 ) }
    dend_44 { pt3dadd( -217.73, 191.183, -60.2981, 1.47 ) }
    dend_44 { pt3dadd( -218.301, 191.174, -60.5191, 1.47 ) }
    dend_44 { pt3dadd( -220.925, 191.15, -61.4105, 0.52 ) }
    dend_44 { pt3dadd( -221.766, 191.131, -61.6302, 0.29 ) }
    dend_44 { pt3dadd( -222.774, 191.116, -61.8235, 0.29 ) }
    dend_44 { pt3dadd( -224.259, 191.194, -61.9872, 0.29 ) }
    dend_44 { pt3dadd( -225.49, 191.314, -62.0397, 0.29 ) }
    dend_44 { pt3dadd( -226.353, 191.408, -62.0112, 0.29 ) }
    dend_44 { pt3dadd( -227.66, 191.55, -61.8393, 0.29 ) }
    dend_44 { pt3dadd( -228.215, 191.594, -61.7621, 0.29 ) }
    dend_44 { pt3dadd( -229.141, 191.689, -61.6242, 0.88 ) }
    dend_44 { pt3dadd( -229.629, 191.754, -61.546, 1.25 ) }
    dend_44 { pt3dadd( -231.147, 191.937, -61.334, 0.37 ) }
    dend_44 { pt3dadd( -231.899, 191.983, -61.3311, 0.29 ) }
    dend_44 { pt3dadd( -232.577, 191.995, -61.4131, 0.74 ) }
    dend_44 { pt3dadd( -233.077, 191.992, -61.487, 0.74 ) }
    dend_44 { pt3dadd( -234.057, 191.98, -61.645, 0.37 ) }
    dend_44 { pt3dadd( -234.983, 191.961, -61.8172, 0.37 ) }
    dend_44 { pt3dadd( -237.043, 191.905, -62.2707, 0.37 ) }
    dend_44 { pt3dadd( -237.694, 191.867, -62.4028, 0.37 ) }
    dend_44 { pt3dadd( -238.977, 191.764, -62.6078, 0.29 ) }
    dend_44 { pt3dadd( -239.587, 191.699, -62.6664, 0.29 ) }
    dend_44 { pt3dadd( -240.937, 191.494, -62.6456, 0.66 ) }
    dend_44 { pt3dadd( -242.098, 191.288, -62.5237, 0.74 ) }
    dend_44 { pt3dadd( -243.237, 191.087, -62.3068, 0.52 ) }
    dend_44 { pt3dadd( -244.043, 190.93, -62.1428, 0.96 ) }
    dend_44 { pt3dadd( -244.789, 190.776, -61.9988, 0.96 ) }
    dend_44 { pt3dadd( -246.114, 190.524, -61.7019, 0.29 ) }
    dend_44 { pt3dadd( -247.081, 190.381, -61.4283, 0.96 ) }
    dend_44 { pt3dadd( -247.647, 190.32, -61.2626, 1.11 ) }
    dend_44 { pt3dadd( -248.601, 190.326, -61.039, 0.44 ) }
    dend_44 { pt3dadd( -249.316, 190.448, -60.9031, 0.44 ) }
    dend_44 { pt3dadd( -250.193, 190.765, -60.7837, 0.44 ) }
    dend_44 { pt3dadd( -250.944, 191.147, -60.698, 0.44 ) }
    dend_44 { pt3dadd( -251.506, 191.453, -60.6212, 0.44 ) }
    dend_44 { pt3dadd( -252.437, 191.892, -60.4887, 0.44 ) }
    dend_44 { pt3dadd( -253.112, 192.131, -60.4055, 0.44 ) }
    dend_44 { pt3dadd( -254.309, 192.472, -60.2496, 0.44 ) }
    dend_44 { pt3dadd( -255.018, 192.653, -60.1643, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_44 { pt3dadd( -255.894, 192.841, -60.0613, 0.81 ) }
    dend_44 { pt3dadd( -257.1, 193.056, -59.9137, 0.52 ) }
    dend_44 { pt3dadd( -258.341, 193.268, -59.7638, 0.37 ) }
    dend_44 { pt3dadd( -258.95, 193.383, -59.7153, 0.37 ) }
    dend_44 { pt3dadd( -259.628, 193.523, -59.6944, 1.03 ) }
    dend_44 { pt3dadd( -260.63, 193.753, -59.7429, 1.47 ) }
    dend_44 { pt3dadd( -261.225, 193.914, -59.8178, 1.47 ) }
    dend_44 { pt3dadd( -261.945, 194.166, -59.9691, 0.44 ) }
    dend_44 { pt3dadd( -263.416, 194.609, -60.3706, 0.29 ) }
    dend_44 { pt3dadd( -264.677, 194.844, -60.772, 0.29 ) }
    dend_44 { pt3dadd( -266.226, 194.949, -61.3524, 0.29 ) }
    dend_44 { pt3dadd( -267.32, 194.952, -61.8041, 0.52 ) }
    dend_44 { pt3dadd( -268.661, 194.948, -62.3563, 0.74 ) }
    dend_44 { pt3dadd( -270.309, 195.003, -63.0369, 0.59 ) }
    dend_44 { pt3dadd( -271.306, 195.107, -63.4805, 0.59 ) }
    dend_44 { pt3dadd( -272.879, 195.344, -64.1937, 0.37 ) }
    dend_44 { pt3dadd( -273.96, 195.513, -64.6143, 0.37 ) }
    dend_44 { pt3dadd( -275.092, 195.671, -64.9541, 0.37 ) }
    dend_44 { pt3dadd( -276.313, 195.8, -65.1943, 0.37 ) }
    dend_44 { pt3dadd( -277.8, 195.969, -65.3319, 0.59 ) }
    dend_44 { pt3dadd( -278.71, 195.977, -65.3075, 0.59 ) }
    dend_44 { pt3dadd( -279.99, 195.733, -65.0428, 2.06 ) }
    dend_44 { pt3dadd( -280.459, 195.529, -64.8827, 2.87 ) }
    dend_44 { pt3dadd( -281.385, 194.897, -64.4528, 2.5 ) }
    dend_44 { pt3dadd( -282.093, 194.273, -64.0189, 1.55 ) }
    dend_44 { pt3dadd( -282.79, 193.54, -63.487, 0.37 ) }
    dend_44 { pt3dadd( -283.144, 193.108, -63.1917, 0.37 ) }
    dend_44 { pt3dadd( -283.723, 192.312, -62.6759, 0.37 ) }
    dend_44 { pt3dadd( -284.342, 191.484, -62.1331, 0.37 ) }
    dend_44 { pt3dadd( -285.107, 190.408, -61.4573, 0.37 ) }
    dend_44 { pt3dadd( -285.305, 190.123, -61.2925, 0.66 ) }
    dend_44 { pt3dadd( -285.69, 189.578, -60.9895, 0.44 ) }
    dend_44 { pt3dadd( -286.125, 188.977, -60.666, 0.37 ) }
    dend_44 { pt3dadd( -286.728, 188.195, -60.185, 0.37 ) }
    dend_44 { pt3dadd( -287.257, 187.591, -59.76, 0.37 ) }
    dend_44 { pt3dadd( -287.912, 186.894, -59.2179, 0.37 ) }
    dend_44 { pt3dadd( -288.403, 186.42, -58.8, 0.59 ) }
    dend_44 { pt3dadd( -288.884, 186.011, -58.3955, 0.59 ) }
    dend_44 { pt3dadd( -289.693, 185.382, -57.7062, 0.37 ) }
    dend_44 { pt3dadd( -290.354, 184.906, -57.1249, 0.66 ) }
    dend_44 { pt3dadd( -290.86, 184.622, -56.6718, 0.66 ) }
    dend_44 { pt3dadd( -291.262, 184.442, -56.2748, 0.66 ) }
    dend_44 { pt3dadd( -291.663, 184.308, -55.8606, 0.37 ) }
    dend_44 { pt3dadd( -292.055, 184.226, -55.4562, 0.74 ) }
    dend_44 { pt3dadd( -292.404, 184.195, -55.1079, 0.74 ) }
    dend_44 { pt3dadd( -293.123, 184.202, -54.3428, 0.52 ) }
    dend_44 { pt3dadd( -294.136, 184.28, -53.29, 0.29 ) }
    dend_44 { pt3dadd( -294.791, 184.296, -52.6157, 0.29 ) }
    dend_44 { pt3dadd( -295.33, 184.249, -52.0646, 1.47 ) }
    dend_44 { pt3dadd( -295.725, 184.157, -51.6751, 1.99 ) }
    dend_44 { pt3dadd( -296.156, 183.969, -51.2633, 1.99 ) }
    dend_44 { pt3dadd( -297.263, 183.314, -50.2631, 0.29 ) }
    dend_44 { pt3dadd( -298.215, 182.687, -49.4848, 0.29 ) }
    dend_44 { pt3dadd( -299.081, 182.046, -48.7925, 0.29 ) }
    dend_44 { pt3dadd( -299.825, 181.483, -48.2151, 0.29 ) }
    dend_44 { pt3dadd( -300.897, 180.714, -47.4344, 0.29 ) }
    dend_44 { pt3dadd( -301.526, 180.278, -47.0244, 0.44 ) }
    dend_44 { pt3dadd( -302.474, 179.634, -46.5076, 0.44 ) }
    dend_44 { pt3dadd( -303.384, 179.107, -46.0921, 0.44 ) }
    dend_44 { pt3dadd( -304.446, 178.584, -45.6572, 0.44 ) }
    dend_44 { pt3dadd( -305.457, 178.148, -45.2618, 0.44 ) }
    dend_44 { pt3dadd( -306.55, 177.691, -44.8378, 0.44 ) }
    dend_44 { pt3dadd( -307.874, 177.104, -44.2965, 0.44 ) }
    dend_44 { pt3dadd( -308.864, 176.651, -43.8727, 0.44 ) }
    dend_44 { pt3dadd( -310.188, 176.03, -43.3515, 0.44 ) }
    dend_44 { pt3dadd( -311.065, 175.556, -43.0284, 1.62 ) }
    dend_44 { pt3dadd( -311.552, 175.281, -42.8483, 2.5 ) }
    dend_44 { pt3dadd( -311.904, 175.093, -42.7143, 2.5 ) }
    dend_44 { pt3dadd( -313.794, 174.045, -41.9943, 0.37 ) }
    dend_44 { pt3dadd( -314.705, 173.458, -41.6632, 0.37 ) }
    dend_44 { pt3dadd( -315.645, 172.793, -41.3515, 0.37 ) }
    dend_44 { pt3dadd( -316.413, 172.219, -41.0611, 0.81 ) }
    dend_44 { pt3dadd( -317.113, 171.728, -40.7422, 0.37 ) }
    dend_44 { pt3dadd( -317.651, 171.411, -40.4429, 0.52 ) }
    dend_44 { pt3dadd( -318.027, 171.263, -40.1588, 0.81 ) }
    dend_44 { pt3dadd( -318.505, 171.147, -39.7393, 0.81 ) }
    dend_44 { pt3dadd( -319.511, 170.984, -38.8859, 0.37 ) }
    dend_44 { pt3dadd( -320.374, 170.801, -38.1742, 0.37 ) }
    dend_44 { pt3dadd( -321.264, 170.547, -37.4533, 0.37 ) }
    dend_44 { pt3dadd( -321.925, 170.327, -36.8869, 0.37 ) }
    dend_44 { pt3dadd( -322.703, 170.037, -36.1948, 0.37 ) }
    dend_44 { pt3dadd( -324.075, 169.422, -34.9368, 0.29 ) }
    dend_44 { pt3dadd( -324.833, 168.949, -34.2319, 0.29 ) }
    dend_44 { pt3dadd( -325.49, 168.333, -33.5542, 0.29 ) }
    dend_44 { pt3dadd( -326.068, 167.511, -32.8259, 0.88 ) }
    dend_44 { pt3dadd( -326.321, 166.985, -32.4029, 0.88 ) }
    dend_44 { pt3dadd( -326.576, 166.204, -31.7972, 0.29 ) }
    dend_44 { pt3dadd( -326.84, 165.037, -30.9062, 0.29 ) }
    dend_44 { pt3dadd( -327.111, 163.757, -29.9307, 0.37 ) }
    dend_44 { pt3dadd( -327.453, 162.122, -28.7067, 0.66 ) }
    dend_44 { pt3dadd( -327.704, 161.078, -27.954, 0.66 ) }
    dend_44 { pt3dadd( -327.88, 160.406, -27.4587, 0.22 ) }
    dend_44 { pt3dadd( -328.009, 159.93, -27.0997, 0.59 ) }
    dend_44 { pt3dadd( -328.175, 159.418, -26.6959, 0.81 ) }
    dend_44 { pt3dadd( -328.294, 159.113, -26.4524, 0.81 ) }
    dend_44 { pt3dadd( -328.828, 157.866, -25.4058, 0.29 ) }
    dend_44 { pt3dadd( -328.952, 157.517, -25.1271, 0.29 ) }
    dend_44 { pt3dadd( -329.151, 156.688, -24.5034, 0.52 ) }
    dend_44 { pt3dadd( -329.208, 156.185, -24.1107, 0.52 ) }
    dend_44 { pt3dadd( -329.253, 155.487, -23.5388, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_44 { pt3dadd( -329.35, 154.073, -22.2944, 0.66 ) }
    dend_44 { pt3dadd( -329.446, 153.194, -21.4452, 0.52 ) }
    dend_44 { pt3dadd( -329.538, 152.639, -20.809, 0.96 ) }
    dend_44 { pt3dadd( -329.797, 151.693, -19.5184, 0.66 ) }
    dend_44 { pt3dadd( -330.019, 151.112, -18.6096, 0.29 ) }
    dend_44 { pt3dadd( -330.431, 150.408, -17.3312, 0.29 ) }
    dend_44 { pt3dadd( -330.81, 149.972, -16.4386, 0.29 ) }
    dend_44 { pt3dadd( -331.609, 149.211, -14.7431, 0.29 ) }
    dend_44 { pt3dadd( -331.911, 148.947, -14.1563, 1.47 ) }
    dend_44 { pt3dadd( -332.127, 148.763, -13.7666, 1.77 ) }
    dend_44 { pt3dadd( -332.883, 148.142, -12.3832, 0.37 ) }
    dend_44 { pt3dadd( -333.663, 147.536, -11.0184, 0.37 ) }
    dend_44 { pt3dadd( -334.088, 147.195, -10.2806, 0.66 ) }
    dend_44 { pt3dadd( -334.513, 146.838, -9.50305, 0.66 ) }
    dend_44 { pt3dadd( -334.82, 146.559, -8.84122, 0.59 ) }
    dend_44 { pt3dadd( -335.457, 146.019, -7.28554, 0.37 ) }
    dend_44 { pt3dadd( -335.861, 145.723, -6.16876, 0.37 ) }
    dend_44 { pt3dadd( -336.267, 145.451, -4.94222, 0.37 ) }
    dend_44 { pt3dadd( -336.678, 145.163, -3.51011, 0.96 ) }
    dend_44 { pt3dadd( -336.937, 144.932, -2.37145, 0.22 ) }
    dend_44 { pt3dadd( -337.169, 144.651, -1.12436, 0.22 ) }
    dend_44 { pt3dadd( -337.269, 144.479, -0.489561, 0.22 ) }
    dend_44 { pt3dadd( -337.429, 144.205, 0.446843, 0.52 ) }
    dend_44 { pt3dadd( -337.755, 143.691, 1.88256, 0.74 ) }
    dend_44 { pt3dadd( -338.047, 143.327, 2.78197, 0.66 ) }
    dend_44 { pt3dadd( -338.526, 142.79, 4.04299, 0.29 ) }
    dend_44 { pt3dadd( -338.906, 142.386, 4.92409, 0.96 ) }
    dend_44 { pt3dadd( -339.092, 142.227, 5.28889, 1.33 ) }
    dend_44 { pt3dadd( -339.962, 141.715, 6.72617, 0.37 ) }
    dend_44 { pt3dadd( -340.771, 141.281, 7.99738, 0.37 ) }
    dend_44 { pt3dadd( -341.178, 141.054, 8.66029, 0.37 ) }
    dend_44 { pt3dadd( -341.97, 140.625, 10.0625, 0.37 ) }
    dend_44 { pt3dadd( -342.472, 140.345, 11.0452, 0.37 ) }
    dend_44 { pt3dadd( -343.35, 139.766, 13.0027, 0.37 ) }
    dend_44 { pt3dadd( -343.869, 139.325, 14.3464, 0.37 ) }
    dend_44 { pt3dadd( -344.183, 138.923, 15.4673, 0.37 ) }
    dend_44 { pt3dadd( -344.441, 138.453, 16.8743, 1.11 ) }
    dend_44 { pt3dadd( -344.521, 138.265, 17.5185, 1.11 ) }
    dend_44 { pt3dadd( -344.605, 137.903, 18.6209, 0.44 ) }
    dend_44 { pt3dadd( -344.662, 137.638, 19.4445, 0.29 ) }
    dend_44 { pt3dadd( -344.863, 137.165, 21.11, 0.29 ) }
    dend_44 { pt3dadd( -345.018, 136.709, 22.6656, 0.81 ) }
    dend_44 { pt3dadd( -345.155, 136.101, 24.4406, 0.52 ) }
    dend_44 { pt3dadd( -345.277, 135.537, 25.8883, 0.52 ) }
    dend_44 { pt3dadd( -345.34, 135.037, 27.0801, 0.52 ) }
    dend_44 { pt3dadd( -345.335, 134.757, 27.7662, 0.81 ) }
    dend_44 { pt3dadd( -345.277, 134.043, 29.4318, 0.44 ) }
    dend_44 { pt3dadd( -345.215, 133.645, 30.3964, 0.37 ) }
    dend_44 { pt3dadd( -345.116, 133.258, 31.5853, 0.37 ) }
    dend_44 { pt3dadd( -344.99, 132.665, 33.6817, 0.37 ) }
    dend_44 { pt3dadd( -344.859, 131.951, 36.0044, 1.55 ) }
    dend_44 { pt3dadd( -344.816, 131.662, 36.9125, 2.36 ) }
    dend_44 { pt3dadd( -344.798, 131.509, 37.386, 2.58 ) }
    dend_44 { pt3dadd( -344.615, 130.607, 39.8617, 0.52 ) }
    dend_44 { pt3dadd( -344.479, 130.241, 40.637, 0.74 ) }
    dend_44 { pt3dadd( -344.225, 129.569, 41.6185, 0.74 ) }
    dend_44 { pt3dadd( -343.878, 128.811, 42.5842, 0.44 ) }
    dend_44 { pt3dadd( -343.457, 128.085, 43.6092, 0.37 ) }
    dend_44 { pt3dadd( -343.133, 127.559, 44.4059, 0.44 ) }
    dend_44 { pt3dadd( -342.667, 126.829, 45.5009, 0.44 ) }
    dend_44 { pt3dadd( -342.285, 126.316, 46.4531, 0.44 ) }
    dend_44 { pt3dadd( -341.669, 125.55, 48.1155, 0.81 ) }
    dend_44 { pt3dadd( -341.317, 125.079, 49.1796, 1.11 ) }
    dend_44 { pt3dadd( -341.063, 124.562, 50.2031, 0.37 ) }
    dend_44 { pt3dadd( -340.856, 123.987, 51.1291, 0.37 ) }
    dend_44 { pt3dadd( -340.317, 122.247, 53.3232, 1.4 ) }
    dend_44 { pt3dadd( -340.138, 121.664, 53.974, 1.99 ) }
    dend_44 { pt3dadd( -339.974, 121.043, 54.5908, 1.99 ) }
    dend_44 { pt3dadd( -339.514, 119.176, 56.3005, 0.52 ) }
    dend_44 { pt3dadd( -339.191, 117.857, 57.437, 0.52 ) }
    dend_44 { pt3dadd( -338.974, 116.79, 58.2789, 0.52 ) }
    dend_44 { pt3dadd( -338.743, 115.02, 59.4597, 0.52 ) }
    dend_44 { pt3dadd( -338.591, 114.006, 60.1062, 0.74 ) }
    dend_44 { pt3dadd( -338.357, 112.934, 60.8055, 0.74 ) }
    dend_44 { pt3dadd( -338.178, 112.238, 61.2917, 0.52 ) }
    dend_44 { pt3dadd( -338.002, 111.423, 61.8771, 0.52 ) }
    dend_44 { pt3dadd( -337.81, 110.214, 62.7727, 0.44 ) }
    dend_44 { pt3dadd( -337.665, 108.799, 63.8331, 0.44 ) }
    dend_44 { pt3dadd( -337.573, 107.785, 64.675, 0.52 ) }
    dend_44 { pt3dadd( -337.503, 106.607, 65.7761, 0.44 ) }
    dend_44 { pt3dadd( -337.454, 105.687, 66.7127, 0.44 ) }
    dend_44 { pt3dadd( -337.398, 104.997, 67.4633, 2.36 ) }
    dend_44 { pt3dadd( -337.334, 104.284, 68.2696, 3.46 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -201.007, 206.717, -77.0057, 0.37 ) }
    dend_42 { pt3dadd( -202.182, 208.342, -76.7519, 0.37 ) }
    dend_42 { pt3dadd( -202.841, 209.243, -76.6015, 0.37 ) }
    dend_42 { pt3dadd( -203.316, 209.914, -76.4852, 0.59 ) }
    dend_42 { pt3dadd( -203.843, 210.722, -76.347, 0.44 ) }
    dend_42 { pt3dadd( -204.162, 211.239, -76.2615, 0.37 ) }
    dend_42 { pt3dadd( -204.48, 211.785, -76.1788, 0.37 ) }
    dend_42 { pt3dadd( -205.005, 212.811, -76.0546, 0.29 ) }
    dend_42 { pt3dadd( -205.351, 213.524, -75.9712, 0.29 ) }
    dend_42 { pt3dadd( -205.673, 214.251, -75.8837, 0.29 ) }
    dend_42 { pt3dadd( -206.065, 215.205, -75.7512, 0.88 ) }
    dend_42 { pt3dadd( -206.262, 215.709, -75.69, 1.11 ) }
    dend_42 { pt3dadd( -206.406, 216.123, -75.6521, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 96/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -201.007, 206.717, -77.0057, 0.29 ) }
    dend_39 { pt3dadd( -200.844, 208.803, -77.8087, 0.29 ) }
    dend_39 { pt3dadd( -200.78, 209.908, -78.1914, 0.29 ) }
    dend_39 { pt3dadd( -200.759, 210.834, -78.6063, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_39 { pt3dadd( -200.759, 211.333, -78.8442, 0.44 ) }
    dend_39 { pt3dadd( -200.774, 212.315, -79.2945, 0.37 ) }
    dend_39 { pt3dadd( -200.803, 213.315, -79.7213, 0.37 ) }
    dend_39 { pt3dadd( -200.845, 214.486, -80.187, 0.37 ) }
    dend_39 { pt3dadd( -200.959, 216.471, -81.0033, 0.81 ) }
    dend_39 { pt3dadd( -201.03, 217.256, -81.3199, 0.59 ) }
    dend_39 { pt3dadd( -201.193, 218.635, -81.8481, 1.33 ) }
    dend_39 { pt3dadd( -201.35, 219.635, -82.2179, 1.92 ) }
    dend_39 { pt3dadd( -201.416, 220.065, -82.3802, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 9/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -186.811, 207.006, -0.0860712, 0.52 ) }
    dend_35 { pt3dadd( -187.809, 209.629, 1.65389, 0.52 ) }
    dend_35 { pt3dadd( -188.435, 211.077, 2.65635, 0.52 ) }
    dend_35 { pt3dadd( -189.236, 212.723, 3.86347, 0.52 ) }
    dend_35 { pt3dadd( -189.771, 213.797, 4.65652, 0.52 ) }
    dend_35 { pt3dadd( -190.429, 215.151, 5.63894, 0.52 ) }
    dend_35 { pt3dadd( -190.815, 216.001, 6.23733, 0.66 ) }
    dend_35 { pt3dadd( -191.204, 216.837, 6.85183, 0.29 ) }
    dend_35 { pt3dadd( -191.475, 217.413, 7.24922, 0.29 ) }
    dend_35 { pt3dadd( -192.168, 218.982, 8.17703, 0.29 ) }
    dend_35 { pt3dadd( -192.643, 220.069, 8.83161, 0.29 ) }
    dend_35 { pt3dadd( -193.105, 221.233, 9.46241, 0.29 ) }
    dend_35 { pt3dadd( -193.551, 222.453, 10.1036, 1.25 ) }
    dend_35 { pt3dadd( -193.8, 223.159, 10.4749, 1.55 ) }
    dend_35 { pt3dadd( -194.273, 224.492, 11.1538, 0.22 ) }
    dend_35 { pt3dadd( -194.976, 226.025, 12.0099, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 25/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -186.811, 207.006, -0.0860712, 0.29 ) }
    dend_34 { pt3dadd( -187.294, 207.951, 0.823533, 0.29 ) }
    dend_34 { pt3dadd( -187.539, 208.493, 1.37396, 0.29 ) }
    dend_34 { pt3dadd( -187.779, 209.057, 1.9502, 0.29 ) }
    dend_34 { pt3dadd( -188.077, 209.754, 2.62158, 0.37 ) }
    dend_34 { pt3dadd( -188.27, 210.217, 3.02107, 0.37 ) }
    dend_34 { pt3dadd( -188.426, 210.61, 3.32564, 0.29 ) }
    dend_34 { pt3dadd( -188.69, 211.4, 3.8387, 0.29 ) }
    dend_34 { pt3dadd( -188.873, 211.97, 4.17486, 0.29 ) }
    dend_34 { pt3dadd( -189.144, 212.805, 4.60492, 0.29 ) }
    dend_34 { pt3dadd( -189.417, 213.726, 5.06864, 0.29 ) }
    dend_34 { pt3dadd( -189.612, 214.423, 5.41199, 0.52 ) }
    dend_34 { pt3dadd( -189.742, 214.877, 5.63167, 0.29 ) }
    dend_34 { pt3dadd( -190.006, 215.824, 6.08319, 0.29 ) }
    dend_34 { pt3dadd( -190.183, 216.558, 6.44043, 0.29 ) }
    dend_34 { pt3dadd( -190.379, 217.495, 6.9081, 0.59 ) }
    dend_34 { pt3dadd( -190.523, 218.194, 7.26265, 0.74 ) }
    dend_34 { pt3dadd( -190.666, 218.888, 7.60409, 0.22 ) }
    dend_34 { pt3dadd( -190.762, 219.352, 7.813, 0.22 ) }
    dend_34 { pt3dadd( -190.926, 220.109, 8.09878, 0.22 ) }
    dend_34 { pt3dadd( -191.055, 220.716, 8.31396, 0.22 ) }
    dend_34 { pt3dadd( -191.175, 221.219, 8.48264, 0.74 ) }
    dend_34 { pt3dadd( -191.244, 221.501, 8.58622, 0.74 ) }
    dend_34 { pt3dadd( -191.348, 221.856, 8.74693, 0.29 ) }
    dend_34 { pt3dadd( -191.552, 222.456, 9.05687, 0.59 ) }
    dend_34 { pt3dadd( -191.798, 223.105, 9.46172, 0.29 ) }
    dend_34 { pt3dadd( -192.061, 223.77, 9.91553, 0.29 ) }
    dend_34 { pt3dadd( -192.317, 224.325, 10.351, 0.29 ) }
    dend_34 { pt3dadd( -192.593, 224.835, 10.8059, 0.29 ) }
    dend_34 { pt3dadd( -192.889, 225.321, 11.3228, 0.29 ) }
    dend_34 { pt3dadd( -193.223, 225.834, 11.9414, 0.29 ) }
    dend_34 { pt3dadd( -193.462, 226.207, 12.4288, 0.29 ) }
    dend_34 { pt3dadd( -193.855, 226.869, 13.3342, 0.29 ) }
    dend_34 { pt3dadd( -194.071, 227.267, 13.8785, 0.29 ) }
    dend_34 { pt3dadd( -194.38, 227.88, 14.7208, 1.4 ) }
    dend_34 { pt3dadd( -194.56, 228.244, 15.2429, 1.77 ) }
    dend_34 { pt3dadd( -194.845, 228.95, 16.2093, 0.37 ) }
    dend_34 { pt3dadd( -194.961, 229.325, 16.7196, 0.66 ) }
    dend_34 { pt3dadd( -194.985, 229.523, 16.9417, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 64/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -209.916, 197.425, -53.2965, 0.29 ) }
    dend_47 { pt3dadd( -209.252, 198.8, -51.9918, 0.29 ) }
    dend_47 { pt3dadd( -208.981, 199.555, -51.1868, 0.22 ) }
    dend_47 { pt3dadd( -208.79, 200.361, -50.2326, 0.22 ) }
    dend_47 { pt3dadd( -208.684, 201.369, -48.832, 0.44 ) }
    dend_47 { pt3dadd( -208.681, 201.946, -47.9706, 0.44 ) }
    dend_47 { pt3dadd( -208.718, 202.807, -46.7628, 0.44 ) }
    dend_47 { pt3dadd( -208.866, 203.395, -45.8731, 0.74 ) }
    dend_47 { pt3dadd( -208.982, 203.875, -45.1347, 0.74 ) }
    dend_47 { pt3dadd( -209.198, 204.623, -44.0374, 0.44 ) }
    dend_47 { pt3dadd( -209.34, 205.25, -43.1806, 0.29 ) }
    dend_47 { pt3dadd( -209.429, 206.111, -42.1208, 0.29 ) }
    dend_47 { pt3dadd( -209.395, 207.06, -41.1219, 0.29 ) }
    dend_47 { pt3dadd( -209.005, 209.193, -39.1396, 0.29 ) }
    dend_47 { pt3dadd( -208.672, 210.35, -38.1447, 0.29 ) }
    dend_47 { pt3dadd( -208.322, 211.18, -37.4202, 0.29 ) }
    dend_47 { pt3dadd( -207.958, 211.981, -36.7327, 0.29 ) }
    dend_47 { pt3dadd( -207.539, 212.969, -35.959, 0.81 ) }
    dend_47 { pt3dadd( -207.05, 214.251, -35.0384, 1.47 ) }
    dend_47 { pt3dadd( -206.742, 215.19, -34.4523, 1.84 ) }
    dend_47 { pt3dadd( -205.696, 218.58, -32.53, 0.29 ) }
    dend_47 { pt3dadd( -205.319, 220.053, -31.7535, 0.29 ) }
    dend_47 { pt3dadd( -204.86, 221.825, -30.7805, 0.29 ) }
    dend_47 { pt3dadd( -204.195, 224.225, -29.4614, 1.84 ) }
    dend_47 { pt3dadd( -203.669, 226.074, -28.4843, 0.37 ) }
    dend_47 { pt3dadd( -203.327, 227.307, -27.8324, 0.37 ) }
    dend_47 { pt3dadd( -203.078, 228.226, -27.3378, 0.37 ) }
    dend_47 { pt3dadd( -202.214, 231.111, -25.5133, 0.66 ) }
    dend_47 { pt3dadd( -201.814, 232.26, -24.5667, 0.37 ) }
    dend_47 { pt3dadd( -201.629, 232.829, -23.963, 0.37 ) }
    dend_47 { pt3dadd( -201.407, 233.649, -22.936, 0.59 ) }
    dend_47 { pt3dadd( -201.328, 234.043, -22.4612, 0.59 ) }
    dend_47 { pt3dadd( -201.258, 234.719, -21.7172, 0.44 ) }
    dend_47 { pt3dadd( -201.264, 237.618, -18.9704, 0.44 ) }
    dend_47 { pt3dadd( -201.297, 239.054, -17.7079, 0.29 ) }
    dend_47 { pt3dadd( -201.325, 240.407, -16.6107, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_47 { pt3dadd( -201.402, 242.317, -15.2388, 0.29 ) }
    dend_47 { pt3dadd( -201.442, 243.206, -14.638, 0.29 ) }
    dend_47 { pt3dadd( -201.51, 244.43, -13.8944, 0.29 ) }
    dend_47 { pt3dadd( -201.616, 245.771, -13.1753, 1.18 ) }
    dend_47 { pt3dadd( -201.641, 246.267, -12.8943, 1.55 ) }
    dend_47 { pt3dadd( -201.678, 247.746, -11.8018, 0.66 ) }
    dend_47 { pt3dadd( -201.505, 249.482, -10.1309, 1.03 ) }
    dend_47 { pt3dadd( -201.36, 250.062, -9.4761, 1.03 ) }
    dend_47 { pt3dadd( -200.878, 251.332, -7.87106, 0.29 ) }
    dend_47 { pt3dadd( -200.632, 251.89, -7.13831, 0.29 ) }
    dend_47 { pt3dadd( -200.07, 253.116, -5.58154, 0.66 ) }
    dend_47 { pt3dadd( -199.251, 254.648, -3.51967, 0.37 ) }
    dend_47 { pt3dadd( -198.731, 255.612, -2.21586, 0.37 ) }
    dend_47 { pt3dadd( -198.421, 256.131, -1.4807, 0.37 ) }
    dend_47 { pt3dadd( -197.947, 256.83, -0.498783, 1.47 ) }
    dend_47 { pt3dadd( -197.414, 257.626, 0.434909, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 16/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -209.916, 197.425, -53.2965, 0.29 ) }
    dend_46 { pt3dadd( -210.037, 200.589, -53.5359, 0.29 ) }
    dend_46 { pt3dadd( -210.021, 202.499, -53.5929, 0.29 ) }
    dend_46 { pt3dadd( -209.971, 204.331, -53.5623, 1.69 ) }
    dend_46 { pt3dadd( -209.862, 207.096, -53.4084, 0.29 ) }
    dend_46 { pt3dadd( -209.814, 208.13, -53.3082, 0.29 ) }
    dend_46 { pt3dadd( -209.77, 209.54, -53.1, 0.29 ) }
    dend_46 { pt3dadd( -209.655, 210.804, -52.7891, 0.29 ) }
    dend_46 { pt3dadd( -209.591, 211.73, -52.5176, 0.29 ) }
    dend_46 { pt3dadd( -209.56, 212.998, -52.1231, 0.59 ) }
    dend_46 { pt3dadd( -209.653, 214.349, -51.6909, 0.29 ) }
    dend_46 { pt3dadd( -209.86, 215.801, -51.1958, 0.29 ) }
    dend_46 { pt3dadd( -210.023, 216.508, -50.9486, 0.59 ) }
    dend_46 { pt3dadd( -210.314, 217.377, -50.6484, 0.59 ) }
    dend_46 { pt3dadd( -210.726, 218.316, -50.2552, 0.29 ) }
    dend_46 { pt3dadd( -211.132, 219.067, -49.8872, 0.29 ) }
    dend_46 { pt3dadd( -211.616, 219.927, -49.4543, 0.88 ) }
    dend_46 { pt3dadd( -211.906, 220.454, -49.1901, 1.03 ) }
    dend_46 { pt3dadd( -212.548, 221.569, -48.5945, 0.29 ) }
    dend_46 { pt3dadd( -213.234, 222.727, -47.9563, 0.29 ) }
    dend_46 { pt3dadd( -213.855, 223.727, -47.4644, 0.29 ) }
    dend_46 { pt3dadd( -214.358, 224.53, -47.1529, 0.29 ) }
    dend_46 { pt3dadd( -214.968, 225.459, -46.8956, 0.29 ) }
    dend_46 { pt3dadd( -215.649, 226.4, -46.7434, 0.66 ) }
    dend_46 { pt3dadd( -216.059, 226.897, -46.7357, 0.88 ) }
    dend_46 { pt3dadd( -216.871, 227.799, -46.8642, 0.29 ) }
    dend_46 { pt3dadd( -217.552, 228.429, -47.0245, 0.29 ) }
    dend_46 { pt3dadd( -218.552, 229.21, -47.37, 0.29 ) }
    dend_46 { pt3dadd( -219.624, 229.939, -47.9239, 0.29 ) }
    dend_46 { pt3dadd( -220.537, 230.488, -48.4799, 0.29 ) }
    dend_46 { pt3dadd( -221.6, 231.059, -49.1691, 0.59 ) }
    dend_46 { pt3dadd( -222.814, 231.624, -49.9611, 0.44 ) }
    dend_46 { pt3dadd( -224.235, 232.218, -50.8605, 0.81 ) }
    dend_46 { pt3dadd( -225.828, 232.803, -51.8168, 0.37 ) }
    dend_46 { pt3dadd( -226.939, 233.194, -52.3876, 0.29 ) }
    dend_46 { pt3dadd( -227.68, 233.454, -52.6889, 0.29 ) }
    dend_46 { pt3dadd( -228.453, 233.734, -52.9238, 0.29 ) }
    dend_46 { pt3dadd( -229.611, 234.254, -53.1781, 0.59 ) }
    dend_46 { pt3dadd( -231.042, 234.94, -53.3404, 0.29 ) }
    dend_46 { pt3dadd( -232.224, 235.541, -53.3766, 0.22 ) }
    dend_46 { pt3dadd( -232.88, 235.904, -53.4006, 0.22 ) }
    dend_46 { pt3dadd( -233.899, 236.527, -53.4394, 1.25 ) }
    dend_46 { pt3dadd( -234.455, 236.907, -53.4679, 1.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 59/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -201.416, 220.065, -82.3802, 0.44 ) }
    dend_41 { pt3dadd( -202.344, 221.297, -82.485, 0.44 ) }
    dend_41 { pt3dadd( -203.245, 222.53, -82.6424, 0.37 ) }
    dend_41 { pt3dadd( -203.81, 223.349, -82.7576, 0.37 ) }
    dend_41 { pt3dadd( -204.358, 224.163, -82.8646, 0.37 ) }
    dend_41 { pt3dadd( -204.816, 224.833, -82.9622, 0.37 ) }
    dend_41 { pt3dadd( -205.543, 225.888, -83.1082, 0.29 ) }
    dend_41 { pt3dadd( -206.305, 227.105, -83.3125, 1.25 ) }
    dend_41 { pt3dadd( -206.676, 227.732, -83.4473, 1.62 ) }
    dend_41 { pt3dadd( -207.023, 228.301, -83.6153, 1.62 ) }
    dend_41 { pt3dadd( -207.975, 229.859, -84.1371, 0.29 ) }
    dend_41 { pt3dadd( -208.41, 230.607, -84.3997, 0.29 ) }
    dend_41 { pt3dadd( -208.933, 231.582, -84.7874, 0.29 ) }
    dend_41 { pt3dadd( -209.384, 232.493, -85.2209, 0.59 ) }
    dend_41 { pt3dadd( -210.151, 234.152, -86.0674, 0.29 ) }
    dend_41 { pt3dadd( -210.399, 234.705, -86.3541, 0.29 ) }
    dend_41 { pt3dadd( -210.758, 235.489, -86.7618, 0.29 ) }
    dend_41 { pt3dadd( -210.993, 235.955, -86.9889, 0.29 ) }
    dend_41 { pt3dadd( -211.321, 236.594, -87.2485, 0.59 ) }
    dend_41 { pt3dadd( -211.68, 237.365, -87.4968, 0.59 ) }
    dend_41 { pt3dadd( -212.357, 238.904, -87.9301, 0.29 ) }
    dend_41 { pt3dadd( -212.782, 239.835, -88.2128, 0.29 ) }
    dend_41 { pt3dadd( -213.251, 240.891, -88.5352, 0.29 ) }
    dend_41 { pt3dadd( -213.848, 242.284, -88.9722, 0.37 ) }
    dend_41 { pt3dadd( -214.149, 243.015, -89.2033, 0.37 ) }
    dend_41 { pt3dadd( -214.632, 244.319, -89.6127, 0.37 ) }
    dend_41 { pt3dadd( -214.99, 245.413, -89.945, 0.37 ) }
    dend_41 { pt3dadd( -215.428, 246.926, -90.3643, 0.44 ) }
    dend_41 { pt3dadd( -215.677, 247.947, -90.6303, 0.66 ) }
    dend_41 { pt3dadd( -215.842, 248.719, -90.8134, 0.66 ) }
    dend_41 { pt3dadd( -216.094, 250.338, -91.0939, 0.29 ) }
    dend_41 { pt3dadd( -216.161, 251.075, -91.1737, 0.74 ) }
    dend_41 { pt3dadd( -216.244, 252.538, -91.2536, 0.29 ) }
    dend_41 { pt3dadd( -216.323, 254.194, -91.2681, 0.37 ) }
    dend_41 { pt3dadd( -216.358, 255.162, -91.2581, 0.37 ) }
    dend_41 { pt3dadd( -216.436, 256.824, -91.2316, 0.37 ) }
    dend_41 { pt3dadd( -216.509, 257.867, -91.21, 0.37 ) }
    dend_41 { pt3dadd( -216.641, 259.052, -91.1886, 0.37 ) }
    dend_41 { pt3dadd( -216.852, 260.356, -91.1718, 0.29 ) }
    dend_41 { pt3dadd( -217.112, 261.613, -91.1641, 0.29 ) }
    dend_41 { pt3dadd( -217.499, 263.375, -91.2572, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_41 { pt3dadd( -217.681, 264.163, -91.3525, 0.29 ) }
    dend_41 { pt3dadd( -217.927, 265.229, -91.5116, 1.03 ) }
    dend_41 { pt3dadd( -218.108, 266.034, -91.6472, 1.33 ) }
    dend_41 { pt3dadd( -218.494, 267.706, -91.9236, 0.52 ) }
    dend_41 { pt3dadd( -218.824, 269.129, -92.147, 0.52 ) }
    dend_41 { pt3dadd( -219.122, 270.502, -92.3711, 0.52 ) }
    dend_41 { pt3dadd( -219.361, 271.63, -92.5481, 0.81 ) }
    dend_41 { pt3dadd( -219.492, 272.242, -92.635, 0.81 ) }
    dend_41 { pt3dadd( -219.887, 273.929, -92.8109, 0.37 ) }
    dend_41 { pt3dadd( -220.223, 275.33, -92.9005, 0.37 ) }
    dend_41 { pt3dadd( -220.502, 276.499, -92.9308, 0.96 ) }
    dend_41 { pt3dadd( -220.626, 277.021, -92.9425, 1.33 ) }
    dend_41 { pt3dadd( -220.794, 277.687, -92.9499, 1.4 ) }
    dend_41 { pt3dadd( -221.219, 279.211, -92.9468, 0.52 ) }
    dend_41 { pt3dadd( -221.557, 280.307, -92.929, 0.44 ) }
    dend_41 { pt3dadd( -222.055, 281.717, -92.8704, 0.37 ) }
    dend_41 { pt3dadd( -222.512, 282.964, -92.814, 0.37 ) }
    dend_41 { pt3dadd( -222.886, 284.006, -92.7724, 0.37 ) }
    dend_41 { pt3dadd( -223.137, 284.709, -92.7461, 0.37 ) }
    dend_41 { pt3dadd( -223.603, 285.897, -92.6757, 0.74 ) }
    dend_41 { pt3dadd( -223.729, 286.16, -92.6447, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -201.416, 220.065, -82.3802, 0.37 ) }
    dend_40 { pt3dadd( -202.183, 221.543, -83.3782, 0.37 ) }
    dend_40 { pt3dadd( -202.635, 222.615, -84.0143, 0.74 ) }
    dend_40 { pt3dadd( -203.216, 224.347, -85.0422, 0.29 ) }
    dend_40 { pt3dadd( -203.477, 225.275, -85.6455, 0.29 ) }
    dend_40 { pt3dadd( -203.706, 226.249, -86.2956, 1.25 ) }
    dend_40 { pt3dadd( -203.788, 226.636, -86.5569, 1.25 ) }
    dend_40 { pt3dadd( -203.927, 227.646, -87.2148, 0.29 ) }
    dend_40 { pt3dadd( -203.994, 228.649, -87.8663, 0.29 ) }
    dend_40 { pt3dadd( -204.037, 229.738, -88.5967, 0.29 ) }
    dend_40 { pt3dadd( -204.1, 230.368, -89.0797, 0.29 ) }
    dend_40 { pt3dadd( -204.216, 230.904, -89.5553, 0.29 ) }
    dend_40 { pt3dadd( -204.405, 231.535, -90.1603, 0.29 ) }
    dend_40 { pt3dadd( -204.712, 232.235, -90.8449, 1.03 ) }
    dend_40 { pt3dadd( -205.41, 233.595, -92.0977, 0.37 ) }
    dend_40 { pt3dadd( -205.797, 234.336, -92.7464, 0.37 ) }
    dend_40 { pt3dadd( -206.116, 234.969, -93.349, 0.37 ) }
    dend_40 { pt3dadd( -206.399, 235.512, -93.8845, 1.03 ) }
    dend_40 { pt3dadd( -206.9, 236.438, -94.8293, 0.52 ) }
    dend_40 { pt3dadd( -207.23, 237.098, -95.501, 0.52 ) }
    dend_40 { pt3dadd( -207.497, 237.809, -96.115, 0.44 ) }
    dend_40 { pt3dadd( -207.945, 239.4, -97.4202, 1.62 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
    ModelViewParmSubset_2 = new SectionList()
    dend_51 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_42 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_51 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_18 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_50 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_49 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_6 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_48 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_31 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_37 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_33 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_44 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_47 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_46 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_41 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_22 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_2 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_26 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_23 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_3 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_27 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_21 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_4 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_5 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_25 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_16 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_9 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_10 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_15 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_14 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_13 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_36 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_43 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_45 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_39 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_35 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_34 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_40 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_9 all.append()
    dend_9 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_51 nseg = 3
    dend_18 nseg = 9
    dend_1 nseg = 7
    dend_50 nseg = 9
    dend_24 nseg = 9
    dend_19 nseg = 3
    dend_49 nseg = 7
    dend_28 nseg = 5
    dend_30 nseg = 3
    dend_29 nseg = 5
    dend_6 nseg = 5
    dend_48 nseg = 7
    dend_31 nseg = 3
    dend_11 nseg = 5
    dend_37 nseg = 3
    dend_32 nseg = 3
    dend_12 nseg = 3
    dend_33 nseg = 3
    dend_44 nseg = 13
    dend_47 nseg = 5
    dend_46 nseg = 3
    dend_41 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L5_LBC_5dc27443f3_0_0


