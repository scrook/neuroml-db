// Cell: bIR215_L23_DBC_4d1e2d44e8_0_0
/*
{
  "id" : "bIR215_L23_DBC_4d1e2d44e8_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.10046, -10.7769, 0.0, 1.2583", "-0.977881, -9.66658, 0.0, 1.27734", "-0.855301, -8.55625, 0.0, 1.93125", "-0.732721, -7.44592, 0.0, 2.73299", "-0.610142, -6.33559, 0.0, 3.81421", "-0.487562, -5.22526, 0.0, 4.86299", "-0.364982, -4.11493, 0.0, 5.49704", "-0.242403, -3.0046, 0.0, 6.12703", "-0.119823, -1.89427, 0.0, 6.84433", "0.00275685, -0.783937, 0.0, 7.36999", "0.125337, 0.326393, 0.0, 7.59231", "0.247916, 1.43672, 0.0, 7.67062", "0.370496, 2.54705, 0.0, 7.50992", "0.493076, 3.65738, 0.0, 7.33464", "0.615655, 4.76771, 0.0, 7.00391", "0.738235, 5.87804, 0.0, 6.54709", "0.860815, 6.98838, 0.0, 5.62524", "0.983394, 8.09871, 0.0, 4.30117", "1.10597, 9.20904, 0.0, 3.55313", "1.22855, 10.3194, 0.0, 2.60096", "1.35113, 11.4297, 0.0, 1.60168" ]
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-0.382575, -10.9767, -3.38, 1.94", "0.352478, -14.4877, -3.38, 1.94", "0.998777, -17.5747, -3.38, 1.94", "1.275, -18.894, -3.38, 3.6" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996983969059
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.29743, 11.5533, -4.34, 1.66", "2.40703, 16.5765, -3.87226, 1.66", "2.46947, 19.4383, -3.60578, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996983969059
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.35113, 11.4297, 0.0, 0.55", "2.99712, 26.3391, 0.0, 0.55", "4.64311, 41.2485, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "1.275, -18.894, -3.38, 0.83", "3.55434, -20.327, -2.97608, 0.83", "5.84117, -21.7019, -2.55728, 0.83", "8.38891, -23.2267, -2.07559, 0.83", "11.1477, -24.7064, -1.54223, 0.83", "14.3082, -26.3655, -0.921914, 0.83", "15.9362, -27.2111, -0.598118, 0.83", "18.5006, -28.5201, -0.0713022, 0.83", "21.2907, -29.8075, 0.672618, 0.83", "23.5464, -30.7738, 1.42345, 0.83", "25.2716, -31.5789, 2.10605, 0.83", "26.9583, -32.4115, 2.84213, 0.83", "27.3349, -32.6229, 2.98771, 0.83", "30.4468, -34.5712, 4.03158, 0.83", "33.5245, -36.6124, 5.05782, 0.83", "35.7607, -38.2309, 5.77551, 0.83", "37.2749, -39.3017, 6.21796, 0.83", "40.3551, -41.5744, 6.9465, 1.11", "42.8054, -43.4777, 7.28096, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "1.275, -18.894, -3.38, 1.94", "1.91224, -22.817, -1.54296, 1.94", "2.28202, -25.0934, -0.476953, 2.22" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.46947, 19.4383, -3.60578, 0.83", "-0.740633, 22.7588, -2.90024, 0.83", "-2.04235, 24.3435, -2.55033, 0.83", "-3.88191, 26.9468, -1.98452, 0.83", "-5.60305, 29.6713, -1.39219, 0.83", "-7.18617, 32.7752, -0.791126, 0.83", "-8.15098, 34.8267, -0.401217, 0.83", "-9.12466, 37.7212, 0.167707, 0.83", "-9.82079, 40.5768, 0.634052, 0.83", "-10.4467, 44.3129, 1.14193, 0.83", "-11.0178, 48.8068, 1.68756, 0.83", "-11.3139, 51.3358, 1.98555, 0.83", "-11.9407, 57.2439, 2.65833, 0.83", "-12.218, 60.641, 3.01537, 0.83", "-12.3601, 62.7001, 3.22246, 0.83", "-12.5947, 66.7691, 3.61508, 0.83", "-12.7944, 69.4533, 3.8902, 0.83", "-13.0624, 73.1753, 4.2685, 0.83", "-13.4596, 76.2289, 4.64255, 0.83", "-14.0302, 79.4276, 5.0898, 0.83", "-14.6769, 82.2887, 5.53883, 0.83", "-15.1195, 83.9741, 5.82548, 0.83", "-15.5181, 85.2718, 6.06691, 0.83", "-16.5504, 87.9616, 6.64137, 0.55", "-18.5848, 93.0265, 7.75559, 1.11", "-19.8851, 96.3836, 8.47685, 1.11", "-21.4496, 100.718, 9.36702, 1.11", "-22.2093, 103.179, 9.82626, 1.11", "-23.2813, 107.171, 10.5137, 0.83", "-24.5078, 112.224, 11.3369, 0.55", "-25.1023, 114.758, 11.7424, 0.55", "-26.6353, 121.923, 12.8359, 0.83", "-27.3183, 125.339, 13.3399, 0.83", "-27.8741, 128.289, 13.763, 0.83", "-28.7763, 133.349, 14.4704, 0.83", "-29.2651, 135.892, 14.8387, 0.83", "-29.7728, 138.431, 15.2134, 0.83", "-30.3447, 141.309, 15.6368, 0.83", "-30.7047, 142.89, 15.8859, 0.83", "-31.6547, 147.507, 16.5769, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "2.46947, 19.4383, -3.60578, 0.83", "0.838455, 22.95, -3.15504, 0.83", "-0.778896, 26.4323, -2.70808, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.64311, 41.2485, 0.0, 0.55", "6.28909, 56.158, 0.0, 0.55", "7.93508, 71.0674, 0.0, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "42.8054, -43.4777, 7.28096, 0.83", "44.5971, -44.2531, 7.72452, 0.83", "46.968, -45.4221, 8.30595, 0.83", "47.8744, -45.9722, 8.54208, 0.55", "49.4291, -47.0624, 8.96117, 0.83", "50.7325, -47.9985, 9.1957, 0.83", "51.5886, -48.6641, 9.30728, 0.55", "52.1322, -49.2062, 9.33676, 0.83", "53.1093, -50.3277, 9.25164, 0.55", "53.9112, -51.228, 9.09738, 0.83", "55.8147, -53.2701, 8.09067, 0.55", "56.5883, -54.0499, 7.50725, 0.28", "57.1049, -54.5907, 7.06823, 0.55", "58.2593, -55.8159, 6.01138, 0.28", "58.7783, -56.3734, 5.53268, 0.55", "61.307, -59.3837, 2.96769, 0.28", "62.4375, -60.8507, 1.81496, 0.83", "63.8775, -62.663, 0.474987, 0.55", "64.3573, -63.2429, 0.0769126, 0.28", "65.3385, -64.4792, -0.671608, 1.11", "67.3712, -67.0698, -1.97365, 0.28", "68.2331, -68.1383, -2.3369, 0.83", "68.9048, -68.924, -2.58432, 0.28", "69.9633, -69.9347, -2.9726, 0.55", "70.652, -70.5385, -3.21982, 0.28", "72.2668, -71.8823, -3.77355, 0.83", "73.2672, -72.7014, -4.04897, 0.55", "73.9905, -73.2878, -4.26011, 0.55", "75.8013, -74.8414, -4.77409, 0.83", "77.1394, -76.0603, -5.11047, 0.55", "77.9319, -76.7767, -5.31608, 0.83", "78.6366, -77.4508, -5.51508, 0.55", "79.6431, -78.4798, -5.78021, 0.55", "80.7166, -79.5369, -6.01865, 0.55", "81.0853, -79.9302, -6.07265, 0.83", "82.1698, -81.1123, -6.37644, 0.55", "83.2434, -82.2802, -6.72412, 0.55", "83.566, -82.6342, -6.83323, 0.83", "85.1893, -84.4409, -7.32478, 0.55", "86.8138, -86.2479, -7.76821, 1.11", "88.5343, -88.21, -8.20589, 0.55", "90.6722, -90.8591, -8.7434, 0.83", "91.5461, -91.977, -8.95884, 0.28", "92.4104, -93.1839, -9.13901, 0.55", "92.9058, -93.9132, -9.20087, 0.28", "93.5855, -94.8958, -9.20357, 0.55", "94.7547, -96.5894, -9.02859, 0.28", "95.8802, -98.1908, -8.96856, 0.55", "96.9114, -99.5932, -8.97182, 0.28", "97.5731, -100.45, -9.02675, 0.55", "98.2153, -101.238, -9.08681, 0.28", "99.1199, -102.32, -9.21785, 0.83", "100.716, -104.217, -9.55069, 0.28", "101.82, -105.561, -9.88397, 0.83", "102.494, -106.351, -10.1151, 0.28", "103.43, -107.534, -10.4638, 0.55", "104.57, -109.071, -10.9056, 0.28", "105.175, -109.939, -11.1267, 0.83", "105.993, -111.13, -11.3392, 0.28", "106.373, -111.691, -11.4168, 0.55", "107.006, -112.652, -11.5086, 0.28", "107.406, -113.259, -11.5779, 0.83", "108.532, -114.883, -11.7475, 0.28", "108.879, -115.298, -11.7917, 0.55", "109.913, -116.502, -11.9137, 0.28", "110.424, -117.06, -11.9609, 0.55", "111.429, -118.04, -12.01, 0.28", "112.441, -119.014, -12.0313, 0.55", "113.885, -120.409, -11.999, 0.55", "115.21, -121.708, -11.984, 0.55", "115.713, -122.197, -11.9742, 0.28", "116.581, -123.052, -11.941, 0.55", "117.328, -123.822, -11.9075, 0.28", "117.779, -124.324, -11.9263, 0.55", "118.914, -125.603, -12.048, 0.28", "119.754, -126.471, -12.1781, 0.55", "120.83, -127.496, -12.3606, 0.28", "121.399, -128.011, -12.4513, 0.55", "122.157, -128.653, -12.4655, 0.28", "122.577, -129.002, -12.4668, 0.55", "123.715, -129.903, -12.4157, 0.28", "125.254, -131.106, -12.28, 0.55", "125.868, -131.552, -12.1556, 0.55", "127.785, -132.766, -11.6026, 0.28" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "42.8054, -43.4777, 7.28096, 1.11", "43.8158, -45.4481, 7.15163, 1.11", "44.5155, -46.8827, 7.013, 0.55", "45.271, -48.4183, 6.76611, 0.83", "46.5065, -51.0065, 6.2565, 0.83", "47.492, -53.1314, 5.8088, 0.55", "48.359, -55.0475, 5.38782, 0.83", "49.2157, -57.0177, 4.87839, 0.55", "50.0648, -58.9594, 4.35659, 0.55", "50.4571, -59.9287, 4.10286, 0.28", "50.7387, -60.5774, 3.94836, 0.55", "51.2117, -61.7625, 3.7757, 0.28", "51.6462, -62.8699, 3.67247, 0.55", "52.1814, -64.1031, 3.64975, 0.28", "52.9486, -65.8008, 3.76349, 0.55", "53.6589, -67.3071, 3.96047, 0.28", "53.975, -67.9423, 4.03692, 0.55", "54.438, -68.8431, 4.05616, 0.55", "55.011, -70.0655, 3.98914, 0.55", "55.214, -70.502, 3.93058, 0.83", "55.9116, -72.0245, 3.67471, 0.28", "56.6456, -73.9283, 3.24188, 0.83", "57.6677, -76.6305, 2.49535, 0.28", "58.0257, -77.5833, 2.139, 0.55", "58.3254, -78.4771, 1.76291, 0.28", "58.682, -79.5082, 1.25138, 0.83", "59.241, -81.2567, 0.353647, 0.28", "59.6846, -82.7232, -0.336783, 0.55", "60.4217, -85.0211, -1.32916, 0.28", "60.9149, -86.446, -1.90575, 0.55", "61.8998, -89.386, -2.9844, 0.55", "62.4299, -90.9828, -3.43857, 0.55", "62.777, -92.106, -3.64341, 0.28", "62.9509, -92.769, -3.7244, 0.55", "63.236, -93.9744, -3.75959, 0.28", "63.3844, -94.4981, -3.71122, 0.55", "63.8216, -96.4782, -3.18926, 0.28", "64.0929, -97.5184, -2.81917, 0.55", "64.4103, -99.124, -2.12814, 0.28", "64.4423, -99.3336, -2.02161, 0.55", "64.9008, -101.892, -0.571136, 0.28", "65.1483, -103.087, 0.117262, 0.55", "65.6351, -105.242, 1.28138, 0.28", "65.8639, -106.108, 1.71994, 0.55", "66.1699, -107.116, 2.17517, 0.28", "66.6858, -108.675, 2.69974, 0.83", "67.3462, -110.501, 3.20747, 0.28", "67.9136, -111.842, 3.59699, 0.83", "68.5631, -113.291, 4.03039, 0.28", "69.0431, -114.198, 4.34365, 0.28", "69.3919, -114.771, 4.60183, 0.55", "70.5326, -116.491, 5.79816, 0.28", "70.8755, -116.963, 6.26695, 0.55", "71.3879, -117.681, 7.08026, 0.28", "71.6863, -118.153, 7.59169, 0.55", "72.2664, -119.254, 8.53173, 0.28", "72.7035, -120.291, 9.22678, 0.55", "73.7668, -123.174, 10.3906, 0.28", "74.0274, -123.894, 10.5839, 0.28", "74.635, -125.707, 10.8572, 0.83", "75.4333, -128.245, 11.0277, 0.28", "75.8307, -129.581, 11.0065, 0.55", "76.6922, -132.494, 10.8605, 0.28", "77.0623, -133.788, 10.7734, 0.28", "77.4036, -134.935, 10.7146, 0.55", "77.8495, -136.314, 10.6374, 0.28", "78.1721, -137.255, 10.6017, 0.55", "78.6499, -138.707, 10.5922, 0.28", "78.8188, -139.399, 10.6347, 0.55", "79.1165, -140.924, 10.7454, 0.28", "79.2309, -141.672, 10.8067, 0.55", "79.5165, -143.602, 10.8228, 0.28", "79.6364, -144.681, 10.7851, 0.55", "79.8369, -146.377, 10.7292, 0.55", "79.9944, -147.994, 10.7354, 0.28", "80.0737, -149.19, 10.8176, 0.55", "80.1255, -151.634, 10.9751, 0.28", "80.1975, -152.84, 11.0185, 0.55", "80.4268, -155.344, 11.0279, 0.28", "80.49, -156.094, 10.9666, 0.55", "80.5401, -157.031, 10.8335, 0.28", "80.6296, -158.262, 10.6044, 0.55", "80.729, -160.516, 10.178, 0.28", "80.7789, -161.349, 10.026, 0.55", "80.9236, -162.926, 9.57253, 0.28", "81.0076, -163.572, 9.37431, 0.55", "81.3135, -165.372, 8.77939, 0.28", "81.5797, -167.016, 8.26288, 0.55", "81.8777, -168.938, 7.66233, 0.28", "82.5611, -172.718, 6.50601, 0.55", "83.0864, -175.337, 5.77592, 0.28", "83.3977, -176.714, 5.39139, 0.28", "83.793, -178.301, 4.94852, 0.55", "84.3352, -180.111, 4.42711, 0.28", "84.6632, -181.015, 4.19037, 0.55", "85.0791, -181.995, 4.14086, 0.28", "85.7283, -183.237, 4.28074, 0.55", "86.3229, -184.304, 4.57123, 0.28", "87.3082, -185.924, 5.11236, 0.55", "88.464, -187.802, 5.74618, 0.28", "90.2457, -190.573, 6.61466, 0.55", "91.7236, -192.803, 7.1096, 0.55", "92.4369, -193.869, 7.2793, 0.28", "93.234, -194.993, 7.29176, 0.55", "94.4241, -196.603, 7.03044, 0.28", "95.1868, -197.666, 6.69265, 0.55", "96.4007, -199.42, 5.9486, 0.28", "97.101, -200.377, 5.46052, 0.55", "97.9437, -201.517, 4.86932, 0.28", "98.3321, -202.06, 4.66246, 0.55", "98.963, -203.04, 4.41748, 0.28", "99.3042, -203.663, 4.29762, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "2.28202, -25.0934, -0.476953, 1.38", "2.14113, -25.9068, -0.414266, 1.38", "1.58822, -29.0987, -0.168267, 1.38" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.28202, -25.0934, -0.476953, 0.83", "1.79441, -26.9155, 0.0361203, 0.83", "1.48647, -28.7556, 1.10638, 0.83", "1.26894, -30.5302, 2.22797, 1.38", "1.02908, -32.4638, 3.52196, 1.11", "0.845256, -33.9456, 4.51358, 0.55", "0.62532, -35.7186, 5.70005, 1.11", "0.292339, -39.8667, 8.82125, 0.83", "0.239039, -41.5485, 10.2111, 1.11", "0.164861, -42.9344, 11.456, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.778896, 26.4323, -2.70808, 1.38", "1.15367, 32.2732, -5.05636, 1.38", "2.72608, 37.0255, -6.96701, 1.38", "3.65275, 39.8262, -8.09303, 1.38", "4.3815, 42.0288, -8.97855, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "127.785, -132.766, -11.6026, 0.28", "129.699, -132.689, -10.9101, 0.28", "131.244, -132.627, -10.3512, 0.55", "133.332, -132.543, -9.59579, 0.28", "134.762, -132.485, -9.07862, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "127.785, -132.766, -11.6026, 0.28", "130.411, -133.944, -11.4624, 0.28", "131.525, -134.422, -11.3238, 0.28", "133.711, -135.38, -10.7913, 0.83", "135.161, -136.025, -10.3443, 0.28", "136.367, -136.52, -9.84673, 0.55", "137.468, -136.956, -9.33191, 0.28", "137.524, -136.974, -9.29569, 0.55", "139.055, -137.446, -8.20698, 0.28", "139.113, -137.468, -8.16042, 0.55", "140.946, -138.148, -6.74603, 0.28", "141.242, -138.265, -6.52959, 0.55", "143.489, -139.161, -4.95181, 0.28", "143.914, -139.328, -4.6636, 0.55", "145.554, -139.959, -3.61924, 0.28", "146.712, -140.445, -2.90779, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.58822, -29.0987, -0.168267, 1.38", "1.45787, -29.3485, 0.272183, 1.38", "-1.53058, -34.547, 8.3958, 1.38", "-3.65395, -37.9234, 13.4365, 1.11", "-5.08143, -40.0937, 16.373, 0.83", "-6.74929, -42.5136, 19.4338, 0.83", "-9.38822, -46.0775, 23.3283, 0.83", "-10.274, -47.2693, 24.359, 0.83", "-11.232, -48.5551, 25.2164, 0.83", "-14.2435, -52.9322, 27.8678, 0.83", "-16.4869, -56.1473, 29.8338, 0.83", "-20.8605, -62.2163, 33.6722, 0.83", "-23.5256, -66.0611, 36.0238, 0.55", "-25.3743, -68.6976, 37.6883, 0.55", "-28.2455, -72.5908, 40.374, 0.55", "-31.0499, -76.0959, 43.0251, 0.55", "-32.612, -78.1418, 45.1742, 0.55", "-33.5174, -79.4641, 46.9892, 0.55", "-34.6274, -81.1512, 49.6596, 0.55", "-36.9478, -84.9601, 56.1021, 0.55", "-37.9329, -86.7485, 59.2183, 0.55", "-41.805, -94.1897, 71.7369, 0.55", "-42.7437, -96.2126, 74.7859, 0.55", "-44.6447, -100.064, 80.4878, 0.55", "-45.7166, -102.235, 83.3801, 0.55", "-46.353, -103.513, 84.8595, 0.55", "-48.8569, -107.843, 89.2568, 0.55", "-50.8448, -110.678, 91.5228, 0.55", "-53.095, -113.663, 94.0683, 0.55", "-55.8829, -117.63, 97.4349, 0.55", "-56.6909, -118.9, 98.689, 0.55", "-57.3524, -119.989, 99.9794, 0.55", "-58.4808, -121.98, 102.803, 0.55", "-59.7487, -124.183, 106.357, 0.55", "-60.7708, -126.129, 109.491, 0.55", "-62.8227, -129.321, 115.435, 0.55", "-63.3065, -129.996, 116.694, 0.55", "-65.2643, -132.531, 121.207, 0.55", "-66.6682, -134.055, 123.966, 0.55", "-68.3057, -135.538, 126.588, 0.55", "-70.6964, -137.104, 128.926, 0.55", "-73.1466, -138.556, 130.647, 0.55", "-75.8148, -139.974, 132.296, 0.55", "-78.3163, -141.133, 133.699, 0.55", "-81.6292, -142.519, 135.486, 0.55", "-90.6071, -146.036, 140.829, 0.55", "-93.3344, -147.095, 142.615, 0.55", "-96.5456, -148.386, 144.712, 0.55", "-99.5687, -149.881, 146.877, 0.55", "-101.701, -151.288, 149.05, 0.55", "-105.132, -153.908, 153.389, 0.55", "-106.249, -155.022, 155.511, 0.55", "-108.874, -158.067, 161.152, 0.55", "-110.771, -161.143, 166.165, 0.55", "-113.128, -166.842, 174.52, 0.55", "-120.206, -174.383, 182.553, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "1.58822, -29.0987, -0.168267, 1.11", "0.951564, -30.1948, -1.36658, 1.11", "-0.4968, -32.6883, -4.09269, 1.11", "-2.80789, -36.667, -8.44263, 1.11", "-6.01332, -42.1855, -14.4759, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "0.164861, -42.9344, 11.456, 0.83", "1.02018, -47.6915, 18.3149, 0.83", "1.32687, -49.5248, 20.7027, 0.83", "1.69341, -51.4667, 23.0404, 0.83", "1.94649, -52.8998, 24.6242, 1.11", "2.26253, -54.6879, 26.4793, 0.55", "2.62956, -56.9144, 28.6272, 0.83", "2.95788, -59.0134, 30.1357, 0.83", "3.21433, -60.1098, 30.8948, 0.55", "3.54949, -61.5476, 31.7272, 0.83", "3.84494, -62.7804, 32.3309, 0.83", "4.22267, -64.1488, 32.975, 0.83", "4.63021, -65.3796, 33.5284, 0.83", "4.8625, -66.1045, 33.8714, 0.83", "5.31397, -67.5148, 34.6797, 0.55", "5.60775, -68.4719, 35.2713, 1.11", "6.6345, -71.9421, 37.506, 0.55", "6.95905, -73.0726, 38.2837, 0.55", "7.1959, -74.0785, 38.996, 1.11", "7.68463, -76.4571, 40.7652, 0.55", "7.94702, -77.7395, 41.802, 1.11", "9.55095, -83.6773, 47.5051, 1.11", "10.5842, -88.4818, 54.3024, 1.11", "13.4016, -93.6574, 60.2715, 1.11", "17.1151, -97.9551, 66.4436, 1.11", "19.6756, -103.441, 72.2489, 1.11", "23.4846, -107.148, 78.7375, 1.11", "27.0425, -110.84, 85.3757, 1.11", "30.679, -114.022, 92.232, 1.11", "33.8006, -115.644, 99.8463, 1.11", "36.1468, -116.515, 107.852, 1.11" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "0.164861, -42.9344, 11.456, 1.11", "-0.00521665, -43.6467, 12.0696, 1.11", "-0.338038, -45.03, 13.2348, 1.11", "-0.866157, -47.5016, 15.3413, 1.11", "-1.55727, -51.2709, 18.5172, 1.11", "-2.20323, -55.0946, 21.7792, 1.11", "-2.44309, -56.6676, 23.0762, 0.55", "-2.63285, -58.1671, 24.258, 0.83", "-3.08806, -60.9547, 26.2295, 1.11", "-3.27563, -61.7427, 26.7638, 1.11", "-4.01965, -64.0222, 27.9922, 0.55", "-4.7912, -65.8726, 28.9133, 0.83", "-6.09956, -68.5326, 30.2791, 0.83", "-7.82826, -71.7386, 32.0821, 0.83", "-9.99736, -75.1749, 34.2607, 0.55", "-11.1564, -76.8832, 35.4355, 0.83", "-12.6723, -78.8922, 36.9352, 0.55", "-13.6503, -80.1377, 37.9997, 1.11", "-16.3562, -83.5293, 41.1992, 0.55", "-17.9754, -85.7191, 43.2614, 0.83", "-18.8499, -87.0506, 44.3735, 0.83", "-20.4873, -89.6496, 46.4341, 0.83", "-21.3447, -91.0522, 47.4747, 1.11", "-22.2314, -92.3655, 48.436, 0.28", "-23.0345, -93.465, 49.0706, 0.83", "-23.775, -94.7994, 49.7075, 0.28", "-24.7481, -96.7314, 50.6525, 0.83", "-27.4157, -105.768, 56.215, 0.83", "-30.4031, -114.336, 62.3297, 0.83", "-33.1928, -121.817, 69.8108, 0.83", "-34.5531, -128.552, 78.326, 0.83", "-34.8944, -133.858, 87.889, 0.83", "-36.799, -137.096, 98.1657, 0.83", "-40.3564, -138.74, 108.381, 0.83", "-43.1758, -140.997, 118.71, 0.83", "-46.1381, -144.829, 128.521, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "4.3815, 42.0288, -8.97855, 1.11", "2.2314, 44.1202, -18.0569, 1.11", "0.0597254, 46.2327, -27.2264, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "4.3815, 42.0288, -8.97855, 1.38", "4.22044, 45.1054, -9.32112, 1.38", "4.08937, 47.6091, -9.59989, 1.38" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-6.01332, -42.1855, -14.4759, 0.83", "-6.42718, -43.8898, -16.3854, 0.83", "-7.32729, -47.5967, -20.5383, 0.83", "-7.95999, -50.2023, -23.4575, 1.11" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-6.01332, -42.1855, -14.4759, 0.55", "-6.50891, -42.8161, -15.2179, 0.55", "-8.06871, -44.9573, -17.8517, 0.55", "-9.58944, -46.9705, -20.4967, 0.55", "-10.1307, -47.7323, -21.453, 0.28", "-11.8238, -50.07, -24.3889, 0.55", "-13.7371, -52.6293, -27.4706, 0.55", "-14.7295, -53.8993, -29.0645, 0.55", "-15.5313, -54.9522, -30.4645, 0.55", "-16.9471, -56.8277, -32.8341, 0.55", "-18.0086, -58.285, -34.6076, 0.28", "-19.1213, -59.8527, -36.2834, 0.55", "-20.0193, -61.0479, -37.5274, 0.55", "-21.5948, -62.977, -39.5879, 0.28", "-22.1203, -63.6051, -40.2845, 0.55", "-22.7295, -64.2701, -41.1264, 0.28", "-24.2054, -65.9254, -43.3834, 0.55", "-25.2278, -66.9532, -45.1181, 0.28", "-25.3895, -67.0822, -45.3927, 0.55", "-26.3195, -67.6835, -46.8909, 0.28", "-27.0109, -68.1267, -48.0976, 0.83", "-28.0193, -68.7831, -50.0561, 0.28", "-28.7939, -69.4266, -51.92, 0.55", "-29.5092, -70.2685, -54.213, 0.28", "-29.7962, -70.8146, -55.6467, 0.55", "-29.9707, -71.314, -56.82, 0.28", "-30.0919, -71.783, -57.8064, 0.55", "-30.3319, -72.7637, -59.7028, 0.28", "-30.9471, -75.3019, -64.2585, 0.55", "-31.3752, -77.1561, -67.5097, 0.28", "-31.549, -77.8366, -68.7279, 0.83", "-32.1603, -79.7372, -72.1789, 0.28", "-32.4484, -80.4479, -73.4306, 0.55", "-32.5797, -80.722, -73.8759, 0.55", "-33.022, -81.5244, -75.084, 0.28", "-33.4843, -82.3198, -76.2786, 0.55", "-34.2235, -83.862, -78.5875, 0.28", "-34.6628, -84.9141, -80.0388, 0.55", "-34.9373, -85.8103, -81.1606, 0.55", "-35.4039, -87.6991, -83.3622, 0.28", "-35.4894, -88.2167, -83.9138, 0.55", "-35.5876, -89.2497, -84.8677, 0.28", "-35.6846, -91.4017, -86.559, 0.55", "-35.6685, -94.1424, -88.6877, 0.55", "-35.6797, -95.1232, -89.4502, 0.28", "-35.6258, -96.7052, -90.6032, 0.55", "-35.5548, -98.5648, -92.1363, 0.28", "-35.5432, -99.111, -92.6526, 0.83", "-35.4508, -101.89, -95.637, 0.28", "-35.4596, -103.206, -97.1397, 0.55", "-35.5291, -104.558, -98.714, 0.28", "-35.7966, -107.202, -101.91, 0.55", "-36.1219, -109.368, -104.718, 0.55", "-36.4072, -110.739, -106.53, 0.28", "-36.7254, -112.021, -108.275, 0.28", "-36.8977, -112.711, -109.249, 0.28", "-37.3326, -114.339, -111.541, 0.55", "-38.0353, -117.037, -115.168, 0.28", "-38.2573, -117.866, -116.293, 0.83", "-39.0128, -120.468, -119.808, 0.28", "-39.2197, -121.148, -120.76, 0.55", "-39.7364, -122.729, -122.95, 0.28", "-40.1808, -124.04, -124.74, 0.55", "-40.7508, -125.671, -126.981, 0.28", "-41.0608, -126.455, -128.053, 0.55", "-41.7466, -127.853, -129.992, 0.28", "-42.4331, -129.188, -131.885, 0.55", "-43.6253, -131.42, -135.211, 0.55", "-44.2461, -132.626, -137.112, 0.28", "-44.7843, -133.608, -138.744, 0.55", "-45.3202, -134.618, -140.552, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "0.0597254, 46.2327, -27.2264, 1.11", "9.39444, 53.5589, -21.1773, 1.11", "11.1034, 55.0039, -20.2879, 1.11", "13.12, 56.7256, -19.4898, 1.11", "15.6174, 58.9506, -18.6986, 1.11", "18.6285, 61.783, -17.9198, 0.83", "21.43, 64.4961, -17.3363, 0.83", "23.2645, 66.4095, -17.53, 0.83", "24.946, 68.1458, -17.7277, 0.83", "26.3719, 69.6046, -17.9211, 0.83", "27.8756, 71.152, -18.174, 0.83", "29.0447, 72.4945, -18.4333, 0.83", "30.274, 74.2846, -18.9261, 0.83", "31.1085, 75.6247, -19.2656, 0.83", "31.5435, 76.3389, -19.4292, 0.83", "32.5261, 77.9902, -19.801, 0.83", "33.4705, 79.5708, -20.245, 0.83", "35.3547, 82.9319, -21.2464, 0.83", "36.9474, 85.9098, -22.2773, 0.55", "38.4532, 88.7424, -23.3848, 0.55", "39.6815, 90.7939, -24.2576, 0.55", "41.8828, 94.1103, -25.716, 0.83", "42.8968, 95.5894, -26.3562, 0.83", "45.6327, 99.4351, -27.9673, 1.11", "47.5989, 102.229, -29.2259, 0.83", "51.1463, 107.175, -31.4977, 0.83", "53.4949, 110.351, -32.9256, 0.83", "54.5809, 111.78, -33.4804, 0.83", "55.9631, 113.515, -34.0869, 1.11", "59.1815, 117.318, -35.1978, 0.55", "60.3769, 118.734, -35.5523, 0.55", "62.1768, 120.951, -36.0233, 0.55", "64.1477, 123.477, -36.5685, 0.55", "66.2995, 126.327, -37.168, 0.55", "67.8471, 128.547, -37.5774, 0.55", "68.9046, 130.093, -37.7249, 0.28", "70.7656, 132.733, -37.8648, 0.28", "72.7575, 135.502, -37.9421, 0.55", "74.4328, 137.831, -37.9771, 0.55", "76.3412, 140.448, -37.8659, 0.55", "79.4384, 144.708, -37.5195, 0.55", "81.9803, 148.143, -37.1442, 0.55", "83.2997, 150.009, -36.8619, 0.55", "84.1302, 151.178, -36.6618, 0.55", "86.6021, 154.906, -36.0927, 0.55", "88.1457, 157.543, -35.7762, 0.55", "89.2024, 159.563, -35.6542, 0.55", "91.4554, 164.269, -35.4745, 0.55", "92.897, 167.177, -35.3131, 0.55", "93.9693, 169.357, -35.1729, 0.55", "95.3092, 171.997, -35.0203, 0.55", "97.0307, 175.213, -34.8308, 0.83", "98.0514, 176.981, -34.7017, 0.83", "101.452, 182.544, -34.299, 0.55", "102.524, 184.279, -34.1615, 0.55", "104.363, 187.167, -33.9443, 0.55", "105.651, 189.278, -33.845, 0.55", "107.636, 192.952, -33.822, 0.55", "109.634, 197.058, -34.0083, 0.83", "110.561, 199.243, -34.4156, 0.55", "111.457, 201.281, -34.9996, 0.83", "112.724, 204.095, -36.1103, 0.55", "114.06, 206.873, -37.4693, 0.55", "115.1, 208.841, -38.6861, 1.11", "117.881, 213.329, -41.9462, 0.83", "120.17, 216.454, -44.3849, 0.83", "121.9, 218.516, -46.0292, 0.83", "123.518, 220.27, -47.2675, 0.83", "125.267, 222.191, -48.4032, 0.83", "127.71, 225.05, -49.6307, 1.11", "129.823, 227.768, -50.2646, 0.83", "132.469, 231.672, -50.7707, 0.83", "134.899, 235.496, -50.9249, 0.83", "136.683, 238.545, -50.8229, 0.83", "137.932, 240.945, -50.5489, 0.83", "139.201, 243.677, -50.098, 0.83", "139.817, 245.17, -49.8697, 0.83", "140.331, 246.438, -49.7338, 0.83", "140.929, 247.891, -49.7789, 0.83", "141.907, 249.815, -49.9857, 0.83", "142.985, 251.675, -50.3161, 0.83", "144.118, 253.546, -50.6638, 0.55", "145.078, 255.031, -50.9933, 0.83", "147.172, 258.25, -51.7542, 0.55", "149.008, 260.827, -52.4284, 0.83", "149.646, 261.665, -52.6601, 0.83", "151.118, 263.583, -53.1903, 0.55", "152.486, 265.286, -53.6617, 0.83", "154.593, 267.907, -54.4324, 0.83", "155.99, 269.54, -54.9814, 0.83", "156.966, 270.893, -55.3953, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "0.0597254, 46.2327, -27.2264, 1.94", "-1.03159, 50.57, -28.648, 1.94", "-2.20287, 54.9796, -30.2935, 1.94", "-3.24909, 59.3487, -32.0058, 1.38", "-5.13802, 67.7727, -35.3121, 1.38", "-6.35289, 72.8769, -37.6372, 1.38", "-8.13065, 80.8454, -41.0633, 1.11", "-8.91542, 83.6806, -42.5811, 1.11", "-9.55781, 85.9415, -43.8919, 1.38", "-10.5356, 89.3176, -45.8557, 1.38", "-13.0269, 97.2368, -50.3504, 1.38", "-15.1652, 103.157, -53.9348, 1.38", "-18.6076, 112.275, -59.3329, 1.38", "-19.899, 115.583, -61.4043, 1.38", "-22.4555, 121.965, -65.5606, 1.38", "-26.968, 133.398, -72.9793, 1.11", "-30.6268, 143.059, -78.9038, 1.11", "-32.383, 147.904, -81.8379, 1.11", "-34.9162, 155.45, -86.153, 1.11", "-36.5641, 160.644, -89.1402, 1.11", "-37.763, 164.992, -91.5993, 1.11", "-38.9529, 170.426, -94.6036, 1.11", "-39.4353, 173.263, -96.1196, 1.11", "-41.1455, 184.759, -102.591, 1.11", "-41.6391, 188.624, -104.774, 1.11", "-42.3107, 194.633, -108.381, 1.11", "-42.6904, 198.436, -111.005, 1.11", "-42.964, 201.403, -113.334, 1.11", "-43.3115, 205.646, -116.814, 1.11" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "4.08937, 47.6091, -9.59989, 0.83", "6.04832, 48.782, -9.05093, 0.83", "9.4037, 50.9434, -8.30166, 0.83", "10.9356, 51.7164, -7.3864, 0.83", "13.7486, 53.1582, -5.44226, 0.83", "15.0642, 53.8777, -4.49677, 0.83", "18.2296, 55.7271, -2.22226, 0.83", "20.0261, 56.8547, -0.914642, 0.83", "29.0848, 63.1685, 5.6708, 0.83", "30.6036, 64.4236, 6.74962, 0.83", "31.8803, 65.6958, 7.63879, 0.83", "33.0865, 66.9531, 8.50257, 0.83", "35.4627, 69.7419, 10.1766, 0.83", "36.2657, 70.8392, 10.5775, 0.83", "38.3323, 74.9354, 10.2154, 0.83", "38.589, 75.4236, 10.1695, 0.83", "45.3794, 80.7191, 12.8365, 0.83", "51.8922, 85.7757, 16.4805, 0.83", "58.5311, 90.9951, 19.6345, 0.83", "65.8767, 95.7404, 21.8228, 0.83", "73.8008, 99.9227, 22.8137, 0.83", "80.7694, 105.635, 23.0891, 0.83", "85.9473, 112.962, 22.2122, 0.83", "90.8789, 120.501, 22.5367, 0.83", "95.624, 128.136, 23.2094, 0.83", "99.6494, 136.094, 24.5244, 0.83", "102.542, 144.427, 26.3851, 0.83", "105.093, 153.073, 26.4743, 0.83", "109.814, 160.698, 27.3895, 0.83", "116.546, 166.461, 29.0385, 0.83", "121.618, 173.508, 31.4657, 0.83", "125.907, 180.291, 35.5716, 0.83", "129.721, 187.148, 40.0098, 0.83", "134.585, 193.053, 44.7778, 0.83", "138.41, 199.764, 49.4247, 0.83", "142.77, 207.155, 52.189, 0.83", "147.504, 214.128, 55.3862, 0.83", "153.006, 220.334, 58.9197, 0.83", "158.943, 226.738, 61.156, 0.83", "166.291, 231.404, 63.4998, 0.83", "173.089, 237.036, 65.3246, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "4.08937, 47.6091, -9.59989, 0.83", "1.03476, 55.2817, -15.0745, 0.83", "0.524478, 57.3095, -16.0974, 0.83", "0.220304, 59.009, -16.8126, 0.83", "-0.165474, 61.3508, -17.6547, 0.83", "-0.524654, 63.4475, -18.3581, 0.83", "-0.881422, 65.7765, -19.0891, 0.83", "-1.11782, 68.9555, -19.6619, 0.83", "-1.32255, 71.8356, -20.2099, 0.83", "-1.48088, 74.4373, -20.6974, 0.83", "-1.59988, 78.0741, -21.4126, 0.83", "-1.58734, 80.2213, -21.8721, 0.83", "-1.53, 82.0566, -22.2305, 0.83", "-1.33818, 83.8626, -22.6214, 0.83", "-0.974169, 85.8448, -23.0897, 0.83", "-0.122008, 89.1134, -23.9465, 0.83", "0.372487, 90.8707, -24.3938, 0.83", "0.684675, 92.2184, -24.8045, 0.83", "1.61466, 96.7035, -26.3054, 0.83", "1.97193, 98.6971, -26.9988, 0.83", "2.24905, 100.749, -27.6988, 0.83", "2.46469, 103.638, -28.5637, 0.83", "2.68261, 107.498, -29.7008, 0.83", "2.78067, 109.609, -30.2759, 0.83", "2.77806, 110.544, -30.471, 0.83", "2.72265, 111.934, -30.7264, 0.83", "2.56686, 115.592, -31.2732, 0.83", "2.56588, 117.22, -31.5327, 0.83", "2.60487, 119.579, -31.8677, 0.83", "2.6722, 122.052, -32.2622, 0.83", "2.74787, 123.883, -32.5631, 0.83", "2.97966, 128.166, -33.2828, 0.83", "3.37294, 132.953, -34.068, 0.83", "3.57433, 135.007, -34.3746, 0.83", "3.80038, 136.971, -34.652, 0.83", "4.23906, 139.945, -34.9794, 0.83", "4.77134, 143.489, -35.2775, 0.83", "5.19421, 146.878, -35.3959, 0.83", "5.32328, 148.342, -35.3635, 0.83", "5.54445, 151.487, -35.26, 0.83", "5.66245, 154.095, -35.1468, 0.83", "5.70148, 155.797, -35.0213, 1.11", "5.70133, 158.891, -34.7577, 1.11", "5.58538, 161.893, -34.4965, 1.11", "5.40387, 165.026, -34.1653, 1.11", "5.26912, 167.367, -33.9012, 1.11", "5.16046, 170.323, -33.5822, 0.83", "5.13477, 172.971, -33.2243, 1.38", "5.1797, 174.927, -32.9439, 1.38", "5.28857, 178.058, -32.464, 0.83", "5.307, 179.373, -32.2453, 0.83", "5.34663, 181.434, -31.9315, 0.83", "5.20126, 184.301, -31.7907, 1.11", "4.89717, 186.47, -31.927, 1.38", "4.51413, 188.744, -32.2999, 1.38", "4.27411, 190.173, -32.6104, 1.38", "3.92311, 192.576, -33.1808, 0.83", "3.4762, 196.301, -34.0926, 1.38", "3.23556, 199.052, -34.5921, 0.83", "3.07988, 201.888, -34.9723, 0.83", "3.04852, 204.27, -35.1281, 0.83", "3.16497, 206.92, -35.1339, 1.11", "3.29808, 208.293, -34.9103, 1.11", "3.79371, 212.087, -33.7353, 1.11", "4.11129, 214.518, -32.7467, 1.11", "4.3759, 216.774, -31.6888, 1.11", "4.53781, 218.38, -30.8962, 1.11", "4.98806, 223.387, -28.4818, 1.38", "5.16707, 226.013, -27.3237, 1.11", "5.28033, 228.232, -26.5071, 1.11", "5.3841, 231.333, -25.5202, 1.11", "5.42471, 234.174, -24.7127, 0.83", "5.42812, 237.365, -23.9335, 0.83", "5.42319, 239.2, -23.6118, 0.83", "5.43142, 242.759, -23.0212, 0.83", "5.24047, 246.498, -22.7115, 0.83", "5.07031, 248.376, -22.8671, 0.83", "4.832, 250.196, -23.2013, 0.83", "4.41598, 252.565, -24.0926, 0.83", "4.07512, 254.404, -25.0013, 0.83", "2.97865, 259.439, -27.9067, 1.11", "1.88198, 264.059, -30.9056, 1.38", "1.10124, 267.236, -33.1401, 0.83", "-0.407723, 272.9, -37.3975, 0.83", "-0.920529, 274.804, -38.9318, 0.83", "-1.25374, 276.143, -40.0337, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "4.08937, 47.6091, -9.59989, 1.38", "5.63863, 53.8746, -6.55502, 1.38", "6.4688, 57.2416, -5.10272, 1.38", "7.10247, 59.7278, -4.17435, 1.38", "7.92736, 62.7606, -3.12578, 1.38", "8.8658, 66.2109, -1.93287, 1.38", "9.50865, 68.5744, -1.1157, 1.38", "10.3239, 71.6484, -0.353291, 1.38", "11.0635, 74.4179, 0.394833, 1.38", "11.7142, 76.5664, 0.925907, 1.38" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-7.95999, -50.2023, -23.4575, 0.28", "-8.29569, -50.8093, -23.9322, 0.28", "-8.95902, -52.0087, -24.8701, 0.83", "-10.4296, -54.6678, -26.9495, 0.83", "-12.2423, -57.9455, -29.5126, 0.55", "-12.9353, -59.1987, -30.4926, 0.55", "-14.0099, -61.1417, -32.012, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-7.95999, -50.2023, -23.4575, 0.83", "-8.59762, -52.1828, -25.346, 0.83", "-9.10594, -53.9609, -27.1893, 0.83", "-9.93989, -57.1843, -30.5276, 0.83", "-10.5957, -59.9657, -33.439, 0.83", "-10.7889, -60.7308, -34.3021, 0.83", "-11.4736, -63.2307, -37.2588, 0.83", "-12.2453, -65.9727, -40.5377, 1.11", "-12.7633, -67.8042, -42.7189, 0.83", "-13.5546, -70.5952, -46.3296, 0.83", "-14.3923, -73.7556, -50.7223, 0.83", "-14.9795, -75.8839, -53.7774, 1.38" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-43.3115, 205.646, -116.814, 0.83", "-43.7631, 210.29, -121.404, 0.83", "-44.0939, 213.659, -124.653, 0.83", "-44.6874, 217.417, -128.473, 0.83", "-46.132, 224.976, -136.139, 0.83", "-47.37, 230.672, -141.902, 0.83", "-48.3448, 234.664, -145.896, 1.11", "-49.0096, 236.952, -148.33, 1.11", "-51.1948, 243.155, -155.059, 1.11", "-51.6716, 244.386, -156.325, 1.11", "-52.8442, 247.218, -158.717, 1.11", "-53.6922, 249.114, -160.208, 1.11", "-56.0664, 254.0, -163.926, 1.11", "-57.5322, 256.528, -166.04, 1.11", "-58.521, 258.268, -167.428, 1.11", "-62.2059, 264.539, -172.64, 1.11", "-63.8596, 267.216, -174.909, 1.11", "-65.3912, 269.545, -176.985, 1.11", "-70.2386, 275.765, -182.908, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-43.3115, 205.646, -116.814, 1.11", "-42.6157, 209.421, -116.82, 1.11", "-42.0281, 212.346, -116.843, 1.11", "-41.2818, 216.088, -116.874, 1.11", "-40.7294, 218.809, -116.901, 1.11", "-39.9725, 222.522, -117.168, 0.83", "-39.2917, 225.711, -117.526, 0.83", "-38.6888, 228.679, -117.985, 0.83", "-38.3922, 230.012, -118.249, 0.83", "-38.1229, 231.289, -118.536, 0.83", "-36.9636, 236.098, -119.236, 1.11", "-36.1078, 238.983, -119.373, 1.11", "-34.8477, 242.855, -118.596, 0.55", "-34.4813, 243.854, -118.132, 0.83", "-33.5981, 245.957, -116.196, 0.83", "-31.5801, 250.452, -110.836, 0.83", "-30.7557, 252.165, -108.512, 0.83", "-29.0405, 255.408, -103.831, 1.11", "-28.4436, 256.329, -102.331, 1.11", "-25.6532, 260.699, -95.1705, 1.11", "-25.1169, 261.501, -93.8205, 1.11", "-24.2838, 262.858, -91.7314, 1.11", "-23.3186, 264.397, -89.2945, 1.11", "-19.4238, 269.438, -81.9284, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "11.7142, 76.5664, 0.925907, 0.83", "11.1942, 81.5323, 0.301061, 0.83", "10.7203, 84.7169, 0.109119, 0.83", "10.3909, 86.1123, 0.106477, 0.55", "9.97045, 87.8046, 0.295777, 1.38", "8.87447, 91.9001, 0.812186, 1.38", "8.3154, 94.1098, 1.12223, 1.11", "7.83841, 96.1441, 1.69037, 1.66", "7.12868, 98.9334, 2.61412, 0.55", "6.131, 102.735, 3.44663, 1.38", "5.0809, 106.872, 3.96101, 0.83", "4.46424, 109.428, 4.17773, 1.38", "3.45122, 113.952, 4.44493, 1.11", "2.96015, 115.932, 4.52896, 1.66", "0.671804, 124.704, 4.71003, 0.83", "-0.567888, 128.922, 4.8605, 1.38", "-1.70608, 132.515, 5.14073, 1.11", "-2.70082, 135.614, 5.5615, 1.38", "-3.36804, 137.748, 6.02119, 0.55", "-3.98477, 139.954, 6.79669, 0.83", "-4.74142, 143.038, 8.35831, 1.11", "-5.36101, 145.635, 9.65652, 1.38", "-6.30659, 149.939, 11.6717, 1.11", "-6.71854, 152.478, 12.8366, 0.83", "-6.82983, 153.447, 13.2511, 0.83", "-7.04283, 155.427, 14.0415, 0.83", "-7.2092, 157.718, 15.1056, 0.83", "-7.21821, 159.15, 15.8844, 0.83", "-6.99626, 162.188, 17.8018, 0.83", "-6.74773, 163.941, 19.0266, 0.83", "-6.57729, 164.682, 19.6197, 0.83", "-5.009, 169.914, 24.1846, 0.83", "-4.39847, 171.724, 25.7502, 0.83", "-3.16834, 175.123, 28.8293, 0.83", "-2.5086, 176.814, 30.4121, 0.83", "-1.08482, 180.087, 33.5087, 0.83", "-0.634155, 181.086, 34.3832, 0.83", "0.312902, 183.384, 35.8536, 0.83", "0.730537, 192.723, 38.2246, 0.83", "1.46775, 201.927, 41.0102, 0.83", "2.57659, 210.735, 44.7782, 0.83", "3.81241, 220.059, 46.9102, 0.83", "2.75103, 229.527, 48.4131, 0.83", "0.0148787, 238.764, 48.8698, 0.83", "-1.08064, 248.346, 48.8404, 0.83", "-1.73729, 257.962, 49.1756, 0.83", "-2.42079, 267.572, 48.7363, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "11.7142, 76.5664, 0.925907, 0.83", "12.9191, 79.6425, -0.14077, 0.83", "14.5364, 83.7563, -1.26909, 0.83", "15.0626, 85.0633, -1.56391, 0.83", "15.8362, 86.9026, -1.9241, 0.83", "16.7404, 88.9883, -2.28235, 0.83", "17.9657, 91.7817, -2.71155, 0.83", "18.7326, 93.422, -2.83903, 0.83", "19.7792, 95.412, -2.83492, 0.83", "20.7127, 97.0891, -2.82703, 0.83", "21.5759, 98.4705, -2.83937, 0.83", "21.9727, 99.0665, -2.84097, 0.83", "23.3453, 101.041, -2.80318, 0.83", "25.7972, 104.376, -2.63718, 0.83", "26.6677, 105.585, -2.52358, 1.11", "28.5284, 108.211, -2.2186, 1.11", "30.4996, 111.047, -1.86819, 1.11", "31.6108, 112.68, -1.66755, 1.11", "32.3074, 113.751, -1.53452, 1.11", "33.9992, 116.426, -1.23064, 0.83", "35.2591, 118.458, -1.01096, 0.83", "36.2449, 120.121, -0.880199, 0.83", "37.2244, 121.758, -0.866021, 0.83", "37.9219, 122.868, -0.93562, 0.83", "38.4636, 123.7, -1.01482, 0.83", "39.0353, 124.523, -1.12823, 0.83", "39.8972, 125.76, -1.29882, 0.83", "40.8158, 127.04, -1.48147, 0.83", "41.8651, 128.437, -1.63663, 0.83", "42.8416, 129.734, -1.7494, 0.83", "43.5968, 130.751, -1.82149, 0.83", "44.265, 131.657, -1.87911, 0.83", "44.9517, 132.541, -1.94808, 0.83", "47.3932, 135.744, -2.20614, 0.55", "48.3038, 136.943, -2.31159, 0.55", "49.6526, 138.703, -2.47908, 0.55", "51.0978, 140.614, -2.59823, 1.11", "52.8969, 143.041, -2.6875, 0.55", "53.8174, 144.332, -2.66888, 0.55", "54.8938, 145.938, -2.56467, 0.55", "55.3476, 146.631, -2.48975, 0.55", "56.7823, 148.875, -2.24113, 0.55", "57.2042, 149.56, -2.1391, 0.55", "59.4734, 153.447, -1.42677, 0.55", "61.0697, 156.144, -0.925044, 0.83", "61.544, 156.953, -0.780696, 0.83", "63.8653, 160.931, -0.15704, 1.11", "65.6702, 164.042, 0.232906, 1.11", "67.2333, 166.731, 0.548789, 0.55", "67.978, 168.034, 0.676264, 0.55", "68.7621, 169.42, 0.795297, 0.55", "69.6119, 171.012, 0.911955, 0.83", "70.2789, 172.364, 0.9765, 0.83", "70.3736, 172.566, 0.968124, 0.28", "71.3904, 174.86, 0.802266, 0.28", "71.8461, 176.044, 0.734807, 0.83", "72.3872, 177.59, 0.714655, 0.83", "72.756, 178.654, 0.73266, 0.83", "73.0391, 179.528, 0.694636, 0.83", "73.4528, 180.901, 0.580306, 0.83", "73.8887, 182.185, 0.417908, 0.83", "74.5654, 184.008, 0.139713, 0.83", "75.6808, 186.816, -0.340815, 0.55", "76.8911, 189.731, -0.8741, 0.55", "77.8392, 191.913, -1.29194, 1.38", "79.0675, 194.635, -1.83029, 0.55", "79.9665, 196.517, -2.21694, 0.55", "80.4941, 197.589, -2.43735, 0.55", "80.9745, 198.58, -2.58931, 0.83", "81.7354, 200.23, -2.712, 0.83", "82.3441, 201.725, -2.80514, 0.83", "82.7068, 202.794, -2.85325, 0.83", "83.3721, 204.607, -2.94797, 0.83", "83.8671, 205.86, -3.02269, 0.83", "84.5033, 207.301, -3.12622, 0.83", "85.2202, 208.748, -3.25067, 0.83", "85.8964, 210.004, -3.37288, 0.83", "87.4084, 212.813, -3.64612, 0.83", "88.9588, 215.521, -3.93389, 0.83", "89.6679, 216.659, -4.06997, 0.83", "90.4604, 217.845, -4.2258, 0.83", "91.1915, 218.929, -4.37004, 0.83", "92.3242, 220.651, -4.59162, 0.83", "97.364, 227.011, -4.25581, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-14.0099, -61.1417, -32.012, 0.55", "-15.4612, -61.7191, -32.9388, 0.55", "-16.4238, -62.1394, -33.5557, 0.55", "-19.5579, -63.487, -35.6411, 0.83", "-21.1234, -64.1555, -36.6317, 0.28", "-22.2414, -64.6421, -37.3208, 0.55", "-26.673, -66.7483, -40.2134, 0.28", "-27.6317, -67.222, -40.8529, 0.83", "-31.4262, -69.2381, -43.412, 0.55", "-32.3346, -69.7816, -44.0178, 0.55", "-33.9063, -70.7201, -45.075, 0.55", "-37.1677, -72.5815, -47.3344, 0.55", "-38.8401, -73.4799, -48.4948, 0.55", "-40.2649, -74.165, -49.5732, 0.55", "-41.5593, -74.758, -50.5721, 0.28", "-45.3664, -76.3807, -53.6452, 0.83", "-49.8925, -78.1497, -57.3218, 0.55", "-53.3606, -79.3985, -60.1531, 0.55", "-56.6234, -80.5354, -62.9014, 0.28", "-57.6875, -80.8899, -63.7826, 0.55", "-61.0318, -82.0019, -66.533, 0.28", "-61.8725, -82.3036, -67.223, 0.55", "-63.1861, -82.8305, -68.248, 0.28", "-63.8843, -83.1847, -68.7838, 0.55", "-65.5684, -84.2642, -70.0991, 0.28", "-66.0752, -84.647, -70.5404, 0.55", "-66.9874, -85.5435, -71.4767, 0.28", "-67.3364, -85.9618, -71.9521, 0.55", "-68.2047, -87.3301, -73.586, 0.28", "-68.6387, -88.148, -74.6163, 0.55", "-68.9474, -88.8005, -75.4622, 0.28", "-69.509, -90.0221, -77.0401, 0.55", "-70.1003, -91.1311, -78.4669, 0.28", "-70.6039, -91.9389, -79.4954, 0.55", "-71.4694, -93.1327, -80.8727, 0.28", "-72.1428, -93.911, -81.7283, 0.55", "-72.9688, -94.8265, -82.6534, 0.28", "-74.4857, -96.4458, -84.1503, 0.55", "-76.469, -98.5344, -85.9433, 0.28", "-77.7954, -99.8557, -87.0615, 0.55", "-79.9048, -102.022, -88.8097, 0.28", "-80.5203, -102.629, -89.3262, 0.55", "-81.6109, -103.667, -90.2246, 0.28", "-82.7299, -104.736, -91.1905, 0.55", "-84.7808, -106.652, -92.9561, 0.83", "-85.5604, -107.33, -93.6476, 0.83", "-88.5543, -109.9, -96.2254, 0.28", "-89.0241, -110.264, -96.6272, 0.55", "-90.5453, -111.42, -97.8963, 0.28", "-91.6003, -112.186, -98.8221, 0.55", "-93.4537, -113.571, -100.5, 0.28", "-94.7216, -114.517, -101.681, 0.83", "-97.6388, -116.954, -104.484, 0.28", "-98.4585, -117.706, -105.316, 0.83", "-100.913, -120.27, -107.907, 0.28", "-101.273, -120.742, -108.348, 0.55", "-101.514, -121.157, -108.704, 0.28", "-102.089, -122.5, -109.798, 0.28", "-101.99, -123.431, -110.084, 0.55", "-101.359, -125.052, -110.026, 0.28", "-100.341, -126.83, -109.385, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-14.0099, -61.1417, -32.012, 0.55", "-13.9754, -62.2939, -31.9483, 0.55", "-13.9108, -63.0874, -31.9055, 0.55", "-13.898, -63.1986, -31.8995, 0.28", "-13.7577, -64.2143, -31.8455, 0.55", "-13.6218, -65.3597, -31.775, 0.55", "-13.5806, -65.7155, -31.7557, 0.28", "-13.5106, -66.346, -31.7213, 0.55", "-13.4961, -66.8131, -31.7017, 0.28", "-13.498, -67.2806, -31.6969, 0.55", "-13.5206, -67.8654, -31.7105, 0.28", "-13.6293, -69.162, -31.7768, 0.55", "-13.6867, -69.6257, -31.8053, 0.28", "-13.7788, -70.238, -31.8448, 0.55", "-13.8709, -70.7907, -31.8756, 0.28", "-13.8935, -70.95, -31.8933, 0.55", "-14.0038, -71.8672, -32.0209, 0.28", "-14.0844, -72.542, -32.1323, 0.55", "-14.1509, -73.2068, -32.2493, 0.55", "-14.2795, -74.4012, -32.4514, 0.55", "-14.4613, -75.6152, -32.6508, 0.55", "-14.5998, -76.4115, -32.8096, 0.55", "-14.7114, -77.0412, -32.9693, 0.28", "-14.7564, -77.2768, -33.0531, 0.55", "-14.8288, -77.6625, -33.2143, 0.28", "-14.9055, -78.1695, -33.4488, 0.55", "-15.0204, -78.9431, -33.8079, 0.28", "-15.2182, -80.4425, -34.558, 0.55", "-15.3919, -81.9341, -35.3042, 0.28", "-15.4196, -82.2312, -35.4612, 0.55", "-15.4727, -82.8656, -35.8038, 0.28", "-15.4908, -83.1504, -35.9446, 0.55", "-15.5176, -83.4469, -36.0571, 0.28", "-15.5641, -83.9868, -36.2208, 0.55", "-15.6574, -84.817, -36.3831, 0.28", "-15.7494, -85.3708, -36.4807, 0.55", "-15.9374, -86.1513, -36.5945, 0.28", "-16.2059, -87.0393, -36.749, 0.28", "-16.554, -87.9876, -36.9371, 0.55", "-17.0132, -89.0369, -37.1688, 0.55", "-17.4114, -89.8376, -37.3755, 0.28", "-17.8304, -90.6517, -37.6614, 0.55", "-18.2968, -91.5232, -38.0142, 0.55", "-18.6129, -92.1176, -38.2755, 0.28", "-18.9916, -92.8925, -38.6184, 0.28", "-19.5254, -94.1738, -39.1449, 0.55", "-20.059, -95.741, -39.6989, 0.28", "-20.3048, -96.6404, -39.9585, 0.83", "-20.4115, -97.1248, -40.0656, 0.55", "-20.6829, -98.5082, -40.3019, 0.28", "-20.9067, -99.8625, -40.4143, 0.55", "-21.0261, -100.876, -40.3737, 0.28", "-21.0848, -101.552, -40.2734, 0.55", "-21.1291, -102.172, -40.136, 0.28", "-21.1795, -102.795, -39.9557, 0.55", "-21.281, -103.751, -39.6308, 0.28", "-21.4117, -104.646, -39.4219, 0.28", "-21.4681, -104.978, -39.3659, 0.55", "-21.6466, -105.916, -39.2726, 0.28", "-21.7577, -106.417, -39.2649, 0.55", "-22.0264, -107.562, -39.398, 0.28", "-22.4567, -109.061, -39.7986, 0.55", "-22.6133, -109.53, -39.9678, 0.28", "-22.7843, -110.053, -40.2234, 0.55", "-22.988, -110.743, -40.6234, 0.28", "-23.2163, -111.613, -41.1699, 0.55", "-23.4126, -112.399, -41.671, 0.28", "-23.5133, -112.829, -41.9132, 0.55", "-23.7601, -114.006, -42.5176, 0.28", "-23.9131, -114.899, -42.9781, 0.83", "-24.0069, -115.523, -43.2748, 0.28", "-24.1271, -116.102, -43.535, 0.55", "-24.2453, -116.533, -43.7189, 0.28", "-24.4513, -117.209, -44.0067, 0.55", "-25.0622, -118.843, -44.6683, 0.28", "-25.2147, -119.18, -44.8383, 0.55", "-25.8013, -120.324, -45.5075, 0.28", "-26.0527, -120.772, -45.8296, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-14.9795, -75.8839, -53.7774, 0.55", "-15.537, -78.0252, -55.8376, 0.55", "-15.6755, -78.5633, -56.2959, 0.83", "-16.1907, -80.0919, -57.5161, 0.28", "-16.5553, -81.0275, -58.297, 0.55", "-17.0051, -82.1245, -59.2479, 0.28", "-17.4469, -83.0063, -60.0126, 0.55", "-17.863, -83.7679, -60.6573, 0.28", "-18.6206, -85.0341, -61.7119, 0.55", "-19.3737, -86.1856, -62.6577, 0.28", "-19.9771, -87.041, -63.5115, 0.55", "-21.287, -88.687, -65.3752, 0.55", "-22.0701, -89.6258, -66.6112, 0.55", "-22.6026, -90.2678, -67.5325, 0.28", "-23.5775, -91.4856, -69.4854, 0.55", "-25.0303, -93.3579, -72.6784, 0.83", "-25.625, -94.1096, -74.1193, 0.55", "-26.394, -95.1848, -76.3662, 0.28", "-26.5837, -95.4682, -76.9658, 0.83", "-27.3337, -96.7941, -79.6772, 0.28", "-27.4976, -97.1601, -80.3406, 0.55", "-27.8982, -98.3721, -82.128, 0.28", "-28.1115, -99.2245, -83.2188, 0.55", "-28.3603, -100.252, -84.3029, 0.28", "-28.5154, -101.116, -85.0105, 0.55", "-28.6533, -102.358, -85.641, 0.28", "-28.684, -103.148, -85.8732, 0.55", "-28.6259, -103.935, -85.935, 0.28", "-28.5365, -104.805, -85.8913, 0.55", "-28.2134, -106.494, -85.6584, 0.28", "-28.112, -107.007, -85.62, 0.55", "-27.8305, -108.578, -85.577, 0.28", "-27.777, -109.321, -85.7134, 0.55", "-27.8129, -110.206, -86.0505, 0.28", "-27.9323, -110.841, -86.4273, 0.55", "-28.4045, -112.784, -87.6989, 0.28", "-28.5497, -113.364, -88.1217, 0.83", "-29.058, -115.174, -89.5306, 0.28", "-29.2366, -115.783, -89.9999, 0.55", "-29.6044, -116.98, -90.9153, 0.28", "-30.174, -118.855, -92.2291, 0.55", "-30.7501, -121.016, -93.5441, 0.28", "-30.9224, -121.72, -93.9149, 0.55", "-31.1674, -122.84, -94.4131, 0.28", "-31.4269, -124.03, -94.9513, 0.55", "-31.6073, -124.88, -95.326, 0.28", "-31.7353, -125.375, -95.5643, 0.55", "-31.9924, -126.532, -96.0187, 0.28", "-32.2482, -128.15, -96.6127, 0.83", "-32.4232, -129.684, -97.1457, 0.28", "-32.5234, -130.875, -97.5327, 0.28", "-32.6242, -132.071, -97.9073, 0.28", "-32.7626, -133.374, -98.2639, 0.55", "-32.8701, -134.308, -98.4746, 0.28", "-32.8853, -134.482, -98.4939, 0.55", "-33.0604, -136.014, -98.6717, 0.28", "-33.3363, -137.675, -98.9231, 0.28", "-33.4891, -138.592, -99.1075, 0.55", "-33.5882, -139.117, -99.2607, 0.28", "-33.7738, -140.125, -99.5907, 0.55", "-34.0669, -142.019, -100.225, 0.28", "-34.1101, -142.489, -100.388, 0.55", "-34.1404, -143.234, -100.647, 0.28", "-34.1225, -143.574, -100.75, 0.55", "-34.0506, -144.452, -100.942, 0.28", "-33.974, -145.232, -101.019, 0.55", "-33.9013, -145.961, -101.017, 0.28", "-33.883, -146.134, -101.017, 0.55", "-33.8029, -147.312, -101.005, 0.28", "-33.7435, -148.201, -100.997, 0.55", "-33.6375, -149.827, -100.983, 0.28", "-33.5711, -150.609, -100.98, 0.83", "-33.4895, -151.634, -100.975, 0.28", "-33.4067, -152.651, -100.968, 0.55", "-33.3583, -153.6, -100.953, 0.28", "-33.2855, -154.479, -100.944, 0.55", "-33.2298, -155.111, -100.937, 0.28", "-33.1912, -155.669, -100.927, 0.55", "-33.1385, -157.251, -100.885, 0.28", "-33.1124, -158.128, -100.847, 0.55", "-33.1574, -159.395, -100.779, 0.28", "-33.2155, -159.941, -100.822, 0.55", "-33.4018, -160.805, -100.972, 0.28", "-33.4423, -160.979, -101.002, 0.55", "-33.6276, -161.716, -101.149, 0.28", "-33.8334, -162.508, -101.397, 0.55", "-34.4738, -164.775, -102.245, 0.28", "-34.9115, -166.347, -102.91, 0.55", "-35.3885, -167.987, -103.641, 0.28", "-35.5719, -168.639, -103.907, 0.55", "-36.1633, -170.735, -104.679, 0.28", "-36.4708, -171.954, -105.012, 0.55", "-36.7061, -172.913, -105.167, 0.28", "-36.8459, -173.533, -105.243, 0.55", "-37.1822, -175.317, -105.361, 0.28", "-37.3279, -176.341, -105.388, 0.55", "-37.4897, -177.807, -105.363, 0.28", "-37.5503, -178.834, -105.37, 0.55", "-37.5932, -180.08, -105.389, 0.28", "-37.6442, -181.656, -105.446, 0.55", "-37.6993, -183.629, -105.547, 0.28", "-37.7239, -185.531, -105.645, 0.55", "-37.7475, -187.099, -105.724, 0.28", "-37.7474, -188.538, -105.766, 0.55", "-37.7455, -189.287, -105.766, 0.28", "-37.7292, -190.4, -105.709, 0.55", "-37.6128, -191.975, -105.548, 0.28", "-37.566, -192.374, -105.512, 0.55", "-37.4012, -193.656, -105.418, 0.28", "-37.3001, -194.208, -105.398, 0.55", "-37.1862, -194.941, -105.378, 0.28", "-37.1153, -195.86, -105.355, 0.55", "-37.1281, -196.271, -105.337, 0.28", "-37.2117, -196.787, -105.301, 0.55", "-38.1374, -199.253, -105.014, 0.28", "-38.6488, -200.375, -104.861, 0.55", "-39.0762, -201.138, -104.735, 0.28", "-39.5787, -201.867, -104.577, 0.55", "-40.2519, -202.666, -104.366, 0.28", "-41.2111, -203.416, -104.087, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-14.9795, -75.8839, -53.7774, 0.28", "-14.9466, -76.7464, -55.4315, 0.28", "-14.8536, -77.5565, -56.9778, 0.55", "-14.8047, -77.8797, -57.734, 0.28", "-14.7569, -78.1559, -58.386, 0.55", "-14.2803, -80.9397, -64.7353, 0.28", "-14.1934, -81.3783, -65.6864, 0.55", "-13.9816, -82.6583, -68.2927, 0.55", "-13.7767, -84.0149, -70.9333, 0.55", "-13.5057, -85.6338, -73.8027, 0.83", "-13.2269, -86.8817, -75.7576, 0.28", "-12.784, -88.2143, -77.4918, 0.55", "-12.2582, -89.8144, -79.3824, 0.55", "-11.6749, -91.7306, -81.2478, 0.28", "-11.353, -92.7515, -82.1105, 0.55", "-10.6954, -94.483, -83.4735, 0.28", "-10.2877, -95.4026, -84.2274, 0.55", "-9.36022, -97.4118, -85.9418, 0.28", "-8.88336, -98.3705, -86.8395, 0.55", "-8.12602, -99.7181, -88.1427, 0.28", "-7.0014, -101.662, -90.1023, 0.83", "-5.06009, -105.002, -93.5312, 0.28", "-4.23181, -106.365, -95.0101, 0.55", "-2.76511, -108.555, -97.525, 0.28", "-2.18311, -109.393, -98.5491, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-2.18311, -109.393, -98.5491, 0.28", "-1.71517, -110.407, -99.5116, 0.28", "-1.55822, -110.677, -99.875, 0.55", "-0.771463, -111.791, -101.5, 0.28", "-0.140039, -112.657, -102.697, 0.55", "0.497348, -113.64, -104.082, 0.28", "0.642367, -113.877, -104.413, 0.55", "1.7194, -115.761, -107.325, 0.28", "2.23192, -116.656, -108.905, 0.55", "2.72593, -117.621, -110.716, 0.28", "3.35701, -119.023, -113.392, 0.55", "3.73566, -120.128, -115.444, 0.55", "4.35272, -122.273, -119.236, 0.55", "4.79696, -123.954, -122.121, 0.55", "5.13992, -125.313, -124.43, 0.28", "5.36005, -126.055, -125.683, 0.55", "6.10798, -128.291, -129.207, 0.28", "6.39667, -129.128, -130.474, 0.83", "7.17544, -130.989, -133.156, 0.28", "7.39107, -131.47, -133.826, 0.55", "7.7477, -132.181, -134.906, 0.55", "8.52145, -133.779, -137.621, 0.55", "8.77189, -134.314, -138.732, 0.55", "9.14502, -135.396, -141.139, 0.28", "9.31009, -136.029, -142.685, 0.55", "9.63752, -137.33, -145.91, 0.28", "9.86697, -138.366, -148.361, 0.55", "10.3869, -140.756, -153.964, 0.28", "10.5082, -141.586, -155.852, 0.55", "10.7702, -144.017, -161.321, 0.28", "10.8786, -144.969, -163.482, 0.55", "11.0472, -146.101, -165.956, 0.55", "11.3165, -147.712, -169.264, 0.28", "11.6797, -149.793, -173.299, 0.55", "11.7885, -150.448, -174.534, 0.55", "12.0853, -152.621, -178.392, 0.28", "12.1428, -153.164, -179.385, 0.55", "12.2683, -154.297, -181.507, 0.28", "12.3838, -155.169, -182.957, 0.55", "12.5364, -156.092, -184.37, 0.28", "12.6905, -157.18, -185.889, 0.55", "12.9218, -158.772, -187.798, 0.28", "13.149, -160.001, -189.102, 0.55", "13.7356, -162.611, -191.363, 0.28", "14.3988, -164.189, -192.893, 0.55", "14.9238, -165.149, -193.812, 0.28", "15.4549, -165.959, -194.509, 0.55", "16.0243, -166.71, -195.137, 0.28", "17.2061, -168.183, -196.674, 0.55", "19.2912, -170.585, -200.375, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-2.18311, -109.393, -98.5491, 0.55", "-0.542241, -109.922, -97.8391, 0.55", "2.46981, -110.975, -96.6995, 0.55", "4.05964, -111.559, -96.0876, 0.28", "5.89391, -112.246, -95.335, 0.83", "7.11582, -112.737, -94.885, 0.28", "8.61047, -113.36, -94.377, 0.28", "9.28025, -113.666, -94.1881, 0.55", "11.2016, -114.706, -93.7176, 0.28", "12.2387, -115.299, -93.4857, 0.55", "13.8746, -116.345, -93.0822, 0.28", "14.0776, -116.482, -93.0345, 0.55", "16.1156, -117.847, -92.2818, 0.28", "17.2935, -118.632, -91.8785, 0.55", "19.0832, -119.77, -91.3307, 0.28", "19.9366, -120.274, -91.0595, 0.55", "21.6768, -121.138, -90.4786, 0.28", "24.5878, -122.403, -89.462, 0.28", "26.4325, -123.042, -88.8906, 0.55", "27.0941, -123.19, -88.7525, 0.28", "27.3369, -123.219, -88.7309, 0.55", "29.2766, -123.2, -88.6512, 0.55", "31.1062, -122.977, -88.7004, 0.28", "32.2169, -122.738, -88.7681, 0.55", "34.3789, -122.165, -88.8203, 0.28", "35.3319, -121.904, -88.8543, 0.55", "36.5845, -121.526, -88.9175, 0.28", "38.189, -120.959, -89.0357, 0.55", "40.2152, -120.21, -89.2526, 0.28", "41.5769, -119.707, -89.2371, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_15", "dend_0", "dend_33", "dend_16", "dend_14", "dend_1", "dend_35", "dend_34", "dend_20", "dend_17", "dend_2", "dend_37", "dend_36", "dend_32", "dend_21", "dend_19", "dend_18", "dend_9", "dend_3", "dend_23", "dend_22", "dend_13", "dend_10", "dend_8", "dend_7", "dend_4", "dend_29", "dend_24", "dend_12", "dend_11", "dend_6", "dend_5", "dend_31", "dend_30", "dend_28", "dend_25", "dend_27", "dend_26" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_15", "dend_0", "dend_33", "dend_16", "dend_14", "dend_1", "dend_35", "dend_34", "dend_20", "dend_17", "dend_2", "dend_37", "dend_36", "dend_32", "dend_21", "dend_19", "dend_18", "dend_9", "dend_3", "dend_23", "dend_22", "dend_13", "dend_10", "dend_8", "dend_7", "dend_4", "dend_29", "dend_24", "dend_12", "dend_11", "dend_6", "dend_5", "dend_31", "dend_30", "dend_28", "dend_25", "dend_27", "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "axon_0", "axon_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_2", "dend_2", "dend_2", "dend_2", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_3", "dend_3", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L23_DBC_4d1e2d44e8_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_33, id: dend_33, parent: dend_15
create dend_33
public dend_33
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_20
create dend_32
public dend_32
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_2
create dend_9
public dend_9
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_3
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_15, dend_0, dend_33, dend_16, dend_14, dend_1, dend_35, dend_34, dend_20, dend_17, dend_2, dend_37, dend_36, dend_32, dend_21, dend_19, dend_18, dend_9, dend_3, dend_23, dend_22, dend_13, dend_10, dend_8, dend_7, dend_4, dend_29, dend_24, dend_12, dend_11, dend_6, dend_5, dend_31, dend_30, dend_28, dend_25, dend_27, dend_26]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_15, dend_0, dend_33, dend_16, dend_14, dend_1, dend_35, dend_34, dend_20, dend_17, dend_2, dend_37, dend_36, dend_32, dend_21, dend_19, dend_18, dend_9, dend_3, dend_23, dend_22, dend_13, dend_10, dend_8, dend_7, dend_4, dend_29, dend_24, dend_12, dend_11, dend_6, dend_5, dend_31, dend_30, dend_28, dend_25, dend_27, dend_26]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_16
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_15, dend_15, dend_15, dend_0, dend_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_3, dend_3, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_15(0), soma_0(0.4999996983969059)
    connect dend_0(0), soma_0(0.4999996983969059)
    connect axon_0(0), soma_0(1.0)
    connect dend_33(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_3(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.10046, -10.7769, 0.0, 1.2583 ) }
    soma_0 { pt3dadd( -0.977881, -9.66658, 0.0, 1.27734 ) }
    soma_0 { pt3dadd( -0.855301, -8.55625, 0.0, 1.93125 ) }
    soma_0 { pt3dadd( -0.732721, -7.44592, 0.0, 2.73299 ) }
    soma_0 { pt3dadd( -0.610142, -6.33559, 0.0, 3.81421 ) }
    soma_0 { pt3dadd( -0.487562, -5.22526, 0.0, 4.86299 ) }
    soma_0 { pt3dadd( -0.364982, -4.11493, 0.0, 5.49704 ) }
    soma_0 { pt3dadd( -0.242403, -3.0046, 0.0, 6.12703 ) }
    soma_0 { pt3dadd( -0.119823, -1.89427, 0.0, 6.84433 ) }
    soma_0 { pt3dadd( 0.00275685, -0.783937, 0.0, 7.36999 ) }
    soma_0 { pt3dadd( 0.125337, 0.326393, 0.0, 7.59231 ) }
    soma_0 { pt3dadd( 0.247916, 1.43672, 0.0, 7.67062 ) }
    soma_0 { pt3dadd( 0.370496, 2.54705, 0.0, 7.50992 ) }
    soma_0 { pt3dadd( 0.493076, 3.65738, 0.0, 7.33464 ) }
    soma_0 { pt3dadd( 0.615655, 4.76771, 0.0, 7.00391 ) }
    soma_0 { pt3dadd( 0.738235, 5.87804, 0.0, 6.54709 ) }
    soma_0 { pt3dadd( 0.860815, 6.98838, 0.0, 5.62524 ) }
    soma_0 { pt3dadd( 0.983394, 8.09871, 0.0, 4.30117 ) }
    soma_0 { pt3dadd( 1.10597, 9.20904, 0.0, 3.55313 ) }
    soma_0 { pt3dadd( 1.22855, 10.3194, 0.0, 2.60096 ) }
    soma_0 { pt3dadd( 1.35113, 11.4297, 0.0, 1.60168 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 21/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -0.382575, -10.9767, -3.38, 1.94 ) }
    dend_15 { pt3dadd( 0.352478, -14.4877, -3.38, 1.94 ) }
    dend_15 { pt3dadd( 0.998777, -17.5747, -3.38, 1.94 ) }
    dend_15 { pt3dadd( 1.275, -18.894, -3.38, 3.6 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 25/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.29743, 11.5533, -4.34, 1.66 ) }
    dend_0 { pt3dadd( 2.40703, 16.5765, -3.87226, 1.66 ) }
    dend_0 { pt3dadd( 2.46947, 19.4383, -3.60578, 1.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 28/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.35113, 11.4297, 0.0, 0.55 ) }
    axon_0 { pt3dadd( 2.99712, 26.3391, 0.0, 0.55 ) }
    axon_0 { pt3dadd( 4.64311, 41.2485, 0.0, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_15 (entry count 31/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 1.275, -18.894, -3.38, 0.83 ) }
    dend_33 { pt3dadd( 3.55434, -20.327, -2.97608, 0.83 ) }
    dend_33 { pt3dadd( 5.84117, -21.7019, -2.55728, 0.83 ) }
    dend_33 { pt3dadd( 8.38891, -23.2267, -2.07559, 0.83 ) }
    dend_33 { pt3dadd( 11.1477, -24.7064, -1.54223, 0.83 ) }
    dend_33 { pt3dadd( 14.3082, -26.3655, -0.921914, 0.83 ) }
    dend_33 { pt3dadd( 15.9362, -27.2111, -0.598118, 0.83 ) }
    dend_33 { pt3dadd( 18.5006, -28.5201, -0.0713022, 0.83 ) }
    dend_33 { pt3dadd( 21.2907, -29.8075, 0.672618, 0.83 ) }
    dend_33 { pt3dadd( 23.5464, -30.7738, 1.42345, 0.83 ) }
    dend_33 { pt3dadd( 25.2716, -31.5789, 2.10605, 0.83 ) }
    dend_33 { pt3dadd( 26.9583, -32.4115, 2.84213, 0.83 ) }
    dend_33 { pt3dadd( 27.3349, -32.6229, 2.98771, 0.83 ) }
    dend_33 { pt3dadd( 30.4468, -34.5712, 4.03158, 0.83 ) }
    dend_33 { pt3dadd( 33.5245, -36.6124, 5.05782, 0.83 ) }
    dend_33 { pt3dadd( 35.7607, -38.2309, 5.77551, 0.83 ) }
    dend_33 { pt3dadd( 37.2749, -39.3017, 6.21796, 0.83 ) }
    dend_33 { pt3dadd( 40.3551, -41.5744, 6.9465, 1.11 ) }
    dend_33 { pt3dadd( 42.8054, -43.4777, 7.28096, 1.11 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 50/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 1.275, -18.894, -3.38, 1.94 ) }
    dend_16 { pt3dadd( 1.91224, -22.817, -1.54296, 1.94 ) }
    dend_16 { pt3dadd( 2.28202, -25.0934, -0.476953, 2.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.46947, 19.4383, -3.60578, 0.83 ) }
    dend_14 { pt3dadd( -0.740633, 22.7588, -2.90024, 0.83 ) }
    dend_14 { pt3dadd( -2.04235, 24.3435, -2.55033, 0.83 ) }
    dend_14 { pt3dadd( -3.88191, 26.9468, -1.98452, 0.83 ) }
    dend_14 { pt3dadd( -5.60305, 29.6713, -1.39219, 0.83 ) }
    dend_14 { pt3dadd( -7.18617, 32.7752, -0.791126, 0.83 ) }
    dend_14 { pt3dadd( -8.15098, 34.8267, -0.401217, 0.83 ) }
    dend_14 { pt3dadd( -9.12466, 37.7212, 0.167707, 0.83 ) }
    dend_14 { pt3dadd( -9.82079, 40.5768, 0.634052, 0.83 ) }
    dend_14 { pt3dadd( -10.4467, 44.3129, 1.14193, 0.83 ) }
    dend_14 { pt3dadd( -11.0178, 48.8068, 1.68756, 0.83 ) }
    dend_14 { pt3dadd( -11.3139, 51.3358, 1.98555, 0.83 ) }
    dend_14 { pt3dadd( -11.9407, 57.2439, 2.65833, 0.83 ) }
    dend_14 { pt3dadd( -12.218, 60.641, 3.01537, 0.83 ) }
    dend_14 { pt3dadd( -12.3601, 62.7001, 3.22246, 0.83 ) }
    dend_14 { pt3dadd( -12.5947, 66.7691, 3.61508, 0.83 ) }
    dend_14 { pt3dadd( -12.7944, 69.4533, 3.8902, 0.83 ) }
    dend_14 { pt3dadd( -13.0624, 73.1753, 4.2685, 0.83 ) }
    dend_14 { pt3dadd( -13.4596, 76.2289, 4.64255, 0.83 ) }
    dend_14 { pt3dadd( -14.0302, 79.4276, 5.0898, 0.83 ) }
    dend_14 { pt3dadd( -14.6769, 82.2887, 5.53883, 0.83 ) }
    dend_14 { pt3dadd( -15.1195, 83.9741, 5.82548, 0.83 ) }
    dend_14 { pt3dadd( -15.5181, 85.2718, 6.06691, 0.83 ) }
    dend_14 { pt3dadd( -16.5504, 87.9616, 6.64137, 0.55 ) }
    dend_14 { pt3dadd( -18.5848, 93.0265, 7.75559, 1.11 ) }
    dend_14 { pt3dadd( -19.8851, 96.3836, 8.47685, 1.11 ) }
    dend_14 { pt3dadd( -21.4496, 100.718, 9.36702, 1.11 ) }
    dend_14 { pt3dadd( -22.2093, 103.179, 9.82626, 1.11 ) }
    dend_14 { pt3dadd( -23.2813, 107.171, 10.5137, 0.83 ) }
    dend_14 { pt3dadd( -24.5078, 112.224, 11.3369, 0.55 ) }
    dend_14 { pt3dadd( -25.1023, 114.758, 11.7424, 0.55 ) }
    dend_14 { pt3dadd( -26.6353, 121.923, 12.8359, 0.83 ) }
    dend_14 { pt3dadd( -27.3183, 125.339, 13.3399, 0.83 ) }
    dend_14 { pt3dadd( -27.8741, 128.289, 13.763, 0.83 ) }
    dend_14 { pt3dadd( -28.7763, 133.349, 14.4704, 0.83 ) }
    dend_14 { pt3dadd( -29.2651, 135.892, 14.8387, 0.83 ) }
    dend_14 { pt3dadd( -29.7728, 138.431, 15.2134, 0.83 ) }
    dend_14 { pt3dadd( -30.3447, 141.309, 15.6368, 0.83 ) }
    dend_14 { pt3dadd( -30.7047, 142.89, 15.8859, 0.83 ) }
    dend_14 { pt3dadd( -31.6547, 147.507, 16.5769, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 2.46947, 19.4383, -3.60578, 0.83 ) }
    dend_1 { pt3dadd( 0.838455, 22.95, -3.15504, 0.83 ) }
    dend_1 { pt3dadd( -0.778896, 26.4323, -2.70808, 1.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 96/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.64311, 41.2485, 0.0, 0.55 ) }
    axon_1 { pt3dadd( 6.28909, 56.158, 0.0, 0.55 ) }
    axon_1 { pt3dadd( 7.93508, 71.0674, 0.0, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 99/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 42.8054, -43.4777, 7.28096, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_35 { pt3dadd( 44.5971, -44.2531, 7.72452, 0.83 ) }
    dend_35 { pt3dadd( 46.968, -45.4221, 8.30595, 0.83 ) }
    dend_35 { pt3dadd( 47.8744, -45.9722, 8.54208, 0.55 ) }
    dend_35 { pt3dadd( 49.4291, -47.0624, 8.96117, 0.83 ) }
    dend_35 { pt3dadd( 50.7325, -47.9985, 9.1957, 0.83 ) }
    dend_35 { pt3dadd( 51.5886, -48.6641, 9.30728, 0.55 ) }
    dend_35 { pt3dadd( 52.1322, -49.2062, 9.33676, 0.83 ) }
    dend_35 { pt3dadd( 53.1093, -50.3277, 9.25164, 0.55 ) }
    dend_35 { pt3dadd( 53.9112, -51.228, 9.09738, 0.83 ) }
    dend_35 { pt3dadd( 55.8147, -53.2701, 8.09067, 0.55 ) }
    dend_35 { pt3dadd( 56.5883, -54.0499, 7.50725, 0.28 ) }
    dend_35 { pt3dadd( 57.1049, -54.5907, 7.06823, 0.55 ) }
    dend_35 { pt3dadd( 58.2593, -55.8159, 6.01138, 0.28 ) }
    dend_35 { pt3dadd( 58.7783, -56.3734, 5.53268, 0.55 ) }
    dend_35 { pt3dadd( 61.307, -59.3837, 2.96769, 0.28 ) }
    dend_35 { pt3dadd( 62.4375, -60.8507, 1.81496, 0.83 ) }
    dend_35 { pt3dadd( 63.8775, -62.663, 0.474987, 0.55 ) }
    dend_35 { pt3dadd( 64.3573, -63.2429, 0.0769126, 0.28 ) }
    dend_35 { pt3dadd( 65.3385, -64.4792, -0.671608, 1.11 ) }
    dend_35 { pt3dadd( 67.3712, -67.0698, -1.97365, 0.28 ) }
    dend_35 { pt3dadd( 68.2331, -68.1383, -2.3369, 0.83 ) }
    dend_35 { pt3dadd( 68.9048, -68.924, -2.58432, 0.28 ) }
    dend_35 { pt3dadd( 69.9633, -69.9347, -2.9726, 0.55 ) }
    dend_35 { pt3dadd( 70.652, -70.5385, -3.21982, 0.28 ) }
    dend_35 { pt3dadd( 72.2668, -71.8823, -3.77355, 0.83 ) }
    dend_35 { pt3dadd( 73.2672, -72.7014, -4.04897, 0.55 ) }
    dend_35 { pt3dadd( 73.9905, -73.2878, -4.26011, 0.55 ) }
    dend_35 { pt3dadd( 75.8013, -74.8414, -4.77409, 0.83 ) }
    dend_35 { pt3dadd( 77.1394, -76.0603, -5.11047, 0.55 ) }
    dend_35 { pt3dadd( 77.9319, -76.7767, -5.31608, 0.83 ) }
    dend_35 { pt3dadd( 78.6366, -77.4508, -5.51508, 0.55 ) }
    dend_35 { pt3dadd( 79.6431, -78.4798, -5.78021, 0.55 ) }
    dend_35 { pt3dadd( 80.7166, -79.5369, -6.01865, 0.55 ) }
    dend_35 { pt3dadd( 81.0853, -79.9302, -6.07265, 0.83 ) }
    dend_35 { pt3dadd( 82.1698, -81.1123, -6.37644, 0.55 ) }
    dend_35 { pt3dadd( 83.2434, -82.2802, -6.72412, 0.55 ) }
    dend_35 { pt3dadd( 83.566, -82.6342, -6.83323, 0.83 ) }
    dend_35 { pt3dadd( 85.1893, -84.4409, -7.32478, 0.55 ) }
    dend_35 { pt3dadd( 86.8138, -86.2479, -7.76821, 1.11 ) }
    dend_35 { pt3dadd( 88.5343, -88.21, -8.20589, 0.55 ) }
    dend_35 { pt3dadd( 90.6722, -90.8591, -8.7434, 0.83 ) }
    dend_35 { pt3dadd( 91.5461, -91.977, -8.95884, 0.28 ) }
    dend_35 { pt3dadd( 92.4104, -93.1839, -9.13901, 0.55 ) }
    dend_35 { pt3dadd( 92.9058, -93.9132, -9.20087, 0.28 ) }
    dend_35 { pt3dadd( 93.5855, -94.8958, -9.20357, 0.55 ) }
    dend_35 { pt3dadd( 94.7547, -96.5894, -9.02859, 0.28 ) }
    dend_35 { pt3dadd( 95.8802, -98.1908, -8.96856, 0.55 ) }
    dend_35 { pt3dadd( 96.9114, -99.5932, -8.97182, 0.28 ) }
    dend_35 { pt3dadd( 97.5731, -100.45, -9.02675, 0.55 ) }
    dend_35 { pt3dadd( 98.2153, -101.238, -9.08681, 0.28 ) }
    dend_35 { pt3dadd( 99.1199, -102.32, -9.21785, 0.83 ) }
    dend_35 { pt3dadd( 100.716, -104.217, -9.55069, 0.28 ) }
    dend_35 { pt3dadd( 101.82, -105.561, -9.88397, 0.83 ) }
    dend_35 { pt3dadd( 102.494, -106.351, -10.1151, 0.28 ) }
    dend_35 { pt3dadd( 103.43, -107.534, -10.4638, 0.55 ) }
    dend_35 { pt3dadd( 104.57, -109.071, -10.9056, 0.28 ) }
    dend_35 { pt3dadd( 105.175, -109.939, -11.1267, 0.83 ) }
    dend_35 { pt3dadd( 105.993, -111.13, -11.3392, 0.28 ) }
    dend_35 { pt3dadd( 106.373, -111.691, -11.4168, 0.55 ) }
    dend_35 { pt3dadd( 107.006, -112.652, -11.5086, 0.28 ) }
    dend_35 { pt3dadd( 107.406, -113.259, -11.5779, 0.83 ) }
    dend_35 { pt3dadd( 108.532, -114.883, -11.7475, 0.28 ) }
    dend_35 { pt3dadd( 108.879, -115.298, -11.7917, 0.55 ) }
    dend_35 { pt3dadd( 109.913, -116.502, -11.9137, 0.28 ) }
    dend_35 { pt3dadd( 110.424, -117.06, -11.9609, 0.55 ) }
    dend_35 { pt3dadd( 111.429, -118.04, -12.01, 0.28 ) }
    dend_35 { pt3dadd( 112.441, -119.014, -12.0313, 0.55 ) }
    dend_35 { pt3dadd( 113.885, -120.409, -11.999, 0.55 ) }
    dend_35 { pt3dadd( 115.21, -121.708, -11.984, 0.55 ) }
    dend_35 { pt3dadd( 115.713, -122.197, -11.9742, 0.28 ) }
    dend_35 { pt3dadd( 116.581, -123.052, -11.941, 0.55 ) }
    dend_35 { pt3dadd( 117.328, -123.822, -11.9075, 0.28 ) }
    dend_35 { pt3dadd( 117.779, -124.324, -11.9263, 0.55 ) }
    dend_35 { pt3dadd( 118.914, -125.603, -12.048, 0.28 ) }
    dend_35 { pt3dadd( 119.754, -126.471, -12.1781, 0.55 ) }
    dend_35 { pt3dadd( 120.83, -127.496, -12.3606, 0.28 ) }
    dend_35 { pt3dadd( 121.399, -128.011, -12.4513, 0.55 ) }
    dend_35 { pt3dadd( 122.157, -128.653, -12.4655, 0.28 ) }
    dend_35 { pt3dadd( 122.577, -129.002, -12.4668, 0.55 ) }
    dend_35 { pt3dadd( 123.715, -129.903, -12.4157, 0.28 ) }
    dend_35 { pt3dadd( 125.254, -131.106, -12.28, 0.55 ) }
    dend_35 { pt3dadd( 125.868, -131.552, -12.1556, 0.55 ) }
    dend_35 { pt3dadd( 127.785, -132.766, -11.6026, 0.28 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 83/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 42.8054, -43.4777, 7.28096, 1.11 ) }
    dend_34 { pt3dadd( 43.8158, -45.4481, 7.15163, 1.11 ) }
    dend_34 { pt3dadd( 44.5155, -46.8827, 7.013, 0.55 ) }
    dend_34 { pt3dadd( 45.271, -48.4183, 6.76611, 0.83 ) }
    dend_34 { pt3dadd( 46.5065, -51.0065, 6.2565, 0.83 ) }
    dend_34 { pt3dadd( 47.492, -53.1314, 5.8088, 0.55 ) }
    dend_34 { pt3dadd( 48.359, -55.0475, 5.38782, 0.83 ) }
    dend_34 { pt3dadd( 49.2157, -57.0177, 4.87839, 0.55 ) }
    dend_34 { pt3dadd( 50.0648, -58.9594, 4.35659, 0.55 ) }
    dend_34 { pt3dadd( 50.4571, -59.9287, 4.10286, 0.28 ) }
    dend_34 { pt3dadd( 50.7387, -60.5774, 3.94836, 0.55 ) }
    dend_34 { pt3dadd( 51.2117, -61.7625, 3.7757, 0.28 ) }
    dend_34 { pt3dadd( 51.6462, -62.8699, 3.67247, 0.55 ) }
    dend_34 { pt3dadd( 52.1814, -64.1031, 3.64975, 0.28 ) }
    dend_34 { pt3dadd( 52.9486, -65.8008, 3.76349, 0.55 ) }
    dend_34 { pt3dadd( 53.6589, -67.3071, 3.96047, 0.28 ) }
    dend_34 { pt3dadd( 53.975, -67.9423, 4.03692, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_34 { pt3dadd( 54.438, -68.8431, 4.05616, 0.55 ) }
    dend_34 { pt3dadd( 55.011, -70.0655, 3.98914, 0.55 ) }
    dend_34 { pt3dadd( 55.214, -70.502, 3.93058, 0.83 ) }
    dend_34 { pt3dadd( 55.9116, -72.0245, 3.67471, 0.28 ) }
    dend_34 { pt3dadd( 56.6456, -73.9283, 3.24188, 0.83 ) }
    dend_34 { pt3dadd( 57.6677, -76.6305, 2.49535, 0.28 ) }
    dend_34 { pt3dadd( 58.0257, -77.5833, 2.139, 0.55 ) }
    dend_34 { pt3dadd( 58.3254, -78.4771, 1.76291, 0.28 ) }
    dend_34 { pt3dadd( 58.682, -79.5082, 1.25138, 0.83 ) }
    dend_34 { pt3dadd( 59.241, -81.2567, 0.353647, 0.28 ) }
    dend_34 { pt3dadd( 59.6846, -82.7232, -0.336783, 0.55 ) }
    dend_34 { pt3dadd( 60.4217, -85.0211, -1.32916, 0.28 ) }
    dend_34 { pt3dadd( 60.9149, -86.446, -1.90575, 0.55 ) }
    dend_34 { pt3dadd( 61.8998, -89.386, -2.9844, 0.55 ) }
    dend_34 { pt3dadd( 62.4299, -90.9828, -3.43857, 0.55 ) }
    dend_34 { pt3dadd( 62.777, -92.106, -3.64341, 0.28 ) }
    dend_34 { pt3dadd( 62.9509, -92.769, -3.7244, 0.55 ) }
    dend_34 { pt3dadd( 63.236, -93.9744, -3.75959, 0.28 ) }
    dend_34 { pt3dadd( 63.3844, -94.4981, -3.71122, 0.55 ) }
    dend_34 { pt3dadd( 63.8216, -96.4782, -3.18926, 0.28 ) }
    dend_34 { pt3dadd( 64.0929, -97.5184, -2.81917, 0.55 ) }
    dend_34 { pt3dadd( 64.4103, -99.124, -2.12814, 0.28 ) }
    dend_34 { pt3dadd( 64.4423, -99.3336, -2.02161, 0.55 ) }
    dend_34 { pt3dadd( 64.9008, -101.892, -0.571136, 0.28 ) }
    dend_34 { pt3dadd( 65.1483, -103.087, 0.117262, 0.55 ) }
    dend_34 { pt3dadd( 65.6351, -105.242, 1.28138, 0.28 ) }
    dend_34 { pt3dadd( 65.8639, -106.108, 1.71994, 0.55 ) }
    dend_34 { pt3dadd( 66.1699, -107.116, 2.17517, 0.28 ) }
    dend_34 { pt3dadd( 66.6858, -108.675, 2.69974, 0.83 ) }
    dend_34 { pt3dadd( 67.3462, -110.501, 3.20747, 0.28 ) }
    dend_34 { pt3dadd( 67.9136, -111.842, 3.59699, 0.83 ) }
    dend_34 { pt3dadd( 68.5631, -113.291, 4.03039, 0.28 ) }
    dend_34 { pt3dadd( 69.0431, -114.198, 4.34365, 0.28 ) }
    dend_34 { pt3dadd( 69.3919, -114.771, 4.60183, 0.55 ) }
    dend_34 { pt3dadd( 70.5326, -116.491, 5.79816, 0.28 ) }
    dend_34 { pt3dadd( 70.8755, -116.963, 6.26695, 0.55 ) }
    dend_34 { pt3dadd( 71.3879, -117.681, 7.08026, 0.28 ) }
    dend_34 { pt3dadd( 71.6863, -118.153, 7.59169, 0.55 ) }
    dend_34 { pt3dadd( 72.2664, -119.254, 8.53173, 0.28 ) }
    dend_34 { pt3dadd( 72.7035, -120.291, 9.22678, 0.55 ) }
    dend_34 { pt3dadd( 73.7668, -123.174, 10.3906, 0.28 ) }
    dend_34 { pt3dadd( 74.0274, -123.894, 10.5839, 0.28 ) }
    dend_34 { pt3dadd( 74.635, -125.707, 10.8572, 0.83 ) }
    dend_34 { pt3dadd( 75.4333, -128.245, 11.0277, 0.28 ) }
    dend_34 { pt3dadd( 75.8307, -129.581, 11.0065, 0.55 ) }
    dend_34 { pt3dadd( 76.6922, -132.494, 10.8605, 0.28 ) }
    dend_34 { pt3dadd( 77.0623, -133.788, 10.7734, 0.28 ) }
    dend_34 { pt3dadd( 77.4036, -134.935, 10.7146, 0.55 ) }
    dend_34 { pt3dadd( 77.8495, -136.314, 10.6374, 0.28 ) }
    dend_34 { pt3dadd( 78.1721, -137.255, 10.6017, 0.55 ) }
    dend_34 { pt3dadd( 78.6499, -138.707, 10.5922, 0.28 ) }
    dend_34 { pt3dadd( 78.8188, -139.399, 10.6347, 0.55 ) }
    dend_34 { pt3dadd( 79.1165, -140.924, 10.7454, 0.28 ) }
    dend_34 { pt3dadd( 79.2309, -141.672, 10.8067, 0.55 ) }
    dend_34 { pt3dadd( 79.5165, -143.602, 10.8228, 0.28 ) }
    dend_34 { pt3dadd( 79.6364, -144.681, 10.7851, 0.55 ) }
    dend_34 { pt3dadd( 79.8369, -146.377, 10.7292, 0.55 ) }
    dend_34 { pt3dadd( 79.9944, -147.994, 10.7354, 0.28 ) }
    dend_34 { pt3dadd( 80.0737, -149.19, 10.8176, 0.55 ) }
    dend_34 { pt3dadd( 80.1255, -151.634, 10.9751, 0.28 ) }
    dend_34 { pt3dadd( 80.1975, -152.84, 11.0185, 0.55 ) }
    dend_34 { pt3dadd( 80.4268, -155.344, 11.0279, 0.28 ) }
    dend_34 { pt3dadd( 80.49, -156.094, 10.9666, 0.55 ) }
    dend_34 { pt3dadd( 80.5401, -157.031, 10.8335, 0.28 ) }
    dend_34 { pt3dadd( 80.6296, -158.262, 10.6044, 0.55 ) }
    dend_34 { pt3dadd( 80.729, -160.516, 10.178, 0.28 ) }
    dend_34 { pt3dadd( 80.7789, -161.349, 10.026, 0.55 ) }
    dend_34 { pt3dadd( 80.9236, -162.926, 9.57253, 0.28 ) }
    dend_34 { pt3dadd( 81.0076, -163.572, 9.37431, 0.55 ) }
    dend_34 { pt3dadd( 81.3135, -165.372, 8.77939, 0.28 ) }
    dend_34 { pt3dadd( 81.5797, -167.016, 8.26288, 0.55 ) }
    dend_34 { pt3dadd( 81.8777, -168.938, 7.66233, 0.28 ) }
    dend_34 { pt3dadd( 82.5611, -172.718, 6.50601, 0.55 ) }
    dend_34 { pt3dadd( 83.0864, -175.337, 5.77592, 0.28 ) }
    dend_34 { pt3dadd( 83.3977, -176.714, 5.39139, 0.28 ) }
    dend_34 { pt3dadd( 83.793, -178.301, 4.94852, 0.55 ) }
    dend_34 { pt3dadd( 84.3352, -180.111, 4.42711, 0.28 ) }
    dend_34 { pt3dadd( 84.6632, -181.015, 4.19037, 0.55 ) }
    dend_34 { pt3dadd( 85.0791, -181.995, 4.14086, 0.28 ) }
    dend_34 { pt3dadd( 85.7283, -183.237, 4.28074, 0.55 ) }
    dend_34 { pt3dadd( 86.3229, -184.304, 4.57123, 0.28 ) }
    dend_34 { pt3dadd( 87.3082, -185.924, 5.11236, 0.55 ) }
    dend_34 { pt3dadd( 88.464, -187.802, 5.74618, 0.28 ) }
    dend_34 { pt3dadd( 90.2457, -190.573, 6.61466, 0.55 ) }
    dend_34 { pt3dadd( 91.7236, -192.803, 7.1096, 0.55 ) }
    dend_34 { pt3dadd( 92.4369, -193.869, 7.2793, 0.28 ) }
    dend_34 { pt3dadd( 93.234, -194.993, 7.29176, 0.55 ) }
    dend_34 { pt3dadd( 94.4241, -196.603, 7.03044, 0.28 ) }
    dend_34 { pt3dadd( 95.1868, -197.666, 6.69265, 0.55 ) }
    dend_34 { pt3dadd( 96.4007, -199.42, 5.9486, 0.28 ) }
    dend_34 { pt3dadd( 97.101, -200.377, 5.46052, 0.55 ) }
    dend_34 { pt3dadd( 97.9437, -201.517, 4.86932, 0.28 ) }
    dend_34 { pt3dadd( 98.3321, -202.06, 4.66246, 0.55 ) }
    dend_34 { pt3dadd( 98.963, -203.04, 4.41748, 0.28 ) }
    dend_34 { pt3dadd( 99.3042, -203.663, 4.29762, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 95/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 2.28202, -25.0934, -0.476953, 1.38 ) }
    dend_20 { pt3dadd( 2.14113, -25.9068, -0.414266, 1.38 ) }
    dend_20 { pt3dadd( 1.58822, -29.0987, -0.168267, 1.38 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 98/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.28202, -25.0934, -0.476953, 0.83 ) }
    dend_17 { pt3dadd( 1.79441, -26.9155, 0.0361203, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_17 { pt3dadd( 1.48647, -28.7556, 1.10638, 0.83 ) }
    dend_17 { pt3dadd( 1.26894, -30.5302, 2.22797, 1.38 ) }
    dend_17 { pt3dadd( 1.02908, -32.4638, 3.52196, 1.11 ) }
    dend_17 { pt3dadd( 0.845256, -33.9456, 4.51358, 0.55 ) }
    dend_17 { pt3dadd( 0.62532, -35.7186, 5.70005, 1.11 ) }
    dend_17 { pt3dadd( 0.292339, -39.8667, 8.82125, 0.83 ) }
    dend_17 { pt3dadd( 0.239039, -41.5485, 10.2111, 1.11 ) }
    dend_17 { pt3dadd( 0.164861, -42.9344, 11.456, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 8/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.778896, 26.4323, -2.70808, 1.38 ) }
    dend_2 { pt3dadd( 1.15367, 32.2732, -5.05636, 1.38 ) }
    dend_2 { pt3dadd( 2.72608, 37.0255, -6.96701, 1.38 ) }
    dend_2 { pt3dadd( 3.65275, 39.8262, -8.09303, 1.38 ) }
    dend_2 { pt3dadd( 4.3815, 42.0288, -8.97855, 1.38 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 13/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 127.785, -132.766, -11.6026, 0.28 ) }
    dend_37 { pt3dadd( 129.699, -132.689, -10.9101, 0.28 ) }
    dend_37 { pt3dadd( 131.244, -132.627, -10.3512, 0.55 ) }
    dend_37 { pt3dadd( 133.332, -132.543, -9.59579, 0.28 ) }
    dend_37 { pt3dadd( 134.762, -132.485, -9.07862, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 18/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 127.785, -132.766, -11.6026, 0.28 ) }
    dend_36 { pt3dadd( 130.411, -133.944, -11.4624, 0.28 ) }
    dend_36 { pt3dadd( 131.525, -134.422, -11.3238, 0.28 ) }
    dend_36 { pt3dadd( 133.711, -135.38, -10.7913, 0.83 ) }
    dend_36 { pt3dadd( 135.161, -136.025, -10.3443, 0.28 ) }
    dend_36 { pt3dadd( 136.367, -136.52, -9.84673, 0.55 ) }
    dend_36 { pt3dadd( 137.468, -136.956, -9.33191, 0.28 ) }
    dend_36 { pt3dadd( 137.524, -136.974, -9.29569, 0.55 ) }
    dend_36 { pt3dadd( 139.055, -137.446, -8.20698, 0.28 ) }
    dend_36 { pt3dadd( 139.113, -137.468, -8.16042, 0.55 ) }
    dend_36 { pt3dadd( 140.946, -138.148, -6.74603, 0.28 ) }
    dend_36 { pt3dadd( 141.242, -138.265, -6.52959, 0.55 ) }
    dend_36 { pt3dadd( 143.489, -139.161, -4.95181, 0.28 ) }
    dend_36 { pt3dadd( 143.914, -139.328, -4.6636, 0.55 ) }
    dend_36 { pt3dadd( 145.554, -139.959, -3.61924, 0.28 ) }
    dend_36 { pt3dadd( 146.712, -140.445, -2.90779, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_20 (entry count 34/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.58822, -29.0987, -0.168267, 1.38 ) }
    dend_32 { pt3dadd( 1.45787, -29.3485, 0.272183, 1.38 ) }
    dend_32 { pt3dadd( -1.53058, -34.547, 8.3958, 1.38 ) }
    dend_32 { pt3dadd( -3.65395, -37.9234, 13.4365, 1.11 ) }
    dend_32 { pt3dadd( -5.08143, -40.0937, 16.373, 0.83 ) }
    dend_32 { pt3dadd( -6.74929, -42.5136, 19.4338, 0.83 ) }
    dend_32 { pt3dadd( -9.38822, -46.0775, 23.3283, 0.83 ) }
    dend_32 { pt3dadd( -10.274, -47.2693, 24.359, 0.83 ) }
    dend_32 { pt3dadd( -11.232, -48.5551, 25.2164, 0.83 ) }
    dend_32 { pt3dadd( -14.2435, -52.9322, 27.8678, 0.83 ) }
    dend_32 { pt3dadd( -16.4869, -56.1473, 29.8338, 0.83 ) }
    dend_32 { pt3dadd( -20.8605, -62.2163, 33.6722, 0.83 ) }
    dend_32 { pt3dadd( -23.5256, -66.0611, 36.0238, 0.55 ) }
    dend_32 { pt3dadd( -25.3743, -68.6976, 37.6883, 0.55 ) }
    dend_32 { pt3dadd( -28.2455, -72.5908, 40.374, 0.55 ) }
    dend_32 { pt3dadd( -31.0499, -76.0959, 43.0251, 0.55 ) }
    dend_32 { pt3dadd( -32.612, -78.1418, 45.1742, 0.55 ) }
    dend_32 { pt3dadd( -33.5174, -79.4641, 46.9892, 0.55 ) }
    dend_32 { pt3dadd( -34.6274, -81.1512, 49.6596, 0.55 ) }
    dend_32 { pt3dadd( -36.9478, -84.9601, 56.1021, 0.55 ) }
    dend_32 { pt3dadd( -37.9329, -86.7485, 59.2183, 0.55 ) }
    dend_32 { pt3dadd( -41.805, -94.1897, 71.7369, 0.55 ) }
    dend_32 { pt3dadd( -42.7437, -96.2126, 74.7859, 0.55 ) }
    dend_32 { pt3dadd( -44.6447, -100.064, 80.4878, 0.55 ) }
    dend_32 { pt3dadd( -45.7166, -102.235, 83.3801, 0.55 ) }
    dend_32 { pt3dadd( -46.353, -103.513, 84.8595, 0.55 ) }
    dend_32 { pt3dadd( -48.8569, -107.843, 89.2568, 0.55 ) }
    dend_32 { pt3dadd( -50.8448, -110.678, 91.5228, 0.55 ) }
    dend_32 { pt3dadd( -53.095, -113.663, 94.0683, 0.55 ) }
    dend_32 { pt3dadd( -55.8829, -117.63, 97.4349, 0.55 ) }
    dend_32 { pt3dadd( -56.6909, -118.9, 98.689, 0.55 ) }
    dend_32 { pt3dadd( -57.3524, -119.989, 99.9794, 0.55 ) }
    dend_32 { pt3dadd( -58.4808, -121.98, 102.803, 0.55 ) }
    dend_32 { pt3dadd( -59.7487, -124.183, 106.357, 0.55 ) }
    dend_32 { pt3dadd( -60.7708, -126.129, 109.491, 0.55 ) }
    dend_32 { pt3dadd( -62.8227, -129.321, 115.435, 0.55 ) }
    dend_32 { pt3dadd( -63.3065, -129.996, 116.694, 0.55 ) }
    dend_32 { pt3dadd( -65.2643, -132.531, 121.207, 0.55 ) }
    dend_32 { pt3dadd( -66.6682, -134.055, 123.966, 0.55 ) }
    dend_32 { pt3dadd( -68.3057, -135.538, 126.588, 0.55 ) }
    dend_32 { pt3dadd( -70.6964, -137.104, 128.926, 0.55 ) }
    dend_32 { pt3dadd( -73.1466, -138.556, 130.647, 0.55 ) }
    dend_32 { pt3dadd( -75.8148, -139.974, 132.296, 0.55 ) }
    dend_32 { pt3dadd( -78.3163, -141.133, 133.699, 0.55 ) }
    dend_32 { pt3dadd( -81.6292, -142.519, 135.486, 0.55 ) }
    dend_32 { pt3dadd( -90.6071, -146.036, 140.829, 0.55 ) }
    dend_32 { pt3dadd( -93.3344, -147.095, 142.615, 0.55 ) }
    dend_32 { pt3dadd( -96.5456, -148.386, 144.712, 0.55 ) }
    dend_32 { pt3dadd( -99.5687, -149.881, 146.877, 0.55 ) }
    dend_32 { pt3dadd( -101.701, -151.288, 149.05, 0.55 ) }
    dend_32 { pt3dadd( -105.132, -153.908, 153.389, 0.55 ) }
    dend_32 { pt3dadd( -106.249, -155.022, 155.511, 0.55 ) }
    dend_32 { pt3dadd( -108.874, -158.067, 161.152, 0.55 ) }
    dend_32 { pt3dadd( -110.771, -161.143, 166.165, 0.55 ) }
    dend_32 { pt3dadd( -113.128, -166.842, 174.52, 0.55 ) }
    dend_32 { pt3dadd( -120.206, -174.383, 182.553, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 90/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 1.58822, -29.0987, -0.168267, 1.11 ) }
    dend_21 { pt3dadd( 0.951564, -30.1948, -1.36658, 1.11 ) }
    dend_21 { pt3dadd( -0.4968, -32.6883, -4.09269, 1.11 ) }
    dend_21 { pt3dadd( -2.80789, -36.667, -8.44263, 1.11 ) }
    dend_21 { pt3dadd( -6.01332, -42.1855, -14.4759, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 95/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 0.164861, -42.9344, 11.456, 0.83 ) }
    dend_19 { pt3dadd( 1.02018, -47.6915, 18.3149, 0.83 ) }
    dend_19 { pt3dadd( 1.32687, -49.5248, 20.7027, 0.83 ) }
    dend_19 { pt3dadd( 1.69341, -51.4667, 23.0404, 0.83 ) }
    dend_19 { pt3dadd( 1.94649, -52.8998, 24.6242, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_19 { pt3dadd( 2.26253, -54.6879, 26.4793, 0.55 ) }
    dend_19 { pt3dadd( 2.62956, -56.9144, 28.6272, 0.83 ) }
    dend_19 { pt3dadd( 2.95788, -59.0134, 30.1357, 0.83 ) }
    dend_19 { pt3dadd( 3.21433, -60.1098, 30.8948, 0.55 ) }
    dend_19 { pt3dadd( 3.54949, -61.5476, 31.7272, 0.83 ) }
    dend_19 { pt3dadd( 3.84494, -62.7804, 32.3309, 0.83 ) }
    dend_19 { pt3dadd( 4.22267, -64.1488, 32.975, 0.83 ) }
    dend_19 { pt3dadd( 4.63021, -65.3796, 33.5284, 0.83 ) }
    dend_19 { pt3dadd( 4.8625, -66.1045, 33.8714, 0.83 ) }
    dend_19 { pt3dadd( 5.31397, -67.5148, 34.6797, 0.55 ) }
    dend_19 { pt3dadd( 5.60775, -68.4719, 35.2713, 1.11 ) }
    dend_19 { pt3dadd( 6.6345, -71.9421, 37.506, 0.55 ) }
    dend_19 { pt3dadd( 6.95905, -73.0726, 38.2837, 0.55 ) }
    dend_19 { pt3dadd( 7.1959, -74.0785, 38.996, 1.11 ) }
    dend_19 { pt3dadd( 7.68463, -76.4571, 40.7652, 0.55 ) }
    dend_19 { pt3dadd( 7.94702, -77.7395, 41.802, 1.11 ) }
    dend_19 { pt3dadd( 9.55095, -83.6773, 47.5051, 1.11 ) }
    dend_19 { pt3dadd( 10.5842, -88.4818, 54.3024, 1.11 ) }
    dend_19 { pt3dadd( 13.4016, -93.6574, 60.2715, 1.11 ) }
    dend_19 { pt3dadd( 17.1151, -97.9551, 66.4436, 1.11 ) }
    dend_19 { pt3dadd( 19.6756, -103.441, 72.2489, 1.11 ) }
    dend_19 { pt3dadd( 23.4846, -107.148, 78.7375, 1.11 ) }
    dend_19 { pt3dadd( 27.0425, -110.84, 85.3757, 1.11 ) }
    dend_19 { pt3dadd( 30.679, -114.022, 92.232, 1.11 ) }
    dend_19 { pt3dadd( 33.8006, -115.644, 99.8463, 1.11 ) }
    dend_19 { pt3dadd( 36.1468, -116.515, 107.852, 1.11 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 26/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 0.164861, -42.9344, 11.456, 1.11 ) }
    dend_18 { pt3dadd( -0.00521665, -43.6467, 12.0696, 1.11 ) }
    dend_18 { pt3dadd( -0.338038, -45.03, 13.2348, 1.11 ) }
    dend_18 { pt3dadd( -0.866157, -47.5016, 15.3413, 1.11 ) }
    dend_18 { pt3dadd( -1.55727, -51.2709, 18.5172, 1.11 ) }
    dend_18 { pt3dadd( -2.20323, -55.0946, 21.7792, 1.11 ) }
    dend_18 { pt3dadd( -2.44309, -56.6676, 23.0762, 0.55 ) }
    dend_18 { pt3dadd( -2.63285, -58.1671, 24.258, 0.83 ) }
    dend_18 { pt3dadd( -3.08806, -60.9547, 26.2295, 1.11 ) }
    dend_18 { pt3dadd( -3.27563, -61.7427, 26.7638, 1.11 ) }
    dend_18 { pt3dadd( -4.01965, -64.0222, 27.9922, 0.55 ) }
    dend_18 { pt3dadd( -4.7912, -65.8726, 28.9133, 0.83 ) }
    dend_18 { pt3dadd( -6.09956, -68.5326, 30.2791, 0.83 ) }
    dend_18 { pt3dadd( -7.82826, -71.7386, 32.0821, 0.83 ) }
    dend_18 { pt3dadd( -9.99736, -75.1749, 34.2607, 0.55 ) }
    dend_18 { pt3dadd( -11.1564, -76.8832, 35.4355, 0.83 ) }
    dend_18 { pt3dadd( -12.6723, -78.8922, 36.9352, 0.55 ) }
    dend_18 { pt3dadd( -13.6503, -80.1377, 37.9997, 1.11 ) }
    dend_18 { pt3dadd( -16.3562, -83.5293, 41.1992, 0.55 ) }
    dend_18 { pt3dadd( -17.9754, -85.7191, 43.2614, 0.83 ) }
    dend_18 { pt3dadd( -18.8499, -87.0506, 44.3735, 0.83 ) }
    dend_18 { pt3dadd( -20.4873, -89.6496, 46.4341, 0.83 ) }
    dend_18 { pt3dadd( -21.3447, -91.0522, 47.4747, 1.11 ) }
    dend_18 { pt3dadd( -22.2314, -92.3655, 48.436, 0.28 ) }
    dend_18 { pt3dadd( -23.0345, -93.465, 49.0706, 0.83 ) }
    dend_18 { pt3dadd( -23.775, -94.7994, 49.7075, 0.28 ) }
    dend_18 { pt3dadd( -24.7481, -96.7314, 50.6525, 0.83 ) }
    dend_18 { pt3dadd( -27.4157, -105.768, 56.215, 0.83 ) }
    dend_18 { pt3dadd( -30.4031, -114.336, 62.3297, 0.83 ) }
    dend_18 { pt3dadd( -33.1928, -121.817, 69.8108, 0.83 ) }
    dend_18 { pt3dadd( -34.5531, -128.552, 78.326, 0.83 ) }
    dend_18 { pt3dadd( -34.8944, -133.858, 87.889, 0.83 ) }
    dend_18 { pt3dadd( -36.799, -137.096, 98.1657, 0.83 ) }
    dend_18 { pt3dadd( -40.3564, -138.74, 108.381, 0.83 ) }
    dend_18 { pt3dadd( -43.1758, -140.997, 118.71, 0.83 ) }
    dend_18 { pt3dadd( -46.1381, -144.829, 128.521, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_2 (entry count 62/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 4.3815, 42.0288, -8.97855, 1.11 ) }
    dend_9 { pt3dadd( 2.2314, 44.1202, -18.0569, 1.11 ) }
    dend_9 { pt3dadd( 0.0597254, 46.2327, -27.2264, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 65/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 4.3815, 42.0288, -8.97855, 1.38 ) }
    dend_3 { pt3dadd( 4.22044, 45.1054, -9.32112, 1.38 ) }
    dend_3 { pt3dadd( 4.08937, 47.6091, -9.59989, 1.38 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 68/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -6.01332, -42.1855, -14.4759, 0.83 ) }
    dend_23 { pt3dadd( -6.42718, -43.8898, -16.3854, 0.83 ) }
    dend_23 { pt3dadd( -7.32729, -47.5967, -20.5383, 0.83 ) }
    dend_23 { pt3dadd( -7.95999, -50.2023, -23.4575, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -6.01332, -42.1855, -14.4759, 0.55 ) }
    dend_22 { pt3dadd( -6.50891, -42.8161, -15.2179, 0.55 ) }
    dend_22 { pt3dadd( -8.06871, -44.9573, -17.8517, 0.55 ) }
    dend_22 { pt3dadd( -9.58944, -46.9705, -20.4967, 0.55 ) }
    dend_22 { pt3dadd( -10.1307, -47.7323, -21.453, 0.28 ) }
    dend_22 { pt3dadd( -11.8238, -50.07, -24.3889, 0.55 ) }
    dend_22 { pt3dadd( -13.7371, -52.6293, -27.4706, 0.55 ) }
    dend_22 { pt3dadd( -14.7295, -53.8993, -29.0645, 0.55 ) }
    dend_22 { pt3dadd( -15.5313, -54.9522, -30.4645, 0.55 ) }
    dend_22 { pt3dadd( -16.9471, -56.8277, -32.8341, 0.55 ) }
    dend_22 { pt3dadd( -18.0086, -58.285, -34.6076, 0.28 ) }
    dend_22 { pt3dadd( -19.1213, -59.8527, -36.2834, 0.55 ) }
    dend_22 { pt3dadd( -20.0193, -61.0479, -37.5274, 0.55 ) }
    dend_22 { pt3dadd( -21.5948, -62.977, -39.5879, 0.28 ) }
    dend_22 { pt3dadd( -22.1203, -63.6051, -40.2845, 0.55 ) }
    dend_22 { pt3dadd( -22.7295, -64.2701, -41.1264, 0.28 ) }
    dend_22 { pt3dadd( -24.2054, -65.9254, -43.3834, 0.55 ) }
    dend_22 { pt3dadd( -25.2278, -66.9532, -45.1181, 0.28 ) }
    dend_22 { pt3dadd( -25.3895, -67.0822, -45.3927, 0.55 ) }
    dend_22 { pt3dadd( -26.3195, -67.6835, -46.8909, 0.28 ) }
    dend_22 { pt3dadd( -27.0109, -68.1267, -48.0976, 0.83 ) }
    dend_22 { pt3dadd( -28.0193, -68.7831, -50.0561, 0.28 ) }
    dend_22 { pt3dadd( -28.7939, -69.4266, -51.92, 0.55 ) }
    dend_22 { pt3dadd( -29.5092, -70.2685, -54.213, 0.28 ) }
    dend_22 { pt3dadd( -29.7962, -70.8146, -55.6467, 0.55 ) }
    dend_22 { pt3dadd( -29.9707, -71.314, -56.82, 0.28 ) }
    dend_22 { pt3dadd( -30.0919, -71.783, -57.8064, 0.55 ) }
    dend_22 { pt3dadd( -30.3319, -72.7637, -59.7028, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( -30.9471, -75.3019, -64.2585, 0.55 ) }
    dend_22 { pt3dadd( -31.3752, -77.1561, -67.5097, 0.28 ) }
    dend_22 { pt3dadd( -31.549, -77.8366, -68.7279, 0.83 ) }
    dend_22 { pt3dadd( -32.1603, -79.7372, -72.1789, 0.28 ) }
    dend_22 { pt3dadd( -32.4484, -80.4479, -73.4306, 0.55 ) }
    dend_22 { pt3dadd( -32.5797, -80.722, -73.8759, 0.55 ) }
    dend_22 { pt3dadd( -33.022, -81.5244, -75.084, 0.28 ) }
    dend_22 { pt3dadd( -33.4843, -82.3198, -76.2786, 0.55 ) }
    dend_22 { pt3dadd( -34.2235, -83.862, -78.5875, 0.28 ) }
    dend_22 { pt3dadd( -34.6628, -84.9141, -80.0388, 0.55 ) }
    dend_22 { pt3dadd( -34.9373, -85.8103, -81.1606, 0.55 ) }
    dend_22 { pt3dadd( -35.4039, -87.6991, -83.3622, 0.28 ) }
    dend_22 { pt3dadd( -35.4894, -88.2167, -83.9138, 0.55 ) }
    dend_22 { pt3dadd( -35.5876, -89.2497, -84.8677, 0.28 ) }
    dend_22 { pt3dadd( -35.6846, -91.4017, -86.559, 0.55 ) }
    dend_22 { pt3dadd( -35.6685, -94.1424, -88.6877, 0.55 ) }
    dend_22 { pt3dadd( -35.6797, -95.1232, -89.4502, 0.28 ) }
    dend_22 { pt3dadd( -35.6258, -96.7052, -90.6032, 0.55 ) }
    dend_22 { pt3dadd( -35.5548, -98.5648, -92.1363, 0.28 ) }
    dend_22 { pt3dadd( -35.5432, -99.111, -92.6526, 0.83 ) }
    dend_22 { pt3dadd( -35.4508, -101.89, -95.637, 0.28 ) }
    dend_22 { pt3dadd( -35.4596, -103.206, -97.1397, 0.55 ) }
    dend_22 { pt3dadd( -35.5291, -104.558, -98.714, 0.28 ) }
    dend_22 { pt3dadd( -35.7966, -107.202, -101.91, 0.55 ) }
    dend_22 { pt3dadd( -36.1219, -109.368, -104.718, 0.55 ) }
    dend_22 { pt3dadd( -36.4072, -110.739, -106.53, 0.28 ) }
    dend_22 { pt3dadd( -36.7254, -112.021, -108.275, 0.28 ) }
    dend_22 { pt3dadd( -36.8977, -112.711, -109.249, 0.28 ) }
    dend_22 { pt3dadd( -37.3326, -114.339, -111.541, 0.55 ) }
    dend_22 { pt3dadd( -38.0353, -117.037, -115.168, 0.28 ) }
    dend_22 { pt3dadd( -38.2573, -117.866, -116.293, 0.83 ) }
    dend_22 { pt3dadd( -39.0128, -120.468, -119.808, 0.28 ) }
    dend_22 { pt3dadd( -39.2197, -121.148, -120.76, 0.55 ) }
    dend_22 { pt3dadd( -39.7364, -122.729, -122.95, 0.28 ) }
    dend_22 { pt3dadd( -40.1808, -124.04, -124.74, 0.55 ) }
    dend_22 { pt3dadd( -40.7508, -125.671, -126.981, 0.28 ) }
    dend_22 { pt3dadd( -41.0608, -126.455, -128.053, 0.55 ) }
    dend_22 { pt3dadd( -41.7466, -127.853, -129.992, 0.28 ) }
    dend_22 { pt3dadd( -42.4331, -129.188, -131.885, 0.55 ) }
    dend_22 { pt3dadd( -43.6253, -131.42, -135.211, 0.55 ) }
    dend_22 { pt3dadd( -44.2461, -132.626, -137.112, 0.28 ) }
    dend_22 { pt3dadd( -44.7843, -133.608, -138.744, 0.55 ) }
    dend_22 { pt3dadd( -45.3202, -134.618, -140.552, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 43/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 0.0597254, 46.2327, -27.2264, 1.11 ) }
    dend_13 { pt3dadd( 9.39444, 53.5589, -21.1773, 1.11 ) }
    dend_13 { pt3dadd( 11.1034, 55.0039, -20.2879, 1.11 ) }
    dend_13 { pt3dadd( 13.12, 56.7256, -19.4898, 1.11 ) }
    dend_13 { pt3dadd( 15.6174, 58.9506, -18.6986, 1.11 ) }
    dend_13 { pt3dadd( 18.6285, 61.783, -17.9198, 0.83 ) }
    dend_13 { pt3dadd( 21.43, 64.4961, -17.3363, 0.83 ) }
    dend_13 { pt3dadd( 23.2645, 66.4095, -17.53, 0.83 ) }
    dend_13 { pt3dadd( 24.946, 68.1458, -17.7277, 0.83 ) }
    dend_13 { pt3dadd( 26.3719, 69.6046, -17.9211, 0.83 ) }
    dend_13 { pt3dadd( 27.8756, 71.152, -18.174, 0.83 ) }
    dend_13 { pt3dadd( 29.0447, 72.4945, -18.4333, 0.83 ) }
    dend_13 { pt3dadd( 30.274, 74.2846, -18.9261, 0.83 ) }
    dend_13 { pt3dadd( 31.1085, 75.6247, -19.2656, 0.83 ) }
    dend_13 { pt3dadd( 31.5435, 76.3389, -19.4292, 0.83 ) }
    dend_13 { pt3dadd( 32.5261, 77.9902, -19.801, 0.83 ) }
    dend_13 { pt3dadd( 33.4705, 79.5708, -20.245, 0.83 ) }
    dend_13 { pt3dadd( 35.3547, 82.9319, -21.2464, 0.83 ) }
    dend_13 { pt3dadd( 36.9474, 85.9098, -22.2773, 0.55 ) }
    dend_13 { pt3dadd( 38.4532, 88.7424, -23.3848, 0.55 ) }
    dend_13 { pt3dadd( 39.6815, 90.7939, -24.2576, 0.55 ) }
    dend_13 { pt3dadd( 41.8828, 94.1103, -25.716, 0.83 ) }
    dend_13 { pt3dadd( 42.8968, 95.5894, -26.3562, 0.83 ) }
    dend_13 { pt3dadd( 45.6327, 99.4351, -27.9673, 1.11 ) }
    dend_13 { pt3dadd( 47.5989, 102.229, -29.2259, 0.83 ) }
    dend_13 { pt3dadd( 51.1463, 107.175, -31.4977, 0.83 ) }
    dend_13 { pt3dadd( 53.4949, 110.351, -32.9256, 0.83 ) }
    dend_13 { pt3dadd( 54.5809, 111.78, -33.4804, 0.83 ) }
    dend_13 { pt3dadd( 55.9631, 113.515, -34.0869, 1.11 ) }
    dend_13 { pt3dadd( 59.1815, 117.318, -35.1978, 0.55 ) }
    dend_13 { pt3dadd( 60.3769, 118.734, -35.5523, 0.55 ) }
    dend_13 { pt3dadd( 62.1768, 120.951, -36.0233, 0.55 ) }
    dend_13 { pt3dadd( 64.1477, 123.477, -36.5685, 0.55 ) }
    dend_13 { pt3dadd( 66.2995, 126.327, -37.168, 0.55 ) }
    dend_13 { pt3dadd( 67.8471, 128.547, -37.5774, 0.55 ) }
    dend_13 { pt3dadd( 68.9046, 130.093, -37.7249, 0.28 ) }
    dend_13 { pt3dadd( 70.7656, 132.733, -37.8648, 0.28 ) }
    dend_13 { pt3dadd( 72.7575, 135.502, -37.9421, 0.55 ) }
    dend_13 { pt3dadd( 74.4328, 137.831, -37.9771, 0.55 ) }
    dend_13 { pt3dadd( 76.3412, 140.448, -37.8659, 0.55 ) }
    dend_13 { pt3dadd( 79.4384, 144.708, -37.5195, 0.55 ) }
    dend_13 { pt3dadd( 81.9803, 148.143, -37.1442, 0.55 ) }
    dend_13 { pt3dadd( 83.2997, 150.009, -36.8619, 0.55 ) }
    dend_13 { pt3dadd( 84.1302, 151.178, -36.6618, 0.55 ) }
    dend_13 { pt3dadd( 86.6021, 154.906, -36.0927, 0.55 ) }
    dend_13 { pt3dadd( 88.1457, 157.543, -35.7762, 0.55 ) }
    dend_13 { pt3dadd( 89.2024, 159.563, -35.6542, 0.55 ) }
    dend_13 { pt3dadd( 91.4554, 164.269, -35.4745, 0.55 ) }
    dend_13 { pt3dadd( 92.897, 167.177, -35.3131, 0.55 ) }
    dend_13 { pt3dadd( 93.9693, 169.357, -35.1729, 0.55 ) }
    dend_13 { pt3dadd( 95.3092, 171.997, -35.0203, 0.55 ) }
    dend_13 { pt3dadd( 97.0307, 175.213, -34.8308, 0.83 ) }
    dend_13 { pt3dadd( 98.0514, 176.981, -34.7017, 0.83 ) }
    dend_13 { pt3dadd( 101.452, 182.544, -34.299, 0.55 ) }
    dend_13 { pt3dadd( 102.524, 184.279, -34.1615, 0.55 ) }
    dend_13 { pt3dadd( 104.363, 187.167, -33.9443, 0.55 ) }
    dend_13 { pt3dadd( 105.651, 189.278, -33.845, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_13 { pt3dadd( 107.636, 192.952, -33.822, 0.55 ) }
    dend_13 { pt3dadd( 109.634, 197.058, -34.0083, 0.83 ) }
    dend_13 { pt3dadd( 110.561, 199.243, -34.4156, 0.55 ) }
    dend_13 { pt3dadd( 111.457, 201.281, -34.9996, 0.83 ) }
    dend_13 { pt3dadd( 112.724, 204.095, -36.1103, 0.55 ) }
    dend_13 { pt3dadd( 114.06, 206.873, -37.4693, 0.55 ) }
    dend_13 { pt3dadd( 115.1, 208.841, -38.6861, 1.11 ) }
    dend_13 { pt3dadd( 117.881, 213.329, -41.9462, 0.83 ) }
    dend_13 { pt3dadd( 120.17, 216.454, -44.3849, 0.83 ) }
    dend_13 { pt3dadd( 121.9, 218.516, -46.0292, 0.83 ) }
    dend_13 { pt3dadd( 123.518, 220.27, -47.2675, 0.83 ) }
    dend_13 { pt3dadd( 125.267, 222.191, -48.4032, 0.83 ) }
    dend_13 { pt3dadd( 127.71, 225.05, -49.6307, 1.11 ) }
    dend_13 { pt3dadd( 129.823, 227.768, -50.2646, 0.83 ) }
    dend_13 { pt3dadd( 132.469, 231.672, -50.7707, 0.83 ) }
    dend_13 { pt3dadd( 134.899, 235.496, -50.9249, 0.83 ) }
    dend_13 { pt3dadd( 136.683, 238.545, -50.8229, 0.83 ) }
    dend_13 { pt3dadd( 137.932, 240.945, -50.5489, 0.83 ) }
    dend_13 { pt3dadd( 139.201, 243.677, -50.098, 0.83 ) }
    dend_13 { pt3dadd( 139.817, 245.17, -49.8697, 0.83 ) }
    dend_13 { pt3dadd( 140.331, 246.438, -49.7338, 0.83 ) }
    dend_13 { pt3dadd( 140.929, 247.891, -49.7789, 0.83 ) }
    dend_13 { pt3dadd( 141.907, 249.815, -49.9857, 0.83 ) }
    dend_13 { pt3dadd( 142.985, 251.675, -50.3161, 0.83 ) }
    dend_13 { pt3dadd( 144.118, 253.546, -50.6638, 0.55 ) }
    dend_13 { pt3dadd( 145.078, 255.031, -50.9933, 0.83 ) }
    dend_13 { pt3dadd( 147.172, 258.25, -51.7542, 0.55 ) }
    dend_13 { pt3dadd( 149.008, 260.827, -52.4284, 0.83 ) }
    dend_13 { pt3dadd( 149.646, 261.665, -52.6601, 0.83 ) }
    dend_13 { pt3dadd( 151.118, 263.583, -53.1903, 0.55 ) }
    dend_13 { pt3dadd( 152.486, 265.286, -53.6617, 0.83 ) }
    dend_13 { pt3dadd( 154.593, 267.907, -54.4324, 0.83 ) }
    dend_13 { pt3dadd( 155.99, 269.54, -54.9814, 0.83 ) }
    dend_13 { pt3dadd( 156.966, 270.893, -55.3953, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 34/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 0.0597254, 46.2327, -27.2264, 1.94 ) }
    dend_10 { pt3dadd( -1.03159, 50.57, -28.648, 1.94 ) }
    dend_10 { pt3dadd( -2.20287, 54.9796, -30.2935, 1.94 ) }
    dend_10 { pt3dadd( -3.24909, 59.3487, -32.0058, 1.38 ) }
    dend_10 { pt3dadd( -5.13802, 67.7727, -35.3121, 1.38 ) }
    dend_10 { pt3dadd( -6.35289, 72.8769, -37.6372, 1.38 ) }
    dend_10 { pt3dadd( -8.13065, 80.8454, -41.0633, 1.11 ) }
    dend_10 { pt3dadd( -8.91542, 83.6806, -42.5811, 1.11 ) }
    dend_10 { pt3dadd( -9.55781, 85.9415, -43.8919, 1.38 ) }
    dend_10 { pt3dadd( -10.5356, 89.3176, -45.8557, 1.38 ) }
    dend_10 { pt3dadd( -13.0269, 97.2368, -50.3504, 1.38 ) }
    dend_10 { pt3dadd( -15.1652, 103.157, -53.9348, 1.38 ) }
    dend_10 { pt3dadd( -18.6076, 112.275, -59.3329, 1.38 ) }
    dend_10 { pt3dadd( -19.899, 115.583, -61.4043, 1.38 ) }
    dend_10 { pt3dadd( -22.4555, 121.965, -65.5606, 1.38 ) }
    dend_10 { pt3dadd( -26.968, 133.398, -72.9793, 1.11 ) }
    dend_10 { pt3dadd( -30.6268, 143.059, -78.9038, 1.11 ) }
    dend_10 { pt3dadd( -32.383, 147.904, -81.8379, 1.11 ) }
    dend_10 { pt3dadd( -34.9162, 155.45, -86.153, 1.11 ) }
    dend_10 { pt3dadd( -36.5641, 160.644, -89.1402, 1.11 ) }
    dend_10 { pt3dadd( -37.763, 164.992, -91.5993, 1.11 ) }
    dend_10 { pt3dadd( -38.9529, 170.426, -94.6036, 1.11 ) }
    dend_10 { pt3dadd( -39.4353, 173.263, -96.1196, 1.11 ) }
    dend_10 { pt3dadd( -41.1455, 184.759, -102.591, 1.11 ) }
    dend_10 { pt3dadd( -41.6391, 188.624, -104.774, 1.11 ) }
    dend_10 { pt3dadd( -42.3107, 194.633, -108.381, 1.11 ) }
    dend_10 { pt3dadd( -42.6904, 198.436, -111.005, 1.11 ) }
    dend_10 { pt3dadd( -42.964, 201.403, -113.334, 1.11 ) }
    dend_10 { pt3dadd( -43.3115, 205.646, -116.814, 1.11 ) }
    // Section: dend_8, id: dend_8, parent: dend_3 (entry count 63/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 4.08937, 47.6091, -9.59989, 0.83 ) }
    dend_8 { pt3dadd( 6.04832, 48.782, -9.05093, 0.83 ) }
    dend_8 { pt3dadd( 9.4037, 50.9434, -8.30166, 0.83 ) }
    dend_8 { pt3dadd( 10.9356, 51.7164, -7.3864, 0.83 ) }
    dend_8 { pt3dadd( 13.7486, 53.1582, -5.44226, 0.83 ) }
    dend_8 { pt3dadd( 15.0642, 53.8777, -4.49677, 0.83 ) }
    dend_8 { pt3dadd( 18.2296, 55.7271, -2.22226, 0.83 ) }
    dend_8 { pt3dadd( 20.0261, 56.8547, -0.914642, 0.83 ) }
    dend_8 { pt3dadd( 29.0848, 63.1685, 5.6708, 0.83 ) }
    dend_8 { pt3dadd( 30.6036, 64.4236, 6.74962, 0.83 ) }
    dend_8 { pt3dadd( 31.8803, 65.6958, 7.63879, 0.83 ) }
    dend_8 { pt3dadd( 33.0865, 66.9531, 8.50257, 0.83 ) }
    dend_8 { pt3dadd( 35.4627, 69.7419, 10.1766, 0.83 ) }
    dend_8 { pt3dadd( 36.2657, 70.8392, 10.5775, 0.83 ) }
    dend_8 { pt3dadd( 38.3323, 74.9354, 10.2154, 0.83 ) }
    dend_8 { pt3dadd( 38.589, 75.4236, 10.1695, 0.83 ) }
    dend_8 { pt3dadd( 45.3794, 80.7191, 12.8365, 0.83 ) }
    dend_8 { pt3dadd( 51.8922, 85.7757, 16.4805, 0.83 ) }
    dend_8 { pt3dadd( 58.5311, 90.9951, 19.6345, 0.83 ) }
    dend_8 { pt3dadd( 65.8767, 95.7404, 21.8228, 0.83 ) }
    dend_8 { pt3dadd( 73.8008, 99.9227, 22.8137, 0.83 ) }
    dend_8 { pt3dadd( 80.7694, 105.635, 23.0891, 0.83 ) }
    dend_8 { pt3dadd( 85.9473, 112.962, 22.2122, 0.83 ) }
    dend_8 { pt3dadd( 90.8789, 120.501, 22.5367, 0.83 ) }
    dend_8 { pt3dadd( 95.624, 128.136, 23.2094, 0.83 ) }
    dend_8 { pt3dadd( 99.6494, 136.094, 24.5244, 0.83 ) }
    dend_8 { pt3dadd( 102.542, 144.427, 26.3851, 0.83 ) }
    dend_8 { pt3dadd( 105.093, 153.073, 26.4743, 0.83 ) }
    dend_8 { pt3dadd( 109.814, 160.698, 27.3895, 0.83 ) }
    dend_8 { pt3dadd( 116.546, 166.461, 29.0385, 0.83 ) }
    dend_8 { pt3dadd( 121.618, 173.508, 31.4657, 0.83 ) }
    dend_8 { pt3dadd( 125.907, 180.291, 35.5716, 0.83 ) }
    dend_8 { pt3dadd( 129.721, 187.148, 40.0098, 0.83 ) }
    dend_8 { pt3dadd( 134.585, 193.053, 44.7778, 0.83 ) }
    dend_8 { pt3dadd( 138.41, 199.764, 49.4247, 0.83 ) }
    dend_8 { pt3dadd( 142.77, 207.155, 52.189, 0.83 ) }
    dend_8 { pt3dadd( 147.504, 214.128, 55.3862, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_8 { pt3dadd( 153.006, 220.334, 58.9197, 0.83 ) }
    dend_8 { pt3dadd( 158.943, 226.738, 61.156, 0.83 ) }
    dend_8 { pt3dadd( 166.291, 231.404, 63.4998, 0.83 ) }
    dend_8 { pt3dadd( 173.089, 237.036, 65.3246, 0.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 4/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 4.08937, 47.6091, -9.59989, 0.83 ) }
    dend_7 { pt3dadd( 1.03476, 55.2817, -15.0745, 0.83 ) }
    dend_7 { pt3dadd( 0.524478, 57.3095, -16.0974, 0.83 ) }
    dend_7 { pt3dadd( 0.220304, 59.009, -16.8126, 0.83 ) }
    dend_7 { pt3dadd( -0.165474, 61.3508, -17.6547, 0.83 ) }
    dend_7 { pt3dadd( -0.524654, 63.4475, -18.3581, 0.83 ) }
    dend_7 { pt3dadd( -0.881422, 65.7765, -19.0891, 0.83 ) }
    dend_7 { pt3dadd( -1.11782, 68.9555, -19.6619, 0.83 ) }
    dend_7 { pt3dadd( -1.32255, 71.8356, -20.2099, 0.83 ) }
    dend_7 { pt3dadd( -1.48088, 74.4373, -20.6974, 0.83 ) }
    dend_7 { pt3dadd( -1.59988, 78.0741, -21.4126, 0.83 ) }
    dend_7 { pt3dadd( -1.58734, 80.2213, -21.8721, 0.83 ) }
    dend_7 { pt3dadd( -1.53, 82.0566, -22.2305, 0.83 ) }
    dend_7 { pt3dadd( -1.33818, 83.8626, -22.6214, 0.83 ) }
    dend_7 { pt3dadd( -0.974169, 85.8448, -23.0897, 0.83 ) }
    dend_7 { pt3dadd( -0.122008, 89.1134, -23.9465, 0.83 ) }
    dend_7 { pt3dadd( 0.372487, 90.8707, -24.3938, 0.83 ) }
    dend_7 { pt3dadd( 0.684675, 92.2184, -24.8045, 0.83 ) }
    dend_7 { pt3dadd( 1.61466, 96.7035, -26.3054, 0.83 ) }
    dend_7 { pt3dadd( 1.97193, 98.6971, -26.9988, 0.83 ) }
    dend_7 { pt3dadd( 2.24905, 100.749, -27.6988, 0.83 ) }
    dend_7 { pt3dadd( 2.46469, 103.638, -28.5637, 0.83 ) }
    dend_7 { pt3dadd( 2.68261, 107.498, -29.7008, 0.83 ) }
    dend_7 { pt3dadd( 2.78067, 109.609, -30.2759, 0.83 ) }
    dend_7 { pt3dadd( 2.77806, 110.544, -30.471, 0.83 ) }
    dend_7 { pt3dadd( 2.72265, 111.934, -30.7264, 0.83 ) }
    dend_7 { pt3dadd( 2.56686, 115.592, -31.2732, 0.83 ) }
    dend_7 { pt3dadd( 2.56588, 117.22, -31.5327, 0.83 ) }
    dend_7 { pt3dadd( 2.60487, 119.579, -31.8677, 0.83 ) }
    dend_7 { pt3dadd( 2.6722, 122.052, -32.2622, 0.83 ) }
    dend_7 { pt3dadd( 2.74787, 123.883, -32.5631, 0.83 ) }
    dend_7 { pt3dadd( 2.97966, 128.166, -33.2828, 0.83 ) }
    dend_7 { pt3dadd( 3.37294, 132.953, -34.068, 0.83 ) }
    dend_7 { pt3dadd( 3.57433, 135.007, -34.3746, 0.83 ) }
    dend_7 { pt3dadd( 3.80038, 136.971, -34.652, 0.83 ) }
    dend_7 { pt3dadd( 4.23906, 139.945, -34.9794, 0.83 ) }
    dend_7 { pt3dadd( 4.77134, 143.489, -35.2775, 0.83 ) }
    dend_7 { pt3dadd( 5.19421, 146.878, -35.3959, 0.83 ) }
    dend_7 { pt3dadd( 5.32328, 148.342, -35.3635, 0.83 ) }
    dend_7 { pt3dadd( 5.54445, 151.487, -35.26, 0.83 ) }
    dend_7 { pt3dadd( 5.66245, 154.095, -35.1468, 0.83 ) }
    dend_7 { pt3dadd( 5.70148, 155.797, -35.0213, 1.11 ) }
    dend_7 { pt3dadd( 5.70133, 158.891, -34.7577, 1.11 ) }
    dend_7 { pt3dadd( 5.58538, 161.893, -34.4965, 1.11 ) }
    dend_7 { pt3dadd( 5.40387, 165.026, -34.1653, 1.11 ) }
    dend_7 { pt3dadd( 5.26912, 167.367, -33.9012, 1.11 ) }
    dend_7 { pt3dadd( 5.16046, 170.323, -33.5822, 0.83 ) }
    dend_7 { pt3dadd( 5.13477, 172.971, -33.2243, 1.38 ) }
    dend_7 { pt3dadd( 5.1797, 174.927, -32.9439, 1.38 ) }
    dend_7 { pt3dadd( 5.28857, 178.058, -32.464, 0.83 ) }
    dend_7 { pt3dadd( 5.307, 179.373, -32.2453, 0.83 ) }
    dend_7 { pt3dadd( 5.34663, 181.434, -31.9315, 0.83 ) }
    dend_7 { pt3dadd( 5.20126, 184.301, -31.7907, 1.11 ) }
    dend_7 { pt3dadd( 4.89717, 186.47, -31.927, 1.38 ) }
    dend_7 { pt3dadd( 4.51413, 188.744, -32.2999, 1.38 ) }
    dend_7 { pt3dadd( 4.27411, 190.173, -32.6104, 1.38 ) }
    dend_7 { pt3dadd( 3.92311, 192.576, -33.1808, 0.83 ) }
    dend_7 { pt3dadd( 3.4762, 196.301, -34.0926, 1.38 ) }
    dend_7 { pt3dadd( 3.23556, 199.052, -34.5921, 0.83 ) }
    dend_7 { pt3dadd( 3.07988, 201.888, -34.9723, 0.83 ) }
    dend_7 { pt3dadd( 3.04852, 204.27, -35.1281, 0.83 ) }
    dend_7 { pt3dadd( 3.16497, 206.92, -35.1339, 1.11 ) }
    dend_7 { pt3dadd( 3.29808, 208.293, -34.9103, 1.11 ) }
    dend_7 { pt3dadd( 3.79371, 212.087, -33.7353, 1.11 ) }
    dend_7 { pt3dadd( 4.11129, 214.518, -32.7467, 1.11 ) }
    dend_7 { pt3dadd( 4.3759, 216.774, -31.6888, 1.11 ) }
    dend_7 { pt3dadd( 4.53781, 218.38, -30.8962, 1.11 ) }
    dend_7 { pt3dadd( 4.98806, 223.387, -28.4818, 1.38 ) }
    dend_7 { pt3dadd( 5.16707, 226.013, -27.3237, 1.11 ) }
    dend_7 { pt3dadd( 5.28033, 228.232, -26.5071, 1.11 ) }
    dend_7 { pt3dadd( 5.3841, 231.333, -25.5202, 1.11 ) }
    dend_7 { pt3dadd( 5.42471, 234.174, -24.7127, 0.83 ) }
    dend_7 { pt3dadd( 5.42812, 237.365, -23.9335, 0.83 ) }
    dend_7 { pt3dadd( 5.42319, 239.2, -23.6118, 0.83 ) }
    dend_7 { pt3dadd( 5.43142, 242.759, -23.0212, 0.83 ) }
    dend_7 { pt3dadd( 5.24047, 246.498, -22.7115, 0.83 ) }
    dend_7 { pt3dadd( 5.07031, 248.376, -22.8671, 0.83 ) }
    dend_7 { pt3dadd( 4.832, 250.196, -23.2013, 0.83 ) }
    dend_7 { pt3dadd( 4.41598, 252.565, -24.0926, 0.83 ) }
    dend_7 { pt3dadd( 4.07512, 254.404, -25.0013, 0.83 ) }
    dend_7 { pt3dadd( 2.97865, 259.439, -27.9067, 1.11 ) }
    dend_7 { pt3dadd( 1.88198, 264.059, -30.9056, 1.38 ) }
    dend_7 { pt3dadd( 1.10124, 267.236, -33.1401, 0.83 ) }
    dend_7 { pt3dadd( -0.407723, 272.9, -37.3975, 0.83 ) }
    dend_7 { pt3dadd( -0.920529, 274.804, -38.9318, 0.83 ) }
    dend_7 { pt3dadd( -1.25374, 276.143, -40.0337, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 90/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 4.08937, 47.6091, -9.59989, 1.38 ) }
    dend_4 { pt3dadd( 5.63863, 53.8746, -6.55502, 1.38 ) }
    dend_4 { pt3dadd( 6.4688, 57.2416, -5.10272, 1.38 ) }
    dend_4 { pt3dadd( 7.10247, 59.7278, -4.17435, 1.38 ) }
    dend_4 { pt3dadd( 7.92736, 62.7606, -3.12578, 1.38 ) }
    dend_4 { pt3dadd( 8.8658, 66.2109, -1.93287, 1.38 ) }
    dend_4 { pt3dadd( 9.50865, 68.5744, -1.1157, 1.38 ) }
    dend_4 { pt3dadd( 10.3239, 71.6484, -0.353291, 1.38 ) }
    dend_4 { pt3dadd( 11.0635, 74.4179, 0.394833, 1.38 ) }
    dend_4 { pt3dadd( 11.7142, 76.5664, 0.925907, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 0/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -7.95999, -50.2023, -23.4575, 0.28 ) }
    dend_29 { pt3dadd( -8.29569, -50.8093, -23.9322, 0.28 ) }
    dend_29 { pt3dadd( -8.95902, -52.0087, -24.8701, 0.83 ) }
    dend_29 { pt3dadd( -10.4296, -54.6678, -26.9495, 0.83 ) }
    dend_29 { pt3dadd( -12.2423, -57.9455, -29.5126, 0.55 ) }
    dend_29 { pt3dadd( -12.9353, -59.1987, -30.4926, 0.55 ) }
    dend_29 { pt3dadd( -14.0099, -61.1417, -32.012, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 7/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -7.95999, -50.2023, -23.4575, 0.83 ) }
    dend_24 { pt3dadd( -8.59762, -52.1828, -25.346, 0.83 ) }
    dend_24 { pt3dadd( -9.10594, -53.9609, -27.1893, 0.83 ) }
    dend_24 { pt3dadd( -9.93989, -57.1843, -30.5276, 0.83 ) }
    dend_24 { pt3dadd( -10.5957, -59.9657, -33.439, 0.83 ) }
    dend_24 { pt3dadd( -10.7889, -60.7308, -34.3021, 0.83 ) }
    dend_24 { pt3dadd( -11.4736, -63.2307, -37.2588, 0.83 ) }
    dend_24 { pt3dadd( -12.2453, -65.9727, -40.5377, 1.11 ) }
    dend_24 { pt3dadd( -12.7633, -67.8042, -42.7189, 0.83 ) }
    dend_24 { pt3dadd( -13.5546, -70.5952, -46.3296, 0.83 ) }
    dend_24 { pt3dadd( -14.3923, -73.7556, -50.7223, 0.83 ) }
    dend_24 { pt3dadd( -14.9795, -75.8839, -53.7774, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 19/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -43.3115, 205.646, -116.814, 0.83 ) }
    dend_12 { pt3dadd( -43.7631, 210.29, -121.404, 0.83 ) }
    dend_12 { pt3dadd( -44.0939, 213.659, -124.653, 0.83 ) }
    dend_12 { pt3dadd( -44.6874, 217.417, -128.473, 0.83 ) }
    dend_12 { pt3dadd( -46.132, 224.976, -136.139, 0.83 ) }
    dend_12 { pt3dadd( -47.37, 230.672, -141.902, 0.83 ) }
    dend_12 { pt3dadd( -48.3448, 234.664, -145.896, 1.11 ) }
    dend_12 { pt3dadd( -49.0096, 236.952, -148.33, 1.11 ) }
    dend_12 { pt3dadd( -51.1948, 243.155, -155.059, 1.11 ) }
    dend_12 { pt3dadd( -51.6716, 244.386, -156.325, 1.11 ) }
    dend_12 { pt3dadd( -52.8442, 247.218, -158.717, 1.11 ) }
    dend_12 { pt3dadd( -53.6922, 249.114, -160.208, 1.11 ) }
    dend_12 { pt3dadd( -56.0664, 254.0, -163.926, 1.11 ) }
    dend_12 { pt3dadd( -57.5322, 256.528, -166.04, 1.11 ) }
    dend_12 { pt3dadd( -58.521, 258.268, -167.428, 1.11 ) }
    dend_12 { pt3dadd( -62.2059, 264.539, -172.64, 1.11 ) }
    dend_12 { pt3dadd( -63.8596, 267.216, -174.909, 1.11 ) }
    dend_12 { pt3dadd( -65.3912, 269.545, -176.985, 1.11 ) }
    dend_12 { pt3dadd( -70.2386, 275.765, -182.908, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 38/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -43.3115, 205.646, -116.814, 1.11 ) }
    dend_11 { pt3dadd( -42.6157, 209.421, -116.82, 1.11 ) }
    dend_11 { pt3dadd( -42.0281, 212.346, -116.843, 1.11 ) }
    dend_11 { pt3dadd( -41.2818, 216.088, -116.874, 1.11 ) }
    dend_11 { pt3dadd( -40.7294, 218.809, -116.901, 1.11 ) }
    dend_11 { pt3dadd( -39.9725, 222.522, -117.168, 0.83 ) }
    dend_11 { pt3dadd( -39.2917, 225.711, -117.526, 0.83 ) }
    dend_11 { pt3dadd( -38.6888, 228.679, -117.985, 0.83 ) }
    dend_11 { pt3dadd( -38.3922, 230.012, -118.249, 0.83 ) }
    dend_11 { pt3dadd( -38.1229, 231.289, -118.536, 0.83 ) }
    dend_11 { pt3dadd( -36.9636, 236.098, -119.236, 1.11 ) }
    dend_11 { pt3dadd( -36.1078, 238.983, -119.373, 1.11 ) }
    dend_11 { pt3dadd( -34.8477, 242.855, -118.596, 0.55 ) }
    dend_11 { pt3dadd( -34.4813, 243.854, -118.132, 0.83 ) }
    dend_11 { pt3dadd( -33.5981, 245.957, -116.196, 0.83 ) }
    dend_11 { pt3dadd( -31.5801, 250.452, -110.836, 0.83 ) }
    dend_11 { pt3dadd( -30.7557, 252.165, -108.512, 0.83 ) }
    dend_11 { pt3dadd( -29.0405, 255.408, -103.831, 1.11 ) }
    dend_11 { pt3dadd( -28.4436, 256.329, -102.331, 1.11 ) }
    dend_11 { pt3dadd( -25.6532, 260.699, -95.1705, 1.11 ) }
    dend_11 { pt3dadd( -25.1169, 261.501, -93.8205, 1.11 ) }
    dend_11 { pt3dadd( -24.2838, 262.858, -91.7314, 1.11 ) }
    dend_11 { pt3dadd( -23.3186, 264.397, -89.2945, 1.11 ) }
    dend_11 { pt3dadd( -19.4238, 269.438, -81.9284, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 11.7142, 76.5664, 0.925907, 0.83 ) }
    dend_6 { pt3dadd( 11.1942, 81.5323, 0.301061, 0.83 ) }
    dend_6 { pt3dadd( 10.7203, 84.7169, 0.109119, 0.83 ) }
    dend_6 { pt3dadd( 10.3909, 86.1123, 0.106477, 0.55 ) }
    dend_6 { pt3dadd( 9.97045, 87.8046, 0.295777, 1.38 ) }
    dend_6 { pt3dadd( 8.87447, 91.9001, 0.812186, 1.38 ) }
    dend_6 { pt3dadd( 8.3154, 94.1098, 1.12223, 1.11 ) }
    dend_6 { pt3dadd( 7.83841, 96.1441, 1.69037, 1.66 ) }
    dend_6 { pt3dadd( 7.12868, 98.9334, 2.61412, 0.55 ) }
    dend_6 { pt3dadd( 6.131, 102.735, 3.44663, 1.38 ) }
    dend_6 { pt3dadd( 5.0809, 106.872, 3.96101, 0.83 ) }
    dend_6 { pt3dadd( 4.46424, 109.428, 4.17773, 1.38 ) }
    dend_6 { pt3dadd( 3.45122, 113.952, 4.44493, 1.11 ) }
    dend_6 { pt3dadd( 2.96015, 115.932, 4.52896, 1.66 ) }
    dend_6 { pt3dadd( 0.671804, 124.704, 4.71003, 0.83 ) }
    dend_6 { pt3dadd( -0.567888, 128.922, 4.8605, 1.38 ) }
    dend_6 { pt3dadd( -1.70608, 132.515, 5.14073, 1.11 ) }
    dend_6 { pt3dadd( -2.70082, 135.614, 5.5615, 1.38 ) }
    dend_6 { pt3dadd( -3.36804, 137.748, 6.02119, 0.55 ) }
    dend_6 { pt3dadd( -3.98477, 139.954, 6.79669, 0.83 ) }
    dend_6 { pt3dadd( -4.74142, 143.038, 8.35831, 1.11 ) }
    dend_6 { pt3dadd( -5.36101, 145.635, 9.65652, 1.38 ) }
    dend_6 { pt3dadd( -6.30659, 149.939, 11.6717, 1.11 ) }
    dend_6 { pt3dadd( -6.71854, 152.478, 12.8366, 0.83 ) }
    dend_6 { pt3dadd( -6.82983, 153.447, 13.2511, 0.83 ) }
    dend_6 { pt3dadd( -7.04283, 155.427, 14.0415, 0.83 ) }
    dend_6 { pt3dadd( -7.2092, 157.718, 15.1056, 0.83 ) }
    dend_6 { pt3dadd( -7.21821, 159.15, 15.8844, 0.83 ) }
    dend_6 { pt3dadd( -6.99626, 162.188, 17.8018, 0.83 ) }
    dend_6 { pt3dadd( -6.74773, 163.941, 19.0266, 0.83 ) }
    dend_6 { pt3dadd( -6.57729, 164.682, 19.6197, 0.83 ) }
    dend_6 { pt3dadd( -5.009, 169.914, 24.1846, 0.83 ) }
    dend_6 { pt3dadd( -4.39847, 171.724, 25.7502, 0.83 ) }
    dend_6 { pt3dadd( -3.16834, 175.123, 28.8293, 0.83 ) }
    dend_6 { pt3dadd( -2.5086, 176.814, 30.4121, 0.83 ) }
    dend_6 { pt3dadd( -1.08482, 180.087, 33.5087, 0.83 ) }
    dend_6 { pt3dadd( -0.634155, 181.086, 34.3832, 0.83 ) }
    dend_6 { pt3dadd( 0.312902, 183.384, 35.8536, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_6 { pt3dadd( 0.730537, 192.723, 38.2246, 0.83 ) }
    dend_6 { pt3dadd( 1.46775, 201.927, 41.0102, 0.83 ) }
    dend_6 { pt3dadd( 2.57659, 210.735, 44.7782, 0.83 ) }
    dend_6 { pt3dadd( 3.81241, 220.059, 46.9102, 0.83 ) }
    dend_6 { pt3dadd( 2.75103, 229.527, 48.4131, 0.83 ) }
    dend_6 { pt3dadd( 0.0148787, 238.764, 48.8698, 0.83 ) }
    dend_6 { pt3dadd( -1.08064, 248.346, 48.8404, 0.83 ) }
    dend_6 { pt3dadd( -1.73729, 257.962, 49.1756, 0.83 ) }
    dend_6 { pt3dadd( -2.42079, 267.572, 48.7363, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 9/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 11.7142, 76.5664, 0.925907, 0.83 ) }
    dend_5 { pt3dadd( 12.9191, 79.6425, -0.14077, 0.83 ) }
    dend_5 { pt3dadd( 14.5364, 83.7563, -1.26909, 0.83 ) }
    dend_5 { pt3dadd( 15.0626, 85.0633, -1.56391, 0.83 ) }
    dend_5 { pt3dadd( 15.8362, 86.9026, -1.9241, 0.83 ) }
    dend_5 { pt3dadd( 16.7404, 88.9883, -2.28235, 0.83 ) }
    dend_5 { pt3dadd( 17.9657, 91.7817, -2.71155, 0.83 ) }
    dend_5 { pt3dadd( 18.7326, 93.422, -2.83903, 0.83 ) }
    dend_5 { pt3dadd( 19.7792, 95.412, -2.83492, 0.83 ) }
    dend_5 { pt3dadd( 20.7127, 97.0891, -2.82703, 0.83 ) }
    dend_5 { pt3dadd( 21.5759, 98.4705, -2.83937, 0.83 ) }
    dend_5 { pt3dadd( 21.9727, 99.0665, -2.84097, 0.83 ) }
    dend_5 { pt3dadd( 23.3453, 101.041, -2.80318, 0.83 ) }
    dend_5 { pt3dadd( 25.7972, 104.376, -2.63718, 0.83 ) }
    dend_5 { pt3dadd( 26.6677, 105.585, -2.52358, 1.11 ) }
    dend_5 { pt3dadd( 28.5284, 108.211, -2.2186, 1.11 ) }
    dend_5 { pt3dadd( 30.4996, 111.047, -1.86819, 1.11 ) }
    dend_5 { pt3dadd( 31.6108, 112.68, -1.66755, 1.11 ) }
    dend_5 { pt3dadd( 32.3074, 113.751, -1.53452, 1.11 ) }
    dend_5 { pt3dadd( 33.9992, 116.426, -1.23064, 0.83 ) }
    dend_5 { pt3dadd( 35.2591, 118.458, -1.01096, 0.83 ) }
    dend_5 { pt3dadd( 36.2449, 120.121, -0.880199, 0.83 ) }
    dend_5 { pt3dadd( 37.2244, 121.758, -0.866021, 0.83 ) }
    dend_5 { pt3dadd( 37.9219, 122.868, -0.93562, 0.83 ) }
    dend_5 { pt3dadd( 38.4636, 123.7, -1.01482, 0.83 ) }
    dend_5 { pt3dadd( 39.0353, 124.523, -1.12823, 0.83 ) }
    dend_5 { pt3dadd( 39.8972, 125.76, -1.29882, 0.83 ) }
    dend_5 { pt3dadd( 40.8158, 127.04, -1.48147, 0.83 ) }
    dend_5 { pt3dadd( 41.8651, 128.437, -1.63663, 0.83 ) }
    dend_5 { pt3dadd( 42.8416, 129.734, -1.7494, 0.83 ) }
    dend_5 { pt3dadd( 43.5968, 130.751, -1.82149, 0.83 ) }
    dend_5 { pt3dadd( 44.265, 131.657, -1.87911, 0.83 ) }
    dend_5 { pt3dadd( 44.9517, 132.541, -1.94808, 0.83 ) }
    dend_5 { pt3dadd( 47.3932, 135.744, -2.20614, 0.55 ) }
    dend_5 { pt3dadd( 48.3038, 136.943, -2.31159, 0.55 ) }
    dend_5 { pt3dadd( 49.6526, 138.703, -2.47908, 0.55 ) }
    dend_5 { pt3dadd( 51.0978, 140.614, -2.59823, 1.11 ) }
    dend_5 { pt3dadd( 52.8969, 143.041, -2.6875, 0.55 ) }
    dend_5 { pt3dadd( 53.8174, 144.332, -2.66888, 0.55 ) }
    dend_5 { pt3dadd( 54.8938, 145.938, -2.56467, 0.55 ) }
    dend_5 { pt3dadd( 55.3476, 146.631, -2.48975, 0.55 ) }
    dend_5 { pt3dadd( 56.7823, 148.875, -2.24113, 0.55 ) }
    dend_5 { pt3dadd( 57.2042, 149.56, -2.1391, 0.55 ) }
    dend_5 { pt3dadd( 59.4734, 153.447, -1.42677, 0.55 ) }
    dend_5 { pt3dadd( 61.0697, 156.144, -0.925044, 0.83 ) }
    dend_5 { pt3dadd( 61.544, 156.953, -0.780696, 0.83 ) }
    dend_5 { pt3dadd( 63.8653, 160.931, -0.15704, 1.11 ) }
    dend_5 { pt3dadd( 65.6702, 164.042, 0.232906, 1.11 ) }
    dend_5 { pt3dadd( 67.2333, 166.731, 0.548789, 0.55 ) }
    dend_5 { pt3dadd( 67.978, 168.034, 0.676264, 0.55 ) }
    dend_5 { pt3dadd( 68.7621, 169.42, 0.795297, 0.55 ) }
    dend_5 { pt3dadd( 69.6119, 171.012, 0.911955, 0.83 ) }
    dend_5 { pt3dadd( 70.2789, 172.364, 0.9765, 0.83 ) }
    dend_5 { pt3dadd( 70.3736, 172.566, 0.968124, 0.28 ) }
    dend_5 { pt3dadd( 71.3904, 174.86, 0.802266, 0.28 ) }
    dend_5 { pt3dadd( 71.8461, 176.044, 0.734807, 0.83 ) }
    dend_5 { pt3dadd( 72.3872, 177.59, 0.714655, 0.83 ) }
    dend_5 { pt3dadd( 72.756, 178.654, 0.73266, 0.83 ) }
    dend_5 { pt3dadd( 73.0391, 179.528, 0.694636, 0.83 ) }
    dend_5 { pt3dadd( 73.4528, 180.901, 0.580306, 0.83 ) }
    dend_5 { pt3dadd( 73.8887, 182.185, 0.417908, 0.83 ) }
    dend_5 { pt3dadd( 74.5654, 184.008, 0.139713, 0.83 ) }
    dend_5 { pt3dadd( 75.6808, 186.816, -0.340815, 0.55 ) }
    dend_5 { pt3dadd( 76.8911, 189.731, -0.8741, 0.55 ) }
    dend_5 { pt3dadd( 77.8392, 191.913, -1.29194, 1.38 ) }
    dend_5 { pt3dadd( 79.0675, 194.635, -1.83029, 0.55 ) }
    dend_5 { pt3dadd( 79.9665, 196.517, -2.21694, 0.55 ) }
    dend_5 { pt3dadd( 80.4941, 197.589, -2.43735, 0.55 ) }
    dend_5 { pt3dadd( 80.9745, 198.58, -2.58931, 0.83 ) }
    dend_5 { pt3dadd( 81.7354, 200.23, -2.712, 0.83 ) }
    dend_5 { pt3dadd( 82.3441, 201.725, -2.80514, 0.83 ) }
    dend_5 { pt3dadd( 82.7068, 202.794, -2.85325, 0.83 ) }
    dend_5 { pt3dadd( 83.3721, 204.607, -2.94797, 0.83 ) }
    dend_5 { pt3dadd( 83.8671, 205.86, -3.02269, 0.83 ) }
    dend_5 { pt3dadd( 84.5033, 207.301, -3.12622, 0.83 ) }
    dend_5 { pt3dadd( 85.2202, 208.748, -3.25067, 0.83 ) }
    dend_5 { pt3dadd( 85.8964, 210.004, -3.37288, 0.83 ) }
    dend_5 { pt3dadd( 87.4084, 212.813, -3.64612, 0.83 ) }
    dend_5 { pt3dadd( 88.9588, 215.521, -3.93389, 0.83 ) }
    dend_5 { pt3dadd( 89.6679, 216.659, -4.06997, 0.83 ) }
    dend_5 { pt3dadd( 90.4604, 217.845, -4.2258, 0.83 ) }
    dend_5 { pt3dadd( 91.1915, 218.929, -4.37004, 0.83 ) }
    dend_5 { pt3dadd( 92.3242, 220.651, -4.59162, 0.83 ) }
    dend_5 { pt3dadd( 97.364, 227.011, -4.25581, 0.83 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 93/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -14.0099, -61.1417, -32.012, 0.55 ) }
    dend_31 { pt3dadd( -15.4612, -61.7191, -32.9388, 0.55 ) }
    dend_31 { pt3dadd( -16.4238, -62.1394, -33.5557, 0.55 ) }
    dend_31 { pt3dadd( -19.5579, -63.487, -35.6411, 0.83 ) }
    dend_31 { pt3dadd( -21.1234, -64.1555, -36.6317, 0.28 ) }
    dend_31 { pt3dadd( -22.2414, -64.6421, -37.3208, 0.55 ) }
    dend_31 { pt3dadd( -26.673, -66.7483, -40.2134, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_31 { pt3dadd( -27.6317, -67.222, -40.8529, 0.83 ) }
    dend_31 { pt3dadd( -31.4262, -69.2381, -43.412, 0.55 ) }
    dend_31 { pt3dadd( -32.3346, -69.7816, -44.0178, 0.55 ) }
    dend_31 { pt3dadd( -33.9063, -70.7201, -45.075, 0.55 ) }
    dend_31 { pt3dadd( -37.1677, -72.5815, -47.3344, 0.55 ) }
    dend_31 { pt3dadd( -38.8401, -73.4799, -48.4948, 0.55 ) }
    dend_31 { pt3dadd( -40.2649, -74.165, -49.5732, 0.55 ) }
    dend_31 { pt3dadd( -41.5593, -74.758, -50.5721, 0.28 ) }
    dend_31 { pt3dadd( -45.3664, -76.3807, -53.6452, 0.83 ) }
    dend_31 { pt3dadd( -49.8925, -78.1497, -57.3218, 0.55 ) }
    dend_31 { pt3dadd( -53.3606, -79.3985, -60.1531, 0.55 ) }
    dend_31 { pt3dadd( -56.6234, -80.5354, -62.9014, 0.28 ) }
    dend_31 { pt3dadd( -57.6875, -80.8899, -63.7826, 0.55 ) }
    dend_31 { pt3dadd( -61.0318, -82.0019, -66.533, 0.28 ) }
    dend_31 { pt3dadd( -61.8725, -82.3036, -67.223, 0.55 ) }
    dend_31 { pt3dadd( -63.1861, -82.8305, -68.248, 0.28 ) }
    dend_31 { pt3dadd( -63.8843, -83.1847, -68.7838, 0.55 ) }
    dend_31 { pt3dadd( -65.5684, -84.2642, -70.0991, 0.28 ) }
    dend_31 { pt3dadd( -66.0752, -84.647, -70.5404, 0.55 ) }
    dend_31 { pt3dadd( -66.9874, -85.5435, -71.4767, 0.28 ) }
    dend_31 { pt3dadd( -67.3364, -85.9618, -71.9521, 0.55 ) }
    dend_31 { pt3dadd( -68.2047, -87.3301, -73.586, 0.28 ) }
    dend_31 { pt3dadd( -68.6387, -88.148, -74.6163, 0.55 ) }
    dend_31 { pt3dadd( -68.9474, -88.8005, -75.4622, 0.28 ) }
    dend_31 { pt3dadd( -69.509, -90.0221, -77.0401, 0.55 ) }
    dend_31 { pt3dadd( -70.1003, -91.1311, -78.4669, 0.28 ) }
    dend_31 { pt3dadd( -70.6039, -91.9389, -79.4954, 0.55 ) }
    dend_31 { pt3dadd( -71.4694, -93.1327, -80.8727, 0.28 ) }
    dend_31 { pt3dadd( -72.1428, -93.911, -81.7283, 0.55 ) }
    dend_31 { pt3dadd( -72.9688, -94.8265, -82.6534, 0.28 ) }
    dend_31 { pt3dadd( -74.4857, -96.4458, -84.1503, 0.55 ) }
    dend_31 { pt3dadd( -76.469, -98.5344, -85.9433, 0.28 ) }
    dend_31 { pt3dadd( -77.7954, -99.8557, -87.0615, 0.55 ) }
    dend_31 { pt3dadd( -79.9048, -102.022, -88.8097, 0.28 ) }
    dend_31 { pt3dadd( -80.5203, -102.629, -89.3262, 0.55 ) }
    dend_31 { pt3dadd( -81.6109, -103.667, -90.2246, 0.28 ) }
    dend_31 { pt3dadd( -82.7299, -104.736, -91.1905, 0.55 ) }
    dend_31 { pt3dadd( -84.7808, -106.652, -92.9561, 0.83 ) }
    dend_31 { pt3dadd( -85.5604, -107.33, -93.6476, 0.83 ) }
    dend_31 { pt3dadd( -88.5543, -109.9, -96.2254, 0.28 ) }
    dend_31 { pt3dadd( -89.0241, -110.264, -96.6272, 0.55 ) }
    dend_31 { pt3dadd( -90.5453, -111.42, -97.8963, 0.28 ) }
    dend_31 { pt3dadd( -91.6003, -112.186, -98.8221, 0.55 ) }
    dend_31 { pt3dadd( -93.4537, -113.571, -100.5, 0.28 ) }
    dend_31 { pt3dadd( -94.7216, -114.517, -101.681, 0.83 ) }
    dend_31 { pt3dadd( -97.6388, -116.954, -104.484, 0.28 ) }
    dend_31 { pt3dadd( -98.4585, -117.706, -105.316, 0.83 ) }
    dend_31 { pt3dadd( -100.913, -120.27, -107.907, 0.28 ) }
    dend_31 { pt3dadd( -101.273, -120.742, -108.348, 0.55 ) }
    dend_31 { pt3dadd( -101.514, -121.157, -108.704, 0.28 ) }
    dend_31 { pt3dadd( -102.089, -122.5, -109.798, 0.28 ) }
    dend_31 { pt3dadd( -101.99, -123.431, -110.084, 0.55 ) }
    dend_31 { pt3dadd( -101.359, -125.052, -110.026, 0.28 ) }
    dend_31 { pt3dadd( -100.341, -126.83, -109.385, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 54/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -14.0099, -61.1417, -32.012, 0.55 ) }
    dend_30 { pt3dadd( -13.9754, -62.2939, -31.9483, 0.55 ) }
    dend_30 { pt3dadd( -13.9108, -63.0874, -31.9055, 0.55 ) }
    dend_30 { pt3dadd( -13.898, -63.1986, -31.8995, 0.28 ) }
    dend_30 { pt3dadd( -13.7577, -64.2143, -31.8455, 0.55 ) }
    dend_30 { pt3dadd( -13.6218, -65.3597, -31.775, 0.55 ) }
    dend_30 { pt3dadd( -13.5806, -65.7155, -31.7557, 0.28 ) }
    dend_30 { pt3dadd( -13.5106, -66.346, -31.7213, 0.55 ) }
    dend_30 { pt3dadd( -13.4961, -66.8131, -31.7017, 0.28 ) }
    dend_30 { pt3dadd( -13.498, -67.2806, -31.6969, 0.55 ) }
    dend_30 { pt3dadd( -13.5206, -67.8654, -31.7105, 0.28 ) }
    dend_30 { pt3dadd( -13.6293, -69.162, -31.7768, 0.55 ) }
    dend_30 { pt3dadd( -13.6867, -69.6257, -31.8053, 0.28 ) }
    dend_30 { pt3dadd( -13.7788, -70.238, -31.8448, 0.55 ) }
    dend_30 { pt3dadd( -13.8709, -70.7907, -31.8756, 0.28 ) }
    dend_30 { pt3dadd( -13.8935, -70.95, -31.8933, 0.55 ) }
    dend_30 { pt3dadd( -14.0038, -71.8672, -32.0209, 0.28 ) }
    dend_30 { pt3dadd( -14.0844, -72.542, -32.1323, 0.55 ) }
    dend_30 { pt3dadd( -14.1509, -73.2068, -32.2493, 0.55 ) }
    dend_30 { pt3dadd( -14.2795, -74.4012, -32.4514, 0.55 ) }
    dend_30 { pt3dadd( -14.4613, -75.6152, -32.6508, 0.55 ) }
    dend_30 { pt3dadd( -14.5998, -76.4115, -32.8096, 0.55 ) }
    dend_30 { pt3dadd( -14.7114, -77.0412, -32.9693, 0.28 ) }
    dend_30 { pt3dadd( -14.7564, -77.2768, -33.0531, 0.55 ) }
    dend_30 { pt3dadd( -14.8288, -77.6625, -33.2143, 0.28 ) }
    dend_30 { pt3dadd( -14.9055, -78.1695, -33.4488, 0.55 ) }
    dend_30 { pt3dadd( -15.0204, -78.9431, -33.8079, 0.28 ) }
    dend_30 { pt3dadd( -15.2182, -80.4425, -34.558, 0.55 ) }
    dend_30 { pt3dadd( -15.3919, -81.9341, -35.3042, 0.28 ) }
    dend_30 { pt3dadd( -15.4196, -82.2312, -35.4612, 0.55 ) }
    dend_30 { pt3dadd( -15.4727, -82.8656, -35.8038, 0.28 ) }
    dend_30 { pt3dadd( -15.4908, -83.1504, -35.9446, 0.55 ) }
    dend_30 { pt3dadd( -15.5176, -83.4469, -36.0571, 0.28 ) }
    dend_30 { pt3dadd( -15.5641, -83.9868, -36.2208, 0.55 ) }
    dend_30 { pt3dadd( -15.6574, -84.817, -36.3831, 0.28 ) }
    dend_30 { pt3dadd( -15.7494, -85.3708, -36.4807, 0.55 ) }
    dend_30 { pt3dadd( -15.9374, -86.1513, -36.5945, 0.28 ) }
    dend_30 { pt3dadd( -16.2059, -87.0393, -36.749, 0.28 ) }
    dend_30 { pt3dadd( -16.554, -87.9876, -36.9371, 0.55 ) }
    dend_30 { pt3dadd( -17.0132, -89.0369, -37.1688, 0.55 ) }
    dend_30 { pt3dadd( -17.4114, -89.8376, -37.3755, 0.28 ) }
    dend_30 { pt3dadd( -17.8304, -90.6517, -37.6614, 0.55 ) }
    dend_30 { pt3dadd( -18.2968, -91.5232, -38.0142, 0.55 ) }
    dend_30 { pt3dadd( -18.6129, -92.1176, -38.2755, 0.28 ) }
    dend_30 { pt3dadd( -18.9916, -92.8925, -38.6184, 0.28 ) }
    dend_30 { pt3dadd( -19.5254, -94.1738, -39.1449, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_30 { pt3dadd( -20.059, -95.741, -39.6989, 0.28 ) }
    dend_30 { pt3dadd( -20.3048, -96.6404, -39.9585, 0.83 ) }
    dend_30 { pt3dadd( -20.4115, -97.1248, -40.0656, 0.55 ) }
    dend_30 { pt3dadd( -20.6829, -98.5082, -40.3019, 0.28 ) }
    dend_30 { pt3dadd( -20.9067, -99.8625, -40.4143, 0.55 ) }
    dend_30 { pt3dadd( -21.0261, -100.876, -40.3737, 0.28 ) }
    dend_30 { pt3dadd( -21.0848, -101.552, -40.2734, 0.55 ) }
    dend_30 { pt3dadd( -21.1291, -102.172, -40.136, 0.28 ) }
    dend_30 { pt3dadd( -21.1795, -102.795, -39.9557, 0.55 ) }
    dend_30 { pt3dadd( -21.281, -103.751, -39.6308, 0.28 ) }
    dend_30 { pt3dadd( -21.4117, -104.646, -39.4219, 0.28 ) }
    dend_30 { pt3dadd( -21.4681, -104.978, -39.3659, 0.55 ) }
    dend_30 { pt3dadd( -21.6466, -105.916, -39.2726, 0.28 ) }
    dend_30 { pt3dadd( -21.7577, -106.417, -39.2649, 0.55 ) }
    dend_30 { pt3dadd( -22.0264, -107.562, -39.398, 0.28 ) }
    dend_30 { pt3dadd( -22.4567, -109.061, -39.7986, 0.55 ) }
    dend_30 { pt3dadd( -22.6133, -109.53, -39.9678, 0.28 ) }
    dend_30 { pt3dadd( -22.7843, -110.053, -40.2234, 0.55 ) }
    dend_30 { pt3dadd( -22.988, -110.743, -40.6234, 0.28 ) }
    dend_30 { pt3dadd( -23.2163, -111.613, -41.1699, 0.55 ) }
    dend_30 { pt3dadd( -23.4126, -112.399, -41.671, 0.28 ) }
    dend_30 { pt3dadd( -23.5133, -112.829, -41.9132, 0.55 ) }
    dend_30 { pt3dadd( -23.7601, -114.006, -42.5176, 0.28 ) }
    dend_30 { pt3dadd( -23.9131, -114.899, -42.9781, 0.83 ) }
    dend_30 { pt3dadd( -24.0069, -115.523, -43.2748, 0.28 ) }
    dend_30 { pt3dadd( -24.1271, -116.102, -43.535, 0.55 ) }
    dend_30 { pt3dadd( -24.2453, -116.533, -43.7189, 0.28 ) }
    dend_30 { pt3dadd( -24.4513, -117.209, -44.0067, 0.55 ) }
    dend_30 { pt3dadd( -25.0622, -118.843, -44.6683, 0.28 ) }
    dend_30 { pt3dadd( -25.2147, -119.18, -44.8383, 0.55 ) }
    dend_30 { pt3dadd( -25.8013, -120.324, -45.5075, 0.28 ) }
    dend_30 { pt3dadd( -26.0527, -120.772, -45.8296, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 32/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -14.9795, -75.8839, -53.7774, 0.55 ) }
    dend_28 { pt3dadd( -15.537, -78.0252, -55.8376, 0.55 ) }
    dend_28 { pt3dadd( -15.6755, -78.5633, -56.2959, 0.83 ) }
    dend_28 { pt3dadd( -16.1907, -80.0919, -57.5161, 0.28 ) }
    dend_28 { pt3dadd( -16.5553, -81.0275, -58.297, 0.55 ) }
    dend_28 { pt3dadd( -17.0051, -82.1245, -59.2479, 0.28 ) }
    dend_28 { pt3dadd( -17.4469, -83.0063, -60.0126, 0.55 ) }
    dend_28 { pt3dadd( -17.863, -83.7679, -60.6573, 0.28 ) }
    dend_28 { pt3dadd( -18.6206, -85.0341, -61.7119, 0.55 ) }
    dend_28 { pt3dadd( -19.3737, -86.1856, -62.6577, 0.28 ) }
    dend_28 { pt3dadd( -19.9771, -87.041, -63.5115, 0.55 ) }
    dend_28 { pt3dadd( -21.287, -88.687, -65.3752, 0.55 ) }
    dend_28 { pt3dadd( -22.0701, -89.6258, -66.6112, 0.55 ) }
    dend_28 { pt3dadd( -22.6026, -90.2678, -67.5325, 0.28 ) }
    dend_28 { pt3dadd( -23.5775, -91.4856, -69.4854, 0.55 ) }
    dend_28 { pt3dadd( -25.0303, -93.3579, -72.6784, 0.83 ) }
    dend_28 { pt3dadd( -25.625, -94.1096, -74.1193, 0.55 ) }
    dend_28 { pt3dadd( -26.394, -95.1848, -76.3662, 0.28 ) }
    dend_28 { pt3dadd( -26.5837, -95.4682, -76.9658, 0.83 ) }
    dend_28 { pt3dadd( -27.3337, -96.7941, -79.6772, 0.28 ) }
    dend_28 { pt3dadd( -27.4976, -97.1601, -80.3406, 0.55 ) }
    dend_28 { pt3dadd( -27.8982, -98.3721, -82.128, 0.28 ) }
    dend_28 { pt3dadd( -28.1115, -99.2245, -83.2188, 0.55 ) }
    dend_28 { pt3dadd( -28.3603, -100.252, -84.3029, 0.28 ) }
    dend_28 { pt3dadd( -28.5154, -101.116, -85.0105, 0.55 ) }
    dend_28 { pt3dadd( -28.6533, -102.358, -85.641, 0.28 ) }
    dend_28 { pt3dadd( -28.684, -103.148, -85.8732, 0.55 ) }
    dend_28 { pt3dadd( -28.6259, -103.935, -85.935, 0.28 ) }
    dend_28 { pt3dadd( -28.5365, -104.805, -85.8913, 0.55 ) }
    dend_28 { pt3dadd( -28.2134, -106.494, -85.6584, 0.28 ) }
    dend_28 { pt3dadd( -28.112, -107.007, -85.62, 0.55 ) }
    dend_28 { pt3dadd( -27.8305, -108.578, -85.577, 0.28 ) }
    dend_28 { pt3dadd( -27.777, -109.321, -85.7134, 0.55 ) }
    dend_28 { pt3dadd( -27.8129, -110.206, -86.0505, 0.28 ) }
    dend_28 { pt3dadd( -27.9323, -110.841, -86.4273, 0.55 ) }
    dend_28 { pt3dadd( -28.4045, -112.784, -87.6989, 0.28 ) }
    dend_28 { pt3dadd( -28.5497, -113.364, -88.1217, 0.83 ) }
    dend_28 { pt3dadd( -29.058, -115.174, -89.5306, 0.28 ) }
    dend_28 { pt3dadd( -29.2366, -115.783, -89.9999, 0.55 ) }
    dend_28 { pt3dadd( -29.6044, -116.98, -90.9153, 0.28 ) }
    dend_28 { pt3dadd( -30.174, -118.855, -92.2291, 0.55 ) }
    dend_28 { pt3dadd( -30.7501, -121.016, -93.5441, 0.28 ) }
    dend_28 { pt3dadd( -30.9224, -121.72, -93.9149, 0.55 ) }
    dend_28 { pt3dadd( -31.1674, -122.84, -94.4131, 0.28 ) }
    dend_28 { pt3dadd( -31.4269, -124.03, -94.9513, 0.55 ) }
    dend_28 { pt3dadd( -31.6073, -124.88, -95.326, 0.28 ) }
    dend_28 { pt3dadd( -31.7353, -125.375, -95.5643, 0.55 ) }
    dend_28 { pt3dadd( -31.9924, -126.532, -96.0187, 0.28 ) }
    dend_28 { pt3dadd( -32.2482, -128.15, -96.6127, 0.83 ) }
    dend_28 { pt3dadd( -32.4232, -129.684, -97.1457, 0.28 ) }
    dend_28 { pt3dadd( -32.5234, -130.875, -97.5327, 0.28 ) }
    dend_28 { pt3dadd( -32.6242, -132.071, -97.9073, 0.28 ) }
    dend_28 { pt3dadd( -32.7626, -133.374, -98.2639, 0.55 ) }
    dend_28 { pt3dadd( -32.8701, -134.308, -98.4746, 0.28 ) }
    dend_28 { pt3dadd( -32.8853, -134.482, -98.4939, 0.55 ) }
    dend_28 { pt3dadd( -33.0604, -136.014, -98.6717, 0.28 ) }
    dend_28 { pt3dadd( -33.3363, -137.675, -98.9231, 0.28 ) }
    dend_28 { pt3dadd( -33.4891, -138.592, -99.1075, 0.55 ) }
    dend_28 { pt3dadd( -33.5882, -139.117, -99.2607, 0.28 ) }
    dend_28 { pt3dadd( -33.7738, -140.125, -99.5907, 0.55 ) }
    dend_28 { pt3dadd( -34.0669, -142.019, -100.225, 0.28 ) }
    dend_28 { pt3dadd( -34.1101, -142.489, -100.388, 0.55 ) }
    dend_28 { pt3dadd( -34.1404, -143.234, -100.647, 0.28 ) }
    dend_28 { pt3dadd( -34.1225, -143.574, -100.75, 0.55 ) }
    dend_28 { pt3dadd( -34.0506, -144.452, -100.942, 0.28 ) }
    dend_28 { pt3dadd( -33.974, -145.232, -101.019, 0.55 ) }
    dend_28 { pt3dadd( -33.9013, -145.961, -101.017, 0.28 ) }
    dend_28 { pt3dadd( -33.883, -146.134, -101.017, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_28 { pt3dadd( -33.8029, -147.312, -101.005, 0.28 ) }
    dend_28 { pt3dadd( -33.7435, -148.201, -100.997, 0.55 ) }
    dend_28 { pt3dadd( -33.6375, -149.827, -100.983, 0.28 ) }
    dend_28 { pt3dadd( -33.5711, -150.609, -100.98, 0.83 ) }
    dend_28 { pt3dadd( -33.4895, -151.634, -100.975, 0.28 ) }
    dend_28 { pt3dadd( -33.4067, -152.651, -100.968, 0.55 ) }
    dend_28 { pt3dadd( -33.3583, -153.6, -100.953, 0.28 ) }
    dend_28 { pt3dadd( -33.2855, -154.479, -100.944, 0.55 ) }
    dend_28 { pt3dadd( -33.2298, -155.111, -100.937, 0.28 ) }
    dend_28 { pt3dadd( -33.1912, -155.669, -100.927, 0.55 ) }
    dend_28 { pt3dadd( -33.1385, -157.251, -100.885, 0.28 ) }
    dend_28 { pt3dadd( -33.1124, -158.128, -100.847, 0.55 ) }
    dend_28 { pt3dadd( -33.1574, -159.395, -100.779, 0.28 ) }
    dend_28 { pt3dadd( -33.2155, -159.941, -100.822, 0.55 ) }
    dend_28 { pt3dadd( -33.4018, -160.805, -100.972, 0.28 ) }
    dend_28 { pt3dadd( -33.4423, -160.979, -101.002, 0.55 ) }
    dend_28 { pt3dadd( -33.6276, -161.716, -101.149, 0.28 ) }
    dend_28 { pt3dadd( -33.8334, -162.508, -101.397, 0.55 ) }
    dend_28 { pt3dadd( -34.4738, -164.775, -102.245, 0.28 ) }
    dend_28 { pt3dadd( -34.9115, -166.347, -102.91, 0.55 ) }
    dend_28 { pt3dadd( -35.3885, -167.987, -103.641, 0.28 ) }
    dend_28 { pt3dadd( -35.5719, -168.639, -103.907, 0.55 ) }
    dend_28 { pt3dadd( -36.1633, -170.735, -104.679, 0.28 ) }
    dend_28 { pt3dadd( -36.4708, -171.954, -105.012, 0.55 ) }
    dend_28 { pt3dadd( -36.7061, -172.913, -105.167, 0.28 ) }
    dend_28 { pt3dadd( -36.8459, -173.533, -105.243, 0.55 ) }
    dend_28 { pt3dadd( -37.1822, -175.317, -105.361, 0.28 ) }
    dend_28 { pt3dadd( -37.3279, -176.341, -105.388, 0.55 ) }
    dend_28 { pt3dadd( -37.4897, -177.807, -105.363, 0.28 ) }
    dend_28 { pt3dadd( -37.5503, -178.834, -105.37, 0.55 ) }
    dend_28 { pt3dadd( -37.5932, -180.08, -105.389, 0.28 ) }
    dend_28 { pt3dadd( -37.6442, -181.656, -105.446, 0.55 ) }
    dend_28 { pt3dadd( -37.6993, -183.629, -105.547, 0.28 ) }
    dend_28 { pt3dadd( -37.7239, -185.531, -105.645, 0.55 ) }
    dend_28 { pt3dadd( -37.7475, -187.099, -105.724, 0.28 ) }
    dend_28 { pt3dadd( -37.7474, -188.538, -105.766, 0.55 ) }
    dend_28 { pt3dadd( -37.7455, -189.287, -105.766, 0.28 ) }
    dend_28 { pt3dadd( -37.7292, -190.4, -105.709, 0.55 ) }
    dend_28 { pt3dadd( -37.6128, -191.975, -105.548, 0.28 ) }
    dend_28 { pt3dadd( -37.566, -192.374, -105.512, 0.55 ) }
    dend_28 { pt3dadd( -37.4012, -193.656, -105.418, 0.28 ) }
    dend_28 { pt3dadd( -37.3001, -194.208, -105.398, 0.55 ) }
    dend_28 { pt3dadd( -37.1862, -194.941, -105.378, 0.28 ) }
    dend_28 { pt3dadd( -37.1153, -195.86, -105.355, 0.55 ) }
    dend_28 { pt3dadd( -37.1281, -196.271, -105.337, 0.28 ) }
    dend_28 { pt3dadd( -37.2117, -196.787, -105.301, 0.55 ) }
    dend_28 { pt3dadd( -38.1374, -199.253, -105.014, 0.28 ) }
    dend_28 { pt3dadd( -38.6488, -200.375, -104.861, 0.55 ) }
    dend_28 { pt3dadd( -39.0762, -201.138, -104.735, 0.28 ) }
    dend_28 { pt3dadd( -39.5787, -201.867, -104.577, 0.55 ) }
    dend_28 { pt3dadd( -40.2519, -202.666, -104.366, 0.28 ) }
    dend_28 { pt3dadd( -41.2111, -203.416, -104.087, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 52/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -14.9795, -75.8839, -53.7774, 0.28 ) }
    dend_25 { pt3dadd( -14.9466, -76.7464, -55.4315, 0.28 ) }
    dend_25 { pt3dadd( -14.8536, -77.5565, -56.9778, 0.55 ) }
    dend_25 { pt3dadd( -14.8047, -77.8797, -57.734, 0.28 ) }
    dend_25 { pt3dadd( -14.7569, -78.1559, -58.386, 0.55 ) }
    dend_25 { pt3dadd( -14.2803, -80.9397, -64.7353, 0.28 ) }
    dend_25 { pt3dadd( -14.1934, -81.3783, -65.6864, 0.55 ) }
    dend_25 { pt3dadd( -13.9816, -82.6583, -68.2927, 0.55 ) }
    dend_25 { pt3dadd( -13.7767, -84.0149, -70.9333, 0.55 ) }
    dend_25 { pt3dadd( -13.5057, -85.6338, -73.8027, 0.83 ) }
    dend_25 { pt3dadd( -13.2269, -86.8817, -75.7576, 0.28 ) }
    dend_25 { pt3dadd( -12.784, -88.2143, -77.4918, 0.55 ) }
    dend_25 { pt3dadd( -12.2582, -89.8144, -79.3824, 0.55 ) }
    dend_25 { pt3dadd( -11.6749, -91.7306, -81.2478, 0.28 ) }
    dend_25 { pt3dadd( -11.353, -92.7515, -82.1105, 0.55 ) }
    dend_25 { pt3dadd( -10.6954, -94.483, -83.4735, 0.28 ) }
    dend_25 { pt3dadd( -10.2877, -95.4026, -84.2274, 0.55 ) }
    dend_25 { pt3dadd( -9.36022, -97.4118, -85.9418, 0.28 ) }
    dend_25 { pt3dadd( -8.88336, -98.3705, -86.8395, 0.55 ) }
    dend_25 { pt3dadd( -8.12602, -99.7181, -88.1427, 0.28 ) }
    dend_25 { pt3dadd( -7.0014, -101.662, -90.1023, 0.83 ) }
    dend_25 { pt3dadd( -5.06009, -105.002, -93.5312, 0.28 ) }
    dend_25 { pt3dadd( -4.23181, -106.365, -95.0101, 0.55 ) }
    dend_25 { pt3dadd( -2.76511, -108.555, -97.525, 0.28 ) }
    dend_25 { pt3dadd( -2.18311, -109.393, -98.5491, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 77/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -2.18311, -109.393, -98.5491, 0.28 ) }
    dend_27 { pt3dadd( -1.71517, -110.407, -99.5116, 0.28 ) }
    dend_27 { pt3dadd( -1.55822, -110.677, -99.875, 0.55 ) }
    dend_27 { pt3dadd( -0.771463, -111.791, -101.5, 0.28 ) }
    dend_27 { pt3dadd( -0.140039, -112.657, -102.697, 0.55 ) }
    dend_27 { pt3dadd( 0.497348, -113.64, -104.082, 0.28 ) }
    dend_27 { pt3dadd( 0.642367, -113.877, -104.413, 0.55 ) }
    dend_27 { pt3dadd( 1.7194, -115.761, -107.325, 0.28 ) }
    dend_27 { pt3dadd( 2.23192, -116.656, -108.905, 0.55 ) }
    dend_27 { pt3dadd( 2.72593, -117.621, -110.716, 0.28 ) }
    dend_27 { pt3dadd( 3.35701, -119.023, -113.392, 0.55 ) }
    dend_27 { pt3dadd( 3.73566, -120.128, -115.444, 0.55 ) }
    dend_27 { pt3dadd( 4.35272, -122.273, -119.236, 0.55 ) }
    dend_27 { pt3dadd( 4.79696, -123.954, -122.121, 0.55 ) }
    dend_27 { pt3dadd( 5.13992, -125.313, -124.43, 0.28 ) }
    dend_27 { pt3dadd( 5.36005, -126.055, -125.683, 0.55 ) }
    dend_27 { pt3dadd( 6.10798, -128.291, -129.207, 0.28 ) }
    dend_27 { pt3dadd( 6.39667, -129.128, -130.474, 0.83 ) }
    dend_27 { pt3dadd( 7.17544, -130.989, -133.156, 0.28 ) }
    dend_27 { pt3dadd( 7.39107, -131.47, -133.826, 0.55 ) }
    dend_27 { pt3dadd( 7.7477, -132.181, -134.906, 0.55 ) }
    dend_27 { pt3dadd( 8.52145, -133.779, -137.621, 0.55 ) }
    dend_27 { pt3dadd( 8.77189, -134.314, -138.732, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_27 { pt3dadd( 9.14502, -135.396, -141.139, 0.28 ) }
    dend_27 { pt3dadd( 9.31009, -136.029, -142.685, 0.55 ) }
    dend_27 { pt3dadd( 9.63752, -137.33, -145.91, 0.28 ) }
    dend_27 { pt3dadd( 9.86697, -138.366, -148.361, 0.55 ) }
    dend_27 { pt3dadd( 10.3869, -140.756, -153.964, 0.28 ) }
    dend_27 { pt3dadd( 10.5082, -141.586, -155.852, 0.55 ) }
    dend_27 { pt3dadd( 10.7702, -144.017, -161.321, 0.28 ) }
    dend_27 { pt3dadd( 10.8786, -144.969, -163.482, 0.55 ) }
    dend_27 { pt3dadd( 11.0472, -146.101, -165.956, 0.55 ) }
    dend_27 { pt3dadd( 11.3165, -147.712, -169.264, 0.28 ) }
    dend_27 { pt3dadd( 11.6797, -149.793, -173.299, 0.55 ) }
    dend_27 { pt3dadd( 11.7885, -150.448, -174.534, 0.55 ) }
    dend_27 { pt3dadd( 12.0853, -152.621, -178.392, 0.28 ) }
    dend_27 { pt3dadd( 12.1428, -153.164, -179.385, 0.55 ) }
    dend_27 { pt3dadd( 12.2683, -154.297, -181.507, 0.28 ) }
    dend_27 { pt3dadd( 12.3838, -155.169, -182.957, 0.55 ) }
    dend_27 { pt3dadd( 12.5364, -156.092, -184.37, 0.28 ) }
    dend_27 { pt3dadd( 12.6905, -157.18, -185.889, 0.55 ) }
    dend_27 { pt3dadd( 12.9218, -158.772, -187.798, 0.28 ) }
    dend_27 { pt3dadd( 13.149, -160.001, -189.102, 0.55 ) }
    dend_27 { pt3dadd( 13.7356, -162.611, -191.363, 0.28 ) }
    dend_27 { pt3dadd( 14.3988, -164.189, -192.893, 0.55 ) }
    dend_27 { pt3dadd( 14.9238, -165.149, -193.812, 0.28 ) }
    dend_27 { pt3dadd( 15.4549, -165.959, -194.509, 0.55 ) }
    dend_27 { pt3dadd( 16.0243, -166.71, -195.137, 0.28 ) }
    dend_27 { pt3dadd( 17.2061, -168.183, -196.674, 0.55 ) }
    dend_27 { pt3dadd( 19.2912, -170.585, -200.375, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 27/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -2.18311, -109.393, -98.5491, 0.55 ) }
    dend_26 { pt3dadd( -0.542241, -109.922, -97.8391, 0.55 ) }
    dend_26 { pt3dadd( 2.46981, -110.975, -96.6995, 0.55 ) }
    dend_26 { pt3dadd( 4.05964, -111.559, -96.0876, 0.28 ) }
    dend_26 { pt3dadd( 5.89391, -112.246, -95.335, 0.83 ) }
    dend_26 { pt3dadd( 7.11582, -112.737, -94.885, 0.28 ) }
    dend_26 { pt3dadd( 8.61047, -113.36, -94.377, 0.28 ) }
    dend_26 { pt3dadd( 9.28025, -113.666, -94.1881, 0.55 ) }
    dend_26 { pt3dadd( 11.2016, -114.706, -93.7176, 0.28 ) }
    dend_26 { pt3dadd( 12.2387, -115.299, -93.4857, 0.55 ) }
    dend_26 { pt3dadd( 13.8746, -116.345, -93.0822, 0.28 ) }
    dend_26 { pt3dadd( 14.0776, -116.482, -93.0345, 0.55 ) }
    dend_26 { pt3dadd( 16.1156, -117.847, -92.2818, 0.28 ) }
    dend_26 { pt3dadd( 17.2935, -118.632, -91.8785, 0.55 ) }
    dend_26 { pt3dadd( 19.0832, -119.77, -91.3307, 0.28 ) }
    dend_26 { pt3dadd( 19.9366, -120.274, -91.0595, 0.55 ) }
    dend_26 { pt3dadd( 21.6768, -121.138, -90.4786, 0.28 ) }
    dend_26 { pt3dadd( 24.5878, -122.403, -89.462, 0.28 ) }
    dend_26 { pt3dadd( 26.4325, -123.042, -88.8906, 0.55 ) }
    dend_26 { pt3dadd( 27.0941, -123.19, -88.7525, 0.28 ) }
    dend_26 { pt3dadd( 27.3369, -123.219, -88.7309, 0.55 ) }
    dend_26 { pt3dadd( 29.2766, -123.2, -88.6512, 0.55 ) }
    dend_26 { pt3dadd( 31.1062, -122.977, -88.7004, 0.28 ) }
    dend_26 { pt3dadd( 32.2169, -122.738, -88.7681, 0.55 ) }
    dend_26 { pt3dadd( 34.3789, -122.165, -88.8203, 0.28 ) }
    dend_26 { pt3dadd( 35.3319, -121.904, -88.8543, 0.55 ) }
    dend_26 { pt3dadd( 36.5845, -121.526, -88.9175, 0.28 ) }
    dend_26 { pt3dadd( 38.189, -120.959, -89.0357, 0.55 ) }
    dend_26 { pt3dadd( 40.2152, -120.21, -89.2526, 0.28 ) }
    dend_26 { pt3dadd( 41.5769, -119.707, -89.2371, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_15, dend_0, dend_33, dend_16, dend_14, dend_1, dend_35, dend_34, dend_20, dend_17, dend_2, dend_37, dend_36, dend_32, dend_21, dend_19, dend_18, dend_9, dend_3, dend_23, dend_22, dend_13, dend_10, dend_8, dend_7, dend_4, dend_29, dend_24, dend_12, dend_11, dend_6, dend_5, dend_31, dend_30, dend_28, dend_25, dend_27, dend_26]}
    ModelViewParmSubset_2 = new SectionList()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_15, dend_0, dend_33, dend_16, dend_14, dend_1, dend_35, dend_34, dend_20, dend_17, dend_2, dend_37, dend_36, dend_32, dend_21, dend_19, dend_18, dend_9, dend_3, dend_23, dend_22, dend_13, dend_10, dend_8, dend_7, dend_4, dend_29, dend_24, dend_12, dend_11, dend_6, dend_5, dend_31, dend_30, dend_28, dend_25, dend_27, dend_26]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_33 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_14 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_34 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_32 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_18 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_22 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_13 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_10 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_8 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_24 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_12 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_11 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_6 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_5 OneSecGrp_SectionRef_35.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_30 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_28 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_25 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_27 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_26 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_15 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_16 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_20 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_2 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_17 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_3 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_23 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_9 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_29 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_4 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_37 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_36 OneSecGrp_SectionRef_16.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_15, dend_15, dend_15, dend_0, dend_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_3, dend_3, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_33 nseg = 3
    dend_14 nseg = 7
    dend_35 nseg = 7
    dend_34 nseg = 9
    dend_32 nseg = 13
    dend_19 nseg = 7
    dend_18 nseg = 9
    dend_22 nseg = 9
    dend_13 nseg = 15
    dend_10 nseg = 9
    dend_8 nseg = 13
    dend_7 nseg = 13
    dend_24 nseg = 3
    dend_12 nseg = 5
    dend_11 nseg = 5
    dend_6 nseg = 11
    dend_5 nseg = 9
    dend_31 nseg = 7
    dend_30 nseg = 3
    dend_28 nseg = 7
    dend_25 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L23_DBC_4d1e2d44e8_0_0


