// Cell: cNAC187_L5_BP_d97748152f_0_0
/*
{
  "id" : "cNAC187_L5_BP_d97748152f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.20313, 8.40301, 2.86677, 0.83", "-6.21085, 10.7343, 3.32038, 1.11", "-7.98423, 12.1079, 3.55634, 0.83", "-9.70713, 13.4308, 3.76775, 0.83", "-10.7273, 14.1851, 3.8836, 1.11", "-13.9217, 16.5424, 4.2549, 1.11", "-19.6353, 20.5781, 4.91125, 0.83", "-21.6937, 21.9766, 5.12799, 0.83", "-23.3237, 23.0512, 5.26262, 0.83", "-24.9132, 24.1161, 5.37915, 0.83", "-26.2071, 24.9938, 5.44203, 0.55", "-27.1797, 25.5881, 5.50584, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.38984, 6.15002, -6.16237, 0.55", "6.75673, 6.66203, -6.69094, 0.55", "8.13015, 6.79128, -7.39035, 0.83", "10.3038, 6.92883, -8.68956, 0.55", "11.3531, 6.99522, -9.31671, 1.38", "13.9331, 7.15848, -10.8587, 0.55", "15.0319, 7.1032, -11.5945, 0.83", "20.716, 6.08934, -15.7284, 0.55", "21.2659, 5.953, -16.1833, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.696324, -11.5636, 3.61847, 1.11", "-0.767841, -17.8737, 5.88061, 1.11", "-0.796968, -20.4435, 6.8019, 0.83", "-0.835663, -23.8577, 8.02588, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "1.01484, 10.5828, -1.43203, 1.11", "1.22823, 13.2133, -1.42278, 1.11", "1.58676, 17.5044, -1.2505, 1.38", "1.61143, 17.7433, -1.23722, 1.38", "2.09755, 20.6909, -1.06787, 0.83", "2.76054, 23.8017, -0.740404, 0.83", "3.86741, 27.2993, 0.0117498, 0.83", "4.4745, 28.6183, 0.437744, 0.83", "5.0568, 29.5676, 0.825299, 1.11", "6.72084, 31.8705, 1.80145, 0.55", "8.65178, 34.2663, 2.9735, 0.83", "11.1215, 36.7113, 4.26145, 0.55", "12.3596, 37.7185, 4.82703, 0.83", "14.1058, 39.0796, 5.73561, 0.55", "16.2897, 40.812, 6.99217, 0.55", "19.3765, 43.427, 8.94939, 0.55", "22.7829, 46.4209, 11.1115, 0.55", "24.9772, 48.364, 12.7777, 0.55", "27.7216, 50.8214, 15.1814, 0.55", "28.2988, 51.3131, 15.7331, 0.83", "29.8393, 52.6115, 17.3022, 0.55", "31.1184, 53.6206, 18.5233, 0.83", "34.0936, 56.3989, 21.4307, 0.55", "35.1732, 57.4144, 22.2498, 0.83", "36.1406, 58.1562, 22.7703, 0.55", "37.0757, 58.7909, 23.1409, 0.83", "39.1113, 59.9596, 23.7613, 0.83", "41.7728, 61.5555, 24.3589, 0.83", "43.3843, 62.6167, 24.5596, 0.55", "44.6184, 63.5413, 24.7194, 0.55", "47.8453, 65.9288, 25.0923, 0.83", "49.9172, 67.46, 25.2532, 0.55", "53.0415, 69.6997, 25.3751, 0.55", "55.8809, 71.569, 25.3764, 0.55", "58.4073, 73.148, 25.3112, 0.55", "61.573, 74.9902, 25.0876, 0.55", "63.4898, 75.8786, 24.8888, 0.55", "64.77, 76.3704, 24.5988, 0.55", "66.437, 76.7108, 24.0688, 0.55", "68.8777, 76.8035, 23.0687, 0.55", "70.3827, 76.6592, 22.3835, 0.55", "72.6044, 76.3837, 21.5442, 0.55", "76.9018, 75.9972, 20.3391, 0.55", "80.3174, 75.8531, 19.6399, 0.55", "83.9775, 75.8746, 19.1177, 0.55", "86.3556, 75.968, 18.9685, 0.55", "92.6162, 76.7647, 18.9836, 0.55", "96.3723, 77.5145, 19.2652, 0.55", "99.2342, 78.2539, 19.7303, 0.55", "100.994, 78.9786, 20.0777, 0.55", "103.041, 80.0787, 20.4717, 0.55", "106.473, 82.2719, 20.8513, 0.55", "107.246, 82.8023, 20.8358, 0.55", "109.437, 84.2161, 20.6508, 0.55", "111.458, 85.7342, 20.4741, 0.83", "112.558, 86.5772, 20.3608, 0.55", "114.204, 88.0334, 20.1283, 0.83", "123.213, 95.7975, 21.1213, 0.83", "131.04, 104.801, 21.4121, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-27.1797, 25.5881, 5.50584, 0.55", "-29.0145, 27.018, 4.31344, 0.55", "-31.0097, 28.5728, 3.01683, 0.55", "-33.4174, 30.449, 1.4521, 0.55", "-35.4055, 31.9984, 0.160057, 0.83", "-37.0715, 33.2967, -0.922671, 0.55", "-40.164, 35.7065, -2.93238, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-27.1797, 25.5881, 5.50584, 0.55", "-29.1904, 25.9731, 5.24043, 0.55", "-31.3336, 26.3103, 5.17046, 0.55", "-33.7647, 26.6873, 5.1505, 0.55", "-37.2911, 27.1872, 5.44486, 0.55", "-40.2454, 27.5146, 5.8995, 0.55", "-43.3463, 27.807, 6.50787, 0.55", "-46.3492, 27.8788, 7.41518, 0.55", "-48.9387, 27.683, 8.44129, 0.55", "-52.1713, 27.205, 10.0611, 0.55", "-53.58, 26.8895, 10.9591, 0.55", "-55.1028, 26.531, 11.9943, 0.55", "-57.7875, 25.6993, 13.694, 0.55", "-59.2127, 25.2664, 14.374, 0.55", "-60.7054, 24.7676, 15.0765, 0.55", "-62.4778, 24.2011, 15.7324, 0.55", "-64.403, 23.6269, 16.3933, 0.55", "-67.1497, 22.8021, 17.2763, 0.55", "-70.8127, 21.9536, 18.1311, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "21.2659, 5.953, -16.1833, 0.55", "27.1433, 8.02833, -17.5521, 0.55", "30.5739, 8.95683, -18.8008, 0.55", "33.9793, 9.71382, -20.062, 0.55", "36.3166, 10.1383, -20.9102, 0.55", "39.7408, 10.6834, -22.113, 0.55", "46.8686, 11.6482, -24.8108, 0.55", "54.9822, 12.6203, -28.4005, 0.55", "58.9552, 12.8132, -30.3782, 0.55", "61.0945, 12.847, -31.5676, 0.55", "63.4427, 12.8827, -32.9663, 0.55", "67.6453, 12.835, -35.4307, 0.55", "69.1835, 12.7243, -36.3633, 0.55", "75.6969, 12.3467, -40.8184, 0.55", "80.3125, 12.1063, -44.3114, 0.55", "82.9671, 12.008, -46.3997, 0.55", "85.6171, 11.8878, -48.4775, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "21.2659, 5.953, -16.1833, 0.83", "23.0979, 7.07171, -16.1982, 0.83", "24.1451, 7.71093, -16.2549, 0.55", "25.6867, 8.68793, -16.4694, 0.83", "26.7233, 9.37195, -16.6448, 0.55", "28.1531, 10.3534, -16.8649, 0.83", "29.8725, 11.5664, -17.0653, 0.55", "30.7374, 12.112, -17.1312, 0.55", "32.7267, 13.0939, -17.1457, 0.83", "34.5319, 13.7632, -16.9259, 0.55", "35.5408, 14.1253, -16.7059, 0.83", "37.0546, 14.6998, -16.215, 0.55", "39.2287, 15.5602, -15.2292, 0.55", "42.247, 16.596, -13.7062, 0.55", "45.1245, 17.4768, -12.0547, 0.55", "47.404, 18.1495, -10.7055, 0.55", "51.162, 19.276, -8.46085, 0.55", "53.9115, 20.1788, -6.7564, 0.55", "55.5717, 20.8632, -5.66359, 0.55", "58.6291, 22.4387, -3.6176, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.835663, -23.8577, 8.02588, 0.83", "-1.17647, -25.8312, 7.99145, 0.83", "-1.50851, -27.754, 7.95791, 0.83", "-1.87923, -29.9007, 7.92046, 0.83", "-2.07282, -31.0218, 7.9009, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.835663, -23.8577, 8.02588, 0.55", "-0.202235, -25.4838, 9.07176, 0.55", "0.386672, -27.4692, 10.4575, 0.55", "0.77709, -30.0588, 12.416, 0.55", "0.861683, -31.0634, 13.2114, 0.83", "0.873457, -33.621, 15.5561, 0.55", "0.774179, -34.9385, 16.803, 0.55", "0.537939, -37.4993, 19.3421, 0.83", "0.265104, -39.398, 21.3596, 0.55", "-0.101845, -40.9595, 23.0137, 0.55", "-0.869177, -43.9143, 26.0995, 0.55", "-1.48117, -46.2693, 28.5309, 0.55", "-1.93056, -48.1586, 30.5027, 0.55", "-2.30309, -50.1678, 32.5213, 0.28", "-2.39096, -51.0068, 33.3226, 0.55", "-2.52189, -52.5573, 34.7106, 0.28", "-2.43518, -54.9863, 36.4676, 0.55", "-4.04065, -63.0061, 42.9467, 0.55", "-5.76825, -70.4115, 50.0916, 0.55", "-6.85564, -76.516, 58.4836, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-40.164, 35.7065, -2.93238, 0.55", "-43.429, 35.642, -2.30815, 0.55", "-44.8445, 35.4989, -1.93286, 0.83", "-46.5534, 35.1969, -1.34731, 0.55", "-47.8905, 34.9303, -0.809534, 0.83", "-51.3908, 34.3371, 0.612938, 0.55", "-52.7195, 34.1267, 1.16574, 0.28", "-54.981, 33.7406, 2.23319, 0.55", "-58.0125, 33.2402, 3.66027, 0.55", "-60.2894, 32.8908, 4.66714, 0.55", "-63.3076, 32.4515, 5.94059, 0.28", "-64.0693, 32.3693, 6.20303, 0.55", "-65.6314, 32.2318, 6.70633, 0.28", "-66.6682, 32.1907, 6.97975, 0.55", "-68.7371, 32.1511, 7.38863, 0.28", "-69.9327, 32.0912, 7.55654, 0.55", "-72.041, 31.8482, 7.81741, 0.28", "-73.4435, 31.6929, 7.94891, 0.55", "-82.9858, 28.9296, 11.6713, 0.55", "-91.9881, 25.0089, 15.6881, 0.55", "-100.668, 20.1588, 19.3859, 0.55", "-109.1, 14.3639, 22.1913, 0.55", "-116.789, 8.47565, 26.5229, 0.55", "-125.109, 3.1507, 30.3906, 0.55", "-133.743, -0.709788, 35.1977, 0.55", "-142.258, -5.29004, 39.5638, 0.55", "-150.713, -9.34604, 44.5237, 0.55", "-158.795, -13.691, 49.8487, 0.55", "-165.933, -19.3251, 55.3122, 0.55", "-173.271, -24.1197, 61.2889, 0.55", "-180.583, -29.75, 66.5221, 0.55", "-186.842, -36.0391, 72.3375, 0.55", "-191.69, -42.0643, 79.5993, 0.55", "-196.173, -49.6262, 85.5386, 0.55", "-199.237, -57.516, 91.9347, 0.55", "-202.907, -65.0186, 98.4759, 0.55", "-207.726, -71.7804, 105.079, 0.55", "-214.618, -76.7618, 111.422, 0.55", "-220.609, -82.9157, 117.65, 0.55", "-225.071, -87.9113, 125.877, 0.55", "-231.078, -91.9509, 133.632, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-40.164, 35.7065, -2.93238, 0.55", "-41.0675, 36.8504, -4.67172, 0.55", "-41.6068, 38.0866, -6.48425, 0.55", "-42.0484, 39.5061, -8.33289, 0.55", "-42.3249, 40.3951, -9.49048, 0.55", "-42.8294, 42.0166, -11.6021, 0.83", "-43.1984, 43.2029, -13.1469, 0.55", "-43.4756, 44.8547, -15.3656, 0.83", "-43.4494, 45.8799, -16.531, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-70.8127, 21.9536, 18.1311, 0.28", "-71.5915, 20.6449, 17.6658, 0.28", "-71.9613, 20.0895, 17.4147, 0.28", "-72.4424, 19.3069, 17.031, 0.55", "-72.8398, 18.6173, 16.701, 0.28", "-73.427, 17.5646, 16.2131, 0.55", "-75.0648, 14.4612, 14.8363, 0.28", "-75.5975, 13.3833, 14.264, 0.55", "-76.4033, 11.7303, 13.3238, 0.28", "-76.8653, 10.747, 12.7148, 0.55", "-77.1838, 10.0716, 12.2776, 0.28", "-77.5472, 9.29549, 11.7827, 0.55", "-78.6492, 6.6937, 10.2042, 0.28", "-78.9947, 5.91074, 9.69651, 0.55", "-79.5939, 4.73221, 8.78416, 0.28", "-80.0841, 3.98966, 8.12337, 0.28", "-80.5232, 3.4997, 7.65604, 0.55", "-82.0548, 2.12867, 6.37271, 0.28", "-82.7671, 1.57493, 5.86176, 0.55", "-84.5068, 0.32888, 4.60301, 0.28", "-86.2466, -0.763541, 3.44755, 0.28", "-88.1371, -1.79035, 2.2706, 0.28", "-89.0033, -2.1716, 1.8145, 0.55", "-93.2108, -6.76868, -1.49768, 0.55", "-97.9313, -11.5939, -3.5571, 0.55", "-102.517, -16.0128, -6.59775, 0.55", "-107.192, -19.9163, -10.1642, 0.55", "-111.895, -23.2375, -14.2457, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-70.8127, 21.9536, 18.1311, 0.55", "-71.8786, 21.8551, 18.3004, 0.55", "-74.879, 21.6173, 19.1681, 0.55", "-76.0049, 21.5044, 19.5573, 0.55", "-78.6505, 21.1623, 20.521, 0.55", "-82.7231, 20.6593, 21.801, 0.55", "-84.8415, 20.4598, 22.4223, 0.28", "-88.1376, 20.0713, 23.3309, 0.55", "-90.5857, 19.7239, 23.9219, 0.55", "-91.6193, 19.5706, 24.1744, 0.28", "-97.8194, 18.6468, 25.6808, 0.55", "-100.717, 18.0642, 26.2193, 0.28", "-104.629, 17.2418, 26.7168, 0.28", "-108.005, 16.5638, 26.9426, 0.55", "-121.177, 16.1213, 30.514, 0.55", "-133.865, 15.4793, 35.5189, 0.55", "-145.763, 13.5952, 41.9478, 0.55", "-157.334, 14.0943, 49.1791, 0.55", "-167.154, 14.386, 58.662, 0.55", "-174.987, 15.6278, 69.7771, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "85.6171, 11.8878, -48.4775, 0.55", "91.5972, 13.6217, -53.5805, 0.55", "93.503, 14.0648, -55.2972, 0.55", "95.8971, 14.5468, -57.4027, 0.55", "100.257, 15.3367, -61.4697, 0.55", "104.835, 15.9554, -65.7909, 0.55", "107.094, 16.0922, -67.8145, 0.83", "108.975, 16.0543, -69.5938, 0.55", "110.402, 15.8881, -71.0408, 0.83", "113.909, 14.9862, -74.6691, 0.55", "116.83, 13.9872, -77.6275, 0.55", "120.187, 12.8455, -80.8721, 0.55", "123.914, 11.6608, -84.5745, 0.55", "126.423, 10.8004, -87.1054, 0.55", "129.258, 9.80602, -90.043, 0.55", "131.704, 8.99767, -92.7559, 0.55", "133.234, 8.5846, -94.6781, 0.55", "135.242, 7.6926, -98.5805, 0.55", "136.363, 7.03878, -101.009, 0.55", "137.412, 5.96763, -104.215, 0.55", "138.935, 3.95401, -109.607, 0.55", "139.259, 3.44945, -110.814, 0.28", "143.41, -2.83211, -125.449, 0.28", "144.76, -4.62761, -129.748, 0.83", "149.992, -11.2276, -144.933, 0.83", "152.661, -14.5634, -151.924, 0.83", "153.916, -16.0158, -154.727, 0.55", "155.316, -17.4222, -157.452, 0.55", "158.982, -20.0225, -162.455, 0.55", "162.825, -22.2785, -166.826, 0.28", "163.913, -22.5335, -167.018, 0.55", "166.257, -22.7835, -166.66, 0.28", "167.687, -22.8004, -166.254, 0.55", "169.173, -22.814, -165.702, 0.28", "170.944, -22.7277, -164.976, 0.55", "173.588, -22.5131, -164.197, 0.28", "175.721, -22.4184, -163.628, 0.55", "178.072, -22.1944, -163.214, 0.28", "181.277, -21.9323, -162.936, 0.55", "184.871, -21.5969, -162.853, 0.55", "188.035, -21.3041, -162.996, 0.28", "192.419, -20.9046, -163.44, 0.55", "200.007, -20.1584, -165.045, 0.55", "203.355, -19.7336, -166.187, 0.55", "204.793, -19.521, -166.842, 0.83", "207.541, -19.1436, -168.342, 0.55", "209.443, -18.828, -169.516, 0.83", "214.546, -17.8571, -172.757, 0.55", "217.692, -17.4916, -174.776, 0.28", "219.021, -17.3907, -175.463, 0.55", "222.685, -17.368, -176.887, 0.28", "223.979, -17.4587, -177.281, 0.55", "226.65, -17.731, -177.665, 0.28", "229.38, -18.1752, -177.553, 0.55", "234.893, -19.1788, -176.344, 0.28", "237.437, -19.6993, -175.506, 0.55", "241.238, -20.6435, -174.027, 0.28", "246.03, -21.7873, -171.995, 0.55", "249.489, -22.5594, -170.483, 0.55", "255.453, -23.7001, -167.803, 0.28", "257.895, -24.0969, -166.918, 0.55", "262.095, -24.6351, -165.884, 0.28", "266.255, -24.9173, -165.195, 0.55", "268.518, -24.8811, -165.176, 0.28", "270.536, -24.6103, -165.367, 0.55", "276.213, -23.612, -166.508, 0.28", "280.235, -22.6335, -167.442, 0.28", "283.703, -21.5379, -168.356, 0.55", "287.525, -20.2582, -169.583, 0.28", "288.479, -19.8686, -169.871, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "85.6171, 11.8878, -48.4775, 0.55", "86.14, 10.4499, -49.3905, 0.55", "86.4724, 9.22289, -50.0777, 0.28", "86.7741, 8.09955, -50.6112, 0.55", "87.5357, 5.73034, -51.7635, 0.28", "87.5799, 5.58063, -51.8572, 0.55", "87.8342, 4.79791, -52.4129, 0.28", "87.987, 4.14366, -52.9763, 0.55", "88.1095, 3.45621, -53.6425, 0.28", "88.2503, 2.51548, -54.5945, 0.55", "88.6015, 0.153508, -56.9407, 0.55", "88.898, -2.00202, -59.1172, 0.55", "89.1184, -3.72654, -60.8594, 0.55", "89.3041, -5.42444, -62.5423, 0.55", "89.3504, -5.86311, -62.9588, 0.28", "89.4123, -6.33008, -63.365, 0.55", "89.556, -6.97064, -63.8682, 0.28", "89.9271, -8.10688, -64.6643, 0.55", "90.8167, -10.2618, -65.8414, 0.55", "91.3035, -11.4187, -66.3691, 0.28", "91.7309, -12.6018, -66.9582, 0.55", "92.2094, -14.2709, -67.8471, 0.28", "92.5109, -15.6265, -68.5968, 0.55", "92.8768, -17.6614, -69.7223, 0.28", "93.2692, -19.7649, -70.8223, 0.55", "93.7998, -22.823, -72.4464, 0.28", "94.0479, -24.4565, -73.3176, 0.55", "94.2759, -26.1304, -74.248, 0.28", "94.4631, -27.6066, -75.1573, 0.28", "94.7616, -29.4494, -76.4505, 0.55", "95.1529, -31.1463, -77.6063, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "58.6291, 22.4387, -3.6176, 0.55", "61.0725, 22.1378, -3.00778, 0.55", "62.8555, 21.8392, -2.73073, 0.55", "66.7619, 21.128, -2.32779, 0.55", "68.5207, 20.7621, -2.30258, 0.55", "70.4424, 20.3984, -2.37572, 0.55", "73.0264, 19.9451, -2.66055, 0.55", "75.755, 19.3789, -3.21715, 0.55", "77.1893, 19.0533, -3.67268, 0.55", "80.1099, 18.3675, -4.998, 0.55", "81.4558, 18.0603, -5.65188, 0.55", "84.6094, 17.275, -7.26272, 0.55", "86.7433, 16.6575, -8.33137, 0.55", "88.3127, 16.1973, -9.04537, 0.83", "90.8177, 15.3693, -10.1525, 0.55", "93.2674, 14.4425, -11.1341, 0.83", "95.343, 13.5635, -11.8868, 0.55", "97.1897, 12.8142, -12.4601, 0.55", "98.2401, 12.4384, -12.7298, 0.83", "100.692, 11.5762, -13.2288, 0.28", "101.911, 11.2033, -13.4012, 0.28", "103.09, 10.7627, -13.6258, 0.28", "104.365, 10.3208, -13.8763, 0.28", "106.406, 9.65035, -14.3218, 0.28", "107.227, 9.39232, -14.4769, 0.55", "109.19, 8.80689, -14.6539, 0.55", "112.721, 7.72887, -14.7903, 0.55", "113.697, 7.40673, -14.7831, 0.55", "114.567, 7.09219, -14.7373, 0.83", "116.458, 6.47751, -14.4854, 0.55", "118.101, 5.94802, -14.2398, 0.55", "119.655, 5.45488, -14.0008, 0.55", "120.857, 5.04953, -13.8492, 0.55", "122.761, 4.26527, -13.6972, 0.55", "125.001, 3.13108, -13.6349, 0.55", "128.473, 0.951404, -13.7684, 0.55", "130.372, -0.542058, -13.9525, 0.55", "132.01, -2.13352, -14.1839, 0.28", "132.496, -2.72193, -14.2773, 0.55", "133.558, -4.36751, -14.5264, 0.28", "134.459, -6.20952, -14.7721, 0.55", "135.287, -8.49609, -14.903, 0.55", "135.847, -9.99482, -14.9184, 0.28", "136.052, -10.5228, -14.8983, 0.55", "136.587, -11.8334, -14.8301, 0.28", "137.319, -13.5361, -14.7003, 0.55", "139.238, -17.6331, -14.2845, 0.55", "140.24, -19.6952, -14.0316, 0.55", "141.171, -21.5841, -13.7828, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "58.6291, 22.4387, -3.6176, 0.55", "60.8268, 23.1605, -1.69885, 0.55", "61.536, 23.3814, -1.1241, 0.55", "64.1947, 24.0471, 0.921163, 0.55", "67.1564, 24.8607, 3.23964, 0.55", "70.9415, 25.9143, 6.31895, 0.55", "71.9877, 26.2052, 7.16189, 0.55", "73.8689, 26.647, 8.66834, 0.55", "75.9385, 27.1662, 10.2288, 0.55", "78.3546, 27.8196, 11.9169, 0.55", "80.6296, 28.4708, 13.5103, 0.55", "81.8824, 28.8765, 14.3133, 0.55", "83.3522, 29.3968, 15.2456, 0.55", "85.1724, 30.0892, 16.3552, 0.83", "88.188, 31.1559, 17.8492, 0.55", "90.1974, 31.7623, 18.7541, 0.83", "93.0012, 32.4543, 19.9357, 0.55", "93.8649, 32.6164, 20.2944, 0.55", "96.5543, 32.9734, 21.3744, 0.55", "101.395, 33.2805, 23.1643, 0.55", "104.954, 33.2913, 24.4283, 0.55", "107.768, 33.1804, 25.5181, 0.55", "110.631, 32.9335, 26.7541, 0.55", "111.234, 32.8658, 27.0201, 0.28", "112.457, 32.6786, 27.565, 0.83", "117.478, 31.841, 29.845, 0.55", "120.998, 31.2466, 31.3707, 0.55", "123.878, 30.846, 32.6831, 0.55", "125.596, 30.6044, 33.4847, 0.83", "126.949, 30.4346, 34.1148, 0.28", "128.177, 30.2804, 34.6744, 0.55", "137.537, 31.6964, 40.016, 0.55", "147.702, 31.1693, 43.833, 0.55", "157.738, 32.0257, 47.9194, 0.55", "166.493, 31.7414, 54.3553, 0.55", "174.592, 30.0858, 61.4143, 0.55", "183.808, 26.4053, 65.8512, 0.55", "193.053, 21.4198, 68.6494, 0.55", "203.259, 18.2238, 70.5922, 0.55", "213.288, 14.9889, 73.2594, 0.55", "223.775, 12.7987, 75.1015, 0.55", "234.08, 11.3173, 78.2292, 0.55", "243.703, 8.11231, 82.1393, 0.55", "253.451, 6.96863, 86.8113, 0.55", "262.591, 7.63937, 92.6567, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.07282, -31.0218, 7.9009, 1.38", "0.0693369, -34.1424, 6.35841, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.07282, -31.0218, 7.9009, 0.55", "-3.40712, -32.5541, 7.91207, 0.55", "-4.88944, -34.5258, 7.92648, 0.55", "-6.03783, -35.8259, 7.94938, 0.55", "-7.00212, -36.9132, 7.8182, 0.55", "-9.09863, -39.1634, 7.333, 0.55", "-10.5662, -40.6643, 6.95151, 0.55", "-11.8703, -42.0105, 6.5628, 0.55", "-15.216, -45.2821, 5.56658, 0.55", "-19.2333, -49.0656, 4.40112, 0.55", "-22.3416, -51.9294, 3.444, 0.55", "-24.3261, -53.8118, 2.80443, 0.55", "-26.6056, -56.0734, 2.07794, 0.55", "-29.5079, -59.328, 1.19594, 0.55", "-31.2171, -61.6475, 0.717343, 0.55", "-33.3416, -64.9934, 0.312644, 0.55", "-35.0494, -68.1374, 0.057788, 0.55", "-36.7956, -72.0729, -0.168156, 0.55", "-38.4676, -76.7054, -0.309572, 0.55", "-39.3972, -80.2571, -0.323013, 0.55", "-39.7417, -82.0278, -0.210339, 0.55", "-40.3056, -86.1949, 0.288622, 0.55", "-40.766, -90.0955, 0.859554, 0.55", "-41.0342, -94.0294, 1.73139, 0.55", "-41.2144, -96.2847, 2.3543, 0.55", "-41.7353, -103.257, 4.53814, 0.55", "-41.7773, -103.77, 4.70788, 0.55", "-41.9769, -106.915, 5.82615, 0.55", "-42.5997, -112.529, 7.95173, 0.55", "-42.8163, -114.406, 8.55029, 0.55", "-43.2159, -117.343, 8.97918, 0.55", "-43.3303, -118.436, 8.88881, 0.55", "-43.5374, -122.148, 7.89148, 0.55", "-43.526, -124.56, 6.74304, 0.55", "-43.3854, -128.411, 4.13977, 0.55", "-43.0155, -133.132, 0.597962, 0.28", "-42.9023, -134.3, -0.433426, 0.55", "-42.7213, -136.073, -2.15147, 0.28", "-42.6962, -136.34, -2.42447, 0.55", "-42.5704, -137.802, -3.79563, 0.28", "-42.5639, -138.297, -4.14889, 0.55", "-42.5994, -140.862, -5.49348, 0.28", "-42.6454, -141.734, -5.94083, 0.55", "-42.8131, -144.254, -7.09236, 0.28", "-42.8625, -145.047, -7.45187, 0.55", "-43.0561, -147.783, -8.64848, 0.28", "-43.1385, -149.042, -9.20518, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-6.85564, -76.516, 58.4836, 0.55", "-9.38368, -81.9421, 63.8406, 0.55", "-12.6862, -86.6727, 69.4304, 0.55", "-15.7873, -91.9275, 74.6555, 0.55", "-19.0309, -97.2113, 79.7634, 0.55", "-21.4616, -103.391, 84.2837, 0.55", "-23.7985, -109.312, 89.1842, 0.55", "-25.301, -116.479, 92.4862, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.85564, -76.516, 58.4836, 0.55", "-5.91622, -82.3277, 63.8341, 0.55", "-4.87248, -89.0165, 68.0119, 0.55", "-5.09963, -95.6849, 72.344, 0.55", "-5.90414, -102.696, 76.0156, 0.55", "-6.37323, -109.698, 79.7621, 0.55", "-6.69557, -116.427, 83.9926, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-43.4494, 45.8799, -16.531, 0.83", "-42.7121, 47.9318, -18.7021, 0.83", "-41.0771, 52.8941, -23.5483, 0.55", "-40.3755, 55.0329, -25.4558, 0.83", "-39.6219, 57.319, -27.3356, 0.55", "-38.8596, 59.6686, -28.927, 0.55", "-38.4726, 60.847, -29.5701, 0.28", "-38.2729, 61.6307, -29.7956, 0.55", "-37.5449, 64.2358, -29.9759, 0.28", "-37.2072, 65.3472, -29.9951, 0.55", "-36.0864, 69.2136, -29.9011, 0.28", "-35.2818, 72.2835, -29.7219, 0.55", "-34.2622, 77.096, -29.2944, 0.28", "-33.5179, 81.3381, -28.8386, 0.28", "-33.2408, 83.7234, -28.5392, 0.55", "-33.0861, 86.5658, -28.1859, 0.28", "-33.1016, 87.929, -27.9998, 0.55", "-33.3077, 91.1506, -27.7102, 0.28", "-33.5827, 93.3101, -27.6314, 0.28", "-33.8952, 95.435, -27.6187, 0.28", "-34.0183, 96.5547, -27.6156, 0.55", "-34.2761, 101.069, -27.7035, 0.28", "-34.4046, 106.404, -27.9017, 0.55", "-34.4222, 108.245, -27.9768, 0.55", "-34.47, 110.093, -28.0131, 0.55", "-34.774, 114.032, -28.1578, 0.55", "-35.135, 116.63, -28.3114, 0.28", "-35.3824, 117.621, -28.3849, 0.55", "-36.2364, 120.314, -28.532, 0.28", "-37.2556, 123.191, -28.8015, 0.55", "-39.0866, 127.351, -29.3534, 0.28", "-40.0292, 129.099, -29.6418, 0.28", "-41.6301, 131.551, -30.2828, 0.55", "-43.4549, 134.116, -31.0824, 0.28", "-43.7976, 134.523, -31.2282, 0.55", "-45.0586, 135.829, -31.747, 0.28", "-49.4571, 140.035, -33.4463, 0.55", "-55.6661, 145.282, -36.0769, 0.28", "-56.8248, 146.172, -36.6403, 0.55", "-60.0262, 148.482, -38.2478, 0.28", "-61.373, 149.432, -38.963, 0.28", "-62.5481, 150.226, -39.6463, 0.55", "-66.0531, 152.109, -41.9402, 0.28", "-68.5714, 153.17, -43.4581, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-43.4494, 45.8799, -16.531, 0.55", "-43.4785, 46.803, -16.6089, 0.55", "-43.5114, 47.347, -16.6053, 0.28", "-43.6153, 47.739, -16.5117, 0.55", "-43.8539, 48.639, -16.2969, 0.28", "-44.0215, 49.2712, -16.146, 0.55", "-44.3304, 50.4367, -15.8678, 0.28", "-44.5623, 51.0624, -15.6145, 0.55", "-45.5701, 52.5681, -14.5105, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-111.895, -23.2375, -14.2457, 0.55", "-120.494, -33.4854, -20.3144, 0.55", "-126.765, -44.7831, -27.3023, 0.55", "-131.626, -54.7325, -36.9545, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-111.895, -23.2375, -14.2457, 0.55", "-118.448, -29.1271, -20.4988, 0.55", "-123.897, -34.8325, -27.8814, 0.55", "-128.908, -40.641, -35.4897, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-174.987, 15.6278, 69.7771, 0.55", "-180.689, 16.096, 73.8711, 0.55", "-186.809, 17.2587, 77.1409, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-174.987, 15.6278, 69.7771, 0.55", "-186.851, 14.1828, 74.246, 0.55", "-198.768, 14.8479, 78.755, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "95.1529, -31.1463, -77.6063, 0.28", "101.216, -33.955, -85.9108, 0.28", "101.798, -34.2846, -86.6496, 0.55", "102.779, -34.8411, -87.8969, 0.28", "103.606, -35.3097, -88.9471, 0.28", "104.7, -35.9301, -90.3373, 0.55", "106.143, -36.7479, -92.1702, 0.55", "107.78, -38.3056, -93.0723, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "95.1529, -31.1463, -77.6063, 0.55", "96.3442, -32.9602, -79.666, 0.55", "96.7139, -33.7637, -80.6008, 0.28", "97.2702, -35.1321, -82.2445, 0.55", "98.4956, -38.1463, -85.8654, 0.28", "99.3449, -40.2353, -88.3747, 0.55", "100.784, -43.7746, -92.6263, 0.28", "102.448, -48.0496, -98.2204, 0.28", "103.123, -50.004, -100.849, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "141.171, -21.5841, -13.7828, 0.28", "142.637, -23.5856, -12.9582, 0.28", "144.471, -26.2051, -11.6389, 0.28", "145.625, -27.8973, -10.7099, 0.55", "146.324, -28.824, -10.1418, 0.28", "146.695, -29.3224, -9.83092, 0.28", "148.536, -31.7881, -8.33804, 0.55", "148.957, -32.3265, -7.9253, 0.28", "149.938, -33.7354, -6.73775, 0.55", "150.775, -34.9679, -5.7648, 0.28", "151.513, -35.9713, -4.99177, 0.55", "152.381, -37.1825, -4.15359, 0.55", "153.777, -39.1401, -3.0939, 0.55", "154.113, -39.6229, -2.85351, 0.55", "155.316, -41.4302, -1.98213, 0.28", "155.781, -42.1721, -1.64948, 0.55", "156.435, -43.1185, -1.22384, 0.28", "157.361, -44.4708, -0.686792, 0.55", "158.92, -46.642, -0.168612, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "141.171, -21.5841, -13.7828, 0.55", "138.278, -21.4513, -14.022, 0.55", "135.928, -21.3434, -14.2162, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.0693369, -34.1424, 6.35841, 0.83", "0.201722, -34.4343, 6.33507, 0.83", "1.74831, -37.0292, 6.30495, 0.83", "3.11032, -39.2992, 6.12806, 0.55", "4.19692, -41.1102, 5.98695, 0.55", "6.50651, -44.9596, 5.687, 0.83", "9.3079, -49.6285, 5.32319, 0.55", "10.8363, -52.0746, 5.18389, 0.83", "13.5462, -55.975, 5.14797, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.0693369, -34.1424, 6.35841, 0.55", "-1.74203, -34.9575, 4.06227, 0.55", "-3.68631, -35.8325, 1.59764, 0.55", "-5.98155, -36.8653, -1.31187, 0.55", "-8.76871, -38.1196, -4.84497, 0.55", "-10.3504, -38.8313, -6.84988, 0.55", "-10.6681, -38.9743, -7.25263, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.69557, -116.427, 83.9926, 0.55", "-6.02459, -127.429, 91.902, 0.55", "-3.48875, -139.047, 98.4316, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-6.69557, -116.427, 83.9926, 0.55", "-7.04592, -124.867, 88.8274, 0.55", "-7.79378, -133.088, 93.9844, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-45.5701, 52.5681, -14.5105, 0.28", "-46.9018, 53.6802, -13.1861, 0.28", "-47.417, 54.0882, -12.6226, 0.55", "-48.8996, 55.2625, -10.9544, 0.28", "-49.6203, 55.8614, -10.2061, 0.55", "-51.5724, 57.4991, -8.257, 0.28", "-53.5564, 59.1637, -6.27595, 0.55", "-56.8542, 61.735, -3.00526, 0.28", "-57.5562, 62.2882, -2.3068, 0.55", "-59.084, 63.614, -0.805215, 0.28", "-59.6783, 64.169, -0.207069, 0.55", "-66.2365, 67.759, 4.35579, 0.55", "-72.9296, 72.6979, 7.09965, 0.55", "-78.9677, 77.5816, 11.1503, 0.55", "-83.8129, 83.4597, 15.4737, 0.55", "-89.4331, 89.1833, 18.9909, 0.55", "-95.985, 93.4896, 22.8957, 0.55", "-102.271, 96.8623, 27.9772, 0.55", "-108.051, 99.1002, 34.1664, 0.55", "-113.77, 101.879, 40.1904, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-45.5701, 52.5681, -14.5105, 0.55", "-49.0528, 51.7457, -13.1446, 0.55", "-50.8686, 51.2592, -12.439, 0.28", "-52.2198, 50.8972, -11.9138, 0.55", "-53.346, 50.5954, -11.4762, 0.28", "-54.1348, 50.3841, -11.1696, 0.55", "-56.3099, 49.8013, -10.3243, 0.28", "-57.7678, 49.296, -9.94352, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-131.626, -54.7325, -36.9545, 0.55", "-136.639, -64.9224, -39.5475, 0.55", "-141.509, -75.4212, -40.8633, 0.55", "-145.39, -85.8915, -44.1787, 0.55", "-150.517, -96.1859, -46.0285, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-131.626, -54.7325, -36.9545, 0.55", "-134.911, -59.2729, -43.1548, 0.55", "-137.595, -62.8701, -50.2046, 0.55", "-141.166, -67.226, -56.3786, 0.55", "-146.305, -70.0845, -62.3172, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-128.908, -40.641, -35.4897, 0.55", "-132.617, -42.6305, -42.0535, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-128.908, -40.641, -35.4897, 0.55", "-133.59, -49.9073, -36.4511, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "107.78, -38.3056, -93.0723, 0.28", "110.274, -40.0656, -94.363, 0.28", "111.433, -40.8831, -94.9625, 0.55", "113.643, -42.4422, -96.1057, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "107.78, -38.3056, -93.0723, 0.55", "107.341, -39.1581, -95.2555, 0.55", "106.462, -40.8634, -99.6225, 0.28", "106.176, -41.4189, -101.045, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "103.123, -50.004, -100.849, 0.28", "104.654, -53.5946, -104.245, 0.28", "105.411, -55.3726, -105.927, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "103.123, -50.004, -100.849, 0.55", "101.728, -50.7687, -100.011, 0.55", "97.8381, -52.9013, -97.6749, 0.28", "96.9141, -53.4079, -97.12, 0.55", "94.3864, -54.7937, -95.6019, 0.28", "92.7571, -55.687, -94.6234, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "13.5462, -55.975, 5.14797, 0.83", "13.5942, -56.3044, 5.09797, 0.83", "14.2573, -60.6199, 4.57623, 0.83", "14.4311, -63.8624, 4.32151, 0.83", "14.3087, -67.0077, 4.34, 0.83", "13.9284, -71.208, 4.63721, 0.83", "13.3191, -76.0549, 5.12175, 0.83", "12.5955, -81.4803, 5.94273, 0.83", "11.8377, -86.7617, 6.97544, 0.83", "10.5344, -93.2362, 8.00094, 0.83", "9.81666, -96.2017, 8.27103, 0.83", "9.30108, -98.4253, 8.33575, 0.83", "8.24468, -102.686, 8.35087, 0.83", "7.43504, -106.494, 8.17992, 0.83", "6.35124, -114.574, 7.03316, 0.83", "5.9443, -118.967, 5.85222, 0.83", "5.63654, -123.001, 4.47145, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "13.5462, -55.975, 5.14797, 0.55", "12.3397, -58.5113, 5.25925, 0.55", "11.4324, -60.3495, 5.47938, 0.55", "10.8801, -61.5236, 5.74134, 0.55", "10.0986, -63.3598, 6.33623, 0.55", "8.63956, -66.9933, 7.75584, 0.55", "7.50191, -69.738, 9.1382, 0.55", "6.58438, -71.9339, 10.4863, 0.55", "5.59722, -74.1482, 12.0071, 0.55", "4.75964, -75.9825, 13.3663, 0.28", "4.0459, -77.477, 14.7015, 0.55", "2.66983, -80.1885, 17.523, 0.55", "1.7264, -81.8454, 19.4353, 0.55", "1.18751, -82.7735, 20.4966, 0.55", "0.496261, -83.8681, 21.6868, 0.83", "-1.57661, -87.1176, 24.9892, 0.28", "-2.26056, -88.1935, 26.0515, 0.55", "-3.43026, -90.1385, 27.9056, 0.28", "-3.79169, -90.7372, 28.5226, 0.55", "-4.55784, -92.1453, 29.9452, 0.28", "-4.98602, -92.9474, 30.693, 0.55", "-6.52465, -95.567, 32.3916, 0.55", "-8.92929, -102.614, 39.8853, 0.55", "-10.8389, -109.324, 47.8184, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-10.6681, -38.9743, -7.25263, 0.55", "-13.9585, -39.9209, -9.88125, 0.55", "-14.923, -40.1313, -10.6133, 0.55", "-17.3374, -40.6646, -12.3692, 0.55", "-22.5975, -41.6987, -16.0077, 0.28", "-23.3755, -41.8386, -16.5048, 0.55", "-26.612, -42.5097, -18.4681, 0.55", "-31.0037, -43.4512, -20.7764, 0.55", "-32.6787, -43.766, -21.6212, 0.28", "-34.1352, -43.9563, -22.283, 0.28", "-36.5859, -44.2531, -23.1125, 0.55", "-39.5852, -44.4825, -24.2195, 0.28", "-42.3575, -44.478, -25.2889, 0.55", "-44.492, -44.3169, -26.0722, 0.55", "-45.9645, -44.0927, -26.6486, 0.55", "-50.302, -43.2518, -28.451, 0.55", "-54.8507, -42.092, -30.259, 0.55", "-56.7221, -41.5216, -30.9601, 0.28", "-58.5049, -41.0037, -31.6569, 0.55", "-62.124, -40.166, -33.0458, 0.28", "-63.3415, -39.9163, -33.5034, 0.83", "-65.5971, -39.4335, -34.2181, 0.28", "-67.2004, -39.2078, -34.5458, 0.55", "-69.5251, -38.9575, -34.9817, 0.28", "-70.4468, -38.8484, -35.1268, 0.55", "-72.1441, -38.6808, -35.3123, 0.55", "-74.6878, -38.1934, -35.4918, 0.55", "-76.3334, -37.7835, -35.5176, 0.28", "-77.6394, -37.3031, -35.4327, 0.55", "-79.1735, -36.5549, -35.3317, 0.28", "-79.4267, -36.412, -35.3225, 0.55", "-81.8277, -35.02, -35.622, 0.28", "-83.5984, -33.9672, -36.0105, 0.55", "-85.979, -32.4193, -36.8123, 0.83", "-87.9713, -31.0923, -37.6692, 0.28", "-88.4934, -30.7502, -37.9358, 0.55", "-92.5312, -28.1672, -40.1786, 0.28", "-93.2478, -27.722, -40.6323, 0.55", "-95.3755, -26.2779, -42.0807, 0.28", "-95.9254, -25.9062, -42.4581, 0.55", "-97.3235, -24.9446, -43.3429, 0.28", "-98.3054, -24.2567, -43.9147, 0.55", "-100.455, -22.7371, -44.9012, 0.28", "-101.729, -21.9189, -45.4457, 0.55", "-104.437, -20.3345, -46.4825, 0.28", "-105.244, -19.9035, -46.7812, 0.55", "-106.508, -19.3192, -47.211, 0.28", "-107.571, -18.8297, -47.5277, 0.55", "-109.762, -17.8475, -48.065, 0.28", "-110.42, -17.5666, -48.2073, 0.55", "-115.267, -15.4032, -49.0511, 0.28", "-116.937, -14.5399, -49.2043, 0.55", "-119.879, -12.8739, -49.2913, 0.28", "-121.195, -12.0746, -49.2894, 0.55", "-124.182, -10.273, -49.1184, 0.28", "-125.272, -9.66252, -49.0107, 0.55", "-129.193, -7.81773, -48.4255, 0.28", "-130.835, -7.25421, -48.1739, 0.55", "-133.194, -6.83481, -47.8015, 0.55", "-134.643, -6.67012, -47.5417, 0.55", "-137.552, -6.42386, -46.792, 0.28", "-140.372, -6.2215, -45.8762, 0.28", "-142.704, -6.0483, -45.0441, 0.55", "-145.457, -5.60045, -43.7016, 0.28", "-146.755, -5.20804, -42.8397, 0.55", "-149.704, -3.73255, -40.4318, 0.28", "-151.058, -2.64291, -38.7685, 0.55", "-151.828, -1.77056, -37.4443, 0.28", "-152.563, -0.805939, -35.6559, 0.55", "-153.394, 0.449849, -33.2266, 0.28", "-153.717, 0.889783, -32.3132, 0.55", "-155.602, 2.85894, -27.9602, 0.28", "-156.249, 3.4763, -26.5043, 0.55", "-157.764, 4.82957, -22.9818, 0.28", "-158.59, 5.54599, -21.0692, 0.55", "-159.271, 6.13279, -19.499, 0.55", "-160.105, 6.82454, -17.6585, 0.28", "-160.604, 7.18327, -16.8165, 0.55", "-162.35, 8.48356, -14.1361, 0.28", "-163.236, 9.32491, -12.7022, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-10.6681, -38.9743, -7.25263, 0.55", "-10.4566, -39.0785, -8.34971, 0.55", "-10.2043, -39.0638, -9.44302, 0.55", "-9.81549, -38.9547, -10.7846, 0.55", "-9.44709, -38.7807, -11.8595, 0.55", "-6.48311, -36.9345, -18.6735, 0.55", "-5.81681, -36.3416, -20.2146, 0.55", "-4.8584, -35.2978, -22.5102, 0.55", "-4.18442, -34.5042, -24.1383, 0.55", "-3.49422, -33.641, -25.6992, 0.28", "-2.3301, -32.1826, -28.0231, 0.55", "-0.434443, -29.9126, -31.3554, 0.28", "-0.33075, -29.7727, -31.7002, 0.55", "-0.236629, -29.2731, -34.1593, 0.28", "-0.457333, -29.0308, -35.8299, 0.55", "-0.871388, -28.8929, -37.6239, 0.55", "-1.6672, -28.8108, -40.8461, 0.55", "-3.21324, -28.6954, -47.1757, 0.55", "-4.17762, -28.6642, -51.4459, 0.55", "-4.47158, -28.6675, -52.9285, 0.55", "-6.16962, -28.6142, -62.7106, 0.55", "-6.51605, -28.5628, -65.375, 0.55", "-6.59785, -28.536, -66.884, 0.55", "-6.48421, -28.5645, -70.4213, 0.55", "-5.72703, -29.0629, -78.9116, 0.55", "-5.42768, -29.2898, -81.1937, 0.28", "-5.16034, -29.4772, -82.4821, 0.55", "-4.73005, -29.832, -84.3876, 0.28", "-4.49669, -30.0559, -85.16, 0.55", "-3.26293, -31.0789, -87.2301, 0.28", "-1.80404, -32.4914, -87.9937, 0.55", "-0.910546, -33.4942, -88.3907, 0.28", "-0.0577129, -34.5986, -88.6465, 0.55", "0.705455, -35.7971, -88.8027, 0.28", "1.02645, -36.4114, -88.8845, 0.55", "1.78626, -38.0194, -89.008, 0.28", "1.95568, -38.4952, -89.1064, 0.55", "2.86686, -41.2155, -89.8142, 0.28", "3.27084, -42.4672, -90.3094, 0.55", "4.13106, -45.1282, -91.6906, 0.28", "4.45246, -46.1037, -92.3195, 0.55", "5.56808, -49.299, -94.6189, 0.28", "5.83333, -50.0742, -95.2123, 0.55", "6.57624, -52.524, -97.1563, 0.28", "6.73179, -53.0998, -97.5569, 0.55", "7.09729, -54.6212, -98.5852, 0.28", "7.28912, -55.4999, -99.2692, 0.55", "7.48434, -56.3597, -100.02, 0.55", "7.87913, -58.0759, -101.503, 0.28", "8.18075, -59.1327, -102.578, 0.55", "9.25071, -61.748, -106.046, 0.28", "9.6759, -62.5872, -107.441, 0.55", "9.99031, -63.1182, -108.393, 0.28", "10.3302, -63.6004, -109.35, 0.55", "11.4453, -64.9448, -112.268, 0.28", "12.3198, -65.992, -114.438, 0.55", "13.9346, -68.009, -117.941, 0.28", "14.4476, -68.6365, -119.04, 0.55", "15.5341, -69.7964, -121.01, 0.28", "15.9257, -70.1794, -121.623, 0.55", "16.6603, -70.8015, -122.459, 0.28", "17.3501, -71.3299, -123.127, 0.55", "19.3543, -72.6523, -124.713, 0.28", "21.6874, -74.0584, -126.488, 0.28", "22.9208, -74.712, -127.295, 0.28", "24.1305, -75.3216, -128.187, 0.55", "25.9043, -76.1157, -129.497, 0.28", "26.7038, -76.4561, -130.061, 0.83", "28.7805, -77.3604, -131.418, 0.28", "29.6533, -77.7728, -132.059, 0.55", "33.3768, -79.7451, -135.072, 0.28", "35.1519, -80.7479, -136.744, 0.28", "36.3915, -81.4709, -138.056, 0.55", "37.0588, -81.9062, -138.917, 0.55", "38.7246, -83.085, -141.38, 0.28", "40.2199, -84.2896, -143.769, 0.55", "41.5737, -85.4544, -145.945, 0.28", "42.7406, -86.5305, -148.004, 0.55", "43.7128, -87.401, -149.697, 0.28", "44.5578, -88.0215, -151.02, 0.55", "46.6963, -89.3443, -154.083, 0.28", "47.8164, -90.0161, -155.577, 0.55", "49.5452, -91.037, -157.742, 0.28", "50.991, -91.8167, -159.473, 0.55", "54.3948, -93.4338, -163.529, 0.28", "55.726, -93.9759, -165.292, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-3.48875, -139.047, 98.4316, 0.55", "-3.01284, -146.177, 101.798, 0.55", "-1.82676, -153.829, 103.364, 0.55", "-1.07068, -161.233, 106.014, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-3.48875, -139.047, 98.4316, 0.55", "-2.35801, -145.258, 103.001, 0.55", "-2.30184, -150.62, 108.656, 0.55", "-2.27229, -154.706, 115.292, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-7.79378, -133.088, 93.9844, 0.55", "-7.25409, -141.795, 98.8857, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-7.79378, -133.088, 93.9844, 0.55", "-9.02364, -142.058, 99.4013, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "5.63654, -123.001, 4.47145, 0.83", "6.30445, -126.225, 4.901, 0.83", "6.96005, -128.95, 5.47756, 0.83", "7.61172, -131.658, 6.05065, 0.83", "8.23061, -134.23, 6.59491, 0.83", "9.18434, -138.193, 7.43365, 0.83", "10.1312, -142.128, 8.26633, 0.83", "10.9129, -144.744, 9.17571, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "5.63654, -123.001, 4.47145, 0.55", "6.85747, -124.755, 4.3276, 0.55", "7.7764, -126.117, 3.98228, 0.55", "8.40222, -127.121, 3.63161, 0.55", "8.94576, -128.291, 3.08656, 0.83", "9.46189, -129.615, 2.31217, 0.55", "9.96672, -130.911, 1.55472, 0.83", "10.4234, -132.31, 0.608162, 0.55", "10.6806, -133.12, -0.017567, 0.83", "11.3839, -135.733, -2.24144, 0.55", "11.7523, -137.779, -4.10474, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-10.8389, -109.324, 47.8184, 0.55", "-14.4007, -116.144, 52.4502, 0.55", "-19.1707, -122.096, 57.1925, 0.55", "-24.559, -127.202, 62.2481, 0.55", "-30.6963, -131.262, 67.3973, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-10.8389, -109.324, 47.8184, 0.55", "-13.2047, -116.199, 54.2438, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "10.9129, -144.744, 9.17571, 0.55", "11.0224, -146.723, 9.64757, 0.55", "11.2325, -149.252, 10.3116, 0.55", "11.4314, -151.638, 10.9253, 0.55", "11.5526, -153.334, 11.3363, 0.55", "11.7341, -156.36, 12.024, 0.55", "12.3678, -164.863, 13.7372, 0.55", "12.6493, -167.748, 14.193, 0.55", "12.853, -169.781, 14.412, 0.55", "13.0998, -172.101, 14.4757, 0.55", "13.2561, -173.891, 14.3667, 0.55", "13.7412, -178.072, 13.9351, 0.55", "13.9981, -181.246, 13.6065, 0.55", "14.2249, -183.331, 13.4507, 0.55", "14.802, -188.744, 13.3249, 0.55", "15.1717, -192.386, 13.4026, 0.55", "15.679, -197.085, 13.7664, 0.55", "16.3369, -202.426, 14.5872, 0.55", "16.9435, -205.996, 15.35, 0.55", "17.3548, -208.107, 15.8553, 0.55", "17.6977, -210.054, 16.3168, 0.55", "18.1698, -212.516, 16.7839, 0.55", "19.2239, -218.445, 17.5114, 0.55", "19.7066, -220.738, 17.7051, 0.55", "20.1825, -223.29, 17.9055, 0.55", "20.8649, -227.124, 18.1879, 0.55", "21.2532, -230.071, 18.4381, 0.55", "21.4589, -232.869, 18.6457, 0.55", "21.536, -235.537, 18.8484, 0.55", "21.568, -238.14, 19.0857, 0.55", "21.6015, -239.993, 19.2358, 0.55", "21.6717, -243.023, 19.3755, 0.55", "21.6964, -246.655, 19.2671, 0.55", "21.7503, -248.417, 19.0792, 0.55", "21.8112, -249.962, 18.7953, 0.55", "22.0559, -252.874, 18.0799, 0.55", "22.1905, -254.719, 17.5749, 0.55", "22.385, -256.995, 17.0388, 0.55", "22.4634, -258.596, 16.7625, 0.55", "22.5962, -262.762, 16.2115, 0.55", "22.6247, -265.885, 16.0276, 0.55", "22.5987, -270.728, 16.1455, 0.55", "22.6582, -273.858, 16.5161, 0.55", "22.6981, -277.147, 17.0135, 0.28", "22.6828, -278.47, 17.2692, 0.28", "22.6383, -281.686, 18.1829, 0.28", "22.5759, -284.662, 19.2643, 0.28", "22.8664, -288.603, 21.0882, 0.28", "24.6152, -297.431, 22.8922, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "10.9129, -144.744, 9.17571, 0.55", "12.0238, -145.232, 9.92161, 0.55", "14.2266, -146.461, 11.6228, 0.55", "16.0868, -147.662, 13.1746, 0.28", "18.0512, -149.024, 14.9037, 0.55", "19.1524, -149.892, 16.1264, 0.28", "20.9592, -151.453, 18.4593, 0.55", "21.5752, -152.272, 19.7052, 0.28", "21.7647, -152.569, 20.2203, 0.28", "22.0903, -152.997, 21.1207, 0.55", "23.4818, -154.414, 24.4471, 0.28", "24.102, -154.97, 25.8225, 0.55", "26.207, -156.584, 29.6203, 0.28", "27.4299, -157.384, 31.561, 0.28", "29.0318, -158.408, 33.8522, 0.55", "31.5825, -159.992, 36.9807, 0.28", "31.955, -160.202, 37.3575, 0.55", "33.8703, -161.225, 39.0671, 0.28", "34.0556, -161.32, 39.2006, 0.55", "35.6575, -162.422, 40.4261, 0.28", "36.3919, -163.02, 41.0581, 0.55", "42.4116, -167.465, 46.3283, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-30.6963, -131.262, 67.3973, 0.55", "-36.7048, -135.869, 75.5639, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-30.6963, -131.262, 67.3973, 0.55", "-36.553, -138.819, 70.7114, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_BP_d97748152f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.20313, 8.40301, 2.86677, 0.83 ) }
    dend_43 { pt3dadd( -6.21085, 10.7343, 3.32038, 1.11 ) }
    dend_43 { pt3dadd( -7.98423, 12.1079, 3.55634, 0.83 ) }
    dend_43 { pt3dadd( -9.70713, 13.4308, 3.76775, 0.83 ) }
    dend_43 { pt3dadd( -10.7273, 14.1851, 3.8836, 1.11 ) }
    dend_43 { pt3dadd( -13.9217, 16.5424, 4.2549, 1.11 ) }
    dend_43 { pt3dadd( -19.6353, 20.5781, 4.91125, 0.83 ) }
    dend_43 { pt3dadd( -21.6937, 21.9766, 5.12799, 0.83 ) }
    dend_43 { pt3dadd( -23.3237, 23.0512, 5.26262, 0.83 ) }
    dend_43 { pt3dadd( -24.9132, 24.1161, 5.37915, 0.83 ) }
    dend_43 { pt3dadd( -26.2071, 24.9938, 5.44203, 0.55 ) }
    dend_43 { pt3dadd( -27.1797, 25.5881, 5.50584, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.38984, 6.15002, -6.16237, 0.55 ) }
    dend_28 { pt3dadd( 6.75673, 6.66203, -6.69094, 0.55 ) }
    dend_28 { pt3dadd( 8.13015, 6.79128, -7.39035, 0.83 ) }
    dend_28 { pt3dadd( 10.3038, 6.92883, -8.68956, 0.55 ) }
    dend_28 { pt3dadd( 11.3531, 6.99522, -9.31671, 1.38 ) }
    dend_28 { pt3dadd( 13.9331, 7.15848, -10.8587, 0.55 ) }
    dend_28 { pt3dadd( 15.0319, 7.1032, -11.5945, 0.83 ) }
    dend_28 { pt3dadd( 20.716, 6.08934, -15.7284, 0.55 ) }
    dend_28 { pt3dadd( 21.2659, 5.953, -16.1833, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.696324, -11.5636, 3.61847, 1.11 ) }
    dend_1 { pt3dadd( -0.767841, -17.8737, 5.88061, 1.11 ) }
    dend_1 { pt3dadd( -0.796968, -20.4435, 6.8019, 0.83 ) }
    dend_1 { pt3dadd( -0.835663, -23.8577, 8.02588, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 1.01484, 10.5828, -1.43203, 1.11 ) }
    dend_0 { pt3dadd( 1.22823, 13.2133, -1.42278, 1.11 ) }
    dend_0 { pt3dadd( 1.58676, 17.5044, -1.2505, 1.38 ) }
    dend_0 { pt3dadd( 1.61143, 17.7433, -1.23722, 1.38 ) }
    dend_0 { pt3dadd( 2.09755, 20.6909, -1.06787, 0.83 ) }
    dend_0 { pt3dadd( 2.76054, 23.8017, -0.740404, 0.83 ) }
    dend_0 { pt3dadd( 3.86741, 27.2993, 0.0117498, 0.83 ) }
    dend_0 { pt3dadd( 4.4745, 28.6183, 0.437744, 0.83 ) }
    dend_0 { pt3dadd( 5.0568, 29.5676, 0.825299, 1.11 ) }
    dend_0 { pt3dadd( 6.72084, 31.8705, 1.80145, 0.55 ) }
    dend_0 { pt3dadd( 8.65178, 34.2663, 2.9735, 0.83 ) }
    dend_0 { pt3dadd( 11.1215, 36.7113, 4.26145, 0.55 ) }
    dend_0 { pt3dadd( 12.3596, 37.7185, 4.82703, 0.83 ) }
    dend_0 { pt3dadd( 14.1058, 39.0796, 5.73561, 0.55 ) }
    dend_0 { pt3dadd( 16.2897, 40.812, 6.99217, 0.55 ) }
    dend_0 { pt3dadd( 19.3765, 43.427, 8.94939, 0.55 ) }
    dend_0 { pt3dadd( 22.7829, 46.4209, 11.1115, 0.55 ) }
    dend_0 { pt3dadd( 24.9772, 48.364, 12.7777, 0.55 ) }
    dend_0 { pt3dadd( 27.7216, 50.8214, 15.1814, 0.55 ) }
    dend_0 { pt3dadd( 28.2988, 51.3131, 15.7331, 0.83 ) }
    dend_0 { pt3dadd( 29.8393, 52.6115, 17.3022, 0.55 ) }
    dend_0 { pt3dadd( 31.1184, 53.6206, 18.5233, 0.83 ) }
    dend_0 { pt3dadd( 34.0936, 56.3989, 21.4307, 0.55 ) }
    dend_0 { pt3dadd( 35.1732, 57.4144, 22.2498, 0.83 ) }
    dend_0 { pt3dadd( 36.1406, 58.1562, 22.7703, 0.55 ) }
    dend_0 { pt3dadd( 37.0757, 58.7909, 23.1409, 0.83 ) }
    dend_0 { pt3dadd( 39.1113, 59.9596, 23.7613, 0.83 ) }
    dend_0 { pt3dadd( 41.7728, 61.5555, 24.3589, 0.83 ) }
    dend_0 { pt3dadd( 43.3843, 62.6167, 24.5596, 0.55 ) }
    dend_0 { pt3dadd( 44.6184, 63.5413, 24.7194, 0.55 ) }
    dend_0 { pt3dadd( 47.8453, 65.9288, 25.0923, 0.83 ) }
    dend_0 { pt3dadd( 49.9172, 67.46, 25.2532, 0.55 ) }
    dend_0 { pt3dadd( 53.0415, 69.6997, 25.3751, 0.55 ) }
    dend_0 { pt3dadd( 55.8809, 71.569, 25.3764, 0.55 ) }
    dend_0 { pt3dadd( 58.4073, 73.148, 25.3112, 0.55 ) }
    dend_0 { pt3dadd( 61.573, 74.9902, 25.0876, 0.55 ) }
    dend_0 { pt3dadd( 63.4898, 75.8786, 24.8888, 0.55 ) }
    dend_0 { pt3dadd( 64.77, 76.3704, 24.5988, 0.55 ) }
    dend_0 { pt3dadd( 66.437, 76.7108, 24.0688, 0.55 ) }
    dend_0 { pt3dadd( 68.8777, 76.8035, 23.0687, 0.55 ) }
    dend_0 { pt3dadd( 70.3827, 76.6592, 22.3835, 0.55 ) }
    dend_0 { pt3dadd( 72.6044, 76.3837, 21.5442, 0.55 ) }
    dend_0 { pt3dadd( 76.9018, 75.9972, 20.3391, 0.55 ) }
    dend_0 { pt3dadd( 80.3174, 75.8531, 19.6399, 0.55 ) }
    dend_0 { pt3dadd( 83.9775, 75.8746, 19.1177, 0.55 ) }
    dend_0 { pt3dadd( 86.3556, 75.968, 18.9685, 0.55 ) }
    dend_0 { pt3dadd( 92.6162, 76.7647, 18.9836, 0.55 ) }
    dend_0 { pt3dadd( 96.3723, 77.5145, 19.2652, 0.55 ) }
    dend_0 { pt3dadd( 99.2342, 78.2539, 19.7303, 0.55 ) }
    dend_0 { pt3dadd( 100.994, 78.9786, 20.0777, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 103.041, 80.0787, 20.4717, 0.55 ) }
    dend_0 { pt3dadd( 106.473, 82.2719, 20.8513, 0.55 ) }
    dend_0 { pt3dadd( 107.246, 82.8023, 20.8358, 0.55 ) }
    dend_0 { pt3dadd( 109.437, 84.2161, 20.6508, 0.55 ) }
    dend_0 { pt3dadd( 111.458, 85.7342, 20.4741, 0.83 ) }
    dend_0 { pt3dadd( 112.558, 86.5772, 20.3608, 0.55 ) }
    dend_0 { pt3dadd( 114.204, 88.0334, 20.1283, 0.83 ) }
    dend_0 { pt3dadd( 123.213, 95.7975, 21.1213, 0.83 ) }
    dend_0 { pt3dadd( 131.04, 104.801, 21.4121, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -27.1797, 25.5881, 5.50584, 0.55 ) }
    dend_55 { pt3dadd( -29.0145, 27.018, 4.31344, 0.55 ) }
    dend_55 { pt3dadd( -31.0097, 28.5728, 3.01683, 0.55 ) }
    dend_55 { pt3dadd( -33.4174, 30.449, 1.4521, 0.55 ) }
    dend_55 { pt3dadd( -35.4055, 31.9984, 0.160057, 0.83 ) }
    dend_55 { pt3dadd( -37.0715, 33.2967, -0.922671, 0.55 ) }
    dend_55 { pt3dadd( -40.164, 35.7065, -2.93238, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -27.1797, 25.5881, 5.50584, 0.55 ) }
    dend_44 { pt3dadd( -29.1904, 25.9731, 5.24043, 0.55 ) }
    dend_44 { pt3dadd( -31.3336, 26.3103, 5.17046, 0.55 ) }
    dend_44 { pt3dadd( -33.7647, 26.6873, 5.1505, 0.55 ) }
    dend_44 { pt3dadd( -37.2911, 27.1872, 5.44486, 0.55 ) }
    dend_44 { pt3dadd( -40.2454, 27.5146, 5.8995, 0.55 ) }
    dend_44 { pt3dadd( -43.3463, 27.807, 6.50787, 0.55 ) }
    dend_44 { pt3dadd( -46.3492, 27.8788, 7.41518, 0.55 ) }
    dend_44 { pt3dadd( -48.9387, 27.683, 8.44129, 0.55 ) }
    dend_44 { pt3dadd( -52.1713, 27.205, 10.0611, 0.55 ) }
    dend_44 { pt3dadd( -53.58, 26.8895, 10.9591, 0.55 ) }
    dend_44 { pt3dadd( -55.1028, 26.531, 11.9943, 0.55 ) }
    dend_44 { pt3dadd( -57.7875, 25.6993, 13.694, 0.55 ) }
    dend_44 { pt3dadd( -59.2127, 25.2664, 14.374, 0.55 ) }
    dend_44 { pt3dadd( -60.7054, 24.7676, 15.0765, 0.55 ) }
    dend_44 { pt3dadd( -62.4778, 24.2011, 15.7324, 0.55 ) }
    dend_44 { pt3dadd( -64.403, 23.6269, 16.3933, 0.55 ) }
    dend_44 { pt3dadd( -67.1497, 22.8021, 17.2763, 0.55 ) }
    dend_44 { pt3dadd( -70.8127, 21.9536, 18.1311, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 21.2659, 5.953, -16.1833, 0.55 ) }
    dend_34 { pt3dadd( 27.1433, 8.02833, -17.5521, 0.55 ) }
    dend_34 { pt3dadd( 30.5739, 8.95683, -18.8008, 0.55 ) }
    dend_34 { pt3dadd( 33.9793, 9.71382, -20.062, 0.55 ) }
    dend_34 { pt3dadd( 36.3166, 10.1383, -20.9102, 0.55 ) }
    dend_34 { pt3dadd( 39.7408, 10.6834, -22.113, 0.55 ) }
    dend_34 { pt3dadd( 46.8686, 11.6482, -24.8108, 0.55 ) }
    dend_34 { pt3dadd( 54.9822, 12.6203, -28.4005, 0.55 ) }
    dend_34 { pt3dadd( 58.9552, 12.8132, -30.3782, 0.55 ) }
    dend_34 { pt3dadd( 61.0945, 12.847, -31.5676, 0.55 ) }
    dend_34 { pt3dadd( 63.4427, 12.8827, -32.9663, 0.55 ) }
    dend_34 { pt3dadd( 67.6453, 12.835, -35.4307, 0.55 ) }
    dend_34 { pt3dadd( 69.1835, 12.7243, -36.3633, 0.55 ) }
    dend_34 { pt3dadd( 75.6969, 12.3467, -40.8184, 0.55 ) }
    dend_34 { pt3dadd( 80.3125, 12.1063, -44.3114, 0.55 ) }
    dend_34 { pt3dadd( 82.9671, 12.008, -46.3997, 0.55 ) }
    dend_34 { pt3dadd( 85.6171, 11.8878, -48.4775, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 21.2659, 5.953, -16.1833, 0.83 ) }
    dend_29 { pt3dadd( 23.0979, 7.07171, -16.1982, 0.83 ) }
    dend_29 { pt3dadd( 24.1451, 7.71093, -16.2549, 0.55 ) }
    dend_29 { pt3dadd( 25.6867, 8.68793, -16.4694, 0.83 ) }
    dend_29 { pt3dadd( 26.7233, 9.37195, -16.6448, 0.55 ) }
    dend_29 { pt3dadd( 28.1531, 10.3534, -16.8649, 0.83 ) }
    dend_29 { pt3dadd( 29.8725, 11.5664, -17.0653, 0.55 ) }
    dend_29 { pt3dadd( 30.7374, 12.112, -17.1312, 0.55 ) }
    dend_29 { pt3dadd( 32.7267, 13.0939, -17.1457, 0.83 ) }
    dend_29 { pt3dadd( 34.5319, 13.7632, -16.9259, 0.55 ) }
    dend_29 { pt3dadd( 35.5408, 14.1253, -16.7059, 0.83 ) }
    dend_29 { pt3dadd( 37.0546, 14.6998, -16.215, 0.55 ) }
    dend_29 { pt3dadd( 39.2287, 15.5602, -15.2292, 0.55 ) }
    dend_29 { pt3dadd( 42.247, 16.596, -13.7062, 0.55 ) }
    dend_29 { pt3dadd( 45.1245, 17.4768, -12.0547, 0.55 ) }
    dend_29 { pt3dadd( 47.404, 18.1495, -10.7055, 0.55 ) }
    dend_29 { pt3dadd( 51.162, 19.276, -8.46085, 0.55 ) }
    dend_29 { pt3dadd( 53.9115, 20.1788, -6.7564, 0.55 ) }
    dend_29 { pt3dadd( 55.5717, 20.8632, -5.66359, 0.55 ) }
    dend_29 { pt3dadd( 58.6291, 22.4387, -3.6176, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.835663, -23.8577, 8.02588, 0.83 ) }
    dend_11 { pt3dadd( -1.17647, -25.8312, 7.99145, 0.83 ) }
    dend_11 { pt3dadd( -1.50851, -27.754, 7.95791, 0.83 ) }
    dend_11 { pt3dadd( -1.87923, -29.9007, 7.92046, 0.83 ) }
    dend_11 { pt3dadd( -2.07282, -31.0218, 7.9009, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.835663, -23.8577, 8.02588, 0.55 ) }
    dend_2 { pt3dadd( -0.202235, -25.4838, 9.07176, 0.55 ) }
    dend_2 { pt3dadd( 0.386672, -27.4692, 10.4575, 0.55 ) }
    dend_2 { pt3dadd( 0.77709, -30.0588, 12.416, 0.55 ) }
    dend_2 { pt3dadd( 0.861683, -31.0634, 13.2114, 0.83 ) }
    dend_2 { pt3dadd( 0.873457, -33.621, 15.5561, 0.55 ) }
    dend_2 { pt3dadd( 0.774179, -34.9385, 16.803, 0.55 ) }
    dend_2 { pt3dadd( 0.537939, -37.4993, 19.3421, 0.83 ) }
    dend_2 { pt3dadd( 0.265104, -39.398, 21.3596, 0.55 ) }
    dend_2 { pt3dadd( -0.101845, -40.9595, 23.0137, 0.55 ) }
    dend_2 { pt3dadd( -0.869177, -43.9143, 26.0995, 0.55 ) }
    dend_2 { pt3dadd( -1.48117, -46.2693, 28.5309, 0.55 ) }
    dend_2 { pt3dadd( -1.93056, -48.1586, 30.5027, 0.55 ) }
    dend_2 { pt3dadd( -2.30309, -50.1678, 32.5213, 0.28 ) }
    dend_2 { pt3dadd( -2.39096, -51.0068, 33.3226, 0.55 ) }
    dend_2 { pt3dadd( -2.52189, -52.5573, 34.7106, 0.28 ) }
    dend_2 { pt3dadd( -2.43518, -54.9863, 36.4676, 0.55 ) }
    dend_2 { pt3dadd( -4.04065, -63.0061, 42.9467, 0.55 ) }
    dend_2 { pt3dadd( -5.76825, -70.4115, 50.0916, 0.55 ) }
    dend_2 { pt3dadd( -6.85564, -76.516, 58.4836, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -40.164, 35.7065, -2.93238, 0.55 ) }
    dend_61 { pt3dadd( -43.429, 35.642, -2.30815, 0.55 ) }
    dend_61 { pt3dadd( -44.8445, 35.4989, -1.93286, 0.83 ) }
    dend_61 { pt3dadd( -46.5534, 35.1969, -1.34731, 0.55 ) }
    dend_61 { pt3dadd( -47.8905, 34.9303, -0.809534, 0.83 ) }
    dend_61 { pt3dadd( -51.3908, 34.3371, 0.612938, 0.55 ) }
    dend_61 { pt3dadd( -52.7195, 34.1267, 1.16574, 0.28 ) }
    dend_61 { pt3dadd( -54.981, 33.7406, 2.23319, 0.55 ) }
    dend_61 { pt3dadd( -58.0125, 33.2402, 3.66027, 0.55 ) }
    dend_61 { pt3dadd( -60.2894, 32.8908, 4.66714, 0.55 ) }
    dend_61 { pt3dadd( -63.3076, 32.4515, 5.94059, 0.28 ) }
    dend_61 { pt3dadd( -64.0693, 32.3693, 6.20303, 0.55 ) }
    dend_61 { pt3dadd( -65.6314, 32.2318, 6.70633, 0.28 ) }
    dend_61 { pt3dadd( -66.6682, 32.1907, 6.97975, 0.55 ) }
    dend_61 { pt3dadd( -68.7371, 32.1511, 7.38863, 0.28 ) }
    dend_61 { pt3dadd( -69.9327, 32.0912, 7.55654, 0.55 ) }
    dend_61 { pt3dadd( -72.041, 31.8482, 7.81741, 0.28 ) }
    dend_61 { pt3dadd( -73.4435, 31.6929, 7.94891, 0.55 ) }
    dend_61 { pt3dadd( -82.9858, 28.9296, 11.6713, 0.55 ) }
    dend_61 { pt3dadd( -91.9881, 25.0089, 15.6881, 0.55 ) }
    dend_61 { pt3dadd( -100.668, 20.1588, 19.3859, 0.55 ) }
    dend_61 { pt3dadd( -109.1, 14.3639, 22.1913, 0.55 ) }
    dend_61 { pt3dadd( -116.789, 8.47565, 26.5229, 0.55 ) }
    dend_61 { pt3dadd( -125.109, 3.1507, 30.3906, 0.55 ) }
    dend_61 { pt3dadd( -133.743, -0.709788, 35.1977, 0.55 ) }
    dend_61 { pt3dadd( -142.258, -5.29004, 39.5638, 0.55 ) }
    dend_61 { pt3dadd( -150.713, -9.34604, 44.5237, 0.55 ) }
    dend_61 { pt3dadd( -158.795, -13.691, 49.8487, 0.55 ) }
    dend_61 { pt3dadd( -165.933, -19.3251, 55.3122, 0.55 ) }
    dend_61 { pt3dadd( -173.271, -24.1197, 61.2889, 0.55 ) }
    dend_61 { pt3dadd( -180.583, -29.75, 66.5221, 0.55 ) }
    dend_61 { pt3dadd( -186.842, -36.0391, 72.3375, 0.55 ) }
    dend_61 { pt3dadd( -191.69, -42.0643, 79.5993, 0.55 ) }
    dend_61 { pt3dadd( -196.173, -49.6262, 85.5386, 0.55 ) }
    dend_61 { pt3dadd( -199.237, -57.516, 91.9347, 0.55 ) }
    dend_61 { pt3dadd( -202.907, -65.0186, 98.4759, 0.55 ) }
    dend_61 { pt3dadd( -207.726, -71.7804, 105.079, 0.55 ) }
    dend_61 { pt3dadd( -214.618, -76.7618, 111.422, 0.55 ) }
    dend_61 { pt3dadd( -220.609, -82.9157, 117.65, 0.55 ) }
    dend_61 { pt3dadd( -225.071, -87.9113, 125.877, 0.55 ) }
    dend_61 { pt3dadd( -231.078, -91.9509, 133.632, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -40.164, 35.7065, -2.93238, 0.55 ) }
    dend_56 { pt3dadd( -41.0675, 36.8504, -4.67172, 0.55 ) }
    dend_56 { pt3dadd( -41.6068, 38.0866, -6.48425, 0.55 ) }
    dend_56 { pt3dadd( -42.0484, 39.5061, -8.33289, 0.55 ) }
    dend_56 { pt3dadd( -42.3249, 40.3951, -9.49048, 0.55 ) }
    dend_56 { pt3dadd( -42.8294, 42.0166, -11.6021, 0.83 ) }
    dend_56 { pt3dadd( -43.1984, 43.2029, -13.1469, 0.55 ) }
    dend_56 { pt3dadd( -43.4756, 44.8547, -15.3656, 0.83 ) }
    dend_56 { pt3dadd( -43.4494, 45.8799, -16.531, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -70.8127, 21.9536, 18.1311, 0.28 ) }
    dend_48 { pt3dadd( -71.5915, 20.6449, 17.6658, 0.28 ) }
    dend_48 { pt3dadd( -71.9613, 20.0895, 17.4147, 0.28 ) }
    dend_48 { pt3dadd( -72.4424, 19.3069, 17.031, 0.55 ) }
    dend_48 { pt3dadd( -72.8398, 18.6173, 16.701, 0.28 ) }
    dend_48 { pt3dadd( -73.427, 17.5646, 16.2131, 0.55 ) }
    dend_48 { pt3dadd( -75.0648, 14.4612, 14.8363, 0.28 ) }
    dend_48 { pt3dadd( -75.5975, 13.3833, 14.264, 0.55 ) }
    dend_48 { pt3dadd( -76.4033, 11.7303, 13.3238, 0.28 ) }
    dend_48 { pt3dadd( -76.8653, 10.747, 12.7148, 0.55 ) }
    dend_48 { pt3dadd( -77.1838, 10.0716, 12.2776, 0.28 ) }
    dend_48 { pt3dadd( -77.5472, 9.29549, 11.7827, 0.55 ) }
    dend_48 { pt3dadd( -78.6492, 6.6937, 10.2042, 0.28 ) }
    dend_48 { pt3dadd( -78.9947, 5.91074, 9.69651, 0.55 ) }
    dend_48 { pt3dadd( -79.5939, 4.73221, 8.78416, 0.28 ) }
    dend_48 { pt3dadd( -80.0841, 3.98966, 8.12337, 0.28 ) }
    dend_48 { pt3dadd( -80.5232, 3.4997, 7.65604, 0.55 ) }
    dend_48 { pt3dadd( -82.0548, 2.12867, 6.37271, 0.28 ) }
    dend_48 { pt3dadd( -82.7671, 1.57493, 5.86176, 0.55 ) }
    dend_48 { pt3dadd( -84.5068, 0.32888, 4.60301, 0.28 ) }
    dend_48 { pt3dadd( -86.2466, -0.763541, 3.44755, 0.28 ) }
    dend_48 { pt3dadd( -88.1371, -1.79035, 2.2706, 0.28 ) }
    dend_48 { pt3dadd( -89.0033, -2.1716, 1.8145, 0.55 ) }
    dend_48 { pt3dadd( -93.2108, -6.76868, -1.49768, 0.55 ) }
    dend_48 { pt3dadd( -97.9313, -11.5939, -3.5571, 0.55 ) }
    dend_48 { pt3dadd( -102.517, -16.0128, -6.59775, 0.55 ) }
    dend_48 { pt3dadd( -107.192, -19.9163, -10.1642, 0.55 ) }
    dend_48 { pt3dadd( -111.895, -23.2375, -14.2457, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -70.8127, 21.9536, 18.1311, 0.55 ) }
    dend_45 { pt3dadd( -71.8786, 21.8551, 18.3004, 0.55 ) }
    dend_45 { pt3dadd( -74.879, 21.6173, 19.1681, 0.55 ) }
    dend_45 { pt3dadd( -76.0049, 21.5044, 19.5573, 0.55 ) }
    dend_45 { pt3dadd( -78.6505, 21.1623, 20.521, 0.55 ) }
    dend_45 { pt3dadd( -82.7231, 20.6593, 21.801, 0.55 ) }
    dend_45 { pt3dadd( -84.8415, 20.4598, 22.4223, 0.28 ) }
    dend_45 { pt3dadd( -88.1376, 20.0713, 23.3309, 0.55 ) }
    dend_45 { pt3dadd( -90.5857, 19.7239, 23.9219, 0.55 ) }
    dend_45 { pt3dadd( -91.6193, 19.5706, 24.1744, 0.28 ) }
    dend_45 { pt3dadd( -97.8194, 18.6468, 25.6808, 0.55 ) }
    dend_45 { pt3dadd( -100.717, 18.0642, 26.2193, 0.28 ) }
    dend_45 { pt3dadd( -104.629, 17.2418, 26.7168, 0.28 ) }
    dend_45 { pt3dadd( -108.005, 16.5638, 26.9426, 0.55 ) }
    dend_45 { pt3dadd( -121.177, 16.1213, 30.514, 0.55 ) }
    dend_45 { pt3dadd( -133.865, 15.4793, 35.5189, 0.55 ) }
    dend_45 { pt3dadd( -145.763, 13.5952, 41.9478, 0.55 ) }
    dend_45 { pt3dadd( -157.334, 14.0943, 49.1791, 0.55 ) }
    dend_45 { pt3dadd( -167.154, 14.386, 58.662, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -174.987, 15.6278, 69.7771, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 85.6171, 11.8878, -48.4775, 0.55 ) }
    dend_42 { pt3dadd( 91.5972, 13.6217, -53.5805, 0.55 ) }
    dend_42 { pt3dadd( 93.503, 14.0648, -55.2972, 0.55 ) }
    dend_42 { pt3dadd( 95.8971, 14.5468, -57.4027, 0.55 ) }
    dend_42 { pt3dadd( 100.257, 15.3367, -61.4697, 0.55 ) }
    dend_42 { pt3dadd( 104.835, 15.9554, -65.7909, 0.55 ) }
    dend_42 { pt3dadd( 107.094, 16.0922, -67.8145, 0.83 ) }
    dend_42 { pt3dadd( 108.975, 16.0543, -69.5938, 0.55 ) }
    dend_42 { pt3dadd( 110.402, 15.8881, -71.0408, 0.83 ) }
    dend_42 { pt3dadd( 113.909, 14.9862, -74.6691, 0.55 ) }
    dend_42 { pt3dadd( 116.83, 13.9872, -77.6275, 0.55 ) }
    dend_42 { pt3dadd( 120.187, 12.8455, -80.8721, 0.55 ) }
    dend_42 { pt3dadd( 123.914, 11.6608, -84.5745, 0.55 ) }
    dend_42 { pt3dadd( 126.423, 10.8004, -87.1054, 0.55 ) }
    dend_42 { pt3dadd( 129.258, 9.80602, -90.043, 0.55 ) }
    dend_42 { pt3dadd( 131.704, 8.99767, -92.7559, 0.55 ) }
    dend_42 { pt3dadd( 133.234, 8.5846, -94.6781, 0.55 ) }
    dend_42 { pt3dadd( 135.242, 7.6926, -98.5805, 0.55 ) }
    dend_42 { pt3dadd( 136.363, 7.03878, -101.009, 0.55 ) }
    dend_42 { pt3dadd( 137.412, 5.96763, -104.215, 0.55 ) }
    dend_42 { pt3dadd( 138.935, 3.95401, -109.607, 0.55 ) }
    dend_42 { pt3dadd( 139.259, 3.44945, -110.814, 0.28 ) }
    dend_42 { pt3dadd( 143.41, -2.83211, -125.449, 0.28 ) }
    dend_42 { pt3dadd( 144.76, -4.62761, -129.748, 0.83 ) }
    dend_42 { pt3dadd( 149.992, -11.2276, -144.933, 0.83 ) }
    dend_42 { pt3dadd( 152.661, -14.5634, -151.924, 0.83 ) }
    dend_42 { pt3dadd( 153.916, -16.0158, -154.727, 0.55 ) }
    dend_42 { pt3dadd( 155.316, -17.4222, -157.452, 0.55 ) }
    dend_42 { pt3dadd( 158.982, -20.0225, -162.455, 0.55 ) }
    dend_42 { pt3dadd( 162.825, -22.2785, -166.826, 0.28 ) }
    dend_42 { pt3dadd( 163.913, -22.5335, -167.018, 0.55 ) }
    dend_42 { pt3dadd( 166.257, -22.7835, -166.66, 0.28 ) }
    dend_42 { pt3dadd( 167.687, -22.8004, -166.254, 0.55 ) }
    dend_42 { pt3dadd( 169.173, -22.814, -165.702, 0.28 ) }
    dend_42 { pt3dadd( 170.944, -22.7277, -164.976, 0.55 ) }
    dend_42 { pt3dadd( 173.588, -22.5131, -164.197, 0.28 ) }
    dend_42 { pt3dadd( 175.721, -22.4184, -163.628, 0.55 ) }
    dend_42 { pt3dadd( 178.072, -22.1944, -163.214, 0.28 ) }
    dend_42 { pt3dadd( 181.277, -21.9323, -162.936, 0.55 ) }
    dend_42 { pt3dadd( 184.871, -21.5969, -162.853, 0.55 ) }
    dend_42 { pt3dadd( 188.035, -21.3041, -162.996, 0.28 ) }
    dend_42 { pt3dadd( 192.419, -20.9046, -163.44, 0.55 ) }
    dend_42 { pt3dadd( 200.007, -20.1584, -165.045, 0.55 ) }
    dend_42 { pt3dadd( 203.355, -19.7336, -166.187, 0.55 ) }
    dend_42 { pt3dadd( 204.793, -19.521, -166.842, 0.83 ) }
    dend_42 { pt3dadd( 207.541, -19.1436, -168.342, 0.55 ) }
    dend_42 { pt3dadd( 209.443, -18.828, -169.516, 0.83 ) }
    dend_42 { pt3dadd( 214.546, -17.8571, -172.757, 0.55 ) }
    dend_42 { pt3dadd( 217.692, -17.4916, -174.776, 0.28 ) }
    dend_42 { pt3dadd( 219.021, -17.3907, -175.463, 0.55 ) }
    dend_42 { pt3dadd( 222.685, -17.368, -176.887, 0.28 ) }
    dend_42 { pt3dadd( 223.979, -17.4587, -177.281, 0.55 ) }
    dend_42 { pt3dadd( 226.65, -17.731, -177.665, 0.28 ) }
    dend_42 { pt3dadd( 229.38, -18.1752, -177.553, 0.55 ) }
    dend_42 { pt3dadd( 234.893, -19.1788, -176.344, 0.28 ) }
    dend_42 { pt3dadd( 237.437, -19.6993, -175.506, 0.55 ) }
    dend_42 { pt3dadd( 241.238, -20.6435, -174.027, 0.28 ) }
    dend_42 { pt3dadd( 246.03, -21.7873, -171.995, 0.55 ) }
    dend_42 { pt3dadd( 249.489, -22.5594, -170.483, 0.55 ) }
    dend_42 { pt3dadd( 255.453, -23.7001, -167.803, 0.28 ) }
    dend_42 { pt3dadd( 257.895, -24.0969, -166.918, 0.55 ) }
    dend_42 { pt3dadd( 262.095, -24.6351, -165.884, 0.28 ) }
    dend_42 { pt3dadd( 266.255, -24.9173, -165.195, 0.55 ) }
    dend_42 { pt3dadd( 268.518, -24.8811, -165.176, 0.28 ) }
    dend_42 { pt3dadd( 270.536, -24.6103, -165.367, 0.55 ) }
    dend_42 { pt3dadd( 276.213, -23.612, -166.508, 0.28 ) }
    dend_42 { pt3dadd( 280.235, -22.6335, -167.442, 0.28 ) }
    dend_42 { pt3dadd( 283.703, -21.5379, -168.356, 0.55 ) }
    dend_42 { pt3dadd( 287.525, -20.2582, -169.583, 0.28 ) }
    dend_42 { pt3dadd( 288.479, -19.8686, -169.871, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 85.6171, 11.8878, -48.4775, 0.55 ) }
    dend_35 { pt3dadd( 86.14, 10.4499, -49.3905, 0.55 ) }
    dend_35 { pt3dadd( 86.4724, 9.22289, -50.0777, 0.28 ) }
    dend_35 { pt3dadd( 86.7741, 8.09955, -50.6112, 0.55 ) }
    dend_35 { pt3dadd( 87.5357, 5.73034, -51.7635, 0.28 ) }
    dend_35 { pt3dadd( 87.5799, 5.58063, -51.8572, 0.55 ) }
    dend_35 { pt3dadd( 87.8342, 4.79791, -52.4129, 0.28 ) }
    dend_35 { pt3dadd( 87.987, 4.14366, -52.9763, 0.55 ) }
    dend_35 { pt3dadd( 88.1095, 3.45621, -53.6425, 0.28 ) }
    dend_35 { pt3dadd( 88.2503, 2.51548, -54.5945, 0.55 ) }
    dend_35 { pt3dadd( 88.6015, 0.153508, -56.9407, 0.55 ) }
    dend_35 { pt3dadd( 88.898, -2.00202, -59.1172, 0.55 ) }
    dend_35 { pt3dadd( 89.1184, -3.72654, -60.8594, 0.55 ) }
    dend_35 { pt3dadd( 89.3041, -5.42444, -62.5423, 0.55 ) }
    dend_35 { pt3dadd( 89.3504, -5.86311, -62.9588, 0.28 ) }
    dend_35 { pt3dadd( 89.4123, -6.33008, -63.365, 0.55 ) }
    dend_35 { pt3dadd( 89.556, -6.97064, -63.8682, 0.28 ) }
    dend_35 { pt3dadd( 89.9271, -8.10688, -64.6643, 0.55 ) }
    dend_35 { pt3dadd( 90.8167, -10.2618, -65.8414, 0.55 ) }
    dend_35 { pt3dadd( 91.3035, -11.4187, -66.3691, 0.28 ) }
    dend_35 { pt3dadd( 91.7309, -12.6018, -66.9582, 0.55 ) }
    dend_35 { pt3dadd( 92.2094, -14.2709, -67.8471, 0.28 ) }
    dend_35 { pt3dadd( 92.5109, -15.6265, -68.5968, 0.55 ) }
    dend_35 { pt3dadd( 92.8768, -17.6614, -69.7223, 0.28 ) }
    dend_35 { pt3dadd( 93.2692, -19.7649, -70.8223, 0.55 ) }
    dend_35 { pt3dadd( 93.7998, -22.823, -72.4464, 0.28 ) }
    dend_35 { pt3dadd( 94.0479, -24.4565, -73.3176, 0.55 ) }
    dend_35 { pt3dadd( 94.2759, -26.1304, -74.248, 0.28 ) }
    dend_35 { pt3dadd( 94.4631, -27.6066, -75.1573, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 94.7616, -29.4494, -76.4505, 0.55 ) }
    dend_35 { pt3dadd( 95.1529, -31.1463, -77.6063, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 58.6291, 22.4387, -3.6176, 0.55 ) }
    dend_31 { pt3dadd( 61.0725, 22.1378, -3.00778, 0.55 ) }
    dend_31 { pt3dadd( 62.8555, 21.8392, -2.73073, 0.55 ) }
    dend_31 { pt3dadd( 66.7619, 21.128, -2.32779, 0.55 ) }
    dend_31 { pt3dadd( 68.5207, 20.7621, -2.30258, 0.55 ) }
    dend_31 { pt3dadd( 70.4424, 20.3984, -2.37572, 0.55 ) }
    dend_31 { pt3dadd( 73.0264, 19.9451, -2.66055, 0.55 ) }
    dend_31 { pt3dadd( 75.755, 19.3789, -3.21715, 0.55 ) }
    dend_31 { pt3dadd( 77.1893, 19.0533, -3.67268, 0.55 ) }
    dend_31 { pt3dadd( 80.1099, 18.3675, -4.998, 0.55 ) }
    dend_31 { pt3dadd( 81.4558, 18.0603, -5.65188, 0.55 ) }
    dend_31 { pt3dadd( 84.6094, 17.275, -7.26272, 0.55 ) }
    dend_31 { pt3dadd( 86.7433, 16.6575, -8.33137, 0.55 ) }
    dend_31 { pt3dadd( 88.3127, 16.1973, -9.04537, 0.83 ) }
    dend_31 { pt3dadd( 90.8177, 15.3693, -10.1525, 0.55 ) }
    dend_31 { pt3dadd( 93.2674, 14.4425, -11.1341, 0.83 ) }
    dend_31 { pt3dadd( 95.343, 13.5635, -11.8868, 0.55 ) }
    dend_31 { pt3dadd( 97.1897, 12.8142, -12.4601, 0.55 ) }
    dend_31 { pt3dadd( 98.2401, 12.4384, -12.7298, 0.83 ) }
    dend_31 { pt3dadd( 100.692, 11.5762, -13.2288, 0.28 ) }
    dend_31 { pt3dadd( 101.911, 11.2033, -13.4012, 0.28 ) }
    dend_31 { pt3dadd( 103.09, 10.7627, -13.6258, 0.28 ) }
    dend_31 { pt3dadd( 104.365, 10.3208, -13.8763, 0.28 ) }
    dend_31 { pt3dadd( 106.406, 9.65035, -14.3218, 0.28 ) }
    dend_31 { pt3dadd( 107.227, 9.39232, -14.4769, 0.55 ) }
    dend_31 { pt3dadd( 109.19, 8.80689, -14.6539, 0.55 ) }
    dend_31 { pt3dadd( 112.721, 7.72887, -14.7903, 0.55 ) }
    dend_31 { pt3dadd( 113.697, 7.40673, -14.7831, 0.55 ) }
    dend_31 { pt3dadd( 114.567, 7.09219, -14.7373, 0.83 ) }
    dend_31 { pt3dadd( 116.458, 6.47751, -14.4854, 0.55 ) }
    dend_31 { pt3dadd( 118.101, 5.94802, -14.2398, 0.55 ) }
    dend_31 { pt3dadd( 119.655, 5.45488, -14.0008, 0.55 ) }
    dend_31 { pt3dadd( 120.857, 5.04953, -13.8492, 0.55 ) }
    dend_31 { pt3dadd( 122.761, 4.26527, -13.6972, 0.55 ) }
    dend_31 { pt3dadd( 125.001, 3.13108, -13.6349, 0.55 ) }
    dend_31 { pt3dadd( 128.473, 0.951404, -13.7684, 0.55 ) }
    dend_31 { pt3dadd( 130.372, -0.542058, -13.9525, 0.55 ) }
    dend_31 { pt3dadd( 132.01, -2.13352, -14.1839, 0.28 ) }
    dend_31 { pt3dadd( 132.496, -2.72193, -14.2773, 0.55 ) }
    dend_31 { pt3dadd( 133.558, -4.36751, -14.5264, 0.28 ) }
    dend_31 { pt3dadd( 134.459, -6.20952, -14.7721, 0.55 ) }
    dend_31 { pt3dadd( 135.287, -8.49609, -14.903, 0.55 ) }
    dend_31 { pt3dadd( 135.847, -9.99482, -14.9184, 0.28 ) }
    dend_31 { pt3dadd( 136.052, -10.5228, -14.8983, 0.55 ) }
    dend_31 { pt3dadd( 136.587, -11.8334, -14.8301, 0.28 ) }
    dend_31 { pt3dadd( 137.319, -13.5361, -14.7003, 0.55 ) }
    dend_31 { pt3dadd( 139.238, -17.6331, -14.2845, 0.55 ) }
    dend_31 { pt3dadd( 140.24, -19.6952, -14.0316, 0.55 ) }
    dend_31 { pt3dadd( 141.171, -21.5841, -13.7828, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 58.6291, 22.4387, -3.6176, 0.55 ) }
    dend_30 { pt3dadd( 60.8268, 23.1605, -1.69885, 0.55 ) }
    dend_30 { pt3dadd( 61.536, 23.3814, -1.1241, 0.55 ) }
    dend_30 { pt3dadd( 64.1947, 24.0471, 0.921163, 0.55 ) }
    dend_30 { pt3dadd( 67.1564, 24.8607, 3.23964, 0.55 ) }
    dend_30 { pt3dadd( 70.9415, 25.9143, 6.31895, 0.55 ) }
    dend_30 { pt3dadd( 71.9877, 26.2052, 7.16189, 0.55 ) }
    dend_30 { pt3dadd( 73.8689, 26.647, 8.66834, 0.55 ) }
    dend_30 { pt3dadd( 75.9385, 27.1662, 10.2288, 0.55 ) }
    dend_30 { pt3dadd( 78.3546, 27.8196, 11.9169, 0.55 ) }
    dend_30 { pt3dadd( 80.6296, 28.4708, 13.5103, 0.55 ) }
    dend_30 { pt3dadd( 81.8824, 28.8765, 14.3133, 0.55 ) }
    dend_30 { pt3dadd( 83.3522, 29.3968, 15.2456, 0.55 ) }
    dend_30 { pt3dadd( 85.1724, 30.0892, 16.3552, 0.83 ) }
    dend_30 { pt3dadd( 88.188, 31.1559, 17.8492, 0.55 ) }
    dend_30 { pt3dadd( 90.1974, 31.7623, 18.7541, 0.83 ) }
    dend_30 { pt3dadd( 93.0012, 32.4543, 19.9357, 0.55 ) }
    dend_30 { pt3dadd( 93.8649, 32.6164, 20.2944, 0.55 ) }
    dend_30 { pt3dadd( 96.5543, 32.9734, 21.3744, 0.55 ) }
    dend_30 { pt3dadd( 101.395, 33.2805, 23.1643, 0.55 ) }
    dend_30 { pt3dadd( 104.954, 33.2913, 24.4283, 0.55 ) }
    dend_30 { pt3dadd( 107.768, 33.1804, 25.5181, 0.55 ) }
    dend_30 { pt3dadd( 110.631, 32.9335, 26.7541, 0.55 ) }
    dend_30 { pt3dadd( 111.234, 32.8658, 27.0201, 0.28 ) }
    dend_30 { pt3dadd( 112.457, 32.6786, 27.565, 0.83 ) }
    dend_30 { pt3dadd( 117.478, 31.841, 29.845, 0.55 ) }
    dend_30 { pt3dadd( 120.998, 31.2466, 31.3707, 0.55 ) }
    dend_30 { pt3dadd( 123.878, 30.846, 32.6831, 0.55 ) }
    dend_30 { pt3dadd( 125.596, 30.6044, 33.4847, 0.83 ) }
    dend_30 { pt3dadd( 126.949, 30.4346, 34.1148, 0.28 ) }
    dend_30 { pt3dadd( 128.177, 30.2804, 34.6744, 0.55 ) }
    dend_30 { pt3dadd( 137.537, 31.6964, 40.016, 0.55 ) }
    dend_30 { pt3dadd( 147.702, 31.1693, 43.833, 0.55 ) }
    dend_30 { pt3dadd( 157.738, 32.0257, 47.9194, 0.55 ) }
    dend_30 { pt3dadd( 166.493, 31.7414, 54.3553, 0.55 ) }
    dend_30 { pt3dadd( 174.592, 30.0858, 61.4143, 0.55 ) }
    dend_30 { pt3dadd( 183.808, 26.4053, 65.8512, 0.55 ) }
    dend_30 { pt3dadd( 193.053, 21.4198, 68.6494, 0.55 ) }
    dend_30 { pt3dadd( 203.259, 18.2238, 70.5922, 0.55 ) }
    dend_30 { pt3dadd( 213.288, 14.9889, 73.2594, 0.55 ) }
    dend_30 { pt3dadd( 223.775, 12.7987, 75.1015, 0.55 ) }
    dend_30 { pt3dadd( 234.08, 11.3173, 78.2292, 0.55 ) }
    dend_30 { pt3dadd( 243.703, 8.11231, 82.1393, 0.55 ) }
    dend_30 { pt3dadd( 253.451, 6.96863, 86.8113, 0.55 ) }
    dend_30 { pt3dadd( 262.591, 7.63937, 92.6567, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.07282, -31.0218, 7.9009, 1.38 ) }
    dend_13 { pt3dadd( 0.0693369, -34.1424, 6.35841, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.07282, -31.0218, 7.9009, 0.55 ) }
    dend_12 { pt3dadd( -3.40712, -32.5541, 7.91207, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.88944, -34.5258, 7.92648, 0.55 ) }
    dend_12 { pt3dadd( -6.03783, -35.8259, 7.94938, 0.55 ) }
    dend_12 { pt3dadd( -7.00212, -36.9132, 7.8182, 0.55 ) }
    dend_12 { pt3dadd( -9.09863, -39.1634, 7.333, 0.55 ) }
    dend_12 { pt3dadd( -10.5662, -40.6643, 6.95151, 0.55 ) }
    dend_12 { pt3dadd( -11.8703, -42.0105, 6.5628, 0.55 ) }
    dend_12 { pt3dadd( -15.216, -45.2821, 5.56658, 0.55 ) }
    dend_12 { pt3dadd( -19.2333, -49.0656, 4.40112, 0.55 ) }
    dend_12 { pt3dadd( -22.3416, -51.9294, 3.444, 0.55 ) }
    dend_12 { pt3dadd( -24.3261, -53.8118, 2.80443, 0.55 ) }
    dend_12 { pt3dadd( -26.6056, -56.0734, 2.07794, 0.55 ) }
    dend_12 { pt3dadd( -29.5079, -59.328, 1.19594, 0.55 ) }
    dend_12 { pt3dadd( -31.2171, -61.6475, 0.717343, 0.55 ) }
    dend_12 { pt3dadd( -33.3416, -64.9934, 0.312644, 0.55 ) }
    dend_12 { pt3dadd( -35.0494, -68.1374, 0.057788, 0.55 ) }
    dend_12 { pt3dadd( -36.7956, -72.0729, -0.168156, 0.55 ) }
    dend_12 { pt3dadd( -38.4676, -76.7054, -0.309572, 0.55 ) }
    dend_12 { pt3dadd( -39.3972, -80.2571, -0.323013, 0.55 ) }
    dend_12 { pt3dadd( -39.7417, -82.0278, -0.210339, 0.55 ) }
    dend_12 { pt3dadd( -40.3056, -86.1949, 0.288622, 0.55 ) }
    dend_12 { pt3dadd( -40.766, -90.0955, 0.859554, 0.55 ) }
    dend_12 { pt3dadd( -41.0342, -94.0294, 1.73139, 0.55 ) }
    dend_12 { pt3dadd( -41.2144, -96.2847, 2.3543, 0.55 ) }
    dend_12 { pt3dadd( -41.7353, -103.257, 4.53814, 0.55 ) }
    dend_12 { pt3dadd( -41.7773, -103.77, 4.70788, 0.55 ) }
    dend_12 { pt3dadd( -41.9769, -106.915, 5.82615, 0.55 ) }
    dend_12 { pt3dadd( -42.5997, -112.529, 7.95173, 0.55 ) }
    dend_12 { pt3dadd( -42.8163, -114.406, 8.55029, 0.55 ) }
    dend_12 { pt3dadd( -43.2159, -117.343, 8.97918, 0.55 ) }
    dend_12 { pt3dadd( -43.3303, -118.436, 8.88881, 0.55 ) }
    dend_12 { pt3dadd( -43.5374, -122.148, 7.89148, 0.55 ) }
    dend_12 { pt3dadd( -43.526, -124.56, 6.74304, 0.55 ) }
    dend_12 { pt3dadd( -43.3854, -128.411, 4.13977, 0.55 ) }
    dend_12 { pt3dadd( -43.0155, -133.132, 0.597962, 0.28 ) }
    dend_12 { pt3dadd( -42.9023, -134.3, -0.433426, 0.55 ) }
    dend_12 { pt3dadd( -42.7213, -136.073, -2.15147, 0.28 ) }
    dend_12 { pt3dadd( -42.6962, -136.34, -2.42447, 0.55 ) }
    dend_12 { pt3dadd( -42.5704, -137.802, -3.79563, 0.28 ) }
    dend_12 { pt3dadd( -42.5639, -138.297, -4.14889, 0.55 ) }
    dend_12 { pt3dadd( -42.5994, -140.862, -5.49348, 0.28 ) }
    dend_12 { pt3dadd( -42.6454, -141.734, -5.94083, 0.55 ) }
    dend_12 { pt3dadd( -42.8131, -144.254, -7.09236, 0.28 ) }
    dend_12 { pt3dadd( -42.8625, -145.047, -7.45187, 0.55 ) }
    dend_12 { pt3dadd( -43.0561, -147.783, -8.64848, 0.28 ) }
    dend_12 { pt3dadd( -43.1385, -149.042, -9.20518, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -6.85564, -76.516, 58.4836, 0.55 ) }
    dend_10 { pt3dadd( -9.38368, -81.9421, 63.8406, 0.55 ) }
    dend_10 { pt3dadd( -12.6862, -86.6727, 69.4304, 0.55 ) }
    dend_10 { pt3dadd( -15.7873, -91.9275, 74.6555, 0.55 ) }
    dend_10 { pt3dadd( -19.0309, -97.2113, 79.7634, 0.55 ) }
    dend_10 { pt3dadd( -21.4616, -103.391, 84.2837, 0.55 ) }
    dend_10 { pt3dadd( -23.7985, -109.312, 89.1842, 0.55 ) }
    dend_10 { pt3dadd( -25.301, -116.479, 92.4862, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.85564, -76.516, 58.4836, 0.55 ) }
    dend_3 { pt3dadd( -5.91622, -82.3277, 63.8341, 0.55 ) }
    dend_3 { pt3dadd( -4.87248, -89.0165, 68.0119, 0.55 ) }
    dend_3 { pt3dadd( -5.09963, -95.6849, 72.344, 0.55 ) }
    dend_3 { pt3dadd( -5.90414, -102.696, 76.0156, 0.55 ) }
    dend_3 { pt3dadd( -6.37323, -109.698, 79.7621, 0.55 ) }
    dend_3 { pt3dadd( -6.69557, -116.427, 83.9926, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -43.4494, 45.8799, -16.531, 0.83 ) }
    dend_60 { pt3dadd( -42.7121, 47.9318, -18.7021, 0.83 ) }
    dend_60 { pt3dadd( -41.0771, 52.8941, -23.5483, 0.55 ) }
    dend_60 { pt3dadd( -40.3755, 55.0329, -25.4558, 0.83 ) }
    dend_60 { pt3dadd( -39.6219, 57.319, -27.3356, 0.55 ) }
    dend_60 { pt3dadd( -38.8596, 59.6686, -28.927, 0.55 ) }
    dend_60 { pt3dadd( -38.4726, 60.847, -29.5701, 0.28 ) }
    dend_60 { pt3dadd( -38.2729, 61.6307, -29.7956, 0.55 ) }
    dend_60 { pt3dadd( -37.5449, 64.2358, -29.9759, 0.28 ) }
    dend_60 { pt3dadd( -37.2072, 65.3472, -29.9951, 0.55 ) }
    dend_60 { pt3dadd( -36.0864, 69.2136, -29.9011, 0.28 ) }
    dend_60 { pt3dadd( -35.2818, 72.2835, -29.7219, 0.55 ) }
    dend_60 { pt3dadd( -34.2622, 77.096, -29.2944, 0.28 ) }
    dend_60 { pt3dadd( -33.5179, 81.3381, -28.8386, 0.28 ) }
    dend_60 { pt3dadd( -33.2408, 83.7234, -28.5392, 0.55 ) }
    dend_60 { pt3dadd( -33.0861, 86.5658, -28.1859, 0.28 ) }
    dend_60 { pt3dadd( -33.1016, 87.929, -27.9998, 0.55 ) }
    dend_60 { pt3dadd( -33.3077, 91.1506, -27.7102, 0.28 ) }
    dend_60 { pt3dadd( -33.5827, 93.3101, -27.6314, 0.28 ) }
    dend_60 { pt3dadd( -33.8952, 95.435, -27.6187, 0.28 ) }
    dend_60 { pt3dadd( -34.0183, 96.5547, -27.6156, 0.55 ) }
    dend_60 { pt3dadd( -34.2761, 101.069, -27.7035, 0.28 ) }
    dend_60 { pt3dadd( -34.4046, 106.404, -27.9017, 0.55 ) }
    dend_60 { pt3dadd( -34.4222, 108.245, -27.9768, 0.55 ) }
    dend_60 { pt3dadd( -34.47, 110.093, -28.0131, 0.55 ) }
    dend_60 { pt3dadd( -34.774, 114.032, -28.1578, 0.55 ) }
    dend_60 { pt3dadd( -35.135, 116.63, -28.3114, 0.28 ) }
    dend_60 { pt3dadd( -35.3824, 117.621, -28.3849, 0.55 ) }
    dend_60 { pt3dadd( -36.2364, 120.314, -28.532, 0.28 ) }
    dend_60 { pt3dadd( -37.2556, 123.191, -28.8015, 0.55 ) }
    dend_60 { pt3dadd( -39.0866, 127.351, -29.3534, 0.28 ) }
    dend_60 { pt3dadd( -40.0292, 129.099, -29.6418, 0.28 ) }
    dend_60 { pt3dadd( -41.6301, 131.551, -30.2828, 0.55 ) }
    dend_60 { pt3dadd( -43.4549, 134.116, -31.0824, 0.28 ) }
    dend_60 { pt3dadd( -43.7976, 134.523, -31.2282, 0.55 ) }
    dend_60 { pt3dadd( -45.0586, 135.829, -31.747, 0.28 ) }
    dend_60 { pt3dadd( -49.4571, 140.035, -33.4463, 0.55 ) }
    dend_60 { pt3dadd( -55.6661, 145.282, -36.0769, 0.28 ) }
    dend_60 { pt3dadd( -56.8248, 146.172, -36.6403, 0.55 ) }
    dend_60 { pt3dadd( -60.0262, 148.482, -38.2478, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -61.373, 149.432, -38.963, 0.28 ) }
    dend_60 { pt3dadd( -62.5481, 150.226, -39.6463, 0.55 ) }
    dend_60 { pt3dadd( -66.0531, 152.109, -41.9402, 0.28 ) }
    dend_60 { pt3dadd( -68.5714, 153.17, -43.4581, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -43.4494, 45.8799, -16.531, 0.55 ) }
    dend_57 { pt3dadd( -43.4785, 46.803, -16.6089, 0.55 ) }
    dend_57 { pt3dadd( -43.5114, 47.347, -16.6053, 0.28 ) }
    dend_57 { pt3dadd( -43.6153, 47.739, -16.5117, 0.55 ) }
    dend_57 { pt3dadd( -43.8539, 48.639, -16.2969, 0.28 ) }
    dend_57 { pt3dadd( -44.0215, 49.2712, -16.146, 0.55 ) }
    dend_57 { pt3dadd( -44.3304, 50.4367, -15.8678, 0.28 ) }
    dend_57 { pt3dadd( -44.5623, 51.0624, -15.6145, 0.55 ) }
    dend_57 { pt3dadd( -45.5701, 52.5681, -14.5105, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -111.895, -23.2375, -14.2457, 0.55 ) }
    dend_52 { pt3dadd( -120.494, -33.4854, -20.3144, 0.55 ) }
    dend_52 { pt3dadd( -126.765, -44.7831, -27.3023, 0.55 ) }
    dend_52 { pt3dadd( -131.626, -54.7325, -36.9545, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -111.895, -23.2375, -14.2457, 0.55 ) }
    dend_49 { pt3dadd( -118.448, -29.1271, -20.4988, 0.55 ) }
    dend_49 { pt3dadd( -123.897, -34.8325, -27.8814, 0.55 ) }
    dend_49 { pt3dadd( -128.908, -40.641, -35.4897, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -174.987, 15.6278, 69.7771, 0.55 ) }
    dend_47 { pt3dadd( -180.689, 16.096, 73.8711, 0.55 ) }
    dend_47 { pt3dadd( -186.809, 17.2587, 77.1409, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -174.987, 15.6278, 69.7771, 0.55 ) }
    dend_46 { pt3dadd( -186.851, 14.1828, 74.246, 0.55 ) }
    dend_46 { pt3dadd( -198.768, 14.8479, 78.755, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 95.1529, -31.1463, -77.6063, 0.28 ) }
    dend_39 { pt3dadd( 101.216, -33.955, -85.9108, 0.28 ) }
    dend_39 { pt3dadd( 101.798, -34.2846, -86.6496, 0.55 ) }
    dend_39 { pt3dadd( 102.779, -34.8411, -87.8969, 0.28 ) }
    dend_39 { pt3dadd( 103.606, -35.3097, -88.9471, 0.28 ) }
    dend_39 { pt3dadd( 104.7, -35.9301, -90.3373, 0.55 ) }
    dend_39 { pt3dadd( 106.143, -36.7479, -92.1702, 0.55 ) }
    dend_39 { pt3dadd( 107.78, -38.3056, -93.0723, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 95.1529, -31.1463, -77.6063, 0.55 ) }
    dend_36 { pt3dadd( 96.3442, -32.9602, -79.666, 0.55 ) }
    dend_36 { pt3dadd( 96.7139, -33.7637, -80.6008, 0.28 ) }
    dend_36 { pt3dadd( 97.2702, -35.1321, -82.2445, 0.55 ) }
    dend_36 { pt3dadd( 98.4956, -38.1463, -85.8654, 0.28 ) }
    dend_36 { pt3dadd( 99.3449, -40.2353, -88.3747, 0.55 ) }
    dend_36 { pt3dadd( 100.784, -43.7746, -92.6263, 0.28 ) }
    dend_36 { pt3dadd( 102.448, -48.0496, -98.2204, 0.28 ) }
    dend_36 { pt3dadd( 103.123, -50.004, -100.849, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 141.171, -21.5841, -13.7828, 0.28 ) }
    dend_33 { pt3dadd( 142.637, -23.5856, -12.9582, 0.28 ) }
    dend_33 { pt3dadd( 144.471, -26.2051, -11.6389, 0.28 ) }
    dend_33 { pt3dadd( 145.625, -27.8973, -10.7099, 0.55 ) }
    dend_33 { pt3dadd( 146.324, -28.824, -10.1418, 0.28 ) }
    dend_33 { pt3dadd( 146.695, -29.3224, -9.83092, 0.28 ) }
    dend_33 { pt3dadd( 148.536, -31.7881, -8.33804, 0.55 ) }
    dend_33 { pt3dadd( 148.957, -32.3265, -7.9253, 0.28 ) }
    dend_33 { pt3dadd( 149.938, -33.7354, -6.73775, 0.55 ) }
    dend_33 { pt3dadd( 150.775, -34.9679, -5.7648, 0.28 ) }
    dend_33 { pt3dadd( 151.513, -35.9713, -4.99177, 0.55 ) }
    dend_33 { pt3dadd( 152.381, -37.1825, -4.15359, 0.55 ) }
    dend_33 { pt3dadd( 153.777, -39.1401, -3.0939, 0.55 ) }
    dend_33 { pt3dadd( 154.113, -39.6229, -2.85351, 0.55 ) }
    dend_33 { pt3dadd( 155.316, -41.4302, -1.98213, 0.28 ) }
    dend_33 { pt3dadd( 155.781, -42.1721, -1.64948, 0.55 ) }
    dend_33 { pt3dadd( 156.435, -43.1185, -1.22384, 0.28 ) }
    dend_33 { pt3dadd( 157.361, -44.4708, -0.686792, 0.55 ) }
    dend_33 { pt3dadd( 158.92, -46.642, -0.168612, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 141.171, -21.5841, -13.7828, 0.55 ) }
    dend_32 { pt3dadd( 138.278, -21.4513, -14.022, 0.55 ) }
    dend_32 { pt3dadd( 135.928, -21.3434, -14.2162, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.0693369, -34.1424, 6.35841, 0.83 ) }
    dend_17 { pt3dadd( 0.201722, -34.4343, 6.33507, 0.83 ) }
    dend_17 { pt3dadd( 1.74831, -37.0292, 6.30495, 0.83 ) }
    dend_17 { pt3dadd( 3.11032, -39.2992, 6.12806, 0.55 ) }
    dend_17 { pt3dadd( 4.19692, -41.1102, 5.98695, 0.55 ) }
    dend_17 { pt3dadd( 6.50651, -44.9596, 5.687, 0.83 ) }
    dend_17 { pt3dadd( 9.3079, -49.6285, 5.32319, 0.55 ) }
    dend_17 { pt3dadd( 10.8363, -52.0746, 5.18389, 0.83 ) }
    dend_17 { pt3dadd( 13.5462, -55.975, 5.14797, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.0693369, -34.1424, 6.35841, 0.55 ) }
    dend_14 { pt3dadd( -1.74203, -34.9575, 4.06227, 0.55 ) }
    dend_14 { pt3dadd( -3.68631, -35.8325, 1.59764, 0.55 ) }
    dend_14 { pt3dadd( -5.98155, -36.8653, -1.31187, 0.55 ) }
    dend_14 { pt3dadd( -8.76871, -38.1196, -4.84497, 0.55 ) }
    dend_14 { pt3dadd( -10.3504, -38.8313, -6.84988, 0.55 ) }
    dend_14 { pt3dadd( -10.6681, -38.9743, -7.25263, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.69557, -116.427, 83.9926, 0.55 ) }
    dend_7 { pt3dadd( -6.02459, -127.429, 91.902, 0.55 ) }
    dend_7 { pt3dadd( -3.48875, -139.047, 98.4316, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -6.69557, -116.427, 83.9926, 0.55 ) }
    dend_4 { pt3dadd( -7.04592, -124.867, 88.8274, 0.55 ) }
    dend_4 { pt3dadd( -7.79378, -133.088, 93.9844, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -45.5701, 52.5681, -14.5105, 0.28 ) }
    dend_59 { pt3dadd( -46.9018, 53.6802, -13.1861, 0.28 ) }
    dend_59 { pt3dadd( -47.417, 54.0882, -12.6226, 0.55 ) }
    dend_59 { pt3dadd( -48.8996, 55.2625, -10.9544, 0.28 ) }
    dend_59 { pt3dadd( -49.6203, 55.8614, -10.2061, 0.55 ) }
    dend_59 { pt3dadd( -51.5724, 57.4991, -8.257, 0.28 ) }
    dend_59 { pt3dadd( -53.5564, 59.1637, -6.27595, 0.55 ) }
    dend_59 { pt3dadd( -56.8542, 61.735, -3.00526, 0.28 ) }
    dend_59 { pt3dadd( -57.5562, 62.2882, -2.3068, 0.55 ) }
    dend_59 { pt3dadd( -59.084, 63.614, -0.805215, 0.28 ) }
    dend_59 { pt3dadd( -59.6783, 64.169, -0.207069, 0.55 ) }
    dend_59 { pt3dadd( -66.2365, 67.759, 4.35579, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -72.9296, 72.6979, 7.09965, 0.55 ) }
    dend_59 { pt3dadd( -78.9677, 77.5816, 11.1503, 0.55 ) }
    dend_59 { pt3dadd( -83.8129, 83.4597, 15.4737, 0.55 ) }
    dend_59 { pt3dadd( -89.4331, 89.1833, 18.9909, 0.55 ) }
    dend_59 { pt3dadd( -95.985, 93.4896, 22.8957, 0.55 ) }
    dend_59 { pt3dadd( -102.271, 96.8623, 27.9772, 0.55 ) }
    dend_59 { pt3dadd( -108.051, 99.1002, 34.1664, 0.55 ) }
    dend_59 { pt3dadd( -113.77, 101.879, 40.1904, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -45.5701, 52.5681, -14.5105, 0.55 ) }
    dend_58 { pt3dadd( -49.0528, 51.7457, -13.1446, 0.55 ) }
    dend_58 { pt3dadd( -50.8686, 51.2592, -12.439, 0.28 ) }
    dend_58 { pt3dadd( -52.2198, 50.8972, -11.9138, 0.55 ) }
    dend_58 { pt3dadd( -53.346, 50.5954, -11.4762, 0.28 ) }
    dend_58 { pt3dadd( -54.1348, 50.3841, -11.1696, 0.55 ) }
    dend_58 { pt3dadd( -56.3099, 49.8013, -10.3243, 0.28 ) }
    dend_58 { pt3dadd( -57.7678, 49.296, -9.94352, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -131.626, -54.7325, -36.9545, 0.55 ) }
    dend_54 { pt3dadd( -136.639, -64.9224, -39.5475, 0.55 ) }
    dend_54 { pt3dadd( -141.509, -75.4212, -40.8633, 0.55 ) }
    dend_54 { pt3dadd( -145.39, -85.8915, -44.1787, 0.55 ) }
    dend_54 { pt3dadd( -150.517, -96.1859, -46.0285, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -131.626, -54.7325, -36.9545, 0.55 ) }
    dend_53 { pt3dadd( -134.911, -59.2729, -43.1548, 0.55 ) }
    dend_53 { pt3dadd( -137.595, -62.8701, -50.2046, 0.55 ) }
    dend_53 { pt3dadd( -141.166, -67.226, -56.3786, 0.55 ) }
    dend_53 { pt3dadd( -146.305, -70.0845, -62.3172, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -128.908, -40.641, -35.4897, 0.55 ) }
    dend_51 { pt3dadd( -132.617, -42.6305, -42.0535, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -128.908, -40.641, -35.4897, 0.55 ) }
    dend_50 { pt3dadd( -133.59, -49.9073, -36.4511, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 107.78, -38.3056, -93.0723, 0.28 ) }
    dend_41 { pt3dadd( 110.274, -40.0656, -94.363, 0.28 ) }
    dend_41 { pt3dadd( 111.433, -40.8831, -94.9625, 0.55 ) }
    dend_41 { pt3dadd( 113.643, -42.4422, -96.1057, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 107.78, -38.3056, -93.0723, 0.55 ) }
    dend_40 { pt3dadd( 107.341, -39.1581, -95.2555, 0.55 ) }
    dend_40 { pt3dadd( 106.462, -40.8634, -99.6225, 0.28 ) }
    dend_40 { pt3dadd( 106.176, -41.4189, -101.045, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 103.123, -50.004, -100.849, 0.28 ) }
    dend_38 { pt3dadd( 104.654, -53.5946, -104.245, 0.28 ) }
    dend_38 { pt3dadd( 105.411, -55.3726, -105.927, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 103.123, -50.004, -100.849, 0.55 ) }
    dend_37 { pt3dadd( 101.728, -50.7687, -100.011, 0.55 ) }
    dend_37 { pt3dadd( 97.8381, -52.9013, -97.6749, 0.28 ) }
    dend_37 { pt3dadd( 96.9141, -53.4079, -97.12, 0.55 ) }
    dend_37 { pt3dadd( 94.3864, -54.7937, -95.6019, 0.28 ) }
    dend_37 { pt3dadd( 92.7571, -55.687, -94.6234, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 13.5462, -55.975, 5.14797, 0.83 ) }
    dend_23 { pt3dadd( 13.5942, -56.3044, 5.09797, 0.83 ) }
    dend_23 { pt3dadd( 14.2573, -60.6199, 4.57623, 0.83 ) }
    dend_23 { pt3dadd( 14.4311, -63.8624, 4.32151, 0.83 ) }
    dend_23 { pt3dadd( 14.3087, -67.0077, 4.34, 0.83 ) }
    dend_23 { pt3dadd( 13.9284, -71.208, 4.63721, 0.83 ) }
    dend_23 { pt3dadd( 13.3191, -76.0549, 5.12175, 0.83 ) }
    dend_23 { pt3dadd( 12.5955, -81.4803, 5.94273, 0.83 ) }
    dend_23 { pt3dadd( 11.8377, -86.7617, 6.97544, 0.83 ) }
    dend_23 { pt3dadd( 10.5344, -93.2362, 8.00094, 0.83 ) }
    dend_23 { pt3dadd( 9.81666, -96.2017, 8.27103, 0.83 ) }
    dend_23 { pt3dadd( 9.30108, -98.4253, 8.33575, 0.83 ) }
    dend_23 { pt3dadd( 8.24468, -102.686, 8.35087, 0.83 ) }
    dend_23 { pt3dadd( 7.43504, -106.494, 8.17992, 0.83 ) }
    dend_23 { pt3dadd( 6.35124, -114.574, 7.03316, 0.83 ) }
    dend_23 { pt3dadd( 5.9443, -118.967, 5.85222, 0.83 ) }
    dend_23 { pt3dadd( 5.63654, -123.001, 4.47145, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 13.5462, -55.975, 5.14797, 0.55 ) }
    dend_18 { pt3dadd( 12.3397, -58.5113, 5.25925, 0.55 ) }
    dend_18 { pt3dadd( 11.4324, -60.3495, 5.47938, 0.55 ) }
    dend_18 { pt3dadd( 10.8801, -61.5236, 5.74134, 0.55 ) }
    dend_18 { pt3dadd( 10.0986, -63.3598, 6.33623, 0.55 ) }
    dend_18 { pt3dadd( 8.63956, -66.9933, 7.75584, 0.55 ) }
    dend_18 { pt3dadd( 7.50191, -69.738, 9.1382, 0.55 ) }
    dend_18 { pt3dadd( 6.58438, -71.9339, 10.4863, 0.55 ) }
    dend_18 { pt3dadd( 5.59722, -74.1482, 12.0071, 0.55 ) }
    dend_18 { pt3dadd( 4.75964, -75.9825, 13.3663, 0.28 ) }
    dend_18 { pt3dadd( 4.0459, -77.477, 14.7015, 0.55 ) }
    dend_18 { pt3dadd( 2.66983, -80.1885, 17.523, 0.55 ) }
    dend_18 { pt3dadd( 1.7264, -81.8454, 19.4353, 0.55 ) }
    dend_18 { pt3dadd( 1.18751, -82.7735, 20.4966, 0.55 ) }
    dend_18 { pt3dadd( 0.496261, -83.8681, 21.6868, 0.83 ) }
    dend_18 { pt3dadd( -1.57661, -87.1176, 24.9892, 0.28 ) }
    dend_18 { pt3dadd( -2.26056, -88.1935, 26.0515, 0.55 ) }
    dend_18 { pt3dadd( -3.43026, -90.1385, 27.9056, 0.28 ) }
    dend_18 { pt3dadd( -3.79169, -90.7372, 28.5226, 0.55 ) }
    dend_18 { pt3dadd( -4.55784, -92.1453, 29.9452, 0.28 ) }
    dend_18 { pt3dadd( -4.98602, -92.9474, 30.693, 0.55 ) }
    dend_18 { pt3dadd( -6.52465, -95.567, 32.3916, 0.55 ) }
    dend_18 { pt3dadd( -8.92929, -102.614, 39.8853, 0.55 ) }
    dend_18 { pt3dadd( -10.8389, -109.324, 47.8184, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -10.6681, -38.9743, -7.25263, 0.55 ) }
    dend_16 { pt3dadd( -13.9585, -39.9209, -9.88125, 0.55 ) }
    dend_16 { pt3dadd( -14.923, -40.1313, -10.6133, 0.55 ) }
    dend_16 { pt3dadd( -17.3374, -40.6646, -12.3692, 0.55 ) }
    dend_16 { pt3dadd( -22.5975, -41.6987, -16.0077, 0.28 ) }
    dend_16 { pt3dadd( -23.3755, -41.8386, -16.5048, 0.55 ) }
    dend_16 { pt3dadd( -26.612, -42.5097, -18.4681, 0.55 ) }
    dend_16 { pt3dadd( -31.0037, -43.4512, -20.7764, 0.55 ) }
    dend_16 { pt3dadd( -32.6787, -43.766, -21.6212, 0.28 ) }
    dend_16 { pt3dadd( -34.1352, -43.9563, -22.283, 0.28 ) }
    dend_16 { pt3dadd( -36.5859, -44.2531, -23.1125, 0.55 ) }
    dend_16 { pt3dadd( -39.5852, -44.4825, -24.2195, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -42.3575, -44.478, -25.2889, 0.55 ) }
    dend_16 { pt3dadd( -44.492, -44.3169, -26.0722, 0.55 ) }
    dend_16 { pt3dadd( -45.9645, -44.0927, -26.6486, 0.55 ) }
    dend_16 { pt3dadd( -50.302, -43.2518, -28.451, 0.55 ) }
    dend_16 { pt3dadd( -54.8507, -42.092, -30.259, 0.55 ) }
    dend_16 { pt3dadd( -56.7221, -41.5216, -30.9601, 0.28 ) }
    dend_16 { pt3dadd( -58.5049, -41.0037, -31.6569, 0.55 ) }
    dend_16 { pt3dadd( -62.124, -40.166, -33.0458, 0.28 ) }
    dend_16 { pt3dadd( -63.3415, -39.9163, -33.5034, 0.83 ) }
    dend_16 { pt3dadd( -65.5971, -39.4335, -34.2181, 0.28 ) }
    dend_16 { pt3dadd( -67.2004, -39.2078, -34.5458, 0.55 ) }
    dend_16 { pt3dadd( -69.5251, -38.9575, -34.9817, 0.28 ) }
    dend_16 { pt3dadd( -70.4468, -38.8484, -35.1268, 0.55 ) }
    dend_16 { pt3dadd( -72.1441, -38.6808, -35.3123, 0.55 ) }
    dend_16 { pt3dadd( -74.6878, -38.1934, -35.4918, 0.55 ) }
    dend_16 { pt3dadd( -76.3334, -37.7835, -35.5176, 0.28 ) }
    dend_16 { pt3dadd( -77.6394, -37.3031, -35.4327, 0.55 ) }
    dend_16 { pt3dadd( -79.1735, -36.5549, -35.3317, 0.28 ) }
    dend_16 { pt3dadd( -79.4267, -36.412, -35.3225, 0.55 ) }
    dend_16 { pt3dadd( -81.8277, -35.02, -35.622, 0.28 ) }
    dend_16 { pt3dadd( -83.5984, -33.9672, -36.0105, 0.55 ) }
    dend_16 { pt3dadd( -85.979, -32.4193, -36.8123, 0.83 ) }
    dend_16 { pt3dadd( -87.9713, -31.0923, -37.6692, 0.28 ) }
    dend_16 { pt3dadd( -88.4934, -30.7502, -37.9358, 0.55 ) }
    dend_16 { pt3dadd( -92.5312, -28.1672, -40.1786, 0.28 ) }
    dend_16 { pt3dadd( -93.2478, -27.722, -40.6323, 0.55 ) }
    dend_16 { pt3dadd( -95.3755, -26.2779, -42.0807, 0.28 ) }
    dend_16 { pt3dadd( -95.9254, -25.9062, -42.4581, 0.55 ) }
    dend_16 { pt3dadd( -97.3235, -24.9446, -43.3429, 0.28 ) }
    dend_16 { pt3dadd( -98.3054, -24.2567, -43.9147, 0.55 ) }
    dend_16 { pt3dadd( -100.455, -22.7371, -44.9012, 0.28 ) }
    dend_16 { pt3dadd( -101.729, -21.9189, -45.4457, 0.55 ) }
    dend_16 { pt3dadd( -104.437, -20.3345, -46.4825, 0.28 ) }
    dend_16 { pt3dadd( -105.244, -19.9035, -46.7812, 0.55 ) }
    dend_16 { pt3dadd( -106.508, -19.3192, -47.211, 0.28 ) }
    dend_16 { pt3dadd( -107.571, -18.8297, -47.5277, 0.55 ) }
    dend_16 { pt3dadd( -109.762, -17.8475, -48.065, 0.28 ) }
    dend_16 { pt3dadd( -110.42, -17.5666, -48.2073, 0.55 ) }
    dend_16 { pt3dadd( -115.267, -15.4032, -49.0511, 0.28 ) }
    dend_16 { pt3dadd( -116.937, -14.5399, -49.2043, 0.55 ) }
    dend_16 { pt3dadd( -119.879, -12.8739, -49.2913, 0.28 ) }
    dend_16 { pt3dadd( -121.195, -12.0746, -49.2894, 0.55 ) }
    dend_16 { pt3dadd( -124.182, -10.273, -49.1184, 0.28 ) }
    dend_16 { pt3dadd( -125.272, -9.66252, -49.0107, 0.55 ) }
    dend_16 { pt3dadd( -129.193, -7.81773, -48.4255, 0.28 ) }
    dend_16 { pt3dadd( -130.835, -7.25421, -48.1739, 0.55 ) }
    dend_16 { pt3dadd( -133.194, -6.83481, -47.8015, 0.55 ) }
    dend_16 { pt3dadd( -134.643, -6.67012, -47.5417, 0.55 ) }
    dend_16 { pt3dadd( -137.552, -6.42386, -46.792, 0.28 ) }
    dend_16 { pt3dadd( -140.372, -6.2215, -45.8762, 0.28 ) }
    dend_16 { pt3dadd( -142.704, -6.0483, -45.0441, 0.55 ) }
    dend_16 { pt3dadd( -145.457, -5.60045, -43.7016, 0.28 ) }
    dend_16 { pt3dadd( -146.755, -5.20804, -42.8397, 0.55 ) }
    dend_16 { pt3dadd( -149.704, -3.73255, -40.4318, 0.28 ) }
    dend_16 { pt3dadd( -151.058, -2.64291, -38.7685, 0.55 ) }
    dend_16 { pt3dadd( -151.828, -1.77056, -37.4443, 0.28 ) }
    dend_16 { pt3dadd( -152.563, -0.805939, -35.6559, 0.55 ) }
    dend_16 { pt3dadd( -153.394, 0.449849, -33.2266, 0.28 ) }
    dend_16 { pt3dadd( -153.717, 0.889783, -32.3132, 0.55 ) }
    dend_16 { pt3dadd( -155.602, 2.85894, -27.9602, 0.28 ) }
    dend_16 { pt3dadd( -156.249, 3.4763, -26.5043, 0.55 ) }
    dend_16 { pt3dadd( -157.764, 4.82957, -22.9818, 0.28 ) }
    dend_16 { pt3dadd( -158.59, 5.54599, -21.0692, 0.55 ) }
    dend_16 { pt3dadd( -159.271, 6.13279, -19.499, 0.55 ) }
    dend_16 { pt3dadd( -160.105, 6.82454, -17.6585, 0.28 ) }
    dend_16 { pt3dadd( -160.604, 7.18327, -16.8165, 0.55 ) }
    dend_16 { pt3dadd( -162.35, 8.48356, -14.1361, 0.28 ) }
    dend_16 { pt3dadd( -163.236, 9.32491, -12.7022, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -10.6681, -38.9743, -7.25263, 0.55 ) }
    dend_15 { pt3dadd( -10.4566, -39.0785, -8.34971, 0.55 ) }
    dend_15 { pt3dadd( -10.2043, -39.0638, -9.44302, 0.55 ) }
    dend_15 { pt3dadd( -9.81549, -38.9547, -10.7846, 0.55 ) }
    dend_15 { pt3dadd( -9.44709, -38.7807, -11.8595, 0.55 ) }
    dend_15 { pt3dadd( -6.48311, -36.9345, -18.6735, 0.55 ) }
    dend_15 { pt3dadd( -5.81681, -36.3416, -20.2146, 0.55 ) }
    dend_15 { pt3dadd( -4.8584, -35.2978, -22.5102, 0.55 ) }
    dend_15 { pt3dadd( -4.18442, -34.5042, -24.1383, 0.55 ) }
    dend_15 { pt3dadd( -3.49422, -33.641, -25.6992, 0.28 ) }
    dend_15 { pt3dadd( -2.3301, -32.1826, -28.0231, 0.55 ) }
    dend_15 { pt3dadd( -0.434443, -29.9126, -31.3554, 0.28 ) }
    dend_15 { pt3dadd( -0.33075, -29.7727, -31.7002, 0.55 ) }
    dend_15 { pt3dadd( -0.236629, -29.2731, -34.1593, 0.28 ) }
    dend_15 { pt3dadd( -0.457333, -29.0308, -35.8299, 0.55 ) }
    dend_15 { pt3dadd( -0.871388, -28.8929, -37.6239, 0.55 ) }
    dend_15 { pt3dadd( -1.6672, -28.8108, -40.8461, 0.55 ) }
    dend_15 { pt3dadd( -3.21324, -28.6954, -47.1757, 0.55 ) }
    dend_15 { pt3dadd( -4.17762, -28.6642, -51.4459, 0.55 ) }
    dend_15 { pt3dadd( -4.47158, -28.6675, -52.9285, 0.55 ) }
    dend_15 { pt3dadd( -6.16962, -28.6142, -62.7106, 0.55 ) }
    dend_15 { pt3dadd( -6.51605, -28.5628, -65.375, 0.55 ) }
    dend_15 { pt3dadd( -6.59785, -28.536, -66.884, 0.55 ) }
    dend_15 { pt3dadd( -6.48421, -28.5645, -70.4213, 0.55 ) }
    dend_15 { pt3dadd( -5.72703, -29.0629, -78.9116, 0.55 ) }
    dend_15 { pt3dadd( -5.42768, -29.2898, -81.1937, 0.28 ) }
    dend_15 { pt3dadd( -5.16034, -29.4772, -82.4821, 0.55 ) }
    dend_15 { pt3dadd( -4.73005, -29.832, -84.3876, 0.28 ) }
    dend_15 { pt3dadd( -4.49669, -30.0559, -85.16, 0.55 ) }
    dend_15 { pt3dadd( -3.26293, -31.0789, -87.2301, 0.28 ) }
    dend_15 { pt3dadd( -1.80404, -32.4914, -87.9937, 0.55 ) }
    dend_15 { pt3dadd( -0.910546, -33.4942, -88.3907, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( -0.0577129, -34.5986, -88.6465, 0.55 ) }
    dend_15 { pt3dadd( 0.705455, -35.7971, -88.8027, 0.28 ) }
    dend_15 { pt3dadd( 1.02645, -36.4114, -88.8845, 0.55 ) }
    dend_15 { pt3dadd( 1.78626, -38.0194, -89.008, 0.28 ) }
    dend_15 { pt3dadd( 1.95568, -38.4952, -89.1064, 0.55 ) }
    dend_15 { pt3dadd( 2.86686, -41.2155, -89.8142, 0.28 ) }
    dend_15 { pt3dadd( 3.27084, -42.4672, -90.3094, 0.55 ) }
    dend_15 { pt3dadd( 4.13106, -45.1282, -91.6906, 0.28 ) }
    dend_15 { pt3dadd( 4.45246, -46.1037, -92.3195, 0.55 ) }
    dend_15 { pt3dadd( 5.56808, -49.299, -94.6189, 0.28 ) }
    dend_15 { pt3dadd( 5.83333, -50.0742, -95.2123, 0.55 ) }
    dend_15 { pt3dadd( 6.57624, -52.524, -97.1563, 0.28 ) }
    dend_15 { pt3dadd( 6.73179, -53.0998, -97.5569, 0.55 ) }
    dend_15 { pt3dadd( 7.09729, -54.6212, -98.5852, 0.28 ) }
    dend_15 { pt3dadd( 7.28912, -55.4999, -99.2692, 0.55 ) }
    dend_15 { pt3dadd( 7.48434, -56.3597, -100.02, 0.55 ) }
    dend_15 { pt3dadd( 7.87913, -58.0759, -101.503, 0.28 ) }
    dend_15 { pt3dadd( 8.18075, -59.1327, -102.578, 0.55 ) }
    dend_15 { pt3dadd( 9.25071, -61.748, -106.046, 0.28 ) }
    dend_15 { pt3dadd( 9.6759, -62.5872, -107.441, 0.55 ) }
    dend_15 { pt3dadd( 9.99031, -63.1182, -108.393, 0.28 ) }
    dend_15 { pt3dadd( 10.3302, -63.6004, -109.35, 0.55 ) }
    dend_15 { pt3dadd( 11.4453, -64.9448, -112.268, 0.28 ) }
    dend_15 { pt3dadd( 12.3198, -65.992, -114.438, 0.55 ) }
    dend_15 { pt3dadd( 13.9346, -68.009, -117.941, 0.28 ) }
    dend_15 { pt3dadd( 14.4476, -68.6365, -119.04, 0.55 ) }
    dend_15 { pt3dadd( 15.5341, -69.7964, -121.01, 0.28 ) }
    dend_15 { pt3dadd( 15.9257, -70.1794, -121.623, 0.55 ) }
    dend_15 { pt3dadd( 16.6603, -70.8015, -122.459, 0.28 ) }
    dend_15 { pt3dadd( 17.3501, -71.3299, -123.127, 0.55 ) }
    dend_15 { pt3dadd( 19.3543, -72.6523, -124.713, 0.28 ) }
    dend_15 { pt3dadd( 21.6874, -74.0584, -126.488, 0.28 ) }
    dend_15 { pt3dadd( 22.9208, -74.712, -127.295, 0.28 ) }
    dend_15 { pt3dadd( 24.1305, -75.3216, -128.187, 0.55 ) }
    dend_15 { pt3dadd( 25.9043, -76.1157, -129.497, 0.28 ) }
    dend_15 { pt3dadd( 26.7038, -76.4561, -130.061, 0.83 ) }
    dend_15 { pt3dadd( 28.7805, -77.3604, -131.418, 0.28 ) }
    dend_15 { pt3dadd( 29.6533, -77.7728, -132.059, 0.55 ) }
    dend_15 { pt3dadd( 33.3768, -79.7451, -135.072, 0.28 ) }
    dend_15 { pt3dadd( 35.1519, -80.7479, -136.744, 0.28 ) }
    dend_15 { pt3dadd( 36.3915, -81.4709, -138.056, 0.55 ) }
    dend_15 { pt3dadd( 37.0588, -81.9062, -138.917, 0.55 ) }
    dend_15 { pt3dadd( 38.7246, -83.085, -141.38, 0.28 ) }
    dend_15 { pt3dadd( 40.2199, -84.2896, -143.769, 0.55 ) }
    dend_15 { pt3dadd( 41.5737, -85.4544, -145.945, 0.28 ) }
    dend_15 { pt3dadd( 42.7406, -86.5305, -148.004, 0.55 ) }
    dend_15 { pt3dadd( 43.7128, -87.401, -149.697, 0.28 ) }
    dend_15 { pt3dadd( 44.5578, -88.0215, -151.02, 0.55 ) }
    dend_15 { pt3dadd( 46.6963, -89.3443, -154.083, 0.28 ) }
    dend_15 { pt3dadd( 47.8164, -90.0161, -155.577, 0.55 ) }
    dend_15 { pt3dadd( 49.5452, -91.037, -157.742, 0.28 ) }
    dend_15 { pt3dadd( 50.991, -91.8167, -159.473, 0.55 ) }
    dend_15 { pt3dadd( 54.3948, -93.4338, -163.529, 0.28 ) }
    dend_15 { pt3dadd( 55.726, -93.9759, -165.292, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -3.48875, -139.047, 98.4316, 0.55 ) }
    dend_9 { pt3dadd( -3.01284, -146.177, 101.798, 0.55 ) }
    dend_9 { pt3dadd( -1.82676, -153.829, 103.364, 0.55 ) }
    dend_9 { pt3dadd( -1.07068, -161.233, 106.014, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -3.48875, -139.047, 98.4316, 0.55 ) }
    dend_8 { pt3dadd( -2.35801, -145.258, 103.001, 0.55 ) }
    dend_8 { pt3dadd( -2.30184, -150.62, 108.656, 0.55 ) }
    dend_8 { pt3dadd( -2.27229, -154.706, 115.292, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -7.79378, -133.088, 93.9844, 0.55 ) }
    dend_6 { pt3dadd( -7.25409, -141.795, 98.8857, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -7.79378, -133.088, 93.9844, 0.55 ) }
    dend_5 { pt3dadd( -9.02364, -142.058, 99.4013, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 5.63654, -123.001, 4.47145, 0.83 ) }
    dend_25 { pt3dadd( 6.30445, -126.225, 4.901, 0.83 ) }
    dend_25 { pt3dadd( 6.96005, -128.95, 5.47756, 0.83 ) }
    dend_25 { pt3dadd( 7.61172, -131.658, 6.05065, 0.83 ) }
    dend_25 { pt3dadd( 8.23061, -134.23, 6.59491, 0.83 ) }
    dend_25 { pt3dadd( 9.18434, -138.193, 7.43365, 0.83 ) }
    dend_25 { pt3dadd( 10.1312, -142.128, 8.26633, 0.83 ) }
    dend_25 { pt3dadd( 10.9129, -144.744, 9.17571, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 5.63654, -123.001, 4.47145, 0.55 ) }
    dend_24 { pt3dadd( 6.85747, -124.755, 4.3276, 0.55 ) }
    dend_24 { pt3dadd( 7.7764, -126.117, 3.98228, 0.55 ) }
    dend_24 { pt3dadd( 8.40222, -127.121, 3.63161, 0.55 ) }
    dend_24 { pt3dadd( 8.94576, -128.291, 3.08656, 0.83 ) }
    dend_24 { pt3dadd( 9.46189, -129.615, 2.31217, 0.55 ) }
    dend_24 { pt3dadd( 9.96672, -130.911, 1.55472, 0.83 ) }
    dend_24 { pt3dadd( 10.4234, -132.31, 0.608162, 0.55 ) }
    dend_24 { pt3dadd( 10.6806, -133.12, -0.017567, 0.83 ) }
    dend_24 { pt3dadd( 11.3839, -135.733, -2.24144, 0.55 ) }
    dend_24 { pt3dadd( 11.7523, -137.779, -4.10474, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -10.8389, -109.324, 47.8184, 0.55 ) }
    dend_20 { pt3dadd( -14.4007, -116.144, 52.4502, 0.55 ) }
    dend_20 { pt3dadd( -19.1707, -122.096, 57.1925, 0.55 ) }
    dend_20 { pt3dadd( -24.559, -127.202, 62.2481, 0.55 ) }
    dend_20 { pt3dadd( -30.6963, -131.262, 67.3973, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -10.8389, -109.324, 47.8184, 0.55 ) }
    dend_19 { pt3dadd( -13.2047, -116.199, 54.2438, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 10.9129, -144.744, 9.17571, 0.55 ) }
    dend_27 { pt3dadd( 11.0224, -146.723, 9.64757, 0.55 ) }
    dend_27 { pt3dadd( 11.2325, -149.252, 10.3116, 0.55 ) }
    dend_27 { pt3dadd( 11.4314, -151.638, 10.9253, 0.55 ) }
    dend_27 { pt3dadd( 11.5526, -153.334, 11.3363, 0.55 ) }
    dend_27 { pt3dadd( 11.7341, -156.36, 12.024, 0.55 ) }
    dend_27 { pt3dadd( 12.3678, -164.863, 13.7372, 0.55 ) }
    dend_27 { pt3dadd( 12.6493, -167.748, 14.193, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 12.853, -169.781, 14.412, 0.55 ) }
    dend_27 { pt3dadd( 13.0998, -172.101, 14.4757, 0.55 ) }
    dend_27 { pt3dadd( 13.2561, -173.891, 14.3667, 0.55 ) }
    dend_27 { pt3dadd( 13.7412, -178.072, 13.9351, 0.55 ) }
    dend_27 { pt3dadd( 13.9981, -181.246, 13.6065, 0.55 ) }
    dend_27 { pt3dadd( 14.2249, -183.331, 13.4507, 0.55 ) }
    dend_27 { pt3dadd( 14.802, -188.744, 13.3249, 0.55 ) }
    dend_27 { pt3dadd( 15.1717, -192.386, 13.4026, 0.55 ) }
    dend_27 { pt3dadd( 15.679, -197.085, 13.7664, 0.55 ) }
    dend_27 { pt3dadd( 16.3369, -202.426, 14.5872, 0.55 ) }
    dend_27 { pt3dadd( 16.9435, -205.996, 15.35, 0.55 ) }
    dend_27 { pt3dadd( 17.3548, -208.107, 15.8553, 0.55 ) }
    dend_27 { pt3dadd( 17.6977, -210.054, 16.3168, 0.55 ) }
    dend_27 { pt3dadd( 18.1698, -212.516, 16.7839, 0.55 ) }
    dend_27 { pt3dadd( 19.2239, -218.445, 17.5114, 0.55 ) }
    dend_27 { pt3dadd( 19.7066, -220.738, 17.7051, 0.55 ) }
    dend_27 { pt3dadd( 20.1825, -223.29, 17.9055, 0.55 ) }
    dend_27 { pt3dadd( 20.8649, -227.124, 18.1879, 0.55 ) }
    dend_27 { pt3dadd( 21.2532, -230.071, 18.4381, 0.55 ) }
    dend_27 { pt3dadd( 21.4589, -232.869, 18.6457, 0.55 ) }
    dend_27 { pt3dadd( 21.536, -235.537, 18.8484, 0.55 ) }
    dend_27 { pt3dadd( 21.568, -238.14, 19.0857, 0.55 ) }
    dend_27 { pt3dadd( 21.6015, -239.993, 19.2358, 0.55 ) }
    dend_27 { pt3dadd( 21.6717, -243.023, 19.3755, 0.55 ) }
    dend_27 { pt3dadd( 21.6964, -246.655, 19.2671, 0.55 ) }
    dend_27 { pt3dadd( 21.7503, -248.417, 19.0792, 0.55 ) }
    dend_27 { pt3dadd( 21.8112, -249.962, 18.7953, 0.55 ) }
    dend_27 { pt3dadd( 22.0559, -252.874, 18.0799, 0.55 ) }
    dend_27 { pt3dadd( 22.1905, -254.719, 17.5749, 0.55 ) }
    dend_27 { pt3dadd( 22.385, -256.995, 17.0388, 0.55 ) }
    dend_27 { pt3dadd( 22.4634, -258.596, 16.7625, 0.55 ) }
    dend_27 { pt3dadd( 22.5962, -262.762, 16.2115, 0.55 ) }
    dend_27 { pt3dadd( 22.6247, -265.885, 16.0276, 0.55 ) }
    dend_27 { pt3dadd( 22.5987, -270.728, 16.1455, 0.55 ) }
    dend_27 { pt3dadd( 22.6582, -273.858, 16.5161, 0.55 ) }
    dend_27 { pt3dadd( 22.6981, -277.147, 17.0135, 0.28 ) }
    dend_27 { pt3dadd( 22.6828, -278.47, 17.2692, 0.28 ) }
    dend_27 { pt3dadd( 22.6383, -281.686, 18.1829, 0.28 ) }
    dend_27 { pt3dadd( 22.5759, -284.662, 19.2643, 0.28 ) }
    dend_27 { pt3dadd( 22.8664, -288.603, 21.0882, 0.28 ) }
    dend_27 { pt3dadd( 24.6152, -297.431, 22.8922, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 10.9129, -144.744, 9.17571, 0.55 ) }
    dend_26 { pt3dadd( 12.0238, -145.232, 9.92161, 0.55 ) }
    dend_26 { pt3dadd( 14.2266, -146.461, 11.6228, 0.55 ) }
    dend_26 { pt3dadd( 16.0868, -147.662, 13.1746, 0.28 ) }
    dend_26 { pt3dadd( 18.0512, -149.024, 14.9037, 0.55 ) }
    dend_26 { pt3dadd( 19.1524, -149.892, 16.1264, 0.28 ) }
    dend_26 { pt3dadd( 20.9592, -151.453, 18.4593, 0.55 ) }
    dend_26 { pt3dadd( 21.5752, -152.272, 19.7052, 0.28 ) }
    dend_26 { pt3dadd( 21.7647, -152.569, 20.2203, 0.28 ) }
    dend_26 { pt3dadd( 22.0903, -152.997, 21.1207, 0.55 ) }
    dend_26 { pt3dadd( 23.4818, -154.414, 24.4471, 0.28 ) }
    dend_26 { pt3dadd( 24.102, -154.97, 25.8225, 0.55 ) }
    dend_26 { pt3dadd( 26.207, -156.584, 29.6203, 0.28 ) }
    dend_26 { pt3dadd( 27.4299, -157.384, 31.561, 0.28 ) }
    dend_26 { pt3dadd( 29.0318, -158.408, 33.8522, 0.55 ) }
    dend_26 { pt3dadd( 31.5825, -159.992, 36.9807, 0.28 ) }
    dend_26 { pt3dadd( 31.955, -160.202, 37.3575, 0.55 ) }
    dend_26 { pt3dadd( 33.8703, -161.225, 39.0671, 0.28 ) }
    dend_26 { pt3dadd( 34.0556, -161.32, 39.2006, 0.55 ) }
    dend_26 { pt3dadd( 35.6575, -162.422, 40.4261, 0.28 ) }
    dend_26 { pt3dadd( 36.3919, -163.02, 41.0581, 0.55 ) }
    dend_26 { pt3dadd( 42.4116, -167.465, 46.3283, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -30.6963, -131.262, 67.3973, 0.55 ) }
    dend_22 { pt3dadd( -36.7048, -135.869, 75.5639, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -30.6963, -131.262, 67.3973, 0.55 ) }
    dend_21 { pt3dadd( -36.553, -138.819, 70.7114, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 13
    dend_48 nseg = 3
    dend_45 nseg = 7
    dend_42 nseg = 15
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 11
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 7
    dend_52 nseg = 3
    dend_59 nseg = 5
    dend_54 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 11
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_BP_d97748152f_0_0


