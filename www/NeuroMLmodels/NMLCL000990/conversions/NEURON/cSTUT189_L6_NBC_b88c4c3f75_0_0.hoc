// Cell: cSTUT189_L6_NBC_b88c4c3f75_0_0
/*
{
  "id" : "cSTUT189_L6_NBC_b88c4c3f75_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "5.36735, -8.08849, 0.0, 2.03688", "4.94549, -7.33368, 0.0, 3.52963", "4.52363, -6.57887, 0.0, 6.0021", "4.10177, -5.82406, 0.0, 7.56762", "3.67992, -5.06925, 0.0, 9.13193", "3.25806, -4.31444, 0.0, 10.2542", "2.8362, -3.55963, 0.0, 11.222", "2.41434, -2.80482, 0.0, 11.981", "1.99249, -2.05001, 0.0, 12.7132", "1.57063, -1.2952, 0.0, 13.4454", "1.14877, -0.540387, 0.0, 14.1776", "0.726915, 0.214423, 0.0, 14.4912", "0.305057, 0.969233, 0.0, 13.9479", "-0.1168, 1.72404, 0.0, 13.0659", "-0.538657, 2.47885, 0.0, 12.184", "-0.960515, 3.23366, 0.0, 11.2453", "-1.38237, 3.98847, 0.0, 10.0927", "-1.80423, 4.74328, 0.0, 8.93171", "-2.22609, 5.49809, 0.0, 7.05094", "-2.64794, 6.2529, 0.0, 4.33066", "-3.0698, 7.00771, 0.0, 2.48073" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-0.730264, 0.703278, -11.45, 0.92", "-0.730264, 0.703278, -11.45, 0.92", "-3.55035, 2.90887, -12.3666, 0.92", "-5.79107, 4.66135, -13.0949, 1.83", "-7.86694, 6.28489, -13.7697, 0.92", "-9.05293, 7.21246, -14.1551, 0.92", "-11.5439, 9.16062, -14.9648, 0.92", "-12.8933, 10.1762, -15.3961, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "5.04974, -5.72347, -8.55, 0.92", "5.04974, -5.72347, -8.55, 0.92", "7.74498, -8.67683, -8.97465, 0.92", "10.4481, -12.0863, -9.62819, 1.83", "11.9239, -14.0439, -10.0513, 0.92", "12.2756, -14.5648, -10.1777, 0.92", "13.923, -17.6683, -10.9745, 0.92", "14.4685, -19.0185, -11.3672, 0.92", "15.1146, -21.2153, -12.1669, 1.38", "15.9846, -24.0495, -13.3801, 0.46", "17.1917, -27.0007, -14.9032, 1.83", "18.8042, -30.2567, -16.8329, 0.46", "19.5665, -31.4356, -17.7261, 1.38", "20.7931, -33.1809, -19.3392, 0.46", "22.3286, -35.3683, -21.9948, 0.46", "23.6688, -37.0643, -24.7347, 1.38", "23.8759, -37.2552, -25.1503, 1.38", "25.1568, -38.1057, -27.5722, 0.46", "26.211, -38.8907, -29.7217, 0.92", "27.2968, -40.116, -32.3476, 0.46", "27.4588, -40.4429, -32.8675, 0.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "2.71974, -6.86123, -5.05, 0.92", "2.59292, -7.40231, -5.0412, 0.92", "0.908245, -15.0262, -5.08869, 0.92", "0.231961, -18.0614, -5.13685, 1.83", "-1.02211, -23.8451, -5.31866, 0.92", "-1.92074, -28.1031, -5.52317, 0.92", "-2.38422, -30.1658, -5.6485, 1.83", "-3.59934, -35.0158, -6.07697, 0.92", "-3.7508, -35.5455, -6.14512, 0.92", "-4.57192, -38.311, -6.60038, 1.38", "-5.58237, -41.7214, -7.24811, 0.46", "-6.39728, -44.6057, -7.88812, 1.38", "-7.23049, -47.5486, -8.58684, 0.46", "-7.58581, -48.863, -8.92229, 0.46", "-8.62261, -52.8587, -10.0168, 0.92", "-9.33418, -55.6873, -10.8133, 1.83", "-10.098, -59.1892, -11.8506, 0.92", "-10.1797, -59.7138, -12.0125, 0.92", "-10.5925, -63.3073, -13.1607, 0.92", "-10.8557, -65.2279, -13.8261, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.82973, -8.12197, -2.05, 0.46", "7.06899, -8.56235, -2.03987, 0.46", "8.50243, -11.1627, -1.99754, 0.92", "8.69915, -11.5077, -1.98339, 0.92", "9.66543, -13.1653, -1.86515, 0.46", "11.0733, -15.5641, -1.6228, 1.38", "12.6081, -18.0905, -1.33527, 0.46", "14.1872, -20.5833, -1.00319, 0.92", "15.6496, -22.7605, -0.659831, 0.46", "17.7258, -25.7406, -0.121329, 1.83", "19.1489, -27.7154, 0.271754, 0.46", "20.2406, -29.1993, 0.606491, 1.38", "21.9323, -31.4395, 1.16272, 0.46", "23.6414, -33.664, 1.73943, 0.46", "24.742, -35.0824, 2.10069, 1.38", "27.0615, -38.0273, 2.84633, 0.92", "28.1487, -39.4221, 3.19119, 0.92", "28.8935, -40.4437, 3.45378, 2.29", "34.2832, -47.1533, 3.41601, 2.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.12027, -4.36022, -1.17, 0.92", "-4.12027, -4.36022, -1.17, 0.92", "-7.70754, -7.30251, -1.28963, 0.92", "-9.68979, -8.99784, -1.25755, 0.92", "-10.8661, -10.071, -1.16459, 1.38", "-11.316, -10.4955, -1.10484, 1.38", "-16.9099, -15.8517, -0.273486, 0.92", "-19.0107, -17.9083, 0.105143, 0.92", "-20.7237, -19.6303, 0.488228, 1.38", "-23.454, -22.3724, 1.2189, 0.92", "-25.4797, -24.4034, 1.80048, 0.92", "-26.8594, -25.7972, 2.20013, 1.38", "-27.1945, -26.129, 2.30113, 1.38", "-30.4384, -29.4155, 3.16614, 0.92", "-33.0145, -32.1023, 3.72476, 0.92", "-35.1533, -34.4235, 4.07221, 1.38", "-37.5922, -37.1592, 4.4089, 0.92", "-37.9939, -37.6329, 4.45999, 0.92", "-40.0813, -40.162, 4.6735, 1.83", "-44.0193, -45.5535, 4.8947, 0.92", "-46.7793, -49.4776, 4.94056, 0.92", "-47.1302, -49.9946, 4.94006, 0.92", "-48.6273, -52.2184, 4.93763, 1.83", "-49.0685, -52.8851, 4.93685, 1.83", "-54.1404, -60.6289, 4.92582, 0.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.92026, 6.96602, 0.0, 0.92", "-4.27107, 7.50487, 0.0, 0.92", "-4.71337, 8.18422, 0.0, 0.92", "-7.53755, 12.5221, 0.0, 0.92", "-9.59352, 15.6801, 0.0, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-3.0698, 7.00771, 0.0, 0.92", "-10.3878, 20.1015, 0.0, 0.92", "-17.7058, 33.1952, 0.0, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-12.8933, 10.1762, -15.3961, 0.92", "-13.8701, 7.67606, -17.0032, 0.92", "-14.2911, 6.59851, -17.6958, 0.92", "-14.7995, 5.29723, -18.5323, 1.38", "-15.528, 3.43243, -19.7309, 0.46", "-16.1686, 1.79272, -20.7849, 0.46" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-12.8933, 10.1762, -15.3961, 0.46", "-9.7948, 13.2982, -16.2552, 0.46", "-9.51917, 13.6035, -16.3408, 0.46", "-8.32827, 14.9546, -16.7504, 0.92", "-7.99624, 15.3642, -16.8766, 0.92", "-6.06344, 17.7838, -17.7304, 0.92", "-5.65855, 18.3076, -17.9375, 0.92", "-4.74745, 19.6101, -18.5142, 1.38", "-4.00801, 20.6887, -19.003, 0.46", "-2.89801, 22.3929, -19.7892, 1.38", "-1.25205, 24.9981, -21.0505, 0.46", "-0.190088, 26.8692, -21.9682, 0.46", "0.05398, 27.3051, -22.1811, 0.46", "1.00713, 29.1137, -23.0528, 0.92", "1.17502, 29.474, -23.2197, 0.92", "2.06411, 31.6012, -24.1602, 0.46", "3.27411, 34.9799, -25.5262, 0.46", "3.80633, 36.6317, -26.1569, 1.38", "3.92601, 37.0195, -26.3036, 1.38", "4.64289, 39.5737, -27.236, 0.46", "5.00382, 41.0857, -27.7643, 0.92", "5.09726, 41.5938, -27.9348, 0.92", "5.51289, 44.2015, -28.8187, 0.46", "5.57271, 44.606, -28.9565, 0.46", "5.85345, 46.1675, -29.5381, 1.38", "6.48663, 49.3314, -30.7917, 0.46", "7.00431, 51.8679, -31.8477, 0.46", "7.31754, 53.3202, -32.5205, 0.92", "7.42401, 53.7948, -32.763, 0.92", "8.01231, 56.0771, -34.0633, 0.46", "8.15633, 56.5132, -34.3523, 0.46", "8.36429, 57.0313, -34.7508, 0.92", "8.84352, 58.1228, -35.7188, 0.46", "9.03588, 58.5942, -36.187, 0.46", "9.54484, 60.111, -37.6684, 0.46", "9.63297, 60.521, -38.0109, 0.46", "9.76811, 61.3215, -38.591, 0.92", "9.84573, 61.8722, -38.9828, 0.92", "10.0198, 64.6667, -40.767, 0.46", "10.0129, 65.2442, -41.1499, 0.46", "9.825, 68.0912, -43.0391, 0.46", "9.71793, 69.4761, -44.0022, 0.92", "9.54179, 71.489, -45.4272, 0.46", "9.35925, 73.4047, -46.8061, 0.92", "9.10236, 75.9766, -48.6762, 0.46", "9.08197, 76.3937, -49.0194, 0.46", "9.08405, 77.6416, -50.1727, 0.46", "9.16059, 78.1422, -50.6339, 0.46", "9.62457, 79.7038, -51.8403, 0.46", "9.95753, 80.5553, -52.4414, 0.92", "10.9758, 83.021, -53.9274, 0.46", "11.1566, 83.4613, -54.1889, 0.46", "12.718, 87.0649, -56.3105, 0.46", "14.2509, 90.5742, -58.3808, 0.46", "14.4416, 91.0156, -58.6332, 0.46", "15.032, 92.4023, -59.4121, 0.92", "16.4901, 95.8968, -61.2727, 0.46", "17.4295, 98.0876, -62.4968, 0.46", "17.5858, 98.4312, -62.704, 0.46", "18.4662, 100.163, -63.8041, 0.46", "18.6977, 100.578, -64.0664, 0.46", "19.218, 101.466, -64.6057, 0.92", "19.4694, 101.89, -64.833, 0.92", "21.268, 104.952, -66.4546, 0.46", "21.5677, 105.49, -66.7699, 0.92", "22.8826, 108.009, -68.3644, 0.46", "23.1486, 108.545, -68.7156, 0.46", "23.3922, 109.072, -69.0905, 0.92", "23.5649, 109.482, -69.4002, 0.92", "24.6191, 112.021, -71.5067, 0.46", "24.7832, 112.413, -71.8413, 0.46", "25.1804, 113.246, -72.5501, 0.92", "26.0282, 114.846, -73.9219, 0.46", "26.201, 115.146, -74.1762, 0.46", "27.529, 117.124, -75.8762, 0.46", "27.7983, 117.488, -76.1722, 0.46", "29.2945, 119.635, -77.7825, 0.46", "29.4943, 119.95, -77.996, 0.46", "29.768, 120.489, -78.3318, 0.92", "30.1538, 121.423, -78.9032, 0.92", "31.1212, 124.793, -80.8421, 0.46", "31.5539, 126.684, -81.9087, 0.46", "31.6495, 127.287, -82.2388, 0.46", "32.0981, 130.651, -84.0494, 0.46", "32.145, 131.029, -84.2503, 0.46", "32.2703, 132.07, -84.7904, 0.92", "32.3265, 132.542, -85.0517, 0.92", "33.1706, 137.903, -88.2458, 0.46", "33.2476, 138.264, -88.4671, 0.46", "33.4891, 139.107, -88.99, 0.92", "33.6444, 139.554, -89.2748, 0.92", "34.7375, 142.262, -91.0816, 0.46", "36.3499, 145.803, -93.4624, 0.46", "36.6253, 146.33, -93.815, 0.92", "38.2722, 149.406, -95.8595, 0.46", "38.8685, 150.46, -96.541, 0.92", "39.4079, 151.349, -97.0948, 0.92", "41.6548, 154.681, -99.0332, 0.46", "42.2569, 155.531, -99.5546, 0.92", "43.5197, 157.338, -100.702, 0.46", "45.105, 159.673, -102.246, 0.46", "45.357, 160.072, -102.513, 0.46", "45.9553, 161.128, -103.203, 0.92", "47.1487, 163.387, -104.691, 0.46", "47.3484, 163.812, -104.963, 0.46", "48.6774, 167.131, -106.986, 0.46", "48.8667, 167.702, -107.334, 0.46", "49.5826, 170.038, -108.725, 0.46", "49.7011, 170.501, -108.982, 0.46", "49.8106, 170.986, -109.204, 0.92", "49.8866, 171.374, -109.375, 0.92" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "27.4588, -40.4429, -32.8675, 0.46", "30.2599, -42.9283, -34.6185, 0.46", "31.899, -44.3617, -35.6605, 1.38", "32.2147, -44.7196, -35.8728, 1.38", "34.4169, -47.6937, -37.3728, 0.46", "34.6963, -48.0934, -37.5636, 0.46", "36.8946, -51.2376, -39.0653, 1.38", "37.217, -51.7638, -39.3029, 1.38", "39.7987, -56.4522, -41.1367, 0.46", "40.7032, -58.1996, -41.7781, 0.46", "40.9409, -58.7911, -41.9637, 0.46" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "27.4588, -40.4429, -32.8675, 0.92", "24.6864, -41.0662, -34.5914, 0.92", "24.0648, -41.1604, -34.9775, 0.92", "21.6967, -41.4431, -36.4197, 0.46", "20.1154, -41.5283, -37.4486, 0.92", "16.2163, -41.5938, -40.0813, 0.46", "14.2737, -41.5511, -41.5588, 0.92", "12.1299, -41.3494, -43.3844, 0.46", "11.7422, -41.293, -43.8188, 0.46", "10.5285, -40.8195, -46.0138, 0.46", "10.5239, -40.8069, -46.0496, 0.46", "10.9709, -39.6238, -48.8322, 0.46", "10.9799, -39.6096, -48.8666, 0.46", "12.2217, -38.441, -52.202, 0.46", "12.562, -38.1698, -53.0409, 0.46", "14.1431, -37.4111, -56.9253, 0.46", "15.514, -36.9299, -60.5226, 0.46", "15.5255, -36.9267, -60.5588, 0.46", "16.6951, -36.6923, -64.6802, 0.46", "16.8109, -36.6789, -65.2533, 0.46", "17.8868, -36.6969, -72.5923, 0.46", "17.9255, -36.6842, -73.163, 0.46", "17.9546, -36.5082, -75.7437, 0.46", "17.9541, -36.5047, -75.7689, 0.46", "17.658, -35.3631, -80.5336, 0.46", "17.6239, -35.1774, -81.0883, 0.46", "17.3364, -33.4445, -83.8046, 0.46", "17.3305, -32.0486, -85.8632, 0.46", "17.3367, -32.025, -85.893, 0.46", "17.8093, -30.8436, -87.1096, 0.92" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-10.8557, -65.2279, -13.8261, 0.46", "-12.7789, -70.5671, -12.8031, 0.46", "-12.9665, -71.067, -12.6961, 0.92", "-13.1513, -71.571, -12.6026, 0.92", "-14.2504, -74.7623, -12.08, 0.92", "-15.2685, -78.0801, -11.6863, 0.46", "-15.922, -80.3902, -11.4653, 0.92", "-16.093, -81.0526, -11.4106, 0.92", "-17.4184, -86.4008, -11.13, 0.46", "-17.9222, -88.4964, -11.0782, 0.92", "-19.0332, -93.2787, -11.0704, 0.46", "-19.387, -94.8493, -11.0946, 0.92", "-19.4797, -95.2647, -11.1036, 0.92", "-20.4136, -99.5537, -11.1763, 0.46", "-20.5639, -100.22, -11.1811, 0.92", "-21.6643, -104.579, -11.1423, 0.46", "-21.8133, -105.094, -11.1156, 1.38", "-21.9658, -105.607, -11.0824, 1.38" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-10.8557, -65.2279, -13.8261, 0.46", "-10.3461, -71.6013, -14.7474, 0.46", "-9.95173, -75.532, -15.3333, 0.46", "-9.76754, -77.1823, -15.5867, 1.38", "-9.71616, -77.7923, -15.6746, 1.38", "-9.54984, -83.7686, -16.4729, 0.46", "-9.55451, -84.3808, -16.5611, 0.46", "-9.69574, -86.9145, -16.9389, 1.38", "-9.78666, -87.6912, -17.0696, 1.38", "-10.45, -91.6495, -17.8811, 0.92", "-11.0787, -94.4984, -18.5584, 0.92", "-11.6609, -96.3778, -19.0799, 0.92", "-12.3204, -98.7085, -19.7484, 1.38", "-12.4725, -99.4407, -19.9632, 1.38", "-12.7775, -102.639, -20.9215, 0.46", "-12.6308, -105.939, -21.9067, 0.46", "-12.5445, -106.687, -22.1057, 0.46", "-12.184, -109.057, -22.6431, 1.38", "-11.3811, -113.35, -23.5371, 0.46", "-11.0138, -115.317, -23.9155, 1.38", "-10.1835, -119.976, -24.7053, 0.46", "-9.37646, -124.626, -25.4416, 0.46", "-8.90104, -127.939, -25.961, 1.38", "-8.84155, -128.533, -26.0563, 1.38", "-8.75126, -132.47, -26.7239, 0.46", "-8.83593, -135.619, -27.3017, 0.92", "-8.88179, -136.382, -27.4533, 0.92", "-9.24984, -141.17, -28.465, 0.46", "-9.41068, -142.944, -28.8599, 1.38", "-9.85861, -149.273, -30.2865, 0.46", "-9.9826, -151.627, -30.8267, 1.38", "-10.1538, -157.837, -32.2628, 0.46", "-10.2126, -160.982, -32.9791, 1.38", "-10.2183, -161.744, -33.1428, 1.38", "-10.2374, -167.351, -34.2107, 0.46", "-10.2472, -171.357, -34.886, 0.46", "-10.2741, -174.047, -35.2876, 1.38", "-10.2918, -175.027, -35.4184, 1.38", "-10.4908, -181.264, -36.1835, 0.46", "-10.6759, -186.845, -36.8079, 0.46", "-10.8411, -190.76, -37.198, 0.92", "-10.9793, -194.73, -37.4974, 1.38", "-11.1123, -197.892, -37.6884, 0.46", "-11.1298, -198.51, -37.7231, 0.46", "-11.1468, -201.879, -37.9511, 0.92", "-11.138, -202.668, -38.035, 0.92", "-11.2052, -206.525, -38.6028, 0.46", "-11.2545, -207.505, -38.7789, 0.46", "-11.5175, -211.455, -39.6127, 0.92", "-11.7803, -214.831, -40.4114, 1.38", "-12.2494, -219.516, -41.6305, 0.46", "-12.6227, -223.484, -42.6836, 0.46", "-12.7097, -224.437, -42.9588, 0.46", "-12.9074, -226.836, -43.6138, 0.46", "-12.9752, -227.586, -43.8104, 0.46", "-13.2221, -229.87, -44.3085, 1.38", "-13.7698, -235.31, -45.3664, 0.46", "-13.8508, -236.075, -45.4946, 0.46", "-14.1133, -238.422, -45.8645, 0.92", "-14.2071, -239.192, -45.9506, 0.92", "-15.286, -247.061, -46.6421, 0.46", "-15.3964, -247.832, -46.6821, 0.46", "-15.8969, -250.981, -46.8242, 1.38", "-16.0024, -251.766, -46.8709, 1.38", "-16.6983, -257.271, -47.2371, 0.46", "-16.7523, -257.871, -47.296, 0.46", "-16.8151, -260.319, -47.6406, 0.92", "-16.7755, -264.803, -48.4804, 0.46", "-16.72, -266.852, -48.9728, 1.38", "-16.6908, -267.436, -49.1283, 1.38", "-16.3292, -272.861, -50.7929, 0.46", "-16.1666, -274.916, -51.4346, 1.38", "-15.8433, -278.863, -52.6932, 0.46", "-15.4838, -282.87, -53.8364, 0.46", "-15.3129, -284.79, -54.3408, 1.38", "-15.2584, -285.387, -54.4891, 1.38", "-14.8678, -289.511, -55.3857, 0.46", "-14.6283, -291.901, -55.8463, 1.38", "-13.8629, -298.085, -56.8738, 0.46", "-13.4187, -301.439, -57.2725, 0.46", "-13.3552, -302.052, -57.3233, 0.46", "-13.0098, -306.131, -57.5016, 0.92", "-12.8295, -309.465, -57.5174, 0.46", "-12.7568, -311.871, -57.4783, 0.92", "-12.6994, -315.526, -57.3944, 0.46", "-12.6802, -319.635, -57.3663, 0.46", "-12.6962, -323.535, -57.481, 0.92", "-12.7922, -328.239, -57.7787, 0.46", "-12.848, -329.789, -57.9466, 1.38", "-12.9776, -333.901, -58.5696, 0.46", "-13.0006, -337.167, -59.2302, 0.92", "-12.9343, -344.207, -60.8493, 0.46", "-12.8902, -348.056, -61.8043, 0.92", "-12.7936, -351.344, -62.5945, 0.46", "-12.6939, -353.266, -63.0347, 0.92", "-12.3344, -358.973, -64.2689, 0.46", "-12.274, -359.578, -64.3787, 0.46", "-11.9582, -361.896, -64.6308, 0.92", "-10.3985, -372.155, -65.2735, 0.46", "-10.0689, -374.174, -65.3158, 0.92", "-9.97085, -374.785, -65.3183, 0.92", "-8.57061, -383.474, -65.333, 0.46", "-7.49701, -390.154, -65.3957, 0.46", "-7.37921, -390.924, -65.4167, 0.46", "-7.05433, -393.323, -65.5126, 1.38", "-6.2454, -399.704, -65.9225, 0.46", "-5.4568, -406.17, -66.5197, 0.46", "-5.19594, -408.483, -66.8645, 1.38", "-4.56209, -414.007, -68.0515, 0.46", "-4.48785, -414.591, -68.1878, 0.46", "-4.05225, -417.881, -69.0448, 0.92", "-3.95442, -418.464, -69.2216, 0.92", "-3.04848, -422.545, -70.55, 0.46", "-2.46663, -424.554, -71.2699, 0.46", "-1.36621, -427.584, -72.3989, 0.92", "-1.14828, -428.122, -72.6025, 0.92", "0.072258, -431.045, -73.7332, 0.46", "0.938485, -433.144, -74.5275, 0.92", "2.14745, -436.144, -75.6569, 0.46", "2.81396, -437.944, -76.2658, 0.92", "3.05703, -438.648, -76.4861, 0.92", "4.5872, -443.271, -77.8386, 0.46", "5.47096, -446.383, -78.6566, 0.92", "5.70196, -447.325, -78.8816, 0.92", "6.85771, -452.893, -80.0338, 0.46", "7.15811, -454.528, -80.3437, 0.92", "7.29285, -455.298, -80.4732, 0.92", "7.97663, -459.264, -80.9909, 0.46", "8.3764, -461.563, -81.283, 0.92", "8.53747, -462.33, -81.3984, 0.92", "9.68524, -466.945, -82.1395, 0.46", "9.92364, -467.675, -82.2633, 0.46", "10.7479, -469.925, -82.6519, 0.92", "12.4353, -473.711, -83.3889, 0.92", "14.5926, -477.959, -84.3087, 0.46", "16.2671, -481.1, -85.0017, 0.92", "19.0327, -485.722, -86.0841, 0.46", "19.3554, -486.229, -86.2096, 0.46", "20.957, -488.499, -86.8239, 0.92", "21.437, -489.08, -86.9883, 0.92" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "34.2832, -47.1533, 3.41601, 0.92", "38.9379, -54.5277, 4.25441, 0.92", "44.763, -60.8951, 5.52153, 0.92" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "34.2832, -47.1533, 3.41601, 0.46", "40.4552, -54.5962, 4.52183, 0.92", "47.0529, -61.6975, 5.20454, 0.92", "53.8213, -68.5459, 6.47614, 0.92", "60.8528, -75.2264, 6.5036, 0.92", "67.5904, -82.0831, 7.89614, 0.92", "74.2494, -88.6407, 10.535, 0.92", "81.7187, -93.7831, 13.8978, 0.92", "89.908, -98.4562, 15.9666, 0.92", "97.6011, -103.591, 18.7833, 0.92", "103.775, -110.866, 20.6968, 0.92", "110.86, -117.37, 21.9636, 0.92", "118.253, -123.512, 23.1853, 0.92", "125.149, -129.747, 25.9598, 0.92", "131.518, -136.206, 29.4322, 0.92", "137.621, -142.471, 33.6533, 0.92", "143.378, -148.925, 38.0884, 0.92", "148.925, -155.416, 42.7373, 0.92", "155.04, -161.242, 47.5086, 0.92", "159.494, -167.367, 53.5983, 0.92", "164.661, -174.23, 58.1768, 0.92", "169.564, -181.246, 62.8274, 0.92", "175.621, -188.074, 66.1853, 0.92", "181.024, -195.705, 68.9538, 0.92", "185.977, -203.621, 71.8036, 0.92", "190.287, -212.088, 74.1281, 0.92", "194.074, -220.649, 76.995, 0.92", "199.033, -228.368, 80.3185, 0.92", "203.646, -236.413, 83.3922, 0.92", "208.848, -244.103, 86.3881, 0.92", "214.096, -251.149, 90.5897, 0.92", "217.465, -259.845, 93.5915, 0.92", "219.992, -268.37, 97.7071, 0.92", "220.394, -277.501, 101.301, 0.92" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-54.1404, -60.6289, 4.92582, 0.46", "-53.8253, -64.0598, 5.56751, 0.46", "-53.7215, -65.19, 5.7789, 0.92", "-53.6696, -65.7552, 5.8846, 0.92", "-53.4568, -68.0714, 6.31779, 0.46", "-53.4156, -68.5195, 6.40162, 0.46", "-53.3038, -69.7374, 6.62939, 0.92", "-51.0455, -79.3168, 8.02462, 0.92" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-54.1404, -60.6289, 4.92582, 0.46", "-56.2002, -62.4338, 4.69091, 0.46", "-56.5353, -62.8022, 4.65929, 0.46", "-57.7669, -64.3194, 4.68479, 0.92", "-58.1548, -64.8161, 4.71659, 0.92", "-60.2739, -67.6659, 4.9094, 0.46", "-60.753, -68.3103, 4.953, 1.38", "-63.8927, -72.6744, 5.30443, 0.46", "-67.3053, -77.5517, 5.74857, 0.46", "-68.9761, -80.0143, 6.00275, 0.46", "-71.0868, -83.2048, 6.36598, 1.38", "-76.9652, -92.0995, 8.70571, 1.38" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-9.59352, 15.6801, 0.0, 0.92", "-12.2411, 18.3227, 1.39775, 0.92", "-14.6246, 20.7018, 2.6561, 0.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-9.59352, 15.6801, 0.0, 0.46", "-15.3217, 13.7899, -0.018894, 0.46", "-17.3, 13.1371, -0.0254195, 1.38", "-22.4703, 11.431, -0.0424734, 0.46", "-29.3394, 9.16437, -0.0651308, 0.46", "-30.7725, 8.69146, -0.069858, 1.38", "-31.5383, 8.43876, -0.072384, 1.38", "-44.2726, 2.81743, -0.410063, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-17.7058, 33.1952, 0.0, 0.92", "-25.0238, 46.289, 0.0, 0.92", "-32.3418, 59.3828, 0.0, 0.92" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-16.1686, 1.79272, -20.7849, 0.46", "-16.8877, 4.7197, -21.8541, 0.46", "-17.4152, 6.23346, -22.4926, 1.38", "-17.8125, 7.41984, -23.0453, 0.46", "-18.2273, 8.61182, -23.6322, 0.92", "-18.677, 9.88781, -24.3016, 0.46", "-18.8388, 10.3443, -24.5485, 0.46", "-19.5024, 11.9994, -25.5365, 0.46", "-20.2124, 13.9475, -26.737, 0.46", "-20.3455, 14.3032, -26.9405, 0.46", "-21.2725, 16.6558, -28.2425, 0.92", "-21.2793, 16.6716, -28.25, 0.92", "-21.9962, 18.3136, -28.9052, 0.46", "-22.7396, 20.0655, -29.4621, 0.46", "-24.158, 23.2073, -30.2614, 0.92", "-24.3343, 23.5944, -30.3449, 0.92", "-25.7114, 26.7027, -30.836, 0.46", "-26.3865, 28.2498, -31.0337, 0.92", "-27.2998, 30.438, -31.257, 0.46", "-28.1034, 32.5102, -31.4477, 0.92", "-28.2477, 32.9177, -31.488, 0.92", "-29.3256, 36.1022, -31.8047, 0.46", "-29.5424, 36.7643, -31.875, 0.92", "-30.2772, 39.1217, -32.1644, 0.46", "-30.8353, 40.9216, -32.3947, 0.92" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-16.1686, 1.79272, -20.7849, 0.46", "-15.0567, 0.304, -21.1437, 0.46", "-13.4206, -1.82365, -21.738, 0.46", "-12.8874, -2.54868, -21.9483, 0.46", "-11.4393, -4.48892, -22.5146, 1.38", "-9.97456, -6.32756, -23.1419, 0.46", "-8.79813, -7.6655, -23.6297, 0.46", "-8.27071, -8.13469, -23.8275, 0.46", "-7.17212, -8.9877, -24.2833, 1.38", "-6.72147, -9.3066, -24.4603, 1.38", "-4.87855, -10.5339, -25.2459, 0.46", "-3.97292, -11.119, -25.634, 1.38", "-0.680775, -13.4182, -27.0483, 0.46", "0.861755, -14.4877, -27.7663, 0.46", "2.07293, -15.2937, -28.355, 1.38", "4.20529, -16.7715, -29.4306, 0.46", "4.23349, -16.7919, -29.4453, 0.46", "5.86107, -18.0592, -30.3971, 0.92", "7.78848, -19.6269, -31.688, 0.46", "9.44884, -20.9658, -32.7589, 0.46" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "40.9409, -58.7911, -41.9637, 0.46", "40.2349, -60.9263, -41.5989, 0.46", "39.8008, -62.5517, -41.2816, 0.92", "38.5646, -67.8169, -40.1048, 0.46", "38.2686, -69.2048, -39.7834, 0.92", "37.4788, -72.907, -38.9259, 0.46", "37.2028, -74.2012, -38.6262, 0.92", "36.6555, -77.1897, -37.8895, 0.46", "36.1265, -80.7356, -36.9399, 0.46", "35.9817, -82.0132, -36.546, 0.92" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "40.9409, -58.7911, -41.9637, 0.46", "42.4954, -59.9376, -42.9433, 0.46", "44.9464, -61.871, -44.6203, 0.46", "46.4834, -63.0937, -45.7093, 1.38", "48.5605, -64.7152, -47.1778, 0.46", "49.134, -65.1473, -47.5801, 0.92", "50.8104, -66.4025, -48.7626, 0.46", "52.1506, -67.4194, -49.7208, 0.92", "53.288, -68.3351, -50.5738, 0.46", "54.3567, -69.1879, -51.3915, 1.38", "56.3411, -70.7393, -52.8628, 0.46", "56.6626, -70.9861, -53.0935, 0.46", "58.6663, -72.5652, -54.4916, 1.38", "58.9623, -72.8433, -54.7017, 1.38", "61.4739, -75.4872, -56.5876, 0.46", "62.407, -76.5895, -57.326, 1.38", "63.9001, -78.4697, -58.579, 0.46", "64.6489, -79.4477, -59.2257, 1.38", "66.794, -82.3557, -61.1032, 0.46", "67.6451, -83.4588, -61.8304, 1.38", "69.7291, -86.1175, -63.6657, 0.46", "70.6959, -87.3595, -64.5421, 1.38", "71.8492, -88.8562, -65.5683, 0.46", "72.4519, -89.6046, -66.1116, 1.38", "74.5281, -92.0651, -67.9355, 0.46", "75.3335, -93.0486, -68.6485, 0.46", "75.5868, -93.3664, -68.8812, 0.46", "76.7686, -94.9475, -69.9802, 0.92", "77.9549, -96.6175, -71.168, 0.46", "79.0706, -98.2703, -72.3079, 0.92", "80.1025, -99.8662, -73.3505, 0.46", "80.3399, -100.213, -73.5591, 0.46", "82.043, -102.628, -74.9673, 0.92", "82.4471, -103.19, -75.2744, 0.92", "84.3954, -105.861, -76.5413, 0.46", "84.4071, -105.876, -76.548, 0.46", "85.7235, -107.592, -77.2228, 0.92", "87.1029, -109.379, -77.9444, 0.46", "87.9829, -110.508, -78.3954, 0.92", "88.8202, -111.608, -78.8276, 0.46", "90.1073, -113.293, -79.5068, 0.92", "91.8951, -115.624, -80.4839, 0.46", "93.4097, -117.577, -81.3123, 0.46", "94.0733, -118.401, -81.6551, 0.92", "94.5305, -118.951, -81.893, 0.92", "96.0133, -120.637, -82.591, 0.46", "96.3102, -120.975, -82.7259, 0.46", "97.774, -122.61, -83.3097, 0.92", "98.1536, -123.055, -83.4521, 0.92", "100.336, -125.733, -84.3078, 0.46", "101.459, -127.129, -84.7515, 0.92", "101.726, -127.5, -84.8642, 0.92", "103.766, -130.47, -85.7444, 0.46", "104.819, -132.129, -86.2274, 0.46", "105.601, -133.494, -86.5903, 0.92", "105.61, -133.512, -86.5946, 0.92", "107.274, -137.075, -87.4173, 0.46", "107.891, -138.426, -87.724, 0.92", "108.066, -138.845, -87.8142, 0.92", "109.816, -143.118, -88.7048, 0.46", "109.992, -143.547, -88.7979, 0.46", "110.681, -145.226, -89.163, 0.92", "111.289, -146.812, -89.581, 0.46", "111.453, -147.238, -89.7047, 0.46", "112.317, -149.247, -90.3679, 0.92", "113.824, -152.351, -91.4945, 0.46", "114.923, -154.391, -92.2637, 0.92", "116.238, -156.742, -93.1381, 0.46", "117.315, -158.638, -93.8019, 0.92", "119.083, -161.714, -94.7969, 0.46", "119.822, -163.009, -95.1663, 0.92", "121.646, -166.132, -95.8366, 0.46", "122.846, -168.221, -96.1557, 0.46", "123.443, -169.355, -96.23, 0.46", "124.565, -171.673, -96.2923, 0.46", "125.626, -173.999, -96.2713, 0.92", "126.517, -175.946, -96.2797, 0.46", "127.292, -177.557, -96.3338, 0.92", "130.851, -184.388, -96.8533, 0.46", "131.945, -186.366, -97.1184, 0.92", "132.241, -186.872, -97.2173, 0.92", "133.818, -189.435, -97.864, 0.46", "134.777, -190.985, -98.3035, 0.46", "135.359, -191.894, -98.583, 0.92", "136.553, -193.785, -99.1691, 0.46", "137.207, -194.844, -99.4528, 0.92", "140.287, -199.985, -100.62, 0.46", "141.516, -202.046, -100.988, 0.92", "141.82, -202.549, -101.077, 0.92", "143.926, -205.982, -101.713, 0.46", "144.753, -207.25, -101.969, 0.92", "146.685, -210.04, -102.598, 0.46", "147.739, -211.518, -102.952, 0.92", "149.992, -214.602, -103.671, 0.46", "151.152, -216.204, -104.019, 0.92", "153.16, -218.968, -104.613, 0.46", "154.466, -220.797, -104.991, 0.92", "157.137, -224.486, -105.69, 0.46", "158.621, -226.57, -106.054, 0.92", "160.694, -229.439, -106.439, 0.46" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "21.437, -489.08, -86.9883, 0.46", "22.3343, -489.407, -87.3366, 0.46", "22.5916, -489.514, -87.4362, 0.46", "24.8424, -490.898, -88.3263, 0.46", "25.1281, -491.117, -88.4412, 0.92", "26.3909, -492.142, -88.9527, 0.46", "26.8579, -492.546, -89.1297, 0.92", "27.0583, -492.754, -89.2046, 0.92", "28.3686, -494.299, -89.6829, 0.46", "29.1537, -495.38, -89.9627, 0.46", "29.3324, -495.612, -90.0269, 0.46", "30.4236, -496.824, -90.4327, 0.92", "30.587, -496.979, -90.5053, 0.92", "31.8585, -498.047, -91.1338, 0.46", "32.6874, -498.708, -91.6568, 0.92", "32.8867, -498.869, -91.8075, 0.92", "33.8719, -499.774, -92.7404, 0.46", "34.5984, -500.482, -93.6224, 0.46", "34.6084, -500.494, -93.6361, 0.46", "35.5282, -501.716, -95.0453, 0.46", "35.6559, -501.903, -95.2398, 0.46", "36.1838, -502.751, -95.915, 0.46", "36.3284, -502.976, -96.0503, 0.46", "37.1039, -503.897, -96.5213, 0.92", "38.2366, -505.01, -97.0868, 0.46", "38.4151, -505.145, -97.1623, 0.92", "39.8187, -506.162, -97.7238, 0.46", "40.7835, -506.802, -98.0757, 0.46", "42.5704, -507.951, -98.7351, 0.46", "42.884, -508.129, -98.8538, 0.46", "44.4756, -509.012, -99.4456, 0.46" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "21.437, -489.08, -86.9883, 0.46", "22.1121, -493.11, -87.6148, 0.46", "23.4749, -500.606, -88.7805, 0.46", "23.672, -501.629, -88.9363, 0.92", "23.9807, -503.246, -89.1758, 0.92", "25.2596, -511.511, -90.2997, 0.46", "25.5738, -514.056, -90.6227, 0.92", "26.0856, -519.088, -91.2014, 0.46", "26.2737, -521.655, -91.4638, 0.92", "26.3078, -522.311, -91.5279, 0.92", "26.4509, -530.817, -92.3577, 0.46", "26.3181, -534.255, -92.6618, 0.46", "26.2448, -535.081, -92.7349, 0.46", "25.8615, -538.439, -93.0538, 0.92", "25.7717, -539.263, -93.1323, 0.92", "25.1305, -546.077, -93.8043, 0.46", "25.0715, -546.73, -93.8753, 0.46", "24.3545, -554.34, -94.7372, 0.46", "24.2663, -555.161, -94.8343, 0.46", "23.5115, -560.907, -95.5291, 0.92", "23.3946, -561.726, -95.6138, 0.92", "22.5779, -566.901, -96.0724, 0.46", "22.4085, -567.713, -96.1245, 0.46", "21.5288, -571.144, -96.2168, 0.46", "21.3696, -571.783, -96.2298, 0.46", "20.0331, -576.78, -96.3009, 0.92", "19.8203, -577.583, -96.3049, 0.92", "17.8877, -584.859, -96.2228, 0.46", "15.322, -594.761, -96.0914, 0.46", "14.6863, -597.28, -96.0486, 0.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "44.763, -60.8951, 5.52153, 0.92", "49.7645, -71.0235, 8.08653, 0.92", "55.9589, -80.0765, 11.6676, 0.92", "61.0441, -90.3097, 13.6023, 0.92", "66.2614, -100.671, 13.569, 0.92", "72.0829, -110.571, 12.0411, 0.92", "77.9363, -120.565, 12.3295, 0.92", "83.425, -130.774, 12.0167, 0.92", "88.4147, -141.14, 10.4874, 0.92", "93.1697, -151.153, 7.0813, 0.92", "99.492, -160.011, 3.20978, 0.92", "104.028, -169.091, -2.33072, 0.92", "109.159, -178.87, -5.8362, 0.92", "113.042, -189.619, -7.9555, 0.92", "117.897, -200.162, -8.18606, 0.92", "123.084, -210.46, -6.96617, 0.92", "128.056, -220.913, -7.82504, 0.92", "131.524, -232.003, -8.41345, 0.92", "137.462, -241.682, -10.6779, 0.92", "142.848, -251.792, -12.481, 0.92", "148.397, -261.967, -12.7904, 0.92", "154.081, -272.035, -12.0343, 0.92" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "44.763, -60.8951, 5.52153, 0.46", "51.6614, -64.3438, 4.7416, 0.92", "58.8487, -67.2099, 4.64402, 0.92", "66.3734, -68.8369, 4.06204, 0.92", "73.6075, -71.5679, 4.27509, 0.92", "81.0981, -73.4418, 4.40878, 0.92", "88.6832, -74.821, 4.74936, 0.92", "96.2245, -75.9919, 3.60843, 0.92", "103.871, -76.1162, 2.62256, 0.92", "111.255, -76.0622, 0.402812, 0.92", "118.547, -75.5636, -2.04865, 0.92", "125.699, -75.8091, -4.92323, 0.92", "132.573, -75.4451, -8.39555, 0.92", "139.485, -75.25, -11.806, 0.92", "146.006, -76.4359, -15.7633, 0.92", "152.15, -78.6608, -19.9007, 0.92", "158.483, -80.792, -23.7921, 0.92", "165.86, -81.443, -25.9485, 0.92", "172.926, -81.9064, -29.0033, 0.92", "180.484, -82.5719, -30.3903, 0.92", "188.075, -83.5907, -31.319, 0.92", "195.662, -83.1653, -32.6226, 0.92", "203.268, -83.2905, -33.8857, 0.92", "210.699, -82.9406, -35.9082, 0.92", "218.316, -82.1866, -36.844, 0.92" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "220.394, -277.501, 101.301, 0.92", "223.581, -285.247, 105.468, 0.92", "227.027, -292.088, 110.8, 0.92", "231.712, -298.782, 115.275, 0.92", "237.301, -304.7, 119.747, 0.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "220.394, -277.501, 101.301, 0.46", "228.663, -283.65, 102.973, 0.92", "237.183, -288.821, 106.028, 0.92", "246.152, -293.572, 108.334, 0.92", "255.661, -296.886, 110.861, 0.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-14.6246, 20.7018, 2.6561, 0.46", "-18.9583, 24.313, 2.36157, 0.46" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-14.6246, 20.7018, 2.6561, 0.46", "-13.5346, 21.7471, 3.77193, 0.46", "-11.9372, 22.8771, 5.32842, 0.92", "-11.0705, 23.5042, 6.059, 0.46", "-9.87724, 24.3956, 7.03101, 0.92", "-9.49121, 24.6913, 7.31799, 0.92", "-7.96807, 25.9071, 8.38917, 0.46", "-6.70722, 26.8014, 9.26159, 0.92", "-4.78081, 28.0418, 10.4457, 0.46", "-4.4543, 28.2663, 10.6144, 0.46", "-3.20491, 29.307, 11.1874, 0.92", "-2.80576, 29.6591, 11.351, 0.92", "2.86099, 34.3757, 17.4381, 0.92" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-44.2726, 2.81743, -0.410063, 0.92", "-54.5362, -0.917324, -1.08116, 0.92", "-65.2829, -2.82339, -0.771355, 0.92", "-75.9599, -5.09279, -0.400797, 0.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-44.2726, 2.81743, -0.410063, 0.46", "-50.8113, 0.254838, -0.407692, 0.92", "-57.113, -2.82159, -0.961057, 0.92", "-62.9812, -6.39064, -2.54921, 0.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-30.8353, 40.9216, -32.3947, 0.46", "-31.9582, 43.0894, -33.1807, 0.46", "-32.9629, 44.9735, -33.9388, 0.46", "-33.5709, 46.2199, -34.3956, 0.92", "-34.4736, 48.2369, -35.146, 0.46", "-34.6627, 48.694, -35.3355, 0.46", "-35.3053, 50.4852, -36.0684, 0.46", "-35.5156, 51.0629, -36.3282, 0.46", "-36.2631, 52.7993, -37.1913, 0.92", "-37.29, 54.9528, -38.3291, 0.46", "-38.6128, 57.2754, -39.6052, 0.46", "-39.4387, 58.5723, -40.35, 0.92", "-42.0975, 62.1735, -42.4893, 0.46", "-43.6001, 64.0289, -43.6493, 0.46", "-43.9152, 64.3815, -43.8815, 0.46", "-45.2855, 65.8627, -44.7915, 0.92", "-46.9792, 67.9357, -45.9561, 0.46", "-47.9474, 69.6395, -46.7225, 0.92", "-49.1921, 73.0914, -47.9447, 0.46", "-49.1971, 73.113, -47.951, 0.46", "-49.5269, 75.0488, -48.4265, 0.92", "-50.0034, 79.4951, -49.3846, 0.46", "-50.4006, 85.0952, -50.4446, 0.46", "-50.4027, 85.1293, -50.4506, 0.46", "-50.727, 88.7313, -51.0877, 0.46", "-51.0619, 91.4118, -51.5821, 0.92", "-51.8217, 95.1747, -52.3093, 0.46", "-51.8315, 95.2073, -52.3155, 0.46", "-52.6501, 97.3089, -52.7506, 0.92", "-53.9083, 100.354, -53.3824, 0.46", "-54.1807, 100.953, -53.5072, 0.46", "-56.6044, 106.119, -54.5755, 0.46", "-56.8224, 106.597, -54.661, 0.46", "-57.9017, 109.077, -55.1122, 0.92", "-59.3409, 112.436, -55.7362, 0.46", "-59.699, 113.196, -55.9042, 0.92", "-60.0003, 113.771, -56.063, 0.92", "-62.074, 117.194, -57.3058, 0.46", "-63.7266, 119.345, -58.3257, 0.46", "-64.4577, 119.922, -58.811, 0.92", "-67.3069, 121.031, -60.7063, 0.46", "-67.7374, 121.057, -60.9976, 0.46", "-68.8192, 120.924, -61.7302, 0.46", "-71.138, 120.368, -63.3846, 0.92", "-73.274, 119.794, -64.96, 0.46", "-73.6779, 119.713, -65.2776, 0.46", "-76.642, 119.512, -67.9406, 0.92", "-78.6023, 119.691, -69.917, 0.46", "-80.0589, 120.319, -71.6966, 0.92", "-80.3658, 120.615, -72.199, 0.92", "-81.4367, 122.431, -74.8389, 0.46", "-82.2727, 124.731, -77.7831, 0.46", "-82.2885, 124.804, -77.8686, 0.46", "-82.7368, 127.865, -81.4086, 0.46", "-83.0439, 130.636, -84.5885, 0.46", "-83.2746, 133.313, -87.5903, 1.38", "-83.4086, 135.966, -90.4524, 0.46", "-83.4102, 135.99, -90.4769, 0.46", "-83.6342, 137.538, -91.9308, 0.46", "-83.6391, 137.556, -91.9449, 0.46", "-85.1377, 141.028, -94.1653, 0.46", "-85.1484, 141.046, -94.1746, 0.46", "-86.312, 142.856, -94.9591, 0.92", "-88.661, 146.43, -96.1279, 0.46", "-90.5016, 149.183, -96.8162, 0.46", "-91.6523, 150.881, -97.1392, 0.92", "-94.0064, 154.219, -97.5734, 0.46", "-95.5345, 156.41, -97.766, 0.92", "-98.6629, 161.053, -97.9569, 0.46", "-99.0305, 161.627, -97.9468, 0.46", "-100.945, 164.566, -97.8353, 0.46", "-101.889, 166.008, -97.7997, 0.92", "-105.12, 170.81, -97.7157, 0.46", "-105.94, 171.992, -97.7042, 0.92", "-110.594, 178.573, -97.6901, 0.46", "-114.747, 184.387, -97.7141, 0.46", "-117.422, 188.101, -97.7644, 0.46", "-117.923, 188.795, -97.7793, 0.92" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-30.8353, 40.9216, -32.3947, 0.46", "-29.9972, 46.7668, -33.311, 0.46", "-29.6736, 49.0822, -33.618, 0.46", "-29.4934, 50.3834, -33.8321, 0.92", "-29.0599, 53.7141, -34.4344, 0.46", "-28.4523, 57.6932, -35.2176, 0.46", "-28.3706, 58.1993, -35.3204, 0.46", "-27.2876, 63.8849, -36.5435, 0.46", "-26.6162, 67.1714, -37.2604, 0.46", "-26.5108, 67.6598, -37.3676, 0.46", "-25.7159, 71.3598, -38.1736, 0.46", "-25.587, 71.99, -38.3162, 0.46", "-24.6548, 75.9718, -39.2147, 0.46", "-24.5133, 76.4483, -39.3289, 0.46", "-24.2598, 77.2418, -39.4379, 0.92" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "9.44884, -20.9658, -32.7589, 0.46", "10.7933, -19.2432, -33.1509, 0.46", "12.438, -17.1361, -33.6303, 0.92", "14.5292, -14.457, -34.2399, 0.46", "15.7005, -12.9564, -34.5813, 0.46", "16.9716, -11.3279, -34.9518, 0.92" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "9.44884, -20.9658, -32.7589, 0.46", "7.94213, -21.2117, -35.9078, 0.46", "6.78193, -21.4564, -38.1663, 0.46", "5.51407, -21.9885, -40.3843, 0.92", "4.39773, -22.5635, -42.1213, 0.46", "4.04105, -22.7895, -42.6386, 0.46", "2.75886, -23.6923, -44.4273, 0.46", "1.11377, -24.8603, -46.5449, 0.92", "-0.924771, -26.5319, -48.9951, 0.46", "-1.95467, -27.3766, -50.0959, 0.92", "-4.39657, -29.166, -52.4746, 0.46", "-4.95445, -29.5419, -52.9989, 1.38", "-6.76936, -30.5955, -54.5912, 0.46", "-6.7859, -30.604, -54.6048, 0.46", "-9.58138, -31.9004, -56.8093, 0.92", "-11.6055, -32.7468, -58.3197, 0.46", "-13.1862, -33.5301, -59.446, 0.46", "-13.6829, -33.8051, -59.7972, 0.46", "-15.2819, -34.8687, -60.8956, 0.92", "-18.6402, -37.3602, -63.2145, 0.46", "-20.5436, -38.9762, -64.534, 1.38", "-23.73, -42.0191, -66.7164, 0.46", "-24.1467, -42.4527, -67.0134, 0.46", "-25.8991, -44.3878, -68.3463, 0.92", "-26.531, -45.1423, -68.848, 1.38", "-26.829, -45.504, -69.0773, 1.38", "-29.3675, -48.7345, -71.0849, 0.46", "-29.9817, -49.4569, -71.5415, 0.46", "-30.8821, -50.5561, -72.2474, 1.38", "-33.9679, -54.3265, -74.6848, 0.46", "-35.2454, -55.8875, -75.7215, 1.38", "-37.6123, -58.5252, -77.734, 0.46", "-38.9466, -59.9282, -78.8433, 1.38", "-40.6672, -61.7169, -80.2945, 0.46", "-41.6685, -62.7788, -81.2272, 0.92", "-43.1235, -64.2246, -82.7823, 0.46", "-45.1754, -66.2027, -85.1831, 0.46" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "160.694, -229.439, -106.439, 0.46", "162.551, -233.395, -105.701, 0.46", "163.656, -235.605, -105.363, 0.46", "164.41, -237.031, -105.176, 0.92", "165.741, -239.398, -104.91, 0.46", "166.467, -240.564, -104.822, 0.92", "168.761, -244.008, -104.643, 0.46", "169.571, -245.108, -104.649, 0.92", "170.395, -246.205, -104.662, 0.46", "171.663, -247.826, -104.694, 0.92", "174.349, -251.31, -104.755, 0.46", "175.573, -252.958, -104.772, 0.92", "178.809, -257.392, -104.804, 0.46", "180.784, -260.121, -104.789, 0.46", "182.148, -262.026, -104.758, 0.92", "184.357, -265.189, -104.663, 0.46", "186.401, -268.213, -104.528, 0.46", "186.639, -268.566, -104.511, 0.92", "189.017, -271.997, -104.358, 0.46", "189.028, -272.012, -104.357, 0.46", "189.283, -272.351, -104.327, 0.92" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "160.694, -229.439, -106.439, 0.46", "163.397, -231.67, -108.304, 0.46", "165.109, -232.992, -109.445, 0.46", "166.529, -234.199, -110.337, 0.46", "166.841, -234.484, -110.513, 0.46", "168.966, -236.44, -111.63, 0.92", "169.284, -236.732, -111.785, 0.92", "170.787, -238.12, -112.495, 0.46", "173.143, -240.202, -113.5, 0.46", "176.099, -242.757, -114.645, 0.46", "176.897, -243.431, -114.939, 0.92", "180.175, -246.172, -116.064, 0.46", "182.166, -247.788, -116.739, 0.46", "184.0, -249.226, -117.35, 0.46", "185.383, -250.267, -117.805, 0.92", "188.231, -252.359, -118.721, 0.46", "189.642, -253.343, -119.187, 0.92", "192.326, -255.116, -120.085, 0.46", "193.19, -255.66, -120.398, 1.38", "195.052, -256.821, -121.139, 0.46", "196.587, -257.745, -121.791, 0.92", "198.951, -259.065, -122.858, 0.46", "201.933, -260.603, -124.247, 0.46", "204.654, -261.893, -125.552, 0.46", "206.236, -262.607, -126.363, 0.46", "207.683, -263.221, -127.181, 0.92", "210.906, -264.617, -129.07, 0.46", "212.003, -265.094, -129.727, 0.92", "213.694, -265.739, -130.796, 0.46", "216.063, -266.557, -132.333, 0.46", "217.87, -267.094, -133.599, 0.46" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "154.081, -272.035, -12.0343, 0.92", "157.793, -280.18, -12.5181, 0.92", "160.928, -288.559, -11.9727, 0.92", "165.344, -296.315, -11.4613, 0.92", "170.677, -303.465, -11.3118, 0.92", "174.502, -311.517, -10.5366, 0.92" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "154.081, -272.035, -12.0343, 0.46", "157.653, -278.152, -12.7335, 0.92", "160.786, -284.346, -14.3723, 0.92", "163.4, -290.578, -16.6754, 0.92", "166.597, -296.575, -18.8288, 0.92", "170.269, -302.152, -21.2903, 0.92" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "218.316, -82.1866, -36.844, 0.92", "229.206, -83.2319, -40.6761, 0.92", "240.679, -84.4162, -41.7824, 0.92", "252.156, -83.7188, -43.176, 0.92", "263.542, -82.9599, -45.1583, 0.92" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "218.316, -82.1866, -36.844, 0.46", "223.929, -82.8007, -38.0172, 0.92", "229.5, -84.1033, -38.7989, 0.92", "234.915, -85.1836, -40.477, 0.92", "239.907, -86.8258, -42.8723, 0.92", "244.698, -87.9226, -45.8917, 0.92", "249.401, -87.9416, -49.2248, 0.92" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-18.9583, 24.313, 2.36157, 0.92", "-19.1491, 27.104, 2.36753, 0.92", "-19.2546, 29.2706, 2.3761, 1.38", "-19.5028, 34.7609, 2.31835, 0.92", "-19.5458, 36.9286, 2.25708, 1.38", "-19.5096, 41.2409, 2.0859, 0.92", "-19.3812, 45.0531, 1.88988, 0.92", "-19.339, 45.581, 1.84813, 0.92", "-18.9991, 48.4953, 1.51213, 0.92", "-18.6767, 50.6683, 1.18985, 0.92", "-18.1114, 54.3398, 0.569977, 1.38", "-17.7033, 57.0559, 0.0745903, 0.92", "-17.2366, 60.3529, -0.518569, 1.38", "-16.6804, 64.796, -1.17166, 0.92", "-16.4442, 66.9781, -1.41049, 0.92", "-16.4073, 67.5067, -1.44869, 0.92", "-16.351, 68.5663, -1.50836, 1.38", "-16.2361, 71.7899, -1.5701, 0.92", "-16.1823, 74.2514, -1.46248, 0.92", "-16.1769, 76.3717, -1.19908, 1.38", "-16.195, 78.4727, -0.873133, 1.38" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-18.9583, 24.313, 2.36157, 0.46", "-22.1767, 22.0474, 2.29959, 0.46", "-23.3578, 21.0893, 2.23489, 0.92", "-23.738, 20.7809, 2.21407, 0.92", "-26.9176, 18.2015, 2.03988, 0.46", "-29.6197, 16.0096, 1.89186, 1.38", "-31.4902, 14.4922, 1.78939, 0.46", "-34.1524, 12.6657, 1.50832, 1.38", "-43.0028, 6.81552, 0.905161, 1.38" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.86099, 34.3757, 17.4381, 0.92", "13.1783, 43.0398, 23.0058, 0.92", "21.2598, 53.2725, 29.6416, 0.92", "30.1027, 61.8869, 37.4026, 0.92", "39.8376, 70.0833, 44.4944, 0.92", "50.3682, 78.4861, 50.0443, 0.92" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "2.86099, 34.3757, 17.4381, 0.46", "11.7801, 41.3252, 24.577, 0.92", "19.8808, 48.5379, 32.4127, 0.92", "27.2017, 56.5881, 40.2406, 0.92", "36.7576, 62.8533, 47.1544, 0.92", "46.802, 67.8433, 54.3613, 0.92", "56.1495, 75.2663, 60.4093, 0.92", "65.0088, 83.8224, 65.7172, 0.92", "73.2712, 91.6149, 72.8176, 0.92" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-75.9599, -5.09279, -0.400797, 0.92", "-86.076, -7.54877, -0.881133, 0.92", "-95.8841, -10.5642, -2.77968, 0.92", "-105.98, -13.0978, -3.29689, 0.92", "-116.287, -14.3775, -4.02326, 0.92", "-126.6, -14.8711, -2.71435, 0.92" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-75.9599, -5.09279, -0.400797, 0.46", "-85.1128, -7.40514, -0.343798, 0.92", "-94.1064, -10.0014, -1.61226, 0.92" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-62.9812, -6.39064, -2.54921, 0.92", "-72.1185, -11.112, -3.2499, 0.92", "-80.5425, -17.0887, -3.10681, 0.92", "-89.7971, -21.5612, -3.83231, 0.92", "-99.5288, -24.6798, -4.98604, 0.92", "-108.777, -29.0861, -6.10506, 0.92", "-117.702, -34.1995, -5.44879, 0.92", "-127.141, -38.2843, -5.91325, 0.92", "-137.088, -40.8469, -5.8952, 0.92", "-146.863, -43.3939, -7.80167, 0.92", "-156.767, -44.3878, -10.3146, 0.92", "-166.482, -45.1551, -13.5445, 0.92", "-175.773, -44.707, -17.8794, 0.92", "-185.196, -43.7236, -21.8145, 0.92", "-194.943, -42.5612, -24.7971, 0.92", "-204.293, -40.1803, -28.292, 0.92", "-213.04, -36.844, -32.5061, 0.92" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-62.9812, -6.39064, -2.54921, 0.46", "-74.3213, -11.814, -4.81209, 0.92", "-84.5673, -19.5197, -4.99157, 0.92", "-95.4474, -25.9546, -6.97048, 0.92", "-106.47, -32.3356, -8.14077, 0.92", "-117.66, -37.689, -11.1865, 0.92", "-127.45, -44.1724, -16.3005, 0.92", "-138.093, -49.333, -21.126, 0.92", "-149.053, -55.6549, -23.0094, 0.92", "-158.564, -64.2781, -22.5563, 0.92", "-165.995, -74.6205, -24.732, 0.92", "-172.185, -85.3238, -28.5634, 0.92", "-177.07, -96.3265, -33.3701, 0.92", "-181.69, -107.812, -37.2633, 0.92", "-188.141, -118.737, -39.836, 0.92", "-192.765, -130.853, -40.4984, 0.92", "-196.266, -143.361, -40.0719, 0.92", "-197.999, -155.955, -37.4228, 0.92", "-197.487, -167.87, -32.3939, 0.92" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-45.1754, -66.2027, -85.1831, 0.46", "-47.1393, -68.7071, -86.2049, 0.46", "-47.8312, -69.66, -86.6388, 0.92", "-50.3597, -73.2263, -88.349, 0.46", "-50.6095, -73.6064, -88.5329, 0.46", "-51.0777, -74.3192, -88.8776, 0.92", "-51.4006, -74.8107, -89.1153, 0.92", "-52.8492, -77.1709, -90.3942, 0.46", "-53.0229, -77.4723, -90.5692, 0.46", "-53.4845, -78.7279, -91.3401, 0.92" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-45.1754, -66.2027, -85.1831, 0.46", "-46.0311, -65.9069, -86.0201, 0.46", "-46.4428, -65.8852, -86.3532, 0.46", "-47.4025, -65.9212, -87.1223, 0.92", "-47.7252, -65.9342, -87.38, 0.92", "-49.2242, -66.0803, -88.7193, 0.46", "-49.5119, -66.1189, -89.013, 0.46", "-52.655, -66.6741, -92.4736, 0.46", "-53.3581, -66.8747, -93.2972, 0.92", "-53.6849, -66.9858, -93.6995, 0.92", "-55.2919, -67.7058, -95.7499, 0.46", "-56.3475, -68.3065, -97.1512, 0.92", "-56.7139, -68.548, -97.6544, 0.92", "-58.47, -69.9099, -100.242, 0.46", "-58.8219, -70.1863, -100.739, 0.46", "-60.0849, -71.181, -102.385, 0.46", "-60.3001, -71.3914, -102.671, 0.46", "-61.1938, -72.6431, -104.183, 0.92", "-61.3766, -72.9598, -104.571, 0.92", "-62.0808, -74.3627, -106.396, 0.46", "-62.2036, -74.6103, -106.707, 0.46", "-63.2091, -76.584, -109.075, 0.92", "-64.367, -78.6608, -111.271, 0.46", "-64.6088, -79.1015, -111.698, 0.46", "-64.9314, -79.6626, -112.225, 0.92", "-66.2913, -81.9483, -114.265, 0.46", "-66.8592, -82.8707, -115.056, 0.92", "-68.6928, -85.6145, -117.357, 0.46", "-70.1847, -88.0845, -119.308, 0.46", "-71.0791, -89.6544, -120.549, 0.92", "-71.8209, -91.0065, -121.636, 0.46", "-72.3252, -91.9559, -122.449, 0.92", "-72.496, -92.323, -122.785, 0.92", "-73.1843, -94.1261, -124.542, 0.46", "-73.5332, -95.3389, -125.724, 0.92", "-73.5922, -95.6301, -126.018, 0.92", "-73.6802, -96.7843, -127.204, 0.46", "-73.6892, -98.0851, -128.508, 0.92", "-73.6685, -98.3846, -128.799, 0.92", "-73.5083, -99.5891, -129.967, 0.46", "-73.4277, -99.8952, -130.241, 0.46", "-73.1491, -100.915, -131.081, 0.92", "-72.7311, -102.473, -132.291, 0.46", "-72.5325, -103.719, -133.202, 0.46", "-72.4911, -104.061, -133.443, 0.46", "-72.407, -105.372, -134.271, 0.46", "-72.4138, -106.322, -134.897, 0.46", "-72.4589, -106.766, -135.181, 0.46", "-73.3423, -110.307, -137.487, 0.46", "-73.4972, -110.727, -137.769, 0.46", "-74.049, -111.929, -138.637, 0.92", "-74.9033, -113.414, -139.789, 0.46", "-75.6322, -114.542, -140.729, 0.92", "-77.4169, -117.089, -142.87, 0.46", "-77.768, -117.544, -143.267, 0.92", "-78.1036, -117.995, -143.636, 0.92", "-79.5773, -119.907, -145.208, 0.46", "-79.8485, -120.269, -145.478, 0.46", "-80.4504, -121.038, -146.046, 1.38", "-81.8767, -122.997, -147.432, 0.46", "-82.6286, -124.174, -148.288, 0.92", "-83.7253, -126.056, -149.68, 0.46", "-84.3092, -127.294, -150.586, 0.92", "-84.4351, -127.61, -150.814, 0.92", "-84.9508, -129.647, -152.22, 0.46", "-85.1236, -131.554, -153.388, 0.46", "-85.105, -131.93, -153.578, 0.46", "-84.7496, -134.573, -154.716, 0.92", "-84.6796, -134.956, -154.877, 0.92", "-84.1262, -137.632, -155.931, 0.46", "-83.9455, -138.62, -156.282, 0.92", "-83.4981, -141.718, -157.372, 0.92", "-83.4576, -142.207, -157.576, 0.92", "-83.4895, -143.968, -158.486, 0.46", "-83.5217, -144.327, -158.703, 0.46", "-83.8099, -145.724, -159.73, 0.92", "-83.8668, -146.15, -160.038, 0.92", "-84.0829, -148.366, -161.627, 0.46", "-84.1215, -148.801, -161.925, 0.46", "-84.4194, -152.682, -164.443, 0.46", "-84.4387, -153.129, -164.727, 0.46", "-84.3086, -157.826, -167.586, 0.46", "-84.301, -157.961, -167.663, 0.46" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-16.195, 78.4727, -0.873133, 0.92", "-15.8746, 81.5431, -0.445452, 0.92", "-15.4203, 85.8976, 0.16111, 0.92", "-15.2086, 87.9264, 0.44371, 0.92", "-14.9512, 90.3931, 0.787317, 1.38", "-14.4361, 95.3301, 1.47501, 0.92", "-14.2394, 97.2149, 1.73756, 1.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-16.195, 78.4727, -0.873133, 0.46", "-16.6597, 80.4686, -1.45738, 0.46", "-16.7858, 81.0028, -1.61075, 0.46", "-16.7858, 81.0028, -1.61075, 0.92", "-17.5014, 84.5472, -2.48391, 0.46", "-17.5073, 84.5754, -2.49026, 0.46", "-17.8855, 86.3076, -2.80914, 0.92", "-18.0004, 86.7316, -2.86278, 0.92", "-18.5883, 88.9701, -3.06547, 0.46", "-18.6972, 89.4088, -3.09327, 0.46", "-19.0107, 90.5979, -3.13039, 1.38", "-19.7902, 93.5062, -3.2003, 0.46", "-20.4073, 95.7479, -3.22947, 0.46", "-21.4736, 99.7235, -3.27287, 0.46", "-22.0955, 101.995, -3.28732, 0.46", "-22.6236, 104.122, -3.30845, 0.92" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "73.2712, 91.6149, 72.8176, 0.92", "77.9097, 95.3948, 76.7211, 0.92", "81.5757, 99.2591, 81.4884, 0.92", "84.5653, 102.201, 87.2534, 0.92", "86.545, 105.693, 93.1613, 0.92", "89.554, 108.537, 98.9629, 0.92", "93.0343, 111.202, 104.578, 0.92", "95.2428, 113.399, 110.978, 0.92", "97.9895, 114.863, 117.368, 0.92", "100.423, 117.125, 123.664, 0.92", "103.67, 120.369, 129.126, 0.92", "107.722, 122.951, 134.383, 0.92", "111.557, 125.577, 139.78, 0.92", "115.975, 127.593, 144.977, 0.92", "121.392, 129.642, 149.105, 0.92" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "73.2712, 91.6149, 72.8176, 0.46", "79.5364, 96.6378, 77.9463, 0.92" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-126.6, -14.8711, -2.71435, 0.92", "-137.273, -17.0422, -3.03571, 0.92" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-126.6, -14.8711, -2.71435, 0.46", "-140.322, -17.3321, -3.77571, 0.92", "-154.073, -19.061, -2.02254, 0.92", "-167.726, -22.0772, -2.15872, 0.92", "-181.076, -25.9577, -0.664977, 0.92", "-193.923, -31.337, 0.762592, 0.92", "-207.198, -35.5268, 2.12606, 0.92", "-220.052, -41.0791, 1.47985, 0.92", "-232.524, -47.1383, -0.723108, 0.92", "-245.757, -51.6015, 0.147007, 0.92", "-259.121, -55.2109, 2.09138, 0.92", "-272.519, -58.0757, 4.83558, 0.92", "-285.971, -61.8511, 4.0697, 0.92", "-299.168, -66.0384, 1.94808, 0.92", "-312.974, -68.1091, 1.27821, 0.92" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_40", "dend_35", "dend_24", "dend_21", "dend_0", "dend_49", "dend_48", "dend_42", "dend_41", "dend_39", "dend_36", "dend_28", "dend_25", "dend_23", "dend_22", "dend_10", "dend_1", "dend_55", "dend_50", "dend_46", "dend_43", "dend_38", "dend_37", "dend_32", "dend_29", "dend_27", "dend_26", "dend_16", "dend_11", "dend_5", "dend_2", "dend_57", "dend_56", "dend_54", "dend_51", "dend_45", "dend_44", "dend_34", "dend_33", "dend_31", "dend_30", "dend_18", "dend_17", "dend_15", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_53", "dend_52", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_40", "dend_35", "dend_24", "dend_21", "dend_0", "dend_49", "dend_48", "dend_42", "dend_41", "dend_39", "dend_36", "dend_28", "dend_25", "dend_23", "dend_22", "dend_10", "dend_1", "dend_55", "dend_50", "dend_46", "dend_43", "dend_38", "dend_37", "dend_32", "dend_29", "dend_27", "dend_26", "dend_16", "dend_11", "dend_5", "dend_2", "dend_57", "dend_56", "dend_54", "dend_51", "dend_45", "dend_44", "dend_34", "dend_33", "dend_31", "dend_30", "dend_18", "dend_17", "dend_15", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_53", "dend_52", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L6_NBC_b88c4c3f75_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_55, id: dend_55, parent: dend_49
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_50
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_40, dend_35, dend_24, dend_21, dend_0, dend_49, dend_48, dend_42, dend_41, dend_39, dend_36, dend_28, dend_25, dend_23, dend_22, dend_10, dend_1, dend_55, dend_50, dend_46, dend_43, dend_38, dend_37, dend_32, dend_29, dend_27, dend_26, dend_16, dend_11, dend_5, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_44, dend_34, dend_33, dend_31, dend_30, dend_18, dend_17, dend_15, dend_12, dend_7, dend_6, dend_4, dend_3, dend_53, dend_52, dend_20, dend_19, dend_14, dend_13, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_40, dend_35, dend_24, dend_21, dend_0, dend_49, dend_48, dend_42, dend_41, dend_39, dend_36, dend_28, dend_25, dend_23, dend_22, dend_10, dend_1, dend_55, dend_50, dend_46, dend_43, dend_38, dend_37, dend_32, dend_29, dend_27, dend_26, dend_16, dend_11, dend_5, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_44, dend_34, dend_33, dend_31, dend_30, dend_18, dend_17, dend_15, dend_12, dend_7, dend_6, dend_4, dend_3, dend_53, dend_52, dend_20, dend_19, dend_14, dend_13, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_26
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.45000007052683877)
    connect dend_40(0), soma_0(0.45000007052683877)
    connect dend_35(0), soma_0(0.45000007052683877)
    connect dend_24(0), soma_0(0.45000007052683877)
    connect dend_21(0), soma_0(0.45000007052683877)
    connect dend_0(0), soma_0(0.45000007052683877)
    connect axon_0(0), soma_0(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_55(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 5.36735, -8.08849, 0.0, 2.03688 ) }
    soma_0 { pt3dadd( 4.94549, -7.33368, 0.0, 3.52963 ) }
    soma_0 { pt3dadd( 4.52363, -6.57887, 0.0, 6.0021 ) }
    soma_0 { pt3dadd( 4.10177, -5.82406, 0.0, 7.56762 ) }
    soma_0 { pt3dadd( 3.67992, -5.06925, 0.0, 9.13193 ) }
    soma_0 { pt3dadd( 3.25806, -4.31444, 0.0, 10.2542 ) }
    soma_0 { pt3dadd( 2.8362, -3.55963, 0.0, 11.222 ) }
    soma_0 { pt3dadd( 2.41434, -2.80482, 0.0, 11.981 ) }
    soma_0 { pt3dadd( 1.99249, -2.05001, 0.0, 12.7132 ) }
    soma_0 { pt3dadd( 1.57063, -1.2952, 0.0, 13.4454 ) }
    soma_0 { pt3dadd( 1.14877, -0.540387, 0.0, 14.1776 ) }
    soma_0 { pt3dadd( 0.726915, 0.214423, 0.0, 14.4912 ) }
    soma_0 { pt3dadd( 0.305057, 0.969233, 0.0, 13.9479 ) }
    soma_0 { pt3dadd( -0.1168, 1.72404, 0.0, 13.0659 ) }
    soma_0 { pt3dadd( -0.538657, 2.47885, 0.0, 12.184 ) }
    soma_0 { pt3dadd( -0.960515, 3.23366, 0.0, 11.2453 ) }
    soma_0 { pt3dadd( -1.38237, 3.98847, 0.0, 10.0927 ) }
    soma_0 { pt3dadd( -1.80423, 4.74328, 0.0, 8.93171 ) }
    soma_0 { pt3dadd( -2.22609, 5.49809, 0.0, 7.05094 ) }
    soma_0 { pt3dadd( -2.64794, 6.2529, 0.0, 4.33066 ) }
    soma_0 { pt3dadd( -3.0698, 7.00771, 0.0, 2.48073 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -0.730264, 0.703278, -11.45, 0.92 ) }
    dend_47 { pt3dadd( -0.730264, 0.703278, -11.45, 0.92 ) }
    dend_47 { pt3dadd( -3.55035, 2.90887, -12.3666, 0.92 ) }
    dend_47 { pt3dadd( -5.79107, 4.66135, -13.0949, 1.83 ) }
    dend_47 { pt3dadd( -7.86694, 6.28489, -13.7697, 0.92 ) }
    dend_47 { pt3dadd( -9.05293, 7.21246, -14.1551, 0.92 ) }
    dend_47 { pt3dadd( -11.5439, 9.16062, -14.9648, 0.92 ) }
    dend_47 { pt3dadd( -12.8933, 10.1762, -15.3961, 0.92 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 29/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 5.04974, -5.72347, -8.55, 0.92 ) }
    dend_40 { pt3dadd( 5.04974, -5.72347, -8.55, 0.92 ) }
    dend_40 { pt3dadd( 7.74498, -8.67683, -8.97465, 0.92 ) }
    dend_40 { pt3dadd( 10.4481, -12.0863, -9.62819, 1.83 ) }
    dend_40 { pt3dadd( 11.9239, -14.0439, -10.0513, 0.92 ) }
    dend_40 { pt3dadd( 12.2756, -14.5648, -10.1777, 0.92 ) }
    dend_40 { pt3dadd( 13.923, -17.6683, -10.9745, 0.92 ) }
    dend_40 { pt3dadd( 14.4685, -19.0185, -11.3672, 0.92 ) }
    dend_40 { pt3dadd( 15.1146, -21.2153, -12.1669, 1.38 ) }
    dend_40 { pt3dadd( 15.9846, -24.0495, -13.3801, 0.46 ) }
    dend_40 { pt3dadd( 17.1917, -27.0007, -14.9032, 1.83 ) }
    dend_40 { pt3dadd( 18.8042, -30.2567, -16.8329, 0.46 ) }
    dend_40 { pt3dadd( 19.5665, -31.4356, -17.7261, 1.38 ) }
    dend_40 { pt3dadd( 20.7931, -33.1809, -19.3392, 0.46 ) }
    dend_40 { pt3dadd( 22.3286, -35.3683, -21.9948, 0.46 ) }
    dend_40 { pt3dadd( 23.6688, -37.0643, -24.7347, 1.38 ) }
    dend_40 { pt3dadd( 23.8759, -37.2552, -25.1503, 1.38 ) }
    dend_40 { pt3dadd( 25.1568, -38.1057, -27.5722, 0.46 ) }
    dend_40 { pt3dadd( 26.211, -38.8907, -29.7217, 0.92 ) }
    dend_40 { pt3dadd( 27.2968, -40.116, -32.3476, 0.46 ) }
    dend_40 { pt3dadd( 27.4588, -40.4429, -32.8675, 0.46 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 50/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 2.71974, -6.86123, -5.05, 0.92 ) }
    dend_35 { pt3dadd( 2.59292, -7.40231, -5.0412, 0.92 ) }
    dend_35 { pt3dadd( 0.908245, -15.0262, -5.08869, 0.92 ) }
    dend_35 { pt3dadd( 0.231961, -18.0614, -5.13685, 1.83 ) }
    dend_35 { pt3dadd( -1.02211, -23.8451, -5.31866, 0.92 ) }
    dend_35 { pt3dadd( -1.92074, -28.1031, -5.52317, 0.92 ) }
    dend_35 { pt3dadd( -2.38422, -30.1658, -5.6485, 1.83 ) }
    dend_35 { pt3dadd( -3.59934, -35.0158, -6.07697, 0.92 ) }
    dend_35 { pt3dadd( -3.7508, -35.5455, -6.14512, 0.92 ) }
    dend_35 { pt3dadd( -4.57192, -38.311, -6.60038, 1.38 ) }
    dend_35 { pt3dadd( -5.58237, -41.7214, -7.24811, 0.46 ) }
    dend_35 { pt3dadd( -6.39728, -44.6057, -7.88812, 1.38 ) }
    dend_35 { pt3dadd( -7.23049, -47.5486, -8.58684, 0.46 ) }
    dend_35 { pt3dadd( -7.58581, -48.863, -8.92229, 0.46 ) }
    dend_35 { pt3dadd( -8.62261, -52.8587, -10.0168, 0.92 ) }
    dend_35 { pt3dadd( -9.33418, -55.6873, -10.8133, 1.83 ) }
    dend_35 { pt3dadd( -10.098, -59.1892, -11.8506, 0.92 ) }
    dend_35 { pt3dadd( -10.1797, -59.7138, -12.0125, 0.92 ) }
    dend_35 { pt3dadd( -10.5925, -63.3073, -13.1607, 0.92 ) }
    dend_35 { pt3dadd( -10.8557, -65.2279, -13.8261, 0.92 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 70/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.82973, -8.12197, -2.05, 0.46 ) }
    dend_24 { pt3dadd( 7.06899, -8.56235, -2.03987, 0.46 ) }
    dend_24 { pt3dadd( 8.50243, -11.1627, -1.99754, 0.92 ) }
    dend_24 { pt3dadd( 8.69915, -11.5077, -1.98339, 0.92 ) }
    dend_24 { pt3dadd( 9.66543, -13.1653, -1.86515, 0.46 ) }
    dend_24 { pt3dadd( 11.0733, -15.5641, -1.6228, 1.38 ) }
    dend_24 { pt3dadd( 12.6081, -18.0905, -1.33527, 0.46 ) }
    dend_24 { pt3dadd( 14.1872, -20.5833, -1.00319, 0.92 ) }
    dend_24 { pt3dadd( 15.6496, -22.7605, -0.659831, 0.46 ) }
    dend_24 { pt3dadd( 17.7258, -25.7406, -0.121329, 1.83 ) }
    dend_24 { pt3dadd( 19.1489, -27.7154, 0.271754, 0.46 ) }
    dend_24 { pt3dadd( 20.2406, -29.1993, 0.606491, 1.38 ) }
    dend_24 { pt3dadd( 21.9323, -31.4395, 1.16272, 0.46 ) }
    dend_24 { pt3dadd( 23.6414, -33.664, 1.73943, 0.46 ) }
    dend_24 { pt3dadd( 24.742, -35.0824, 2.10069, 1.38 ) }
    dend_24 { pt3dadd( 27.0615, -38.0273, 2.84633, 0.92 ) }
    dend_24 { pt3dadd( 28.1487, -39.4221, 3.19119, 0.92 ) }
    dend_24 { pt3dadd( 28.8935, -40.4437, 3.45378, 2.29 ) }
    dend_24 { pt3dadd( 34.2832, -47.1533, 3.41601, 2.29 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 89/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.12027, -4.36022, -1.17, 0.92 ) }
    dend_21 { pt3dadd( -4.12027, -4.36022, -1.17, 0.92 ) }
    dend_21 { pt3dadd( -7.70754, -7.30251, -1.28963, 0.92 ) }
    dend_21 { pt3dadd( -9.68979, -8.99784, -1.25755, 0.92 ) }
    dend_21 { pt3dadd( -10.8661, -10.071, -1.16459, 1.38 ) }
    dend_21 { pt3dadd( -11.316, -10.4955, -1.10484, 1.38 ) }
    dend_21 { pt3dadd( -16.9099, -15.8517, -0.273486, 0.92 ) }
    dend_21 { pt3dadd( -19.0107, -17.9083, 0.105143, 0.92 ) }
    dend_21 { pt3dadd( -20.7237, -19.6303, 0.488228, 1.38 ) }
    dend_21 { pt3dadd( -23.454, -22.3724, 1.2189, 0.92 ) }
    dend_21 { pt3dadd( -25.4797, -24.4034, 1.80048, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_21 { pt3dadd( -26.8594, -25.7972, 2.20013, 1.38 ) }
    dend_21 { pt3dadd( -27.1945, -26.129, 2.30113, 1.38 ) }
    dend_21 { pt3dadd( -30.4384, -29.4155, 3.16614, 0.92 ) }
    dend_21 { pt3dadd( -33.0145, -32.1023, 3.72476, 0.92 ) }
    dend_21 { pt3dadd( -35.1533, -34.4235, 4.07221, 1.38 ) }
    dend_21 { pt3dadd( -37.5922, -37.1592, 4.4089, 0.92 ) }
    dend_21 { pt3dadd( -37.9939, -37.6329, 4.45999, 0.92 ) }
    dend_21 { pt3dadd( -40.0813, -40.162, 4.6735, 1.83 ) }
    dend_21 { pt3dadd( -44.0193, -45.5535, 4.8947, 0.92 ) }
    dend_21 { pt3dadd( -46.7793, -49.4776, 4.94056, 0.92 ) }
    dend_21 { pt3dadd( -47.1302, -49.9946, 4.94006, 0.92 ) }
    dend_21 { pt3dadd( -48.6273, -52.2184, 4.93763, 1.83 ) }
    dend_21 { pt3dadd( -49.0685, -52.8851, 4.93685, 1.83 ) }
    dend_21 { pt3dadd( -54.1404, -60.6289, 4.92582, 0.46 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 14/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.92026, 6.96602, 0.0, 0.92 ) }
    dend_0 { pt3dadd( -4.27107, 7.50487, 0.0, 0.92 ) }
    dend_0 { pt3dadd( -4.71337, 8.18422, 0.0, 0.92 ) }
    dend_0 { pt3dadd( -7.53755, 12.5221, 0.0, 0.92 ) }
    dend_0 { pt3dadd( -9.59352, 15.6801, 0.0, 0.92 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 19/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -3.0698, 7.00771, 0.0, 0.92 ) }
    axon_0 { pt3dadd( -10.3878, 20.1015, 0.0, 0.92 ) }
    axon_0 { pt3dadd( -17.7058, 33.1952, 0.0, 0.92 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 22/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -12.8933, 10.1762, -15.3961, 0.92 ) }
    dend_49 { pt3dadd( -13.8701, 7.67606, -17.0032, 0.92 ) }
    dend_49 { pt3dadd( -14.2911, 6.59851, -17.6958, 0.92 ) }
    dend_49 { pt3dadd( -14.7995, 5.29723, -18.5323, 1.38 ) }
    dend_49 { pt3dadd( -15.528, 3.43243, -19.7309, 0.46 ) }
    dend_49 { pt3dadd( -16.1686, 1.79272, -20.7849, 0.46 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 28/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -12.8933, 10.1762, -15.3961, 0.46 ) }
    dend_48 { pt3dadd( -9.7948, 13.2982, -16.2552, 0.46 ) }
    dend_48 { pt3dadd( -9.51917, 13.6035, -16.3408, 0.46 ) }
    dend_48 { pt3dadd( -8.32827, 14.9546, -16.7504, 0.92 ) }
    dend_48 { pt3dadd( -7.99624, 15.3642, -16.8766, 0.92 ) }
    dend_48 { pt3dadd( -6.06344, 17.7838, -17.7304, 0.92 ) }
    dend_48 { pt3dadd( -5.65855, 18.3076, -17.9375, 0.92 ) }
    dend_48 { pt3dadd( -4.74745, 19.6101, -18.5142, 1.38 ) }
    dend_48 { pt3dadd( -4.00801, 20.6887, -19.003, 0.46 ) }
    dend_48 { pt3dadd( -2.89801, 22.3929, -19.7892, 1.38 ) }
    dend_48 { pt3dadd( -1.25205, 24.9981, -21.0505, 0.46 ) }
    dend_48 { pt3dadd( -0.190088, 26.8692, -21.9682, 0.46 ) }
    dend_48 { pt3dadd( 0.05398, 27.3051, -22.1811, 0.46 ) }
    dend_48 { pt3dadd( 1.00713, 29.1137, -23.0528, 0.92 ) }
    dend_48 { pt3dadd( 1.17502, 29.474, -23.2197, 0.92 ) }
    dend_48 { pt3dadd( 2.06411, 31.6012, -24.1602, 0.46 ) }
    dend_48 { pt3dadd( 3.27411, 34.9799, -25.5262, 0.46 ) }
    dend_48 { pt3dadd( 3.80633, 36.6317, -26.1569, 1.38 ) }
    dend_48 { pt3dadd( 3.92601, 37.0195, -26.3036, 1.38 ) }
    dend_48 { pt3dadd( 4.64289, 39.5737, -27.236, 0.46 ) }
    dend_48 { pt3dadd( 5.00382, 41.0857, -27.7643, 0.92 ) }
    dend_48 { pt3dadd( 5.09726, 41.5938, -27.9348, 0.92 ) }
    dend_48 { pt3dadd( 5.51289, 44.2015, -28.8187, 0.46 ) }
    dend_48 { pt3dadd( 5.57271, 44.606, -28.9565, 0.46 ) }
    dend_48 { pt3dadd( 5.85345, 46.1675, -29.5381, 1.38 ) }
    dend_48 { pt3dadd( 6.48663, 49.3314, -30.7917, 0.46 ) }
    dend_48 { pt3dadd( 7.00431, 51.8679, -31.8477, 0.46 ) }
    dend_48 { pt3dadd( 7.31754, 53.3202, -32.5205, 0.92 ) }
    dend_48 { pt3dadd( 7.42401, 53.7948, -32.763, 0.92 ) }
    dend_48 { pt3dadd( 8.01231, 56.0771, -34.0633, 0.46 ) }
    dend_48 { pt3dadd( 8.15633, 56.5132, -34.3523, 0.46 ) }
    dend_48 { pt3dadd( 8.36429, 57.0313, -34.7508, 0.92 ) }
    dend_48 { pt3dadd( 8.84352, 58.1228, -35.7188, 0.46 ) }
    dend_48 { pt3dadd( 9.03588, 58.5942, -36.187, 0.46 ) }
    dend_48 { pt3dadd( 9.54484, 60.111, -37.6684, 0.46 ) }
    dend_48 { pt3dadd( 9.63297, 60.521, -38.0109, 0.46 ) }
    dend_48 { pt3dadd( 9.76811, 61.3215, -38.591, 0.92 ) }
    dend_48 { pt3dadd( 9.84573, 61.8722, -38.9828, 0.92 ) }
    dend_48 { pt3dadd( 10.0198, 64.6667, -40.767, 0.46 ) }
    dend_48 { pt3dadd( 10.0129, 65.2442, -41.1499, 0.46 ) }
    dend_48 { pt3dadd( 9.825, 68.0912, -43.0391, 0.46 ) }
    dend_48 { pt3dadd( 9.71793, 69.4761, -44.0022, 0.92 ) }
    dend_48 { pt3dadd( 9.54179, 71.489, -45.4272, 0.46 ) }
    dend_48 { pt3dadd( 9.35925, 73.4047, -46.8061, 0.92 ) }
    dend_48 { pt3dadd( 9.10236, 75.9766, -48.6762, 0.46 ) }
    dend_48 { pt3dadd( 9.08197, 76.3937, -49.0194, 0.46 ) }
    dend_48 { pt3dadd( 9.08405, 77.6416, -50.1727, 0.46 ) }
    dend_48 { pt3dadd( 9.16059, 78.1422, -50.6339, 0.46 ) }
    dend_48 { pt3dadd( 9.62457, 79.7038, -51.8403, 0.46 ) }
    dend_48 { pt3dadd( 9.95753, 80.5553, -52.4414, 0.92 ) }
    dend_48 { pt3dadd( 10.9758, 83.021, -53.9274, 0.46 ) }
    dend_48 { pt3dadd( 11.1566, 83.4613, -54.1889, 0.46 ) }
    dend_48 { pt3dadd( 12.718, 87.0649, -56.3105, 0.46 ) }
    dend_48 { pt3dadd( 14.2509, 90.5742, -58.3808, 0.46 ) }
    dend_48 { pt3dadd( 14.4416, 91.0156, -58.6332, 0.46 ) }
    dend_48 { pt3dadd( 15.032, 92.4023, -59.4121, 0.92 ) }
    dend_48 { pt3dadd( 16.4901, 95.8968, -61.2727, 0.46 ) }
    dend_48 { pt3dadd( 17.4295, 98.0876, -62.4968, 0.46 ) }
    dend_48 { pt3dadd( 17.5858, 98.4312, -62.704, 0.46 ) }
    dend_48 { pt3dadd( 18.4662, 100.163, -63.8041, 0.46 ) }
    dend_48 { pt3dadd( 18.6977, 100.578, -64.0664, 0.46 ) }
    dend_48 { pt3dadd( 19.218, 101.466, -64.6057, 0.92 ) }
    dend_48 { pt3dadd( 19.4694, 101.89, -64.833, 0.92 ) }
    dend_48 { pt3dadd( 21.268, 104.952, -66.4546, 0.46 ) }
    dend_48 { pt3dadd( 21.5677, 105.49, -66.7699, 0.92 ) }
    dend_48 { pt3dadd( 22.8826, 108.009, -68.3644, 0.46 ) }
    dend_48 { pt3dadd( 23.1486, 108.545, -68.7156, 0.46 ) }
    dend_48 { pt3dadd( 23.3922, 109.072, -69.0905, 0.92 ) }
    dend_48 { pt3dadd( 23.5649, 109.482, -69.4002, 0.92 ) }
    dend_48 { pt3dadd( 24.6191, 112.021, -71.5067, 0.46 ) }
    dend_48 { pt3dadd( 24.7832, 112.413, -71.8413, 0.46 ) }
    dend_48 { pt3dadd( 25.1804, 113.246, -72.5501, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_48 { pt3dadd( 26.0282, 114.846, -73.9219, 0.46 ) }
    dend_48 { pt3dadd( 26.201, 115.146, -74.1762, 0.46 ) }
    dend_48 { pt3dadd( 27.529, 117.124, -75.8762, 0.46 ) }
    dend_48 { pt3dadd( 27.7983, 117.488, -76.1722, 0.46 ) }
    dend_48 { pt3dadd( 29.2945, 119.635, -77.7825, 0.46 ) }
    dend_48 { pt3dadd( 29.4943, 119.95, -77.996, 0.46 ) }
    dend_48 { pt3dadd( 29.768, 120.489, -78.3318, 0.92 ) }
    dend_48 { pt3dadd( 30.1538, 121.423, -78.9032, 0.92 ) }
    dend_48 { pt3dadd( 31.1212, 124.793, -80.8421, 0.46 ) }
    dend_48 { pt3dadd( 31.5539, 126.684, -81.9087, 0.46 ) }
    dend_48 { pt3dadd( 31.6495, 127.287, -82.2388, 0.46 ) }
    dend_48 { pt3dadd( 32.0981, 130.651, -84.0494, 0.46 ) }
    dend_48 { pt3dadd( 32.145, 131.029, -84.2503, 0.46 ) }
    dend_48 { pt3dadd( 32.2703, 132.07, -84.7904, 0.92 ) }
    dend_48 { pt3dadd( 32.3265, 132.542, -85.0517, 0.92 ) }
    dend_48 { pt3dadd( 33.1706, 137.903, -88.2458, 0.46 ) }
    dend_48 { pt3dadd( 33.2476, 138.264, -88.4671, 0.46 ) }
    dend_48 { pt3dadd( 33.4891, 139.107, -88.99, 0.92 ) }
    dend_48 { pt3dadd( 33.6444, 139.554, -89.2748, 0.92 ) }
    dend_48 { pt3dadd( 34.7375, 142.262, -91.0816, 0.46 ) }
    dend_48 { pt3dadd( 36.3499, 145.803, -93.4624, 0.46 ) }
    dend_48 { pt3dadd( 36.6253, 146.33, -93.815, 0.92 ) }
    dend_48 { pt3dadd( 38.2722, 149.406, -95.8595, 0.46 ) }
    dend_48 { pt3dadd( 38.8685, 150.46, -96.541, 0.92 ) }
    dend_48 { pt3dadd( 39.4079, 151.349, -97.0948, 0.92 ) }
    dend_48 { pt3dadd( 41.6548, 154.681, -99.0332, 0.46 ) }
    dend_48 { pt3dadd( 42.2569, 155.531, -99.5546, 0.92 ) }
    dend_48 { pt3dadd( 43.5197, 157.338, -100.702, 0.46 ) }
    dend_48 { pt3dadd( 45.105, 159.673, -102.246, 0.46 ) }
    dend_48 { pt3dadd( 45.357, 160.072, -102.513, 0.46 ) }
    dend_48 { pt3dadd( 45.9553, 161.128, -103.203, 0.92 ) }
    dend_48 { pt3dadd( 47.1487, 163.387, -104.691, 0.46 ) }
    dend_48 { pt3dadd( 47.3484, 163.812, -104.963, 0.46 ) }
    dend_48 { pt3dadd( 48.6774, 167.131, -106.986, 0.46 ) }
    dend_48 { pt3dadd( 48.8667, 167.702, -107.334, 0.46 ) }
    dend_48 { pt3dadd( 49.5826, 170.038, -108.725, 0.46 ) }
    dend_48 { pt3dadd( 49.7011, 170.501, -108.982, 0.46 ) }
    dend_48 { pt3dadd( 49.8106, 170.986, -109.204, 0.92 ) }
    dend_48 { pt3dadd( 49.8866, 171.374, -109.375, 0.92 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 39/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 27.4588, -40.4429, -32.8675, 0.46 ) }
    dend_42 { pt3dadd( 30.2599, -42.9283, -34.6185, 0.46 ) }
    dend_42 { pt3dadd( 31.899, -44.3617, -35.6605, 1.38 ) }
    dend_42 { pt3dadd( 32.2147, -44.7196, -35.8728, 1.38 ) }
    dend_42 { pt3dadd( 34.4169, -47.6937, -37.3728, 0.46 ) }
    dend_42 { pt3dadd( 34.6963, -48.0934, -37.5636, 0.46 ) }
    dend_42 { pt3dadd( 36.8946, -51.2376, -39.0653, 1.38 ) }
    dend_42 { pt3dadd( 37.217, -51.7638, -39.3029, 1.38 ) }
    dend_42 { pt3dadd( 39.7987, -56.4522, -41.1367, 0.46 ) }
    dend_42 { pt3dadd( 40.7032, -58.1996, -41.7781, 0.46 ) }
    dend_42 { pt3dadd( 40.9409, -58.7911, -41.9637, 0.46 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 50/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 27.4588, -40.4429, -32.8675, 0.92 ) }
    dend_41 { pt3dadd( 24.6864, -41.0662, -34.5914, 0.92 ) }
    dend_41 { pt3dadd( 24.0648, -41.1604, -34.9775, 0.92 ) }
    dend_41 { pt3dadd( 21.6967, -41.4431, -36.4197, 0.46 ) }
    dend_41 { pt3dadd( 20.1154, -41.5283, -37.4486, 0.92 ) }
    dend_41 { pt3dadd( 16.2163, -41.5938, -40.0813, 0.46 ) }
    dend_41 { pt3dadd( 14.2737, -41.5511, -41.5588, 0.92 ) }
    dend_41 { pt3dadd( 12.1299, -41.3494, -43.3844, 0.46 ) }
    dend_41 { pt3dadd( 11.7422, -41.293, -43.8188, 0.46 ) }
    dend_41 { pt3dadd( 10.5285, -40.8195, -46.0138, 0.46 ) }
    dend_41 { pt3dadd( 10.5239, -40.8069, -46.0496, 0.46 ) }
    dend_41 { pt3dadd( 10.9709, -39.6238, -48.8322, 0.46 ) }
    dend_41 { pt3dadd( 10.9799, -39.6096, -48.8666, 0.46 ) }
    dend_41 { pt3dadd( 12.2217, -38.441, -52.202, 0.46 ) }
    dend_41 { pt3dadd( 12.562, -38.1698, -53.0409, 0.46 ) }
    dend_41 { pt3dadd( 14.1431, -37.4111, -56.9253, 0.46 ) }
    dend_41 { pt3dadd( 15.514, -36.9299, -60.5226, 0.46 ) }
    dend_41 { pt3dadd( 15.5255, -36.9267, -60.5588, 0.46 ) }
    dend_41 { pt3dadd( 16.6951, -36.6923, -64.6802, 0.46 ) }
    dend_41 { pt3dadd( 16.8109, -36.6789, -65.2533, 0.46 ) }
    dend_41 { pt3dadd( 17.8868, -36.6969, -72.5923, 0.46 ) }
    dend_41 { pt3dadd( 17.9255, -36.6842, -73.163, 0.46 ) }
    dend_41 { pt3dadd( 17.9546, -36.5082, -75.7437, 0.46 ) }
    dend_41 { pt3dadd( 17.9541, -36.5047, -75.7689, 0.46 ) }
    dend_41 { pt3dadd( 17.658, -35.3631, -80.5336, 0.46 ) }
    dend_41 { pt3dadd( 17.6239, -35.1774, -81.0883, 0.46 ) }
    dend_41 { pt3dadd( 17.3364, -33.4445, -83.8046, 0.46 ) }
    dend_41 { pt3dadd( 17.3305, -32.0486, -85.8632, 0.46 ) }
    dend_41 { pt3dadd( 17.3367, -32.025, -85.893, 0.46 ) }
    dend_41 { pt3dadd( 17.8093, -30.8436, -87.1096, 0.92 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 80/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -10.8557, -65.2279, -13.8261, 0.46 ) }
    dend_39 { pt3dadd( -12.7789, -70.5671, -12.8031, 0.46 ) }
    dend_39 { pt3dadd( -12.9665, -71.067, -12.6961, 0.92 ) }
    dend_39 { pt3dadd( -13.1513, -71.571, -12.6026, 0.92 ) }
    dend_39 { pt3dadd( -14.2504, -74.7623, -12.08, 0.92 ) }
    dend_39 { pt3dadd( -15.2685, -78.0801, -11.6863, 0.46 ) }
    dend_39 { pt3dadd( -15.922, -80.3902, -11.4653, 0.92 ) }
    dend_39 { pt3dadd( -16.093, -81.0526, -11.4106, 0.92 ) }
    dend_39 { pt3dadd( -17.4184, -86.4008, -11.13, 0.46 ) }
    dend_39 { pt3dadd( -17.9222, -88.4964, -11.0782, 0.92 ) }
    dend_39 { pt3dadd( -19.0332, -93.2787, -11.0704, 0.46 ) }
    dend_39 { pt3dadd( -19.387, -94.8493, -11.0946, 0.92 ) }
    dend_39 { pt3dadd( -19.4797, -95.2647, -11.1036, 0.92 ) }
    dend_39 { pt3dadd( -20.4136, -99.5537, -11.1763, 0.46 ) }
    dend_39 { pt3dadd( -20.5639, -100.22, -11.1811, 0.92 ) }
    dend_39 { pt3dadd( -21.6643, -104.579, -11.1423, 0.46 ) }
    dend_39 { pt3dadd( -21.8133, -105.094, -11.1156, 1.38 ) }
    dend_39 { pt3dadd( -21.9658, -105.607, -11.0824, 1.38 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 98/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -10.8557, -65.2279, -13.8261, 0.46 ) }
    dend_36 { pt3dadd( -10.3461, -71.6013, -14.7474, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_36 { pt3dadd( -9.95173, -75.532, -15.3333, 0.46 ) }
    dend_36 { pt3dadd( -9.76754, -77.1823, -15.5867, 1.38 ) }
    dend_36 { pt3dadd( -9.71616, -77.7923, -15.6746, 1.38 ) }
    dend_36 { pt3dadd( -9.54984, -83.7686, -16.4729, 0.46 ) }
    dend_36 { pt3dadd( -9.55451, -84.3808, -16.5611, 0.46 ) }
    dend_36 { pt3dadd( -9.69574, -86.9145, -16.9389, 1.38 ) }
    dend_36 { pt3dadd( -9.78666, -87.6912, -17.0696, 1.38 ) }
    dend_36 { pt3dadd( -10.45, -91.6495, -17.8811, 0.92 ) }
    dend_36 { pt3dadd( -11.0787, -94.4984, -18.5584, 0.92 ) }
    dend_36 { pt3dadd( -11.6609, -96.3778, -19.0799, 0.92 ) }
    dend_36 { pt3dadd( -12.3204, -98.7085, -19.7484, 1.38 ) }
    dend_36 { pt3dadd( -12.4725, -99.4407, -19.9632, 1.38 ) }
    dend_36 { pt3dadd( -12.7775, -102.639, -20.9215, 0.46 ) }
    dend_36 { pt3dadd( -12.6308, -105.939, -21.9067, 0.46 ) }
    dend_36 { pt3dadd( -12.5445, -106.687, -22.1057, 0.46 ) }
    dend_36 { pt3dadd( -12.184, -109.057, -22.6431, 1.38 ) }
    dend_36 { pt3dadd( -11.3811, -113.35, -23.5371, 0.46 ) }
    dend_36 { pt3dadd( -11.0138, -115.317, -23.9155, 1.38 ) }
    dend_36 { pt3dadd( -10.1835, -119.976, -24.7053, 0.46 ) }
    dend_36 { pt3dadd( -9.37646, -124.626, -25.4416, 0.46 ) }
    dend_36 { pt3dadd( -8.90104, -127.939, -25.961, 1.38 ) }
    dend_36 { pt3dadd( -8.84155, -128.533, -26.0563, 1.38 ) }
    dend_36 { pt3dadd( -8.75126, -132.47, -26.7239, 0.46 ) }
    dend_36 { pt3dadd( -8.83593, -135.619, -27.3017, 0.92 ) }
    dend_36 { pt3dadd( -8.88179, -136.382, -27.4533, 0.92 ) }
    dend_36 { pt3dadd( -9.24984, -141.17, -28.465, 0.46 ) }
    dend_36 { pt3dadd( -9.41068, -142.944, -28.8599, 1.38 ) }
    dend_36 { pt3dadd( -9.85861, -149.273, -30.2865, 0.46 ) }
    dend_36 { pt3dadd( -9.9826, -151.627, -30.8267, 1.38 ) }
    dend_36 { pt3dadd( -10.1538, -157.837, -32.2628, 0.46 ) }
    dend_36 { pt3dadd( -10.2126, -160.982, -32.9791, 1.38 ) }
    dend_36 { pt3dadd( -10.2183, -161.744, -33.1428, 1.38 ) }
    dend_36 { pt3dadd( -10.2374, -167.351, -34.2107, 0.46 ) }
    dend_36 { pt3dadd( -10.2472, -171.357, -34.886, 0.46 ) }
    dend_36 { pt3dadd( -10.2741, -174.047, -35.2876, 1.38 ) }
    dend_36 { pt3dadd( -10.2918, -175.027, -35.4184, 1.38 ) }
    dend_36 { pt3dadd( -10.4908, -181.264, -36.1835, 0.46 ) }
    dend_36 { pt3dadd( -10.6759, -186.845, -36.8079, 0.46 ) }
    dend_36 { pt3dadd( -10.8411, -190.76, -37.198, 0.92 ) }
    dend_36 { pt3dadd( -10.9793, -194.73, -37.4974, 1.38 ) }
    dend_36 { pt3dadd( -11.1123, -197.892, -37.6884, 0.46 ) }
    dend_36 { pt3dadd( -11.1298, -198.51, -37.7231, 0.46 ) }
    dend_36 { pt3dadd( -11.1468, -201.879, -37.9511, 0.92 ) }
    dend_36 { pt3dadd( -11.138, -202.668, -38.035, 0.92 ) }
    dend_36 { pt3dadd( -11.2052, -206.525, -38.6028, 0.46 ) }
    dend_36 { pt3dadd( -11.2545, -207.505, -38.7789, 0.46 ) }
    dend_36 { pt3dadd( -11.5175, -211.455, -39.6127, 0.92 ) }
    dend_36 { pt3dadd( -11.7803, -214.831, -40.4114, 1.38 ) }
    dend_36 { pt3dadd( -12.2494, -219.516, -41.6305, 0.46 ) }
    dend_36 { pt3dadd( -12.6227, -223.484, -42.6836, 0.46 ) }
    dend_36 { pt3dadd( -12.7097, -224.437, -42.9588, 0.46 ) }
    dend_36 { pt3dadd( -12.9074, -226.836, -43.6138, 0.46 ) }
    dend_36 { pt3dadd( -12.9752, -227.586, -43.8104, 0.46 ) }
    dend_36 { pt3dadd( -13.2221, -229.87, -44.3085, 1.38 ) }
    dend_36 { pt3dadd( -13.7698, -235.31, -45.3664, 0.46 ) }
    dend_36 { pt3dadd( -13.8508, -236.075, -45.4946, 0.46 ) }
    dend_36 { pt3dadd( -14.1133, -238.422, -45.8645, 0.92 ) }
    dend_36 { pt3dadd( -14.2071, -239.192, -45.9506, 0.92 ) }
    dend_36 { pt3dadd( -15.286, -247.061, -46.6421, 0.46 ) }
    dend_36 { pt3dadd( -15.3964, -247.832, -46.6821, 0.46 ) }
    dend_36 { pt3dadd( -15.8969, -250.981, -46.8242, 1.38 ) }
    dend_36 { pt3dadd( -16.0024, -251.766, -46.8709, 1.38 ) }
    dend_36 { pt3dadd( -16.6983, -257.271, -47.2371, 0.46 ) }
    dend_36 { pt3dadd( -16.7523, -257.871, -47.296, 0.46 ) }
    dend_36 { pt3dadd( -16.8151, -260.319, -47.6406, 0.92 ) }
    dend_36 { pt3dadd( -16.7755, -264.803, -48.4804, 0.46 ) }
    dend_36 { pt3dadd( -16.72, -266.852, -48.9728, 1.38 ) }
    dend_36 { pt3dadd( -16.6908, -267.436, -49.1283, 1.38 ) }
    dend_36 { pt3dadd( -16.3292, -272.861, -50.7929, 0.46 ) }
    dend_36 { pt3dadd( -16.1666, -274.916, -51.4346, 1.38 ) }
    dend_36 { pt3dadd( -15.8433, -278.863, -52.6932, 0.46 ) }
    dend_36 { pt3dadd( -15.4838, -282.87, -53.8364, 0.46 ) }
    dend_36 { pt3dadd( -15.3129, -284.79, -54.3408, 1.38 ) }
    dend_36 { pt3dadd( -15.2584, -285.387, -54.4891, 1.38 ) }
    dend_36 { pt3dadd( -14.8678, -289.511, -55.3857, 0.46 ) }
    dend_36 { pt3dadd( -14.6283, -291.901, -55.8463, 1.38 ) }
    dend_36 { pt3dadd( -13.8629, -298.085, -56.8738, 0.46 ) }
    dend_36 { pt3dadd( -13.4187, -301.439, -57.2725, 0.46 ) }
    dend_36 { pt3dadd( -13.3552, -302.052, -57.3233, 0.46 ) }
    dend_36 { pt3dadd( -13.0098, -306.131, -57.5016, 0.92 ) }
    dend_36 { pt3dadd( -12.8295, -309.465, -57.5174, 0.46 ) }
    dend_36 { pt3dadd( -12.7568, -311.871, -57.4783, 0.92 ) }
    dend_36 { pt3dadd( -12.6994, -315.526, -57.3944, 0.46 ) }
    dend_36 { pt3dadd( -12.6802, -319.635, -57.3663, 0.46 ) }
    dend_36 { pt3dadd( -12.6962, -323.535, -57.481, 0.92 ) }
    dend_36 { pt3dadd( -12.7922, -328.239, -57.7787, 0.46 ) }
    dend_36 { pt3dadd( -12.848, -329.789, -57.9466, 1.38 ) }
    dend_36 { pt3dadd( -12.9776, -333.901, -58.5696, 0.46 ) }
    dend_36 { pt3dadd( -13.0006, -337.167, -59.2302, 0.92 ) }
    dend_36 { pt3dadd( -12.9343, -344.207, -60.8493, 0.46 ) }
    dend_36 { pt3dadd( -12.8902, -348.056, -61.8043, 0.92 ) }
    dend_36 { pt3dadd( -12.7936, -351.344, -62.5945, 0.46 ) }
    dend_36 { pt3dadd( -12.6939, -353.266, -63.0347, 0.92 ) }
    dend_36 { pt3dadd( -12.3344, -358.973, -64.2689, 0.46 ) }
    dend_36 { pt3dadd( -12.274, -359.578, -64.3787, 0.46 ) }
    dend_36 { pt3dadd( -11.9582, -361.896, -64.6308, 0.92 ) }
    dend_36 { pt3dadd( -10.3985, -372.155, -65.2735, 0.46 ) }
    dend_36 { pt3dadd( -10.0689, -374.174, -65.3158, 0.92 ) }
    dend_36 { pt3dadd( -9.97085, -374.785, -65.3183, 0.92 ) }
    dend_36 { pt3dadd( -8.57061, -383.474, -65.333, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -7.49701, -390.154, -65.3957, 0.46 ) }
    dend_36 { pt3dadd( -7.37921, -390.924, -65.4167, 0.46 ) }
    dend_36 { pt3dadd( -7.05433, -393.323, -65.5126, 1.38 ) }
    dend_36 { pt3dadd( -6.2454, -399.704, -65.9225, 0.46 ) }
    dend_36 { pt3dadd( -5.4568, -406.17, -66.5197, 0.46 ) }
    dend_36 { pt3dadd( -5.19594, -408.483, -66.8645, 1.38 ) }
    dend_36 { pt3dadd( -4.56209, -414.007, -68.0515, 0.46 ) }
    dend_36 { pt3dadd( -4.48785, -414.591, -68.1878, 0.46 ) }
    dend_36 { pt3dadd( -4.05225, -417.881, -69.0448, 0.92 ) }
    dend_36 { pt3dadd( -3.95442, -418.464, -69.2216, 0.92 ) }
    dend_36 { pt3dadd( -3.04848, -422.545, -70.55, 0.46 ) }
    dend_36 { pt3dadd( -2.46663, -424.554, -71.2699, 0.46 ) }
    dend_36 { pt3dadd( -1.36621, -427.584, -72.3989, 0.92 ) }
    dend_36 { pt3dadd( -1.14828, -428.122, -72.6025, 0.92 ) }
    dend_36 { pt3dadd( 0.072258, -431.045, -73.7332, 0.46 ) }
    dend_36 { pt3dadd( 0.938485, -433.144, -74.5275, 0.92 ) }
    dend_36 { pt3dadd( 2.14745, -436.144, -75.6569, 0.46 ) }
    dend_36 { pt3dadd( 2.81396, -437.944, -76.2658, 0.92 ) }
    dend_36 { pt3dadd( 3.05703, -438.648, -76.4861, 0.92 ) }
    dend_36 { pt3dadd( 4.5872, -443.271, -77.8386, 0.46 ) }
    dend_36 { pt3dadd( 5.47096, -446.383, -78.6566, 0.92 ) }
    dend_36 { pt3dadd( 5.70196, -447.325, -78.8816, 0.92 ) }
    dend_36 { pt3dadd( 6.85771, -452.893, -80.0338, 0.46 ) }
    dend_36 { pt3dadd( 7.15811, -454.528, -80.3437, 0.92 ) }
    dend_36 { pt3dadd( 7.29285, -455.298, -80.4732, 0.92 ) }
    dend_36 { pt3dadd( 7.97663, -459.264, -80.9909, 0.46 ) }
    dend_36 { pt3dadd( 8.3764, -461.563, -81.283, 0.92 ) }
    dend_36 { pt3dadd( 8.53747, -462.33, -81.3984, 0.92 ) }
    dend_36 { pt3dadd( 9.68524, -466.945, -82.1395, 0.46 ) }
    dend_36 { pt3dadd( 9.92364, -467.675, -82.2633, 0.46 ) }
    dend_36 { pt3dadd( 10.7479, -469.925, -82.6519, 0.92 ) }
    dend_36 { pt3dadd( 12.4353, -473.711, -83.3889, 0.92 ) }
    dend_36 { pt3dadd( 14.5926, -477.959, -84.3087, 0.46 ) }
    dend_36 { pt3dadd( 16.2671, -481.1, -85.0017, 0.92 ) }
    dend_36 { pt3dadd( 19.0327, -485.722, -86.0841, 0.46 ) }
    dend_36 { pt3dadd( 19.3554, -486.229, -86.2096, 0.46 ) }
    dend_36 { pt3dadd( 20.957, -488.499, -86.8239, 0.92 ) }
    dend_36 { pt3dadd( 21.437, -489.08, -86.9883, 0.92 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 34.2832, -47.1533, 3.41601, 0.92 ) }
    dend_28 { pt3dadd( 38.9379, -54.5277, 4.25441, 0.92 ) }
    dend_28 { pt3dadd( 44.763, -60.8951, 5.52153, 0.92 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 41/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 34.2832, -47.1533, 3.41601, 0.46 ) }
    dend_25 { pt3dadd( 40.4552, -54.5962, 4.52183, 0.92 ) }
    dend_25 { pt3dadd( 47.0529, -61.6975, 5.20454, 0.92 ) }
    dend_25 { pt3dadd( 53.8213, -68.5459, 6.47614, 0.92 ) }
    dend_25 { pt3dadd( 60.8528, -75.2264, 6.5036, 0.92 ) }
    dend_25 { pt3dadd( 67.5904, -82.0831, 7.89614, 0.92 ) }
    dend_25 { pt3dadd( 74.2494, -88.6407, 10.535, 0.92 ) }
    dend_25 { pt3dadd( 81.7187, -93.7831, 13.8978, 0.92 ) }
    dend_25 { pt3dadd( 89.908, -98.4562, 15.9666, 0.92 ) }
    dend_25 { pt3dadd( 97.6011, -103.591, 18.7833, 0.92 ) }
    dend_25 { pt3dadd( 103.775, -110.866, 20.6968, 0.92 ) }
    dend_25 { pt3dadd( 110.86, -117.37, 21.9636, 0.92 ) }
    dend_25 { pt3dadd( 118.253, -123.512, 23.1853, 0.92 ) }
    dend_25 { pt3dadd( 125.149, -129.747, 25.9598, 0.92 ) }
    dend_25 { pt3dadd( 131.518, -136.206, 29.4322, 0.92 ) }
    dend_25 { pt3dadd( 137.621, -142.471, 33.6533, 0.92 ) }
    dend_25 { pt3dadd( 143.378, -148.925, 38.0884, 0.92 ) }
    dend_25 { pt3dadd( 148.925, -155.416, 42.7373, 0.92 ) }
    dend_25 { pt3dadd( 155.04, -161.242, 47.5086, 0.92 ) }
    dend_25 { pt3dadd( 159.494, -167.367, 53.5983, 0.92 ) }
    dend_25 { pt3dadd( 164.661, -174.23, 58.1768, 0.92 ) }
    dend_25 { pt3dadd( 169.564, -181.246, 62.8274, 0.92 ) }
    dend_25 { pt3dadd( 175.621, -188.074, 66.1853, 0.92 ) }
    dend_25 { pt3dadd( 181.024, -195.705, 68.9538, 0.92 ) }
    dend_25 { pt3dadd( 185.977, -203.621, 71.8036, 0.92 ) }
    dend_25 { pt3dadd( 190.287, -212.088, 74.1281, 0.92 ) }
    dend_25 { pt3dadd( 194.074, -220.649, 76.995, 0.92 ) }
    dend_25 { pt3dadd( 199.033, -228.368, 80.3185, 0.92 ) }
    dend_25 { pt3dadd( 203.646, -236.413, 83.3922, 0.92 ) }
    dend_25 { pt3dadd( 208.848, -244.103, 86.3881, 0.92 ) }
    dend_25 { pt3dadd( 214.096, -251.149, 90.5897, 0.92 ) }
    dend_25 { pt3dadd( 217.465, -259.845, 93.5915, 0.92 ) }
    dend_25 { pt3dadd( 219.992, -268.37, 97.7071, 0.92 ) }
    dend_25 { pt3dadd( 220.394, -277.501, 101.301, 0.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 75/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -54.1404, -60.6289, 4.92582, 0.46 ) }
    dend_23 { pt3dadd( -53.8253, -64.0598, 5.56751, 0.46 ) }
    dend_23 { pt3dadd( -53.7215, -65.19, 5.7789, 0.92 ) }
    dend_23 { pt3dadd( -53.6696, -65.7552, 5.8846, 0.92 ) }
    dend_23 { pt3dadd( -53.4568, -68.0714, 6.31779, 0.46 ) }
    dend_23 { pt3dadd( -53.4156, -68.5195, 6.40162, 0.46 ) }
    dend_23 { pt3dadd( -53.3038, -69.7374, 6.62939, 0.92 ) }
    dend_23 { pt3dadd( -51.0455, -79.3168, 8.02462, 0.92 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 83/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -54.1404, -60.6289, 4.92582, 0.46 ) }
    dend_22 { pt3dadd( -56.2002, -62.4338, 4.69091, 0.46 ) }
    dend_22 { pt3dadd( -56.5353, -62.8022, 4.65929, 0.46 ) }
    dend_22 { pt3dadd( -57.7669, -64.3194, 4.68479, 0.92 ) }
    dend_22 { pt3dadd( -58.1548, -64.8161, 4.71659, 0.92 ) }
    dend_22 { pt3dadd( -60.2739, -67.6659, 4.9094, 0.46 ) }
    dend_22 { pt3dadd( -60.753, -68.3103, 4.953, 1.38 ) }
    dend_22 { pt3dadd( -63.8927, -72.6744, 5.30443, 0.46 ) }
    dend_22 { pt3dadd( -67.3053, -77.5517, 5.74857, 0.46 ) }
    dend_22 { pt3dadd( -68.9761, -80.0143, 6.00275, 0.46 ) }
    dend_22 { pt3dadd( -71.0868, -83.2048, 6.36598, 1.38 ) }
    dend_22 { pt3dadd( -76.9652, -92.0995, 8.70571, 1.38 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 95/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -9.59352, 15.6801, 0.0, 0.92 ) }
    dend_10 { pt3dadd( -12.2411, 18.3227, 1.39775, 0.92 ) }
    dend_10 { pt3dadd( -14.6246, 20.7018, 2.6561, 0.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 98/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -9.59352, 15.6801, 0.0, 0.46 ) }
    dend_1 { pt3dadd( -15.3217, 13.7899, -0.018894, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -17.3, 13.1371, -0.0254195, 1.38 ) }
    dend_1 { pt3dadd( -22.4703, 11.431, -0.0424734, 0.46 ) }
    dend_1 { pt3dadd( -29.3394, 9.16437, -0.0651308, 0.46 ) }
    dend_1 { pt3dadd( -30.7725, 8.69146, -0.069858, 1.38 ) }
    dend_1 { pt3dadd( -31.5383, 8.43876, -0.072384, 1.38 ) }
    dend_1 { pt3dadd( -44.2726, 2.81743, -0.410063, 1.38 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 6/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -17.7058, 33.1952, 0.0, 0.92 ) }
    axon_1 { pt3dadd( -25.0238, 46.289, 0.0, 0.92 ) }
    axon_1 { pt3dadd( -32.3418, 59.3828, 0.0, 0.92 ) }
    // Section: dend_55, id: dend_55, parent: dend_49 (entry count 9/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -16.1686, 1.79272, -20.7849, 0.46 ) }
    dend_55 { pt3dadd( -16.8877, 4.7197, -21.8541, 0.46 ) }
    dend_55 { pt3dadd( -17.4152, 6.23346, -22.4926, 1.38 ) }
    dend_55 { pt3dadd( -17.8125, 7.41984, -23.0453, 0.46 ) }
    dend_55 { pt3dadd( -18.2273, 8.61182, -23.6322, 0.92 ) }
    dend_55 { pt3dadd( -18.677, 9.88781, -24.3016, 0.46 ) }
    dend_55 { pt3dadd( -18.8388, 10.3443, -24.5485, 0.46 ) }
    dend_55 { pt3dadd( -19.5024, 11.9994, -25.5365, 0.46 ) }
    dend_55 { pt3dadd( -20.2124, 13.9475, -26.737, 0.46 ) }
    dend_55 { pt3dadd( -20.3455, 14.3032, -26.9405, 0.46 ) }
    dend_55 { pt3dadd( -21.2725, 16.6558, -28.2425, 0.92 ) }
    dend_55 { pt3dadd( -21.2793, 16.6716, -28.25, 0.92 ) }
    dend_55 { pt3dadd( -21.9962, 18.3136, -28.9052, 0.46 ) }
    dend_55 { pt3dadd( -22.7396, 20.0655, -29.4621, 0.46 ) }
    dend_55 { pt3dadd( -24.158, 23.2073, -30.2614, 0.92 ) }
    dend_55 { pt3dadd( -24.3343, 23.5944, -30.3449, 0.92 ) }
    dend_55 { pt3dadd( -25.7114, 26.7027, -30.836, 0.46 ) }
    dend_55 { pt3dadd( -26.3865, 28.2498, -31.0337, 0.92 ) }
    dend_55 { pt3dadd( -27.2998, 30.438, -31.257, 0.46 ) }
    dend_55 { pt3dadd( -28.1034, 32.5102, -31.4477, 0.92 ) }
    dend_55 { pt3dadd( -28.2477, 32.9177, -31.488, 0.92 ) }
    dend_55 { pt3dadd( -29.3256, 36.1022, -31.8047, 0.46 ) }
    dend_55 { pt3dadd( -29.5424, 36.7643, -31.875, 0.92 ) }
    dend_55 { pt3dadd( -30.2772, 39.1217, -32.1644, 0.46 ) }
    dend_55 { pt3dadd( -30.8353, 40.9216, -32.3947, 0.92 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 34/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -16.1686, 1.79272, -20.7849, 0.46 ) }
    dend_50 { pt3dadd( -15.0567, 0.304, -21.1437, 0.46 ) }
    dend_50 { pt3dadd( -13.4206, -1.82365, -21.738, 0.46 ) }
    dend_50 { pt3dadd( -12.8874, -2.54868, -21.9483, 0.46 ) }
    dend_50 { pt3dadd( -11.4393, -4.48892, -22.5146, 1.38 ) }
    dend_50 { pt3dadd( -9.97456, -6.32756, -23.1419, 0.46 ) }
    dend_50 { pt3dadd( -8.79813, -7.6655, -23.6297, 0.46 ) }
    dend_50 { pt3dadd( -8.27071, -8.13469, -23.8275, 0.46 ) }
    dend_50 { pt3dadd( -7.17212, -8.9877, -24.2833, 1.38 ) }
    dend_50 { pt3dadd( -6.72147, -9.3066, -24.4603, 1.38 ) }
    dend_50 { pt3dadd( -4.87855, -10.5339, -25.2459, 0.46 ) }
    dend_50 { pt3dadd( -3.97292, -11.119, -25.634, 1.38 ) }
    dend_50 { pt3dadd( -0.680775, -13.4182, -27.0483, 0.46 ) }
    dend_50 { pt3dadd( 0.861755, -14.4877, -27.7663, 0.46 ) }
    dend_50 { pt3dadd( 2.07293, -15.2937, -28.355, 1.38 ) }
    dend_50 { pt3dadd( 4.20529, -16.7715, -29.4306, 0.46 ) }
    dend_50 { pt3dadd( 4.23349, -16.7919, -29.4453, 0.46 ) }
    dend_50 { pt3dadd( 5.86107, -18.0592, -30.3971, 0.92 ) }
    dend_50 { pt3dadd( 7.78848, -19.6269, -31.688, 0.46 ) }
    dend_50 { pt3dadd( 9.44884, -20.9658, -32.7589, 0.46 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 54/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 40.9409, -58.7911, -41.9637, 0.46 ) }
    dend_46 { pt3dadd( 40.2349, -60.9263, -41.5989, 0.46 ) }
    dend_46 { pt3dadd( 39.8008, -62.5517, -41.2816, 0.92 ) }
    dend_46 { pt3dadd( 38.5646, -67.8169, -40.1048, 0.46 ) }
    dend_46 { pt3dadd( 38.2686, -69.2048, -39.7834, 0.92 ) }
    dend_46 { pt3dadd( 37.4788, -72.907, -38.9259, 0.46 ) }
    dend_46 { pt3dadd( 37.2028, -74.2012, -38.6262, 0.92 ) }
    dend_46 { pt3dadd( 36.6555, -77.1897, -37.8895, 0.46 ) }
    dend_46 { pt3dadd( 36.1265, -80.7356, -36.9399, 0.46 ) }
    dend_46 { pt3dadd( 35.9817, -82.0132, -36.546, 0.92 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 64/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 40.9409, -58.7911, -41.9637, 0.46 ) }
    dend_43 { pt3dadd( 42.4954, -59.9376, -42.9433, 0.46 ) }
    dend_43 { pt3dadd( 44.9464, -61.871, -44.6203, 0.46 ) }
    dend_43 { pt3dadd( 46.4834, -63.0937, -45.7093, 1.38 ) }
    dend_43 { pt3dadd( 48.5605, -64.7152, -47.1778, 0.46 ) }
    dend_43 { pt3dadd( 49.134, -65.1473, -47.5801, 0.92 ) }
    dend_43 { pt3dadd( 50.8104, -66.4025, -48.7626, 0.46 ) }
    dend_43 { pt3dadd( 52.1506, -67.4194, -49.7208, 0.92 ) }
    dend_43 { pt3dadd( 53.288, -68.3351, -50.5738, 0.46 ) }
    dend_43 { pt3dadd( 54.3567, -69.1879, -51.3915, 1.38 ) }
    dend_43 { pt3dadd( 56.3411, -70.7393, -52.8628, 0.46 ) }
    dend_43 { pt3dadd( 56.6626, -70.9861, -53.0935, 0.46 ) }
    dend_43 { pt3dadd( 58.6663, -72.5652, -54.4916, 1.38 ) }
    dend_43 { pt3dadd( 58.9623, -72.8433, -54.7017, 1.38 ) }
    dend_43 { pt3dadd( 61.4739, -75.4872, -56.5876, 0.46 ) }
    dend_43 { pt3dadd( 62.407, -76.5895, -57.326, 1.38 ) }
    dend_43 { pt3dadd( 63.9001, -78.4697, -58.579, 0.46 ) }
    dend_43 { pt3dadd( 64.6489, -79.4477, -59.2257, 1.38 ) }
    dend_43 { pt3dadd( 66.794, -82.3557, -61.1032, 0.46 ) }
    dend_43 { pt3dadd( 67.6451, -83.4588, -61.8304, 1.38 ) }
    dend_43 { pt3dadd( 69.7291, -86.1175, -63.6657, 0.46 ) }
    dend_43 { pt3dadd( 70.6959, -87.3595, -64.5421, 1.38 ) }
    dend_43 { pt3dadd( 71.8492, -88.8562, -65.5683, 0.46 ) }
    dend_43 { pt3dadd( 72.4519, -89.6046, -66.1116, 1.38 ) }
    dend_43 { pt3dadd( 74.5281, -92.0651, -67.9355, 0.46 ) }
    dend_43 { pt3dadd( 75.3335, -93.0486, -68.6485, 0.46 ) }
    dend_43 { pt3dadd( 75.5868, -93.3664, -68.8812, 0.46 ) }
    dend_43 { pt3dadd( 76.7686, -94.9475, -69.9802, 0.92 ) }
    dend_43 { pt3dadd( 77.9549, -96.6175, -71.168, 0.46 ) }
    dend_43 { pt3dadd( 79.0706, -98.2703, -72.3079, 0.92 ) }
    dend_43 { pt3dadd( 80.1025, -99.8662, -73.3505, 0.46 ) }
    dend_43 { pt3dadd( 80.3399, -100.213, -73.5591, 0.46 ) }
    dend_43 { pt3dadd( 82.043, -102.628, -74.9673, 0.92 ) }
    dend_43 { pt3dadd( 82.4471, -103.19, -75.2744, 0.92 ) }
    dend_43 { pt3dadd( 84.3954, -105.861, -76.5413, 0.46 ) }
    dend_43 { pt3dadd( 84.4071, -105.876, -76.548, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( 85.7235, -107.592, -77.2228, 0.92 ) }
    dend_43 { pt3dadd( 87.1029, -109.379, -77.9444, 0.46 ) }
    dend_43 { pt3dadd( 87.9829, -110.508, -78.3954, 0.92 ) }
    dend_43 { pt3dadd( 88.8202, -111.608, -78.8276, 0.46 ) }
    dend_43 { pt3dadd( 90.1073, -113.293, -79.5068, 0.92 ) }
    dend_43 { pt3dadd( 91.8951, -115.624, -80.4839, 0.46 ) }
    dend_43 { pt3dadd( 93.4097, -117.577, -81.3123, 0.46 ) }
    dend_43 { pt3dadd( 94.0733, -118.401, -81.6551, 0.92 ) }
    dend_43 { pt3dadd( 94.5305, -118.951, -81.893, 0.92 ) }
    dend_43 { pt3dadd( 96.0133, -120.637, -82.591, 0.46 ) }
    dend_43 { pt3dadd( 96.3102, -120.975, -82.7259, 0.46 ) }
    dend_43 { pt3dadd( 97.774, -122.61, -83.3097, 0.92 ) }
    dend_43 { pt3dadd( 98.1536, -123.055, -83.4521, 0.92 ) }
    dend_43 { pt3dadd( 100.336, -125.733, -84.3078, 0.46 ) }
    dend_43 { pt3dadd( 101.459, -127.129, -84.7515, 0.92 ) }
    dend_43 { pt3dadd( 101.726, -127.5, -84.8642, 0.92 ) }
    dend_43 { pt3dadd( 103.766, -130.47, -85.7444, 0.46 ) }
    dend_43 { pt3dadd( 104.819, -132.129, -86.2274, 0.46 ) }
    dend_43 { pt3dadd( 105.601, -133.494, -86.5903, 0.92 ) }
    dend_43 { pt3dadd( 105.61, -133.512, -86.5946, 0.92 ) }
    dend_43 { pt3dadd( 107.274, -137.075, -87.4173, 0.46 ) }
    dend_43 { pt3dadd( 107.891, -138.426, -87.724, 0.92 ) }
    dend_43 { pt3dadd( 108.066, -138.845, -87.8142, 0.92 ) }
    dend_43 { pt3dadd( 109.816, -143.118, -88.7048, 0.46 ) }
    dend_43 { pt3dadd( 109.992, -143.547, -88.7979, 0.46 ) }
    dend_43 { pt3dadd( 110.681, -145.226, -89.163, 0.92 ) }
    dend_43 { pt3dadd( 111.289, -146.812, -89.581, 0.46 ) }
    dend_43 { pt3dadd( 111.453, -147.238, -89.7047, 0.46 ) }
    dend_43 { pt3dadd( 112.317, -149.247, -90.3679, 0.92 ) }
    dend_43 { pt3dadd( 113.824, -152.351, -91.4945, 0.46 ) }
    dend_43 { pt3dadd( 114.923, -154.391, -92.2637, 0.92 ) }
    dend_43 { pt3dadd( 116.238, -156.742, -93.1381, 0.46 ) }
    dend_43 { pt3dadd( 117.315, -158.638, -93.8019, 0.92 ) }
    dend_43 { pt3dadd( 119.083, -161.714, -94.7969, 0.46 ) }
    dend_43 { pt3dadd( 119.822, -163.009, -95.1663, 0.92 ) }
    dend_43 { pt3dadd( 121.646, -166.132, -95.8366, 0.46 ) }
    dend_43 { pt3dadd( 122.846, -168.221, -96.1557, 0.46 ) }
    dend_43 { pt3dadd( 123.443, -169.355, -96.23, 0.46 ) }
    dend_43 { pt3dadd( 124.565, -171.673, -96.2923, 0.46 ) }
    dend_43 { pt3dadd( 125.626, -173.999, -96.2713, 0.92 ) }
    dend_43 { pt3dadd( 126.517, -175.946, -96.2797, 0.46 ) }
    dend_43 { pt3dadd( 127.292, -177.557, -96.3338, 0.92 ) }
    dend_43 { pt3dadd( 130.851, -184.388, -96.8533, 0.46 ) }
    dend_43 { pt3dadd( 131.945, -186.366, -97.1184, 0.92 ) }
    dend_43 { pt3dadd( 132.241, -186.872, -97.2173, 0.92 ) }
    dend_43 { pt3dadd( 133.818, -189.435, -97.864, 0.46 ) }
    dend_43 { pt3dadd( 134.777, -190.985, -98.3035, 0.46 ) }
    dend_43 { pt3dadd( 135.359, -191.894, -98.583, 0.92 ) }
    dend_43 { pt3dadd( 136.553, -193.785, -99.1691, 0.46 ) }
    dend_43 { pt3dadd( 137.207, -194.844, -99.4528, 0.92 ) }
    dend_43 { pt3dadd( 140.287, -199.985, -100.62, 0.46 ) }
    dend_43 { pt3dadd( 141.516, -202.046, -100.988, 0.92 ) }
    dend_43 { pt3dadd( 141.82, -202.549, -101.077, 0.92 ) }
    dend_43 { pt3dadd( 143.926, -205.982, -101.713, 0.46 ) }
    dend_43 { pt3dadd( 144.753, -207.25, -101.969, 0.92 ) }
    dend_43 { pt3dadd( 146.685, -210.04, -102.598, 0.46 ) }
    dend_43 { pt3dadd( 147.739, -211.518, -102.952, 0.92 ) }
    dend_43 { pt3dadd( 149.992, -214.602, -103.671, 0.46 ) }
    dend_43 { pt3dadd( 151.152, -216.204, -104.019, 0.92 ) }
    dend_43 { pt3dadd( 153.16, -218.968, -104.613, 0.46 ) }
    dend_43 { pt3dadd( 154.466, -220.797, -104.991, 0.92 ) }
    dend_43 { pt3dadd( 157.137, -224.486, -105.69, 0.46 ) }
    dend_43 { pt3dadd( 158.621, -226.57, -106.054, 0.92 ) }
    dend_43 { pt3dadd( 160.694, -229.439, -106.439, 0.46 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 21.437, -489.08, -86.9883, 0.46 ) }
    dend_38 { pt3dadd( 22.3343, -489.407, -87.3366, 0.46 ) }
    dend_38 { pt3dadd( 22.5916, -489.514, -87.4362, 0.46 ) }
    dend_38 { pt3dadd( 24.8424, -490.898, -88.3263, 0.46 ) }
    dend_38 { pt3dadd( 25.1281, -491.117, -88.4412, 0.92 ) }
    dend_38 { pt3dadd( 26.3909, -492.142, -88.9527, 0.46 ) }
    dend_38 { pt3dadd( 26.8579, -492.546, -89.1297, 0.92 ) }
    dend_38 { pt3dadd( 27.0583, -492.754, -89.2046, 0.92 ) }
    dend_38 { pt3dadd( 28.3686, -494.299, -89.6829, 0.46 ) }
    dend_38 { pt3dadd( 29.1537, -495.38, -89.9627, 0.46 ) }
    dend_38 { pt3dadd( 29.3324, -495.612, -90.0269, 0.46 ) }
    dend_38 { pt3dadd( 30.4236, -496.824, -90.4327, 0.92 ) }
    dend_38 { pt3dadd( 30.587, -496.979, -90.5053, 0.92 ) }
    dend_38 { pt3dadd( 31.8585, -498.047, -91.1338, 0.46 ) }
    dend_38 { pt3dadd( 32.6874, -498.708, -91.6568, 0.92 ) }
    dend_38 { pt3dadd( 32.8867, -498.869, -91.8075, 0.92 ) }
    dend_38 { pt3dadd( 33.8719, -499.774, -92.7404, 0.46 ) }
    dend_38 { pt3dadd( 34.5984, -500.482, -93.6224, 0.46 ) }
    dend_38 { pt3dadd( 34.6084, -500.494, -93.6361, 0.46 ) }
    dend_38 { pt3dadd( 35.5282, -501.716, -95.0453, 0.46 ) }
    dend_38 { pt3dadd( 35.6559, -501.903, -95.2398, 0.46 ) }
    dend_38 { pt3dadd( 36.1838, -502.751, -95.915, 0.46 ) }
    dend_38 { pt3dadd( 36.3284, -502.976, -96.0503, 0.46 ) }
    dend_38 { pt3dadd( 37.1039, -503.897, -96.5213, 0.92 ) }
    dend_38 { pt3dadd( 38.2366, -505.01, -97.0868, 0.46 ) }
    dend_38 { pt3dadd( 38.4151, -505.145, -97.1623, 0.92 ) }
    dend_38 { pt3dadd( 39.8187, -506.162, -97.7238, 0.46 ) }
    dend_38 { pt3dadd( 40.7835, -506.802, -98.0757, 0.46 ) }
    dend_38 { pt3dadd( 42.5704, -507.951, -98.7351, 0.46 ) }
    dend_38 { pt3dadd( 42.884, -508.129, -98.8538, 0.46 ) }
    dend_38 { pt3dadd( 44.4756, -509.012, -99.4456, 0.46 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 95/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 21.437, -489.08, -86.9883, 0.46 ) }
    dend_37 { pt3dadd( 22.1121, -493.11, -87.6148, 0.46 ) }
    dend_37 { pt3dadd( 23.4749, -500.606, -88.7805, 0.46 ) }
    dend_37 { pt3dadd( 23.672, -501.629, -88.9363, 0.92 ) }
    dend_37 { pt3dadd( 23.9807, -503.246, -89.1758, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( 25.2596, -511.511, -90.2997, 0.46 ) }
    dend_37 { pt3dadd( 25.5738, -514.056, -90.6227, 0.92 ) }
    dend_37 { pt3dadd( 26.0856, -519.088, -91.2014, 0.46 ) }
    dend_37 { pt3dadd( 26.2737, -521.655, -91.4638, 0.92 ) }
    dend_37 { pt3dadd( 26.3078, -522.311, -91.5279, 0.92 ) }
    dend_37 { pt3dadd( 26.4509, -530.817, -92.3577, 0.46 ) }
    dend_37 { pt3dadd( 26.3181, -534.255, -92.6618, 0.46 ) }
    dend_37 { pt3dadd( 26.2448, -535.081, -92.7349, 0.46 ) }
    dend_37 { pt3dadd( 25.8615, -538.439, -93.0538, 0.92 ) }
    dend_37 { pt3dadd( 25.7717, -539.263, -93.1323, 0.92 ) }
    dend_37 { pt3dadd( 25.1305, -546.077, -93.8043, 0.46 ) }
    dend_37 { pt3dadd( 25.0715, -546.73, -93.8753, 0.46 ) }
    dend_37 { pt3dadd( 24.3545, -554.34, -94.7372, 0.46 ) }
    dend_37 { pt3dadd( 24.2663, -555.161, -94.8343, 0.46 ) }
    dend_37 { pt3dadd( 23.5115, -560.907, -95.5291, 0.92 ) }
    dend_37 { pt3dadd( 23.3946, -561.726, -95.6138, 0.92 ) }
    dend_37 { pt3dadd( 22.5779, -566.901, -96.0724, 0.46 ) }
    dend_37 { pt3dadd( 22.4085, -567.713, -96.1245, 0.46 ) }
    dend_37 { pt3dadd( 21.5288, -571.144, -96.2168, 0.46 ) }
    dend_37 { pt3dadd( 21.3696, -571.783, -96.2298, 0.46 ) }
    dend_37 { pt3dadd( 20.0331, -576.78, -96.3009, 0.92 ) }
    dend_37 { pt3dadd( 19.8203, -577.583, -96.3049, 0.92 ) }
    dend_37 { pt3dadd( 17.8877, -584.859, -96.2228, 0.46 ) }
    dend_37 { pt3dadd( 15.322, -594.761, -96.0914, 0.46 ) }
    dend_37 { pt3dadd( 14.6863, -597.28, -96.0486, 0.92 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 25/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 44.763, -60.8951, 5.52153, 0.92 ) }
    dend_32 { pt3dadd( 49.7645, -71.0235, 8.08653, 0.92 ) }
    dend_32 { pt3dadd( 55.9589, -80.0765, 11.6676, 0.92 ) }
    dend_32 { pt3dadd( 61.0441, -90.3097, 13.6023, 0.92 ) }
    dend_32 { pt3dadd( 66.2614, -100.671, 13.569, 0.92 ) }
    dend_32 { pt3dadd( 72.0829, -110.571, 12.0411, 0.92 ) }
    dend_32 { pt3dadd( 77.9363, -120.565, 12.3295, 0.92 ) }
    dend_32 { pt3dadd( 83.425, -130.774, 12.0167, 0.92 ) }
    dend_32 { pt3dadd( 88.4147, -141.14, 10.4874, 0.92 ) }
    dend_32 { pt3dadd( 93.1697, -151.153, 7.0813, 0.92 ) }
    dend_32 { pt3dadd( 99.492, -160.011, 3.20978, 0.92 ) }
    dend_32 { pt3dadd( 104.028, -169.091, -2.33072, 0.92 ) }
    dend_32 { pt3dadd( 109.159, -178.87, -5.8362, 0.92 ) }
    dend_32 { pt3dadd( 113.042, -189.619, -7.9555, 0.92 ) }
    dend_32 { pt3dadd( 117.897, -200.162, -8.18606, 0.92 ) }
    dend_32 { pt3dadd( 123.084, -210.46, -6.96617, 0.92 ) }
    dend_32 { pt3dadd( 128.056, -220.913, -7.82504, 0.92 ) }
    dend_32 { pt3dadd( 131.524, -232.003, -8.41345, 0.92 ) }
    dend_32 { pt3dadd( 137.462, -241.682, -10.6779, 0.92 ) }
    dend_32 { pt3dadd( 142.848, -251.792, -12.481, 0.92 ) }
    dend_32 { pt3dadd( 148.397, -261.967, -12.7904, 0.92 ) }
    dend_32 { pt3dadd( 154.081, -272.035, -12.0343, 0.92 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 47/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 44.763, -60.8951, 5.52153, 0.46 ) }
    dend_29 { pt3dadd( 51.6614, -64.3438, 4.7416, 0.92 ) }
    dend_29 { pt3dadd( 58.8487, -67.2099, 4.64402, 0.92 ) }
    dend_29 { pt3dadd( 66.3734, -68.8369, 4.06204, 0.92 ) }
    dend_29 { pt3dadd( 73.6075, -71.5679, 4.27509, 0.92 ) }
    dend_29 { pt3dadd( 81.0981, -73.4418, 4.40878, 0.92 ) }
    dend_29 { pt3dadd( 88.6832, -74.821, 4.74936, 0.92 ) }
    dend_29 { pt3dadd( 96.2245, -75.9919, 3.60843, 0.92 ) }
    dend_29 { pt3dadd( 103.871, -76.1162, 2.62256, 0.92 ) }
    dend_29 { pt3dadd( 111.255, -76.0622, 0.402812, 0.92 ) }
    dend_29 { pt3dadd( 118.547, -75.5636, -2.04865, 0.92 ) }
    dend_29 { pt3dadd( 125.699, -75.8091, -4.92323, 0.92 ) }
    dend_29 { pt3dadd( 132.573, -75.4451, -8.39555, 0.92 ) }
    dend_29 { pt3dadd( 139.485, -75.25, -11.806, 0.92 ) }
    dend_29 { pt3dadd( 146.006, -76.4359, -15.7633, 0.92 ) }
    dend_29 { pt3dadd( 152.15, -78.6608, -19.9007, 0.92 ) }
    dend_29 { pt3dadd( 158.483, -80.792, -23.7921, 0.92 ) }
    dend_29 { pt3dadd( 165.86, -81.443, -25.9485, 0.92 ) }
    dend_29 { pt3dadd( 172.926, -81.9064, -29.0033, 0.92 ) }
    dend_29 { pt3dadd( 180.484, -82.5719, -30.3903, 0.92 ) }
    dend_29 { pt3dadd( 188.075, -83.5907, -31.319, 0.92 ) }
    dend_29 { pt3dadd( 195.662, -83.1653, -32.6226, 0.92 ) }
    dend_29 { pt3dadd( 203.268, -83.2905, -33.8857, 0.92 ) }
    dend_29 { pt3dadd( 210.699, -82.9406, -35.9082, 0.92 ) }
    dend_29 { pt3dadd( 218.316, -82.1866, -36.844, 0.92 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 72/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 220.394, -277.501, 101.301, 0.92 ) }
    dend_27 { pt3dadd( 223.581, -285.247, 105.468, 0.92 ) }
    dend_27 { pt3dadd( 227.027, -292.088, 110.8, 0.92 ) }
    dend_27 { pt3dadd( 231.712, -298.782, 115.275, 0.92 ) }
    dend_27 { pt3dadd( 237.301, -304.7, 119.747, 0.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 77/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 220.394, -277.501, 101.301, 0.46 ) }
    dend_26 { pt3dadd( 228.663, -283.65, 102.973, 0.92 ) }
    dend_26 { pt3dadd( 237.183, -288.821, 106.028, 0.92 ) }
    dend_26 { pt3dadd( 246.152, -293.572, 108.334, 0.92 ) }
    dend_26 { pt3dadd( 255.661, -296.886, 110.861, 0.92 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 82/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -14.6246, 20.7018, 2.6561, 0.46 ) }
    dend_16 { pt3dadd( -18.9583, 24.313, 2.36157, 0.46 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 84/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -14.6246, 20.7018, 2.6561, 0.46 ) }
    dend_11 { pt3dadd( -13.5346, 21.7471, 3.77193, 0.46 ) }
    dend_11 { pt3dadd( -11.9372, 22.8771, 5.32842, 0.92 ) }
    dend_11 { pt3dadd( -11.0705, 23.5042, 6.059, 0.46 ) }
    dend_11 { pt3dadd( -9.87724, 24.3956, 7.03101, 0.92 ) }
    dend_11 { pt3dadd( -9.49121, 24.6913, 7.31799, 0.92 ) }
    dend_11 { pt3dadd( -7.96807, 25.9071, 8.38917, 0.46 ) }
    dend_11 { pt3dadd( -6.70722, 26.8014, 9.26159, 0.92 ) }
    dend_11 { pt3dadd( -4.78081, 28.0418, 10.4457, 0.46 ) }
    dend_11 { pt3dadd( -4.4543, 28.2663, 10.6144, 0.46 ) }
    dend_11 { pt3dadd( -3.20491, 29.307, 11.1874, 0.92 ) }
    dend_11 { pt3dadd( -2.80576, 29.6591, 11.351, 0.92 ) }
    dend_11 { pt3dadd( 2.86099, 34.3757, 17.4381, 0.92 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 97/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -44.2726, 2.81743, -0.410063, 0.92 ) }
    dend_5 { pt3dadd( -54.5362, -0.917324, -1.08116, 0.92 ) }
    dend_5 { pt3dadd( -65.2829, -2.82339, -0.771355, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_5 { pt3dadd( -75.9599, -5.09279, -0.400797, 0.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 1/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -44.2726, 2.81743, -0.410063, 0.46 ) }
    dend_2 { pt3dadd( -50.8113, 0.254838, -0.407692, 0.92 ) }
    dend_2 { pt3dadd( -57.113, -2.82159, -0.961057, 0.92 ) }
    dend_2 { pt3dadd( -62.9812, -6.39064, -2.54921, 0.92 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -30.8353, 40.9216, -32.3947, 0.46 ) }
    dend_57 { pt3dadd( -31.9582, 43.0894, -33.1807, 0.46 ) }
    dend_57 { pt3dadd( -32.9629, 44.9735, -33.9388, 0.46 ) }
    dend_57 { pt3dadd( -33.5709, 46.2199, -34.3956, 0.92 ) }
    dend_57 { pt3dadd( -34.4736, 48.2369, -35.146, 0.46 ) }
    dend_57 { pt3dadd( -34.6627, 48.694, -35.3355, 0.46 ) }
    dend_57 { pt3dadd( -35.3053, 50.4852, -36.0684, 0.46 ) }
    dend_57 { pt3dadd( -35.5156, 51.0629, -36.3282, 0.46 ) }
    dend_57 { pt3dadd( -36.2631, 52.7993, -37.1913, 0.92 ) }
    dend_57 { pt3dadd( -37.29, 54.9528, -38.3291, 0.46 ) }
    dend_57 { pt3dadd( -38.6128, 57.2754, -39.6052, 0.46 ) }
    dend_57 { pt3dadd( -39.4387, 58.5723, -40.35, 0.92 ) }
    dend_57 { pt3dadd( -42.0975, 62.1735, -42.4893, 0.46 ) }
    dend_57 { pt3dadd( -43.6001, 64.0289, -43.6493, 0.46 ) }
    dend_57 { pt3dadd( -43.9152, 64.3815, -43.8815, 0.46 ) }
    dend_57 { pt3dadd( -45.2855, 65.8627, -44.7915, 0.92 ) }
    dend_57 { pt3dadd( -46.9792, 67.9357, -45.9561, 0.46 ) }
    dend_57 { pt3dadd( -47.9474, 69.6395, -46.7225, 0.92 ) }
    dend_57 { pt3dadd( -49.1921, 73.0914, -47.9447, 0.46 ) }
    dend_57 { pt3dadd( -49.1971, 73.113, -47.951, 0.46 ) }
    dend_57 { pt3dadd( -49.5269, 75.0488, -48.4265, 0.92 ) }
    dend_57 { pt3dadd( -50.0034, 79.4951, -49.3846, 0.46 ) }
    dend_57 { pt3dadd( -50.4006, 85.0952, -50.4446, 0.46 ) }
    dend_57 { pt3dadd( -50.4027, 85.1293, -50.4506, 0.46 ) }
    dend_57 { pt3dadd( -50.727, 88.7313, -51.0877, 0.46 ) }
    dend_57 { pt3dadd( -51.0619, 91.4118, -51.5821, 0.92 ) }
    dend_57 { pt3dadd( -51.8217, 95.1747, -52.3093, 0.46 ) }
    dend_57 { pt3dadd( -51.8315, 95.2073, -52.3155, 0.46 ) }
    dend_57 { pt3dadd( -52.6501, 97.3089, -52.7506, 0.92 ) }
    dend_57 { pt3dadd( -53.9083, 100.354, -53.3824, 0.46 ) }
    dend_57 { pt3dadd( -54.1807, 100.953, -53.5072, 0.46 ) }
    dend_57 { pt3dadd( -56.6044, 106.119, -54.5755, 0.46 ) }
    dend_57 { pt3dadd( -56.8224, 106.597, -54.661, 0.46 ) }
    dend_57 { pt3dadd( -57.9017, 109.077, -55.1122, 0.92 ) }
    dend_57 { pt3dadd( -59.3409, 112.436, -55.7362, 0.46 ) }
    dend_57 { pt3dadd( -59.699, 113.196, -55.9042, 0.92 ) }
    dend_57 { pt3dadd( -60.0003, 113.771, -56.063, 0.92 ) }
    dend_57 { pt3dadd( -62.074, 117.194, -57.3058, 0.46 ) }
    dend_57 { pt3dadd( -63.7266, 119.345, -58.3257, 0.46 ) }
    dend_57 { pt3dadd( -64.4577, 119.922, -58.811, 0.92 ) }
    dend_57 { pt3dadd( -67.3069, 121.031, -60.7063, 0.46 ) }
    dend_57 { pt3dadd( -67.7374, 121.057, -60.9976, 0.46 ) }
    dend_57 { pt3dadd( -68.8192, 120.924, -61.7302, 0.46 ) }
    dend_57 { pt3dadd( -71.138, 120.368, -63.3846, 0.92 ) }
    dend_57 { pt3dadd( -73.274, 119.794, -64.96, 0.46 ) }
    dend_57 { pt3dadd( -73.6779, 119.713, -65.2776, 0.46 ) }
    dend_57 { pt3dadd( -76.642, 119.512, -67.9406, 0.92 ) }
    dend_57 { pt3dadd( -78.6023, 119.691, -69.917, 0.46 ) }
    dend_57 { pt3dadd( -80.0589, 120.319, -71.6966, 0.92 ) }
    dend_57 { pt3dadd( -80.3658, 120.615, -72.199, 0.92 ) }
    dend_57 { pt3dadd( -81.4367, 122.431, -74.8389, 0.46 ) }
    dend_57 { pt3dadd( -82.2727, 124.731, -77.7831, 0.46 ) }
    dend_57 { pt3dadd( -82.2885, 124.804, -77.8686, 0.46 ) }
    dend_57 { pt3dadd( -82.7368, 127.865, -81.4086, 0.46 ) }
    dend_57 { pt3dadd( -83.0439, 130.636, -84.5885, 0.46 ) }
    dend_57 { pt3dadd( -83.2746, 133.313, -87.5903, 1.38 ) }
    dend_57 { pt3dadd( -83.4086, 135.966, -90.4524, 0.46 ) }
    dend_57 { pt3dadd( -83.4102, 135.99, -90.4769, 0.46 ) }
    dend_57 { pt3dadd( -83.6342, 137.538, -91.9308, 0.46 ) }
    dend_57 { pt3dadd( -83.6391, 137.556, -91.9449, 0.46 ) }
    dend_57 { pt3dadd( -85.1377, 141.028, -94.1653, 0.46 ) }
    dend_57 { pt3dadd( -85.1484, 141.046, -94.1746, 0.46 ) }
    dend_57 { pt3dadd( -86.312, 142.856, -94.9591, 0.92 ) }
    dend_57 { pt3dadd( -88.661, 146.43, -96.1279, 0.46 ) }
    dend_57 { pt3dadd( -90.5016, 149.183, -96.8162, 0.46 ) }
    dend_57 { pt3dadd( -91.6523, 150.881, -97.1392, 0.92 ) }
    dend_57 { pt3dadd( -94.0064, 154.219, -97.5734, 0.46 ) }
    dend_57 { pt3dadd( -95.5345, 156.41, -97.766, 0.92 ) }
    dend_57 { pt3dadd( -98.6629, 161.053, -97.9569, 0.46 ) }
    dend_57 { pt3dadd( -99.0305, 161.627, -97.9468, 0.46 ) }
    dend_57 { pt3dadd( -100.945, 164.566, -97.8353, 0.46 ) }
    dend_57 { pt3dadd( -101.889, 166.008, -97.7997, 0.92 ) }
    dend_57 { pt3dadd( -105.12, 170.81, -97.7157, 0.46 ) }
    dend_57 { pt3dadd( -105.94, 171.992, -97.7042, 0.92 ) }
    dend_57 { pt3dadd( -110.594, 178.573, -97.6901, 0.46 ) }
    dend_57 { pt3dadd( -114.747, 184.387, -97.7141, 0.46 ) }
    dend_57 { pt3dadd( -117.422, 188.101, -97.7644, 0.46 ) }
    dend_57 { pt3dadd( -117.923, 188.795, -97.7793, 0.92 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 83/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -30.8353, 40.9216, -32.3947, 0.46 ) }
    dend_56 { pt3dadd( -29.9972, 46.7668, -33.311, 0.46 ) }
    dend_56 { pt3dadd( -29.6736, 49.0822, -33.618, 0.46 ) }
    dend_56 { pt3dadd( -29.4934, 50.3834, -33.8321, 0.92 ) }
    dend_56 { pt3dadd( -29.0599, 53.7141, -34.4344, 0.46 ) }
    dend_56 { pt3dadd( -28.4523, 57.6932, -35.2176, 0.46 ) }
    dend_56 { pt3dadd( -28.3706, 58.1993, -35.3204, 0.46 ) }
    dend_56 { pt3dadd( -27.2876, 63.8849, -36.5435, 0.46 ) }
    dend_56 { pt3dadd( -26.6162, 67.1714, -37.2604, 0.46 ) }
    dend_56 { pt3dadd( -26.5108, 67.6598, -37.3676, 0.46 ) }
    dend_56 { pt3dadd( -25.7159, 71.3598, -38.1736, 0.46 ) }
    dend_56 { pt3dadd( -25.587, 71.99, -38.3162, 0.46 ) }
    dend_56 { pt3dadd( -24.6548, 75.9718, -39.2147, 0.46 ) }
    dend_56 { pt3dadd( -24.5133, 76.4483, -39.3289, 0.46 ) }
    dend_56 { pt3dadd( -24.2598, 77.2418, -39.4379, 0.92 ) }
    // Section: dend_54, id: dend_54, parent: dend_50 (entry count 98/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 9.44884, -20.9658, -32.7589, 0.46 ) }
    dend_54 { pt3dadd( 10.7933, -19.2432, -33.1509, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_54 { pt3dadd( 12.438, -17.1361, -33.6303, 0.92 ) }
    dend_54 { pt3dadd( 14.5292, -14.457, -34.2399, 0.46 ) }
    dend_54 { pt3dadd( 15.7005, -12.9564, -34.5813, 0.46 ) }
    dend_54 { pt3dadd( 16.9716, -11.3279, -34.9518, 0.92 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 4/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 9.44884, -20.9658, -32.7589, 0.46 ) }
    dend_51 { pt3dadd( 7.94213, -21.2117, -35.9078, 0.46 ) }
    dend_51 { pt3dadd( 6.78193, -21.4564, -38.1663, 0.46 ) }
    dend_51 { pt3dadd( 5.51407, -21.9885, -40.3843, 0.92 ) }
    dend_51 { pt3dadd( 4.39773, -22.5635, -42.1213, 0.46 ) }
    dend_51 { pt3dadd( 4.04105, -22.7895, -42.6386, 0.46 ) }
    dend_51 { pt3dadd( 2.75886, -23.6923, -44.4273, 0.46 ) }
    dend_51 { pt3dadd( 1.11377, -24.8603, -46.5449, 0.92 ) }
    dend_51 { pt3dadd( -0.924771, -26.5319, -48.9951, 0.46 ) }
    dend_51 { pt3dadd( -1.95467, -27.3766, -50.0959, 0.92 ) }
    dend_51 { pt3dadd( -4.39657, -29.166, -52.4746, 0.46 ) }
    dend_51 { pt3dadd( -4.95445, -29.5419, -52.9989, 1.38 ) }
    dend_51 { pt3dadd( -6.76936, -30.5955, -54.5912, 0.46 ) }
    dend_51 { pt3dadd( -6.7859, -30.604, -54.6048, 0.46 ) }
    dend_51 { pt3dadd( -9.58138, -31.9004, -56.8093, 0.92 ) }
    dend_51 { pt3dadd( -11.6055, -32.7468, -58.3197, 0.46 ) }
    dend_51 { pt3dadd( -13.1862, -33.5301, -59.446, 0.46 ) }
    dend_51 { pt3dadd( -13.6829, -33.8051, -59.7972, 0.46 ) }
    dend_51 { pt3dadd( -15.2819, -34.8687, -60.8956, 0.92 ) }
    dend_51 { pt3dadd( -18.6402, -37.3602, -63.2145, 0.46 ) }
    dend_51 { pt3dadd( -20.5436, -38.9762, -64.534, 1.38 ) }
    dend_51 { pt3dadd( -23.73, -42.0191, -66.7164, 0.46 ) }
    dend_51 { pt3dadd( -24.1467, -42.4527, -67.0134, 0.46 ) }
    dend_51 { pt3dadd( -25.8991, -44.3878, -68.3463, 0.92 ) }
    dend_51 { pt3dadd( -26.531, -45.1423, -68.848, 1.38 ) }
    dend_51 { pt3dadd( -26.829, -45.504, -69.0773, 1.38 ) }
    dend_51 { pt3dadd( -29.3675, -48.7345, -71.0849, 0.46 ) }
    dend_51 { pt3dadd( -29.9817, -49.4569, -71.5415, 0.46 ) }
    dend_51 { pt3dadd( -30.8821, -50.5561, -72.2474, 1.38 ) }
    dend_51 { pt3dadd( -33.9679, -54.3265, -74.6848, 0.46 ) }
    dend_51 { pt3dadd( -35.2454, -55.8875, -75.7215, 1.38 ) }
    dend_51 { pt3dadd( -37.6123, -58.5252, -77.734, 0.46 ) }
    dend_51 { pt3dadd( -38.9466, -59.9282, -78.8433, 1.38 ) }
    dend_51 { pt3dadd( -40.6672, -61.7169, -80.2945, 0.46 ) }
    dend_51 { pt3dadd( -41.6685, -62.7788, -81.2272, 0.92 ) }
    dend_51 { pt3dadd( -43.1235, -64.2246, -82.7823, 0.46 ) }
    dend_51 { pt3dadd( -45.1754, -66.2027, -85.1831, 0.46 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 41/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 160.694, -229.439, -106.439, 0.46 ) }
    dend_45 { pt3dadd( 162.551, -233.395, -105.701, 0.46 ) }
    dend_45 { pt3dadd( 163.656, -235.605, -105.363, 0.46 ) }
    dend_45 { pt3dadd( 164.41, -237.031, -105.176, 0.92 ) }
    dend_45 { pt3dadd( 165.741, -239.398, -104.91, 0.46 ) }
    dend_45 { pt3dadd( 166.467, -240.564, -104.822, 0.92 ) }
    dend_45 { pt3dadd( 168.761, -244.008, -104.643, 0.46 ) }
    dend_45 { pt3dadd( 169.571, -245.108, -104.649, 0.92 ) }
    dend_45 { pt3dadd( 170.395, -246.205, -104.662, 0.46 ) }
    dend_45 { pt3dadd( 171.663, -247.826, -104.694, 0.92 ) }
    dend_45 { pt3dadd( 174.349, -251.31, -104.755, 0.46 ) }
    dend_45 { pt3dadd( 175.573, -252.958, -104.772, 0.92 ) }
    dend_45 { pt3dadd( 178.809, -257.392, -104.804, 0.46 ) }
    dend_45 { pt3dadd( 180.784, -260.121, -104.789, 0.46 ) }
    dend_45 { pt3dadd( 182.148, -262.026, -104.758, 0.92 ) }
    dend_45 { pt3dadd( 184.357, -265.189, -104.663, 0.46 ) }
    dend_45 { pt3dadd( 186.401, -268.213, -104.528, 0.46 ) }
    dend_45 { pt3dadd( 186.639, -268.566, -104.511, 0.92 ) }
    dend_45 { pt3dadd( 189.017, -271.997, -104.358, 0.46 ) }
    dend_45 { pt3dadd( 189.028, -272.012, -104.357, 0.46 ) }
    dend_45 { pt3dadd( 189.283, -272.351, -104.327, 0.92 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 62/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 160.694, -229.439, -106.439, 0.46 ) }
    dend_44 { pt3dadd( 163.397, -231.67, -108.304, 0.46 ) }
    dend_44 { pt3dadd( 165.109, -232.992, -109.445, 0.46 ) }
    dend_44 { pt3dadd( 166.529, -234.199, -110.337, 0.46 ) }
    dend_44 { pt3dadd( 166.841, -234.484, -110.513, 0.46 ) }
    dend_44 { pt3dadd( 168.966, -236.44, -111.63, 0.92 ) }
    dend_44 { pt3dadd( 169.284, -236.732, -111.785, 0.92 ) }
    dend_44 { pt3dadd( 170.787, -238.12, -112.495, 0.46 ) }
    dend_44 { pt3dadd( 173.143, -240.202, -113.5, 0.46 ) }
    dend_44 { pt3dadd( 176.099, -242.757, -114.645, 0.46 ) }
    dend_44 { pt3dadd( 176.897, -243.431, -114.939, 0.92 ) }
    dend_44 { pt3dadd( 180.175, -246.172, -116.064, 0.46 ) }
    dend_44 { pt3dadd( 182.166, -247.788, -116.739, 0.46 ) }
    dend_44 { pt3dadd( 184.0, -249.226, -117.35, 0.46 ) }
    dend_44 { pt3dadd( 185.383, -250.267, -117.805, 0.92 ) }
    dend_44 { pt3dadd( 188.231, -252.359, -118.721, 0.46 ) }
    dend_44 { pt3dadd( 189.642, -253.343, -119.187, 0.92 ) }
    dend_44 { pt3dadd( 192.326, -255.116, -120.085, 0.46 ) }
    dend_44 { pt3dadd( 193.19, -255.66, -120.398, 1.38 ) }
    dend_44 { pt3dadd( 195.052, -256.821, -121.139, 0.46 ) }
    dend_44 { pt3dadd( 196.587, -257.745, -121.791, 0.92 ) }
    dend_44 { pt3dadd( 198.951, -259.065, -122.858, 0.46 ) }
    dend_44 { pt3dadd( 201.933, -260.603, -124.247, 0.46 ) }
    dend_44 { pt3dadd( 204.654, -261.893, -125.552, 0.46 ) }
    dend_44 { pt3dadd( 206.236, -262.607, -126.363, 0.46 ) }
    dend_44 { pt3dadd( 207.683, -263.221, -127.181, 0.92 ) }
    dend_44 { pt3dadd( 210.906, -264.617, -129.07, 0.46 ) }
    dend_44 { pt3dadd( 212.003, -265.094, -129.727, 0.92 ) }
    dend_44 { pt3dadd( 213.694, -265.739, -130.796, 0.46 ) }
    dend_44 { pt3dadd( 216.063, -266.557, -132.333, 0.46 ) }
    dend_44 { pt3dadd( 217.87, -267.094, -133.599, 0.46 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 93/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 154.081, -272.035, -12.0343, 0.92 ) }
    dend_34 { pt3dadd( 157.793, -280.18, -12.5181, 0.92 ) }
    dend_34 { pt3dadd( 160.928, -288.559, -11.9727, 0.92 ) }
    dend_34 { pt3dadd( 165.344, -296.315, -11.4613, 0.92 ) }
    dend_34 { pt3dadd( 170.677, -303.465, -11.3118, 0.92 ) }
    dend_34 { pt3dadd( 174.502, -311.517, -10.5366, 0.92 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 99/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 154.081, -272.035, -12.0343, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_33 { pt3dadd( 157.653, -278.152, -12.7335, 0.92 ) }
    dend_33 { pt3dadd( 160.786, -284.346, -14.3723, 0.92 ) }
    dend_33 { pt3dadd( 163.4, -290.578, -16.6754, 0.92 ) }
    dend_33 { pt3dadd( 166.597, -296.575, -18.8288, 0.92 ) }
    dend_33 { pt3dadd( 170.269, -302.152, -21.2903, 0.92 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 5/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 218.316, -82.1866, -36.844, 0.92 ) }
    dend_31 { pt3dadd( 229.206, -83.2319, -40.6761, 0.92 ) }
    dend_31 { pt3dadd( 240.679, -84.4162, -41.7824, 0.92 ) }
    dend_31 { pt3dadd( 252.156, -83.7188, -43.176, 0.92 ) }
    dend_31 { pt3dadd( 263.542, -82.9599, -45.1583, 0.92 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 218.316, -82.1866, -36.844, 0.46 ) }
    dend_30 { pt3dadd( 223.929, -82.8007, -38.0172, 0.92 ) }
    dend_30 { pt3dadd( 229.5, -84.1033, -38.7989, 0.92 ) }
    dend_30 { pt3dadd( 234.915, -85.1836, -40.477, 0.92 ) }
    dend_30 { pt3dadd( 239.907, -86.8258, -42.8723, 0.92 ) }
    dend_30 { pt3dadd( 244.698, -87.9226, -45.8917, 0.92 ) }
    dend_30 { pt3dadd( 249.401, -87.9416, -49.2248, 0.92 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 17/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -18.9583, 24.313, 2.36157, 0.92 ) }
    dend_18 { pt3dadd( -19.1491, 27.104, 2.36753, 0.92 ) }
    dend_18 { pt3dadd( -19.2546, 29.2706, 2.3761, 1.38 ) }
    dend_18 { pt3dadd( -19.5028, 34.7609, 2.31835, 0.92 ) }
    dend_18 { pt3dadd( -19.5458, 36.9286, 2.25708, 1.38 ) }
    dend_18 { pt3dadd( -19.5096, 41.2409, 2.0859, 0.92 ) }
    dend_18 { pt3dadd( -19.3812, 45.0531, 1.88988, 0.92 ) }
    dend_18 { pt3dadd( -19.339, 45.581, 1.84813, 0.92 ) }
    dend_18 { pt3dadd( -18.9991, 48.4953, 1.51213, 0.92 ) }
    dend_18 { pt3dadd( -18.6767, 50.6683, 1.18985, 0.92 ) }
    dend_18 { pt3dadd( -18.1114, 54.3398, 0.569977, 1.38 ) }
    dend_18 { pt3dadd( -17.7033, 57.0559, 0.0745903, 0.92 ) }
    dend_18 { pt3dadd( -17.2366, 60.3529, -0.518569, 1.38 ) }
    dend_18 { pt3dadd( -16.6804, 64.796, -1.17166, 0.92 ) }
    dend_18 { pt3dadd( -16.4442, 66.9781, -1.41049, 0.92 ) }
    dend_18 { pt3dadd( -16.4073, 67.5067, -1.44869, 0.92 ) }
    dend_18 { pt3dadd( -16.351, 68.5663, -1.50836, 1.38 ) }
    dend_18 { pt3dadd( -16.2361, 71.7899, -1.5701, 0.92 ) }
    dend_18 { pt3dadd( -16.1823, 74.2514, -1.46248, 0.92 ) }
    dend_18 { pt3dadd( -16.1769, 76.3717, -1.19908, 1.38 ) }
    dend_18 { pt3dadd( -16.195, 78.4727, -0.873133, 1.38 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -18.9583, 24.313, 2.36157, 0.46 ) }
    dend_17 { pt3dadd( -22.1767, 22.0474, 2.29959, 0.46 ) }
    dend_17 { pt3dadd( -23.3578, 21.0893, 2.23489, 0.92 ) }
    dend_17 { pt3dadd( -23.738, 20.7809, 2.21407, 0.92 ) }
    dend_17 { pt3dadd( -26.9176, 18.2015, 2.03988, 0.46 ) }
    dend_17 { pt3dadd( -29.6197, 16.0096, 1.89186, 1.38 ) }
    dend_17 { pt3dadd( -31.4902, 14.4922, 1.78939, 0.46 ) }
    dend_17 { pt3dadd( -34.1524, 12.6657, 1.50832, 1.38 ) }
    dend_17 { pt3dadd( -43.0028, 6.81552, 0.905161, 1.38 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 47/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.86099, 34.3757, 17.4381, 0.92 ) }
    dend_15 { pt3dadd( 13.1783, 43.0398, 23.0058, 0.92 ) }
    dend_15 { pt3dadd( 21.2598, 53.2725, 29.6416, 0.92 ) }
    dend_15 { pt3dadd( 30.1027, 61.8869, 37.4026, 0.92 ) }
    dend_15 { pt3dadd( 39.8376, 70.0833, 44.4944, 0.92 ) }
    dend_15 { pt3dadd( 50.3682, 78.4861, 50.0443, 0.92 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 53/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 2.86099, 34.3757, 17.4381, 0.46 ) }
    dend_12 { pt3dadd( 11.7801, 41.3252, 24.577, 0.92 ) }
    dend_12 { pt3dadd( 19.8808, 48.5379, 32.4127, 0.92 ) }
    dend_12 { pt3dadd( 27.2017, 56.5881, 40.2406, 0.92 ) }
    dend_12 { pt3dadd( 36.7576, 62.8533, 47.1544, 0.92 ) }
    dend_12 { pt3dadd( 46.802, 67.8433, 54.3613, 0.92 ) }
    dend_12 { pt3dadd( 56.1495, 75.2663, 60.4093, 0.92 ) }
    dend_12 { pt3dadd( 65.0088, 83.8224, 65.7172, 0.92 ) }
    dend_12 { pt3dadd( 73.2712, 91.6149, 72.8176, 0.92 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 62/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -75.9599, -5.09279, -0.400797, 0.92 ) }
    dend_7 { pt3dadd( -86.076, -7.54877, -0.881133, 0.92 ) }
    dend_7 { pt3dadd( -95.8841, -10.5642, -2.77968, 0.92 ) }
    dend_7 { pt3dadd( -105.98, -13.0978, -3.29689, 0.92 ) }
    dend_7 { pt3dadd( -116.287, -14.3775, -4.02326, 0.92 ) }
    dend_7 { pt3dadd( -126.6, -14.8711, -2.71435, 0.92 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 68/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -75.9599, -5.09279, -0.400797, 0.46 ) }
    dend_6 { pt3dadd( -85.1128, -7.40514, -0.343798, 0.92 ) }
    dend_6 { pt3dadd( -94.1064, -10.0014, -1.61226, 0.92 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 71/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -62.9812, -6.39064, -2.54921, 0.92 ) }
    dend_4 { pt3dadd( -72.1185, -11.112, -3.2499, 0.92 ) }
    dend_4 { pt3dadd( -80.5425, -17.0887, -3.10681, 0.92 ) }
    dend_4 { pt3dadd( -89.7971, -21.5612, -3.83231, 0.92 ) }
    dend_4 { pt3dadd( -99.5288, -24.6798, -4.98604, 0.92 ) }
    dend_4 { pt3dadd( -108.777, -29.0861, -6.10506, 0.92 ) }
    dend_4 { pt3dadd( -117.702, -34.1995, -5.44879, 0.92 ) }
    dend_4 { pt3dadd( -127.141, -38.2843, -5.91325, 0.92 ) }
    dend_4 { pt3dadd( -137.088, -40.8469, -5.8952, 0.92 ) }
    dend_4 { pt3dadd( -146.863, -43.3939, -7.80167, 0.92 ) }
    dend_4 { pt3dadd( -156.767, -44.3878, -10.3146, 0.92 ) }
    dend_4 { pt3dadd( -166.482, -45.1551, -13.5445, 0.92 ) }
    dend_4 { pt3dadd( -175.773, -44.707, -17.8794, 0.92 ) }
    dend_4 { pt3dadd( -185.196, -43.7236, -21.8145, 0.92 ) }
    dend_4 { pt3dadd( -194.943, -42.5612, -24.7971, 0.92 ) }
    dend_4 { pt3dadd( -204.293, -40.1803, -28.292, 0.92 ) }
    dend_4 { pt3dadd( -213.04, -36.844, -32.5061, 0.92 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 88/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -62.9812, -6.39064, -2.54921, 0.46 ) }
    dend_3 { pt3dadd( -74.3213, -11.814, -4.81209, 0.92 ) }
    dend_3 { pt3dadd( -84.5673, -19.5197, -4.99157, 0.92 ) }
    dend_3 { pt3dadd( -95.4474, -25.9546, -6.97048, 0.92 ) }
    dend_3 { pt3dadd( -106.47, -32.3356, -8.14077, 0.92 ) }
    dend_3 { pt3dadd( -117.66, -37.689, -11.1865, 0.92 ) }
    dend_3 { pt3dadd( -127.45, -44.1724, -16.3005, 0.92 ) }
    dend_3 { pt3dadd( -138.093, -49.333, -21.126, 0.92 ) }
    dend_3 { pt3dadd( -149.053, -55.6549, -23.0094, 0.92 ) }
    dend_3 { pt3dadd( -158.564, -64.2781, -22.5563, 0.92 ) }
    dend_3 { pt3dadd( -165.995, -74.6205, -24.732, 0.92 ) }
    dend_3 { pt3dadd( -172.185, -85.3238, -28.5634, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_3 { pt3dadd( -177.07, -96.3265, -33.3701, 0.92 ) }
    dend_3 { pt3dadd( -181.69, -107.812, -37.2633, 0.92 ) }
    dend_3 { pt3dadd( -188.141, -118.737, -39.836, 0.92 ) }
    dend_3 { pt3dadd( -192.765, -130.853, -40.4984, 0.92 ) }
    dend_3 { pt3dadd( -196.266, -143.361, -40.0719, 0.92 ) }
    dend_3 { pt3dadd( -197.999, -155.955, -37.4228, 0.92 ) }
    dend_3 { pt3dadd( -197.487, -167.87, -32.3939, 0.92 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 7/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -45.1754, -66.2027, -85.1831, 0.46 ) }
    dend_53 { pt3dadd( -47.1393, -68.7071, -86.2049, 0.46 ) }
    dend_53 { pt3dadd( -47.8312, -69.66, -86.6388, 0.92 ) }
    dend_53 { pt3dadd( -50.3597, -73.2263, -88.349, 0.46 ) }
    dend_53 { pt3dadd( -50.6095, -73.6064, -88.5329, 0.46 ) }
    dend_53 { pt3dadd( -51.0777, -74.3192, -88.8776, 0.92 ) }
    dend_53 { pt3dadd( -51.4006, -74.8107, -89.1153, 0.92 ) }
    dend_53 { pt3dadd( -52.8492, -77.1709, -90.3942, 0.46 ) }
    dend_53 { pt3dadd( -53.0229, -77.4723, -90.5692, 0.46 ) }
    dend_53 { pt3dadd( -53.4845, -78.7279, -91.3401, 0.92 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 17/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -45.1754, -66.2027, -85.1831, 0.46 ) }
    dend_52 { pt3dadd( -46.0311, -65.9069, -86.0201, 0.46 ) }
    dend_52 { pt3dadd( -46.4428, -65.8852, -86.3532, 0.46 ) }
    dend_52 { pt3dadd( -47.4025, -65.9212, -87.1223, 0.92 ) }
    dend_52 { pt3dadd( -47.7252, -65.9342, -87.38, 0.92 ) }
    dend_52 { pt3dadd( -49.2242, -66.0803, -88.7193, 0.46 ) }
    dend_52 { pt3dadd( -49.5119, -66.1189, -89.013, 0.46 ) }
    dend_52 { pt3dadd( -52.655, -66.6741, -92.4736, 0.46 ) }
    dend_52 { pt3dadd( -53.3581, -66.8747, -93.2972, 0.92 ) }
    dend_52 { pt3dadd( -53.6849, -66.9858, -93.6995, 0.92 ) }
    dend_52 { pt3dadd( -55.2919, -67.7058, -95.7499, 0.46 ) }
    dend_52 { pt3dadd( -56.3475, -68.3065, -97.1512, 0.92 ) }
    dend_52 { pt3dadd( -56.7139, -68.548, -97.6544, 0.92 ) }
    dend_52 { pt3dadd( -58.47, -69.9099, -100.242, 0.46 ) }
    dend_52 { pt3dadd( -58.8219, -70.1863, -100.739, 0.46 ) }
    dend_52 { pt3dadd( -60.0849, -71.181, -102.385, 0.46 ) }
    dend_52 { pt3dadd( -60.3001, -71.3914, -102.671, 0.46 ) }
    dend_52 { pt3dadd( -61.1938, -72.6431, -104.183, 0.92 ) }
    dend_52 { pt3dadd( -61.3766, -72.9598, -104.571, 0.92 ) }
    dend_52 { pt3dadd( -62.0808, -74.3627, -106.396, 0.46 ) }
    dend_52 { pt3dadd( -62.2036, -74.6103, -106.707, 0.46 ) }
    dend_52 { pt3dadd( -63.2091, -76.584, -109.075, 0.92 ) }
    dend_52 { pt3dadd( -64.367, -78.6608, -111.271, 0.46 ) }
    dend_52 { pt3dadd( -64.6088, -79.1015, -111.698, 0.46 ) }
    dend_52 { pt3dadd( -64.9314, -79.6626, -112.225, 0.92 ) }
    dend_52 { pt3dadd( -66.2913, -81.9483, -114.265, 0.46 ) }
    dend_52 { pt3dadd( -66.8592, -82.8707, -115.056, 0.92 ) }
    dend_52 { pt3dadd( -68.6928, -85.6145, -117.357, 0.46 ) }
    dend_52 { pt3dadd( -70.1847, -88.0845, -119.308, 0.46 ) }
    dend_52 { pt3dadd( -71.0791, -89.6544, -120.549, 0.92 ) }
    dend_52 { pt3dadd( -71.8209, -91.0065, -121.636, 0.46 ) }
    dend_52 { pt3dadd( -72.3252, -91.9559, -122.449, 0.92 ) }
    dend_52 { pt3dadd( -72.496, -92.323, -122.785, 0.92 ) }
    dend_52 { pt3dadd( -73.1843, -94.1261, -124.542, 0.46 ) }
    dend_52 { pt3dadd( -73.5332, -95.3389, -125.724, 0.92 ) }
    dend_52 { pt3dadd( -73.5922, -95.6301, -126.018, 0.92 ) }
    dend_52 { pt3dadd( -73.6802, -96.7843, -127.204, 0.46 ) }
    dend_52 { pt3dadd( -73.6892, -98.0851, -128.508, 0.92 ) }
    dend_52 { pt3dadd( -73.6685, -98.3846, -128.799, 0.92 ) }
    dend_52 { pt3dadd( -73.5083, -99.5891, -129.967, 0.46 ) }
    dend_52 { pt3dadd( -73.4277, -99.8952, -130.241, 0.46 ) }
    dend_52 { pt3dadd( -73.1491, -100.915, -131.081, 0.92 ) }
    dend_52 { pt3dadd( -72.7311, -102.473, -132.291, 0.46 ) }
    dend_52 { pt3dadd( -72.5325, -103.719, -133.202, 0.46 ) }
    dend_52 { pt3dadd( -72.4911, -104.061, -133.443, 0.46 ) }
    dend_52 { pt3dadd( -72.407, -105.372, -134.271, 0.46 ) }
    dend_52 { pt3dadd( -72.4138, -106.322, -134.897, 0.46 ) }
    dend_52 { pt3dadd( -72.4589, -106.766, -135.181, 0.46 ) }
    dend_52 { pt3dadd( -73.3423, -110.307, -137.487, 0.46 ) }
    dend_52 { pt3dadd( -73.4972, -110.727, -137.769, 0.46 ) }
    dend_52 { pt3dadd( -74.049, -111.929, -138.637, 0.92 ) }
    dend_52 { pt3dadd( -74.9033, -113.414, -139.789, 0.46 ) }
    dend_52 { pt3dadd( -75.6322, -114.542, -140.729, 0.92 ) }
    dend_52 { pt3dadd( -77.4169, -117.089, -142.87, 0.46 ) }
    dend_52 { pt3dadd( -77.768, -117.544, -143.267, 0.92 ) }
    dend_52 { pt3dadd( -78.1036, -117.995, -143.636, 0.92 ) }
    dend_52 { pt3dadd( -79.5773, -119.907, -145.208, 0.46 ) }
    dend_52 { pt3dadd( -79.8485, -120.269, -145.478, 0.46 ) }
    dend_52 { pt3dadd( -80.4504, -121.038, -146.046, 1.38 ) }
    dend_52 { pt3dadd( -81.8767, -122.997, -147.432, 0.46 ) }
    dend_52 { pt3dadd( -82.6286, -124.174, -148.288, 0.92 ) }
    dend_52 { pt3dadd( -83.7253, -126.056, -149.68, 0.46 ) }
    dend_52 { pt3dadd( -84.3092, -127.294, -150.586, 0.92 ) }
    dend_52 { pt3dadd( -84.4351, -127.61, -150.814, 0.92 ) }
    dend_52 { pt3dadd( -84.9508, -129.647, -152.22, 0.46 ) }
    dend_52 { pt3dadd( -85.1236, -131.554, -153.388, 0.46 ) }
    dend_52 { pt3dadd( -85.105, -131.93, -153.578, 0.46 ) }
    dend_52 { pt3dadd( -84.7496, -134.573, -154.716, 0.92 ) }
    dend_52 { pt3dadd( -84.6796, -134.956, -154.877, 0.92 ) }
    dend_52 { pt3dadd( -84.1262, -137.632, -155.931, 0.46 ) }
    dend_52 { pt3dadd( -83.9455, -138.62, -156.282, 0.92 ) }
    dend_52 { pt3dadd( -83.4981, -141.718, -157.372, 0.92 ) }
    dend_52 { pt3dadd( -83.4576, -142.207, -157.576, 0.92 ) }
    dend_52 { pt3dadd( -83.4895, -143.968, -158.486, 0.46 ) }
    dend_52 { pt3dadd( -83.5217, -144.327, -158.703, 0.46 ) }
    dend_52 { pt3dadd( -83.8099, -145.724, -159.73, 0.92 ) }
    dend_52 { pt3dadd( -83.8668, -146.15, -160.038, 0.92 ) }
    dend_52 { pt3dadd( -84.0829, -148.366, -161.627, 0.46 ) }
    dend_52 { pt3dadd( -84.1215, -148.801, -161.925, 0.46 ) }
    dend_52 { pt3dadd( -84.4194, -152.682, -164.443, 0.46 ) }
    dend_52 { pt3dadd( -84.4387, -153.129, -164.727, 0.46 ) }
    dend_52 { pt3dadd( -84.3086, -157.826, -167.586, 0.46 ) }
    dend_52 { pt3dadd( -84.301, -157.961, -167.663, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 0/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -16.195, 78.4727, -0.873133, 0.92 ) }
    dend_20 { pt3dadd( -15.8746, 81.5431, -0.445452, 0.92 ) }
    dend_20 { pt3dadd( -15.4203, 85.8976, 0.16111, 0.92 ) }
    dend_20 { pt3dadd( -15.2086, 87.9264, 0.44371, 0.92 ) }
    dend_20 { pt3dadd( -14.9512, 90.3931, 0.787317, 1.38 ) }
    dend_20 { pt3dadd( -14.4361, 95.3301, 1.47501, 0.92 ) }
    dend_20 { pt3dadd( -14.2394, 97.2149, 1.73756, 1.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 7/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -16.195, 78.4727, -0.873133, 0.46 ) }
    dend_19 { pt3dadd( -16.6597, 80.4686, -1.45738, 0.46 ) }
    dend_19 { pt3dadd( -16.7858, 81.0028, -1.61075, 0.46 ) }
    dend_19 { pt3dadd( -16.7858, 81.0028, -1.61075, 0.92 ) }
    dend_19 { pt3dadd( -17.5014, 84.5472, -2.48391, 0.46 ) }
    dend_19 { pt3dadd( -17.5073, 84.5754, -2.49026, 0.46 ) }
    dend_19 { pt3dadd( -17.8855, 86.3076, -2.80914, 0.92 ) }
    dend_19 { pt3dadd( -18.0004, 86.7316, -2.86278, 0.92 ) }
    dend_19 { pt3dadd( -18.5883, 88.9701, -3.06547, 0.46 ) }
    dend_19 { pt3dadd( -18.6972, 89.4088, -3.09327, 0.46 ) }
    dend_19 { pt3dadd( -19.0107, 90.5979, -3.13039, 1.38 ) }
    dend_19 { pt3dadd( -19.7902, 93.5062, -3.2003, 0.46 ) }
    dend_19 { pt3dadd( -20.4073, 95.7479, -3.22947, 0.46 ) }
    dend_19 { pt3dadd( -21.4736, 99.7235, -3.27287, 0.46 ) }
    dend_19 { pt3dadd( -22.0955, 101.995, -3.28732, 0.46 ) }
    dend_19 { pt3dadd( -22.6236, 104.122, -3.30845, 0.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 23/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 73.2712, 91.6149, 72.8176, 0.92 ) }
    dend_14 { pt3dadd( 77.9097, 95.3948, 76.7211, 0.92 ) }
    dend_14 { pt3dadd( 81.5757, 99.2591, 81.4884, 0.92 ) }
    dend_14 { pt3dadd( 84.5653, 102.201, 87.2534, 0.92 ) }
    dend_14 { pt3dadd( 86.545, 105.693, 93.1613, 0.92 ) }
    dend_14 { pt3dadd( 89.554, 108.537, 98.9629, 0.92 ) }
    dend_14 { pt3dadd( 93.0343, 111.202, 104.578, 0.92 ) }
    dend_14 { pt3dadd( 95.2428, 113.399, 110.978, 0.92 ) }
    dend_14 { pt3dadd( 97.9895, 114.863, 117.368, 0.92 ) }
    dend_14 { pt3dadd( 100.423, 117.125, 123.664, 0.92 ) }
    dend_14 { pt3dadd( 103.67, 120.369, 129.126, 0.92 ) }
    dend_14 { pt3dadd( 107.722, 122.951, 134.383, 0.92 ) }
    dend_14 { pt3dadd( 111.557, 125.577, 139.78, 0.92 ) }
    dend_14 { pt3dadd( 115.975, 127.593, 144.977, 0.92 ) }
    dend_14 { pt3dadd( 121.392, 129.642, 149.105, 0.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 38/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 73.2712, 91.6149, 72.8176, 0.46 ) }
    dend_13 { pt3dadd( 79.5364, 96.6378, 77.9463, 0.92 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 40/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -126.6, -14.8711, -2.71435, 0.92 ) }
    dend_9 { pt3dadd( -137.273, -17.0422, -3.03571, 0.92 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 42/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -126.6, -14.8711, -2.71435, 0.46 ) }
    dend_8 { pt3dadd( -140.322, -17.3321, -3.77571, 0.92 ) }
    dend_8 { pt3dadd( -154.073, -19.061, -2.02254, 0.92 ) }
    dend_8 { pt3dadd( -167.726, -22.0772, -2.15872, 0.92 ) }
    dend_8 { pt3dadd( -181.076, -25.9577, -0.664977, 0.92 ) }
    dend_8 { pt3dadd( -193.923, -31.337, 0.762592, 0.92 ) }
    dend_8 { pt3dadd( -207.198, -35.5268, 2.12606, 0.92 ) }
    dend_8 { pt3dadd( -220.052, -41.0791, 1.47985, 0.92 ) }
    dend_8 { pt3dadd( -232.524, -47.1383, -0.723108, 0.92 ) }
    dend_8 { pt3dadd( -245.757, -51.6015, 0.147007, 0.92 ) }
    dend_8 { pt3dadd( -259.121, -55.2109, 2.09138, 0.92 ) }
    dend_8 { pt3dadd( -272.519, -58.0757, 4.83558, 0.92 ) }
    dend_8 { pt3dadd( -285.971, -61.8511, 4.0697, 0.92 ) }
    dend_8 { pt3dadd( -299.168, -66.0384, 1.94808, 0.92 ) }
    dend_8 { pt3dadd( -312.974, -68.1091, 1.27821, 0.92 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_40, dend_35, dend_24, dend_21, dend_0, dend_49, dend_48, dend_42, dend_41, dend_39, dend_36, dend_28, dend_25, dend_23, dend_22, dend_10, dend_1, dend_55, dend_50, dend_46, dend_43, dend_38, dend_37, dend_32, dend_29, dend_27, dend_26, dend_16, dend_11, dend_5, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_44, dend_34, dend_33, dend_31, dend_30, dend_18, dend_17, dend_15, dend_12, dend_7, dend_6, dend_4, dend_3, dend_53, dend_52, dend_20, dend_19, dend_14, dend_13, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_40, dend_35, dend_24, dend_21, dend_0, dend_49, dend_48, dend_42, dend_41, dend_39, dend_36, dend_28, dend_25, dend_23, dend_22, dend_10, dend_1, dend_55, dend_50, dend_46, dend_43, dend_38, dend_37, dend_32, dend_29, dend_27, dend_26, dend_16, dend_11, dend_5, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_44, dend_34, dend_33, dend_31, dend_30, dend_18, dend_17, dend_15, dend_12, dend_7, dend_6, dend_4, dend_3, dend_53, dend_52, dend_20, dend_19, dend_14, dend_13, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_40 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_24 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_21 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_48 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_41 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_39 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_36 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_25 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_43 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_37 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_29 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_26 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_57 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_51 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_45 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_44 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_34 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_31 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_15 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_12 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_7 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_4 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_3 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_52 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_8 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_10 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_49 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_11 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_50 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_2 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_54 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_42 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_5 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_20 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_6 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_46 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_56 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_9 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_13 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_53 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_30 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_33 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_27 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_38 OneSecGrp_SectionRef_26.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_40 nseg = 3
    dend_35 nseg = 3
    dend_24 nseg = 3
    dend_21 nseg = 3
    dend_48 nseg = 11
    dend_41 nseg = 3
    dend_39 nseg = 3
    dend_36 nseg = 21
    dend_25 nseg = 17
    dend_55 nseg = 3
    dend_43 nseg = 11
    dend_37 nseg = 5
    dend_32 nseg = 13
    dend_29 nseg = 9
    dend_26 nseg = 3
    dend_57 nseg = 11
    dend_51 nseg = 5
    dend_45 nseg = 3
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_31 nseg = 3
    dend_18 nseg = 3
    dend_15 nseg = 3
    dend_12 nseg = 5
    dend_7 nseg = 3
    dend_4 nseg = 9
    dend_3 nseg = 11
    dend_52 nseg = 7
    dend_14 nseg = 5
    dend_8 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L6_NBC_b88c4c3f75_0_0


