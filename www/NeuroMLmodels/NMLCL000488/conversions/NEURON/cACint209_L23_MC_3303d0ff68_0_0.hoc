// Cell: cACint209_L23_MC_3303d0ff68_0_0
/*
{
  "id" : "cACint209_L23_MC_3303d0ff68_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.457314, 10.5769, 0.277486, 3.10094", "-0.368196, 9.41391, 0.249974, 4.6464", "-0.279078, 8.25096, 0.222463, 7.2439", "-0.18996, 7.08801, 0.194951, 9.62897", "-0.100842, 5.92506, 0.16744, 10.4245", "-0.0117239, 4.76211, 0.139928, 10.7578", "0.077394, 3.59916, 0.112417, 11.091", "0.166512, 2.43621, 0.0849053, 11.3875", "0.25563, 1.27325, 0.0573938, 10.99", "0.344748, 0.110304, 0.0298823, 10.4146", "0.433866, -1.05265, 0.00237074, 9.08846", "0.522984, -2.2156, -0.0251408, 7.88125", "0.612102, -3.37855, -0.0526523, 7.78659", "0.70122, -4.5415, -0.0801638, 7.71663", "0.790338, -5.70445, -0.107675, 7.37357", "0.879456, -6.8674, -0.135187, 6.58762", "0.968574, -8.03035, -0.162698, 5.80167", "1.05769, -9.1933, -0.19021, 5.01573", "1.14681, -10.3562, -0.217721, 4.18959", "1.23593, -11.5192, -0.245233, 3.32135", "1.32505, -12.6821, -0.272744, 2.1019" ]
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.61938, -12.6856, -1.0648, 2.22", "0.929378, -14.1456, 1.5352, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000195939875065
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-3.21062, 8.77433, 2.3552, 1.94", "-3.60062, 9.85437, 2.3552, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000195939875065
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.89938, 2.60433, 3.4752, 1.11", "8.83693, 3.55344, 3.70935, 1.11", "12.4335, 4.82114, 4.03368, 1.11", "16.0919, 6.11064, 4.36359, 1.11", "19.4848, 7.30658, 4.66956, 1.11", "24.4613, 9.06069, 5.11833, 1.11", "28.4616, 10.4707, 5.47907, 0.83", "33.8995, 12.6317, 6.02413, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000195939875065
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.32505, -12.6821, -0.272744, 0.55", "2.47116, -27.6383, -0.272744, 0.55", "3.61726, -42.5944, -0.272744, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "0.929378, -14.1456, 1.5352, 2.22", "1.44597, -18.367, 1.06693, 2.22", "2.13415, -23.9906, 0.443128, 1.94", "2.65397, -28.2383, -0.0280581, 1.94", "3.1703, -32.4575, -0.496083, 1.94", "3.77078, -37.3645, -1.04039, 1.38" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.929378, -14.1456, 1.5352, 0.83", "0.638057, -15.8307, 3.16484, 0.83", "0.292472, -17.8297, 5.09804, 0.83", "-0.310157, -21.3155, 8.46914, 0.83", "-0.861048, -24.502, 11.5508, 0.83", "-1.20155, -26.4715, 13.4555, 0.83", "-1.70124, -29.3618, 16.2508, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-3.60062, 9.85437, 2.3552, 1.66", "-5.11328, 13.4588, 2.3552, 1.66", "-6.33944, 16.3806, 2.3552, 1.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-3.60062, 9.85437, 2.3552, 1.11", "-3.85481, 11.5778, 4.72043, 1.11", "-3.85339, 12.6849, 6.79716, 1.11", "-3.80355, 14.4449, 10.2212, 1.11", "-3.85333, 15.9418, 13.2573, 1.11", "-3.96058, 17.3602, 16.4295, 1.11", "-4.02513, 19.3941, 21.6547, 1.11", "-3.91569, 21.6856, 29.6069, 0.83", "-3.85952, 21.9919, 30.9931, 0.83", "-3.50437, 22.7366, 35.3827, 0.83", "-2.97557, 23.4784, 40.7228, 0.83", "-2.13314, 24.3689, 48.2616, 0.83", "-0.510196, 25.8325, 62.7471, 0.83", "-0.259222, 26.0146, 64.7439, 0.83", "1.53054, 26.9702, 77.0204, 0.55", "1.70473, 27.0384, 77.9926, 0.55", "1.91948, 27.1213, 79.108, 1.38" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "33.8995, 12.6317, 6.02413, 0.55", "37.9673, 11.854, 5.98237, 0.55", "40.169, 11.4422, 5.92422, 1.11", "42.225, 11.0797, 5.85318, 0.28", "43.3783, 10.8671, 5.86407, 0.55", "44.5414, 10.669, 5.90939, 0.55", "45.5252, 10.4986, 5.9644, 0.28", "46.282, 10.3334, 5.97045, 0.55", "47.2607, 10.146, 6.05518, 0.28", "48.7653, 9.78107, 6.32813, 0.55", "50.1815, 9.39371, 6.60845, 0.28", "50.6895, 9.23224, 6.74058, 0.55", "52.2677, 8.73478, 7.32246, 0.55", "54.47, 8.06063, 8.24412, 0.83", "56.677, 7.46928, 9.19958, 0.55", "59.165, 6.92492, 10.3059, 0.28", "61.1829, 6.54901, 11.3273, 0.83", "64.232, 6.08099, 12.9549, 0.55", "65.6012, 5.92891, 13.7059, 0.55", "67.2995, 5.76386, 14.6589, 0.28", "69.957, 5.60507, 16.3221, 0.83", "72.4248, 5.46088, 17.988, 0.28", "73.5336, 5.34767, 18.8158, 0.55", "75.1528, 5.04371, 20.1539, 0.28", "75.8215, 4.86503, 20.7953, 0.55", "79.3878, 3.67364, 24.3337, 0.28", "79.7656, 3.53446, 24.7072, 1.11", "82.8953, 2.38233, 27.6069, 0.28", "83.6541, 2.08204, 28.3502, 0.83", "87.2312, 0.559466, 31.8242, 0.28", "88.9115, -0.174869, 33.309, 1.38", "90.8423, -1.05384, 34.9146, 0.28", "92.1866, -1.66647, 36.0451, 0.83", "97.3412, -4.04132, 40.3374, 0.28", "98.4019, -4.55542, 41.2479, 0.28", "99.8081, -5.29582, 42.5383, 1.11", "103.051, -7.06576, 45.7145, 0.28", "103.24, -7.16178, 45.8887, 0.55", "105.095, -8.03803, 47.4575, 0.28", "105.798, -8.30565, 47.9234, 0.55", "107.495, -8.86968, 48.9871, 0.28", "108.607, -9.25555, 49.7237, 0.83", "111.272, -10.2949, 51.314, 0.28", "112.175, -10.7458, 51.876, 0.83", "113.343, -11.4701, 52.5935, 0.28", "114.653, -12.3496, 53.4095, 0.55", "117.793, -14.7585, 55.3491, 0.28", "118.376, -15.28, 55.7614, 0.55", "120.221, -17.3784, 57.2967, 0.28", "120.964, -18.3014, 57.9541, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "33.8995, 12.6317, 6.02413, 0.83", "35.6826, 15.1448, 9.44797, 0.83", "37.574, 18.7987, 14.8008, 0.83", "37.9309, 19.5328, 16.1018, 0.83", "39.0519, 21.9556, 20.442, 0.83", "39.53, 22.8227, 22.1088, 0.83", "41.1411, 25.5003, 27.4684, 1.11", "42.8521, 28.108, 33.4815, 0.83", "45.0196, 31.1855, 40.6761, 0.83", "45.7013, 31.9684, 42.5555, 0.83", "48.0034, 34.1791, 47.7837, 0.83", "49.2003, 35.1581, 50.0205, 0.83", "51.3275, 36.8178, 53.5158, 1.11", "52.6208, 37.8179, 55.5208, 0.83", "53.9767, 39.0116, 57.5983, 0.83", "56.1367, 41.0424, 61.104, 1.38", "57.1995, 42.1919, 62.9432, 0.55", "60.8376, 46.2535, 69.4723, 1.11", "62.6509, 48.4838, 73.1131, 0.28", "63.5287, 49.6641, 75.2085, 0.55", "64.5756, 51.2294, 78.1145, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "3.61726, -42.5944, -0.272744, 0.55", "4.76337, -57.5506, -0.272744, 0.55", "5.90948, -72.5067, -0.272744, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "3.77078, -37.3645, -1.04039, 1.11", "4.80907, -40.2438, -1.8996, 1.11", "5.62441, -42.5049, -2.57432, 1.11", "6.90123, -46.0457, -3.63091, 1.38", "8.27093, -49.8441, -4.76437, 1.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "3.77078, -37.3645, -1.04039, 1.11", "4.49548, -40.9447, 0.419671, 1.11", "5.06058, -43.5245, 1.43211, 1.11", "5.94317, -47.3298, 3.02754, 1.11", "6.70481, -50.5627, 4.47296, 1.11", "7.7594, -55.039, 6.47435, 1.11", "8.65254, -58.8301, 8.16934, 1.11", "9.17492, -61.1779, 9.18906, 1.11", "9.75816, -63.471, 10.2547, 1.38", "10.9388, -66.8557, 11.8629, 1.11" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-1.70124, -29.3618, 16.2508, 0.83", "-2.23175, -29.2116, 16.5803, 0.83", "-4.63839, -28.6109, 18.1763, 0.83", "-7.74394, -27.8249, 20.2158, 0.83", "-11.5945, -26.8548, 22.849, 0.83", "-16.1757, -25.7813, 25.9495, 0.83", "-19.3272, -25.1097, 28.073, 0.83", "-24.0789, -24.3446, 31.3393, 0.83", "-25.5061, -24.1479, 32.3424, 0.83", "-29.1235, -23.7999, 34.7771, 0.83", "-31.4462, -23.5988, 36.2542, 1.11", "-33.5922, -23.4901, 37.6823, 0.83", "-37.0244, -23.3813, 40.0363, 0.83", "-40.1713, -23.2885, 42.09, 0.83", "-42.2376, -23.2672, 43.5056, 0.83", "-45.6508, -23.2412, 45.821, 1.11", "-51.8717, -23.148, 50.0506, 0.83", "-54.0169, -23.1678, 51.4431, 0.83", "-55.9642, -23.2064, 52.6275, 0.83", "-59.6682, -23.4306, 54.7528, 0.83", "-61.7772, -23.5781, 55.8481, 0.83", "-63.9805, -23.8204, 56.7866, 0.83", "-67.1381, -24.1536, 57.8853, 0.55", "-69.4849, -24.3437, 58.6575, 0.83", "-71.5482, -24.4451, 59.2751, 0.55", "-73.8385, -24.5053, 59.8516, 1.11", "-76.2009, -24.5453, 60.5595, 0.55", "-77.8096, -24.5555, 61.0826, 0.55", "-80.2628, -24.5076, 61.9772, 1.11", "-82.5032, -24.5379, 62.8393, 0.83", "-83.8876, -24.5535, 63.4026, 1.11", "-86.3601, -24.5542, 64.4732, 0.55", "-89.0065, -24.5411, 65.6043, 0.83", "-90.0941, -24.5503, 66.2034, 0.28", "-91.228, -24.5901, 67.0366, 0.55", "-93.97, -24.6694, 69.155, 0.28", "-95.0463, -24.7009, 70.0343, 0.83", "-96.089, -24.7282, 70.9456, 0.83", "-102.176, -24.9391, 76.7825, 0.83", "-105.396, -25.1071, 79.9663, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.70124, -29.3618, 16.2508, 0.55", "-2.86117, -31.0869, 16.6168, 0.55", "-3.91346, -32.5757, 17.3236, 0.55", "-5.00701, -34.0233, 18.2135, 0.55", "-5.60978, -34.7782, 18.8751, 1.11", "-7.19689, -36.6777, 20.7321, 0.55", "-7.7057, -37.2693, 21.3579, 0.83", "-9.8116, -39.5573, 24.2522, 0.55", "-10.5881, -40.3679, 25.3232, 0.83", "-12.6604, -42.5997, 28.2499, 0.55", "-13.2424, -43.1871, 28.9837, 0.83", "-14.2633, -44.1684, 30.1108, 0.55", "-15.4846, -45.3385, 31.2695, 0.83", "-17.1303, -47.0104, 32.4883, 0.28", "-17.5131, -47.418, 32.7449, 0.55", "-19.0861, -49.1521, 33.6367, 0.28", "-19.9746, -50.1803, 34.2069, 0.83", "-21.4586, -52.0294, 35.2222, 0.28", "-22.1253, -52.9348, 35.7505, 0.55", "-23.1802, -54.4717, 36.717, 0.28", "-24.1442, -56.0455, 37.7401, 0.83", "-25.1471, -58.0256, 38.9947, 0.28", "-25.5739, -59.0336, 39.578, 0.83", "-26.2458, -60.8886, 40.554, 0.28", "-26.4217, -61.4235, 40.8198, 0.55", "-27.0836, -63.5952, 41.7978, 0.28", "-27.513, -64.9565, 42.4249, 0.83", "-28.7025, -68.4622, 44.1329, 0.28", "-29.1878, -69.7651, 44.8599, 1.11", "-30.4368, -73.0736, 46.7982, 0.28", "-30.7432, -73.8786, 47.2974, 0.55", "-32.1546, -77.5374, 49.6421, 0.28", "-32.7849, -79.1776, 50.7908, 1.11", "-34.1562, -82.9052, 53.557, 0.28", "-34.4757, -83.8418, 54.3047, 0.55", "-34.8977, -85.2206, 55.4334, 0.28", "-35.1243, -85.9688, 56.0409, 0.55", "-35.6752, -87.8047, 57.4475, 0.28", "-36.1518, -89.1022, 58.3867, 0.55", "-36.9816, -90.9005, 59.6536, 0.28", "-37.5317, -91.8607, 60.3358, 0.55", "-38.2259, -92.9207, 61.11, 0.55", "-39.3497, -94.4485, 62.1995, 0.28", "-40.063, -95.2959, 62.7582, 0.55", "-41.2302, -96.5155, 63.5529, 0.28", "-41.7497, -97.0472, 63.9205, 0.55", "-43.1612, -98.5123, 65.0586, 0.28", "-43.9049, -99.3563, 65.6919, 0.83", "-46.1806, -102.06, 67.6745, 0.28", "-46.7358, -102.725, 68.1778, 0.55", "-48.6597, -104.86, 69.8211, 0.28", "-49.8533, -106.189, 70.8463, 1.11", "-51.6136, -108.136, 72.3222, 0.28", "-52.319, -108.946, 72.9663, 0.55", "-54.4234, -111.493, 74.9651, 0.28", "-55.2953, -112.575, 75.7824, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-6.33944, 16.3806, 2.3552, 1.11", "-11.2219, 17.5447, 1.34051, 1.11", "-14.5839, 18.3463, 0.641807, 1.38", "-19.4851, 19.5148, -0.376782, 1.11" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-6.33944, 16.3806, 2.3552, 1.11", "-6.22691, 17.7772, 1.40676, 1.11", "-6.14082, 20.0611, -0.182074, 1.11", "-6.1253, 22.0369, -1.46055, 1.11", "-5.90019, 27.2678, -4.8687, 1.11", "-5.70855, 29.0543, -6.06407, 0.55", "-5.26218, 31.8968, -7.93476, 0.83", "-4.37728, 35.24, -10.1043, 0.83", "-3.69962, 37.2414, -11.4043, 0.83", "-2.71818, 39.9034, -12.9869, 0.83", "-1.75696, 42.3531, -14.2037, 0.83", "-0.24577, 45.5769, -15.8846, 0.83", "1.25414, 48.5189, -17.3606, 0.83", "2.51531, 50.9513, -18.4468, 0.83", "3.87003, 53.5897, -19.5375, 0.83", "4.67415, 55.3381, -20.125, 0.83", "6.24486, 59.2503, -21.1834, 0.83", "7.13894, 61.62, -21.6765, 0.83", "7.41612, 62.4362, -21.7967, 0.83", "8.14716, 64.3075, -21.9744, 0.83", "8.8939, 66.1418, -22.1488, 0.55", "9.74503, 68.1774, -22.4427, 0.55", "10.3542, 69.6979, -22.7338, 0.83", "10.692, 70.4711, -22.9706, 0.83", "12.0046, 73.5296, -24.061, 0.83", "13.0171, 75.9147, -25.0971, 0.83", "14.1038, 78.2893, -26.3475, 0.83", "14.7193, 79.5438, -27.1265, 0.83", "15.3168, 80.8332, -28.0349, 0.83", "19.5174, 89.5142, -30.68, 0.83", "23.7969, 97.7506, -34.4012, 0.83", "28.5395, 104.862, -39.5905, 0.83", "34.0577, 110.515, -45.722, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "64.5756, 51.2294, 78.1145, 1.11", "65.6491, 52.5085, 79.0993, 1.11", "68.2682, 55.8239, 81.6405, 0.28", "68.9052, 56.7076, 82.2337, 0.28", "69.243, 57.2161, 82.5018, 1.11", "70.3047, 58.9033, 83.4269, 0.28", "70.9782, 60.0195, 84.0434, 0.55", "72.0357, 61.8595, 84.8684, 0.28", "72.9138, 63.372, 85.3529, 0.83", "74.0398, 65.0873, 85.7446, 0.28", "75.9464, 67.7174, 86.118, 0.55", "78.2272, 70.479, 86.2616, 0.28", "81.054, 73.6603, 86.1419, 0.28", "81.8558, 74.4624, 86.0432, 0.55", "84.495, 76.8615, 85.6789, 0.28", "85.9872, 78.2038, 85.4894, 0.83", "87.8679, 79.8205, 85.0419, 0.28", "88.5077, 80.324, 84.8568, 0.55", "90.4384, 81.7622, 84.3742, 0.28", "91.3793, 82.4592, 84.2422, 0.55", "93.8224, 84.2399, 84.4703, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "64.5756, 51.2294, 78.1145, 0.55", "66.8355, 50.0965, 78.4655, 0.55", "68.5983, 49.1758, 78.8056, 0.28", "69.7885, 48.531, 79.1901, 0.83", "71.4361, 47.6011, 79.8213, 0.28", "71.7635, 47.4164, 79.9468, 0.55", "73.8605, 46.2328, 80.7502, 0.28", "73.8605, 46.2328, 80.7502, 0.83", "75.8322, 44.7148, 82.0173, 0.28", "76.2221, 44.4485, 82.3085, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "8.27093, -49.8441, -4.76437, 1.38", "8.3142, -52.4606, -4.55684, 1.38", "8.27947, -56.3657, -4.08745, 1.38", "8.20425, -58.3476, -3.82946, 1.38", "7.81652, -62.4641, -3.36155, 1.38", "7.48673, -65.0019, -3.04195, 1.38", "6.97437, -69.0126, -2.52533, 1.38", "6.66461, -71.1314, -2.23243, 1.38", "6.1615, -74.585, -1.74229, 1.38", "5.69119, -78.0871, -1.209, 1.66", "5.32133, -81.5261, -0.645069, 1.38", "4.87049, -85.9426, 0.012337, 1.38", "4.55952, -89.291, 0.335842, 1.38", "4.47572, -90.6865, 0.495818, 1.38" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "8.27093, -49.8441, -4.76437, 1.11", "9.77657, -51.2441, -5.92949, 1.11", "12.0937, -53.442, -7.78438, 1.11", "15.5102, -56.7339, -10.3231, 1.11", "18.421, -59.4338, -12.3695, 1.11", "20.9715, -61.7326, -14.0609, 1.11", "23.3809, -63.8561, -15.7608, 0.83", "24.1528, -64.5313, -16.3298, 0.83", "26.2958, -66.2455, -17.9049, 0.83", "28.2879, -67.6223, -19.2052, 0.83", "29.4333, -68.2175, -19.9485, 0.83", "33.5354, -69.8549, -22.3193, 0.83", "35.8374, -70.6675, -23.5887, 0.83", "37.8127, -71.3186, -24.7408, 0.83", "39.7343, -71.8598, -25.9283, 0.83", "42.7432, -72.6507, -27.7081, 0.83", "45.804, -73.3253, -29.3781, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "10.9388, -66.8557, 11.8629, 0.83", "9.91803, -68.8894, 12.5223, 0.83", "8.7777, -71.0918, 13.1251, 0.83", "6.84681, -75.1459, 14.096, 0.83", "5.74192, -77.6773, 14.6115, 0.83", "5.0906, -79.2969, 14.9114, 0.55", "4.49815, -80.9473, 15.2248, 0.83", "3.89912, -82.7891, 15.5072, 0.83", "3.45535, -84.3996, 15.7155, 0.83", "3.16937, -85.7854, 15.8304, 0.55", "3.00114, -86.8332, 15.9485, 0.83", "2.60266, -90.0732, 16.3314, 0.83", "2.45363, -91.8251, 16.5448, 1.11", "2.28816, -93.6635, 16.758, 0.55", "2.18447, -94.6395, 16.8874, 0.83", "2.07685, -96.0299, 17.0781, 0.55", "2.03321, -97.4312, 17.2422, 0.55", "2.02922, -97.9833, 17.296, 0.83", "2.06359, -99.3573, 17.4379, 0.83", "2.17441, -102.242, 17.7354, 0.55", "2.21337, -103.725, 17.8929, 0.83", "2.24684, -105.806, 18.2308, 0.55", "2.25894, -107.19, 18.521, 0.55", "2.2208, -110.097, 19.207, 0.83", "2.18783, -111.444, 19.5125, 0.55", "2.11434, -113.821, 20.0112, 0.83", "1.96258, -116.68, 20.7533, 0.55", "1.78804, -119.529, 21.631, 0.83", "1.71789, -120.862, 21.9971, 0.83", "1.57003, -122.57, 22.3621, 0.55", "1.34354, -124.429, 22.5529, 0.55", "0.913655, -126.913, 22.4099, 0.83", "0.505788, -128.738, 21.923, 0.55", "-0.448054, -131.789, 20.9846, 0.83", "-1.10956, -133.355, 20.4675, 0.83", "-1.97694, -134.904, 19.8354, 0.55", "-2.82215, -136.264, 19.1145, 0.83", "-4.17905, -138.276, 17.9436, 0.55", "-5.97467, -140.807, 16.5092, 1.11", "-7.77798, -143.385, 15.1316, 0.83", "-9.24631, -145.528, 13.9598, 1.11", "-10.8268, -148.088, 12.6443, 1.11", "-11.6234, -149.527, 11.9562, 0.55", "-12.56, -151.423, 11.1265, 0.83", "-13.7774, -154.386, 9.83813, 0.55", "-14.2253, -155.651, 9.42371, 0.55", "-15.1298, -158.455, 8.78891, 0.83", "-15.663, -160.159, 8.55201, 0.55", "-16.0611, -161.589, 8.42105, 0.55", "-16.2225, -162.19, 8.42515, 0.83", "-16.6071, -163.923, 8.61218, 0.28", "-16.7428, -164.738, 8.68777, 0.55", "-16.9529, -166.31, 8.78648, 0.28", "-16.9917, -166.865, 8.796, 0.55", "-17.0412, -168.83, 8.68059, 0.28", "-17.0248, -170.431, 8.48678, 0.83", "-16.9212, -171.728, 8.25265, 0.55", "-16.7591, -172.923, 8.0088, 0.55", "-16.3588, -174.862, 7.57395, 0.28", "-16.149, -175.82, 7.38066, 0.83", "-15.8237, -177.165, 7.08714, 1.11", "-15.4916, -178.441, 6.8122, 0.28", "-15.2401, -179.479, 6.54625, 0.55", "-14.8711, -180.859, 6.08609, 0.55", "-14.376, -182.684, 5.43653, 0.55", "-14.0769, -183.909, 4.87845, 0.28", "-13.7342, -185.552, 3.92538, 0.55", "-13.3096, -187.701, 2.58911, 0.28", "-12.9692, -189.467, 1.41822, 0.55", "-12.4679, -191.96, -0.34911, 0.55", "-11.7794, -195.149, -2.73057, 0.55", "-11.3409, -197.595, -4.53443, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "10.9388, -66.8557, 11.8629, 0.83", "13.467, -69.5383, 11.4102, 0.83", "14.6017, -70.7673, 11.5249, 1.11", "15.9386, -72.3079, 11.8476, 0.83", "16.6415, -73.1383, 12.0649, 0.83", "17.6319, -74.3709, 12.3926, 0.83", "19.0818, -76.4795, 12.9742, 1.11", "20.9743, -79.9465, 14.1523, 0.83", "21.4147, -81.0478, 14.5152, 0.83", "21.7493, -82.084, 14.8534, 0.83", "22.7043, -85.1465, 15.7668, 0.83", "23.5178, -88.0935, 16.5454, 0.83", "24.1663, -90.8748, 17.1788, 1.11", "24.9772, -95.1024, 18.0241, 1.11", "25.3948, -97.6653, 18.5929, 0.83", "25.7448, -100.303, 19.1937, 0.83", "25.9813, -101.862, 19.5631, 0.83", "26.3196, -103.547, 20.0618, 1.11", "27.1308, -106.963, 21.2018, 0.55", "27.4554, -108.27, 21.7228, 0.83", "28.0656, -110.72, 22.7685, 1.11", "28.9921, -114.261, 24.4085, 1.11", "30.403, -119.021, 26.6994, 0.55", "31.3508, -122.153, 28.2436, 0.83", "32.067, -124.63, 29.4341, 0.55", "32.1884, -125.182, 29.6958, 0.83", "32.429, -126.828, 30.4747, 0.55", "32.4989, -128.096, 31.0273, 0.83", "32.5274, -131.441, 32.071, 1.11", "32.4911, -134.077, 32.7493, 0.83", "32.6157, -136.914, 33.2506, 1.11", "32.8631, -139.086, 33.5508, 0.83", "33.1336, -140.803, 33.6668, 1.11", "33.8158, -144.231, 33.8037, 0.55", "34.1819, -145.66, 33.7797, 0.83", "35.2402, -149.143, 33.5916, 0.83", "36.1369, -151.531, 33.3049, 1.11", "37.1714, -154.003, 32.8825, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-19.4851, 19.5148, -0.376782, 0.83", "-23.1101, 20.6668, 0.230041, 0.83", "-25.0872, 21.295, 0.561006, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-19.4851, 19.5148, -0.376782, 0.83", "-21.9243, 18.288, -0.376782, 0.83", "-24.5516, 16.7262, -0.376782, 0.83", "-25.8387, 15.8292, -0.36029, 0.83", "-28.2978, 14.0152, -0.286013, 0.83", "-29.5297, 13.046, -0.217199, 0.83", "-31.2833, 11.5973, -0.0644055, 0.55", "-33.0342, 10.0409, 0.159766, 0.83", "-34.3, 8.76276, 0.313368, 0.55", "-35.8188, 7.04492, 0.476305, 0.55", "-36.4736, 6.19913, 0.533985, 0.83", "-37.3824, 4.95957, 0.580268, 0.55", "-38.12, 4.07178, 0.576346, 0.83", "-39.6716, 2.38286, 0.488066, 0.55", "-40.1098, 1.93753, 0.466816, 0.83", "-41.4226, 0.757419, 0.433681, 0.28", "-42.293, 0.0765317, 0.531683, 0.55", "-44.6605, -1.678, 1.34412, 0.55", "-45.0608, -1.98629, 1.55932, 0.83", "-46.712, -3.22966, 2.59735, 0.83", "-48.8207, -4.78144, 4.03136, 0.83", "-51.3304, -6.5171, 5.90544, 0.83", "-53.7249, -8.21242, 7.96418, 0.28", "-54.9824, -9.1445, 9.26924, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "34.0577, 110.515, -45.722, 0.55", "29.4006, 112.949, -54.2301, 0.55", "24.4917, 116.281, -62.2799, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "34.0577, 110.515, -45.722, 0.83", "38.5034, 118.886, -48.9099, 0.55", "43.7609, 127.306, -50.1161, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "93.8224, 84.2399, 84.4703, 0.55", "92.0697, 84.5539, 84.4847, 0.55", "91.0859, 84.7302, 84.4929, 0.28", "89.9615, 84.9316, 84.5021, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "93.8224, 84.2399, 84.4703, 0.28", "93.8728, 85.7271, 86.2109, 0.28", "93.8855, 86.1034, 86.6513, 0.55", "93.9536, 88.1138, 89.0042, 0.28", "93.9709, 88.6232, 89.6005, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "4.47572, -90.6865, 0.495818, 1.11", "4.41572, -94.0666, 0.495818, 1.11" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "4.47572, -90.6865, 0.495818, 0.83", "6.05928, -92.3145, -1.04864, 0.83", "7.68208, -94.2157, -2.68862, 0.83", "9.61181, -96.8184, -4.7623, 0.83", "11.6262, -99.8607, -7.14638, 0.83", "12.6138, -101.476, -8.31983, 1.11", "13.4082, -102.901, -9.34973, 0.83", "13.8275, -103.868, -10.0367, 0.83", "14.2536, -105.03, -10.7991, 0.83", "14.7643, -106.508, -11.6817, 0.83", "15.6662, -108.762, -13.0219, 0.83", "16.851, -111.276, -14.6774, 0.83", "17.4034, -112.344, -15.3662, 0.83", "18.1343, -113.688, -16.2339, 0.83", "19.8374, -116.616, -18.1265, 0.83", "21.0234, -118.607, -19.3784, 0.83", "21.6485, -119.638, -20.0615, 0.83", "22.6752, -121.228, -21.0134, 0.83", "23.3295, -122.279, -21.6826, 0.83", "27.9166, -130.039, -26.0119, 0.83", "33.6748, -137.748, -28.7352, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "45.804, -73.3253, -29.3781, 0.83", "46.564, -71.4853, -29.3781, 0.83", "49.1937, -61.9491, -30.843, 0.83", "50.7422, -52.0707, -30.9807, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "45.804, -73.3253, -29.3781, 0.55", "47.002, -74.0182, -29.3781, 0.55", "48.8784, -75.1035, -29.3781, 0.55", "57.3572, -80.3643, -30.0358, 0.55", "65.8721, -85.6065, -30.1633, 0.55", "75.0514, -89.2757, -28.6541, 0.55", "84.6721, -92.0034, -28.6101, 0.55", "93.6556, -96.172, -29.9958, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-11.3409, -197.595, -4.53443, 0.28", "-13.9641, -197.7, -4.78957, 0.28", "-15.5673, -197.763, -4.9455, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-11.3409, -197.595, -4.53443, 0.55", "-11.0135, -200.096, -6.83326, 0.55", "-10.6814, -201.276, -7.89598, 0.55", "-10.1461, -202.726, -9.03442, 0.28", "-9.43206, -204.21, -10.2033, 0.55", "-9.07576, -204.855, -10.6886, 0.28", "-8.36954, -206.132, -11.6505, 0.55", "-7.12755, -208.049, -12.9858, 0.28", "-6.29189, -209.103, -13.7397, 0.55", "-5.0126, -210.481, -14.6299, 0.28", "-4.13042, -211.442, -15.1234, 0.55", "0.887672, -218.983, -19.3619, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "37.1714, -154.003, 32.8825, 0.55", "38.1331, -156.243, 33.4077, 0.55", "38.7622, -157.83, 33.7635, 0.83", "39.5121, -159.795, 34.2148, 0.55", "40.3107, -161.887, 34.6954, 0.83", "41.227, -164.287, 35.2469, 0.83", "41.6263, -165.334, 35.4872, 0.55", "42.3613, -167.381, 36.0027, 0.55", "42.871, -168.779, 36.3591, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "37.1714, -154.003, 32.8825, 0.28", "35.0992, -153.89, 32.6668, 0.28", "33.6973, -153.813, 32.5209, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-25.0872, 21.295, 0.561006, 0.83", "-25.2209, 21.3719, 0.563496, 0.83", "-29.0595, 23.3772, 0.551156, 0.83", "-31.0305, 24.4359, 0.671749, 0.83", "-33.3382, 25.5107, 0.856468, 0.83", "-36.4696, 26.7905, 1.11805, 0.83", "-37.6143, 27.2584, 1.21368, 0.83", "-39.8549, 28.1028, 1.40683, 0.83", "-45.4831, 29.8967, 1.92399, 0.83", "-49.0803, 30.9264, 2.30853, 0.83", "-52.0844, 31.814, 2.70686, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-25.0872, 21.295, 0.561006, 0.83", "-26.2074, 21.4684, 2.65312, 0.83", "-26.8362, 21.5456, 3.88111, 0.83", "-27.9402, 21.7267, 5.90639, 0.83", "-29.5914, 22.0174, 8.64316, 0.83", "-33.6381, 22.7301, 15.3502, 0.83", "-38.5388, 23.5931, 23.473, 0.28", "-38.823, 23.6326, 24.0284, 0.55", "-39.7126, 23.7203, 26.0469, 0.28", "-40.3976, 23.7223, 27.9152, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "4.41572, -94.0666, 0.495818, 0.83", "3.00972, -95.4985, 2.72795, 0.83", "-0.0669698, -98.6271, 7.11874, 0.83", "-2.34929, -101.108, 10.2285, 1.11", "-3.02935, -101.995, 11.1056, 0.83", "-4.08286, -103.627, 12.3174, 0.55", "-4.73031, -104.716, 12.9613, 0.83", "-5.90121, -106.963, 13.7196, 0.55", "-6.50406, -108.504, 13.805, 0.83", "-8.04344, -112.527, 14.2024, 0.83", "-9.12733, -115.328, 14.6333, 0.83", "-9.68237, -116.864, 14.9105, 0.83", "-10.9839, -120.516, 15.7511, 0.83", "-12.7634, -125.362, 17.028, 0.83", "-15.4111, -132.193, 19.2073, 0.83", "-16.4271, -134.595, 20.122, 0.83", "-18.2746, -138.752, 21.8362, 0.83", "-19.7121, -141.752, 23.1497, 0.83", "-21.1715, -144.49, 24.4075, 0.83", "-22.1166, -146.014, 25.1189, 0.55", "-23.1608, -147.621, 25.7275, 0.55", "-24.453, -149.347, 26.4606, 0.83", "-26.1685, -151.37, 27.4098, 0.55", "-26.9938, -152.376, 27.8564, 0.55", "-28.5157, -154.36, 28.7368, 0.83", "-29.3471, -155.601, 29.2163, 0.83", "-30.8719, -158.165, 30.1218, 0.55", "-31.5241, -159.412, 30.4646, 1.11", "-32.42, -161.292, 30.8535, 1.11", "-33.3859, -163.439, 31.1902, 0.83", "-34.4114, -165.769, 31.4357, 0.83", "-35.3687, -168.06, 31.537, 0.83", "-36.7024, -171.398, 31.4027, 0.55", "-37.2289, -172.668, 31.2634, 0.83", "-38.1382, -174.811, 30.9194, 0.83", "-39.0656, -176.906, 30.6192, 0.55", "-40.2967, -179.653, 30.3974, 1.11", "-41.2582, -181.868, 30.3549, 0.55", "-42.002, -183.456, 30.3368, 0.55", "-43.1456, -185.797, 30.3408, 0.83", "-44.8544, -189.257, 30.4394, 0.55", "-46.0752, -191.806, 30.626, 0.83", "-46.672, -193.044, 30.8279, 0.83", "-48.2135, -196.436, 31.5427, 0.55", "-48.8702, -197.932, 31.8213, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "4.41572, -94.0666, 0.495818, 1.11", "4.73511, -97.2518, 0.602276, 1.11", "4.99597, -100.852, 0.697379, 1.11", "5.14343, -102.887, 0.751141, 1.11", "5.24343, -104.267, 0.787596, 1.11", "5.37803, -106.124, 0.836669, 1.11", "5.69451, -110.492, 0.952048, 1.11", "5.63068, -113.585, 1.04496, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "42.871, -168.779, 36.3591, 0.55", "44.7161, -171.632, 36.9476, 0.55", "45.5393, -172.96, 37.3466, 0.55", "46.3298, -174.258, 37.7819, 0.55", "46.9863, -175.29, 38.1292, 0.83", "48.4606, -177.776, 39.1053, 0.55", "49.6732, -180.033, 40.0039, 0.28", "49.9386, -180.57, 40.2571, 0.55", "50.3789, -181.499, 40.6989, 0.28", "51.3433, -183.647, 41.7032, 0.28", "52.4839, -186.467, 42.902, 0.55", "53.7178, -189.588, 44.0813, 0.55", "53.9949, -190.326, 44.3399, 0.55", "54.4344, -191.506, 44.7342, 0.83", "55.0338, -193.088, 45.2622, 0.55", "55.6133, -194.453, 45.6997, 0.83", "56.8371, -196.676, 46.4686, 0.55", "57.7905, -198.058, 47.0325, 0.55", "58.7589, -199.303, 47.5648, 0.83", "60.365, -201.094, 48.5027, 0.55", "61.655, -202.403, 49.292, 0.28", "63.8451, -204.486, 50.8095, 0.83", "65.4627, -205.915, 52.0421, 0.28", "66.3589, -206.681, 52.7723, 0.55", "68.7339, -208.688, 54.61, 0.28", "69.9977, -209.717, 55.2055, 0.55", "72.8342, -212.094, 55.04, 0.28", "73.78, -212.911, 54.8247, 0.83", "74.6782, -213.769, 54.5636, 0.28", "84.3253, -223.72, 53.1813, 0.55", "87.6256, -227.378, 52.93, 0.28", "89.5086, -229.628, 53.8142, 0.83", "92.6033, -233.663, 56.6994, 0.28", "93.4968, -234.877, 57.7854, 0.28", "95.0631, -237.068, 60.0717, 0.28", "95.4278, -237.617, 60.6482, 0.55", "96.6068, -239.693, 62.5109, 0.28", "97.351, -240.965, 63.448, 0.83", "98.257, -242.568, 64.3244, 0.28", "98.6234, -243.194, 64.6442, 0.55", "100.403, -246.503, 66.0037, 0.28", "101.604, -248.958, 66.9696, 0.83", "102.198, -250.39, 67.458, 0.28", "102.636, -251.51, 67.8187, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "42.871, -168.779, 36.3591, 0.28", "42.3237, -170.401, 36.195, 0.28", "41.2966, -173.124, 35.5116, 0.28", "40.5016, -175.264, 34.8271, 0.55", "39.4578, -178.19, 33.832, 0.28", "39.0341, -179.29, 33.446, 0.55", "38.1586, -181.379, 32.7057, 0.55", "36.451, -184.922, 31.3258, 0.55", "35.7764, -186.154, 30.8214, 0.28", "34.6644, -188.081, 30.0847, 0.83", "33.3717, -190.158, 29.4173, 0.28", "32.7331, -191.065, 29.1729, 0.55", "31.2527, -193.047, 28.7631, 0.28", "30.2636, -194.319, 28.651, 0.28", "28.6509, -196.2, 28.4766, 0.55", "27.3485, -197.63, 28.3449, 0.55", "26.3401, -198.816, 28.2644, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-52.0844, 31.814, 2.70686, 0.55", "-55.3981, 33.6326, 2.57147, 0.55", "-56.3893, 34.1948, 2.57269, 0.55", "-59.4808, 36.0794, 2.64085, 0.83", "-61.6272, 37.358, 2.75989, 0.83", "-63.8922, 38.668, 2.96262, 0.55", "-67.2961, 40.6508, 3.33507, 0.83", "-68.6142, 41.4259, 3.51764, 0.55", "-70.0706, 42.2525, 3.75704, 1.11", "-72.6163, 43.5356, 4.32273, 0.55", "-73.9196, 44.06, 4.65361, 1.11", "-75.4715, 44.4929, 5.07009, 1.11", "-77.1637, 44.7678, 5.51499, 0.55", "-79.6118, 45.1753, 6.12312, 0.83", "-81.2028, 45.4532, 6.49398, 0.55", "-83.1074, 45.9103, 6.91096, 0.83", "-84.8842, 46.4473, 7.28463, 0.55", "-86.7616, 47.1162, 7.68205, 0.83", "-89.2673, 48.1985, 8.23461, 0.83", "-90.967, 49.0865, 8.59711, 1.11", "-93.2991, 50.3834, 9.07477, 0.55", "-94.2614, 50.9585, 9.27562, 0.55", "-95.0911, 51.4819, 9.44363, 0.83", "-96.6948, 52.5124, 9.90263, 0.55", "-98.2252, 53.4267, 10.4484, 0.83", "-100.687, 54.8475, 11.2907, 0.55", "-101.83, 55.509, 11.7019, 0.55", "-102.337, 55.8208, 11.8861, 1.11", "-105.153, 57.8079, 12.9675, 0.28", "-106.185, 58.6465, 13.3671, 1.11", "-108.848, 60.8733, 14.4457, 0.55", "-110.398, 62.2046, 15.036, 0.28", "-111.835, 63.4262, 15.4833, 0.83", "-113.279, 64.6658, 15.8381, 0.28", "-114.294, 65.5971, 15.9791, 1.11", "-116.33, 67.5951, 16.1815, 0.28", "-118.069, 69.4626, 16.2801, 0.83", "-119.964, 71.4894, 16.1825, 0.28", "-120.339, 71.8954, 16.141, 0.55", "-121.519, 73.1732, 15.9411, 0.28", "-122.979, 74.8215, 15.6661, 0.83", "-123.762, 75.7677, 15.4936, 0.83", "-124.898, 77.1393, 15.3427, 0.28", "-126.72, 79.2432, 15.2908, 0.28", "-127.562, 80.1553, 15.3364, 0.55", "-128.643, 81.234, 15.4806, 0.28", "-129.294, 81.8224, 15.5773, 0.83", "-130.741, 83.0403, 15.7963, 0.28", "-131.338, 83.5477, 15.8311, 0.55", "-132.537, 84.5415, 15.784, 0.28", "-132.994, 84.9729, 15.7252, 0.55", "-133.972, 86.0167, 15.4679, 0.28", "-134.884, 87.053, 15.1633, 0.83", "-137.24, 89.7943, 14.2394, 0.28", "-137.763, 90.3951, 13.9995, 0.28", "-139.095, 91.8963, 13.3594, 0.55", "-140.786, 93.6337, 13.4286, 0.28", "-141.677, 94.4693, 13.8837, 0.55", "-142.669, 95.3464, 14.5668, 1.38", "-145.373, 97.5538, 17.0209, 0.28", "-146.591, 98.4606, 18.2618, 0.83", "-154.309, 103.56, 27.1697, 0.55", "-154.678, 103.793, 27.7034, 1.11" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-52.0844, 31.814, 2.70686, 0.55", "-53.8632, 30.7993, 2.70686, 0.55", "-54.8638, 30.2555, 2.70686, 0.55", "-57.4003, 28.8686, 2.70686, 0.83", "-60.3711, 27.3438, 2.70686, 0.83", "-61.9636, 26.6334, 2.75739, 0.55", "-64.4082, 25.6661, 2.83964, 0.83", "-66.1143, 25.1783, 2.90232, 0.55", "-67.7342, 24.7514, 2.9696, 0.55", "-71.4956, 23.9077, 3.15456, 1.11", "-75.4306, 23.2647, 3.38127, 0.28", "-76.8213, 23.1107, 3.47102, 1.11", "-79.7997, 23.0297, 3.68507, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-48.8702, -197.932, 31.8213, 0.55", "-50.4673, -200.897, 32.2601, 0.55", "-51.8683, -203.497, 32.645, 0.55", "-52.8091, -205.244, 32.9035, 0.83", "-53.7992, -207.082, 33.1755, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-48.8702, -197.932, 31.8213, 0.28", "-49.5819, -199.143, 32.7891, 0.28", "-50.0577, -199.952, 33.4361, 0.83", "-51.4036, -202.241, 35.2661, 0.55", "-52.9168, -204.815, 37.3238, 0.28", "-53.5386, -205.873, 38.1693, 1.11" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "5.63068, -113.585, 1.04496, 0.83", "6.47234, -115.999, 1.04774, 0.83", "6.98847, -117.76, 1.04332, 0.55", "7.59425, -119.683, 1.03306, 0.55", "8.10587, -121.286, 1.02281, 0.55", "8.47342, -122.372, 1.01561, 0.55", "8.7821, -123.321, 1.08445, 0.83", "9.35055, -125.215, 1.30687, 0.55", "9.86348, -127.09, 1.6185, 0.83", "10.2454, -128.507, 1.88938, 0.55", "10.6031, -130.101, 2.20689, 0.83", "11.2379, -133.676, 2.83253, 0.55", "11.5861, -135.908, 3.17427, 0.83", "11.9999, -138.625, 3.56193, 0.55", "12.0686, -139.171, 3.62955, 0.55", "12.3609, -141.38, 3.8413, 0.55", "12.6802, -143.7, 4.01493, 0.83", "12.9045, -145.089, 4.06806, 0.83", "13.395, -148.243, 4.29527, 0.55", "13.6282, -149.779, 4.43506, 0.83", "13.9037, -151.71, 4.65798, 0.83", "14.1669, -153.72, 4.89353, 0.55", "14.5376, -157.034, 5.16792, 0.83", "14.8034, -160.488, 5.28338, 0.83", "14.9048, -163.476, 5.24893, 0.83", "14.9173, -164.636, 5.2008, 0.55", "14.8727, -166.583, 5.05667, 0.83", "14.7192, -169.123, 4.74126, 0.55", "14.6081, -170.281, 4.5358, 0.83", "14.4668, -171.762, 4.20459, 0.55", "14.3919, -172.918, 3.97588, 0.83", "14.3854, -175.739, 3.54418, 0.55", "14.3961, -176.907, 3.44186, 0.83", "14.5238, -180.047, 3.34298, 0.55", "14.5737, -180.658, 3.31093, 0.83", "14.8424, -182.559, 3.1404, 0.55", "15.1578, -184.017, 3.00009, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "5.63068, -113.585, 1.04496, 0.83", "4.01888, -115.855, 1.98556, 0.83", "2.37593, -118.167, 2.92281, 0.83", "1.06853, -120.027, 3.62914, 0.83", "-0.938098, -122.991, 4.64997, 0.83", "-2.46267, -125.397, 5.33743, 1.11", "-3.70844, -127.63, 5.87166, 1.11", "-5.01195, -130.386, 6.49614, 0.83", "-5.5979, -132.119, 6.82344, 0.83", "-6.35664, -135.896, 7.34958, 0.83", "-6.57847, -138.199, 7.39844, 1.11", "-6.73153, -141.352, 7.30719, 1.11", "-6.77684, -142.907, 7.18054, 1.11", "-6.73327, -145.782, 6.82279, 1.11", "-6.61148, -148.132, 6.4766, 1.11", "-6.39708, -151.772, 5.91508, 0.83", "-6.293, -154.827, 5.44549, 0.83", "-6.21484, -158.045, 4.87486, 1.11", "-6.14009, -160.353, 4.36564, 0.83", "-5.93291, -163.05, 3.70768, 0.83", "-5.71586, -164.852, 3.23521, 0.83", "-5.41647, -166.429, 2.87572, 0.83", "-5.01225, -167.812, 2.49162, 0.83", "-4.30563, -169.782, 1.94175, 0.83", "-3.5806, -171.842, 1.18136, 0.83", "-3.0281, -173.639, 0.308886, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "102.636, -251.51, 67.8187, 0.28", "104.971, -251.018, 66.5606, 0.28", "105.933, -250.816, 66.0422, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "102.636, -251.51, 67.8187, 0.28", "104.317, -256.143, 67.8418, 0.28", "105.985, -260.742, 67.8648, 0.28", "106.573, -262.362, 67.873, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-79.7997, 23.0297, 3.68507, 0.55", "-85.3886, 24.1177, 4.14904, 0.55", "-87.7427, 24.4594, 4.20431, 0.83", "-88.9719, 24.6255, 4.19064, 0.83", "-91.3322, 24.8566, 4.1188, 0.83", "-92.9499, 24.9717, 4.07009, 0.28", "-93.7694, 25.0129, 4.04573, 0.83", "-95.3845, 25.0448, 3.85626, 0.55", "-96.9866, 25.037, 3.69217, 0.55", "-99.3504, 25.0033, 3.62804, 0.83", "-100.995, 24.9964, 3.69199, 0.28", "-102.225, 25.0014, 3.7486, 0.55", "-104.477, 25.0321, 3.87164, 0.28", "-105.529, 25.0416, 3.94487, 0.83", "-108.888, 25.0198, 4.2287, 0.28", "-110.035, 25.0452, 4.35224, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-79.7997, 23.0297, 3.68507, 0.55", "-80.964, 22.6019, 3.68507, 0.55", "-83.0625, 21.8308, 3.68507, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-53.7992, -207.082, 33.1755, 0.55", "-54.6804, -210.152, 33.057, 0.55", "-55.3107, -212.349, 32.9723, 0.55", "-55.7175, -213.767, 32.9175, 0.55", "-56.1055, -215.119, 32.8654, 0.55", "-57.2402, -219.073, 32.7128, 0.83" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-53.7992, -207.082, 33.1755, 0.83", "-55.1298, -208.823, 34.1812, 0.83", "-56.5106, -210.668, 35.2455, 0.28", "-57.396, -211.924, 35.9322, 0.83", "-59.4006, -215.013, 37.4573, 0.28", "-60.1007, -216.128, 37.9686, 0.83", "-61.4131, -218.266, 39.0229, 0.28", "-62.1506, -219.446, 39.7477, 0.28", "-62.7997, -220.453, 40.4373, 1.11", "-63.7094, -221.85, 41.4644, 0.55", "-64.0948, -222.425, 41.9311, 0.55", "-65.6605, -224.976, 44.2402, 0.28", "-67.0746, -227.188, 46.5092, 0.83", "-68.123, -228.782, 48.2349, 0.55", "-68.4793, -229.305, 48.8374, 0.55", "-70.0292, -231.561, 51.5618, 0.55", "-71.1642, -233.307, 53.6341, 1.38", "-72.4998, -235.54, 56.0855, 0.28", "-73.1583, -236.827, 57.4244, 0.28" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "106.573, -262.362, 67.873, 0.28", "108.458, -262.462, 66.0009, 0.28", "109.337, -262.508, 65.1275, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "106.573, -262.362, 67.873, 0.28", "107.448, -265.227, 67.9245, 0.28", "107.758, -266.047, 67.9776, 0.83", "108.473, -267.825, 68.1702, 0.28", "108.705, -268.394, 68.2612, 0.55", "110.168, -272.186, 68.9266, 0.28", "110.653, -273.486, 69.1625, 0.28", "111.271, -275.412, 69.5561, 0.55", "112.324, -279.03, 70.2527, 0.28", "112.669, -280.293, 70.4913, 0.55", "113.035, -281.801, 70.7939, 0.28", "113.198, -282.639, 70.9791, 0.55", "113.634, -286.069, 71.6718, 0.28", "113.64, -286.692, 71.7573, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-57.2402, -219.073, 32.7128, 0.55", "-57.2652, -222.216, 33.6726, 0.55", "-57.219, -223.565, 34.0131, 0.83", "-57.1645, -225.153, 34.3544, 0.28", "-57.1138, -227.225, 34.7105, 0.55", "-57.0574, -229.204, 35.051, 0.28", "-57.0115, -232.06, 35.6038, 0.55", "-56.9313, -235.979, 36.2607, 0.28", "-56.8941, -237.254, 36.445, 1.11", "-56.7926, -239.826, 36.7071, 0.28", "-56.7689, -241.265, 36.806, 0.83", "-56.8249, -243.339, 37.0153, 0.28", "-56.9456, -245.226, 37.2972, 0.55", "-57.0579, -246.566, 37.7432, 0.28", "-57.0845, -247.759, 38.3225, 0.55", "-57.0149, -249.011, 39.1069, 0.28", "-56.7672, -251.069, 40.5088, 0.55", "-56.4933, -252.333, 41.4279, 0.83", "-55.7807, -254.935, 43.3432, 0.28", "-55.2481, -256.408, 44.2968, 0.83", "-54.2438, -258.649, 45.6304, 0.28", "-53.6946, -259.639, 46.121, 0.55", "-52.6793, -261.215, 46.7652, 0.28", "-51.6906, -262.635, 47.1827, 0.55", "-49.9649, -265.053, 47.5132, 0.28", "-48.4588, -267.071, 47.8328, 0.83", "-47.2051, -268.639, 48.0984, 0.28", "-46.0579, -270.058, 48.3601, 0.55", "-44.5442, -271.904, 48.7794, 0.28", "-43.347, -273.32, 49.2014, 0.55", "-39.1688, -278.191, 50.8527, 0.28", "-38.7963, -278.617, 50.967, 0.83" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-57.2402, -219.073, 32.7128, 0.55", "-58.0583, -220.917, 32.1531, 0.55", "-58.4609, -221.912, 31.7903, 0.83", "-59.3777, -224.506, 30.555, 0.28", "-59.7258, -225.508, 30.0434, 0.28", "-60.1542, -226.742, 29.4139, 0.55", "-61.2291, -229.837, 27.834, 0.28", "-61.4705, -230.673, 27.3494, 0.55", "-62.1563, -233.359, 25.5796, 0.28", "-62.3543, -234.238, 24.88, 0.83" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-73.1583, -236.827, 57.4244, 0.28", "-73.4402, -238.553, 57.7925, 0.28", "-73.5726, -239.153, 57.7308, 0.55", "-73.8099, -240.08, 57.519, 0.28", "-74.081, -241.222, 57.1477, 0.55", "-74.4197, -242.719, 56.5879, 0.28", "-74.7263, -244.079, 56.0414, 1.11", "-75.607, -247.915, 54.2779, 0.28", "-75.6611, -248.158, 54.1613, 0.55", "-76.1018, -250.027, 53.4347, 0.28", "-76.2784, -250.833, 53.1956, 0.55", "-76.5799, -252.238, 52.8717, 0.28", "-76.6975, -252.846, 52.8033, 0.28", "-76.9245, -254.064, 52.8591, 0.83", "-77.6182, -257.334, 53.1926, 0.28", "-77.9346, -258.627, 53.385, 0.83", "-78.779, -261.803, 53.8398, 0.28", "-79.4837, -264.319, 54.1897, 0.28", "-80.0115, -266.047, 54.4475, 0.83", "-80.8509, -268.556, 54.819, 0.28", "-81.1472, -269.379, 54.9485, 0.55", "-81.9421, -271.417, 55.3664, 0.28", "-82.5365, -272.865, 55.7646, 0.83", "-83.3591, -274.728, 56.2693, 0.28", "-83.6564, -275.438, 56.4396, 0.55", "-84.5, -277.509, 57.0334, 0.28", "-84.849, -278.394, 57.3556, 0.83" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-73.1583, -236.827, 57.4244, 0.28", "-75.5859, -237.287, 57.4244, 0.28", "-76.714, -237.501, 57.4244, 0.83" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "113.64, -286.692, 71.7573, 0.28", "110.628, -287.636, 71.6594, 0.28", "110.032, -287.823, 71.64, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "113.64, -286.692, 71.7573, 0.28", "113.598, -288.701, 71.7339, 0.28", "113.545, -291.262, 71.704, 0.28", "113.498, -293.488, 71.6781, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-62.3543, -234.238, 24.88, 0.28", "-63.2199, -235.402, 23.8466, 0.28", "-63.5741, -235.927, 23.2418, 0.55", "-64.4235, -237.207, 21.7674, 0.28", "-65.63, -239.291, 19.5992, 0.55", "-66.5625, -240.901, 17.9233, 0.55", "-67.5619, -242.628, 16.1272, 0.28", "-68.8242, -244.906, 13.612, 0.83", "-69.8051, -246.761, 11.5012, 0.28", "-70.5601, -248.308, 9.72277, 0.28" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-62.3543, -234.238, 24.88, 0.55", "-60.2655, -235.491, 24.4119, 0.55", "-58.7444, -236.405, 24.071, 0.28", "-58.0462, -236.824, 23.9145, 0.55" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-84.849, -278.394, 57.3556, 0.28", "-85.166, -282.907, 60.4805, 0.28", "-85.2044, -284.275, 61.3315, 0.55", "-85.3458, -288.512, 63.7127, 0.28", "-85.3964, -290.44, 64.7158, 0.55", "-85.3876, -292.897, 65.9045, 0.28", "-85.332, -294.63, 66.6867, 0.55", "-85.0114, -296.767, 67.4468, 0.28", "-84.6707, -298.391, 67.9941, 0.28", "-84.4043, -299.12, 68.2861, 0.55", "-83.6766, -300.597, 69.0762, 0.28", "-83.3525, -301.174, 69.5783, 0.83", "-82.1435, -303.167, 71.5761, 0.28", "-81.9972, -303.405, 71.8455, 0.55", "-80.3446, -306.096, 75.1379, 0.28", "-79.9956, -306.704, 75.9026, 0.83", "-78.3915, -309.788, 79.8522, 0.28", "-78.1441, -310.278, 80.4809, 0.83", "-77.0233, -312.606, 83.3202, 0.28", "-76.3086, -314.143, 85.1458, 0.83" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-84.849, -278.394, 57.3556, 0.28", "-88.6982, -279.574, 57.3556, 0.28", "-89.2959, -279.757, 57.3556, 0.83" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-76.714, -237.501, 57.4244, 0.28", "-77.9778, -239.64, 60.5097, 0.28", "-78.8839, -241.21, 62.3808, 0.55", "-80.8654, -244.911, 65.8094, 0.28", "-81.0915, -245.333, 66.2006, 0.55", "-82.2683, -247.531, 68.2369, 0.28", "-83.1365, -249.152, 69.7392, 0.83", "-84.232, -251.021, 71.3473, 0.28", "-85.6946, -253.681, 73.0237, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-76.714, -237.501, 57.4244, 0.28", "-76.7163, -237.024, 58.9208, 0.28", "-76.7167, -236.941, 59.1824, 0.55", "-76.7295, -234.302, 67.4647, 0.28", "-76.731, -233.996, 68.4256, 1.11" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-70.5601, -248.308, 9.72277, 0.28", "-72.6119, -254.092, 6.28982, 0.28", "-73.413, -256.351, 4.94947, 0.28", "-74.1368, -258.392, 3.73839, 0.28", "-74.6732, -259.904, 2.84097, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-70.5601, -248.308, 9.72277, 0.55", "-72.9501, -248.248, 7.10277, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-85.6946, -253.681, 73.0237, 0.28", "-87.2927, -255.342, 72.5084, 0.28", "-87.668, -255.732, 72.3873, 0.55" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-85.6946, -253.681, 73.0237, 0.28", "-84.5819, -254.847, 72.7166, 0.28", "-83.8332, -255.632, 72.5099, 0.55", "-83.0436, -256.459, 72.292, 0.28", "-82.2924, -257.246, 72.0846, 0.83" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_22", "dend_7", "dend_0", "dend_26", "dend_23", "dend_9", "dend_8", "dend_6", "dend_1", "dend_42", "dend_27", "dend_25", "dend_24", "dend_13", "dend_10", "dend_3", "dend_2", "dend_46", "dend_43", "dend_39", "dend_28", "dend_15", "dend_14", "dend_12", "dend_11", "dend_5", "dend_4", "dend_48", "dend_47", "dend_45", "dend_44", "dend_41", "dend_40", "dend_30", "dend_29", "dend_17", "dend_16", "dend_52", "dend_49", "dend_32", "dend_31", "dend_21", "dend_18", "dend_54", "dend_53", "dend_51", "dend_50", "dend_38", "dend_33", "dend_20", "dend_19", "dend_64", "dend_55", "dend_37", "dend_34", "dend_70", "dend_65", "dend_61", "dend_56", "dend_36", "dend_35", "dend_67", "dend_66", "dend_63", "dend_62", "dend_58", "dend_57", "dend_69", "dend_68", "dend_60", "dend_59" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_22", "dend_7", "dend_0", "dend_26", "dend_23", "dend_9", "dend_8", "dend_6", "dend_1", "dend_42", "dend_27", "dend_25", "dend_24", "dend_13", "dend_10", "dend_3", "dend_2", "dend_46", "dend_43", "dend_39", "dend_28", "dend_15", "dend_14", "dend_12", "dend_11", "dend_5", "dend_4", "dend_48", "dend_47", "dend_45", "dend_44", "dend_41", "dend_40", "dend_30", "dend_29", "dend_17", "dend_16", "dend_52", "dend_49", "dend_32", "dend_31", "dend_21", "dend_18", "dend_54", "dend_53", "dend_51", "dend_50", "dend_38", "dend_33", "dend_20", "dend_19", "dend_64", "dend_55", "dend_37", "dend_34", "dend_70", "dend_65", "dend_61", "dend_56", "dend_36", "dend_35", "dend_67", "dend_66", "dend_63", "dend_62", "dend_58", "dend_57", "dend_69", "dend_68", "dend_60", "dend_59" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_12", "dend_11" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "dend_22", "dend_7", "dend_0", "axon_0", "dend_26", "dend_23", "dend_9", "dend_8", "dend_6", "dend_1", "axon_1", "dend_42", "dend_27", "dend_25", "dend_24", "dend_13", "dend_10", "dend_3", "dend_2", "dend_46", "dend_43", "dend_39", "dend_28", "dend_15", "dend_14", "dend_12", "dend_11", "dend_5", "dend_4", "dend_48", "dend_47", "dend_45", "dend_44", "dend_41", "dend_40", "dend_30", "dend_29", "dend_17", "dend_16", "dend_52", "dend_49", "dend_32", "dend_31", "dend_21", "dend_18", "dend_54", "dend_53", "dend_51", "dend_50", "dend_38", "dend_33", "dend_20", "dend_19", "dend_64", "dend_55", "dend_37", "dend_34", "dend_70", "dend_65", "dend_61", "dend_56", "dend_36", "dend_35", "dend_67", "dend_66", "dend_63", "dend_62", "dend_58", "dend_57", "dend_69", "dend_68", "dend_60", "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_22", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_MC_3303d0ff68_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_26
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_27
create dend_39
public dend_39
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_64, id: dend_64, parent: dend_54
create dend_64
public dend_64
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_70, id: dend_70, parent: dend_64
create dend_70
public dend_70
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_22, dend_7, dend_0, dend_26, dend_23, dend_9, dend_8, dend_6, dend_1, dend_42, dend_27, dend_25, dend_24, dend_13, dend_10, dend_3, dend_2, dend_46, dend_43, dend_39, dend_28, dend_15, dend_14, dend_12, dend_11, dend_5, dend_4, dend_48, dend_47, dend_45, dend_44, dend_41, dend_40, dend_30, dend_29, dend_17, dend_16, dend_52, dend_49, dend_32, dend_31, dend_21, dend_18, dend_54, dend_53, dend_51, dend_50, dend_38, dend_33, dend_20, dend_19, dend_64, dend_55, dend_37, dend_34, dend_70, dend_65, dend_61, dend_56, dend_36, dend_35, dend_67, dend_66, dend_63, dend_62, dend_58, dend_57, dend_69, dend_68, dend_60, dend_59]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_22, dend_7, dend_0, dend_26, dend_23, dend_9, dend_8, dend_6, dend_1, dend_42, dend_27, dend_25, dend_24, dend_13, dend_10, dend_3, dend_2, dend_46, dend_43, dend_39, dend_28, dend_15, dend_14, dend_12, dend_11, dend_5, dend_4, dend_48, dend_47, dend_45, dend_44, dend_41, dend_40, dend_30, dend_29, dend_17, dend_16, dend_52, dend_49, dend_32, dend_31, dend_21, dend_18, dend_54, dend_53, dend_51, dend_50, dend_38, dend_33, dend_20, dend_19, dend_64, dend_55, dend_37, dend_34, dend_70, dend_65, dend_61, dend_56, dend_36, dend_35, dend_67, dend_66, dend_63, dend_62, dend_58, dend_57, dend_69, dend_68, dend_60, dend_59]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_12, dend_11]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[dend_22, dend_7, dend_0, axon_0, dend_26, dend_23, dend_9, dend_8, dend_6, dend_1, axon_1, dend_42, dend_27, dend_25, dend_24, dend_13, dend_10, dend_3, dend_2, dend_46, dend_43, dend_39, dend_28, dend_15, dend_14, dend_12, dend_11, dend_5, dend_4, dend_48, dend_47, dend_45, dend_44, dend_41, dend_40, dend_30, dend_29, dend_17, dend_16, dend_52, dend_49, dend_32, dend_31, dend_21, dend_18, dend_54, dend_53, dend_51, dend_50, dend_38, dend_33, dend_20, dend_19, dend_64, dend_55, dend_37, dend_34, dend_70, dend_65, dend_61, dend_56, dend_36, dend_35, dend_67, dend_66, dend_63, dend_62, dend_58, dend_57, dend_69, dend_68, dend_60, dend_59]}
objref ModelViewParmSubset_6
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_64
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_22, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_11, dend_11, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_38, dend_38, dend_33, dend_33, dend_33, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_64, dend_64, dend_64, dend_64, dend_64, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_36, dend_36, dend_35, dend_35, dend_35, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_69, dend_69, dend_69, dend_69, dend_68, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_22(0), soma_0(0.45000195939875065)
    connect dend_7(0), soma_0(0.45000195939875065)
    connect dend_0(0), soma_0(0.45000195939875065)
    connect axon_0(0), soma_0(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_64(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_70(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.457314, 10.5769, 0.277486, 3.10094 ) }
    soma_0 { pt3dadd( -0.368196, 9.41391, 0.249974, 4.6464 ) }
    soma_0 { pt3dadd( -0.279078, 8.25096, 0.222463, 7.2439 ) }
    soma_0 { pt3dadd( -0.18996, 7.08801, 0.194951, 9.62897 ) }
    soma_0 { pt3dadd( -0.100842, 5.92506, 0.16744, 10.4245 ) }
    soma_0 { pt3dadd( -0.0117239, 4.76211, 0.139928, 10.7578 ) }
    soma_0 { pt3dadd( 0.077394, 3.59916, 0.112417, 11.091 ) }
    soma_0 { pt3dadd( 0.166512, 2.43621, 0.0849053, 11.3875 ) }
    soma_0 { pt3dadd( 0.25563, 1.27325, 0.0573938, 10.99 ) }
    soma_0 { pt3dadd( 0.344748, 0.110304, 0.0298823, 10.4146 ) }
    soma_0 { pt3dadd( 0.433866, -1.05265, 0.00237074, 9.08846 ) }
    soma_0 { pt3dadd( 0.522984, -2.2156, -0.0251408, 7.88125 ) }
    soma_0 { pt3dadd( 0.612102, -3.37855, -0.0526523, 7.78659 ) }
    soma_0 { pt3dadd( 0.70122, -4.5415, -0.0801638, 7.71663 ) }
    soma_0 { pt3dadd( 0.790338, -5.70445, -0.107675, 7.37357 ) }
    soma_0 { pt3dadd( 0.879456, -6.8674, -0.135187, 6.58762 ) }
    soma_0 { pt3dadd( 0.968574, -8.03035, -0.162698, 5.80167 ) }
    soma_0 { pt3dadd( 1.05769, -9.1933, -0.19021, 5.01573 ) }
    soma_0 { pt3dadd( 1.14681, -10.3562, -0.217721, 4.18959 ) }
    soma_0 { pt3dadd( 1.23593, -11.5192, -0.245233, 3.32135 ) }
    soma_0 { pt3dadd( 1.32505, -12.6821, -0.272744, 2.1019 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.61938, -12.6856, -1.0648, 2.22 ) }
    dend_22 { pt3dadd( 0.929378, -14.1456, 1.5352, 2.22 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 23/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -3.21062, 8.77433, 2.3552, 1.94 ) }
    dend_7 { pt3dadd( -3.60062, 9.85437, 2.3552, 1.94 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 25/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.89938, 2.60433, 3.4752, 1.11 ) }
    dend_0 { pt3dadd( 8.83693, 3.55344, 3.70935, 1.11 ) }
    dend_0 { pt3dadd( 12.4335, 4.82114, 4.03368, 1.11 ) }
    dend_0 { pt3dadd( 16.0919, 6.11064, 4.36359, 1.11 ) }
    dend_0 { pt3dadd( 19.4848, 7.30658, 4.66956, 1.11 ) }
    dend_0 { pt3dadd( 24.4613, 9.06069, 5.11833, 1.11 ) }
    dend_0 { pt3dadd( 28.4616, 10.4707, 5.47907, 0.83 ) }
    dend_0 { pt3dadd( 33.8995, 12.6317, 6.02413, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 33/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.32505, -12.6821, -0.272744, 0.55 ) }
    axon_0 { pt3dadd( 2.47116, -27.6383, -0.272744, 0.55 ) }
    axon_0 { pt3dadd( 3.61726, -42.5944, -0.272744, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 36/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 0.929378, -14.1456, 1.5352, 2.22 ) }
    dend_26 { pt3dadd( 1.44597, -18.367, 1.06693, 2.22 ) }
    dend_26 { pt3dadd( 2.13415, -23.9906, 0.443128, 1.94 ) }
    dend_26 { pt3dadd( 2.65397, -28.2383, -0.0280581, 1.94 ) }
    dend_26 { pt3dadd( 3.1703, -32.4575, -0.496083, 1.94 ) }
    dend_26 { pt3dadd( 3.77078, -37.3645, -1.04039, 1.38 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 42/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.929378, -14.1456, 1.5352, 0.83 ) }
    dend_23 { pt3dadd( 0.638057, -15.8307, 3.16484, 0.83 ) }
    dend_23 { pt3dadd( 0.292472, -17.8297, 5.09804, 0.83 ) }
    dend_23 { pt3dadd( -0.310157, -21.3155, 8.46914, 0.83 ) }
    dend_23 { pt3dadd( -0.861048, -24.502, 11.5508, 0.83 ) }
    dend_23 { pt3dadd( -1.20155, -26.4715, 13.4555, 0.83 ) }
    dend_23 { pt3dadd( -1.70124, -29.3618, 16.2508, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 49/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -3.60062, 9.85437, 2.3552, 1.66 ) }
    dend_9 { pt3dadd( -5.11328, 13.4588, 2.3552, 1.66 ) }
    dend_9 { pt3dadd( -6.33944, 16.3806, 2.3552, 1.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 52/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -3.60062, 9.85437, 2.3552, 1.11 ) }
    dend_8 { pt3dadd( -3.85481, 11.5778, 4.72043, 1.11 ) }
    dend_8 { pt3dadd( -3.85339, 12.6849, 6.79716, 1.11 ) }
    dend_8 { pt3dadd( -3.80355, 14.4449, 10.2212, 1.11 ) }
    dend_8 { pt3dadd( -3.85333, 15.9418, 13.2573, 1.11 ) }
    dend_8 { pt3dadd( -3.96058, 17.3602, 16.4295, 1.11 ) }
    dend_8 { pt3dadd( -4.02513, 19.3941, 21.6547, 1.11 ) }
    dend_8 { pt3dadd( -3.91569, 21.6856, 29.6069, 0.83 ) }
    dend_8 { pt3dadd( -3.85952, 21.9919, 30.9931, 0.83 ) }
    dend_8 { pt3dadd( -3.50437, 22.7366, 35.3827, 0.83 ) }
    dend_8 { pt3dadd( -2.97557, 23.4784, 40.7228, 0.83 ) }
    dend_8 { pt3dadd( -2.13314, 24.3689, 48.2616, 0.83 ) }
    dend_8 { pt3dadd( -0.510196, 25.8325, 62.7471, 0.83 ) }
    dend_8 { pt3dadd( -0.259222, 26.0146, 64.7439, 0.83 ) }
    dend_8 { pt3dadd( 1.53054, 26.9702, 77.0204, 0.55 ) }
    dend_8 { pt3dadd( 1.70473, 27.0384, 77.9926, 0.55 ) }
    dend_8 { pt3dadd( 1.91948, 27.1213, 79.108, 1.38 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 69/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 33.8995, 12.6317, 6.02413, 0.55 ) }
    dend_6 { pt3dadd( 37.9673, 11.854, 5.98237, 0.55 ) }
    dend_6 { pt3dadd( 40.169, 11.4422, 5.92422, 1.11 ) }
    dend_6 { pt3dadd( 42.225, 11.0797, 5.85318, 0.28 ) }
    dend_6 { pt3dadd( 43.3783, 10.8671, 5.86407, 0.55 ) }
    dend_6 { pt3dadd( 44.5414, 10.669, 5.90939, 0.55 ) }
    dend_6 { pt3dadd( 45.5252, 10.4986, 5.9644, 0.28 ) }
    dend_6 { pt3dadd( 46.282, 10.3334, 5.97045, 0.55 ) }
    dend_6 { pt3dadd( 47.2607, 10.146, 6.05518, 0.28 ) }
    dend_6 { pt3dadd( 48.7653, 9.78107, 6.32813, 0.55 ) }
    dend_6 { pt3dadd( 50.1815, 9.39371, 6.60845, 0.28 ) }
    dend_6 { pt3dadd( 50.6895, 9.23224, 6.74058, 0.55 ) }
    dend_6 { pt3dadd( 52.2677, 8.73478, 7.32246, 0.55 ) }
    dend_6 { pt3dadd( 54.47, 8.06063, 8.24412, 0.83 ) }
    dend_6 { pt3dadd( 56.677, 7.46928, 9.19958, 0.55 ) }
    dend_6 { pt3dadd( 59.165, 6.92492, 10.3059, 0.28 ) }
    dend_6 { pt3dadd( 61.1829, 6.54901, 11.3273, 0.83 ) }
    dend_6 { pt3dadd( 64.232, 6.08099, 12.9549, 0.55 ) }
    dend_6 { pt3dadd( 65.6012, 5.92891, 13.7059, 0.55 ) }
    dend_6 { pt3dadd( 67.2995, 5.76386, 14.6589, 0.28 ) }
    dend_6 { pt3dadd( 69.957, 5.60507, 16.3221, 0.83 ) }
    dend_6 { pt3dadd( 72.4248, 5.46088, 17.988, 0.28 ) }
    dend_6 { pt3dadd( 73.5336, 5.34767, 18.8158, 0.55 ) }
    dend_6 { pt3dadd( 75.1528, 5.04371, 20.1539, 0.28 ) }
    dend_6 { pt3dadd( 75.8215, 4.86503, 20.7953, 0.55 ) }
    dend_6 { pt3dadd( 79.3878, 3.67364, 24.3337, 0.28 ) }
    dend_6 { pt3dadd( 79.7656, 3.53446, 24.7072, 1.11 ) }
    dend_6 { pt3dadd( 82.8953, 2.38233, 27.6069, 0.28 ) }
    dend_6 { pt3dadd( 83.6541, 2.08204, 28.3502, 0.83 ) }
    dend_6 { pt3dadd( 87.2312, 0.559466, 31.8242, 0.28 ) }
    dend_6 { pt3dadd( 88.9115, -0.174869, 33.309, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_6 { pt3dadd( 90.8423, -1.05384, 34.9146, 0.28 ) }
    dend_6 { pt3dadd( 92.1866, -1.66647, 36.0451, 0.83 ) }
    dend_6 { pt3dadd( 97.3412, -4.04132, 40.3374, 0.28 ) }
    dend_6 { pt3dadd( 98.4019, -4.55542, 41.2479, 0.28 ) }
    dend_6 { pt3dadd( 99.8081, -5.29582, 42.5383, 1.11 ) }
    dend_6 { pt3dadd( 103.051, -7.06576, 45.7145, 0.28 ) }
    dend_6 { pt3dadd( 103.24, -7.16178, 45.8887, 0.55 ) }
    dend_6 { pt3dadd( 105.095, -8.03803, 47.4575, 0.28 ) }
    dend_6 { pt3dadd( 105.798, -8.30565, 47.9234, 0.55 ) }
    dend_6 { pt3dadd( 107.495, -8.86968, 48.9871, 0.28 ) }
    dend_6 { pt3dadd( 108.607, -9.25555, 49.7237, 0.83 ) }
    dend_6 { pt3dadd( 111.272, -10.2949, 51.314, 0.28 ) }
    dend_6 { pt3dadd( 112.175, -10.7458, 51.876, 0.83 ) }
    dend_6 { pt3dadd( 113.343, -11.4701, 52.5935, 0.28 ) }
    dend_6 { pt3dadd( 114.653, -12.3496, 53.4095, 0.55 ) }
    dend_6 { pt3dadd( 117.793, -14.7585, 55.3491, 0.28 ) }
    dend_6 { pt3dadd( 118.376, -15.28, 55.7614, 0.55 ) }
    dend_6 { pt3dadd( 120.221, -17.3784, 57.2967, 0.28 ) }
    dend_6 { pt3dadd( 120.964, -18.3014, 57.9541, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 19/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 33.8995, 12.6317, 6.02413, 0.83 ) }
    dend_1 { pt3dadd( 35.6826, 15.1448, 9.44797, 0.83 ) }
    dend_1 { pt3dadd( 37.574, 18.7987, 14.8008, 0.83 ) }
    dend_1 { pt3dadd( 37.9309, 19.5328, 16.1018, 0.83 ) }
    dend_1 { pt3dadd( 39.0519, 21.9556, 20.442, 0.83 ) }
    dend_1 { pt3dadd( 39.53, 22.8227, 22.1088, 0.83 ) }
    dend_1 { pt3dadd( 41.1411, 25.5003, 27.4684, 1.11 ) }
    dend_1 { pt3dadd( 42.8521, 28.108, 33.4815, 0.83 ) }
    dend_1 { pt3dadd( 45.0196, 31.1855, 40.6761, 0.83 ) }
    dend_1 { pt3dadd( 45.7013, 31.9684, 42.5555, 0.83 ) }
    dend_1 { pt3dadd( 48.0034, 34.1791, 47.7837, 0.83 ) }
    dend_1 { pt3dadd( 49.2003, 35.1581, 50.0205, 0.83 ) }
    dend_1 { pt3dadd( 51.3275, 36.8178, 53.5158, 1.11 ) }
    dend_1 { pt3dadd( 52.6208, 37.8179, 55.5208, 0.83 ) }
    dend_1 { pt3dadd( 53.9767, 39.0116, 57.5983, 0.83 ) }
    dend_1 { pt3dadd( 56.1367, 41.0424, 61.104, 1.38 ) }
    dend_1 { pt3dadd( 57.1995, 42.1919, 62.9432, 0.55 ) }
    dend_1 { pt3dadd( 60.8376, 46.2535, 69.4723, 1.11 ) }
    dend_1 { pt3dadd( 62.6509, 48.4838, 73.1131, 0.28 ) }
    dend_1 { pt3dadd( 63.5287, 49.6641, 75.2085, 0.55 ) }
    dend_1 { pt3dadd( 64.5756, 51.2294, 78.1145, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 40/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 3.61726, -42.5944, -0.272744, 0.55 ) }
    axon_1 { pt3dadd( 4.76337, -57.5506, -0.272744, 0.55 ) }
    axon_1 { pt3dadd( 5.90948, -72.5067, -0.272744, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_26 (entry count 43/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 3.77078, -37.3645, -1.04039, 1.11 ) }
    dend_42 { pt3dadd( 4.80907, -40.2438, -1.8996, 1.11 ) }
    dend_42 { pt3dadd( 5.62441, -42.5049, -2.57432, 1.11 ) }
    dend_42 { pt3dadd( 6.90123, -46.0457, -3.63091, 1.38 ) }
    dend_42 { pt3dadd( 8.27093, -49.8441, -4.76437, 1.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 48/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 3.77078, -37.3645, -1.04039, 1.11 ) }
    dend_27 { pt3dadd( 4.49548, -40.9447, 0.419671, 1.11 ) }
    dend_27 { pt3dadd( 5.06058, -43.5245, 1.43211, 1.11 ) }
    dend_27 { pt3dadd( 5.94317, -47.3298, 3.02754, 1.11 ) }
    dend_27 { pt3dadd( 6.70481, -50.5627, 4.47296, 1.11 ) }
    dend_27 { pt3dadd( 7.7594, -55.039, 6.47435, 1.11 ) }
    dend_27 { pt3dadd( 8.65254, -58.8301, 8.16934, 1.11 ) }
    dend_27 { pt3dadd( 9.17492, -61.1779, 9.18906, 1.11 ) }
    dend_27 { pt3dadd( 9.75816, -63.471, 10.2547, 1.38 ) }
    dend_27 { pt3dadd( 10.9388, -66.8557, 11.8629, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 58/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -1.70124, -29.3618, 16.2508, 0.83 ) }
    dend_25 { pt3dadd( -2.23175, -29.2116, 16.5803, 0.83 ) }
    dend_25 { pt3dadd( -4.63839, -28.6109, 18.1763, 0.83 ) }
    dend_25 { pt3dadd( -7.74394, -27.8249, 20.2158, 0.83 ) }
    dend_25 { pt3dadd( -11.5945, -26.8548, 22.849, 0.83 ) }
    dend_25 { pt3dadd( -16.1757, -25.7813, 25.9495, 0.83 ) }
    dend_25 { pt3dadd( -19.3272, -25.1097, 28.073, 0.83 ) }
    dend_25 { pt3dadd( -24.0789, -24.3446, 31.3393, 0.83 ) }
    dend_25 { pt3dadd( -25.5061, -24.1479, 32.3424, 0.83 ) }
    dend_25 { pt3dadd( -29.1235, -23.7999, 34.7771, 0.83 ) }
    dend_25 { pt3dadd( -31.4462, -23.5988, 36.2542, 1.11 ) }
    dend_25 { pt3dadd( -33.5922, -23.4901, 37.6823, 0.83 ) }
    dend_25 { pt3dadd( -37.0244, -23.3813, 40.0363, 0.83 ) }
    dend_25 { pt3dadd( -40.1713, -23.2885, 42.09, 0.83 ) }
    dend_25 { pt3dadd( -42.2376, -23.2672, 43.5056, 0.83 ) }
    dend_25 { pt3dadd( -45.6508, -23.2412, 45.821, 1.11 ) }
    dend_25 { pt3dadd( -51.8717, -23.148, 50.0506, 0.83 ) }
    dend_25 { pt3dadd( -54.0169, -23.1678, 51.4431, 0.83 ) }
    dend_25 { pt3dadd( -55.9642, -23.2064, 52.6275, 0.83 ) }
    dend_25 { pt3dadd( -59.6682, -23.4306, 54.7528, 0.83 ) }
    dend_25 { pt3dadd( -61.7772, -23.5781, 55.8481, 0.83 ) }
    dend_25 { pt3dadd( -63.9805, -23.8204, 56.7866, 0.83 ) }
    dend_25 { pt3dadd( -67.1381, -24.1536, 57.8853, 0.55 ) }
    dend_25 { pt3dadd( -69.4849, -24.3437, 58.6575, 0.83 ) }
    dend_25 { pt3dadd( -71.5482, -24.4451, 59.2751, 0.55 ) }
    dend_25 { pt3dadd( -73.8385, -24.5053, 59.8516, 1.11 ) }
    dend_25 { pt3dadd( -76.2009, -24.5453, 60.5595, 0.55 ) }
    dend_25 { pt3dadd( -77.8096, -24.5555, 61.0826, 0.55 ) }
    dend_25 { pt3dadd( -80.2628, -24.5076, 61.9772, 1.11 ) }
    dend_25 { pt3dadd( -82.5032, -24.5379, 62.8393, 0.83 ) }
    dend_25 { pt3dadd( -83.8876, -24.5535, 63.4026, 1.11 ) }
    dend_25 { pt3dadd( -86.3601, -24.5542, 64.4732, 0.55 ) }
    dend_25 { pt3dadd( -89.0065, -24.5411, 65.6043, 0.83 ) }
    dend_25 { pt3dadd( -90.0941, -24.5503, 66.2034, 0.28 ) }
    dend_25 { pt3dadd( -91.228, -24.5901, 67.0366, 0.55 ) }
    dend_25 { pt3dadd( -93.97, -24.6694, 69.155, 0.28 ) }
    dend_25 { pt3dadd( -95.0463, -24.7009, 70.0343, 0.83 ) }
    dend_25 { pt3dadd( -96.089, -24.7282, 70.9456, 0.83 ) }
    dend_25 { pt3dadd( -102.176, -24.9391, 76.7825, 0.83 ) }
    dend_25 { pt3dadd( -105.396, -25.1071, 79.9663, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 98/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.70124, -29.3618, 16.2508, 0.55 ) }
    dend_24 { pt3dadd( -2.86117, -31.0869, 16.6168, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_24 { pt3dadd( -3.91346, -32.5757, 17.3236, 0.55 ) }
    dend_24 { pt3dadd( -5.00701, -34.0233, 18.2135, 0.55 ) }
    dend_24 { pt3dadd( -5.60978, -34.7782, 18.8751, 1.11 ) }
    dend_24 { pt3dadd( -7.19689, -36.6777, 20.7321, 0.55 ) }
    dend_24 { pt3dadd( -7.7057, -37.2693, 21.3579, 0.83 ) }
    dend_24 { pt3dadd( -9.8116, -39.5573, 24.2522, 0.55 ) }
    dend_24 { pt3dadd( -10.5881, -40.3679, 25.3232, 0.83 ) }
    dend_24 { pt3dadd( -12.6604, -42.5997, 28.2499, 0.55 ) }
    dend_24 { pt3dadd( -13.2424, -43.1871, 28.9837, 0.83 ) }
    dend_24 { pt3dadd( -14.2633, -44.1684, 30.1108, 0.55 ) }
    dend_24 { pt3dadd( -15.4846, -45.3385, 31.2695, 0.83 ) }
    dend_24 { pt3dadd( -17.1303, -47.0104, 32.4883, 0.28 ) }
    dend_24 { pt3dadd( -17.5131, -47.418, 32.7449, 0.55 ) }
    dend_24 { pt3dadd( -19.0861, -49.1521, 33.6367, 0.28 ) }
    dend_24 { pt3dadd( -19.9746, -50.1803, 34.2069, 0.83 ) }
    dend_24 { pt3dadd( -21.4586, -52.0294, 35.2222, 0.28 ) }
    dend_24 { pt3dadd( -22.1253, -52.9348, 35.7505, 0.55 ) }
    dend_24 { pt3dadd( -23.1802, -54.4717, 36.717, 0.28 ) }
    dend_24 { pt3dadd( -24.1442, -56.0455, 37.7401, 0.83 ) }
    dend_24 { pt3dadd( -25.1471, -58.0256, 38.9947, 0.28 ) }
    dend_24 { pt3dadd( -25.5739, -59.0336, 39.578, 0.83 ) }
    dend_24 { pt3dadd( -26.2458, -60.8886, 40.554, 0.28 ) }
    dend_24 { pt3dadd( -26.4217, -61.4235, 40.8198, 0.55 ) }
    dend_24 { pt3dadd( -27.0836, -63.5952, 41.7978, 0.28 ) }
    dend_24 { pt3dadd( -27.513, -64.9565, 42.4249, 0.83 ) }
    dend_24 { pt3dadd( -28.7025, -68.4622, 44.1329, 0.28 ) }
    dend_24 { pt3dadd( -29.1878, -69.7651, 44.8599, 1.11 ) }
    dend_24 { pt3dadd( -30.4368, -73.0736, 46.7982, 0.28 ) }
    dend_24 { pt3dadd( -30.7432, -73.8786, 47.2974, 0.55 ) }
    dend_24 { pt3dadd( -32.1546, -77.5374, 49.6421, 0.28 ) }
    dend_24 { pt3dadd( -32.7849, -79.1776, 50.7908, 1.11 ) }
    dend_24 { pt3dadd( -34.1562, -82.9052, 53.557, 0.28 ) }
    dend_24 { pt3dadd( -34.4757, -83.8418, 54.3047, 0.55 ) }
    dend_24 { pt3dadd( -34.8977, -85.2206, 55.4334, 0.28 ) }
    dend_24 { pt3dadd( -35.1243, -85.9688, 56.0409, 0.55 ) }
    dend_24 { pt3dadd( -35.6752, -87.8047, 57.4475, 0.28 ) }
    dend_24 { pt3dadd( -36.1518, -89.1022, 58.3867, 0.55 ) }
    dend_24 { pt3dadd( -36.9816, -90.9005, 59.6536, 0.28 ) }
    dend_24 { pt3dadd( -37.5317, -91.8607, 60.3358, 0.55 ) }
    dend_24 { pt3dadd( -38.2259, -92.9207, 61.11, 0.55 ) }
    dend_24 { pt3dadd( -39.3497, -94.4485, 62.1995, 0.28 ) }
    dend_24 { pt3dadd( -40.063, -95.2959, 62.7582, 0.55 ) }
    dend_24 { pt3dadd( -41.2302, -96.5155, 63.5529, 0.28 ) }
    dend_24 { pt3dadd( -41.7497, -97.0472, 63.9205, 0.55 ) }
    dend_24 { pt3dadd( -43.1612, -98.5123, 65.0586, 0.28 ) }
    dend_24 { pt3dadd( -43.9049, -99.3563, 65.6919, 0.83 ) }
    dend_24 { pt3dadd( -46.1806, -102.06, 67.6745, 0.28 ) }
    dend_24 { pt3dadd( -46.7358, -102.725, 68.1778, 0.55 ) }
    dend_24 { pt3dadd( -48.6597, -104.86, 69.8211, 0.28 ) }
    dend_24 { pt3dadd( -49.8533, -106.189, 70.8463, 1.11 ) }
    dend_24 { pt3dadd( -51.6136, -108.136, 72.3222, 0.28 ) }
    dend_24 { pt3dadd( -52.319, -108.946, 72.9663, 0.55 ) }
    dend_24 { pt3dadd( -54.4234, -111.493, 74.9651, 0.28 ) }
    dend_24 { pt3dadd( -55.2953, -112.575, 75.7824, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 54/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -6.33944, 16.3806, 2.3552, 1.11 ) }
    dend_13 { pt3dadd( -11.2219, 17.5447, 1.34051, 1.11 ) }
    dend_13 { pt3dadd( -14.5839, 18.3463, 0.641807, 1.38 ) }
    dend_13 { pt3dadd( -19.4851, 19.5148, -0.376782, 1.11 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 58/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -6.33944, 16.3806, 2.3552, 1.11 ) }
    dend_10 { pt3dadd( -6.22691, 17.7772, 1.40676, 1.11 ) }
    dend_10 { pt3dadd( -6.14082, 20.0611, -0.182074, 1.11 ) }
    dend_10 { pt3dadd( -6.1253, 22.0369, -1.46055, 1.11 ) }
    dend_10 { pt3dadd( -5.90019, 27.2678, -4.8687, 1.11 ) }
    dend_10 { pt3dadd( -5.70855, 29.0543, -6.06407, 0.55 ) }
    dend_10 { pt3dadd( -5.26218, 31.8968, -7.93476, 0.83 ) }
    dend_10 { pt3dadd( -4.37728, 35.24, -10.1043, 0.83 ) }
    dend_10 { pt3dadd( -3.69962, 37.2414, -11.4043, 0.83 ) }
    dend_10 { pt3dadd( -2.71818, 39.9034, -12.9869, 0.83 ) }
    dend_10 { pt3dadd( -1.75696, 42.3531, -14.2037, 0.83 ) }
    dend_10 { pt3dadd( -0.24577, 45.5769, -15.8846, 0.83 ) }
    dend_10 { pt3dadd( 1.25414, 48.5189, -17.3606, 0.83 ) }
    dend_10 { pt3dadd( 2.51531, 50.9513, -18.4468, 0.83 ) }
    dend_10 { pt3dadd( 3.87003, 53.5897, -19.5375, 0.83 ) }
    dend_10 { pt3dadd( 4.67415, 55.3381, -20.125, 0.83 ) }
    dend_10 { pt3dadd( 6.24486, 59.2503, -21.1834, 0.83 ) }
    dend_10 { pt3dadd( 7.13894, 61.62, -21.6765, 0.83 ) }
    dend_10 { pt3dadd( 7.41612, 62.4362, -21.7967, 0.83 ) }
    dend_10 { pt3dadd( 8.14716, 64.3075, -21.9744, 0.83 ) }
    dend_10 { pt3dadd( 8.8939, 66.1418, -22.1488, 0.55 ) }
    dend_10 { pt3dadd( 9.74503, 68.1774, -22.4427, 0.55 ) }
    dend_10 { pt3dadd( 10.3542, 69.6979, -22.7338, 0.83 ) }
    dend_10 { pt3dadd( 10.692, 70.4711, -22.9706, 0.83 ) }
    dend_10 { pt3dadd( 12.0046, 73.5296, -24.061, 0.83 ) }
    dend_10 { pt3dadd( 13.0171, 75.9147, -25.0971, 0.83 ) }
    dend_10 { pt3dadd( 14.1038, 78.2893, -26.3475, 0.83 ) }
    dend_10 { pt3dadd( 14.7193, 79.5438, -27.1265, 0.83 ) }
    dend_10 { pt3dadd( 15.3168, 80.8332, -28.0349, 0.83 ) }
    dend_10 { pt3dadd( 19.5174, 89.5142, -30.68, 0.83 ) }
    dend_10 { pt3dadd( 23.7969, 97.7506, -34.4012, 0.83 ) }
    dend_10 { pt3dadd( 28.5395, 104.862, -39.5905, 0.83 ) }
    dend_10 { pt3dadd( 34.0577, 110.515, -45.722, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 91/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 64.5756, 51.2294, 78.1145, 1.11 ) }
    dend_3 { pt3dadd( 65.6491, 52.5085, 79.0993, 1.11 ) }
    dend_3 { pt3dadd( 68.2682, 55.8239, 81.6405, 0.28 ) }
    dend_3 { pt3dadd( 68.9052, 56.7076, 82.2337, 0.28 ) }
    dend_3 { pt3dadd( 69.243, 57.2161, 82.5018, 1.11 ) }
    dend_3 { pt3dadd( 70.3047, 58.9033, 83.4269, 0.28 ) }
    dend_3 { pt3dadd( 70.9782, 60.0195, 84.0434, 0.55 ) }
    dend_3 { pt3dadd( 72.0357, 61.8595, 84.8684, 0.28 ) }
    dend_3 { pt3dadd( 72.9138, 63.372, 85.3529, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_3 { pt3dadd( 74.0398, 65.0873, 85.7446, 0.28 ) }
    dend_3 { pt3dadd( 75.9464, 67.7174, 86.118, 0.55 ) }
    dend_3 { pt3dadd( 78.2272, 70.479, 86.2616, 0.28 ) }
    dend_3 { pt3dadd( 81.054, 73.6603, 86.1419, 0.28 ) }
    dend_3 { pt3dadd( 81.8558, 74.4624, 86.0432, 0.55 ) }
    dend_3 { pt3dadd( 84.495, 76.8615, 85.6789, 0.28 ) }
    dend_3 { pt3dadd( 85.9872, 78.2038, 85.4894, 0.83 ) }
    dend_3 { pt3dadd( 87.8679, 79.8205, 85.0419, 0.28 ) }
    dend_3 { pt3dadd( 88.5077, 80.324, 84.8568, 0.55 ) }
    dend_3 { pt3dadd( 90.4384, 81.7622, 84.3742, 0.28 ) }
    dend_3 { pt3dadd( 91.3793, 82.4592, 84.2422, 0.55 ) }
    dend_3 { pt3dadd( 93.8224, 84.2399, 84.4703, 0.28 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 12/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 64.5756, 51.2294, 78.1145, 0.55 ) }
    dend_2 { pt3dadd( 66.8355, 50.0965, 78.4655, 0.55 ) }
    dend_2 { pt3dadd( 68.5983, 49.1758, 78.8056, 0.28 ) }
    dend_2 { pt3dadd( 69.7885, 48.531, 79.1901, 0.83 ) }
    dend_2 { pt3dadd( 71.4361, 47.6011, 79.8213, 0.28 ) }
    dend_2 { pt3dadd( 71.7635, 47.4164, 79.9468, 0.55 ) }
    dend_2 { pt3dadd( 73.8605, 46.2328, 80.7502, 0.28 ) }
    dend_2 { pt3dadd( 73.8605, 46.2328, 80.7502, 0.83 ) }
    dend_2 { pt3dadd( 75.8322, 44.7148, 82.0173, 0.28 ) }
    dend_2 { pt3dadd( 76.2221, 44.4485, 82.3085, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 22/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 8.27093, -49.8441, -4.76437, 1.38 ) }
    dend_46 { pt3dadd( 8.3142, -52.4606, -4.55684, 1.38 ) }
    dend_46 { pt3dadd( 8.27947, -56.3657, -4.08745, 1.38 ) }
    dend_46 { pt3dadd( 8.20425, -58.3476, -3.82946, 1.38 ) }
    dend_46 { pt3dadd( 7.81652, -62.4641, -3.36155, 1.38 ) }
    dend_46 { pt3dadd( 7.48673, -65.0019, -3.04195, 1.38 ) }
    dend_46 { pt3dadd( 6.97437, -69.0126, -2.52533, 1.38 ) }
    dend_46 { pt3dadd( 6.66461, -71.1314, -2.23243, 1.38 ) }
    dend_46 { pt3dadd( 6.1615, -74.585, -1.74229, 1.38 ) }
    dend_46 { pt3dadd( 5.69119, -78.0871, -1.209, 1.66 ) }
    dend_46 { pt3dadd( 5.32133, -81.5261, -0.645069, 1.38 ) }
    dend_46 { pt3dadd( 4.87049, -85.9426, 0.012337, 1.38 ) }
    dend_46 { pt3dadd( 4.55952, -89.291, 0.335842, 1.38 ) }
    dend_46 { pt3dadd( 4.47572, -90.6865, 0.495818, 1.38 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 36/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 8.27093, -49.8441, -4.76437, 1.11 ) }
    dend_43 { pt3dadd( 9.77657, -51.2441, -5.92949, 1.11 ) }
    dend_43 { pt3dadd( 12.0937, -53.442, -7.78438, 1.11 ) }
    dend_43 { pt3dadd( 15.5102, -56.7339, -10.3231, 1.11 ) }
    dend_43 { pt3dadd( 18.421, -59.4338, -12.3695, 1.11 ) }
    dend_43 { pt3dadd( 20.9715, -61.7326, -14.0609, 1.11 ) }
    dend_43 { pt3dadd( 23.3809, -63.8561, -15.7608, 0.83 ) }
    dend_43 { pt3dadd( 24.1528, -64.5313, -16.3298, 0.83 ) }
    dend_43 { pt3dadd( 26.2958, -66.2455, -17.9049, 0.83 ) }
    dend_43 { pt3dadd( 28.2879, -67.6223, -19.2052, 0.83 ) }
    dend_43 { pt3dadd( 29.4333, -68.2175, -19.9485, 0.83 ) }
    dend_43 { pt3dadd( 33.5354, -69.8549, -22.3193, 0.83 ) }
    dend_43 { pt3dadd( 35.8374, -70.6675, -23.5887, 0.83 ) }
    dend_43 { pt3dadd( 37.8127, -71.3186, -24.7408, 0.83 ) }
    dend_43 { pt3dadd( 39.7343, -71.8598, -25.9283, 0.83 ) }
    dend_43 { pt3dadd( 42.7432, -72.6507, -27.7081, 0.83 ) }
    dend_43 { pt3dadd( 45.804, -73.3253, -29.3781, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_27 (entry count 53/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 10.9388, -66.8557, 11.8629, 0.83 ) }
    dend_39 { pt3dadd( 9.91803, -68.8894, 12.5223, 0.83 ) }
    dend_39 { pt3dadd( 8.7777, -71.0918, 13.1251, 0.83 ) }
    dend_39 { pt3dadd( 6.84681, -75.1459, 14.096, 0.83 ) }
    dend_39 { pt3dadd( 5.74192, -77.6773, 14.6115, 0.83 ) }
    dend_39 { pt3dadd( 5.0906, -79.2969, 14.9114, 0.55 ) }
    dend_39 { pt3dadd( 4.49815, -80.9473, 15.2248, 0.83 ) }
    dend_39 { pt3dadd( 3.89912, -82.7891, 15.5072, 0.83 ) }
    dend_39 { pt3dadd( 3.45535, -84.3996, 15.7155, 0.83 ) }
    dend_39 { pt3dadd( 3.16937, -85.7854, 15.8304, 0.55 ) }
    dend_39 { pt3dadd( 3.00114, -86.8332, 15.9485, 0.83 ) }
    dend_39 { pt3dadd( 2.60266, -90.0732, 16.3314, 0.83 ) }
    dend_39 { pt3dadd( 2.45363, -91.8251, 16.5448, 1.11 ) }
    dend_39 { pt3dadd( 2.28816, -93.6635, 16.758, 0.55 ) }
    dend_39 { pt3dadd( 2.18447, -94.6395, 16.8874, 0.83 ) }
    dend_39 { pt3dadd( 2.07685, -96.0299, 17.0781, 0.55 ) }
    dend_39 { pt3dadd( 2.03321, -97.4312, 17.2422, 0.55 ) }
    dend_39 { pt3dadd( 2.02922, -97.9833, 17.296, 0.83 ) }
    dend_39 { pt3dadd( 2.06359, -99.3573, 17.4379, 0.83 ) }
    dend_39 { pt3dadd( 2.17441, -102.242, 17.7354, 0.55 ) }
    dend_39 { pt3dadd( 2.21337, -103.725, 17.8929, 0.83 ) }
    dend_39 { pt3dadd( 2.24684, -105.806, 18.2308, 0.55 ) }
    dend_39 { pt3dadd( 2.25894, -107.19, 18.521, 0.55 ) }
    dend_39 { pt3dadd( 2.2208, -110.097, 19.207, 0.83 ) }
    dend_39 { pt3dadd( 2.18783, -111.444, 19.5125, 0.55 ) }
    dend_39 { pt3dadd( 2.11434, -113.821, 20.0112, 0.83 ) }
    dend_39 { pt3dadd( 1.96258, -116.68, 20.7533, 0.55 ) }
    dend_39 { pt3dadd( 1.78804, -119.529, 21.631, 0.83 ) }
    dend_39 { pt3dadd( 1.71789, -120.862, 21.9971, 0.83 ) }
    dend_39 { pt3dadd( 1.57003, -122.57, 22.3621, 0.55 ) }
    dend_39 { pt3dadd( 1.34354, -124.429, 22.5529, 0.55 ) }
    dend_39 { pt3dadd( 0.913655, -126.913, 22.4099, 0.83 ) }
    dend_39 { pt3dadd( 0.505788, -128.738, 21.923, 0.55 ) }
    dend_39 { pt3dadd( -0.448054, -131.789, 20.9846, 0.83 ) }
    dend_39 { pt3dadd( -1.10956, -133.355, 20.4675, 0.83 ) }
    dend_39 { pt3dadd( -1.97694, -134.904, 19.8354, 0.55 ) }
    dend_39 { pt3dadd( -2.82215, -136.264, 19.1145, 0.83 ) }
    dend_39 { pt3dadd( -4.17905, -138.276, 17.9436, 0.55 ) }
    dend_39 { pt3dadd( -5.97467, -140.807, 16.5092, 1.11 ) }
    dend_39 { pt3dadd( -7.77798, -143.385, 15.1316, 0.83 ) }
    dend_39 { pt3dadd( -9.24631, -145.528, 13.9598, 1.11 ) }
    dend_39 { pt3dadd( -10.8268, -148.088, 12.6443, 1.11 ) }
    dend_39 { pt3dadd( -11.6234, -149.527, 11.9562, 0.55 ) }
    dend_39 { pt3dadd( -12.56, -151.423, 11.1265, 0.83 ) }
    dend_39 { pt3dadd( -13.7774, -154.386, 9.83813, 0.55 ) }
    dend_39 { pt3dadd( -14.2253, -155.651, 9.42371, 0.55 ) }
    dend_39 { pt3dadd( -15.1298, -158.455, 8.78891, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_39 { pt3dadd( -15.663, -160.159, 8.55201, 0.55 ) }
    dend_39 { pt3dadd( -16.0611, -161.589, 8.42105, 0.55 ) }
    dend_39 { pt3dadd( -16.2225, -162.19, 8.42515, 0.83 ) }
    dend_39 { pt3dadd( -16.6071, -163.923, 8.61218, 0.28 ) }
    dend_39 { pt3dadd( -16.7428, -164.738, 8.68777, 0.55 ) }
    dend_39 { pt3dadd( -16.9529, -166.31, 8.78648, 0.28 ) }
    dend_39 { pt3dadd( -16.9917, -166.865, 8.796, 0.55 ) }
    dend_39 { pt3dadd( -17.0412, -168.83, 8.68059, 0.28 ) }
    dend_39 { pt3dadd( -17.0248, -170.431, 8.48678, 0.83 ) }
    dend_39 { pt3dadd( -16.9212, -171.728, 8.25265, 0.55 ) }
    dend_39 { pt3dadd( -16.7591, -172.923, 8.0088, 0.55 ) }
    dend_39 { pt3dadd( -16.3588, -174.862, 7.57395, 0.28 ) }
    dend_39 { pt3dadd( -16.149, -175.82, 7.38066, 0.83 ) }
    dend_39 { pt3dadd( -15.8237, -177.165, 7.08714, 1.11 ) }
    dend_39 { pt3dadd( -15.4916, -178.441, 6.8122, 0.28 ) }
    dend_39 { pt3dadd( -15.2401, -179.479, 6.54625, 0.55 ) }
    dend_39 { pt3dadd( -14.8711, -180.859, 6.08609, 0.55 ) }
    dend_39 { pt3dadd( -14.376, -182.684, 5.43653, 0.55 ) }
    dend_39 { pt3dadd( -14.0769, -183.909, 4.87845, 0.28 ) }
    dend_39 { pt3dadd( -13.7342, -185.552, 3.92538, 0.55 ) }
    dend_39 { pt3dadd( -13.3096, -187.701, 2.58911, 0.28 ) }
    dend_39 { pt3dadd( -12.9692, -189.467, 1.41822, 0.55 ) }
    dend_39 { pt3dadd( -12.4679, -191.96, -0.34911, 0.55 ) }
    dend_39 { pt3dadd( -11.7794, -195.149, -2.73057, 0.55 ) }
    dend_39 { pt3dadd( -11.3409, -197.595, -4.53443, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 25/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 10.9388, -66.8557, 11.8629, 0.83 ) }
    dend_28 { pt3dadd( 13.467, -69.5383, 11.4102, 0.83 ) }
    dend_28 { pt3dadd( 14.6017, -70.7673, 11.5249, 1.11 ) }
    dend_28 { pt3dadd( 15.9386, -72.3079, 11.8476, 0.83 ) }
    dend_28 { pt3dadd( 16.6415, -73.1383, 12.0649, 0.83 ) }
    dend_28 { pt3dadd( 17.6319, -74.3709, 12.3926, 0.83 ) }
    dend_28 { pt3dadd( 19.0818, -76.4795, 12.9742, 1.11 ) }
    dend_28 { pt3dadd( 20.9743, -79.9465, 14.1523, 0.83 ) }
    dend_28 { pt3dadd( 21.4147, -81.0478, 14.5152, 0.83 ) }
    dend_28 { pt3dadd( 21.7493, -82.084, 14.8534, 0.83 ) }
    dend_28 { pt3dadd( 22.7043, -85.1465, 15.7668, 0.83 ) }
    dend_28 { pt3dadd( 23.5178, -88.0935, 16.5454, 0.83 ) }
    dend_28 { pt3dadd( 24.1663, -90.8748, 17.1788, 1.11 ) }
    dend_28 { pt3dadd( 24.9772, -95.1024, 18.0241, 1.11 ) }
    dend_28 { pt3dadd( 25.3948, -97.6653, 18.5929, 0.83 ) }
    dend_28 { pt3dadd( 25.7448, -100.303, 19.1937, 0.83 ) }
    dend_28 { pt3dadd( 25.9813, -101.862, 19.5631, 0.83 ) }
    dend_28 { pt3dadd( 26.3196, -103.547, 20.0618, 1.11 ) }
    dend_28 { pt3dadd( 27.1308, -106.963, 21.2018, 0.55 ) }
    dend_28 { pt3dadd( 27.4554, -108.27, 21.7228, 0.83 ) }
    dend_28 { pt3dadd( 28.0656, -110.72, 22.7685, 1.11 ) }
    dend_28 { pt3dadd( 28.9921, -114.261, 24.4085, 1.11 ) }
    dend_28 { pt3dadd( 30.403, -119.021, 26.6994, 0.55 ) }
    dend_28 { pt3dadd( 31.3508, -122.153, 28.2436, 0.83 ) }
    dend_28 { pt3dadd( 32.067, -124.63, 29.4341, 0.55 ) }
    dend_28 { pt3dadd( 32.1884, -125.182, 29.6958, 0.83 ) }
    dend_28 { pt3dadd( 32.429, -126.828, 30.4747, 0.55 ) }
    dend_28 { pt3dadd( 32.4989, -128.096, 31.0273, 0.83 ) }
    dend_28 { pt3dadd( 32.5274, -131.441, 32.071, 1.11 ) }
    dend_28 { pt3dadd( 32.4911, -134.077, 32.7493, 0.83 ) }
    dend_28 { pt3dadd( 32.6157, -136.914, 33.2506, 1.11 ) }
    dend_28 { pt3dadd( 32.8631, -139.086, 33.5508, 0.83 ) }
    dend_28 { pt3dadd( 33.1336, -140.803, 33.6668, 1.11 ) }
    dend_28 { pt3dadd( 33.8158, -144.231, 33.8037, 0.55 ) }
    dend_28 { pt3dadd( 34.1819, -145.66, 33.7797, 0.83 ) }
    dend_28 { pt3dadd( 35.2402, -149.143, 33.5916, 0.83 ) }
    dend_28 { pt3dadd( 36.1369, -151.531, 33.3049, 1.11 ) }
    dend_28 { pt3dadd( 37.1714, -154.003, 32.8825, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 63/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -19.4851, 19.5148, -0.376782, 0.83 ) }
    dend_15 { pt3dadd( -23.1101, 20.6668, 0.230041, 0.83 ) }
    dend_15 { pt3dadd( -25.0872, 21.295, 0.561006, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 66/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -19.4851, 19.5148, -0.376782, 0.83 ) }
    dend_14 { pt3dadd( -21.9243, 18.288, -0.376782, 0.83 ) }
    dend_14 { pt3dadd( -24.5516, 16.7262, -0.376782, 0.83 ) }
    dend_14 { pt3dadd( -25.8387, 15.8292, -0.36029, 0.83 ) }
    dend_14 { pt3dadd( -28.2978, 14.0152, -0.286013, 0.83 ) }
    dend_14 { pt3dadd( -29.5297, 13.046, -0.217199, 0.83 ) }
    dend_14 { pt3dadd( -31.2833, 11.5973, -0.0644055, 0.55 ) }
    dend_14 { pt3dadd( -33.0342, 10.0409, 0.159766, 0.83 ) }
    dend_14 { pt3dadd( -34.3, 8.76276, 0.313368, 0.55 ) }
    dend_14 { pt3dadd( -35.8188, 7.04492, 0.476305, 0.55 ) }
    dend_14 { pt3dadd( -36.4736, 6.19913, 0.533985, 0.83 ) }
    dend_14 { pt3dadd( -37.3824, 4.95957, 0.580268, 0.55 ) }
    dend_14 { pt3dadd( -38.12, 4.07178, 0.576346, 0.83 ) }
    dend_14 { pt3dadd( -39.6716, 2.38286, 0.488066, 0.55 ) }
    dend_14 { pt3dadd( -40.1098, 1.93753, 0.466816, 0.83 ) }
    dend_14 { pt3dadd( -41.4226, 0.757419, 0.433681, 0.28 ) }
    dend_14 { pt3dadd( -42.293, 0.0765317, 0.531683, 0.55 ) }
    dend_14 { pt3dadd( -44.6605, -1.678, 1.34412, 0.55 ) }
    dend_14 { pt3dadd( -45.0608, -1.98629, 1.55932, 0.83 ) }
    dend_14 { pt3dadd( -46.712, -3.22966, 2.59735, 0.83 ) }
    dend_14 { pt3dadd( -48.8207, -4.78144, 4.03136, 0.83 ) }
    dend_14 { pt3dadd( -51.3304, -6.5171, 5.90544, 0.83 ) }
    dend_14 { pt3dadd( -53.7249, -8.21242, 7.96418, 0.28 ) }
    dend_14 { pt3dadd( -54.9824, -9.1445, 9.26924, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 90/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 34.0577, 110.515, -45.722, 0.55 ) }
    dend_12 { pt3dadd( 29.4006, 112.949, -54.2301, 0.55 ) }
    dend_12 { pt3dadd( 24.4917, 116.281, -62.2799, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 93/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 34.0577, 110.515, -45.722, 0.83 ) }
    dend_11 { pt3dadd( 38.5034, 118.886, -48.9099, 0.55 ) }
    dend_11 { pt3dadd( 43.7609, 127.306, -50.1161, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 96/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 93.8224, 84.2399, 84.4703, 0.55 ) }
    dend_5 { pt3dadd( 92.0697, 84.5539, 84.4847, 0.55 ) }
    dend_5 { pt3dadd( 91.0859, 84.7302, 84.4929, 0.28 ) }
    dend_5 { pt3dadd( 89.9615, 84.9316, 84.5021, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 0/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 93.8224, 84.2399, 84.4703, 0.28 ) }
    dend_4 { pt3dadd( 93.8728, 85.7271, 86.2109, 0.28 ) }
    dend_4 { pt3dadd( 93.8855, 86.1034, 86.6513, 0.55 ) }
    dend_4 { pt3dadd( 93.9536, 88.1138, 89.0042, 0.28 ) }
    dend_4 { pt3dadd( 93.9709, 88.6232, 89.6005, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 5/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 4.47572, -90.6865, 0.495818, 1.11 ) }
    dend_48 { pt3dadd( 4.41572, -94.0666, 0.495818, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 7/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 4.47572, -90.6865, 0.495818, 0.83 ) }
    dend_47 { pt3dadd( 6.05928, -92.3145, -1.04864, 0.83 ) }
    dend_47 { pt3dadd( 7.68208, -94.2157, -2.68862, 0.83 ) }
    dend_47 { pt3dadd( 9.61181, -96.8184, -4.7623, 0.83 ) }
    dend_47 { pt3dadd( 11.6262, -99.8607, -7.14638, 0.83 ) }
    dend_47 { pt3dadd( 12.6138, -101.476, -8.31983, 1.11 ) }
    dend_47 { pt3dadd( 13.4082, -102.901, -9.34973, 0.83 ) }
    dend_47 { pt3dadd( 13.8275, -103.868, -10.0367, 0.83 ) }
    dend_47 { pt3dadd( 14.2536, -105.03, -10.7991, 0.83 ) }
    dend_47 { pt3dadd( 14.7643, -106.508, -11.6817, 0.83 ) }
    dend_47 { pt3dadd( 15.6662, -108.762, -13.0219, 0.83 ) }
    dend_47 { pt3dadd( 16.851, -111.276, -14.6774, 0.83 ) }
    dend_47 { pt3dadd( 17.4034, -112.344, -15.3662, 0.83 ) }
    dend_47 { pt3dadd( 18.1343, -113.688, -16.2339, 0.83 ) }
    dend_47 { pt3dadd( 19.8374, -116.616, -18.1265, 0.83 ) }
    dend_47 { pt3dadd( 21.0234, -118.607, -19.3784, 0.83 ) }
    dend_47 { pt3dadd( 21.6485, -119.638, -20.0615, 0.83 ) }
    dend_47 { pt3dadd( 22.6752, -121.228, -21.0134, 0.83 ) }
    dend_47 { pt3dadd( 23.3295, -122.279, -21.6826, 0.83 ) }
    dend_47 { pt3dadd( 27.9166, -130.039, -26.0119, 0.83 ) }
    dend_47 { pt3dadd( 33.6748, -137.748, -28.7352, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 28/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 45.804, -73.3253, -29.3781, 0.83 ) }
    dend_45 { pt3dadd( 46.564, -71.4853, -29.3781, 0.83 ) }
    dend_45 { pt3dadd( 49.1937, -61.9491, -30.843, 0.83 ) }
    dend_45 { pt3dadd( 50.7422, -52.0707, -30.9807, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 32/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 45.804, -73.3253, -29.3781, 0.55 ) }
    dend_44 { pt3dadd( 47.002, -74.0182, -29.3781, 0.55 ) }
    dend_44 { pt3dadd( 48.8784, -75.1035, -29.3781, 0.55 ) }
    dend_44 { pt3dadd( 57.3572, -80.3643, -30.0358, 0.55 ) }
    dend_44 { pt3dadd( 65.8721, -85.6065, -30.1633, 0.55 ) }
    dend_44 { pt3dadd( 75.0514, -89.2757, -28.6541, 0.55 ) }
    dend_44 { pt3dadd( 84.6721, -92.0034, -28.6101, 0.55 ) }
    dend_44 { pt3dadd( 93.6556, -96.172, -29.9958, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 40/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -11.3409, -197.595, -4.53443, 0.28 ) }
    dend_41 { pt3dadd( -13.9641, -197.7, -4.78957, 0.28 ) }
    dend_41 { pt3dadd( -15.5673, -197.763, -4.9455, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 43/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -11.3409, -197.595, -4.53443, 0.55 ) }
    dend_40 { pt3dadd( -11.0135, -200.096, -6.83326, 0.55 ) }
    dend_40 { pt3dadd( -10.6814, -201.276, -7.89598, 0.55 ) }
    dend_40 { pt3dadd( -10.1461, -202.726, -9.03442, 0.28 ) }
    dend_40 { pt3dadd( -9.43206, -204.21, -10.2033, 0.55 ) }
    dend_40 { pt3dadd( -9.07576, -204.855, -10.6886, 0.28 ) }
    dend_40 { pt3dadd( -8.36954, -206.132, -11.6505, 0.55 ) }
    dend_40 { pt3dadd( -7.12755, -208.049, -12.9858, 0.28 ) }
    dend_40 { pt3dadd( -6.29189, -209.103, -13.7397, 0.55 ) }
    dend_40 { pt3dadd( -5.0126, -210.481, -14.6299, 0.28 ) }
    dend_40 { pt3dadd( -4.13042, -211.442, -15.1234, 0.55 ) }
    dend_40 { pt3dadd( 0.887672, -218.983, -19.3619, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 55/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 37.1714, -154.003, 32.8825, 0.55 ) }
    dend_30 { pt3dadd( 38.1331, -156.243, 33.4077, 0.55 ) }
    dend_30 { pt3dadd( 38.7622, -157.83, 33.7635, 0.83 ) }
    dend_30 { pt3dadd( 39.5121, -159.795, 34.2148, 0.55 ) }
    dend_30 { pt3dadd( 40.3107, -161.887, 34.6954, 0.83 ) }
    dend_30 { pt3dadd( 41.227, -164.287, 35.2469, 0.83 ) }
    dend_30 { pt3dadd( 41.6263, -165.334, 35.4872, 0.55 ) }
    dend_30 { pt3dadd( 42.3613, -167.381, 36.0027, 0.55 ) }
    dend_30 { pt3dadd( 42.871, -168.779, 36.3591, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 64/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 37.1714, -154.003, 32.8825, 0.28 ) }
    dend_29 { pt3dadd( 35.0992, -153.89, 32.6668, 0.28 ) }
    dend_29 { pt3dadd( 33.6973, -153.813, 32.5209, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 67/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -25.0872, 21.295, 0.561006, 0.83 ) }
    dend_17 { pt3dadd( -25.2209, 21.3719, 0.563496, 0.83 ) }
    dend_17 { pt3dadd( -29.0595, 23.3772, 0.551156, 0.83 ) }
    dend_17 { pt3dadd( -31.0305, 24.4359, 0.671749, 0.83 ) }
    dend_17 { pt3dadd( -33.3382, 25.5107, 0.856468, 0.83 ) }
    dend_17 { pt3dadd( -36.4696, 26.7905, 1.11805, 0.83 ) }
    dend_17 { pt3dadd( -37.6143, 27.2584, 1.21368, 0.83 ) }
    dend_17 { pt3dadd( -39.8549, 28.1028, 1.40683, 0.83 ) }
    dend_17 { pt3dadd( -45.4831, 29.8967, 1.92399, 0.83 ) }
    dend_17 { pt3dadd( -49.0803, 30.9264, 2.30853, 0.83 ) }
    dend_17 { pt3dadd( -52.0844, 31.814, 2.70686, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 78/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -25.0872, 21.295, 0.561006, 0.83 ) }
    dend_16 { pt3dadd( -26.2074, 21.4684, 2.65312, 0.83 ) }
    dend_16 { pt3dadd( -26.8362, 21.5456, 3.88111, 0.83 ) }
    dend_16 { pt3dadd( -27.9402, 21.7267, 5.90639, 0.83 ) }
    dend_16 { pt3dadd( -29.5914, 22.0174, 8.64316, 0.83 ) }
    dend_16 { pt3dadd( -33.6381, 22.7301, 15.3502, 0.83 ) }
    dend_16 { pt3dadd( -38.5388, 23.5931, 23.473, 0.28 ) }
    dend_16 { pt3dadd( -38.823, 23.6326, 24.0284, 0.55 ) }
    dend_16 { pt3dadd( -39.7126, 23.7203, 26.0469, 0.28 ) }
    dend_16 { pt3dadd( -40.3976, 23.7223, 27.9152, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 88/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 4.41572, -94.0666, 0.495818, 0.83 ) }
    dend_52 { pt3dadd( 3.00972, -95.4985, 2.72795, 0.83 ) }
    dend_52 { pt3dadd( -0.0669698, -98.6271, 7.11874, 0.83 ) }
    dend_52 { pt3dadd( -2.34929, -101.108, 10.2285, 1.11 ) }
    dend_52 { pt3dadd( -3.02935, -101.995, 11.1056, 0.83 ) }
    dend_52 { pt3dadd( -4.08286, -103.627, 12.3174, 0.55 ) }
    dend_52 { pt3dadd( -4.73031, -104.716, 12.9613, 0.83 ) }
    dend_52 { pt3dadd( -5.90121, -106.963, 13.7196, 0.55 ) }
    dend_52 { pt3dadd( -6.50406, -108.504, 13.805, 0.83 ) }
    dend_52 { pt3dadd( -8.04344, -112.527, 14.2024, 0.83 ) }
    dend_52 { pt3dadd( -9.12733, -115.328, 14.6333, 0.83 ) }
    dend_52 { pt3dadd( -9.68237, -116.864, 14.9105, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_52 { pt3dadd( -10.9839, -120.516, 15.7511, 0.83 ) }
    dend_52 { pt3dadd( -12.7634, -125.362, 17.028, 0.83 ) }
    dend_52 { pt3dadd( -15.4111, -132.193, 19.2073, 0.83 ) }
    dend_52 { pt3dadd( -16.4271, -134.595, 20.122, 0.83 ) }
    dend_52 { pt3dadd( -18.2746, -138.752, 21.8362, 0.83 ) }
    dend_52 { pt3dadd( -19.7121, -141.752, 23.1497, 0.83 ) }
    dend_52 { pt3dadd( -21.1715, -144.49, 24.4075, 0.83 ) }
    dend_52 { pt3dadd( -22.1166, -146.014, 25.1189, 0.55 ) }
    dend_52 { pt3dadd( -23.1608, -147.621, 25.7275, 0.55 ) }
    dend_52 { pt3dadd( -24.453, -149.347, 26.4606, 0.83 ) }
    dend_52 { pt3dadd( -26.1685, -151.37, 27.4098, 0.55 ) }
    dend_52 { pt3dadd( -26.9938, -152.376, 27.8564, 0.55 ) }
    dend_52 { pt3dadd( -28.5157, -154.36, 28.7368, 0.83 ) }
    dend_52 { pt3dadd( -29.3471, -155.601, 29.2163, 0.83 ) }
    dend_52 { pt3dadd( -30.8719, -158.165, 30.1218, 0.55 ) }
    dend_52 { pt3dadd( -31.5241, -159.412, 30.4646, 1.11 ) }
    dend_52 { pt3dadd( -32.42, -161.292, 30.8535, 1.11 ) }
    dend_52 { pt3dadd( -33.3859, -163.439, 31.1902, 0.83 ) }
    dend_52 { pt3dadd( -34.4114, -165.769, 31.4357, 0.83 ) }
    dend_52 { pt3dadd( -35.3687, -168.06, 31.537, 0.83 ) }
    dend_52 { pt3dadd( -36.7024, -171.398, 31.4027, 0.55 ) }
    dend_52 { pt3dadd( -37.2289, -172.668, 31.2634, 0.83 ) }
    dend_52 { pt3dadd( -38.1382, -174.811, 30.9194, 0.83 ) }
    dend_52 { pt3dadd( -39.0656, -176.906, 30.6192, 0.55 ) }
    dend_52 { pt3dadd( -40.2967, -179.653, 30.3974, 1.11 ) }
    dend_52 { pt3dadd( -41.2582, -181.868, 30.3549, 0.55 ) }
    dend_52 { pt3dadd( -42.002, -183.456, 30.3368, 0.55 ) }
    dend_52 { pt3dadd( -43.1456, -185.797, 30.3408, 0.83 ) }
    dend_52 { pt3dadd( -44.8544, -189.257, 30.4394, 0.55 ) }
    dend_52 { pt3dadd( -46.0752, -191.806, 30.626, 0.83 ) }
    dend_52 { pt3dadd( -46.672, -193.044, 30.8279, 0.83 ) }
    dend_52 { pt3dadd( -48.2135, -196.436, 31.5427, 0.55 ) }
    dend_52 { pt3dadd( -48.8702, -197.932, 31.8213, 1.11 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 33/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 4.41572, -94.0666, 0.495818, 1.11 ) }
    dend_49 { pt3dadd( 4.73511, -97.2518, 0.602276, 1.11 ) }
    dend_49 { pt3dadd( 4.99597, -100.852, 0.697379, 1.11 ) }
    dend_49 { pt3dadd( 5.14343, -102.887, 0.751141, 1.11 ) }
    dend_49 { pt3dadd( 5.24343, -104.267, 0.787596, 1.11 ) }
    dend_49 { pt3dadd( 5.37803, -106.124, 0.836669, 1.11 ) }
    dend_49 { pt3dadd( 5.69451, -110.492, 0.952048, 1.11 ) }
    dend_49 { pt3dadd( 5.63068, -113.585, 1.04496, 1.11 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 42.871, -168.779, 36.3591, 0.55 ) }
    dend_32 { pt3dadd( 44.7161, -171.632, 36.9476, 0.55 ) }
    dend_32 { pt3dadd( 45.5393, -172.96, 37.3466, 0.55 ) }
    dend_32 { pt3dadd( 46.3298, -174.258, 37.7819, 0.55 ) }
    dend_32 { pt3dadd( 46.9863, -175.29, 38.1292, 0.83 ) }
    dend_32 { pt3dadd( 48.4606, -177.776, 39.1053, 0.55 ) }
    dend_32 { pt3dadd( 49.6732, -180.033, 40.0039, 0.28 ) }
    dend_32 { pt3dadd( 49.9386, -180.57, 40.2571, 0.55 ) }
    dend_32 { pt3dadd( 50.3789, -181.499, 40.6989, 0.28 ) }
    dend_32 { pt3dadd( 51.3433, -183.647, 41.7032, 0.28 ) }
    dend_32 { pt3dadd( 52.4839, -186.467, 42.902, 0.55 ) }
    dend_32 { pt3dadd( 53.7178, -189.588, 44.0813, 0.55 ) }
    dend_32 { pt3dadd( 53.9949, -190.326, 44.3399, 0.55 ) }
    dend_32 { pt3dadd( 54.4344, -191.506, 44.7342, 0.83 ) }
    dend_32 { pt3dadd( 55.0338, -193.088, 45.2622, 0.55 ) }
    dend_32 { pt3dadd( 55.6133, -194.453, 45.6997, 0.83 ) }
    dend_32 { pt3dadd( 56.8371, -196.676, 46.4686, 0.55 ) }
    dend_32 { pt3dadd( 57.7905, -198.058, 47.0325, 0.55 ) }
    dend_32 { pt3dadd( 58.7589, -199.303, 47.5648, 0.83 ) }
    dend_32 { pt3dadd( 60.365, -201.094, 48.5027, 0.55 ) }
    dend_32 { pt3dadd( 61.655, -202.403, 49.292, 0.28 ) }
    dend_32 { pt3dadd( 63.8451, -204.486, 50.8095, 0.83 ) }
    dend_32 { pt3dadd( 65.4627, -205.915, 52.0421, 0.28 ) }
    dend_32 { pt3dadd( 66.3589, -206.681, 52.7723, 0.55 ) }
    dend_32 { pt3dadd( 68.7339, -208.688, 54.61, 0.28 ) }
    dend_32 { pt3dadd( 69.9977, -209.717, 55.2055, 0.55 ) }
    dend_32 { pt3dadd( 72.8342, -212.094, 55.04, 0.28 ) }
    dend_32 { pt3dadd( 73.78, -212.911, 54.8247, 0.83 ) }
    dend_32 { pt3dadd( 74.6782, -213.769, 54.5636, 0.28 ) }
    dend_32 { pt3dadd( 84.3253, -223.72, 53.1813, 0.55 ) }
    dend_32 { pt3dadd( 87.6256, -227.378, 52.93, 0.28 ) }
    dend_32 { pt3dadd( 89.5086, -229.628, 53.8142, 0.83 ) }
    dend_32 { pt3dadd( 92.6033, -233.663, 56.6994, 0.28 ) }
    dend_32 { pt3dadd( 93.4968, -234.877, 57.7854, 0.28 ) }
    dend_32 { pt3dadd( 95.0631, -237.068, 60.0717, 0.28 ) }
    dend_32 { pt3dadd( 95.4278, -237.617, 60.6482, 0.55 ) }
    dend_32 { pt3dadd( 96.6068, -239.693, 62.5109, 0.28 ) }
    dend_32 { pt3dadd( 97.351, -240.965, 63.448, 0.83 ) }
    dend_32 { pt3dadd( 98.257, -242.568, 64.3244, 0.28 ) }
    dend_32 { pt3dadd( 98.6234, -243.194, 64.6442, 0.55 ) }
    dend_32 { pt3dadd( 100.403, -246.503, 66.0037, 0.28 ) }
    dend_32 { pt3dadd( 101.604, -248.958, 66.9696, 0.83 ) }
    dend_32 { pt3dadd( 102.198, -250.39, 67.458, 0.28 ) }
    dend_32 { pt3dadd( 102.636, -251.51, 67.8187, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 85/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 42.871, -168.779, 36.3591, 0.28 ) }
    dend_31 { pt3dadd( 42.3237, -170.401, 36.195, 0.28 ) }
    dend_31 { pt3dadd( 41.2966, -173.124, 35.5116, 0.28 ) }
    dend_31 { pt3dadd( 40.5016, -175.264, 34.8271, 0.55 ) }
    dend_31 { pt3dadd( 39.4578, -178.19, 33.832, 0.28 ) }
    dend_31 { pt3dadd( 39.0341, -179.29, 33.446, 0.55 ) }
    dend_31 { pt3dadd( 38.1586, -181.379, 32.7057, 0.55 ) }
    dend_31 { pt3dadd( 36.451, -184.922, 31.3258, 0.55 ) }
    dend_31 { pt3dadd( 35.7764, -186.154, 30.8214, 0.28 ) }
    dend_31 { pt3dadd( 34.6644, -188.081, 30.0847, 0.83 ) }
    dend_31 { pt3dadd( 33.3717, -190.158, 29.4173, 0.28 ) }
    dend_31 { pt3dadd( 32.7331, -191.065, 29.1729, 0.55 ) }
    dend_31 { pt3dadd( 31.2527, -193.047, 28.7631, 0.28 ) }
    dend_31 { pt3dadd( 30.2636, -194.319, 28.651, 0.28 ) }
    dend_31 { pt3dadd( 28.6509, -196.2, 28.4766, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_31 { pt3dadd( 27.3485, -197.63, 28.3449, 0.55 ) }
    dend_31 { pt3dadd( 26.3401, -198.816, 28.2644, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 2/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -52.0844, 31.814, 2.70686, 0.55 ) }
    dend_21 { pt3dadd( -55.3981, 33.6326, 2.57147, 0.55 ) }
    dend_21 { pt3dadd( -56.3893, 34.1948, 2.57269, 0.55 ) }
    dend_21 { pt3dadd( -59.4808, 36.0794, 2.64085, 0.83 ) }
    dend_21 { pt3dadd( -61.6272, 37.358, 2.75989, 0.83 ) }
    dend_21 { pt3dadd( -63.8922, 38.668, 2.96262, 0.55 ) }
    dend_21 { pt3dadd( -67.2961, 40.6508, 3.33507, 0.83 ) }
    dend_21 { pt3dadd( -68.6142, 41.4259, 3.51764, 0.55 ) }
    dend_21 { pt3dadd( -70.0706, 42.2525, 3.75704, 1.11 ) }
    dend_21 { pt3dadd( -72.6163, 43.5356, 4.32273, 0.55 ) }
    dend_21 { pt3dadd( -73.9196, 44.06, 4.65361, 1.11 ) }
    dend_21 { pt3dadd( -75.4715, 44.4929, 5.07009, 1.11 ) }
    dend_21 { pt3dadd( -77.1637, 44.7678, 5.51499, 0.55 ) }
    dend_21 { pt3dadd( -79.6118, 45.1753, 6.12312, 0.83 ) }
    dend_21 { pt3dadd( -81.2028, 45.4532, 6.49398, 0.55 ) }
    dend_21 { pt3dadd( -83.1074, 45.9103, 6.91096, 0.83 ) }
    dend_21 { pt3dadd( -84.8842, 46.4473, 7.28463, 0.55 ) }
    dend_21 { pt3dadd( -86.7616, 47.1162, 7.68205, 0.83 ) }
    dend_21 { pt3dadd( -89.2673, 48.1985, 8.23461, 0.83 ) }
    dend_21 { pt3dadd( -90.967, 49.0865, 8.59711, 1.11 ) }
    dend_21 { pt3dadd( -93.2991, 50.3834, 9.07477, 0.55 ) }
    dend_21 { pt3dadd( -94.2614, 50.9585, 9.27562, 0.55 ) }
    dend_21 { pt3dadd( -95.0911, 51.4819, 9.44363, 0.83 ) }
    dend_21 { pt3dadd( -96.6948, 52.5124, 9.90263, 0.55 ) }
    dend_21 { pt3dadd( -98.2252, 53.4267, 10.4484, 0.83 ) }
    dend_21 { pt3dadd( -100.687, 54.8475, 11.2907, 0.55 ) }
    dend_21 { pt3dadd( -101.83, 55.509, 11.7019, 0.55 ) }
    dend_21 { pt3dadd( -102.337, 55.8208, 11.8861, 1.11 ) }
    dend_21 { pt3dadd( -105.153, 57.8079, 12.9675, 0.28 ) }
    dend_21 { pt3dadd( -106.185, 58.6465, 13.3671, 1.11 ) }
    dend_21 { pt3dadd( -108.848, 60.8733, 14.4457, 0.55 ) }
    dend_21 { pt3dadd( -110.398, 62.2046, 15.036, 0.28 ) }
    dend_21 { pt3dadd( -111.835, 63.4262, 15.4833, 0.83 ) }
    dend_21 { pt3dadd( -113.279, 64.6658, 15.8381, 0.28 ) }
    dend_21 { pt3dadd( -114.294, 65.5971, 15.9791, 1.11 ) }
    dend_21 { pt3dadd( -116.33, 67.5951, 16.1815, 0.28 ) }
    dend_21 { pt3dadd( -118.069, 69.4626, 16.2801, 0.83 ) }
    dend_21 { pt3dadd( -119.964, 71.4894, 16.1825, 0.28 ) }
    dend_21 { pt3dadd( -120.339, 71.8954, 16.141, 0.55 ) }
    dend_21 { pt3dadd( -121.519, 73.1732, 15.9411, 0.28 ) }
    dend_21 { pt3dadd( -122.979, 74.8215, 15.6661, 0.83 ) }
    dend_21 { pt3dadd( -123.762, 75.7677, 15.4936, 0.83 ) }
    dend_21 { pt3dadd( -124.898, 77.1393, 15.3427, 0.28 ) }
    dend_21 { pt3dadd( -126.72, 79.2432, 15.2908, 0.28 ) }
    dend_21 { pt3dadd( -127.562, 80.1553, 15.3364, 0.55 ) }
    dend_21 { pt3dadd( -128.643, 81.234, 15.4806, 0.28 ) }
    dend_21 { pt3dadd( -129.294, 81.8224, 15.5773, 0.83 ) }
    dend_21 { pt3dadd( -130.741, 83.0403, 15.7963, 0.28 ) }
    dend_21 { pt3dadd( -131.338, 83.5477, 15.8311, 0.55 ) }
    dend_21 { pt3dadd( -132.537, 84.5415, 15.784, 0.28 ) }
    dend_21 { pt3dadd( -132.994, 84.9729, 15.7252, 0.55 ) }
    dend_21 { pt3dadd( -133.972, 86.0167, 15.4679, 0.28 ) }
    dend_21 { pt3dadd( -134.884, 87.053, 15.1633, 0.83 ) }
    dend_21 { pt3dadd( -137.24, 89.7943, 14.2394, 0.28 ) }
    dend_21 { pt3dadd( -137.763, 90.3951, 13.9995, 0.28 ) }
    dend_21 { pt3dadd( -139.095, 91.8963, 13.3594, 0.55 ) }
    dend_21 { pt3dadd( -140.786, 93.6337, 13.4286, 0.28 ) }
    dend_21 { pt3dadd( -141.677, 94.4693, 13.8837, 0.55 ) }
    dend_21 { pt3dadd( -142.669, 95.3464, 14.5668, 1.38 ) }
    dend_21 { pt3dadd( -145.373, 97.5538, 17.0209, 0.28 ) }
    dend_21 { pt3dadd( -146.591, 98.4606, 18.2618, 0.83 ) }
    dend_21 { pt3dadd( -154.309, 103.56, 27.1697, 0.55 ) }
    dend_21 { pt3dadd( -154.678, 103.793, 27.7034, 1.11 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -52.0844, 31.814, 2.70686, 0.55 ) }
    dend_18 { pt3dadd( -53.8632, 30.7993, 2.70686, 0.55 ) }
    dend_18 { pt3dadd( -54.8638, 30.2555, 2.70686, 0.55 ) }
    dend_18 { pt3dadd( -57.4003, 28.8686, 2.70686, 0.83 ) }
    dend_18 { pt3dadd( -60.3711, 27.3438, 2.70686, 0.83 ) }
    dend_18 { pt3dadd( -61.9636, 26.6334, 2.75739, 0.55 ) }
    dend_18 { pt3dadd( -64.4082, 25.6661, 2.83964, 0.83 ) }
    dend_18 { pt3dadd( -66.1143, 25.1783, 2.90232, 0.55 ) }
    dend_18 { pt3dadd( -67.7342, 24.7514, 2.9696, 0.55 ) }
    dend_18 { pt3dadd( -71.4956, 23.9077, 3.15456, 1.11 ) }
    dend_18 { pt3dadd( -75.4306, 23.2647, 3.38127, 0.28 ) }
    dend_18 { pt3dadd( -76.8213, 23.1107, 3.47102, 1.11 ) }
    dend_18 { pt3dadd( -79.7997, 23.0297, 3.68507, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 78/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -48.8702, -197.932, 31.8213, 0.55 ) }
    dend_54 { pt3dadd( -50.4673, -200.897, 32.2601, 0.55 ) }
    dend_54 { pt3dadd( -51.8683, -203.497, 32.645, 0.55 ) }
    dend_54 { pt3dadd( -52.8091, -205.244, 32.9035, 0.83 ) }
    dend_54 { pt3dadd( -53.7992, -207.082, 33.1755, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 83/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -48.8702, -197.932, 31.8213, 0.28 ) }
    dend_53 { pt3dadd( -49.5819, -199.143, 32.7891, 0.28 ) }
    dend_53 { pt3dadd( -50.0577, -199.952, 33.4361, 0.83 ) }
    dend_53 { pt3dadd( -51.4036, -202.241, 35.2661, 0.55 ) }
    dend_53 { pt3dadd( -52.9168, -204.815, 37.3238, 0.28 ) }
    dend_53 { pt3dadd( -53.5386, -205.873, 38.1693, 1.11 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 89/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 5.63068, -113.585, 1.04496, 0.83 ) }
    dend_51 { pt3dadd( 6.47234, -115.999, 1.04774, 0.83 ) }
    dend_51 { pt3dadd( 6.98847, -117.76, 1.04332, 0.55 ) }
    dend_51 { pt3dadd( 7.59425, -119.683, 1.03306, 0.55 ) }
    dend_51 { pt3dadd( 8.10587, -121.286, 1.02281, 0.55 ) }
    dend_51 { pt3dadd( 8.47342, -122.372, 1.01561, 0.55 ) }
    dend_51 { pt3dadd( 8.7821, -123.321, 1.08445, 0.83 ) }
    dend_51 { pt3dadd( 9.35055, -125.215, 1.30687, 0.55 ) }
    dend_51 { pt3dadd( 9.86348, -127.09, 1.6185, 0.83 ) }
    dend_51 { pt3dadd( 10.2454, -128.507, 1.88938, 0.55 ) }
    dend_51 { pt3dadd( 10.6031, -130.101, 2.20689, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_51 { pt3dadd( 11.2379, -133.676, 2.83253, 0.55 ) }
    dend_51 { pt3dadd( 11.5861, -135.908, 3.17427, 0.83 ) }
    dend_51 { pt3dadd( 11.9999, -138.625, 3.56193, 0.55 ) }
    dend_51 { pt3dadd( 12.0686, -139.171, 3.62955, 0.55 ) }
    dend_51 { pt3dadd( 12.3609, -141.38, 3.8413, 0.55 ) }
    dend_51 { pt3dadd( 12.6802, -143.7, 4.01493, 0.83 ) }
    dend_51 { pt3dadd( 12.9045, -145.089, 4.06806, 0.83 ) }
    dend_51 { pt3dadd( 13.395, -148.243, 4.29527, 0.55 ) }
    dend_51 { pt3dadd( 13.6282, -149.779, 4.43506, 0.83 ) }
    dend_51 { pt3dadd( 13.9037, -151.71, 4.65798, 0.83 ) }
    dend_51 { pt3dadd( 14.1669, -153.72, 4.89353, 0.55 ) }
    dend_51 { pt3dadd( 14.5376, -157.034, 5.16792, 0.83 ) }
    dend_51 { pt3dadd( 14.8034, -160.488, 5.28338, 0.83 ) }
    dend_51 { pt3dadd( 14.9048, -163.476, 5.24893, 0.83 ) }
    dend_51 { pt3dadd( 14.9173, -164.636, 5.2008, 0.55 ) }
    dend_51 { pt3dadd( 14.8727, -166.583, 5.05667, 0.83 ) }
    dend_51 { pt3dadd( 14.7192, -169.123, 4.74126, 0.55 ) }
    dend_51 { pt3dadd( 14.6081, -170.281, 4.5358, 0.83 ) }
    dend_51 { pt3dadd( 14.4668, -171.762, 4.20459, 0.55 ) }
    dend_51 { pt3dadd( 14.3919, -172.918, 3.97588, 0.83 ) }
    dend_51 { pt3dadd( 14.3854, -175.739, 3.54418, 0.55 ) }
    dend_51 { pt3dadd( 14.3961, -176.907, 3.44186, 0.83 ) }
    dend_51 { pt3dadd( 14.5238, -180.047, 3.34298, 0.55 ) }
    dend_51 { pt3dadd( 14.5737, -180.658, 3.31093, 0.83 ) }
    dend_51 { pt3dadd( 14.8424, -182.559, 3.1404, 0.55 ) }
    dend_51 { pt3dadd( 15.1578, -184.017, 3.00009, 0.83 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 26/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 5.63068, -113.585, 1.04496, 0.83 ) }
    dend_50 { pt3dadd( 4.01888, -115.855, 1.98556, 0.83 ) }
    dend_50 { pt3dadd( 2.37593, -118.167, 2.92281, 0.83 ) }
    dend_50 { pt3dadd( 1.06853, -120.027, 3.62914, 0.83 ) }
    dend_50 { pt3dadd( -0.938098, -122.991, 4.64997, 0.83 ) }
    dend_50 { pt3dadd( -2.46267, -125.397, 5.33743, 1.11 ) }
    dend_50 { pt3dadd( -3.70844, -127.63, 5.87166, 1.11 ) }
    dend_50 { pt3dadd( -5.01195, -130.386, 6.49614, 0.83 ) }
    dend_50 { pt3dadd( -5.5979, -132.119, 6.82344, 0.83 ) }
    dend_50 { pt3dadd( -6.35664, -135.896, 7.34958, 0.83 ) }
    dend_50 { pt3dadd( -6.57847, -138.199, 7.39844, 1.11 ) }
    dend_50 { pt3dadd( -6.73153, -141.352, 7.30719, 1.11 ) }
    dend_50 { pt3dadd( -6.77684, -142.907, 7.18054, 1.11 ) }
    dend_50 { pt3dadd( -6.73327, -145.782, 6.82279, 1.11 ) }
    dend_50 { pt3dadd( -6.61148, -148.132, 6.4766, 1.11 ) }
    dend_50 { pt3dadd( -6.39708, -151.772, 5.91508, 0.83 ) }
    dend_50 { pt3dadd( -6.293, -154.827, 5.44549, 0.83 ) }
    dend_50 { pt3dadd( -6.21484, -158.045, 4.87486, 1.11 ) }
    dend_50 { pt3dadd( -6.14009, -160.353, 4.36564, 0.83 ) }
    dend_50 { pt3dadd( -5.93291, -163.05, 3.70768, 0.83 ) }
    dend_50 { pt3dadd( -5.71586, -164.852, 3.23521, 0.83 ) }
    dend_50 { pt3dadd( -5.41647, -166.429, 2.87572, 0.83 ) }
    dend_50 { pt3dadd( -5.01225, -167.812, 2.49162, 0.83 ) }
    dend_50 { pt3dadd( -4.30563, -169.782, 1.94175, 0.83 ) }
    dend_50 { pt3dadd( -3.5806, -171.842, 1.18136, 0.83 ) }
    dend_50 { pt3dadd( -3.0281, -173.639, 0.308886, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 52/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 102.636, -251.51, 67.8187, 0.28 ) }
    dend_38 { pt3dadd( 104.971, -251.018, 66.5606, 0.28 ) }
    dend_38 { pt3dadd( 105.933, -250.816, 66.0422, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 55/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 102.636, -251.51, 67.8187, 0.28 ) }
    dend_33 { pt3dadd( 104.317, -256.143, 67.8418, 0.28 ) }
    dend_33 { pt3dadd( 105.985, -260.742, 67.8648, 0.28 ) }
    dend_33 { pt3dadd( 106.573, -262.362, 67.873, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 59/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -79.7997, 23.0297, 3.68507, 0.55 ) }
    dend_20 { pt3dadd( -85.3886, 24.1177, 4.14904, 0.55 ) }
    dend_20 { pt3dadd( -87.7427, 24.4594, 4.20431, 0.83 ) }
    dend_20 { pt3dadd( -88.9719, 24.6255, 4.19064, 0.83 ) }
    dend_20 { pt3dadd( -91.3322, 24.8566, 4.1188, 0.83 ) }
    dend_20 { pt3dadd( -92.9499, 24.9717, 4.07009, 0.28 ) }
    dend_20 { pt3dadd( -93.7694, 25.0129, 4.04573, 0.83 ) }
    dend_20 { pt3dadd( -95.3845, 25.0448, 3.85626, 0.55 ) }
    dend_20 { pt3dadd( -96.9866, 25.037, 3.69217, 0.55 ) }
    dend_20 { pt3dadd( -99.3504, 25.0033, 3.62804, 0.83 ) }
    dend_20 { pt3dadd( -100.995, 24.9964, 3.69199, 0.28 ) }
    dend_20 { pt3dadd( -102.225, 25.0014, 3.7486, 0.55 ) }
    dend_20 { pt3dadd( -104.477, 25.0321, 3.87164, 0.28 ) }
    dend_20 { pt3dadd( -105.529, 25.0416, 3.94487, 0.83 ) }
    dend_20 { pt3dadd( -108.888, 25.0198, 4.2287, 0.28 ) }
    dend_20 { pt3dadd( -110.035, 25.0452, 4.35224, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -79.7997, 23.0297, 3.68507, 0.55 ) }
    dend_19 { pt3dadd( -80.964, 22.6019, 3.68507, 0.55 ) }
    dend_19 { pt3dadd( -83.0625, 21.8308, 3.68507, 0.55 ) }
    // Section: dend_64, id: dend_64, parent: dend_54 (entry count 78/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -53.7992, -207.082, 33.1755, 0.55 ) }
    dend_64 { pt3dadd( -54.6804, -210.152, 33.057, 0.55 ) }
    dend_64 { pt3dadd( -55.3107, -212.349, 32.9723, 0.55 ) }
    dend_64 { pt3dadd( -55.7175, -213.767, 32.9175, 0.55 ) }
    dend_64 { pt3dadd( -56.1055, -215.119, 32.8654, 0.55 ) }
    dend_64 { pt3dadd( -57.2402, -219.073, 32.7128, 0.83 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 84/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -53.7992, -207.082, 33.1755, 0.83 ) }
    dend_55 { pt3dadd( -55.1298, -208.823, 34.1812, 0.83 ) }
    dend_55 { pt3dadd( -56.5106, -210.668, 35.2455, 0.28 ) }
    dend_55 { pt3dadd( -57.396, -211.924, 35.9322, 0.83 ) }
    dend_55 { pt3dadd( -59.4006, -215.013, 37.4573, 0.28 ) }
    dend_55 { pt3dadd( -60.1007, -216.128, 37.9686, 0.83 ) }
    dend_55 { pt3dadd( -61.4131, -218.266, 39.0229, 0.28 ) }
    dend_55 { pt3dadd( -62.1506, -219.446, 39.7477, 0.28 ) }
    dend_55 { pt3dadd( -62.7997, -220.453, 40.4373, 1.11 ) }
    dend_55 { pt3dadd( -63.7094, -221.85, 41.4644, 0.55 ) }
    dend_55 { pt3dadd( -64.0948, -222.425, 41.9311, 0.55 ) }
    dend_55 { pt3dadd( -65.6605, -224.976, 44.2402, 0.28 ) }
    dend_55 { pt3dadd( -67.0746, -227.188, 46.5092, 0.83 ) }
    dend_55 { pt3dadd( -68.123, -228.782, 48.2349, 0.55 ) }
    dend_55 { pt3dadd( -68.4793, -229.305, 48.8374, 0.55 ) }
    dend_55 { pt3dadd( -70.0292, -231.561, 51.5618, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( -71.1642, -233.307, 53.6341, 1.38 ) }
    dend_55 { pt3dadd( -72.4998, -235.54, 56.0855, 0.28 ) }
    dend_55 { pt3dadd( -73.1583, -236.827, 57.4244, 0.28 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 3/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 106.573, -262.362, 67.873, 0.28 ) }
    dend_37 { pt3dadd( 108.458, -262.462, 66.0009, 0.28 ) }
    dend_37 { pt3dadd( 109.337, -262.508, 65.1275, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 6/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 106.573, -262.362, 67.873, 0.28 ) }
    dend_34 { pt3dadd( 107.448, -265.227, 67.9245, 0.28 ) }
    dend_34 { pt3dadd( 107.758, -266.047, 67.9776, 0.83 ) }
    dend_34 { pt3dadd( 108.473, -267.825, 68.1702, 0.28 ) }
    dend_34 { pt3dadd( 108.705, -268.394, 68.2612, 0.55 ) }
    dend_34 { pt3dadd( 110.168, -272.186, 68.9266, 0.28 ) }
    dend_34 { pt3dadd( 110.653, -273.486, 69.1625, 0.28 ) }
    dend_34 { pt3dadd( 111.271, -275.412, 69.5561, 0.55 ) }
    dend_34 { pt3dadd( 112.324, -279.03, 70.2527, 0.28 ) }
    dend_34 { pt3dadd( 112.669, -280.293, 70.4913, 0.55 ) }
    dend_34 { pt3dadd( 113.035, -281.801, 70.7939, 0.28 ) }
    dend_34 { pt3dadd( 113.198, -282.639, 70.9791, 0.55 ) }
    dend_34 { pt3dadd( 113.634, -286.069, 71.6718, 0.28 ) }
    dend_34 { pt3dadd( 113.64, -286.692, 71.7573, 0.55 ) }
    // Section: dend_70, id: dend_70, parent: dend_64 (entry count 20/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -57.2402, -219.073, 32.7128, 0.55 ) }
    dend_70 { pt3dadd( -57.2652, -222.216, 33.6726, 0.55 ) }
    dend_70 { pt3dadd( -57.219, -223.565, 34.0131, 0.83 ) }
    dend_70 { pt3dadd( -57.1645, -225.153, 34.3544, 0.28 ) }
    dend_70 { pt3dadd( -57.1138, -227.225, 34.7105, 0.55 ) }
    dend_70 { pt3dadd( -57.0574, -229.204, 35.051, 0.28 ) }
    dend_70 { pt3dadd( -57.0115, -232.06, 35.6038, 0.55 ) }
    dend_70 { pt3dadd( -56.9313, -235.979, 36.2607, 0.28 ) }
    dend_70 { pt3dadd( -56.8941, -237.254, 36.445, 1.11 ) }
    dend_70 { pt3dadd( -56.7926, -239.826, 36.7071, 0.28 ) }
    dend_70 { pt3dadd( -56.7689, -241.265, 36.806, 0.83 ) }
    dend_70 { pt3dadd( -56.8249, -243.339, 37.0153, 0.28 ) }
    dend_70 { pt3dadd( -56.9456, -245.226, 37.2972, 0.55 ) }
    dend_70 { pt3dadd( -57.0579, -246.566, 37.7432, 0.28 ) }
    dend_70 { pt3dadd( -57.0845, -247.759, 38.3225, 0.55 ) }
    dend_70 { pt3dadd( -57.0149, -249.011, 39.1069, 0.28 ) }
    dend_70 { pt3dadd( -56.7672, -251.069, 40.5088, 0.55 ) }
    dend_70 { pt3dadd( -56.4933, -252.333, 41.4279, 0.83 ) }
    dend_70 { pt3dadd( -55.7807, -254.935, 43.3432, 0.28 ) }
    dend_70 { pt3dadd( -55.2481, -256.408, 44.2968, 0.83 ) }
    dend_70 { pt3dadd( -54.2438, -258.649, 45.6304, 0.28 ) }
    dend_70 { pt3dadd( -53.6946, -259.639, 46.121, 0.55 ) }
    dend_70 { pt3dadd( -52.6793, -261.215, 46.7652, 0.28 ) }
    dend_70 { pt3dadd( -51.6906, -262.635, 47.1827, 0.55 ) }
    dend_70 { pt3dadd( -49.9649, -265.053, 47.5132, 0.28 ) }
    dend_70 { pt3dadd( -48.4588, -267.071, 47.8328, 0.83 ) }
    dend_70 { pt3dadd( -47.2051, -268.639, 48.0984, 0.28 ) }
    dend_70 { pt3dadd( -46.0579, -270.058, 48.3601, 0.55 ) }
    dend_70 { pt3dadd( -44.5442, -271.904, 48.7794, 0.28 ) }
    dend_70 { pt3dadd( -43.347, -273.32, 49.2014, 0.55 ) }
    dend_70 { pt3dadd( -39.1688, -278.191, 50.8527, 0.28 ) }
    dend_70 { pt3dadd( -38.7963, -278.617, 50.967, 0.83 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 52/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -57.2402, -219.073, 32.7128, 0.55 ) }
    dend_65 { pt3dadd( -58.0583, -220.917, 32.1531, 0.55 ) }
    dend_65 { pt3dadd( -58.4609, -221.912, 31.7903, 0.83 ) }
    dend_65 { pt3dadd( -59.3777, -224.506, 30.555, 0.28 ) }
    dend_65 { pt3dadd( -59.7258, -225.508, 30.0434, 0.28 ) }
    dend_65 { pt3dadd( -60.1542, -226.742, 29.4139, 0.55 ) }
    dend_65 { pt3dadd( -61.2291, -229.837, 27.834, 0.28 ) }
    dend_65 { pt3dadd( -61.4705, -230.673, 27.3494, 0.55 ) }
    dend_65 { pt3dadd( -62.1563, -233.359, 25.5796, 0.28 ) }
    dend_65 { pt3dadd( -62.3543, -234.238, 24.88, 0.83 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 62/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -73.1583, -236.827, 57.4244, 0.28 ) }
    dend_61 { pt3dadd( -73.4402, -238.553, 57.7925, 0.28 ) }
    dend_61 { pt3dadd( -73.5726, -239.153, 57.7308, 0.55 ) }
    dend_61 { pt3dadd( -73.8099, -240.08, 57.519, 0.28 ) }
    dend_61 { pt3dadd( -74.081, -241.222, 57.1477, 0.55 ) }
    dend_61 { pt3dadd( -74.4197, -242.719, 56.5879, 0.28 ) }
    dend_61 { pt3dadd( -74.7263, -244.079, 56.0414, 1.11 ) }
    dend_61 { pt3dadd( -75.607, -247.915, 54.2779, 0.28 ) }
    dend_61 { pt3dadd( -75.6611, -248.158, 54.1613, 0.55 ) }
    dend_61 { pt3dadd( -76.1018, -250.027, 53.4347, 0.28 ) }
    dend_61 { pt3dadd( -76.2784, -250.833, 53.1956, 0.55 ) }
    dend_61 { pt3dadd( -76.5799, -252.238, 52.8717, 0.28 ) }
    dend_61 { pt3dadd( -76.6975, -252.846, 52.8033, 0.28 ) }
    dend_61 { pt3dadd( -76.9245, -254.064, 52.8591, 0.83 ) }
    dend_61 { pt3dadd( -77.6182, -257.334, 53.1926, 0.28 ) }
    dend_61 { pt3dadd( -77.9346, -258.627, 53.385, 0.83 ) }
    dend_61 { pt3dadd( -78.779, -261.803, 53.8398, 0.28 ) }
    dend_61 { pt3dadd( -79.4837, -264.319, 54.1897, 0.28 ) }
    dend_61 { pt3dadd( -80.0115, -266.047, 54.4475, 0.83 ) }
    dend_61 { pt3dadd( -80.8509, -268.556, 54.819, 0.28 ) }
    dend_61 { pt3dadd( -81.1472, -269.379, 54.9485, 0.55 ) }
    dend_61 { pt3dadd( -81.9421, -271.417, 55.3664, 0.28 ) }
    dend_61 { pt3dadd( -82.5365, -272.865, 55.7646, 0.83 ) }
    dend_61 { pt3dadd( -83.3591, -274.728, 56.2693, 0.28 ) }
    dend_61 { pt3dadd( -83.6564, -275.438, 56.4396, 0.55 ) }
    dend_61 { pt3dadd( -84.5, -277.509, 57.0334, 0.28 ) }
    dend_61 { pt3dadd( -84.849, -278.394, 57.3556, 0.83 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 89/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -73.1583, -236.827, 57.4244, 0.28 ) }
    dend_56 { pt3dadd( -75.5859, -237.287, 57.4244, 0.28 ) }
    dend_56 { pt3dadd( -76.714, -237.501, 57.4244, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 92/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 113.64, -286.692, 71.7573, 0.28 ) }
    dend_36 { pt3dadd( 110.628, -287.636, 71.6594, 0.28 ) }
    dend_36 { pt3dadd( 110.032, -287.823, 71.64, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 95/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 113.64, -286.692, 71.7573, 0.28 ) }
    dend_35 { pt3dadd( 113.598, -288.701, 71.7339, 0.28 ) }
    dend_35 { pt3dadd( 113.545, -291.262, 71.704, 0.28 ) }
    dend_35 { pt3dadd( 113.498, -293.488, 71.6781, 0.83 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 99/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -62.3543, -234.238, 24.88, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_67 { pt3dadd( -63.2199, -235.402, 23.8466, 0.28 ) }
    dend_67 { pt3dadd( -63.5741, -235.927, 23.2418, 0.55 ) }
    dend_67 { pt3dadd( -64.4235, -237.207, 21.7674, 0.28 ) }
    dend_67 { pt3dadd( -65.63, -239.291, 19.5992, 0.55 ) }
    dend_67 { pt3dadd( -66.5625, -240.901, 17.9233, 0.55 ) }
    dend_67 { pt3dadd( -67.5619, -242.628, 16.1272, 0.28 ) }
    dend_67 { pt3dadd( -68.8242, -244.906, 13.612, 0.83 ) }
    dend_67 { pt3dadd( -69.8051, -246.761, 11.5012, 0.28 ) }
    dend_67 { pt3dadd( -70.5601, -248.308, 9.72277, 0.28 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 9/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -62.3543, -234.238, 24.88, 0.55 ) }
    dend_66 { pt3dadd( -60.2655, -235.491, 24.4119, 0.55 ) }
    dend_66 { pt3dadd( -58.7444, -236.405, 24.071, 0.28 ) }
    dend_66 { pt3dadd( -58.0462, -236.824, 23.9145, 0.55 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 13/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -84.849, -278.394, 57.3556, 0.28 ) }
    dend_63 { pt3dadd( -85.166, -282.907, 60.4805, 0.28 ) }
    dend_63 { pt3dadd( -85.2044, -284.275, 61.3315, 0.55 ) }
    dend_63 { pt3dadd( -85.3458, -288.512, 63.7127, 0.28 ) }
    dend_63 { pt3dadd( -85.3964, -290.44, 64.7158, 0.55 ) }
    dend_63 { pt3dadd( -85.3876, -292.897, 65.9045, 0.28 ) }
    dend_63 { pt3dadd( -85.332, -294.63, 66.6867, 0.55 ) }
    dend_63 { pt3dadd( -85.0114, -296.767, 67.4468, 0.28 ) }
    dend_63 { pt3dadd( -84.6707, -298.391, 67.9941, 0.28 ) }
    dend_63 { pt3dadd( -84.4043, -299.12, 68.2861, 0.55 ) }
    dend_63 { pt3dadd( -83.6766, -300.597, 69.0762, 0.28 ) }
    dend_63 { pt3dadd( -83.3525, -301.174, 69.5783, 0.83 ) }
    dend_63 { pt3dadd( -82.1435, -303.167, 71.5761, 0.28 ) }
    dend_63 { pt3dadd( -81.9972, -303.405, 71.8455, 0.55 ) }
    dend_63 { pt3dadd( -80.3446, -306.096, 75.1379, 0.28 ) }
    dend_63 { pt3dadd( -79.9956, -306.704, 75.9026, 0.83 ) }
    dend_63 { pt3dadd( -78.3915, -309.788, 79.8522, 0.28 ) }
    dend_63 { pt3dadd( -78.1441, -310.278, 80.4809, 0.83 ) }
    dend_63 { pt3dadd( -77.0233, -312.606, 83.3202, 0.28 ) }
    dend_63 { pt3dadd( -76.3086, -314.143, 85.1458, 0.83 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 33/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -84.849, -278.394, 57.3556, 0.28 ) }
    dend_62 { pt3dadd( -88.6982, -279.574, 57.3556, 0.28 ) }
    dend_62 { pt3dadd( -89.2959, -279.757, 57.3556, 0.83 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 36/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -76.714, -237.501, 57.4244, 0.28 ) }
    dend_58 { pt3dadd( -77.9778, -239.64, 60.5097, 0.28 ) }
    dend_58 { pt3dadd( -78.8839, -241.21, 62.3808, 0.55 ) }
    dend_58 { pt3dadd( -80.8654, -244.911, 65.8094, 0.28 ) }
    dend_58 { pt3dadd( -81.0915, -245.333, 66.2006, 0.55 ) }
    dend_58 { pt3dadd( -82.2683, -247.531, 68.2369, 0.28 ) }
    dend_58 { pt3dadd( -83.1365, -249.152, 69.7392, 0.83 ) }
    dend_58 { pt3dadd( -84.232, -251.021, 71.3473, 0.28 ) }
    dend_58 { pt3dadd( -85.6946, -253.681, 73.0237, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 45/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -76.714, -237.501, 57.4244, 0.28 ) }
    dend_57 { pt3dadd( -76.7163, -237.024, 58.9208, 0.28 ) }
    dend_57 { pt3dadd( -76.7167, -236.941, 59.1824, 0.55 ) }
    dend_57 { pt3dadd( -76.7295, -234.302, 67.4647, 0.28 ) }
    dend_57 { pt3dadd( -76.731, -233.996, 68.4256, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 50/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -70.5601, -248.308, 9.72277, 0.28 ) }
    dend_69 { pt3dadd( -72.6119, -254.092, 6.28982, 0.28 ) }
    dend_69 { pt3dadd( -73.413, -256.351, 4.94947, 0.28 ) }
    dend_69 { pt3dadd( -74.1368, -258.392, 3.73839, 0.28 ) }
    dend_69 { pt3dadd( -74.6732, -259.904, 2.84097, 0.55 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 55/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -70.5601, -248.308, 9.72277, 0.55 ) }
    dend_68 { pt3dadd( -72.9501, -248.248, 7.10277, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 57/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -85.6946, -253.681, 73.0237, 0.28 ) }
    dend_60 { pt3dadd( -87.2927, -255.342, 72.5084, 0.28 ) }
    dend_60 { pt3dadd( -87.668, -255.732, 72.3873, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 60/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -85.6946, -253.681, 73.0237, 0.28 ) }
    dend_59 { pt3dadd( -84.5819, -254.847, 72.7166, 0.28 ) }
    dend_59 { pt3dadd( -83.8332, -255.632, 72.5099, 0.55 ) }
    dend_59 { pt3dadd( -83.0436, -256.459, 72.292, 0.28 ) }
    dend_59 { pt3dadd( -82.2924, -257.246, 72.0846, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_22, dend_7, dend_0, dend_26, dend_23, dend_9, dend_8, dend_6, dend_1, dend_42, dend_27, dend_25, dend_24, dend_13, dend_10, dend_3, dend_2, dend_46, dend_43, dend_39, dend_28, dend_15, dend_14, dend_12, dend_11, dend_5, dend_4, dend_48, dend_47, dend_45, dend_44, dend_41, dend_40, dend_30, dend_29, dend_17, dend_16, dend_52, dend_49, dend_32, dend_31, dend_21, dend_18, dend_54, dend_53, dend_51, dend_50, dend_38, dend_33, dend_20, dend_19, dend_64, dend_55, dend_37, dend_34, dend_70, dend_65, dend_61, dend_56, dend_36, dend_35, dend_67, dend_66, dend_63, dend_62, dend_58, dend_57, dend_69, dend_68, dend_60, dend_59]}
    ModelViewParmSubset_2 = new SectionList()
    dend_22 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_22, dend_7, dend_0, dend_26, dend_23, dend_9, dend_8, dend_6, dend_1, dend_42, dend_27, dend_25, dend_24, dend_13, dend_10, dend_3, dend_2, dend_46, dend_43, dend_39, dend_28, dend_15, dend_14, dend_12, dend_11, dend_5, dend_4, dend_48, dend_47, dend_45, dend_44, dend_41, dend_40, dend_30, dend_29, dend_17, dend_16, dend_52, dend_49, dend_32, dend_31, dend_21, dend_18, dend_54, dend_53, dend_51, dend_50, dend_38, dend_33, dend_20, dend_19, dend_64, dend_55, dend_37, dend_34, dend_70, dend_65, dend_61, dend_56, dend_36, dend_35, dend_67, dend_66, dend_63, dend_62, dend_58, dend_57, dend_69, dend_68, dend_60, dend_59]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_12, dend_11]}
    ModelViewParmSubset_5 = new SectionList()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[dend_22, dend_7, dend_0, axon_0, dend_26, dend_23, dend_9, dend_8, dend_6, dend_1, axon_1, dend_42, dend_27, dend_25, dend_24, dend_13, dend_10, dend_3, dend_2, dend_46, dend_43, dend_39, dend_28, dend_15, dend_14, dend_12, dend_11, dend_5, dend_4, dend_48, dend_47, dend_45, dend_44, dend_41, dend_40, dend_30, dend_29, dend_17, dend_16, dend_52, dend_49, dend_32, dend_31, dend_21, dend_18, dend_54, dend_53, dend_51, dend_50, dend_38, dend_33, dend_20, dend_19, dend_64, dend_55, dend_37, dend_34, dend_70, dend_65, dend_61, dend_56, dend_36, dend_35, dend_67, dend_66, dend_63, dend_62, dend_58, dend_57, dend_69, dend_68, dend_60, dend_59]}
    ModelViewParmSubset_6 = new SectionList()
    dend_22 ModelViewParmSubset_6.append()
    dend_7 ModelViewParmSubset_6.append()
    dend_0 ModelViewParmSubset_6.append()
    axon_0 ModelViewParmSubset_6.append()
    dend_26 ModelViewParmSubset_6.append()
    dend_23 ModelViewParmSubset_6.append()
    dend_9 ModelViewParmSubset_6.append()
    dend_8 ModelViewParmSubset_6.append()
    dend_6 ModelViewParmSubset_6.append()
    dend_1 ModelViewParmSubset_6.append()
    axon_1 ModelViewParmSubset_6.append()
    dend_42 ModelViewParmSubset_6.append()
    dend_27 ModelViewParmSubset_6.append()
    dend_25 ModelViewParmSubset_6.append()
    dend_24 ModelViewParmSubset_6.append()
    dend_13 ModelViewParmSubset_6.append()
    dend_10 ModelViewParmSubset_6.append()
    dend_3 ModelViewParmSubset_6.append()
    dend_2 ModelViewParmSubset_6.append()
    dend_46 ModelViewParmSubset_6.append()
    dend_43 ModelViewParmSubset_6.append()
    dend_39 ModelViewParmSubset_6.append()
    dend_28 ModelViewParmSubset_6.append()
    dend_15 ModelViewParmSubset_6.append()
    dend_14 ModelViewParmSubset_6.append()
    dend_12 ModelViewParmSubset_6.append()
    dend_11 ModelViewParmSubset_6.append()
    dend_5 ModelViewParmSubset_6.append()
    dend_4 ModelViewParmSubset_6.append()
    dend_48 ModelViewParmSubset_6.append()
    dend_47 ModelViewParmSubset_6.append()
    dend_45 ModelViewParmSubset_6.append()
    dend_44 ModelViewParmSubset_6.append()
    dend_41 ModelViewParmSubset_6.append()
    dend_40 ModelViewParmSubset_6.append()
    dend_30 ModelViewParmSubset_6.append()
    dend_29 ModelViewParmSubset_6.append()
    dend_17 ModelViewParmSubset_6.append()
    dend_16 ModelViewParmSubset_6.append()
    dend_52 ModelViewParmSubset_6.append()
    dend_49 ModelViewParmSubset_6.append()
    dend_32 ModelViewParmSubset_6.append()
    dend_31 ModelViewParmSubset_6.append()
    dend_21 ModelViewParmSubset_6.append()
    dend_18 ModelViewParmSubset_6.append()
    dend_54 ModelViewParmSubset_6.append()
    dend_53 ModelViewParmSubset_6.append()
    dend_51 ModelViewParmSubset_6.append()
    dend_50 ModelViewParmSubset_6.append()
    dend_38 ModelViewParmSubset_6.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_33 ModelViewParmSubset_6.append()
    dend_20 ModelViewParmSubset_6.append()
    dend_19 ModelViewParmSubset_6.append()
    dend_64 ModelViewParmSubset_6.append()
    dend_55 ModelViewParmSubset_6.append()
    dend_37 ModelViewParmSubset_6.append()
    dend_34 ModelViewParmSubset_6.append()
    dend_70 ModelViewParmSubset_6.append()
    dend_65 ModelViewParmSubset_6.append()
    dend_61 ModelViewParmSubset_6.append()
    dend_56 ModelViewParmSubset_6.append()
    dend_36 ModelViewParmSubset_6.append()
    dend_35 ModelViewParmSubset_6.append()
    dend_67 ModelViewParmSubset_6.append()
    dend_66 ModelViewParmSubset_6.append()
    dend_63 ModelViewParmSubset_6.append()
    dend_62 ModelViewParmSubset_6.append()
    dend_58 ModelViewParmSubset_6.append()
    dend_57 ModelViewParmSubset_6.append()
    dend_69 ModelViewParmSubset_6.append()
    dend_68 ModelViewParmSubset_6.append()
    dend_60 ModelViewParmSubset_6.append()
    dend_59 ModelViewParmSubset_6.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_8 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_25 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_24 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_10 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_3 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_46 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_43 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_39 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_28 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_14 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_47 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_44 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_52 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_32 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_21 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_51 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_50 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_55 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_70 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_61 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_63 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_7 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_22 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_9 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_23 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_15 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_42 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_17 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_16 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_27 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_48 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_49 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_45 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_20 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_2 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_29 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_5 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_30 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_31 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_41 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_54 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_53 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_40 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_64 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_65 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_66 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_56 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_67 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_68 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_57 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_38 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_69 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_58 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_33 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_60 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_59 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_37 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_62 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_34 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_36 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_35 OneSecGrp_SectionRef_64.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_22, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_11, dend_11, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_38, dend_38, dend_33, dend_33, dend_33, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_64, dend_64, dend_64, dend_64, dend_64, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_36, dend_36, dend_35, dend_35, dend_35, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_69, dend_69, dend_69, dend_69, dend_68, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_22 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_35 all.append()
    dend_35 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_8 nseg = 5
    dend_6 nseg = 5
    dend_1 nseg = 5
    dend_25 nseg = 7
    dend_24 nseg = 5
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_46 nseg = 3
    dend_43 nseg = 3
    dend_39 nseg = 7
    dend_28 nseg = 5
    dend_14 nseg = 3
    dend_47 nseg = 3
    dend_44 nseg = 3
    dend_52 nseg = 7
    dend_32 nseg = 5
    dend_21 nseg = 7
    dend_51 nseg = 3
    dend_50 nseg = 3
    dend_55 nseg = 3
    dend_70 nseg = 3
    dend_61 nseg = 3
    dend_63 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_MC_3303d0ff68_0_0


