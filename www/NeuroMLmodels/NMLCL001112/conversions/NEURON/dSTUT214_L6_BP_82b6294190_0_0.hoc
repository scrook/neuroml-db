// Cell: dSTUT214_L6_BP_82b6294190_0_0
/*
{
  "id" : "dSTUT214_L6_BP_82b6294190_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.85236, 9.0618, 3.00566, 0.83", "-7.77068, 12.0988, 3.5966, 1.11", "-10.081, 13.8883, 3.90399, 0.83", "-12.3255, 15.6117, 4.17941, 0.83", "-13.6544, 16.5945, 4.33034, 1.11", "-17.816, 19.6654, 4.81405, 1.11", "-25.2593, 24.9229, 5.66911, 0.83", "-27.9409, 26.7448, 5.95147, 0.83", "-30.0645, 28.1447, 6.12685, 0.83", "-32.1352, 29.5321, 6.27867, 0.83", "-33.8209, 30.6755, 6.36058, 0.55", "-35.0879, 31.4498, 6.44371, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.73037, 6.29613, -6.26221, 0.55", "7.58918, 6.91455, -6.90064, 0.55", "9.24804, 7.07066, -7.74541, 0.83", "11.8735, 7.23679, -9.31462, 0.55", "13.1408, 7.31699, -10.0721, 1.38", "16.257, 7.51417, -11.9346, 0.55", "17.5842, 7.4474, -12.8233, 0.83", "24.4496, 6.22284, -17.8164, 0.55", "25.1138, 6.05816, -18.3657, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.693126, -11.2815, 3.51734, 1.11", "-0.758569, -17.0555, 5.58732, 1.11", "-0.785222, -19.4071, 6.43034, 0.83", "-0.82063, -22.5313, 7.55035, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "1.04995, 10.9501, -1.45304, 1.11", "1.28986, 13.9041, -1.4427, 1.11", "1.69302, 18.7231, -1.24933, 1.38", "1.72076, 18.9913, -1.23442, 1.38", "2.26705, 22.3015, -1.04441, 0.83", "3.01206, 25.7949, -0.676906, 0.83", "4.25578, 29.7226, 0.167338, 0.83", "4.93787, 31.2038, 0.64549, 0.83", "5.59207, 32.2699, 1.08048, 1.11", "7.46148, 34.8559, 2.17601, 0.55", "9.6307, 37.5461, 3.49143, 0.83", "12.405, 40.2916, 4.93678, 0.55", "13.7958, 41.4226, 5.57141, 0.83", "15.7573, 42.9509, 6.59101, 0.55", "18.2107, 44.8962, 8.00122, 0.55", "21.6783, 47.8326, 10.1979, 0.55", "25.5049, 51.1943, 12.6246, 0.55", "27.9701, 53.3762, 14.4948, 0.55", "31.0535, 56.1356, 17.1929, 0.55", "31.702, 56.6877, 17.8123, 0.83", "33.4327, 58.1457, 19.5737, 0.55", "34.8698, 59.2788, 20.9446, 0.83", "38.2126, 62.3985, 24.2084, 0.55", "39.4254, 63.5387, 25.1277, 0.83", "40.5121, 64.3717, 25.7118, 0.55", "41.5624, 65.0844, 26.1277, 0.83", "43.8489, 66.3967, 26.8235, 0.83", "46.8382, 68.1886, 27.4934, 0.83", "48.6482, 69.3802, 27.7181, 0.55", "50.0343, 70.4184, 27.8971, 0.55", "53.6584, 73.0993, 28.3144, 0.83", "55.9855, 74.8185, 28.4943, 0.55", "59.4944, 77.3334, 28.6299, 0.55", "62.6833, 79.4324, 28.6301, 0.55", "65.5206, 81.2054, 28.5558, 0.55", "69.0759, 83.2738, 28.3033, 0.55", "71.2284, 84.2714, 28.0793, 0.55", "72.666, 84.8236, 27.753, 0.55", "74.5379, 85.2057, 27.1571, 0.55", "77.2784, 85.3096, 26.0329, 0.55", "78.9682, 85.1473, 25.2627, 0.55", "81.4628, 84.8377, 24.3192, 0.55", "86.2883, 84.4032, 22.964, 0.55", "90.1237, 84.2411, 22.1773, 0.55", "94.2338, 84.2648, 21.5893, 0.55", "96.9045, 84.3694, 21.4207, 0.55", "103.936, 85.2636, 21.435, 0.55", "108.154, 86.1052, 21.7495, 0.55", "111.368, 86.9353, 22.2706, 0.55", "113.344, 87.7489, 22.66, 0.55", "115.643, 88.9841, 23.1017, 0.55", "119.498, 91.4468, 23.5264, 0.55", "120.366, 92.0424, 23.5087, 0.55", "122.827, 93.6299, 23.3001, 0.55", "125.096, 95.3345, 23.1008, 0.83", "126.332, 96.281, 22.973, 0.55", "128.18, 97.9162, 22.7112, 0.83", "138.298, 106.635, 23.8225, 0.83", "147.09, 116.745, 24.1458, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 11
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-35.0879, 31.4498, 6.44371, 0.55", "-37.572, 32.705, 5.2152, 0.55", "-40.2733, 34.0699, 3.87933, 0.55", "-43.5332, 35.7171, 2.26721, 0.55", "-46.225, 37.0773, 0.936045, 0.83", "-48.4807, 38.2171, -0.179471, 0.55", "-52.6676, 40.3327, -2.25003, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-35.0879, 31.4498, 6.44371, 0.55", "-37.872, 31.9541, 6.14131, 0.55", "-40.8306, 32.3997, 6.11518, 0.55", "-44.1845, 32.8998, 6.16757, 0.55", "-49.0362, 33.5736, 6.69075, 0.55", "-53.0921, 34.0204, 7.41922, 0.55", "-57.3436, 34.4241, 8.36655, 0.55", "-61.4466, 34.5365, 9.73059, 0.55", "-64.9729, 34.2882, 11.2528, 0.55", "-69.3599, 33.67, 13.6291, 0.55", "-71.2634, 33.2608, 14.9335, 0.55", "-73.3183, 32.7968, 16.433, 0.55", "-76.9441, 31.6985, 18.912, 0.55", "-78.8776, 31.1186, 19.9216, 0.55", "-80.9028, 30.4481, 20.9674, 0.55", "-83.3144, 29.6805, 21.9626, 0.55", "-85.9364, 28.9012, 22.9709, 0.55", "-89.6795, 27.7793, 24.3273, 0.55", "-94.686, 26.6167, 25.6815, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "25.1138, 6.05816, -18.3657, 0.55", "29.0618, 7.03399, -19.2022, 0.55", "31.3319, 7.47957, -20.0112, 0.55", "33.57, 7.82024, -20.8476, 0.55", "35.0978, 7.99173, -21.422, 0.55", "37.3297, 8.18946, -22.2469, 0.55", "41.9566, 8.51731, -24.1084, 0.55", "47.2021, 8.87419, -26.5736, 0.55", "49.7408, 8.89664, -27.9548, 0.55", "51.099, 8.87962, -28.7864, 0.55", "52.588, 8.87144, -29.7588, 0.55", "55.2434, 8.78137, -31.4876, 0.55", "56.2062, 8.69311, -32.151, 0.55", "60.282, 8.43916, -35.2724, 0.55", "63.1664, 8.3175, -37.6957, 0.55", "64.8274, 8.2826, -39.1353, 0.55", "66.4837, 8.23292, -40.5707, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "25.1138, 6.05816, -18.3657, 0.83", "26.7141, 7.31558, -18.5138, 0.83", "27.6312, 8.02642, -18.6434, 0.55", "28.9834, 9.08533, -18.9628, 0.83", "29.8911, 9.81755, -19.2112, 0.55", "31.1376, 10.8663, -19.5396, 0.83", "32.6298, 12.1681, -19.8798, 0.55", "33.3861, 12.7686, -20.0076, 0.55", "35.1503, 13.9178, -20.1284, 0.83", "36.7653, 14.7919, -19.9835, 0.55", "37.6647, 15.2849, -19.8097, 0.83", "39.0029, 16.0792, -19.4035, 0.55", "40.9074, 17.2977, -18.563, 0.55", "43.5623, 18.8666, -17.2257, 0.55", "46.096, 20.295, -15.7465, 0.55", "48.104, 21.4099, -14.5322, 0.55", "51.4115, 23.2673, -12.5142, 0.55", "53.8195, 24.7094, -10.9925, 0.55", "55.2545, 25.7196, -10.0371, 0.55", "57.8601, 27.8784, -8.29805, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.82063, -22.5313, 7.55035, 0.83", "-1.05222, -25.7296, 7.41735, 0.83", "-1.27786, -28.8456, 7.28776, 0.83", "-1.52978, -32.3247, 7.14308, 0.83", "-1.66134, -34.1414, 7.06753, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.82063, -22.5313, 7.55035, 0.55", "-0.156247, -24.3852, 8.85587, 0.55", "0.427606, -26.657, 10.5504, 0.55", "0.733419, -29.6379, 12.8838, 0.55", "0.770168, -30.7972, 13.8211, 0.83", "0.585867, -33.7577, 16.5487, 0.55", "0.364223, -35.2875, 17.9846, 0.55", "-0.132052, -38.2628, 20.9029, 0.83", "-0.630819, -40.473, 23.209, 0.55", "-1.20464, -42.2974, 25.0805, 0.55", "-2.36857, -45.7534, 28.561, 0.55", "-3.29293, -48.5079, 31.3026, 0.55", "-3.98944, -50.7157, 33.5322, 0.55", "-4.59811, -53.0589, 35.8271, 0.28", "-4.76864, -54.0343, 36.7466, 0.55", "-5.03497, -55.8356, 38.3428, 0.28", "-5.05942, -58.6449, 40.4015, 0.55", "-7.41212, -68.008, 47.7253, 0.55", "-10.0243, -76.6618, 55.7955, 0.55", "-12.1278, -83.7723, 65.3797, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-52.6676, 40.3327, -2.25003, 0.55", "-56.1211, 40.3056, -0.872886, 0.55", "-57.5895, 40.1898, -0.139334, 0.83", "-59.3267, 39.9366, 0.915625, 0.55", "-60.6678, 39.7222, 1.83316, 0.83", "-64.1827, 39.2791, 4.22951, 0.55", "-65.5153, 39.1298, 5.14998, 0.28", "-67.7559, 38.8721, 6.85892, 0.55", "-70.7615, 38.5446, 9.14212, 0.55", "-73.0337, 38.3137, 10.7815, 0.55", "-76.0598, 38.0208, 12.8836, 0.28", "-76.8373, 37.9658, 13.3446, 0.55", "-78.4411, 37.8796, 14.2461, 0.28", "-79.5211, 37.8644, 14.7688, 0.55", "-81.7069, 37.8514, 15.6556, 0.28", "-82.9813, 37.7888, 16.1018, 0.55", "-85.2267, 37.5199, 16.8789, 0.28", "-86.7293, 37.3391, 17.3491, 0.55", "-96.2661, 34.84, 23.9489, 0.55", "-105.073, 31.1485, 30.989, 0.55", "-113.529, 26.3778, 37.8072, 0.55", "-121.829, 20.3865, 43.8034, 0.55", "-128.999, 14.6393, 51.3082, 0.55", "-136.994, 9.39367, 58.3309, 0.55", "-145.24, 5.94723, 66.1334, 0.55", "-153.397, 1.61997, 73.5823, 0.55", "-161.404, -2.00348, 81.552, 0.55", "-168.907, -5.85577, 89.8957, 0.55", "-175.26, -11.0672, 98.4532, 0.55", "-181.784, -15.2533, 107.434, 0.55", "-188.374, -20.5145, 115.779, 0.55", "-193.647, -26.3454, 124.665, 0.55", "-197.096, -31.539, 134.758, 0.55", "-200.308, -38.6914, 143.662, 0.55", "-201.849, -46.0671, 152.826, 0.55", "-204.052, -53.0035, 162.195, 0.55", "-207.552, -59.1451, 171.723, 0.55", "-213.501, -63.4458, 181.044, 0.55", "-218.405, -69.0328, 190.29, 0.55", "-221.303, -72.8797, 201.132, 0.55", "-226.057, -75.8208, 211.596, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-52.6676, 40.3327, -2.25003, 0.55", "-53.7771, 40.944, -3.71661, 0.55", "-54.5997, 41.6264, -5.32282, 0.55", "-55.3573, 42.457, -7.00808, 0.55", "-55.8317, 42.9772, -8.06338, 0.55", "-56.697, 43.9259, -9.98835, 0.83", "-57.3301, 44.62, -11.3967, 0.55", "-58.0251, 45.579, -13.4541, 0.83", "-58.2557, 46.2176, -14.5927, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-94.686, 26.6167, 25.6815, 0.28", "-95.931, 24.4415, 25.1349, 0.28", "-96.5258, 23.5112, 24.8194, 0.28", "-97.3012, 22.1977, 24.3242, 0.55", "-97.9414, 21.0419, 23.8993, 0.28", "-98.8865, 19.2798, 23.2749, 0.55", "-101.518, 14.0944, 21.5272, 0.28", "-102.38, 12.2831, 20.7669, 0.55", "-103.687, 9.49839, 19.4997, 0.28", "-104.439, 7.83645, 18.6652, 0.55", "-104.959, 6.69261, 18.0617, 0.28", "-105.552, 5.37917, 17.3801, 0.55", "-107.348, 0.988252, 15.2172, 0.28", "-107.912, -0.337285, 14.5147, 0.55", "-108.898, -2.3518, 13.2243, 0.28", "-109.706, -3.6338, 12.2801, 0.28", "-110.427, -4.48609, 11.6139, 0.55", "-112.931, -6.87512, 9.80742, 0.28", "-114.092, -7.84132, 9.09536, 0.55", "-116.932, -10.0315, 7.32643, 0.28", "-119.771, -11.9628, 5.70538, 0.28", "-122.855, -13.7947, 4.05139, 0.28", "-124.266, -14.4809, 3.41664, 0.55", "-131.108, -22.3532, -1.1066, 0.55", "-138.695, -30.4562, -3.56057, 0.55", "-146.135, -38.0191, -7.64554, 0.55", "-153.762, -44.8181, -12.6294, 0.55", "-161.482, -50.7428, -18.5066, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-94.686, 26.6167, 25.6815, 0.55", "-95.7442, 26.5207, 25.8705, 0.55", "-98.7153, 26.2892, 26.7922, 0.55", "-99.8292, 26.1787, 27.2014, 0.55", "-102.445, 25.8424, 28.2116, 0.55", "-106.476, 25.3485, 29.5642, 0.55", "-108.574, 25.1537, 30.2236, 0.28", "-111.839, 24.7727, 31.1915, 0.55", "-114.266, 24.4313, 31.8269, 0.55", "-115.29, 24.2805, 32.098, 0.28", "-121.437, 23.3719, 33.7166, 0.55", "-124.313, 22.7973, 34.3081, 0.28", "-128.2, 21.9862, 34.878, 0.28", "-131.559, 21.3182, 35.1673, 0.55", "-144.606, 20.9013, 38.9775, 0.55", "-157.143, 20.2825, 44.2056, 0.55", "-168.869, 18.423, 50.8343, 0.55", "-180.25, 18.9348, 58.2591, 0.55", "-189.843, 19.233, 67.8915, 0.55", "-197.424, 20.4705, 79.112, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "66.4837, 8.23292, -40.5707, 0.55", "70.062, 9.35302, -43.5364, 0.55", "71.1908, 9.65838, -44.5472, 0.55", "72.6031, 9.99272, -45.7963, 0.55", "75.1625, 10.5802, -48.2166, 0.55", "77.8306, 11.0821, -50.8128, 0.55", "79.1336, 11.2195, -52.0511, 0.83", "80.2032, 11.2584, -53.1552, 0.55", "81.0005, 11.2211, -54.0658, 0.83", "82.914, 10.8548, -56.4047, 0.55", "84.4865, 10.3995, -58.3457, 0.55", "86.2964, 9.86069, -60.4854, 0.55", "88.3121, 9.32247, -62.9091, 0.55", "89.6627, 8.92877, -64.5706, 0.55", "91.1855, 8.48086, -66.4959, 0.55", "92.5008, 8.14506, -68.2547, 0.55", "93.3277, 8.0162, -69.4743, 0.55", "94.3585, 7.81741, -71.9179, 0.55", "94.9154, 7.64794, -73.4458, 0.55", "95.3784, 7.34164, -75.4729, 0.55", "95.997, 6.72499, -78.8986, 0.55", "96.1211, 6.55742, -79.6713, 0.28", "97.7362, 4.41355, -89.0687, 0.28", "98.2921, 3.80124, -91.8282, 0.83", "100.504, 1.45063, -101.622, 0.83", "101.647, 0.175492, -106.175, 0.83", "102.204, -0.417555, -108.021, 0.55", "102.851, -1.0061, -109.822, 0.55", "104.68, -2.19079, -113.169, 0.55", "106.655, -3.27111, -116.114, 0.28", "107.267, -3.48659, -116.295, 0.55", "108.626, -3.87447, -116.2, 0.28", "109.469, -4.05646, -116.017, 0.55", "110.35, -4.25955, -115.751, 0.28", "111.409, -4.45109, -115.382, 0.55", "112.993, -4.64997, -114.998, 0.28", "114.262, -4.84811, -114.732, 0.55", "115.668, -4.97115, -114.548, 0.28", "117.577, -5.12846, -114.469, 0.55", "119.717, -5.2523, -114.508, 0.55", "121.597, -5.33614, -114.668, 0.28", "124.198, -5.42519, -115.033, 0.55", "128.689, -5.444, -116.144, 0.55", "130.672, -5.34351, -116.875, 0.55", "131.524, -5.26258, -117.281, 0.83", "133.144, -5.09366, -118.203, 0.55", "134.269, -4.92871, -118.914, 0.83", "137.295, -4.40333, -120.86, 0.55", "139.139, -4.21079, -122.099, 0.28", "139.916, -4.18066, -122.534, 0.55", "142.043, -4.30308, -123.487, 0.28", "142.788, -4.41656, -123.773, 0.55", "144.323, -4.75292, -124.123, 0.28", "145.886, -5.25472, -124.209, 0.55", "149.05, -6.45125, -123.823, 0.28", "150.509, -7.07113, -123.49, 0.55", "152.678, -8.12131, -122.879, 0.28", "155.42, -9.43914, -122.008, 0.55", "157.405, -10.3653, -121.345, 0.55", "160.846, -11.8618, -120.139, 0.28", "162.257, -12.4078, -119.76, 0.55", "164.69, -13.2035, -119.373, 0.28", "167.116, -13.8056, -119.155, 0.55", "168.447, -13.9802, -119.219, 0.28", "169.652, -13.9729, -119.37, 0.55", "173.054, -13.7417, -120.113, 0.28", "175.486, -13.4064, -120.68, 0.28", "177.604, -12.9592, -121.202, 0.55", "179.941, -12.3975, -121.896, 0.28", "180.531, -12.2192, -122.05, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "66.4837, 8.23292, -40.5707, 0.55", "66.8794, 6.4115, -42.2756, 0.55", "67.0614, 4.85347, -43.5936, 0.28", "67.2283, 3.40053, -44.6671, 0.55", "67.7544, 0.319273, -46.9793, 0.28", "67.7814, 0.131261, -47.1541, 0.55", "67.9518, -0.83767, -48.1611, 0.28", "68.0065, -1.60783, -49.1354, 0.55", "68.0075, -2.38857, -50.259, 0.28", "67.9696, -3.44027, -51.8505, 0.55", "67.8731, -6.09288, -55.785, 0.55", "67.75, -8.49891, -59.4228, 0.55", "67.6279, -10.4203, -62.3329, 0.55", "67.4651, -12.3151, -65.1508, 0.55", "67.4214, -12.8095, -65.8531, 0.28", "67.3941, -13.3487, -66.5504, 0.55", "67.4414, -14.1153, -67.4365, 0.28", "67.692, -15.5252, -68.884, 0.55", "68.4414, -18.3299, -71.1821, 0.55", "68.8609, -19.867, -72.272, 0.28", "69.189, -21.411, -73.4494, 0.55", "69.4754, -23.5486, -75.1807, 0.28", "69.5846, -25.2596, -76.6181, 0.55", "69.6269, -27.8111, -78.769, 0.28", "69.6933, -30.4693, -80.9056, 0.55", "69.7328, -34.319, -84.043, 0.28", "69.7042, -36.3674, -85.7211, 0.55", "69.6367, -38.4505, -87.4908, 0.28", "69.554, -40.2598, -89.1737, 0.28", "69.5352, -42.4863, -91.4993, 0.55", "69.6824, -44.5694, -93.6017, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "57.8601, 27.8784, -8.29805, 0.55", "61.4022, 28.1481, -7.124, 0.55", "64.0221, 28.1754, -6.47942, 0.55", "69.7974, 28.0846, -5.33883, 0.55", "72.4252, 27.9256, -5.0325, 0.55", "75.3027, 27.7688, -4.85451, 0.55", "79.189, 27.5453, -4.89447, 0.55", "83.3402, 27.0977, -5.2715, 0.55", "85.5476, 26.7672, -5.69279, 0.55", "90.0962, 25.9262, -7.11125, 0.55", "92.1962, 25.5366, -7.82976, 0.55", "97.138, 24.5037, -9.60263, 0.55", "100.495, 23.6896, -10.7413, 0.55", "102.955, 23.1068, -11.4737, 0.83", "106.895, 22.0548, -12.563, 0.55", "110.756, 20.8941, -13.4425, 0.83", "114.034, 19.8042, -14.0414, 0.55", "116.932, 18.9141, -14.4481, 0.55", "118.565, 18.4985, -14.6166, 0.83", "122.356, 17.5942, -14.8287, 0.28", "124.222, 17.2499, -14.8456, 0.28", "126.048, 16.7833, -14.9166, 0.28", "128.017, 16.3255, -15.0162, 0.28", "131.17, 15.6298, -15.2525, 0.28", "132.434, 15.3749, -15.3171, 0.55", "135.423, 14.8758, -15.2059, 0.55", "140.782, 14.0046, -14.7367, 0.55", "142.262, 13.7448, -14.5343, 0.55", "143.582, 13.4878, -14.2877, 0.83", "146.418, 13.0789, -13.5586, 0.55", "148.878, 12.7393, -12.8886, 0.55", "151.201, 12.431, -12.2479, 0.55", "153.008, 12.1474, -11.7915, 0.55", "155.906, 11.4662, -11.144, 0.55", "159.367, 10.3243, -10.4741, 0.55", "164.834, 7.87658, -9.61556, 0.55", "167.89, 6.07172, -9.19813, 0.55", "170.589, 4.05925, -8.83453, 0.28", "171.413, 3.28844, -8.72084, 0.55", "173.284, 1.07766, -8.40947, 0.28", "174.952, -1.44365, -8.03672, 0.55", "176.579, -4.57213, -7.34807, 0.55", "177.662, -6.59536, -6.79477, 0.28", "178.052, -7.29777, -6.56264, 0.55", "179.053, -9.03015, -5.95847, 0.28", "180.405, -11.2592, -5.11149, 0.55", "183.873, -16.556, -2.9131, 0.55", "185.666, -19.1999, -1.74121, 0.55", "187.327, -21.6131, -0.642287, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "57.8601, 27.8784, -8.29805, 0.55", "60.1356, 28.4835, -6.55311, 0.55", "60.866, 28.6743, -6.0345, 0.55", "63.6052, 29.2512, -4.2221, 0.55", "66.6553, 29.9564, -2.15273, 0.55", "70.5649, 30.8527, 0.605426, 0.55", "71.6447, 31.1015, 1.3599, 0.55", "73.5918, 31.4723, 2.69407, 0.55", "75.7205, 31.9273, 4.07481, 0.55", "78.187, 32.5249, 5.56698, 0.55", "80.5069, 33.1214, 6.98163, 0.55", "81.7724, 33.5067, 7.69743, 0.55", "83.2524, 34.0027, 8.53529, 0.55", "85.0763, 34.6701, 9.53786, 0.83", "88.0664, 35.7532, 10.8564, 0.55", "90.0572, 36.3892, 11.6309, 0.83", "92.8387, 37.1419, 12.6083, 0.55", "93.699, 37.3258, 12.8957, 0.55", "96.3861, 37.7625, 13.7308, 0.55", "101.233, 38.252, 15.0304, 0.55", "104.808, 38.4142, 15.9003, 0.55", "107.654, 38.4139, 16.6545, 0.55", "110.576, 38.2652, 17.521, 0.55", "111.192, 38.2179, 17.7063, 0.28", "112.449, 38.0734, 18.0789, 0.83", "117.617, 37.4077, 19.638, 0.55", "121.233, 36.9455, 20.6604, 0.55", "124.191, 36.6392, 21.5725, 0.55", "125.958, 36.4511, 22.1341, 0.83", "127.348, 36.3226, 22.5787, 0.28", "128.607, 36.208, 22.9704, 0.55", "138.121, 37.6446, 27.4188, 0.55", "148.4, 37.5412, 30.0076, 0.55", "158.472, 38.707, 33.0977, 0.55", "167.661, 38.2836, 38.3653, 0.55", "176.397, 36.3844, 44.0615, 0.55", "186.084, 33.0709, 46.8053, 0.55", "195.725, 28.77, 47.7613, 0.55", "206.054, 26.4119, 48.1076, 0.55", "216.295, 23.8847, 49.1567, 0.55", "226.801, 22.5329, 49.5483, 0.55", "237.216, 21.6388, 51.3049, 0.55", "247.2, 18.9039, 53.5858, 0.55", "257.222, 18.0343, 56.9284, 0.55", "266.639, 18.6562, 61.7547, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.66134, -34.1414, 7.06753, 1.38", "0.195595, -36.1005, 6.53529, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.66134, -34.1414, 7.06753, 0.55", "-2.73452, -35.4288, 7.11753, 0.55", "-3.92213, -37.0812, 7.1726, 0.55", "-4.84558, -38.1737, 7.22673, 0.55", "-5.62705, -39.0866, 7.14825, 0.55", "-7.33595, -40.9758, 6.81366, 0.55", "-8.5351, -42.2367, 6.54554, 0.55", "-9.60242, -43.3672, 6.26621, 0.55", "-12.3439, -46.1171, 5.55187, 0.55", "-15.6367, -49.2998, 4.7206, 0.55", "-18.1878, -51.7095, 4.03229, 0.55", "-19.8168, -53.2923, 3.56893, 0.55", "-21.6859, -55.1924, 3.04263, 0.55", "-24.0576, -57.9214, 2.405, 0.55", "-25.4459, -59.8612, 2.05997, 0.55", "-27.1562, -62.6555, 1.78422, 0.55", "-28.5204, -65.277, 1.61706, 0.55", "-29.9018, -68.5525, 1.46902, 0.55", "-31.2068, -72.4022, 1.38223, 0.55", "-31.9133, -75.3484, 1.38003, 0.55", "-32.1627, -76.816, 1.4726, 0.55", "-32.5371, -80.2672, 1.87341, 0.55", "-32.8277, -83.4972, 2.33153, 0.55", "-32.9474, -86.7535, 3.02978, 0.55", "-33.033, -88.6216, 3.5326, 0.55", "-33.2574, -94.3985, 5.29835, 0.55", "-33.2766, -94.8238, 5.43588, 0.55", "-33.3433, -97.4294, 6.34075, 0.55", "-33.677, -102.086, 8.07321, 0.55", "-33.7999, -103.643, 8.56037, 0.55", "-34.0625, -106.076, 8.90659, 0.55", "-34.1418, -106.98, 8.82803, 0.55", "-34.2893, -110.038, 7.98499, 0.55", "-34.2847, -112.02, 7.01898, 0.55", "-34.2071, -115.177, 4.8374, 0.55", "-33.9632, -119.039, 1.86633, 0.28", "-33.8912, -119.994, 1.00255, 0.55", "-33.7804, -121.442, -0.434634, 0.28", "-33.7659, -121.66, -0.662744, 0.55", "-33.6921, -122.854, -1.80939, 0.28", "-33.6924, -123.259, -2.1047, 0.55", "-33.7317, -125.367, -3.23174, 0.28", "-33.7726, -126.084, -3.6055, 0.55", "-33.914, -128.157, -4.56781, 0.28", "-33.9555, -128.81, -4.86842, 0.55", "-34.1164, -131.062, -5.86856, 0.28", "-34.185, -132.098, -6.33406, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-12.1278, -83.7723, 65.3797, 0.55", "-15.3786, -89.9242, 70.8974, 0.55", "-19.5631, -95.3653, 76.5314, 0.55", "-23.4294, -101.371, 81.8078, 0.55", "-27.4296, -107.42, 86.933, 0.55", "-30.3808, -114.399, 91.5636, 0.55", "-33.3116, -121.084, 96.6213, 0.55", "-34.9769, -129.088, 100.088, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-12.1278, -83.7723, 65.3797, 0.55", "-11.5475, -90.8757, 72.3502, 0.55", "-10.4581, -99.0669, 77.927, 0.55", "-10.9644, -107.387, 83.3952, 0.55", "-11.9812, -116.209, 87.9252, 0.55", "-12.6059, -124.978, 92.6256, 0.55", "-13.1975, -133.387, 97.9482, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-58.2557, 46.2176, -14.5927, 0.83", "-58.227, 46.9766, -16.1089, 0.83", "-58.181, 48.8735, -19.5478, 0.55", "-58.1381, 49.7182, -20.9366, 0.83", "-58.0685, 50.6449, -22.3401, 0.55", "-57.9568, 51.6484, -23.6063, 0.55", "-57.8771, 52.1749, -24.1625, 0.28", "-57.8271, 52.5557, -24.4207, 0.55", "-57.549, 53.9061, -24.9963, 0.28", "-57.408, 54.4907, -25.2161, 0.55", "-56.9241, 56.5488, -25.8907, 0.28", "-56.5712, 58.1991, -26.3608, 0.55", "-56.1266, 60.8097, -26.9886, 0.28", "-55.8062, 63.1234, -27.4798, 0.28", "-55.6955, 64.4318, -27.714, 0.55", "-55.6576, 65.9913, -27.9702, 0.28", "-55.6849, 66.7423, -28.072, 0.55", "-55.8603, 68.4956, -28.3656, 0.28", "-56.0667, 69.6544, -28.6022, 0.28", "-56.3009, 70.7852, -28.8625, 0.28", "-56.4027, 71.3803, -29.0072, 0.55", "-56.6996, 73.7628, -29.676, 0.28", "-56.9694, 76.5639, -30.5395, 0.55", "-57.0493, 77.5292, -30.8446, 0.55", "-57.14, 78.5038, -31.1266, 0.55", "-57.4506, 80.5734, -31.7339, 0.55", "-57.7489, 81.9304, -32.1417, 0.28", "-57.9231, 82.4463, -32.2894, 0.55", "-58.4863, 83.8582, -32.6385, 0.28", "-59.1603, 85.3494, -33.0539, 0.55", "-60.3475, 87.4842, -33.6875, 0.28", "-60.9464, 88.3738, -33.9584, 0.28", "-61.9673, 89.5878, -34.4203, 0.55", "-63.1329, 90.8396, -34.9486, 0.28", "-63.3488, 91.0353, -35.0346, 0.55", "-64.1344, 91.658, -35.3141, 0.28", "-66.8483, 93.6606, -36.1816, 0.55", "-70.6884, 96.0866, -37.424, 0.28", "-71.412, 96.4811, -37.6799, 0.55", "-73.4134, 97.4846, -38.3914, 0.28", "-74.2601, 97.8894, -38.7074, 0.28", "-75.0057, 98.2152, -39.0085, 0.55", "-77.2489, 98.8914, -39.9666, 0.28", "-78.8332, 99.2417, -40.5456, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-58.2557, 46.2176, -14.5927, 0.55", "-58.3954, 47.3879, -14.9541, 0.55", "-58.4848, 48.0924, -15.0998, 0.28", "-58.6285, 48.6259, -15.0669, 0.55", "-58.9586, 49.851, -14.9912, 0.28", "-59.1905, 50.7115, -14.9381, 0.55", "-59.6179, 52.2979, -14.8401, 0.28", "-59.9048, 53.1798, -14.637, 0.55", "-61.0447, 55.4427, -13.3946, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-161.482, -50.7428, -18.5066, 0.55", "-167.678, -58.678, -21.6449, 0.55", "-172.207, -67.4525, -25.3451, 0.55", "-175.752, -75.5513, -31.093, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-161.482, -50.7428, -18.5066, 0.55", "-168.221, -57.9434, -23.6051, 0.55", "-173.814, -65.2044, -29.8691, 0.55", "-178.958, -72.6195, -36.3348, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-197.424, 20.4705, 79.112, 0.55", "-204.887, 19.9652, 84.0829, 0.55", "-212.636, 20.8144, 88.5428, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-197.424, 20.4705, 79.112, 0.55", "-204.767, 19.5977, 82.393, 0.55", "-212.234, 20.0421, 85.4727, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "69.6824, -44.5694, -93.6017, 0.28", "77.2668, -48.7413, -108.153, 0.28", "78.0259, -49.2282, -109.454, 0.55", "79.3072, -50.0502, -111.649, 0.28", "80.3862, -50.7423, -113.498, 0.28", "81.8144, -51.6585, -115.945, 0.55", "83.6975, -52.8665, -119.172, 0.55", "86.3328, -55.0672, -120.945, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "69.6824, -44.5694, -93.6017, 0.55", "70.2724, -45.6107, -94.9545, 0.55", "70.4377, -46.0778, -95.553, 0.28", "70.6707, -46.8758, -96.5965, 0.55", "71.184, -48.6336, -98.8953, 0.28", "71.5397, -49.8518, -100.489, 0.55", "72.1424, -51.9158, -103.188, 0.28", "72.7852, -54.4099, -106.716, 0.28", "73.0213, -55.5531, -108.363, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "187.327, -21.6131, -0.642287, 0.28", "189.917, -24.7374, 0.523357, 0.28", "193.137, -28.894, 2.4165, 0.28", "195.156, -31.6013, 3.75621, 0.55", "196.359, -33.0861, 4.59628, 0.28", "196.997, -33.8867, 5.05567, 0.28", "200.172, -37.8361, 7.2579, 0.55", "200.883, -38.7145, 7.88037, 0.28", "202.53, -41.0578, 9.65854, 0.55", "203.95, -43.0963, 11.1056, 0.28", "205.198, -44.7424, 12.2633, 0.55", "206.683, -46.712, 13.5054, 0.55", "209.118, -49.8304, 15.0421, 0.55", "209.709, -50.5962, 15.3864, 0.55", "211.837, -53.4657, 16.6194, 0.28", "212.668, -54.6428, 17.0805, 0.55", "213.825, -56.1347, 17.6817, 0.28", "215.477, -58.2517, 18.4259, 0.55", "218.296, -61.5621, 19.0857, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "187.327, -21.6131, -0.642287, 0.55", "183.599, -22.019, -1.2019, 0.55", "180.572, -22.3486, -1.65635, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.195595, -36.1005, 6.53529, 0.83", "0.285685, -36.2902, 6.51233, 0.83", "1.34211, -37.9671, 6.39337, 0.83", "2.2598, -39.436, 6.19041, 0.55", "2.99192, -40.6078, 6.02849, 0.55", "4.54807, -43.0986, 5.68434, 0.83", "6.43557, -46.1197, 5.26689, 0.55", "7.46826, -47.7006, 5.07663, 0.83", "9.30804, -50.2142, 4.8721, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.195595, -36.1005, 6.53529, 0.55", "-0.977582, -36.9829, 4.16914, 0.55", "-2.23684, -37.9302, 1.62937, 0.55", "-3.72341, -39.0484, -1.36885, 0.55", "-5.52859, -40.4063, -5.00966, 0.55", "-6.55296, -41.1768, -7.07569, 0.55", "-6.75874, -41.3316, -7.49073, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-13.1975, -133.387, 97.9482, 0.55", "-13.0667, -139.52, 102.406, 0.55", "-11.8542, -146.001, 106.152, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-13.1975, -133.387, 97.9482, 0.55", "-13.7947, -145.45, 104.955, 0.55", "-15.08, -157.266, 112.283, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-61.0447, 55.4427, -13.3946, 0.28", "-61.4904, 57.874, -12.3288, 0.28", "-61.6202, 58.8262, -11.8637, 0.55", "-61.9585, 61.5968, -10.4922, 0.28", "-62.1753, 62.9304, -9.89065, 0.55", "-62.8238, 66.5069, -8.32842, 0.28", "-63.483, 70.1419, -6.74062, 0.55", "-64.5638, 75.9771, -3.97537, 0.28", "-64.7931, 77.2264, -3.38939, 0.55", "-65.3261, 80.0532, -2.21572, 0.28", "-65.5291, 81.2007, -1.77768, 0.55", "-68.9096, 90.0364, 3.43567, 0.55", "-74.0231, 99.0574, 6.46053, 0.55", "-77.5062, 108.647, 10.0075, 0.55", "-79.802, 118.972, 12.201, 0.55", "-83.4279, 128.891, 14.4665, 0.55", "-87.4197, 137.999, 18.6842, 0.55", "-90.1101, 146.864, 24.2384, 0.55", "-91.2882, 155.158, 31.058, 0.55", "-92.6218, 163.854, 37.3245, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-61.0447, 55.4427, -13.3946, 0.55", "-63.3911, 55.3947, -11.0676, 0.55", "-64.6132, 55.3212, -9.84191, 0.28", "-65.5227, 55.2665, -8.92977, 0.55", "-66.2807, 55.2209, -8.16955, 0.28", "-66.8116, 55.189, -7.63706, 0.55", "-68.2756, 55.1009, -6.16875, 0.28", "-69.3071, 54.8936, -5.28935, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-175.752, -75.5513, -31.093, 0.55", "-179.689, -84.1123, -33.3978, 0.55", "-183.378, -92.9924, -34.679, 0.55", "-186.435, -101.69, -37.6984, 0.55", "-190.394, -110.384, -39.3854, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-175.752, -75.5513, -31.093, 0.55", "-180.925, -79.6638, -39.2011, 0.55", "-185.669, -82.2917, -48.1459, 0.55", "-191.203, -86.2337, -56.0989, 0.55", "-198.731, -88.6831, -62.936, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-178.958, -72.6195, -36.3348, 0.55", "-183.29, -74.7514, -42.8406, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-178.958, -72.6195, -36.3348, 0.55", "-184.49, -82.5536, -34.5542, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "86.3328, -55.0672, -120.945, 0.28", "89.6102, -56.9333, -123.111, 0.28", "91.1326, -57.8, -124.118, 0.55", "94.0357, -59.453, -126.036, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "86.3328, -55.0672, -120.945, 0.55", "85.7638, -55.8948, -122.583, 0.55", "84.6255, -57.5502, -125.858, 0.28", "84.2548, -58.0894, -126.925, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "73.0213, -55.5531, -108.363, 0.28", "74.008, -58.9186, -112.804, 0.28", "74.4966, -60.585, -115.003, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "73.0213, -55.5531, -108.363, 0.55", "71.3856, -56.334, -107.52, 0.55", "66.8246, -58.5116, -105.168, 0.28", "65.7411, -59.0289, -104.609, 0.55", "62.777, -60.444, -103.081, 0.28", "60.8665, -61.3562, -102.096, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "9.30804, -50.2142, 4.8721, 0.83", "9.35156, -50.5277, 4.82731, 0.83", "9.97971, -54.6288, 4.35771, 0.83", "10.1764, -57.711, 4.19508, 0.83", "10.1479, -60.6964, 4.34025, 0.83", "9.96063, -64.6767, 4.82923, 0.83", "9.61329, -69.2677, 5.55792, 0.83", "9.23931, -74.3969, 6.64048, 0.83", "8.87061, -79.3822, 7.92158, 0.83", "8.0244, -85.5096, 9.34091, 0.83", "7.48613, -88.326, 9.82887, 0.83", "7.07705, -90.4426, 10.0624, 0.83", "6.20864, -94.5041, 10.4218, 0.83", "5.52205, -98.1376, 10.5457, 0.83", "4.50396, -105.866, 9.95757, 0.83", "4.0127, -110.086, 9.08468, 0.83", "3.5659, -113.97, 7.99504, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "9.30804, -50.2142, 4.8721, 0.55", "8.64093, -51.7771, 4.82952, 0.55", "8.13065, -52.9135, 4.881, 0.55", "7.81498, -53.6413, 4.98835, 0.55", "7.36154, -54.7813, 5.27199, 0.55", "6.5047, -57.0403, 5.98374, 0.55", "5.8205, -58.754, 6.70629, 0.55", "5.25653, -60.1304, 7.42982, 0.55", "4.64243, -61.5232, 8.25346, 0.55", "4.11677, -62.6795, 8.9946, 0.28", "3.65819, -63.6272, 9.73405, 0.55", "2.7573, -65.3568, 11.3118, 0.55", "2.13558, -66.4201, 12.384, 0.55", "1.78155, -67.0158, 12.9782, 0.55", "1.33356, -67.7184, 13.639, 0.83", "0.00272882, -69.7996, 15.4606, 0.28", "-0.434917, -70.488, 16.0452, 0.55", "-1.18257, -71.7295, 17.0653, 0.28", "-1.41587, -72.1127, 17.4071, 0.55", "-1.9126, -73.0113, 18.1982, 0.28", "-2.18745, -73.5216, 18.6116, 0.55", "-3.13217, -75.176, 19.5064, 0.55", "-4.77614, -79.6467, 23.7636, 0.55", "-6.15274, -83.911, 28.3171, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.75874, -41.3316, -7.49073, 0.55", "-9.09891, -42.3761, -10.2086, 0.55", "-9.79543, -42.6247, -10.973, 0.55", "-11.5498, -43.2528, -12.8211, 0.55", "-15.4087, -44.5123, -16.6889, 0.28", "-15.9864, -44.6876, -17.226, 0.55", "-18.3987, -45.4939, -19.3707, 0.55", "-21.7221, -46.6166, -21.9772, 0.55", "-22.9981, -47.0068, -22.9414, 0.28", "-24.1244, -47.2744, -23.7182, 0.28", "-26.0631, -47.7061, -24.7833, 0.55", "-28.432, -48.1186, -26.1662, 0.28", "-30.6307, -48.3128, -27.4854, 0.55", "-32.3411, -48.3267, -28.4681, 0.55", "-33.524, -48.2386, -29.1776, 0.55", "-37.0062, -47.8229, -31.3581, 0.55", "-40.6903, -47.1478, -33.5767, 0.55", "-42.2191, -46.7898, -34.4537, 0.28", "-43.6695, -46.4706, -35.3136, 0.55", "-46.6018, -46.007, -37.0359, 0.28", "-47.5873, -45.8788, -37.6068, 0.83", "-49.4342, -45.6246, -38.5512, 0.28", "-50.7649, -45.546, -39.0678, 0.55", "-52.6944, -45.4987, -39.7829, 0.28", "-53.4642, -45.4716, -40.0428, 0.55", "-54.8913, -45.4508, -40.4516, 0.55", "-57.0621, -45.2164, -40.9818, 0.55", "-58.4865, -44.9837, -41.2486, 0.28", "-59.6438, -44.6659, -41.3715, 0.55", "-61.017, -44.134, -41.5163, 0.28", "-61.2439, -44.0294, -41.5467, 0.55", "-63.3419, -43.0039, -42.1652, 0.28", "-64.8665, -42.2242, -42.7644, 0.55", "-66.8848, -41.0603, -43.8094, 0.83", "-68.5489, -40.058, -44.8427, 0.28", "-68.9784, -39.8, -45.1493, 0.55", "-72.2687, -37.8579, -47.6744, 0.28", "-72.8435, -37.5243, -48.1698, 0.55", "-74.5444, -36.428, -49.7284, 0.28", "-74.9833, -36.1459, -50.1338, 0.55", "-76.1117, -35.415, -51.1008, 0.28", "-76.9124, -34.891, -51.7378, 0.55", "-78.7055, -33.7337, -52.9062, 0.28", "-79.768, -33.1189, -53.5639, 0.55", "-82.0324, -31.9464, -54.8575, 0.28", "-82.7058, -31.6325, -55.2341, 0.55", "-83.7591, -31.2193, -55.7905, 0.28", "-84.652, -30.8737, -56.2204, 0.55", "-86.5067, -30.185, -57.0078, 0.28", "-87.0651, -29.9904, -57.2279, 0.55", "-91.2179, -28.4766, -58.6755, 0.28", "-92.6783, -27.8542, -59.0579, 0.55", "-95.2868, -26.6332, -59.5766, 0.28", "-96.4637, -26.0407, -59.7742, 0.55", "-99.1588, -24.7074, -60.0806, 0.28", "-100.145, -24.2617, -60.1534, 0.55", "-103.698, -22.9619, -60.2439, 0.28", "-105.172, -22.598, -60.2748, 0.55", "-107.262, -22.4115, -60.3069, 0.55", "-108.543, -22.3772, -60.2993, 0.55", "-111.142, -22.3823, -60.0889, 0.28", "-113.688, -22.4196, -59.7236, 0.28", "-115.804, -22.4458, -59.3577, 0.55", "-118.374, -22.2687, -58.6206, 0.28", "-119.632, -22.03, -58.0791, 0.55", "-122.6, -20.9867, -56.4698, 0.28", "-124.075, -20.155, -55.2582, 0.55", "-124.987, -19.4661, -54.2485, 0.28", "-125.945, -18.6975, -52.8385, 0.55", "-127.1, -17.688, -50.8981, 0.28", "-127.541, -17.3371, -50.1699, 0.55", "-129.927, -15.7998, -46.7493, 0.28", "-130.736, -15.3224, -45.6073, 0.55", "-132.64, -14.2848, -42.8359, 0.28", "-133.675, -13.7374, -41.3314, 0.55", "-134.528, -13.2894, -40.0967, 0.55", "-135.558, -12.7636, -38.6547, 0.28", "-136.132, -12.4953, -38.0127, 0.55", "-138.104, -11.5159, -35.9928, 0.28", "-139.13, -10.8629, -34.9065, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.75874, -41.3316, -7.49073, 0.55", "-6.51204, -41.3867, -8.04956, 0.55", "-6.2482, -41.3754, -8.60315, 0.55", "-5.8854, -41.309, -9.27431, 0.55", "-5.56744, -41.2065, -9.80643, 0.55", "-3.24278, -40.1284, -13.1153, 0.55", "-2.72524, -39.7891, -13.8664, 0.55", "-1.97803, -39.1974, -14.9915, 0.55", "-1.45298, -38.7488, -15.7909, 0.55", "-0.929704, -38.2613, -16.5534, 0.28", "-0.0839329, -37.4361, -17.6747, 0.55", "1.24317, -36.147, -19.2583, 0.28", "1.33455, -36.0687, -19.4318, 0.55", "1.6599, -35.8063, -20.7392, 0.28", "1.73275, -35.6914, -21.6597, 0.55", "1.72095, -35.6412, -22.6676, 0.55", "1.67773, -35.6432, -24.4818, 0.55", "1.6036, -35.6716, -28.0429, 0.55", "1.59705, -35.7132, -30.4354, 0.55", "1.61703, -35.7339, -31.2611, 0.55", "1.87479, -35.8206, -36.6811, 0.55", "2.00552, -35.8198, -38.1442, 0.55", "2.14054, -35.8164, -38.9592, 0.55", "2.62279, -35.8472, -40.8324, 0.55", "4.05305, -36.1377, -45.2654, 0.55", "4.49172, -36.263, -46.4444, 0.28", "4.79378, -36.3624, -47.0976, 0.55", "5.26178, -36.5506, -48.0585, 0.28", "5.48563, -36.6683, -48.4399, 0.55", "6.42406, -37.1924, -49.3847, 0.28", "7.34039, -37.9134, -49.6006, 0.55", "7.89794, -38.4297, -49.6933, 0.28", "8.42057, -39.0022, -49.7142, 0.55", "8.88686, -39.6286, -49.6913, 0.28", "9.08872, -39.9523, -49.6887, 0.55", "9.56349, -40.8021, -49.6433, 0.28", "9.68184, -41.0559, -49.6694, 0.55", "10.3451, -42.5099, -49.903, 0.28", "10.6623, -43.1803, -50.1027, 0.55", "11.3766, -44.6076, -50.7024, 0.28", "11.6562, -45.1312, -50.9868, 0.55", "12.6341, -46.8454, -52.0389, 0.28", "12.8727, -47.2617, -52.3138, 0.55", "13.5841, -48.5811, -53.2304, 0.28", "13.7345, -48.8916, -53.418, 0.55", "14.104, -49.7135, -53.9031, 0.28", "14.3178, -50.1894, -54.2336, 0.55", "14.5407, -50.6553, -54.5991, 0.55", "14.9867, -51.5848, -55.3212, 0.28", "15.3116, -52.156, -55.8446, 0.55", "16.3842, -53.562, -57.5335, 0.28", "16.8054, -54.0117, -58.2158, 0.55", "17.1045, -54.2949, -58.6797, 0.28", "17.4159, -54.5507, -59.1435, 0.55", "18.4031, -55.259, -60.5504, 0.28", "19.163, -55.8099, -61.5903, 0.55", "20.5091, -56.8698, -63.2411, 0.28", "20.9346, -57.1993, -63.7584, 0.55", "21.7875, -57.8028, -64.6654, 0.28", "22.0821, -58.0006, -64.941, 0.55", "22.5941, -58.3175, -65.2916, 0.28", "23.0591, -58.5841, -65.5596, 0.55", "24.3604, -59.2405, -66.1507, 0.28", "25.8623, -59.9316, -66.8032, 0.28", "26.6375, -60.2472, -67.0789, 0.28", "27.4086, -60.5403, -67.4034, 0.55", "28.5362, -60.9155, -67.8816, 0.28", "29.0408, -61.0749, -68.0835, 0.83", "30.3389, -61.4994, -68.5495, 0.28", "30.8942, -61.6959, -68.7829, 0.55", "33.303, -62.6515, -69.9234, 0.28", "34.4815, -63.1425, -70.5917, 0.28", "35.3225, -63.4986, -71.1354, 0.55", "35.7953, -63.7162, -71.5101, 0.55", "37.0159, -64.3115, -72.6113, 0.28", "38.1377, -64.9268, -73.6926, 0.55", "39.1575, -65.5243, -74.6778, 0.28", "40.0608, -66.0796, -75.6236, 0.55", "40.8099, -66.528, -76.4004, 0.28", "41.4386, -66.8427, -76.998, 0.55", "42.9871, -67.5025, -78.3612, 0.28", "43.7843, -67.836, -79.0167, 0.55", "44.9976, -68.3412, -79.9537, 0.28", "46.0002, -68.7229, -80.6957, 0.55", "48.3506, -69.5023, -82.4351, 0.28", "49.2878, -69.7588, -83.2109, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-11.8542, -146.001, 106.152, 0.55", "-11.8141, -157.661, 111.548, 0.55", "-11.0086, -170.263, 113.918, 0.55", "-10.6794, -182.403, 118.11, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-11.8542, -146.001, 106.152, 0.55", "-10.7354, -153.89, 111.882, 0.55", "-10.8818, -160.64, 119.005, 0.55", "-10.9494, -165.783, 127.364, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-15.08, -157.266, 112.283, 0.55", "-14.3949, -166.164, 118.152, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-15.08, -157.266, 112.283, 0.55", "-16.3042, -165.973, 117.335, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "3.5659, -113.97, 7.99504, 0.83", "4.59885, -117.971, 8.51012, 0.83", "5.6324, -121.34, 9.18796, 0.83", "6.65975, -124.689, 9.86175, 0.83", "7.63541, -127.869, 10.5016, 0.83", "9.13897, -132.769, 11.4877, 0.83", "10.6316, -137.634, 12.4667, 0.83", "11.8921, -140.848, 13.5216, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "3.5659, -113.97, 7.99504, 0.55", "5.238, -116.171, 8.13853, 0.55", "6.55336, -117.885, 7.94625, 0.55", "7.47962, -119.153, 7.67043, 0.55", "8.35463, -120.644, 7.13292, 0.83", "9.25545, -122.339, 6.30151, 0.55", "10.1365, -123.996, 5.48828, 0.83", "11.0055, -125.794, 4.42631, 0.55", "11.5172, -126.837, 3.71098, 0.83", "13.055, -130.208, 1.11332, 0.55", "14.0559, -132.86, -1.11767, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-6.15274, -83.911, 28.3171, 0.55", "-10.1842, -92.7099, 34.4691, 0.55", "-15.6218, -100.318, 41.1074, 0.55", "-21.6824, -106.83, 48.3454, 0.55", "-28.5613, -111.961, 55.9529, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-6.15274, -83.911, 28.3171, 0.55", "-8.59346, -89.7856, 32.9572, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "11.8921, -140.848, 13.5216, 0.55", "12.0256, -142.9, 14.0364, 0.55", "12.2576, -145.518, 14.7689, 0.55", "12.4794, -147.989, 15.4471, 0.55", "12.6207, -149.746, 15.8998, 0.55", "12.8451, -152.882, 16.6545, 0.55", "13.6401, -161.689, 18.5721, 0.55", "13.9997, -164.674, 19.1054, 0.55", "14.2761, -166.777, 19.3773, 0.55", "14.6384, -169.174, 19.499, 0.55", "14.9102, -171.026, 19.4247, 0.55", "15.6985, -175.345, 19.0903, 0.55", "16.1831, -178.628, 18.8163, 0.55", "16.5505, -180.783, 18.7079, 0.55", "17.4443, -186.377, 18.7104, 0.55", "17.9986, -190.141, 18.8755, 0.55", "18.6995, -195.0, 19.364, 0.55", "19.5091, -200.517, 20.3514, 0.55", "20.1845, -204.197, 21.2598, 0.55", "20.6283, -206.371, 21.8616, 0.55", "21.0011, -208.377, 22.4058, 0.55", "21.532, -210.912, 22.981, 0.55", "22.7943, -217.019, 23.9443, 0.55", "23.3745, -219.377, 24.2398, 0.55", "23.96, -222.006, 24.5427, 0.55", "24.8094, -225.954, 24.9727, 0.55", "25.3171, -228.997, 25.3139, 0.55", "25.6372, -231.894, 25.5789, 0.55", "25.8196, -234.663, 25.8161, 0.55", "25.9466, -237.367, 26.0806, 0.55", "26.0511, -239.291, 26.2513, 0.55", "26.2561, -242.436, 26.4248, 0.55", "26.4886, -246.209, 26.3394, 0.55", "26.6676, -248.036, 26.1663, 0.55", "26.859, -249.638, 25.8948, 0.55", "27.3841, -252.649, 25.2202, 0.55", "27.7048, -254.557, 24.7362, 0.55", "28.1145, -256.91, 24.2332, 0.55", "28.3255, -258.57, 23.9727, 0.55", "28.7727, -262.89, 23.455, 0.55", "28.9956, -266.134, 23.2898, 0.55", "29.1999, -271.167, 23.4351, 0.55", "29.3593, -274.418, 23.8442, 0.55", "29.4851, -277.835, 24.381, 0.28", "29.4939, -279.211, 24.6485, 0.28", "29.4576, -282.558, 25.5974, 0.28", "29.3616, -285.655, 26.7139, 0.28", "29.5493, -289.741, 28.6588, 0.28", "31.4882, -298.828, 30.8636, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "11.8921, -140.848, 13.5216, 0.55", "13.3493, -141.405, 14.5065, 0.55", "16.2506, -142.845, 16.7522, 0.55", "18.7084, -144.27, 18.8012, 0.28", "21.3081, -145.894, 21.0839, 0.55", "22.7687, -146.934, 22.6939, 0.28", "25.1695, -148.813, 25.7613, 0.55", "25.9993, -149.816, 27.3964, 0.28", "26.2558, -150.18, 28.071, 0.28", "26.6919, -150.699, 29.2484, 0.55", "28.5389, -152.393, 33.5965, 0.28", "29.3588, -153.052, 35.3941, 0.55", "32.1354, -154.955, 40.3624, 0.28", "33.7436, -155.887, 42.902, 0.28", "35.8511, -157.082, 45.9032, 0.55", "39.2089, -158.935, 50.0075, 0.28", "39.6988, -159.179, 50.5028, 0.55", "42.2171, -160.368, 52.753, 0.28", "42.4608, -160.478, 52.9294, 0.55", "44.5818, -161.795, 54.5516, 0.28", "45.5587, -162.517, 55.3881, 0.55", "53.5395, -167.846, 62.3517, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-28.5613, -111.961, 55.9529, 0.55", "-31.6102, -116.417, 64.7013, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-28.5613, -111.961, 55.9529, 0.55", "-34.1613, -119.051, 60.7059, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L6_BP_82b6294190_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.85236, 9.0618, 3.00566, 0.83 ) }
    dend_43 { pt3dadd( -7.77068, 12.0988, 3.5966, 1.11 ) }
    dend_43 { pt3dadd( -10.081, 13.8883, 3.90399, 0.83 ) }
    dend_43 { pt3dadd( -12.3255, 15.6117, 4.17941, 0.83 ) }
    dend_43 { pt3dadd( -13.6544, 16.5945, 4.33034, 1.11 ) }
    dend_43 { pt3dadd( -17.816, 19.6654, 4.81405, 1.11 ) }
    dend_43 { pt3dadd( -25.2593, 24.9229, 5.66911, 0.83 ) }
    dend_43 { pt3dadd( -27.9409, 26.7448, 5.95147, 0.83 ) }
    dend_43 { pt3dadd( -30.0645, 28.1447, 6.12685, 0.83 ) }
    dend_43 { pt3dadd( -32.1352, 29.5321, 6.27867, 0.83 ) }
    dend_43 { pt3dadd( -33.8209, 30.6755, 6.36058, 0.55 ) }
    dend_43 { pt3dadd( -35.0879, 31.4498, 6.44371, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.73037, 6.29613, -6.26221, 0.55 ) }
    dend_28 { pt3dadd( 7.58918, 6.91455, -6.90064, 0.55 ) }
    dend_28 { pt3dadd( 9.24804, 7.07066, -7.74541, 0.83 ) }
    dend_28 { pt3dadd( 11.8735, 7.23679, -9.31462, 0.55 ) }
    dend_28 { pt3dadd( 13.1408, 7.31699, -10.0721, 1.38 ) }
    dend_28 { pt3dadd( 16.257, 7.51417, -11.9346, 0.55 ) }
    dend_28 { pt3dadd( 17.5842, 7.4474, -12.8233, 0.83 ) }
    dend_28 { pt3dadd( 24.4496, 6.22284, -17.8164, 0.55 ) }
    dend_28 { pt3dadd( 25.1138, 6.05816, -18.3657, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.693126, -11.2815, 3.51734, 1.11 ) }
    dend_1 { pt3dadd( -0.758569, -17.0555, 5.58732, 1.11 ) }
    dend_1 { pt3dadd( -0.785222, -19.4071, 6.43034, 0.83 ) }
    dend_1 { pt3dadd( -0.82063, -22.5313, 7.55035, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 1.04995, 10.9501, -1.45304, 1.11 ) }
    dend_0 { pt3dadd( 1.28986, 13.9041, -1.4427, 1.11 ) }
    dend_0 { pt3dadd( 1.69302, 18.7231, -1.24933, 1.38 ) }
    dend_0 { pt3dadd( 1.72076, 18.9913, -1.23442, 1.38 ) }
    dend_0 { pt3dadd( 2.26705, 22.3015, -1.04441, 0.83 ) }
    dend_0 { pt3dadd( 3.01206, 25.7949, -0.676906, 0.83 ) }
    dend_0 { pt3dadd( 4.25578, 29.7226, 0.167338, 0.83 ) }
    dend_0 { pt3dadd( 4.93787, 31.2038, 0.64549, 0.83 ) }
    dend_0 { pt3dadd( 5.59207, 32.2699, 1.08048, 1.11 ) }
    dend_0 { pt3dadd( 7.46148, 34.8559, 2.17601, 0.55 ) }
    dend_0 { pt3dadd( 9.6307, 37.5461, 3.49143, 0.83 ) }
    dend_0 { pt3dadd( 12.405, 40.2916, 4.93678, 0.55 ) }
    dend_0 { pt3dadd( 13.7958, 41.4226, 5.57141, 0.83 ) }
    dend_0 { pt3dadd( 15.7573, 42.9509, 6.59101, 0.55 ) }
    dend_0 { pt3dadd( 18.2107, 44.8962, 8.00122, 0.55 ) }
    dend_0 { pt3dadd( 21.6783, 47.8326, 10.1979, 0.55 ) }
    dend_0 { pt3dadd( 25.5049, 51.1943, 12.6246, 0.55 ) }
    dend_0 { pt3dadd( 27.9701, 53.3762, 14.4948, 0.55 ) }
    dend_0 { pt3dadd( 31.0535, 56.1356, 17.1929, 0.55 ) }
    dend_0 { pt3dadd( 31.702, 56.6877, 17.8123, 0.83 ) }
    dend_0 { pt3dadd( 33.4327, 58.1457, 19.5737, 0.55 ) }
    dend_0 { pt3dadd( 34.8698, 59.2788, 20.9446, 0.83 ) }
    dend_0 { pt3dadd( 38.2126, 62.3985, 24.2084, 0.55 ) }
    dend_0 { pt3dadd( 39.4254, 63.5387, 25.1277, 0.83 ) }
    dend_0 { pt3dadd( 40.5121, 64.3717, 25.7118, 0.55 ) }
    dend_0 { pt3dadd( 41.5624, 65.0844, 26.1277, 0.83 ) }
    dend_0 { pt3dadd( 43.8489, 66.3967, 26.8235, 0.83 ) }
    dend_0 { pt3dadd( 46.8382, 68.1886, 27.4934, 0.83 ) }
    dend_0 { pt3dadd( 48.6482, 69.3802, 27.7181, 0.55 ) }
    dend_0 { pt3dadd( 50.0343, 70.4184, 27.8971, 0.55 ) }
    dend_0 { pt3dadd( 53.6584, 73.0993, 28.3144, 0.83 ) }
    dend_0 { pt3dadd( 55.9855, 74.8185, 28.4943, 0.55 ) }
    dend_0 { pt3dadd( 59.4944, 77.3334, 28.6299, 0.55 ) }
    dend_0 { pt3dadd( 62.6833, 79.4324, 28.6301, 0.55 ) }
    dend_0 { pt3dadd( 65.5206, 81.2054, 28.5558, 0.55 ) }
    dend_0 { pt3dadd( 69.0759, 83.2738, 28.3033, 0.55 ) }
    dend_0 { pt3dadd( 71.2284, 84.2714, 28.0793, 0.55 ) }
    dend_0 { pt3dadd( 72.666, 84.8236, 27.753, 0.55 ) }
    dend_0 { pt3dadd( 74.5379, 85.2057, 27.1571, 0.55 ) }
    dend_0 { pt3dadd( 77.2784, 85.3096, 26.0329, 0.55 ) }
    dend_0 { pt3dadd( 78.9682, 85.1473, 25.2627, 0.55 ) }
    dend_0 { pt3dadd( 81.4628, 84.8377, 24.3192, 0.55 ) }
    dend_0 { pt3dadd( 86.2883, 84.4032, 22.964, 0.55 ) }
    dend_0 { pt3dadd( 90.1237, 84.2411, 22.1773, 0.55 ) }
    dend_0 { pt3dadd( 94.2338, 84.2648, 21.5893, 0.55 ) }
    dend_0 { pt3dadd( 96.9045, 84.3694, 21.4207, 0.55 ) }
    dend_0 { pt3dadd( 103.936, 85.2636, 21.435, 0.55 ) }
    dend_0 { pt3dadd( 108.154, 86.1052, 21.7495, 0.55 ) }
    dend_0 { pt3dadd( 111.368, 86.9353, 22.2706, 0.55 ) }
    dend_0 { pt3dadd( 113.344, 87.7489, 22.66, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 115.643, 88.9841, 23.1017, 0.55 ) }
    dend_0 { pt3dadd( 119.498, 91.4468, 23.5264, 0.55 ) }
    dend_0 { pt3dadd( 120.366, 92.0424, 23.5087, 0.55 ) }
    dend_0 { pt3dadd( 122.827, 93.6299, 23.3001, 0.55 ) }
    dend_0 { pt3dadd( 125.096, 95.3345, 23.1008, 0.83 ) }
    dend_0 { pt3dadd( 126.332, 96.281, 22.973, 0.55 ) }
    dend_0 { pt3dadd( 128.18, 97.9162, 22.7112, 0.83 ) }
    dend_0 { pt3dadd( 138.298, 106.635, 23.8225, 0.83 ) }
    dend_0 { pt3dadd( 147.09, 116.745, 24.1458, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -35.0879, 31.4498, 6.44371, 0.55 ) }
    dend_55 { pt3dadd( -37.572, 32.705, 5.2152, 0.55 ) }
    dend_55 { pt3dadd( -40.2733, 34.0699, 3.87933, 0.55 ) }
    dend_55 { pt3dadd( -43.5332, 35.7171, 2.26721, 0.55 ) }
    dend_55 { pt3dadd( -46.225, 37.0773, 0.936045, 0.83 ) }
    dend_55 { pt3dadd( -48.4807, 38.2171, -0.179471, 0.55 ) }
    dend_55 { pt3dadd( -52.6676, 40.3327, -2.25003, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -35.0879, 31.4498, 6.44371, 0.55 ) }
    dend_44 { pt3dadd( -37.872, 31.9541, 6.14131, 0.55 ) }
    dend_44 { pt3dadd( -40.8306, 32.3997, 6.11518, 0.55 ) }
    dend_44 { pt3dadd( -44.1845, 32.8998, 6.16757, 0.55 ) }
    dend_44 { pt3dadd( -49.0362, 33.5736, 6.69075, 0.55 ) }
    dend_44 { pt3dadd( -53.0921, 34.0204, 7.41922, 0.55 ) }
    dend_44 { pt3dadd( -57.3436, 34.4241, 8.36655, 0.55 ) }
    dend_44 { pt3dadd( -61.4466, 34.5365, 9.73059, 0.55 ) }
    dend_44 { pt3dadd( -64.9729, 34.2882, 11.2528, 0.55 ) }
    dend_44 { pt3dadd( -69.3599, 33.67, 13.6291, 0.55 ) }
    dend_44 { pt3dadd( -71.2634, 33.2608, 14.9335, 0.55 ) }
    dend_44 { pt3dadd( -73.3183, 32.7968, 16.433, 0.55 ) }
    dend_44 { pt3dadd( -76.9441, 31.6985, 18.912, 0.55 ) }
    dend_44 { pt3dadd( -78.8776, 31.1186, 19.9216, 0.55 ) }
    dend_44 { pt3dadd( -80.9028, 30.4481, 20.9674, 0.55 ) }
    dend_44 { pt3dadd( -83.3144, 29.6805, 21.9626, 0.55 ) }
    dend_44 { pt3dadd( -85.9364, 28.9012, 22.9709, 0.55 ) }
    dend_44 { pt3dadd( -89.6795, 27.7793, 24.3273, 0.55 ) }
    dend_44 { pt3dadd( -94.686, 26.6167, 25.6815, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 25.1138, 6.05816, -18.3657, 0.55 ) }
    dend_34 { pt3dadd( 29.0618, 7.03399, -19.2022, 0.55 ) }
    dend_34 { pt3dadd( 31.3319, 7.47957, -20.0112, 0.55 ) }
    dend_34 { pt3dadd( 33.57, 7.82024, -20.8476, 0.55 ) }
    dend_34 { pt3dadd( 35.0978, 7.99173, -21.422, 0.55 ) }
    dend_34 { pt3dadd( 37.3297, 8.18946, -22.2469, 0.55 ) }
    dend_34 { pt3dadd( 41.9566, 8.51731, -24.1084, 0.55 ) }
    dend_34 { pt3dadd( 47.2021, 8.87419, -26.5736, 0.55 ) }
    dend_34 { pt3dadd( 49.7408, 8.89664, -27.9548, 0.55 ) }
    dend_34 { pt3dadd( 51.099, 8.87962, -28.7864, 0.55 ) }
    dend_34 { pt3dadd( 52.588, 8.87144, -29.7588, 0.55 ) }
    dend_34 { pt3dadd( 55.2434, 8.78137, -31.4876, 0.55 ) }
    dend_34 { pt3dadd( 56.2062, 8.69311, -32.151, 0.55 ) }
    dend_34 { pt3dadd( 60.282, 8.43916, -35.2724, 0.55 ) }
    dend_34 { pt3dadd( 63.1664, 8.3175, -37.6957, 0.55 ) }
    dend_34 { pt3dadd( 64.8274, 8.2826, -39.1353, 0.55 ) }
    dend_34 { pt3dadd( 66.4837, 8.23292, -40.5707, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 25.1138, 6.05816, -18.3657, 0.83 ) }
    dend_29 { pt3dadd( 26.7141, 7.31558, -18.5138, 0.83 ) }
    dend_29 { pt3dadd( 27.6312, 8.02642, -18.6434, 0.55 ) }
    dend_29 { pt3dadd( 28.9834, 9.08533, -18.9628, 0.83 ) }
    dend_29 { pt3dadd( 29.8911, 9.81755, -19.2112, 0.55 ) }
    dend_29 { pt3dadd( 31.1376, 10.8663, -19.5396, 0.83 ) }
    dend_29 { pt3dadd( 32.6298, 12.1681, -19.8798, 0.55 ) }
    dend_29 { pt3dadd( 33.3861, 12.7686, -20.0076, 0.55 ) }
    dend_29 { pt3dadd( 35.1503, 13.9178, -20.1284, 0.83 ) }
    dend_29 { pt3dadd( 36.7653, 14.7919, -19.9835, 0.55 ) }
    dend_29 { pt3dadd( 37.6647, 15.2849, -19.8097, 0.83 ) }
    dend_29 { pt3dadd( 39.0029, 16.0792, -19.4035, 0.55 ) }
    dend_29 { pt3dadd( 40.9074, 17.2977, -18.563, 0.55 ) }
    dend_29 { pt3dadd( 43.5623, 18.8666, -17.2257, 0.55 ) }
    dend_29 { pt3dadd( 46.096, 20.295, -15.7465, 0.55 ) }
    dend_29 { pt3dadd( 48.104, 21.4099, -14.5322, 0.55 ) }
    dend_29 { pt3dadd( 51.4115, 23.2673, -12.5142, 0.55 ) }
    dend_29 { pt3dadd( 53.8195, 24.7094, -10.9925, 0.55 ) }
    dend_29 { pt3dadd( 55.2545, 25.7196, -10.0371, 0.55 ) }
    dend_29 { pt3dadd( 57.8601, 27.8784, -8.29805, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.82063, -22.5313, 7.55035, 0.83 ) }
    dend_11 { pt3dadd( -1.05222, -25.7296, 7.41735, 0.83 ) }
    dend_11 { pt3dadd( -1.27786, -28.8456, 7.28776, 0.83 ) }
    dend_11 { pt3dadd( -1.52978, -32.3247, 7.14308, 0.83 ) }
    dend_11 { pt3dadd( -1.66134, -34.1414, 7.06753, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.82063, -22.5313, 7.55035, 0.55 ) }
    dend_2 { pt3dadd( -0.156247, -24.3852, 8.85587, 0.55 ) }
    dend_2 { pt3dadd( 0.427606, -26.657, 10.5504, 0.55 ) }
    dend_2 { pt3dadd( 0.733419, -29.6379, 12.8838, 0.55 ) }
    dend_2 { pt3dadd( 0.770168, -30.7972, 13.8211, 0.83 ) }
    dend_2 { pt3dadd( 0.585867, -33.7577, 16.5487, 0.55 ) }
    dend_2 { pt3dadd( 0.364223, -35.2875, 17.9846, 0.55 ) }
    dend_2 { pt3dadd( -0.132052, -38.2628, 20.9029, 0.83 ) }
    dend_2 { pt3dadd( -0.630819, -40.473, 23.209, 0.55 ) }
    dend_2 { pt3dadd( -1.20464, -42.2974, 25.0805, 0.55 ) }
    dend_2 { pt3dadd( -2.36857, -45.7534, 28.561, 0.55 ) }
    dend_2 { pt3dadd( -3.29293, -48.5079, 31.3026, 0.55 ) }
    dend_2 { pt3dadd( -3.98944, -50.7157, 33.5322, 0.55 ) }
    dend_2 { pt3dadd( -4.59811, -53.0589, 35.8271, 0.28 ) }
    dend_2 { pt3dadd( -4.76864, -54.0343, 36.7466, 0.55 ) }
    dend_2 { pt3dadd( -5.03497, -55.8356, 38.3428, 0.28 ) }
    dend_2 { pt3dadd( -5.05942, -58.6449, 40.4015, 0.55 ) }
    dend_2 { pt3dadd( -7.41212, -68.008, 47.7253, 0.55 ) }
    dend_2 { pt3dadd( -10.0243, -76.6618, 55.7955, 0.55 ) }
    dend_2 { pt3dadd( -12.1278, -83.7723, 65.3797, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -52.6676, 40.3327, -2.25003, 0.55 ) }
    dend_61 { pt3dadd( -56.1211, 40.3056, -0.872886, 0.55 ) }
    dend_61 { pt3dadd( -57.5895, 40.1898, -0.139334, 0.83 ) }
    dend_61 { pt3dadd( -59.3267, 39.9366, 0.915625, 0.55 ) }
    dend_61 { pt3dadd( -60.6678, 39.7222, 1.83316, 0.83 ) }
    dend_61 { pt3dadd( -64.1827, 39.2791, 4.22951, 0.55 ) }
    dend_61 { pt3dadd( -65.5153, 39.1298, 5.14998, 0.28 ) }
    dend_61 { pt3dadd( -67.7559, 38.8721, 6.85892, 0.55 ) }
    dend_61 { pt3dadd( -70.7615, 38.5446, 9.14212, 0.55 ) }
    dend_61 { pt3dadd( -73.0337, 38.3137, 10.7815, 0.55 ) }
    dend_61 { pt3dadd( -76.0598, 38.0208, 12.8836, 0.28 ) }
    dend_61 { pt3dadd( -76.8373, 37.9658, 13.3446, 0.55 ) }
    dend_61 { pt3dadd( -78.4411, 37.8796, 14.2461, 0.28 ) }
    dend_61 { pt3dadd( -79.5211, 37.8644, 14.7688, 0.55 ) }
    dend_61 { pt3dadd( -81.7069, 37.8514, 15.6556, 0.28 ) }
    dend_61 { pt3dadd( -82.9813, 37.7888, 16.1018, 0.55 ) }
    dend_61 { pt3dadd( -85.2267, 37.5199, 16.8789, 0.28 ) }
    dend_61 { pt3dadd( -86.7293, 37.3391, 17.3491, 0.55 ) }
    dend_61 { pt3dadd( -96.2661, 34.84, 23.9489, 0.55 ) }
    dend_61 { pt3dadd( -105.073, 31.1485, 30.989, 0.55 ) }
    dend_61 { pt3dadd( -113.529, 26.3778, 37.8072, 0.55 ) }
    dend_61 { pt3dadd( -121.829, 20.3865, 43.8034, 0.55 ) }
    dend_61 { pt3dadd( -128.999, 14.6393, 51.3082, 0.55 ) }
    dend_61 { pt3dadd( -136.994, 9.39367, 58.3309, 0.55 ) }
    dend_61 { pt3dadd( -145.24, 5.94723, 66.1334, 0.55 ) }
    dend_61 { pt3dadd( -153.397, 1.61997, 73.5823, 0.55 ) }
    dend_61 { pt3dadd( -161.404, -2.00348, 81.552, 0.55 ) }
    dend_61 { pt3dadd( -168.907, -5.85577, 89.8957, 0.55 ) }
    dend_61 { pt3dadd( -175.26, -11.0672, 98.4532, 0.55 ) }
    dend_61 { pt3dadd( -181.784, -15.2533, 107.434, 0.55 ) }
    dend_61 { pt3dadd( -188.374, -20.5145, 115.779, 0.55 ) }
    dend_61 { pt3dadd( -193.647, -26.3454, 124.665, 0.55 ) }
    dend_61 { pt3dadd( -197.096, -31.539, 134.758, 0.55 ) }
    dend_61 { pt3dadd( -200.308, -38.6914, 143.662, 0.55 ) }
    dend_61 { pt3dadd( -201.849, -46.0671, 152.826, 0.55 ) }
    dend_61 { pt3dadd( -204.052, -53.0035, 162.195, 0.55 ) }
    dend_61 { pt3dadd( -207.552, -59.1451, 171.723, 0.55 ) }
    dend_61 { pt3dadd( -213.501, -63.4458, 181.044, 0.55 ) }
    dend_61 { pt3dadd( -218.405, -69.0328, 190.29, 0.55 ) }
    dend_61 { pt3dadd( -221.303, -72.8797, 201.132, 0.55 ) }
    dend_61 { pt3dadd( -226.057, -75.8208, 211.596, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -52.6676, 40.3327, -2.25003, 0.55 ) }
    dend_56 { pt3dadd( -53.7771, 40.944, -3.71661, 0.55 ) }
    dend_56 { pt3dadd( -54.5997, 41.6264, -5.32282, 0.55 ) }
    dend_56 { pt3dadd( -55.3573, 42.457, -7.00808, 0.55 ) }
    dend_56 { pt3dadd( -55.8317, 42.9772, -8.06338, 0.55 ) }
    dend_56 { pt3dadd( -56.697, 43.9259, -9.98835, 0.83 ) }
    dend_56 { pt3dadd( -57.3301, 44.62, -11.3967, 0.55 ) }
    dend_56 { pt3dadd( -58.0251, 45.579, -13.4541, 0.83 ) }
    dend_56 { pt3dadd( -58.2557, 46.2176, -14.5927, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -94.686, 26.6167, 25.6815, 0.28 ) }
    dend_48 { pt3dadd( -95.931, 24.4415, 25.1349, 0.28 ) }
    dend_48 { pt3dadd( -96.5258, 23.5112, 24.8194, 0.28 ) }
    dend_48 { pt3dadd( -97.3012, 22.1977, 24.3242, 0.55 ) }
    dend_48 { pt3dadd( -97.9414, 21.0419, 23.8993, 0.28 ) }
    dend_48 { pt3dadd( -98.8865, 19.2798, 23.2749, 0.55 ) }
    dend_48 { pt3dadd( -101.518, 14.0944, 21.5272, 0.28 ) }
    dend_48 { pt3dadd( -102.38, 12.2831, 20.7669, 0.55 ) }
    dend_48 { pt3dadd( -103.687, 9.49839, 19.4997, 0.28 ) }
    dend_48 { pt3dadd( -104.439, 7.83645, 18.6652, 0.55 ) }
    dend_48 { pt3dadd( -104.959, 6.69261, 18.0617, 0.28 ) }
    dend_48 { pt3dadd( -105.552, 5.37917, 17.3801, 0.55 ) }
    dend_48 { pt3dadd( -107.348, 0.988252, 15.2172, 0.28 ) }
    dend_48 { pt3dadd( -107.912, -0.337285, 14.5147, 0.55 ) }
    dend_48 { pt3dadd( -108.898, -2.3518, 13.2243, 0.28 ) }
    dend_48 { pt3dadd( -109.706, -3.6338, 12.2801, 0.28 ) }
    dend_48 { pt3dadd( -110.427, -4.48609, 11.6139, 0.55 ) }
    dend_48 { pt3dadd( -112.931, -6.87512, 9.80742, 0.28 ) }
    dend_48 { pt3dadd( -114.092, -7.84132, 9.09536, 0.55 ) }
    dend_48 { pt3dadd( -116.932, -10.0315, 7.32643, 0.28 ) }
    dend_48 { pt3dadd( -119.771, -11.9628, 5.70538, 0.28 ) }
    dend_48 { pt3dadd( -122.855, -13.7947, 4.05139, 0.28 ) }
    dend_48 { pt3dadd( -124.266, -14.4809, 3.41664, 0.55 ) }
    dend_48 { pt3dadd( -131.108, -22.3532, -1.1066, 0.55 ) }
    dend_48 { pt3dadd( -138.695, -30.4562, -3.56057, 0.55 ) }
    dend_48 { pt3dadd( -146.135, -38.0191, -7.64554, 0.55 ) }
    dend_48 { pt3dadd( -153.762, -44.8181, -12.6294, 0.55 ) }
    dend_48 { pt3dadd( -161.482, -50.7428, -18.5066, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -94.686, 26.6167, 25.6815, 0.55 ) }
    dend_45 { pt3dadd( -95.7442, 26.5207, 25.8705, 0.55 ) }
    dend_45 { pt3dadd( -98.7153, 26.2892, 26.7922, 0.55 ) }
    dend_45 { pt3dadd( -99.8292, 26.1787, 27.2014, 0.55 ) }
    dend_45 { pt3dadd( -102.445, 25.8424, 28.2116, 0.55 ) }
    dend_45 { pt3dadd( -106.476, 25.3485, 29.5642, 0.55 ) }
    dend_45 { pt3dadd( -108.574, 25.1537, 30.2236, 0.28 ) }
    dend_45 { pt3dadd( -111.839, 24.7727, 31.1915, 0.55 ) }
    dend_45 { pt3dadd( -114.266, 24.4313, 31.8269, 0.55 ) }
    dend_45 { pt3dadd( -115.29, 24.2805, 32.098, 0.28 ) }
    dend_45 { pt3dadd( -121.437, 23.3719, 33.7166, 0.55 ) }
    dend_45 { pt3dadd( -124.313, 22.7973, 34.3081, 0.28 ) }
    dend_45 { pt3dadd( -128.2, 21.9862, 34.878, 0.28 ) }
    dend_45 { pt3dadd( -131.559, 21.3182, 35.1673, 0.55 ) }
    dend_45 { pt3dadd( -144.606, 20.9013, 38.9775, 0.55 ) }
    dend_45 { pt3dadd( -157.143, 20.2825, 44.2056, 0.55 ) }
    dend_45 { pt3dadd( -168.869, 18.423, 50.8343, 0.55 ) }
    dend_45 { pt3dadd( -180.25, 18.9348, 58.2591, 0.55 ) }
    dend_45 { pt3dadd( -189.843, 19.233, 67.8915, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -197.424, 20.4705, 79.112, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 66.4837, 8.23292, -40.5707, 0.55 ) }
    dend_42 { pt3dadd( 70.062, 9.35302, -43.5364, 0.55 ) }
    dend_42 { pt3dadd( 71.1908, 9.65838, -44.5472, 0.55 ) }
    dend_42 { pt3dadd( 72.6031, 9.99272, -45.7963, 0.55 ) }
    dend_42 { pt3dadd( 75.1625, 10.5802, -48.2166, 0.55 ) }
    dend_42 { pt3dadd( 77.8306, 11.0821, -50.8128, 0.55 ) }
    dend_42 { pt3dadd( 79.1336, 11.2195, -52.0511, 0.83 ) }
    dend_42 { pt3dadd( 80.2032, 11.2584, -53.1552, 0.55 ) }
    dend_42 { pt3dadd( 81.0005, 11.2211, -54.0658, 0.83 ) }
    dend_42 { pt3dadd( 82.914, 10.8548, -56.4047, 0.55 ) }
    dend_42 { pt3dadd( 84.4865, 10.3995, -58.3457, 0.55 ) }
    dend_42 { pt3dadd( 86.2964, 9.86069, -60.4854, 0.55 ) }
    dend_42 { pt3dadd( 88.3121, 9.32247, -62.9091, 0.55 ) }
    dend_42 { pt3dadd( 89.6627, 8.92877, -64.5706, 0.55 ) }
    dend_42 { pt3dadd( 91.1855, 8.48086, -66.4959, 0.55 ) }
    dend_42 { pt3dadd( 92.5008, 8.14506, -68.2547, 0.55 ) }
    dend_42 { pt3dadd( 93.3277, 8.0162, -69.4743, 0.55 ) }
    dend_42 { pt3dadd( 94.3585, 7.81741, -71.9179, 0.55 ) }
    dend_42 { pt3dadd( 94.9154, 7.64794, -73.4458, 0.55 ) }
    dend_42 { pt3dadd( 95.3784, 7.34164, -75.4729, 0.55 ) }
    dend_42 { pt3dadd( 95.997, 6.72499, -78.8986, 0.55 ) }
    dend_42 { pt3dadd( 96.1211, 6.55742, -79.6713, 0.28 ) }
    dend_42 { pt3dadd( 97.7362, 4.41355, -89.0687, 0.28 ) }
    dend_42 { pt3dadd( 98.2921, 3.80124, -91.8282, 0.83 ) }
    dend_42 { pt3dadd( 100.504, 1.45063, -101.622, 0.83 ) }
    dend_42 { pt3dadd( 101.647, 0.175492, -106.175, 0.83 ) }
    dend_42 { pt3dadd( 102.204, -0.417555, -108.021, 0.55 ) }
    dend_42 { pt3dadd( 102.851, -1.0061, -109.822, 0.55 ) }
    dend_42 { pt3dadd( 104.68, -2.19079, -113.169, 0.55 ) }
    dend_42 { pt3dadd( 106.655, -3.27111, -116.114, 0.28 ) }
    dend_42 { pt3dadd( 107.267, -3.48659, -116.295, 0.55 ) }
    dend_42 { pt3dadd( 108.626, -3.87447, -116.2, 0.28 ) }
    dend_42 { pt3dadd( 109.469, -4.05646, -116.017, 0.55 ) }
    dend_42 { pt3dadd( 110.35, -4.25955, -115.751, 0.28 ) }
    dend_42 { pt3dadd( 111.409, -4.45109, -115.382, 0.55 ) }
    dend_42 { pt3dadd( 112.993, -4.64997, -114.998, 0.28 ) }
    dend_42 { pt3dadd( 114.262, -4.84811, -114.732, 0.55 ) }
    dend_42 { pt3dadd( 115.668, -4.97115, -114.548, 0.28 ) }
    dend_42 { pt3dadd( 117.577, -5.12846, -114.469, 0.55 ) }
    dend_42 { pt3dadd( 119.717, -5.2523, -114.508, 0.55 ) }
    dend_42 { pt3dadd( 121.597, -5.33614, -114.668, 0.28 ) }
    dend_42 { pt3dadd( 124.198, -5.42519, -115.033, 0.55 ) }
    dend_42 { pt3dadd( 128.689, -5.444, -116.144, 0.55 ) }
    dend_42 { pt3dadd( 130.672, -5.34351, -116.875, 0.55 ) }
    dend_42 { pt3dadd( 131.524, -5.26258, -117.281, 0.83 ) }
    dend_42 { pt3dadd( 133.144, -5.09366, -118.203, 0.55 ) }
    dend_42 { pt3dadd( 134.269, -4.92871, -118.914, 0.83 ) }
    dend_42 { pt3dadd( 137.295, -4.40333, -120.86, 0.55 ) }
    dend_42 { pt3dadd( 139.139, -4.21079, -122.099, 0.28 ) }
    dend_42 { pt3dadd( 139.916, -4.18066, -122.534, 0.55 ) }
    dend_42 { pt3dadd( 142.043, -4.30308, -123.487, 0.28 ) }
    dend_42 { pt3dadd( 142.788, -4.41656, -123.773, 0.55 ) }
    dend_42 { pt3dadd( 144.323, -4.75292, -124.123, 0.28 ) }
    dend_42 { pt3dadd( 145.886, -5.25472, -124.209, 0.55 ) }
    dend_42 { pt3dadd( 149.05, -6.45125, -123.823, 0.28 ) }
    dend_42 { pt3dadd( 150.509, -7.07113, -123.49, 0.55 ) }
    dend_42 { pt3dadd( 152.678, -8.12131, -122.879, 0.28 ) }
    dend_42 { pt3dadd( 155.42, -9.43914, -122.008, 0.55 ) }
    dend_42 { pt3dadd( 157.405, -10.3653, -121.345, 0.55 ) }
    dend_42 { pt3dadd( 160.846, -11.8618, -120.139, 0.28 ) }
    dend_42 { pt3dadd( 162.257, -12.4078, -119.76, 0.55 ) }
    dend_42 { pt3dadd( 164.69, -13.2035, -119.373, 0.28 ) }
    dend_42 { pt3dadd( 167.116, -13.8056, -119.155, 0.55 ) }
    dend_42 { pt3dadd( 168.447, -13.9802, -119.219, 0.28 ) }
    dend_42 { pt3dadd( 169.652, -13.9729, -119.37, 0.55 ) }
    dend_42 { pt3dadd( 173.054, -13.7417, -120.113, 0.28 ) }
    dend_42 { pt3dadd( 175.486, -13.4064, -120.68, 0.28 ) }
    dend_42 { pt3dadd( 177.604, -12.9592, -121.202, 0.55 ) }
    dend_42 { pt3dadd( 179.941, -12.3975, -121.896, 0.28 ) }
    dend_42 { pt3dadd( 180.531, -12.2192, -122.05, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 66.4837, 8.23292, -40.5707, 0.55 ) }
    dend_35 { pt3dadd( 66.8794, 6.4115, -42.2756, 0.55 ) }
    dend_35 { pt3dadd( 67.0614, 4.85347, -43.5936, 0.28 ) }
    dend_35 { pt3dadd( 67.2283, 3.40053, -44.6671, 0.55 ) }
    dend_35 { pt3dadd( 67.7544, 0.319273, -46.9793, 0.28 ) }
    dend_35 { pt3dadd( 67.7814, 0.131261, -47.1541, 0.55 ) }
    dend_35 { pt3dadd( 67.9518, -0.83767, -48.1611, 0.28 ) }
    dend_35 { pt3dadd( 68.0065, -1.60783, -49.1354, 0.55 ) }
    dend_35 { pt3dadd( 68.0075, -2.38857, -50.259, 0.28 ) }
    dend_35 { pt3dadd( 67.9696, -3.44027, -51.8505, 0.55 ) }
    dend_35 { pt3dadd( 67.8731, -6.09288, -55.785, 0.55 ) }
    dend_35 { pt3dadd( 67.75, -8.49891, -59.4228, 0.55 ) }
    dend_35 { pt3dadd( 67.6279, -10.4203, -62.3329, 0.55 ) }
    dend_35 { pt3dadd( 67.4651, -12.3151, -65.1508, 0.55 ) }
    dend_35 { pt3dadd( 67.4214, -12.8095, -65.8531, 0.28 ) }
    dend_35 { pt3dadd( 67.3941, -13.3487, -66.5504, 0.55 ) }
    dend_35 { pt3dadd( 67.4414, -14.1153, -67.4365, 0.28 ) }
    dend_35 { pt3dadd( 67.692, -15.5252, -68.884, 0.55 ) }
    dend_35 { pt3dadd( 68.4414, -18.3299, -71.1821, 0.55 ) }
    dend_35 { pt3dadd( 68.8609, -19.867, -72.272, 0.28 ) }
    dend_35 { pt3dadd( 69.189, -21.411, -73.4494, 0.55 ) }
    dend_35 { pt3dadd( 69.4754, -23.5486, -75.1807, 0.28 ) }
    dend_35 { pt3dadd( 69.5846, -25.2596, -76.6181, 0.55 ) }
    dend_35 { pt3dadd( 69.6269, -27.8111, -78.769, 0.28 ) }
    dend_35 { pt3dadd( 69.6933, -30.4693, -80.9056, 0.55 ) }
    dend_35 { pt3dadd( 69.7328, -34.319, -84.043, 0.28 ) }
    dend_35 { pt3dadd( 69.7042, -36.3674, -85.7211, 0.55 ) }
    dend_35 { pt3dadd( 69.6367, -38.4505, -87.4908, 0.28 ) }
    dend_35 { pt3dadd( 69.554, -40.2598, -89.1737, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 69.5352, -42.4863, -91.4993, 0.55 ) }
    dend_35 { pt3dadd( 69.6824, -44.5694, -93.6017, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 57.8601, 27.8784, -8.29805, 0.55 ) }
    dend_31 { pt3dadd( 61.4022, 28.1481, -7.124, 0.55 ) }
    dend_31 { pt3dadd( 64.0221, 28.1754, -6.47942, 0.55 ) }
    dend_31 { pt3dadd( 69.7974, 28.0846, -5.33883, 0.55 ) }
    dend_31 { pt3dadd( 72.4252, 27.9256, -5.0325, 0.55 ) }
    dend_31 { pt3dadd( 75.3027, 27.7688, -4.85451, 0.55 ) }
    dend_31 { pt3dadd( 79.189, 27.5453, -4.89447, 0.55 ) }
    dend_31 { pt3dadd( 83.3402, 27.0977, -5.2715, 0.55 ) }
    dend_31 { pt3dadd( 85.5476, 26.7672, -5.69279, 0.55 ) }
    dend_31 { pt3dadd( 90.0962, 25.9262, -7.11125, 0.55 ) }
    dend_31 { pt3dadd( 92.1962, 25.5366, -7.82976, 0.55 ) }
    dend_31 { pt3dadd( 97.138, 24.5037, -9.60263, 0.55 ) }
    dend_31 { pt3dadd( 100.495, 23.6896, -10.7413, 0.55 ) }
    dend_31 { pt3dadd( 102.955, 23.1068, -11.4737, 0.83 ) }
    dend_31 { pt3dadd( 106.895, 22.0548, -12.563, 0.55 ) }
    dend_31 { pt3dadd( 110.756, 20.8941, -13.4425, 0.83 ) }
    dend_31 { pt3dadd( 114.034, 19.8042, -14.0414, 0.55 ) }
    dend_31 { pt3dadd( 116.932, 18.9141, -14.4481, 0.55 ) }
    dend_31 { pt3dadd( 118.565, 18.4985, -14.6166, 0.83 ) }
    dend_31 { pt3dadd( 122.356, 17.5942, -14.8287, 0.28 ) }
    dend_31 { pt3dadd( 124.222, 17.2499, -14.8456, 0.28 ) }
    dend_31 { pt3dadd( 126.048, 16.7833, -14.9166, 0.28 ) }
    dend_31 { pt3dadd( 128.017, 16.3255, -15.0162, 0.28 ) }
    dend_31 { pt3dadd( 131.17, 15.6298, -15.2525, 0.28 ) }
    dend_31 { pt3dadd( 132.434, 15.3749, -15.3171, 0.55 ) }
    dend_31 { pt3dadd( 135.423, 14.8758, -15.2059, 0.55 ) }
    dend_31 { pt3dadd( 140.782, 14.0046, -14.7367, 0.55 ) }
    dend_31 { pt3dadd( 142.262, 13.7448, -14.5343, 0.55 ) }
    dend_31 { pt3dadd( 143.582, 13.4878, -14.2877, 0.83 ) }
    dend_31 { pt3dadd( 146.418, 13.0789, -13.5586, 0.55 ) }
    dend_31 { pt3dadd( 148.878, 12.7393, -12.8886, 0.55 ) }
    dend_31 { pt3dadd( 151.201, 12.431, -12.2479, 0.55 ) }
    dend_31 { pt3dadd( 153.008, 12.1474, -11.7915, 0.55 ) }
    dend_31 { pt3dadd( 155.906, 11.4662, -11.144, 0.55 ) }
    dend_31 { pt3dadd( 159.367, 10.3243, -10.4741, 0.55 ) }
    dend_31 { pt3dadd( 164.834, 7.87658, -9.61556, 0.55 ) }
    dend_31 { pt3dadd( 167.89, 6.07172, -9.19813, 0.55 ) }
    dend_31 { pt3dadd( 170.589, 4.05925, -8.83453, 0.28 ) }
    dend_31 { pt3dadd( 171.413, 3.28844, -8.72084, 0.55 ) }
    dend_31 { pt3dadd( 173.284, 1.07766, -8.40947, 0.28 ) }
    dend_31 { pt3dadd( 174.952, -1.44365, -8.03672, 0.55 ) }
    dend_31 { pt3dadd( 176.579, -4.57213, -7.34807, 0.55 ) }
    dend_31 { pt3dadd( 177.662, -6.59536, -6.79477, 0.28 ) }
    dend_31 { pt3dadd( 178.052, -7.29777, -6.56264, 0.55 ) }
    dend_31 { pt3dadd( 179.053, -9.03015, -5.95847, 0.28 ) }
    dend_31 { pt3dadd( 180.405, -11.2592, -5.11149, 0.55 ) }
    dend_31 { pt3dadd( 183.873, -16.556, -2.9131, 0.55 ) }
    dend_31 { pt3dadd( 185.666, -19.1999, -1.74121, 0.55 ) }
    dend_31 { pt3dadd( 187.327, -21.6131, -0.642287, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 57.8601, 27.8784, -8.29805, 0.55 ) }
    dend_30 { pt3dadd( 60.1356, 28.4835, -6.55311, 0.55 ) }
    dend_30 { pt3dadd( 60.866, 28.6743, -6.0345, 0.55 ) }
    dend_30 { pt3dadd( 63.6052, 29.2512, -4.2221, 0.55 ) }
    dend_30 { pt3dadd( 66.6553, 29.9564, -2.15273, 0.55 ) }
    dend_30 { pt3dadd( 70.5649, 30.8527, 0.605426, 0.55 ) }
    dend_30 { pt3dadd( 71.6447, 31.1015, 1.3599, 0.55 ) }
    dend_30 { pt3dadd( 73.5918, 31.4723, 2.69407, 0.55 ) }
    dend_30 { pt3dadd( 75.7205, 31.9273, 4.07481, 0.55 ) }
    dend_30 { pt3dadd( 78.187, 32.5249, 5.56698, 0.55 ) }
    dend_30 { pt3dadd( 80.5069, 33.1214, 6.98163, 0.55 ) }
    dend_30 { pt3dadd( 81.7724, 33.5067, 7.69743, 0.55 ) }
    dend_30 { pt3dadd( 83.2524, 34.0027, 8.53529, 0.55 ) }
    dend_30 { pt3dadd( 85.0763, 34.6701, 9.53786, 0.83 ) }
    dend_30 { pt3dadd( 88.0664, 35.7532, 10.8564, 0.55 ) }
    dend_30 { pt3dadd( 90.0572, 36.3892, 11.6309, 0.83 ) }
    dend_30 { pt3dadd( 92.8387, 37.1419, 12.6083, 0.55 ) }
    dend_30 { pt3dadd( 93.699, 37.3258, 12.8957, 0.55 ) }
    dend_30 { pt3dadd( 96.3861, 37.7625, 13.7308, 0.55 ) }
    dend_30 { pt3dadd( 101.233, 38.252, 15.0304, 0.55 ) }
    dend_30 { pt3dadd( 104.808, 38.4142, 15.9003, 0.55 ) }
    dend_30 { pt3dadd( 107.654, 38.4139, 16.6545, 0.55 ) }
    dend_30 { pt3dadd( 110.576, 38.2652, 17.521, 0.55 ) }
    dend_30 { pt3dadd( 111.192, 38.2179, 17.7063, 0.28 ) }
    dend_30 { pt3dadd( 112.449, 38.0734, 18.0789, 0.83 ) }
    dend_30 { pt3dadd( 117.617, 37.4077, 19.638, 0.55 ) }
    dend_30 { pt3dadd( 121.233, 36.9455, 20.6604, 0.55 ) }
    dend_30 { pt3dadd( 124.191, 36.6392, 21.5725, 0.55 ) }
    dend_30 { pt3dadd( 125.958, 36.4511, 22.1341, 0.83 ) }
    dend_30 { pt3dadd( 127.348, 36.3226, 22.5787, 0.28 ) }
    dend_30 { pt3dadd( 128.607, 36.208, 22.9704, 0.55 ) }
    dend_30 { pt3dadd( 138.121, 37.6446, 27.4188, 0.55 ) }
    dend_30 { pt3dadd( 148.4, 37.5412, 30.0076, 0.55 ) }
    dend_30 { pt3dadd( 158.472, 38.707, 33.0977, 0.55 ) }
    dend_30 { pt3dadd( 167.661, 38.2836, 38.3653, 0.55 ) }
    dend_30 { pt3dadd( 176.397, 36.3844, 44.0615, 0.55 ) }
    dend_30 { pt3dadd( 186.084, 33.0709, 46.8053, 0.55 ) }
    dend_30 { pt3dadd( 195.725, 28.77, 47.7613, 0.55 ) }
    dend_30 { pt3dadd( 206.054, 26.4119, 48.1076, 0.55 ) }
    dend_30 { pt3dadd( 216.295, 23.8847, 49.1567, 0.55 ) }
    dend_30 { pt3dadd( 226.801, 22.5329, 49.5483, 0.55 ) }
    dend_30 { pt3dadd( 237.216, 21.6388, 51.3049, 0.55 ) }
    dend_30 { pt3dadd( 247.2, 18.9039, 53.5858, 0.55 ) }
    dend_30 { pt3dadd( 257.222, 18.0343, 56.9284, 0.55 ) }
    dend_30 { pt3dadd( 266.639, 18.6562, 61.7547, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.66134, -34.1414, 7.06753, 1.38 ) }
    dend_13 { pt3dadd( 0.195595, -36.1005, 6.53529, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.66134, -34.1414, 7.06753, 0.55 ) }
    dend_12 { pt3dadd( -2.73452, -35.4288, 7.11753, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -3.92213, -37.0812, 7.1726, 0.55 ) }
    dend_12 { pt3dadd( -4.84558, -38.1737, 7.22673, 0.55 ) }
    dend_12 { pt3dadd( -5.62705, -39.0866, 7.14825, 0.55 ) }
    dend_12 { pt3dadd( -7.33595, -40.9758, 6.81366, 0.55 ) }
    dend_12 { pt3dadd( -8.5351, -42.2367, 6.54554, 0.55 ) }
    dend_12 { pt3dadd( -9.60242, -43.3672, 6.26621, 0.55 ) }
    dend_12 { pt3dadd( -12.3439, -46.1171, 5.55187, 0.55 ) }
    dend_12 { pt3dadd( -15.6367, -49.2998, 4.7206, 0.55 ) }
    dend_12 { pt3dadd( -18.1878, -51.7095, 4.03229, 0.55 ) }
    dend_12 { pt3dadd( -19.8168, -53.2923, 3.56893, 0.55 ) }
    dend_12 { pt3dadd( -21.6859, -55.1924, 3.04263, 0.55 ) }
    dend_12 { pt3dadd( -24.0576, -57.9214, 2.405, 0.55 ) }
    dend_12 { pt3dadd( -25.4459, -59.8612, 2.05997, 0.55 ) }
    dend_12 { pt3dadd( -27.1562, -62.6555, 1.78422, 0.55 ) }
    dend_12 { pt3dadd( -28.5204, -65.277, 1.61706, 0.55 ) }
    dend_12 { pt3dadd( -29.9018, -68.5525, 1.46902, 0.55 ) }
    dend_12 { pt3dadd( -31.2068, -72.4022, 1.38223, 0.55 ) }
    dend_12 { pt3dadd( -31.9133, -75.3484, 1.38003, 0.55 ) }
    dend_12 { pt3dadd( -32.1627, -76.816, 1.4726, 0.55 ) }
    dend_12 { pt3dadd( -32.5371, -80.2672, 1.87341, 0.55 ) }
    dend_12 { pt3dadd( -32.8277, -83.4972, 2.33153, 0.55 ) }
    dend_12 { pt3dadd( -32.9474, -86.7535, 3.02978, 0.55 ) }
    dend_12 { pt3dadd( -33.033, -88.6216, 3.5326, 0.55 ) }
    dend_12 { pt3dadd( -33.2574, -94.3985, 5.29835, 0.55 ) }
    dend_12 { pt3dadd( -33.2766, -94.8238, 5.43588, 0.55 ) }
    dend_12 { pt3dadd( -33.3433, -97.4294, 6.34075, 0.55 ) }
    dend_12 { pt3dadd( -33.677, -102.086, 8.07321, 0.55 ) }
    dend_12 { pt3dadd( -33.7999, -103.643, 8.56037, 0.55 ) }
    dend_12 { pt3dadd( -34.0625, -106.076, 8.90659, 0.55 ) }
    dend_12 { pt3dadd( -34.1418, -106.98, 8.82803, 0.55 ) }
    dend_12 { pt3dadd( -34.2893, -110.038, 7.98499, 0.55 ) }
    dend_12 { pt3dadd( -34.2847, -112.02, 7.01898, 0.55 ) }
    dend_12 { pt3dadd( -34.2071, -115.177, 4.8374, 0.55 ) }
    dend_12 { pt3dadd( -33.9632, -119.039, 1.86633, 0.28 ) }
    dend_12 { pt3dadd( -33.8912, -119.994, 1.00255, 0.55 ) }
    dend_12 { pt3dadd( -33.7804, -121.442, -0.434634, 0.28 ) }
    dend_12 { pt3dadd( -33.7659, -121.66, -0.662744, 0.55 ) }
    dend_12 { pt3dadd( -33.6921, -122.854, -1.80939, 0.28 ) }
    dend_12 { pt3dadd( -33.6924, -123.259, -2.1047, 0.55 ) }
    dend_12 { pt3dadd( -33.7317, -125.367, -3.23174, 0.28 ) }
    dend_12 { pt3dadd( -33.7726, -126.084, -3.6055, 0.55 ) }
    dend_12 { pt3dadd( -33.914, -128.157, -4.56781, 0.28 ) }
    dend_12 { pt3dadd( -33.9555, -128.81, -4.86842, 0.55 ) }
    dend_12 { pt3dadd( -34.1164, -131.062, -5.86856, 0.28 ) }
    dend_12 { pt3dadd( -34.185, -132.098, -6.33406, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -12.1278, -83.7723, 65.3797, 0.55 ) }
    dend_10 { pt3dadd( -15.3786, -89.9242, 70.8974, 0.55 ) }
    dend_10 { pt3dadd( -19.5631, -95.3653, 76.5314, 0.55 ) }
    dend_10 { pt3dadd( -23.4294, -101.371, 81.8078, 0.55 ) }
    dend_10 { pt3dadd( -27.4296, -107.42, 86.933, 0.55 ) }
    dend_10 { pt3dadd( -30.3808, -114.399, 91.5636, 0.55 ) }
    dend_10 { pt3dadd( -33.3116, -121.084, 96.6213, 0.55 ) }
    dend_10 { pt3dadd( -34.9769, -129.088, 100.088, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -12.1278, -83.7723, 65.3797, 0.55 ) }
    dend_3 { pt3dadd( -11.5475, -90.8757, 72.3502, 0.55 ) }
    dend_3 { pt3dadd( -10.4581, -99.0669, 77.927, 0.55 ) }
    dend_3 { pt3dadd( -10.9644, -107.387, 83.3952, 0.55 ) }
    dend_3 { pt3dadd( -11.9812, -116.209, 87.9252, 0.55 ) }
    dend_3 { pt3dadd( -12.6059, -124.978, 92.6256, 0.55 ) }
    dend_3 { pt3dadd( -13.1975, -133.387, 97.9482, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -58.2557, 46.2176, -14.5927, 0.83 ) }
    dend_60 { pt3dadd( -58.227, 46.9766, -16.1089, 0.83 ) }
    dend_60 { pt3dadd( -58.181, 48.8735, -19.5478, 0.55 ) }
    dend_60 { pt3dadd( -58.1381, 49.7182, -20.9366, 0.83 ) }
    dend_60 { pt3dadd( -58.0685, 50.6449, -22.3401, 0.55 ) }
    dend_60 { pt3dadd( -57.9568, 51.6484, -23.6063, 0.55 ) }
    dend_60 { pt3dadd( -57.8771, 52.1749, -24.1625, 0.28 ) }
    dend_60 { pt3dadd( -57.8271, 52.5557, -24.4207, 0.55 ) }
    dend_60 { pt3dadd( -57.549, 53.9061, -24.9963, 0.28 ) }
    dend_60 { pt3dadd( -57.408, 54.4907, -25.2161, 0.55 ) }
    dend_60 { pt3dadd( -56.9241, 56.5488, -25.8907, 0.28 ) }
    dend_60 { pt3dadd( -56.5712, 58.1991, -26.3608, 0.55 ) }
    dend_60 { pt3dadd( -56.1266, 60.8097, -26.9886, 0.28 ) }
    dend_60 { pt3dadd( -55.8062, 63.1234, -27.4798, 0.28 ) }
    dend_60 { pt3dadd( -55.6955, 64.4318, -27.714, 0.55 ) }
    dend_60 { pt3dadd( -55.6576, 65.9913, -27.9702, 0.28 ) }
    dend_60 { pt3dadd( -55.6849, 66.7423, -28.072, 0.55 ) }
    dend_60 { pt3dadd( -55.8603, 68.4956, -28.3656, 0.28 ) }
    dend_60 { pt3dadd( -56.0667, 69.6544, -28.6022, 0.28 ) }
    dend_60 { pt3dadd( -56.3009, 70.7852, -28.8625, 0.28 ) }
    dend_60 { pt3dadd( -56.4027, 71.3803, -29.0072, 0.55 ) }
    dend_60 { pt3dadd( -56.6996, 73.7628, -29.676, 0.28 ) }
    dend_60 { pt3dadd( -56.9694, 76.5639, -30.5395, 0.55 ) }
    dend_60 { pt3dadd( -57.0493, 77.5292, -30.8446, 0.55 ) }
    dend_60 { pt3dadd( -57.14, 78.5038, -31.1266, 0.55 ) }
    dend_60 { pt3dadd( -57.4506, 80.5734, -31.7339, 0.55 ) }
    dend_60 { pt3dadd( -57.7489, 81.9304, -32.1417, 0.28 ) }
    dend_60 { pt3dadd( -57.9231, 82.4463, -32.2894, 0.55 ) }
    dend_60 { pt3dadd( -58.4863, 83.8582, -32.6385, 0.28 ) }
    dend_60 { pt3dadd( -59.1603, 85.3494, -33.0539, 0.55 ) }
    dend_60 { pt3dadd( -60.3475, 87.4842, -33.6875, 0.28 ) }
    dend_60 { pt3dadd( -60.9464, 88.3738, -33.9584, 0.28 ) }
    dend_60 { pt3dadd( -61.9673, 89.5878, -34.4203, 0.55 ) }
    dend_60 { pt3dadd( -63.1329, 90.8396, -34.9486, 0.28 ) }
    dend_60 { pt3dadd( -63.3488, 91.0353, -35.0346, 0.55 ) }
    dend_60 { pt3dadd( -64.1344, 91.658, -35.3141, 0.28 ) }
    dend_60 { pt3dadd( -66.8483, 93.6606, -36.1816, 0.55 ) }
    dend_60 { pt3dadd( -70.6884, 96.0866, -37.424, 0.28 ) }
    dend_60 { pt3dadd( -71.412, 96.4811, -37.6799, 0.55 ) }
    dend_60 { pt3dadd( -73.4134, 97.4846, -38.3914, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -74.2601, 97.8894, -38.7074, 0.28 ) }
    dend_60 { pt3dadd( -75.0057, 98.2152, -39.0085, 0.55 ) }
    dend_60 { pt3dadd( -77.2489, 98.8914, -39.9666, 0.28 ) }
    dend_60 { pt3dadd( -78.8332, 99.2417, -40.5456, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -58.2557, 46.2176, -14.5927, 0.55 ) }
    dend_57 { pt3dadd( -58.3954, 47.3879, -14.9541, 0.55 ) }
    dend_57 { pt3dadd( -58.4848, 48.0924, -15.0998, 0.28 ) }
    dend_57 { pt3dadd( -58.6285, 48.6259, -15.0669, 0.55 ) }
    dend_57 { pt3dadd( -58.9586, 49.851, -14.9912, 0.28 ) }
    dend_57 { pt3dadd( -59.1905, 50.7115, -14.9381, 0.55 ) }
    dend_57 { pt3dadd( -59.6179, 52.2979, -14.8401, 0.28 ) }
    dend_57 { pt3dadd( -59.9048, 53.1798, -14.637, 0.55 ) }
    dend_57 { pt3dadd( -61.0447, 55.4427, -13.3946, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -161.482, -50.7428, -18.5066, 0.55 ) }
    dend_52 { pt3dadd( -167.678, -58.678, -21.6449, 0.55 ) }
    dend_52 { pt3dadd( -172.207, -67.4525, -25.3451, 0.55 ) }
    dend_52 { pt3dadd( -175.752, -75.5513, -31.093, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -161.482, -50.7428, -18.5066, 0.55 ) }
    dend_49 { pt3dadd( -168.221, -57.9434, -23.6051, 0.55 ) }
    dend_49 { pt3dadd( -173.814, -65.2044, -29.8691, 0.55 ) }
    dend_49 { pt3dadd( -178.958, -72.6195, -36.3348, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -197.424, 20.4705, 79.112, 0.55 ) }
    dend_47 { pt3dadd( -204.887, 19.9652, 84.0829, 0.55 ) }
    dend_47 { pt3dadd( -212.636, 20.8144, 88.5428, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -197.424, 20.4705, 79.112, 0.55 ) }
    dend_46 { pt3dadd( -204.767, 19.5977, 82.393, 0.55 ) }
    dend_46 { pt3dadd( -212.234, 20.0421, 85.4727, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 69.6824, -44.5694, -93.6017, 0.28 ) }
    dend_39 { pt3dadd( 77.2668, -48.7413, -108.153, 0.28 ) }
    dend_39 { pt3dadd( 78.0259, -49.2282, -109.454, 0.55 ) }
    dend_39 { pt3dadd( 79.3072, -50.0502, -111.649, 0.28 ) }
    dend_39 { pt3dadd( 80.3862, -50.7423, -113.498, 0.28 ) }
    dend_39 { pt3dadd( 81.8144, -51.6585, -115.945, 0.55 ) }
    dend_39 { pt3dadd( 83.6975, -52.8665, -119.172, 0.55 ) }
    dend_39 { pt3dadd( 86.3328, -55.0672, -120.945, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 69.6824, -44.5694, -93.6017, 0.55 ) }
    dend_36 { pt3dadd( 70.2724, -45.6107, -94.9545, 0.55 ) }
    dend_36 { pt3dadd( 70.4377, -46.0778, -95.553, 0.28 ) }
    dend_36 { pt3dadd( 70.6707, -46.8758, -96.5965, 0.55 ) }
    dend_36 { pt3dadd( 71.184, -48.6336, -98.8953, 0.28 ) }
    dend_36 { pt3dadd( 71.5397, -49.8518, -100.489, 0.55 ) }
    dend_36 { pt3dadd( 72.1424, -51.9158, -103.188, 0.28 ) }
    dend_36 { pt3dadd( 72.7852, -54.4099, -106.716, 0.28 ) }
    dend_36 { pt3dadd( 73.0213, -55.5531, -108.363, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 187.327, -21.6131, -0.642287, 0.28 ) }
    dend_33 { pt3dadd( 189.917, -24.7374, 0.523357, 0.28 ) }
    dend_33 { pt3dadd( 193.137, -28.894, 2.4165, 0.28 ) }
    dend_33 { pt3dadd( 195.156, -31.6013, 3.75621, 0.55 ) }
    dend_33 { pt3dadd( 196.359, -33.0861, 4.59628, 0.28 ) }
    dend_33 { pt3dadd( 196.997, -33.8867, 5.05567, 0.28 ) }
    dend_33 { pt3dadd( 200.172, -37.8361, 7.2579, 0.55 ) }
    dend_33 { pt3dadd( 200.883, -38.7145, 7.88037, 0.28 ) }
    dend_33 { pt3dadd( 202.53, -41.0578, 9.65854, 0.55 ) }
    dend_33 { pt3dadd( 203.95, -43.0963, 11.1056, 0.28 ) }
    dend_33 { pt3dadd( 205.198, -44.7424, 12.2633, 0.55 ) }
    dend_33 { pt3dadd( 206.683, -46.712, 13.5054, 0.55 ) }
    dend_33 { pt3dadd( 209.118, -49.8304, 15.0421, 0.55 ) }
    dend_33 { pt3dadd( 209.709, -50.5962, 15.3864, 0.55 ) }
    dend_33 { pt3dadd( 211.837, -53.4657, 16.6194, 0.28 ) }
    dend_33 { pt3dadd( 212.668, -54.6428, 17.0805, 0.55 ) }
    dend_33 { pt3dadd( 213.825, -56.1347, 17.6817, 0.28 ) }
    dend_33 { pt3dadd( 215.477, -58.2517, 18.4259, 0.55 ) }
    dend_33 { pt3dadd( 218.296, -61.5621, 19.0857, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 187.327, -21.6131, -0.642287, 0.55 ) }
    dend_32 { pt3dadd( 183.599, -22.019, -1.2019, 0.55 ) }
    dend_32 { pt3dadd( 180.572, -22.3486, -1.65635, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.195595, -36.1005, 6.53529, 0.83 ) }
    dend_17 { pt3dadd( 0.285685, -36.2902, 6.51233, 0.83 ) }
    dend_17 { pt3dadd( 1.34211, -37.9671, 6.39337, 0.83 ) }
    dend_17 { pt3dadd( 2.2598, -39.436, 6.19041, 0.55 ) }
    dend_17 { pt3dadd( 2.99192, -40.6078, 6.02849, 0.55 ) }
    dend_17 { pt3dadd( 4.54807, -43.0986, 5.68434, 0.83 ) }
    dend_17 { pt3dadd( 6.43557, -46.1197, 5.26689, 0.55 ) }
    dend_17 { pt3dadd( 7.46826, -47.7006, 5.07663, 0.83 ) }
    dend_17 { pt3dadd( 9.30804, -50.2142, 4.8721, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.195595, -36.1005, 6.53529, 0.55 ) }
    dend_14 { pt3dadd( -0.977582, -36.9829, 4.16914, 0.55 ) }
    dend_14 { pt3dadd( -2.23684, -37.9302, 1.62937, 0.55 ) }
    dend_14 { pt3dadd( -3.72341, -39.0484, -1.36885, 0.55 ) }
    dend_14 { pt3dadd( -5.52859, -40.4063, -5.00966, 0.55 ) }
    dend_14 { pt3dadd( -6.55296, -41.1768, -7.07569, 0.55 ) }
    dend_14 { pt3dadd( -6.75874, -41.3316, -7.49073, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -13.1975, -133.387, 97.9482, 0.55 ) }
    dend_7 { pt3dadd( -13.0667, -139.52, 102.406, 0.55 ) }
    dend_7 { pt3dadd( -11.8542, -146.001, 106.152, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -13.1975, -133.387, 97.9482, 0.55 ) }
    dend_4 { pt3dadd( -13.7947, -145.45, 104.955, 0.55 ) }
    dend_4 { pt3dadd( -15.08, -157.266, 112.283, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -61.0447, 55.4427, -13.3946, 0.28 ) }
    dend_59 { pt3dadd( -61.4904, 57.874, -12.3288, 0.28 ) }
    dend_59 { pt3dadd( -61.6202, 58.8262, -11.8637, 0.55 ) }
    dend_59 { pt3dadd( -61.9585, 61.5968, -10.4922, 0.28 ) }
    dend_59 { pt3dadd( -62.1753, 62.9304, -9.89065, 0.55 ) }
    dend_59 { pt3dadd( -62.8238, 66.5069, -8.32842, 0.28 ) }
    dend_59 { pt3dadd( -63.483, 70.1419, -6.74062, 0.55 ) }
    dend_59 { pt3dadd( -64.5638, 75.9771, -3.97537, 0.28 ) }
    dend_59 { pt3dadd( -64.7931, 77.2264, -3.38939, 0.55 ) }
    dend_59 { pt3dadd( -65.3261, 80.0532, -2.21572, 0.28 ) }
    dend_59 { pt3dadd( -65.5291, 81.2007, -1.77768, 0.55 ) }
    dend_59 { pt3dadd( -68.9096, 90.0364, 3.43567, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -74.0231, 99.0574, 6.46053, 0.55 ) }
    dend_59 { pt3dadd( -77.5062, 108.647, 10.0075, 0.55 ) }
    dend_59 { pt3dadd( -79.802, 118.972, 12.201, 0.55 ) }
    dend_59 { pt3dadd( -83.4279, 128.891, 14.4665, 0.55 ) }
    dend_59 { pt3dadd( -87.4197, 137.999, 18.6842, 0.55 ) }
    dend_59 { pt3dadd( -90.1101, 146.864, 24.2384, 0.55 ) }
    dend_59 { pt3dadd( -91.2882, 155.158, 31.058, 0.55 ) }
    dend_59 { pt3dadd( -92.6218, 163.854, 37.3245, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -61.0447, 55.4427, -13.3946, 0.55 ) }
    dend_58 { pt3dadd( -63.3911, 55.3947, -11.0676, 0.55 ) }
    dend_58 { pt3dadd( -64.6132, 55.3212, -9.84191, 0.28 ) }
    dend_58 { pt3dadd( -65.5227, 55.2665, -8.92977, 0.55 ) }
    dend_58 { pt3dadd( -66.2807, 55.2209, -8.16955, 0.28 ) }
    dend_58 { pt3dadd( -66.8116, 55.189, -7.63706, 0.55 ) }
    dend_58 { pt3dadd( -68.2756, 55.1009, -6.16875, 0.28 ) }
    dend_58 { pt3dadd( -69.3071, 54.8936, -5.28935, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -175.752, -75.5513, -31.093, 0.55 ) }
    dend_54 { pt3dadd( -179.689, -84.1123, -33.3978, 0.55 ) }
    dend_54 { pt3dadd( -183.378, -92.9924, -34.679, 0.55 ) }
    dend_54 { pt3dadd( -186.435, -101.69, -37.6984, 0.55 ) }
    dend_54 { pt3dadd( -190.394, -110.384, -39.3854, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -175.752, -75.5513, -31.093, 0.55 ) }
    dend_53 { pt3dadd( -180.925, -79.6638, -39.2011, 0.55 ) }
    dend_53 { pt3dadd( -185.669, -82.2917, -48.1459, 0.55 ) }
    dend_53 { pt3dadd( -191.203, -86.2337, -56.0989, 0.55 ) }
    dend_53 { pt3dadd( -198.731, -88.6831, -62.936, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -178.958, -72.6195, -36.3348, 0.55 ) }
    dend_51 { pt3dadd( -183.29, -74.7514, -42.8406, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -178.958, -72.6195, -36.3348, 0.55 ) }
    dend_50 { pt3dadd( -184.49, -82.5536, -34.5542, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 86.3328, -55.0672, -120.945, 0.28 ) }
    dend_41 { pt3dadd( 89.6102, -56.9333, -123.111, 0.28 ) }
    dend_41 { pt3dadd( 91.1326, -57.8, -124.118, 0.55 ) }
    dend_41 { pt3dadd( 94.0357, -59.453, -126.036, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 86.3328, -55.0672, -120.945, 0.55 ) }
    dend_40 { pt3dadd( 85.7638, -55.8948, -122.583, 0.55 ) }
    dend_40 { pt3dadd( 84.6255, -57.5502, -125.858, 0.28 ) }
    dend_40 { pt3dadd( 84.2548, -58.0894, -126.925, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 73.0213, -55.5531, -108.363, 0.28 ) }
    dend_38 { pt3dadd( 74.008, -58.9186, -112.804, 0.28 ) }
    dend_38 { pt3dadd( 74.4966, -60.585, -115.003, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 73.0213, -55.5531, -108.363, 0.55 ) }
    dend_37 { pt3dadd( 71.3856, -56.334, -107.52, 0.55 ) }
    dend_37 { pt3dadd( 66.8246, -58.5116, -105.168, 0.28 ) }
    dend_37 { pt3dadd( 65.7411, -59.0289, -104.609, 0.55 ) }
    dend_37 { pt3dadd( 62.777, -60.444, -103.081, 0.28 ) }
    dend_37 { pt3dadd( 60.8665, -61.3562, -102.096, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 9.30804, -50.2142, 4.8721, 0.83 ) }
    dend_23 { pt3dadd( 9.35156, -50.5277, 4.82731, 0.83 ) }
    dend_23 { pt3dadd( 9.97971, -54.6288, 4.35771, 0.83 ) }
    dend_23 { pt3dadd( 10.1764, -57.711, 4.19508, 0.83 ) }
    dend_23 { pt3dadd( 10.1479, -60.6964, 4.34025, 0.83 ) }
    dend_23 { pt3dadd( 9.96063, -64.6767, 4.82923, 0.83 ) }
    dend_23 { pt3dadd( 9.61329, -69.2677, 5.55792, 0.83 ) }
    dend_23 { pt3dadd( 9.23931, -74.3969, 6.64048, 0.83 ) }
    dend_23 { pt3dadd( 8.87061, -79.3822, 7.92158, 0.83 ) }
    dend_23 { pt3dadd( 8.0244, -85.5096, 9.34091, 0.83 ) }
    dend_23 { pt3dadd( 7.48613, -88.326, 9.82887, 0.83 ) }
    dend_23 { pt3dadd( 7.07705, -90.4426, 10.0624, 0.83 ) }
    dend_23 { pt3dadd( 6.20864, -94.5041, 10.4218, 0.83 ) }
    dend_23 { pt3dadd( 5.52205, -98.1376, 10.5457, 0.83 ) }
    dend_23 { pt3dadd( 4.50396, -105.866, 9.95757, 0.83 ) }
    dend_23 { pt3dadd( 4.0127, -110.086, 9.08468, 0.83 ) }
    dend_23 { pt3dadd( 3.5659, -113.97, 7.99504, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 9.30804, -50.2142, 4.8721, 0.55 ) }
    dend_18 { pt3dadd( 8.64093, -51.7771, 4.82952, 0.55 ) }
    dend_18 { pt3dadd( 8.13065, -52.9135, 4.881, 0.55 ) }
    dend_18 { pt3dadd( 7.81498, -53.6413, 4.98835, 0.55 ) }
    dend_18 { pt3dadd( 7.36154, -54.7813, 5.27199, 0.55 ) }
    dend_18 { pt3dadd( 6.5047, -57.0403, 5.98374, 0.55 ) }
    dend_18 { pt3dadd( 5.8205, -58.754, 6.70629, 0.55 ) }
    dend_18 { pt3dadd( 5.25653, -60.1304, 7.42982, 0.55 ) }
    dend_18 { pt3dadd( 4.64243, -61.5232, 8.25346, 0.55 ) }
    dend_18 { pt3dadd( 4.11677, -62.6795, 8.9946, 0.28 ) }
    dend_18 { pt3dadd( 3.65819, -63.6272, 9.73405, 0.55 ) }
    dend_18 { pt3dadd( 2.7573, -65.3568, 11.3118, 0.55 ) }
    dend_18 { pt3dadd( 2.13558, -66.4201, 12.384, 0.55 ) }
    dend_18 { pt3dadd( 1.78155, -67.0158, 12.9782, 0.55 ) }
    dend_18 { pt3dadd( 1.33356, -67.7184, 13.639, 0.83 ) }
    dend_18 { pt3dadd( 0.00272882, -69.7996, 15.4606, 0.28 ) }
    dend_18 { pt3dadd( -0.434917, -70.488, 16.0452, 0.55 ) }
    dend_18 { pt3dadd( -1.18257, -71.7295, 17.0653, 0.28 ) }
    dend_18 { pt3dadd( -1.41587, -72.1127, 17.4071, 0.55 ) }
    dend_18 { pt3dadd( -1.9126, -73.0113, 18.1982, 0.28 ) }
    dend_18 { pt3dadd( -2.18745, -73.5216, 18.6116, 0.55 ) }
    dend_18 { pt3dadd( -3.13217, -75.176, 19.5064, 0.55 ) }
    dend_18 { pt3dadd( -4.77614, -79.6467, 23.7636, 0.55 ) }
    dend_18 { pt3dadd( -6.15274, -83.911, 28.3171, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.75874, -41.3316, -7.49073, 0.55 ) }
    dend_16 { pt3dadd( -9.09891, -42.3761, -10.2086, 0.55 ) }
    dend_16 { pt3dadd( -9.79543, -42.6247, -10.973, 0.55 ) }
    dend_16 { pt3dadd( -11.5498, -43.2528, -12.8211, 0.55 ) }
    dend_16 { pt3dadd( -15.4087, -44.5123, -16.6889, 0.28 ) }
    dend_16 { pt3dadd( -15.9864, -44.6876, -17.226, 0.55 ) }
    dend_16 { pt3dadd( -18.3987, -45.4939, -19.3707, 0.55 ) }
    dend_16 { pt3dadd( -21.7221, -46.6166, -21.9772, 0.55 ) }
    dend_16 { pt3dadd( -22.9981, -47.0068, -22.9414, 0.28 ) }
    dend_16 { pt3dadd( -24.1244, -47.2744, -23.7182, 0.28 ) }
    dend_16 { pt3dadd( -26.0631, -47.7061, -24.7833, 0.55 ) }
    dend_16 { pt3dadd( -28.432, -48.1186, -26.1662, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -30.6307, -48.3128, -27.4854, 0.55 ) }
    dend_16 { pt3dadd( -32.3411, -48.3267, -28.4681, 0.55 ) }
    dend_16 { pt3dadd( -33.524, -48.2386, -29.1776, 0.55 ) }
    dend_16 { pt3dadd( -37.0062, -47.8229, -31.3581, 0.55 ) }
    dend_16 { pt3dadd( -40.6903, -47.1478, -33.5767, 0.55 ) }
    dend_16 { pt3dadd( -42.2191, -46.7898, -34.4537, 0.28 ) }
    dend_16 { pt3dadd( -43.6695, -46.4706, -35.3136, 0.55 ) }
    dend_16 { pt3dadd( -46.6018, -46.007, -37.0359, 0.28 ) }
    dend_16 { pt3dadd( -47.5873, -45.8788, -37.6068, 0.83 ) }
    dend_16 { pt3dadd( -49.4342, -45.6246, -38.5512, 0.28 ) }
    dend_16 { pt3dadd( -50.7649, -45.546, -39.0678, 0.55 ) }
    dend_16 { pt3dadd( -52.6944, -45.4987, -39.7829, 0.28 ) }
    dend_16 { pt3dadd( -53.4642, -45.4716, -40.0428, 0.55 ) }
    dend_16 { pt3dadd( -54.8913, -45.4508, -40.4516, 0.55 ) }
    dend_16 { pt3dadd( -57.0621, -45.2164, -40.9818, 0.55 ) }
    dend_16 { pt3dadd( -58.4865, -44.9837, -41.2486, 0.28 ) }
    dend_16 { pt3dadd( -59.6438, -44.6659, -41.3715, 0.55 ) }
    dend_16 { pt3dadd( -61.017, -44.134, -41.5163, 0.28 ) }
    dend_16 { pt3dadd( -61.2439, -44.0294, -41.5467, 0.55 ) }
    dend_16 { pt3dadd( -63.3419, -43.0039, -42.1652, 0.28 ) }
    dend_16 { pt3dadd( -64.8665, -42.2242, -42.7644, 0.55 ) }
    dend_16 { pt3dadd( -66.8848, -41.0603, -43.8094, 0.83 ) }
    dend_16 { pt3dadd( -68.5489, -40.058, -44.8427, 0.28 ) }
    dend_16 { pt3dadd( -68.9784, -39.8, -45.1493, 0.55 ) }
    dend_16 { pt3dadd( -72.2687, -37.8579, -47.6744, 0.28 ) }
    dend_16 { pt3dadd( -72.8435, -37.5243, -48.1698, 0.55 ) }
    dend_16 { pt3dadd( -74.5444, -36.428, -49.7284, 0.28 ) }
    dend_16 { pt3dadd( -74.9833, -36.1459, -50.1338, 0.55 ) }
    dend_16 { pt3dadd( -76.1117, -35.415, -51.1008, 0.28 ) }
    dend_16 { pt3dadd( -76.9124, -34.891, -51.7378, 0.55 ) }
    dend_16 { pt3dadd( -78.7055, -33.7337, -52.9062, 0.28 ) }
    dend_16 { pt3dadd( -79.768, -33.1189, -53.5639, 0.55 ) }
    dend_16 { pt3dadd( -82.0324, -31.9464, -54.8575, 0.28 ) }
    dend_16 { pt3dadd( -82.7058, -31.6325, -55.2341, 0.55 ) }
    dend_16 { pt3dadd( -83.7591, -31.2193, -55.7905, 0.28 ) }
    dend_16 { pt3dadd( -84.652, -30.8737, -56.2204, 0.55 ) }
    dend_16 { pt3dadd( -86.5067, -30.185, -57.0078, 0.28 ) }
    dend_16 { pt3dadd( -87.0651, -29.9904, -57.2279, 0.55 ) }
    dend_16 { pt3dadd( -91.2179, -28.4766, -58.6755, 0.28 ) }
    dend_16 { pt3dadd( -92.6783, -27.8542, -59.0579, 0.55 ) }
    dend_16 { pt3dadd( -95.2868, -26.6332, -59.5766, 0.28 ) }
    dend_16 { pt3dadd( -96.4637, -26.0407, -59.7742, 0.55 ) }
    dend_16 { pt3dadd( -99.1588, -24.7074, -60.0806, 0.28 ) }
    dend_16 { pt3dadd( -100.145, -24.2617, -60.1534, 0.55 ) }
    dend_16 { pt3dadd( -103.698, -22.9619, -60.2439, 0.28 ) }
    dend_16 { pt3dadd( -105.172, -22.598, -60.2748, 0.55 ) }
    dend_16 { pt3dadd( -107.262, -22.4115, -60.3069, 0.55 ) }
    dend_16 { pt3dadd( -108.543, -22.3772, -60.2993, 0.55 ) }
    dend_16 { pt3dadd( -111.142, -22.3823, -60.0889, 0.28 ) }
    dend_16 { pt3dadd( -113.688, -22.4196, -59.7236, 0.28 ) }
    dend_16 { pt3dadd( -115.804, -22.4458, -59.3577, 0.55 ) }
    dend_16 { pt3dadd( -118.374, -22.2687, -58.6206, 0.28 ) }
    dend_16 { pt3dadd( -119.632, -22.03, -58.0791, 0.55 ) }
    dend_16 { pt3dadd( -122.6, -20.9867, -56.4698, 0.28 ) }
    dend_16 { pt3dadd( -124.075, -20.155, -55.2582, 0.55 ) }
    dend_16 { pt3dadd( -124.987, -19.4661, -54.2485, 0.28 ) }
    dend_16 { pt3dadd( -125.945, -18.6975, -52.8385, 0.55 ) }
    dend_16 { pt3dadd( -127.1, -17.688, -50.8981, 0.28 ) }
    dend_16 { pt3dadd( -127.541, -17.3371, -50.1699, 0.55 ) }
    dend_16 { pt3dadd( -129.927, -15.7998, -46.7493, 0.28 ) }
    dend_16 { pt3dadd( -130.736, -15.3224, -45.6073, 0.55 ) }
    dend_16 { pt3dadd( -132.64, -14.2848, -42.8359, 0.28 ) }
    dend_16 { pt3dadd( -133.675, -13.7374, -41.3314, 0.55 ) }
    dend_16 { pt3dadd( -134.528, -13.2894, -40.0967, 0.55 ) }
    dend_16 { pt3dadd( -135.558, -12.7636, -38.6547, 0.28 ) }
    dend_16 { pt3dadd( -136.132, -12.4953, -38.0127, 0.55 ) }
    dend_16 { pt3dadd( -138.104, -11.5159, -35.9928, 0.28 ) }
    dend_16 { pt3dadd( -139.13, -10.8629, -34.9065, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.75874, -41.3316, -7.49073, 0.55 ) }
    dend_15 { pt3dadd( -6.51204, -41.3867, -8.04956, 0.55 ) }
    dend_15 { pt3dadd( -6.2482, -41.3754, -8.60315, 0.55 ) }
    dend_15 { pt3dadd( -5.8854, -41.309, -9.27431, 0.55 ) }
    dend_15 { pt3dadd( -5.56744, -41.2065, -9.80643, 0.55 ) }
    dend_15 { pt3dadd( -3.24278, -40.1284, -13.1153, 0.55 ) }
    dend_15 { pt3dadd( -2.72524, -39.7891, -13.8664, 0.55 ) }
    dend_15 { pt3dadd( -1.97803, -39.1974, -14.9915, 0.55 ) }
    dend_15 { pt3dadd( -1.45298, -38.7488, -15.7909, 0.55 ) }
    dend_15 { pt3dadd( -0.929704, -38.2613, -16.5534, 0.28 ) }
    dend_15 { pt3dadd( -0.0839329, -37.4361, -17.6747, 0.55 ) }
    dend_15 { pt3dadd( 1.24317, -36.147, -19.2583, 0.28 ) }
    dend_15 { pt3dadd( 1.33455, -36.0687, -19.4318, 0.55 ) }
    dend_15 { pt3dadd( 1.6599, -35.8063, -20.7392, 0.28 ) }
    dend_15 { pt3dadd( 1.73275, -35.6914, -21.6597, 0.55 ) }
    dend_15 { pt3dadd( 1.72095, -35.6412, -22.6676, 0.55 ) }
    dend_15 { pt3dadd( 1.67773, -35.6432, -24.4818, 0.55 ) }
    dend_15 { pt3dadd( 1.6036, -35.6716, -28.0429, 0.55 ) }
    dend_15 { pt3dadd( 1.59705, -35.7132, -30.4354, 0.55 ) }
    dend_15 { pt3dadd( 1.61703, -35.7339, -31.2611, 0.55 ) }
    dend_15 { pt3dadd( 1.87479, -35.8206, -36.6811, 0.55 ) }
    dend_15 { pt3dadd( 2.00552, -35.8198, -38.1442, 0.55 ) }
    dend_15 { pt3dadd( 2.14054, -35.8164, -38.9592, 0.55 ) }
    dend_15 { pt3dadd( 2.62279, -35.8472, -40.8324, 0.55 ) }
    dend_15 { pt3dadd( 4.05305, -36.1377, -45.2654, 0.55 ) }
    dend_15 { pt3dadd( 4.49172, -36.263, -46.4444, 0.28 ) }
    dend_15 { pt3dadd( 4.79378, -36.3624, -47.0976, 0.55 ) }
    dend_15 { pt3dadd( 5.26178, -36.5506, -48.0585, 0.28 ) }
    dend_15 { pt3dadd( 5.48563, -36.6683, -48.4399, 0.55 ) }
    dend_15 { pt3dadd( 6.42406, -37.1924, -49.3847, 0.28 ) }
    dend_15 { pt3dadd( 7.34039, -37.9134, -49.6006, 0.55 ) }
    dend_15 { pt3dadd( 7.89794, -38.4297, -49.6933, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 8.42057, -39.0022, -49.7142, 0.55 ) }
    dend_15 { pt3dadd( 8.88686, -39.6286, -49.6913, 0.28 ) }
    dend_15 { pt3dadd( 9.08872, -39.9523, -49.6887, 0.55 ) }
    dend_15 { pt3dadd( 9.56349, -40.8021, -49.6433, 0.28 ) }
    dend_15 { pt3dadd( 9.68184, -41.0559, -49.6694, 0.55 ) }
    dend_15 { pt3dadd( 10.3451, -42.5099, -49.903, 0.28 ) }
    dend_15 { pt3dadd( 10.6623, -43.1803, -50.1027, 0.55 ) }
    dend_15 { pt3dadd( 11.3766, -44.6076, -50.7024, 0.28 ) }
    dend_15 { pt3dadd( 11.6562, -45.1312, -50.9868, 0.55 ) }
    dend_15 { pt3dadd( 12.6341, -46.8454, -52.0389, 0.28 ) }
    dend_15 { pt3dadd( 12.8727, -47.2617, -52.3138, 0.55 ) }
    dend_15 { pt3dadd( 13.5841, -48.5811, -53.2304, 0.28 ) }
    dend_15 { pt3dadd( 13.7345, -48.8916, -53.418, 0.55 ) }
    dend_15 { pt3dadd( 14.104, -49.7135, -53.9031, 0.28 ) }
    dend_15 { pt3dadd( 14.3178, -50.1894, -54.2336, 0.55 ) }
    dend_15 { pt3dadd( 14.5407, -50.6553, -54.5991, 0.55 ) }
    dend_15 { pt3dadd( 14.9867, -51.5848, -55.3212, 0.28 ) }
    dend_15 { pt3dadd( 15.3116, -52.156, -55.8446, 0.55 ) }
    dend_15 { pt3dadd( 16.3842, -53.562, -57.5335, 0.28 ) }
    dend_15 { pt3dadd( 16.8054, -54.0117, -58.2158, 0.55 ) }
    dend_15 { pt3dadd( 17.1045, -54.2949, -58.6797, 0.28 ) }
    dend_15 { pt3dadd( 17.4159, -54.5507, -59.1435, 0.55 ) }
    dend_15 { pt3dadd( 18.4031, -55.259, -60.5504, 0.28 ) }
    dend_15 { pt3dadd( 19.163, -55.8099, -61.5903, 0.55 ) }
    dend_15 { pt3dadd( 20.5091, -56.8698, -63.2411, 0.28 ) }
    dend_15 { pt3dadd( 20.9346, -57.1993, -63.7584, 0.55 ) }
    dend_15 { pt3dadd( 21.7875, -57.8028, -64.6654, 0.28 ) }
    dend_15 { pt3dadd( 22.0821, -58.0006, -64.941, 0.55 ) }
    dend_15 { pt3dadd( 22.5941, -58.3175, -65.2916, 0.28 ) }
    dend_15 { pt3dadd( 23.0591, -58.5841, -65.5596, 0.55 ) }
    dend_15 { pt3dadd( 24.3604, -59.2405, -66.1507, 0.28 ) }
    dend_15 { pt3dadd( 25.8623, -59.9316, -66.8032, 0.28 ) }
    dend_15 { pt3dadd( 26.6375, -60.2472, -67.0789, 0.28 ) }
    dend_15 { pt3dadd( 27.4086, -60.5403, -67.4034, 0.55 ) }
    dend_15 { pt3dadd( 28.5362, -60.9155, -67.8816, 0.28 ) }
    dend_15 { pt3dadd( 29.0408, -61.0749, -68.0835, 0.83 ) }
    dend_15 { pt3dadd( 30.3389, -61.4994, -68.5495, 0.28 ) }
    dend_15 { pt3dadd( 30.8942, -61.6959, -68.7829, 0.55 ) }
    dend_15 { pt3dadd( 33.303, -62.6515, -69.9234, 0.28 ) }
    dend_15 { pt3dadd( 34.4815, -63.1425, -70.5917, 0.28 ) }
    dend_15 { pt3dadd( 35.3225, -63.4986, -71.1354, 0.55 ) }
    dend_15 { pt3dadd( 35.7953, -63.7162, -71.5101, 0.55 ) }
    dend_15 { pt3dadd( 37.0159, -64.3115, -72.6113, 0.28 ) }
    dend_15 { pt3dadd( 38.1377, -64.9268, -73.6926, 0.55 ) }
    dend_15 { pt3dadd( 39.1575, -65.5243, -74.6778, 0.28 ) }
    dend_15 { pt3dadd( 40.0608, -66.0796, -75.6236, 0.55 ) }
    dend_15 { pt3dadd( 40.8099, -66.528, -76.4004, 0.28 ) }
    dend_15 { pt3dadd( 41.4386, -66.8427, -76.998, 0.55 ) }
    dend_15 { pt3dadd( 42.9871, -67.5025, -78.3612, 0.28 ) }
    dend_15 { pt3dadd( 43.7843, -67.836, -79.0167, 0.55 ) }
    dend_15 { pt3dadd( 44.9976, -68.3412, -79.9537, 0.28 ) }
    dend_15 { pt3dadd( 46.0002, -68.7229, -80.6957, 0.55 ) }
    dend_15 { pt3dadd( 48.3506, -69.5023, -82.4351, 0.28 ) }
    dend_15 { pt3dadd( 49.2878, -69.7588, -83.2109, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -11.8542, -146.001, 106.152, 0.55 ) }
    dend_9 { pt3dadd( -11.8141, -157.661, 111.548, 0.55 ) }
    dend_9 { pt3dadd( -11.0086, -170.263, 113.918, 0.55 ) }
    dend_9 { pt3dadd( -10.6794, -182.403, 118.11, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -11.8542, -146.001, 106.152, 0.55 ) }
    dend_8 { pt3dadd( -10.7354, -153.89, 111.882, 0.55 ) }
    dend_8 { pt3dadd( -10.8818, -160.64, 119.005, 0.55 ) }
    dend_8 { pt3dadd( -10.9494, -165.783, 127.364, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -15.08, -157.266, 112.283, 0.55 ) }
    dend_6 { pt3dadd( -14.3949, -166.164, 118.152, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -15.08, -157.266, 112.283, 0.55 ) }
    dend_5 { pt3dadd( -16.3042, -165.973, 117.335, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 3.5659, -113.97, 7.99504, 0.83 ) }
    dend_25 { pt3dadd( 4.59885, -117.971, 8.51012, 0.83 ) }
    dend_25 { pt3dadd( 5.6324, -121.34, 9.18796, 0.83 ) }
    dend_25 { pt3dadd( 6.65975, -124.689, 9.86175, 0.83 ) }
    dend_25 { pt3dadd( 7.63541, -127.869, 10.5016, 0.83 ) }
    dend_25 { pt3dadd( 9.13897, -132.769, 11.4877, 0.83 ) }
    dend_25 { pt3dadd( 10.6316, -137.634, 12.4667, 0.83 ) }
    dend_25 { pt3dadd( 11.8921, -140.848, 13.5216, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 3.5659, -113.97, 7.99504, 0.55 ) }
    dend_24 { pt3dadd( 5.238, -116.171, 8.13853, 0.55 ) }
    dend_24 { pt3dadd( 6.55336, -117.885, 7.94625, 0.55 ) }
    dend_24 { pt3dadd( 7.47962, -119.153, 7.67043, 0.55 ) }
    dend_24 { pt3dadd( 8.35463, -120.644, 7.13292, 0.83 ) }
    dend_24 { pt3dadd( 9.25545, -122.339, 6.30151, 0.55 ) }
    dend_24 { pt3dadd( 10.1365, -123.996, 5.48828, 0.83 ) }
    dend_24 { pt3dadd( 11.0055, -125.794, 4.42631, 0.55 ) }
    dend_24 { pt3dadd( 11.5172, -126.837, 3.71098, 0.83 ) }
    dend_24 { pt3dadd( 13.055, -130.208, 1.11332, 0.55 ) }
    dend_24 { pt3dadd( 14.0559, -132.86, -1.11767, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -6.15274, -83.911, 28.3171, 0.55 ) }
    dend_20 { pt3dadd( -10.1842, -92.7099, 34.4691, 0.55 ) }
    dend_20 { pt3dadd( -15.6218, -100.318, 41.1074, 0.55 ) }
    dend_20 { pt3dadd( -21.6824, -106.83, 48.3454, 0.55 ) }
    dend_20 { pt3dadd( -28.5613, -111.961, 55.9529, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -6.15274, -83.911, 28.3171, 0.55 ) }
    dend_19 { pt3dadd( -8.59346, -89.7856, 32.9572, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 11.8921, -140.848, 13.5216, 0.55 ) }
    dend_27 { pt3dadd( 12.0256, -142.9, 14.0364, 0.55 ) }
    dend_27 { pt3dadd( 12.2576, -145.518, 14.7689, 0.55 ) }
    dend_27 { pt3dadd( 12.4794, -147.989, 15.4471, 0.55 ) }
    dend_27 { pt3dadd( 12.6207, -149.746, 15.8998, 0.55 ) }
    dend_27 { pt3dadd( 12.8451, -152.882, 16.6545, 0.55 ) }
    dend_27 { pt3dadd( 13.6401, -161.689, 18.5721, 0.55 ) }
    dend_27 { pt3dadd( 13.9997, -164.674, 19.1054, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 14.2761, -166.777, 19.3773, 0.55 ) }
    dend_27 { pt3dadd( 14.6384, -169.174, 19.499, 0.55 ) }
    dend_27 { pt3dadd( 14.9102, -171.026, 19.4247, 0.55 ) }
    dend_27 { pt3dadd( 15.6985, -175.345, 19.0903, 0.55 ) }
    dend_27 { pt3dadd( 16.1831, -178.628, 18.8163, 0.55 ) }
    dend_27 { pt3dadd( 16.5505, -180.783, 18.7079, 0.55 ) }
    dend_27 { pt3dadd( 17.4443, -186.377, 18.7104, 0.55 ) }
    dend_27 { pt3dadd( 17.9986, -190.141, 18.8755, 0.55 ) }
    dend_27 { pt3dadd( 18.6995, -195.0, 19.364, 0.55 ) }
    dend_27 { pt3dadd( 19.5091, -200.517, 20.3514, 0.55 ) }
    dend_27 { pt3dadd( 20.1845, -204.197, 21.2598, 0.55 ) }
    dend_27 { pt3dadd( 20.6283, -206.371, 21.8616, 0.55 ) }
    dend_27 { pt3dadd( 21.0011, -208.377, 22.4058, 0.55 ) }
    dend_27 { pt3dadd( 21.532, -210.912, 22.981, 0.55 ) }
    dend_27 { pt3dadd( 22.7943, -217.019, 23.9443, 0.55 ) }
    dend_27 { pt3dadd( 23.3745, -219.377, 24.2398, 0.55 ) }
    dend_27 { pt3dadd( 23.96, -222.006, 24.5427, 0.55 ) }
    dend_27 { pt3dadd( 24.8094, -225.954, 24.9727, 0.55 ) }
    dend_27 { pt3dadd( 25.3171, -228.997, 25.3139, 0.55 ) }
    dend_27 { pt3dadd( 25.6372, -231.894, 25.5789, 0.55 ) }
    dend_27 { pt3dadd( 25.8196, -234.663, 25.8161, 0.55 ) }
    dend_27 { pt3dadd( 25.9466, -237.367, 26.0806, 0.55 ) }
    dend_27 { pt3dadd( 26.0511, -239.291, 26.2513, 0.55 ) }
    dend_27 { pt3dadd( 26.2561, -242.436, 26.4248, 0.55 ) }
    dend_27 { pt3dadd( 26.4886, -246.209, 26.3394, 0.55 ) }
    dend_27 { pt3dadd( 26.6676, -248.036, 26.1663, 0.55 ) }
    dend_27 { pt3dadd( 26.859, -249.638, 25.8948, 0.55 ) }
    dend_27 { pt3dadd( 27.3841, -252.649, 25.2202, 0.55 ) }
    dend_27 { pt3dadd( 27.7048, -254.557, 24.7362, 0.55 ) }
    dend_27 { pt3dadd( 28.1145, -256.91, 24.2332, 0.55 ) }
    dend_27 { pt3dadd( 28.3255, -258.57, 23.9727, 0.55 ) }
    dend_27 { pt3dadd( 28.7727, -262.89, 23.455, 0.55 ) }
    dend_27 { pt3dadd( 28.9956, -266.134, 23.2898, 0.55 ) }
    dend_27 { pt3dadd( 29.1999, -271.167, 23.4351, 0.55 ) }
    dend_27 { pt3dadd( 29.3593, -274.418, 23.8442, 0.55 ) }
    dend_27 { pt3dadd( 29.4851, -277.835, 24.381, 0.28 ) }
    dend_27 { pt3dadd( 29.4939, -279.211, 24.6485, 0.28 ) }
    dend_27 { pt3dadd( 29.4576, -282.558, 25.5974, 0.28 ) }
    dend_27 { pt3dadd( 29.3616, -285.655, 26.7139, 0.28 ) }
    dend_27 { pt3dadd( 29.5493, -289.741, 28.6588, 0.28 ) }
    dend_27 { pt3dadd( 31.4882, -298.828, 30.8636, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 11.8921, -140.848, 13.5216, 0.55 ) }
    dend_26 { pt3dadd( 13.3493, -141.405, 14.5065, 0.55 ) }
    dend_26 { pt3dadd( 16.2506, -142.845, 16.7522, 0.55 ) }
    dend_26 { pt3dadd( 18.7084, -144.27, 18.8012, 0.28 ) }
    dend_26 { pt3dadd( 21.3081, -145.894, 21.0839, 0.55 ) }
    dend_26 { pt3dadd( 22.7687, -146.934, 22.6939, 0.28 ) }
    dend_26 { pt3dadd( 25.1695, -148.813, 25.7613, 0.55 ) }
    dend_26 { pt3dadd( 25.9993, -149.816, 27.3964, 0.28 ) }
    dend_26 { pt3dadd( 26.2558, -150.18, 28.071, 0.28 ) }
    dend_26 { pt3dadd( 26.6919, -150.699, 29.2484, 0.55 ) }
    dend_26 { pt3dadd( 28.5389, -152.393, 33.5965, 0.28 ) }
    dend_26 { pt3dadd( 29.3588, -153.052, 35.3941, 0.55 ) }
    dend_26 { pt3dadd( 32.1354, -154.955, 40.3624, 0.28 ) }
    dend_26 { pt3dadd( 33.7436, -155.887, 42.902, 0.28 ) }
    dend_26 { pt3dadd( 35.8511, -157.082, 45.9032, 0.55 ) }
    dend_26 { pt3dadd( 39.2089, -158.935, 50.0075, 0.28 ) }
    dend_26 { pt3dadd( 39.6988, -159.179, 50.5028, 0.55 ) }
    dend_26 { pt3dadd( 42.2171, -160.368, 52.753, 0.28 ) }
    dend_26 { pt3dadd( 42.4608, -160.478, 52.9294, 0.55 ) }
    dend_26 { pt3dadd( 44.5818, -161.795, 54.5516, 0.28 ) }
    dend_26 { pt3dadd( 45.5587, -162.517, 55.3881, 0.55 ) }
    dend_26 { pt3dadd( 53.5395, -167.846, 62.3517, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -28.5613, -111.961, 55.9529, 0.55 ) }
    dend_22 { pt3dadd( -31.6102, -116.417, 64.7013, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -28.5613, -111.961, 55.9529, 0.55 ) }
    dend_21 { pt3dadd( -34.1613, -119.051, 60.7059, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_0 nseg = 11
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 15
    dend_48 nseg = 5
    dend_45 nseg = 7
    dend_42 nseg = 9
    dend_35 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 11
    dend_12 nseg = 5
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 3
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 5
    dend_20 nseg = 3
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L6_BP_82b6294190_0_0


