// Cell: bSTUT213_L6_DBC_ed383a5814_0_0
/*
{
  "id" : "bSTUT213_L6_DBC_ed383a5814_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.20498, -9.63696, 0.0, 2.93949", "1.97921, -8.62937, 0.0, 5.10114", "1.75343, -7.62179, 0.0, 6.34149", "1.52766, -6.61421, 0.0, 7.24948", "1.30189, -5.60662, 0.0, 8.32859", "1.07612, -4.59904, 0.0, 9.63098", "0.850343, -3.59146, 0.0, 10.5761", "0.624571, -2.58388, 0.0, 11.2008", "0.398798, -1.57629, 0.0, 11.5851", "0.173026, -0.56871, 0.0, 11.8715", "-0.0527468, 0.438873, 0.0, 11.942", "-0.278519, 1.44646, 0.0, 11.923", "-0.504292, 2.45404, 0.0, 11.4797", "-0.730064, 3.46162, 0.0, 10.9001", "-0.955837, 4.4692, 0.0, 10.1322", "-1.18161, 5.47679, 0.0, 9.32117", "-1.40738, 6.48437, 0.0, 8.43955", "-1.63315, 7.49195, 0.0, 7.43264", "-1.85893, 8.49954, 0.0, 6.41765", "-2.0847, 9.50712, 0.0, 5.2256", "-2.31047, 10.5147, 0.0, 2.87927" ]
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.67666, -9.94541, 7.1, 4.35", "1.67666, -9.94541, 7.1, 4.35", "2.2055, -11.1196, 7.85913, 3.32", "3.16371, -12.9498, 9.36126, 2.36", "4.18725, -14.9048, 10.9658, 2.88", "4.28438, -15.0903, 11.1181, 2.65", "5.02405, -16.5031, 12.2776, 1.62", "6.03038, -18.2831, 13.9154, 1.84", "7.03734, -19.7737, 15.6772, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015763654744
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.96334, 10.5443, 0.0, 4.28", "-1.96334, 10.5443, 0.0, 4.28", "-2.5723, 11.7423, -0.120182, 3.32", "-3.00414, 12.5879, -0.262977, 2.88", "-3.31702, 13.2023, -0.380322, 2.88", "-3.78428, 14.1198, -0.555573, 3.47", "-4.39515, 15.3193, -0.784686, 2.51", "-5.12145, 16.7229, -1.08131, 2.8", "-5.76519, 17.9253, -1.38917, 4.13", "-6.06898, 18.4829, -1.55562, 4.13" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015763654744
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.31047, 10.5147, 0.0, 0.592839", "-5.59024, 25.1517, 0.0, 0.592839", "-8.87001, 39.7888, 0.0, 0.592839" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "7.03734, -19.7737, 15.6772, 1.4", "8.35542, -20.6274, 14.6494, 1.4", "10.1077, -21.8049, 13.331, 1.4", "11.292, -22.6062, 12.4952, 1.4", "12.7687, -23.6331, 11.5578, 1.4", "14.0562, -24.5431, 10.7847, 1.18", "15.6883, -25.693, 9.87933, 1.4", "16.4276, -26.2376, 9.50704, 1.55", "17.1511, -26.7802, 9.20387, 1.7", "18.7246, -27.9538, 8.61954, 1.18", "19.9504, -28.8464, 8.25332, 1.18", "21.0479, -29.6333, 7.98711, 1.84", "21.6852, -30.0957, 7.88746, 1.84" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "7.03734, -19.7737, 15.6772, 1.18", "6.77456, -20.4412, 16.6661, 1.18", "6.18278, -22.0871, 19.0257, 1.03", "5.85249, -23.2989, 20.7532, 1.03", "5.73893, -23.9845, 21.7697, 0.96", "5.73236, -24.5553, 22.6808, 0.96", "5.79542, -25.2777, 23.9397, 1.11", "5.94752, -25.9683, 25.3024, 1.03", "6.16489, -26.7244, 26.9422, 1.18", "6.43979, -27.6521, 29.1473, 1.84", "6.72691, -28.7099, 31.9158, 1.18", "6.85175, -29.5101, 34.1271, 1.18", "6.79148, -30.0822, 35.8082, 1.18", "6.41523, -30.6825, 37.6431, 1.33", "5.75146, -31.1642, 39.1621, 1.33", "5.19305, -31.4225, 39.9935, 1.33", "4.17798, -31.788, 41.2664, 1.4", "3.18756, -32.1139, 42.5842, 1.47", "1.8749, -32.5514, 44.7097, 1.33", "0.952033, -32.9014, 46.7413, 1.33", "0.336203, -33.1956, 48.5029, 1.4", "-0.397348, -33.6328, 51.3444, 1.4", "-0.973069, -34.0771, 54.3528, 1.4", "-1.3515, -34.4933, 56.7906, 1.4", "-1.78124, -35.0716, 59.6525, 1.4", "-2.02868, -35.3935, 60.8578, 1.11", "-2.83777, -36.3166, 63.5596, 1.11", "-3.87545, -37.334, 66.0111, 1.25", "-4.50984, -37.9073, 67.2163, 1.55", "-5.70319, -38.9021, 69.0922, 1.55", "-7.17625, -40.0792, 71.1057, 1.25", "-8.87184, -41.3807, 73.2738, 1.25", "-10.9295, -42.9717, 75.5529, 1.62" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-6.06898, 18.4829, -1.55562, 2.88", "-7.26697, 20.2849, -3.24118, 2.88", "-8.13467, 21.5901, -4.46204, 2.88", "-9.00529, 22.8996, -5.687, 3.47" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.06898, 18.4829, -1.55562, 2.06", "-5.38673, 20.6484, -0.407683, 2.06", "-4.77381, 22.6207, 0.469379, 0.96", "-4.48854, 23.5059, 0.815249, 0.96", "-4.07544, 24.7773, 1.24002, 0.81", "-3.73356, 25.792, 1.52851, 0.81", "-3.26496, 27.1415, 1.86382, 1.03", "-2.96632, 28.0063, 1.96654, 1.11", "-2.62311, 28.968, 1.99624, 1.55", "-2.18676, 30.2314, 1.99644, 1.18", "-1.80092, 31.4399, 1.97015, 0.88", "-1.60624, 32.1385, 1.94943, 0.74", "-1.33715, 33.3331, 1.90374, 1.18", "-1.08279, 34.6709, 1.8831, 0.81", "-0.814308, 36.2693, 1.88308, 0.96", "-0.584477, 37.6728, 1.87743, 1.25", "-0.381215, 38.9006, 1.86756, 1.25", "-0.156584, 40.046, 1.85009, 0.66", "0.147046, 41.2359, 1.82124, 0.88", "0.523524, 42.2945, 1.74383, 0.52", "0.964358, 43.2859, 1.62042, 0.96", "1.27684, 43.9095, 1.51545, 0.96", "1.92421, 45.0868, 1.30508, 0.74", "2.47355, 46.0145, 1.13059, 0.88", "3.16045, 47.1491, 0.910212, 0.88", "3.93096, 48.4533, 0.740261, 0.96", "4.16885, 48.8607, 0.715023, 0.96", "4.8091, 49.9865, 0.727691, 0.96", "5.09616, 50.5043, 0.784905, 1.11", "5.44879, 51.157, 0.905366, 0.96", "6.11616, 52.3113, 1.22435, 0.81", "6.70683, 53.2734, 1.55517, 0.66", "7.48307, 54.5327, 2.01354, 0.59", "8.15295, 55.6081, 2.48466, 0.88", "8.79143, 56.6267, 2.95978, 1.4", "9.74321, 58.1026, 3.70165, 0.88", "10.5604, 59.3097, 4.3586, 0.74", "11.0134, 59.973, 4.74981, 0.74", "12.163, 61.5445, 5.71367, 0.74" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-8.87001, 39.7888, 0.0, 0.158857", "-12.1498, 54.4258, 0.0, 0.158857", "-15.4296, 69.0629, 0.0, 0.158857" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "21.6852, -30.0957, 7.88746, 1.7", "22.8126, -29.99, 9.5204, 1.7", "23.7659, -30.0014, 10.9585, 1.25", "24.4987, -30.0805, 12.0985, 1.25", "25.2338, -30.2254, 13.2306, 1.55", "26.1619, -30.474, 14.6287, 1.4", "27.0367, -30.7473, 15.9141, 1.62", "27.903, -31.0965, 17.1123, 1.55", "28.9142, -31.5504, 18.4684, 1.4", "29.7774, -31.9546, 19.571, 1.47", "31.0289, -32.5554, 21.0859, 1.18", "32.2237, -33.1096, 22.4249, 1.18", "33.5426, -33.6887, 23.7822, 1.03", "34.6554, -34.1365, 24.823, 1.03", "35.13, -34.3035, 25.2241, 1.25", "36.3297, -34.6623, 26.1677, 1.11", "37.3682, -34.9157, 27.0099, 1.33", "38.0222, -35.0464, 27.5432, 1.62", "39.5227, -35.316, 28.7666, 1.33", "40.9978, -35.5446, 29.9814, 1.25", "42.2594, -35.6951, 31.0516, 1.18", "44.411, -35.8583, 32.9313, 1.47", "45.0237, -35.8887, 33.4983, 1.47" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "21.6852, -30.0957, 7.88746, 0.88", "21.9313, -31.4831, 8.93868, 0.88", "22.1162, -33.5308, 10.6267, 0.74", "22.1913, -35.6216, 12.4897, 0.74", "22.1915, -37.2577, 13.9308, 0.74", "22.1328, -39.0183, 15.4348, 0.96", "22.0239, -40.7816, 16.8814, 1.7", "21.6829, -43.4234, 19.0388, 0.66", "21.3139, -45.2776, 20.4269, 0.74", "20.9657, -46.7085, 21.2668, 0.88", "20.5978, -48.0551, 21.8087, 1.11", "20.1344, -49.7248, 22.1905, 1.33", "19.5316, -52.0236, 22.4147, 0.74", "19.0432, -54.198, 22.4108, 0.74", "18.7505, -55.7416, 22.2923, 0.59", "18.3265, -58.4618, 22.0136, 0.88", "18.0416, -60.8264, 21.7467, 0.59", "17.9187, -62.0758, 21.5894, 0.59", "17.761, -64.3492, 21.3091, 0.81", "17.622, -67.2457, 21.0452, 0.74", "17.5694, -68.6992, 20.9147, 0.59", "17.5493, -70.5853, 20.8024, 0.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-10.9295, -42.9717, 75.5529, 0.52", "-11.2277, -42.5286, 78.4504, 0.52", "-11.3198, -42.295, 79.8794, 0.52", "-11.3732, -42.1003, 81.0026, 0.52", "-11.4046, -41.9489, 81.9242, 0.52", "-11.461, -41.7004, 83.3164, 0.52", "-11.5101, -41.5126, 84.3026, 0.52", "-11.57, -41.3004, 85.206, 0.52", "-11.6815, -40.9484, 86.5818, 0.52", "-11.8711, -40.456, 88.2856, 0.52", "-12.0475, -40.0797, 89.4409, 0.81", "-12.2531, -39.6728, 90.4823, 0.81", "-12.4285, -39.2931, 91.2999, 0.59", "-12.7789, -38.4209, 92.9699, 0.59", "-12.9945, -37.6946, 94.2043, 0.52", "-13.1443, -36.9952, 95.2458, 0.37", "-13.2681, -35.9989, 96.6597, 0.44", "-13.3208, -34.9544, 98.0223, 0.29", "-13.3014, -34.0693, 99.1414, 0.29", "-13.2294, -32.9433, 100.423, 0.29", "-13.1451, -32.0227, 101.437, 0.29", "-12.9995, -30.6474, 102.902, 0.29", "-12.9165, -29.9267, 103.664, 0.29", "-12.749, -28.3962, 105.277, 0.29", "-12.6443, -27.3891, 106.318, 0.22", "-12.4908, -25.7581, 108.022, 0.22", "-12.4207, -25.0266, 108.81, 0.22", "-12.3246, -23.7636, 110.153, 0.22", "-12.2348, -22.3277, 111.764, 0.15" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-10.9295, -42.9717, 75.5529, 1.03", "-10.9808, -43.9887, 75.5668, 1.03", "-11.0652, -45.4109, 75.7498, 0.74", "-11.1465, -47.088, 76.0416, 0.74", "-11.1957, -48.4262, 76.2921, 0.88", "-11.2304, -50.2307, 76.5712, 0.96", "-11.2331, -51.1566, 76.692, 0.96", "-11.1769, -53.6667, 76.9862, 1.03", "-11.1084, -55.3449, 77.1613, 0.66", "-11.0222, -56.6895, 77.2951, 0.52", "-10.8495, -58.3999, 77.445, 0.66", "-10.6393, -59.8301, 77.5411, 0.96", "-10.4105, -61.3476, 77.5951, 1.11", "-10.3136, -61.9363, 77.5913, 1.11", "-10.0369, -63.4517, 77.6174, 0.66", "-9.86106, -64.368, 77.6547, 0.66", "-9.60714, -65.6569, 77.7357, 0.66", "-9.30934, -67.2039, 77.8972, 0.88", "-8.99752, -68.9194, 78.1589, 0.81", "-8.67435, -70.8821, 78.587, 0.74", "-8.42056, -72.6612, 79.0613, 0.66", "-8.21481, -74.3583, 79.6021, 0.52", "-7.97361, -76.6102, 80.4002, 0.52", "-7.84502, -77.9115, 80.928, 0.52", "-7.73905, -79.6905, 81.6891, 0.52", "-7.69763, -80.8688, 82.1942, 0.66", "-7.65723, -82.1673, 82.7282, 0.96", "-7.58458, -84.0145, 83.4249, 1.03", "-7.46873, -85.9669, 84.0091, 0.74", "-7.32524, -87.7829, 84.4492, 0.44", "-7.20904, -88.9401, 84.6754, 0.22", "-7.14715, -89.4615, 84.7679, 0.22", "-6.95764, -90.7628, 84.9593, 0.52", "-6.66666, -92.3377, 85.0808, 0.52", "-6.22372, -94.2384, 85.0853, 0.22", "-5.95596, -95.2261, 85.1043, 0.22", "-5.58449, -96.5484, 85.1919, 0.66", "-5.03596, -98.411, 85.3773, 0.66", "-4.4647, -100.218, 85.6037, 0.37", "-3.99876, -101.597, 85.873, 0.22", "-3.23491, -103.864, 86.4391, 0.29", "-2.75551, -105.354, 86.7105, 0.29", "-2.52262, -106.111, 86.8033, 0.66", "-2.16019, -107.31, 86.8727, 0.96", "-1.58931, -109.243, 86.8729, 0.96", "-1.07933, -110.94, 86.7163, 0.37", "-0.0542539, -114.385, 86.1407, 0.44", "0.223715, -115.394, 85.959, 0.44", "0.71536, -117.365, 85.6761, 0.52", "1.14739, -119.26, 85.4726, 0.44", "1.43576, -120.621, 85.3876, 0.44", "1.83433, -122.62, 85.4135, 0.44", "2.24607, -124.849, 85.693, 0.44", "2.54577, -126.642, 85.9769, 0.44", "2.73465, -127.963, 86.2218, 0.44", "2.9049, -129.22, 86.4748, 0.44", "3.04005, -130.578, 86.7668, 0.52", "3.14408, -132.244, 87.1266, 0.52", "3.17985, -133.247, 87.3286, 0.52", "3.19392, -135.5, 87.7036, 0.22", "3.20138, -137.342, 87.9591, 0.22", "3.20927, -139.0, 88.1426, 0.22", "3.21963, -140.726, 88.2855, 0.29", "3.26349, -142.337, 88.3284, 0.29", "3.35899, -144.205, 88.4691, 0.29", "3.54392, -146.563, 88.7439, 0.22", "3.64149, -147.491, 88.8809, 0.29", "3.88027, -149.23, 89.1731, 0.37", "4.19761, -151.269, 89.5575, 0.37", "4.73987, -154.661, 90.1476, 0.22", "4.92123, -155.737, 90.3167, 0.22", "5.12397, -156.986, 90.4816, 0.37", "5.34667, -158.396, 90.6187, 0.37", "5.72455, -160.818, 90.806, 0.29", "5.96179, -162.438, 90.8959, 0.22", "6.1501, -163.741, 90.8968, 0.22", "6.33825, -165.163, 90.9841, 0.29", "6.54823, -167.014, 91.2049, 0.29", "6.68412, -168.585, 91.5632, 0.29", "6.75649, -169.746, 91.8932, 0.29", "6.86881, -171.901, 92.6394, 0.15", "6.94716, -173.995, 93.4533, 0.15", "6.9786, -174.962, 93.8813, 0.37", "7.06614, -177.524, 95.185, 0.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-9.00529, 22.8996, -5.687, 2.8", "-9.78599, 23.1169, -6.64018, 2.8" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-9.00529, 22.8996, -5.687, 1.77", "-8.70323, 24.4265, -6.92764, 1.77", "-8.36412, 26.5031, -8.70622, 1.4", "-8.13519, 28.1287, -10.1136, 1.4", "-8.00208, 29.1717, -11.0416, 1.7", "-7.85387, 30.5364, -12.2974, 1.84", "-7.69931, 32.1362, -13.7839, 1.84", "-7.60317, 33.6151, -15.2278, 1.4", "-7.52194, 35.1838, -16.73, 1.84", "-7.44706, 37.0332, -18.3896, 1.62", "-7.38557, 39.265, -20.2398, 1.77", "-7.39657, 40.516, -21.1469, 1.77", "-7.49996, 42.513, -22.4449, 1.62", "-7.62094, 43.774, -23.182, 1.62", "-7.91718, 45.8387, -24.2948, 1.47", "-8.18081, 47.2396, -24.9831, 1.47", "-8.73196, 49.8216, -26.201, 1.4", "-9.16424, 51.7909, -27.1514, 1.47", "-9.53485, 53.6174, -28.0856, 1.55", "-9.69934, 54.6856, -28.6968, 1.55", "-9.85731, 56.6264, -29.8932, 1.25", "-9.84668, 58.5359, -31.0978, 1.25", "-9.68798, 60.0797, -32.0465, 1.4", "-9.40606, 61.7077, -32.9711, 1.25", "-8.97928, 63.6326, -33.9239, 1.25", "-8.67417, 65.0059, -34.4786, 1.25", "-8.31911, 66.6428, -35.0813, 1.47", "-8.16339, 67.5902, -35.3862, 1.62", "-8.07204, 68.7834, -35.7154, 1.33", "-8.12939, 71.3689, -36.3065, 1.11", "-8.31829, 72.9366, -36.6744, 1.11", "-8.62685, 74.7868, -37.1487, 1.25", "-8.84765, 75.8225, -37.4479, 1.47", "-9.25454, 77.4406, -37.9575, 1.4", "-9.70405, 78.9307, -38.4696, 1.25", "-10.5251, 80.9544, -39.2046, 1.47" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.163, 61.5445, 5.71367, 0.15", "10.5696, 62.1345, 9.21063, 0.15", "9.83181, 62.4774, 10.8627, 0.15", "9.39181, 62.7554, 11.8701, 0.29", "8.31296, 63.6873, 14.4919, 0.22", "7.46648, 64.6028, 16.683, 0.22", "6.8141, 65.4795, 18.46, 0.37", "6.70395, 65.6728, 18.8018, 0.81", "6.4421, 66.4035, 19.7399, 0.15", "6.1927, 67.5451, 20.8674, 0.22", "6.134, 68.0177, 21.2556, 0.59", "6.03629, 68.897, 21.9855, 1.03", "5.75713, 70.4858, 23.41, 0.15", "5.58496, 71.0656, 24.0357, 0.29", "5.01541, 72.2805, 25.6924, 0.22", "4.22366, 73.5119, 27.6607, 0.37", "3.68387, 74.1768, 28.894, 0.37", "3.19969, 74.6409, 29.9623, 0.44", "2.278, 75.337, 31.8894, 0.37", "1.31072, 75.9931, 33.8659, 0.37", "0.654554, 76.3827, 35.1227, 0.37", "-0.214139, 76.8516, 36.7192, 0.37", "-1.51689, 77.5571, 39.1988, 0.37", "-2.8383, 78.3293, 41.9409, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "12.163, 61.5445, 5.71367, 0.96", "14.0906, 63.6033, 4.94749, 0.96", "14.7324, 64.3135, 4.7498, 0.88", "15.8691, 65.5827, 4.48048, 0.74", "17.1269, 67.0253, 4.25884, 0.96", "18.2707, 68.3487, 4.04361, 0.81", "19.2873, 69.5423, 3.83588, 0.44", "20.2415, 70.7763, 3.66872, 0.44", "20.9459, 71.7413, 3.48496, 0.66", "22.0701, 73.3755, 3.10713, 0.52", "22.9727, 74.7506, 2.72885, 0.74", "23.7322, 75.926, 2.32987, 1.11", "24.4241, 77.0754, 1.90588, 0.66", "25.4044, 78.7878, 1.27396, 0.66", "26.0441, 79.9371, 0.870444, 0.66", "26.8584, 81.4114, 0.435252, 0.81", "27.4424, 82.4708, 0.219764, 0.59", "28.3526, 84.0567, -0.0570109, 0.52", "29.0199, 85.215, -0.240407, 0.52", "29.4256, 85.92, -0.329146, 0.52", "30.2022, 87.3261, -0.454709, 0.66", "30.8593, 88.5352, -0.497944, 0.88", "31.7256, 90.0463, -0.504032, 1.03", "32.6623, 91.5813, -0.456693, 0.52", "33.4546, 92.8729, -0.378822, 0.29", "34.2044, 94.0714, -0.264013, 0.29", "35.0464, 95.4795, -0.00505221, 0.52", "35.8849, 96.9223, 0.398736, 0.22", "36.3171, 97.6968, 0.679217, 0.15", "36.8232, 98.6568, 1.03719, 0.66", "37.3693, 99.9387, 1.50157, 0.29", "37.8787, 101.648, 2.13133, 0.52", "38.0526, 102.524, 2.47123, 1.03", "38.2623, 103.854, 3.01688, 0.37", "38.4812, 105.006, 3.44795, 0.44", "38.9724, 106.986, 4.044, 0.59", "39.5486, 108.963, 4.43662, 0.88", "39.9365, 110.112, 4.53614, 0.88", "40.305, 111.133, 4.55799, 0.66", "41.2282, 113.311, 4.38224, 0.29", "42.021, 114.899, 4.0744, 0.66", "42.7048, 116.112, 3.70371, 0.44", "43.1557, 116.913, 3.4147, 0.44", "43.8195, 118.226, 2.9665, 0.22", "44.4312, 119.603, 2.57308, 0.22", "44.8276, 120.658, 2.43264, 0.66", "45.1294, 121.512, 2.41541, 0.88", "45.636, 122.972, 2.50867, 0.52", "46.0103, 124.147, 2.72834, 0.52", "46.4448, 125.735, 3.22995, 0.52", "46.9798, 128.002, 4.16125, 0.52", "47.2402, 129.157, 4.71586, 0.96", "47.5909, 130.633, 5.51427, 0.66", "48.0753, 132.39, 6.54834, 0.22", "48.3547, 133.289, 7.08843, 0.22", "48.6989, 134.26, 7.63117, 0.29", "49.252, 135.565, 8.23106, 0.37", "50.0602, 137.102, 8.79857, 0.52", "50.7593, 138.155, 9.09027, 0.81", "51.4348, 138.989, 9.19438, 0.81", "52.733, 140.408, 9.19552, 0.22", "53.635, 141.359, 9.19315, 0.59", "54.9666, 142.737, 9.16409, 0.59", "56.0625, 143.873, 9.14361, 0.22", "57.4333, 145.385, 9.1709, 0.15", "58.3906, 146.578, 9.23525, 0.15", "59.8576, 148.841, 9.64307, 0.59", "60.302, 149.712, 9.89816, 0.59", "60.7841, 150.909, 10.3351, 0.59", "61.1717, 152.026, 10.7637, 0.29", "61.5893, 153.305, 11.2765, 0.22", "62.428, 155.638, 12.1257, 0.22", "62.7204, 156.322, 12.3024, 0.22", "63.2811, 157.51, 12.5718, 0.52", "63.9717, 158.86, 12.8238, 0.59", "64.4253, 159.69, 12.9347, 0.59", "65.3011, 161.22, 13.1135, 0.29", "65.9051, 162.29, 13.1915, 0.29", "66.6335, 163.744, 13.3147, 0.37", "67.043, 164.714, 13.4056, 0.29", "67.404, 165.898, 13.5951, 0.44", "67.8658, 167.884, 13.9927, 0.44", "68.1469, 169.304, 14.3028, 0.66", "68.4017, 170.627, 14.6127, 0.88", "68.7408, 172.375, 15.0082, 0.66", "69.5014, 175.628, 15.7265, 0.37", "69.9521, 177.235, 16.1206, 0.22", "70.4306, 178.679, 16.4338, 0.52", "70.8095, 179.609, 16.6225, 0.59", "71.4459, 180.876, 16.8137, 0.29", "72.1418, 182.116, 16.9877, 0.22", "73.4388, 184.339, 17.2638, 0.15", "74.3891, 186.108, 17.5724, 0.37", "74.9364, 187.248, 17.8106, 0.37", "75.4836, 188.535, 18.0803, 0.37", "76.5899, 191.291, 18.6496, 0.81", "77.1354, 192.744, 18.9484, 0.96", "77.5573, 193.894, 19.1674, 0.52", "78.0147, 195.278, 19.495, 0.22", "78.5484, 197.075, 19.914, 0.29", "79.0827, 198.898, 20.2927, 0.22", "79.5442, 200.383, 20.5247, 0.74", "80.2187, 202.552, 20.8628, 0.29", "80.9327, 204.943, 21.3112, 0.52", "81.3127, 206.23, 21.5947, 0.59", "81.7357, 207.724, 21.9531, 0.29", "82.0199, 208.814, 22.1749, 0.29", "82.3373, 210.152, 22.4521, 0.29", "82.6236, 211.493, 22.8129, 0.66", "82.8355, 212.473, 23.1272, 0.96", "83.0407, 213.595, 23.625, 0.37", "83.2849, 215.259, 24.4846, 0.29", "83.48, 217.3, 25.5579, 0.37", "83.5819, 219.166, 26.528, 0.66", "83.6249, 220.279, 27.0799, 0.44", "83.7106, 222.317, 28.0482, 0.88", "83.778, 223.57, 28.6076, 1.11", "83.9105, 225.928, 29.5571, 0.22", "84.0018, 227.075, 29.8662, 0.22", "84.1026, 228.235, 30.0694, 0.15", "84.1926, 229.565, 30.2089, 0.15", "84.2525, 230.533, 30.2511, 0.15", "84.3238, 232.087, 30.3274, 0.37", "84.4089, 233.647, 30.4168, 0.37", "84.4528, 234.608, 30.4842, 0.22", "84.5211, 236.029, 30.5938, 0.44", "84.5671, 236.795, 30.6504, 0.44", "84.6647, 237.885, 30.723, 0.44", "84.8068, 238.835, 30.7518, 0.66", "85.0239, 239.885, 30.8166, 0.37", "85.3476, 241.07, 30.9153, 0.37", "85.7949, 242.329, 31.0446, 0.22", "86.0165, 242.876, 31.099, 0.22", "86.612, 244.283, 31.2275, 0.22", "87.4272, 246.106, 31.3155, 0.52", "87.9122, 247.164, 31.3269, 0.96", "88.2643, 247.943, 31.3061, 0.96", "88.9492, 249.491, 31.2124, 0.22", "89.4662, 250.737, 31.0815, 0.29", "90.0684, 252.292, 30.8067, 0.29", "90.4011, 253.201, 30.5714, 0.81", "90.6821, 254.0, 30.346, 0.52", "91.1218, 255.298, 29.9346, 0.37", "91.4311, 256.188, 29.5443, 0.37", "91.817, 257.32, 28.9754, 0.74", "92.0996, 258.179, 28.5334, 0.74", "92.4645, 259.241, 27.9475, 0.29", "92.8228, 260.287, 27.3591, 0.37", "93.6006, 262.611, 26.0905, 0.37", "93.9897, 263.735, 25.4817, 0.52", "94.3129, 264.614, 25.0515, 0.52", "94.6343, 265.3, 24.7344, 0.52", "95.1777, 266.288, 24.4173, 0.59", "95.7689, 267.268, 24.2405, 0.22", "96.7829, 268.866, 24.2258, 0.44", "97.6945, 270.159, 24.3261, 0.52", "99.2056, 272.18, 24.7403, 0.29", "100.602, 273.94, 25.4389, 0.44", "101.413, 274.948, 26.0853, 0.44", "102.365, 276.225, 27.2684, 0.44", "102.934, 277.098, 28.2359, 0.44", "103.502, 278.18, 29.5522, 0.44", "104.049, 279.504, 31.2295, 0.22", "104.469, 280.715, 32.7402, 0.74", "104.853, 282.158, 34.4326, 0.74", "105.042, 283.208, 35.4928, 0.59", "105.202, 284.723, 36.8141, 0.22", "105.249, 285.361, 37.2696, 0.15", "105.296, 286.609, 37.9496, 0.29", "105.325, 288.073, 38.5497, 0.29", "105.328, 289.53, 38.9907, 0.29", "105.303, 290.379, 39.2218, 0.52", "105.271, 291.327, 39.4228, 0.88", "105.185, 292.963, 39.714, 0.52", "105.145, 294.06, 39.7671, 0.52", "105.113, 295.217, 39.6825, 0.22", "105.044, 296.493, 39.5318, 0.22", "104.988, 297.344, 39.4197, 0.52", "104.941, 298.021, 39.3188, 0.81", "104.762, 300.711, 38.8616, 0.22", "104.651, 302.025, 38.6178, 0.22", "104.413, 304.378, 38.1618, 0.22", "104.37, 304.845, 38.0472, 0.37", "104.3, 305.723, 37.8354, 0.96", "104.278, 306.072, 37.7601, 0.96", "104.21, 307.533, 37.5103, 0.22", "104.209, 307.928, 37.4384, 0.22", "104.277, 309.397, 37.1475, 0.37", "104.331, 310.342, 37.0474, 0.88", "104.481, 312.274, 36.9817, 0.22", "104.577, 313.145, 37.0051, 0.37", "104.814, 314.974, 37.1811, 0.66", "104.977, 316.402, 37.4395, 0.22", "105.131, 318.03, 37.8624, 0.66", "105.198, 318.89, 38.1336, 0.66", "105.264, 320.2, 38.6686, 0.44", "105.26, 320.873, 39.0077, 0.59", "105.183, 322.387, 39.9034, 0.15", "105.109, 323.009, 40.3565, 0.37", "105.019, 323.555, 40.7975, 0.37", "104.767, 324.743, 41.8346, 0.15", "104.556, 325.634, 42.6415, 0.15", "104.478, 326.125, 43.0384, 0.29", "104.403, 327.14, 43.7912, 0.29", "104.389, 328.546, 44.6986, 0.22", "104.439, 329.75, 45.3104, 0.66", "104.456, 330.033, 45.4205, 0.66", "104.46, 331.802, 46.0738, 0.15", "104.37, 333.174, 46.5573, 0.15", "104.193, 334.245, 46.9505, 0.37", "104.01, 334.965, 47.2862, 0.37", "103.667, 336.156, 47.8395, 0.22", "103.082, 338.039, 48.6683, 0.22", "102.792, 338.989, 49.0587, 0.37", "102.111, 341.526, 49.9286, 0.15", "101.583, 343.863, 50.5333, 0.15", "101.099, 346.72, 51.0507, 0.15", "100.933, 348.289, 51.211, 0.15", "100.875, 350.554, 51.2896, 0.15", "101.041, 352.383, 51.2965, 0.15", "101.711, 355.048, 51.1914, 0.15", "102.28, 356.349, 51.0926, 0.15", "102.935, 357.347, 51.0391, 0.15", "103.856, 358.374, 51.0187, 0.37", "106.168, 360.314, 51.0765, 0.15", "107.523, 361.211, 51.1834, 0.15", "109.128, 362.104, 51.4464, 0.15", "109.718, 362.412, 51.563, 0.59", "110.879, 363.017, 51.8836, 0.29", "111.751, 363.51, 52.2279, 0.15", "112.191, 363.824, 52.4781, 0.29", "113.192, 364.731, 53.1995, 0.88", "113.754, 365.437, 53.7975, 0.22", "114.418, 366.714, 54.8753, 0.22", "114.607, 367.397, 55.4928, 0.22", "114.794, 368.683, 56.7474, 0.29", "114.837, 369.583, 57.6685, 0.15", "114.781, 371.413, 59.591, 0.66", "114.615, 373.169, 61.4553, 0.37", "114.292, 375.13, 63.5687, 0.15", "114.015, 376.44, 64.9203, 0.15", "113.716, 377.581, 66.0019, 0.15", "113.578, 378.09, 66.3917, 0.15", "113.33, 379.11, 66.9101, 0.52", "113.057, 380.599, 67.273, 0.52", "112.713, 383.251, 67.3785, 0.15", "112.51, 385.462, 67.2377, 0.15", "112.451, 387.398, 66.9809, 0.15", "112.501, 390.175, 66.5072, 0.15", "112.738, 393.677, 65.8034, 0.15", "113.048, 396.101, 65.2521, 0.15", "113.273, 397.3, 64.9643, 0.22", "113.835, 399.664, 64.3755, 0.07", "114.042, 400.434, 64.1797, 0.07", "114.494, 401.965, 63.7618, 0.22", "115.161, 404.234, 63.207, 0.07", "115.422, 405.037, 62.9672, 0.07", "115.63, 405.637, 62.7542, 0.22", "115.944, 406.453, 62.4251, 0.59", "116.902, 408.476, 61.4713, 0.07", "117.663, 409.791, 60.7853, 0.07", "118.014, 410.317, 60.5, 0.29", "118.467, 410.946, 60.1556, 0.29", "119.421, 412.277, 59.449, 0.07", "120.443, 413.827, 58.7237, 0.07", "120.848, 414.559, 58.4392, 0.07", "121.071, 415.078, 58.2257, 0.29", "121.27, 415.778, 57.9729, 0.29", "121.68, 417.742, 57.3116, 0.15", "121.862, 419.531, 56.7318, 0.15", "121.871, 420.784, 56.3628, 0.29", "121.788, 422.923, 55.7045, 0.22", "121.626, 425.177, 55.0181, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "45.0237, -35.8887, 33.4983, 0.88", "45.5406, -34.49, 33.0138, 0.88", "45.8585, -33.4999, 32.7631, 0.74", "46.2702, -32.064, 32.4534, 0.81", "46.6928, -30.4549, 32.134, 0.88", "47.0616, -28.9603, 31.8489, 1.4", "47.3958, -27.4978, 31.6296, 0.96", "47.6987, -25.6371, 31.4518, 0.88", "47.8307, -24.5437, 31.3869, 0.81", "47.8689, -23.8669, 31.3057, 0.81", "47.8379, -22.875, 31.1015, 0.81", "47.6324, -21.0822, 30.5651, 1.18", "47.3888, -19.7175, 30.0788, 1.18", "47.0696, -18.1728, 29.4574, 1.18", "46.4204, -14.6651, 28.1418, 0.96", "46.0597, -12.1907, 27.2706, 0.59", "45.9148, -10.5021, 26.7634, 0.59", "45.8981, -9.04494, 26.4299, 0.74", "46.0062, -7.51426, 26.2431, 1.11", "46.3602, -5.02997, 26.2874, 1.4", "46.7909, -3.02447, 26.5431, 1.4", "47.3646, -0.70734, 26.9095, 1.18", "47.777, 0.999973, 27.1483, 1.47", "48.0287, 2.25429, 27.2271, 1.11", "48.2915, 4.48241, 27.0589, 0.74", "48.3248, 5.81805, 26.708, 1.03", "48.2612, 6.9674, 26.2107, 1.11", "48.0246, 8.61962, 25.1831, 0.88", "47.6717, 10.1787, 23.9727, 0.88", "47.2513, 11.5266, 22.7987, 0.74", "46.9116, 12.3974, 21.9473, 0.66", "46.4641, 13.4456, 20.9305, 0.59", "45.978, 14.6376, 19.7954, 0.81", "45.5134, 15.9026, 18.7369, 0.88", "44.9939, 17.6088, 17.5064, 0.81", "44.6303, 19.0687, 16.5612, 0.81", "44.3671, 20.6263, 15.6262, 0.81", "44.2477, 22.3564, 14.6649, 0.66", "44.2856, 23.8968, 13.8865, 0.88", "44.4096, 25.2583, 13.2131, 1.18", "44.5291, 26.147, 12.7775, 1.18", "44.8218, 27.9418, 11.914, 0.81", "45.1933, 29.8574, 10.9795, 0.96", "45.492, 31.4158, 10.1774, 0.96", "45.7525, 32.7489, 9.40537, 1.11", "45.9745, 33.8154, 8.76885, 1.11", "46.2258, 34.9491, 8.10006, 0.88", "46.59, 36.4492, 7.30851, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "45.0237, -35.8887, 33.4983, 0.88", "45.6967, -36.6966, 34.7549, 0.88", "45.9379, -36.9689, 35.1249, 0.66", "46.3137, -37.4122, 35.7171, 0.74", "46.4475, -37.5962, 35.9564, 1.03", "46.5623, -37.7917, 36.1863, 0.74", "46.7093, -38.0983, 36.5251, 0.96", "46.9071, -38.6968, 37.059, 1.03", "47.0631, -39.3718, 37.6686, 0.74", "47.1693, -39.994, 38.2254, 1.03", "47.2376, -40.5125, 38.7107, 0.88", "47.2927, -41.0331, 39.2272, 0.81", "47.3178, -41.4321, 39.6278, 0.66", "47.3354, -41.9422, 40.1233, 0.66", "47.3672, -42.5511, 40.6763, 0.88", "47.4315, -43.2078, 41.2705, 1.11", "47.5356, -43.8986, 41.9058, 0.96", "47.6652, -44.5688, 42.4958, 0.96", "47.7738, -45.0273, 42.8735, 0.96", "47.9689, -45.7415, 43.4274, 1.03", "48.1672, -46.4436, 43.9405, 0.81", "48.3014, -46.8712, 44.2306, 0.81", "48.4354, -47.2409, 44.46, 0.66", "48.6517, -47.6951, 44.7484, 0.88", "48.9972, -48.2989, 45.1597, 0.81" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "17.5493, -70.5853, 20.8024, 0.29", "17.4926, -71.4998, 21.4912, 0.29", "17.4581, -72.5741, 22.2426, 0.29", "17.4707, -73.2845, 22.7403, 0.81", "17.5287, -74.4423, 23.5278, 0.59", "17.6458, -75.6427, 24.367, 0.44", "17.8007, -76.6324, 25.0874, 0.22", "17.9793, -77.3658, 25.6188, 0.22", "18.2921, -78.2929, 26.2975, 0.22", "18.5198, -78.8572, 26.7559, 0.74", "18.9657, -79.8767, 27.652, 0.74", "19.3841, -80.798, 28.5012, 0.96", "19.6009, -81.3278, 28.9778, 1.11", "20.028, -82.5357, 30.0245, 0.37", "20.3439, -83.6135, 30.8446, 0.22", "20.509, -84.291, 31.2784, 0.66", "20.6473, -85.0942, 31.6658, 0.66", "20.7473, -85.8601, 31.947, 0.66", "20.8437, -86.6508, 32.1914, 0.29", "20.9762, -87.6571, 32.43, 0.22", "21.1933, -88.8565, 32.695, 0.66", "21.4731, -90.0407, 33.0337, 0.88", "21.7004, -90.8871, 33.3396, 0.37", "22.0254, -92.0577, 33.8389, 0.22", "22.223, -92.7552, 34.1994, 0.59", "22.4632, -93.6164, 34.7093, 0.74", "22.8925, -95.1289, 35.6814, 0.15", "23.0518, -95.7011, 36.0573, 0.15", "23.2357, -96.458, 36.5273, 0.37", "23.5213, -97.8828, 37.3073, 0.22", "23.6047, -98.3428, 37.5235, 0.66", "23.7053, -98.9061, 37.7492, 1.11", "23.8599, -99.7474, 38.0278, 0.37", "24.1182, -100.939, 38.3908, 0.15", "24.3184, -101.705, 38.6398, 0.44", "24.7246, -103.066, 39.1295, 0.15", "25.0842, -104.175, 39.5833, 0.15", "25.3081, -104.822, 39.8912, 0.81", "25.4908, -105.345, 40.1568, 1.18", "26.0649, -107.044, 41.1101, 0.15", "26.358, -107.997, 41.6691, 0.15", "26.485, -108.489, 41.9776, 0.81", "26.6769, -109.263, 42.5389, 0.81", "26.8631, -110.011, 43.1433, 0.22", "27.1355, -111.062, 44.0814, 0.15", "27.2261, -111.423, 44.4121, 0.22", "27.4724, -112.337, 45.2832, 0.15", "27.9015, -113.655, 46.6739, 0.15", "28.0524, -114.077, 47.1394, 0.59", "28.4503, -115.134, 48.3451, 0.15", "28.6274, -115.625, 48.8785, 0.15", "28.8427, -116.273, 49.5221, 0.81", "29.2805, -117.775, 50.7625, 0.15", "29.4632, -118.514, 51.2594, 0.15", "29.5753, -119.022, 51.5592, 0.52", "29.7097, -119.748, 51.9099, 0.66", "29.8377, -120.651, 52.2846, 0.29", "29.9199, -121.754, 52.6442, 0.15", "29.9211, -122.302, 52.7804, 0.15", "29.9026, -122.886, 52.9284, 0.59", "29.8406, -123.619, 53.0879, 0.88", "29.713, -124.526, 53.2619, 0.29", "29.5551, -125.307, 53.3956, 0.22", "29.3025, -126.401, 53.5599, 0.07", "29.136, -127.129, 53.6217, 0.07", "28.8615, -128.399, 53.6755, 0.07", "28.8084, -128.696, 53.6772, 0.29", "28.7119, -129.533, 53.6738, 0.66", "28.6406, -130.596, 53.6765, 0.15", "28.5966, -131.805, 53.7183, 0.15", "28.5699, -132.637, 53.7532, 0.29", "28.5401, -133.63, 53.8281, 0.15", "28.4983, -134.496, 53.8938, 0.37", "28.4498, -135.09, 53.9251, 0.37", "28.3158, -136.216, 53.9785, 0.22", "28.1812, -137.164, 54.0356, 0.44", "28.0024, -138.133, 54.0269, 0.96", "27.8592, -138.792, 53.9741, 0.22", "27.5463, -140.156, 53.7898, 0.15", "27.4855, -140.439, 53.7464, 0.15", "27.2557, -141.585, 53.5189, 0.29", "26.9982, -142.903, 53.2054, 0.15", "26.864, -143.604, 53.0008, 0.15", "26.808, -143.896, 52.9128, 0.37", "26.6655, -144.669, 52.6973, 0.88", "26.3989, -146.298, 52.2844, 0.15", "26.2757, -147.135, 52.1098, 0.15", "26.1731, -147.954, 52.0102, 0.15", "26.076, -148.7, 51.9731, 0.66", "25.9711, -149.525, 51.9965, 0.22", "25.8731, -150.309, 52.0803, 0.22", "25.7893, -151.004, 52.221, 0.15", "25.7276, -151.507, 52.3411, 0.15", "25.5976, -152.454, 52.5708, 0.66", "25.3603, -153.965, 52.9486, 0.15", "25.2692, -154.495, 53.0846, 0.15", "25.1892, -154.943, 53.2014, 0.22", "25.0841, -155.586, 53.3649, 0.15", "24.9833, -156.24, 53.5297, 0.96", "24.827, -157.255, 53.7889, 0.44", "24.6643, -158.331, 54.0681, 0.15", "24.5654, -158.979, 54.2126, 0.15", "24.4602, -159.561, 54.295, 0.15", "24.3202, -160.225, 54.3479, 0.15", "24.1315, -160.999, 54.3805, 0.44", "23.8743, -161.937, 54.4045, 0.44", "23.5225, -163.17, 54.4888, 0.15", "23.0945, -164.742, 54.659, 0.15", "22.9042, -165.484, 54.7618, 0.44", "22.6571, -166.545, 54.9405, 0.22", "22.464, -167.681, 55.2135, 0.22", "22.2636, -169.35, 55.7417, 0.07", "22.1912, -170.457, 56.1885, 0.07", "22.1819, -170.861, 56.3748, 0.29", "22.1775, -171.601, 56.7249, 0.96", "22.218, -173.58, 57.7224, 0.15", "22.2343, -174.317, 58.112, 0.15", "22.2091, -174.98, 58.4327, 0.15", "22.1479, -175.882, 58.8896, 0.37", "22.1024, -176.386, 59.1532, 0.37", "21.9503, -177.556, 59.771, 0.15", "21.831, -178.215, 60.1352, 0.74", "21.5828, -179.659, 61.1388, 0.15", "21.4018, -180.594, 61.924, 0.15", "21.3022, -181.077, 62.4545, 0.59", "21.2051, -181.529, 63.0739, 0.22", "21.0265, -182.249, 64.225, 0.15", "20.8219, -183.02, 65.6972, 0.15", "20.7203, -183.353, 66.4589, 0.52", "20.4498, -183.947, 67.9914, 0.15", "20.2747, -184.267, 69.0419, 0.15", "20.2062, -184.381, 69.489, 0.44", "20.0736, -184.57, 70.3111, 0.81", "19.9415, -184.756, 71.0469, 0.81", "19.657, -185.249, 72.8297, 0.15", "19.3665, -185.817, 74.6161, 0.15", "19.2857, -186.03, 75.1728, 0.15", "19.2413, -186.239, 75.6577, 0.66", "19.1823, -186.802, 76.7167, 0.22", "19.2097, -187.601, 78.0882, 0.15", "19.2517, -187.83, 78.4893, 0.22", "19.4177, -188.471, 79.6716, 0.15", "19.5761, -188.985, 80.698, 0.44", "19.7096, -189.377, 81.512, 0.88", "20.0687, -190.555, 84.1012, 0.15", "20.2438, -191.47, 86.1797, 0.15", "20.2902, -191.957, 87.316, 0.15", "20.2746, -192.313, 88.1565, 0.37", "20.2163, -192.614, 88.8548, 0.37", "19.9945, -193.306, 90.5012, 0.07", "19.7263, -193.823, 91.5703, 0.07", "19.5557, -194.109, 92.1025, 0.15", "19.1574, -194.746, 93.2834, 0.07", "18.9332, -195.099, 93.9514, 0.29", "18.6289, -195.58, 94.8705, 0.29", "18.2805, -196.221, 96.0048, 0.15", "18.123, -196.551, 96.5649, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "17.5493, -70.5853, 20.8024, 0.22", "16.6064, -72.6085, 15.87, 0.22", "16.4173, -73.1871, 14.6187, 0.22", "16.2572, -73.7241, 13.558, 0.52", "16.1108, -74.2003, 12.6776, 0.88", "15.8364, -75.0285, 11.2531, 0.96", "15.4933, -75.941, 9.7928, 0.74", "15.0037, -77.1404, 8.26199, 0.29", "14.584, -78.0259, 7.2751, 0.37", "14.2342, -78.7177, 6.60666, 0.37", "13.8909, -79.3535, 6.04213, 0.74", "13.421, -80.1969, 5.30736, 0.44", "12.5901, -81.6852, 3.90467, 0.44", "12.3155, -82.2141, 3.28984, 0.44", "12.0404, -82.8874, 2.37079, 0.22", "11.7624, -83.788, 1.05749, 0.22", "11.5665, -84.5234, -0.0388668, 0.44", "11.3703, -85.2414, -1.05982, 0.59", "10.8632, -86.6346, -2.86999, 0.29", "10.497, -87.3461, -3.72584, 0.22", "10.0501, -88.0138, -4.40819, 0.29", "9.41004, -88.854, -5.09726, 0.44", "8.4902, -89.9401, -5.84588, 0.74", "7.35757, -91.1611, -6.55739, 0.96", "6.83956, -91.6842, -6.82589, 0.96", "5.7721, -92.7362, -7.37467, 0.37", "4.67953, -93.8274, -8.01761, 0.44", "3.95409, -94.6128, -8.56003, 0.37", "3.47997, -95.2126, -9.03225, 0.22", "3.08291, -95.8563, -9.62965, 0.22", "2.89424, -96.2588, -10.1205, 0.29", "2.70035, -96.8264, -11.058, 0.44", "2.54677, -97.3391, -12.1102, 0.44", "2.43601, -97.7063, -12.9245, 0.66", "2.20927, -98.3676, -14.4024, 0.81", "1.85323, -99.214, -16.2047, 0.96", "1.45283, -100.016, -17.7483, 0.96", "1.10521, -100.671, -18.8972, 0.96", "0.878232, -101.072, -19.5859, 0.66", "0.513562, -101.715, -20.6738, 0.74", "0.181116, -102.363, -21.7105, 0.74", "-0.364133, -103.62, -23.6718, 0.59", "-0.850809, -104.881, -25.6684, 0.29", "-1.21766, -105.78, -27.2047, 0.29", "-1.45669, -106.391, -28.3121, 0.29", "-1.65982, -106.924, -29.3352, 0.37", "-1.96096, -107.717, -30.9494, 0.52", "-2.23587, -108.415, -32.4131, 0.44", "-2.7475, -109.602, -34.7887, 0.44", "-4.01614, -116.723, -43.0278, 0.44", "-5.52032, -124.956, -50.1632, 0.44", "-6.9857, -132.181, -58.2823, 0.44", "-8.82976, -139.329, -66.3908, 0.44", "-12.888, -145.134, -74.7268, 0.44", "-15.7274, -149.075, -84.4959, 0.44", "-18.5172, -153.317, -94.1557, 0.44", "-19.7806, -158.653, -103.606, 0.44", "-21.2472, -162.574, -113.68, 0.44", "-23.965, -164.54, -124.053, 0.44", "-25.5554, -165.415, -134.806, 0.44", "-28.3784, -167.625, -145.102, 0.44", "-31.0604, -171.041, -155.106, 0.44", "-32.4879, -176.061, -164.699, 0.44", "-33.3906, -180.928, -174.432, 0.44", "-34.0659, -187.153, -183.405, 0.44", "-35.3862, -193.692, -192.087, 0.44", "-37.0822, -200.442, -200.547, 0.44", "-37.7644, -206.027, -209.917, 0.44", "-40.6674, -211.231, -219.075, 0.44", "-42.1793, -217.67, -227.798, 0.44", "-43.8524, -225.923, -234.874, 0.44", "-43.9587, -234.337, -241.962, 0.44", "-42.467, -243.459, -247.979, 0.44", "-41.7648, -252.676, -254.004, 0.44", "-41.9175, -262.735, -258.633, 0.44", "-41.3033, -271.041, -265.816, 0.44", "-40.6861, -280.032, -272.164, 0.44", "-39.0223, -289.432, -277.714, 0.44", "-36.6495, -298.917, -282.854, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "7.06614, -177.524, 95.185, 0.15", "7.29785, -179.128, 95.9958, 0.15", "7.4176, -180.289, 96.6646, 0.22", "7.48968, -181.123, 97.1579, 0.22", "7.58993, -182.385, 97.9229, 0.37", "7.72369, -184.026, 99.077, 0.15", "7.9997, -186.71, 101.165, 0.15", "8.06885, -187.509, 101.957, 0.15", "8.12636, -188.266, 102.819, 0.29", "8.2989, -190.65, 105.852, 0.15", "8.42059, -192.212, 108.186, 0.15", "8.49531, -192.883, 109.374, 0.15", "8.80879, -194.519, 112.746, 0.15", "8.92269, -195.092, 114.277, 0.15", "9.02249, -195.643, 116.101, 0.22", "9.14164, -196.32, 118.693, 0.44", "9.22241, -196.755, 120.381, 0.44", "9.40897, -197.572, 123.464, 0.15", "9.95079, -199.212, 129.631, 0.22", "10.3301, -200.187, 133.332, 0.22", "10.4892, -200.513, 134.49, 0.22", "10.841, -201.123, 136.385, 0.22", "11.2985, -201.745, 138.037, 0.22", "12.1598, -202.66, 140.03, 0.22", "12.8645, -203.301, 141.139, 0.22", "13.8959, -204.265, 142.548, 0.07", "15.4268, -205.784, 144.721, 0.07", "17.2316, -207.611, 147.238, 0.07", "18.6137, -209.037, 149.201, 0.07", "20.5942, -211.209, 151.996, 0.07", "22.2365, -213.155, 154.486, 0.07", "23.6305, -215.117, 157.147, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "7.06614, -177.524, 95.185, 0.22", "6.9405, -179.761, 94.1591, 0.22", "6.81904, -181.673, 93.7795, 0.15", "6.71911, -183.122, 93.7563, 0.15", "6.61619, -184.519, 93.8711, 0.15", "6.50206, -185.894, 94.0436, 0.15", "6.27171, -188.933, 94.4656, 0.15", "6.1812, -190.323, 94.8103, 0.15", "6.11732, -191.205, 95.0732, 0.37", "6.01162, -192.374, 95.3627, 0.59", "5.81692, -194.362, 95.7171, 0.22", "5.63167, -196.031, 95.8797, 0.22", "5.46451, -197.359, 95.8314, 0.15", "5.28724, -198.523, 95.7275, 0.15", "4.94796, -200.335, 95.5409, 0.15", "4.76896, -201.15, 95.4072, 0.15", "4.56649, -201.942, 95.1917, 0.29", "4.38524, -202.582, 94.9733, 0.29", "4.0849, -203.712, 94.5312, 0.44", "3.87278, -204.624, 94.2551, 0.44", "3.52314, -206.368, 93.9634, 0.22", "3.2443, -207.998, 93.8369, 0.29", "3.02231, -209.675, 93.8502, 0.07", "2.89435, -211.03, 93.9724, 0.07", "2.75487, -213.889, 94.3378, 0.22", "2.72815, -215.172, 94.6493, 0.22", "2.72623, -215.991, 94.9608, 0.22", "2.74718, -216.627, 95.2766, 0.44", "2.78419, -217.304, 95.6428, 0.66", "2.88767, -219.041, 96.5906, 0.22", "3.03226, -221.023, 97.5746, 0.22", "3.10883, -221.971, 98.0415, 0.07", "3.24184, -223.178, 98.5694, 0.07", "3.39447, -224.193, 98.9524, 0.15", "3.55005, -224.991, 99.2025, 0.15", "3.84447, -226.239, 99.5065, 0.37", "4.21002, -227.533, 99.6194, 0.66", "4.7975, -229.439, 99.6224, 0.15", "5.22061, -230.761, 99.5328, 0.22", "5.62096, -231.991, 99.4069, 0.22", "5.96251, -233.07, 99.2587, 0.15", "6.18569, -233.833, 99.1361, 0.15", "6.36, -234.581, 99.0367, 0.59", "6.47601, -235.421, 98.9698, 0.59", "6.54834, -237.103, 98.8744, 0.22", "6.53329, -237.61, 98.8347, 0.22", "6.47789, -238.446, 98.7632, 0.44", "6.4241, -239.638, 98.6711, 0.66", "6.40776, -240.959, 98.5625, 0.29", "6.44008, -242.035, 98.4746, 0.66", "6.56969, -243.388, 98.367, 0.52", "6.86321, -245.323, 98.205, 0.29", "7.21793, -247.037, 97.9883, 0.22", "7.54378, -248.282, 97.7728, 0.29", "7.9081, -249.451, 97.5308, 0.37", "8.3837, -250.825, 97.2649, 0.22", "8.63764, -251.532, 97.1479, 0.22", "9.27013, -253.292, 96.8467, 0.29", "9.65683, -254.477, 96.6537, 0.52", "9.87189, -255.202, 96.5556, 0.81", "10.2681, -256.683, 96.4123, 0.29", "10.5728, -257.91, 96.4486, 0.22", "10.696, -258.404, 96.5282, 0.22", "10.839, -258.995, 96.6979, 0.44", "11.0271, -259.854, 96.9754, 0.74", "11.2322, -260.753, 97.2407, 0.29", "11.6789, -262.485, 97.6703, 0.15", "11.7988, -262.905, 97.7669, 0.15", "12.034, -263.631, 97.9097, 0.15", "12.4171, -264.674, 98.0826, 0.44", "13.0413, -266.263, 98.3497, 0.22", "13.4609, -267.349, 98.5162, 0.22", "13.9899, -268.744, 98.6844, 0.52", "14.5902, -270.353, 98.8232, 0.15", "14.9863, -271.481, 98.8444, 0.29", "15.4157, -272.852, 98.7299, 0.59", "15.7026, -273.998, 98.4839, 0.74", "15.7879, -274.433, 98.3411, 0.74", "16.0016, -276.132, 97.6182, 0.22", "16.0628, -277.915, 96.7306, 0.15", "16.0327, -279.168, 96.012, 0.15", "15.9612, -280.249, 95.3558, 0.29", "15.8746, -281.106, 94.8541, 0.74", "15.7727, -282.022, 94.3858, 0.66", "15.5998, -283.716, 93.6756, 0.15", "15.4807, -285.25, 93.0651, 0.15", "15.4372, -286.37, 92.6393, 0.22", "15.4456, -287.648, 92.1444, 0.52", "15.5504, -289.18, 91.5358, 0.29", "15.8095, -290.941, 90.8821, 0.15", "16.1326, -292.3, 90.3989, 0.15", "16.2729, -292.753, 90.2392, 0.15", "16.5239, -293.456, 89.9728, 0.81", "16.8348, -294.393, 89.6211, 0.29", "17.2783, -296.025, 89.0047, 0.15", "17.5259, -297.26, 88.5228, 0.59", "17.6381, -298.15, 88.1765, 0.59", "17.6748, -298.912, 87.8217, 0.59", "17.6293, -300.239, 87.0545, 1.18", "17.508, -301.289, 86.2317, 0.74", "17.2493, -302.851, 84.7487, 0.22", "17.1682, -303.323, 84.2373, 0.29", "17.0183, -304.316, 83.001, 0.37", "16.9052, -305.3, 81.5256, 0.37", "16.8039, -306.526, 79.2792, 0.37", "16.7602, -306.904, 78.4806, 0.37", "16.7086, -307.353, 77.4338, 0.37", "16.7065, -307.486, 77.107, 0.37", "16.7425, -307.73, 76.5013, 0.37", "16.8408, -308.06, 75.7672, 0.37", "16.9942, -308.559, 74.829, 0.44", "17.1071, -309.063, 73.9881, 0.52", "17.2647, -310.059, 72.6822, 0.52", "17.3681, -310.986, 71.6228, 0.37", "17.4204, -311.461, 71.1549, 0.22", "17.4742, -311.993, 70.6973, 0.22", "17.5136, -312.758, 70.1421, 0.29", "17.479, -313.863, 69.535, 0.81", "17.3483, -315.49, 68.9414, 0.15", "17.2619, -316.242, 68.7482, 0.15", "17.1869, -316.924, 68.5802, 0.22", "17.1156, -317.816, 68.3815, 0.29", "17.0765, -318.463, 68.2428, 0.81", "16.9791, -320.018, 67.861, 0.22", "16.9048, -321.255, 67.5146, 0.22", "16.8491, -322.304, 67.1073, 0.22", "16.8416, -323.167, 66.652, 0.52", "16.8535, -323.407, 66.4839, 0.52", "16.9746, -324.637, 65.3752, 0.22", "17.0733, -325.429, 64.5215, 0.37", "17.1899, -326.137, 63.6619, 0.66", "17.3602, -327.035, 62.5203, 0.22", "17.5307, -327.882, 61.4087, 0.22", "17.7084, -328.653, 60.441, 0.22", "17.8152, -329.035, 59.9957, 0.37", "18.1549, -330.147, 58.8212, 1.11", "18.5419, -331.393, 57.6733, 0.44", "18.9047, -332.521, 56.7246, 0.66", "19.1892, -333.301, 56.1081, 0.59", "19.4531, -333.912, 55.6145, 0.52", "19.7797, -334.553, 55.0495, 0.29", "20.3384, -335.549, 54.0791, 0.15", "20.9499, -336.632, 52.9752, 0.15", "21.197, -337.102, 52.4736, 0.52", "21.6513, -338.178, 51.321, 0.74", "21.8439, -338.743, 50.7409, 0.74", "22.254, -340.147, 49.3973, 0.37", "22.5304, -341.391, 48.4003, 0.37", "22.7311, -342.614, 47.6328, 0.59", "22.8702, -343.868, 47.0203, 0.88", "22.9194, -344.53, 46.7871, 0.88", "22.9985, -345.894, 46.416, 0.37", "23.095, -347.282, 46.1488, 0.66", "23.249, -348.521, 45.8976, 0.66", "23.4919, -349.86, 45.6369, 1.18", "23.7398, -350.866, 45.4344, 0.81", "24.2939, -352.743, 45.0373, 0.44", "24.8179, -354.239, 44.7172, 0.37", "25.7079, -356.284, 44.2317, 0.29", "25.8859, -356.63, 44.1317, 0.52", "26.2534, -357.246, 43.9305, 0.96", "26.8938, -358.22, 43.5307, 0.29", "27.2876, -358.763, 43.2848, 0.29", "27.7223, -359.352, 42.9944, 0.59", "28.4743, -360.436, 42.612, 0.59", "28.8862, -361.045, 42.4387, 0.59", "30.0248, -362.781, 42.0511, 0.29", "30.7648, -363.947, 41.8854, 0.22", "31.14, -364.592, 41.8712, 0.88", "32.1811, -366.638, 42.1698, 0.37", "32.4565, -367.28, 42.3615, 0.66", "32.634, -367.778, 42.5982, 0.66", "32.9965, -368.96, 43.3758, 0.44", "33.209, -369.768, 44.0535, 0.44", "33.4336, -370.692, 45.0716, 0.44", "33.5948, -371.405, 46.004, 0.81", "33.946, -372.658, 47.8519, 0.22", "34.1438, -373.225, 48.7772, 0.37", "34.5563, -374.154, 50.4422, 0.37", "35.1266, -375.153, 52.2859, 0.37", "35.4288, -375.563, 53.0455, 0.66", "35.9839, -376.174, 54.2689, 0.22", "36.3377, -376.495, 54.9259, 0.22", "36.6584, -376.742, 55.5396, 0.74", "36.9918, -376.94, 56.1882, 0.74", "37.6747, -377.217, 57.7968, 0.22", "38.2323, -377.332, 59.5193, 0.22", "38.4682, -377.346, 60.5355, 0.37", "38.983, -377.334, 63.4011, 0.37", "39.0941, -377.321, 64.3486, 0.74", "39.2534, -377.252, 66.7869, 0.74", "39.3038, -377.189, 68.7117, 0.52", "39.3155, -377.169, 70.9553, 0.52", "39.3086, -377.188, 71.7413, 0.52", "39.2759, -377.292, 74.0752, 0.52", "39.2523, -377.37, 75.2848, 0.52", "39.2158, -377.539, 77.4067, 0.52", "39.2025, -377.598, 78.1036, 0.52", "39.1561, -377.958, 83.2009, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-9.78599, 23.1169, -6.64018, 0.96", "-11.5831, 24.1606, -7.5132, 0.96", "-12.4617, 24.6843, -7.91175, 0.96", "-13.5046, 25.3383, -8.30557, 0.88", "-14.5015, 25.9915, -8.6289, 0.88", "-15.5283, 26.6695, -8.88171, 0.81", "-16.6346, 27.4037, -9.05482, 0.66", "-17.466, 27.9335, -9.02933, 1.03", "-18.5072, 28.5421, -8.84723, 1.18", "-18.9074, 28.7432, -8.72992, 1.33", "-20.0518, 29.24, -8.32903, 1.03", "-21.3165, 29.7452, -7.89895, 0.96", "-22.6211, 30.1684, -7.49634, 0.96", "-24.3558, 30.5806, -7.07375, 1.33", "-25.7345, 30.7923, -6.82736, 1.03", "-26.4025, 30.8305, -6.72875, 1.03", "-28.115, 30.7515, -6.52482, 0.74", "-29.0995, 30.6218, -6.40544, 0.96", "-29.8691, 30.4902, -6.2984, 1.55", "-31.2393, 30.2453, -6.03203, 1.25", "-32.8319, 29.9572, -5.54903, 1.03", "-33.9843, 29.7439, -5.05914, 0.74", "-34.7542, 29.6181, -4.66164, 0.74", "-35.5951, 29.4908, -4.18783, 1.11", "-36.446, 29.367, -3.69346, 1.11", "-38.1671, 29.137, -2.72307, 0.96", "-39.7947, 28.9743, -1.8431, 1.18", "-40.9576, 28.9104, -1.23744, 1.55", "-41.7671, 28.9105, -0.845391, 1.55", "-42.6173, 28.9763, -0.487342, 1.18", "-43.3966, 29.1443, -0.24923, 0.88", "-44.4047, 29.5182, -0.0234939, 0.66", "-45.4679, 29.9915, 0.221308, 0.96", "-46.2513, 30.3628, 0.452161, 1.18", "-47.1197, 30.8076, 0.781703, 1.18", "-48.2232, 31.4048, 1.32714, 1.11", "-49.6531, 32.1955, 2.15711, 1.18", "-50.9925, 32.9432, 3.01654, 1.03", "-52.0502, 33.4977, 3.75061, 1.03", "-53.1723, 34.0389, 4.59658, 0.88", "-54.3217, 34.5896, 5.52499, 1.03", "-55.269, 35.0466, 6.32956, 0.74", "-56.2147, 35.5327, 7.14961, 0.66", "-57.3381, 36.1411, 8.1487, 0.59", "-58.6416, 36.8057, 9.3114, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-9.78599, 23.1169, -6.64018, 1.03", "-10.4505, 23.768, -9.36035, 1.03", "-11.24, 24.3777, -11.9863, 1.03", "-12.0124, 24.864, -14.1564, 1.18", "-12.9794, 25.3839, -16.6081, 1.18", "-13.6725, 25.7285, -18.2549, 1.18", "-14.4615, 26.1196, -20.1077, 1.03", "-15.2526, 26.4814, -21.7227, 0.96", "-15.8428, 26.7522, -22.8157, 1.18", "-16.5079, 27.069, -24.0078, 1.03", "-17.1309, 27.3719, -25.1095, 1.03", "-17.933, 27.777, -26.5035, 1.03", "-18.5642, 28.0993, -27.5602, 1.18", "-19.5969, 28.6126, -29.0881, 1.18", "-20.3437, 28.9885, -30.0749, 1.18", "-21.2407, 29.4543, -31.1873, 1.11", "-22.2063, 29.9465, -32.2847, 1.18", "-22.8233, 30.2668, -32.9091, 0.96", "-23.7249, 30.7899, -33.7375, 0.81", "-24.8676, 31.5704, -34.7075, 1.03", "-26.569, 32.8925, -36.056, 1.25", "-27.1121, 33.3556, -36.4693, 1.25", "-27.9377, 34.0743, -37.0613, 0.88", "-29.0935, 35.0461, -37.8556, 0.88", "-30.4232, 36.0689, -38.7197, 1.11", "-31.5584, 36.8255, -39.3695, 1.11", "-33.0037, 37.6778, -40.113, 0.96", "-34.2059, 38.3221, -40.7355, 1.03", "-35.3595, 38.8879, -41.3493, 1.03", "-36.5536, 39.4098, -41.9924, 0.96", "-37.6671, 39.859, -42.5699, 0.96", "-38.8556, 40.3216, -43.2122, 0.96", "-40.3506, 40.8642, -44.0057, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-10.5251, 80.9544, -39.2046, 1.18", "-10.9027, 83.2301, -38.9862, 1.18", "-11.0685, 84.7901, -38.8484, 0.96", "-11.1083, 85.8311, -38.8034, 0.96", "-11.1027, 86.7834, -38.82, 0.96", "-11.0631, 88.5312, -38.9445, 0.96", "-11.0494, 90.2444, -39.1459, 1.03", "-11.012, 91.4983, -39.3758, 1.11", "-10.945, 93.003, -39.7691, 0.88", "-10.9393, 94.16, -40.1437, 0.88", "-11.0184, 95.3418, -40.5511, 0.88", "-11.192, 96.799, -41.0645, 1.03", "-11.346, 97.7812, -41.3961, 1.03", "-11.7261, 99.7703, -41.9707, 1.18", "-12.1339, 101.835, -42.4664, 0.88", "-12.6067, 104.368, -42.968, 0.81", "-12.7583, 105.3, -43.1163, 0.96", "-12.8972, 106.257, -43.253, 0.96", "-13.1843, 108.17, -43.5286, 0.88", "-13.3929, 109.525, -43.7092, 0.88", "-13.6182, 111.028, -43.949, 1.11", "-13.9681, 113.349, -44.3959, 1.25", "-14.2076, 114.832, -44.7111, 1.03", "-14.472, 116.45, -45.0889, 1.03", "-14.6723, 117.709, -45.4032, 1.18", "-15.0085, 119.923, -46.0344, 0.96", "-15.2375, 121.711, -46.5928, 1.11", "-15.3587, 123.215, -47.0757, 1.11", "-15.3861, 124.881, -47.5629, 1.18", "-15.2888, 126.487, -47.9809, 0.74", "-15.0662, 128.074, -48.3403, 0.88", "-14.8064, 129.207, -48.5338, 1.25", "-14.3073, 130.746, -48.7108, 1.33", "-13.6543, 132.332, -48.7658, 0.96", "-13.0012, 133.656, -48.6896, 0.74", "-12.3694, 134.805, -48.5347, 0.81", "-11.8175, 135.751, -48.293, 0.81", "-11.1185, 136.938, -47.9056, 0.74", "-10.5617, 137.953, -47.5004, 1.25", "-9.85589, 139.329, -46.8677, 1.4", "-9.38498, 140.41, -46.3153, 1.4", "-8.56296, 142.608, -45.1374, 0.88", "-8.3989, 143.118, -44.852, 0.88", "-8.02372, 144.47, -44.0841, 0.88", "-7.78685, 145.442, -43.5648, 0.88", "-7.4439, 147.085, -42.8062, 0.96", "-7.25988, 148.102, -42.4385, 0.96", "-7.02273, 149.629, -42.0492, 1.55", "-6.9566, 150.144, -41.9328, 1.55", "-6.69564, 152.202, -41.6005, 1.18", "-6.46554, 154.303, -41.3984, 1.25", "-6.3281, 155.991, -41.3841, 1.62", "-6.29282, 156.864, -41.4549, 1.62", "-6.28659, 159.248, -41.8293, 0.96", "-6.33836, 161.096, -42.2571, 0.96", "-6.40999, 162.313, -42.6403, 1.33", "-6.55478, 164.094, -43.3611, 1.11", "-6.68612, 165.812, -44.2376, 1.33", "-6.76499, 167.04, -44.962, 1.33", "-6.83985, 168.574, -46.0302, 1.47", "-6.88413, 169.524, -46.7146, 1.62", "-6.93841, 171.27, -48.0082, 1.03", "-6.9642, 172.766, -49.1013, 0.96", "-6.9592, 173.776, -49.8058, 0.88", "-6.90244, 175.372, -50.912, 0.81", "-6.87748, 176.156, -51.3995, 1.18", "-6.84942, 178.453, -52.6627, 0.96", "-6.89946, 180.57, -53.6645, 0.96", "-7.02399, 182.331, -54.3081, 0.74", "-7.22222, 184.193, -54.824, 0.59", "-7.55838, 186.602, -55.2708, 0.59", "-7.86312, 188.426, -55.5279, 0.52", "-8.09923, 189.617, -55.627, 0.74", "-8.65889, 191.943, -55.757, 1.03", "-8.99705, 193.119, -55.7911, 1.11", "-9.42018, 194.502, -55.7976, 0.74", "-10.0022, 196.446, -55.825, 0.66", "-10.3063, 197.486, -55.8568, 0.52", "-10.6303, 198.684, -55.94, 0.22", "-11.1319, 200.614, -56.2356, 0.15", "-11.2978, 201.228, -56.3319, 0.22", "-13.0883, 211.528, -59.0441, 0.22", "-13.1884, 221.31, -63.5449, 0.22", "-13.6872, 231.546, -66.9278, 0.22", "-15.7686, 241.637, -70.1352, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-10.5251, 80.9544, -39.2046, 0.66", "-9.63876, 81.6066, -41.164, 0.66", "-9.04058, 82.0467, -42.4863, 0.59", "-8.43958, 82.489, -43.8149, 0.74" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "46.59, 36.4492, 7.30851, 0.88", "47.4848, 37.1561, 6.38756, 0.88", "48.2356, 37.7751, 5.5229, 0.59", "49.1086, 38.4764, 4.5184, 0.59", "49.7537, 38.9316, 3.83501, 0.59", "50.3337, 39.2835, 3.23137, 0.59", "50.9501, 39.6065, 2.57851, 0.81", "51.6276, 39.8699, 1.8154, 0.81", "52.1553, 39.9909, 1.24047, 0.81", "52.9787, 40.0664, 0.414233, 0.52", "53.9692, 40.0538, -0.551468, 0.52", "54.7234, 39.9816, -1.28982, 0.52", "55.4164, 39.8922, -1.95663, 0.52", "55.9125, 39.8464, -2.4232, 0.52", "56.6517, 39.8009, -3.16713, 0.44", "57.5691, 39.7741, -4.14173, 0.59", "58.355, 39.7571, -4.92782, 0.44", "58.8314, 39.7306, -5.40796, 0.66", "59.5204, 39.6607, -6.08709, 0.37", "60.4059, 39.4997, -6.96336, 0.37", "61.2665, 39.2557, -7.75274, 0.59", "61.9078, 39.0173, -8.31951, 1.11", "63.0205, 38.5568, -9.34961, 1.11", "63.8788, 38.198, -10.1761, 0.66", "64.8141, 37.8582, -11.0974, 0.52", "65.4937, 37.6817, -11.8062, 0.29", "66.2206, 37.6095, -12.6621, 0.29", "66.8869, 37.6833, -13.6645, 0.59", "67.224, 37.8174, -14.2896, 0.59", "67.714, 38.1498, -15.3671, 0.37", "68.1548, 38.532, -16.4342, 0.37", "68.4499, 38.8007, -17.1866, 0.59", "69.0825, 39.3238, -18.731, 1.03", "69.5422, 39.6361, -19.7731, 0.88", "69.9508, 39.868, -20.6259, 0.44", "70.5819, 40.1557, -21.9126, 0.44", "70.9288, 40.286, -22.5463, 0.44", "71.2408, 40.3618, -23.0667, 0.66", "71.5256, 40.3967, -23.468, 0.66", "71.9881, 40.3962, -24.1012, 0.44", "73.127, 40.2896, -25.594, 0.44", "73.4579, 40.2329, -25.9978, 0.81", "73.9755, 40.0941, -26.654, 1.03", "74.6499, 39.8034, -27.6527, 0.66", "75.1173, 39.5038, -28.5177, 0.66", "75.5884, 39.0375, -29.7596, 0.52", "75.8883, 38.5311, -31.0376, 0.37", "76.0267, 38.0085, -32.3282, 0.44", "76.0538, 37.1753, -34.3466, 0.52", "75.9835, 36.5147, -35.8941, 0.52", "75.8729, 35.6634, -37.8111, 0.52", "75.7784, 34.9453, -39.4165, 0.81", "75.7393, 34.388, -40.708, 1.03", "75.8017, 33.9133, -41.9104, 1.03", "75.9839, 33.6139, -42.7942, 0.81", "76.4517, 33.2732, -44.0393, 0.59", "76.9574, 33.0995, -44.9536, 0.59", "77.3718, 33.0412, -45.5696, 0.44", "78.2501, 32.9833, -46.7661, 0.44", "78.9111, 32.951, -47.6015, 0.37", "79.4085, 32.9206, -48.1797, 0.37", "79.9958, 32.864, -48.7783, 0.96", "81.1386, 32.6962, -49.7805, 0.66", "81.8995, 32.5613, -50.3993, 0.66", "82.6741, 32.4076, -51.0384, 0.88", "83.6396, 32.2028, -51.9905, 0.74", "84.4323, 32.0385, -53.0084, 0.74", "85.2436, 31.9176, -54.3492, 0.74", "85.7704, 31.9183, -55.4707, 0.59", "86.4523, 32.0761, -57.2962, 0.81", "87.0018, 32.379, -59.1955, 0.96", "87.402, 32.7904, -61.0052, 0.96", "87.5831, 33.0896, -61.9314, 0.66", "87.7821, 33.4804, -62.8478, 0.59", "87.9579, 33.7746, -63.4726, 0.44", "88.3182, 34.3034, -64.4208, 0.88", "88.5113, 34.5315, -64.8747, 0.88", "88.9086, 34.8323, -65.9678, 0.29", "89.3146, 34.8519, -67.6942, 0.29", "89.6184, 34.5194, -69.8225, 0.29", "89.6818, 34.3713, -70.4726, 0.88", "89.7918, 33.9262, -72.1729, 0.88", "89.8443, 33.5801, -73.5563, 0.88", "89.8373, 33.3337, -74.699, 0.88", "89.7669, 33.1813, -76.1707, 0.88", "89.729, 33.2428, -76.7013, 0.88", "89.69, 33.4948, -77.3029, 0.88", "89.5818, 34.2236, -78.0753, 0.52", "89.4302, 34.9183, -78.6575, 0.52", "89.2547, 35.5291, -79.1653, 1.03", "89.0721, 36.1171, -79.6993, 1.03", "88.8794, 36.7425, -80.3551, 0.81", "88.6261, 37.647, -81.4523, 0.44", "88.4742, 38.3866, -82.477, 0.52", "88.3944, 38.9928, -83.4192, 0.52", "88.3165, 39.6173, -84.5398, 0.66", "88.2459, 39.8868, -85.1539, 0.52", "88.0853, 40.2426, -86.1131, 0.66", "87.8603, 40.6259, -87.1752, 0.88", "87.4343, 41.2381, -88.7539, 0.59", "87.0995, 41.6826, -89.8189, 0.59", "86.3915, 42.5454, -91.9247, 0.52", "86.1217, 42.8798, -92.7554, 0.52", "85.9548, 43.1581, -93.4297, 0.52", "85.8654, 43.614, -94.3744, 0.52", "86.0668, 44.1494, -95.1368, 0.44", "86.4757, 44.7916, -95.7761, 0.74", "86.7473, 45.169, -96.0651, 0.81", "87.5506, 46.1986, -96.8298, 0.59", "88.1013, 46.8529, -97.3704, 0.66", "88.8089, 47.6924, -98.0669, 0.59", "89.5176, 48.6007, -98.7806, 0.59", "90.0286, 49.3254, -99.2959, 0.66", "90.5644, 50.1556, -99.8624, 0.52", "91.3283, 51.435, -100.67, 0.81", "95.3043, 52.3605, -108.538, 0.81", "98.3221, 52.9765, -116.843, 0.81", "100.409, 53.0742, -125.443, 0.81", "101.141, 54.1972, -134.206, 0.81", "102.448, 56.9979, -142.552, 0.81" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "46.59, 36.4492, 7.30851, 0.81", "46.309, 37.1789, 7.14258, 0.81", "45.9911, 38.0803, 6.96814, 0.74", "45.7172, 38.9361, 6.88582, 0.59", "45.3418, 40.2235, 6.81409, 0.37", "45.0968, 41.2318, 6.80613, 0.44", "44.8982, 42.2065, 6.819, 0.44", "44.742, 43.2105, 6.86446, 0.74", "44.5616, 44.8159, 6.9805, 0.44", "44.5253, 45.5864, 7.04434, 0.52", "44.5545, 46.7754, 7.14524, 0.66", "44.6034, 47.4268, 7.17574, 0.44", "44.6881, 48.2756, 7.17292, 0.44", "44.7853, 49.0737, 7.12866, 0.37", "44.9429, 50.1681, 6.9851, 0.37", "45.0775, 51.0501, 6.84097, 0.44", "45.1853, 51.7071, 6.71204, 0.22", "45.2962, 52.2977, 6.59738, 0.22", "45.4485, 53.0531, 6.45317, 0.29", "45.6094, 53.866, 6.2801, 0.74", "45.7548, 54.6486, 6.09792, 0.59", "45.8867, 55.3902, 5.91176, 0.44", "46.0105, 56.0531, 5.67814, 0.22", "46.1256, 56.5701, 5.45012, 0.22", "46.2981, 57.2354, 5.14887, 0.22", "46.4767, 57.8488, 4.87078, 0.37", "46.6016, 58.2454, 4.67175, 0.37", "47.0547, 59.6565, 3.93321, 0.74", "47.3473, 60.582, 3.42712, 0.22", "47.6594, 61.6074, 2.87259, 0.22", "47.8691, 62.3778, 2.45928, 0.44", "48.0517, 63.3159, 1.90183, 0.29", "48.1143, 63.8622, 1.50999, 0.66", "48.1362, 64.4732, 1.02835, 0.66", "48.1051, 65.0659, 0.526982, 0.88", "48.0391, 65.7415, -0.045846, 0.88", "47.9374, 67.0371, -1.07144, 0.59", "47.9292, 68.2931, -1.96734, 0.44", "47.9687, 69.0436, -2.48508, 0.44", "48.0759, 70.1451, -3.18165, 0.52", "48.1778, 70.9595, -3.69046, 0.59", "48.3454, 72.0843, -4.38746, 0.44", "48.5269, 73.12, -5.00602, 0.22", "48.6696, 73.9428, -5.52153, 0.44", "48.7902, 74.6871, -6.03458, 0.74", "48.9651, 75.8402, -6.86123, 1.11", "49.0892, 76.9464, -7.6445, 0.96", "49.1327, 77.5843, -8.07373, 0.96", "49.1933, 79.0064, -8.96198, 0.59", "49.227, 79.9148, -9.45519, 0.37", "49.2828, 80.9791, -9.91319, 0.22", "49.3165, 81.6788, -10.1121, 0.66", "49.3388, 82.3037, -10.2547, 0.74", "49.3628, 82.9976, -10.4107, 0.52", "49.393, 83.9781, -10.6516, 0.59", "49.4357, 85.2755, -11.0449, 0.66", "49.4808, 86.3986, -11.4321, 0.29", "49.5343, 87.7151, -11.915, 0.29", "49.574, 88.6589, -12.3066, 0.37", "49.6438, 89.919, -12.879, 0.44", "49.707, 90.897, -13.3867, 0.52", "49.7554, 91.8441, -13.9378, 0.66", "49.8083, 92.7127, -14.4408, 0.66", "49.8498, 93.5954, -14.9423, 0.66", "49.8747, 94.4085, -15.413, 0.96", "49.9336, 95.8998, -16.3174, 0.44", "49.9766, 96.7587, -16.8893, 0.44", "50.038, 97.5325, -17.4574, 0.59", "50.1714, 98.6542, -18.356, 0.22", "50.2497, 99.1696, -18.7781, 0.22", "50.324, 99.5901, -19.1333, 0.22", "50.3873, 99.8597, -19.3587, 0.22", "50.5162, 100.343, -19.7492, 0.22", "50.614, 100.729, -20.0593, 0.22", "50.7333, 101.239, -20.4583, 0.66", "50.8778, 101.968, -21.027, 0.66", "50.9987, 102.768, -21.6123, 0.66", "51.0619, 103.304, -21.9756, 0.37", "51.1318, 104.176, -22.5394, 0.22", "51.2081, 105.141, -23.0583, 0.44", "51.2706, 105.834, -23.3418, 0.44", "51.3831, 106.652, -23.5395, 0.44", "51.5946, 107.75, -23.5219, 0.22", "51.8217, 108.804, -23.4037, 0.29", "52.2203, 110.655, -23.1473, 0.44", "52.4674, 111.871, -23.0211, 0.66", "52.6887, 113.056, -23.0343, 0.66", "53.0013, 114.898, -23.3814, 0.29", "53.2179, 116.451, -24.0634, 0.37", "53.3096, 117.669, -24.9286, 0.52", "53.2782, 118.65, -25.8923, 0.74", "53.1695, 119.668, -27.0828, 0.74", "53.0765, 120.325, -27.9253, 0.74", "52.9242, 121.32, -29.2808, 0.52", "52.8182, 122.201, -30.3801, 0.59", "52.6666, 123.631, -32.0067, 0.22", "52.6089, 124.233, -32.6509, 0.22", "52.5425, 124.946, -33.3662, 0.59", "52.4302, 125.977, -34.4074, 0.96", "52.3298, 127.052, -35.4191, 0.37", "52.2917, 127.858, -36.1393, 0.44", "52.2866, 128.935, -37.0755, 0.44", "52.3025, 129.85, -37.8698, 0.44", "52.3384, 130.573, -38.5146, 0.44", "52.4565, 131.651, -39.4882, 0.22", "52.6352, 132.803, -40.562, 0.22", "52.7154, 133.181, -40.9097, 0.22", "52.8847, 133.851, -41.4856, 0.59", "53.2251, 135.063, -42.4473, 0.29", "53.4456, 135.917, -43.076, 0.29", "53.6318, 136.864, -43.7334, 0.52", "53.7423, 137.737, -44.2766, 0.88", "53.789, 138.395, -44.665, 0.88", "53.831, 139.302, -45.1628, 0.59", "53.9099, 140.49, -45.757, 0.22", "53.9815, 141.1, -46.0704, 0.29", "54.0772, 141.61, -46.3566, 0.29", "54.23, 142.197, -46.7007, 0.81", "54.4904, 142.975, -47.1758, 0.88", "54.7751, 143.664, -47.5941, 0.59", "55.1811, 144.546, -48.1385, 0.59", "55.6529, 145.581, -48.7729, 0.29", "56.2316, 146.939, -49.6113, 0.52", "56.5448, 147.787, -50.1751, 0.59", "56.7921, 148.679, -50.8027, 0.59", "56.9209, 149.339, -51.2957, 0.74", "56.9761, 149.805, -51.6822, 0.74", "57.016, 150.661, -52.4813, 0.66", "56.9999, 151.45, -53.2841, 0.66", "56.965, 152.176, -54.0189, 0.74", "56.9425, 153.184, -54.9127, 0.52", "56.9799, 153.909, -55.3967, 0.59", "57.1009, 154.736, -55.7416, 0.44", "57.2744, 155.589, -55.9863, 0.59", "57.4251, 156.264, -56.1538, 0.37", "57.6974, 157.815, -56.5917, 0.74", "57.7392, 158.814, -56.9765, 1.03", "57.6227, 159.926, -57.6014, 0.44", "57.1582, 161.508, -59.0034, 0.59", "56.8546, 162.28, -59.88, 1.18", "56.4264, 163.216, -61.082, 0.37", "55.9415, 164.095, -62.3398, 0.37", "55.5176, 164.755, -63.3554, 0.81", "54.8268, 165.819, -65.0012, 0.81", "54.4335, 166.515, -65.9671, 0.66", "54.0879, 167.303, -66.9706, 0.37", "53.8198, 168.248, -68.0527, 0.37", "53.6151, 169.439, -69.241, 0.37", "53.5606, 170.152, -69.8282, 0.52", "53.5453, 170.971, -70.3546, 0.44", "53.5401, 171.858, -70.9078, 0.66", "53.5695, 172.652, -71.4375, 0.81", "53.6078, 173.194, -71.7986, 0.81", "53.6489, 173.79, -72.2021, 0.74", "53.6918, 175.117, -73.1208, 0.66", "53.7075, 176.523, -74.1067, 0.44", "53.6965, 177.68, -74.8993, 0.44", "53.6889, 178.595, -75.499, 1.03", "53.7011, 179.288, -75.8635, 0.66", "53.7421, 180.221, -76.18, 0.52", "53.7833, 180.73, -76.289, 0.74", "53.8239, 181.427, -76.4299, 0.96", "53.8421, 181.819, -76.533, 0.96", "53.8734, 183.51, -77.2341, 0.66", "53.8393, 184.899, -78.0544, 0.66", "53.7296, 186.097, -78.9716, 0.44", "53.4819, 187.452, -80.228, 0.96", "53.2166, 188.31, -81.177, 0.52", "52.8082, 189.124, -82.2407, 0.52", "52.3563, 189.846, -83.3702, 0.52", "51.9392, 190.354, -84.27, 0.44", "51.4595, 190.817, -85.0991, 0.44", "50.9636, 191.18, -85.7795, 0.96", "49.9371, 191.706, -86.9008, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "48.9972, -48.2989, 45.1597, 0.37", "49.3062, -49.8083, 47.4087, 0.37", "49.8512, -51.5205, 49.59, 0.37", "50.1783, -52.3875, 50.6754, 0.59", "50.738, -53.7741, 52.3463, 0.44", "51.0374, -54.4416, 53.2451, 0.66", "51.4499, -55.2838, 54.5873, 0.44", "52.0784, -56.4393, 56.4849, 0.44", "52.5941, -57.2818, 57.8998, 0.44", "52.9601, -57.8174, 58.8325, 0.81", "54.1534, -59.4757, 61.6885, 0.81", "55.2771, -61.0343, 64.352, 0.81", "55.6442, -61.55, 65.2035, 0.81", "56.1794, -62.3139, 66.3195, 0.44", "56.7006, -63.1013, 67.2679, 0.44", "57.5559, -64.5285, 68.7541, 0.44", "57.9838, -65.337, 69.4577, 0.66", "58.2861, -65.9836, 69.9889, 0.66", "58.9207, -67.5179, 71.4143, 0.52", "59.4202, -69.0057, 72.9206, 0.66", "59.9493, -71.0208, 74.9713, 0.29", "60.1168, -71.8563, 75.8293, 0.29", "60.3258, -73.2117, 77.2, 0.22", "60.5628, -75.3251, 79.2382, 0.22", "60.6782, -76.7743, 80.5885, 0.22", "60.7516, -78.0985, 81.7668, 0.37", "60.8344, -80.0305, 83.3871, 0.74", "60.8897, -81.1435, 84.2386, 0.88", "60.9611, -82.3804, 85.1021, 0.22", "61.0541, -84.533, 86.3255, 0.22", "61.0889, -85.3715, 86.7526, 0.22", "61.1421, -86.6887, 87.2562, 0.22", "61.2447, -88.8017, 87.7799, 0.15", "61.368, -90.3928, 88.0542, 0.15", "61.6719, -93.3513, 88.487, 0.22", "61.9148, -95.3882, 88.7418, 0.22", "62.3608, -99.0408, 89.2972, 0.15", "62.6744, -102.105, 89.8166, 0.15", "62.9027, -105.033, 90.4386, 0.22", "63.0611, -107.594, 91.1204, 0.22", "63.169, -109.708, 91.8103, 0.22", "63.2484, -112.166, 92.7291, 0.22", "63.3184, -115.355, 94.1817, 0.22", "63.3811, -118.593, 95.7316, 0.22", "63.4237, -120.548, 96.695, 0.22", "63.4789, -121.913, 97.3317, 0.52", "63.6009, -123.579, 98.0865, 0.59", "63.8559, -125.539, 98.9395, 0.22", "64.1026, -126.866, 99.5042, 0.15", "64.4353, -128.568, 100.274, 0.15", "64.6745, -130.412, 100.94, 0.22", "64.7079, -131.749, 101.357, 0.37", "64.669, -133.615, 101.908, 0.37", "64.5149, -135.626, 102.414, 0.15", "64.1145, -138.783, 103.144, 0.15", "63.2598, -143.689, 104.003, 0.15", "62.7122, -145.965, 104.335, 0.15" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "48.9972, -48.2989, 45.1597, 0.29", "49.4902, -48.7725, 44.6475, 0.29", "50.3401, -49.5227, 43.7655, 0.37", "50.8564, -49.969, 43.2379, 0.37", "51.5506, -50.5447, 42.5705, 0.22", "52.3398, -51.1541, 41.8659, 0.22", "52.7875, -51.4883, 41.4978, 0.52", "53.707, -52.2054, 40.7546, 0.29", "54.1328, -52.5456, 40.4301, 0.44", "54.5578, -52.9042, 40.107, 0.66", "55.126, -53.4305, 39.6626, 0.37", "55.6215, -53.9841, 39.2543, 0.29", "56.1339, -54.6839, 38.7577, 0.29", "56.5389, -55.34, 38.3192, 0.29", "56.9647, -56.0716, 37.846, 0.66", "57.3644, -56.8228, 37.3759, 0.66", "57.74, -57.5817, 36.9259, 0.52", "58.2932, -58.7006, 36.29, 0.37", "58.7078, -59.4655, 35.8861, 0.66", "59.1853, -60.2446, 35.4761, 0.22", "59.5259, -60.7106, 35.2001, 0.22", "59.9111, -61.1573, 34.9034, 0.59", "60.3936, -61.6374, 34.5573, 0.81", "61.1314, -62.268, 34.0611, 0.52", "62.0646, -62.9843, 33.4464, 0.66", "62.9562, -63.628, 32.8729, 0.44", "63.9102, -64.3042, 32.3138, 0.37", "64.3695, -64.6417, 32.05, 0.37", "64.8663, -65.0278, 31.7741, 0.37", "65.719, -65.7491, 31.3366, 0.66", "66.2336, -66.217, 31.1076, 1.11", "66.9855, -66.9419, 30.7708, 0.66", "67.7462, -67.6924, 30.369, 0.44", "68.3922, -68.3458, 29.9314, 0.44", "68.9574, -68.9144, 29.4942, 0.59", "69.4387, -69.3783, 29.0933, 0.52", "70.2052, -70.06, 28.4108, 0.29", "70.9202, -70.6343, 27.7334, 0.81", "71.7445, -71.2347, 26.9411, 0.22", "72.0371, -71.4326, 26.6538, 0.22", "72.261, -71.5711, 26.4383, 0.29", "72.9134, -71.8983, 25.9055, 0.52", "73.6178, -72.1716, 25.4649, 0.22", "74.3229, -72.3876, 25.1416, 0.52", "74.8249, -72.5064, 24.9718, 0.52", "75.3759, -72.6182, 24.8519, 0.29", "76.5655, -72.8065, 24.7549, 0.22", "77.2699, -72.8944, 24.8003, 0.29", "77.8391, -72.9654, 24.8941, 0.52", "78.398, -73.0486, 25.0273, 0.66", "79.5623, -73.2346, 25.3494, 0.44", "80.4586, -73.4084, 25.6261, 0.44", "81.2996, -73.6019, 25.8903, 0.44", "82.0728, -73.7846, 26.115, 0.52", "82.7657, -73.9471, 26.2628, 0.66", "83.3835, -74.0888, 26.3416, 0.66", "84.2294, -74.2507, 26.3619, 0.37", "84.8561, -74.3417, 26.3545, 0.37", "85.3834, -74.3867, 26.3094, 0.74", "86.0595, -74.4109, 26.2224, 1.03", "86.8614, -74.4292, 26.0995, 0.29", "87.7425, -74.4463, 25.9551, 0.22", "88.6722, -74.4505, 25.81, 0.22", "89.6904, -74.4706, 25.6712, 0.22", "90.5126, -74.5092, 25.6105, 0.29", "91.1749, -74.5689, 25.6156, 0.44", "91.8055, -74.6478, 25.6706, 0.44", "92.4227, -74.7579, 25.7931, 0.81", "92.7665, -74.8365, 25.9024, 0.88", "93.7225, -75.1147, 26.3231, 0.22", "94.3001, -75.3419, 26.6705, 0.15", "94.9082, -75.6241, 27.1402, 0.15", "95.5758, -75.9673, 27.7262, 0.15", "95.9125, -76.155, 28.0339, 0.37", "96.3602, -76.4162, 28.4299, 0.81", "97.4136, -77.0838, 29.3011, 0.52", "98.1057, -77.606, 29.8482, 0.66", "98.46, -77.9248, 30.0931, 0.52", "98.8999, -78.3693, 30.3252, 0.22", "99.4434, -78.989, 30.5943, 0.22", "99.8252, -79.4697, 30.7603, 0.44", "100.495, -80.4106, 31.0316, 0.44", "100.971, -81.1982, 31.2498, 0.44", "101.361, -81.9482, 31.473, 0.44", "101.882, -83.0396, 31.9058, 0.29", "102.06, -83.4127, 32.0839, 0.66", "102.464, -84.2111, 32.5233, 0.66", "102.909, -85.0205, 33.0227, 0.66", "103.229, -85.5634, 33.3786, 1.03", "103.98, -86.7106, 34.138, 0.29", "104.46, -87.3655, 34.5488, 0.15", "104.643, -87.5916, 34.7074, 0.15", "104.914, -87.8835, 34.9598, 0.15", "105.242, -88.1763, 35.3115, 0.59", "105.44, -88.3309, 35.5393, 0.81", "106.103, -88.8236, 36.3094, 0.29", "106.722, -89.2817, 37.0834, 0.44", "107.533, -89.8795, 38.0964, 0.22", "108.297, -90.4303, 39.0308, 0.22", "108.875, -90.8749, 39.7626, 0.22", "109.468, -91.3601, 40.5029, 0.29", "109.992, -91.8046, 41.1159, 0.59", "110.364, -92.1638, 41.5341, 1.03", "110.59, -92.4204, 41.7729, 1.03", "111.582, -93.7037, 42.8583, 0.15", "111.982, -94.2521, 43.3012, 0.15", "112.288, -94.6844, 43.6304, 0.22", "112.889, -95.5008, 44.1945, 0.74", "113.322, -96.0484, 44.5514, 0.96", "114.148, -96.9908, 45.0822, 0.22", "114.694, -97.5293, 45.2942, 0.22", "115.444, -98.1944, 45.488, 0.37", "116.228, -98.8039, 45.5947, 0.15", "116.791, -99.1884, 45.5845, 0.29", "117.527, -99.6645, 45.5007, 0.15", "118.327, -100.175, 45.3319, 0.66", "119.225, -100.726, 45.1212, 0.22", "119.994, -101.183, 44.9398, 0.22", "120.813, -101.705, 44.7832, 0.29", "121.303, -102.052, 44.7231, 0.15", "121.705, -102.362, 44.7145, 0.52", "122.118, -102.721, 44.7887, 0.59", "122.816, -103.421, 45.1093, 0.22", "123.384, -104.035, 45.5491, 0.88", "123.763, -104.436, 45.9802, 0.88", "124.069, -104.753, 46.4301, 0.59", "124.744, -105.441, 47.6182, 0.15", "125.23, -105.94, 48.6598, 0.22", "125.495, -106.197, 49.3383, 0.22", "125.902, -106.558, 50.5635, 0.15", "126.16, -106.771, 51.4123, 0.15", "126.307, -106.882, 51.9337, 0.44", "126.632, -107.085, 53.0955, 0.74", "126.902, -107.253, 54.0745, 0.74", "127.193, -107.486, 55.2924, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-58.6416, 36.8057, 9.3114, 1.18", "-60.9838, 38.1871, 9.16899, 1.18", "-62.2374, 38.9153, 8.98451, 1.03", "-63.2688, 39.5227, 8.72398, 1.4", "-64.6077, 40.27, 8.38255, 1.03", "-65.4965, 40.7285, 8.1815, 0.88", "-66.9094, 41.4167, 7.88743, 0.59", "-68.3249, 42.0776, 7.52217, 0.29", "-69.5794, 42.5774, 7.21894, 0.37", "-71.0006, 43.0657, 6.91758, 0.74", "-72.3303, 43.4661, 6.68895, 1.4", "-74.1211, 43.9713, 6.4571, 0.88", "-75.2142, 44.2548, 6.40586, 0.88", "-75.9805, 44.4559, 6.42794, 0.88", "-76.9937, 44.7131, 6.5032, 0.59", "-78.2352, 45.0107, 6.6055, 0.44", "-79.2805, 45.2144, 6.72947, 0.29", "-81.1819, 45.5076, 7.05398, 0.52", "-82.4665, 45.6709, 7.32438, 0.74", "-83.7475, 45.7886, 7.63702, 1.03", "-85.3176, 45.8816, 8.02782, 0.59", "-86.8548, 45.9439, 8.40132, 0.22", "-88.1667, 45.9695, 8.69399, 0.22", "-89.6973, 45.9705, 9.02461, 0.22", "-91.1663, 45.9592, 9.39329, 0.37", "-91.8955, 45.9549, 9.58401, 0.52", "-93.3027, 45.971, 9.92805, 1.33", "-94.957, 46.0231, 10.2943, 0.29", "-96.9274, 46.0939, 10.6398, 0.37", "-98.6363, 46.1699, 10.8482, 0.37", "-99.6376, 46.2158, 10.9094, 0.37", "-100.822, 46.2484, 10.9014, 0.66", "-101.486, 46.2567, 10.8459, 0.66", "-102.728, 46.2914, 10.64, 0.44", "-103.465, 46.3235, 10.4928, 0.44", "-104.487, 46.3502, 10.3531, 0.22", "-105.45, 46.3554, 10.3523, 0.22", "-106.709, 46.3132, 10.5104, 0.22", "-107.841, 46.2545, 10.7347, 0.15", "-109.405, 46.1277, 11.1647, 0.66", "-110.923, 45.9919, 11.5986, 0.29", "-112.506, 45.8276, 12.0329, 0.66", "-114.012, 45.6487, 12.3738, 1.03", "-115.165, 45.4843, 12.5439, 1.25", "-117.752, 45.033, 12.7141, 0.22", "-119.12, 44.7645, 12.6577, 0.22", "-120.056, 44.5696, 12.5032, 0.29", "-121.351, 44.2927, 12.1014, 0.29", "-122.176, 44.1317, 11.6903, 0.22", "-122.991, 43.9789, 11.122, 0.29", "-123.489, 43.9017, 10.6566, 0.44", "-124.034, 43.8343, 10.0423, 0.66", "-124.58, 43.8057, 9.35178, 0.66", "-125.341, 43.837, 8.33208, 0.22", "-125.928, 43.9059, 7.56198, 0.22", "-126.773, 44.0129, 6.6364, 0.29", "-128.061, 44.1577, 5.4789, 0.29", "-128.669, 44.2095, 5.03722, 0.59", "-129.744, 44.241, 4.45503, 0.59", "-131.154, 44.2224, 3.87772, 0.22", "-133.116, 44.1485, 3.23499, 0.44", "-133.951, 44.0889, 3.0193, 0.44", "-134.914, 43.997, 2.81169, 0.22", "-136.331, 43.855, 2.47689, 0.37", "-136.91, 43.8135, 2.29771, 0.59", "-137.526, 43.8117, 2.0423, 0.96", "-138.462, 43.8789, 1.5465, 0.29", "-139.896, 44.0571, 0.719123, 0.22", "-140.809, 44.1847, 0.274372, 0.22", "-142.416, 44.4375, -0.427848, 0.22", "-143.864, 44.6736, -0.959695, 0.29", "-144.661, 44.8102, -1.20776, 0.29", "-145.71, 45.0039, -1.47485, 0.59", "-148.686, 45.5336, -1.8704, 0.07", "-149.362, 45.6455, -1.8798, 0.15", "-150.242, 45.7771, -1.76419, 0.29", "-151.939, 46.0415, -1.38367, 0.15", "-152.532, 46.1299, -1.2012, 0.22", "-154.631, 46.3937, -0.420463, 0.44", "-155.514, 46.4942, -0.075148, 0.81", "-157.319, 46.6461, 0.677061, 0.22", "-158.272, 46.7083, 1.07163, 0.29", "-160.009, 46.782, 1.77905, 0.22", "-161.337, 46.8503, 2.20052, 0.22", "-162.059, 46.913, 2.30318, 0.66", "-162.529, 46.977, 2.27724, 0.66", "-163.693, 47.2346, 1.90066, 0.22", "-164.744, 47.5882, 1.2644, 0.29", "-165.737, 48.0951, 0.378734, 0.74", "-167.025, 48.9623, -1.10875, 0.22", "-167.744, 49.4925, -2.06105, 0.15", "-168.097, 49.7667, -2.58478, 0.29", "-168.529, 50.117, -3.29539, 0.74", "-169.094, 50.5628, -4.24155, 0.22", "-169.856, 51.0283, -5.33858, 0.22", "-170.265, 51.2054, -5.77703, 0.52", "-170.543, 51.3083, -6.05242, 0.88", "-171.094, 51.4925, -6.5616, 0.29", "-171.97, 51.6599, -7.02951, 0.22", "-173.279, 51.828, -7.37305, 0.22", "-174.105, 51.917, -7.45389, 0.22", "-175.388, 52.0576, -7.47667, 0.22", "-176.788, 52.1838, -7.40579, 0.15", "-181.348, 52.3364, -6.6029, 0.15", "-182.639, 52.2923, -6.24442, 0.15", "-183.509, 52.2231, -5.93499, 0.15", "-184.332, 52.1161, -5.57787, 0.15", "-185.451, 51.936, -5.04557, 0.37", "-188.295, 51.3885, -3.60999, 0.15", "-190.186, 50.9713, -2.69267, 0.15", "-191.589, 50.5986, -1.95727, 0.15", "-193.545, 50.0313, -0.840741, 0.15" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-58.6416, 36.8057, 9.3114, 0.29", "-59.7875, 36.3179, 11.0814, 0.29", "-61.6879, 35.4374, 13.9493, 0.29", "-63.3715, 34.6593, 16.3762, 0.29", "-65.1335, 33.8897, 18.8019, 0.29", "-66.5883, 33.3367, 20.6873, 0.29", "-66.9735, 33.2093, 21.153, 0.29", "-67.9604, 32.9347, 22.2296, 0.29", "-68.5383, 32.8034, 22.757, 0.37", "-70.0308, 32.5288, 23.7944, 0.37", "-71.2982, 32.3229, 24.4283, 0.22", "-72.8409, 32.085, 25.07, 0.22", "-73.4389, 31.9769, 25.3199, 0.22", "-73.9587, 31.8467, 25.5684, 0.22", "-74.8931, 31.531, 26.1017, 0.22", "-75.6293, 31.2278, 26.5554, 0.22", "-76.0103, 31.0416, 26.8057, 0.22", "-76.5116, 30.7852, 27.1664, 0.29", "-77.7696, 30.0973, 28.0895, 0.29", "-79.1979, 29.2996, 29.0989, 0.29", "-80.263, 28.6903, 29.8043, 0.29", "-80.9552, 28.2913, 30.2594, 0.15", "-83.4849, 26.7837, 31.9317, 0.15", "-86.107, 25.1323, 33.6611, 0.15", "-88.4015, 23.5877, 35.1353, 0.15", "-89.6619, 22.6914, 35.9317, 0.52" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-40.3506, 40.8642, -44.0057, 1.18", "-41.9332, 41.2811, -43.6578, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-40.3506, 40.8642, -44.0057, 0.29", "-41.0159, 41.6302, -43.945, 0.29", "-41.5769, 42.3223, -43.9925, 0.29", "-42.0522, 42.9248, -44.083, 0.88", "-42.6075, 43.6344, -44.2204, 0.44", "-43.141, 44.3208, -44.3922, 0.44", "-43.4717, 44.7385, -44.5109, 0.29", "-44.115, 45.569, -44.8588, 0.29", "-44.4271, 45.9585, -45.0508, 0.74", "-44.6729, 46.2272, -45.1995, 0.96", "-45.1924, 46.722, -45.4599, 0.96", "-45.8751, 47.2907, -45.7101, 0.66", "-46.9143, 48.0495, -45.9232, 0.37", "-47.5324, 48.4669, -45.9445, 0.22", "-48.4062, 49.0363, -45.8731, 0.29", "-49.4151, 49.672, -45.6605, 0.29", "-49.9872, 50.0145, -45.4583, 0.81", "-50.9433, 50.5654, -45.0069, 1.03", "-51.7899, 51.0608, -44.5267, 0.22", "-52.2929, 51.3891, -44.2187, 0.29", "-52.759, 51.7514, -43.9168, 0.44", "-53.1378, 52.1063, -43.6915, 0.44", "-53.6018, 52.6236, -43.4012, 0.44", "-54.0496, 53.2666, -43.1454, 0.52", "-54.3263, 53.7539, -43.0463, 0.52", "-54.6585, 54.4531, -42.9992, 0.29", "-54.8559, 54.9277, -43.0056, 0.37", "-55.1233, 55.5862, -43.0449, 0.37", "-55.6334, 56.7607, -43.1831, 0.81", "-56.0251, 57.5942, -43.3319, 1.03", "-56.3785, 58.2879, -43.4857, 0.74", "-56.8157, 59.0869, -43.6866, 0.66", "-57.2464, 59.8536, -43.8851, 0.37", "-57.8053, 60.8386, -44.1405, 0.29", "-58.1646, 61.4568, -44.2654, 0.29", "-58.3527, 61.8201, -44.3507, 0.66", "-58.5456, 62.2463, -44.4567, 1.18", "-58.6886, 62.6307, -44.5473, 1.18", "-58.9022, 63.2701, -44.6796, 0.74", "-59.1121, 63.8592, -44.7789, 0.44", "-59.4446, 64.7101, -44.9279, 0.29", "-59.6179, 65.1319, -45.0053, 0.29", "-59.804, 65.5699, -45.0845, 0.29", "-60.1316, 66.3311, -45.2448, 0.29", "-60.4226, 66.9801, -45.3903, 0.22", "-60.7887, 67.7488, -45.5697, 0.37", "-61.1381, 68.4432, -45.7163, 0.22", "-61.2927, 68.7568, -45.783, 0.22", "-61.5935, 69.3983, -45.9085, 0.44", "-61.8054, 69.8758, -45.9874, 0.96", "-61.9979, 70.283, -46.0427, 1.18", "-62.3722, 70.9713, -46.1144, 1.18", "-62.6391, 71.4219, -46.178, 1.25", "-62.9544, 71.9343, -46.2819, 0.37", "-63.2338, 72.3759, -46.3862, 0.22", "-63.5582, 72.9011, -46.5451, 0.29", "-63.7561, 73.265, -46.6712, 0.29", "-64.076, 73.9713, -46.9536, 0.22", "-64.317, 74.6352, -47.2319, 0.22", "-64.3933, 74.8746, -47.3322, 0.44", "-64.5782, 75.5329, -47.6244, 0.81", "-64.8239, 76.539, -48.0986, 0.29", "-64.9995, 77.2943, -48.4893, 0.52", "-65.1525, 77.8819, -48.8199, 1.03", "-65.3168, 78.4132, -49.1546, 1.03", "-65.6375, 79.2699, -49.7568, 0.66", "-65.9616, 80.0138, -50.3317, 0.59", "-66.3217, 80.7463, -50.9314, 0.88", "-66.7657, 81.6104, -51.6251, 0.22", "-67.1238, 82.2961, -52.1547, 0.59", "-67.5527, 83.1396, -52.7749, 0.22", "-67.7747, 83.5944, -53.0777, 0.44", "-68.017, 84.1784, -53.4383, 0.74", "-68.1547, 84.645, -53.7114, 0.88", "-68.2747, 85.274, -54.0765, 0.37", "-68.3548, 85.862, -54.4371, 0.37", "-68.4374, 86.5619, -54.8751, 0.37", "-68.5611, 87.4151, -55.4061, 0.29", "-68.6605, 88.1136, -55.8569, 0.52", "-68.7045, 88.4337, -56.0752, 0.52", "-68.8122, 89.224, -56.6163, 0.52", "-68.9361, 89.8596, -57.0287, 0.37", "-69.062, 90.2314, -57.2567, 0.37", "-72.1557, 96.3809, -57.7897, 0.37", "-74.6429, 102.746, -56.6909, 0.37", "-76.5684, 109.235, -55.2226, 0.37", "-78.3756, 115.794, -53.9153, 0.37", "-78.9723, 122.655, -53.1506, 0.37", "-79.2978, 129.27, -51.1293, 0.37", "-79.0309, 135.996, -49.508, 0.37", "-78.7432, 142.628, -47.5497, 0.37", "-79.1327, 149.408, -46.1745, 0.37" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-8.43958, 82.489, -43.8149, 0.52", "-9.1422, 82.2941, -45.5507, 0.52", "-9.76355, 82.0049, -47.276, 0.52", "-10.0117, 81.7775, -48.4686, 0.66", "-10.0648, 81.5211, -49.5636, 0.44", "-9.98674, 81.269, -50.6265, 0.37", "-9.73046, 80.8634, -52.5283, 0.37", "-9.63072, 80.7673, -53.017, 0.37", "-9.04826, 80.3425, -55.1397, 0.37", "-8.52316, 79.9798, -56.8425, 0.52", "-8.15713, 79.711, -58.0695, 0.52", "-8.00683, 79.5641, -58.6832, 0.52", "-7.9019, 79.2001, -59.8563, 0.52", "-8.08531, 78.7573, -60.9611, 0.66", "-8.64461, 78.2438, -61.5624, 0.52", "-9.50404, 77.5604, -62.1998, 0.44", "-10.1705, 77.0336, -62.5904, 0.44", "-10.7109, 76.5854, -62.8531, 0.81", "-11.648, 75.8031, -63.1524, 0.96", "-13.0449, 74.709, -63.4342, 0.22", "-16.2259, 69.2383, -71.3116, 0.22", "-21.6051, 63.2981, -77.4727, 0.22", "-25.9817, 56.4119, -83.4906, 0.22" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.43958, 82.489, -43.8149, 0.59", "-8.31826, 83.7723, -43.2067, 0.59", "-8.23828, 85.2504, -42.6096, 0.59", "-8.18342, 86.4802, -42.2895, 0.66", "-8.17282, 87.429, -42.1473, 0.81", "-8.2001, 88.8281, -42.1017, 0.52", "-8.28241, 90.5332, -42.2315, 0.52", "-8.36791, 91.6056, -42.5471, 0.66", "-8.48082, 93.2491, -43.4263, 1.03", "-8.53352, 94.8399, -44.6815, 0.37", "-8.48343, 96.0226, -45.9366, 0.37", "-8.36322, 96.9115, -47.1109, 0.59", "-8.10054, 98.0844, -48.8598, 0.74", "-7.77088, 99.0643, -50.4302, 0.74", "-7.28049, 100.137, -52.2314, 0.37", "-6.8228, 100.902, -53.5607, 0.37", "-6.48431, 101.375, -54.3303, 0.37", "-6.10767, 101.814, -55.0512, 0.44", "-5.47102, 102.547, -56.1566, 0.44", "-5.10503, 102.975, -56.7592, 0.74", "-4.43613, 103.776, -57.8496, 0.74", "-3.61591, 104.71, -59.1403, 0.15", "-2.7952, 105.52, -60.4267, 0.15", "-0.609996, 114.772, -64.6565, 0.15", "1.01616, 124.378, -68.3551, 0.15", "1.51396, 132.981, -74.1396, 0.15", "1.57707, 140.89, -80.8202, 0.15", "1.26357, 149.605, -86.4595, 0.15", "1.53533, 158.645, -91.5895, 0.15", "3.24372, 167.812, -96.1973, 0.15", "5.1839, 177.409, -99.7651, 0.15", "6.10402, 187.294, -102.979, 0.15", "9.01746, 197.199, -104.496, 0.15", "12.1962, 207.099, -105.379, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "49.9371, 191.706, -86.9008, 0.29", "49.0739, 192.431, -88.4248, 0.29", "47.852, 193.208, -90.4826, 0.29", "47.0018, 193.658, -91.7866, 0.29", "46.2916, 194.019, -92.7772, 0.29", "45.7994, 194.274, -93.4395, 0.59", "44.4462, 195.036, -95.2839, 0.22", "43.5686, 195.634, -96.5474, 0.22", "43.1472, 195.996, -97.2083, 0.22", "42.6815, 196.488, -98.0618, 0.15", "42.7023, 196.944, -98.6796, 0.15", "43.1247, 197.52, -99.2578, 0.66", "44.073, 198.467, -100.055, 0.22", "44.5767, 198.929, -100.428, 0.22", "45.0626, 199.301, -100.766, 0.44", "46.4728, 200.133, -101.664, 0.29", "46.003, 205.635, -111.982, 0.29", "44.479, 211.576, -121.956, 0.29", "42.0514, 217.879, -131.528, 0.29", "39.6746, 225.551, -140.109, 0.29", "37.5803, 232.746, -149.148, 0.29", "32.872, 238.718, -158.032, 0.29", "26.7336, 243.714, -166.6, 0.29", "20.2888, 249.814, -174.204, 0.29", "15.1863, 255.729, -182.901, 0.29", "10.4094, 262.848, -190.896, 0.29", "7.02003, 270.628, -199.023, 0.29", "4.78847, 277.138, -208.512, 0.29", "4.87172, 282.494, -218.915, 0.29", "4.23724, 285.742, -230.087, 0.29", "4.20558, 287.427, -241.592, 0.29", "3.26571, 287.052, -253.156, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "49.9371, 191.706, -86.9008, 0.74", "49.6482, 192.367, -86.6327, 0.74", "48.177, 195.311, -85.511, 0.29", "47.6226, 196.284, -85.1467, 0.29", "46.693, 197.746, -84.6097, 0.52", "46.018, 198.706, -84.2756, 0.29", "45.0907, 199.906, -83.9466, 0.37", "44.2418, 200.867, -83.7808, 0.59", "43.5641, 201.548, -83.7058, 0.44", "42.8108, 202.344, -83.5935, 0.88", "41.4785, 203.962, -83.2826, 0.37", "40.2532, 205.749, -82.832, 0.66", "39.6085, 206.933, -82.4988, 0.29", "38.9822, 208.427, -82.0752, 0.22", "38.3997, 210.258, -81.5687, 0.74", "37.9106, 212.356, -80.9999, 0.29", "37.7129, 213.646, -80.665, 0.22", "37.5977, 214.704, -80.4068, 0.88", "37.4579, 216.045, -80.1901, 0.88", "37.3361, 217.108, -80.1372, 0.22", "37.1984, 218.186, -80.1877, 0.22", "37.0498, 219.432, -80.3253, 0.15", "36.9857, 220.18, -80.4155, 0.66", "36.9485, 220.968, -80.5197, 0.22", "36.9207, 222.139, -80.6872, 0.15", "36.9328, 222.743, -80.7924, 0.15", "36.9923, 223.686, -81.0417, 0.44", "37.1232, 224.939, -81.514, 0.44", "37.2574, 226.284, -82.2378, 0.22", "37.3124, 226.996, -82.768, 0.22", "37.3521, 227.873, -83.6301, 0.52", "37.3514, 228.901, -84.8993, 0.52", "37.3302, 229.522, -85.8367, 0.22", "37.2934, 230.585, -87.6216, 0.22", "37.2579, 231.385, -89.0493, 0.22", "37.214, 231.993, -90.169, 0.22", "37.1349, 232.706, -91.4728, 0.22", "37.0339, 233.773, -93.3293, 0.22", "36.9878, 234.556, -94.7051, 0.66", "37.019, 235.056, -95.5514, 0.37", "35.4248, 246.336, -99.3243, 0.37", "35.2206, 257.845, -102.764, 0.37", "33.5024, 269.692, -103.645, 0.37", "32.9141, 281.685, -103.682, 0.37", "31.3864, 293.5, -105.185, 0.37", "31.4392, 305.193, -107.963, 0.37", "33.5538, 316.752, -110.487, 0.37", "36.4314, 328.373, -111.477, 0.37", "41.4884, 339.234, -111.524, 0.37", "47.7783, 349.243, -113.348, 0.37", "54.1585, 358.601, -117.155, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-41.9332, 41.2811, -43.6578, 0.52", "-43.3217, 41.9319, -44.1539, 0.52", "-43.8753, 42.1987, -44.3691, 0.66", "-44.7524, 42.6115, -44.7077, 0.88", "-46.0719, 43.2088, -45.2051, 0.74", "-47.2592, 43.705, -45.6232, 0.52", "-48.2597, 44.0948, -45.9576, 0.52", "-49.7643, 44.6318, -46.4865, 0.74", "-50.6101, 44.9055, -46.7704, 0.74", "-51.8207, 45.2408, -47.1257, 0.66", "-53.1723, 45.527, -47.4769, 0.37", "-53.784, 45.6196, -47.6286, 0.37", "-54.4044, 45.6781, -47.7991, 0.88", "-55.3767, 45.7227, -48.1138, 0.88", "-56.1316, 45.7477, -48.4079, 0.59", "-56.8854, 45.7543, -48.7519, 0.59", "-57.653, 45.755, -49.1896, 0.59", "-58.2881, 45.7381, -49.6596, 0.59", "-58.9664, 45.7077, -50.2332, 0.59", "-59.4611, 45.6721, -50.6665, 0.81", "-60.1013, 45.6152, -51.2088, 1.03", "-61.2632, 45.4535, -52.1124, 0.52", "-62.8402, 45.1661, -53.2026, 0.59", "-63.8742, 44.9038, -53.8478, 0.59", "-64.7505, 44.6065, -54.3182, 0.59", "-65.9583, 44.0703, -54.868, 0.59", "-66.8061, 43.5869, -55.1507, 0.59", "-67.8132, 42.8784, -55.3274, 0.52", "-68.4883, 42.3252, -55.3637, 0.59", "-69.2227, 41.6361, -55.383, 0.52", "-69.9071, 40.9563, -55.4062, 0.37", "-70.8124, 40.0407, -55.4677, 0.66", "-71.3928, 39.4882, -55.5289, 0.66", "-71.968, 39.0059, -55.6229, 0.88", "-72.6893, 38.4936, -55.7691, 0.88", "-73.9764, 37.6756, -56.1214, 0.52", "-74.7179, 37.2476, -56.4058, 0.52", "-75.2088, 37.0004, -56.6621, 0.66", "-76.4277, 36.48, -57.4772, 0.44", "-76.9972, 36.296, -57.9417, 0.59", "-77.7522, 36.1436, -58.6435, 0.66", "-78.9813, 36.0744, -59.9064, 0.66", "-79.797, 36.117, -60.8033, 0.88", "-80.4275, 36.2103, -61.5198, 0.88", "-81.0659, 36.348, -62.2472, 0.81", "-81.6637, 36.4993, -62.8689, 1.11", "-82.5294, 36.7313, -63.6096, 0.52", "-83.6883, 37.0482, -64.4539, 0.52", "-84.9958, 37.4051, -65.2811, 0.29", "-85.4121, 37.5163, -65.5134, 0.29", "-86.3365, 37.7387, -66.0147, 0.59", "-87.5332, 37.9686, -66.7559, 0.29", "-89.0665, 38.2101, -67.9236, 0.37", "-90.0405, 38.3242, -68.7644, 0.37", "-90.765, 38.3848, -69.4561, 0.37", "-92.0003, 38.4675, -70.7496, 0.44", "-93.5236, 38.5206, -72.5645, 0.96", "-94.9053, 38.5011, -74.4733, 0.44", "-95.4455, 38.4577, -75.3263, 0.52", "-96.0537, 38.3961, -76.4641, 0.52", "-103.777, 37.4077, -82.0698, 0.52", "-111.868, 37.0097, -87.2044, 0.52", "-120.406, 35.5062, -91.3265, 0.52", "-129.393, 32.7689, -93.3732, 0.52", "-138.288, 29.1429, -94.0859, 0.52", "-147.567, 27.0928, -95.4902, 0.52", "-156.148, 23.3068, -97.6928, 0.52", "-164.822, 20.507, -100.757, 0.52", "-173.191, 18.5076, -105.022, 0.52", "-180.898, 17.0986, -110.565, 0.52", "-188.503, 15.0816, -116.073, 0.52", "-195.577, 13.3766, -122.335, 0.52", "-202.955, 11.5715, -128.208, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-41.9332, 41.2811, -43.6578, 0.29", "-42.9509, 41.5186, -45.0962, 0.29", "-44.1605, 41.7351, -46.711, 0.44", "-44.6808, 41.8146, -47.3377, 0.44", "-45.5409, 41.9419, -48.2632, 0.29", "-46.4578, 42.0831, -49.1532, 0.29", "-47.3951, 42.2319, -49.9877, 0.59", "-48.1043, 42.3563, -50.4475, 0.81", "-49.0263, 42.5008, -50.9369, 0.59", "-49.9025, 42.6179, -51.4144, 0.44", "-50.6184, 42.7006, -51.8462, 0.74", "-51.1527, 42.7753, -52.2108, 1.03", "-52.1725, 42.9475, -53.033, 0.29", "-53.2514, 43.112, -54.1022, 0.29", "-54.3079, 43.1829, -55.3905, 0.96", "-55.3142, 43.1072, -56.8663, 0.66", "-55.9846, 42.9233, -58.0161, 0.74", "-56.579, 42.7107, -59.1515, 0.81", "-57.0891, 42.4593, -60.274, 0.52", "-57.7127, 42.0237, -61.7464, 0.52", "-58.1751, 41.5094, -62.9732, 0.44", "-58.5133, 40.9137, -63.954, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-202.955, 11.5715, -128.208, 0.66", "-212.414, 4.67838, -129.478, 0.66", "-220.937, -3.45768, -130.31, 0.66", "-229.274, -11.8036, -131.038, 0.66", "-238.503, -19.1416, -130.53, 0.66", "-247.045, -27.2067, -129.132, 0.66", "-255.204, -35.7716, -128.682, 0.66", "-262.693, -44.8986, -129.577, 0.66", "-269.665, -54.473, -130.13, 0.66", "-276.547, -64.1391, -130.098, 0.66", "-282.901, -74.1518, -129.318, 0.66", "-288.73, -84.2375, -126.883, 0.66", "-294.069, -94.5868, -124.395, 0.66", "-301.5, -103.736, -123.046, 0.66", "-308.471, -113.279, -121.905, 0.66", "-315.601, -122.672, -123.029, 0.66", "-323.072, -131.762, -124.298, 0.66", "-330.708, -139.827, -128.213, 0.66", "-337.516, -147.945, -133.323, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-202.955, 11.5715, -128.208, 0.15", "-213.262, 17.2156, -135.179, 0.66", "-223.018, 24.9424, -140.928, 0.66", "-233.026, 32.5225, -146.424, 0.66", "-242.345, 41.5255, -151.008, 0.66", "-251.641, 50.0904, -156.374, 0.66", "-259.004, 59.4215, -163.305, 0.66", "-266.614, 68.0155, -170.851, 0.66", "-273.53, 77.6045, -177.908, 0.66", "-281.909, 85.1176, -185.732, 0.66", "-289.296, 91.7454, -195.159, 0.66", "-294.559, 99.1439, -205.431, 0.66", "-301.587, 104.556, -215.825, 0.66", "-306.711, 111.259, -226.61, 0.66", "-310.558, 119.679, -236.764, 0.66", "-312.466, 128.907, -246.803, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-58.5133, 40.9137, -63.954, 0.66", "-58.1113, 40.0839, -65.0183, 0.66", "-57.7651, 39.5065, -65.966, 0.59", "-57.5435, 39.144, -66.7442, 0.29", "-57.3138, 38.6576, -67.9522, 0.29", "-57.2414, 38.488, -68.4918, 0.44", "-57.1074, 38.1545, -70.0304, 0.59", "-57.0647, 37.9768, -71.2007, 0.59", "-57.0522, 37.8761, -72.5484, 0.59", "-57.0628, 37.8596, -73.5562, 0.66", "-57.1184, 37.8997, -75.147, 0.66", "-57.2358, 38.0414, -77.1346, 0.22", "-55.9609, 36.9553, -86.7394, 0.22", "-54.9138, 35.7851, -96.3621, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-58.5133, 40.9137, -63.954, 0.15", "-59.3673, 41.0648, -64.0235, 0.15", "-60.2164, 41.1445, -64.0963, 0.22", "-61.0978, 41.1039, -64.1978, 0.37", "-61.9396, 40.9858, -64.3267, 0.52", "-63.074, 40.7166, -64.5074, 0.22", "-63.7417, 40.5224, -64.6073, 0.22", "-64.2436, 40.3434, -64.6443, 0.22", "-65.3557, 39.8656, -64.6705, 0.29", "-65.997, 39.5548, -64.6671, 0.22", "-66.9393, 39.1136, -64.717, 0.29", "-67.8968, 38.7305, -64.8327, 0.15", "-69.1084, 38.3486, -65.0158, 0.15", "-69.5813, 38.2425, -65.1044, 0.44", "-70.1695, 38.1577, -65.2421, 0.44", "-71.8139, 38.0159, -65.7193, 0.22", "-72.6038, 37.9929, -65.9575, 0.22", "-73.2163, 38.0056, -66.1325, 0.52", "-73.9446, 38.0686, -66.357, 0.52", "-74.8039, 38.1689, -66.5844, 0.22", "-75.4746, 38.2722, -66.7058, 0.44", "-76.7552, 38.4988, -66.7398, 0.44", "-77.6463, 38.7188, -66.7165, 0.74", "-78.6779, 39.0507, -66.6146, 0.88", "-87.8435, 37.6317, -66.8781, 0.88", "-96.8135, 35.2598, -67.1668, 0.88", "-105.84, 34.1468, -69.0029, 0.88", "-114.508, 34.2687, -72.3122, 0.88", "-122.738, 34.5508, -76.5883, 0.88", "-131.129, 35.7295, -80.383, 0.88", "-138.685, 38.0919, -85.2523, 0.88", "-145.378, 39.1179, -91.5991, 0.88", "-152.283, 41.257, -97.4326, 0.88", "-160.554, 41.4333, -101.635, 0.88", "-169.232, 40.0196, -104.603, 0.88", "-176.745, 37.3308, -109.366, 0.88", "-183.411, 34.8796, -115.361, 0.88", "-191.213, 33.7766, -120.264, 0.88", "-198.953, 32.9925, -125.321, 0.88", "-207.324, 32.1681, -129.237, 0.88", "-216.108, 31.3437, -132.107, 0.88", "-224.736, 28.682, -134.285, 0.88", "-233.797, 26.8151, -135.012, 0.88", "-242.953, 26.0825, -133.699, 0.88", "-251.741, 24.023, -131.545, 0.88", "-259.698, 20.3383, -128.472, 0.88", "-266.967, 15.793, -124.857, 0.88", "-274.352, 10.3518, -123.176, 0.88", "-281.004, 4.14362, -121.049, 0.88", "-286.235, -3.09724, -118.202, 0.88", "-290.265, -11.1822, -115.57, 0.88", "-292.721, -19.8724, -112.825, 0.88", "-293.466, -29.2086, -111.35, 0.88", "-295.1, -38.1983, -108.913, 0.88", "-297.85, -46.9389, -106.636, 0.88", "-300.52, -55.592, -103.982, 0.88", "-302.241, -64.69, -102.028, 0.88", "-303.54, -73.61, -99.1827, 0.88", "-305.143, -82.5644, -96.6079, 0.88", "-306.374, -91.5794, -94.024, 0.88", "-309.266, -99.8951, -90.6771, 0.88", "-311.398, -108.479, -87.4003, 0.88", "-314.909, -116.204, -83.3742, 0.88", "-318.95, -124.343, -80.9198, 0.88" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-54.9138, 35.7851, -96.3621, 0.22", "-53.1742, 35.1275, -106.384, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-54.9138, 35.7851, -96.3621, 0.22", "-52.5958, 35.4667, -107.327, 0.22", "-52.0136, 33.3726, -118.345, 0.22", "-50.3146, 33.0233, -129.418, 0.22", "-47.8822, 31.7352, -140.306, 0.22", "-44.117, 32.7906, -150.799, 0.22", "-39.9232, 32.1733, -161.199, 0.22", "-34.2217, 31.7637, -170.871, 0.22", "-29.6509, 29.1487, -180.844, 0.22", "-25.5472, 27.7694, -191.223, 0.22", "-23.1533, 26.2145, -202.089, 0.22", "-20.5642, 23.764, -212.766, 0.22", "-18.8403, 20.2476, -223.335, 0.22", "-18.0312, 16.7044, -233.994, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_25", "dend_0", "dend_31", "dend_26", "dend_4", "dend_1", "dend_35", "dend_32", "dend_30", "dend_27", "dend_10", "dend_5", "dend_3", "dend_2", "dend_39", "dend_36", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_11", "dend_9", "dend_6", "dend_43", "dend_40", "dend_38", "dend_37", "dend_24", "dend_23", "dend_13", "dend_12", "dend_8", "dend_7", "dend_42", "dend_41", "dend_19", "dend_14", "dend_21", "dend_20", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_25", "dend_0", "dend_31", "dend_26", "dend_4", "dend_1", "dend_35", "dend_32", "dend_30", "dend_27", "dend_10", "dend_5", "dend_3", "dend_2", "dend_39", "dend_36", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_11", "dend_9", "dend_6", "dend_43", "dend_40", "dend_38", "dend_37", "dend_24", "dend_23", "dend_13", "dend_12", "dend_8", "dend_7", "dend_42", "dend_41", "dend_19", "dend_14", "dend_21", "dend_20", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L6_DBC_ed383a5814_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_10
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_25(0), soma_0(0.45000015763654744)
    connect dend_0(0), soma_0(0.45000015763654744)
    connect axon_0(0), soma_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.20498, -9.63696, 0.0, 2.93949 ) }
    soma_0 { pt3dadd( 1.97921, -8.62937, 0.0, 5.10114 ) }
    soma_0 { pt3dadd( 1.75343, -7.62179, 0.0, 6.34149 ) }
    soma_0 { pt3dadd( 1.52766, -6.61421, 0.0, 7.24948 ) }
    soma_0 { pt3dadd( 1.30189, -5.60662, 0.0, 8.32859 ) }
    soma_0 { pt3dadd( 1.07612, -4.59904, 0.0, 9.63098 ) }
    soma_0 { pt3dadd( 0.850343, -3.59146, 0.0, 10.5761 ) }
    soma_0 { pt3dadd( 0.624571, -2.58388, 0.0, 11.2008 ) }
    soma_0 { pt3dadd( 0.398798, -1.57629, 0.0, 11.5851 ) }
    soma_0 { pt3dadd( 0.173026, -0.56871, 0.0, 11.8715 ) }
    soma_0 { pt3dadd( -0.0527468, 0.438873, 0.0, 11.942 ) }
    soma_0 { pt3dadd( -0.278519, 1.44646, 0.0, 11.923 ) }
    soma_0 { pt3dadd( -0.504292, 2.45404, 0.0, 11.4797 ) }
    soma_0 { pt3dadd( -0.730064, 3.46162, 0.0, 10.9001 ) }
    soma_0 { pt3dadd( -0.955837, 4.4692, 0.0, 10.1322 ) }
    soma_0 { pt3dadd( -1.18161, 5.47679, 0.0, 9.32117 ) }
    soma_0 { pt3dadd( -1.40738, 6.48437, 0.0, 8.43955 ) }
    soma_0 { pt3dadd( -1.63315, 7.49195, 0.0, 7.43264 ) }
    soma_0 { pt3dadd( -1.85893, 8.49954, 0.0, 6.41765 ) }
    soma_0 { pt3dadd( -2.0847, 9.50712, 0.0, 5.2256 ) }
    soma_0 { pt3dadd( -2.31047, 10.5147, 0.0, 2.87927 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 21/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.67666, -9.94541, 7.1, 4.35 ) }
    dend_25 { pt3dadd( 1.67666, -9.94541, 7.1, 4.35 ) }
    dend_25 { pt3dadd( 2.2055, -11.1196, 7.85913, 3.32 ) }
    dend_25 { pt3dadd( 3.16371, -12.9498, 9.36126, 2.36 ) }
    dend_25 { pt3dadd( 4.18725, -14.9048, 10.9658, 2.88 ) }
    dend_25 { pt3dadd( 4.28438, -15.0903, 11.1181, 2.65 ) }
    dend_25 { pt3dadd( 5.02405, -16.5031, 12.2776, 1.62 ) }
    dend_25 { pt3dadd( 6.03038, -18.2831, 13.9154, 1.84 ) }
    dend_25 { pt3dadd( 7.03734, -19.7737, 15.6772, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.96334, 10.5443, 0.0, 4.28 ) }
    dend_0 { pt3dadd( -1.96334, 10.5443, 0.0, 4.28 ) }
    dend_0 { pt3dadd( -2.5723, 11.7423, -0.120182, 3.32 ) }
    dend_0 { pt3dadd( -3.00414, 12.5879, -0.262977, 2.88 ) }
    dend_0 { pt3dadd( -3.31702, 13.2023, -0.380322, 2.88 ) }
    dend_0 { pt3dadd( -3.78428, 14.1198, -0.555573, 3.47 ) }
    dend_0 { pt3dadd( -4.39515, 15.3193, -0.784686, 2.51 ) }
    dend_0 { pt3dadd( -5.12145, 16.7229, -1.08131, 2.8 ) }
    dend_0 { pt3dadd( -5.76519, 17.9253, -1.38917, 4.13 ) }
    dend_0 { pt3dadd( -6.06898, 18.4829, -1.55562, 4.13 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.31047, 10.5147, 0.0, 0.592839 ) }
    axon_0 { pt3dadd( -5.59024, 25.1517, 0.0, 0.592839 ) }
    axon_0 { pt3dadd( -8.87001, 39.7888, 0.0, 0.592839 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 43/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 7.03734, -19.7737, 15.6772, 1.4 ) }
    dend_31 { pt3dadd( 8.35542, -20.6274, 14.6494, 1.4 ) }
    dend_31 { pt3dadd( 10.1077, -21.8049, 13.331, 1.4 ) }
    dend_31 { pt3dadd( 11.292, -22.6062, 12.4952, 1.4 ) }
    dend_31 { pt3dadd( 12.7687, -23.6331, 11.5578, 1.4 ) }
    dend_31 { pt3dadd( 14.0562, -24.5431, 10.7847, 1.18 ) }
    dend_31 { pt3dadd( 15.6883, -25.693, 9.87933, 1.4 ) }
    dend_31 { pt3dadd( 16.4276, -26.2376, 9.50704, 1.55 ) }
    dend_31 { pt3dadd( 17.1511, -26.7802, 9.20387, 1.7 ) }
    dend_31 { pt3dadd( 18.7246, -27.9538, 8.61954, 1.18 ) }
    dend_31 { pt3dadd( 19.9504, -28.8464, 8.25332, 1.18 ) }
    dend_31 { pt3dadd( 21.0479, -29.6333, 7.98711, 1.84 ) }
    dend_31 { pt3dadd( 21.6852, -30.0957, 7.88746, 1.84 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 56/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 7.03734, -19.7737, 15.6772, 1.18 ) }
    dend_26 { pt3dadd( 6.77456, -20.4412, 16.6661, 1.18 ) }
    dend_26 { pt3dadd( 6.18278, -22.0871, 19.0257, 1.03 ) }
    dend_26 { pt3dadd( 5.85249, -23.2989, 20.7532, 1.03 ) }
    dend_26 { pt3dadd( 5.73893, -23.9845, 21.7697, 0.96 ) }
    dend_26 { pt3dadd( 5.73236, -24.5553, 22.6808, 0.96 ) }
    dend_26 { pt3dadd( 5.79542, -25.2777, 23.9397, 1.11 ) }
    dend_26 { pt3dadd( 5.94752, -25.9683, 25.3024, 1.03 ) }
    dend_26 { pt3dadd( 6.16489, -26.7244, 26.9422, 1.18 ) }
    dend_26 { pt3dadd( 6.43979, -27.6521, 29.1473, 1.84 ) }
    dend_26 { pt3dadd( 6.72691, -28.7099, 31.9158, 1.18 ) }
    dend_26 { pt3dadd( 6.85175, -29.5101, 34.1271, 1.18 ) }
    dend_26 { pt3dadd( 6.79148, -30.0822, 35.8082, 1.18 ) }
    dend_26 { pt3dadd( 6.41523, -30.6825, 37.6431, 1.33 ) }
    dend_26 { pt3dadd( 5.75146, -31.1642, 39.1621, 1.33 ) }
    dend_26 { pt3dadd( 5.19305, -31.4225, 39.9935, 1.33 ) }
    dend_26 { pt3dadd( 4.17798, -31.788, 41.2664, 1.4 ) }
    dend_26 { pt3dadd( 3.18756, -32.1139, 42.5842, 1.47 ) }
    dend_26 { pt3dadd( 1.8749, -32.5514, 44.7097, 1.33 ) }
    dend_26 { pt3dadd( 0.952033, -32.9014, 46.7413, 1.33 ) }
    dend_26 { pt3dadd( 0.336203, -33.1956, 48.5029, 1.4 ) }
    dend_26 { pt3dadd( -0.397348, -33.6328, 51.3444, 1.4 ) }
    dend_26 { pt3dadd( -0.973069, -34.0771, 54.3528, 1.4 ) }
    dend_26 { pt3dadd( -1.3515, -34.4933, 56.7906, 1.4 ) }
    dend_26 { pt3dadd( -1.78124, -35.0716, 59.6525, 1.4 ) }
    dend_26 { pt3dadd( -2.02868, -35.3935, 60.8578, 1.11 ) }
    dend_26 { pt3dadd( -2.83777, -36.3166, 63.5596, 1.11 ) }
    dend_26 { pt3dadd( -3.87545, -37.334, 66.0111, 1.25 ) }
    dend_26 { pt3dadd( -4.50984, -37.9073, 67.2163, 1.55 ) }
    dend_26 { pt3dadd( -5.70319, -38.9021, 69.0922, 1.55 ) }
    dend_26 { pt3dadd( -7.17625, -40.0792, 71.1057, 1.25 ) }
    dend_26 { pt3dadd( -8.87184, -41.3807, 73.2738, 1.25 ) }
    dend_26 { pt3dadd( -10.9295, -42.9717, 75.5529, 1.62 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 89/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -6.06898, 18.4829, -1.55562, 2.88 ) }
    dend_4 { pt3dadd( -7.26697, 20.2849, -3.24118, 2.88 ) }
    dend_4 { pt3dadd( -8.13467, 21.5901, -4.46204, 2.88 ) }
    dend_4 { pt3dadd( -9.00529, 22.8996, -5.687, 3.47 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.06898, 18.4829, -1.55562, 2.06 ) }
    dend_1 { pt3dadd( -5.38673, 20.6484, -0.407683, 2.06 ) }
    dend_1 { pt3dadd( -4.77381, 22.6207, 0.469379, 0.96 ) }
    dend_1 { pt3dadd( -4.48854, 23.5059, 0.815249, 0.96 ) }
    dend_1 { pt3dadd( -4.07544, 24.7773, 1.24002, 0.81 ) }
    dend_1 { pt3dadd( -3.73356, 25.792, 1.52851, 0.81 ) }
    dend_1 { pt3dadd( -3.26496, 27.1415, 1.86382, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( -2.96632, 28.0063, 1.96654, 1.11 ) }
    dend_1 { pt3dadd( -2.62311, 28.968, 1.99624, 1.55 ) }
    dend_1 { pt3dadd( -2.18676, 30.2314, 1.99644, 1.18 ) }
    dend_1 { pt3dadd( -1.80092, 31.4399, 1.97015, 0.88 ) }
    dend_1 { pt3dadd( -1.60624, 32.1385, 1.94943, 0.74 ) }
    dend_1 { pt3dadd( -1.33715, 33.3331, 1.90374, 1.18 ) }
    dend_1 { pt3dadd( -1.08279, 34.6709, 1.8831, 0.81 ) }
    dend_1 { pt3dadd( -0.814308, 36.2693, 1.88308, 0.96 ) }
    dend_1 { pt3dadd( -0.584477, 37.6728, 1.87743, 1.25 ) }
    dend_1 { pt3dadd( -0.381215, 38.9006, 1.86756, 1.25 ) }
    dend_1 { pt3dadd( -0.156584, 40.046, 1.85009, 0.66 ) }
    dend_1 { pt3dadd( 0.147046, 41.2359, 1.82124, 0.88 ) }
    dend_1 { pt3dadd( 0.523524, 42.2945, 1.74383, 0.52 ) }
    dend_1 { pt3dadd( 0.964358, 43.2859, 1.62042, 0.96 ) }
    dend_1 { pt3dadd( 1.27684, 43.9095, 1.51545, 0.96 ) }
    dend_1 { pt3dadd( 1.92421, 45.0868, 1.30508, 0.74 ) }
    dend_1 { pt3dadd( 2.47355, 46.0145, 1.13059, 0.88 ) }
    dend_1 { pt3dadd( 3.16045, 47.1491, 0.910212, 0.88 ) }
    dend_1 { pt3dadd( 3.93096, 48.4533, 0.740261, 0.96 ) }
    dend_1 { pt3dadd( 4.16885, 48.8607, 0.715023, 0.96 ) }
    dend_1 { pt3dadd( 4.8091, 49.9865, 0.727691, 0.96 ) }
    dend_1 { pt3dadd( 5.09616, 50.5043, 0.784905, 1.11 ) }
    dend_1 { pt3dadd( 5.44879, 51.157, 0.905366, 0.96 ) }
    dend_1 { pt3dadd( 6.11616, 52.3113, 1.22435, 0.81 ) }
    dend_1 { pt3dadd( 6.70683, 53.2734, 1.55517, 0.66 ) }
    dend_1 { pt3dadd( 7.48307, 54.5327, 2.01354, 0.59 ) }
    dend_1 { pt3dadd( 8.15295, 55.6081, 2.48466, 0.88 ) }
    dend_1 { pt3dadd( 8.79143, 56.6267, 2.95978, 1.4 ) }
    dend_1 { pt3dadd( 9.74321, 58.1026, 3.70165, 0.88 ) }
    dend_1 { pt3dadd( 10.5604, 59.3097, 4.3586, 0.74 ) }
    dend_1 { pt3dadd( 11.0134, 59.973, 4.74981, 0.74 ) }
    dend_1 { pt3dadd( 12.163, 61.5445, 5.71367, 0.74 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 32/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -8.87001, 39.7888, 0.0, 0.158857 ) }
    axon_1 { pt3dadd( -12.1498, 54.4258, 0.0, 0.158857 ) }
    axon_1 { pt3dadd( -15.4296, 69.0629, 0.0, 0.158857 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 35/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 21.6852, -30.0957, 7.88746, 1.7 ) }
    dend_35 { pt3dadd( 22.8126, -29.99, 9.5204, 1.7 ) }
    dend_35 { pt3dadd( 23.7659, -30.0014, 10.9585, 1.25 ) }
    dend_35 { pt3dadd( 24.4987, -30.0805, 12.0985, 1.25 ) }
    dend_35 { pt3dadd( 25.2338, -30.2254, 13.2306, 1.55 ) }
    dend_35 { pt3dadd( 26.1619, -30.474, 14.6287, 1.4 ) }
    dend_35 { pt3dadd( 27.0367, -30.7473, 15.9141, 1.62 ) }
    dend_35 { pt3dadd( 27.903, -31.0965, 17.1123, 1.55 ) }
    dend_35 { pt3dadd( 28.9142, -31.5504, 18.4684, 1.4 ) }
    dend_35 { pt3dadd( 29.7774, -31.9546, 19.571, 1.47 ) }
    dend_35 { pt3dadd( 31.0289, -32.5554, 21.0859, 1.18 ) }
    dend_35 { pt3dadd( 32.2237, -33.1096, 22.4249, 1.18 ) }
    dend_35 { pt3dadd( 33.5426, -33.6887, 23.7822, 1.03 ) }
    dend_35 { pt3dadd( 34.6554, -34.1365, 24.823, 1.03 ) }
    dend_35 { pt3dadd( 35.13, -34.3035, 25.2241, 1.25 ) }
    dend_35 { pt3dadd( 36.3297, -34.6623, 26.1677, 1.11 ) }
    dend_35 { pt3dadd( 37.3682, -34.9157, 27.0099, 1.33 ) }
    dend_35 { pt3dadd( 38.0222, -35.0464, 27.5432, 1.62 ) }
    dend_35 { pt3dadd( 39.5227, -35.316, 28.7666, 1.33 ) }
    dend_35 { pt3dadd( 40.9978, -35.5446, 29.9814, 1.25 ) }
    dend_35 { pt3dadd( 42.2594, -35.6951, 31.0516, 1.18 ) }
    dend_35 { pt3dadd( 44.411, -35.8583, 32.9313, 1.47 ) }
    dend_35 { pt3dadd( 45.0237, -35.8887, 33.4983, 1.47 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 58/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 21.6852, -30.0957, 7.88746, 0.88 ) }
    dend_32 { pt3dadd( 21.9313, -31.4831, 8.93868, 0.88 ) }
    dend_32 { pt3dadd( 22.1162, -33.5308, 10.6267, 0.74 ) }
    dend_32 { pt3dadd( 22.1913, -35.6216, 12.4897, 0.74 ) }
    dend_32 { pt3dadd( 22.1915, -37.2577, 13.9308, 0.74 ) }
    dend_32 { pt3dadd( 22.1328, -39.0183, 15.4348, 0.96 ) }
    dend_32 { pt3dadd( 22.0239, -40.7816, 16.8814, 1.7 ) }
    dend_32 { pt3dadd( 21.6829, -43.4234, 19.0388, 0.66 ) }
    dend_32 { pt3dadd( 21.3139, -45.2776, 20.4269, 0.74 ) }
    dend_32 { pt3dadd( 20.9657, -46.7085, 21.2668, 0.88 ) }
    dend_32 { pt3dadd( 20.5978, -48.0551, 21.8087, 1.11 ) }
    dend_32 { pt3dadd( 20.1344, -49.7248, 22.1905, 1.33 ) }
    dend_32 { pt3dadd( 19.5316, -52.0236, 22.4147, 0.74 ) }
    dend_32 { pt3dadd( 19.0432, -54.198, 22.4108, 0.74 ) }
    dend_32 { pt3dadd( 18.7505, -55.7416, 22.2923, 0.59 ) }
    dend_32 { pt3dadd( 18.3265, -58.4618, 22.0136, 0.88 ) }
    dend_32 { pt3dadd( 18.0416, -60.8264, 21.7467, 0.59 ) }
    dend_32 { pt3dadd( 17.9187, -62.0758, 21.5894, 0.59 ) }
    dend_32 { pt3dadd( 17.761, -64.3492, 21.3091, 0.81 ) }
    dend_32 { pt3dadd( 17.622, -67.2457, 21.0452, 0.74 ) }
    dend_32 { pt3dadd( 17.5694, -68.6992, 20.9147, 0.59 ) }
    dend_32 { pt3dadd( 17.5493, -70.5853, 20.8024, 0.81 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 80/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -10.9295, -42.9717, 75.5529, 0.52 ) }
    dend_30 { pt3dadd( -11.2277, -42.5286, 78.4504, 0.52 ) }
    dend_30 { pt3dadd( -11.3198, -42.295, 79.8794, 0.52 ) }
    dend_30 { pt3dadd( -11.3732, -42.1003, 81.0026, 0.52 ) }
    dend_30 { pt3dadd( -11.4046, -41.9489, 81.9242, 0.52 ) }
    dend_30 { pt3dadd( -11.461, -41.7004, 83.3164, 0.52 ) }
    dend_30 { pt3dadd( -11.5101, -41.5126, 84.3026, 0.52 ) }
    dend_30 { pt3dadd( -11.57, -41.3004, 85.206, 0.52 ) }
    dend_30 { pt3dadd( -11.6815, -40.9484, 86.5818, 0.52 ) }
    dend_30 { pt3dadd( -11.8711, -40.456, 88.2856, 0.52 ) }
    dend_30 { pt3dadd( -12.0475, -40.0797, 89.4409, 0.81 ) }
    dend_30 { pt3dadd( -12.2531, -39.6728, 90.4823, 0.81 ) }
    dend_30 { pt3dadd( -12.4285, -39.2931, 91.2999, 0.59 ) }
    dend_30 { pt3dadd( -12.7789, -38.4209, 92.9699, 0.59 ) }
    dend_30 { pt3dadd( -12.9945, -37.6946, 94.2043, 0.52 ) }
    dend_30 { pt3dadd( -13.1443, -36.9952, 95.2458, 0.37 ) }
    dend_30 { pt3dadd( -13.2681, -35.9989, 96.6597, 0.44 ) }
    dend_30 { pt3dadd( -13.3208, -34.9544, 98.0223, 0.29 ) }
    dend_30 { pt3dadd( -13.3014, -34.0693, 99.1414, 0.29 ) }
    dend_30 { pt3dadd( -13.2294, -32.9433, 100.423, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( -13.1451, -32.0227, 101.437, 0.29 ) }
    dend_30 { pt3dadd( -12.9995, -30.6474, 102.902, 0.29 ) }
    dend_30 { pt3dadd( -12.9165, -29.9267, 103.664, 0.29 ) }
    dend_30 { pt3dadd( -12.749, -28.3962, 105.277, 0.29 ) }
    dend_30 { pt3dadd( -12.6443, -27.3891, 106.318, 0.22 ) }
    dend_30 { pt3dadd( -12.4908, -25.7581, 108.022, 0.22 ) }
    dend_30 { pt3dadd( -12.4207, -25.0266, 108.81, 0.22 ) }
    dend_30 { pt3dadd( -12.3246, -23.7636, 110.153, 0.22 ) }
    dend_30 { pt3dadd( -12.2348, -22.3277, 111.764, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 9/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -10.9295, -42.9717, 75.5529, 1.03 ) }
    dend_27 { pt3dadd( -10.9808, -43.9887, 75.5668, 1.03 ) }
    dend_27 { pt3dadd( -11.0652, -45.4109, 75.7498, 0.74 ) }
    dend_27 { pt3dadd( -11.1465, -47.088, 76.0416, 0.74 ) }
    dend_27 { pt3dadd( -11.1957, -48.4262, 76.2921, 0.88 ) }
    dend_27 { pt3dadd( -11.2304, -50.2307, 76.5712, 0.96 ) }
    dend_27 { pt3dadd( -11.2331, -51.1566, 76.692, 0.96 ) }
    dend_27 { pt3dadd( -11.1769, -53.6667, 76.9862, 1.03 ) }
    dend_27 { pt3dadd( -11.1084, -55.3449, 77.1613, 0.66 ) }
    dend_27 { pt3dadd( -11.0222, -56.6895, 77.2951, 0.52 ) }
    dend_27 { pt3dadd( -10.8495, -58.3999, 77.445, 0.66 ) }
    dend_27 { pt3dadd( -10.6393, -59.8301, 77.5411, 0.96 ) }
    dend_27 { pt3dadd( -10.4105, -61.3476, 77.5951, 1.11 ) }
    dend_27 { pt3dadd( -10.3136, -61.9363, 77.5913, 1.11 ) }
    dend_27 { pt3dadd( -10.0369, -63.4517, 77.6174, 0.66 ) }
    dend_27 { pt3dadd( -9.86106, -64.368, 77.6547, 0.66 ) }
    dend_27 { pt3dadd( -9.60714, -65.6569, 77.7357, 0.66 ) }
    dend_27 { pt3dadd( -9.30934, -67.2039, 77.8972, 0.88 ) }
    dend_27 { pt3dadd( -8.99752, -68.9194, 78.1589, 0.81 ) }
    dend_27 { pt3dadd( -8.67435, -70.8821, 78.587, 0.74 ) }
    dend_27 { pt3dadd( -8.42056, -72.6612, 79.0613, 0.66 ) }
    dend_27 { pt3dadd( -8.21481, -74.3583, 79.6021, 0.52 ) }
    dend_27 { pt3dadd( -7.97361, -76.6102, 80.4002, 0.52 ) }
    dend_27 { pt3dadd( -7.84502, -77.9115, 80.928, 0.52 ) }
    dend_27 { pt3dadd( -7.73905, -79.6905, 81.6891, 0.52 ) }
    dend_27 { pt3dadd( -7.69763, -80.8688, 82.1942, 0.66 ) }
    dend_27 { pt3dadd( -7.65723, -82.1673, 82.7282, 0.96 ) }
    dend_27 { pt3dadd( -7.58458, -84.0145, 83.4249, 1.03 ) }
    dend_27 { pt3dadd( -7.46873, -85.9669, 84.0091, 0.74 ) }
    dend_27 { pt3dadd( -7.32524, -87.7829, 84.4492, 0.44 ) }
    dend_27 { pt3dadd( -7.20904, -88.9401, 84.6754, 0.22 ) }
    dend_27 { pt3dadd( -7.14715, -89.4615, 84.7679, 0.22 ) }
    dend_27 { pt3dadd( -6.95764, -90.7628, 84.9593, 0.52 ) }
    dend_27 { pt3dadd( -6.66666, -92.3377, 85.0808, 0.52 ) }
    dend_27 { pt3dadd( -6.22372, -94.2384, 85.0853, 0.22 ) }
    dend_27 { pt3dadd( -5.95596, -95.2261, 85.1043, 0.22 ) }
    dend_27 { pt3dadd( -5.58449, -96.5484, 85.1919, 0.66 ) }
    dend_27 { pt3dadd( -5.03596, -98.411, 85.3773, 0.66 ) }
    dend_27 { pt3dadd( -4.4647, -100.218, 85.6037, 0.37 ) }
    dend_27 { pt3dadd( -3.99876, -101.597, 85.873, 0.22 ) }
    dend_27 { pt3dadd( -3.23491, -103.864, 86.4391, 0.29 ) }
    dend_27 { pt3dadd( -2.75551, -105.354, 86.7105, 0.29 ) }
    dend_27 { pt3dadd( -2.52262, -106.111, 86.8033, 0.66 ) }
    dend_27 { pt3dadd( -2.16019, -107.31, 86.8727, 0.96 ) }
    dend_27 { pt3dadd( -1.58931, -109.243, 86.8729, 0.96 ) }
    dend_27 { pt3dadd( -1.07933, -110.94, 86.7163, 0.37 ) }
    dend_27 { pt3dadd( -0.0542539, -114.385, 86.1407, 0.44 ) }
    dend_27 { pt3dadd( 0.223715, -115.394, 85.959, 0.44 ) }
    dend_27 { pt3dadd( 0.71536, -117.365, 85.6761, 0.52 ) }
    dend_27 { pt3dadd( 1.14739, -119.26, 85.4726, 0.44 ) }
    dend_27 { pt3dadd( 1.43576, -120.621, 85.3876, 0.44 ) }
    dend_27 { pt3dadd( 1.83433, -122.62, 85.4135, 0.44 ) }
    dend_27 { pt3dadd( 2.24607, -124.849, 85.693, 0.44 ) }
    dend_27 { pt3dadd( 2.54577, -126.642, 85.9769, 0.44 ) }
    dend_27 { pt3dadd( 2.73465, -127.963, 86.2218, 0.44 ) }
    dend_27 { pt3dadd( 2.9049, -129.22, 86.4748, 0.44 ) }
    dend_27 { pt3dadd( 3.04005, -130.578, 86.7668, 0.52 ) }
    dend_27 { pt3dadd( 3.14408, -132.244, 87.1266, 0.52 ) }
    dend_27 { pt3dadd( 3.17985, -133.247, 87.3286, 0.52 ) }
    dend_27 { pt3dadd( 3.19392, -135.5, 87.7036, 0.22 ) }
    dend_27 { pt3dadd( 3.20138, -137.342, 87.9591, 0.22 ) }
    dend_27 { pt3dadd( 3.20927, -139.0, 88.1426, 0.22 ) }
    dend_27 { pt3dadd( 3.21963, -140.726, 88.2855, 0.29 ) }
    dend_27 { pt3dadd( 3.26349, -142.337, 88.3284, 0.29 ) }
    dend_27 { pt3dadd( 3.35899, -144.205, 88.4691, 0.29 ) }
    dend_27 { pt3dadd( 3.54392, -146.563, 88.7439, 0.22 ) }
    dend_27 { pt3dadd( 3.64149, -147.491, 88.8809, 0.29 ) }
    dend_27 { pt3dadd( 3.88027, -149.23, 89.1731, 0.37 ) }
    dend_27 { pt3dadd( 4.19761, -151.269, 89.5575, 0.37 ) }
    dend_27 { pt3dadd( 4.73987, -154.661, 90.1476, 0.22 ) }
    dend_27 { pt3dadd( 4.92123, -155.737, 90.3167, 0.22 ) }
    dend_27 { pt3dadd( 5.12397, -156.986, 90.4816, 0.37 ) }
    dend_27 { pt3dadd( 5.34667, -158.396, 90.6187, 0.37 ) }
    dend_27 { pt3dadd( 5.72455, -160.818, 90.806, 0.29 ) }
    dend_27 { pt3dadd( 5.96179, -162.438, 90.8959, 0.22 ) }
    dend_27 { pt3dadd( 6.1501, -163.741, 90.8968, 0.22 ) }
    dend_27 { pt3dadd( 6.33825, -165.163, 90.9841, 0.29 ) }
    dend_27 { pt3dadd( 6.54823, -167.014, 91.2049, 0.29 ) }
    dend_27 { pt3dadd( 6.68412, -168.585, 91.5632, 0.29 ) }
    dend_27 { pt3dadd( 6.75649, -169.746, 91.8932, 0.29 ) }
    dend_27 { pt3dadd( 6.86881, -171.901, 92.6394, 0.15 ) }
    dend_27 { pt3dadd( 6.94716, -173.995, 93.4533, 0.15 ) }
    dend_27 { pt3dadd( 6.9786, -174.962, 93.8813, 0.37 ) }
    dend_27 { pt3dadd( 7.06614, -177.524, 95.185, 0.59 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 93/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -9.00529, 22.8996, -5.687, 2.8 ) }
    dend_10 { pt3dadd( -9.78599, 23.1169, -6.64018, 2.8 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 95/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -9.00529, 22.8996, -5.687, 1.77 ) }
    dend_5 { pt3dadd( -8.70323, 24.4265, -6.92764, 1.77 ) }
    dend_5 { pt3dadd( -8.36412, 26.5031, -8.70622, 1.4 ) }
    dend_5 { pt3dadd( -8.13519, 28.1287, -10.1136, 1.4 ) }
    dend_5 { pt3dadd( -8.00208, 29.1717, -11.0416, 1.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -7.85387, 30.5364, -12.2974, 1.84 ) }
    dend_5 { pt3dadd( -7.69931, 32.1362, -13.7839, 1.84 ) }
    dend_5 { pt3dadd( -7.60317, 33.6151, -15.2278, 1.4 ) }
    dend_5 { pt3dadd( -7.52194, 35.1838, -16.73, 1.84 ) }
    dend_5 { pt3dadd( -7.44706, 37.0332, -18.3896, 1.62 ) }
    dend_5 { pt3dadd( -7.38557, 39.265, -20.2398, 1.77 ) }
    dend_5 { pt3dadd( -7.39657, 40.516, -21.1469, 1.77 ) }
    dend_5 { pt3dadd( -7.49996, 42.513, -22.4449, 1.62 ) }
    dend_5 { pt3dadd( -7.62094, 43.774, -23.182, 1.62 ) }
    dend_5 { pt3dadd( -7.91718, 45.8387, -24.2948, 1.47 ) }
    dend_5 { pt3dadd( -8.18081, 47.2396, -24.9831, 1.47 ) }
    dend_5 { pt3dadd( -8.73196, 49.8216, -26.201, 1.4 ) }
    dend_5 { pt3dadd( -9.16424, 51.7909, -27.1514, 1.47 ) }
    dend_5 { pt3dadd( -9.53485, 53.6174, -28.0856, 1.55 ) }
    dend_5 { pt3dadd( -9.69934, 54.6856, -28.6968, 1.55 ) }
    dend_5 { pt3dadd( -9.85731, 56.6264, -29.8932, 1.25 ) }
    dend_5 { pt3dadd( -9.84668, 58.5359, -31.0978, 1.25 ) }
    dend_5 { pt3dadd( -9.68798, 60.0797, -32.0465, 1.4 ) }
    dend_5 { pt3dadd( -9.40606, 61.7077, -32.9711, 1.25 ) }
    dend_5 { pt3dadd( -8.97928, 63.6326, -33.9239, 1.25 ) }
    dend_5 { pt3dadd( -8.67417, 65.0059, -34.4786, 1.25 ) }
    dend_5 { pt3dadd( -8.31911, 66.6428, -35.0813, 1.47 ) }
    dend_5 { pt3dadd( -8.16339, 67.5902, -35.3862, 1.62 ) }
    dend_5 { pt3dadd( -8.07204, 68.7834, -35.7154, 1.33 ) }
    dend_5 { pt3dadd( -8.12939, 71.3689, -36.3065, 1.11 ) }
    dend_5 { pt3dadd( -8.31829, 72.9366, -36.6744, 1.11 ) }
    dend_5 { pt3dadd( -8.62685, 74.7868, -37.1487, 1.25 ) }
    dend_5 { pt3dadd( -8.84765, 75.8225, -37.4479, 1.47 ) }
    dend_5 { pt3dadd( -9.25454, 77.4406, -37.9575, 1.4 ) }
    dend_5 { pt3dadd( -9.70405, 78.9307, -38.4696, 1.25 ) }
    dend_5 { pt3dadd( -10.5251, 80.9544, -39.2046, 1.47 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.163, 61.5445, 5.71367, 0.15 ) }
    dend_3 { pt3dadd( 10.5696, 62.1345, 9.21063, 0.15 ) }
    dend_3 { pt3dadd( 9.83181, 62.4774, 10.8627, 0.15 ) }
    dend_3 { pt3dadd( 9.39181, 62.7554, 11.8701, 0.29 ) }
    dend_3 { pt3dadd( 8.31296, 63.6873, 14.4919, 0.22 ) }
    dend_3 { pt3dadd( 7.46648, 64.6028, 16.683, 0.22 ) }
    dend_3 { pt3dadd( 6.8141, 65.4795, 18.46, 0.37 ) }
    dend_3 { pt3dadd( 6.70395, 65.6728, 18.8018, 0.81 ) }
    dend_3 { pt3dadd( 6.4421, 66.4035, 19.7399, 0.15 ) }
    dend_3 { pt3dadd( 6.1927, 67.5451, 20.8674, 0.22 ) }
    dend_3 { pt3dadd( 6.134, 68.0177, 21.2556, 0.59 ) }
    dend_3 { pt3dadd( 6.03629, 68.897, 21.9855, 1.03 ) }
    dend_3 { pt3dadd( 5.75713, 70.4858, 23.41, 0.15 ) }
    dend_3 { pt3dadd( 5.58496, 71.0656, 24.0357, 0.29 ) }
    dend_3 { pt3dadd( 5.01541, 72.2805, 25.6924, 0.22 ) }
    dend_3 { pt3dadd( 4.22366, 73.5119, 27.6607, 0.37 ) }
    dend_3 { pt3dadd( 3.68387, 74.1768, 28.894, 0.37 ) }
    dend_3 { pt3dadd( 3.19969, 74.6409, 29.9623, 0.44 ) }
    dend_3 { pt3dadd( 2.278, 75.337, 31.8894, 0.37 ) }
    dend_3 { pt3dadd( 1.31072, 75.9931, 33.8659, 0.37 ) }
    dend_3 { pt3dadd( 0.654554, 76.3827, 35.1227, 0.37 ) }
    dend_3 { pt3dadd( -0.214139, 76.8516, 36.7192, 0.37 ) }
    dend_3 { pt3dadd( -1.51689, 77.5571, 39.1988, 0.37 ) }
    dend_3 { pt3dadd( -2.8383, 78.3293, 41.9409, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 55/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 12.163, 61.5445, 5.71367, 0.96 ) }
    dend_2 { pt3dadd( 14.0906, 63.6033, 4.94749, 0.96 ) }
    dend_2 { pt3dadd( 14.7324, 64.3135, 4.7498, 0.88 ) }
    dend_2 { pt3dadd( 15.8691, 65.5827, 4.48048, 0.74 ) }
    dend_2 { pt3dadd( 17.1269, 67.0253, 4.25884, 0.96 ) }
    dend_2 { pt3dadd( 18.2707, 68.3487, 4.04361, 0.81 ) }
    dend_2 { pt3dadd( 19.2873, 69.5423, 3.83588, 0.44 ) }
    dend_2 { pt3dadd( 20.2415, 70.7763, 3.66872, 0.44 ) }
    dend_2 { pt3dadd( 20.9459, 71.7413, 3.48496, 0.66 ) }
    dend_2 { pt3dadd( 22.0701, 73.3755, 3.10713, 0.52 ) }
    dend_2 { pt3dadd( 22.9727, 74.7506, 2.72885, 0.74 ) }
    dend_2 { pt3dadd( 23.7322, 75.926, 2.32987, 1.11 ) }
    dend_2 { pt3dadd( 24.4241, 77.0754, 1.90588, 0.66 ) }
    dend_2 { pt3dadd( 25.4044, 78.7878, 1.27396, 0.66 ) }
    dend_2 { pt3dadd( 26.0441, 79.9371, 0.870444, 0.66 ) }
    dend_2 { pt3dadd( 26.8584, 81.4114, 0.435252, 0.81 ) }
    dend_2 { pt3dadd( 27.4424, 82.4708, 0.219764, 0.59 ) }
    dend_2 { pt3dadd( 28.3526, 84.0567, -0.0570109, 0.52 ) }
    dend_2 { pt3dadd( 29.0199, 85.215, -0.240407, 0.52 ) }
    dend_2 { pt3dadd( 29.4256, 85.92, -0.329146, 0.52 ) }
    dend_2 { pt3dadd( 30.2022, 87.3261, -0.454709, 0.66 ) }
    dend_2 { pt3dadd( 30.8593, 88.5352, -0.497944, 0.88 ) }
    dend_2 { pt3dadd( 31.7256, 90.0463, -0.504032, 1.03 ) }
    dend_2 { pt3dadd( 32.6623, 91.5813, -0.456693, 0.52 ) }
    dend_2 { pt3dadd( 33.4546, 92.8729, -0.378822, 0.29 ) }
    dend_2 { pt3dadd( 34.2044, 94.0714, -0.264013, 0.29 ) }
    dend_2 { pt3dadd( 35.0464, 95.4795, -0.00505221, 0.52 ) }
    dend_2 { pt3dadd( 35.8849, 96.9223, 0.398736, 0.22 ) }
    dend_2 { pt3dadd( 36.3171, 97.6968, 0.679217, 0.15 ) }
    dend_2 { pt3dadd( 36.8232, 98.6568, 1.03719, 0.66 ) }
    dend_2 { pt3dadd( 37.3693, 99.9387, 1.50157, 0.29 ) }
    dend_2 { pt3dadd( 37.8787, 101.648, 2.13133, 0.52 ) }
    dend_2 { pt3dadd( 38.0526, 102.524, 2.47123, 1.03 ) }
    dend_2 { pt3dadd( 38.2623, 103.854, 3.01688, 0.37 ) }
    dend_2 { pt3dadd( 38.4812, 105.006, 3.44795, 0.44 ) }
    dend_2 { pt3dadd( 38.9724, 106.986, 4.044, 0.59 ) }
    dend_2 { pt3dadd( 39.5486, 108.963, 4.43662, 0.88 ) }
    dend_2 { pt3dadd( 39.9365, 110.112, 4.53614, 0.88 ) }
    dend_2 { pt3dadd( 40.305, 111.133, 4.55799, 0.66 ) }
    dend_2 { pt3dadd( 41.2282, 113.311, 4.38224, 0.29 ) }
    dend_2 { pt3dadd( 42.021, 114.899, 4.0744, 0.66 ) }
    dend_2 { pt3dadd( 42.7048, 116.112, 3.70371, 0.44 ) }
    dend_2 { pt3dadd( 43.1557, 116.913, 3.4147, 0.44 ) }
    dend_2 { pt3dadd( 43.8195, 118.226, 2.9665, 0.22 ) }
    dend_2 { pt3dadd( 44.4312, 119.603, 2.57308, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_2 { pt3dadd( 44.8276, 120.658, 2.43264, 0.66 ) }
    dend_2 { pt3dadd( 45.1294, 121.512, 2.41541, 0.88 ) }
    dend_2 { pt3dadd( 45.636, 122.972, 2.50867, 0.52 ) }
    dend_2 { pt3dadd( 46.0103, 124.147, 2.72834, 0.52 ) }
    dend_2 { pt3dadd( 46.4448, 125.735, 3.22995, 0.52 ) }
    dend_2 { pt3dadd( 46.9798, 128.002, 4.16125, 0.52 ) }
    dend_2 { pt3dadd( 47.2402, 129.157, 4.71586, 0.96 ) }
    dend_2 { pt3dadd( 47.5909, 130.633, 5.51427, 0.66 ) }
    dend_2 { pt3dadd( 48.0753, 132.39, 6.54834, 0.22 ) }
    dend_2 { pt3dadd( 48.3547, 133.289, 7.08843, 0.22 ) }
    dend_2 { pt3dadd( 48.6989, 134.26, 7.63117, 0.29 ) }
    dend_2 { pt3dadd( 49.252, 135.565, 8.23106, 0.37 ) }
    dend_2 { pt3dadd( 50.0602, 137.102, 8.79857, 0.52 ) }
    dend_2 { pt3dadd( 50.7593, 138.155, 9.09027, 0.81 ) }
    dend_2 { pt3dadd( 51.4348, 138.989, 9.19438, 0.81 ) }
    dend_2 { pt3dadd( 52.733, 140.408, 9.19552, 0.22 ) }
    dend_2 { pt3dadd( 53.635, 141.359, 9.19315, 0.59 ) }
    dend_2 { pt3dadd( 54.9666, 142.737, 9.16409, 0.59 ) }
    dend_2 { pt3dadd( 56.0625, 143.873, 9.14361, 0.22 ) }
    dend_2 { pt3dadd( 57.4333, 145.385, 9.1709, 0.15 ) }
    dend_2 { pt3dadd( 58.3906, 146.578, 9.23525, 0.15 ) }
    dend_2 { pt3dadd( 59.8576, 148.841, 9.64307, 0.59 ) }
    dend_2 { pt3dadd( 60.302, 149.712, 9.89816, 0.59 ) }
    dend_2 { pt3dadd( 60.7841, 150.909, 10.3351, 0.59 ) }
    dend_2 { pt3dadd( 61.1717, 152.026, 10.7637, 0.29 ) }
    dend_2 { pt3dadd( 61.5893, 153.305, 11.2765, 0.22 ) }
    dend_2 { pt3dadd( 62.428, 155.638, 12.1257, 0.22 ) }
    dend_2 { pt3dadd( 62.7204, 156.322, 12.3024, 0.22 ) }
    dend_2 { pt3dadd( 63.2811, 157.51, 12.5718, 0.52 ) }
    dend_2 { pt3dadd( 63.9717, 158.86, 12.8238, 0.59 ) }
    dend_2 { pt3dadd( 64.4253, 159.69, 12.9347, 0.59 ) }
    dend_2 { pt3dadd( 65.3011, 161.22, 13.1135, 0.29 ) }
    dend_2 { pt3dadd( 65.9051, 162.29, 13.1915, 0.29 ) }
    dend_2 { pt3dadd( 66.6335, 163.744, 13.3147, 0.37 ) }
    dend_2 { pt3dadd( 67.043, 164.714, 13.4056, 0.29 ) }
    dend_2 { pt3dadd( 67.404, 165.898, 13.5951, 0.44 ) }
    dend_2 { pt3dadd( 67.8658, 167.884, 13.9927, 0.44 ) }
    dend_2 { pt3dadd( 68.1469, 169.304, 14.3028, 0.66 ) }
    dend_2 { pt3dadd( 68.4017, 170.627, 14.6127, 0.88 ) }
    dend_2 { pt3dadd( 68.7408, 172.375, 15.0082, 0.66 ) }
    dend_2 { pt3dadd( 69.5014, 175.628, 15.7265, 0.37 ) }
    dend_2 { pt3dadd( 69.9521, 177.235, 16.1206, 0.22 ) }
    dend_2 { pt3dadd( 70.4306, 178.679, 16.4338, 0.52 ) }
    dend_2 { pt3dadd( 70.8095, 179.609, 16.6225, 0.59 ) }
    dend_2 { pt3dadd( 71.4459, 180.876, 16.8137, 0.29 ) }
    dend_2 { pt3dadd( 72.1418, 182.116, 16.9877, 0.22 ) }
    dend_2 { pt3dadd( 73.4388, 184.339, 17.2638, 0.15 ) }
    dend_2 { pt3dadd( 74.3891, 186.108, 17.5724, 0.37 ) }
    dend_2 { pt3dadd( 74.9364, 187.248, 17.8106, 0.37 ) }
    dend_2 { pt3dadd( 75.4836, 188.535, 18.0803, 0.37 ) }
    dend_2 { pt3dadd( 76.5899, 191.291, 18.6496, 0.81 ) }
    dend_2 { pt3dadd( 77.1354, 192.744, 18.9484, 0.96 ) }
    dend_2 { pt3dadd( 77.5573, 193.894, 19.1674, 0.52 ) }
    dend_2 { pt3dadd( 78.0147, 195.278, 19.495, 0.22 ) }
    dend_2 { pt3dadd( 78.5484, 197.075, 19.914, 0.29 ) }
    dend_2 { pt3dadd( 79.0827, 198.898, 20.2927, 0.22 ) }
    dend_2 { pt3dadd( 79.5442, 200.383, 20.5247, 0.74 ) }
    dend_2 { pt3dadd( 80.2187, 202.552, 20.8628, 0.29 ) }
    dend_2 { pt3dadd( 80.9327, 204.943, 21.3112, 0.52 ) }
    dend_2 { pt3dadd( 81.3127, 206.23, 21.5947, 0.59 ) }
    dend_2 { pt3dadd( 81.7357, 207.724, 21.9531, 0.29 ) }
    dend_2 { pt3dadd( 82.0199, 208.814, 22.1749, 0.29 ) }
    dend_2 { pt3dadd( 82.3373, 210.152, 22.4521, 0.29 ) }
    dend_2 { pt3dadd( 82.6236, 211.493, 22.8129, 0.66 ) }
    dend_2 { pt3dadd( 82.8355, 212.473, 23.1272, 0.96 ) }
    dend_2 { pt3dadd( 83.0407, 213.595, 23.625, 0.37 ) }
    dend_2 { pt3dadd( 83.2849, 215.259, 24.4846, 0.29 ) }
    dend_2 { pt3dadd( 83.48, 217.3, 25.5579, 0.37 ) }
    dend_2 { pt3dadd( 83.5819, 219.166, 26.528, 0.66 ) }
    dend_2 { pt3dadd( 83.6249, 220.279, 27.0799, 0.44 ) }
    dend_2 { pt3dadd( 83.7106, 222.317, 28.0482, 0.88 ) }
    dend_2 { pt3dadd( 83.778, 223.57, 28.6076, 1.11 ) }
    dend_2 { pt3dadd( 83.9105, 225.928, 29.5571, 0.22 ) }
    dend_2 { pt3dadd( 84.0018, 227.075, 29.8662, 0.22 ) }
    dend_2 { pt3dadd( 84.1026, 228.235, 30.0694, 0.15 ) }
    dend_2 { pt3dadd( 84.1926, 229.565, 30.2089, 0.15 ) }
    dend_2 { pt3dadd( 84.2525, 230.533, 30.2511, 0.15 ) }
    dend_2 { pt3dadd( 84.3238, 232.087, 30.3274, 0.37 ) }
    dend_2 { pt3dadd( 84.4089, 233.647, 30.4168, 0.37 ) }
    dend_2 { pt3dadd( 84.4528, 234.608, 30.4842, 0.22 ) }
    dend_2 { pt3dadd( 84.5211, 236.029, 30.5938, 0.44 ) }
    dend_2 { pt3dadd( 84.5671, 236.795, 30.6504, 0.44 ) }
    dend_2 { pt3dadd( 84.6647, 237.885, 30.723, 0.44 ) }
    dend_2 { pt3dadd( 84.8068, 238.835, 30.7518, 0.66 ) }
    dend_2 { pt3dadd( 85.0239, 239.885, 30.8166, 0.37 ) }
    dend_2 { pt3dadd( 85.3476, 241.07, 30.9153, 0.37 ) }
    dend_2 { pt3dadd( 85.7949, 242.329, 31.0446, 0.22 ) }
    dend_2 { pt3dadd( 86.0165, 242.876, 31.099, 0.22 ) }
    dend_2 { pt3dadd( 86.612, 244.283, 31.2275, 0.22 ) }
    dend_2 { pt3dadd( 87.4272, 246.106, 31.3155, 0.52 ) }
    dend_2 { pt3dadd( 87.9122, 247.164, 31.3269, 0.96 ) }
    dend_2 { pt3dadd( 88.2643, 247.943, 31.3061, 0.96 ) }
    dend_2 { pt3dadd( 88.9492, 249.491, 31.2124, 0.22 ) }
    dend_2 { pt3dadd( 89.4662, 250.737, 31.0815, 0.29 ) }
    dend_2 { pt3dadd( 90.0684, 252.292, 30.8067, 0.29 ) }
    dend_2 { pt3dadd( 90.4011, 253.201, 30.5714, 0.81 ) }
    dend_2 { pt3dadd( 90.6821, 254.0, 30.346, 0.52 ) }
    dend_2 { pt3dadd( 91.1218, 255.298, 29.9346, 0.37 ) }
    dend_2 { pt3dadd( 91.4311, 256.188, 29.5443, 0.37 ) }
    dend_2 { pt3dadd( 91.817, 257.32, 28.9754, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( 92.0996, 258.179, 28.5334, 0.74 ) }
    dend_2 { pt3dadd( 92.4645, 259.241, 27.9475, 0.29 ) }
    dend_2 { pt3dadd( 92.8228, 260.287, 27.3591, 0.37 ) }
    dend_2 { pt3dadd( 93.6006, 262.611, 26.0905, 0.37 ) }
    dend_2 { pt3dadd( 93.9897, 263.735, 25.4817, 0.52 ) }
    dend_2 { pt3dadd( 94.3129, 264.614, 25.0515, 0.52 ) }
    dend_2 { pt3dadd( 94.6343, 265.3, 24.7344, 0.52 ) }
    dend_2 { pt3dadd( 95.1777, 266.288, 24.4173, 0.59 ) }
    dend_2 { pt3dadd( 95.7689, 267.268, 24.2405, 0.22 ) }
    dend_2 { pt3dadd( 96.7829, 268.866, 24.2258, 0.44 ) }
    dend_2 { pt3dadd( 97.6945, 270.159, 24.3261, 0.52 ) }
    dend_2 { pt3dadd( 99.2056, 272.18, 24.7403, 0.29 ) }
    dend_2 { pt3dadd( 100.602, 273.94, 25.4389, 0.44 ) }
    dend_2 { pt3dadd( 101.413, 274.948, 26.0853, 0.44 ) }
    dend_2 { pt3dadd( 102.365, 276.225, 27.2684, 0.44 ) }
    dend_2 { pt3dadd( 102.934, 277.098, 28.2359, 0.44 ) }
    dend_2 { pt3dadd( 103.502, 278.18, 29.5522, 0.44 ) }
    dend_2 { pt3dadd( 104.049, 279.504, 31.2295, 0.22 ) }
    dend_2 { pt3dadd( 104.469, 280.715, 32.7402, 0.74 ) }
    dend_2 { pt3dadd( 104.853, 282.158, 34.4326, 0.74 ) }
    dend_2 { pt3dadd( 105.042, 283.208, 35.4928, 0.59 ) }
    dend_2 { pt3dadd( 105.202, 284.723, 36.8141, 0.22 ) }
    dend_2 { pt3dadd( 105.249, 285.361, 37.2696, 0.15 ) }
    dend_2 { pt3dadd( 105.296, 286.609, 37.9496, 0.29 ) }
    dend_2 { pt3dadd( 105.325, 288.073, 38.5497, 0.29 ) }
    dend_2 { pt3dadd( 105.328, 289.53, 38.9907, 0.29 ) }
    dend_2 { pt3dadd( 105.303, 290.379, 39.2218, 0.52 ) }
    dend_2 { pt3dadd( 105.271, 291.327, 39.4228, 0.88 ) }
    dend_2 { pt3dadd( 105.185, 292.963, 39.714, 0.52 ) }
    dend_2 { pt3dadd( 105.145, 294.06, 39.7671, 0.52 ) }
    dend_2 { pt3dadd( 105.113, 295.217, 39.6825, 0.22 ) }
    dend_2 { pt3dadd( 105.044, 296.493, 39.5318, 0.22 ) }
    dend_2 { pt3dadd( 104.988, 297.344, 39.4197, 0.52 ) }
    dend_2 { pt3dadd( 104.941, 298.021, 39.3188, 0.81 ) }
    dend_2 { pt3dadd( 104.762, 300.711, 38.8616, 0.22 ) }
    dend_2 { pt3dadd( 104.651, 302.025, 38.6178, 0.22 ) }
    dend_2 { pt3dadd( 104.413, 304.378, 38.1618, 0.22 ) }
    dend_2 { pt3dadd( 104.37, 304.845, 38.0472, 0.37 ) }
    dend_2 { pt3dadd( 104.3, 305.723, 37.8354, 0.96 ) }
    dend_2 { pt3dadd( 104.278, 306.072, 37.7601, 0.96 ) }
    dend_2 { pt3dadd( 104.21, 307.533, 37.5103, 0.22 ) }
    dend_2 { pt3dadd( 104.209, 307.928, 37.4384, 0.22 ) }
    dend_2 { pt3dadd( 104.277, 309.397, 37.1475, 0.37 ) }
    dend_2 { pt3dadd( 104.331, 310.342, 37.0474, 0.88 ) }
    dend_2 { pt3dadd( 104.481, 312.274, 36.9817, 0.22 ) }
    dend_2 { pt3dadd( 104.577, 313.145, 37.0051, 0.37 ) }
    dend_2 { pt3dadd( 104.814, 314.974, 37.1811, 0.66 ) }
    dend_2 { pt3dadd( 104.977, 316.402, 37.4395, 0.22 ) }
    dend_2 { pt3dadd( 105.131, 318.03, 37.8624, 0.66 ) }
    dend_2 { pt3dadd( 105.198, 318.89, 38.1336, 0.66 ) }
    dend_2 { pt3dadd( 105.264, 320.2, 38.6686, 0.44 ) }
    dend_2 { pt3dadd( 105.26, 320.873, 39.0077, 0.59 ) }
    dend_2 { pt3dadd( 105.183, 322.387, 39.9034, 0.15 ) }
    dend_2 { pt3dadd( 105.109, 323.009, 40.3565, 0.37 ) }
    dend_2 { pt3dadd( 105.019, 323.555, 40.7975, 0.37 ) }
    dend_2 { pt3dadd( 104.767, 324.743, 41.8346, 0.15 ) }
    dend_2 { pt3dadd( 104.556, 325.634, 42.6415, 0.15 ) }
    dend_2 { pt3dadd( 104.478, 326.125, 43.0384, 0.29 ) }
    dend_2 { pt3dadd( 104.403, 327.14, 43.7912, 0.29 ) }
    dend_2 { pt3dadd( 104.389, 328.546, 44.6986, 0.22 ) }
    dend_2 { pt3dadd( 104.439, 329.75, 45.3104, 0.66 ) }
    dend_2 { pt3dadd( 104.456, 330.033, 45.4205, 0.66 ) }
    dend_2 { pt3dadd( 104.46, 331.802, 46.0738, 0.15 ) }
    dend_2 { pt3dadd( 104.37, 333.174, 46.5573, 0.15 ) }
    dend_2 { pt3dadd( 104.193, 334.245, 46.9505, 0.37 ) }
    dend_2 { pt3dadd( 104.01, 334.965, 47.2862, 0.37 ) }
    dend_2 { pt3dadd( 103.667, 336.156, 47.8395, 0.22 ) }
    dend_2 { pt3dadd( 103.082, 338.039, 48.6683, 0.22 ) }
    dend_2 { pt3dadd( 102.792, 338.989, 49.0587, 0.37 ) }
    dend_2 { pt3dadd( 102.111, 341.526, 49.9286, 0.15 ) }
    dend_2 { pt3dadd( 101.583, 343.863, 50.5333, 0.15 ) }
    dend_2 { pt3dadd( 101.099, 346.72, 51.0507, 0.15 ) }
    dend_2 { pt3dadd( 100.933, 348.289, 51.211, 0.15 ) }
    dend_2 { pt3dadd( 100.875, 350.554, 51.2896, 0.15 ) }
    dend_2 { pt3dadd( 101.041, 352.383, 51.2965, 0.15 ) }
    dend_2 { pt3dadd( 101.711, 355.048, 51.1914, 0.15 ) }
    dend_2 { pt3dadd( 102.28, 356.349, 51.0926, 0.15 ) }
    dend_2 { pt3dadd( 102.935, 357.347, 51.0391, 0.15 ) }
    dend_2 { pt3dadd( 103.856, 358.374, 51.0187, 0.37 ) }
    dend_2 { pt3dadd( 106.168, 360.314, 51.0765, 0.15 ) }
    dend_2 { pt3dadd( 107.523, 361.211, 51.1834, 0.15 ) }
    dend_2 { pt3dadd( 109.128, 362.104, 51.4464, 0.15 ) }
    dend_2 { pt3dadd( 109.718, 362.412, 51.563, 0.59 ) }
    dend_2 { pt3dadd( 110.879, 363.017, 51.8836, 0.29 ) }
    dend_2 { pt3dadd( 111.751, 363.51, 52.2279, 0.15 ) }
    dend_2 { pt3dadd( 112.191, 363.824, 52.4781, 0.29 ) }
    dend_2 { pt3dadd( 113.192, 364.731, 53.1995, 0.88 ) }
    dend_2 { pt3dadd( 113.754, 365.437, 53.7975, 0.22 ) }
    dend_2 { pt3dadd( 114.418, 366.714, 54.8753, 0.22 ) }
    dend_2 { pt3dadd( 114.607, 367.397, 55.4928, 0.22 ) }
    dend_2 { pt3dadd( 114.794, 368.683, 56.7474, 0.29 ) }
    dend_2 { pt3dadd( 114.837, 369.583, 57.6685, 0.15 ) }
    dend_2 { pt3dadd( 114.781, 371.413, 59.591, 0.66 ) }
    dend_2 { pt3dadd( 114.615, 373.169, 61.4553, 0.37 ) }
    dend_2 { pt3dadd( 114.292, 375.13, 63.5687, 0.15 ) }
    dend_2 { pt3dadd( 114.015, 376.44, 64.9203, 0.15 ) }
    dend_2 { pt3dadd( 113.716, 377.581, 66.0019, 0.15 ) }
    dend_2 { pt3dadd( 113.578, 378.09, 66.3917, 0.15 ) }
    dend_2 { pt3dadd( 113.33, 379.11, 66.9101, 0.52 ) }
    dend_2 { pt3dadd( 113.057, 380.599, 67.273, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 112.713, 383.251, 67.3785, 0.15 ) }
    dend_2 { pt3dadd( 112.51, 385.462, 67.2377, 0.15 ) }
    dend_2 { pt3dadd( 112.451, 387.398, 66.9809, 0.15 ) }
    dend_2 { pt3dadd( 112.501, 390.175, 66.5072, 0.15 ) }
    dend_2 { pt3dadd( 112.738, 393.677, 65.8034, 0.15 ) }
    dend_2 { pt3dadd( 113.048, 396.101, 65.2521, 0.15 ) }
    dend_2 { pt3dadd( 113.273, 397.3, 64.9643, 0.22 ) }
    dend_2 { pt3dadd( 113.835, 399.664, 64.3755, 0.07 ) }
    dend_2 { pt3dadd( 114.042, 400.434, 64.1797, 0.07 ) }
    dend_2 { pt3dadd( 114.494, 401.965, 63.7618, 0.22 ) }
    dend_2 { pt3dadd( 115.161, 404.234, 63.207, 0.07 ) }
    dend_2 { pt3dadd( 115.422, 405.037, 62.9672, 0.07 ) }
    dend_2 { pt3dadd( 115.63, 405.637, 62.7542, 0.22 ) }
    dend_2 { pt3dadd( 115.944, 406.453, 62.4251, 0.59 ) }
    dend_2 { pt3dadd( 116.902, 408.476, 61.4713, 0.07 ) }
    dend_2 { pt3dadd( 117.663, 409.791, 60.7853, 0.07 ) }
    dend_2 { pt3dadd( 118.014, 410.317, 60.5, 0.29 ) }
    dend_2 { pt3dadd( 118.467, 410.946, 60.1556, 0.29 ) }
    dend_2 { pt3dadd( 119.421, 412.277, 59.449, 0.07 ) }
    dend_2 { pt3dadd( 120.443, 413.827, 58.7237, 0.07 ) }
    dend_2 { pt3dadd( 120.848, 414.559, 58.4392, 0.07 ) }
    dend_2 { pt3dadd( 121.071, 415.078, 58.2257, 0.29 ) }
    dend_2 { pt3dadd( 121.27, 415.778, 57.9729, 0.29 ) }
    dend_2 { pt3dadd( 121.68, 417.742, 57.3116, 0.15 ) }
    dend_2 { pt3dadd( 121.862, 419.531, 56.7318, 0.15 ) }
    dend_2 { pt3dadd( 121.871, 420.784, 56.3628, 0.29 ) }
    dend_2 { pt3dadd( 121.788, 422.923, 55.7045, 0.22 ) }
    dend_2 { pt3dadd( 121.626, 425.177, 55.0181, 0.74 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 28/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 45.0237, -35.8887, 33.4983, 0.88 ) }
    dend_39 { pt3dadd( 45.5406, -34.49, 33.0138, 0.88 ) }
    dend_39 { pt3dadd( 45.8585, -33.4999, 32.7631, 0.74 ) }
    dend_39 { pt3dadd( 46.2702, -32.064, 32.4534, 0.81 ) }
    dend_39 { pt3dadd( 46.6928, -30.4549, 32.134, 0.88 ) }
    dend_39 { pt3dadd( 47.0616, -28.9603, 31.8489, 1.4 ) }
    dend_39 { pt3dadd( 47.3958, -27.4978, 31.6296, 0.96 ) }
    dend_39 { pt3dadd( 47.6987, -25.6371, 31.4518, 0.88 ) }
    dend_39 { pt3dadd( 47.8307, -24.5437, 31.3869, 0.81 ) }
    dend_39 { pt3dadd( 47.8689, -23.8669, 31.3057, 0.81 ) }
    dend_39 { pt3dadd( 47.8379, -22.875, 31.1015, 0.81 ) }
    dend_39 { pt3dadd( 47.6324, -21.0822, 30.5651, 1.18 ) }
    dend_39 { pt3dadd( 47.3888, -19.7175, 30.0788, 1.18 ) }
    dend_39 { pt3dadd( 47.0696, -18.1728, 29.4574, 1.18 ) }
    dend_39 { pt3dadd( 46.4204, -14.6651, 28.1418, 0.96 ) }
    dend_39 { pt3dadd( 46.0597, -12.1907, 27.2706, 0.59 ) }
    dend_39 { pt3dadd( 45.9148, -10.5021, 26.7634, 0.59 ) }
    dend_39 { pt3dadd( 45.8981, -9.04494, 26.4299, 0.74 ) }
    dend_39 { pt3dadd( 46.0062, -7.51426, 26.2431, 1.11 ) }
    dend_39 { pt3dadd( 46.3602, -5.02997, 26.2874, 1.4 ) }
    dend_39 { pt3dadd( 46.7909, -3.02447, 26.5431, 1.4 ) }
    dend_39 { pt3dadd( 47.3646, -0.70734, 26.9095, 1.18 ) }
    dend_39 { pt3dadd( 47.777, 0.999973, 27.1483, 1.47 ) }
    dend_39 { pt3dadd( 48.0287, 2.25429, 27.2271, 1.11 ) }
    dend_39 { pt3dadd( 48.2915, 4.48241, 27.0589, 0.74 ) }
    dend_39 { pt3dadd( 48.3248, 5.81805, 26.708, 1.03 ) }
    dend_39 { pt3dadd( 48.2612, 6.9674, 26.2107, 1.11 ) }
    dend_39 { pt3dadd( 48.0246, 8.61962, 25.1831, 0.88 ) }
    dend_39 { pt3dadd( 47.6717, 10.1787, 23.9727, 0.88 ) }
    dend_39 { pt3dadd( 47.2513, 11.5266, 22.7987, 0.74 ) }
    dend_39 { pt3dadd( 46.9116, 12.3974, 21.9473, 0.66 ) }
    dend_39 { pt3dadd( 46.4641, 13.4456, 20.9305, 0.59 ) }
    dend_39 { pt3dadd( 45.978, 14.6376, 19.7954, 0.81 ) }
    dend_39 { pt3dadd( 45.5134, 15.9026, 18.7369, 0.88 ) }
    dend_39 { pt3dadd( 44.9939, 17.6088, 17.5064, 0.81 ) }
    dend_39 { pt3dadd( 44.6303, 19.0687, 16.5612, 0.81 ) }
    dend_39 { pt3dadd( 44.3671, 20.6263, 15.6262, 0.81 ) }
    dend_39 { pt3dadd( 44.2477, 22.3564, 14.6649, 0.66 ) }
    dend_39 { pt3dadd( 44.2856, 23.8968, 13.8865, 0.88 ) }
    dend_39 { pt3dadd( 44.4096, 25.2583, 13.2131, 1.18 ) }
    dend_39 { pt3dadd( 44.5291, 26.147, 12.7775, 1.18 ) }
    dend_39 { pt3dadd( 44.8218, 27.9418, 11.914, 0.81 ) }
    dend_39 { pt3dadd( 45.1933, 29.8574, 10.9795, 0.96 ) }
    dend_39 { pt3dadd( 45.492, 31.4158, 10.1774, 0.96 ) }
    dend_39 { pt3dadd( 45.7525, 32.7489, 9.40537, 1.11 ) }
    dend_39 { pt3dadd( 45.9745, 33.8154, 8.76885, 1.11 ) }
    dend_39 { pt3dadd( 46.2258, 34.9491, 8.10006, 0.88 ) }
    dend_39 { pt3dadd( 46.59, 36.4492, 7.30851, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 76/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 45.0237, -35.8887, 33.4983, 0.88 ) }
    dend_36 { pt3dadd( 45.6967, -36.6966, 34.7549, 0.88 ) }
    dend_36 { pt3dadd( 45.9379, -36.9689, 35.1249, 0.66 ) }
    dend_36 { pt3dadd( 46.3137, -37.4122, 35.7171, 0.74 ) }
    dend_36 { pt3dadd( 46.4475, -37.5962, 35.9564, 1.03 ) }
    dend_36 { pt3dadd( 46.5623, -37.7917, 36.1863, 0.74 ) }
    dend_36 { pt3dadd( 46.7093, -38.0983, 36.5251, 0.96 ) }
    dend_36 { pt3dadd( 46.9071, -38.6968, 37.059, 1.03 ) }
    dend_36 { pt3dadd( 47.0631, -39.3718, 37.6686, 0.74 ) }
    dend_36 { pt3dadd( 47.1693, -39.994, 38.2254, 1.03 ) }
    dend_36 { pt3dadd( 47.2376, -40.5125, 38.7107, 0.88 ) }
    dend_36 { pt3dadd( 47.2927, -41.0331, 39.2272, 0.81 ) }
    dend_36 { pt3dadd( 47.3178, -41.4321, 39.6278, 0.66 ) }
    dend_36 { pt3dadd( 47.3354, -41.9422, 40.1233, 0.66 ) }
    dend_36 { pt3dadd( 47.3672, -42.5511, 40.6763, 0.88 ) }
    dend_36 { pt3dadd( 47.4315, -43.2078, 41.2705, 1.11 ) }
    dend_36 { pt3dadd( 47.5356, -43.8986, 41.9058, 0.96 ) }
    dend_36 { pt3dadd( 47.6652, -44.5688, 42.4958, 0.96 ) }
    dend_36 { pt3dadd( 47.7738, -45.0273, 42.8735, 0.96 ) }
    dend_36 { pt3dadd( 47.9689, -45.7415, 43.4274, 1.03 ) }
    dend_36 { pt3dadd( 48.1672, -46.4436, 43.9405, 0.81 ) }
    dend_36 { pt3dadd( 48.3014, -46.8712, 44.2306, 0.81 ) }
    dend_36 { pt3dadd( 48.4354, -47.2409, 44.46, 0.66 ) }
    dend_36 { pt3dadd( 48.6517, -47.6951, 44.7484, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( 48.9972, -48.2989, 45.1597, 0.81 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 1/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 17.5493, -70.5853, 20.8024, 0.29 ) }
    dend_34 { pt3dadd( 17.4926, -71.4998, 21.4912, 0.29 ) }
    dend_34 { pt3dadd( 17.4581, -72.5741, 22.2426, 0.29 ) }
    dend_34 { pt3dadd( 17.4707, -73.2845, 22.7403, 0.81 ) }
    dend_34 { pt3dadd( 17.5287, -74.4423, 23.5278, 0.59 ) }
    dend_34 { pt3dadd( 17.6458, -75.6427, 24.367, 0.44 ) }
    dend_34 { pt3dadd( 17.8007, -76.6324, 25.0874, 0.22 ) }
    dend_34 { pt3dadd( 17.9793, -77.3658, 25.6188, 0.22 ) }
    dend_34 { pt3dadd( 18.2921, -78.2929, 26.2975, 0.22 ) }
    dend_34 { pt3dadd( 18.5198, -78.8572, 26.7559, 0.74 ) }
    dend_34 { pt3dadd( 18.9657, -79.8767, 27.652, 0.74 ) }
    dend_34 { pt3dadd( 19.3841, -80.798, 28.5012, 0.96 ) }
    dend_34 { pt3dadd( 19.6009, -81.3278, 28.9778, 1.11 ) }
    dend_34 { pt3dadd( 20.028, -82.5357, 30.0245, 0.37 ) }
    dend_34 { pt3dadd( 20.3439, -83.6135, 30.8446, 0.22 ) }
    dend_34 { pt3dadd( 20.509, -84.291, 31.2784, 0.66 ) }
    dend_34 { pt3dadd( 20.6473, -85.0942, 31.6658, 0.66 ) }
    dend_34 { pt3dadd( 20.7473, -85.8601, 31.947, 0.66 ) }
    dend_34 { pt3dadd( 20.8437, -86.6508, 32.1914, 0.29 ) }
    dend_34 { pt3dadd( 20.9762, -87.6571, 32.43, 0.22 ) }
    dend_34 { pt3dadd( 21.1933, -88.8565, 32.695, 0.66 ) }
    dend_34 { pt3dadd( 21.4731, -90.0407, 33.0337, 0.88 ) }
    dend_34 { pt3dadd( 21.7004, -90.8871, 33.3396, 0.37 ) }
    dend_34 { pt3dadd( 22.0254, -92.0577, 33.8389, 0.22 ) }
    dend_34 { pt3dadd( 22.223, -92.7552, 34.1994, 0.59 ) }
    dend_34 { pt3dadd( 22.4632, -93.6164, 34.7093, 0.74 ) }
    dend_34 { pt3dadd( 22.8925, -95.1289, 35.6814, 0.15 ) }
    dend_34 { pt3dadd( 23.0518, -95.7011, 36.0573, 0.15 ) }
    dend_34 { pt3dadd( 23.2357, -96.458, 36.5273, 0.37 ) }
    dend_34 { pt3dadd( 23.5213, -97.8828, 37.3073, 0.22 ) }
    dend_34 { pt3dadd( 23.6047, -98.3428, 37.5235, 0.66 ) }
    dend_34 { pt3dadd( 23.7053, -98.9061, 37.7492, 1.11 ) }
    dend_34 { pt3dadd( 23.8599, -99.7474, 38.0278, 0.37 ) }
    dend_34 { pt3dadd( 24.1182, -100.939, 38.3908, 0.15 ) }
    dend_34 { pt3dadd( 24.3184, -101.705, 38.6398, 0.44 ) }
    dend_34 { pt3dadd( 24.7246, -103.066, 39.1295, 0.15 ) }
    dend_34 { pt3dadd( 25.0842, -104.175, 39.5833, 0.15 ) }
    dend_34 { pt3dadd( 25.3081, -104.822, 39.8912, 0.81 ) }
    dend_34 { pt3dadd( 25.4908, -105.345, 40.1568, 1.18 ) }
    dend_34 { pt3dadd( 26.0649, -107.044, 41.1101, 0.15 ) }
    dend_34 { pt3dadd( 26.358, -107.997, 41.6691, 0.15 ) }
    dend_34 { pt3dadd( 26.485, -108.489, 41.9776, 0.81 ) }
    dend_34 { pt3dadd( 26.6769, -109.263, 42.5389, 0.81 ) }
    dend_34 { pt3dadd( 26.8631, -110.011, 43.1433, 0.22 ) }
    dend_34 { pt3dadd( 27.1355, -111.062, 44.0814, 0.15 ) }
    dend_34 { pt3dadd( 27.2261, -111.423, 44.4121, 0.22 ) }
    dend_34 { pt3dadd( 27.4724, -112.337, 45.2832, 0.15 ) }
    dend_34 { pt3dadd( 27.9015, -113.655, 46.6739, 0.15 ) }
    dend_34 { pt3dadd( 28.0524, -114.077, 47.1394, 0.59 ) }
    dend_34 { pt3dadd( 28.4503, -115.134, 48.3451, 0.15 ) }
    dend_34 { pt3dadd( 28.6274, -115.625, 48.8785, 0.15 ) }
    dend_34 { pt3dadd( 28.8427, -116.273, 49.5221, 0.81 ) }
    dend_34 { pt3dadd( 29.2805, -117.775, 50.7625, 0.15 ) }
    dend_34 { pt3dadd( 29.4632, -118.514, 51.2594, 0.15 ) }
    dend_34 { pt3dadd( 29.5753, -119.022, 51.5592, 0.52 ) }
    dend_34 { pt3dadd( 29.7097, -119.748, 51.9099, 0.66 ) }
    dend_34 { pt3dadd( 29.8377, -120.651, 52.2846, 0.29 ) }
    dend_34 { pt3dadd( 29.9199, -121.754, 52.6442, 0.15 ) }
    dend_34 { pt3dadd( 29.9211, -122.302, 52.7804, 0.15 ) }
    dend_34 { pt3dadd( 29.9026, -122.886, 52.9284, 0.59 ) }
    dend_34 { pt3dadd( 29.8406, -123.619, 53.0879, 0.88 ) }
    dend_34 { pt3dadd( 29.713, -124.526, 53.2619, 0.29 ) }
    dend_34 { pt3dadd( 29.5551, -125.307, 53.3956, 0.22 ) }
    dend_34 { pt3dadd( 29.3025, -126.401, 53.5599, 0.07 ) }
    dend_34 { pt3dadd( 29.136, -127.129, 53.6217, 0.07 ) }
    dend_34 { pt3dadd( 28.8615, -128.399, 53.6755, 0.07 ) }
    dend_34 { pt3dadd( 28.8084, -128.696, 53.6772, 0.29 ) }
    dend_34 { pt3dadd( 28.7119, -129.533, 53.6738, 0.66 ) }
    dend_34 { pt3dadd( 28.6406, -130.596, 53.6765, 0.15 ) }
    dend_34 { pt3dadd( 28.5966, -131.805, 53.7183, 0.15 ) }
    dend_34 { pt3dadd( 28.5699, -132.637, 53.7532, 0.29 ) }
    dend_34 { pt3dadd( 28.5401, -133.63, 53.8281, 0.15 ) }
    dend_34 { pt3dadd( 28.4983, -134.496, 53.8938, 0.37 ) }
    dend_34 { pt3dadd( 28.4498, -135.09, 53.9251, 0.37 ) }
    dend_34 { pt3dadd( 28.3158, -136.216, 53.9785, 0.22 ) }
    dend_34 { pt3dadd( 28.1812, -137.164, 54.0356, 0.44 ) }
    dend_34 { pt3dadd( 28.0024, -138.133, 54.0269, 0.96 ) }
    dend_34 { pt3dadd( 27.8592, -138.792, 53.9741, 0.22 ) }
    dend_34 { pt3dadd( 27.5463, -140.156, 53.7898, 0.15 ) }
    dend_34 { pt3dadd( 27.4855, -140.439, 53.7464, 0.15 ) }
    dend_34 { pt3dadd( 27.2557, -141.585, 53.5189, 0.29 ) }
    dend_34 { pt3dadd( 26.9982, -142.903, 53.2054, 0.15 ) }
    dend_34 { pt3dadd( 26.864, -143.604, 53.0008, 0.15 ) }
    dend_34 { pt3dadd( 26.808, -143.896, 52.9128, 0.37 ) }
    dend_34 { pt3dadd( 26.6655, -144.669, 52.6973, 0.88 ) }
    dend_34 { pt3dadd( 26.3989, -146.298, 52.2844, 0.15 ) }
    dend_34 { pt3dadd( 26.2757, -147.135, 52.1098, 0.15 ) }
    dend_34 { pt3dadd( 26.1731, -147.954, 52.0102, 0.15 ) }
    dend_34 { pt3dadd( 26.076, -148.7, 51.9731, 0.66 ) }
    dend_34 { pt3dadd( 25.9711, -149.525, 51.9965, 0.22 ) }
    dend_34 { pt3dadd( 25.8731, -150.309, 52.0803, 0.22 ) }
    dend_34 { pt3dadd( 25.7893, -151.004, 52.221, 0.15 ) }
    dend_34 { pt3dadd( 25.7276, -151.507, 52.3411, 0.15 ) }
    dend_34 { pt3dadd( 25.5976, -152.454, 52.5708, 0.66 ) }
    dend_34 { pt3dadd( 25.3603, -153.965, 52.9486, 0.15 ) }
    dend_34 { pt3dadd( 25.2692, -154.495, 53.0846, 0.15 ) }
    dend_34 { pt3dadd( 25.1892, -154.943, 53.2014, 0.22 ) }
    dend_34 { pt3dadd( 25.0841, -155.586, 53.3649, 0.15 ) }
    dend_34 { pt3dadd( 24.9833, -156.24, 53.5297, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( 24.827, -157.255, 53.7889, 0.44 ) }
    dend_34 { pt3dadd( 24.6643, -158.331, 54.0681, 0.15 ) }
    dend_34 { pt3dadd( 24.5654, -158.979, 54.2126, 0.15 ) }
    dend_34 { pt3dadd( 24.4602, -159.561, 54.295, 0.15 ) }
    dend_34 { pt3dadd( 24.3202, -160.225, 54.3479, 0.15 ) }
    dend_34 { pt3dadd( 24.1315, -160.999, 54.3805, 0.44 ) }
    dend_34 { pt3dadd( 23.8743, -161.937, 54.4045, 0.44 ) }
    dend_34 { pt3dadd( 23.5225, -163.17, 54.4888, 0.15 ) }
    dend_34 { pt3dadd( 23.0945, -164.742, 54.659, 0.15 ) }
    dend_34 { pt3dadd( 22.9042, -165.484, 54.7618, 0.44 ) }
    dend_34 { pt3dadd( 22.6571, -166.545, 54.9405, 0.22 ) }
    dend_34 { pt3dadd( 22.464, -167.681, 55.2135, 0.22 ) }
    dend_34 { pt3dadd( 22.2636, -169.35, 55.7417, 0.07 ) }
    dend_34 { pt3dadd( 22.1912, -170.457, 56.1885, 0.07 ) }
    dend_34 { pt3dadd( 22.1819, -170.861, 56.3748, 0.29 ) }
    dend_34 { pt3dadd( 22.1775, -171.601, 56.7249, 0.96 ) }
    dend_34 { pt3dadd( 22.218, -173.58, 57.7224, 0.15 ) }
    dend_34 { pt3dadd( 22.2343, -174.317, 58.112, 0.15 ) }
    dend_34 { pt3dadd( 22.2091, -174.98, 58.4327, 0.15 ) }
    dend_34 { pt3dadd( 22.1479, -175.882, 58.8896, 0.37 ) }
    dend_34 { pt3dadd( 22.1024, -176.386, 59.1532, 0.37 ) }
    dend_34 { pt3dadd( 21.9503, -177.556, 59.771, 0.15 ) }
    dend_34 { pt3dadd( 21.831, -178.215, 60.1352, 0.74 ) }
    dend_34 { pt3dadd( 21.5828, -179.659, 61.1388, 0.15 ) }
    dend_34 { pt3dadd( 21.4018, -180.594, 61.924, 0.15 ) }
    dend_34 { pt3dadd( 21.3022, -181.077, 62.4545, 0.59 ) }
    dend_34 { pt3dadd( 21.2051, -181.529, 63.0739, 0.22 ) }
    dend_34 { pt3dadd( 21.0265, -182.249, 64.225, 0.15 ) }
    dend_34 { pt3dadd( 20.8219, -183.02, 65.6972, 0.15 ) }
    dend_34 { pt3dadd( 20.7203, -183.353, 66.4589, 0.52 ) }
    dend_34 { pt3dadd( 20.4498, -183.947, 67.9914, 0.15 ) }
    dend_34 { pt3dadd( 20.2747, -184.267, 69.0419, 0.15 ) }
    dend_34 { pt3dadd( 20.2062, -184.381, 69.489, 0.44 ) }
    dend_34 { pt3dadd( 20.0736, -184.57, 70.3111, 0.81 ) }
    dend_34 { pt3dadd( 19.9415, -184.756, 71.0469, 0.81 ) }
    dend_34 { pt3dadd( 19.657, -185.249, 72.8297, 0.15 ) }
    dend_34 { pt3dadd( 19.3665, -185.817, 74.6161, 0.15 ) }
    dend_34 { pt3dadd( 19.2857, -186.03, 75.1728, 0.15 ) }
    dend_34 { pt3dadd( 19.2413, -186.239, 75.6577, 0.66 ) }
    dend_34 { pt3dadd( 19.1823, -186.802, 76.7167, 0.22 ) }
    dend_34 { pt3dadd( 19.2097, -187.601, 78.0882, 0.15 ) }
    dend_34 { pt3dadd( 19.2517, -187.83, 78.4893, 0.22 ) }
    dend_34 { pt3dadd( 19.4177, -188.471, 79.6716, 0.15 ) }
    dend_34 { pt3dadd( 19.5761, -188.985, 80.698, 0.44 ) }
    dend_34 { pt3dadd( 19.7096, -189.377, 81.512, 0.88 ) }
    dend_34 { pt3dadd( 20.0687, -190.555, 84.1012, 0.15 ) }
    dend_34 { pt3dadd( 20.2438, -191.47, 86.1797, 0.15 ) }
    dend_34 { pt3dadd( 20.2902, -191.957, 87.316, 0.15 ) }
    dend_34 { pt3dadd( 20.2746, -192.313, 88.1565, 0.37 ) }
    dend_34 { pt3dadd( 20.2163, -192.614, 88.8548, 0.37 ) }
    dend_34 { pt3dadd( 19.9945, -193.306, 90.5012, 0.07 ) }
    dend_34 { pt3dadd( 19.7263, -193.823, 91.5703, 0.07 ) }
    dend_34 { pt3dadd( 19.5557, -194.109, 92.1025, 0.15 ) }
    dend_34 { pt3dadd( 19.1574, -194.746, 93.2834, 0.07 ) }
    dend_34 { pt3dadd( 18.9332, -195.099, 93.9514, 0.29 ) }
    dend_34 { pt3dadd( 18.6289, -195.58, 94.8705, 0.29 ) }
    dend_34 { pt3dadd( 18.2805, -196.221, 96.0048, 0.15 ) }
    dend_34 { pt3dadd( 18.123, -196.551, 96.5649, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 58/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 17.5493, -70.5853, 20.8024, 0.22 ) }
    dend_33 { pt3dadd( 16.6064, -72.6085, 15.87, 0.22 ) }
    dend_33 { pt3dadd( 16.4173, -73.1871, 14.6187, 0.22 ) }
    dend_33 { pt3dadd( 16.2572, -73.7241, 13.558, 0.52 ) }
    dend_33 { pt3dadd( 16.1108, -74.2003, 12.6776, 0.88 ) }
    dend_33 { pt3dadd( 15.8364, -75.0285, 11.2531, 0.96 ) }
    dend_33 { pt3dadd( 15.4933, -75.941, 9.7928, 0.74 ) }
    dend_33 { pt3dadd( 15.0037, -77.1404, 8.26199, 0.29 ) }
    dend_33 { pt3dadd( 14.584, -78.0259, 7.2751, 0.37 ) }
    dend_33 { pt3dadd( 14.2342, -78.7177, 6.60666, 0.37 ) }
    dend_33 { pt3dadd( 13.8909, -79.3535, 6.04213, 0.74 ) }
    dend_33 { pt3dadd( 13.421, -80.1969, 5.30736, 0.44 ) }
    dend_33 { pt3dadd( 12.5901, -81.6852, 3.90467, 0.44 ) }
    dend_33 { pt3dadd( 12.3155, -82.2141, 3.28984, 0.44 ) }
    dend_33 { pt3dadd( 12.0404, -82.8874, 2.37079, 0.22 ) }
    dend_33 { pt3dadd( 11.7624, -83.788, 1.05749, 0.22 ) }
    dend_33 { pt3dadd( 11.5665, -84.5234, -0.0388668, 0.44 ) }
    dend_33 { pt3dadd( 11.3703, -85.2414, -1.05982, 0.59 ) }
    dend_33 { pt3dadd( 10.8632, -86.6346, -2.86999, 0.29 ) }
    dend_33 { pt3dadd( 10.497, -87.3461, -3.72584, 0.22 ) }
    dend_33 { pt3dadd( 10.0501, -88.0138, -4.40819, 0.29 ) }
    dend_33 { pt3dadd( 9.41004, -88.854, -5.09726, 0.44 ) }
    dend_33 { pt3dadd( 8.4902, -89.9401, -5.84588, 0.74 ) }
    dend_33 { pt3dadd( 7.35757, -91.1611, -6.55739, 0.96 ) }
    dend_33 { pt3dadd( 6.83956, -91.6842, -6.82589, 0.96 ) }
    dend_33 { pt3dadd( 5.7721, -92.7362, -7.37467, 0.37 ) }
    dend_33 { pt3dadd( 4.67953, -93.8274, -8.01761, 0.44 ) }
    dend_33 { pt3dadd( 3.95409, -94.6128, -8.56003, 0.37 ) }
    dend_33 { pt3dadd( 3.47997, -95.2126, -9.03225, 0.22 ) }
    dend_33 { pt3dadd( 3.08291, -95.8563, -9.62965, 0.22 ) }
    dend_33 { pt3dadd( 2.89424, -96.2588, -10.1205, 0.29 ) }
    dend_33 { pt3dadd( 2.70035, -96.8264, -11.058, 0.44 ) }
    dend_33 { pt3dadd( 2.54677, -97.3391, -12.1102, 0.44 ) }
    dend_33 { pt3dadd( 2.43601, -97.7063, -12.9245, 0.66 ) }
    dend_33 { pt3dadd( 2.20927, -98.3676, -14.4024, 0.81 ) }
    dend_33 { pt3dadd( 1.85323, -99.214, -16.2047, 0.96 ) }
    dend_33 { pt3dadd( 1.45283, -100.016, -17.7483, 0.96 ) }
    dend_33 { pt3dadd( 1.10521, -100.671, -18.8972, 0.96 ) }
    dend_33 { pt3dadd( 0.878232, -101.072, -19.5859, 0.66 ) }
    dend_33 { pt3dadd( 0.513562, -101.715, -20.6738, 0.74 ) }
    dend_33 { pt3dadd( 0.181116, -102.363, -21.7105, 0.74 ) }
    dend_33 { pt3dadd( -0.364133, -103.62, -23.6718, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_33 { pt3dadd( -0.850809, -104.881, -25.6684, 0.29 ) }
    dend_33 { pt3dadd( -1.21766, -105.78, -27.2047, 0.29 ) }
    dend_33 { pt3dadd( -1.45669, -106.391, -28.3121, 0.29 ) }
    dend_33 { pt3dadd( -1.65982, -106.924, -29.3352, 0.37 ) }
    dend_33 { pt3dadd( -1.96096, -107.717, -30.9494, 0.52 ) }
    dend_33 { pt3dadd( -2.23587, -108.415, -32.4131, 0.44 ) }
    dend_33 { pt3dadd( -2.7475, -109.602, -34.7887, 0.44 ) }
    dend_33 { pt3dadd( -4.01614, -116.723, -43.0278, 0.44 ) }
    dend_33 { pt3dadd( -5.52032, -124.956, -50.1632, 0.44 ) }
    dend_33 { pt3dadd( -6.9857, -132.181, -58.2823, 0.44 ) }
    dend_33 { pt3dadd( -8.82976, -139.329, -66.3908, 0.44 ) }
    dend_33 { pt3dadd( -12.888, -145.134, -74.7268, 0.44 ) }
    dend_33 { pt3dadd( -15.7274, -149.075, -84.4959, 0.44 ) }
    dend_33 { pt3dadd( -18.5172, -153.317, -94.1557, 0.44 ) }
    dend_33 { pt3dadd( -19.7806, -158.653, -103.606, 0.44 ) }
    dend_33 { pt3dadd( -21.2472, -162.574, -113.68, 0.44 ) }
    dend_33 { pt3dadd( -23.965, -164.54, -124.053, 0.44 ) }
    dend_33 { pt3dadd( -25.5554, -165.415, -134.806, 0.44 ) }
    dend_33 { pt3dadd( -28.3784, -167.625, -145.102, 0.44 ) }
    dend_33 { pt3dadd( -31.0604, -171.041, -155.106, 0.44 ) }
    dend_33 { pt3dadd( -32.4879, -176.061, -164.699, 0.44 ) }
    dend_33 { pt3dadd( -33.3906, -180.928, -174.432, 0.44 ) }
    dend_33 { pt3dadd( -34.0659, -187.153, -183.405, 0.44 ) }
    dend_33 { pt3dadd( -35.3862, -193.692, -192.087, 0.44 ) }
    dend_33 { pt3dadd( -37.0822, -200.442, -200.547, 0.44 ) }
    dend_33 { pt3dadd( -37.7644, -206.027, -209.917, 0.44 ) }
    dend_33 { pt3dadd( -40.6674, -211.231, -219.075, 0.44 ) }
    dend_33 { pt3dadd( -42.1793, -217.67, -227.798, 0.44 ) }
    dend_33 { pt3dadd( -43.8524, -225.923, -234.874, 0.44 ) }
    dend_33 { pt3dadd( -43.9587, -234.337, -241.962, 0.44 ) }
    dend_33 { pt3dadd( -42.467, -243.459, -247.979, 0.44 ) }
    dend_33 { pt3dadd( -41.7648, -252.676, -254.004, 0.44 ) }
    dend_33 { pt3dadd( -41.9175, -262.735, -258.633, 0.44 ) }
    dend_33 { pt3dadd( -41.3033, -271.041, -265.816, 0.44 ) }
    dend_33 { pt3dadd( -40.6861, -280.032, -272.164, 0.44 ) }
    dend_33 { pt3dadd( -39.0223, -289.432, -277.714, 0.44 ) }
    dend_33 { pt3dadd( -36.6495, -298.917, -282.854, 0.44 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 37/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 7.06614, -177.524, 95.185, 0.15 ) }
    dend_29 { pt3dadd( 7.29785, -179.128, 95.9958, 0.15 ) }
    dend_29 { pt3dadd( 7.4176, -180.289, 96.6646, 0.22 ) }
    dend_29 { pt3dadd( 7.48968, -181.123, 97.1579, 0.22 ) }
    dend_29 { pt3dadd( 7.58993, -182.385, 97.9229, 0.37 ) }
    dend_29 { pt3dadd( 7.72369, -184.026, 99.077, 0.15 ) }
    dend_29 { pt3dadd( 7.9997, -186.71, 101.165, 0.15 ) }
    dend_29 { pt3dadd( 8.06885, -187.509, 101.957, 0.15 ) }
    dend_29 { pt3dadd( 8.12636, -188.266, 102.819, 0.29 ) }
    dend_29 { pt3dadd( 8.2989, -190.65, 105.852, 0.15 ) }
    dend_29 { pt3dadd( 8.42059, -192.212, 108.186, 0.15 ) }
    dend_29 { pt3dadd( 8.49531, -192.883, 109.374, 0.15 ) }
    dend_29 { pt3dadd( 8.80879, -194.519, 112.746, 0.15 ) }
    dend_29 { pt3dadd( 8.92269, -195.092, 114.277, 0.15 ) }
    dend_29 { pt3dadd( 9.02249, -195.643, 116.101, 0.22 ) }
    dend_29 { pt3dadd( 9.14164, -196.32, 118.693, 0.44 ) }
    dend_29 { pt3dadd( 9.22241, -196.755, 120.381, 0.44 ) }
    dend_29 { pt3dadd( 9.40897, -197.572, 123.464, 0.15 ) }
    dend_29 { pt3dadd( 9.95079, -199.212, 129.631, 0.22 ) }
    dend_29 { pt3dadd( 10.3301, -200.187, 133.332, 0.22 ) }
    dend_29 { pt3dadd( 10.4892, -200.513, 134.49, 0.22 ) }
    dend_29 { pt3dadd( 10.841, -201.123, 136.385, 0.22 ) }
    dend_29 { pt3dadd( 11.2985, -201.745, 138.037, 0.22 ) }
    dend_29 { pt3dadd( 12.1598, -202.66, 140.03, 0.22 ) }
    dend_29 { pt3dadd( 12.8645, -203.301, 141.139, 0.22 ) }
    dend_29 { pt3dadd( 13.8959, -204.265, 142.548, 0.07 ) }
    dend_29 { pt3dadd( 15.4268, -205.784, 144.721, 0.07 ) }
    dend_29 { pt3dadd( 17.2316, -207.611, 147.238, 0.07 ) }
    dend_29 { pt3dadd( 18.6137, -209.037, 149.201, 0.07 ) }
    dend_29 { pt3dadd( 20.5942, -211.209, 151.996, 0.07 ) }
    dend_29 { pt3dadd( 22.2365, -213.155, 154.486, 0.07 ) }
    dend_29 { pt3dadd( 23.6305, -215.117, 157.147, 0.15 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 69/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 7.06614, -177.524, 95.185, 0.22 ) }
    dend_28 { pt3dadd( 6.9405, -179.761, 94.1591, 0.22 ) }
    dend_28 { pt3dadd( 6.81904, -181.673, 93.7795, 0.15 ) }
    dend_28 { pt3dadd( 6.71911, -183.122, 93.7563, 0.15 ) }
    dend_28 { pt3dadd( 6.61619, -184.519, 93.8711, 0.15 ) }
    dend_28 { pt3dadd( 6.50206, -185.894, 94.0436, 0.15 ) }
    dend_28 { pt3dadd( 6.27171, -188.933, 94.4656, 0.15 ) }
    dend_28 { pt3dadd( 6.1812, -190.323, 94.8103, 0.15 ) }
    dend_28 { pt3dadd( 6.11732, -191.205, 95.0732, 0.37 ) }
    dend_28 { pt3dadd( 6.01162, -192.374, 95.3627, 0.59 ) }
    dend_28 { pt3dadd( 5.81692, -194.362, 95.7171, 0.22 ) }
    dend_28 { pt3dadd( 5.63167, -196.031, 95.8797, 0.22 ) }
    dend_28 { pt3dadd( 5.46451, -197.359, 95.8314, 0.15 ) }
    dend_28 { pt3dadd( 5.28724, -198.523, 95.7275, 0.15 ) }
    dend_28 { pt3dadd( 4.94796, -200.335, 95.5409, 0.15 ) }
    dend_28 { pt3dadd( 4.76896, -201.15, 95.4072, 0.15 ) }
    dend_28 { pt3dadd( 4.56649, -201.942, 95.1917, 0.29 ) }
    dend_28 { pt3dadd( 4.38524, -202.582, 94.9733, 0.29 ) }
    dend_28 { pt3dadd( 4.0849, -203.712, 94.5312, 0.44 ) }
    dend_28 { pt3dadd( 3.87278, -204.624, 94.2551, 0.44 ) }
    dend_28 { pt3dadd( 3.52314, -206.368, 93.9634, 0.22 ) }
    dend_28 { pt3dadd( 3.2443, -207.998, 93.8369, 0.29 ) }
    dend_28 { pt3dadd( 3.02231, -209.675, 93.8502, 0.07 ) }
    dend_28 { pt3dadd( 2.89435, -211.03, 93.9724, 0.07 ) }
    dend_28 { pt3dadd( 2.75487, -213.889, 94.3378, 0.22 ) }
    dend_28 { pt3dadd( 2.72815, -215.172, 94.6493, 0.22 ) }
    dend_28 { pt3dadd( 2.72623, -215.991, 94.9608, 0.22 ) }
    dend_28 { pt3dadd( 2.74718, -216.627, 95.2766, 0.44 ) }
    dend_28 { pt3dadd( 2.78419, -217.304, 95.6428, 0.66 ) }
    dend_28 { pt3dadd( 2.88767, -219.041, 96.5906, 0.22 ) }
    dend_28 { pt3dadd( 3.03226, -221.023, 97.5746, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( 3.10883, -221.971, 98.0415, 0.07 ) }
    dend_28 { pt3dadd( 3.24184, -223.178, 98.5694, 0.07 ) }
    dend_28 { pt3dadd( 3.39447, -224.193, 98.9524, 0.15 ) }
    dend_28 { pt3dadd( 3.55005, -224.991, 99.2025, 0.15 ) }
    dend_28 { pt3dadd( 3.84447, -226.239, 99.5065, 0.37 ) }
    dend_28 { pt3dadd( 4.21002, -227.533, 99.6194, 0.66 ) }
    dend_28 { pt3dadd( 4.7975, -229.439, 99.6224, 0.15 ) }
    dend_28 { pt3dadd( 5.22061, -230.761, 99.5328, 0.22 ) }
    dend_28 { pt3dadd( 5.62096, -231.991, 99.4069, 0.22 ) }
    dend_28 { pt3dadd( 5.96251, -233.07, 99.2587, 0.15 ) }
    dend_28 { pt3dadd( 6.18569, -233.833, 99.1361, 0.15 ) }
    dend_28 { pt3dadd( 6.36, -234.581, 99.0367, 0.59 ) }
    dend_28 { pt3dadd( 6.47601, -235.421, 98.9698, 0.59 ) }
    dend_28 { pt3dadd( 6.54834, -237.103, 98.8744, 0.22 ) }
    dend_28 { pt3dadd( 6.53329, -237.61, 98.8347, 0.22 ) }
    dend_28 { pt3dadd( 6.47789, -238.446, 98.7632, 0.44 ) }
    dend_28 { pt3dadd( 6.4241, -239.638, 98.6711, 0.66 ) }
    dend_28 { pt3dadd( 6.40776, -240.959, 98.5625, 0.29 ) }
    dend_28 { pt3dadd( 6.44008, -242.035, 98.4746, 0.66 ) }
    dend_28 { pt3dadd( 6.56969, -243.388, 98.367, 0.52 ) }
    dend_28 { pt3dadd( 6.86321, -245.323, 98.205, 0.29 ) }
    dend_28 { pt3dadd( 7.21793, -247.037, 97.9883, 0.22 ) }
    dend_28 { pt3dadd( 7.54378, -248.282, 97.7728, 0.29 ) }
    dend_28 { pt3dadd( 7.9081, -249.451, 97.5308, 0.37 ) }
    dend_28 { pt3dadd( 8.3837, -250.825, 97.2649, 0.22 ) }
    dend_28 { pt3dadd( 8.63764, -251.532, 97.1479, 0.22 ) }
    dend_28 { pt3dadd( 9.27013, -253.292, 96.8467, 0.29 ) }
    dend_28 { pt3dadd( 9.65683, -254.477, 96.6537, 0.52 ) }
    dend_28 { pt3dadd( 9.87189, -255.202, 96.5556, 0.81 ) }
    dend_28 { pt3dadd( 10.2681, -256.683, 96.4123, 0.29 ) }
    dend_28 { pt3dadd( 10.5728, -257.91, 96.4486, 0.22 ) }
    dend_28 { pt3dadd( 10.696, -258.404, 96.5282, 0.22 ) }
    dend_28 { pt3dadd( 10.839, -258.995, 96.6979, 0.44 ) }
    dend_28 { pt3dadd( 11.0271, -259.854, 96.9754, 0.74 ) }
    dend_28 { pt3dadd( 11.2322, -260.753, 97.2407, 0.29 ) }
    dend_28 { pt3dadd( 11.6789, -262.485, 97.6703, 0.15 ) }
    dend_28 { pt3dadd( 11.7988, -262.905, 97.7669, 0.15 ) }
    dend_28 { pt3dadd( 12.034, -263.631, 97.9097, 0.15 ) }
    dend_28 { pt3dadd( 12.4171, -264.674, 98.0826, 0.44 ) }
    dend_28 { pt3dadd( 13.0413, -266.263, 98.3497, 0.22 ) }
    dend_28 { pt3dadd( 13.4609, -267.349, 98.5162, 0.22 ) }
    dend_28 { pt3dadd( 13.9899, -268.744, 98.6844, 0.52 ) }
    dend_28 { pt3dadd( 14.5902, -270.353, 98.8232, 0.15 ) }
    dend_28 { pt3dadd( 14.9863, -271.481, 98.8444, 0.29 ) }
    dend_28 { pt3dadd( 15.4157, -272.852, 98.7299, 0.59 ) }
    dend_28 { pt3dadd( 15.7026, -273.998, 98.4839, 0.74 ) }
    dend_28 { pt3dadd( 15.7879, -274.433, 98.3411, 0.74 ) }
    dend_28 { pt3dadd( 16.0016, -276.132, 97.6182, 0.22 ) }
    dend_28 { pt3dadd( 16.0628, -277.915, 96.7306, 0.15 ) }
    dend_28 { pt3dadd( 16.0327, -279.168, 96.012, 0.15 ) }
    dend_28 { pt3dadd( 15.9612, -280.249, 95.3558, 0.29 ) }
    dend_28 { pt3dadd( 15.8746, -281.106, 94.8541, 0.74 ) }
    dend_28 { pt3dadd( 15.7727, -282.022, 94.3858, 0.66 ) }
    dend_28 { pt3dadd( 15.5998, -283.716, 93.6756, 0.15 ) }
    dend_28 { pt3dadd( 15.4807, -285.25, 93.0651, 0.15 ) }
    dend_28 { pt3dadd( 15.4372, -286.37, 92.6393, 0.22 ) }
    dend_28 { pt3dadd( 15.4456, -287.648, 92.1444, 0.52 ) }
    dend_28 { pt3dadd( 15.5504, -289.18, 91.5358, 0.29 ) }
    dend_28 { pt3dadd( 15.8095, -290.941, 90.8821, 0.15 ) }
    dend_28 { pt3dadd( 16.1326, -292.3, 90.3989, 0.15 ) }
    dend_28 { pt3dadd( 16.2729, -292.753, 90.2392, 0.15 ) }
    dend_28 { pt3dadd( 16.5239, -293.456, 89.9728, 0.81 ) }
    dend_28 { pt3dadd( 16.8348, -294.393, 89.6211, 0.29 ) }
    dend_28 { pt3dadd( 17.2783, -296.025, 89.0047, 0.15 ) }
    dend_28 { pt3dadd( 17.5259, -297.26, 88.5228, 0.59 ) }
    dend_28 { pt3dadd( 17.6381, -298.15, 88.1765, 0.59 ) }
    dend_28 { pt3dadd( 17.6748, -298.912, 87.8217, 0.59 ) }
    dend_28 { pt3dadd( 17.6293, -300.239, 87.0545, 1.18 ) }
    dend_28 { pt3dadd( 17.508, -301.289, 86.2317, 0.74 ) }
    dend_28 { pt3dadd( 17.2493, -302.851, 84.7487, 0.22 ) }
    dend_28 { pt3dadd( 17.1682, -303.323, 84.2373, 0.29 ) }
    dend_28 { pt3dadd( 17.0183, -304.316, 83.001, 0.37 ) }
    dend_28 { pt3dadd( 16.9052, -305.3, 81.5256, 0.37 ) }
    dend_28 { pt3dadd( 16.8039, -306.526, 79.2792, 0.37 ) }
    dend_28 { pt3dadd( 16.7602, -306.904, 78.4806, 0.37 ) }
    dend_28 { pt3dadd( 16.7086, -307.353, 77.4338, 0.37 ) }
    dend_28 { pt3dadd( 16.7065, -307.486, 77.107, 0.37 ) }
    dend_28 { pt3dadd( 16.7425, -307.73, 76.5013, 0.37 ) }
    dend_28 { pt3dadd( 16.8408, -308.06, 75.7672, 0.37 ) }
    dend_28 { pt3dadd( 16.9942, -308.559, 74.829, 0.44 ) }
    dend_28 { pt3dadd( 17.1071, -309.063, 73.9881, 0.52 ) }
    dend_28 { pt3dadd( 17.2647, -310.059, 72.6822, 0.52 ) }
    dend_28 { pt3dadd( 17.3681, -310.986, 71.6228, 0.37 ) }
    dend_28 { pt3dadd( 17.4204, -311.461, 71.1549, 0.22 ) }
    dend_28 { pt3dadd( 17.4742, -311.993, 70.6973, 0.22 ) }
    dend_28 { pt3dadd( 17.5136, -312.758, 70.1421, 0.29 ) }
    dend_28 { pt3dadd( 17.479, -313.863, 69.535, 0.81 ) }
    dend_28 { pt3dadd( 17.3483, -315.49, 68.9414, 0.15 ) }
    dend_28 { pt3dadd( 17.2619, -316.242, 68.7482, 0.15 ) }
    dend_28 { pt3dadd( 17.1869, -316.924, 68.5802, 0.22 ) }
    dend_28 { pt3dadd( 17.1156, -317.816, 68.3815, 0.29 ) }
    dend_28 { pt3dadd( 17.0765, -318.463, 68.2428, 0.81 ) }
    dend_28 { pt3dadd( 16.9791, -320.018, 67.861, 0.22 ) }
    dend_28 { pt3dadd( 16.9048, -321.255, 67.5146, 0.22 ) }
    dend_28 { pt3dadd( 16.8491, -322.304, 67.1073, 0.22 ) }
    dend_28 { pt3dadd( 16.8416, -323.167, 66.652, 0.52 ) }
    dend_28 { pt3dadd( 16.8535, -323.407, 66.4839, 0.52 ) }
    dend_28 { pt3dadd( 16.9746, -324.637, 65.3752, 0.22 ) }
    dend_28 { pt3dadd( 17.0733, -325.429, 64.5215, 0.37 ) }
    dend_28 { pt3dadd( 17.1899, -326.137, 63.6619, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( 17.3602, -327.035, 62.5203, 0.22 ) }
    dend_28 { pt3dadd( 17.5307, -327.882, 61.4087, 0.22 ) }
    dend_28 { pt3dadd( 17.7084, -328.653, 60.441, 0.22 ) }
    dend_28 { pt3dadd( 17.8152, -329.035, 59.9957, 0.37 ) }
    dend_28 { pt3dadd( 18.1549, -330.147, 58.8212, 1.11 ) }
    dend_28 { pt3dadd( 18.5419, -331.393, 57.6733, 0.44 ) }
    dend_28 { pt3dadd( 18.9047, -332.521, 56.7246, 0.66 ) }
    dend_28 { pt3dadd( 19.1892, -333.301, 56.1081, 0.59 ) }
    dend_28 { pt3dadd( 19.4531, -333.912, 55.6145, 0.52 ) }
    dend_28 { pt3dadd( 19.7797, -334.553, 55.0495, 0.29 ) }
    dend_28 { pt3dadd( 20.3384, -335.549, 54.0791, 0.15 ) }
    dend_28 { pt3dadd( 20.9499, -336.632, 52.9752, 0.15 ) }
    dend_28 { pt3dadd( 21.197, -337.102, 52.4736, 0.52 ) }
    dend_28 { pt3dadd( 21.6513, -338.178, 51.321, 0.74 ) }
    dend_28 { pt3dadd( 21.8439, -338.743, 50.7409, 0.74 ) }
    dend_28 { pt3dadd( 22.254, -340.147, 49.3973, 0.37 ) }
    dend_28 { pt3dadd( 22.5304, -341.391, 48.4003, 0.37 ) }
    dend_28 { pt3dadd( 22.7311, -342.614, 47.6328, 0.59 ) }
    dend_28 { pt3dadd( 22.8702, -343.868, 47.0203, 0.88 ) }
    dend_28 { pt3dadd( 22.9194, -344.53, 46.7871, 0.88 ) }
    dend_28 { pt3dadd( 22.9985, -345.894, 46.416, 0.37 ) }
    dend_28 { pt3dadd( 23.095, -347.282, 46.1488, 0.66 ) }
    dend_28 { pt3dadd( 23.249, -348.521, 45.8976, 0.66 ) }
    dend_28 { pt3dadd( 23.4919, -349.86, 45.6369, 1.18 ) }
    dend_28 { pt3dadd( 23.7398, -350.866, 45.4344, 0.81 ) }
    dend_28 { pt3dadd( 24.2939, -352.743, 45.0373, 0.44 ) }
    dend_28 { pt3dadd( 24.8179, -354.239, 44.7172, 0.37 ) }
    dend_28 { pt3dadd( 25.7079, -356.284, 44.2317, 0.29 ) }
    dend_28 { pt3dadd( 25.8859, -356.63, 44.1317, 0.52 ) }
    dend_28 { pt3dadd( 26.2534, -357.246, 43.9305, 0.96 ) }
    dend_28 { pt3dadd( 26.8938, -358.22, 43.5307, 0.29 ) }
    dend_28 { pt3dadd( 27.2876, -358.763, 43.2848, 0.29 ) }
    dend_28 { pt3dadd( 27.7223, -359.352, 42.9944, 0.59 ) }
    dend_28 { pt3dadd( 28.4743, -360.436, 42.612, 0.59 ) }
    dend_28 { pt3dadd( 28.8862, -361.045, 42.4387, 0.59 ) }
    dend_28 { pt3dadd( 30.0248, -362.781, 42.0511, 0.29 ) }
    dend_28 { pt3dadd( 30.7648, -363.947, 41.8854, 0.22 ) }
    dend_28 { pt3dadd( 31.14, -364.592, 41.8712, 0.88 ) }
    dend_28 { pt3dadd( 32.1811, -366.638, 42.1698, 0.37 ) }
    dend_28 { pt3dadd( 32.4565, -367.28, 42.3615, 0.66 ) }
    dend_28 { pt3dadd( 32.634, -367.778, 42.5982, 0.66 ) }
    dend_28 { pt3dadd( 32.9965, -368.96, 43.3758, 0.44 ) }
    dend_28 { pt3dadd( 33.209, -369.768, 44.0535, 0.44 ) }
    dend_28 { pt3dadd( 33.4336, -370.692, 45.0716, 0.44 ) }
    dend_28 { pt3dadd( 33.5948, -371.405, 46.004, 0.81 ) }
    dend_28 { pt3dadd( 33.946, -372.658, 47.8519, 0.22 ) }
    dend_28 { pt3dadd( 34.1438, -373.225, 48.7772, 0.37 ) }
    dend_28 { pt3dadd( 34.5563, -374.154, 50.4422, 0.37 ) }
    dend_28 { pt3dadd( 35.1266, -375.153, 52.2859, 0.37 ) }
    dend_28 { pt3dadd( 35.4288, -375.563, 53.0455, 0.66 ) }
    dend_28 { pt3dadd( 35.9839, -376.174, 54.2689, 0.22 ) }
    dend_28 { pt3dadd( 36.3377, -376.495, 54.9259, 0.22 ) }
    dend_28 { pt3dadd( 36.6584, -376.742, 55.5396, 0.74 ) }
    dend_28 { pt3dadd( 36.9918, -376.94, 56.1882, 0.74 ) }
    dend_28 { pt3dadd( 37.6747, -377.217, 57.7968, 0.22 ) }
    dend_28 { pt3dadd( 38.2323, -377.332, 59.5193, 0.22 ) }
    dend_28 { pt3dadd( 38.4682, -377.346, 60.5355, 0.37 ) }
    dend_28 { pt3dadd( 38.983, -377.334, 63.4011, 0.37 ) }
    dend_28 { pt3dadd( 39.0941, -377.321, 64.3486, 0.74 ) }
    dend_28 { pt3dadd( 39.2534, -377.252, 66.7869, 0.74 ) }
    dend_28 { pt3dadd( 39.3038, -377.189, 68.7117, 0.52 ) }
    dend_28 { pt3dadd( 39.3155, -377.169, 70.9553, 0.52 ) }
    dend_28 { pt3dadd( 39.3086, -377.188, 71.7413, 0.52 ) }
    dend_28 { pt3dadd( 39.2759, -377.292, 74.0752, 0.52 ) }
    dend_28 { pt3dadd( 39.2523, -377.37, 75.2848, 0.52 ) }
    dend_28 { pt3dadd( 39.2158, -377.539, 77.4067, 0.52 ) }
    dend_28 { pt3dadd( 39.2025, -377.598, 78.1036, 0.52 ) }
    dend_28 { pt3dadd( 39.1561, -377.958, 83.2009, 0.52 ) }
    // Section: dend_22, id: dend_22, parent: dend_10 (entry count 68/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -9.78599, 23.1169, -6.64018, 0.96 ) }
    dend_22 { pt3dadd( -11.5831, 24.1606, -7.5132, 0.96 ) }
    dend_22 { pt3dadd( -12.4617, 24.6843, -7.91175, 0.96 ) }
    dend_22 { pt3dadd( -13.5046, 25.3383, -8.30557, 0.88 ) }
    dend_22 { pt3dadd( -14.5015, 25.9915, -8.6289, 0.88 ) }
    dend_22 { pt3dadd( -15.5283, 26.6695, -8.88171, 0.81 ) }
    dend_22 { pt3dadd( -16.6346, 27.4037, -9.05482, 0.66 ) }
    dend_22 { pt3dadd( -17.466, 27.9335, -9.02933, 1.03 ) }
    dend_22 { pt3dadd( -18.5072, 28.5421, -8.84723, 1.18 ) }
    dend_22 { pt3dadd( -18.9074, 28.7432, -8.72992, 1.33 ) }
    dend_22 { pt3dadd( -20.0518, 29.24, -8.32903, 1.03 ) }
    dend_22 { pt3dadd( -21.3165, 29.7452, -7.89895, 0.96 ) }
    dend_22 { pt3dadd( -22.6211, 30.1684, -7.49634, 0.96 ) }
    dend_22 { pt3dadd( -24.3558, 30.5806, -7.07375, 1.33 ) }
    dend_22 { pt3dadd( -25.7345, 30.7923, -6.82736, 1.03 ) }
    dend_22 { pt3dadd( -26.4025, 30.8305, -6.72875, 1.03 ) }
    dend_22 { pt3dadd( -28.115, 30.7515, -6.52482, 0.74 ) }
    dend_22 { pt3dadd( -29.0995, 30.6218, -6.40544, 0.96 ) }
    dend_22 { pt3dadd( -29.8691, 30.4902, -6.2984, 1.55 ) }
    dend_22 { pt3dadd( -31.2393, 30.2453, -6.03203, 1.25 ) }
    dend_22 { pt3dadd( -32.8319, 29.9572, -5.54903, 1.03 ) }
    dend_22 { pt3dadd( -33.9843, 29.7439, -5.05914, 0.74 ) }
    dend_22 { pt3dadd( -34.7542, 29.6181, -4.66164, 0.74 ) }
    dend_22 { pt3dadd( -35.5951, 29.4908, -4.18783, 1.11 ) }
    dend_22 { pt3dadd( -36.446, 29.367, -3.69346, 1.11 ) }
    dend_22 { pt3dadd( -38.1671, 29.137, -2.72307, 0.96 ) }
    dend_22 { pt3dadd( -39.7947, 28.9743, -1.8431, 1.18 ) }
    dend_22 { pt3dadd( -40.9576, 28.9104, -1.23744, 1.55 ) }
    dend_22 { pt3dadd( -41.7671, 28.9105, -0.845391, 1.55 ) }
    dend_22 { pt3dadd( -42.6173, 28.9763, -0.487342, 1.18 ) }
    dend_22 { pt3dadd( -43.3966, 29.1443, -0.24923, 0.88 ) }
    dend_22 { pt3dadd( -44.4047, 29.5182, -0.0234939, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( -45.4679, 29.9915, 0.221308, 0.96 ) }
    dend_22 { pt3dadd( -46.2513, 30.3628, 0.452161, 1.18 ) }
    dend_22 { pt3dadd( -47.1197, 30.8076, 0.781703, 1.18 ) }
    dend_22 { pt3dadd( -48.2232, 31.4048, 1.32714, 1.11 ) }
    dend_22 { pt3dadd( -49.6531, 32.1955, 2.15711, 1.18 ) }
    dend_22 { pt3dadd( -50.9925, 32.9432, 3.01654, 1.03 ) }
    dend_22 { pt3dadd( -52.0502, 33.4977, 3.75061, 1.03 ) }
    dend_22 { pt3dadd( -53.1723, 34.0389, 4.59658, 0.88 ) }
    dend_22 { pt3dadd( -54.3217, 34.5896, 5.52499, 1.03 ) }
    dend_22 { pt3dadd( -55.269, 35.0466, 6.32956, 0.74 ) }
    dend_22 { pt3dadd( -56.2147, 35.5327, 7.14961, 0.66 ) }
    dend_22 { pt3dadd( -57.3381, 36.1411, 8.1487, 0.59 ) }
    dend_22 { pt3dadd( -58.6416, 36.8057, 9.3114, 1.03 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 13/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -9.78599, 23.1169, -6.64018, 1.03 ) }
    dend_11 { pt3dadd( -10.4505, 23.768, -9.36035, 1.03 ) }
    dend_11 { pt3dadd( -11.24, 24.3777, -11.9863, 1.03 ) }
    dend_11 { pt3dadd( -12.0124, 24.864, -14.1564, 1.18 ) }
    dend_11 { pt3dadd( -12.9794, 25.3839, -16.6081, 1.18 ) }
    dend_11 { pt3dadd( -13.6725, 25.7285, -18.2549, 1.18 ) }
    dend_11 { pt3dadd( -14.4615, 26.1196, -20.1077, 1.03 ) }
    dend_11 { pt3dadd( -15.2526, 26.4814, -21.7227, 0.96 ) }
    dend_11 { pt3dadd( -15.8428, 26.7522, -22.8157, 1.18 ) }
    dend_11 { pt3dadd( -16.5079, 27.069, -24.0078, 1.03 ) }
    dend_11 { pt3dadd( -17.1309, 27.3719, -25.1095, 1.03 ) }
    dend_11 { pt3dadd( -17.933, 27.777, -26.5035, 1.03 ) }
    dend_11 { pt3dadd( -18.5642, 28.0993, -27.5602, 1.18 ) }
    dend_11 { pt3dadd( -19.5969, 28.6126, -29.0881, 1.18 ) }
    dend_11 { pt3dadd( -20.3437, 28.9885, -30.0749, 1.18 ) }
    dend_11 { pt3dadd( -21.2407, 29.4543, -31.1873, 1.11 ) }
    dend_11 { pt3dadd( -22.2063, 29.9465, -32.2847, 1.18 ) }
    dend_11 { pt3dadd( -22.8233, 30.2668, -32.9091, 0.96 ) }
    dend_11 { pt3dadd( -23.7249, 30.7899, -33.7375, 0.81 ) }
    dend_11 { pt3dadd( -24.8676, 31.5704, -34.7075, 1.03 ) }
    dend_11 { pt3dadd( -26.569, 32.8925, -36.056, 1.25 ) }
    dend_11 { pt3dadd( -27.1121, 33.3556, -36.4693, 1.25 ) }
    dend_11 { pt3dadd( -27.9377, 34.0743, -37.0613, 0.88 ) }
    dend_11 { pt3dadd( -29.0935, 35.0461, -37.8556, 0.88 ) }
    dend_11 { pt3dadd( -30.4232, 36.0689, -38.7197, 1.11 ) }
    dend_11 { pt3dadd( -31.5584, 36.8255, -39.3695, 1.11 ) }
    dend_11 { pt3dadd( -33.0037, 37.6778, -40.113, 0.96 ) }
    dend_11 { pt3dadd( -34.2059, 38.3221, -40.7355, 1.03 ) }
    dend_11 { pt3dadd( -35.3595, 38.8879, -41.3493, 1.03 ) }
    dend_11 { pt3dadd( -36.5536, 39.4098, -41.9924, 0.96 ) }
    dend_11 { pt3dadd( -37.6671, 39.859, -42.5699, 0.96 ) }
    dend_11 { pt3dadd( -38.8556, 40.3216, -43.2122, 0.96 ) }
    dend_11 { pt3dadd( -40.3506, 40.8642, -44.0057, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 46/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -10.5251, 80.9544, -39.2046, 1.18 ) }
    dend_9 { pt3dadd( -10.9027, 83.2301, -38.9862, 1.18 ) }
    dend_9 { pt3dadd( -11.0685, 84.7901, -38.8484, 0.96 ) }
    dend_9 { pt3dadd( -11.1083, 85.8311, -38.8034, 0.96 ) }
    dend_9 { pt3dadd( -11.1027, 86.7834, -38.82, 0.96 ) }
    dend_9 { pt3dadd( -11.0631, 88.5312, -38.9445, 0.96 ) }
    dend_9 { pt3dadd( -11.0494, 90.2444, -39.1459, 1.03 ) }
    dend_9 { pt3dadd( -11.012, 91.4983, -39.3758, 1.11 ) }
    dend_9 { pt3dadd( -10.945, 93.003, -39.7691, 0.88 ) }
    dend_9 { pt3dadd( -10.9393, 94.16, -40.1437, 0.88 ) }
    dend_9 { pt3dadd( -11.0184, 95.3418, -40.5511, 0.88 ) }
    dend_9 { pt3dadd( -11.192, 96.799, -41.0645, 1.03 ) }
    dend_9 { pt3dadd( -11.346, 97.7812, -41.3961, 1.03 ) }
    dend_9 { pt3dadd( -11.7261, 99.7703, -41.9707, 1.18 ) }
    dend_9 { pt3dadd( -12.1339, 101.835, -42.4664, 0.88 ) }
    dend_9 { pt3dadd( -12.6067, 104.368, -42.968, 0.81 ) }
    dend_9 { pt3dadd( -12.7583, 105.3, -43.1163, 0.96 ) }
    dend_9 { pt3dadd( -12.8972, 106.257, -43.253, 0.96 ) }
    dend_9 { pt3dadd( -13.1843, 108.17, -43.5286, 0.88 ) }
    dend_9 { pt3dadd( -13.3929, 109.525, -43.7092, 0.88 ) }
    dend_9 { pt3dadd( -13.6182, 111.028, -43.949, 1.11 ) }
    dend_9 { pt3dadd( -13.9681, 113.349, -44.3959, 1.25 ) }
    dend_9 { pt3dadd( -14.2076, 114.832, -44.7111, 1.03 ) }
    dend_9 { pt3dadd( -14.472, 116.45, -45.0889, 1.03 ) }
    dend_9 { pt3dadd( -14.6723, 117.709, -45.4032, 1.18 ) }
    dend_9 { pt3dadd( -15.0085, 119.923, -46.0344, 0.96 ) }
    dend_9 { pt3dadd( -15.2375, 121.711, -46.5928, 1.11 ) }
    dend_9 { pt3dadd( -15.3587, 123.215, -47.0757, 1.11 ) }
    dend_9 { pt3dadd( -15.3861, 124.881, -47.5629, 1.18 ) }
    dend_9 { pt3dadd( -15.2888, 126.487, -47.9809, 0.74 ) }
    dend_9 { pt3dadd( -15.0662, 128.074, -48.3403, 0.88 ) }
    dend_9 { pt3dadd( -14.8064, 129.207, -48.5338, 1.25 ) }
    dend_9 { pt3dadd( -14.3073, 130.746, -48.7108, 1.33 ) }
    dend_9 { pt3dadd( -13.6543, 132.332, -48.7658, 0.96 ) }
    dend_9 { pt3dadd( -13.0012, 133.656, -48.6896, 0.74 ) }
    dend_9 { pt3dadd( -12.3694, 134.805, -48.5347, 0.81 ) }
    dend_9 { pt3dadd( -11.8175, 135.751, -48.293, 0.81 ) }
    dend_9 { pt3dadd( -11.1185, 136.938, -47.9056, 0.74 ) }
    dend_9 { pt3dadd( -10.5617, 137.953, -47.5004, 1.25 ) }
    dend_9 { pt3dadd( -9.85589, 139.329, -46.8677, 1.4 ) }
    dend_9 { pt3dadd( -9.38498, 140.41, -46.3153, 1.4 ) }
    dend_9 { pt3dadd( -8.56296, 142.608, -45.1374, 0.88 ) }
    dend_9 { pt3dadd( -8.3989, 143.118, -44.852, 0.88 ) }
    dend_9 { pt3dadd( -8.02372, 144.47, -44.0841, 0.88 ) }
    dend_9 { pt3dadd( -7.78685, 145.442, -43.5648, 0.88 ) }
    dend_9 { pt3dadd( -7.4439, 147.085, -42.8062, 0.96 ) }
    dend_9 { pt3dadd( -7.25988, 148.102, -42.4385, 0.96 ) }
    dend_9 { pt3dadd( -7.02273, 149.629, -42.0492, 1.55 ) }
    dend_9 { pt3dadd( -6.9566, 150.144, -41.9328, 1.55 ) }
    dend_9 { pt3dadd( -6.69564, 152.202, -41.6005, 1.18 ) }
    dend_9 { pt3dadd( -6.46554, 154.303, -41.3984, 1.25 ) }
    dend_9 { pt3dadd( -6.3281, 155.991, -41.3841, 1.62 ) }
    dend_9 { pt3dadd( -6.29282, 156.864, -41.4549, 1.62 ) }
    dend_9 { pt3dadd( -6.28659, 159.248, -41.8293, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( -6.33836, 161.096, -42.2571, 0.96 ) }
    dend_9 { pt3dadd( -6.40999, 162.313, -42.6403, 1.33 ) }
    dend_9 { pt3dadd( -6.55478, 164.094, -43.3611, 1.11 ) }
    dend_9 { pt3dadd( -6.68612, 165.812, -44.2376, 1.33 ) }
    dend_9 { pt3dadd( -6.76499, 167.04, -44.962, 1.33 ) }
    dend_9 { pt3dadd( -6.83985, 168.574, -46.0302, 1.47 ) }
    dend_9 { pt3dadd( -6.88413, 169.524, -46.7146, 1.62 ) }
    dend_9 { pt3dadd( -6.93841, 171.27, -48.0082, 1.03 ) }
    dend_9 { pt3dadd( -6.9642, 172.766, -49.1013, 0.96 ) }
    dend_9 { pt3dadd( -6.9592, 173.776, -49.8058, 0.88 ) }
    dend_9 { pt3dadd( -6.90244, 175.372, -50.912, 0.81 ) }
    dend_9 { pt3dadd( -6.87748, 176.156, -51.3995, 1.18 ) }
    dend_9 { pt3dadd( -6.84942, 178.453, -52.6627, 0.96 ) }
    dend_9 { pt3dadd( -6.89946, 180.57, -53.6645, 0.96 ) }
    dend_9 { pt3dadd( -7.02399, 182.331, -54.3081, 0.74 ) }
    dend_9 { pt3dadd( -7.22222, 184.193, -54.824, 0.59 ) }
    dend_9 { pt3dadd( -7.55838, 186.602, -55.2708, 0.59 ) }
    dend_9 { pt3dadd( -7.86312, 188.426, -55.5279, 0.52 ) }
    dend_9 { pt3dadd( -8.09923, 189.617, -55.627, 0.74 ) }
    dend_9 { pt3dadd( -8.65889, 191.943, -55.757, 1.03 ) }
    dend_9 { pt3dadd( -8.99705, 193.119, -55.7911, 1.11 ) }
    dend_9 { pt3dadd( -9.42018, 194.502, -55.7976, 0.74 ) }
    dend_9 { pt3dadd( -10.0022, 196.446, -55.825, 0.66 ) }
    dend_9 { pt3dadd( -10.3063, 197.486, -55.8568, 0.52 ) }
    dend_9 { pt3dadd( -10.6303, 198.684, -55.94, 0.22 ) }
    dend_9 { pt3dadd( -11.1319, 200.614, -56.2356, 0.15 ) }
    dend_9 { pt3dadd( -11.2978, 201.228, -56.3319, 0.22 ) }
    dend_9 { pt3dadd( -13.0883, 211.528, -59.0441, 0.22 ) }
    dend_9 { pt3dadd( -13.1884, 221.31, -63.5449, 0.22 ) }
    dend_9 { pt3dadd( -13.6872, 231.546, -66.9278, 0.22 ) }
    dend_9 { pt3dadd( -15.7686, 241.637, -70.1352, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 31/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -10.5251, 80.9544, -39.2046, 0.66 ) }
    dend_6 { pt3dadd( -9.63876, 81.6066, -41.164, 0.66 ) }
    dend_6 { pt3dadd( -9.04058, 82.0467, -42.4863, 0.59 ) }
    dend_6 { pt3dadd( -8.43958, 82.489, -43.8149, 0.74 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 35/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 46.59, 36.4492, 7.30851, 0.88 ) }
    dend_43 { pt3dadd( 47.4848, 37.1561, 6.38756, 0.88 ) }
    dend_43 { pt3dadd( 48.2356, 37.7751, 5.5229, 0.59 ) }
    dend_43 { pt3dadd( 49.1086, 38.4764, 4.5184, 0.59 ) }
    dend_43 { pt3dadd( 49.7537, 38.9316, 3.83501, 0.59 ) }
    dend_43 { pt3dadd( 50.3337, 39.2835, 3.23137, 0.59 ) }
    dend_43 { pt3dadd( 50.9501, 39.6065, 2.57851, 0.81 ) }
    dend_43 { pt3dadd( 51.6276, 39.8699, 1.8154, 0.81 ) }
    dend_43 { pt3dadd( 52.1553, 39.9909, 1.24047, 0.81 ) }
    dend_43 { pt3dadd( 52.9787, 40.0664, 0.414233, 0.52 ) }
    dend_43 { pt3dadd( 53.9692, 40.0538, -0.551468, 0.52 ) }
    dend_43 { pt3dadd( 54.7234, 39.9816, -1.28982, 0.52 ) }
    dend_43 { pt3dadd( 55.4164, 39.8922, -1.95663, 0.52 ) }
    dend_43 { pt3dadd( 55.9125, 39.8464, -2.4232, 0.52 ) }
    dend_43 { pt3dadd( 56.6517, 39.8009, -3.16713, 0.44 ) }
    dend_43 { pt3dadd( 57.5691, 39.7741, -4.14173, 0.59 ) }
    dend_43 { pt3dadd( 58.355, 39.7571, -4.92782, 0.44 ) }
    dend_43 { pt3dadd( 58.8314, 39.7306, -5.40796, 0.66 ) }
    dend_43 { pt3dadd( 59.5204, 39.6607, -6.08709, 0.37 ) }
    dend_43 { pt3dadd( 60.4059, 39.4997, -6.96336, 0.37 ) }
    dend_43 { pt3dadd( 61.2665, 39.2557, -7.75274, 0.59 ) }
    dend_43 { pt3dadd( 61.9078, 39.0173, -8.31951, 1.11 ) }
    dend_43 { pt3dadd( 63.0205, 38.5568, -9.34961, 1.11 ) }
    dend_43 { pt3dadd( 63.8788, 38.198, -10.1761, 0.66 ) }
    dend_43 { pt3dadd( 64.8141, 37.8582, -11.0974, 0.52 ) }
    dend_43 { pt3dadd( 65.4937, 37.6817, -11.8062, 0.29 ) }
    dend_43 { pt3dadd( 66.2206, 37.6095, -12.6621, 0.29 ) }
    dend_43 { pt3dadd( 66.8869, 37.6833, -13.6645, 0.59 ) }
    dend_43 { pt3dadd( 67.224, 37.8174, -14.2896, 0.59 ) }
    dend_43 { pt3dadd( 67.714, 38.1498, -15.3671, 0.37 ) }
    dend_43 { pt3dadd( 68.1548, 38.532, -16.4342, 0.37 ) }
    dend_43 { pt3dadd( 68.4499, 38.8007, -17.1866, 0.59 ) }
    dend_43 { pt3dadd( 69.0825, 39.3238, -18.731, 1.03 ) }
    dend_43 { pt3dadd( 69.5422, 39.6361, -19.7731, 0.88 ) }
    dend_43 { pt3dadd( 69.9508, 39.868, -20.6259, 0.44 ) }
    dend_43 { pt3dadd( 70.5819, 40.1557, -21.9126, 0.44 ) }
    dend_43 { pt3dadd( 70.9288, 40.286, -22.5463, 0.44 ) }
    dend_43 { pt3dadd( 71.2408, 40.3618, -23.0667, 0.66 ) }
    dend_43 { pt3dadd( 71.5256, 40.3967, -23.468, 0.66 ) }
    dend_43 { pt3dadd( 71.9881, 40.3962, -24.1012, 0.44 ) }
    dend_43 { pt3dadd( 73.127, 40.2896, -25.594, 0.44 ) }
    dend_43 { pt3dadd( 73.4579, 40.2329, -25.9978, 0.81 ) }
    dend_43 { pt3dadd( 73.9755, 40.0941, -26.654, 1.03 ) }
    dend_43 { pt3dadd( 74.6499, 39.8034, -27.6527, 0.66 ) }
    dend_43 { pt3dadd( 75.1173, 39.5038, -28.5177, 0.66 ) }
    dend_43 { pt3dadd( 75.5884, 39.0375, -29.7596, 0.52 ) }
    dend_43 { pt3dadd( 75.8883, 38.5311, -31.0376, 0.37 ) }
    dend_43 { pt3dadd( 76.0267, 38.0085, -32.3282, 0.44 ) }
    dend_43 { pt3dadd( 76.0538, 37.1753, -34.3466, 0.52 ) }
    dend_43 { pt3dadd( 75.9835, 36.5147, -35.8941, 0.52 ) }
    dend_43 { pt3dadd( 75.8729, 35.6634, -37.8111, 0.52 ) }
    dend_43 { pt3dadd( 75.7784, 34.9453, -39.4165, 0.81 ) }
    dend_43 { pt3dadd( 75.7393, 34.388, -40.708, 1.03 ) }
    dend_43 { pt3dadd( 75.8017, 33.9133, -41.9104, 1.03 ) }
    dend_43 { pt3dadd( 75.9839, 33.6139, -42.7942, 0.81 ) }
    dend_43 { pt3dadd( 76.4517, 33.2732, -44.0393, 0.59 ) }
    dend_43 { pt3dadd( 76.9574, 33.0995, -44.9536, 0.59 ) }
    dend_43 { pt3dadd( 77.3718, 33.0412, -45.5696, 0.44 ) }
    dend_43 { pt3dadd( 78.2501, 32.9833, -46.7661, 0.44 ) }
    dend_43 { pt3dadd( 78.9111, 32.951, -47.6015, 0.37 ) }
    dend_43 { pt3dadd( 79.4085, 32.9206, -48.1797, 0.37 ) }
    dend_43 { pt3dadd( 79.9958, 32.864, -48.7783, 0.96 ) }
    dend_43 { pt3dadd( 81.1386, 32.6962, -49.7805, 0.66 ) }
    dend_43 { pt3dadd( 81.8995, 32.5613, -50.3993, 0.66 ) }
    dend_43 { pt3dadd( 82.6741, 32.4076, -51.0384, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_43 { pt3dadd( 83.6396, 32.2028, -51.9905, 0.74 ) }
    dend_43 { pt3dadd( 84.4323, 32.0385, -53.0084, 0.74 ) }
    dend_43 { pt3dadd( 85.2436, 31.9176, -54.3492, 0.74 ) }
    dend_43 { pt3dadd( 85.7704, 31.9183, -55.4707, 0.59 ) }
    dend_43 { pt3dadd( 86.4523, 32.0761, -57.2962, 0.81 ) }
    dend_43 { pt3dadd( 87.0018, 32.379, -59.1955, 0.96 ) }
    dend_43 { pt3dadd( 87.402, 32.7904, -61.0052, 0.96 ) }
    dend_43 { pt3dadd( 87.5831, 33.0896, -61.9314, 0.66 ) }
    dend_43 { pt3dadd( 87.7821, 33.4804, -62.8478, 0.59 ) }
    dend_43 { pt3dadd( 87.9579, 33.7746, -63.4726, 0.44 ) }
    dend_43 { pt3dadd( 88.3182, 34.3034, -64.4208, 0.88 ) }
    dend_43 { pt3dadd( 88.5113, 34.5315, -64.8747, 0.88 ) }
    dend_43 { pt3dadd( 88.9086, 34.8323, -65.9678, 0.29 ) }
    dend_43 { pt3dadd( 89.3146, 34.8519, -67.6942, 0.29 ) }
    dend_43 { pt3dadd( 89.6184, 34.5194, -69.8225, 0.29 ) }
    dend_43 { pt3dadd( 89.6818, 34.3713, -70.4726, 0.88 ) }
    dend_43 { pt3dadd( 89.7918, 33.9262, -72.1729, 0.88 ) }
    dend_43 { pt3dadd( 89.8443, 33.5801, -73.5563, 0.88 ) }
    dend_43 { pt3dadd( 89.8373, 33.3337, -74.699, 0.88 ) }
    dend_43 { pt3dadd( 89.7669, 33.1813, -76.1707, 0.88 ) }
    dend_43 { pt3dadd( 89.729, 33.2428, -76.7013, 0.88 ) }
    dend_43 { pt3dadd( 89.69, 33.4948, -77.3029, 0.88 ) }
    dend_43 { pt3dadd( 89.5818, 34.2236, -78.0753, 0.52 ) }
    dend_43 { pt3dadd( 89.4302, 34.9183, -78.6575, 0.52 ) }
    dend_43 { pt3dadd( 89.2547, 35.5291, -79.1653, 1.03 ) }
    dend_43 { pt3dadd( 89.0721, 36.1171, -79.6993, 1.03 ) }
    dend_43 { pt3dadd( 88.8794, 36.7425, -80.3551, 0.81 ) }
    dend_43 { pt3dadd( 88.6261, 37.647, -81.4523, 0.44 ) }
    dend_43 { pt3dadd( 88.4742, 38.3866, -82.477, 0.52 ) }
    dend_43 { pt3dadd( 88.3944, 38.9928, -83.4192, 0.52 ) }
    dend_43 { pt3dadd( 88.3165, 39.6173, -84.5398, 0.66 ) }
    dend_43 { pt3dadd( 88.2459, 39.8868, -85.1539, 0.52 ) }
    dend_43 { pt3dadd( 88.0853, 40.2426, -86.1131, 0.66 ) }
    dend_43 { pt3dadd( 87.8603, 40.6259, -87.1752, 0.88 ) }
    dend_43 { pt3dadd( 87.4343, 41.2381, -88.7539, 0.59 ) }
    dend_43 { pt3dadd( 87.0995, 41.6826, -89.8189, 0.59 ) }
    dend_43 { pt3dadd( 86.3915, 42.5454, -91.9247, 0.52 ) }
    dend_43 { pt3dadd( 86.1217, 42.8798, -92.7554, 0.52 ) }
    dend_43 { pt3dadd( 85.9548, 43.1581, -93.4297, 0.52 ) }
    dend_43 { pt3dadd( 85.8654, 43.614, -94.3744, 0.52 ) }
    dend_43 { pt3dadd( 86.0668, 44.1494, -95.1368, 0.44 ) }
    dend_43 { pt3dadd( 86.4757, 44.7916, -95.7761, 0.74 ) }
    dend_43 { pt3dadd( 86.7473, 45.169, -96.0651, 0.81 ) }
    dend_43 { pt3dadd( 87.5506, 46.1986, -96.8298, 0.59 ) }
    dend_43 { pt3dadd( 88.1013, 46.8529, -97.3704, 0.66 ) }
    dend_43 { pt3dadd( 88.8089, 47.6924, -98.0669, 0.59 ) }
    dend_43 { pt3dadd( 89.5176, 48.6007, -98.7806, 0.59 ) }
    dend_43 { pt3dadd( 90.0286, 49.3254, -99.2959, 0.66 ) }
    dend_43 { pt3dadd( 90.5644, 50.1556, -99.8624, 0.52 ) }
    dend_43 { pt3dadd( 91.3283, 51.435, -100.67, 0.81 ) }
    dend_43 { pt3dadd( 95.3043, 52.3605, -108.538, 0.81 ) }
    dend_43 { pt3dadd( 98.3221, 52.9765, -116.843, 0.81 ) }
    dend_43 { pt3dadd( 100.409, 53.0742, -125.443, 0.81 ) }
    dend_43 { pt3dadd( 101.141, 54.1972, -134.206, 0.81 ) }
    dend_43 { pt3dadd( 102.448, 56.9979, -142.552, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 46.59, 36.4492, 7.30851, 0.81 ) }
    dend_40 { pt3dadd( 46.309, 37.1789, 7.14258, 0.81 ) }
    dend_40 { pt3dadd( 45.9911, 38.0803, 6.96814, 0.74 ) }
    dend_40 { pt3dadd( 45.7172, 38.9361, 6.88582, 0.59 ) }
    dend_40 { pt3dadd( 45.3418, 40.2235, 6.81409, 0.37 ) }
    dend_40 { pt3dadd( 45.0968, 41.2318, 6.80613, 0.44 ) }
    dend_40 { pt3dadd( 44.8982, 42.2065, 6.819, 0.44 ) }
    dend_40 { pt3dadd( 44.742, 43.2105, 6.86446, 0.74 ) }
    dend_40 { pt3dadd( 44.5616, 44.8159, 6.9805, 0.44 ) }
    dend_40 { pt3dadd( 44.5253, 45.5864, 7.04434, 0.52 ) }
    dend_40 { pt3dadd( 44.5545, 46.7754, 7.14524, 0.66 ) }
    dend_40 { pt3dadd( 44.6034, 47.4268, 7.17574, 0.44 ) }
    dend_40 { pt3dadd( 44.6881, 48.2756, 7.17292, 0.44 ) }
    dend_40 { pt3dadd( 44.7853, 49.0737, 7.12866, 0.37 ) }
    dend_40 { pt3dadd( 44.9429, 50.1681, 6.9851, 0.37 ) }
    dend_40 { pt3dadd( 45.0775, 51.0501, 6.84097, 0.44 ) }
    dend_40 { pt3dadd( 45.1853, 51.7071, 6.71204, 0.22 ) }
    dend_40 { pt3dadd( 45.2962, 52.2977, 6.59738, 0.22 ) }
    dend_40 { pt3dadd( 45.4485, 53.0531, 6.45317, 0.29 ) }
    dend_40 { pt3dadd( 45.6094, 53.866, 6.2801, 0.74 ) }
    dend_40 { pt3dadd( 45.7548, 54.6486, 6.09792, 0.59 ) }
    dend_40 { pt3dadd( 45.8867, 55.3902, 5.91176, 0.44 ) }
    dend_40 { pt3dadd( 46.0105, 56.0531, 5.67814, 0.22 ) }
    dend_40 { pt3dadd( 46.1256, 56.5701, 5.45012, 0.22 ) }
    dend_40 { pt3dadd( 46.2981, 57.2354, 5.14887, 0.22 ) }
    dend_40 { pt3dadd( 46.4767, 57.8488, 4.87078, 0.37 ) }
    dend_40 { pt3dadd( 46.6016, 58.2454, 4.67175, 0.37 ) }
    dend_40 { pt3dadd( 47.0547, 59.6565, 3.93321, 0.74 ) }
    dend_40 { pt3dadd( 47.3473, 60.582, 3.42712, 0.22 ) }
    dend_40 { pt3dadd( 47.6594, 61.6074, 2.87259, 0.22 ) }
    dend_40 { pt3dadd( 47.8691, 62.3778, 2.45928, 0.44 ) }
    dend_40 { pt3dadd( 48.0517, 63.3159, 1.90183, 0.29 ) }
    dend_40 { pt3dadd( 48.1143, 63.8622, 1.50999, 0.66 ) }
    dend_40 { pt3dadd( 48.1362, 64.4732, 1.02835, 0.66 ) }
    dend_40 { pt3dadd( 48.1051, 65.0659, 0.526982, 0.88 ) }
    dend_40 { pt3dadd( 48.0391, 65.7415, -0.045846, 0.88 ) }
    dend_40 { pt3dadd( 47.9374, 67.0371, -1.07144, 0.59 ) }
    dend_40 { pt3dadd( 47.9292, 68.2931, -1.96734, 0.44 ) }
    dend_40 { pt3dadd( 47.9687, 69.0436, -2.48508, 0.44 ) }
    dend_40 { pt3dadd( 48.0759, 70.1451, -3.18165, 0.52 ) }
    dend_40 { pt3dadd( 48.1778, 70.9595, -3.69046, 0.59 ) }
    dend_40 { pt3dadd( 48.3454, 72.0843, -4.38746, 0.44 ) }
    dend_40 { pt3dadd( 48.5269, 73.12, -5.00602, 0.22 ) }
    dend_40 { pt3dadd( 48.6696, 73.9428, -5.52153, 0.44 ) }
    dend_40 { pt3dadd( 48.7902, 74.6871, -6.03458, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_40 { pt3dadd( 48.9651, 75.8402, -6.86123, 1.11 ) }
    dend_40 { pt3dadd( 49.0892, 76.9464, -7.6445, 0.96 ) }
    dend_40 { pt3dadd( 49.1327, 77.5843, -8.07373, 0.96 ) }
    dend_40 { pt3dadd( 49.1933, 79.0064, -8.96198, 0.59 ) }
    dend_40 { pt3dadd( 49.227, 79.9148, -9.45519, 0.37 ) }
    dend_40 { pt3dadd( 49.2828, 80.9791, -9.91319, 0.22 ) }
    dend_40 { pt3dadd( 49.3165, 81.6788, -10.1121, 0.66 ) }
    dend_40 { pt3dadd( 49.3388, 82.3037, -10.2547, 0.74 ) }
    dend_40 { pt3dadd( 49.3628, 82.9976, -10.4107, 0.52 ) }
    dend_40 { pt3dadd( 49.393, 83.9781, -10.6516, 0.59 ) }
    dend_40 { pt3dadd( 49.4357, 85.2755, -11.0449, 0.66 ) }
    dend_40 { pt3dadd( 49.4808, 86.3986, -11.4321, 0.29 ) }
    dend_40 { pt3dadd( 49.5343, 87.7151, -11.915, 0.29 ) }
    dend_40 { pt3dadd( 49.574, 88.6589, -12.3066, 0.37 ) }
    dend_40 { pt3dadd( 49.6438, 89.919, -12.879, 0.44 ) }
    dend_40 { pt3dadd( 49.707, 90.897, -13.3867, 0.52 ) }
    dend_40 { pt3dadd( 49.7554, 91.8441, -13.9378, 0.66 ) }
    dend_40 { pt3dadd( 49.8083, 92.7127, -14.4408, 0.66 ) }
    dend_40 { pt3dadd( 49.8498, 93.5954, -14.9423, 0.66 ) }
    dend_40 { pt3dadd( 49.8747, 94.4085, -15.413, 0.96 ) }
    dend_40 { pt3dadd( 49.9336, 95.8998, -16.3174, 0.44 ) }
    dend_40 { pt3dadd( 49.9766, 96.7587, -16.8893, 0.44 ) }
    dend_40 { pt3dadd( 50.038, 97.5325, -17.4574, 0.59 ) }
    dend_40 { pt3dadd( 50.1714, 98.6542, -18.356, 0.22 ) }
    dend_40 { pt3dadd( 50.2497, 99.1696, -18.7781, 0.22 ) }
    dend_40 { pt3dadd( 50.324, 99.5901, -19.1333, 0.22 ) }
    dend_40 { pt3dadd( 50.3873, 99.8597, -19.3587, 0.22 ) }
    dend_40 { pt3dadd( 50.5162, 100.343, -19.7492, 0.22 ) }
    dend_40 { pt3dadd( 50.614, 100.729, -20.0593, 0.22 ) }
    dend_40 { pt3dadd( 50.7333, 101.239, -20.4583, 0.66 ) }
    dend_40 { pt3dadd( 50.8778, 101.968, -21.027, 0.66 ) }
    dend_40 { pt3dadd( 50.9987, 102.768, -21.6123, 0.66 ) }
    dend_40 { pt3dadd( 51.0619, 103.304, -21.9756, 0.37 ) }
    dend_40 { pt3dadd( 51.1318, 104.176, -22.5394, 0.22 ) }
    dend_40 { pt3dadd( 51.2081, 105.141, -23.0583, 0.44 ) }
    dend_40 { pt3dadd( 51.2706, 105.834, -23.3418, 0.44 ) }
    dend_40 { pt3dadd( 51.3831, 106.652, -23.5395, 0.44 ) }
    dend_40 { pt3dadd( 51.5946, 107.75, -23.5219, 0.22 ) }
    dend_40 { pt3dadd( 51.8217, 108.804, -23.4037, 0.29 ) }
    dend_40 { pt3dadd( 52.2203, 110.655, -23.1473, 0.44 ) }
    dend_40 { pt3dadd( 52.4674, 111.871, -23.0211, 0.66 ) }
    dend_40 { pt3dadd( 52.6887, 113.056, -23.0343, 0.66 ) }
    dend_40 { pt3dadd( 53.0013, 114.898, -23.3814, 0.29 ) }
    dend_40 { pt3dadd( 53.2179, 116.451, -24.0634, 0.37 ) }
    dend_40 { pt3dadd( 53.3096, 117.669, -24.9286, 0.52 ) }
    dend_40 { pt3dadd( 53.2782, 118.65, -25.8923, 0.74 ) }
    dend_40 { pt3dadd( 53.1695, 119.668, -27.0828, 0.74 ) }
    dend_40 { pt3dadd( 53.0765, 120.325, -27.9253, 0.74 ) }
    dend_40 { pt3dadd( 52.9242, 121.32, -29.2808, 0.52 ) }
    dend_40 { pt3dadd( 52.8182, 122.201, -30.3801, 0.59 ) }
    dend_40 { pt3dadd( 52.6666, 123.631, -32.0067, 0.22 ) }
    dend_40 { pt3dadd( 52.6089, 124.233, -32.6509, 0.22 ) }
    dend_40 { pt3dadd( 52.5425, 124.946, -33.3662, 0.59 ) }
    dend_40 { pt3dadd( 52.4302, 125.977, -34.4074, 0.96 ) }
    dend_40 { pt3dadd( 52.3298, 127.052, -35.4191, 0.37 ) }
    dend_40 { pt3dadd( 52.2917, 127.858, -36.1393, 0.44 ) }
    dend_40 { pt3dadd( 52.2866, 128.935, -37.0755, 0.44 ) }
    dend_40 { pt3dadd( 52.3025, 129.85, -37.8698, 0.44 ) }
    dend_40 { pt3dadd( 52.3384, 130.573, -38.5146, 0.44 ) }
    dend_40 { pt3dadd( 52.4565, 131.651, -39.4882, 0.22 ) }
    dend_40 { pt3dadd( 52.6352, 132.803, -40.562, 0.22 ) }
    dend_40 { pt3dadd( 52.7154, 133.181, -40.9097, 0.22 ) }
    dend_40 { pt3dadd( 52.8847, 133.851, -41.4856, 0.59 ) }
    dend_40 { pt3dadd( 53.2251, 135.063, -42.4473, 0.29 ) }
    dend_40 { pt3dadd( 53.4456, 135.917, -43.076, 0.29 ) }
    dend_40 { pt3dadd( 53.6318, 136.864, -43.7334, 0.52 ) }
    dend_40 { pt3dadd( 53.7423, 137.737, -44.2766, 0.88 ) }
    dend_40 { pt3dadd( 53.789, 138.395, -44.665, 0.88 ) }
    dend_40 { pt3dadd( 53.831, 139.302, -45.1628, 0.59 ) }
    dend_40 { pt3dadd( 53.9099, 140.49, -45.757, 0.22 ) }
    dend_40 { pt3dadd( 53.9815, 141.1, -46.0704, 0.29 ) }
    dend_40 { pt3dadd( 54.0772, 141.61, -46.3566, 0.29 ) }
    dend_40 { pt3dadd( 54.23, 142.197, -46.7007, 0.81 ) }
    dend_40 { pt3dadd( 54.4904, 142.975, -47.1758, 0.88 ) }
    dend_40 { pt3dadd( 54.7751, 143.664, -47.5941, 0.59 ) }
    dend_40 { pt3dadd( 55.1811, 144.546, -48.1385, 0.59 ) }
    dend_40 { pt3dadd( 55.6529, 145.581, -48.7729, 0.29 ) }
    dend_40 { pt3dadd( 56.2316, 146.939, -49.6113, 0.52 ) }
    dend_40 { pt3dadd( 56.5448, 147.787, -50.1751, 0.59 ) }
    dend_40 { pt3dadd( 56.7921, 148.679, -50.8027, 0.59 ) }
    dend_40 { pt3dadd( 56.9209, 149.339, -51.2957, 0.74 ) }
    dend_40 { pt3dadd( 56.9761, 149.805, -51.6822, 0.74 ) }
    dend_40 { pt3dadd( 57.016, 150.661, -52.4813, 0.66 ) }
    dend_40 { pt3dadd( 56.9999, 151.45, -53.2841, 0.66 ) }
    dend_40 { pt3dadd( 56.965, 152.176, -54.0189, 0.74 ) }
    dend_40 { pt3dadd( 56.9425, 153.184, -54.9127, 0.52 ) }
    dend_40 { pt3dadd( 56.9799, 153.909, -55.3967, 0.59 ) }
    dend_40 { pt3dadd( 57.1009, 154.736, -55.7416, 0.44 ) }
    dend_40 { pt3dadd( 57.2744, 155.589, -55.9863, 0.59 ) }
    dend_40 { pt3dadd( 57.4251, 156.264, -56.1538, 0.37 ) }
    dend_40 { pt3dadd( 57.6974, 157.815, -56.5917, 0.74 ) }
    dend_40 { pt3dadd( 57.7392, 158.814, -56.9765, 1.03 ) }
    dend_40 { pt3dadd( 57.6227, 159.926, -57.6014, 0.44 ) }
    dend_40 { pt3dadd( 57.1582, 161.508, -59.0034, 0.59 ) }
    dend_40 { pt3dadd( 56.8546, 162.28, -59.88, 1.18 ) }
    dend_40 { pt3dadd( 56.4264, 163.216, -61.082, 0.37 ) }
    dend_40 { pt3dadd( 55.9415, 164.095, -62.3398, 0.37 ) }
    dend_40 { pt3dadd( 55.5176, 164.755, -63.3554, 0.81 ) }
    dend_40 { pt3dadd( 54.8268, 165.819, -65.0012, 0.81 ) }
    dend_40 { pt3dadd( 54.4335, 166.515, -65.9671, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_40 { pt3dadd( 54.0879, 167.303, -66.9706, 0.37 ) }
    dend_40 { pt3dadd( 53.8198, 168.248, -68.0527, 0.37 ) }
    dend_40 { pt3dadd( 53.6151, 169.439, -69.241, 0.37 ) }
    dend_40 { pt3dadd( 53.5606, 170.152, -69.8282, 0.52 ) }
    dend_40 { pt3dadd( 53.5453, 170.971, -70.3546, 0.44 ) }
    dend_40 { pt3dadd( 53.5401, 171.858, -70.9078, 0.66 ) }
    dend_40 { pt3dadd( 53.5695, 172.652, -71.4375, 0.81 ) }
    dend_40 { pt3dadd( 53.6078, 173.194, -71.7986, 0.81 ) }
    dend_40 { pt3dadd( 53.6489, 173.79, -72.2021, 0.74 ) }
    dend_40 { pt3dadd( 53.6918, 175.117, -73.1208, 0.66 ) }
    dend_40 { pt3dadd( 53.7075, 176.523, -74.1067, 0.44 ) }
    dend_40 { pt3dadd( 53.6965, 177.68, -74.8993, 0.44 ) }
    dend_40 { pt3dadd( 53.6889, 178.595, -75.499, 1.03 ) }
    dend_40 { pt3dadd( 53.7011, 179.288, -75.8635, 0.66 ) }
    dend_40 { pt3dadd( 53.7421, 180.221, -76.18, 0.52 ) }
    dend_40 { pt3dadd( 53.7833, 180.73, -76.289, 0.74 ) }
    dend_40 { pt3dadd( 53.8239, 181.427, -76.4299, 0.96 ) }
    dend_40 { pt3dadd( 53.8421, 181.819, -76.533, 0.96 ) }
    dend_40 { pt3dadd( 53.8734, 183.51, -77.2341, 0.66 ) }
    dend_40 { pt3dadd( 53.8393, 184.899, -78.0544, 0.66 ) }
    dend_40 { pt3dadd( 53.7296, 186.097, -78.9716, 0.44 ) }
    dend_40 { pt3dadd( 53.4819, 187.452, -80.228, 0.96 ) }
    dend_40 { pt3dadd( 53.2166, 188.31, -81.177, 0.52 ) }
    dend_40 { pt3dadd( 52.8082, 189.124, -82.2407, 0.52 ) }
    dend_40 { pt3dadd( 52.3563, 189.846, -83.3702, 0.52 ) }
    dend_40 { pt3dadd( 51.9392, 190.354, -84.27, 0.44 ) }
    dend_40 { pt3dadd( 51.4595, 190.817, -85.0991, 0.44 ) }
    dend_40 { pt3dadd( 50.9636, 191.18, -85.7795, 0.96 ) }
    dend_40 { pt3dadd( 49.9371, 191.706, -86.9008, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 29/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 48.9972, -48.2989, 45.1597, 0.37 ) }
    dend_38 { pt3dadd( 49.3062, -49.8083, 47.4087, 0.37 ) }
    dend_38 { pt3dadd( 49.8512, -51.5205, 49.59, 0.37 ) }
    dend_38 { pt3dadd( 50.1783, -52.3875, 50.6754, 0.59 ) }
    dend_38 { pt3dadd( 50.738, -53.7741, 52.3463, 0.44 ) }
    dend_38 { pt3dadd( 51.0374, -54.4416, 53.2451, 0.66 ) }
    dend_38 { pt3dadd( 51.4499, -55.2838, 54.5873, 0.44 ) }
    dend_38 { pt3dadd( 52.0784, -56.4393, 56.4849, 0.44 ) }
    dend_38 { pt3dadd( 52.5941, -57.2818, 57.8998, 0.44 ) }
    dend_38 { pt3dadd( 52.9601, -57.8174, 58.8325, 0.81 ) }
    dend_38 { pt3dadd( 54.1534, -59.4757, 61.6885, 0.81 ) }
    dend_38 { pt3dadd( 55.2771, -61.0343, 64.352, 0.81 ) }
    dend_38 { pt3dadd( 55.6442, -61.55, 65.2035, 0.81 ) }
    dend_38 { pt3dadd( 56.1794, -62.3139, 66.3195, 0.44 ) }
    dend_38 { pt3dadd( 56.7006, -63.1013, 67.2679, 0.44 ) }
    dend_38 { pt3dadd( 57.5559, -64.5285, 68.7541, 0.44 ) }
    dend_38 { pt3dadd( 57.9838, -65.337, 69.4577, 0.66 ) }
    dend_38 { pt3dadd( 58.2861, -65.9836, 69.9889, 0.66 ) }
    dend_38 { pt3dadd( 58.9207, -67.5179, 71.4143, 0.52 ) }
    dend_38 { pt3dadd( 59.4202, -69.0057, 72.9206, 0.66 ) }
    dend_38 { pt3dadd( 59.9493, -71.0208, 74.9713, 0.29 ) }
    dend_38 { pt3dadd( 60.1168, -71.8563, 75.8293, 0.29 ) }
    dend_38 { pt3dadd( 60.3258, -73.2117, 77.2, 0.22 ) }
    dend_38 { pt3dadd( 60.5628, -75.3251, 79.2382, 0.22 ) }
    dend_38 { pt3dadd( 60.6782, -76.7743, 80.5885, 0.22 ) }
    dend_38 { pt3dadd( 60.7516, -78.0985, 81.7668, 0.37 ) }
    dend_38 { pt3dadd( 60.8344, -80.0305, 83.3871, 0.74 ) }
    dend_38 { pt3dadd( 60.8897, -81.1435, 84.2386, 0.88 ) }
    dend_38 { pt3dadd( 60.9611, -82.3804, 85.1021, 0.22 ) }
    dend_38 { pt3dadd( 61.0541, -84.533, 86.3255, 0.22 ) }
    dend_38 { pt3dadd( 61.0889, -85.3715, 86.7526, 0.22 ) }
    dend_38 { pt3dadd( 61.1421, -86.6887, 87.2562, 0.22 ) }
    dend_38 { pt3dadd( 61.2447, -88.8017, 87.7799, 0.15 ) }
    dend_38 { pt3dadd( 61.368, -90.3928, 88.0542, 0.15 ) }
    dend_38 { pt3dadd( 61.6719, -93.3513, 88.487, 0.22 ) }
    dend_38 { pt3dadd( 61.9148, -95.3882, 88.7418, 0.22 ) }
    dend_38 { pt3dadd( 62.3608, -99.0408, 89.2972, 0.15 ) }
    dend_38 { pt3dadd( 62.6744, -102.105, 89.8166, 0.15 ) }
    dend_38 { pt3dadd( 62.9027, -105.033, 90.4386, 0.22 ) }
    dend_38 { pt3dadd( 63.0611, -107.594, 91.1204, 0.22 ) }
    dend_38 { pt3dadd( 63.169, -109.708, 91.8103, 0.22 ) }
    dend_38 { pt3dadd( 63.2484, -112.166, 92.7291, 0.22 ) }
    dend_38 { pt3dadd( 63.3184, -115.355, 94.1817, 0.22 ) }
    dend_38 { pt3dadd( 63.3811, -118.593, 95.7316, 0.22 ) }
    dend_38 { pt3dadd( 63.4237, -120.548, 96.695, 0.22 ) }
    dend_38 { pt3dadd( 63.4789, -121.913, 97.3317, 0.52 ) }
    dend_38 { pt3dadd( 63.6009, -123.579, 98.0865, 0.59 ) }
    dend_38 { pt3dadd( 63.8559, -125.539, 98.9395, 0.22 ) }
    dend_38 { pt3dadd( 64.1026, -126.866, 99.5042, 0.15 ) }
    dend_38 { pt3dadd( 64.4353, -128.568, 100.274, 0.15 ) }
    dend_38 { pt3dadd( 64.6745, -130.412, 100.94, 0.22 ) }
    dend_38 { pt3dadd( 64.7079, -131.749, 101.357, 0.37 ) }
    dend_38 { pt3dadd( 64.669, -133.615, 101.908, 0.37 ) }
    dend_38 { pt3dadd( 64.5149, -135.626, 102.414, 0.15 ) }
    dend_38 { pt3dadd( 64.1145, -138.783, 103.144, 0.15 ) }
    dend_38 { pt3dadd( 63.2598, -143.689, 104.003, 0.15 ) }
    dend_38 { pt3dadd( 62.7122, -145.965, 104.335, 0.15 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 86/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 48.9972, -48.2989, 45.1597, 0.29 ) }
    dend_37 { pt3dadd( 49.4902, -48.7725, 44.6475, 0.29 ) }
    dend_37 { pt3dadd( 50.3401, -49.5227, 43.7655, 0.37 ) }
    dend_37 { pt3dadd( 50.8564, -49.969, 43.2379, 0.37 ) }
    dend_37 { pt3dadd( 51.5506, -50.5447, 42.5705, 0.22 ) }
    dend_37 { pt3dadd( 52.3398, -51.1541, 41.8659, 0.22 ) }
    dend_37 { pt3dadd( 52.7875, -51.4883, 41.4978, 0.52 ) }
    dend_37 { pt3dadd( 53.707, -52.2054, 40.7546, 0.29 ) }
    dend_37 { pt3dadd( 54.1328, -52.5456, 40.4301, 0.44 ) }
    dend_37 { pt3dadd( 54.5578, -52.9042, 40.107, 0.66 ) }
    dend_37 { pt3dadd( 55.126, -53.4305, 39.6626, 0.37 ) }
    dend_37 { pt3dadd( 55.6215, -53.9841, 39.2543, 0.29 ) }
    dend_37 { pt3dadd( 56.1339, -54.6839, 38.7577, 0.29 ) }
    dend_37 { pt3dadd( 56.5389, -55.34, 38.3192, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( 56.9647, -56.0716, 37.846, 0.66 ) }
    dend_37 { pt3dadd( 57.3644, -56.8228, 37.3759, 0.66 ) }
    dend_37 { pt3dadd( 57.74, -57.5817, 36.9259, 0.52 ) }
    dend_37 { pt3dadd( 58.2932, -58.7006, 36.29, 0.37 ) }
    dend_37 { pt3dadd( 58.7078, -59.4655, 35.8861, 0.66 ) }
    dend_37 { pt3dadd( 59.1853, -60.2446, 35.4761, 0.22 ) }
    dend_37 { pt3dadd( 59.5259, -60.7106, 35.2001, 0.22 ) }
    dend_37 { pt3dadd( 59.9111, -61.1573, 34.9034, 0.59 ) }
    dend_37 { pt3dadd( 60.3936, -61.6374, 34.5573, 0.81 ) }
    dend_37 { pt3dadd( 61.1314, -62.268, 34.0611, 0.52 ) }
    dend_37 { pt3dadd( 62.0646, -62.9843, 33.4464, 0.66 ) }
    dend_37 { pt3dadd( 62.9562, -63.628, 32.8729, 0.44 ) }
    dend_37 { pt3dadd( 63.9102, -64.3042, 32.3138, 0.37 ) }
    dend_37 { pt3dadd( 64.3695, -64.6417, 32.05, 0.37 ) }
    dend_37 { pt3dadd( 64.8663, -65.0278, 31.7741, 0.37 ) }
    dend_37 { pt3dadd( 65.719, -65.7491, 31.3366, 0.66 ) }
    dend_37 { pt3dadd( 66.2336, -66.217, 31.1076, 1.11 ) }
    dend_37 { pt3dadd( 66.9855, -66.9419, 30.7708, 0.66 ) }
    dend_37 { pt3dadd( 67.7462, -67.6924, 30.369, 0.44 ) }
    dend_37 { pt3dadd( 68.3922, -68.3458, 29.9314, 0.44 ) }
    dend_37 { pt3dadd( 68.9574, -68.9144, 29.4942, 0.59 ) }
    dend_37 { pt3dadd( 69.4387, -69.3783, 29.0933, 0.52 ) }
    dend_37 { pt3dadd( 70.2052, -70.06, 28.4108, 0.29 ) }
    dend_37 { pt3dadd( 70.9202, -70.6343, 27.7334, 0.81 ) }
    dend_37 { pt3dadd( 71.7445, -71.2347, 26.9411, 0.22 ) }
    dend_37 { pt3dadd( 72.0371, -71.4326, 26.6538, 0.22 ) }
    dend_37 { pt3dadd( 72.261, -71.5711, 26.4383, 0.29 ) }
    dend_37 { pt3dadd( 72.9134, -71.8983, 25.9055, 0.52 ) }
    dend_37 { pt3dadd( 73.6178, -72.1716, 25.4649, 0.22 ) }
    dend_37 { pt3dadd( 74.3229, -72.3876, 25.1416, 0.52 ) }
    dend_37 { pt3dadd( 74.8249, -72.5064, 24.9718, 0.52 ) }
    dend_37 { pt3dadd( 75.3759, -72.6182, 24.8519, 0.29 ) }
    dend_37 { pt3dadd( 76.5655, -72.8065, 24.7549, 0.22 ) }
    dend_37 { pt3dadd( 77.2699, -72.8944, 24.8003, 0.29 ) }
    dend_37 { pt3dadd( 77.8391, -72.9654, 24.8941, 0.52 ) }
    dend_37 { pt3dadd( 78.398, -73.0486, 25.0273, 0.66 ) }
    dend_37 { pt3dadd( 79.5623, -73.2346, 25.3494, 0.44 ) }
    dend_37 { pt3dadd( 80.4586, -73.4084, 25.6261, 0.44 ) }
    dend_37 { pt3dadd( 81.2996, -73.6019, 25.8903, 0.44 ) }
    dend_37 { pt3dadd( 82.0728, -73.7846, 26.115, 0.52 ) }
    dend_37 { pt3dadd( 82.7657, -73.9471, 26.2628, 0.66 ) }
    dend_37 { pt3dadd( 83.3835, -74.0888, 26.3416, 0.66 ) }
    dend_37 { pt3dadd( 84.2294, -74.2507, 26.3619, 0.37 ) }
    dend_37 { pt3dadd( 84.8561, -74.3417, 26.3545, 0.37 ) }
    dend_37 { pt3dadd( 85.3834, -74.3867, 26.3094, 0.74 ) }
    dend_37 { pt3dadd( 86.0595, -74.4109, 26.2224, 1.03 ) }
    dend_37 { pt3dadd( 86.8614, -74.4292, 26.0995, 0.29 ) }
    dend_37 { pt3dadd( 87.7425, -74.4463, 25.9551, 0.22 ) }
    dend_37 { pt3dadd( 88.6722, -74.4505, 25.81, 0.22 ) }
    dend_37 { pt3dadd( 89.6904, -74.4706, 25.6712, 0.22 ) }
    dend_37 { pt3dadd( 90.5126, -74.5092, 25.6105, 0.29 ) }
    dend_37 { pt3dadd( 91.1749, -74.5689, 25.6156, 0.44 ) }
    dend_37 { pt3dadd( 91.8055, -74.6478, 25.6706, 0.44 ) }
    dend_37 { pt3dadd( 92.4227, -74.7579, 25.7931, 0.81 ) }
    dend_37 { pt3dadd( 92.7665, -74.8365, 25.9024, 0.88 ) }
    dend_37 { pt3dadd( 93.7225, -75.1147, 26.3231, 0.22 ) }
    dend_37 { pt3dadd( 94.3001, -75.3419, 26.6705, 0.15 ) }
    dend_37 { pt3dadd( 94.9082, -75.6241, 27.1402, 0.15 ) }
    dend_37 { pt3dadd( 95.5758, -75.9673, 27.7262, 0.15 ) }
    dend_37 { pt3dadd( 95.9125, -76.155, 28.0339, 0.37 ) }
    dend_37 { pt3dadd( 96.3602, -76.4162, 28.4299, 0.81 ) }
    dend_37 { pt3dadd( 97.4136, -77.0838, 29.3011, 0.52 ) }
    dend_37 { pt3dadd( 98.1057, -77.606, 29.8482, 0.66 ) }
    dend_37 { pt3dadd( 98.46, -77.9248, 30.0931, 0.52 ) }
    dend_37 { pt3dadd( 98.8999, -78.3693, 30.3252, 0.22 ) }
    dend_37 { pt3dadd( 99.4434, -78.989, 30.5943, 0.22 ) }
    dend_37 { pt3dadd( 99.8252, -79.4697, 30.7603, 0.44 ) }
    dend_37 { pt3dadd( 100.495, -80.4106, 31.0316, 0.44 ) }
    dend_37 { pt3dadd( 100.971, -81.1982, 31.2498, 0.44 ) }
    dend_37 { pt3dadd( 101.361, -81.9482, 31.473, 0.44 ) }
    dend_37 { pt3dadd( 101.882, -83.0396, 31.9058, 0.29 ) }
    dend_37 { pt3dadd( 102.06, -83.4127, 32.0839, 0.66 ) }
    dend_37 { pt3dadd( 102.464, -84.2111, 32.5233, 0.66 ) }
    dend_37 { pt3dadd( 102.909, -85.0205, 33.0227, 0.66 ) }
    dend_37 { pt3dadd( 103.229, -85.5634, 33.3786, 1.03 ) }
    dend_37 { pt3dadd( 103.98, -86.7106, 34.138, 0.29 ) }
    dend_37 { pt3dadd( 104.46, -87.3655, 34.5488, 0.15 ) }
    dend_37 { pt3dadd( 104.643, -87.5916, 34.7074, 0.15 ) }
    dend_37 { pt3dadd( 104.914, -87.8835, 34.9598, 0.15 ) }
    dend_37 { pt3dadd( 105.242, -88.1763, 35.3115, 0.59 ) }
    dend_37 { pt3dadd( 105.44, -88.3309, 35.5393, 0.81 ) }
    dend_37 { pt3dadd( 106.103, -88.8236, 36.3094, 0.29 ) }
    dend_37 { pt3dadd( 106.722, -89.2817, 37.0834, 0.44 ) }
    dend_37 { pt3dadd( 107.533, -89.8795, 38.0964, 0.22 ) }
    dend_37 { pt3dadd( 108.297, -90.4303, 39.0308, 0.22 ) }
    dend_37 { pt3dadd( 108.875, -90.8749, 39.7626, 0.22 ) }
    dend_37 { pt3dadd( 109.468, -91.3601, 40.5029, 0.29 ) }
    dend_37 { pt3dadd( 109.992, -91.8046, 41.1159, 0.59 ) }
    dend_37 { pt3dadd( 110.364, -92.1638, 41.5341, 1.03 ) }
    dend_37 { pt3dadd( 110.59, -92.4204, 41.7729, 1.03 ) }
    dend_37 { pt3dadd( 111.582, -93.7037, 42.8583, 0.15 ) }
    dend_37 { pt3dadd( 111.982, -94.2521, 43.3012, 0.15 ) }
    dend_37 { pt3dadd( 112.288, -94.6844, 43.6304, 0.22 ) }
    dend_37 { pt3dadd( 112.889, -95.5008, 44.1945, 0.74 ) }
    dend_37 { pt3dadd( 113.322, -96.0484, 44.5514, 0.96 ) }
    dend_37 { pt3dadd( 114.148, -96.9908, 45.0822, 0.22 ) }
    dend_37 { pt3dadd( 114.694, -97.5293, 45.2942, 0.22 ) }
    dend_37 { pt3dadd( 115.444, -98.1944, 45.488, 0.37 ) }
    dend_37 { pt3dadd( 116.228, -98.8039, 45.5947, 0.15 ) }
    dend_37 { pt3dadd( 116.791, -99.1884, 45.5845, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_37 { pt3dadd( 117.527, -99.6645, 45.5007, 0.15 ) }
    dend_37 { pt3dadd( 118.327, -100.175, 45.3319, 0.66 ) }
    dend_37 { pt3dadd( 119.225, -100.726, 45.1212, 0.22 ) }
    dend_37 { pt3dadd( 119.994, -101.183, 44.9398, 0.22 ) }
    dend_37 { pt3dadd( 120.813, -101.705, 44.7832, 0.29 ) }
    dend_37 { pt3dadd( 121.303, -102.052, 44.7231, 0.15 ) }
    dend_37 { pt3dadd( 121.705, -102.362, 44.7145, 0.52 ) }
    dend_37 { pt3dadd( 122.118, -102.721, 44.7887, 0.59 ) }
    dend_37 { pt3dadd( 122.816, -103.421, 45.1093, 0.22 ) }
    dend_37 { pt3dadd( 123.384, -104.035, 45.5491, 0.88 ) }
    dend_37 { pt3dadd( 123.763, -104.436, 45.9802, 0.88 ) }
    dend_37 { pt3dadd( 124.069, -104.753, 46.4301, 0.59 ) }
    dend_37 { pt3dadd( 124.744, -105.441, 47.6182, 0.15 ) }
    dend_37 { pt3dadd( 125.23, -105.94, 48.6598, 0.22 ) }
    dend_37 { pt3dadd( 125.495, -106.197, 49.3383, 0.22 ) }
    dend_37 { pt3dadd( 125.902, -106.558, 50.5635, 0.15 ) }
    dend_37 { pt3dadd( 126.16, -106.771, 51.4123, 0.15 ) }
    dend_37 { pt3dadd( 126.307, -106.882, 51.9337, 0.44 ) }
    dend_37 { pt3dadd( 126.632, -107.085, 53.0955, 0.74 ) }
    dend_37 { pt3dadd( 126.902, -107.253, 54.0745, 0.74 ) }
    dend_37 { pt3dadd( 127.193, -107.486, 55.2924, 0.74 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -58.6416, 36.8057, 9.3114, 1.18 ) }
    dend_24 { pt3dadd( -60.9838, 38.1871, 9.16899, 1.18 ) }
    dend_24 { pt3dadd( -62.2374, 38.9153, 8.98451, 1.03 ) }
    dend_24 { pt3dadd( -63.2688, 39.5227, 8.72398, 1.4 ) }
    dend_24 { pt3dadd( -64.6077, 40.27, 8.38255, 1.03 ) }
    dend_24 { pt3dadd( -65.4965, 40.7285, 8.1815, 0.88 ) }
    dend_24 { pt3dadd( -66.9094, 41.4167, 7.88743, 0.59 ) }
    dend_24 { pt3dadd( -68.3249, 42.0776, 7.52217, 0.29 ) }
    dend_24 { pt3dadd( -69.5794, 42.5774, 7.21894, 0.37 ) }
    dend_24 { pt3dadd( -71.0006, 43.0657, 6.91758, 0.74 ) }
    dend_24 { pt3dadd( -72.3303, 43.4661, 6.68895, 1.4 ) }
    dend_24 { pt3dadd( -74.1211, 43.9713, 6.4571, 0.88 ) }
    dend_24 { pt3dadd( -75.2142, 44.2548, 6.40586, 0.88 ) }
    dend_24 { pt3dadd( -75.9805, 44.4559, 6.42794, 0.88 ) }
    dend_24 { pt3dadd( -76.9937, 44.7131, 6.5032, 0.59 ) }
    dend_24 { pt3dadd( -78.2352, 45.0107, 6.6055, 0.44 ) }
    dend_24 { pt3dadd( -79.2805, 45.2144, 6.72947, 0.29 ) }
    dend_24 { pt3dadd( -81.1819, 45.5076, 7.05398, 0.52 ) }
    dend_24 { pt3dadd( -82.4665, 45.6709, 7.32438, 0.74 ) }
    dend_24 { pt3dadd( -83.7475, 45.7886, 7.63702, 1.03 ) }
    dend_24 { pt3dadd( -85.3176, 45.8816, 8.02782, 0.59 ) }
    dend_24 { pt3dadd( -86.8548, 45.9439, 8.40132, 0.22 ) }
    dend_24 { pt3dadd( -88.1667, 45.9695, 8.69399, 0.22 ) }
    dend_24 { pt3dadd( -89.6973, 45.9705, 9.02461, 0.22 ) }
    dend_24 { pt3dadd( -91.1663, 45.9592, 9.39329, 0.37 ) }
    dend_24 { pt3dadd( -91.8955, 45.9549, 9.58401, 0.52 ) }
    dend_24 { pt3dadd( -93.3027, 45.971, 9.92805, 1.33 ) }
    dend_24 { pt3dadd( -94.957, 46.0231, 10.2943, 0.29 ) }
    dend_24 { pt3dadd( -96.9274, 46.0939, 10.6398, 0.37 ) }
    dend_24 { pt3dadd( -98.6363, 46.1699, 10.8482, 0.37 ) }
    dend_24 { pt3dadd( -99.6376, 46.2158, 10.9094, 0.37 ) }
    dend_24 { pt3dadd( -100.822, 46.2484, 10.9014, 0.66 ) }
    dend_24 { pt3dadd( -101.486, 46.2567, 10.8459, 0.66 ) }
    dend_24 { pt3dadd( -102.728, 46.2914, 10.64, 0.44 ) }
    dend_24 { pt3dadd( -103.465, 46.3235, 10.4928, 0.44 ) }
    dend_24 { pt3dadd( -104.487, 46.3502, 10.3531, 0.22 ) }
    dend_24 { pt3dadd( -105.45, 46.3554, 10.3523, 0.22 ) }
    dend_24 { pt3dadd( -106.709, 46.3132, 10.5104, 0.22 ) }
    dend_24 { pt3dadd( -107.841, 46.2545, 10.7347, 0.15 ) }
    dend_24 { pt3dadd( -109.405, 46.1277, 11.1647, 0.66 ) }
    dend_24 { pt3dadd( -110.923, 45.9919, 11.5986, 0.29 ) }
    dend_24 { pt3dadd( -112.506, 45.8276, 12.0329, 0.66 ) }
    dend_24 { pt3dadd( -114.012, 45.6487, 12.3738, 1.03 ) }
    dend_24 { pt3dadd( -115.165, 45.4843, 12.5439, 1.25 ) }
    dend_24 { pt3dadd( -117.752, 45.033, 12.7141, 0.22 ) }
    dend_24 { pt3dadd( -119.12, 44.7645, 12.6577, 0.22 ) }
    dend_24 { pt3dadd( -120.056, 44.5696, 12.5032, 0.29 ) }
    dend_24 { pt3dadd( -121.351, 44.2927, 12.1014, 0.29 ) }
    dend_24 { pt3dadd( -122.176, 44.1317, 11.6903, 0.22 ) }
    dend_24 { pt3dadd( -122.991, 43.9789, 11.122, 0.29 ) }
    dend_24 { pt3dadd( -123.489, 43.9017, 10.6566, 0.44 ) }
    dend_24 { pt3dadd( -124.034, 43.8343, 10.0423, 0.66 ) }
    dend_24 { pt3dadd( -124.58, 43.8057, 9.35178, 0.66 ) }
    dend_24 { pt3dadd( -125.341, 43.837, 8.33208, 0.22 ) }
    dend_24 { pt3dadd( -125.928, 43.9059, 7.56198, 0.22 ) }
    dend_24 { pt3dadd( -126.773, 44.0129, 6.6364, 0.29 ) }
    dend_24 { pt3dadd( -128.061, 44.1577, 5.4789, 0.29 ) }
    dend_24 { pt3dadd( -128.669, 44.2095, 5.03722, 0.59 ) }
    dend_24 { pt3dadd( -129.744, 44.241, 4.45503, 0.59 ) }
    dend_24 { pt3dadd( -131.154, 44.2224, 3.87772, 0.22 ) }
    dend_24 { pt3dadd( -133.116, 44.1485, 3.23499, 0.44 ) }
    dend_24 { pt3dadd( -133.951, 44.0889, 3.0193, 0.44 ) }
    dend_24 { pt3dadd( -134.914, 43.997, 2.81169, 0.22 ) }
    dend_24 { pt3dadd( -136.331, 43.855, 2.47689, 0.37 ) }
    dend_24 { pt3dadd( -136.91, 43.8135, 2.29771, 0.59 ) }
    dend_24 { pt3dadd( -137.526, 43.8117, 2.0423, 0.96 ) }
    dend_24 { pt3dadd( -138.462, 43.8789, 1.5465, 0.29 ) }
    dend_24 { pt3dadd( -139.896, 44.0571, 0.719123, 0.22 ) }
    dend_24 { pt3dadd( -140.809, 44.1847, 0.274372, 0.22 ) }
    dend_24 { pt3dadd( -142.416, 44.4375, -0.427848, 0.22 ) }
    dend_24 { pt3dadd( -143.864, 44.6736, -0.959695, 0.29 ) }
    dend_24 { pt3dadd( -144.661, 44.8102, -1.20776, 0.29 ) }
    dend_24 { pt3dadd( -145.71, 45.0039, -1.47485, 0.59 ) }
    dend_24 { pt3dadd( -148.686, 45.5336, -1.8704, 0.07 ) }
    dend_24 { pt3dadd( -149.362, 45.6455, -1.8798, 0.15 ) }
    dend_24 { pt3dadd( -150.242, 45.7771, -1.76419, 0.29 ) }
    dend_24 { pt3dadd( -151.939, 46.0415, -1.38367, 0.15 ) }
    dend_24 { pt3dadd( -152.532, 46.1299, -1.2012, 0.22 ) }
    dend_24 { pt3dadd( -154.631, 46.3937, -0.420463, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_24 { pt3dadd( -155.514, 46.4942, -0.075148, 0.81 ) }
    dend_24 { pt3dadd( -157.319, 46.6461, 0.677061, 0.22 ) }
    dend_24 { pt3dadd( -158.272, 46.7083, 1.07163, 0.29 ) }
    dend_24 { pt3dadd( -160.009, 46.782, 1.77905, 0.22 ) }
    dend_24 { pt3dadd( -161.337, 46.8503, 2.20052, 0.22 ) }
    dend_24 { pt3dadd( -162.059, 46.913, 2.30318, 0.66 ) }
    dend_24 { pt3dadd( -162.529, 46.977, 2.27724, 0.66 ) }
    dend_24 { pt3dadd( -163.693, 47.2346, 1.90066, 0.22 ) }
    dend_24 { pt3dadd( -164.744, 47.5882, 1.2644, 0.29 ) }
    dend_24 { pt3dadd( -165.737, 48.0951, 0.378734, 0.74 ) }
    dend_24 { pt3dadd( -167.025, 48.9623, -1.10875, 0.22 ) }
    dend_24 { pt3dadd( -167.744, 49.4925, -2.06105, 0.15 ) }
    dend_24 { pt3dadd( -168.097, 49.7667, -2.58478, 0.29 ) }
    dend_24 { pt3dadd( -168.529, 50.117, -3.29539, 0.74 ) }
    dend_24 { pt3dadd( -169.094, 50.5628, -4.24155, 0.22 ) }
    dend_24 { pt3dadd( -169.856, 51.0283, -5.33858, 0.22 ) }
    dend_24 { pt3dadd( -170.265, 51.2054, -5.77703, 0.52 ) }
    dend_24 { pt3dadd( -170.543, 51.3083, -6.05242, 0.88 ) }
    dend_24 { pt3dadd( -171.094, 51.4925, -6.5616, 0.29 ) }
    dend_24 { pt3dadd( -171.97, 51.6599, -7.02951, 0.22 ) }
    dend_24 { pt3dadd( -173.279, 51.828, -7.37305, 0.22 ) }
    dend_24 { pt3dadd( -174.105, 51.917, -7.45389, 0.22 ) }
    dend_24 { pt3dadd( -175.388, 52.0576, -7.47667, 0.22 ) }
    dend_24 { pt3dadd( -176.788, 52.1838, -7.40579, 0.15 ) }
    dend_24 { pt3dadd( -181.348, 52.3364, -6.6029, 0.15 ) }
    dend_24 { pt3dadd( -182.639, 52.2923, -6.24442, 0.15 ) }
    dend_24 { pt3dadd( -183.509, 52.2231, -5.93499, 0.15 ) }
    dend_24 { pt3dadd( -184.332, 52.1161, -5.57787, 0.15 ) }
    dend_24 { pt3dadd( -185.451, 51.936, -5.04557, 0.37 ) }
    dend_24 { pt3dadd( -188.295, 51.3885, -3.60999, 0.15 ) }
    dend_24 { pt3dadd( -190.186, 50.9713, -2.69267, 0.15 ) }
    dend_24 { pt3dadd( -191.589, 50.5986, -1.95727, 0.15 ) }
    dend_24 { pt3dadd( -193.545, 50.0313, -0.840741, 0.15 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 33/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -58.6416, 36.8057, 9.3114, 0.29 ) }
    dend_23 { pt3dadd( -59.7875, 36.3179, 11.0814, 0.29 ) }
    dend_23 { pt3dadd( -61.6879, 35.4374, 13.9493, 0.29 ) }
    dend_23 { pt3dadd( -63.3715, 34.6593, 16.3762, 0.29 ) }
    dend_23 { pt3dadd( -65.1335, 33.8897, 18.8019, 0.29 ) }
    dend_23 { pt3dadd( -66.5883, 33.3367, 20.6873, 0.29 ) }
    dend_23 { pt3dadd( -66.9735, 33.2093, 21.153, 0.29 ) }
    dend_23 { pt3dadd( -67.9604, 32.9347, 22.2296, 0.29 ) }
    dend_23 { pt3dadd( -68.5383, 32.8034, 22.757, 0.37 ) }
    dend_23 { pt3dadd( -70.0308, 32.5288, 23.7944, 0.37 ) }
    dend_23 { pt3dadd( -71.2982, 32.3229, 24.4283, 0.22 ) }
    dend_23 { pt3dadd( -72.8409, 32.085, 25.07, 0.22 ) }
    dend_23 { pt3dadd( -73.4389, 31.9769, 25.3199, 0.22 ) }
    dend_23 { pt3dadd( -73.9587, 31.8467, 25.5684, 0.22 ) }
    dend_23 { pt3dadd( -74.8931, 31.531, 26.1017, 0.22 ) }
    dend_23 { pt3dadd( -75.6293, 31.2278, 26.5554, 0.22 ) }
    dend_23 { pt3dadd( -76.0103, 31.0416, 26.8057, 0.22 ) }
    dend_23 { pt3dadd( -76.5116, 30.7852, 27.1664, 0.29 ) }
    dend_23 { pt3dadd( -77.7696, 30.0973, 28.0895, 0.29 ) }
    dend_23 { pt3dadd( -79.1979, 29.2996, 29.0989, 0.29 ) }
    dend_23 { pt3dadd( -80.263, 28.6903, 29.8043, 0.29 ) }
    dend_23 { pt3dadd( -80.9552, 28.2913, 30.2594, 0.15 ) }
    dend_23 { pt3dadd( -83.4849, 26.7837, 31.9317, 0.15 ) }
    dend_23 { pt3dadd( -86.107, 25.1323, 33.6611, 0.15 ) }
    dend_23 { pt3dadd( -88.4015, 23.5877, 35.1353, 0.15 ) }
    dend_23 { pt3dadd( -89.6619, 22.6914, 35.9317, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -40.3506, 40.8642, -44.0057, 1.18 ) }
    dend_13 { pt3dadd( -41.9332, 41.2811, -43.6578, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 61/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -40.3506, 40.8642, -44.0057, 0.29 ) }
    dend_12 { pt3dadd( -41.0159, 41.6302, -43.945, 0.29 ) }
    dend_12 { pt3dadd( -41.5769, 42.3223, -43.9925, 0.29 ) }
    dend_12 { pt3dadd( -42.0522, 42.9248, -44.083, 0.88 ) }
    dend_12 { pt3dadd( -42.6075, 43.6344, -44.2204, 0.44 ) }
    dend_12 { pt3dadd( -43.141, 44.3208, -44.3922, 0.44 ) }
    dend_12 { pt3dadd( -43.4717, 44.7385, -44.5109, 0.29 ) }
    dend_12 { pt3dadd( -44.115, 45.569, -44.8588, 0.29 ) }
    dend_12 { pt3dadd( -44.4271, 45.9585, -45.0508, 0.74 ) }
    dend_12 { pt3dadd( -44.6729, 46.2272, -45.1995, 0.96 ) }
    dend_12 { pt3dadd( -45.1924, 46.722, -45.4599, 0.96 ) }
    dend_12 { pt3dadd( -45.8751, 47.2907, -45.7101, 0.66 ) }
    dend_12 { pt3dadd( -46.9143, 48.0495, -45.9232, 0.37 ) }
    dend_12 { pt3dadd( -47.5324, 48.4669, -45.9445, 0.22 ) }
    dend_12 { pt3dadd( -48.4062, 49.0363, -45.8731, 0.29 ) }
    dend_12 { pt3dadd( -49.4151, 49.672, -45.6605, 0.29 ) }
    dend_12 { pt3dadd( -49.9872, 50.0145, -45.4583, 0.81 ) }
    dend_12 { pt3dadd( -50.9433, 50.5654, -45.0069, 1.03 ) }
    dend_12 { pt3dadd( -51.7899, 51.0608, -44.5267, 0.22 ) }
    dend_12 { pt3dadd( -52.2929, 51.3891, -44.2187, 0.29 ) }
    dend_12 { pt3dadd( -52.759, 51.7514, -43.9168, 0.44 ) }
    dend_12 { pt3dadd( -53.1378, 52.1063, -43.6915, 0.44 ) }
    dend_12 { pt3dadd( -53.6018, 52.6236, -43.4012, 0.44 ) }
    dend_12 { pt3dadd( -54.0496, 53.2666, -43.1454, 0.52 ) }
    dend_12 { pt3dadd( -54.3263, 53.7539, -43.0463, 0.52 ) }
    dend_12 { pt3dadd( -54.6585, 54.4531, -42.9992, 0.29 ) }
    dend_12 { pt3dadd( -54.8559, 54.9277, -43.0056, 0.37 ) }
    dend_12 { pt3dadd( -55.1233, 55.5862, -43.0449, 0.37 ) }
    dend_12 { pt3dadd( -55.6334, 56.7607, -43.1831, 0.81 ) }
    dend_12 { pt3dadd( -56.0251, 57.5942, -43.3319, 1.03 ) }
    dend_12 { pt3dadd( -56.3785, 58.2879, -43.4857, 0.74 ) }
    dend_12 { pt3dadd( -56.8157, 59.0869, -43.6866, 0.66 ) }
    dend_12 { pt3dadd( -57.2464, 59.8536, -43.8851, 0.37 ) }
    dend_12 { pt3dadd( -57.8053, 60.8386, -44.1405, 0.29 ) }
    dend_12 { pt3dadd( -58.1646, 61.4568, -44.2654, 0.29 ) }
    dend_12 { pt3dadd( -58.3527, 61.8201, -44.3507, 0.66 ) }
    dend_12 { pt3dadd( -58.5456, 62.2463, -44.4567, 1.18 ) }
    dend_12 { pt3dadd( -58.6886, 62.6307, -44.5473, 1.18 ) }
    dend_12 { pt3dadd( -58.9022, 63.2701, -44.6796, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -59.1121, 63.8592, -44.7789, 0.44 ) }
    dend_12 { pt3dadd( -59.4446, 64.7101, -44.9279, 0.29 ) }
    dend_12 { pt3dadd( -59.6179, 65.1319, -45.0053, 0.29 ) }
    dend_12 { pt3dadd( -59.804, 65.5699, -45.0845, 0.29 ) }
    dend_12 { pt3dadd( -60.1316, 66.3311, -45.2448, 0.29 ) }
    dend_12 { pt3dadd( -60.4226, 66.9801, -45.3903, 0.22 ) }
    dend_12 { pt3dadd( -60.7887, 67.7488, -45.5697, 0.37 ) }
    dend_12 { pt3dadd( -61.1381, 68.4432, -45.7163, 0.22 ) }
    dend_12 { pt3dadd( -61.2927, 68.7568, -45.783, 0.22 ) }
    dend_12 { pt3dadd( -61.5935, 69.3983, -45.9085, 0.44 ) }
    dend_12 { pt3dadd( -61.8054, 69.8758, -45.9874, 0.96 ) }
    dend_12 { pt3dadd( -61.9979, 70.283, -46.0427, 1.18 ) }
    dend_12 { pt3dadd( -62.3722, 70.9713, -46.1144, 1.18 ) }
    dend_12 { pt3dadd( -62.6391, 71.4219, -46.178, 1.25 ) }
    dend_12 { pt3dadd( -62.9544, 71.9343, -46.2819, 0.37 ) }
    dend_12 { pt3dadd( -63.2338, 72.3759, -46.3862, 0.22 ) }
    dend_12 { pt3dadd( -63.5582, 72.9011, -46.5451, 0.29 ) }
    dend_12 { pt3dadd( -63.7561, 73.265, -46.6712, 0.29 ) }
    dend_12 { pt3dadd( -64.076, 73.9713, -46.9536, 0.22 ) }
    dend_12 { pt3dadd( -64.317, 74.6352, -47.2319, 0.22 ) }
    dend_12 { pt3dadd( -64.3933, 74.8746, -47.3322, 0.44 ) }
    dend_12 { pt3dadd( -64.5782, 75.5329, -47.6244, 0.81 ) }
    dend_12 { pt3dadd( -64.8239, 76.539, -48.0986, 0.29 ) }
    dend_12 { pt3dadd( -64.9995, 77.2943, -48.4893, 0.52 ) }
    dend_12 { pt3dadd( -65.1525, 77.8819, -48.8199, 1.03 ) }
    dend_12 { pt3dadd( -65.3168, 78.4132, -49.1546, 1.03 ) }
    dend_12 { pt3dadd( -65.6375, 79.2699, -49.7568, 0.66 ) }
    dend_12 { pt3dadd( -65.9616, 80.0138, -50.3317, 0.59 ) }
    dend_12 { pt3dadd( -66.3217, 80.7463, -50.9314, 0.88 ) }
    dend_12 { pt3dadd( -66.7657, 81.6104, -51.6251, 0.22 ) }
    dend_12 { pt3dadd( -67.1238, 82.2961, -52.1547, 0.59 ) }
    dend_12 { pt3dadd( -67.5527, 83.1396, -52.7749, 0.22 ) }
    dend_12 { pt3dadd( -67.7747, 83.5944, -53.0777, 0.44 ) }
    dend_12 { pt3dadd( -68.017, 84.1784, -53.4383, 0.74 ) }
    dend_12 { pt3dadd( -68.1547, 84.645, -53.7114, 0.88 ) }
    dend_12 { pt3dadd( -68.2747, 85.274, -54.0765, 0.37 ) }
    dend_12 { pt3dadd( -68.3548, 85.862, -54.4371, 0.37 ) }
    dend_12 { pt3dadd( -68.4374, 86.5619, -54.8751, 0.37 ) }
    dend_12 { pt3dadd( -68.5611, 87.4151, -55.4061, 0.29 ) }
    dend_12 { pt3dadd( -68.6605, 88.1136, -55.8569, 0.52 ) }
    dend_12 { pt3dadd( -68.7045, 88.4337, -56.0752, 0.52 ) }
    dend_12 { pt3dadd( -68.8122, 89.224, -56.6163, 0.52 ) }
    dend_12 { pt3dadd( -68.9361, 89.8596, -57.0287, 0.37 ) }
    dend_12 { pt3dadd( -69.062, 90.2314, -57.2567, 0.37 ) }
    dend_12 { pt3dadd( -72.1557, 96.3809, -57.7897, 0.37 ) }
    dend_12 { pt3dadd( -74.6429, 102.746, -56.6909, 0.37 ) }
    dend_12 { pt3dadd( -76.5684, 109.235, -55.2226, 0.37 ) }
    dend_12 { pt3dadd( -78.3756, 115.794, -53.9153, 0.37 ) }
    dend_12 { pt3dadd( -78.9723, 122.655, -53.1506, 0.37 ) }
    dend_12 { pt3dadd( -79.2978, 129.27, -51.1293, 0.37 ) }
    dend_12 { pt3dadd( -79.0309, 135.996, -49.508, 0.37 ) }
    dend_12 { pt3dadd( -78.7432, 142.628, -47.5497, 0.37 ) }
    dend_12 { pt3dadd( -79.1327, 149.408, -46.1745, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -8.43958, 82.489, -43.8149, 0.52 ) }
    dend_8 { pt3dadd( -9.1422, 82.2941, -45.5507, 0.52 ) }
    dend_8 { pt3dadd( -9.76355, 82.0049, -47.276, 0.52 ) }
    dend_8 { pt3dadd( -10.0117, 81.7775, -48.4686, 0.66 ) }
    dend_8 { pt3dadd( -10.0648, 81.5211, -49.5636, 0.44 ) }
    dend_8 { pt3dadd( -9.98674, 81.269, -50.6265, 0.37 ) }
    dend_8 { pt3dadd( -9.73046, 80.8634, -52.5283, 0.37 ) }
    dend_8 { pt3dadd( -9.63072, 80.7673, -53.017, 0.37 ) }
    dend_8 { pt3dadd( -9.04826, 80.3425, -55.1397, 0.37 ) }
    dend_8 { pt3dadd( -8.52316, 79.9798, -56.8425, 0.52 ) }
    dend_8 { pt3dadd( -8.15713, 79.711, -58.0695, 0.52 ) }
    dend_8 { pt3dadd( -8.00683, 79.5641, -58.6832, 0.52 ) }
    dend_8 { pt3dadd( -7.9019, 79.2001, -59.8563, 0.52 ) }
    dend_8 { pt3dadd( -8.08531, 78.7573, -60.9611, 0.66 ) }
    dend_8 { pt3dadd( -8.64461, 78.2438, -61.5624, 0.52 ) }
    dend_8 { pt3dadd( -9.50404, 77.5604, -62.1998, 0.44 ) }
    dend_8 { pt3dadd( -10.1705, 77.0336, -62.5904, 0.44 ) }
    dend_8 { pt3dadd( -10.7109, 76.5854, -62.8531, 0.81 ) }
    dend_8 { pt3dadd( -11.648, 75.8031, -63.1524, 0.96 ) }
    dend_8 { pt3dadd( -13.0449, 74.709, -63.4342, 0.22 ) }
    dend_8 { pt3dadd( -16.2259, 69.2383, -71.3116, 0.22 ) }
    dend_8 { pt3dadd( -21.6051, 63.2981, -77.4727, 0.22 ) }
    dend_8 { pt3dadd( -25.9817, 56.4119, -83.4906, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.43958, 82.489, -43.8149, 0.59 ) }
    dend_7 { pt3dadd( -8.31826, 83.7723, -43.2067, 0.59 ) }
    dend_7 { pt3dadd( -8.23828, 85.2504, -42.6096, 0.59 ) }
    dend_7 { pt3dadd( -8.18342, 86.4802, -42.2895, 0.66 ) }
    dend_7 { pt3dadd( -8.17282, 87.429, -42.1473, 0.81 ) }
    dend_7 { pt3dadd( -8.2001, 88.8281, -42.1017, 0.52 ) }
    dend_7 { pt3dadd( -8.28241, 90.5332, -42.2315, 0.52 ) }
    dend_7 { pt3dadd( -8.36791, 91.6056, -42.5471, 0.66 ) }
    dend_7 { pt3dadd( -8.48082, 93.2491, -43.4263, 1.03 ) }
    dend_7 { pt3dadd( -8.53352, 94.8399, -44.6815, 0.37 ) }
    dend_7 { pt3dadd( -8.48343, 96.0226, -45.9366, 0.37 ) }
    dend_7 { pt3dadd( -8.36322, 96.9115, -47.1109, 0.59 ) }
    dend_7 { pt3dadd( -8.10054, 98.0844, -48.8598, 0.74 ) }
    dend_7 { pt3dadd( -7.77088, 99.0643, -50.4302, 0.74 ) }
    dend_7 { pt3dadd( -7.28049, 100.137, -52.2314, 0.37 ) }
    dend_7 { pt3dadd( -6.8228, 100.902, -53.5607, 0.37 ) }
    dend_7 { pt3dadd( -6.48431, 101.375, -54.3303, 0.37 ) }
    dend_7 { pt3dadd( -6.10767, 101.814, -55.0512, 0.44 ) }
    dend_7 { pt3dadd( -5.47102, 102.547, -56.1566, 0.44 ) }
    dend_7 { pt3dadd( -5.10503, 102.975, -56.7592, 0.74 ) }
    dend_7 { pt3dadd( -4.43613, 103.776, -57.8496, 0.74 ) }
    dend_7 { pt3dadd( -3.61591, 104.71, -59.1403, 0.15 ) }
    dend_7 { pt3dadd( -2.7952, 105.52, -60.4267, 0.15 ) }
    dend_7 { pt3dadd( -0.609996, 114.772, -64.6565, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_7 { pt3dadd( 1.01616, 124.378, -68.3551, 0.15 ) }
    dend_7 { pt3dadd( 1.51396, 132.981, -74.1396, 0.15 ) }
    dend_7 { pt3dadd( 1.57707, 140.89, -80.8202, 0.15 ) }
    dend_7 { pt3dadd( 1.26357, 149.605, -86.4595, 0.15 ) }
    dend_7 { pt3dadd( 1.53533, 158.645, -91.5895, 0.15 ) }
    dend_7 { pt3dadd( 3.24372, 167.812, -96.1973, 0.15 ) }
    dend_7 { pt3dadd( 5.1839, 177.409, -99.7651, 0.15 ) }
    dend_7 { pt3dadd( 6.10402, 187.294, -102.979, 0.15 ) }
    dend_7 { pt3dadd( 9.01746, 197.199, -104.496, 0.15 ) }
    dend_7 { pt3dadd( 12.1962, 207.099, -105.379, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 10/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 49.9371, 191.706, -86.9008, 0.29 ) }
    dend_42 { pt3dadd( 49.0739, 192.431, -88.4248, 0.29 ) }
    dend_42 { pt3dadd( 47.852, 193.208, -90.4826, 0.29 ) }
    dend_42 { pt3dadd( 47.0018, 193.658, -91.7866, 0.29 ) }
    dend_42 { pt3dadd( 46.2916, 194.019, -92.7772, 0.29 ) }
    dend_42 { pt3dadd( 45.7994, 194.274, -93.4395, 0.59 ) }
    dend_42 { pt3dadd( 44.4462, 195.036, -95.2839, 0.22 ) }
    dend_42 { pt3dadd( 43.5686, 195.634, -96.5474, 0.22 ) }
    dend_42 { pt3dadd( 43.1472, 195.996, -97.2083, 0.22 ) }
    dend_42 { pt3dadd( 42.6815, 196.488, -98.0618, 0.15 ) }
    dend_42 { pt3dadd( 42.7023, 196.944, -98.6796, 0.15 ) }
    dend_42 { pt3dadd( 43.1247, 197.52, -99.2578, 0.66 ) }
    dend_42 { pt3dadd( 44.073, 198.467, -100.055, 0.22 ) }
    dend_42 { pt3dadd( 44.5767, 198.929, -100.428, 0.22 ) }
    dend_42 { pt3dadd( 45.0626, 199.301, -100.766, 0.44 ) }
    dend_42 { pt3dadd( 46.4728, 200.133, -101.664, 0.29 ) }
    dend_42 { pt3dadd( 46.003, 205.635, -111.982, 0.29 ) }
    dend_42 { pt3dadd( 44.479, 211.576, -121.956, 0.29 ) }
    dend_42 { pt3dadd( 42.0514, 217.879, -131.528, 0.29 ) }
    dend_42 { pt3dadd( 39.6746, 225.551, -140.109, 0.29 ) }
    dend_42 { pt3dadd( 37.5803, 232.746, -149.148, 0.29 ) }
    dend_42 { pt3dadd( 32.872, 238.718, -158.032, 0.29 ) }
    dend_42 { pt3dadd( 26.7336, 243.714, -166.6, 0.29 ) }
    dend_42 { pt3dadd( 20.2888, 249.814, -174.204, 0.29 ) }
    dend_42 { pt3dadd( 15.1863, 255.729, -182.901, 0.29 ) }
    dend_42 { pt3dadd( 10.4094, 262.848, -190.896, 0.29 ) }
    dend_42 { pt3dadd( 7.02003, 270.628, -199.023, 0.29 ) }
    dend_42 { pt3dadd( 4.78847, 277.138, -208.512, 0.29 ) }
    dend_42 { pt3dadd( 4.87172, 282.494, -218.915, 0.29 ) }
    dend_42 { pt3dadd( 4.23724, 285.742, -230.087, 0.29 ) }
    dend_42 { pt3dadd( 4.20558, 287.427, -241.592, 0.29 ) }
    dend_42 { pt3dadd( 3.26571, 287.052, -253.156, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 49.9371, 191.706, -86.9008, 0.74 ) }
    dend_41 { pt3dadd( 49.6482, 192.367, -86.6327, 0.74 ) }
    dend_41 { pt3dadd( 48.177, 195.311, -85.511, 0.29 ) }
    dend_41 { pt3dadd( 47.6226, 196.284, -85.1467, 0.29 ) }
    dend_41 { pt3dadd( 46.693, 197.746, -84.6097, 0.52 ) }
    dend_41 { pt3dadd( 46.018, 198.706, -84.2756, 0.29 ) }
    dend_41 { pt3dadd( 45.0907, 199.906, -83.9466, 0.37 ) }
    dend_41 { pt3dadd( 44.2418, 200.867, -83.7808, 0.59 ) }
    dend_41 { pt3dadd( 43.5641, 201.548, -83.7058, 0.44 ) }
    dend_41 { pt3dadd( 42.8108, 202.344, -83.5935, 0.88 ) }
    dend_41 { pt3dadd( 41.4785, 203.962, -83.2826, 0.37 ) }
    dend_41 { pt3dadd( 40.2532, 205.749, -82.832, 0.66 ) }
    dend_41 { pt3dadd( 39.6085, 206.933, -82.4988, 0.29 ) }
    dend_41 { pt3dadd( 38.9822, 208.427, -82.0752, 0.22 ) }
    dend_41 { pt3dadd( 38.3997, 210.258, -81.5687, 0.74 ) }
    dend_41 { pt3dadd( 37.9106, 212.356, -80.9999, 0.29 ) }
    dend_41 { pt3dadd( 37.7129, 213.646, -80.665, 0.22 ) }
    dend_41 { pt3dadd( 37.5977, 214.704, -80.4068, 0.88 ) }
    dend_41 { pt3dadd( 37.4579, 216.045, -80.1901, 0.88 ) }
    dend_41 { pt3dadd( 37.3361, 217.108, -80.1372, 0.22 ) }
    dend_41 { pt3dadd( 37.1984, 218.186, -80.1877, 0.22 ) }
    dend_41 { pt3dadd( 37.0498, 219.432, -80.3253, 0.15 ) }
    dend_41 { pt3dadd( 36.9857, 220.18, -80.4155, 0.66 ) }
    dend_41 { pt3dadd( 36.9485, 220.968, -80.5197, 0.22 ) }
    dend_41 { pt3dadd( 36.9207, 222.139, -80.6872, 0.15 ) }
    dend_41 { pt3dadd( 36.9328, 222.743, -80.7924, 0.15 ) }
    dend_41 { pt3dadd( 36.9923, 223.686, -81.0417, 0.44 ) }
    dend_41 { pt3dadd( 37.1232, 224.939, -81.514, 0.44 ) }
    dend_41 { pt3dadd( 37.2574, 226.284, -82.2378, 0.22 ) }
    dend_41 { pt3dadd( 37.3124, 226.996, -82.768, 0.22 ) }
    dend_41 { pt3dadd( 37.3521, 227.873, -83.6301, 0.52 ) }
    dend_41 { pt3dadd( 37.3514, 228.901, -84.8993, 0.52 ) }
    dend_41 { pt3dadd( 37.3302, 229.522, -85.8367, 0.22 ) }
    dend_41 { pt3dadd( 37.2934, 230.585, -87.6216, 0.22 ) }
    dend_41 { pt3dadd( 37.2579, 231.385, -89.0493, 0.22 ) }
    dend_41 { pt3dadd( 37.214, 231.993, -90.169, 0.22 ) }
    dend_41 { pt3dadd( 37.1349, 232.706, -91.4728, 0.22 ) }
    dend_41 { pt3dadd( 37.0339, 233.773, -93.3293, 0.22 ) }
    dend_41 { pt3dadd( 36.9878, 234.556, -94.7051, 0.66 ) }
    dend_41 { pt3dadd( 37.019, 235.056, -95.5514, 0.37 ) }
    dend_41 { pt3dadd( 35.4248, 246.336, -99.3243, 0.37 ) }
    dend_41 { pt3dadd( 35.2206, 257.845, -102.764, 0.37 ) }
    dend_41 { pt3dadd( 33.5024, 269.692, -103.645, 0.37 ) }
    dend_41 { pt3dadd( 32.9141, 281.685, -103.682, 0.37 ) }
    dend_41 { pt3dadd( 31.3864, 293.5, -105.185, 0.37 ) }
    dend_41 { pt3dadd( 31.4392, 305.193, -107.963, 0.37 ) }
    dend_41 { pt3dadd( 33.5538, 316.752, -110.487, 0.37 ) }
    dend_41 { pt3dadd( 36.4314, 328.373, -111.477, 0.37 ) }
    dend_41 { pt3dadd( 41.4884, 339.234, -111.524, 0.37 ) }
    dend_41 { pt3dadd( 47.7783, 349.243, -113.348, 0.37 ) }
    dend_41 { pt3dadd( 54.1585, 358.601, -117.155, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 93/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -41.9332, 41.2811, -43.6578, 0.52 ) }
    dend_19 { pt3dadd( -43.3217, 41.9319, -44.1539, 0.52 ) }
    dend_19 { pt3dadd( -43.8753, 42.1987, -44.3691, 0.66 ) }
    dend_19 { pt3dadd( -44.7524, 42.6115, -44.7077, 0.88 ) }
    dend_19 { pt3dadd( -46.0719, 43.2088, -45.2051, 0.74 ) }
    dend_19 { pt3dadd( -47.2592, 43.705, -45.6232, 0.52 ) }
    dend_19 { pt3dadd( -48.2597, 44.0948, -45.9576, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( -49.7643, 44.6318, -46.4865, 0.74 ) }
    dend_19 { pt3dadd( -50.6101, 44.9055, -46.7704, 0.74 ) }
    dend_19 { pt3dadd( -51.8207, 45.2408, -47.1257, 0.66 ) }
    dend_19 { pt3dadd( -53.1723, 45.527, -47.4769, 0.37 ) }
    dend_19 { pt3dadd( -53.784, 45.6196, -47.6286, 0.37 ) }
    dend_19 { pt3dadd( -54.4044, 45.6781, -47.7991, 0.88 ) }
    dend_19 { pt3dadd( -55.3767, 45.7227, -48.1138, 0.88 ) }
    dend_19 { pt3dadd( -56.1316, 45.7477, -48.4079, 0.59 ) }
    dend_19 { pt3dadd( -56.8854, 45.7543, -48.7519, 0.59 ) }
    dend_19 { pt3dadd( -57.653, 45.755, -49.1896, 0.59 ) }
    dend_19 { pt3dadd( -58.2881, 45.7381, -49.6596, 0.59 ) }
    dend_19 { pt3dadd( -58.9664, 45.7077, -50.2332, 0.59 ) }
    dend_19 { pt3dadd( -59.4611, 45.6721, -50.6665, 0.81 ) }
    dend_19 { pt3dadd( -60.1013, 45.6152, -51.2088, 1.03 ) }
    dend_19 { pt3dadd( -61.2632, 45.4535, -52.1124, 0.52 ) }
    dend_19 { pt3dadd( -62.8402, 45.1661, -53.2026, 0.59 ) }
    dend_19 { pt3dadd( -63.8742, 44.9038, -53.8478, 0.59 ) }
    dend_19 { pt3dadd( -64.7505, 44.6065, -54.3182, 0.59 ) }
    dend_19 { pt3dadd( -65.9583, 44.0703, -54.868, 0.59 ) }
    dend_19 { pt3dadd( -66.8061, 43.5869, -55.1507, 0.59 ) }
    dend_19 { pt3dadd( -67.8132, 42.8784, -55.3274, 0.52 ) }
    dend_19 { pt3dadd( -68.4883, 42.3252, -55.3637, 0.59 ) }
    dend_19 { pt3dadd( -69.2227, 41.6361, -55.383, 0.52 ) }
    dend_19 { pt3dadd( -69.9071, 40.9563, -55.4062, 0.37 ) }
    dend_19 { pt3dadd( -70.8124, 40.0407, -55.4677, 0.66 ) }
    dend_19 { pt3dadd( -71.3928, 39.4882, -55.5289, 0.66 ) }
    dend_19 { pt3dadd( -71.968, 39.0059, -55.6229, 0.88 ) }
    dend_19 { pt3dadd( -72.6893, 38.4936, -55.7691, 0.88 ) }
    dend_19 { pt3dadd( -73.9764, 37.6756, -56.1214, 0.52 ) }
    dend_19 { pt3dadd( -74.7179, 37.2476, -56.4058, 0.52 ) }
    dend_19 { pt3dadd( -75.2088, 37.0004, -56.6621, 0.66 ) }
    dend_19 { pt3dadd( -76.4277, 36.48, -57.4772, 0.44 ) }
    dend_19 { pt3dadd( -76.9972, 36.296, -57.9417, 0.59 ) }
    dend_19 { pt3dadd( -77.7522, 36.1436, -58.6435, 0.66 ) }
    dend_19 { pt3dadd( -78.9813, 36.0744, -59.9064, 0.66 ) }
    dend_19 { pt3dadd( -79.797, 36.117, -60.8033, 0.88 ) }
    dend_19 { pt3dadd( -80.4275, 36.2103, -61.5198, 0.88 ) }
    dend_19 { pt3dadd( -81.0659, 36.348, -62.2472, 0.81 ) }
    dend_19 { pt3dadd( -81.6637, 36.4993, -62.8689, 1.11 ) }
    dend_19 { pt3dadd( -82.5294, 36.7313, -63.6096, 0.52 ) }
    dend_19 { pt3dadd( -83.6883, 37.0482, -64.4539, 0.52 ) }
    dend_19 { pt3dadd( -84.9958, 37.4051, -65.2811, 0.29 ) }
    dend_19 { pt3dadd( -85.4121, 37.5163, -65.5134, 0.29 ) }
    dend_19 { pt3dadd( -86.3365, 37.7387, -66.0147, 0.59 ) }
    dend_19 { pt3dadd( -87.5332, 37.9686, -66.7559, 0.29 ) }
    dend_19 { pt3dadd( -89.0665, 38.2101, -67.9236, 0.37 ) }
    dend_19 { pt3dadd( -90.0405, 38.3242, -68.7644, 0.37 ) }
    dend_19 { pt3dadd( -90.765, 38.3848, -69.4561, 0.37 ) }
    dend_19 { pt3dadd( -92.0003, 38.4675, -70.7496, 0.44 ) }
    dend_19 { pt3dadd( -93.5236, 38.5206, -72.5645, 0.96 ) }
    dend_19 { pt3dadd( -94.9053, 38.5011, -74.4733, 0.44 ) }
    dend_19 { pt3dadd( -95.4455, 38.4577, -75.3263, 0.52 ) }
    dend_19 { pt3dadd( -96.0537, 38.3961, -76.4641, 0.52 ) }
    dend_19 { pt3dadd( -103.777, 37.4077, -82.0698, 0.52 ) }
    dend_19 { pt3dadd( -111.868, 37.0097, -87.2044, 0.52 ) }
    dend_19 { pt3dadd( -120.406, 35.5062, -91.3265, 0.52 ) }
    dend_19 { pt3dadd( -129.393, 32.7689, -93.3732, 0.52 ) }
    dend_19 { pt3dadd( -138.288, 29.1429, -94.0859, 0.52 ) }
    dend_19 { pt3dadd( -147.567, 27.0928, -95.4902, 0.52 ) }
    dend_19 { pt3dadd( -156.148, 23.3068, -97.6928, 0.52 ) }
    dend_19 { pt3dadd( -164.822, 20.507, -100.757, 0.52 ) }
    dend_19 { pt3dadd( -173.191, 18.5076, -105.022, 0.52 ) }
    dend_19 { pt3dadd( -180.898, 17.0986, -110.565, 0.52 ) }
    dend_19 { pt3dadd( -188.503, 15.0816, -116.073, 0.52 ) }
    dend_19 { pt3dadd( -195.577, 13.3766, -122.335, 0.52 ) }
    dend_19 { pt3dadd( -202.955, 11.5715, -128.208, 0.52 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 66/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -41.9332, 41.2811, -43.6578, 0.29 ) }
    dend_14 { pt3dadd( -42.9509, 41.5186, -45.0962, 0.29 ) }
    dend_14 { pt3dadd( -44.1605, 41.7351, -46.711, 0.44 ) }
    dend_14 { pt3dadd( -44.6808, 41.8146, -47.3377, 0.44 ) }
    dend_14 { pt3dadd( -45.5409, 41.9419, -48.2632, 0.29 ) }
    dend_14 { pt3dadd( -46.4578, 42.0831, -49.1532, 0.29 ) }
    dend_14 { pt3dadd( -47.3951, 42.2319, -49.9877, 0.59 ) }
    dend_14 { pt3dadd( -48.1043, 42.3563, -50.4475, 0.81 ) }
    dend_14 { pt3dadd( -49.0263, 42.5008, -50.9369, 0.59 ) }
    dend_14 { pt3dadd( -49.9025, 42.6179, -51.4144, 0.44 ) }
    dend_14 { pt3dadd( -50.6184, 42.7006, -51.8462, 0.74 ) }
    dend_14 { pt3dadd( -51.1527, 42.7753, -52.2108, 1.03 ) }
    dend_14 { pt3dadd( -52.1725, 42.9475, -53.033, 0.29 ) }
    dend_14 { pt3dadd( -53.2514, 43.112, -54.1022, 0.29 ) }
    dend_14 { pt3dadd( -54.3079, 43.1829, -55.3905, 0.96 ) }
    dend_14 { pt3dadd( -55.3142, 43.1072, -56.8663, 0.66 ) }
    dend_14 { pt3dadd( -55.9846, 42.9233, -58.0161, 0.74 ) }
    dend_14 { pt3dadd( -56.579, 42.7107, -59.1515, 0.81 ) }
    dend_14 { pt3dadd( -57.0891, 42.4593, -60.274, 0.52 ) }
    dend_14 { pt3dadd( -57.7127, 42.0237, -61.7464, 0.52 ) }
    dend_14 { pt3dadd( -58.1751, 41.5094, -62.9732, 0.44 ) }
    dend_14 { pt3dadd( -58.5133, 40.9137, -63.954, 0.59 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 88/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -202.955, 11.5715, -128.208, 0.66 ) }
    dend_21 { pt3dadd( -212.414, 4.67838, -129.478, 0.66 ) }
    dend_21 { pt3dadd( -220.937, -3.45768, -130.31, 0.66 ) }
    dend_21 { pt3dadd( -229.274, -11.8036, -131.038, 0.66 ) }
    dend_21 { pt3dadd( -238.503, -19.1416, -130.53, 0.66 ) }
    dend_21 { pt3dadd( -247.045, -27.2067, -129.132, 0.66 ) }
    dend_21 { pt3dadd( -255.204, -35.7716, -128.682, 0.66 ) }
    dend_21 { pt3dadd( -262.693, -44.8986, -129.577, 0.66 ) }
    dend_21 { pt3dadd( -269.665, -54.473, -130.13, 0.66 ) }
    dend_21 { pt3dadd( -276.547, -64.1391, -130.098, 0.66 ) }
    dend_21 { pt3dadd( -282.901, -74.1518, -129.318, 0.66 ) }
    dend_21 { pt3dadd( -288.73, -84.2375, -126.883, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_21 { pt3dadd( -294.069, -94.5868, -124.395, 0.66 ) }
    dend_21 { pt3dadd( -301.5, -103.736, -123.046, 0.66 ) }
    dend_21 { pt3dadd( -308.471, -113.279, -121.905, 0.66 ) }
    dend_21 { pt3dadd( -315.601, -122.672, -123.029, 0.66 ) }
    dend_21 { pt3dadd( -323.072, -131.762, -124.298, 0.66 ) }
    dend_21 { pt3dadd( -330.708, -139.827, -128.213, 0.66 ) }
    dend_21 { pt3dadd( -337.516, -147.945, -133.323, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 7/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -202.955, 11.5715, -128.208, 0.15 ) }
    dend_20 { pt3dadd( -213.262, 17.2156, -135.179, 0.66 ) }
    dend_20 { pt3dadd( -223.018, 24.9424, -140.928, 0.66 ) }
    dend_20 { pt3dadd( -233.026, 32.5225, -146.424, 0.66 ) }
    dend_20 { pt3dadd( -242.345, 41.5255, -151.008, 0.66 ) }
    dend_20 { pt3dadd( -251.641, 50.0904, -156.374, 0.66 ) }
    dend_20 { pt3dadd( -259.004, 59.4215, -163.305, 0.66 ) }
    dend_20 { pt3dadd( -266.614, 68.0155, -170.851, 0.66 ) }
    dend_20 { pt3dadd( -273.53, 77.6045, -177.908, 0.66 ) }
    dend_20 { pt3dadd( -281.909, 85.1176, -185.732, 0.66 ) }
    dend_20 { pt3dadd( -289.296, 91.7454, -195.159, 0.66 ) }
    dend_20 { pt3dadd( -294.559, 99.1439, -205.431, 0.66 ) }
    dend_20 { pt3dadd( -301.587, 104.556, -215.825, 0.66 ) }
    dend_20 { pt3dadd( -306.711, 111.259, -226.61, 0.66 ) }
    dend_20 { pt3dadd( -310.558, 119.679, -236.764, 0.66 ) }
    dend_20 { pt3dadd( -312.466, 128.907, -246.803, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -58.5133, 40.9137, -63.954, 0.66 ) }
    dend_16 { pt3dadd( -58.1113, 40.0839, -65.0183, 0.66 ) }
    dend_16 { pt3dadd( -57.7651, 39.5065, -65.966, 0.59 ) }
    dend_16 { pt3dadd( -57.5435, 39.144, -66.7442, 0.29 ) }
    dend_16 { pt3dadd( -57.3138, 38.6576, -67.9522, 0.29 ) }
    dend_16 { pt3dadd( -57.2414, 38.488, -68.4918, 0.44 ) }
    dend_16 { pt3dadd( -57.1074, 38.1545, -70.0304, 0.59 ) }
    dend_16 { pt3dadd( -57.0647, 37.9768, -71.2007, 0.59 ) }
    dend_16 { pt3dadd( -57.0522, 37.8761, -72.5484, 0.59 ) }
    dend_16 { pt3dadd( -57.0628, 37.8596, -73.5562, 0.66 ) }
    dend_16 { pt3dadd( -57.1184, 37.8997, -75.147, 0.66 ) }
    dend_16 { pt3dadd( -57.2358, 38.0414, -77.1346, 0.22 ) }
    dend_16 { pt3dadd( -55.9609, 36.9553, -86.7394, 0.22 ) }
    dend_16 { pt3dadd( -54.9138, 35.7851, -96.3621, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 37/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -58.5133, 40.9137, -63.954, 0.15 ) }
    dend_15 { pt3dadd( -59.3673, 41.0648, -64.0235, 0.15 ) }
    dend_15 { pt3dadd( -60.2164, 41.1445, -64.0963, 0.22 ) }
    dend_15 { pt3dadd( -61.0978, 41.1039, -64.1978, 0.37 ) }
    dend_15 { pt3dadd( -61.9396, 40.9858, -64.3267, 0.52 ) }
    dend_15 { pt3dadd( -63.074, 40.7166, -64.5074, 0.22 ) }
    dend_15 { pt3dadd( -63.7417, 40.5224, -64.6073, 0.22 ) }
    dend_15 { pt3dadd( -64.2436, 40.3434, -64.6443, 0.22 ) }
    dend_15 { pt3dadd( -65.3557, 39.8656, -64.6705, 0.29 ) }
    dend_15 { pt3dadd( -65.997, 39.5548, -64.6671, 0.22 ) }
    dend_15 { pt3dadd( -66.9393, 39.1136, -64.717, 0.29 ) }
    dend_15 { pt3dadd( -67.8968, 38.7305, -64.8327, 0.15 ) }
    dend_15 { pt3dadd( -69.1084, 38.3486, -65.0158, 0.15 ) }
    dend_15 { pt3dadd( -69.5813, 38.2425, -65.1044, 0.44 ) }
    dend_15 { pt3dadd( -70.1695, 38.1577, -65.2421, 0.44 ) }
    dend_15 { pt3dadd( -71.8139, 38.0159, -65.7193, 0.22 ) }
    dend_15 { pt3dadd( -72.6038, 37.9929, -65.9575, 0.22 ) }
    dend_15 { pt3dadd( -73.2163, 38.0056, -66.1325, 0.52 ) }
    dend_15 { pt3dadd( -73.9446, 38.0686, -66.357, 0.52 ) }
    dend_15 { pt3dadd( -74.8039, 38.1689, -66.5844, 0.22 ) }
    dend_15 { pt3dadd( -75.4746, 38.2722, -66.7058, 0.44 ) }
    dend_15 { pt3dadd( -76.7552, 38.4988, -66.7398, 0.44 ) }
    dend_15 { pt3dadd( -77.6463, 38.7188, -66.7165, 0.74 ) }
    dend_15 { pt3dadd( -78.6779, 39.0507, -66.6146, 0.88 ) }
    dend_15 { pt3dadd( -87.8435, 37.6317, -66.8781, 0.88 ) }
    dend_15 { pt3dadd( -96.8135, 35.2598, -67.1668, 0.88 ) }
    dend_15 { pt3dadd( -105.84, 34.1468, -69.0029, 0.88 ) }
    dend_15 { pt3dadd( -114.508, 34.2687, -72.3122, 0.88 ) }
    dend_15 { pt3dadd( -122.738, 34.5508, -76.5883, 0.88 ) }
    dend_15 { pt3dadd( -131.129, 35.7295, -80.383, 0.88 ) }
    dend_15 { pt3dadd( -138.685, 38.0919, -85.2523, 0.88 ) }
    dend_15 { pt3dadd( -145.378, 39.1179, -91.5991, 0.88 ) }
    dend_15 { pt3dadd( -152.283, 41.257, -97.4326, 0.88 ) }
    dend_15 { pt3dadd( -160.554, 41.4333, -101.635, 0.88 ) }
    dend_15 { pt3dadd( -169.232, 40.0196, -104.603, 0.88 ) }
    dend_15 { pt3dadd( -176.745, 37.3308, -109.366, 0.88 ) }
    dend_15 { pt3dadd( -183.411, 34.8796, -115.361, 0.88 ) }
    dend_15 { pt3dadd( -191.213, 33.7766, -120.264, 0.88 ) }
    dend_15 { pt3dadd( -198.953, 32.9925, -125.321, 0.88 ) }
    dend_15 { pt3dadd( -207.324, 32.1681, -129.237, 0.88 ) }
    dend_15 { pt3dadd( -216.108, 31.3437, -132.107, 0.88 ) }
    dend_15 { pt3dadd( -224.736, 28.682, -134.285, 0.88 ) }
    dend_15 { pt3dadd( -233.797, 26.8151, -135.012, 0.88 ) }
    dend_15 { pt3dadd( -242.953, 26.0825, -133.699, 0.88 ) }
    dend_15 { pt3dadd( -251.741, 24.023, -131.545, 0.88 ) }
    dend_15 { pt3dadd( -259.698, 20.3383, -128.472, 0.88 ) }
    dend_15 { pt3dadd( -266.967, 15.793, -124.857, 0.88 ) }
    dend_15 { pt3dadd( -274.352, 10.3518, -123.176, 0.88 ) }
    dend_15 { pt3dadd( -281.004, 4.14362, -121.049, 0.88 ) }
    dend_15 { pt3dadd( -286.235, -3.09724, -118.202, 0.88 ) }
    dend_15 { pt3dadd( -290.265, -11.1822, -115.57, 0.88 ) }
    dend_15 { pt3dadd( -292.721, -19.8724, -112.825, 0.88 ) }
    dend_15 { pt3dadd( -293.466, -29.2086, -111.35, 0.88 ) }
    dend_15 { pt3dadd( -295.1, -38.1983, -108.913, 0.88 ) }
    dend_15 { pt3dadd( -297.85, -46.9389, -106.636, 0.88 ) }
    dend_15 { pt3dadd( -300.52, -55.592, -103.982, 0.88 ) }
    dend_15 { pt3dadd( -302.241, -64.69, -102.028, 0.88 ) }
    dend_15 { pt3dadd( -303.54, -73.61, -99.1827, 0.88 ) }
    dend_15 { pt3dadd( -305.143, -82.5644, -96.6079, 0.88 ) }
    dend_15 { pt3dadd( -306.374, -91.5794, -94.024, 0.88 ) }
    dend_15 { pt3dadd( -309.266, -99.8951, -90.6771, 0.88 ) }
    dend_15 { pt3dadd( -311.398, -108.479, -87.4003, 0.88 ) }
    dend_15 { pt3dadd( -314.909, -116.204, -83.3742, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -318.95, -124.343, -80.9198, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -54.9138, 35.7851, -96.3621, 0.22 ) }
    dend_18 { pt3dadd( -53.1742, 35.1275, -106.384, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 3/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -54.9138, 35.7851, -96.3621, 0.22 ) }
    dend_17 { pt3dadd( -52.5958, 35.4667, -107.327, 0.22 ) }
    dend_17 { pt3dadd( -52.0136, 33.3726, -118.345, 0.22 ) }
    dend_17 { pt3dadd( -50.3146, 33.0233, -129.418, 0.22 ) }
    dend_17 { pt3dadd( -47.8822, 31.7352, -140.306, 0.22 ) }
    dend_17 { pt3dadd( -44.117, 32.7906, -150.799, 0.22 ) }
    dend_17 { pt3dadd( -39.9232, 32.1733, -161.199, 0.22 ) }
    dend_17 { pt3dadd( -34.2217, 31.7637, -170.871, 0.22 ) }
    dend_17 { pt3dadd( -29.6509, 29.1487, -180.844, 0.22 ) }
    dend_17 { pt3dadd( -25.5472, 27.7694, -191.223, 0.22 ) }
    dend_17 { pt3dadd( -23.1533, 26.2145, -202.089, 0.22 ) }
    dend_17 { pt3dadd( -20.5642, 23.764, -212.766, 0.22 ) }
    dend_17 { pt3dadd( -18.8403, 20.2476, -223.335, 0.22 ) }
    dend_17 { pt3dadd( -18.0312, 16.7044, -233.994, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_32 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_30 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_27 OneSecGrp_SectionRef_13.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_5 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_33 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_29 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_22 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_9 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_43 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_40 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_38 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_37 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_12 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_8 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_7 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_41 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_21 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_20 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_25 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_4 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_10 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_31 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_36 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_14 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 3
    dend_1 nseg = 3
    dend_32 nseg = 3
    dend_30 nseg = 3
    dend_27 nseg = 7
    dend_5 nseg = 3
    dend_3 nseg = 3
    dend_2 nseg = 21
    dend_39 nseg = 5
    dend_34 nseg = 9
    dend_33 nseg = 21
    dend_29 nseg = 3
    dend_28 nseg = 13
    dend_22 nseg = 3
    dend_11 nseg = 3
    dend_9 nseg = 9
    dend_43 nseg = 9
    dend_40 nseg = 9
    dend_38 nseg = 7
    dend_37 nseg = 7
    dend_24 nseg = 7
    dend_23 nseg = 3
    dend_12 nseg = 7
    dend_8 nseg = 3
    dend_7 nseg = 7
    dend_42 nseg = 11
    dend_41 nseg = 9
    dend_19 nseg = 9
    dend_21 nseg = 11
    dend_20 nseg = 11
    dend_15 nseg = 19
    dend_17 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L6_DBC_ed383a5814_0_0


