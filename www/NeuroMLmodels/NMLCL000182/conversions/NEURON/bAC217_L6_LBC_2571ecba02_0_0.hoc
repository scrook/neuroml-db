// Cell: bAC217_L6_LBC_2571ecba02_0_0
/*
{
  "id" : "bAC217_L6_LBC_2571ecba02_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.99972, -12.0853, -1.00194, 2.76544", "-0.863765, -10.9633, -0.891247, 4.3109", "-0.72781, -9.84136, -0.780557, 4.96188", "-0.591856, -8.71938, -0.669868, 5.8069", "-0.455901, -7.5974, -0.559178, 7.05068", "-0.319946, -6.47541, -0.448489, 8.73524", "-0.183991, -5.35343, -0.337799, 10.5744", "-0.0480362, -4.23145, -0.22711, 11.5548", "0.0879186, -3.10947, -0.11642, 12.9301", "0.223873, -1.98748, -0.00573068, 14.0229", "0.359828, -0.8655, 0.104959, 14.2607", "0.495783, 0.256482, 0.215648, 14.2925", "0.631738, 1.37846, 0.326338, 14.2253", "0.767693, 2.50045, 0.437027, 14.0078", "0.903648, 3.62243, 0.547717, 13.5909", "1.0396, 4.74441, 0.658406, 13.2474", "1.17556, 5.8664, 0.769096, 12.726", "1.31151, 6.98838, 0.879785, 11.4933", "1.44747, 8.11036, 0.990475, 10.1298", "1.58342, 9.23234, 1.10116, 8.27129", "1.71938, 10.3543, 1.21185, 4.6666" ]
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "2.28033, 5.63042, 12.739, 0.96", "2.30675, 5.69783, 12.739, 0.96", "2.51767, 6.2874, 12.739, 0.96", "2.56099, 6.42293, 12.739, 0.96", "2.7522, 7.07019, 12.739, 0.96", "3.04373, 8.11081, 12.739, 1.25", "3.15857, 8.57749, 12.739, 1.25", "3.33183, 9.42105, 12.6776, 0.81", "3.43474, 10.2623, 12.5625, 0.81", "3.46394, 10.7168, 12.4769, 1.11", "3.46167, 10.7779, 12.4616, 1.11", "3.29753, 11.4948, 12.2438, 1.33", "2.81191, 12.6927, 11.8846, 1.33", "2.45866, 13.3744, 11.6806, 0.96", "2.43281, 13.4197, 11.6684, 0.96", "2.13517, 13.9118, 11.5585, 0.96", "1.50616, 14.9302, 11.3804, 0.96", "0.891596, 15.8741, 11.3201, 0.96", "0.620457, 16.2678, 11.347, 1.4", "0.210376, 16.8604, 11.4521, 1.4", "-0.130546, 17.359, 11.5863, 0.96", "-0.158342, 17.4007, 11.6043, 0.96", "-0.569786, 18.0566, 11.9973, 0.74", "-1.01101, 18.7617, 12.5156, 0.74", "-1.41537, 19.4848, 13.1127, 0.74", "-1.53604, 19.751, 13.3601, 0.74", "-1.72562, 20.3068, 13.8882, 0.59", "-1.85338, 20.7914, 14.3027, 0.59", "-1.86098, 20.8339, 14.334, 0.59", "-1.93951, 21.5532, 14.8674, 0.59", "-2.00307, 22.1854, 15.3003, 0.74", "-2.00746, 22.2942, 15.3791, 0.74", "-1.95649, 22.9912, 15.9119, 0.74", "-1.91369, 23.3198, 16.1799, 1.03", "-1.73746, 23.9678, 16.7672, 1.03", "-1.71775, 24.0057, 16.8113, 1.03", "-1.23595, 24.6132, 17.6869, 0.74", "-0.524518, 25.2545, 18.8174, 0.74", "-0.491219, 25.2751, 18.8645, 0.74", "0.233897, 25.6533, 19.7696, 0.74", "1.02487, 26.0603, 20.6963, 0.74", "1.06199, 26.0796, 20.7401, 0.74", "1.3184, 26.2037, 21.0383, 0.74", "1.87345, 26.4722, 21.6425, 1.03", "2.42586, 26.7739, 22.2285, 1.03", "3.5179, 27.468, 23.3425, 0.81", "4.24204, 27.95, 24.0716, 0.81", "4.72845, 28.2699, 24.5671, 0.52", "5.2457, 28.5997, 25.1014, 0.52", "5.29111, 28.6267, 25.1472, 0.52", "5.72988, 28.8394, 25.5905, 0.74", "6.48283, 29.1156, 26.1796, 0.74", "8.32518, 35.6904, 31.796, 0.74" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000058507499,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "0.960327, 8.06642, 4.92909, 0.88", "1.00805, 8.86509, 4.88985, 0.88", "1.03691, 9.84735, 4.84135, 0.88", "1.05828, 11.1239, 4.77325, 0.88", "1.04398, 12.776, 4.68425, 0.88", "1.01151, 13.7971, 4.63118, 0.66", "0.967387, 14.7862, 4.58104, 1.03", "0.877614, 15.9915, 4.51653, 1.03", "0.869313, 16.071, 4.51235, 1.03", "0.758231, 16.9764, 4.46745, 1.18", "0.657986, 17.9867, 4.42855, 1.18", "0.655283, 18.0943, 4.42629, 1.18", "0.756204, 19.3749, 4.40214, 0.96", "0.947297, 20.5334, 4.38768, 0.66", "0.975487, 20.6367, 4.3954, 0.66", "1.42978, 21.8234, 4.57409, 0.59", "1.87411, 22.7396, 4.81399, 0.59", "2.38223, 23.6542, 5.14129, 0.59", "2.42082, 23.7163, 5.17012, 0.59", "3.48597, 25.3645, 6.0291, 0.59", "3.52222, 25.4257, 6.06243, 0.59", "4.05817, 26.4091, 6.70935, 0.96", "4.087, 26.4692, 6.75078, 0.96", "4.38773, 27.2309, 7.25477, 0.96", "4.65682, 27.937, 7.67233, 1.33", "5.05488, 28.9832, 8.17427, 1.33", "5.45451, 29.9662, 8.6589, 1.62", "5.71478, 30.5467, 9.01418, 1.62", "5.87093, 30.8802, 9.23722, 1.4", "6.14727, 31.4411, 9.6452, 0.66", "6.48235, 32.1208, 10.2313, 0.59", "7.36397, 33.8674, 11.8447, 0.59", "7.94812, 35.042, 12.8984, 0.96", "8.27241, 35.6988, 13.4943, 0.96", "8.30433, 35.7645, 13.5505, 0.96", "9.06266, 37.4137, 14.7945, 0.96", "9.2555, 37.8323, 15.0528, 0.59", "9.77905, 38.8681, 15.4977, 0.59", "10.4523, 40.1429, 15.8981, 0.88", "10.9891, 41.0779, 16.1604, 1.25", "11.724, 42.2612, 16.4237, 1.47", "12.3179, 43.1344, 16.6, 1.47", "12.9738, 43.989, 16.8227, 1.47", "13.0322, 44.057, 16.8445, 1.47", "13.9588, 45.0448, 17.1981, 0.66", "14.7692, 45.8794, 17.5488, 0.66", "15.9813, 47.1591, 18.1405, 0.66", "16.7551, 48.0373, 18.5439, 0.66", "16.8017, 48.0954, 18.5683, 0.66", "17.3853, 48.9022, 18.8379, 0.37", "17.7538, 49.4632, 18.9603, 0.29", "18.1167, 50.035, 19.3277, 0.29", "18.4373, 50.5875, 19.8392, 0.29", "18.6331, 50.9785, 20.3497, 1.11", "18.8944, 51.5091, 21.167, 1.55", "19.1085, 51.969, 21.9543, 1.55", "20.1318, 54.4942, 26.3913, 1.03", "20.2229, 54.7911, 26.8923, 1.03", "20.4253, 55.8074, 28.5466, 0.74", "20.4319, 55.864, 28.6335, 0.74", "20.4551, 56.2805, 29.19, 0.59", "20.5068, 56.9678, 29.8398, 0.59", "20.8544, 58.4767, 30.4458, 0.59", "20.8868, 58.5576, 30.4764, 0.59", "21.5715, 59.838, 30.8898, 0.59", "22.0506, 60.6597, 31.1329, 0.96", "22.7994, 61.7895, 31.4475, 0.96", "23.5998, 62.8605, 31.7182, 1.18", "24.5267, 64.0329, 31.9723, 1.18", "25.336, 65.0586, 32.1567, 1.18", "26.1475, 66.1082, 32.285, 1.55", "26.6008, 66.7142, 32.3577, 1.99", "27.1706, 67.5698, 32.447, 1.99", "27.5115, 68.1174, 32.4892, 1.84", "28.0325, 68.951, 32.5224, 0.81", "28.5099, 69.7125, 32.639, 0.81", "28.5651, 69.7998, 32.6624, 0.81", "28.99, 70.5198, 32.8932, 0.81", "29.0593, 70.634, 32.934, 0.81", "29.5913, 71.4862, 33.2999, 0.81", "30.3256, 72.6788, 33.8476, 1.18", "30.7776, 73.4735, 34.3239, 1.18", "30.8149, 73.5436, 34.3712, 1.18", "31.1782, 74.2883, 34.8703, 1.18", "31.4811, 75.0294, 35.4011, 1.18", "31.6855, 75.6429, 35.812, 0.96", "32.1461, 77.214, 36.7757, 1.18", "32.1665, 77.2888, 36.8266, 1.18", "32.5032, 78.5381, 37.7864, 1.18", "32.876, 80.1559, 39.0576, 1.55", "33.1371, 81.3842, 40.0957, 1.55", "33.1498, 81.4511, 40.1565, 1.55", "33.3657, 83.0171, 41.5434, 1.84", "33.4711, 84.4846, 42.8859, 1.18", "33.4812, 85.4228, 43.7673, 1.18", "33.467, 86.8534, 45.0015, 1.18", "33.4646, 86.9253, 45.0598, 1.18", "33.4148, 88.1951, 45.9446, 1.18", "33.3754, 89.3274, 46.5108, 0.81", "33.3706, 90.0238, 46.7551, 0.59", "33.4733, 91.0378, 47.0014, 0.59", "33.6421, 91.8094, 47.0522, 1.18", "33.6847, 91.9352, 47.0531, 1.18", "34.0121, 92.6285, 47.006, 1.18", "34.0471, 92.699, 46.9967, 1.18", "34.4448, 93.6019, 46.9291, 1.18", "34.8473, 94.764, 46.9031, 0.96", "35.0372, 95.5289, 46.9191, 0.96", "35.1255, 96.2088, 46.9878, 0.52", "35.1078, 96.8109, 47.0951, 0.52", "34.8852, 97.9438, 47.4632, 0.52", "34.5595, 98.7785, 47.8456, 0.88", "34.2431, 99.3755, 48.1693, 0.88", "33.7316, 100.197, 48.66, 0.88", "33.2345, 100.933, 49.1193, 0.66", "32.2999, 102.259, 49.9688, 0.66", "31.9492, 102.763, 50.2766, 0.52", "31.5761, 103.402, 50.6301, 0.44", "31.5361, 103.492, 50.6679, 0.44", "31.3634, 104.201, 50.8332, 0.44", "31.3574, 104.294, 50.8489, 0.44", "31.4225, 105.062, 50.9188, 0.74", "31.5981, 105.931, 50.9916, 1.11", "31.8158, 106.732, 51.055, 1.55", "32.1209, 107.67, 51.1208, 0.96", "32.4624, 108.568, 51.1788, 0.52", "33.1737, 110.198, 51.2687, 0.37", "33.541, 110.924, 51.3018, 0.37", "33.5876, 111.004, 51.3026, 0.37", "34.0814, 111.778, 51.28, 0.37", "34.1584, 111.897, 51.2717, 0.37", "34.6923, 112.695, 51.1595, 0.37", "34.7476, 112.769, 51.1484, 0.37", "35.3013, 113.551, 51.0649, 0.37", "35.8248, 114.268, 50.9768, 0.81", "39.716, 125.041, 57.4079, 0.81", "42.0904, 136.815, 62.9217, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000058507499,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-1.74967, -10.6761, -2.32091, 3.9", "-1.974, -12.9403, -2.32091, 3.9", "-2.1213, -14.427, -2.32091, 4.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000058507499
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.00967, 9.13742, -2.82091, 3.68", "-1.19566, 10.5728, -2.82091, 3.68", "-1.53661, 13.3927, -2.82091, 3.24", "-1.94505, 16.5013, -2.82577, 3.24", "-2.25096, 18.8295, -2.82942, 3.24", "-2.61394, 21.5921, -2.83374, 3.24", "-2.95333, 24.1751, -2.83778, 3.61", "-3.14334, 25.6288, -2.84052, 3.61", "-3.27328, 26.711, -2.84325, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000058507499
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.71938, 10.3543, 1.21185, 0.81", "3.52379, 25.2454, 1.21185, 0.81", "5.32821, 40.1364, 1.21185, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "8.32518, 35.6904, 31.796, 0.74", "10.7049, 44.4868, 37.3415, 0.74", "13.9472, 52.8934, 42.9964, 0.74", "15.1078, 61.6928, 48.9156, 0.74", "17.6391, 68.7872, 56.301, 0.74", "20.5615, 75.058, 64.2001, 0.74" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "8.32518, 35.6904, 31.796, 0.52", "9.28944, 42.5086, 36.1698, 0.74", "10.7645, 48.0944, 41.8039, 0.74", "13.2129, 53.9062, 46.8559, 0.74", "15.3508, 59.7293, 52.0372, 0.74", "17.0537, 64.5307, 58.2346, 0.74", "18.7489, 68.1254, 65.1361, 0.74", "20.0605, 71.4449, 72.2441, 0.74" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "42.0904, 136.815, 62.9217, 0.74", "45.8893, 146.932, 68.2057, 0.74", "49.2932, 156.524, 74.5517, 0.74", "51.7418, 166.009, 81.4697, 0.74", "52.9095, 175.533, 88.6785, 0.74", "55.1029, 186.495, 93.3158, 0.74", "57.5678, 197.102, 98.5328, 0.74", "57.746, 208.71, 102.169, 0.74", "56.3757, 220.195, 105.931, 0.74", "55.5662, 231.818, 109.45, 0.74" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "42.0904, 136.815, 62.9217, 0.52", "44.7693, 145.449, 66.537, 0.74", "47.5098, 153.771, 70.7213, 0.74", "50.8171, 161.928, 74.8007, 0.74", "53.8489, 169.982, 79.2528, 0.74", "58.106, 178.109, 82.437, 0.74", "60.8093, 186.641, 86.2467, 0.74", "62.5878, 195.841, 89.0456, 0.74", "65.9966, 204.227, 92.5947, 0.74", "68.3054, 212.674, 96.8025, 0.74" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-2.1213, -14.427, -2.32091, 1.62", "-2.36208, -14.6839, -2.43387, 1.62", "-3.26035, -15.6423, -2.85531, 1.47", "-4.29859, -16.7501, -3.34241, 1.4", "-5.03997, -17.5411, -3.69023, 1.55", "-5.82067, -18.3741, -4.05651, 1.55", "-6.21515, -18.795, -4.24158, 1.69" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-2.1213, -14.427, -2.32091, 1.84", "-2.10566, -14.5576, -2.3089, 1.84", "-1.95264, -16.2198, -2.15625, 1.99", "-1.81221, -18.0916, -1.98855, 1.84", "-1.62254, -20.6196, -1.76205, 1.47", "-1.36826, -24.0088, -1.45839, 1.47", "-1.26451, -25.3916, -1.3345, 2.06", "-1.2128, -26.3114, -1.25626, 2.5", "-1.19263, -27.5571, -1.15586, 2.43" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.27328, 26.711, -2.84325, 0.96", "-1.30845, 28.2173, -4.21297, 0.96", "-0.775976, 28.7882, -4.60707, 1.03", "-0.344794, 29.3231, -4.94183, 1.03", "-0.278612, 29.4129, -4.98957, 1.03", "0.351729, 30.3125, -5.40368, 1.03", "0.387732, 30.3624, -5.42394, 1.03", "1.28067, 31.7204, -5.79717, 1.03", "1.37969, 31.8416, -5.83114, 1.03", "2.12299, 32.5474, -6.06608, 1.03", "2.59916, 32.8826, -6.19436, 1.11", "3.34121, 33.1595, -6.42391, 1.11", "4.36229, 33.1707, -7.09531, 1.33", "4.84487, 33.0627, -7.74809, 1.47", "4.87487, 33.0565, -7.8032, 1.47", "5.1864, 32.9883, -8.52334, 1.47", "5.81635, 32.9058, -10.3259, 0.96", "6.76467, 32.8878, -13.7444, 0.81", "7.43243, 32.9966, -16.8205, 0.96", "7.64228, 33.0689, -17.9896, 0.96", "7.65174, 33.0747, -18.0516, 0.96", "7.77513, 33.2674, -19.2666, 0.96", "7.77765, 33.2868, -19.3268, 0.96", "7.77595, 33.3279, -19.3809, 0.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.27328, 26.711, -2.84325, 2.14", "-3.66293, 27.6443, -2.82958, 2.14", "-4.31966, 29.4061, -2.80748, 3.0", "-4.90707, 31.1375, -2.85258, 2.28", "-5.45371, 32.8716, -3.04234, 2.14", "-5.87682, 34.2519, -3.24907, 2.21", "-6.27047, 35.5361, -3.44141, 2.36", "-6.70182, 37.0272, -3.70429, 2.36", "-7.09741, 38.6826, -4.06519, 2.21", "-7.5208, 40.757, -4.63277, 2.21", "-7.81154, 42.1581, -5.12502, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.32821, 40.1364, 1.21185, 0.15", "7.13262, 55.0275, 1.21185, 0.15", "8.93703, 69.9186, 1.21185, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-6.21515, -18.795, -4.24158, 0.66", "-6.84441, -20.097, -4.09236, 0.66", "-7.09005, -20.6931, -4.04675, 0.66", "-7.11556, -20.7569, -4.0405, 0.66", "-7.51179, -21.7458, -3.94808, 0.66", "-7.89168, -22.6826, -3.87275, 0.66", "-8.1181, -23.2315, -3.83121, 0.96", "-8.43975, -24.0395, -3.74947, 1.18", "-8.8182, -24.9112, -3.59193, 0.66", "-9.22157, -25.6662, -3.34146, 0.66", "-9.37912, -25.8613, -3.21629, 0.66", "-9.4402, -25.8913, -3.15085, 0.66", "-10.311, -25.7163, -1.88631, 0.66", "-10.3386, -25.701, -1.83968, 0.66", "-10.8214, -25.2756, -0.908751, 0.66", "-11.14, -24.9352, -0.275738, 0.96", "-11.6922, -24.3481, 0.905219, 0.96", "-12.3686, -23.7256, 2.39403, 0.96", "-12.3913, -23.7087, 2.44285, 0.96", "-13.0566, -23.3794, 3.80697, 0.59", "-13.3086, -23.3258, 4.29969, 0.59", "-14.4932, -23.4619, 6.46143, 0.59", "-15.339, -23.8672, 7.78542, 1.25", "-15.7796, -24.2492, 8.38784, 1.4", "-16.2446, -24.8002, 8.93827, 0.74", "-16.5334, -25.2963, 9.18027, 0.74", "-16.8736, -26.0728, 9.30781, 0.74", "-17.1425, -26.8298, 9.21103, 0.74", "-17.4002, -27.6457, 9.0175, 1.11", "-17.7985, -28.9579, 8.66975, 0.37", "-17.9553, -29.4867, 8.51733, 0.37", "-18.2439, -30.397, 8.23729, 0.37", "-18.5948, -31.2857, 7.96522, 1.18", "-18.897, -31.9226, 7.78111, 1.47", "-18.9676, -32.0364, 7.7525, 1.47", "-19.2701, -32.4228, 7.68454, 1.47", "-19.6641, -32.8647, 7.59423, 0.81", "-20.2042, -33.3917, 7.46941, 0.81", "-20.255, -33.4346, 7.45784, 0.81", "-20.9964, -33.9654, 7.29869, 0.81", "-21.7945, -34.5133, 7.12807, 0.81", "-22.3816, -34.8955, 7.00315, 0.37", "-22.5922, -35.033, 6.95828, 0.37", "-23.0997, -35.3824, 6.85094, 0.37", "-24.3201, -36.2214, 6.60638, 0.37", "-30.6552, -42.1227, 10.5744, 0.37" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-6.21515, -18.795, -4.24158, 1.25", "-6.14067, -19.6814, -4.34093, 1.25", "-6.06662, -20.9494, -4.47188, 1.25", "-6.06361, -21.0645, -4.48248, 1.25", "-6.08008, -22.0537, -4.56256, 1.25", "-6.08716, -22.177, -4.57123, 1.25", "-6.17734, -23.1599, -4.63167, 1.25", "-6.26765, -23.8148, -4.6724, 1.33", "-6.40108, -24.5847, -4.71591, 1.33", "-6.61723, -25.6925, -4.76768, 1.18", "-6.9128, -27.0416, -4.81519, 1.18", "-7.28703, -28.6582, -4.91006, 1.18", "-7.30417, -28.7215, -4.91566, 1.18", "-7.64828, -29.8404, -5.04341, 1.18", "-7.96156, -30.7302, -5.16823, 1.18", "-7.98289, -30.7828, -5.17704, 1.18", "-8.4748, -31.8164, -5.37911, 1.18", "-9.11411, -32.9734, -5.63101, 1.18", "-9.58584, -33.7817, -5.83633, 1.4", "-10.0053, -34.457, -6.0293, 1.77", "-10.4594, -35.1399, -6.24097, 1.77", "-10.9815, -35.9112, -6.48266, 1.77", "-11.5662, -36.7458, -6.74618, 1.25", "-12.126, -37.5669, -7.0194, 0.96", "-12.4912, -38.1215, -7.1995, 1.18", "-12.6536, -38.3819, -7.27841, 1.18", "-12.8748, -38.7404, -7.37649, 1.18", "-12.9034, -38.7878, -7.38984, 1.18", "-13.3953, -39.5927, -7.60891, 1.03", "-13.7498, -40.1549, -7.7519, 0.81", "-14.2232, -40.9351, -7.96545, 0.81", "-14.7271, -41.8256, -8.20709, 1.4", "-15.2375, -42.8004, -8.46339, 1.55", "-15.724, -43.8245, -8.73437, 1.69", "-16.0567, -44.6099, -8.95553, 1.69", "-16.3299, -45.3608, -9.16433, 1.11", "-16.6279, -46.291, -9.40983, 0.81", "-16.8447, -47.048, -9.5967, 0.81", "-17.3968, -49.1124, -10.056, 0.81", "-17.6238, -50.035, -10.2733, 1.18", "-17.8054, -50.7854, -10.4582, 1.18", "-17.9567, -51.3901, -10.6092, 1.18", "-18.1109, -51.9743, -10.7608, 1.03", "-18.2948, -52.6424, -10.9314, 0.74", "-18.4896, -53.3848, -11.1114, 0.52", "-18.505, -53.4387, -11.1245, 0.52", "-18.6494, -53.927, -11.2784, 0.52", "-18.8753, -54.7276, -11.5706, 0.81", "-18.8903, -54.7789, -11.5913, 0.81", "-19.1155, -55.4514, -11.8729, 1.18", "-19.3604, -56.1215, -12.1516, 1.18", "-19.6433, -56.9071, -12.5184, 1.03", "-19.9141, -57.6445, -12.9159, 0.66", "-19.9513, -57.7456, -12.9732, 0.66", "-20.2127, -58.4235, -13.3473, 0.52", "-20.2345, -58.4767, -13.3776, 0.52", "-20.5873, -59.278, -13.8659, 1.55", "-20.9169, -59.9911, -14.2887, 1.99", "-21.1674, -60.5256, -14.6007, 2.28", "-21.511, -61.2447, -14.9924, 1.92", "-21.8902, -62.014, -15.3743, 0.37", "-21.9147, -62.0613, -15.395, 0.37", "-22.21, -62.5979, -15.5801, 0.37", "-22.4693, -63.0723, -15.7456, 0.29", "-22.8643, -63.8069, -16.0063, 0.29", "-23.173, -64.3885, -16.2008, 0.29", "-23.1982, -64.4375, -16.2157, 0.29", "-23.6348, -65.3381, -16.5331, 0.29", "-24.1498, -66.4711, -16.9704, 0.29", "-24.3992, -67.0611, -17.2039, 1.62", "-24.7145, -67.8447, -17.5126, 2.21", "-24.9855, -68.5296, -17.7849, 1.55", "-25.3388, -69.423, -18.1258, 0.29", "-25.5051, -69.8421, -18.2766, 0.29", "-25.8175, -70.6488, -18.5218, 0.29", "-26.1125, -71.4117, -18.7484, 0.29", "-26.2806, -71.8363, -18.8643, 0.66", "-26.5274, -72.3941, -18.9908, 1.03", "-26.7009, -72.7527, -19.0496, 0.52", "-26.8501, -73.0592, -19.0995, 0.52", "-26.981, -73.3369, -19.1415, 0.22", "-27.208, -73.8741, -19.2074, 0.22", "-27.5306, -74.7402, -19.3274, 0.22", "-27.5513, -74.8015, -19.338, 0.22", "-27.7515, -75.4164, -19.4594, 0.66", "-27.8501, -75.6951, -19.5205, 1.25", "-28.0248, -76.1924, -19.639, 1.25", "-28.2713, -76.8622, -19.81, 0.29", "-28.2944, -76.9216, -19.8251, 0.29", "-28.5837, -77.6134, -19.9998, 0.29", "-28.9633, -78.44, -20.2072, 0.29", "-29.1615, -78.8477, -20.3013, 1.25", "-29.3936, -79.3102, -20.3955, 1.69", "-29.7231, -79.998, -20.5332, 0.66", "-29.7456, -80.0495, -20.5447, 0.66", "-29.8688, -80.3652, -20.6221, 0.22", "-30.1678, -81.2099, -20.8388, 0.22", "-30.1857, -81.2626, -20.8528, 0.22", "-30.4523, -82.1158, -21.1064, 0.88", "-30.6082, -82.6304, -21.2841, 0.88", "-30.6314, -82.7099, -21.3132, 0.88" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-1.19263, -27.5571, -1.15586, 1.4", "-1.0633, -28.0603, -0.880905, 1.4", "-0.844146, -29.225, -0.14339, 1.11", "-0.629263, -30.4524, 0.621617, 1.03", "-0.617302, -30.5185, 0.660818, 1.03", "-0.416197, -31.4434, 1.17856, 1.03", "-0.0788638, -32.8004, 1.89402, 1.03", "0.256908, -34.0362, 2.50628, 1.47", "0.575372, -35.021, 2.95689, 1.47", "0.924107, -35.93, 3.32465, 1.18", "1.43044, -37.1268, 3.78219, 1.18", "1.86115, -38.0168, 4.09326, 1.55", "2.37766, -38.9401, 4.35197, 1.55", "3.05278, -40.0326, 4.61442, 1.33", "3.89754, -41.3059, 4.9208, 0.96", "3.94631, -41.3773, 4.93785, 0.96", "4.70665, -42.4773, 5.19421, 0.81", "5.29691, -43.3012, 5.38213, 0.81", "5.96836, -44.2061, 5.57458, 1.03", "6.26179, -44.572, 5.64172, 1.03" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-1.19263, -27.5571, -1.15586, 1.69", "-1.36583, -27.9018, -1.19437, 1.69", "-1.62797, -28.6212, -1.28756, 1.69", "-1.95628, -29.7209, -1.42421, 1.47", "-1.9743, -29.7859, -1.43165, 1.47", "-2.30238, -30.9832, -1.58234, 1.11", "-2.70838, -32.539, -1.77896, 1.11", "-3.11327, -34.3524, -1.96354, 1.11", "-3.23507, -35.031, -2.01514, 1.77", "-3.42533, -36.245, -2.07977, 1.77", "-3.49434, -36.7494, -2.09512, 1.55", "-3.61095, -37.8125, -2.08635, 1.33", "-3.73488, -39.1567, -2.03112, 1.25", "-3.86507, -40.854, -1.92621, 1.25", "-3.94186, -42.0431, -1.84879, 1.55", "-3.99173, -42.995, -1.80482, 1.55", "-4.03665, -43.7561, -1.78219, 0.81", "-4.3074, -47.2661, -1.7687, 0.81", "-4.40116, -48.2078, -1.79212, 0.88", "-4.53296, -49.2714, -1.83568, 0.88", "-4.73658, -50.6287, -1.9447, 1.69", "-4.93291, -51.7036, -2.07428, 1.92", "-5.11935, -52.6275, -2.22868, 1.92", "-5.35245, -53.6507, -2.44441, 1.92", "-5.36693, -53.7157, -2.45745, 1.92", "-5.70368, -55.2027, -2.75428, 2.28", "-5.71703, -55.2682, -2.76555, 2.28", "-5.8735, -56.2428, -2.95006, 2.5", "-5.99702, -57.2825, -3.15567, 2.36", "-6.09164, -58.3277, -3.35089, 1.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "7.77595, 33.3279, -19.3809, 0.66", "7.98441, 33.7605, -19.8053, 0.66", "8.50846, 34.8274, -20.7574, 0.96", "8.54802, 34.892, -20.815, 0.96", "9.67309, 36.5035, -22.255, 0.29", "9.7716, 36.6107, -22.3573, 0.29", "10.6608, 37.3377, -23.1394, 0.29", "10.7207, 37.3574, -23.1917, 0.29", "11.4506, 37.3725, -23.7679, 0.59", "11.5285, 37.3715, -23.8186, 0.59", "12.5915, 37.3738, -24.3441, 0.88", "13.1795, 37.4417, -24.6868, 0.88", "14.8295, 37.7229, -25.7684, 0.59", "15.3683, 37.8664, -26.1285, 0.88", "16.2893, 38.2227, -26.7662, 1.25", "17.0758, 38.5812, -27.278, 0.96", "18.3847, 39.2951, -28.0355, 0.44", "18.458, 39.3392, -28.0754, 0.44", "19.2836, 39.849, -28.4607, 0.44", "19.8912, 40.2043, -28.7501, 1.11", "20.8211, 40.7636, -29.1796, 1.47", "21.7818, 41.3836, -29.5861, 1.03", "23.1038, 42.385, -30.1402, 0.52", "23.9314, 43.1258, -30.5166, 0.52", "23.9858, 43.1839, -30.543, 0.52", "24.8289, 44.2183, -30.9437, 0.52", "25.1588, 44.6884, -31.1541, 0.52", "26.0612, 46.0178, -31.8415, 0.52", "26.5112, 46.6731, -32.2411, 1.03", "26.8137, 47.1136, -32.5476, 1.55", "27.507, 48.1887, -33.2997, 1.55", "28.6619, 50.1036, -34.7504, 1.55", "29.4964, 51.5847, -35.8988, 0.44", "30.1771, 52.886, -36.8722, 0.44", "30.2679, 53.0689, -37.0103, 0.44", "30.9507, 54.4428, -38.0073, 0.44", "31.7443, 56.0157, -39.1421, 0.44", "31.7785, 56.0804, -39.1833, 0.44", "32.2478, 57.0296, -39.897, 0.44", "32.9908, 58.5122, -41.1258, 1.84", "33.4336, 59.4069, -41.9231, 2.14", "34.2272, 61.0808, -43.5845, 1.33", "34.532, 61.7801, -44.2857, 1.03", "35.5243, 64.2973, -46.9115, 0.52", "35.5555, 64.3934, -47.0103, 0.52", "35.721, 65.0459, -47.6213, 0.52", "35.965, 66.0867, -48.4557, 0.52", "36.1918, 66.9677, -48.9572, 0.52", "36.2452, 67.1472, -49.0424, 0.52", "36.8116, 68.8037, -49.6022, 0.52", "37.4439, 70.6236, -50.2136, 1.4", "37.8693, 71.7599, -50.56, 1.77", "38.2903, 72.8727, -50.8496, 1.25", "38.7699, 74.1763, -51.1926, 0.44", "39.2087, 75.2309, -51.4634, 0.44", "39.2962, 75.4108, -51.5141, 0.44", "40.2721, 77.2011, -51.9712, 0.44", "40.3697, 77.3694, -52.0154, 0.44", "41.255, 78.8855, -52.365, 1.69", "42.1023, 80.3329, -52.6432, 1.69", "42.9322, 81.8893, -52.9695, 0.37", "43.7304, 83.5517, -53.3263, 0.37", "43.7622, 83.6279, -53.3463, 0.37", "44.5693, 85.7509, -54.0387, 0.37", "44.6549, 85.9874, -54.1264, 0.37", "45.3801, 88.1378, -55.0998, 0.37", "45.4059, 88.2097, -55.1339, 0.37", "46.0507, 89.8604, -55.9639, 0.37", "47.1083, 92.3362, -57.2344, 1.77", "47.4883, 93.1617, -57.658, 2.21", "48.413, 95.1322, -58.5275, 1.18", "48.9843, 96.2865, -58.9388, 0.22", "49.4565, 97.3064, -59.1938, 0.22", "49.4891, 97.3846, -59.2025, 0.22", "49.9661, 98.7533, -59.2185, 0.22", "50.3624, 99.9465, -59.2146, 0.22", "50.4195, 100.108, -59.21, 0.22", "50.7953, 101.109, -59.2645, 0.22", "51.1645, 101.902, -59.3315, 1.11", "51.5101, 102.482, -59.3939, 1.11", "51.8985, 102.982, -59.4665, 0.29", "52.1418, 103.284, -59.5355, 0.29", "52.5172, 103.774, -59.6799, 0.29", "52.8389, 104.166, -59.7458, 0.29", "53.55, 105.035, -59.7069, 0.29", "53.6293, 105.137, -59.6922, 0.29", "54.3615, 106.245, -59.4709, 0.29", "54.5162, 106.495, -59.4103, 0.29", "55.7351, 108.474, -58.9421, 0.22", "56.5971, 109.755, -58.6442, 0.22", "56.6463, 109.822, -58.6288, 0.22", "57.6689, 111.117, -58.3421, 0.22", "57.7234, 111.18, -58.3283, 0.22", "58.9143, 112.538, -58.1566, 0.22", "59.3921, 113.076, -58.1926, 0.81", "59.6795, 113.356, -58.2185, 0.81", "59.7712, 113.431, -58.2274, 0.81", "60.0981, 113.627, -58.2626, 0.29", "60.17, 113.668, -58.2698, 0.29", "60.9341, 114.082, -58.3348, 0.29", "61.1044, 114.191, -58.3477, 0.29", "61.9662, 114.767, -58.411, 0.66", "62.0422, 114.824, -58.4186, 0.66", "62.4979, 115.191, -58.4712, 0.66", "62.8803, 115.505, -58.5191, 0.29", "63.4532, 115.978, -58.596, 0.29", "63.5172, 116.031, -58.6057, 0.29", "64.6072, 116.933, -58.7797, 0.29", "65.0896, 117.318, -58.8583, 1.18", "65.899, 117.957, -58.992, 1.47", "66.1391, 118.144, -59.0318, 1.47", "67.0797, 118.875, -59.1764, 0.37", "67.9823, 119.602, -59.296, 0.37", "68.0556, 119.663, -59.3042, 0.37", "68.9355, 120.372, -59.3549, 0.22", "69.0, 120.425, -59.3591, 0.22", "70.352, 121.542, -59.452, 0.22", "71.4236, 122.449, -59.5222, 0.22", "71.5661, 122.571, -59.5223, 0.22", "72.9809, 123.819, -59.4501, 0.22", "73.7513, 124.581, -59.3627, 1.47", "74.3565, 125.265, -59.24, 1.99", "74.7765, 125.811, -59.1049, 1.99", "75.6893, 127.194, -58.7104, 0.66", "76.0301, 127.79, -58.5306, 0.22", "76.6501, 129.162, -58.114, 0.22", "76.9729, 129.859, -57.8324, 0.66", "77.0214, 129.967, -57.7849, 0.66", "77.3223, 130.624, -57.4968, 0.66", "77.3929, 130.78, -57.4355, 0.66", "77.9032, 131.899, -56.9515, 0.66", "78.3914, 133.071, -56.4147, 0.29", "78.4162, 133.159, -56.3805, 0.29", "78.5414, 133.809, -56.1414, 0.29", "78.5664, 133.982, -56.0661, 0.29", "78.6786, 135.002, -55.5961, 0.29", "78.7129, 135.467, -55.3777, 0.29", "78.781, 136.084, -55.0378, 0.29", "78.7936, 136.166, -54.989, 0.29", "79.0622, 137.431, -54.0673, 0.29", "79.4152, 138.804, -52.9655, 0.29", "79.4318, 138.858, -52.9212, 0.29", "80.0993, 140.859, -51.2712, 1.03", "80.4515, 141.944, -50.4464, 1.03", "81.0305, 143.805, -49.1608, 0.22", "81.0681, 143.948, -49.0783, 0.22", "81.3513, 145.138, -48.5531, 0.22", "81.4024, 145.389, -48.477, 0.22", "81.7422, 147.399, -48.1874, 0.22", "81.7805, 147.681, -48.1683, 0.22", "81.9778, 149.41, -48.1737, 0.22", "82.1524, 151.052, -48.1822, 1.25", "82.2323, 151.859, -48.1859, 1.69", "82.3258, 152.732, -48.1895, 1.69", "82.4799, 153.995, -48.2393, 0.74", "82.5579, 154.52, -48.2714, 0.29", "82.592, 154.699, -48.2854, 0.29", "82.8952, 156.179, -48.3567, 0.29", "82.9148, 156.262, -48.3604, 0.29", "83.2818, 157.674, -48.4173, 0.88", "83.5896, 158.866, -48.4491, 0.88", "83.8127, 159.821, -48.4553, 0.88", "83.9622, 160.629, -48.4359, 0.29", "84.0907, 161.511, -48.3839, 0.29", "84.1201, 161.699, -48.3668, 0.29", "84.286, 162.757, -48.2421, 0.29", "84.3318, 163.023, -48.2199, 0.29", "84.5708, 164.276, -48.1553, 0.29", "84.5965, 164.394, -48.1529, 0.29", "85.1369, 166.555, -48.1281, 0.29", "85.4972, 167.77, -48.1244, 0.74", "85.7272, 168.422, -48.1292, 0.74", "85.8787, 168.834, -48.1323, 0.74", "86.1496, 169.578, -48.1318, 0.74", "86.2049, 169.751, -48.129, 0.74", "86.37, 170.36, -48.1512, 0.29", "86.4136, 170.523, -48.163, 0.29", "86.7003, 171.742, -48.2771, 0.29", "87.0981, 173.651, -48.4683, 0.29", "87.1261, 173.806, -48.483, 0.29", "87.4171, 175.6, -48.6311, 0.29", "87.4296, 175.684, -48.6367, 0.29", "87.5978, 176.795, -48.6907, 1.25", "87.8215, 178.241, -48.7204, 2.14", "88.0001, 179.408, -48.7051, 2.8", "88.165, 180.557, -48.6413, 2.14", "88.344, 181.872, -48.5085, 0.88", "88.491, 183.005, -48.3894, 0.44", "88.6186, 183.986, -48.2822, 0.44", "88.6349, 184.126, -48.2708, 0.44", "88.8563, 186.417, -48.2263, 0.44", "88.8622, 186.502, -48.2339, 0.44", "88.9513, 187.389, -48.4308, 0.44", "88.9849, 187.644, -48.5051, 0.44", "89.2297, 189.132, -48.9929, 0.44", "89.6215, 191.136, -49.7051, 1.18", "89.9877, 192.718, -50.2947, 0.81", "90.6829, 195.493, -51.3136, 0.29", "90.9235, 196.368, -51.623, 0.88", "91.2221, 197.349, -51.9123, 0.88", "92.1497, 200.121, -52.5717, 0.37", "92.5065, 201.145, -52.7493, 0.74", "92.5625, 201.306, -52.7663, 0.74", "92.9448, 202.488, -52.8278, 0.22", "94.0395, 205.956, -52.9354, 0.22", "94.1209, 206.212, -52.9357, 0.22", "94.535, 207.504, -52.8853, 0.22", "94.6148, 207.759, -52.877, 0.22", "95.1148, 209.391, -52.8352, 0.66", "95.1636, 209.555, -52.8324, 0.66", "95.4065, 210.441, -52.8743, 0.88", "95.6166, 211.191, -52.9393, 0.52", "95.6672, 211.366, -52.9598, 0.52", "95.8863, 212.06, -53.0215, 0.29", "96.5918, 214.232, -53.1726, 0.29", "97.0482, 215.674, -53.2373, 0.96", "97.0988, 215.837, -53.2412, 0.96", "97.408, 216.85, -53.2396, 0.96", "98.1268, 219.254, -53.2875, 0.22", "98.2617, 219.697, -53.303, 0.66", "98.4595, 220.307, -53.2881, 0.66", "98.4871, 220.388, -53.2839, 0.66", "98.7394, 221.249, -53.2645, 0.66", "99.0939, 222.565, -53.282, 0.44", "99.1119, 222.649, -53.2896, 0.44", "99.5126, 224.419, -53.4537, 0.44", "99.7791, 225.601, -53.5517, 1.33", "100.131, 227.217, -53.6337, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "7.77595, 33.3279, -19.3809, 1.18", "6.52152, 34.0572, -20.5601, 1.18", "5.80895, 34.4247, -21.2221, 1.18", "5.04043, 34.7571, -21.8711, 0.88", "3.82489, 35.2354, -22.843, 0.66", "2.68138, 35.6171, -23.6863, 1.18", "1.85267, 35.863, -24.2642, 1.4", "0.447286, 36.1582, -25.0982, 0.52", "-0.47388, 36.2356, -25.622, 0.52", "-0.602007, 36.2246, -25.6832, 0.52", "-1.42667, 35.9454, -25.9815, 1.33", "-1.476, 35.9044, -26.0051, 1.33", "-1.88877, 35.4376, -26.4579, 1.33", "-1.92021, 35.3972, -26.5031, 1.33", "-2.35792, 34.8606, -27.1996, 0.81", "-2.66226, 34.5115, -27.7239, 0.81", "-3.49195, 33.5789, -29.2254, 0.88", "-4.91873, 32.021, -31.8192, 0.88", "-4.94867, 31.9908, -31.8711, 0.88", "-5.60327, 31.3638, -32.9498, 0.88", "-6.43158, 30.6473, -34.2269, 0.66", "-6.75866, 30.3937, -34.6833, 0.44", "-6.80543, 30.361, -34.7353, 0.44", "-7.45537, 29.9131, -35.2699, 0.44", "-7.50316, 29.882, -35.3067, 0.44", "-7.81674, 29.6988, -35.5219, 0.88", "-8.27307, 29.4023, -35.7827, 0.88", "-9.35026, 28.525, -36.4837, 0.44", "-9.38924, 28.479, -36.5154, 0.44", "-9.62234, 28.0889, -36.8559, 0.44", "-9.65783, 28.0165, -36.9231, 0.44", "-9.93127, 27.1249, -37.7231, 0.44", "-10.0376, 26.7245, -38.0831, 1.18", "-10.2928, 25.7231, -38.992, 1.18", "-10.7815, 23.9764, -40.5979, 0.37", "-10.7978, 23.9283, -40.6441, 0.37", "-11.1354, 23.1405, -41.5128, 0.37", "-11.8318, 21.8013, -43.1813, 0.37", "-11.8858, 21.7164, -43.2872, 0.37", "-12.22, 21.2629, -43.824, 1.11", "-12.9551, 20.3946, -44.6894, 1.11", "-14.0273, 19.2444, -45.8121, 0.44", "-14.0863, 19.1896, -45.8755, 0.44", "-14.7859, 18.5265, -46.6719, 0.44", "-15.0013, 18.3231, -46.9243, 1.11", "-15.6813, 17.7234, -47.6586, 1.4", "-15.7287, 17.6808, -47.7032, 1.4", "-17.2821, 16.2359, -48.9765, 0.29", "-17.6787, 15.8631, -49.3139, 0.29", "-17.7227, 15.828, -49.352, 0.29", "-18.544, 15.2596, -50.0285, 0.29", "-19.4746, 14.6897, -50.8266, 0.74", "-19.7708, 14.5167, -51.0645, 0.74", "-19.87, 14.4617, -51.1365, 0.74", "-21.5888, 13.6572, -52.5834, 0.37", "-21.6338, 13.6385, -52.6289, 0.37", "-22.7301, 13.2284, -53.8291, 1.11", "-23.0499, 13.1257, -54.1894, 1.11", "-23.1852, 13.0841, -54.3442, 1.11", "-24.7331, 12.5911, -56.0742, 0.37", "-26.57, 11.9478, -58.1593, 0.37", "-27.0758, 11.7723, -58.7178, 1.11", "-28.2466, 11.411, -59.9193, 0.37", "-28.2926, 11.3975, -59.9654, 0.37", "-28.8736, 11.2519, -60.5471, 0.37", "-29.7146, 11.1356, -61.4523, 0.37", "-29.7589, 11.1376, -61.5015, 0.37", "-30.8219, 11.3029, -62.7778, 0.29", "-30.8605, 11.3128, -62.8314, 0.29", "-32.1223, 11.6884, -64.6376, 1.47", "-33.2616, 12.0481, -66.2722, 0.74", "-33.6305, 12.1489, -66.7805, 0.74", "-33.6695, 12.1566, -66.8344, 0.74", "-34.9175, 12.2223, -68.5809, 0.37", "-35.5617, 12.1336, -69.3882, 0.37", "-36.1524, 11.8633, -69.8603, 0.37", "-36.6833, 11.5479, -70.2162, 0.37", "-36.8027, 11.4723, -70.2932, 0.37", "-37.5498, 11.0049, -70.7302, 0.37", "-37.6736, 10.9219, -70.8026, 0.37", "-38.7718, 10.2832, -71.8388, 0.74", "-39.8998, 9.71895, -73.2066, 0.22", "-40.3458, 9.49835, -73.8094, 0.22", "-40.378, 9.48215, -73.8548, 0.22", "-41.4069, 8.96107, -75.3577, 0.66", "-43.541, 7.86518, -78.3758, 1.55", "-44.7822, 7.19897, -80.1335, 0.37", "-45.1116, 7.03001, -80.5689, 0.22", "-45.4841, 6.85191, -81.0676, 0.22", "-45.6346, 6.78388, -81.2624, 0.22", "-46.7382, 6.36059, -82.5294, 0.22", "-46.7929, 6.33773, -82.5616, 0.22", "-48.2386, 5.88584, -82.8906, 1.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-7.81154, 42.1581, -5.12502, 2.14", "-8.14653, 43.309, -6.93631, 2.14", "-8.15852, 43.3352, -6.96934, 2.14", "-8.32258, 43.6943, -7.42118, 2.14", "-8.34663, 43.7469, -7.48741, 2.14", "-8.89487, 44.9468, -8.99735, 2.14", "-9.08283, 45.3582, -9.51504, 2.5", "-9.58894, 46.2225, -10.3902, 2.8" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-7.81154, 42.1581, -5.12502, 0.59", "-8.65967, 42.9517, -4.93894, 0.59", "-9.39126, 43.6262, -4.75766, 0.59", "-9.43672, 43.6634, -4.74686, 0.59", "-10.2719, 44.2733, -4.56718, 0.59", "-11.3118, 44.9791, -4.25207, 0.59", "-11.9421, 45.3897, -4.03661, 0.59", "-11.9838, 45.4138, -4.02218, 0.59", "-13.1269, 46.0518, -3.58343, 0.96", "-13.7964, 46.4153, -3.32041, 0.96", "-15.011, 47.06, -2.82419, 1.03", "-15.4607, 47.3147, -2.64131, 1.03", "-15.9818, 47.6348, -2.46065, 0.74", "-16.3109, 47.8597, -2.35401, 0.52", "-16.7676, 48.2064, -2.22831, 0.52", "-17.1116, 48.4684, -2.1641, 0.37", "-17.3934, 48.6735, -2.14815, 0.37", "-17.9186, 48.9939, -2.11238, 0.37", "-18.1568, 49.1162, -2.09516, 0.66", "-18.8834, 49.4471, -2.04343, 0.66", "-19.2529, 49.6041, -2.01852, 0.22", "-19.3151, 49.6293, -2.01341, 0.22", "-20.2293, 49.9904, -1.93026, 0.22", "-20.8542, 50.2422, -1.87866, 0.29", "-21.2587, 50.4083, -1.85173, 0.52", "-21.7123, 50.5846, -1.79695, 0.52", "-22.1426, 50.7404, -1.72728, 0.52", "-22.197, 50.7563, -1.71158, 0.52", "-22.6089, 50.8344, -1.45503, 0.22", "-23.075, 50.8862, -1.08388, 0.22", "-23.7798, 50.966, -0.471777, 0.22", "-23.8363, 50.9726, -0.420066, 0.22", "-24.8503, 51.0765, 0.466455, 1.55", "-26.3341, 51.1998, 1.66886, 0.29", "-26.3872, 51.2057, 1.70905, 0.29", "-26.9476, 51.2925, 2.09384, 0.29", "-27.0469, 51.3154, 2.15214, 0.29", "-28.0273, 51.5919, 2.63708, 0.29", "-28.6621, 51.8405, 2.86169, 0.29", "-29.2791, 52.1427, 2.96119, 0.29", "-29.3281, 52.1732, 2.97482, 0.29", "-29.846, 52.7015, 3.28843, 0.29", "-29.8722, 52.7449, 3.31957, 0.29", "-30.1402, 53.4254, 3.8488, 0.29", "-30.1599, 53.4647, 3.88847, 0.29", "-30.3253, 53.6859, 4.17032, 0.29", "-30.3575, 53.7167, 4.221, 0.29", "-31.0117, 54.2594, 5.30653, 0.29", "-31.0342, 54.2818, 5.34539, 0.29", "-31.3713, 54.6505, 5.92568, 1.03", "-31.3952, 54.6821, 5.96995, 1.03", "-31.8471, 55.4177, 6.87192, 0.74", "-32.2294, 56.1665, 7.6397, 0.15", "-32.4852, 56.7631, 8.22372, 0.15", "-32.5044, 56.8055, 8.26168, 0.15", "-32.7179, 57.2383, 8.68008, 0.81", "-32.9023, 57.5872, 9.03993, 1.18", "-33.094, 57.9432, 9.39439, 1.18", "-33.8564, 59.2324, 10.6687, 1.25", "-34.1214, 59.6553, 11.1067, 1.25", "-34.8958, 60.983, 12.4521, 0.37", "-34.9164, 61.0238, 12.491, 0.37", "-35.184, 61.6521, 13.0265, 0.37", "-35.5145, 62.577, 13.6984, 0.37", "-35.5366, 62.6507, 13.7373, 0.37", "-35.8069, 63.6926, 14.2097, 0.37", "-35.9984, 64.5777, 14.5915, 1.33", "-36.1276, 65.0789, 14.8556, 1.77", "-36.1416, 65.1284, 14.8874, 1.77", "-36.2669, 65.5054, 15.16, 1.77", "-36.2842, 65.5435, 15.1893, 1.77", "-37.1015, 66.7977, 16.2181, 0.44", "-37.6446, 67.4753, 16.8178, 0.44", "-37.671, 67.506, 16.8492, 0.44", "-37.8893, 67.7596, 17.101, 0.81", "-38.0524, 67.9505, 17.2836, 0.81", "-38.2918, 68.2363, 17.5148, 0.81", "-38.3419, 68.2993, 17.5488, 0.81", "-38.9838, 69.1225, 18.1252, 0.59", "-39.3428, 69.5696, 18.464, 0.59", "-39.3765, 69.6071, 18.4961, 0.59", "-39.6305, 69.8616, 18.7316, 0.59", "-40.2999, 70.3801, 19.2776, 0.66", "-41.0319, 70.9034, 19.8077, 0.29", "-41.0775, 70.931, 19.8319, 0.29", "-41.5528, 71.1274, 20.1058, 0.59", "-41.5953, 71.1378, 20.1296, 0.59", "-42.2829, 71.047, 20.477, 0.81", "-47.3414, 76.08, 24.9658, 0.81", "-52.1636, 80.5818, 30.1695, 0.81", "-57.0941, 85.9191, 34.4786, 0.81", "-60.3693, 92.1815, 39.2134, 0.81", "-62.9154, 99.0867, 43.5705, 0.81", "-65.137, 105.76, 48.4074, 0.81", "-66.443, 112.835, 53.0555, 0.81", "-67.9669, 119.346, 58.3415, 0.81", "-68.891, 126.475, 63.0065, 0.81", "-69.9868, 133.602, 67.6374, 0.81", "-71.1214, 139.623, 73.5148, 0.81", "-73.0749, 145.872, 78.944, 0.81", "-74.6229, 151.331, 85.2126, 0.81", "-76.6509, 156.645, 91.4568, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-30.6552, -42.1227, 10.5744, 0.22", "-38.5106, -49.4057, 15.129, 0.22", "-47.475, -55.9653, 18.4662, 0.22", "-56.1824, -62.75, 22.0664, 0.22", "-64.6831, -70.7242, 22.8014, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-30.6552, -42.1227, 10.5744, 0.22", "-37.0771, -47.9419, 14.2488, 0.22", "-43.6805, -54.0221, 17.1416, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "6.26179, -44.572, 5.64172, 0.81", "6.38945, -45.0525, 7.84369, 0.81", "6.39776, -45.0768, 7.91195, 0.81", "6.57356, -45.6497, 9.02933, 1.47", "6.61872, -45.8228, 9.28716, 1.47", "6.93286, -47.1594, 10.9771, 0.59", "7.06095, -47.7954, 11.6615, 0.52", "7.2497, -48.6627, 12.2619, 0.52", "7.39639, -49.4779, 12.7037, 1.11", "7.49639, -50.1278, 12.9448, 1.11", "7.51941, -50.2835, 12.9802, 1.11", "7.64451, -51.1147, 13.0213, 0.81", "7.75045, -51.8038, 13.0303, 0.81", "7.77089, -51.9183, 13.0285, 0.81", "7.87615, -52.463, 13.0776, 1.03", "8.11659, -53.4207, 13.2647, 0.52", "8.13794, -53.4877, 13.2918, 0.52", "8.42866, -54.1641, 13.8044, 0.52", "8.57185, -54.366, 14.1013, 0.44", "9.1409, -54.6833, 15.5142, 0.44", "9.47014, -54.6805, 16.2492, 0.44", "9.88352, -54.5826, 17.1115, 0.74", "9.91516, -54.569, 17.1755, 0.74", "10.2674, -54.3535, 17.8703, 0.74", "10.7728, -53.9557, 19.0278, 0.44", "11.1247, -53.6308, 19.9121, 0.44", "11.1482, -53.6099, 19.9889, 0.44", "11.4382, -53.4216, 21.1233, 0.44", "11.453, -53.4216, 21.1936, 0.44", "11.722, -53.9652, 23.2104, 0.44", "11.7269, -54.0286, 23.3018, 0.44", "11.7086, -54.7729, 24.1001, 0.44", "11.7015, -55.4181, 24.6225, 1.33", "11.6818, -56.3306, 25.1492, 1.62", "11.6804, -57.0611, 25.4772, 1.62", "11.7, -58.6875, 26.0329, 0.66", "11.7032, -58.7478, 26.0573, 0.66", "11.797, -59.5263, 26.4422, 0.52", "12.0059, -60.3759, 26.9494, 0.52", "12.3781, -61.2713, 27.5789, 0.52", "12.4124, -61.333, 27.6245, 0.52", "13.1458, -62.3587, 28.3346, 0.44", "13.5179, -62.7755, 28.6835, 0.59", "14.2652, -63.285, 29.3451, 0.37", "14.3198, -63.3043, 29.3892, 0.37", "16.8975, -69.7482, 37.1938, 0.37", "20.035, -75.8054, 45.0727, 0.37", "22.9872, -81.2767, 53.4002, 0.37", "24.8177, -85.3139, 62.7351, 0.37", "29.1368, -89.4218, 71.175, 0.37", "34.5648, -91.8936, 79.5536, 0.37", "38.6664, -96.4966, 87.8691, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "6.26179, -44.572, 5.64172, 1.03", "6.28369, -44.587, 5.65361, 1.03", "6.35521, -44.6399, 5.69276, 1.03", "6.76535, -44.9495, 5.91751, 0.81", "7.28166, -45.3413, 6.20052, 0.81", "8.03589, -45.8922, 6.6132, 0.66", "8.33736, -46.1084, 6.77627, 0.96", "8.71576, -46.3739, 6.97927, 0.96", "9.16183, -46.6766, 7.2168, 0.96", "9.20485, -46.7027, 7.2395, 0.96", "9.65658, -46.9291, 7.47483, 0.96", "10.0018, -47.0322, 7.6516, 0.74", "10.2684, -47.0741, 7.78601, 0.37", "10.4931, -47.0709, 7.8997, 0.37", "10.9016, -47.0163, 8.10741, 0.37", "10.9437, -47.0083, 8.12907, 0.37", "11.5359, -46.8953, 8.43731, 0.37", "11.5721, -46.8918, 8.45695, 0.37", "11.9787, -46.8939, 8.68218, 0.37", "12.0615, -46.9072, 8.72876, 0.37", "12.5302, -47.0517, 8.99504, 0.37", "12.9886, -47.2548, 9.25648, 0.37", "13.5627, -47.5895, 9.53793, 1.33", "13.6001, -47.6161, 9.55356, 1.33", "14.0417, -47.9972, 9.65203, 1.77", "14.2001, -48.1409, 9.66935, 1.77", "14.6296, -48.5483, 9.67414, 1.77", "15.0918, -48.9736, 9.65293, 0.52", "15.6621, -49.4629, 9.61863, 0.52", "16.6826, -50.2607, 9.58883, 0.52", "17.0165, -50.4909, 9.58742, 0.52", "17.0583, -50.5154, 9.58941, 0.52", "17.4275, -50.6763, 9.63819, 0.66", "17.8981, -50.796, 9.76981, 0.74", "18.2315, -50.8002, 9.89441, 0.96", "18.52, -50.7579, 10.0318, 0.96", "18.8116, -50.6954, 10.1707, 0.81", "19.111, -50.6216, 10.3142, 0.81", "19.6982, -50.4703, 10.5984, 0.59", "20.1943, -50.3731, 10.8429, 0.44", "20.2378, -50.3673, 10.8625, 0.44", "20.5944, -50.3685, 11.0146, 0.37", "20.9224, -50.4275, 11.1406, 0.29", "21.3726, -50.5732, 11.3036, 0.29", "21.9873, -50.8309, 11.5032, 0.29", "22.4313, -51.0391, 11.6428, 1.11", "23.1925, -51.3925, 11.8811, 1.84", "24.2589, -51.9123, 12.2539, 2.21", "24.9855, -52.2712, 12.5289, 2.21", "25.6625, -52.6119, 12.8089, 1.11", "26.2018, -52.8885, 13.0858, 0.59", "26.6495, -53.1244, 13.3753, 0.37", "27.211, -53.4081, 13.8079, 0.74", "27.239, -53.4228, 13.8348, 0.74", "27.5695, -53.583, 14.1862, 0.74", "28.1285, -53.8446, 14.8271, 0.44", "28.5996, -54.0462, 15.3231, 0.44", "28.6383, -54.0614, 15.359, 0.44", "29.0386, -54.1784, 15.6549, 1.25", "29.616, -54.3081, 15.9944, 1.25", "29.7519, -54.3298, 16.0559, 1.25", "30.2484, -54.3916, 16.2223, 1.47", "30.3459, -54.3997, 16.2532, 1.47", "31.007, -54.4613, 16.4863, 0.96", "31.6518, -54.5236, 16.7306, 0.37", "32.1359, -54.6034, 16.9713, 0.37", "32.1926, -54.6161, 17.0064, 0.37", "32.8715, -54.8122, 17.523, 0.37", "33.3028, -54.9846, 17.9105, 0.37", "33.3282, -54.9989, 17.9391, 0.37", "33.8802, -55.4111, 18.6721, 0.37", "33.9536, -55.4771, 18.7746, 0.66", "33.9826, -55.5054, 18.8124, 0.66", "34.2754, -55.8198, 19.1429, 0.66", "34.3061, -55.8479, 19.1682, 0.66", "34.6704, -56.1483, 19.4149, 0.29", "34.7064, -56.1749, 19.4339, 0.29", "35.127, -56.4468, 19.6116, 0.22", "35.605, -56.7363, 19.7864, 0.22", "35.9159, -56.9065, 19.8874, 0.96", "36.0041, -56.9537, 19.9145, 0.96", "36.5682, -57.243, 20.0409, 1.18", "37.4288, -57.6712, 20.1906, 1.18", "37.4779, -57.6956, 20.197, 1.18", "37.8752, -57.8988, 20.246, 1.33", "38.3885, -58.1777, 20.3097, 1.18", "39.1736, -58.6459, 20.4226, 1.03", "39.2194, -58.6766, 20.4274, 1.03", "39.6371, -58.9857, 20.4793, 0.52", "40.218, -59.4186, 20.5597, 0.52", "40.263, -59.451, 20.5626, 0.52", "41.0676, -60.0403, 20.5907, 0.52", "41.8301, -60.6341, 20.6175, 1.4", "42.4688, -61.1399, 20.6384, 2.06", "43.0024, -61.5669, 20.6483, 2.5", "44.0256, -62.3736, 20.6402, 0.29", "44.6055, -62.8185, 20.6379, 0.29", "45.1118, -63.1746, 20.6264, 0.29", "45.4388, -63.3759, 20.6317, 0.29", "45.4812, -63.3995, 20.6312, 0.29", "46.2101, -63.792, 20.6372, 1.18", "46.4723, -63.9311, 20.6541, 1.18", "47.2539, -64.3486, 20.6898, 0.44", "48.0562, -64.8015, 20.7173, 0.44", "48.6376, -65.1927, 20.7384, 0.29", "49.139, -65.5928, 20.7435, 0.29", "49.3748, -65.8103, 20.7481, 0.81", "49.7138, -66.1214, 20.7338, 0.81", "49.7493, -66.155, 20.7308, 0.81", "50.1946, -66.4958, 20.6627, 0.81", "50.9643, -66.8723, 20.5905, 0.29", "51.475, -66.9901, 20.586, 0.29", "52.2842, -67.0567, 20.6646, 0.29", "52.3379, -67.0576, 20.6752, 0.29", "52.8717, -67.0471, 20.8217, 1.18", "53.3855, -67.026, 21.0085, 1.62", "54.0804, -67.0076, 21.337, 1.33", "54.5369, -67.0231, 21.5773, 0.44", "55.1223, -67.0627, 21.9221, 0.37", "55.205, -67.0692, 21.9703, 0.37", "55.6664, -67.1158, 22.236, 0.37", "55.7964, -67.1288, 22.3095, 0.37", "56.4032, -67.2122, 22.649, 0.37", "56.8144, -67.2803, 22.8739, 0.37", "57.4254, -67.3824, 23.2127, 0.37", "57.4722, -67.3934, 23.2389, 0.37", "57.771, -67.4796, 23.4075, 0.66", "58.1081, -67.6252, 23.5902, 0.66", "58.5564, -67.9371, 23.8199, 0.66", "58.6672, -68.0406, 23.8733, 0.66", "59.0996, -68.5052, 24.0711, 0.66", "59.1357, -68.5448, 24.0872, 0.66", "59.496, -68.9604, 24.2407, 0.59", "59.8843, -69.4171, 24.3953, 0.59", "60.461, -70.127, 24.6171, 0.59", "60.4911, -70.1642, 24.6286, 0.59", "60.8239, -70.5681, 24.7578, 1.25" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-6.09164, -58.3277, -3.35089, 2.06", "-5.2514, -61.2449, -3.72425, 2.06", "-4.90041, -62.7213, -3.77524, 1.25", "-4.64202, -63.9785, -3.75511, 1.25", "-4.62962, -64.0464, -3.75195, 1.25", "-4.40396, -65.4362, -3.70023, 0.59", "-4.19809, -66.9151, -3.65495, 0.59", "-4.15126, -67.4097, -3.59178, 0.74", "-4.08933, -68.3204, -3.50199, 0.74", "-4.04096, -69.7025, -3.46753, 0.74", "-4.02068, -70.9377, -3.52289, 0.74", "-4.0268, -71.5285, -3.59, 1.11", "-4.0293, -71.6075, -3.6004, 1.11", "-4.06218, -72.3958, -3.70386, 1.11", "-4.12514, -73.5197, -3.84565, 0.44", "-4.17465, -74.3199, -3.93088, 0.29", "-4.26106, -76.6116, -4.06892, 0.29", "-4.2601, -76.6913, -4.07198, 0.29", "-4.24386, -77.1501, -4.08153, 0.44", "-4.19078, -77.8345, -4.07541, 0.74", "-4.10089, -78.5719, -4.04117, 1.47", "-3.88058, -79.914, -3.98175, 1.77", "-3.60545, -81.442, -3.96124, 1.77", "-3.59478, -81.511, -3.96153, 1.77", "-3.42935, -82.7289, -3.98468, 1.77", "-3.32774, -83.7975, -4.01002, 1.03", "-3.26327, -84.7357, -4.03464, 0.81", "-3.22889, -85.6145, -4.05583, 0.44", "-3.21365, -87.1396, -4.08373, 0.44", "-3.2139, -87.2088, -4.08485, 0.44", "-3.28334, -90.1279, -4.12191, 0.44", "-3.28534, -90.2077, -4.12179, 0.44", "-3.29549, -90.7309, -4.09715, 0.88", "-3.29665, -90.8006, -4.0906, 0.88", "-3.30931, -91.6078, -3.99742, 1.47", "-3.32541, -92.7944, -3.84827, 1.84", "-3.3404, -94.2583, -3.64237, 1.62", "-3.3526, -95.2594, -3.5056, 0.74", "-3.35794, -95.9187, -3.41667, 0.59", "-3.34893, -96.92, -3.28157, 0.44", "-3.31687, -98.209, -3.06839, 0.44", "-3.31303, -98.2872, -3.0533, 0.44", "-3.26735, -98.9207, -2.93107, 0.81", "-3.24817, -99.1221, -2.89491, 0.81", "-3.17514, -99.8913, -2.7503, 0.81", "-3.0955, -100.85, -2.57083, 0.29", "-3.04786, -101.459, -2.46345, 0.29", "-2.88633, -103.54, -2.12263, 0.22", "-2.88199, -103.609, -2.11281, 0.22", "-2.85465, -104.173, -2.05022, 1.03", "-2.82003, -105.197, -1.95713, 1.4", "-2.7877, -106.137, -1.895, 1.4", "-2.7877, -106.137, -1.895, 0.22", "-2.72694, -107.287, -1.79818, 0.22", "-2.64245, -108.946, -1.60398, 0.22", "-2.6273, -109.383, -1.54179, 1.11", "-2.61639, -110.201, -1.41108, 1.55", "-2.62449, -111.031, -1.26967, 2.21", "-2.64126, -111.913, -1.10467, 1.47", "-2.6593, -112.655, -0.948876, 0.22", "-2.67587, -113.61, -0.740708, 0.22", "-2.68002, -114.678, -0.519023, 0.22", "-2.67929, -114.746, -0.504989, 0.22", "-2.62311, -116.017, -0.260321, 0.22", "-2.61756, -116.086, -0.248694, 0.22", "-2.46916, -117.309, -0.0882186, 0.22", "-2.43542, -117.53, -0.0584287, 0.66", "-2.35124, -118.072, 0.0101104, 0.81", "-2.26481, -118.689, 0.0420349, 0.81", "-2.25018, -118.801, 0.0387199, 0.22", "-2.24575, -118.87, 0.0335149, 0.22", "-2.25107, -119.802, -0.0800067, 0.22", "-2.25259, -119.871, -0.0871777, 0.22", "-2.23485, -121.086, -0.311733, 0.22", "-2.23396, -121.154, -0.325053, 0.22", "-2.21533, -121.944, -0.480718, 0.22", "-2.20536, -122.236, -0.539364, 0.22", "-2.11716, -124.088, -0.928298, 0.22", "-1.98444, -127.064, -1.54456, 0.22" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-6.09164, -58.3277, -3.35089, 0.59", "-5.02457, -60.9865, -6.6433, 0.59", "-4.82862, -61.4748, -7.24789, 0.59", "-4.80375, -61.5368, -7.32461, 0.59", "-4.50977, -62.2694, -8.23168, 0.59", "-4.18908, -63.0685, -9.22114, 0.59", "-3.97648, -63.5982, -9.8771, 0.59" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "100.131, 227.217, -53.6337, 0.74", "100.249, 228.381, -53.618, 0.74", "100.341, 230.199, -53.7494, 0.22", "100.368, 231.331, -53.8828, 0.44", "100.421, 233.319, -54.1575, 0.22", "100.436, 233.881, -54.2407, 0.44", "100.439, 234.482, -54.3526, 0.44", "100.371, 236.02, -54.7939, 0.22", "100.363, 236.086, -54.8188, 0.22", "100.143, 237.431, -55.3754, 0.22", "100.13, 237.498, -55.3964, 0.22", "99.9892, 238.72, -55.6372, 0.88", "99.9612, 239.183, -55.6945, 0.88", "99.9322, 240.424, -55.7451, 0.15", "99.9322, 240.496, -55.7457, 0.15", "99.9532, 242.68, -55.6754, 0.15", "100.016, 244.852, -55.5247, 0.15", "100.045, 245.322, -55.4603, 1.03", "100.123, 246.559, -55.2379, 1.03", "100.2, 247.65, -54.9734, 0.22", "100.307, 249.409, -54.4741, 0.22", "100.352, 250.281, -54.1688, 0.22", "100.392, 251.382, -53.7179, 0.22", "100.455, 252.971, -53.0619, 0.22", "100.523, 254.541, -52.4503, 0.22", "100.525, 254.608, -52.4258, 0.22", "100.551, 255.692, -52.0735, 1.4", "100.58, 256.682, -51.8116, 0.15", "100.727, 259.793, -51.1535, 0.15", "100.795, 260.681, -50.9906, 1.11", "100.856, 261.385, -50.8827, 1.11", "100.905, 261.882, -50.8115, 0.22", "101.06, 263.218, -50.6411, 0.22", "101.375, 265.022, -50.409, 0.22", "101.411, 265.172, -50.388, 0.22", "101.559, 265.684, -50.3079, 0.96", "101.696, 266.112, -50.2447, 0.96", "101.911, 266.76, -50.1511, 0.22", "102.688, 269.086, -49.874, 0.22", "102.733, 269.223, -49.8632, 0.22", "102.841, 269.551, -49.833, 0.44", "102.957, 269.907, -49.7976, 0.22", "103.153, 270.517, -49.7307, 0.22", "103.174, 270.585, -49.7221, 0.22", "103.686, 272.45, -49.4592, 0.22", "103.808, 272.895, -49.396, 0.44", "103.828, 272.975, -49.3846, 0.44", "103.939, 273.41, -49.321, 0.44", "104.291, 274.726, -49.1353, 0.22", "104.305, 274.797, -49.125, 0.22", "104.366, 275.164, -49.0735, 0.44", "104.438, 275.523, -48.9855, 0.44", "104.455, 275.6, -48.9613, 0.44", "104.486, 275.732, -48.9144, 0.15", "104.939, 277.634, -48.1842, 0.15", "105.345, 279.342, -47.5111, 0.15", "105.703, 280.821, -46.9044, 0.44", "105.72, 280.886, -46.8771, 0.44", "105.947, 281.745, -46.4966, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "100.131, 227.217, -53.6337, 0.29", "100.844, 228.357, -54.0437, 0.29", "100.882, 228.422, -54.0787, 0.29", "101.761, 229.974, -55.0215, 0.29", "101.802, 230.046, -55.0662, 0.29", "102.835, 231.912, -56.2127, 0.29", "103.505, 233.127, -57.0601, 0.29", "104.278, 234.585, -58.1904, 0.96", "104.31, 234.646, -58.2369, 0.96", "104.714, 235.426, -58.8424, 0.96", "104.743, 235.487, -58.8893, 0.96", "105.521, 237.277, -60.1343, 0.37", "105.932, 238.285, -60.8053, 0.22", "106.436, 239.655, -61.5479, 0.22", "106.505, 239.87, -61.6558, 0.22", "106.946, 241.422, -62.396, 0.22", "107.147, 242.263, -62.7929, 0.59", "107.161, 242.341, -62.8213, 0.59", "107.381, 243.785, -63.2981, 0.96", "107.5, 244.545, -63.5195, 0.96", "107.521, 244.681, -63.5582, 0.96", "107.777, 246.362, -63.9613, 0.59", "107.937, 247.755, -64.3621, 0.52", "108.069, 249.267, -64.7819, 0.52", "108.074, 249.348, -64.8027, 0.52", "108.201, 251.411, -65.2764, 1.62", "108.263, 252.605, -65.5947, 1.99", "108.362, 254.204, -66.0462, 0.37", "108.48, 256.07, -66.6319, 0.37", "108.557, 256.991, -66.906, 0.74", "108.689, 258.18, -67.2226, 0.74", "108.974, 260.336, -67.7692, 0.22", "109.194, 261.818, -68.2536, 0.22", "109.348, 262.724, -68.5908, 0.66", "109.559, 263.923, -69.1068, 0.66", "109.579, 264.038, -69.1592, 0.66", "109.966, 266.223, -70.1756, 0.22", "110.459, 269.027, -71.3752, 0.22", "110.473, 269.112, -71.4163, 0.22", "110.51, 269.358, -71.5406, 1.03", "110.521, 269.432, -71.5775, 1.03", "110.579, 269.754, -71.7178, 1.03", "110.749, 270.419, -71.8842, 0.29", "110.77, 270.499, -71.8919, 0.29", "110.969, 271.371, -71.9632, 0.29", "111.186, 272.382, -72.0332, 0.29", "111.203, 272.476, -72.0381, 0.29", "111.333, 273.353, -72.0759, 0.29", "111.354, 273.541, -72.0795, 0.29", "111.471, 274.701, -72.0846, 0.81", "111.531, 275.494, -72.0658, 0.81", "111.558, 276.181, -72.0163, 0.15", "111.561, 276.277, -72.0092, 0.15", "111.605, 277.902, -71.8901, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-9.58894, 46.2225, -10.3902, 1.77", "-9.67073, 47.6204, -10.8849, 1.77", "-9.77662, 48.3113, -11.0776, 1.69", "-9.84909, 48.6418, -11.1831, 1.69", "-9.86515, 48.6978, -11.2007, 1.69", "-10.2141, 49.6959, -11.4981, 1.4", "-10.2329, 49.743, -11.5127, 1.4", "-10.5359, 50.3711, -11.6817, 1.25", "-11.0714, 51.4042, -11.9474, 1.25", "-11.4798, 52.1871, -12.1286, 1.18", "-11.9014, 52.9731, -12.2589, 1.18", "-12.3501, 53.7979, -12.3442, 1.18", "-12.7049, 54.4548, -12.37, 1.18", "-13.0996, 55.2032, -12.3683, 1.18", "-13.4309, 55.8434, -12.3299, 1.33", "-13.8697, 56.747, -12.2614, 1.33", "-14.1133, 57.287, -12.211, 1.03", "-14.4353, 58.0399, -12.1355, 1.03", "-14.7104, 58.7011, -12.0994, 0.81", "-14.7383, 58.7775, -12.1088, 0.81", "-14.8722, 59.1623, -12.2128, 0.81", "-14.9002, 59.2563, -12.254, 0.81", "-15.0593, 59.8186, -12.5367, 0.81", "-15.0703, 59.858, -12.557, 0.81", "-15.4393, 61.1192, -13.1505, 1.03", "-15.6182, 61.736, -13.451, 1.47", "-15.9355, 62.7873, -13.9666, 1.47", "-15.9523, 62.8401, -13.9911, 1.47", "-16.1589, 63.4427, -14.2525, 1.77", "-16.4291, 64.2083, -14.5686, 2.06", "-16.7566, 65.0992, -14.9296, 1.47", "-16.9339, 65.6185, -15.1376, 1.11", "-17.1646, 66.3542, -15.4132, 1.47", "-17.2968, 66.8546, -15.6061, 1.77", "-17.535, 67.8179, -15.9884, 1.99", "-17.7314, 68.6763, -16.3318, 2.28", "-18.0069, 69.9836, -16.8319, 2.28", "-18.2547, 71.3573, -17.3756, 2.5", "-18.4693, 72.7659, -17.9461, 2.87" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-9.58894, 46.2225, -10.3902, 1.03", "-9.75197, 46.2949, -10.4166, 1.03", "-10.7694, 46.7021, -10.5686, 1.03", "-11.495, 46.9557, -10.6788, 0.96", "-12.1078, 47.1405, -10.7769, 0.96", "-13.6307, 47.5583, -10.9998, 1.18", "-14.467, 47.7645, -11.0995, 1.18", "-15.4558, 47.9606, -11.1999, 1.18", "-16.5116, 48.1223, -11.2863, 1.18", "-17.695, 48.2598, -11.371, 1.18", "-18.7454, 48.3394, -11.4452, 1.18", "-19.8493, 48.3927, -11.5153, 1.18", "-20.8801, 48.4269, -11.5852, 1.18", "-21.8115, 48.4529, -11.6317, 1.55", "-22.4751, 48.4674, -11.6548, 1.92", "-23.5802, 48.4754, -11.6944, 1.92" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-76.6509, 156.645, 91.4568, 0.74", "-83.0429, 163.506, 97.8822, 0.74", "-90.1914, 170.08, 103.772, 0.74", "-98.3764, 177.021, 107.596, 0.74", "-107.079, 184.332, 108.805, 0.74" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-76.6509, 156.645, 91.4568, 0.52", "-79.1821, 164.618, 97.514, 0.74", "-80.4752, 172.987, 103.449, 0.74", "-80.6052, 181.519, 109.287, 0.74", "-81.4627, 190.542, 114.365, 0.74" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-64.6831, -70.7242, 22.8014, 0.29", "-73.314, -77.8573, 25.9297, 0.29", "-82.6093, -84.0332, 28.9931, 0.29", "-92.9847, -88.9455, 29.4671, 0.29", "-103.822, -92.6168, 29.9287, 0.29", "-114.689, -96.162, 30.5968, 0.29", "-125.952, -97.9201, 31.231, 0.29", "-137.361, -97.9627, 31.0716, 0.29", "-148.526, -96.9582, 28.8623, 0.29", "-159.215, -98.5856, 25.218, 0.29", "-168.967, -100.232, 19.5273, 0.29", "-177.367, -100.218, 11.775, 0.29", "-186.117, -101.295, 4.5234, 0.29", "-195.67, -102.184, -1.65946, 0.29", "-205.287, -102.7, -7.79267, 0.29", "-215.28, -104.321, -13.057, 0.29" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-64.6831, -70.7242, 22.8014, 0.29", "-75.6934, -79.8984, 25.1057, 0.29", "-87.6589, -87.82, 26.7211, 0.29", "-98.9306, -96.8764, 27.7251, 0.29", "-109.452, -106.773, 29.4989, 0.29", "-119.65, -117.155, 30.1975, 0.29", "-130.096, -127.031, 32.497, 0.29", "-140.085, -136.914, 36.3831, 0.29", "-151.511, -145.433, 38.9534, 0.29", "-161.074, -156.302, 40.9922, 0.29", "-171.087, -166.836, 42.2434, 0.29", "-181.421, -176.91, 40.6173, 0.29", "-191.091, -187.337, 37.6376, 0.29" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-43.6805, -54.0221, 17.1416, 0.29", "-51.8906, -59.1791, 18.8101, 0.29", "-60.8183, -63.1119, 19.5803, 0.29", "-70.3205, -64.7079, 18.2829, 0.29", "-79.4189, -67.1718, 15.8224, 0.29", "-88.8792, -68.6096, 14.1164, 0.29", "-98.347, -69.0571, 12.0155, 0.29", "-107.967, -68.0056, 11.2238, 0.29", "-117.466, -66.6273, 9.74614, 0.29", "-126.713, -63.5522, 9.80612, 0.29", "-136.212, -61.6649, 8.98953, 0.29", "-145.772, -60.0004, 9.49366, 0.29", "-155.423, -59.7673, 10.4942, 0.29", "-165.084, -59.1093, 11.1751, 0.29", "-174.772, -59.6996, 10.9418, 0.29", "-184.261, -61.604, 9.96405, 0.29", "-193.938, -62.3153, 9.5956, 0.29", "-203.575, -63.167, 8.74484, 0.29", "-213.118, -63.6222, 7.01917, 0.29", "-222.585, -65.547, 5.87783, 0.29", "-231.64, -67.8826, 3.15705, 0.29", "-241.036, -68.4053, 0.767635, 0.29", "-250.41, -67.9117, -1.70076, 0.29", "-259.717, -66.8687, -4.26065, 0.29", "-269.303, -66.1436, -5.60639, 0.29", "-278.996, -66.1994, -6.10544, 0.29", "-288.599, -67.0119, -4.91245, 0.29", "-297.759, -69.6481, -2.90221, 0.29", "-306.356, -73.3071, -0.0356274, 0.29", "-314.796, -76.414, 3.7366, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-43.6805, -54.0221, 17.1416, 0.29", "-50.9339, -61.7211, 21.7282, 0.29", "-56.9363, -69.6082, 27.6074, 0.29", "-65.1436, -75.3031, 33.1452, 0.29", "-75.348, -78.1517, 37.1796, 0.29", "-84.8221, -82.507, 41.7327, 0.29", "-94.4693, -87.6716, 44.9914, 0.29", "-103.313, -93.9922, 48.6431, 0.29", "-113.037, -99.6122, 50.8444, 0.29", "-123.304, -104.296, 52.5184, 0.29", "-133.705, -107.615, 55.6316, 0.29", "-144.087, -109.313, 59.7955, 0.29", "-153.242, -110.095, 66.3734, 0.29", "-161.019, -109.046, 74.5163, 0.29", "-168.43, -106.958, 82.8245, 0.29", "-175.396, -106.118, 91.693, 0.29", "-183.268, -104.109, 99.5823, 0.29", "-191.725, -104.232, 107.074, 0.29", "-198.891, -104.605, 115.803, 0.29", "-206.677, -103.621, 123.944, 0.29", "-213.898, -100.604, 132.167, 0.29", "-221.162, -96.1257, 139.721, 0.29", "-228.099, -91.9476, 147.731, 0.29", "-234.575, -87.6828, 156.082, 0.29", "-240.57, -84.8082, 165.285, 0.29", "-247.553, -82.6954, 173.954, 0.29", "-254.952, -80.8911, 182.332, 0.29", "-262.102, -77.7979, 190.592, 0.29", "-269.062, -73.463, 198.504, 0.29", "-277.291, -68.4664, 204.624, 0.29", "-284.809, -61.6002, 209.961, 0.29", "-293.319, -55.92, 215.056, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "60.8239, -70.5681, 24.7578, 0.52", "62.1437, -70.3717, 24.8079, 0.52", "63.3346, -70.2337, 24.8361, 0.52", "63.4239, -70.2292, 24.8421, 0.52", "64.8459, -70.2025, 24.973, 0.52", "66.2767, -70.1835, 25.1765, 0.52", "68.0137, -70.2151, 25.508, 0.52", "68.0998, -70.224, 25.5313, 0.52", "69.679, -70.554, 26.0133, 0.52", "69.8563, -70.5965, 26.0738, 0.52", "71.4622, -71.0467, 26.6856, 1.4", "72.7638, -71.4307, 27.2067, 0.52", "74.3604, -71.9484, 27.8927, 0.52", "77.0271, -72.8161, 29.0304, 0.52", "78.0609, -73.1311, 29.4656, 0.96", "78.8841, -73.3707, 29.81, 0.52", "78.9647, -73.3917, 29.8436, 0.52", "79.7705, -73.5288, 30.1831, 0.37", "80.3958, -73.5331, 30.4651, 0.37", "81.303, -73.3523, 30.9307, 0.37", "81.3812, -73.3336, 30.9708, 0.37", "82.4909, -73.0338, 31.5278, 0.37", "82.5685, -73.0093, 31.5662, 0.37", "83.9205, -72.5242, 32.229, 0.74", "85.0315, -72.1287, 32.771, 1.03", "85.8721, -71.8739, 33.1807, 0.81", "86.5932, -71.6775, 33.5611, 0.29", "87.895, -71.3534, 34.2921, 0.29", "89.164, -71.0863, 35.0511, 0.29", "89.3229, -71.0567, 35.1526, 0.29", "90.4058, -70.8946, 35.8572, 0.29", "91.4826, -70.7557, 36.5546, 0.29", "91.558, -70.7469, 36.6022, 0.29", "92.5317, -70.6501, 37.1983, 0.29", "93.7227, -70.484, 37.8759, 0.29", "94.414, -70.3307, 38.3008, 0.74", "95.507, -70.0145, 38.9993, 0.74", "96.2714, -69.7826, 39.4895, 0.29", "96.3432, -69.7613, 39.5392, 0.29", "97.1124, -69.5256, 40.12, 0.29", "98.5123, -69.0895, 41.1996, 0.29", "99.2476, -68.868, 41.7591, 0.29", "99.3188, -68.8491, 41.8107, 0.29", "99.8797, -68.7523, 42.1868, 0.59", "100.541, -68.6511, 42.5862, 0.59", "101.405, -68.5419, 43.0336, 0.37", "102.372, -68.4261, 43.4205, 0.37", "102.465, -68.4099, 43.4606, 0.37", "103.585, -68.1185, 43.9902, 0.37", "104.273, -67.895, 44.3468, 0.96", "104.36, -67.8708, 44.3963, 0.96", "105.034, -67.6719, 44.7846, 0.96", "105.568, -67.5126, 45.0614, 0.22", "106.518, -67.2719, 45.5111, 0.22", "106.599, -67.2544, 45.5453, 0.22", "108.22, -67.1945, 46.207, 0.22", "108.844, -67.2328, 46.4557, 0.81", "109.728, -67.3692, 46.8014, 0.81", "109.976, -67.4233, 46.8973, 0.22", "110.055, -67.4454, 46.9312, 0.22", "111.871, -67.958, 47.7782, 0.22", "112.533, -68.1699, 48.1271, 0.88", "112.916, -68.3034, 48.3489, 1.18", "112.99, -68.3298, 48.3928, 1.18", "113.801, -68.6028, 48.8792, 0.15", "113.878, -68.6222, 48.9206, 0.15", "115.306, -68.8383, 49.6087, 0.15", "116.348, -68.9262, 50.066, 0.81", "116.532, -68.9316, 50.1388, 0.81", "117.398, -68.8899, 50.4544, 1.18", "118.953, -68.7539, 50.9799, 0.22", "119.36, -68.72, 51.1237, 0.15", "119.486, -68.7104, 51.1707, 0.15", "120.878, -68.6819, 51.7268, 0.15", "121.492, -68.6826, 51.9943, 1.11", "122.639, -68.7288, 52.5418, 1.47", "123.476, -68.7692, 52.9879, 0.15", "124.385, -68.7775, 53.4819, 0.15", "124.464, -68.7729, 53.5253, 0.15", "125.457, -68.608, 54.0872, 0.15", "125.61, -68.579, 54.174, 0.15", "126.147, -68.4233, 54.4862, 0.15", "126.559, -68.3257, 54.7256, 0.59", "126.802, -68.2937, 54.8648, 0.59", "127.888, -68.2631, 55.4792, 0.59", "128.882, -68.3452, 55.9692, 0.59", "128.963, -68.3561, 56.0051, 0.59", "130.266, -68.6004, 56.5343, 0.59", "131.12, -68.7772, 56.8475, 0.88", "131.31, -68.8179, 56.9146, 0.88", "132.388, -69.0568, 57.2777, 0.22", "132.568, -69.0938, 57.3349, 0.22", "133.262, -69.2338, 57.5529, 0.22", "133.526, -69.2879, 57.6362, 0.22", "134.997, -69.6089, 58.1319, 0.22", "135.113, -69.636, 58.1752, 0.22", "136.006, -69.8767, 58.5584, 0.96", "136.098, -69.9039, 58.594, 0.96", "137.033, -70.2054, 58.9166, 0.96", "137.115, -70.2336, 58.9426, 0.96", "137.577, -70.4123, 59.076, 0.96", "137.698, -70.4624, 59.1121, 0.96", "138.531, -70.823, 59.3743, 0.22", "138.689, -70.8913, 59.4235, 0.22", "139.601, -71.2884, 59.7033, 0.22", "139.68, -71.3233, 59.7293, 0.22", "140.256, -71.5288, 59.8536, 0.74", "140.355, -71.5513, 59.8717, 0.74", "141.207, -71.6891, 60.0181, 1.03", "141.396, -71.707, 60.0438, 1.03", "141.977, -71.7217, 60.1108, 1.03", "143.565, -71.7042, 60.3173, 0.22", "145.424, -71.6171, 60.7411, 0.22", "145.508, -71.6129, 60.7701, 0.22", "146.388, -71.5641, 61.1546, 0.66", "146.823, -71.5413, 61.3481, 1.25", "147.604, -71.4998, 61.6286, 1.25", "149.282, -71.4421, 62.1676, 0.22", "150.741, -71.4244, 62.4868, 0.22", "150.842, -71.4245, 62.5037, 0.22", "152.616, -71.4749, 62.6963, 0.22", "154.711, -71.5883, 62.8158, 0.22", "154.888, -71.5974, 62.813, 0.22", "156.761, -71.6872, 62.6905, 0.22", "156.85, -71.6914, 62.6858, 0.22", "157.781, -71.7414, 62.6835, 0.22", "158.534, -71.7925, 62.7625, 1.03", "159.766, -71.876, 62.9836, 1.33", "160.615, -71.9215, 63.0566, 0.66", "161.714, -71.9713, 63.0029, 0.29", "161.816, -71.9764, 62.9925, 0.29", "163.021, -72.0627, 62.836, 0.29", "163.109, -72.0718, 62.8225, 0.29", "165.599, -72.5021, 62.5082, 0.96", "167.426, -72.8934, 62.3354, 0.96", "168.139, -73.0764, 62.3074, 0.15", "169.016, -73.3491, 62.3098, 0.15", "169.205, -73.4184, 62.3183, 0.15", "170.822, -74.1208, 62.563, 0.15", "171.455, -74.4598, 62.7451, 0.88", "171.966, -74.7238, 62.917, 0.88", "173.462, -75.3793, 63.3633, 0.22", "173.546, -75.4039, 63.3839, 0.22", "174.523, -75.5713, 63.5803, 0.22", "175.563, -75.576, 63.7359, 0.22", "176.585, -75.489, 63.872, 0.22", "176.995, -75.4051, 63.9044, 0.22", "177.899, -75.0947, 64.0061, 0.22", "177.983, -75.0618, 64.0149, 0.22", "178.865, -74.6207, 64.1021, 1.11", "178.945, -74.5804, 64.1154, 1.11", "180.507, -74.1534, 64.2301, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "60.8239, -70.5681, 24.7578, 0.44", "60.9805, -71.8368, 24.6213, 0.44", "61.2266, -73.4855, 24.4484, 0.44", "61.5733, -75.6716, 24.2185, 0.44", "61.8537, -77.3095, 24.0613, 0.44", "61.8835, -77.4848, 24.0458, 0.44", "62.3015, -79.8571, 23.8642, 0.29", "62.419, -80.5117, 23.8232, 0.29", "62.4359, -80.5982, 23.8201, 0.29", "62.6515, -81.7208, 23.7832, 0.29", "62.8579, -83.0056, 23.7361, 0.44", "62.9652, -83.9329, 23.7031, 1.18", "63.0447, -85.2369, 23.659, 1.33", "63.0684, -86.0281, 23.6162, 0.37", "63.0761, -87.3367, 23.5259, 0.37", "63.075, -87.4259, 23.5189, 0.37", "63.0579, -88.8157, 23.4133, 0.37", "63.0541, -89.1043, 23.3924, 0.81", "63.0497, -90.2237, 23.3228, 0.81", "63.0661, -91.235, 23.279, 0.29", "63.131, -92.7272, 23.2658, 0.29", "63.1892, -94.1339, 23.276, 0.29", "63.2005, -94.3966, 23.2827, 0.81", "63.2018, -94.486, 23.2845, 0.81", "63.1918, -95.2679, 23.2909, 0.81", "63.1524, -96.2399, 23.2823, 0.22", "63.0742, -97.4371, 23.251, 0.22", "63.0697, -97.5389, 23.2482, 0.22", "63.0614, -99.7536, 23.121, 0.22", "63.0794, -100.309, 23.0781, 1.03", "63.1282, -101.275, 22.9765, 1.4", "63.152, -101.679, 22.9237, 1.4", "63.2472, -103.058, 22.7373, 1.18", "63.3496, -104.269, 22.5366, 0.59", "63.4178, -104.928, 22.4062, 0.37", "63.5267, -106.111, 22.1484, 0.37", "63.6513, -107.719, 21.7717, 0.37", "63.6564, -107.805, 21.7517, 0.37", "63.7049, -108.927, 21.5179, 1.11", "63.7111, -109.027, 21.4989, 1.11", "63.8122, -110.129, 21.296, 1.77", "63.9317, -111.102, 21.1281, 1.92", "64.0986, -112.191, 20.9748, 1.25", "64.2858, -113.341, 20.8328, 0.66", "64.4517, -114.425, 20.7187, 0.52", "64.6567, -115.803, 20.5605, 0.52", "64.6676, -115.891, 20.5491, 0.52", "64.7385, -117.063, 20.4154, 0.52", "64.7238, -118.09, 20.3087, 1.4", "64.6625, -118.845, 20.2419, 1.77", "64.442, -120.324, 20.1442, 0.74", "64.172, -121.6, 20.1141, 0.44", "63.8581, -122.825, 20.1236, 0.37", "63.5621, -123.73, 20.187, 0.37", "63.5291, -123.825, 20.1997, 0.37", "63.0586, -125.195, 20.4474, 0.74", "62.6077, -126.611, 20.7582, 0.96", "62.5367, -126.873, 20.82, 0.96", "62.3075, -128.14, 21.0825, 0.44", "62.1047, -129.561, 21.4216, 0.44", "62.0955, -129.647, 21.4414, 0.44", "62.0414, -130.618, 21.6445, 0.81", "62.0373, -130.719, 21.6572, 0.81", "61.9955, -131.942, 21.7984, 1.18", "61.9711, -133.323, 21.9333, 0.74", "61.9641, -134.065, 22.019, 0.29", "61.9672, -134.981, 22.1254, 0.22", "61.9459, -136.131, 22.3147, 0.22", "61.8993, -137.36, 22.5423, 0.22", "61.8743, -137.754, 22.6207, 0.66", "61.8275, -138.681, 22.7245, 0.74", "61.7601, -139.755, 22.7941, 0.74", "61.6765, -141.235, 22.757, 0.22", "61.6066, -142.427, 22.6191, 0.22", "61.5836, -142.708, 22.5579, 0.22", "61.3669, -144.92, 21.9151, 0.22", "61.2792, -145.696, 21.6097, 0.88", "61.1505, -146.857, 21.0607, 0.88", "61.1085, -147.346, 20.7945, 0.59", "61.1029, -147.411, 20.757, 0.59", "61.0518, -147.899, 20.4881, 0.22", "60.9385, -148.794, 20.0629, 0.22", "60.8478, -149.489, 19.7694, 0.22", "60.8368, -149.572, 19.7384, 0.22", "60.6531, -151.397, 19.0175, 0.22", "60.5842, -152.408, 18.601, 0.96", "60.5076, -153.537, 18.1766, 1.33", "60.4386, -154.515, 17.8463, 1.33", "60.4331, -154.587, 17.8237, 1.33", "60.3065, -156.033, 17.4254, 0.37", "60.2261, -156.858, 17.2495, 0.22", "60.0595, -158.828, 16.8188, 0.22", "60.0036, -159.372, 16.6996, 0.66", "59.9095, -160.179, 16.5294, 0.81", "59.874, -160.452, 16.4745, 0.81", "59.7424, -161.363, 16.3143, 0.81", "59.6015, -162.379, 16.1138, 0.15", "59.3297, -164.74, 15.5488, 0.15", "59.3186, -164.827, 15.5321, 0.15", "59.2401, -165.263, 15.4974, 1.11", "59.0529, -166.005, 15.5422, 1.33", "58.8249, -166.714, 15.6736, 0.44", "58.5736, -167.405, 15.8818, 0.44", "58.1169, -168.627, 16.3775, 0.44", "57.4048, -170.69, 17.2143, 0.22", "57.006, -171.896, 17.7346, 0.74", "56.9834, -171.974, 17.7688, 0.74", "56.7782, -172.829, 18.1343, 0.74", "56.5437, -174.055, 18.6241, 0.22", "56.3799, -175.472, 19.0803, 0.22", "56.3488, -176.432, 19.3276, 0.74", "56.3672, -177.443, 19.5359, 1.03", "56.3954, -178.12, 19.6706, 0.81", "56.4086, -178.283, 19.7009, 0.22", "56.5445, -179.355, 19.9052, 0.22", "56.5598, -179.44, 19.9247, 0.22", "56.7291, -180.233, 20.1054, 0.22", "56.7957, -180.537, 20.182, 0.66", "56.988, -181.36, 20.4113, 0.66", "57.241, -182.423, 20.7171, 0.15", "57.4935, -183.464, 21.031, 0.15", "57.7164, -184.444, 21.3003, 0.15", "57.7378, -184.54, 21.3245, 0.15", "57.823, -184.946, 21.4074, 1.11", "57.9912, -185.876, 21.5438, 1.4", "58.0076, -185.976, 21.5535, 1.4", "58.1191, -186.993, 21.6343, 0.81", "58.1746, -187.644, 21.6843, 0.22", "58.2608, -188.599, 21.7601, 0.22", "58.3392, -190.315, 21.9574, 0.22", "58.3397, -190.431, 21.9743, 0.22", "58.3235, -191.267, 22.1172, 0.22", "58.3206, -191.341, 22.1321, 0.22", "58.2114, -193.309, 22.5998, 0.22", "58.1081, -194.873, 23.0332, 0.22", "58.0778, -195.261, 23.1522, 0.88", "58.0724, -195.345, 23.1786, 0.88", "58.0405, -195.891, 23.3605, 0.88", "57.9783, -196.881, 23.6603, 0.44", "57.9721, -196.98, 23.6846, 0.44", "57.9769, -198.236, 23.8956, 0.22", "57.9852, -198.694, 23.9606, 1.33", "57.9851, -198.784, 23.9672, 1.33", "57.9796, -199.895, 24.0188, 1.47", "57.9755, -201.043, 24.0245, 0.22", "57.9766, -201.719, 24.0191, 0.22", "57.9769, -201.795, 24.0161, 0.22", "57.9393, -204.391, 23.8859, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-3.97648, -63.5982, -9.8771, 0.29", "-4.39057, -65.0233, -9.95534, 0.29", "-4.86389, -66.6891, -10.091, 0.29", "-5.25382, -67.9756, -10.1892, 0.29", "-5.27484, -68.0453, -10.1937, 0.29", "-5.57281, -69.0266, -10.2463, 0.29", "-6.00256, -70.3907, -10.3291, 0.29", "-6.28998, -71.2838, -10.3467, 1.18", "-6.71387, -72.3824, -10.3715, 1.55", "-7.17971, -73.4911, -10.3892, 0.81", "-7.50482, -74.2016, -10.3913, 0.59", "-7.76181, -74.7303, -10.3871, 0.44", "-7.98039, -75.1635, -10.3752, 0.29", "-8.86098, -76.8743, -10.2684, 0.29", "-9.08103, -77.2915, -10.2423, 0.29", "-9.21515, -77.5302, -10.2241, 0.66", "-9.48984, -78.0341, -10.1764, 0.66", "-10.0564, -79.1972, -10.0256, 0.22" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-3.97648, -63.5982, -9.8771, 1.47", "-3.59894, -64.1535, -10.5874, 1.47", "-3.04038, -65.0096, -11.727, 1.77", "-2.34681, -66.1127, -13.4381, 1.77", "-1.33474, -67.756, -15.9254, 0.37", "-1.2997, -67.8123, -16.0067, 0.37", "-0.403188, -69.2816, -17.9528, 0.66", "-0.061871, -69.8721, -18.6831, 0.96", "1.30806, -72.3277, -21.3911, 0.44", "1.84483, -73.2744, -22.276, 1.33", "2.26576, -74.0294, -22.8199, 1.92", "2.80882, -75.1151, -23.4783, 2.21", "3.47941, -76.6434, -24.1856, 1.47", "4.05596, -78.1416, -24.7642, 0.52", "4.26676, -78.7852, -24.9363, 0.52", "4.77469, -80.4935, -25.398, 0.52", "5.12036, -81.7014, -25.7142, 0.52", "5.46532, -82.8578, -25.9925, 0.44", "5.91413, -84.1712, -26.2646, 0.88", "6.36545, -85.2682, -26.4797, 1.4", "6.90953, -86.3961, -26.6859, 1.4", "7.75492, -87.9122, -26.9261, 0.88", "8.54152, -89.1992, -27.142, 0.59", "9.50759, -90.7211, -27.3996, 0.59", "10.4097, -92.1823, -27.6518, 0.59", "10.8618, -92.9837, -27.7826, 0.74", "11.3183, -93.9935, -27.9801, 0.74", "11.6076, -94.9182, -28.1865, 0.52", "11.6274, -95.022, -28.2102, 0.52", "11.7526, -96.3549, -28.4883, 0.52", "11.805, -98.1245, -28.7905, 0.52", "11.7865, -100.136, -29.1497, 0.52", "11.7416, -101.718, -29.4417, 1.33", "11.7084, -102.811, -29.639, 1.84", "11.6695, -104.422, -29.9078, 2.43", "11.6263, -106.62, -30.2698, 1.92", "11.5813, -108.513, -30.5421, 1.18", "11.5763, -108.619, -30.5558, 1.18", "11.4552, -110.201, -30.7873, 0.66", "11.2354, -112.203, -31.1308, 0.52", "11.0665, -113.344, -31.352, 0.52", "10.7509, -115.203, -31.7365, 0.52", "10.4109, -117.09, -32.178, 0.52", "10.3869, -117.215, -32.2112, 0.52", "10.0562, -118.877, -32.7146, 0.52", "9.79966, -120.236, -33.1367, 1.11", "9.77679, -120.378, -33.1854, 1.11", "9.51423, -122.567, -33.9758, 1.84", "9.50328, -122.683, -34.015, 1.84", "9.38593, -123.998, -34.4422, 2.28", "9.29927, -125.49, -34.8918, 2.28", "9.18177, -128.434, -35.8508, 0.44", "9.10319, -129.643, -36.2318, 0.44", "8.97936, -130.821, -36.6269, 0.44", "8.96048, -130.975, -36.684, 0.44", "8.70954, -132.713, -37.4016, 0.44", "8.44998, -134.597, -38.195, 0.44", "8.16652, -136.628, -39.0082, 0.44", "7.85699, -138.369, -39.7027, 0.44", "7.78051, -138.736, -39.8433, 0.29", "7.72261, -138.964, -39.917, 0.29", "7.16075, -140.712, -40.3265, 0.29", "7.12351, -140.829, -40.3394, 0.29", "6.64146, -142.365, -40.4706, 0.29", "6.44619, -142.975, -40.4929, 1.03", "6.00668, -144.246, -40.5518, 1.4", "5.66964, -145.209, -40.6502, 1.4", "5.6333, -145.326, -40.6668, 1.4", "5.21839, -146.956, -40.9359, 0.44", "4.94151, -148.376, -41.2241, 0.44", "4.92056, -148.495, -41.2487, 0.44", "4.6366, -150.294, -41.6101, 0.44", "4.28794, -152.498, -42.0301, 0.44", "4.27085, -152.604, -42.0452, 0.44", "4.03346, -154.077, -42.1852, 1.62", "3.79107, -155.792, -42.2761, 2.14", "3.61273, -157.455, -42.284, 2.14", "3.60224, -157.578, -42.2816, 2.14", "3.50321, -159.086, -42.2657, 1.4", "3.49521, -159.321, -42.265, 0.22", "3.51817, -161.569, -42.1749, 0.22", "3.62282, -163.869, -41.9956, 0.22", "3.69879, -165.038, -41.8734, 0.96", "3.77245, -166.37, -41.758, 1.4", "3.82211, -167.332, -41.6898, 1.4", "3.90534, -169.099, -41.5532, 0.74", "3.94808, -170.416, -41.4296, 0.29", "4.0208, -172.594, -41.2053, 0.29", "4.12762, -174.927, -40.9733, 0.29", "4.1313, -175.035, -40.9713, 0.29", "4.14987, -176.1, -41.0425, 1.33", "4.15033, -176.207, -41.0606, 1.33", "4.1518, -177.485, -41.3328, 1.92", "4.1315, -178.831, -41.6878, 1.92", "4.06646, -180.458, -42.1082, 1.62", "4.05825, -180.562, -42.1385, 1.62", "3.9303, -181.728, -42.5015, 0.29", "3.7383, -183.248, -42.983, 0.29", "3.48449, -184.774, -43.4485, 1.47", "3.11814, -186.56, -44.0009, 1.47", "2.78851, -188.002, -44.3993, 0.66", "2.58254, -188.843, -44.6166, 0.37", "2.55881, -188.93, -44.6361, 0.37", "2.04464, -190.674, -44.9348, 0.29", "1.34968, -192.971, -45.1845, 0.22", "0.84735, -194.598, -45.3162, 0.22", "0.309085, -196.302, -45.3881, 0.22", "-0.395149, -198.537, -45.4504, 0.22", "-0.649059, -199.342, -45.4564, 0.88", "-0.925097, -200.341, -45.4229, 1.25", "-0.949482, -200.446, -45.4137, 1.25", "-1.10694, -201.282, -45.3491, 0.29", "-1.15046, -201.607, -45.3292, 0.29", "-1.183, -202.101, -45.3027, 0.22", "-1.03907, -205.602, -45.1796, 0.22", "-0.979061, -206.084, -45.1637, 0.59", "-0.716667, -207.185, -45.1395, 0.88", "-0.370073, -208.189, -45.1273, 0.88", "-0.141894, -208.765, -45.1215, 0.22", "0.857645, -210.733, -45.115, 0.22", "0.922757, -210.818, -45.1157, 0.22", "2.41388, -212.532, -45.1562, 0.22", "2.529, -212.642, -45.1623, 0.96" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-18.4693, 72.7659, -17.9461, 0.22", "-19.9446, 72.643, -14.9576, 0.22", "-20.0693, 72.6518, -14.7448, 0.22", "-20.1317, 72.6989, -14.6982, 0.22", "-20.4042, 72.9995, -14.6087, 0.37", "-20.9016, 73.674, -14.5289, 0.37", "-20.9622, 73.772, -14.5228, 0.37", "-21.3177, 74.5194, -14.5784, 0.37", "-21.9262, 76.1043, -14.7156, 0.29", "-21.9519, 76.1811, -14.723, 0.29", "-22.1467, 76.9478, -14.8786, 0.74", "-22.2667, 77.6482, -15.1415, 0.74", "-22.3501, 78.2992, -15.4525, 0.37", "-22.4499, 79.2305, -15.9545, 0.22", "-22.5512, 80.1389, -16.5061, 0.22", "-22.7986, 81.8894, -17.5867, 0.22", "-23.0794, 83.4254, -18.5718, 0.96", "-23.2464, 84.1638, -19.0543, 1.62", "-23.4869, 85.0976, -19.6533, 1.62", "-23.8111, 86.1774, -20.2791, 0.66", "-24.0071, 86.8082, -20.5828, 0.52", "-24.2072, 87.3957, -20.7511, 0.52", "-24.2838, 87.6337, -20.8034, 0.52", "-24.4041, 88.1303, -20.9752, 0.52", "-24.4153, 88.204, -21.0084, 0.52", "-24.5706, 89.5457, -21.6902, 0.52", "-24.6665, 90.3649, -22.1169, 0.74", "-24.784, 91.4267, -22.6321, 0.74", "-24.9222, 92.9819, -23.481, 0.37", "-24.9278, 93.0408, -23.5163, 0.37", "-25.0774, 93.9382, -24.0793, 0.37", "-25.2557, 94.6561, -24.5617, 0.66", "-25.5315, 95.467, -25.1137, 0.66", "-26.1614, 96.9007, -25.9491, 0.29", "-26.2908, 97.1426, -26.0728, 0.29", "-26.938, 98.2955, -26.7105, 0.29", "-27.0229, 98.4397, -26.7987, 0.29", "-27.643, 99.4245, -27.416, 0.59", "-28.1618, 100.168, -27.8503, 0.81", "-28.6679, 100.901, -28.1673, 0.81", "-28.9838, 101.493, -28.4377, 0.22", "-29.0109, 101.565, -28.4653, 0.22", "-29.2197, 102.24, -28.7151, 0.22", "-29.2437, 102.324, -28.7467, 0.22", "-29.5345, 103.352, -29.146, 0.22", "-30.0616, 105.143, -29.8683, 0.22", "-30.8522, 107.585, -30.8434, 0.22", "-31.3661, 109.097, -31.4522, 0.88", "-31.8015, 110.302, -31.936, 1.69", "-32.1751, 111.254, -32.3076, 2.14", "-32.5442, 112.106, -32.6289, 0.29", "-33.0909, 113.133, -32.9641, 0.29", "-33.1322, 113.198, -32.9868, 0.29", "-33.6557, 113.956, -33.2055, 0.29", "-34.0552, 114.536, -33.3519, 0.29", "-34.1229, 114.635, -33.3759, 0.29", "-34.8339, 115.705, -33.6745, 0.29", "-35.3955, 116.591, -33.9615, 0.29", "-35.8261, 117.3, -34.2125, 0.74", "-36.1432, 117.857, -34.4231, 1.03", "-36.5793, 118.678, -34.7423, 1.03", "-37.0354, 119.558, -35.0798, 1.03", "-37.1913, 119.873, -35.2083, 0.22", "-37.2231, 119.93, -35.2314, 0.22", "-37.4663, 120.341, -35.3923, 0.22", "-37.5794, 120.535, -35.4638, 0.22", "-38.1073, 121.44, -35.7701, 0.22", "-38.7437, 122.531, -36.0839, 0.81", "-39.1803, 123.299, -36.3034, 0.81", "-39.623, 124.149, -36.5163, 0.81", "-39.9218, 124.781, -36.651, 0.22", "-39.9532, 124.855, -36.6643, 0.22", "-40.1918, 125.477, -36.7518, 0.22", "-40.2756, 125.708, -36.7744, 0.22", "-40.7825, 127.121, -36.9077, 0.22", "-41.1964, 128.105, -37.008, 0.22", "-41.4219, 128.577, -37.0555, 0.88", "-41.7188, 129.117, -37.1189, 0.88", "-41.7546, 129.174, -37.1325, 0.88", "-42.0609, 129.6, -37.2793, 0.52", "-42.6151, 130.265, -37.5899, 0.52", "-43.0363, 130.727, -37.8361, 0.88", "-43.5392, 131.263, -38.1313, 1.18", "-44.6057, 132.443, -38.7445, 0.29", "-44.9986, 132.907, -38.9593, 0.29", "-45.0736, 133.006, -38.9993, 0.29", "-45.575, 133.756, -39.2473, 0.29", "-45.6753, 133.92, -39.2878, 0.29", "-46.325, 135.132, -39.5427, 0.29", "-46.6801, 135.847, -39.6597, 0.52", "-46.9302, 136.391, -39.7505, 0.52", "-47.2359, 137.103, -39.8642, 0.22", "-47.7353, 138.351, -40.0564, 0.22", "-48.1974, 139.572, -40.2908, 1.62", "-48.5987, 140.699, -40.5436, 1.92", "-49.1516, 142.312, -40.9415, 0.22", "-49.6013, 143.638, -41.2929, 0.22", "-49.6515, 143.789, -41.3304, 0.22", "-50.0646, 144.974, -41.584, 0.59", "-50.1224, 145.127, -41.6024, 0.59", "-50.2638, 145.484, -41.6367, 0.59", "-50.4095, 145.807, -41.6554, 0.59", "-50.9345, 146.764, -41.679, 0.37", "-51.268, 147.409, -41.7239, 0.22", "-51.8317, 148.529, -41.8067, 0.22", "-52.0737, 149.204, -41.9816, 0.22", "-52.1461, 149.487, -42.0863, 0.22", "-52.2505, 150.297, -42.5163, 0.22", "-52.275, 151.494, -43.3882, 0.22", "-52.2728, 151.555, -43.4398, 0.22", "-52.1238, 153.468, -45.1941, 1.03", "-52.068, 154.252, -45.9289, 1.33", "-52.0023, 155.686, -47.3093, 0.37", "-51.9721, 156.931, -48.5578, 0.15", "-52.0085, 157.365, -49.0281, 0.15", "-52.0211, 157.418, -49.0869, 0.15", "-52.3735, 158.059, -49.784, 0.15", "-52.6699, 158.472, -50.2225, 0.15", "-52.7518, 158.566, -50.3018, 0.15", "-53.3459, 159.247, -50.8018, 0.15", "-53.9431, 160.028, -51.3527, 0.44", "-54.348, 160.622, -51.7505, 0.66", "-54.7663, 161.553, -52.3997, 0.44", "-54.8524, 161.801, -52.5595, 0.15", "-54.9163, 162.041, -52.7319, 0.15", "-55.0408, 162.63, -53.1763, 0.15", "-55.0525, 162.691, -53.2276, 0.15", "-55.4875, 164.539, -54.8745, 1.11", "-55.7527, 165.353, -55.6077, 1.11", "-56.2981, 166.715, -56.825, 0.29", "-56.4386, 167.02, -57.076, 0.29", "-56.5388, 167.214, -57.2178, 0.29", "-56.876, 167.836, -57.5676, 0.29", "-57.4488, 168.819, -57.914, 0.29", "-57.9402, 169.718, -58.1226, 0.96", "-58.4884, 170.745, -58.3074, 0.96", "-58.8119, 171.364, -58.4356, 0.59", "-59.241, 172.229, -58.7078, 0.59", "-59.4223, 172.614, -58.8618, 0.22", "-59.8943, 173.544, -59.3147, 0.22", "-60.4255, 174.469, -59.873, 0.88", "-60.9242, 175.212, -60.4141, 0.88", "-61.8756, 176.481, -61.4604, 1.18", "-62.2459, 176.938, -61.867, 0.22", "-62.8684, 177.7, -62.5358, 0.22", "-62.9023, 177.745, -62.5742, 0.22", "-63.34, 178.381, -63.0423, 0.22", "-63.3919, 178.468, -63.0966, 0.22", "-63.6306, 178.891, -63.2999, 0.59", "-63.8328, 179.314, -63.5663, 0.59", "-64.2541, 180.382, -64.3318, 0.81", "-64.3118, 180.515, -64.4251, 0.81", "-64.6833, 181.285, -64.966, 0.81", "-64.7172, 181.345, -65.0076, 0.81", "-65.5438, 182.663, -65.904, 0.81", "-65.5837, 182.723, -65.94, 0.81", "-66.5553, 184.108, -66.6685, 1.11", "-67.4075, 185.304, -67.2353, 1.11", "-67.9348, 186.028, -67.5421, 0.74", "-68.2082, 186.403, -67.6696, 0.22", "-69.037, 187.568, -68.0039, 0.22", "-69.1643, 187.767, -68.0716, 0.22", "-69.611, 188.563, -68.3691, 0.22", "-69.7243, 188.791, -68.4532, 0.59", "-70.1083, 189.64, -68.7726, 0.59", "-70.7963, 191.308, -69.4406, 0.44", "-71.2935, 192.595, -69.9791, 0.74", "-71.6177, 193.484, -70.3487, 1.47", "-71.925, 194.363, -70.7032, 1.77", "-72.1758, 195.106, -70.9833, 1.77", "-72.6, 196.461, -71.4137, 0.37", "-72.7141, 196.877, -71.5109, 0.22", "-72.7531, 197.032, -71.5423, 0.22", "-72.9457, 197.953, -71.7271, 0.22", "-72.9937, 198.202, -71.7738, 0.22", "-73.2046, 199.453, -71.9614, 0.22", "-73.3443, 200.333, -72.0451, 0.59", "-73.3571, 200.415, -72.0521, 0.59", "-73.5112, 201.317, -72.1245, 0.59", "-73.6383, 201.994, -72.174, 0.44", "-73.7812, 202.574, -72.1803, 0.74", "-73.9988, 203.259, -72.1401, 1.11", "-74.1984, 203.788, -72.0717, 0.44", "-74.4405, 204.387, -71.9776, 0.44", "-74.5475, 204.668, -71.9279, 0.44", "-74.948, 205.699, -71.7097, 0.37", "-75.0547, 205.968, -71.6474, 0.37", "-75.2995, 206.634, -71.4917, 0.37", "-75.3849, 206.888, -71.4343, 0.37", "-75.9211, 208.481, -71.1348, 0.37", "-76.1622, 209.228, -71.0245, 0.66", "-76.1866, 209.306, -71.0174, 0.66", "-76.4979, 210.291, -70.9359, 1.33", "-76.5246, 210.368, -70.9308, 1.33", "-76.9847, 211.547, -70.8878, 1.33", "-77.0347, 211.66, -70.8891, 1.33", "-77.382, 212.471, -70.9053, 0.29", "-77.4556, 212.643, -70.9062, 0.29", "-77.8086, 213.482, -70.8976, 0.29", "-77.8952, 213.705, -70.8918, 0.29", "-78.3351, 215.002, -70.8317, 0.29", "-78.5185, 215.582, -70.8008, 0.66", "-78.5896, 215.83, -70.7849, 0.66", "-78.7568, 216.501, -70.7405, 0.81", "-78.7941, 216.673, -70.729, 0.81", "-78.9132, 217.172, -70.7058, 0.81", "-79.0222, 217.589, -70.6971, 0.15", "-79.0576, 217.707, -70.6983, 0.15", "-79.4285, 218.844, -70.7179, 0.15", "-79.461, 218.932, -70.7147, 0.15", "-79.8817, 220.014, -70.6227, 0.52", "-79.9456, 220.176, -70.6024, 0.52", "-80.1261, 220.641, -70.534, 0.81", "-80.1517, 220.719, -70.523, 0.81", "-80.4447, 221.772, -70.3504, 0.66", "-80.5772, 222.342, -70.2538, 0.66", "-80.6661, 222.853, -70.1654, 0.22", "-80.6838, 223.001, -70.143, 0.22", "-80.7732, 224.301, -69.9743, 0.22", "-80.798, 224.802, -69.928, 0.44", "-80.8018, 224.895, -69.9198, 0.44", "-80.8492, 225.406, -69.8614, 0.44", "-80.986, 226.495, -69.714, 0.22", "-81.0102, 226.656, -69.6889, 0.22", "-81.2084, 227.708, -69.5236, 0.22", "-81.4214, 228.653, -69.4028, 0.44", "-81.6269, 229.475, -69.3119, 0.44", "-81.6484, 229.554, -69.3043, 0.44", "-81.6814, 229.675, -69.2999, 0.22", "-82.0528, 231.222, -69.3233, 0.22", "-82.1642, 231.877, -69.3717, 0.22", "-82.265, 232.821, -69.491, 0.22", "-82.2662, 232.891, -69.4993, 0.22", "-82.2528, 233.903, -69.6105, 0.22", "-82.2493, 233.985, -69.617, 0.22", "-82.1106, 235.254, -69.6747, 0.81", "-82.1033, 235.347, -69.6747, 0.81", "-82.0726, 236.372, -69.6317, 0.81", "-82.0867, 237.054, -69.5765, 0.81", "-82.1317, 237.682, -69.4991, 0.29", "-82.1392, 237.764, -69.4903, 0.29", "-82.2609, 239.144, -69.3663, 0.29", "-82.2755, 239.306, -69.3547, 0.29", "-82.3496, 240.503, -69.3707, 0.29", "-82.3526, 240.62, -69.3785, 0.29", "-82.3601, 241.719, -69.4986, 1.4", "-82.3509, 243.243, -69.6964, 1.4", "-82.3224, 244.388, -69.8681, 0.81", "-82.3007, 245.893, -70.1201, 0.44", "-82.3097, 246.675, -70.2613, 0.66", "-82.3137, 246.854, -70.3021, 0.29", "-82.3336, 247.268, -70.4221, 0.29", "-82.3868, 247.856, -70.6151, 0.29", "-82.3987, 247.965, -70.6494, 0.29", "-82.6006, 249.23, -70.9863, 0.29", "-82.8337, 250.458, -71.2362, 0.59", "-82.8539, 250.548, -71.2493, 0.59", "-83.1461, 251.584, -71.3299, 0.59", "-83.1708, 251.662, -71.3327, 0.59", "-83.8096, 253.451, -71.3372, 0.37", "-84.3362, 254.702, -71.2056, 0.22", "-84.6887, 255.489, -71.0665, 0.22", "-85.6435, 257.562, -70.6518, 0.22", "-85.6789, 257.634, -70.6365, 0.22", "-86.5113, 259.228, -70.2949, 0.22", "-87.436, 260.859, -69.9419, 0.96", "-88.3997, 262.416, -69.6257, 1.25", "-88.4516, 262.491, -69.6088, 1.25", "-89.1422, 263.371, -69.3979, 1.25", "-89.6388, 263.959, -69.281, 0.37", "-90.1301, 264.492, -69.2063, 0.37", "-91.0974, 265.491, -69.1655, 0.29", "-91.8316, 266.195, -69.1339, 0.29", "-92.0958, 266.454, -69.1238, 0.88", "-93.1552, 267.499, -69.1005, 0.96", "-93.585, 267.904, -69.1141, 0.96", "-94.0292, 268.301, -69.1273, 0.15", "-94.0884, 268.355, -69.13, 0.15", "-94.5704, 268.795, -69.1311, 0.15", "-95.2126, 269.375, -69.1179, 0.15", "-96.3175, 270.372, -69.0728, 0.15", "-97.2157, 271.229, -69.0381, 0.15", "-97.8226, 271.805, -68.9777, 0.15", "-98.0831, 272.047, -68.9432, 0.15", "-98.8721, 272.782, -68.8153, 0.15", "-99.2888, 273.163, -68.7458, 1.47", "-100.154, 273.952, -68.6092, 1.47", "-101.313, 274.973, -68.4998, 0.29", "-101.864, 275.429, -68.4586, 0.29", "-102.093, 275.62, -68.4425, 0.29", "-102.837, 276.259, -68.3995, 0.29", "-103.036, 276.437, -68.395, 0.29", "-103.884, 277.257, -68.4174, 0.29", "-104.281, 277.716, -68.4611, 1.03", "-104.752, 278.295, -68.5121, 1.4", "-105.211, 278.844, -68.5663, 1.4", "-105.598, 279.298, -68.6157, 0.29", "-105.652, 279.358, -68.623, 0.29", "-106.668, 280.536, -68.7763, 0.29", "-107.666, 281.741, -68.9387, 0.29", "-108.318, 282.57, -69.0536, 0.29", "-108.688, 283.053, -69.1189, 0.29", "-108.736, 283.117, -69.1264, 0.29", "-109.836, 284.583, -69.2763, 0.29", "-109.949, 284.739, -69.2885, 0.29", "-110.596, 285.713, -69.3325, 0.29", "-110.742, 285.938, -69.3392, 0.29", "-110.992, 286.306, -69.3495, 0.29", "-111.102, 286.464, -69.3531, 0.29", "-111.566, 287.078, -69.2906, 0.29", "-111.64, 287.185, -69.2794, 0.29", "-112.47, 288.412, -69.164, 0.74", "-112.518, 288.478, -69.1627, 0.74", "-112.896, 288.959, -69.1814, 1.18", "-113.828, 290.2, -69.2819, 0.29", "-114.416, 291.011, -69.3758, 0.29", "-114.824, 291.609, -69.425, 0.29", "-115.739, 293.044, -69.4987, 0.29", "-115.803, 293.167, -69.4966, 0.29", "-116.112, 294.023, -69.414, 0.29", "-116.132, 294.136, -69.3699, 0.29", "-116.318, 295.542, -68.4773, 0.29", "-116.391, 295.989, -68.1941, 0.29", "-116.573, 296.808, -67.6652, 0.29", "-116.738, 297.316, -67.3515, 0.52", "-117.431, 298.808, -66.5715, 0.29", "-117.517, 298.967, -66.5054, 0.29", "-118.356, 300.398, -66.1026, 0.29", "-118.569, 300.769, -66.0173, 0.15", "-118.66, 300.926, -65.992, 0.15", "-119.322, 302.2, -65.8405, 0.15", "-119.348, 302.277, -65.8356, 0.15", "-119.576, 303.099, -65.7576, 0.96", "-119.722, 303.696, -65.6495, 0.96", "-119.75, 303.806, -65.6247, 0.96", "-119.957, 304.567, -65.4259, 0.22", "-120.831, 307.066, -64.4378, 0.22", "-120.862, 307.134, -64.4043, 0.22", "-121.342, 308.01, -63.9154, 0.44", "-121.65, 308.508, -63.6177, 0.66", "-121.691, 308.571, -63.5862, 0.66", "-122.742, 310.081, -62.8997, 0.15", "-122.831, 310.201, -62.8372, 0.15", "-123.609, 311.402, -62.2971, 0.15", "-123.666, 311.504, -62.2587, 0.15", "-124.642, 313.401, -61.3798, 0.15", "-124.77, 313.66, -61.253, 0.74", "-125.724, 315.62, -60.3204, 0.15", "-126.007, 316.158, -60.0378, 0.52", "-126.187, 316.473, -59.8372, 0.52", "-127.418, 318.587, -58.3839, 0.15", "-127.633, 318.939, -58.1211, 0.37", "-128.178, 319.816, -57.5548, 0.15", "-128.217, 319.878, -57.5205, 0.15", "-129.103, 321.337, -56.8594, 0.37", "-129.395, 321.85, -56.7001, 0.66", "-129.674, 322.441, -56.6477, 0.15", "-130.205, 323.783, -56.5862, 0.15", "-130.252, 323.94, -56.5719, 0.15", "-130.531, 325.102, -56.4557, 0.88", "-130.54, 325.172, -56.4487, 0.88", "-130.607, 326.032, -56.2921, 0.88", "-130.609, 326.112, -56.2723, 0.88", "-130.579, 327.968, -55.6389, 0.22", "-130.576, 328.131, -55.5728, 0.22", "-130.539, 330.018, -54.6159, 0.22", "-130.533, 330.33, -54.4573, 0.59" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-18.4693, 72.7659, -17.9461, 1.92", "-18.2599, 73.6837, -18.0602, 1.92", "-17.9106, 75.2146, -18.2505, 1.77", "-17.8905, 75.3025, -18.2614, 1.77" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-23.5802, 48.4754, -11.6944, 0.74", "-23.9327, 48.4562, -12.4697, 0.74", "-23.974, 48.458, -12.5516, 0.66", "-25.2724, 48.7137, -14.7661, 0.66", "-27.3155, 49.4284, -18.4232, 0.66", "-27.6122, 49.5574, -18.931, 0.66", "-28.392, 49.9328, -20.2254, 0.66", "-28.5677, 50.0392, -20.498, 1.03", "-29.3719, 50.5989, -21.6477, 1.03", "-30.6178, 51.5549, -23.1437, 0.74", "-31.3223, 51.9331, -23.6164, 0.44", "-31.3991, 51.9564, -23.6632, 0.44", "-32.5835, 51.9925, -24.3938, 0.44", "-32.6739, 51.9804, -24.4472, 0.44", "-33.9042, 51.6685, -25.1143, 0.44", "-34.7503, 51.4367, -25.5984, 1.4", "-35.7511, 51.1586, -26.296, 1.4", "-36.9515, 50.9588, -27.1851, 0.52", "-37.1771, 50.9397, -27.3655, 0.52", "-38.1251, 50.9988, -28.2052, 0.52", "-39.3318, 51.2633, -29.3399, 0.52", "-39.5211, 51.3228, -29.524, 0.52", "-41.1189, 51.9969, -31.3311, 0.52", "-41.1671, 52.0201, -31.3891, 0.52", "-42.1828, 52.5379, -32.6607, 0.88", "-42.8044, 52.8757, -33.4514, 0.88", "-42.87, 52.9121, -33.5265, 0.88", "-44.4662, 53.8816, -35.3858, 0.52", "-44.5874, 53.9669, -35.5201, 0.52", "-45.4861, 54.5353, -36.2656, 0.52", "-45.8519, 54.7468, -36.4881, 0.52", "-46.8076, 55.2575, -37.0979, 0.52", "-47.1548, 55.421, -37.312, 0.52", "-48.5706, 55.9036, -38.0949, 0.52", "-49.7812, 56.1815, -38.9356, 2.06", "-50.0171, 56.2104, -39.1283, 2.06", "-52.0417, 56.2393, -40.9348, 0.96", "-52.1943, 56.2254, -41.0982, 0.96", "-53.2129, 56.0518, -42.2984, 0.96", "-54.3419, 55.7769, -43.7496, 0.96", "-54.46, 55.7524, -43.9072, 0.96", "-55.1263, 55.6334, -44.7414, 0.96", "-56.3211, 55.5065, -46.0068, 0.44", "-57.1755, 55.5215, -46.8857, 0.44", "-57.4573, 55.5892, -47.1468, 0.44", "-58.0014, 55.8018, -47.5056, 0.44", "-58.2146, 55.9022, -47.6248, 0.44", "-59.136, 56.3888, -48.0205, 0.44", "-59.3239, 56.4872, -48.0816, 0.44", "-60.3113, 57.0525, -48.5732, 1.25", "-61.4335, 57.689, -49.2719, 1.62", "-61.5023, 57.729, -49.321, 1.62", "-62.7136, 58.4684, -50.2922, 1.62", "-62.7776, 58.5068, -50.3483, 1.62", "-64.5854, 59.6124, -52.0206, 0.37", "-64.6439, 59.6451, -52.0854, 0.37", "-65.2234, 59.9343, -52.8105, 0.37", "-65.2809, 59.951, -52.8814, 0.37", "-66.053, 59.9117, -53.9923, 0.37", "-66.1649, 59.884, -54.1539, 0.37", "-67.3853, 59.4437, -55.763, 0.37", "-67.5065, 59.3974, -55.925, 0.37", "-68.295, 59.1171, -56.9944, 0.37", "-70.0212, 58.7458, -59.4472, 0.37", "-70.0745, 58.7438, -59.5218, 0.37", "-70.8605, 58.8722, -60.4608, 0.37", "-70.9879, 58.9208, -60.6175, 0.37", "-71.7137, 59.3083, -61.5229, 0.37", "-72.675, 59.9552, -62.6636, 0.66", "-73.6142, 60.5655, -63.605, 1.25", "-74.5222, 61.1084, -64.4963, 1.25", "-76.397, 62.0989, -66.3615, 0.29", "-77.1872, 62.4397, -67.1009, 0.29", "-77.9846, 62.7133, -67.8508, 0.29", "-79.3791, 63.1322, -69.1206, 0.29", "-79.4557, 63.1539, -69.1904, 0.29", "-80.4082, 63.3994, -70.1105, 0.52", "-81.4609, 63.637, -71.1031, 0.81", "-82.7855, 63.9386, -72.4907, 0.81", "-82.846, 63.9556, -72.559, 0.81", "-83.5937, 64.2643, -73.5276, 0.81", "-85.0485, 65.0448, -75.4382, 0.52", "-85.1074, 65.0853, -75.5171, 0.52", "-85.7739, 65.6264, -76.4973, 1.18", "-86.1465, 65.9491, -77.0377, 1.18", "-87.1084, 66.6891, -78.4215, 0.74", "-87.6944, 67.0647, -79.188, 0.59", "-87.7635, 67.0963, -79.2619, 0.59", "-89.084, 67.522, -80.5641, 0.59", "-89.2029, 67.5517, -80.7015, 0.59", "-90.1926, 67.7334, -81.8985, 0.59", "-91.0235, 67.9037, -82.8663, 0.59", "-91.1029, 67.9355, -82.966, 0.59", "-91.5214, 68.2229, -83.5103, 0.59", "-92.7444, 69.7086, -85.1626, 0.59", "-92.8023, 69.7971, -85.2441, 0.59", "-93.1778, 70.5461, -85.8289, 0.59", "-93.6302, 71.3562, -86.4648, 0.37", "-93.6807, 71.4189, -86.5143, 0.37", "-94.1216, 71.7896, -86.7962, 0.29", "-94.963, 72.1772, -87.1039, 0.29", "-95.0818, 72.2122, -87.1487, 0.29", "-96.1091, 72.3799, -87.708, 0.52", "-96.5903, 72.429, -88.029, 0.52", "-96.6564, 72.4417, -88.0928, 0.52", "-97.4116, 72.653, -88.9525, 0.52", "-97.5465, 72.7032, -89.1084, 0.52", "-98.9076, 73.2726, -90.5781, 0.52", "-98.9633, 73.3011, -90.6457, 0.52", "-100.325, 74.0248, -92.3412, 0.52", "-101.326, 74.5654, -93.5918, 0.81", "-102.34, 75.1095, -94.8191, 1.4", "-103.164, 75.5271, -95.7384, 1.4", "-105.073, 76.3633, -97.5472, 1.18", "-105.446, 76.5074, -97.8704, 0.37", "-105.59, 76.5611, -97.9964, 0.37", "-106.303, 76.8716, -98.7399, 0.37", "-106.539, 77.002, -99.0127, 0.37", "-107.429, 77.6339, -99.9903, 0.37", "-107.507, 77.6974, -100.06, 0.37", "-108.88, 78.9668, -101.321, 0.37", "-109.041, 79.1277, -101.472, 0.37", "-109.699, 79.7838, -102.093, 0.44", "-110.294, 80.3261, -102.753, 0.44", "-110.353, 80.3752, -102.827, 0.44", "-110.831, 80.6792, -103.361, 0.37", "-110.976, 80.7561, -103.49, 0.37", "-111.708, 81.1225, -104.123, 0.37", "-113.284, 81.7863, -105.644, 0.37", "-113.375, 81.8167, -105.733, 0.37", "-114.073, 81.9975, -106.37, 0.74", "-115.252, 82.2728, -107.457, 0.96", "-116.044, 82.4415, -108.165, 0.37", "-117.376, 82.7224, -109.274, 0.37", "-118.267, 82.8763, -109.928, 0.29", "-119.366, 83.0607, -110.789, 0.29", "-120.382, 83.2215, -111.629, 0.29", "-120.698, 83.2811, -111.886, 0.88", "-121.4, 83.4973, -112.418, 1.18", "-122.033, 83.7551, -112.795, 1.18", "-123.068, 84.252, -113.35, 0.37", "-123.644, 84.5304, -113.732, 0.15", "-124.296, 84.7715, -114.211, 0.15", "-124.359, 84.7887, -114.276, 0.15", "-125.514, 84.9865, -115.692, 0.15", "-125.576, 84.9933, -115.777, 0.15", "-127.255, 85.1788, -118.033, 1.03", "-127.706, 85.233, -118.62, 1.03", "-129.042, 85.4798, -120.204, 0.37", "-129.705, 85.6447, -120.908, 0.37", "-129.767, 85.6673, -120.972, 0.37", "-130.904, 86.1503, -122.001, 0.37", "-131.678, 86.5329, -122.542, 1.11", "-132.903, 87.2047, -123.355, 1.11", "-132.986, 87.2511, -123.404, 1.11", "-134.674, 88.2547, -124.528, 0.29", "-134.82, 88.3409, -124.634, 0.29", "-135.647, 88.7859, -125.28, 0.29", "-135.736, 88.83, -125.351, 0.52", "-136.509, 89.1741, -125.923, 0.81", "-137.469, 89.5806, -126.552, 0.81", "-137.949, 89.7466, -126.841, 0.96", "-139.057, 90.0847, -127.543, 0.96", "-140.176, 90.3974, -128.256, 0.29", "-141.1, 90.685, -128.99, 0.29", "-141.165, 90.7072, -129.051, 0.29", "-142.44, 91.1716, -130.369, 0.22", "-142.796, 91.3215, -130.79, 0.22", "-143.757, 91.7666, -132.065, 0.22", "-145.42, 92.4212, -134.229, 0.22", "-145.574, 92.4702, -134.447, 0.22", "-146.137, 92.6228, -135.222, 0.22", "-146.192, 92.636, -135.296, 0.22", "-146.866, 92.7547, -136.143, 0.81", "-147.891, 92.8824, -137.296, 1.11", "-150.095, 93.2056, -139.358, 0.88", "-150.66, 93.315, -139.895, 0.44", "-150.785, 93.3544, -140.026, 0.44", "-151.236, 93.5508, -140.525, 0.44", "-151.665, 93.7881, -141.001, 0.44", "-152.342, 94.203, -141.677, 0.74", "-152.406, 94.2468, -141.73, 0.74", "-153.724, 95.1929, -142.895, 1.4", "-153.794, 95.2403, -142.959, 1.4", "-154.887, 95.8941, -144.031, 2.28", "-155.625, 96.205, -144.755, 2.28" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-23.5802, 48.4754, -11.6944, 1.18", "-24.333, 48.2113, -12.1356, 1.18", "-25.1155, 47.9777, -12.5979, 0.88", "-25.7255, 47.8967, -12.9392, 0.74", "-26.1099, 47.8787, -13.147, 0.44", "-26.1498, 47.8769, -13.1686, 0.44", "-26.7999, 47.8463, -13.5202, 0.44", "-27.0489, 47.854, -13.6517, 0.74", "-28.0856, 48.0066, -14.2294, 0.74", "-28.6289, 48.133, -14.4855, 0.74" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-215.28, -104.321, -13.057, 0.29", "-226.986, -106.375, -14.9833, 0.29", "-238.733, -107.55, -17.3311, 0.29", "-250.181, -107.62, -21.0711, 0.29", "-261.149, -108.443, -25.9665, 0.29", "-271.927, -110.38, -30.965, 0.29", "-282.39, -114.149, -35.6129, 0.29", "-293.401, -116.632, -39.8039, 0.29", "-303.027, -121.646, -45.0997, 0.29", "-312.076, -124.537, -52.4951, 0.29", "-321.651, -126.815, -59.4239, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-215.28, -104.321, -13.057, 0.29", "-223.655, -106.562, -15.5309, 0.29", "-231.866, -108.772, -18.5245, 0.29", "-240.067, -110.571, -21.7951, 0.29", "-247.768, -113.258, -25.6398, 0.29", "-254.544, -115.625, -31.0873, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-191.091, -187.337, 37.6376, 0.29", "-199.241, -189.901, 38.7164, 0.29", "-207.084, -192.813, 40.8247, 0.29", "-215.015, -196.132, 41.5877, 0.29", "-223.319, -198.358, 41.7313, 0.29", "-231.562, -200.815, 41.9664, 0.29", "-239.465, -204.262, 42.3925, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-191.091, -187.337, 37.6376, 0.29", "-199.268, -199.297, 37.1166, 0.29", "-207.689, -210.795, 34.597, 0.29", "-214.659, -223.209, 31.6112, 0.29", "-222.717, -234.36, 27.1689, 0.29", "-231.978, -244.661, 23.2541, 0.29", "-240.295, -256.114, 20.2356, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "180.507, -74.1534, 64.2301, 0.22", "181.403, -72.4223, 63.5855, 0.22", "182.324, -70.7094, 62.8853, 0.22", "183.267, -68.9421, 62.1628, 0.22", "183.913, -67.7057, 61.6646, 0.22", "184.502, -66.5784, 61.2104, 0.66", "184.809, -65.9893, 60.9729, 0.66", "185.83, -64.0439, 60.2763, 0.15", "186.149, -63.4602, 60.0545, 0.74", "186.298, -63.1475, 59.9273, 0.74" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "180.507, -74.1534, 64.2301, 0.59", "181.668, -74.6911, 64.9267, 0.59", "181.743, -74.716, 64.965, 0.59", "182.694, -74.9417, 65.4127, 0.22", "184.579, -75.303, 66.2633, 0.22", "184.648, -75.3148, 66.294, 0.22", "185.434, -75.4116, 66.5716, 1.25", "186.773, -75.4902, 66.9114, 1.55", "187.418, -75.4971, 67.055, 1.55", "187.719, -75.4831, 67.1114, 1.55", "189.068, -75.3717, 67.3467, 0.52", "191.1, -75.2194, 67.7517, 0.52", "191.175, -75.2144, 67.7681, 0.52", "192.463, -75.1584, 68.01, 0.52", "192.569, -75.159, 68.0292, 0.52", "193.936, -75.2538, 68.2961, 0.52", "194.872, -75.3749, 68.5014, 0.96", "194.955, -75.3882, 68.5249, 0.96", "195.968, -75.5472, 68.8061, 0.88", "196.993, -75.6927, 69.0489, 0.22", "198.367, -75.8531, 69.3419, 0.22", "198.441, -75.8621, 69.3568, 0.22", "199.94, -76.0186, 69.662, 0.22", "200.046, -76.0287, 69.6827, 0.22", "200.99, -76.0943, 69.8756, 0.22", "201.066, -76.0965, 69.8883, 0.22", "202.158, -76.1577, 70.066, 0.22", "202.321, -76.176, 70.0889, 0.22", "203.626, -76.4874, 70.2756, 0.22", "204.086, -76.6077, 70.3587, 1.18", "204.673, -76.7717, 70.484, 1.55", "205.961, -77.1035, 70.7785, 1.18", "207.581, -77.4564, 71.1808, 0.22", "208.863, -77.6964, 71.5817, 0.22", "209.563, -77.798, 71.8598, 0.22", "209.633, -77.806, 71.8907, 0.22", "210.32, -77.856, 72.2198, 0.74", "211.021, -77.8304, 72.5203, 0.74", "212.058, -77.7589, 72.9193, 0.37", "212.671, -77.7049, 73.0993, 0.66", "212.904, -77.7005, 73.1545, 0.66", "213.568, -77.6957, 73.2956, 0.96", "215.108, -77.6824, 73.507, 0.37", "216.776, -77.6668, 73.6586, 0.37", "216.852, -77.6661, 73.6611, 0.37", "217.967, -77.6476, 73.6813, 0.37", "218.928, -77.6364, 73.7234, 0.37", "220.27, -77.6221, 73.8307, 0.81", "220.915, -77.6118, 73.9173, 0.81", "222.017, -77.5761, 74.0161, 0.44", "222.093, -77.5752, 74.0224, 0.44", "223.238, -77.577, 74.115, 0.44", "223.324, -77.5807, 74.1244, 0.44", "224.183, -77.6154, 74.2796, 0.44", "225.241, -77.6235, 74.4899, 0.44", "225.527, -77.6087, 74.5614, 0.44", "226.073, -77.5306, 74.7001, 0.44", "226.145, -77.5117, 74.7195, 0.44", "226.773, -77.3183, 74.9086, 0.44", "226.852, -77.2912, 74.9361, 0.44", "227.544, -77.0508, 75.2196, 0.88", "228.24, -76.8358, 75.5081, 1.25", "229.11, -76.6175, 75.8757, 1.55", "229.259, -76.5878, 75.9396, 1.55", "229.91, -76.501, 76.225, 1.55", "229.989, -76.4943, 76.2604, 1.55", "230.904, -76.5304, 76.6189, 1.25", "231.721, -76.6226, 76.9141, 0.88", "232.412, -76.7294, 77.1492, 0.66", "233.533, -76.9223, 77.5145, 0.52", "233.687, -76.9519, 77.5632, 0.52", "235.938, -77.396, 78.1405, 0.52", "236.023, -77.4092, 78.1569, 0.52", "236.888, -77.4559, 78.2718, 0.52", "236.975, -77.4511, 78.2767, 0.52", "237.926, -77.3159, 78.2023, 0.52", "239.113, -77.0769, 78.0512, 0.52", "240.288, -76.8673, 77.8953, 0.52", "241.349, -76.7676, 77.8007, 0.52", "242.459, -76.7271, 77.7255, 1.25", "244.109, -76.7757, 77.6872, 0.88", "245.171, -76.8876, 77.7178, 0.44", "246.949, -77.2782, 77.9261, 0.44", "247.743, -77.5719, 78.0713, 0.74", "247.81, -77.6059, 78.0898, 0.74", "248.278, -77.8851, 78.285, 1.03", "248.527, -78.0536, 78.4247, 1.03", "249.035, -78.3839, 78.7136, 1.03", "249.911, -78.7686, 79.0876, 0.44", "250.704, -78.9979, 79.314, 0.29", "251.174, -79.0548, 79.4014, 0.29", "251.413, -79.0465, 79.4234, 0.29", "252.415, -78.8476, 79.3568, 0.29", "254.112, -78.3111, 79.0631, 0.29", "254.182, -78.2854, 79.0424, 0.29", "254.848, -78.0471, 78.827, 0.29", "254.93, -78.025, 78.8036, 0.29", "256.759, -77.5554, 78.443, 1.18", "256.833, -77.5389, 78.4364, 1.18", "258.457, -77.2088, 78.4839, 1.69", "259.422, -77.024, 78.5802, 1.99", "260.725, -76.7896, 78.7982, 0.66", "262.219, -76.5361, 79.1873, 0.44", "262.971, -76.4232, 79.4925, 0.22", "263.04, -76.4146, 79.5245, 0.22", "263.95, -76.3075, 80.0214, 0.22", "264.019, -76.3002, 80.054, 0.22", "264.564, -76.2468, 80.2694, 0.96", "265.107, -76.2193, 80.437, 0.96", "265.674, -76.1656, 80.5648, 0.22", "267.011, -75.9699, 80.7983, 0.22", "267.708, -75.8298, 80.8857, 1.11", "267.813, -75.8039, 80.8976, 1.11", "268.298, -75.6581, 80.9474, 1.11", "269.297, -75.3022, 81.0725, 0.22", "269.828, -75.0931, 81.1564, 0.22", "269.936, -75.0542, 81.1806, 0.22", "270.823, -74.7688, 81.4461, 0.52", "271.236, -74.6555, 81.5918, 0.52", "271.935, -74.4968, 81.8811, 0.22", "272.002, -74.4823, 81.9146, 0.22", "273.009, -74.2925, 82.4118, 0.22", "273.155, -74.2645, 82.4825, 0.22", "273.826, -74.14, 82.802, 0.22", "273.896, -74.1242, 82.8296, 0.22", "274.602, -73.9706, 83.0605, 0.37", "274.674, -73.9564, 83.0834, 0.37", "275.322, -73.8316, 83.2847, 0.37", "275.394, -73.8209, 83.3082, 0.37", "276.456, -73.7092, 83.661, 0.15", "277.108, -73.6686, 83.8609, 0.15", "278.811, -73.718, 84.3714, 0.15", "279.266, -73.763, 84.5079, 0.66", "280.027, -73.9003, 84.743, 1.11", "280.17, -73.9346, 84.7887, 1.11", "281.252, -74.2645, 85.1555, 0.15", "282.224, -74.5776, 85.4811, 0.15", "282.446, -74.6612, 85.5548, 0.15", "283.173, -74.9113, 85.8138, 0.15", "283.681, -75.0486, 86.0124, 0.44", "283.981, -75.0972, 86.1443, 0.44", "284.548, -75.1156, 86.4762, 0.81", "284.613, -75.1121, 86.5172, 0.81", "285.398, -75.0676, 87.0349, 0.81", "286.134, -75.0166, 87.5328, 0.81", "286.787, -74.9523, 87.9699, 0.22", "288.379, -74.7425, 89.0079, 0.22", "288.47, -74.7202, 89.0621, 0.22", "289.282, -74.465, 89.5145, 0.22", "290.166, -74.1558, 89.9962, 0.59", "291.121, -73.7711, 90.4868, 0.22", "291.741, -73.4814, 90.7661, 0.22", "293.333, -72.5495, 91.295, 0.88", "293.396, -72.5079, 91.3146, 0.88" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "57.9393, -204.391, 23.8859, 0.22", "58.1412, -204.959, 24.2759, 0.22", "58.2663, -205.325, 24.549, 0.52", "58.577, -206.166, 25.1939, 0.37", "59.0458, -207.377, 26.0919, 0.22", "59.4245, -208.41, 26.8011, 0.22", "59.6289, -208.987, 27.1795, 1.11", "60.1233, -210.375, 28.0522, 0.22", "60.5698, -211.627, 28.8382, 0.22", "60.8461, -212.4, 29.3093, 0.22", "61.4309, -214.093, 30.3844, 0.22", "61.5046, -214.314, 30.509, 0.59" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "57.9393, -204.391, 23.8859, 0.22", "57.61, -205.776, 24.1324, 0.22", "57.426, -206.551, 24.2701, 0.66", "57.2829, -207.153, 24.3772, 0.88" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-17.8905, 75.3025, -18.2614, 0.74", "-16.0649, 76.2382, -18.4613, 0.74", "-14.3321, 77.056, -18.5797, 0.52", "-13.9542, 77.2203, -18.5806, 0.52", "-11.7695, 78.1569, -18.477, 0.52", "-11.6133, 78.2275, -18.4647, 0.52", "-10.3049, 78.8365, -18.3352, 0.52", "-10.201, 78.8841, -18.3186, 0.52", "-9.22955, 79.3789, -18.1986, 0.74", "-8.46597, 79.8457, -18.205, 1.03", "-7.95061, 80.2337, -18.3083, 1.03", "-7.89164, 80.2809, -18.3255, 1.03", "-6.4725, 81.4185, -18.9135, 1.03", "-5.6727, 82.0143, -19.3482, 0.29", "-4.66313, 82.6959, -19.9731, 0.29", "-3.8987, 83.13, -20.434, 0.29", "-3.82867, 83.1642, -20.4737, 0.29", "-2.55035, 83.7571, -21.1124, 1.03", "-1.29671, 84.3284, -21.644, 1.18", "-0.606779, 84.6656, -21.9212, 0.44", "0.0481793, 85.03, -22.2011, 0.44", "0.117903, 85.0765, -22.228, 0.44", "0.956106, 85.7539, -22.4901, 0.44", "1.70438, 86.5574, -22.6087, 0.44", "1.7538, 86.6171, -22.6074, 0.44", "2.00443, 86.956, -22.6015, 0.29", "2.05336, 87.0173, -22.6028, 0.29", "2.49764, 87.456, -22.6128, 0.29", "2.59874, 87.5292, -22.6115, 0.29", "3.53835, 88.0622, -22.6862, 0.66", "3.60681, 88.0962, -22.6948, 0.66", "4.53497, 88.5454, -22.8204, 0.96", "5.10443, 88.8528, -22.9098, 1.18", "5.88014, 89.2872, -23.0435, 1.18", "7.45666, 90.2194, -23.3233, 0.74", "8.14751, 90.6481, -23.4538, 0.37", "9.07339, 91.2635, -23.6449, 0.37", "10.5854, 92.4423, -23.9644, 0.37", "10.7054, 92.5543, -23.9922, 0.37", "10.9384, 92.8214, -24.0474, 0.37", "10.9756, 92.8765, -24.054, 0.37", "11.5941, 93.9661, -24.185, 0.37", "12.1817, 95.1387, -24.2977, 0.37", "12.5802, 95.8696, -24.3871, 0.37", "12.749, 96.1316, -24.4216, 0.22", "13.2034, 96.7538, -24.5044, 0.22", "13.3144, 96.8875, -24.5252, 0.22", "13.9087, 97.5379, -24.6037, 0.22", "15.4152, 99.0419, -24.7755, 1.4", "16.2827, 99.8815, -24.8615, 1.69", "16.395, 99.9895, -24.8694, 1.69", "17.5299, 101.069, -24.9204, 1.69", "18.455, 101.899, -24.908, 1.03", "19.1083, 102.491, -24.9043, 0.37", "19.1571, 102.537, -24.9023, 0.37", "19.7317, 103.078, -25.2456, 0.37", "19.7792, 103.129, -25.3001, 0.37", "20.5061, 103.954, -26.4672, 0.37", "21.2648, 104.783, -27.7777, 1.18", "21.3353, 104.859, -27.9056, 1.18", "23.7474, 107.018, -31.9382, 0.29", "24.2233, 107.392, -32.6404, 0.29", "24.3738, 107.484, -32.8283, 0.29", "25.0571, 107.853, -33.5611, 0.29", "25.1131, 107.876, -33.608, 0.29", "26.967, 108.587, -34.8442, 0.29", "28.4061, 109.088, -35.5536, 1.25", "32.111, 110.359, -37.5108, 0.37", "33.3289, 110.806, -38.2008, 0.74", "34.9615, 111.46, -39.178, 0.29", "36.0889, 111.956, -39.862, 0.29", "36.2178, 112.024, -39.9359, 0.29", "38.0389, 113.02, -40.8962, 0.29", "38.1014, 113.06, -40.918, 0.29", "38.5087, 113.34, -41.0629, 0.29", "38.6287, 113.434, -41.0904, 0.29", "39.9678, 114.591, -41.3087, 0.29", "40.6917, 115.355, -41.3418, 1.18", "40.8064, 115.5, -41.3322, 1.18", "41.3007, 116.182, -41.3227, 1.18", "41.425, 116.378, -41.327, 1.18", "42.1499, 117.659, -41.3845, 0.59", "42.9372, 119.27, -41.4868, 0.29", "42.97, 119.342, -41.4899, 0.29", "43.4688, 120.464, -41.5406, 0.66", "43.9099, 121.347, -41.6307, 0.66", "43.9541, 121.425, -41.6416, 0.66", "44.4433, 122.199, -41.813, 0.22", "45.2028, 123.282, -42.1132, 0.22", "45.2754, 123.379, -42.1444, 0.22", "46.4975, 124.967, -42.6509, 1.11", "47.0062, 125.618, -42.879, 1.11", "47.8102, 126.612, -43.2188, 0.74", "47.8656, 126.678, -43.2412, 0.74", "48.5177, 127.381, -43.4553, 0.37", "49.5797, 128.516, -43.6814, 0.37", "49.6488, 128.591, -43.6869, 0.37", "50.4655, 129.427, -43.685, 0.37", "50.7244, 129.686, -43.6654, 0.37", "51.3755, 130.34, -43.6235, 0.37", "52.5776, 131.527, -43.5334, 0.37", "52.6336, 131.581, -43.5304, 0.37", "53.5043, 132.429, -43.4864, 1.62", "53.9667, 132.893, -43.4656, 1.62", "55.1079, 134.027, -43.4011, 0.74", "56.3423, 135.238, -43.2972, 0.59", "56.3996, 135.29, -43.2903, 0.52", "57.2887, 136.018, -43.1805, 0.52", "57.3599, 136.069, -43.1712, 0.52", "57.757, 136.333, -43.109, 0.29", "58.9069, 137.053, -43.0135, 0.29", "58.982, 137.098, -43.0149, 0.29", "59.9201, 137.67, -43.1364, 0.29", "60.0234, 137.736, -43.1566, 0.29", "60.9597, 138.374, -43.3313, 0.29", "62.3126, 139.329, -43.5926, 1.11", "63.0377, 139.861, -43.7206, 1.11", "64.0507, 140.655, -43.8715, 0.59", "65.0215, 141.461, -43.9859, 0.37", "66.2093, 142.441, -44.0833, 0.22", "66.2693, 142.491, -44.0844, 0.22", "67.0603, 143.166, -44.0244, 0.22", "67.1864, 143.271, -44.007, 0.22", "67.3853, 143.432, -43.9611, 0.59", "67.478, 143.499, -43.9395, 0.59", "67.804, 143.731, -43.8955, 0.59", "69.0337, 144.607, -43.7862, 0.37", "70.0266, 145.266, -43.7171, 1.18", "70.8738, 145.817, -43.6636, 1.18", "71.7722, 146.404, -43.605, 1.18", "73.0298, 147.268, -43.5116, 0.37", "73.1187, 147.332, -43.5043, 0.37", "74.5337, 148.46, -43.3354, 0.37", "74.6586, 148.57, -43.3279, 0.37", "75.3552, 149.242, -43.285, 0.37", "76.2569, 150.197, -43.2109, 0.37", "76.3092, 150.254, -43.209, 0.37", "77.4925, 151.625, -43.2835, 0.37", "78.2473, 152.58, -43.4152, 0.81", "78.7062, 153.137, -43.5623, 0.81", "78.7668, 153.213, -43.5919, 0.81", "79.7347, 154.427, -44.2003, 0.29", "80.3136, 155.213, -44.6115, 0.29", "80.3915, 155.33, -44.6795, 0.29", "81.0581, 156.492, -45.2461, 0.29", "81.4705, 157.241, -45.6151, 0.22", "81.5054, 157.305, -45.6432, 0.22", "82.0155, 158.305, -46.0009, 0.22", "82.0513, 158.37, -46.0275, 0.22", "82.576, 159.274, -46.4072, 0.37", "83.2736, 160.377, -46.8347, 1.18", "83.68, 160.894, -47.0526, 1.18", "83.7816, 161.0, -47.1031, 1.18", "84.8434, 161.954, -47.6094, 0.37", "84.9279, 162.028, -47.6439, 0.37", "85.4879, 162.49, -47.8689, 0.29", "86.212, 163.081, -48.1492, 0.29", "87.5468, 164.154, -48.6885, 0.29", "87.6726, 164.252, -48.7334, 0.29", "88.5244, 164.895, -49.0248, 0.29", "90.315, 166.244, -49.6703, 0.29", "90.3658, 166.282, -49.6894, 0.29", "91.1564, 166.884, -49.9825, 0.74", "92.2006, 167.615, -50.4063, 1.18", "93.4775, 168.44, -50.9771, 1.18", "93.5397, 168.476, -51.0047, 1.18", "94.0749, 168.77, -51.2225, 1.18", "94.1665, 168.817, -51.257, 1.18", "96.2392, 169.87, -51.9935, 0.29", "96.305, 169.902, -52.0159, 0.29", "97.5321, 170.535, -52.314, 0.29", "97.5893, 170.566, -52.3251, 0.29", "98.5179, 171.107, -52.4087, 1.03", "98.9354, 171.373, -52.3739, 0.37", "98.9968, 171.415, -52.3528, 0.37", "99.4341, 171.712, -52.2595, 0.37", "99.5815, 171.819, -52.2576, 0.37", "100.247, 172.314, -52.3165, 0.37", "100.801, 172.713, -52.3814, 0.66", "101.196, 172.983, -52.4271, 0.88", "102.249, 173.758, -52.5088, 0.22", "103.351, 174.668, -52.5683, 0.22", "103.409, 174.72, -52.5704, 0.22", "104.833, 176.061, -52.6781, 0.22", "104.888, 176.116, -52.6828, 0.22", "106.342, 177.64, -52.7919, 0.22", "107.542, 178.945, -52.8357, 0.22", "107.595, 179.003, -52.8376, 0.22", "108.646, 180.094, -52.9511, 1.18", "109.267, 180.722, -53.0788, 1.18", "109.333, 180.777, -53.1024, 1.18", "109.744, 181.025, -53.3227, 1.18", "110.135, 181.182, -53.5322, 1.18", "111.312, 181.579, -54.1318, 1.18", "111.377, 181.597, -54.1668, 1.18", "113.061, 182.075, -55.1905, 0.37", "113.131, 182.098, -55.2369, 0.37", "114.225, 182.551, -56.0446, 0.37", "114.342, 182.617, -56.1393, 0.37", "115.111, 183.233, -56.7549, 0.29", "115.678, 183.816, -57.1862, 0.29", "115.782, 183.936, -57.2402, 0.29", "116.191, 184.36, -57.4239, 0.29", "116.372, 184.503, -57.5005, 0.29", "117.73, 185.108, -57.8408, 0.29", "117.892, 185.158, -57.8674, 0.29", "118.953, 185.433, -58.1133, 0.29", "119.177, 185.498, -58.1677, 0.29", "120.486, 185.889, -58.4844, 1.03", "121.637, 186.394, -58.7405, 1.03", "121.767, 186.469, -58.7766, 1.03", "123.357, 187.462, -59.2446, 0.29", "124.334, 188.148, -59.5599, 0.29", "124.451, 188.238, -59.598, 0.29", "126.146, 189.715, -60.1399, 0.29", "127.512, 191.019, -60.6276, 1.47", "128.489, 191.934, -60.945, 2.21" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-17.8905, 75.3025, -18.2614, 1.55", "-18.0226, 76.0175, -18.3201, 1.55", "-18.1808, 77.1293, -18.4678, 0.81", "-18.3083, 78.4332, -18.6533, 0.81", "-18.3936, 79.5488, -18.8052, 0.81", "-18.4565, 80.6026, -18.9384, 0.81", "-18.502, 81.6006, -19.0535, 0.81", "-18.5127, 82.9992, -19.2524, 1.18", "-18.476, 83.9298, -19.3884, 1.18", "-18.3715, 85.227, -19.5674, 1.62", "-18.2962, 86.0572, -19.6705, 1.84", "-18.2066, 86.9717, -19.7874, 1.84", "-18.0916, 88.0117, -19.9093, 0.59", "-18.0072, 88.7211, -19.9723, 0.59", "-17.9141, 89.4808, -20.0658, 0.59" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-155.625, 96.205, -144.755, 0.44", "-156.296, 96.3287, -144.894, 0.44", "-156.371, 96.3431, -144.91, 0.44", "-158.004, 96.6726, -145.277, 0.44", "-159.861, 97.0879, -145.711, 0.44", "-160.663, 97.2736, -145.916, 0.81", "-160.724, 97.2887, -145.936, 0.81", "-161.12, 97.3904, -146.077, 0.81", "-161.191, 97.4082, -146.104, 0.81", "-162.034, 97.6056, -146.436, 0.22", "-165.636, 98.3785, -147.906, 0.22", "-166.861, 98.6725, -148.412, 0.96", "-167.743, 98.8992, -148.762, 0.96", "-168.552, 99.1174, -149.075, 0.29", "-169.518, 99.3916, -149.455, 0.29", "-169.597, 99.4165, -149.486, 0.29", "-170.663, 99.8656, -149.96, 0.29", "-170.804, 99.9305, -150.021, 0.29", "-171.934, 100.545, -150.618, 0.96", "-171.993, 100.582, -150.654, 0.96", "-172.624, 101.01, -151.053, 0.96", "-173.431, 101.542, -151.672, 0.37", "-173.801, 101.765, -152.001, 0.37", "-173.913, 101.844, -152.116, 0.37", "-174.395, 102.257, -152.705, 0.37", "-174.443, 102.302, -152.766, 0.37", "-175.265, 103.108, -153.811, 0.15", "-175.31, 103.15, -153.86, 0.15", "-175.423, 103.245, -153.963, 0.15", "-175.511, 103.3, -154.023, 0.15", "-176.449, 103.698, -154.585, 0.15", "-177.197, 103.958, -154.986, 0.88", "-177.483, 104.044, -155.121, 0.88", "-178.171, 104.264, -155.454, 0.15", "-179.187, 104.589, -155.966, 0.15", "-180.28, 104.911, -156.555, 0.15", "-181.199, 105.131, -157.011, 0.15", "-181.363, 105.166, -157.084, 0.15", "-182.217, 105.326, -157.416, 0.15", "-182.364, 105.345, -157.471, 0.15", "-183.383, 105.451, -157.813, 0.15", "-184.715, 105.488, -158.19, 0.74", "-184.864, 105.476, -158.233, 0.74", "-185.65, 105.384, -158.47, 0.74", "-186.739, 105.231, -158.816, 0.15", "-186.823, 105.223, -158.844, 0.15", "-187.465, 105.268, -159.092, 0.15", "-187.69, 105.33, -159.208, 0.15", "-188.031, 105.547, -159.457, 0.15", "-188.292, 105.892, -159.751, 0.81", "-188.32, 105.953, -159.793, 0.81", "-188.668, 106.901, -160.449, 0.81", "-188.692, 106.963, -160.494, 0.81", "-189.333, 108.094, -161.699, 0.22", "-189.377, 108.139, -161.762, 0.22", "-189.827, 108.433, -162.431, 0.22", "-189.878, 108.456, -162.499, 0.22", "-190.642, 108.719, -163.499, 0.44", "-192.009, 109.1, -165.146, 1.11", "-193.125, 109.354, -166.395, 1.11", "-195.2, 109.762, -168.636, 0.52", "-196.135, 109.914, -169.628, 0.52", "-197.088, 110.057, -170.607, 0.29", "-197.906, 110.168, -171.391, 0.29", "-197.975, 110.176, -171.446, 0.29", "-199.046, 110.275, -172.172, 0.29", "-199.117, 110.28, -172.204, 0.29", "-199.559, 110.346, -172.39, 0.52", "-200.447, 110.539, -172.713, 0.52", "-201.05, 110.681, -172.92, 0.52", "-201.206, 110.712, -172.969, 0.52", "-202.061, 110.862, -173.229, 0.29", "-203.162, 110.987, -173.575, 0.29", "-203.236, 110.993, -173.599, 0.29", "-204.411, 111.004, -174.142, 0.66", "-205.153, 111.018, -174.562, 0.66", "-205.213, 111.02, -174.61, 0.66", "-205.788, 111.048, -175.173, 0.22", "-206.36, 111.098, -175.83, 0.22", "-207.56, 111.269, -177.205, 0.22", "-208.384, 111.435, -178.121, 0.52", "-209.531, 111.698, -179.282, 0.88", "-209.976, 111.798, -179.688, 1.18", "-210.235, 111.853, -179.889, 1.18", "-211.598, 112.087, -180.773, 1.18", "-212.615, 112.253, -181.263, 1.18", "-213.444, 112.357, -181.622, 0.29", "-213.671, 112.384, -181.701, 0.29", "-214.812, 112.514, -182.106, 0.29", "-215.569, 112.613, -182.377, 0.44", "-216.93, 112.857, -182.873, 0.44" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-155.625, 96.205, -144.755, 0.29", "-155.675, 96.0732, -144.807, 0.29", "-156.116, 94.8208, -145.313, 0.29", "-156.158, 94.6746, -145.387, 0.29", "-156.381, 93.7323, -145.894, 0.29", "-156.524, 92.9852, -146.356, 0.59", "-156.64, 92.3067, -146.804, 0.81", "-156.653, 92.2206, -146.865, 0.81", "-156.78, 91.0525, -147.769, 0.81", "-156.859, 90.5106, -148.217, 0.81", "-157.131, 89.4336, -149.215, 0.29", "-157.155, 89.3845, -149.265, 0.29", "-157.43, 89.091, -149.724, 0.29", "-157.589, 88.97, -149.953, 0.29", "-158.015, 88.7118, -150.501, 0.81", "-158.554, 88.3875, -151.18, 0.81", "-159.054, 88.0733, -151.775, 0.81", "-160.699, 86.9137, -153.795, 0.66", "-161.065, 86.6245, -154.259, 0.59", "-161.385, 86.3212, -154.681, 0.44", "-161.745, 85.8687, -155.181, 0.44", "-162.046, 85.3295, -155.563, 0.29", "-162.079, 85.2548, -155.591, 0.29", "-162.297, 84.8158, -155.632, 0.29", "-162.422, 84.6036, -155.67, 0.29", "-162.844, 83.9751, -155.828, 0.29", "-163.59, 82.9455, -156.139, 0.29", "-163.684, 82.8222, -156.182, 0.29", "-164.942, 81.3086, -156.691, 0.29", "-165.798, 80.331, -157.014, 0.81", "-166.338, 79.7439, -157.212, 1.03", "-166.389, 79.693, -157.23, 1.03", "-167.038, 79.0714, -157.479, 1.03", "-167.864, 78.3154, -157.675, 0.22", "-168.751, 77.5602, -157.737, 0.22", "-168.81, 77.5145, -157.736, 0.22", "-169.963, 76.6383, -157.59, 0.22", "-170.022, 76.5947, -157.579, 0.22", "-171.292, 75.7428, -157.361, 1.03", "-171.986, 75.3176, -157.279, 1.03", "-172.749, 74.8958, -157.193, 0.66", "-174.285, 74.0595, -157.009, 0.22", "-174.358, 74.0201, -157.0, 0.22", "-176.022, 73.1376, -156.849, 0.22", "-176.745, 72.77, -156.861, 1.4", "-176.821, 72.7352, -156.863, 1.4" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-28.6289, 48.133, -14.4855, 0.74", "-28.2621, 49.4953, -17.1982, 0.74", "-27.9936, 50.7659, -19.6247, 0.37", "-27.9165, 51.208, -20.4426, 0.88", "-27.7508, 52.1833, -22.3124, 1.18", "-27.5274, 53.5501, -24.9907, 0.52", "-27.5243, 53.5821, -25.0555, 0.52", "-27.5859, 54.0002, -26.076, 0.52", "-27.619, 54.0525, -26.2287, 0.52", "-28.3491, 54.4507, -28.0996, 0.52", "-28.3893, 54.4563, -28.1589, 0.52", "-29.266, 54.4311, -29.3099, 0.52", "-29.7584, 54.3946, -30.0867, 0.74", "-30.3768, 54.3122, -31.1581, 0.74", "-31.3836, 54.156, -32.8853, 1.25", "-31.6984, 54.1076, -33.4753, 1.25", "-32.4724, 53.8942, -35.4608, 1.25", "-33.0602, 53.5914, -37.5434, 0.66", "-33.073, 53.5765, -37.623, 0.66", "-33.1446, 53.3453, -38.6651, 0.59", "-33.2725, 52.6912, -41.2768, 0.59", "-33.3686, 52.0331, -43.9674, 0.96", "-33.4053, 51.8449, -44.7825, 0.96", "-33.5644, 51.309, -47.2603, 0.44", "-33.7804, 50.792, -49.8988, 0.29", "-33.9097, 50.5539, -51.229, 0.29", "-34.4221, 50.1294, -54.0028, 1.03", "-34.7278, 50.0462, -55.0231, 0.44", "-35.1464, 49.9991, -55.9611, 0.44", "-35.2608, 49.9939, -56.1553, 0.44", "-35.5268, 49.9924, -56.6105, 0.44", "-36.1246, 50.0951, -58.4149, 0.44", "-36.1633, 50.1066, -58.562, 0.44", "-36.5775, 50.2832, -60.2868, 0.74", "-37.0513, 50.6639, -62.8545, 0.74", "-37.3797, 51.1013, -65.1234, 1.11", "-38.0469, 52.4437, -70.7587, 0.81", "-38.0552, 52.4835, -70.9072, 0.81", "-38.0684, 52.8223, -72.021, 0.81", "-37.9198, 54.1743, -75.9547, 0.88", "-37.7464, 55.2986, -78.842, 0.29", "-37.6638, 55.6368, -79.613, 0.29", "-37.2943, 57.0231, -82.2972, 0.29", "-37.1734, 57.5, -83.1578, 0.29", "-37.1645, 57.5317, -83.2106, 0.29", "-37.1286, 57.7281, -83.4727, 0.44", "-37.1237, 57.7739, -83.5292, 0.44", "-37.1347, 59.0905, -85.1327, 0.44", "-37.3157, 59.9109, -86.0272, 1.11", "-37.6071, 61.3953, -87.8851, 0.29", "-37.6597, 61.7192, -88.309, 0.29", "-37.6784, 61.8512, -88.4846, 0.29", "-37.7185, 62.1707, -88.9126, 0.29", "-37.7616, 62.7144, -89.6404, 0.29", "-37.731, 64.4391, -92.1516, 0.29", "-37.7349, 64.4794, -92.2112, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-28.6289, 48.133, -14.4855, 0.52", "-28.7821, 48.2203, -14.6805, 0.52", "-29.7323, 48.81, -15.8111, 0.52", "-29.789, 48.8462, -15.8691, 0.52", "-30.8434, 49.5317, -16.8559, 0.44", "-30.9147, 49.5765, -16.9125, 0.44", "-31.8283, 50.1397, -17.5487, 0.44", "-31.9706, 50.2309, -17.6374, 0.44", "-32.6256, 50.612, -17.9841, 0.44", "-32.7984, 50.6934, -18.062, 0.88", "-34.0479, 51.0837, -18.4953, 0.88", "-35.0817, 51.264, -18.854, 0.88", "-35.1643, 51.2691, -18.8819, 0.88", "-36.4788, 51.3135, -19.312, 1.55", "-37.4475, 51.3347, -19.6287, 1.77", "-38.8674, 51.3583, -19.9713, 0.37", "-39.9277, 51.3779, -20.1604, 0.29", "-40.9641, 51.4446, -20.2969, 0.81", "-41.8616, 51.5524, -20.3943, 0.88", "-42.4618, 51.6575, -20.4536, 0.88", "-44.4799, 52.0039, -20.6683, 0.59", "-45.093, 52.1043, -20.7607, 0.59", "-45.9001, 52.143, -20.8445, 0.22", "-47.0006, 52.1155, -20.9682, 0.22", "-47.8782, 52.067, -21.0922, 0.22", "-49.3967, 51.9497, -21.227, 1.4", "-50.3383, 51.8615, -21.3044, 1.84", "-52.5319, 51.6302, -21.3819, 0.29", "-54.1496, 51.4401, -21.4207, 0.29", "-55.7013, 51.2586, -21.422, 0.29", "-57.9191, 50.9888, -21.4104, 0.88", "-58.9846, 50.8657, -21.4356, 1.03", "-59.0589, 50.8568, -21.4366, 1.03", "-60.3828, 50.6847, -21.4771, 0.59", "-61.5541, 50.4702, -21.4883, 0.44", "-62.2184, 50.3322, -21.5009, 0.29", "-63.5111, 50.0065, -21.6155, 0.29", "-65.1885, 49.5199, -21.6816, 0.29", "-65.2828, 49.4849, -21.6786, 0.29", "-65.8532, 49.1729, -21.5802, 0.29", "-65.951, 49.0261, -21.504, 0.29", "-66.4891, 47.9409, -20.8944, 0.29", "-66.5281, 47.8554, -20.8524, 0.29", "-67.0166, 47.0164, -20.439, 0.66", "-67.3357, 46.59, -20.2319, 0.66", "-69.0678, 44.7545, -19.4317, 0.37", "-70.0329, 43.8984, -19.1067, 0.37", "-71.0068, 43.1518, -18.8661, 0.37", "-72.7256, 41.9608, -18.4316, 1.11", "-73.5925, 41.4056, -18.2459, 1.47", "-74.7709, 40.6845, -18.0138, 0.81", "-75.9745, 39.9933, -17.7725, 0.44", "-77.562, 39.0898, -17.3603, 0.44", "-80.3798, 37.5266, -16.5191, 1.4", "-81.3896, 36.9529, -16.2001, 1.69", "-81.4623, 36.9105, -16.1728, 1.69", "-83.0631, 35.8837, -15.4695, 0.29", "-83.4613, 35.5975, -15.297, 0.29", "-83.5985, 35.4763, -15.2433, 0.29", "-84.0851, 34.7859, -15.1756, 0.29", "-84.1982, 34.6293, -15.1684, 0.29", "-84.9709, 34.0276, -15.323, 0.29", "-85.7908, 33.8299, -15.6799, 0.29", "-86.0578, 33.7971, -15.7727, 0.29", "-86.4893, 33.7421, -15.9149, 0.29", "-87.7638, 33.5856, -16.3358, 0.29", "-89.1334, 33.4151, -16.7986, 0.29", "-90.2844, 33.2472, -17.2079, 1.4", "-91.7417, 32.9364, -17.7602, 1.77", "-92.7268, 32.6379, -18.1601, 1.77", "-93.5617, 32.2655, -18.5303, 0.74", "-94.4366, 31.6679, -18.9321, 0.59", "-95.1184, 31.0138, -19.2555, 0.44", "-95.6564, 30.3908, -19.5195, 0.44", "-95.9071, 30.0851, -19.6169, 0.44", "-96.7505, 29.061, -19.8049, 0.44", "-97.3984, 28.3138, -19.8608, 0.44", "-98.4895, 27.2122, -19.8409, 0.44", "-99.1911, 26.7254, -19.7873, 0.74", "-100.969, 26.2075, -19.3789, 0.29", "-101.065, 26.2002, -19.3495, 0.29", "-101.567, 26.251, -19.2041, 0.29", "-102.009, 26.354, -19.0825, 0.29", "-103.03, 26.6708, -18.8312, 0.29", "-105.574, 27.3641, -18.2758, 0.29", "-105.659, 27.3842, -18.2632, 0.29", "-107.566, 27.7053, -18.0491, 0.29", "-108.409, 27.797, -17.9906, 1.47", "-109.325, 27.8469, -17.9737, 2.06", "-111.656, 27.8438, -18.089, 1.62", "-112.749, 27.8003, -18.2553, 0.59", "-113.435, 27.751, -18.3738, 0.59", "-114.311, 27.6357, -18.5667, 0.81", "-114.759, 27.5577, -18.7024, 0.81", "-115.205, 27.4703, -18.8402, 0.22", "-115.919, 27.3361, -19.1301, 0.22", "-116.486, 27.2582, -19.3097, 0.22", "-117.507, 27.2215, -19.4657, 0.22", "-117.582, 27.2238, -19.4695, 0.22", "-119.824, 27.3868, -19.4798, 0.22", "-120.596, 27.4705, -19.505, 1.11", "-121.479, 27.5931, -19.5902, 1.55", "-122.505, 27.7261, -19.7675, 0.29", "-124.457, 27.8754, -20.2236, 0.29", "-124.551, 27.8721, -20.2605, 0.29", "-125.652, 27.6766, -20.8954, 0.88", "-126.86, 27.3062, -21.6483, 1.69", "-127.652, 26.987, -22.1346, 1.4", "-128.435, 26.6238, -22.5366, 0.29", "-129.962, 25.8911, -23.1034, 0.29", "-131.03, 25.4098, -23.3798, 1.11", "-131.757, 25.1295, -23.4682, 1.11", "-133.033, 24.76, -23.4784, 0.88", "-134.822, 24.3977, -23.371, 0.52", "-135.739, 24.2839, -23.2736, 0.37", "-136.842, 24.2037, -23.0404, 0.37", "-138.413, 24.137, -22.6485, 0.37", "-140.555, 24.081, -22.0927, 0.37", "-140.641, 24.0758, -22.0732, 0.37", "-141.114, 24.0292, -21.9426, 0.74", "-143.013, 23.7343, -21.216, 0.15", "-143.666, 23.6006, -20.9151, 0.15", "-143.74, 23.5782, -20.8724, 0.15", "-145.088, 23.1458, -20.0878, 0.15", "-147.061, 22.6609, -19.0872, 0.15", "-147.14, 22.6469, -19.0522, 0.15", "-147.932, 22.5639, -18.7604, 0.15", "-150.606, 22.4174, -17.845, 0.15", "-151.938, 22.4288, -17.4608, 0.15", "-153.13, 22.5401, -17.1953, 0.59", "-153.617, 22.5911, -17.1553, 0.81", "-153.717, 22.6038, -17.1506, 0.81", "-153.988, 22.6628, -17.1671, 0.81", "-154.411, 22.8143, -17.285, 0.15", "-154.492, 22.8452, -17.305, 0.15", "-155.204, 23.0931, -17.4599, 0.15", "-155.287, 23.1225, -17.4766, 0.15", "-156.957, 23.7542, -17.8012, 0.15", "-168.928, 20.6503, -16.2437, 0.15", "-180.687, 16.9214, -14.4, 0.15", "-192.654, 13.6509, -13.1678, 0.15", "-204.412, 10.5043, -10.4813, 0.15", "-216.575, 8.48961, -8.69482, 0.15", "-228.604, 5.43036, -9.88115, 0.15", "-240.16, 2.315, -13.3943, 0.15", "-251.213, -2.66038, -16.5034, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-254.544, -115.625, -31.0873, 0.29", "-263.501, -117.138, -34.2337, 0.29" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-254.544, -115.625, -31.0873, 0.29", "-262.1, -119.545, -35.278, 0.29", "-270.351, -122.896, -38.5528, 0.29", "-278.365, -127.434, -40.9621, 0.29", "-286.908, -131.361, -42.4442, 0.29", "-295.09, -136.135, -43.6376, 0.29", "-302.752, -141.853, -44.3865, 0.29", "-310.744, -146.989, -45.4668, 0.29", "-318.442, -152.603, -46.4583, 0.29", "-325.278, -159.215, -47.8391, 0.29", "-332.334, -165.773, -46.9775, 0.29", "-340.02, -171.506, -46.0471, 0.29", "-346.753, -178.074, -43.5806, 0.29", "-353.334, -185.051, -42.0302, 0.29", "-358.125, -193.252, -39.5113, 0.29", "-362.164, -201.238, -35.3307, 0.29", "-368.138, -208.124, -31.7856, 0.29", "-373.397, -215.16, -27.3897, 0.29", "-378.026, -222.428, -22.611, 0.29", "-382.61, -230.455, -19.2123, 0.29", "-387.252, -238.274, -15.4236, 0.29" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-239.465, -204.262, 42.3925, 0.29", "-247.533, -207.101, 43.9758, 0.29", "-256.028, -208.739, 44.5458, 0.29", "-264.51, -210.547, 44.6927, 0.29" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-239.465, -204.262, 42.3925, 0.29", "-246.815, -206.834, 42.9538, 0.29", "-254.244, -208.958, 44.0037, 0.29", "-261.646, -209.433, 46.3414, 0.29", "-268.74, -210.303, 49.4264, 0.29", "-276.031, -209.766, 52.0672, 0.29", "-283.093, -207.54, 54.494, 0.29", "-289.41, -204.417, 57.8545, 0.29", "-294.994, -199.742, 60.8302, 0.29", "-300.677, -195.089, 63.6503, 0.29", "-306.419, -191.025, 67.103, 0.29", "-311.553, -185.598, 69.6993, 0.29", "-315.974, -179.074, 71.0424, 0.29", "-320.848, -172.829, 72.0259, 0.29", "-324.972, -165.918, 71.9641, 0.29", "-328.665, -158.771, 71.207, 0.29", "-333.06, -152.582, 68.5413, 0.29", "-336.748, -145.548, 67.0152, 0.29", "-339.634, -138.03, 66.028, 0.29", "-342.443, -130.456, 65.2946, 0.29", "-343.933, -122.467, 64.9108, 0.29", "-344.869, -114.526, 66.1653, 0.29", "-344.795, -106.485, 67.1762, 0.29", "-343.874, -99.0772, 70.0905, 0.29", "-343.371, -91.9176, 73.5956, 0.29", "-343.295, -84.4668, 76.5586, 0.29", "-343.621, -76.5687, 78.2304, 0.29", "-345.56, -69.2078, 80.773, 0.29", "-348.942, -62.0854, 82.2999, 0.29" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-240.295, -256.114, 20.2356, 0.29", "-242.809, -266.813, 19.4804, 0.29", "-244.329, -277.539, 17.5024, 0.29", "-247.828, -287.581, 14.8982, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-240.295, -256.114, 20.2356, 0.29", "-246.41, -263.006, 18.2826, 0.29", "-252.175, -270.119, 16.0128, 0.29", "-258.168, -277.17, 14.2069, 0.29", "-264.336, -284.222, 13.1465, 0.29", "-270.687, -291.13, 12.337, 0.29", "-277.239, -297.591, 10.4706, 0.29", "-282.424, -305.216, 8.31187, 0.29", "-286.637, -313.274, 5.54684, 0.29", "-291.124, -321.252, 3.01148, 0.29", "-295.379, -328.779, -0.838223, 0.29", "-299.61, -336.109, -5.04026, 0.29", "-302.782, -344.786, -7.48135, 0.29", "-306.346, -353.144, -10.3506, 0.29", "-309.074, -362.121, -12.2889, 0.29", "-312.199, -371.155, -12.9956, 0.29", "-314.241, -380.553, -12.9348, 0.29", "-315.274, -390.117, -13.4502, 0.29", "-316.508, -399.651, -12.8752, 0.29", "-316.33, -409.267, -12.2359, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "128.489, 191.934, -60.945, 0.44", "129.84, 193.714, -62.9336, 0.44", "130.452, 194.481, -63.6627, 0.44", "130.559, 194.585, -63.7758, 0.44", "131.13, 194.978, -64.3802, 0.52", "132.462, 195.904, -65.7061, 0.81", "132.576, 195.984, -65.8161, 0.81", "133.61, 196.719, -66.7805, 0.81", "135.474, 198.016, -68.4427, 0.15", "138.181, 199.899, -70.7619, 0.22", "139.517, 200.844, -71.7738, 0.22", "139.653, 200.947, -71.8649, 0.22", "140.56, 201.686, -72.425, 0.22", "140.686, 201.8, -72.4805, 0.22", "142.446, 203.703, -72.6047, 0.81", "143.697, 205.183, -72.3564, 0.22", "144.346, 205.919, -72.2317, 0.22", "144.628, 206.251, -72.2046, 0.22", "146.062, 208.016, -72.1633, 0.22", "146.118, 208.094, -72.1658, 0.22", "146.676, 209.043, -72.2467, 0.52", "146.975, 209.586, -72.3788, 0.52", "147.798, 211.221, -72.8811, 0.29", "148.061, 211.85, -73.0692, 0.74", "148.083, 211.917, -73.0865, 0.74", "148.387, 212.836, -73.2142, 0.74", "148.415, 212.93, -73.2171, 0.74", "148.595, 213.549, -73.1924, 0.15", "149.141, 215.652, -72.9698, 0.15", "149.346, 216.403, -72.8815, 1.11", "149.637, 217.43, -72.7531, 1.25", "149.833, 218.098, -72.6649, 0.15", "150.105, 219.15, -72.477, 0.15", "150.202, 219.484, -72.392, 0.15", "150.533, 220.472, -72.1275, 0.52", "150.934, 221.54, -71.8444, 0.88", "150.967, 221.614, -71.8199, 0.88", "151.717, 223.078, -71.2733, 0.15", "153.094, 225.516, -70.2906, 0.15", "153.566, 226.303, -69.9624, 0.15", "153.615, 226.38, -69.9322, 0.15", "154.41, 227.519, -69.5135, 1.69", "155.222, 228.617, -69.1649, 0.22", "155.774, 229.275, -69.0585, 0.22", "155.851, 229.365, -69.0545, 0.22", "156.462, 230.088, -69.0574, 0.52", "156.849, 230.52, -69.1217, 0.52", "156.904, 230.58, -69.1412, 0.52", "157.832, 231.542, -69.3858, 0.15", "158.869, 232.681, -69.5491, 0.15", "158.925, 232.744, -69.5459, 0.15", "159.423, 233.302, -69.3904, 0.81", "159.663, 233.56, -69.2731, 0.81", "160.835, 234.805, -68.5175, 0.15", "160.888, 234.855, -68.4772, 0.15", "161.473, 235.343, -68.0592, 0.15", "161.568, 235.414, -67.9978, 0.15", "162.195, 235.863, -67.6201, 0.44", "162.766, 236.239, -67.3321, 0.15", "164.282, 237.213, -66.8866, 0.15", "164.428, 237.313, -66.8548, 0.74", "165.394, 237.977, -66.7059, 0.15", "165.609, 238.122, -66.682, 0.15", "166.074, 238.456, -66.6584, 0.66", "167.64, 239.618, -66.6664, 0.15", "167.705, 239.67, -66.6727, 0.15", "169.01, 240.701, -66.8175, 0.15", "169.139, 240.806, -66.8365, 0.15", "170.336, 241.745, -66.9918, 0.15", "170.41, 241.804, -66.9987, 0.15", "171.424, 242.581, -66.9256, 1.03" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "128.489, 191.934, -60.945, 0.29", "131.51, 191.58, -63.2262, 0.29", "132.386, 191.478, -63.8874, 0.29", "132.449, 191.471, -63.9349, 0.29", "133.541, 191.343, -64.7594, 0.29", "133.754, 191.318, -64.9202, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-17.9141, 89.4808, -20.0658, 0.37", "-18.3133, 90.4221, -22.5921, 0.37", "-18.5003, 90.8047, -23.5557, 0.37", "-18.5142, 90.834, -23.6216, 0.37", "-18.7873, 91.4192, -24.8486, 0.66", "-19.0587, 92.07, -26.0272, 0.66", "-19.0775, 92.1214, -26.1071, 0.66", "-19.5896, 93.5859, -27.7041, 0.22", "-19.6562, 94.0752, -28.0823, 0.22", "-19.6539, 94.1678, -28.1364, 0.22", "-19.4789, 95.1534, -28.5854, 0.74", "-19.2939, 95.7756, -28.8722, 1.33", "-18.9927, 96.7543, -29.3308, 1.33", "-18.5126, 98.3225, -30.1013, 1.33", "-18.2914, 99.2354, -30.599, 0.44", "-18.1185, 100.164, -31.1794, 0.44", "-17.9369, 101.732, -32.2847, 0.44", "-17.8924, 102.904, -33.1662, 0.44", "-17.9516, 103.582, -33.6817, 1.18", "-18.1441, 104.507, -34.3524, 1.25", "-18.4919, 105.614, -35.1416, 0.66", "-18.6689, 106.056, -35.4453, 0.22", "-18.6959, 106.114, -35.4842, 0.22", "-19.0082, 106.841, -35.9915, 0.22", "-19.1945, 107.442, -36.4758, 0.37", "-19.3029, 107.969, -36.9768, 0.37", "-19.3393, 108.349, -37.355, 0.37", "-19.3366, 108.406, -37.4184, 0.37", "-19.1537, 108.955, -38.212, 0.37", "-18.5176, 109.933, -39.9641, 0.74", "-18.4623, 109.984, -40.0898, 0.74", "-18.2136, 110.181, -40.6166, 0.74", "-18.141, 110.235, -40.763, 0.74", "-17.2788, 110.937, -42.5556, 0.74", "-17.248, 110.967, -42.6271, 0.74", "-16.7287, 112.054, -44.5013, 1.03", "-16.6073, 112.411, -45.0932, 1.03", "-16.5979, 112.449, -45.1544, 1.03", "-16.5184, 112.999, -45.9552, 1.03", "-16.4652, 113.622, -46.8445, 0.37", "-16.4187, 114.924, -48.6391, 0.88", "-16.4276, 116.111, -50.1991, 0.37", "-16.4289, 116.203, -50.3279, 0.37", "-16.4358, 116.685, -50.9897, 0.37", "-16.43, 118.077, -52.9051, 1.03", "-16.3979, 118.737, -53.7148, 1.03", "-16.3933, 118.786, -53.7703, 1.03", "-16.251, 120.023, -55.0264, 1.25", "-16.1584, 120.52, -55.4951, 1.25", "-15.9545, 121.291, -56.1618, 0.52", "-15.5449, 122.399, -57.0528, 0.52", "-14.9601, 123.621, -58.0759, 0.96", "-14.9364, 123.666, -58.1128, 0.96", "-14.5548, 124.353, -58.6187, 0.96", "-14.5325, 124.399, -58.6565, 0.96", "-13.9314, 126.126, -60.1652, 0.29", "-13.8805, 126.525, -60.6418, 0.29", "-13.8615, 126.766, -60.9354, 0.29", "-13.8302, 127.187, -61.4828, 0.29", "-13.7708, 128.236, -62.8393, 0.88", "-13.7544, 128.739, -63.444, 0.88", "-13.8795, 130.493, -65.2263, 0.29", "-13.9453, 131.545, -66.2421, 0.29", "-13.9484, 131.659, -66.3531, 0.29", "-13.9391, 132.423, -67.1093, 0.29", "-13.9335, 132.532, -67.2096, 0.29", "-13.876, 133.609, -68.1767, 0.29", "-13.8753, 133.713, -68.2668, 0.29", "-13.9209, 135.684, -70.0073, 1.4", "-13.898, 137.061, -71.265, 1.4", "-13.8977, 137.107, -71.3091, 1.4", "-13.8816, 138.311, -72.4824, 0.37", "-13.8797, 138.374, -72.5402, 0.37", "-13.8784, 139.23, -73.217, 0.37", "-13.8996, 140.389, -73.9641, 0.37", "-13.9136, 141.264, -74.5154, 0.37", "-13.9037, 141.467, -74.6515, 0.37", "-13.7666, 142.28, -75.2656, 0.37", "-13.6997, 142.539, -75.4666, 1.03", "-13.2534, 143.856, -76.5008, 1.03", "-13.2025, 143.995, -76.5982, 1.03", "-12.8043, 144.975, -77.2526, 1.33", "-12.4243, 145.998, -77.9228, 0.44", "-12.3163, 146.308, -78.122, 0.44", "-12.265, 146.526, -78.2317, 0.29", "-12.1983, 147.275, -78.4614, 0.29", "-12.2015, 147.345, -78.4902, 0.29", "-12.3576, 147.935, -78.7929, 0.29", "-12.3799, 147.995, -78.8328, 0.29", "-12.6901, 148.69, -79.3718, 0.29", "-12.7159, 148.741, -79.4191, 0.29", "-13.4816, 150.192, -80.8669, 0.37", "-13.9363, 151.006, -81.7474, 0.66", "-14.3634, 151.746, -82.5957, 1.11", "-14.68, 152.269, -83.2139, 1.4", "-15.3482, 153.336, -84.5274, 0.52", "-15.3717, 153.373, -84.5722, 0.52", "-15.9276, 154.208, -85.5078, 0.52", "-15.9928, 154.308, -85.6115, 0.52", "-16.8113, 155.566, -86.8089, 0.52", "-17.5742, 156.717, -87.9398, 0.52", "-17.7037, 156.891, -88.1105, 0.52", "-18.3711, 157.64, -88.8966, 0.52", "-18.9768, 158.2, -89.5237, 0.88", "-19.0226, 158.231, -89.5723, 0.88", "-20.2824, 158.601, -90.8486, 0.29", "-20.8244, 158.612, -91.3797, 0.29", "-21.5472, 158.467, -92.083, 0.29", "-21.5986, 158.447, -92.1311, 0.29", "-23.1372, 157.703, -93.4672, 0.59", "-24.0149, 157.287, -94.146, 0.59", "-24.4322, 157.099, -94.4656, 0.29", "-25.1616, 156.839, -95.1915, 0.29", "-25.648, 156.747, -95.7736, 0.29", "-25.7356, 156.743, -95.8887, 0.29", "-26.1637, 156.819, -96.5431, 0.29", "-27.2049, 157.107, -98.259, 0.29", "-27.9704, 157.338, -99.5413, 1.18", "-28.3894, 157.452, -100.185, 1.18", "-28.4256, 157.459, -100.235, 1.18", "-29.3647, 157.582, -101.312, 0.29", "-30.1782, 157.645, -102.032, 0.29", "-30.3759, 157.662, -102.169, 0.29", "-31.4644, 157.796, -102.869, 0.29", "-31.7469, 157.835, -103.051, 0.29", "-32.231, 157.905, -103.351, 0.74", "-32.9715, 158.026, -103.793, 0.74", "-34.505, 158.331, -104.793, 0.37", "-34.5728, 158.347, -104.839, 0.37", "-34.888, 158.442, -105.058, 0.29", "-35.831, 158.785, -105.756, 0.29", "-36.0694, 158.887, -105.939, 0.74", "-36.2057, 158.956, -106.037, 0.74", "-36.6233, 159.204, -106.278, 0.96", "-37.074, 159.516, -106.607, 0.96", "-37.7788, 160.115, -107.261, 0.59", "-37.8208, 160.157, -107.306, 0.59", "-38.1813, 160.497, -107.681, 0.22", "-38.254, 160.542, -107.741, 0.22", "-38.9535, 160.848, -108.215, 0.29", "-39.0949, 160.886, -108.305, 0.29", "-39.9614, 161.049, -108.807, 0.29", "-40.0332, 161.058, -108.849, 0.29", "-41.5243, 161.087, -109.653, 0.29", "-41.6553, 161.077, -109.717, 0.29", "-42.7763, 160.94, -110.189, 0.29", "-42.843, 160.929, -110.216, 0.29", "-43.4261, 160.831, -110.483, 1.03", "-44.5075, 160.721, -110.993, 1.25", "-45.0813, 160.7, -111.272, 0.29", "-45.7983, 160.734, -111.749, 0.29", "-45.9102, 160.75, -111.84, 0.29", "-46.7179, 160.9, -112.611, 0.66", "-47.2384, 161.003, -113.144, 0.88", "-47.2872, 161.013, -113.197, 0.88", "-49.0253, 161.333, -114.961, 0.44", "-49.1326, 161.344, -115.074, 0.44", "-49.8346, 161.341, -115.823, 0.44", "-50.777, 161.22, -116.753, 0.44", "-50.8294, 161.21, -116.803, 0.44", "-51.7905, 161.016, -117.597, 1.18", "-53.159, 160.72, -118.557, 1.18", "-54.2046, 160.556, -119.358, 0.29", "-55.1896, 160.47, -120.148, 0.29", "-55.2474, 160.47, -120.193, 0.29", "-56.4315, 160.567, -121.138, 0.29", "-56.4936, 160.576, -121.192, 0.29", "-58.219, 160.966, -122.777, 0.29", "-58.812, 161.129, -123.369, 1.11", "-59.7855, 161.425, -124.488, 1.11", "-61.042, 161.787, -126.041, 0.88", "-62.2088, 162.126, -127.594, 0.66", "-63.414, 162.472, -129.215, 0.66", "-63.465, 162.486, -129.279, 0.66", "-64.7076, 162.848, -130.651, 0.29", "-65.1191, 162.983, -130.928, 0.29", "-65.6129, 163.181, -130.898, 0.29", "-66.1424, 163.412, -130.722, 0.29", "-68.3126, 164.405, -129.635, 0.29", "-70.0322, 165.199, -128.692, 1.47", "-70.8794, 165.606, -128.193, 1.84", "-71.6755, 166.004, -127.739, 1.84", "-71.743, 166.039, -127.703, 1.84", "-72.9595, 166.708, -127.15, 0.74", "-73.5288, 167.06, -126.988, 0.59", "-74.318, 167.667, -126.822, 0.59", "-74.436, 167.77, -126.792, 0.59", "-75.1686, 168.497, -126.613, 0.59", "-75.4747, 168.825, -126.555, 1.03", "-75.5237, 168.881, -126.544, 1.03", "-76.1015, 169.528, -126.281, 1.03", "-76.1481, 169.579, -126.251, 1.03", "-76.5208, 169.948, -126.007, 0.66", "-76.6232, 170.042, -125.931, 0.66", "-77.6569, 170.942, -125.07, 0.29", "-77.8376, 171.087, -124.91, 0.15", "-77.9366, 171.154, -124.807, 0.15", "-78.469, 171.514, -124.22, 0.15" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-17.9141, 89.4808, -20.0658, 0.59", "-17.9732, 90.0219, -19.9831, 0.59", "-18.0709, 90.8379, -19.837, 0.44", "-18.1492, 91.4198, -19.7316, 0.59", "-18.2473, 92.109, -19.6009, 0.59", "-18.35, 92.8423, -19.4583, 0.37", "-18.4626, 93.6746, -19.2952, 0.22", "-18.4699, 93.7309, -19.2844, 0.22", "-18.5889, 94.6763, -19.1228, 0.22", "-18.6237, 94.9279, -19.0748, 0.66", "-18.66, 95.1655, -19.0394, 0.66", "-18.7146, 95.4613, -18.9886, 0.66", "-18.7556, 95.6652, -18.9771, 0.66", "-18.8494, 96.0141, -18.9604, 0.66", "-18.8659, 96.0694, -18.9584, 0.66", "-19.0194, 96.6614, -18.9571, 0.22", "-19.1765, 97.3065, -18.9624, 0.22", "-19.2982, 97.8807, -18.965, 0.22", "-19.3198, 98.0025, -18.9645, 0.22", "-19.7682, 100.712, -18.9098, 0.22", "-19.8389, 101.187, -18.8927, 0.59", "-19.846, 101.244, -18.8897, 0.59", "-19.9, 101.797, -18.8705, 0.88", "-19.946, 102.388, -18.8385, 0.88", "-19.9787, 102.875, -18.8005, 0.74", "-20.0094, 103.474, -18.7243, 0.52", "-20.0199, 103.606, -18.7059, 0.29", "-20.0336, 103.744, -18.6897, 0.29", "-20.094, 104.289, -18.6362, 0.29", "-20.182, 105.076, -18.5705, 0.29", "-20.1917, 105.162, -18.5647, 0.29", "-20.2936, 105.939, -18.5188, 1.03", "-20.4094, 106.806, -18.4686, 1.4", "-20.4771, 107.336, -18.4366, 1.77", "-20.4838, 107.393, -18.4329, 1.77", "-20.5646, 108.071, -18.3894, 1.77", "-20.6186, 108.61, -18.3504, 1.03", "-20.6557, 109.05, -18.3156, 1.03", "-20.6948, 109.574, -18.2719, 1.03", "-20.7336, 110.011, -18.2382, 0.96", "-20.74, 110.093, -18.2341, 0.96", "-20.7994, 110.933, -18.2088, 0.96", "-20.8061, 111.021, -18.2046, 0.96", "-20.8429, 111.449, -18.1812, 0.29", "-20.9084, 112.419, -18.1057, 0.29", "-20.9997, 114.046, -17.957, 0.29", "-21.0056, 114.181, -17.943, 0.29", "-21.0393, 115.109, -17.8387, 0.29", "-21.0409, 115.166, -17.8317, 0.29", "-21.0745, 117.362, -17.5322, 0.29", "-21.0752, 117.476, -17.5147, 0.29", "-21.0763, 117.831, -17.455, 0.74", "-21.0747, 118.493, -17.3509, 1.18", "-21.067, 119.147, -17.2642, 1.4", "-21.0622, 119.818, -17.1587, 0.52", "-21.0621, 119.875, -17.1481, 0.52", "-21.0468, 120.511, -17.0178, 0.52", "-21.0437, 120.576, -17.0044, 0.52", "-20.982, 121.563, -16.7989, 0.52", "-20.949, 122.374, -16.6517, 0.52", "-20.9469, 122.431, -16.6447, 0.52", "-20.9093, 124.003, -16.509, 0.52", "-20.8998, 124.632, -16.4701, 0.37", "-20.8984, 124.871, -16.4603, 0.37", "-20.9156, 126.847, -16.4237, 0.37", "-20.9659, 128.354, -16.426, 1.03", "-21.0093, 129.206, -16.4496, 1.55", "-21.0831, 130.224, -16.5044, 1.55", "-21.1353, 130.886, -16.5453, 0.88", "-21.199, 131.678, -16.6018, 0.59", "-21.3082, 132.975, -16.709, 0.59", "-21.3918, 133.83, -16.772, 0.59", "-21.402, 133.952, -16.7824, 0.59", "-21.4401, 134.543, -16.8333, 0.59", "-21.4419, 134.601, -16.8372, 0.59", "-21.4278, 135.09, -16.8459, 0.81", "-21.4233, 135.148, -16.8415, 0.81", "-21.3903, 135.62, -16.7727, 0.81", "-21.3584, 136.108, -16.7249, 0.52", "-21.3531, 136.231, -16.7178, 0.52", "-21.3369, 136.786, -16.6991, 0.52", "-21.3358, 137.798, -16.688, 0.52", "-21.3377, 137.856, -16.6866, 0.52", "-21.3871, 138.652, -16.663, 0.96", "-21.4418, 139.272, -16.6363, 0.96", "-21.448, 139.329, -16.6329, 0.96", "-21.5533, 140.174, -16.5656, 0.96", "-21.6328, 140.812, -16.4949, 0.52", "-21.6378, 140.869, -16.4866, 0.52", "-21.6412, 141.873, -16.2907, 0.52", "-21.622, 142.239, -16.22, 0.52", "-21.6103, 142.378, -16.194, 0.52", "-21.5506, 142.901, -16.1018, 0.37", "-21.3946, 144.075, -15.9122, 0.37", "-21.1592, 145.683, -15.6723, 0.37", "-21.0932, 146.096, -15.6164, 0.81", "-21.0737, 146.217, -15.6017, 0.81", "-20.9749, 146.863, -15.5326, 0.81", "-20.9667, 146.919, -15.5275, 0.81", "-20.8597, 147.846, -15.4749, 0.81", "-20.8409, 148.448, -15.4631, 0.52", "-20.8381, 148.74, -15.4749, 0.22", "-20.8433, 148.863, -15.4867, 0.22", "-20.8807, 149.281, -15.5468, 0.22", "-20.8936, 149.366, -15.5609, 0.22", "-21.1344, 150.432, -15.7542, 0.22", "-21.3577, 151.285, -15.918, 0.81", "-21.5315, 151.884, -16.0438, 0.81", "-21.5567, 151.966, -16.0611, 0.81", "-21.8535, 152.859, -16.2443, 0.81", "-22.1145, 153.627, -16.3825, 1.11", "-22.142, 153.71, -16.394, 1.11", "-22.3411, 154.376, -16.4439, 1.47", "-22.4974, 155.043, -16.4361, 1.84", "-22.6415, 155.758, -16.3917, 1.99", "-22.7531, 156.465, -16.3122, 1.03", "-22.8181, 157.017, -16.2268, 0.59", "-22.8709, 157.617, -16.1138, 0.44", "-22.9508, 159.465, -15.6834, 0.44", "-22.9501, 159.521, -15.6689, 0.44", "-22.9188, 160.055, -15.534, 0.81", "-22.8813, 160.524, -15.4254, 0.81", "-22.8787, 160.581, -15.4163, 0.81", "-22.8574, 161.266, -15.351, 0.81", "-22.8486, 161.936, -15.3317, 0.37", "-22.8533, 162.611, -15.3116, 0.37", "-22.8549, 162.677, -15.3097, 0.37", "-22.8931, 164.485, -15.2399, 0.37", "-22.8953, 164.6, -15.2343, 0.37", "-22.971, 166.154, -15.1548, 0.37", "-23.0086, 166.722, -15.1198, 0.37", "-23.0231, 166.906, -15.0969, 0.37", "-23.0796, 167.562, -14.9907, 0.37", "-23.1041, 167.793, -14.94, 0.37", "-23.2937, 168.87, -14.6779, 0.37", "-23.3132, 168.931, -14.6623, 0.37", "-23.6263, 169.688, -14.5045, 0.37", "-23.6733, 169.79, -14.4865, 0.37", "-23.9103, 170.297, -14.4167, 0.37", "-23.9734, 170.452, -14.4002, 0.37", "-24.2348, 171.321, -14.314, 0.37", "-24.4369, 172.065, -14.2658, 0.37", "-24.453, 172.129, -14.2641, 0.37", "-24.6335, 172.885, -14.2374, 0.37", "-24.7862, 173.588, -14.2118, 0.37", "-24.9706, 174.51, -14.1772, 1.25", "-25.1149, 175.31, -14.1429, 1.55", "-25.169, 175.598, -14.133, 1.55", "-25.1878, 175.689, -14.131, 1.55", "-25.3363, 176.423, -14.1781, 0.59", "-25.3502, 176.486, -14.188, 0.59", "-25.4215, 176.777, -14.2532, 0.59", "-25.6472, 177.823, -14.4672, 0.59", "-25.6583, 177.877, -14.4791, 0.59", "-25.8626, 178.898, -14.7089, 0.59", "-26.0071, 179.675, -14.8993, 0.59", "-26.1582, 180.62, -15.1278, 0.29", "-26.305, 181.774, -15.3867, 0.29", "-26.3934, 182.71, -15.5765, 0.81", "-26.398, 182.766, -15.5853, 0.81", "-26.4331, 183.296, -15.6364, 0.81", "-26.4717, 184.149, -15.7006, 0.52", "-26.5122, 184.977, -15.7401, 0.52", "-26.5157, 185.035, -15.7432, 0.52", "-26.5922, 186.127, -15.7856, 0.52", "-26.6018, 186.251, -15.7907, 0.52", "-26.6873, 187.218, -15.8207, 0.96", "-26.7504, 187.935, -15.8342, 0.96", "-26.8049, 188.755, -15.8289, 0.66", "-26.832, 189.404, -15.8063, 0.44", "-26.8378, 190.122, -15.758, 0.44", "-26.8267, 191.429, -15.6022, 0.44", "-26.8049, 192.248, -15.4681, 1.18", "-26.7831, 193.142, -15.2916, 1.92", "-26.7677, 194.017, -15.0925, 2.21", "-26.7448, 195.071, -14.8447, 1.69", "-26.7164, 196.348, -14.5469, 0.59", "-26.7152, 196.412, -14.5325, 0.59", "-26.7097, 197.181, -14.3793, 0.59", "-26.7278, 198.291, -14.181, 0.52", "-26.73, 198.348, -14.1724, 0.52", "-26.7825, 199.546, -14.0584, 0.81", "-26.8126, 200.318, -14.0187, 1.03", "-26.8341, 200.91, -13.9943, 1.03", "-26.8558, 201.706, -13.9654, 0.44", "-26.8765, 202.604, -13.9345, 0.44", "-26.9229, 204.017, -13.8846, 0.44", "-26.9396, 204.494, -13.8742, 0.81", "-26.9759, 205.383, -13.8625, 0.81", "-27.0183, 206.347, -13.854, 0.52", "-27.0717, 207.366, -13.8469, 0.37", "-27.2023, 209.069, -13.8479, 0.29", "-27.2824, 209.826, -13.8515, 0.81", "-27.329, 210.198, -13.8685, 1.03", "-27.3375, 210.255, -13.8737, 1.03", "-27.4908, 211.048, -13.9651, 1.03", "-27.7372, 212.101, -14.0941, 0.52", "-27.7491, 212.149, -14.0985, 0.52", "-27.9336, 212.844, -14.122, 0.52", "-27.9485, 212.908, -14.121, 0.52", "-28.0973, 213.617, -14.0782, 0.52", "-28.1766, 214.21, -13.9995, 0.29", "-28.2259, 214.794, -13.8906, 0.29", "-28.2295, 214.851, -13.8814, 0.29", "-28.2657, 215.616, -13.7711, 0.29", "-28.2745, 215.891, -13.7467, 0.29", "-28.286, 217.099, -13.7108, 0.29", "-28.2871, 217.156, -13.71, 0.29", "-28.2981, 217.846, -13.7028, 0.29", "-28.3041, 218.117, -13.7002, 0.96", "-28.3213, 218.71, -13.6968, 0.96", "-28.3229, 218.776, -13.6956, 0.96", "-28.3576, 219.664, -13.6712, 0.88", "-28.3693, 220.069, -13.6461, 0.29", "-28.389, 220.425, -13.6134, 0.22", "-28.3933, 220.483, -13.6086, 0.22", "-28.4488, 220.961, -13.6022, 0.22", "-28.4676, 221.092, -13.6073, 0.22", "-28.5448, 221.685, -13.6656, 0.81", "-28.6161, 222.399, -13.7511, 1.11", "-28.6143, 222.532, -13.7782, 1.11", "-28.5494, 223.251, -13.9718, 0.81", "-28.5398, 223.304, -13.9879, 0.81", "-28.3856, 223.892, -14.1659, 0.96", "-28.1852, 224.484, -14.3273, 0.96", "-27.8824, 225.446, -14.4395, 0.15", "-27.8551, 225.565, -14.4408, 0.15", "-27.7195, 226.289, -14.4002, 0.15", "-27.7015, 226.477, -14.3862, 0.15", "-27.6946, 227.197, -14.309, 0.15", "-27.7593, 228.881, -14.0812, 0.15", "-27.8398, 229.943, -13.9085, 0.15", "-27.8452, 230.008, -13.8981, 0.15", "-27.9721, 231.24, -13.7057, 0.15", "-28.0675, 232.112, -13.573, 1.03", "-28.1447, 232.753, -13.4795, 1.25", "-28.1596, 232.874, -13.4637, 1.25", "-28.2152, 233.411, -13.3886, 1.25", "-28.2198, 233.497, -13.3758, 1.25", "-28.2043, 233.915, -13.3045, 0.66", "-28.1995, 233.98, -13.2949, 0.66", "-28.1581, 234.577, -13.2081, 0.52", "-28.1441, 234.768, -13.18, 0.29", "-28.109, 235.245, -13.1099, 0.29", "-28.0994, 235.367, -13.0917, 0.29", "-28.029, 236.193, -12.9756, 0.29", "-28.0272, 236.25, -12.9694, 0.29", "-28.029, 236.922, -12.909, 0.29", "-28.046, 237.338, -12.8845, 0.52", "-28.0653, 237.576, -12.8782, 0.52", "-28.125, 238.129, -12.8753, 0.22", "-28.328, 239.57, -12.8982, 0.22", "-28.3366, 239.626, -12.8994, 0.22", "-28.4219, 240.135, -12.9139, 0.96", "-28.4891, 240.616, -12.8952, 0.96", "-28.5415, 241.104, -12.8368, 0.29", "-28.5809, 241.643, -12.7352, 0.29", "-28.5997, 242.285, -12.5782, 0.29", "-28.6004, 242.333, -12.5659, 0.29", "-28.603, 243.662, -12.2009, 0.29", "-28.5941, 244.71, -11.908, 1.25", "-28.5847, 245.345, -11.7377, 1.92", "-28.5784, 245.751, -11.6357, 1.92", "-28.5734, 246.564, -11.4562, 0.52", "-28.5786, 246.74, -11.4194, 0.52", "-28.6044, 247.097, -11.358, 0.44", "-28.6728, 247.983, -11.213, 0.44", "-28.6967, 248.274, -11.1646, 0.81", "-28.7493, 248.748, -11.099, 0.81", "-28.8355, 249.456, -11.0318, 0.22", "-28.8499, 249.57, -11.0245, 0.22", "-29.0113, 250.83, -10.9739, 0.22", "-29.0158, 250.879, -10.9748, 0.22", "-29.1249, 252.619, -11.075, 0.22", "-29.1417, 253.493, -11.151, 0.59", "-29.129, 254.15, -11.2279, 0.96", "-29.1268, 254.216, -11.2354, 0.96", "-29.0692, 255.319, -11.357, 0.96", "-29.059, 255.433, -11.3693, 0.96", "-28.9394, 256.081, -11.4386, 0.96", "-28.9298, 256.146, -11.4434, 0.96", "-28.8796, 256.684, -11.4707, 0.22", "-28.8782, 256.806, -11.4835, 0.22", "-28.9061, 257.227, -11.5354, 0.22", "-28.9205, 257.355, -11.5581, 0.22", "-29.0089, 258.005, -11.7055, 0.22", "-29.0168, 258.06, -11.7182, 0.22", "-29.1912, 259.584, -12.1061, 0.22", "-29.1976, 259.64, -12.1203, 0.22", "-29.2927, 260.483, -12.3368, 0.22", "-29.3284, 260.836, -12.4277, 0.96", "-29.4103, 261.674, -12.6281, 1.25", "-29.5045, 262.559, -12.819, 1.03", "-29.5915, 263.286, -12.9586, 0.44", "-29.702, 264.214, -13.1297, 0.22", "-29.8016, 265.071, -13.2806, 1.18", "-29.9265, 266.109, -13.4356, 1.84", "-30.0042, 266.761, -13.5177, 1.33", "-30.0114, 266.818, -13.522, 1.33", "-30.0753, 267.435, -13.5459, 0.22", "-30.1022, 267.69, -13.5421, 0.22", "-30.1824, 268.468, -13.4918, 0.22", "-30.1921, 268.582, -13.4822, 0.22", "-30.2265, 269.073, -13.434, 0.74", "-30.2549, 269.446, -13.3902, 0.22", "-30.3042, 270.102, -13.3038, 0.22", "-30.3092, 270.159, -13.2958, 0.22", "-30.4484, 271.519, -13.0975, 0.22", "-30.5042, 272.068, -13.0267, 0.22", "-30.5902, 272.844, -12.9379, 1.33", "-30.643, 273.31, -12.8879, 1.33", "-30.7292, 274.036, -12.8169, 0.52", "-30.7366, 274.093, -12.812, 0.52", "-30.9168, 275.371, -12.7318, 0.29", "-31.1246, 276.582, -12.6194, 0.29", "-31.1675, 276.815, -12.5933, 0.59", "-31.2745, 277.347, -12.5217, 0.59", "-31.2864, 277.403, -12.513, 0.59", "-31.809, 279.751, -12.0878, 0.22", "-32.0378, 280.723, -11.8763, 0.29", "-32.0631, 280.832, -11.8512, 0.29", "-32.1432, 281.182, -11.7744, 0.29", "-32.1813, 281.357, -11.7407, 0.29", "-32.2856, 281.89, -11.6566, 0.29", "-32.399, 282.589, -11.5795, 0.22", "-32.408, 282.654, -11.5753, 0.22", "-32.5326, 283.633, -11.525, 0.22", "-32.6706, 284.769, -11.4789, 0.22", "-32.7549, 285.426, -11.462, 1.33", "-32.8593, 286.193, -11.4536, 1.47", "-32.8684, 286.25, -11.4539, 1.47", "-33.0162, 287.054, -11.4539, 0.22", "-33.0327, 287.134, -11.4538, 0.22", "-33.2291, 288.023, -11.444, 0.22", "-33.2959, 288.319, -11.4451, 0.22", "-33.4939, 289.215, -11.4574, 0.22", "-33.7346, 290.364, -11.4615, 0.22", "-33.7563, 290.478, -11.4603, 0.22", "-33.9728, 291.726, -11.4408, 0.22", "-34.2129, 293.241, -11.4139, 0.22", "-34.3479, 294.155, -11.3977, 1.11", "-34.4678, 295.061, -11.382, 1.4", "-34.5857, 296.067, -11.3654, 1.4", "-34.5912, 296.117, -11.364, 1.4", "-34.6354, 296.574, -11.339, 1.4", "-34.6396, 296.632, -11.3334, 1.33", "-34.6594, 297.047, -11.3044, 0.22", "-34.6842, 297.952, -11.2771, 0.22", "-34.6856, 298.067, -11.2761, 0.22", "-34.7239, 299.325, -11.229, 0.22", "-34.729, 299.448, -11.2219, 0.22", "-34.7816, 300.194, -11.167, 0.22", "-34.7985, 300.373, -11.151, 0.22", "-34.8785, 301.082, -11.0717, 0.74", "-34.9454, 301.821, -11.0097, 0.22", "-34.9506, 301.878, -11.0061, 0.22", "-35.0273, 302.659, -10.9677, 0.22", "-35.0397, 302.782, -10.9623, 0.22", "-35.2471, 304.8, -10.925, 0.22", "-35.3347, 305.707, -10.9307, 0.22", "-35.3797, 306.234, -10.9448, 0.88", "-35.4538, 307.029, -10.962, 1.33", "-35.4672, 307.164, -10.9638, 1.33", "-35.5837, 308.299, -10.9611, 1.33", "-35.5899, 308.357, -10.9594, 1.33", "-35.691, 309.371, -10.8859, 1.33", "-35.7419, 309.964, -10.8393, 0.66", "-35.7874, 310.562, -10.7899, 0.66", "-35.8133, 311.049, -10.7628, 0.44", "-35.8221, 311.473, -10.7481, 0.29", "-35.8233, 311.588, -10.7465, 0.29", "-35.827, 312.614, -10.7595, 0.29", "-35.8308, 312.68, -10.7618, 0.29", "-35.9157, 313.578, -10.8035, 0.29", "-35.9301, 313.693, -10.8072, 0.29", "-36.0912, 314.634, -10.768, 0.29", "-36.1472, 314.895, -10.7405, 0.29", "-36.5505, 316.482, -10.4719, 0.29", "-36.5833, 316.597, -10.4463, 0.29", "-36.7391, 317.092, -10.3019, 1.03", "-37.0423, 318.097, -9.97895, 1.03", "-37.1682, 318.533, -9.81951, 1.25", "-37.1785, 318.578, -9.80339, 1.25", "-37.2409, 319.006, -9.66877, 0.88", "-37.2924, 319.473, -9.57172, 0.44", "-37.3303, 319.959, -9.52492, 0.22", "-37.341, 320.19, -9.52307, 0.22", "-37.3989, 321.297, -9.51642, 0.22", "-37.4336, 321.806, -9.51495, 0.22", "-37.4752, 322.195, -9.51038, 0.59", "-37.5305, 322.575, -9.48761, 0.59", "-37.5405, 322.631, -9.48165, 0.59", "-37.6787, 323.344, -9.37558, 0.22", "-37.7056, 323.479, -9.34863, 0.22", "-38.0404, 325.034, -8.96674, 0.22", "-38.1527, 325.549, -8.82831, 0.59", "-38.2676, 326.017, -8.67984, 0.22", "-38.2806, 326.07, -8.66194, 0.22", "-38.4484, 326.782, -8.42082, 0.22", "-38.7517, 328.084, -7.95988, 0.22", "-38.77, 328.183, -7.92866, 0.22", "-38.9434, 329.6, -7.61415, 0.22", "-39.0224, 330.602, -7.44825, 0.22", "-39.0666, 331.494, -7.33814, 0.37", "-39.0816, 332.297, -7.2765, 0.74", "-39.0573, 333.634, -7.24163, 1.47", "-39.0412, 335.073, -7.22365, 1.77", "-39.025, 336.092, -7.24056, 1.77", "-39.0263, 336.15, -7.24041, 1.77", "-39.0616, 336.803, -7.22222, 0.74", "-39.1451, 337.704, -7.16692, 0.74", "-39.2958, 338.605, -7.03626, 0.22", "-39.3181, 338.716, -7.01561, 0.22", "-39.5978, 340.244, -6.79376, 0.22", "-39.6065, 340.301, -6.78755, 0.22", "-39.6476, 340.658, -6.76306, 0.44", "-39.6554, 340.781, -6.76087, 0.44", "-39.6721, 342.042, -6.80056, 0.44", "-39.6787, 342.699, -6.82821, 0.74", "-39.6815, 342.878, -6.83437, 0.74", "-39.6897, 343.175, -6.83993, 0.74", "-39.7023, 343.66, -6.83799, 0.44", "-39.7237, 344.528, -6.8102, 0.44", "-39.7252, 344.585, -6.80647, 0.44", "-39.7591, 346.196, -6.6352, 0.44", "-39.7595, 346.253, -6.62872, 0.44", "-39.7518, 346.764, -6.56643, 0.37", "-39.7303, 347.354, -6.49646, 0.37", "-39.7267, 347.411, -6.48964, 0.37", "-39.6872, 348.074, -6.4161, 0.22", "-39.6798, 348.197, -6.40344, 0.22", "-39.6245, 349.325, -6.28888, 0.22", "-39.5994, 349.938, -6.22767, 0.96", "-39.576, 350.538, -6.16722, 0.96", "-39.5301, 351.188, -6.12089, 0.22", "-39.5078, 351.425, -6.11026, 0.22", "-39.3101, 353.038, -6.06745, 0.22", "-39.242, 353.448, -6.06409, 0.88", "-39.2306, 353.504, -6.0642, 0.88", "-39.0062, 354.446, -6.09072, 1.25", "-38.9316, 354.707, -6.10525, 1.25", "-38.9156, 354.762, -6.10919, 1.25", "-38.7727, 355.226, -6.15735, 0.29", "-38.763, 355.282, -6.1575, 0.29", "-38.7473, 355.453, -6.14681, 0.29", "-38.7475, 355.518, -6.13581, 0.29", "-38.7851, 356.287, -5.99663, 0.22", "-38.8001, 356.473, -5.96204, 0.22", "-38.917, 357.569, -5.75002, 0.22", "-38.9242, 357.633, -5.73715, 0.22", "-39.0012, 358.294, -5.60012, 0.96", "-39.0763, 358.885, -5.47773, 0.96", "-39.0997, 359.009, -5.44228, 0.96", "-39.1505, 359.235, -5.36656, 0.66", "-39.2515, 359.618, -5.24251, 0.66", "-39.2838, 359.732, -5.20983, 0.66", "-39.5124, 360.517, -5.00781, 0.52", "-39.8608, 361.644, -4.73676, 0.22", "-39.9007, 361.758, -4.71063, 0.22", "-40.4799, 363.24, -4.39926, 0.22", "-40.6584, 363.616, -4.29781, 0.81", "-40.7118, 363.722, -4.26526, 0.81", "-40.962, 364.182, -4.07605, 0.81", "-41.3304, 364.95, -3.72464, 0.15", "-41.4988, 365.318, -3.51249, 0.15", "-42.0796, 366.572, -2.67371, 0.15", "-42.4041, 367.294, -2.16258, 0.15", "-42.8241, 368.266, -1.44247, 0.15", "-43.2631, 369.383, -0.556143, 1.4", "-43.4817, 370.053, -0.00431974, 1.4" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-216.93, 112.857, -182.873, 0.22", "-218.123, 113.039, -183.92, 0.22", "-218.851, 113.146, -184.475, 0.22", "-219.759, 113.276, -185.052, 0.22", "-219.812, 113.283, -185.082, 0.22", "-220.497, 113.379, -185.422, 0.22", "-220.545, 113.386, -185.444, 0.22", "-221.239, 113.463, -185.697, 1.25", "-222.269, 113.546, -186.074, 1.25", "-222.828, 113.568, -186.281, 0.22", "-224.024, 113.61, -186.779, 0.22", "-224.202, 113.616, -186.857, 0.22", "-225.377, 113.674, -187.416, 0.22", "-225.667, 113.694, -187.563, 0.22", "-226.635, 113.776, -188.078, 0.22", "-227.803, 113.878, -188.718, 0.22", "-228.088, 113.906, -188.878, 1.11", "-228.15, 113.912, -188.911, 1.11", "-228.894, 114.013, -189.305, 1.11", "-228.956, 114.018, -189.337, 1.11", "-229.904, 114.032, -189.792, 0.22", "-229.959, 114.032, -189.818, 0.22", "-230.749, 114.047, -190.248, 0.22", "-230.876, 114.06, -190.32, 0.22", "-231.716, 114.154, -190.821, 0.22", "-231.776, 114.163, -190.858, 0.22", "-232.633, 114.374, -191.425, 0.22", "-232.732, 114.404, -191.493, 0.22", "-233.553, 114.777, -192.13, 0.96" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-216.93, 112.857, -182.873, 0.22", "-216.989, 114.499, -183.234, 0.22", "-216.991, 114.58, -183.254, 0.22", "-217.064, 115.923, -183.601, 0.22", "-217.071, 116.092, -183.658, 0.22", "-217.127, 117.401, -184.099, 0.22", "-217.243, 120.117, -185.014, 0.22", "-217.248, 120.272, -185.072, 0.22", "-217.277, 121.163, -185.435, 0.22", "-217.347, 122.75, -186.216, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-176.821, 72.7352, -156.863, 0.66", "-177.304, 72.0714, -156.863, 0.66", "-177.869, 71.3079, -156.855, 0.66", "-178.677, 70.2656, -156.877, 0.44", "-179.37, 69.4338, -156.95, 0.52", "-179.883, 68.847, -157.024, 0.52", "-180.706, 68.0119, -157.179, 0.22", "-180.764, 67.9585, -157.194, 0.22", "-181.851, 67.1313, -157.575, 0.22", "-182.636, 66.6762, -157.923, 0.88", "-182.771, 66.6263, -157.989, 0.88", "-184.017, 66.3652, -158.646, 0.88", "-184.086, 66.3564, -158.686, 0.88", "-185.056, 66.2846, -159.247, 0.44", "-185.809, 66.3186, -159.685, 0.22", "-187.056, 66.4438, -160.387, 0.22", "-187.361, 66.4859, -160.561, 0.59" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-176.821, 72.7352, -156.863, 0.22", "-177.354, 73.2358, -157.147, 0.22", "-177.884, 73.7237, -157.437, 0.22", "-178.782, 74.5484, -157.927, 0.22", "-179.486, 75.1955, -158.312, 0.22", "-179.558, 75.2619, -158.352, 0.22", "-180.522, 76.1476, -158.878, 0.22", "-180.572, 76.198, -158.915, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-264.51, -210.547, 44.6927, 0.29", "-270.668, -212.101, 46.0331, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-264.51, -210.547, 44.6927, 0.29", "-275.343, -213.533, 44.6199, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-247.828, -287.581, 14.8982, 0.29", "-250.495, -300.711, 13.2639, 0.29" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-247.828, -287.581, 14.8982, 0.29", "-251.073, -295.187, 11.5485, 0.29" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "171.424, 242.581, -66.9256, 0.15", "174.281, 243.793, -67.5312, 0.15", "175.172, 244.239, -67.6712, 0.96", "175.275, 244.295, -67.6838, 0.96", "176.454, 244.993, -67.7615, 0.15", "176.525, 245.037, -67.7635, 0.15", "177.474, 245.72, -67.6318, 0.15", "177.696, 245.99, -67.4347, 0.52", "177.73, 246.038, -67.3916, 0.52", "178.021, 246.473, -66.9392, 0.66", "178.05, 246.515, -66.8874, 0.66", "179.052, 247.754, -65.3639, 0.15", "179.731, 248.451, -64.4781, 0.15", "179.83, 248.544, -64.3635, 0.96", "179.924, 248.623, -64.2669, 0.96", "180.667, 249.235, -63.5312, 0.15", "181.829, 250.193, -62.4355, 0.15", "182.648, 250.84, -61.7321, 0.15", "182.75, 250.926, -61.6389, 0.15", "183.547, 251.632, -60.8866, 0.15", "184.757, 252.735, -59.748, 0.15", "185.097, 253.074, -59.4448, 0.88", "185.184, 253.167, -59.3754, 0.88", "185.418, 253.433, -59.2303, 0.88", "185.474, 253.492, -59.2088, 0.88", "186.057, 254.111, -59.0373, 0.22", "187.723, 255.774, -58.6958, 0.22", "188.215, 256.259, -58.6002, 0.66", "190.427, 258.444, -58.1628, 0.15", "191.705, 259.703, -57.8967, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "171.424, 242.581, -66.9256, 0.15", "172.074, 243.774, -67.1248, 0.15", "172.803, 245.114, -67.3484, 0.15", "172.843, 245.188, -67.361, 0.15", "174.072, 247.445, -67.7377, 1.03" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "133.754, 191.318, -64.9202, 0.29", "135.794, 190.788, -66.1693, 0.29", "135.861, 190.769, -66.2077, 0.29", "136.909, 190.459, -66.7952, 0.74", "137.575, 190.285, -67.0762, 0.74", "138.388, 190.084, -67.3697, 0.74", "138.451, 190.068, -67.3941, 0.74", "139.522, 189.819, -67.692, 0.22", "139.587, 189.803, -67.7113, 0.22", "141.344, 189.348, -68.2479, 0.22", "141.417, 189.327, -68.2698, 0.22", "142.489, 189.049, -68.5602, 0.52", "142.555, 189.031, -68.5731, 0.52", "143.229, 188.859, -68.6172, 0.52", "143.444, 188.819, -68.6152, 0.52", "144.11, 188.763, -68.5132, 0.22", "144.178, 188.765, -68.4972, 0.22", "144.738, 188.802, -68.3532, 0.22", "145.028, 188.828, -68.2929, 0.22", "145.856, 188.887, -68.1659, 0.22", "145.993, 188.892, -68.1513, 0.22", "147.239, 188.924, -68.0741, 0.22", "147.808, 188.91, -68.1161, 0.74", "147.876, 188.903, -68.1292, 0.74", "148.881, 188.729, -68.4022, 0.74", "148.954, 188.711, -68.4261, 0.74", "149.182, 188.663, -68.5203, 1.03", "150.725, 188.385, -69.2913, 0.52", "151.608, 188.255, -69.7194, 0.22", "151.67, 188.247, -69.7495, 0.22", "152.184, 188.195, -70.0045, 0.59", "153.267, 188.091, -70.5061, 0.59", "153.425, 188.072, -70.5656, 0.59", "154.287, 187.961, -70.7759, 0.59", "154.363, 187.95, -70.7935, 0.59", "155.001, 187.839, -70.9196, 0.96", "155.078, 187.822, -70.9324, 0.96", "156.043, 187.543, -71.0032, 0.96", "156.118, 187.519, -71.0092, 0.96", "156.819, 187.302, -71.0707, 0.44", "156.886, 187.28, -71.0744, 0.44" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "133.754, 191.318, -64.9202, 0.29", "134.119, 190.054, -65.1748, 0.29", "134.513, 188.692, -65.449, 0.29", "134.719, 187.979, -65.5927, 0.29" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_77", "dend_74", "dend_35", "dend_0", "dend_79", "dend_78", "dend_76", "dend_75", "dend_51", "dend_36", "dend_30", "dend_1", "dend_53", "dend_52", "dend_42", "dend_37", "dend_32", "dend_31", "dend_5", "dend_2", "dend_57", "dend_54", "dend_50", "dend_43", "dend_41", "dend_38", "dend_34", "dend_33", "dend_17", "dend_6", "dend_4", "dend_3", "dend_69", "dend_58", "dend_56", "dend_55", "dend_47", "dend_44", "dend_40", "dend_39", "dend_29", "dend_18", "dend_10", "dend_7", "dend_73", "dend_70", "dend_64", "dend_59", "dend_49", "dend_48", "dend_46", "dend_45", "dend_22", "dend_19", "dend_14", "dend_11", "dend_9", "dend_8", "dend_72", "dend_71", "dend_66", "dend_65", "dend_61", "dend_60", "dend_26", "dend_23", "dend_21", "dend_20", "dend_16", "dend_15", "dend_13", "dend_12", "dend_68", "dend_67", "dend_63", "dend_62", "dend_28", "dend_27", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_77", "dend_74", "dend_35", "dend_0", "dend_79", "dend_78", "dend_76", "dend_75", "dend_51", "dend_36", "dend_30", "dend_1", "dend_53", "dend_52", "dend_42", "dend_37", "dend_32", "dend_31", "dend_5", "dend_2", "dend_57", "dend_54", "dend_50", "dend_43", "dend_41", "dend_38", "dend_34", "dend_33", "dend_17", "dend_6", "dend_4", "dend_3", "dend_69", "dend_58", "dend_56", "dend_55", "dend_47", "dend_44", "dend_40", "dend_39", "dend_29", "dend_18", "dend_10", "dend_7", "dend_73", "dend_70", "dend_64", "dend_59", "dend_49", "dend_48", "dend_46", "dend_45", "dend_22", "dend_19", "dend_14", "dend_11", "dend_9", "dend_8", "dend_72", "dend_71", "dend_66", "dend_65", "dend_61", "dend_60", "dend_26", "dend_23", "dend_21", "dend_20", "dend_16", "dend_15", "dend_13", "dend_12", "dend_68", "dend_67", "dend_63", "dend_62", "dend_28", "dend_27", "dend_25", "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_35", "dend_35", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_68", "dend_67", "dend_63", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_LBC_2571ecba02_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_77, id: dend_77, parent: soma_0
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: soma_0
create dend_74
public dend_74
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_51, id: dend_51, parent: dend_35
create dend_51
public dend_51
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_0
create dend_30
public dend_30
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_42
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_5
create dend_17
public dend_17
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_69, id: dend_69, parent: dend_57
create dend_69
public dend_69
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_29, id: dend_29, parent: dend_17
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_73, id: dend_73, parent: dend_69
create dend_73
public dend_73
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_64, id: dend_64, parent: dend_58
create dend_64
public dend_64
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_77, dend_74, dend_35, dend_0, dend_79, dend_78, dend_76, dend_75, dend_51, dend_36, dend_30, dend_1, dend_53, dend_52, dend_42, dend_37, dend_32, dend_31, dend_5, dend_2, dend_57, dend_54, dend_50, dend_43, dend_41, dend_38, dend_34, dend_33, dend_17, dend_6, dend_4, dend_3, dend_69, dend_58, dend_56, dend_55, dend_47, dend_44, dend_40, dend_39, dend_29, dend_18, dend_10, dend_7, dend_73, dend_70, dend_64, dend_59, dend_49, dend_48, dend_46, dend_45, dend_22, dend_19, dend_14, dend_11, dend_9, dend_8, dend_72, dend_71, dend_66, dend_65, dend_61, dend_60, dend_26, dend_23, dend_21, dend_20, dend_16, dend_15, dend_13, dend_12, dend_68, dend_67, dend_63, dend_62, dend_28, dend_27, dend_25, dend_24]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_77, dend_74, dend_35, dend_0, dend_79, dend_78, dend_76, dend_75, dend_51, dend_36, dend_30, dend_1, dend_53, dend_52, dend_42, dend_37, dend_32, dend_31, dend_5, dend_2, dend_57, dend_54, dend_50, dend_43, dend_41, dend_38, dend_34, dend_33, dend_17, dend_6, dend_4, dend_3, dend_69, dend_58, dend_56, dend_55, dend_47, dend_44, dend_40, dend_39, dend_29, dend_18, dend_10, dend_7, dend_73, dend_70, dend_64, dend_59, dend_49, dend_48, dend_46, dend_45, dend_22, dend_19, dend_14, dend_11, dend_9, dend_8, dend_72, dend_71, dend_66, dend_65, dend_61, dend_60, dend_26, dend_23, dend_21, dend_20, dend_16, dend_15, dend_13, dend_12, dend_68, dend_67, dend_63, dend_62, dend_28, dend_27, dend_25, dend_24]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_78
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_68, dend_67, dend_63, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_77(0), soma_0(0.4500000058507499)
    connect dend_74(0), soma_0(0.4500000058507499)
    connect dend_35(0), soma_0(0.4500000058507499)
    connect dend_0(0), soma_0(0.4500000058507499)
    connect axon_0(0), soma_0(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_51(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_69(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_29(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_73(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_64(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.99972, -12.0853, -1.00194, 2.76544 ) }
    soma_0 { pt3dadd( -0.863765, -10.9633, -0.891247, 4.3109 ) }
    soma_0 { pt3dadd( -0.72781, -9.84136, -0.780557, 4.96188 ) }
    soma_0 { pt3dadd( -0.591856, -8.71938, -0.669868, 5.8069 ) }
    soma_0 { pt3dadd( -0.455901, -7.5974, -0.559178, 7.05068 ) }
    soma_0 { pt3dadd( -0.319946, -6.47541, -0.448489, 8.73524 ) }
    soma_0 { pt3dadd( -0.183991, -5.35343, -0.337799, 10.5744 ) }
    soma_0 { pt3dadd( -0.0480362, -4.23145, -0.22711, 11.5548 ) }
    soma_0 { pt3dadd( 0.0879186, -3.10947, -0.11642, 12.9301 ) }
    soma_0 { pt3dadd( 0.223873, -1.98748, -0.00573068, 14.0229 ) }
    soma_0 { pt3dadd( 0.359828, -0.8655, 0.104959, 14.2607 ) }
    soma_0 { pt3dadd( 0.495783, 0.256482, 0.215648, 14.2925 ) }
    soma_0 { pt3dadd( 0.631738, 1.37846, 0.326338, 14.2253 ) }
    soma_0 { pt3dadd( 0.767693, 2.50045, 0.437027, 14.0078 ) }
    soma_0 { pt3dadd( 0.903648, 3.62243, 0.547717, 13.5909 ) }
    soma_0 { pt3dadd( 1.0396, 4.74441, 0.658406, 13.2474 ) }
    soma_0 { pt3dadd( 1.17556, 5.8664, 0.769096, 12.726 ) }
    soma_0 { pt3dadd( 1.31151, 6.98838, 0.879785, 11.4933 ) }
    soma_0 { pt3dadd( 1.44747, 8.11036, 0.990475, 10.1298 ) }
    soma_0 { pt3dadd( 1.58342, 9.23234, 1.10116, 8.27129 ) }
    soma_0 { pt3dadd( 1.71938, 10.3543, 1.21185, 4.6666 ) }
    // Section: dend_77, id: dend_77, parent: soma_0 (entry count 21/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 2.28033, 5.63042, 12.739, 0.96 ) }
    dend_77 { pt3dadd( 2.30675, 5.69783, 12.739, 0.96 ) }
    dend_77 { pt3dadd( 2.51767, 6.2874, 12.739, 0.96 ) }
    dend_77 { pt3dadd( 2.56099, 6.42293, 12.739, 0.96 ) }
    dend_77 { pt3dadd( 2.7522, 7.07019, 12.739, 0.96 ) }
    dend_77 { pt3dadd( 3.04373, 8.11081, 12.739, 1.25 ) }
    dend_77 { pt3dadd( 3.15857, 8.57749, 12.739, 1.25 ) }
    dend_77 { pt3dadd( 3.33183, 9.42105, 12.6776, 0.81 ) }
    dend_77 { pt3dadd( 3.43474, 10.2623, 12.5625, 0.81 ) }
    dend_77 { pt3dadd( 3.46394, 10.7168, 12.4769, 1.11 ) }
    dend_77 { pt3dadd( 3.46167, 10.7779, 12.4616, 1.11 ) }
    dend_77 { pt3dadd( 3.29753, 11.4948, 12.2438, 1.33 ) }
    dend_77 { pt3dadd( 2.81191, 12.6927, 11.8846, 1.33 ) }
    dend_77 { pt3dadd( 2.45866, 13.3744, 11.6806, 0.96 ) }
    dend_77 { pt3dadd( 2.43281, 13.4197, 11.6684, 0.96 ) }
    dend_77 { pt3dadd( 2.13517, 13.9118, 11.5585, 0.96 ) }
    dend_77 { pt3dadd( 1.50616, 14.9302, 11.3804, 0.96 ) }
    dend_77 { pt3dadd( 0.891596, 15.8741, 11.3201, 0.96 ) }
    dend_77 { pt3dadd( 0.620457, 16.2678, 11.347, 1.4 ) }
    dend_77 { pt3dadd( 0.210376, 16.8604, 11.4521, 1.4 ) }
    dend_77 { pt3dadd( -0.130546, 17.359, 11.5863, 0.96 ) }
    dend_77 { pt3dadd( -0.158342, 17.4007, 11.6043, 0.96 ) }
    dend_77 { pt3dadd( -0.569786, 18.0566, 11.9973, 0.74 ) }
    dend_77 { pt3dadd( -1.01101, 18.7617, 12.5156, 0.74 ) }
    dend_77 { pt3dadd( -1.41537, 19.4848, 13.1127, 0.74 ) }
    dend_77 { pt3dadd( -1.53604, 19.751, 13.3601, 0.74 ) }
    dend_77 { pt3dadd( -1.72562, 20.3068, 13.8882, 0.59 ) }
    dend_77 { pt3dadd( -1.85338, 20.7914, 14.3027, 0.59 ) }
    dend_77 { pt3dadd( -1.86098, 20.8339, 14.334, 0.59 ) }
    dend_77 { pt3dadd( -1.93951, 21.5532, 14.8674, 0.59 ) }
    dend_77 { pt3dadd( -2.00307, 22.1854, 15.3003, 0.74 ) }
    dend_77 { pt3dadd( -2.00746, 22.2942, 15.3791, 0.74 ) }
    dend_77 { pt3dadd( -1.95649, 22.9912, 15.9119, 0.74 ) }
    dend_77 { pt3dadd( -1.91369, 23.3198, 16.1799, 1.03 ) }
    dend_77 { pt3dadd( -1.73746, 23.9678, 16.7672, 1.03 ) }
    dend_77 { pt3dadd( -1.71775, 24.0057, 16.8113, 1.03 ) }
    dend_77 { pt3dadd( -1.23595, 24.6132, 17.6869, 0.74 ) }
    dend_77 { pt3dadd( -0.524518, 25.2545, 18.8174, 0.74 ) }
    dend_77 { pt3dadd( -0.491219, 25.2751, 18.8645, 0.74 ) }
    dend_77 { pt3dadd( 0.233897, 25.6533, 19.7696, 0.74 ) }
    dend_77 { pt3dadd( 1.02487, 26.0603, 20.6963, 0.74 ) }
    dend_77 { pt3dadd( 1.06199, 26.0796, 20.7401, 0.74 ) }
    dend_77 { pt3dadd( 1.3184, 26.2037, 21.0383, 0.74 ) }
    dend_77 { pt3dadd( 1.87345, 26.4722, 21.6425, 1.03 ) }
    dend_77 { pt3dadd( 2.42586, 26.7739, 22.2285, 1.03 ) }
    dend_77 { pt3dadd( 3.5179, 27.468, 23.3425, 0.81 ) }
    dend_77 { pt3dadd( 4.24204, 27.95, 24.0716, 0.81 ) }
    dend_77 { pt3dadd( 4.72845, 28.2699, 24.5671, 0.52 ) }
    dend_77 { pt3dadd( 5.2457, 28.5997, 25.1014, 0.52 ) }
    dend_77 { pt3dadd( 5.29111, 28.6267, 25.1472, 0.52 ) }
    dend_77 { pt3dadd( 5.72988, 28.8394, 25.5905, 0.74 ) }
    dend_77 { pt3dadd( 6.48283, 29.1156, 26.1796, 0.74 ) }
    dend_77 { pt3dadd( 8.32518, 35.6904, 31.796, 0.74 ) }
    // Section: dend_74, id: dend_74, parent: soma_0 (entry count 74/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 0.960327, 8.06642, 4.92909, 0.88 ) }
    dend_74 { pt3dadd( 1.00805, 8.86509, 4.88985, 0.88 ) }
    dend_74 { pt3dadd( 1.03691, 9.84735, 4.84135, 0.88 ) }
    dend_74 { pt3dadd( 1.05828, 11.1239, 4.77325, 0.88 ) }
    dend_74 { pt3dadd( 1.04398, 12.776, 4.68425, 0.88 ) }
    dend_74 { pt3dadd( 1.01151, 13.7971, 4.63118, 0.66 ) }
    dend_74 { pt3dadd( 0.967387, 14.7862, 4.58104, 1.03 ) }
    dend_74 { pt3dadd( 0.877614, 15.9915, 4.51653, 1.03 ) }
    dend_74 { pt3dadd( 0.869313, 16.071, 4.51235, 1.03 ) }
    dend_74 { pt3dadd( 0.758231, 16.9764, 4.46745, 1.18 ) }
    dend_74 { pt3dadd( 0.657986, 17.9867, 4.42855, 1.18 ) }
    dend_74 { pt3dadd( 0.655283, 18.0943, 4.42629, 1.18 ) }
    dend_74 { pt3dadd( 0.756204, 19.3749, 4.40214, 0.96 ) }
    dend_74 { pt3dadd( 0.947297, 20.5334, 4.38768, 0.66 ) }
    dend_74 { pt3dadd( 0.975487, 20.6367, 4.3954, 0.66 ) }
    dend_74 { pt3dadd( 1.42978, 21.8234, 4.57409, 0.59 ) }
    dend_74 { pt3dadd( 1.87411, 22.7396, 4.81399, 0.59 ) }
    dend_74 { pt3dadd( 2.38223, 23.6542, 5.14129, 0.59 ) }
    dend_74 { pt3dadd( 2.42082, 23.7163, 5.17012, 0.59 ) }
    dend_74 { pt3dadd( 3.48597, 25.3645, 6.0291, 0.59 ) }
    dend_74 { pt3dadd( 3.52222, 25.4257, 6.06243, 0.59 ) }
    dend_74 { pt3dadd( 4.05817, 26.4091, 6.70935, 0.96 ) }
    dend_74 { pt3dadd( 4.087, 26.4692, 6.75078, 0.96 ) }
    dend_74 { pt3dadd( 4.38773, 27.2309, 7.25477, 0.96 ) }
    dend_74 { pt3dadd( 4.65682, 27.937, 7.67233, 1.33 ) }
    dend_74 { pt3dadd( 5.05488, 28.9832, 8.17427, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_74 { pt3dadd( 5.45451, 29.9662, 8.6589, 1.62 ) }
    dend_74 { pt3dadd( 5.71478, 30.5467, 9.01418, 1.62 ) }
    dend_74 { pt3dadd( 5.87093, 30.8802, 9.23722, 1.4 ) }
    dend_74 { pt3dadd( 6.14727, 31.4411, 9.6452, 0.66 ) }
    dend_74 { pt3dadd( 6.48235, 32.1208, 10.2313, 0.59 ) }
    dend_74 { pt3dadd( 7.36397, 33.8674, 11.8447, 0.59 ) }
    dend_74 { pt3dadd( 7.94812, 35.042, 12.8984, 0.96 ) }
    dend_74 { pt3dadd( 8.27241, 35.6988, 13.4943, 0.96 ) }
    dend_74 { pt3dadd( 8.30433, 35.7645, 13.5505, 0.96 ) }
    dend_74 { pt3dadd( 9.06266, 37.4137, 14.7945, 0.96 ) }
    dend_74 { pt3dadd( 9.2555, 37.8323, 15.0528, 0.59 ) }
    dend_74 { pt3dadd( 9.77905, 38.8681, 15.4977, 0.59 ) }
    dend_74 { pt3dadd( 10.4523, 40.1429, 15.8981, 0.88 ) }
    dend_74 { pt3dadd( 10.9891, 41.0779, 16.1604, 1.25 ) }
    dend_74 { pt3dadd( 11.724, 42.2612, 16.4237, 1.47 ) }
    dend_74 { pt3dadd( 12.3179, 43.1344, 16.6, 1.47 ) }
    dend_74 { pt3dadd( 12.9738, 43.989, 16.8227, 1.47 ) }
    dend_74 { pt3dadd( 13.0322, 44.057, 16.8445, 1.47 ) }
    dend_74 { pt3dadd( 13.9588, 45.0448, 17.1981, 0.66 ) }
    dend_74 { pt3dadd( 14.7692, 45.8794, 17.5488, 0.66 ) }
    dend_74 { pt3dadd( 15.9813, 47.1591, 18.1405, 0.66 ) }
    dend_74 { pt3dadd( 16.7551, 48.0373, 18.5439, 0.66 ) }
    dend_74 { pt3dadd( 16.8017, 48.0954, 18.5683, 0.66 ) }
    dend_74 { pt3dadd( 17.3853, 48.9022, 18.8379, 0.37 ) }
    dend_74 { pt3dadd( 17.7538, 49.4632, 18.9603, 0.29 ) }
    dend_74 { pt3dadd( 18.1167, 50.035, 19.3277, 0.29 ) }
    dend_74 { pt3dadd( 18.4373, 50.5875, 19.8392, 0.29 ) }
    dend_74 { pt3dadd( 18.6331, 50.9785, 20.3497, 1.11 ) }
    dend_74 { pt3dadd( 18.8944, 51.5091, 21.167, 1.55 ) }
    dend_74 { pt3dadd( 19.1085, 51.969, 21.9543, 1.55 ) }
    dend_74 { pt3dadd( 20.1318, 54.4942, 26.3913, 1.03 ) }
    dend_74 { pt3dadd( 20.2229, 54.7911, 26.8923, 1.03 ) }
    dend_74 { pt3dadd( 20.4253, 55.8074, 28.5466, 0.74 ) }
    dend_74 { pt3dadd( 20.4319, 55.864, 28.6335, 0.74 ) }
    dend_74 { pt3dadd( 20.4551, 56.2805, 29.19, 0.59 ) }
    dend_74 { pt3dadd( 20.5068, 56.9678, 29.8398, 0.59 ) }
    dend_74 { pt3dadd( 20.8544, 58.4767, 30.4458, 0.59 ) }
    dend_74 { pt3dadd( 20.8868, 58.5576, 30.4764, 0.59 ) }
    dend_74 { pt3dadd( 21.5715, 59.838, 30.8898, 0.59 ) }
    dend_74 { pt3dadd( 22.0506, 60.6597, 31.1329, 0.96 ) }
    dend_74 { pt3dadd( 22.7994, 61.7895, 31.4475, 0.96 ) }
    dend_74 { pt3dadd( 23.5998, 62.8605, 31.7182, 1.18 ) }
    dend_74 { pt3dadd( 24.5267, 64.0329, 31.9723, 1.18 ) }
    dend_74 { pt3dadd( 25.336, 65.0586, 32.1567, 1.18 ) }
    dend_74 { pt3dadd( 26.1475, 66.1082, 32.285, 1.55 ) }
    dend_74 { pt3dadd( 26.6008, 66.7142, 32.3577, 1.99 ) }
    dend_74 { pt3dadd( 27.1706, 67.5698, 32.447, 1.99 ) }
    dend_74 { pt3dadd( 27.5115, 68.1174, 32.4892, 1.84 ) }
    dend_74 { pt3dadd( 28.0325, 68.951, 32.5224, 0.81 ) }
    dend_74 { pt3dadd( 28.5099, 69.7125, 32.639, 0.81 ) }
    dend_74 { pt3dadd( 28.5651, 69.7998, 32.6624, 0.81 ) }
    dend_74 { pt3dadd( 28.99, 70.5198, 32.8932, 0.81 ) }
    dend_74 { pt3dadd( 29.0593, 70.634, 32.934, 0.81 ) }
    dend_74 { pt3dadd( 29.5913, 71.4862, 33.2999, 0.81 ) }
    dend_74 { pt3dadd( 30.3256, 72.6788, 33.8476, 1.18 ) }
    dend_74 { pt3dadd( 30.7776, 73.4735, 34.3239, 1.18 ) }
    dend_74 { pt3dadd( 30.8149, 73.5436, 34.3712, 1.18 ) }
    dend_74 { pt3dadd( 31.1782, 74.2883, 34.8703, 1.18 ) }
    dend_74 { pt3dadd( 31.4811, 75.0294, 35.4011, 1.18 ) }
    dend_74 { pt3dadd( 31.6855, 75.6429, 35.812, 0.96 ) }
    dend_74 { pt3dadd( 32.1461, 77.214, 36.7757, 1.18 ) }
    dend_74 { pt3dadd( 32.1665, 77.2888, 36.8266, 1.18 ) }
    dend_74 { pt3dadd( 32.5032, 78.5381, 37.7864, 1.18 ) }
    dend_74 { pt3dadd( 32.876, 80.1559, 39.0576, 1.55 ) }
    dend_74 { pt3dadd( 33.1371, 81.3842, 40.0957, 1.55 ) }
    dend_74 { pt3dadd( 33.1498, 81.4511, 40.1565, 1.55 ) }
    dend_74 { pt3dadd( 33.3657, 83.0171, 41.5434, 1.84 ) }
    dend_74 { pt3dadd( 33.4711, 84.4846, 42.8859, 1.18 ) }
    dend_74 { pt3dadd( 33.4812, 85.4228, 43.7673, 1.18 ) }
    dend_74 { pt3dadd( 33.467, 86.8534, 45.0015, 1.18 ) }
    dend_74 { pt3dadd( 33.4646, 86.9253, 45.0598, 1.18 ) }
    dend_74 { pt3dadd( 33.4148, 88.1951, 45.9446, 1.18 ) }
    dend_74 { pt3dadd( 33.3754, 89.3274, 46.5108, 0.81 ) }
    dend_74 { pt3dadd( 33.3706, 90.0238, 46.7551, 0.59 ) }
    dend_74 { pt3dadd( 33.4733, 91.0378, 47.0014, 0.59 ) }
    dend_74 { pt3dadd( 33.6421, 91.8094, 47.0522, 1.18 ) }
    dend_74 { pt3dadd( 33.6847, 91.9352, 47.0531, 1.18 ) }
    dend_74 { pt3dadd( 34.0121, 92.6285, 47.006, 1.18 ) }
    dend_74 { pt3dadd( 34.0471, 92.699, 46.9967, 1.18 ) }
    dend_74 { pt3dadd( 34.4448, 93.6019, 46.9291, 1.18 ) }
    dend_74 { pt3dadd( 34.8473, 94.764, 46.9031, 0.96 ) }
    dend_74 { pt3dadd( 35.0372, 95.5289, 46.9191, 0.96 ) }
    dend_74 { pt3dadd( 35.1255, 96.2088, 46.9878, 0.52 ) }
    dend_74 { pt3dadd( 35.1078, 96.8109, 47.0951, 0.52 ) }
    dend_74 { pt3dadd( 34.8852, 97.9438, 47.4632, 0.52 ) }
    dend_74 { pt3dadd( 34.5595, 98.7785, 47.8456, 0.88 ) }
    dend_74 { pt3dadd( 34.2431, 99.3755, 48.1693, 0.88 ) }
    dend_74 { pt3dadd( 33.7316, 100.197, 48.66, 0.88 ) }
    dend_74 { pt3dadd( 33.2345, 100.933, 49.1193, 0.66 ) }
    dend_74 { pt3dadd( 32.2999, 102.259, 49.9688, 0.66 ) }
    dend_74 { pt3dadd( 31.9492, 102.763, 50.2766, 0.52 ) }
    dend_74 { pt3dadd( 31.5761, 103.402, 50.6301, 0.44 ) }
    dend_74 { pt3dadd( 31.5361, 103.492, 50.6679, 0.44 ) }
    dend_74 { pt3dadd( 31.3634, 104.201, 50.8332, 0.44 ) }
    dend_74 { pt3dadd( 31.3574, 104.294, 50.8489, 0.44 ) }
    dend_74 { pt3dadd( 31.4225, 105.062, 50.9188, 0.74 ) }
    dend_74 { pt3dadd( 31.5981, 105.931, 50.9916, 1.11 ) }
    dend_74 { pt3dadd( 31.8158, 106.732, 51.055, 1.55 ) }
    dend_74 { pt3dadd( 32.1209, 107.67, 51.1208, 0.96 ) }
    dend_74 { pt3dadd( 32.4624, 108.568, 51.1788, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_74 { pt3dadd( 33.1737, 110.198, 51.2687, 0.37 ) }
    dend_74 { pt3dadd( 33.541, 110.924, 51.3018, 0.37 ) }
    dend_74 { pt3dadd( 33.5876, 111.004, 51.3026, 0.37 ) }
    dend_74 { pt3dadd( 34.0814, 111.778, 51.28, 0.37 ) }
    dend_74 { pt3dadd( 34.1584, 111.897, 51.2717, 0.37 ) }
    dend_74 { pt3dadd( 34.6923, 112.695, 51.1595, 0.37 ) }
    dend_74 { pt3dadd( 34.7476, 112.769, 51.1484, 0.37 ) }
    dend_74 { pt3dadd( 35.3013, 113.551, 51.0649, 0.37 ) }
    dend_74 { pt3dadd( 35.8248, 114.268, 50.9768, 0.81 ) }
    dend_74 { pt3dadd( 39.716, 125.041, 57.4079, 0.81 ) }
    dend_74 { pt3dadd( 42.0904, 136.815, 62.9217, 0.81 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 11/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -1.74967, -10.6761, -2.32091, 3.9 ) }
    dend_35 { pt3dadd( -1.974, -12.9403, -2.32091, 3.9 ) }
    dend_35 { pt3dadd( -2.1213, -14.427, -2.32091, 4.27 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 14/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.00967, 9.13742, -2.82091, 3.68 ) }
    dend_0 { pt3dadd( -1.19566, 10.5728, -2.82091, 3.68 ) }
    dend_0 { pt3dadd( -1.53661, 13.3927, -2.82091, 3.24 ) }
    dend_0 { pt3dadd( -1.94505, 16.5013, -2.82577, 3.24 ) }
    dend_0 { pt3dadd( -2.25096, 18.8295, -2.82942, 3.24 ) }
    dend_0 { pt3dadd( -2.61394, 21.5921, -2.83374, 3.24 ) }
    dend_0 { pt3dadd( -2.95333, 24.1751, -2.83778, 3.61 ) }
    dend_0 { pt3dadd( -3.14334, 25.6288, -2.84052, 3.61 ) }
    dend_0 { pt3dadd( -3.27328, 26.711, -2.84325, 3.61 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 23/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.71938, 10.3543, 1.21185, 0.81 ) }
    axon_0 { pt3dadd( 3.52379, 25.2454, 1.21185, 0.81 ) }
    axon_0 { pt3dadd( 5.32821, 40.1364, 1.21185, 0.81 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 26/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 8.32518, 35.6904, 31.796, 0.74 ) }
    dend_79 { pt3dadd( 10.7049, 44.4868, 37.3415, 0.74 ) }
    dend_79 { pt3dadd( 13.9472, 52.8934, 42.9964, 0.74 ) }
    dend_79 { pt3dadd( 15.1078, 61.6928, 48.9156, 0.74 ) }
    dend_79 { pt3dadd( 17.6391, 68.7872, 56.301, 0.74 ) }
    dend_79 { pt3dadd( 20.5615, 75.058, 64.2001, 0.74 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 32/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 8.32518, 35.6904, 31.796, 0.52 ) }
    dend_78 { pt3dadd( 9.28944, 42.5086, 36.1698, 0.74 ) }
    dend_78 { pt3dadd( 10.7645, 48.0944, 41.8039, 0.74 ) }
    dend_78 { pt3dadd( 13.2129, 53.9062, 46.8559, 0.74 ) }
    dend_78 { pt3dadd( 15.3508, 59.7293, 52.0372, 0.74 ) }
    dend_78 { pt3dadd( 17.0537, 64.5307, 58.2346, 0.74 ) }
    dend_78 { pt3dadd( 18.7489, 68.1254, 65.1361, 0.74 ) }
    dend_78 { pt3dadd( 20.0605, 71.4449, 72.2441, 0.74 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 40/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 42.0904, 136.815, 62.9217, 0.74 ) }
    dend_76 { pt3dadd( 45.8893, 146.932, 68.2057, 0.74 ) }
    dend_76 { pt3dadd( 49.2932, 156.524, 74.5517, 0.74 ) }
    dend_76 { pt3dadd( 51.7418, 166.009, 81.4697, 0.74 ) }
    dend_76 { pt3dadd( 52.9095, 175.533, 88.6785, 0.74 ) }
    dend_76 { pt3dadd( 55.1029, 186.495, 93.3158, 0.74 ) }
    dend_76 { pt3dadd( 57.5678, 197.102, 98.5328, 0.74 ) }
    dend_76 { pt3dadd( 57.746, 208.71, 102.169, 0.74 ) }
    dend_76 { pt3dadd( 56.3757, 220.195, 105.931, 0.74 ) }
    dend_76 { pt3dadd( 55.5662, 231.818, 109.45, 0.74 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 50/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 42.0904, 136.815, 62.9217, 0.52 ) }
    dend_75 { pt3dadd( 44.7693, 145.449, 66.537, 0.74 ) }
    dend_75 { pt3dadd( 47.5098, 153.771, 70.7213, 0.74 ) }
    dend_75 { pt3dadd( 50.8171, 161.928, 74.8007, 0.74 ) }
    dend_75 { pt3dadd( 53.8489, 169.982, 79.2528, 0.74 ) }
    dend_75 { pt3dadd( 58.106, 178.109, 82.437, 0.74 ) }
    dend_75 { pt3dadd( 60.8093, 186.641, 86.2467, 0.74 ) }
    dend_75 { pt3dadd( 62.5878, 195.841, 89.0456, 0.74 ) }
    dend_75 { pt3dadd( 65.9966, 204.227, 92.5947, 0.74 ) }
    dend_75 { pt3dadd( 68.3054, 212.674, 96.8025, 0.74 ) }
    // Section: dend_51, id: dend_51, parent: dend_35 (entry count 60/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -2.1213, -14.427, -2.32091, 1.62 ) }
    dend_51 { pt3dadd( -2.36208, -14.6839, -2.43387, 1.62 ) }
    dend_51 { pt3dadd( -3.26035, -15.6423, -2.85531, 1.47 ) }
    dend_51 { pt3dadd( -4.29859, -16.7501, -3.34241, 1.4 ) }
    dend_51 { pt3dadd( -5.03997, -17.5411, -3.69023, 1.55 ) }
    dend_51 { pt3dadd( -5.82067, -18.3741, -4.05651, 1.55 ) }
    dend_51 { pt3dadd( -6.21515, -18.795, -4.24158, 1.69 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 67/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -2.1213, -14.427, -2.32091, 1.84 ) }
    dend_36 { pt3dadd( -2.10566, -14.5576, -2.3089, 1.84 ) }
    dend_36 { pt3dadd( -1.95264, -16.2198, -2.15625, 1.99 ) }
    dend_36 { pt3dadd( -1.81221, -18.0916, -1.98855, 1.84 ) }
    dend_36 { pt3dadd( -1.62254, -20.6196, -1.76205, 1.47 ) }
    dend_36 { pt3dadd( -1.36826, -24.0088, -1.45839, 1.47 ) }
    dend_36 { pt3dadd( -1.26451, -25.3916, -1.3345, 2.06 ) }
    dend_36 { pt3dadd( -1.2128, -26.3114, -1.25626, 2.5 ) }
    dend_36 { pt3dadd( -1.19263, -27.5571, -1.15586, 2.43 ) }
    // Section: dend_30, id: dend_30, parent: dend_0 (entry count 76/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.27328, 26.711, -2.84325, 0.96 ) }
    dend_30 { pt3dadd( -1.30845, 28.2173, -4.21297, 0.96 ) }
    dend_30 { pt3dadd( -0.775976, 28.7882, -4.60707, 1.03 ) }
    dend_30 { pt3dadd( -0.344794, 29.3231, -4.94183, 1.03 ) }
    dend_30 { pt3dadd( -0.278612, 29.4129, -4.98957, 1.03 ) }
    dend_30 { pt3dadd( 0.351729, 30.3125, -5.40368, 1.03 ) }
    dend_30 { pt3dadd( 0.387732, 30.3624, -5.42394, 1.03 ) }
    dend_30 { pt3dadd( 1.28067, 31.7204, -5.79717, 1.03 ) }
    dend_30 { pt3dadd( 1.37969, 31.8416, -5.83114, 1.03 ) }
    dend_30 { pt3dadd( 2.12299, 32.5474, -6.06608, 1.03 ) }
    dend_30 { pt3dadd( 2.59916, 32.8826, -6.19436, 1.11 ) }
    dend_30 { pt3dadd( 3.34121, 33.1595, -6.42391, 1.11 ) }
    dend_30 { pt3dadd( 4.36229, 33.1707, -7.09531, 1.33 ) }
    dend_30 { pt3dadd( 4.84487, 33.0627, -7.74809, 1.47 ) }
    dend_30 { pt3dadd( 4.87487, 33.0565, -7.8032, 1.47 ) }
    dend_30 { pt3dadd( 5.1864, 32.9883, -8.52334, 1.47 ) }
    dend_30 { pt3dadd( 5.81635, 32.9058, -10.3259, 0.96 ) }
    dend_30 { pt3dadd( 6.76467, 32.8878, -13.7444, 0.81 ) }
    dend_30 { pt3dadd( 7.43243, 32.9966, -16.8205, 0.96 ) }
    dend_30 { pt3dadd( 7.64228, 33.0689, -17.9896, 0.96 ) }
    dend_30 { pt3dadd( 7.65174, 33.0747, -18.0516, 0.96 ) }
    dend_30 { pt3dadd( 7.77513, 33.2674, -19.2666, 0.96 ) }
    dend_30 { pt3dadd( 7.77765, 33.2868, -19.3268, 0.96 ) }
    dend_30 { pt3dadd( 7.77595, 33.3279, -19.3809, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 0/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.27328, 26.711, -2.84325, 2.14 ) }
    dend_1 { pt3dadd( -3.66293, 27.6443, -2.82958, 2.14 ) }
    dend_1 { pt3dadd( -4.31966, 29.4061, -2.80748, 3.0 ) }
    dend_1 { pt3dadd( -4.90707, 31.1375, -2.85258, 2.28 ) }
    dend_1 { pt3dadd( -5.45371, 32.8716, -3.04234, 2.14 ) }
    dend_1 { pt3dadd( -5.87682, 34.2519, -3.24907, 2.21 ) }
    dend_1 { pt3dadd( -6.27047, 35.5361, -3.44141, 2.36 ) }
    dend_1 { pt3dadd( -6.70182, 37.0272, -3.70429, 2.36 ) }
    dend_1 { pt3dadd( -7.09741, 38.6826, -4.06519, 2.21 ) }
    dend_1 { pt3dadd( -7.5208, 40.757, -4.63277, 2.21 ) }
    dend_1 { pt3dadd( -7.81154, 42.1581, -5.12502, 1.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.32821, 40.1364, 1.21185, 0.15 ) }
    axon_1 { pt3dadd( 7.13262, 55.0275, 1.21185, 0.15 ) }
    axon_1 { pt3dadd( 8.93703, 69.9186, 1.21185, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 14/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -6.21515, -18.795, -4.24158, 0.66 ) }
    dend_53 { pt3dadd( -6.84441, -20.097, -4.09236, 0.66 ) }
    dend_53 { pt3dadd( -7.09005, -20.6931, -4.04675, 0.66 ) }
    dend_53 { pt3dadd( -7.11556, -20.7569, -4.0405, 0.66 ) }
    dend_53 { pt3dadd( -7.51179, -21.7458, -3.94808, 0.66 ) }
    dend_53 { pt3dadd( -7.89168, -22.6826, -3.87275, 0.66 ) }
    dend_53 { pt3dadd( -8.1181, -23.2315, -3.83121, 0.96 ) }
    dend_53 { pt3dadd( -8.43975, -24.0395, -3.74947, 1.18 ) }
    dend_53 { pt3dadd( -8.8182, -24.9112, -3.59193, 0.66 ) }
    dend_53 { pt3dadd( -9.22157, -25.6662, -3.34146, 0.66 ) }
    dend_53 { pt3dadd( -9.37912, -25.8613, -3.21629, 0.66 ) }
    dend_53 { pt3dadd( -9.4402, -25.8913, -3.15085, 0.66 ) }
    dend_53 { pt3dadd( -10.311, -25.7163, -1.88631, 0.66 ) }
    dend_53 { pt3dadd( -10.3386, -25.701, -1.83968, 0.66 ) }
    dend_53 { pt3dadd( -10.8214, -25.2756, -0.908751, 0.66 ) }
    dend_53 { pt3dadd( -11.14, -24.9352, -0.275738, 0.96 ) }
    dend_53 { pt3dadd( -11.6922, -24.3481, 0.905219, 0.96 ) }
    dend_53 { pt3dadd( -12.3686, -23.7256, 2.39403, 0.96 ) }
    dend_53 { pt3dadd( -12.3913, -23.7087, 2.44285, 0.96 ) }
    dend_53 { pt3dadd( -13.0566, -23.3794, 3.80697, 0.59 ) }
    dend_53 { pt3dadd( -13.3086, -23.3258, 4.29969, 0.59 ) }
    dend_53 { pt3dadd( -14.4932, -23.4619, 6.46143, 0.59 ) }
    dend_53 { pt3dadd( -15.339, -23.8672, 7.78542, 1.25 ) }
    dend_53 { pt3dadd( -15.7796, -24.2492, 8.38784, 1.4 ) }
    dend_53 { pt3dadd( -16.2446, -24.8002, 8.93827, 0.74 ) }
    dend_53 { pt3dadd( -16.5334, -25.2963, 9.18027, 0.74 ) }
    dend_53 { pt3dadd( -16.8736, -26.0728, 9.30781, 0.74 ) }
    dend_53 { pt3dadd( -17.1425, -26.8298, 9.21103, 0.74 ) }
    dend_53 { pt3dadd( -17.4002, -27.6457, 9.0175, 1.11 ) }
    dend_53 { pt3dadd( -17.7985, -28.9579, 8.66975, 0.37 ) }
    dend_53 { pt3dadd( -17.9553, -29.4867, 8.51733, 0.37 ) }
    dend_53 { pt3dadd( -18.2439, -30.397, 8.23729, 0.37 ) }
    dend_53 { pt3dadd( -18.5948, -31.2857, 7.96522, 1.18 ) }
    dend_53 { pt3dadd( -18.897, -31.9226, 7.78111, 1.47 ) }
    dend_53 { pt3dadd( -18.9676, -32.0364, 7.7525, 1.47 ) }
    dend_53 { pt3dadd( -19.2701, -32.4228, 7.68454, 1.47 ) }
    dend_53 { pt3dadd( -19.6641, -32.8647, 7.59423, 0.81 ) }
    dend_53 { pt3dadd( -20.2042, -33.3917, 7.46941, 0.81 ) }
    dend_53 { pt3dadd( -20.255, -33.4346, 7.45784, 0.81 ) }
    dend_53 { pt3dadd( -20.9964, -33.9654, 7.29869, 0.81 ) }
    dend_53 { pt3dadd( -21.7945, -34.5133, 7.12807, 0.81 ) }
    dend_53 { pt3dadd( -22.3816, -34.8955, 7.00315, 0.37 ) }
    dend_53 { pt3dadd( -22.5922, -35.033, 6.95828, 0.37 ) }
    dend_53 { pt3dadd( -23.0997, -35.3824, 6.85094, 0.37 ) }
    dend_53 { pt3dadd( -24.3201, -36.2214, 6.60638, 0.37 ) }
    dend_53 { pt3dadd( -30.6552, -42.1227, 10.5744, 0.37 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 60/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -6.21515, -18.795, -4.24158, 1.25 ) }
    dend_52 { pt3dadd( -6.14067, -19.6814, -4.34093, 1.25 ) }
    dend_52 { pt3dadd( -6.06662, -20.9494, -4.47188, 1.25 ) }
    dend_52 { pt3dadd( -6.06361, -21.0645, -4.48248, 1.25 ) }
    dend_52 { pt3dadd( -6.08008, -22.0537, -4.56256, 1.25 ) }
    dend_52 { pt3dadd( -6.08716, -22.177, -4.57123, 1.25 ) }
    dend_52 { pt3dadd( -6.17734, -23.1599, -4.63167, 1.25 ) }
    dend_52 { pt3dadd( -6.26765, -23.8148, -4.6724, 1.33 ) }
    dend_52 { pt3dadd( -6.40108, -24.5847, -4.71591, 1.33 ) }
    dend_52 { pt3dadd( -6.61723, -25.6925, -4.76768, 1.18 ) }
    dend_52 { pt3dadd( -6.9128, -27.0416, -4.81519, 1.18 ) }
    dend_52 { pt3dadd( -7.28703, -28.6582, -4.91006, 1.18 ) }
    dend_52 { pt3dadd( -7.30417, -28.7215, -4.91566, 1.18 ) }
    dend_52 { pt3dadd( -7.64828, -29.8404, -5.04341, 1.18 ) }
    dend_52 { pt3dadd( -7.96156, -30.7302, -5.16823, 1.18 ) }
    dend_52 { pt3dadd( -7.98289, -30.7828, -5.17704, 1.18 ) }
    dend_52 { pt3dadd( -8.4748, -31.8164, -5.37911, 1.18 ) }
    dend_52 { pt3dadd( -9.11411, -32.9734, -5.63101, 1.18 ) }
    dend_52 { pt3dadd( -9.58584, -33.7817, -5.83633, 1.4 ) }
    dend_52 { pt3dadd( -10.0053, -34.457, -6.0293, 1.77 ) }
    dend_52 { pt3dadd( -10.4594, -35.1399, -6.24097, 1.77 ) }
    dend_52 { pt3dadd( -10.9815, -35.9112, -6.48266, 1.77 ) }
    dend_52 { pt3dadd( -11.5662, -36.7458, -6.74618, 1.25 ) }
    dend_52 { pt3dadd( -12.126, -37.5669, -7.0194, 0.96 ) }
    dend_52 { pt3dadd( -12.4912, -38.1215, -7.1995, 1.18 ) }
    dend_52 { pt3dadd( -12.6536, -38.3819, -7.27841, 1.18 ) }
    dend_52 { pt3dadd( -12.8748, -38.7404, -7.37649, 1.18 ) }
    dend_52 { pt3dadd( -12.9034, -38.7878, -7.38984, 1.18 ) }
    dend_52 { pt3dadd( -13.3953, -39.5927, -7.60891, 1.03 ) }
    dend_52 { pt3dadd( -13.7498, -40.1549, -7.7519, 0.81 ) }
    dend_52 { pt3dadd( -14.2232, -40.9351, -7.96545, 0.81 ) }
    dend_52 { pt3dadd( -14.7271, -41.8256, -8.20709, 1.4 ) }
    dend_52 { pt3dadd( -15.2375, -42.8004, -8.46339, 1.55 ) }
    dend_52 { pt3dadd( -15.724, -43.8245, -8.73437, 1.69 ) }
    dend_52 { pt3dadd( -16.0567, -44.6099, -8.95553, 1.69 ) }
    dend_52 { pt3dadd( -16.3299, -45.3608, -9.16433, 1.11 ) }
    dend_52 { pt3dadd( -16.6279, -46.291, -9.40983, 0.81 ) }
    dend_52 { pt3dadd( -16.8447, -47.048, -9.5967, 0.81 ) }
    dend_52 { pt3dadd( -17.3968, -49.1124, -10.056, 0.81 ) }
    dend_52 { pt3dadd( -17.6238, -50.035, -10.2733, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_52 { pt3dadd( -17.8054, -50.7854, -10.4582, 1.18 ) }
    dend_52 { pt3dadd( -17.9567, -51.3901, -10.6092, 1.18 ) }
    dend_52 { pt3dadd( -18.1109, -51.9743, -10.7608, 1.03 ) }
    dend_52 { pt3dadd( -18.2948, -52.6424, -10.9314, 0.74 ) }
    dend_52 { pt3dadd( -18.4896, -53.3848, -11.1114, 0.52 ) }
    dend_52 { pt3dadd( -18.505, -53.4387, -11.1245, 0.52 ) }
    dend_52 { pt3dadd( -18.6494, -53.927, -11.2784, 0.52 ) }
    dend_52 { pt3dadd( -18.8753, -54.7276, -11.5706, 0.81 ) }
    dend_52 { pt3dadd( -18.8903, -54.7789, -11.5913, 0.81 ) }
    dend_52 { pt3dadd( -19.1155, -55.4514, -11.8729, 1.18 ) }
    dend_52 { pt3dadd( -19.3604, -56.1215, -12.1516, 1.18 ) }
    dend_52 { pt3dadd( -19.6433, -56.9071, -12.5184, 1.03 ) }
    dend_52 { pt3dadd( -19.9141, -57.6445, -12.9159, 0.66 ) }
    dend_52 { pt3dadd( -19.9513, -57.7456, -12.9732, 0.66 ) }
    dend_52 { pt3dadd( -20.2127, -58.4235, -13.3473, 0.52 ) }
    dend_52 { pt3dadd( -20.2345, -58.4767, -13.3776, 0.52 ) }
    dend_52 { pt3dadd( -20.5873, -59.278, -13.8659, 1.55 ) }
    dend_52 { pt3dadd( -20.9169, -59.9911, -14.2887, 1.99 ) }
    dend_52 { pt3dadd( -21.1674, -60.5256, -14.6007, 2.28 ) }
    dend_52 { pt3dadd( -21.511, -61.2447, -14.9924, 1.92 ) }
    dend_52 { pt3dadd( -21.8902, -62.014, -15.3743, 0.37 ) }
    dend_52 { pt3dadd( -21.9147, -62.0613, -15.395, 0.37 ) }
    dend_52 { pt3dadd( -22.21, -62.5979, -15.5801, 0.37 ) }
    dend_52 { pt3dadd( -22.4693, -63.0723, -15.7456, 0.29 ) }
    dend_52 { pt3dadd( -22.8643, -63.8069, -16.0063, 0.29 ) }
    dend_52 { pt3dadd( -23.173, -64.3885, -16.2008, 0.29 ) }
    dend_52 { pt3dadd( -23.1982, -64.4375, -16.2157, 0.29 ) }
    dend_52 { pt3dadd( -23.6348, -65.3381, -16.5331, 0.29 ) }
    dend_52 { pt3dadd( -24.1498, -66.4711, -16.9704, 0.29 ) }
    dend_52 { pt3dadd( -24.3992, -67.0611, -17.2039, 1.62 ) }
    dend_52 { pt3dadd( -24.7145, -67.8447, -17.5126, 2.21 ) }
    dend_52 { pt3dadd( -24.9855, -68.5296, -17.7849, 1.55 ) }
    dend_52 { pt3dadd( -25.3388, -69.423, -18.1258, 0.29 ) }
    dend_52 { pt3dadd( -25.5051, -69.8421, -18.2766, 0.29 ) }
    dend_52 { pt3dadd( -25.8175, -70.6488, -18.5218, 0.29 ) }
    dend_52 { pt3dadd( -26.1125, -71.4117, -18.7484, 0.29 ) }
    dend_52 { pt3dadd( -26.2806, -71.8363, -18.8643, 0.66 ) }
    dend_52 { pt3dadd( -26.5274, -72.3941, -18.9908, 1.03 ) }
    dend_52 { pt3dadd( -26.7009, -72.7527, -19.0496, 0.52 ) }
    dend_52 { pt3dadd( -26.8501, -73.0592, -19.0995, 0.52 ) }
    dend_52 { pt3dadd( -26.981, -73.3369, -19.1415, 0.22 ) }
    dend_52 { pt3dadd( -27.208, -73.8741, -19.2074, 0.22 ) }
    dend_52 { pt3dadd( -27.5306, -74.7402, -19.3274, 0.22 ) }
    dend_52 { pt3dadd( -27.5513, -74.8015, -19.338, 0.22 ) }
    dend_52 { pt3dadd( -27.7515, -75.4164, -19.4594, 0.66 ) }
    dend_52 { pt3dadd( -27.8501, -75.6951, -19.5205, 1.25 ) }
    dend_52 { pt3dadd( -28.0248, -76.1924, -19.639, 1.25 ) }
    dend_52 { pt3dadd( -28.2713, -76.8622, -19.81, 0.29 ) }
    dend_52 { pt3dadd( -28.2944, -76.9216, -19.8251, 0.29 ) }
    dend_52 { pt3dadd( -28.5837, -77.6134, -19.9998, 0.29 ) }
    dend_52 { pt3dadd( -28.9633, -78.44, -20.2072, 0.29 ) }
    dend_52 { pt3dadd( -29.1615, -78.8477, -20.3013, 1.25 ) }
    dend_52 { pt3dadd( -29.3936, -79.3102, -20.3955, 1.69 ) }
    dend_52 { pt3dadd( -29.7231, -79.998, -20.5332, 0.66 ) }
    dend_52 { pt3dadd( -29.7456, -80.0495, -20.5447, 0.66 ) }
    dend_52 { pt3dadd( -29.8688, -80.3652, -20.6221, 0.22 ) }
    dend_52 { pt3dadd( -30.1678, -81.2099, -20.8388, 0.22 ) }
    dend_52 { pt3dadd( -30.1857, -81.2626, -20.8528, 0.22 ) }
    dend_52 { pt3dadd( -30.4523, -82.1158, -21.1064, 0.88 ) }
    dend_52 { pt3dadd( -30.6082, -82.6304, -21.2841, 0.88 ) }
    dend_52 { pt3dadd( -30.6314, -82.7099, -21.3132, 0.88 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 61/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -1.19263, -27.5571, -1.15586, 1.4 ) }
    dend_42 { pt3dadd( -1.0633, -28.0603, -0.880905, 1.4 ) }
    dend_42 { pt3dadd( -0.844146, -29.225, -0.14339, 1.11 ) }
    dend_42 { pt3dadd( -0.629263, -30.4524, 0.621617, 1.03 ) }
    dend_42 { pt3dadd( -0.617302, -30.5185, 0.660818, 1.03 ) }
    dend_42 { pt3dadd( -0.416197, -31.4434, 1.17856, 1.03 ) }
    dend_42 { pt3dadd( -0.0788638, -32.8004, 1.89402, 1.03 ) }
    dend_42 { pt3dadd( 0.256908, -34.0362, 2.50628, 1.47 ) }
    dend_42 { pt3dadd( 0.575372, -35.021, 2.95689, 1.47 ) }
    dend_42 { pt3dadd( 0.924107, -35.93, 3.32465, 1.18 ) }
    dend_42 { pt3dadd( 1.43044, -37.1268, 3.78219, 1.18 ) }
    dend_42 { pt3dadd( 1.86115, -38.0168, 4.09326, 1.55 ) }
    dend_42 { pt3dadd( 2.37766, -38.9401, 4.35197, 1.55 ) }
    dend_42 { pt3dadd( 3.05278, -40.0326, 4.61442, 1.33 ) }
    dend_42 { pt3dadd( 3.89754, -41.3059, 4.9208, 0.96 ) }
    dend_42 { pt3dadd( 3.94631, -41.3773, 4.93785, 0.96 ) }
    dend_42 { pt3dadd( 4.70665, -42.4773, 5.19421, 0.81 ) }
    dend_42 { pt3dadd( 5.29691, -43.3012, 5.38213, 0.81 ) }
    dend_42 { pt3dadd( 5.96836, -44.2061, 5.57458, 1.03 ) }
    dend_42 { pt3dadd( 6.26179, -44.572, 5.64172, 1.03 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 81/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -1.19263, -27.5571, -1.15586, 1.69 ) }
    dend_37 { pt3dadd( -1.36583, -27.9018, -1.19437, 1.69 ) }
    dend_37 { pt3dadd( -1.62797, -28.6212, -1.28756, 1.69 ) }
    dend_37 { pt3dadd( -1.95628, -29.7209, -1.42421, 1.47 ) }
    dend_37 { pt3dadd( -1.9743, -29.7859, -1.43165, 1.47 ) }
    dend_37 { pt3dadd( -2.30238, -30.9832, -1.58234, 1.11 ) }
    dend_37 { pt3dadd( -2.70838, -32.539, -1.77896, 1.11 ) }
    dend_37 { pt3dadd( -3.11327, -34.3524, -1.96354, 1.11 ) }
    dend_37 { pt3dadd( -3.23507, -35.031, -2.01514, 1.77 ) }
    dend_37 { pt3dadd( -3.42533, -36.245, -2.07977, 1.77 ) }
    dend_37 { pt3dadd( -3.49434, -36.7494, -2.09512, 1.55 ) }
    dend_37 { pt3dadd( -3.61095, -37.8125, -2.08635, 1.33 ) }
    dend_37 { pt3dadd( -3.73488, -39.1567, -2.03112, 1.25 ) }
    dend_37 { pt3dadd( -3.86507, -40.854, -1.92621, 1.25 ) }
    dend_37 { pt3dadd( -3.94186, -42.0431, -1.84879, 1.55 ) }
    dend_37 { pt3dadd( -3.99173, -42.995, -1.80482, 1.55 ) }
    dend_37 { pt3dadd( -4.03665, -43.7561, -1.78219, 0.81 ) }
    dend_37 { pt3dadd( -4.3074, -47.2661, -1.7687, 0.81 ) }
    dend_37 { pt3dadd( -4.40116, -48.2078, -1.79212, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_37 { pt3dadd( -4.53296, -49.2714, -1.83568, 0.88 ) }
    dend_37 { pt3dadd( -4.73658, -50.6287, -1.9447, 1.69 ) }
    dend_37 { pt3dadd( -4.93291, -51.7036, -2.07428, 1.92 ) }
    dend_37 { pt3dadd( -5.11935, -52.6275, -2.22868, 1.92 ) }
    dend_37 { pt3dadd( -5.35245, -53.6507, -2.44441, 1.92 ) }
    dend_37 { pt3dadd( -5.36693, -53.7157, -2.45745, 1.92 ) }
    dend_37 { pt3dadd( -5.70368, -55.2027, -2.75428, 2.28 ) }
    dend_37 { pt3dadd( -5.71703, -55.2682, -2.76555, 2.28 ) }
    dend_37 { pt3dadd( -5.8735, -56.2428, -2.95006, 2.5 ) }
    dend_37 { pt3dadd( -5.99702, -57.2825, -3.15567, 2.36 ) }
    dend_37 { pt3dadd( -6.09164, -58.3277, -3.35089, 1.92 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 11/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 7.77595, 33.3279, -19.3809, 0.66 ) }
    dend_32 { pt3dadd( 7.98441, 33.7605, -19.8053, 0.66 ) }
    dend_32 { pt3dadd( 8.50846, 34.8274, -20.7574, 0.96 ) }
    dend_32 { pt3dadd( 8.54802, 34.892, -20.815, 0.96 ) }
    dend_32 { pt3dadd( 9.67309, 36.5035, -22.255, 0.29 ) }
    dend_32 { pt3dadd( 9.7716, 36.6107, -22.3573, 0.29 ) }
    dend_32 { pt3dadd( 10.6608, 37.3377, -23.1394, 0.29 ) }
    dend_32 { pt3dadd( 10.7207, 37.3574, -23.1917, 0.29 ) }
    dend_32 { pt3dadd( 11.4506, 37.3725, -23.7679, 0.59 ) }
    dend_32 { pt3dadd( 11.5285, 37.3715, -23.8186, 0.59 ) }
    dend_32 { pt3dadd( 12.5915, 37.3738, -24.3441, 0.88 ) }
    dend_32 { pt3dadd( 13.1795, 37.4417, -24.6868, 0.88 ) }
    dend_32 { pt3dadd( 14.8295, 37.7229, -25.7684, 0.59 ) }
    dend_32 { pt3dadd( 15.3683, 37.8664, -26.1285, 0.88 ) }
    dend_32 { pt3dadd( 16.2893, 38.2227, -26.7662, 1.25 ) }
    dend_32 { pt3dadd( 17.0758, 38.5812, -27.278, 0.96 ) }
    dend_32 { pt3dadd( 18.3847, 39.2951, -28.0355, 0.44 ) }
    dend_32 { pt3dadd( 18.458, 39.3392, -28.0754, 0.44 ) }
    dend_32 { pt3dadd( 19.2836, 39.849, -28.4607, 0.44 ) }
    dend_32 { pt3dadd( 19.8912, 40.2043, -28.7501, 1.11 ) }
    dend_32 { pt3dadd( 20.8211, 40.7636, -29.1796, 1.47 ) }
    dend_32 { pt3dadd( 21.7818, 41.3836, -29.5861, 1.03 ) }
    dend_32 { pt3dadd( 23.1038, 42.385, -30.1402, 0.52 ) }
    dend_32 { pt3dadd( 23.9314, 43.1258, -30.5166, 0.52 ) }
    dend_32 { pt3dadd( 23.9858, 43.1839, -30.543, 0.52 ) }
    dend_32 { pt3dadd( 24.8289, 44.2183, -30.9437, 0.52 ) }
    dend_32 { pt3dadd( 25.1588, 44.6884, -31.1541, 0.52 ) }
    dend_32 { pt3dadd( 26.0612, 46.0178, -31.8415, 0.52 ) }
    dend_32 { pt3dadd( 26.5112, 46.6731, -32.2411, 1.03 ) }
    dend_32 { pt3dadd( 26.8137, 47.1136, -32.5476, 1.55 ) }
    dend_32 { pt3dadd( 27.507, 48.1887, -33.2997, 1.55 ) }
    dend_32 { pt3dadd( 28.6619, 50.1036, -34.7504, 1.55 ) }
    dend_32 { pt3dadd( 29.4964, 51.5847, -35.8988, 0.44 ) }
    dend_32 { pt3dadd( 30.1771, 52.886, -36.8722, 0.44 ) }
    dend_32 { pt3dadd( 30.2679, 53.0689, -37.0103, 0.44 ) }
    dend_32 { pt3dadd( 30.9507, 54.4428, -38.0073, 0.44 ) }
    dend_32 { pt3dadd( 31.7443, 56.0157, -39.1421, 0.44 ) }
    dend_32 { pt3dadd( 31.7785, 56.0804, -39.1833, 0.44 ) }
    dend_32 { pt3dadd( 32.2478, 57.0296, -39.897, 0.44 ) }
    dend_32 { pt3dadd( 32.9908, 58.5122, -41.1258, 1.84 ) }
    dend_32 { pt3dadd( 33.4336, 59.4069, -41.9231, 2.14 ) }
    dend_32 { pt3dadd( 34.2272, 61.0808, -43.5845, 1.33 ) }
    dend_32 { pt3dadd( 34.532, 61.7801, -44.2857, 1.03 ) }
    dend_32 { pt3dadd( 35.5243, 64.2973, -46.9115, 0.52 ) }
    dend_32 { pt3dadd( 35.5555, 64.3934, -47.0103, 0.52 ) }
    dend_32 { pt3dadd( 35.721, 65.0459, -47.6213, 0.52 ) }
    dend_32 { pt3dadd( 35.965, 66.0867, -48.4557, 0.52 ) }
    dend_32 { pt3dadd( 36.1918, 66.9677, -48.9572, 0.52 ) }
    dend_32 { pt3dadd( 36.2452, 67.1472, -49.0424, 0.52 ) }
    dend_32 { pt3dadd( 36.8116, 68.8037, -49.6022, 0.52 ) }
    dend_32 { pt3dadd( 37.4439, 70.6236, -50.2136, 1.4 ) }
    dend_32 { pt3dadd( 37.8693, 71.7599, -50.56, 1.77 ) }
    dend_32 { pt3dadd( 38.2903, 72.8727, -50.8496, 1.25 ) }
    dend_32 { pt3dadd( 38.7699, 74.1763, -51.1926, 0.44 ) }
    dend_32 { pt3dadd( 39.2087, 75.2309, -51.4634, 0.44 ) }
    dend_32 { pt3dadd( 39.2962, 75.4108, -51.5141, 0.44 ) }
    dend_32 { pt3dadd( 40.2721, 77.2011, -51.9712, 0.44 ) }
    dend_32 { pt3dadd( 40.3697, 77.3694, -52.0154, 0.44 ) }
    dend_32 { pt3dadd( 41.255, 78.8855, -52.365, 1.69 ) }
    dend_32 { pt3dadd( 42.1023, 80.3329, -52.6432, 1.69 ) }
    dend_32 { pt3dadd( 42.9322, 81.8893, -52.9695, 0.37 ) }
    dend_32 { pt3dadd( 43.7304, 83.5517, -53.3263, 0.37 ) }
    dend_32 { pt3dadd( 43.7622, 83.6279, -53.3463, 0.37 ) }
    dend_32 { pt3dadd( 44.5693, 85.7509, -54.0387, 0.37 ) }
    dend_32 { pt3dadd( 44.6549, 85.9874, -54.1264, 0.37 ) }
    dend_32 { pt3dadd( 45.3801, 88.1378, -55.0998, 0.37 ) }
    dend_32 { pt3dadd( 45.4059, 88.2097, -55.1339, 0.37 ) }
    dend_32 { pt3dadd( 46.0507, 89.8604, -55.9639, 0.37 ) }
    dend_32 { pt3dadd( 47.1083, 92.3362, -57.2344, 1.77 ) }
    dend_32 { pt3dadd( 47.4883, 93.1617, -57.658, 2.21 ) }
    dend_32 { pt3dadd( 48.413, 95.1322, -58.5275, 1.18 ) }
    dend_32 { pt3dadd( 48.9843, 96.2865, -58.9388, 0.22 ) }
    dend_32 { pt3dadd( 49.4565, 97.3064, -59.1938, 0.22 ) }
    dend_32 { pt3dadd( 49.4891, 97.3846, -59.2025, 0.22 ) }
    dend_32 { pt3dadd( 49.9661, 98.7533, -59.2185, 0.22 ) }
    dend_32 { pt3dadd( 50.3624, 99.9465, -59.2146, 0.22 ) }
    dend_32 { pt3dadd( 50.4195, 100.108, -59.21, 0.22 ) }
    dend_32 { pt3dadd( 50.7953, 101.109, -59.2645, 0.22 ) }
    dend_32 { pt3dadd( 51.1645, 101.902, -59.3315, 1.11 ) }
    dend_32 { pt3dadd( 51.5101, 102.482, -59.3939, 1.11 ) }
    dend_32 { pt3dadd( 51.8985, 102.982, -59.4665, 0.29 ) }
    dend_32 { pt3dadd( 52.1418, 103.284, -59.5355, 0.29 ) }
    dend_32 { pt3dadd( 52.5172, 103.774, -59.6799, 0.29 ) }
    dend_32 { pt3dadd( 52.8389, 104.166, -59.7458, 0.29 ) }
    dend_32 { pt3dadd( 53.55, 105.035, -59.7069, 0.29 ) }
    dend_32 { pt3dadd( 53.6293, 105.137, -59.6922, 0.29 ) }
    dend_32 { pt3dadd( 54.3615, 106.245, -59.4709, 0.29 ) }
    dend_32 { pt3dadd( 54.5162, 106.495, -59.4103, 0.29 ) }
    dend_32 { pt3dadd( 55.7351, 108.474, -58.9421, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_32 { pt3dadd( 56.5971, 109.755, -58.6442, 0.22 ) }
    dend_32 { pt3dadd( 56.6463, 109.822, -58.6288, 0.22 ) }
    dend_32 { pt3dadd( 57.6689, 111.117, -58.3421, 0.22 ) }
    dend_32 { pt3dadd( 57.7234, 111.18, -58.3283, 0.22 ) }
    dend_32 { pt3dadd( 58.9143, 112.538, -58.1566, 0.22 ) }
    dend_32 { pt3dadd( 59.3921, 113.076, -58.1926, 0.81 ) }
    dend_32 { pt3dadd( 59.6795, 113.356, -58.2185, 0.81 ) }
    dend_32 { pt3dadd( 59.7712, 113.431, -58.2274, 0.81 ) }
    dend_32 { pt3dadd( 60.0981, 113.627, -58.2626, 0.29 ) }
    dend_32 { pt3dadd( 60.17, 113.668, -58.2698, 0.29 ) }
    dend_32 { pt3dadd( 60.9341, 114.082, -58.3348, 0.29 ) }
    dend_32 { pt3dadd( 61.1044, 114.191, -58.3477, 0.29 ) }
    dend_32 { pt3dadd( 61.9662, 114.767, -58.411, 0.66 ) }
    dend_32 { pt3dadd( 62.0422, 114.824, -58.4186, 0.66 ) }
    dend_32 { pt3dadd( 62.4979, 115.191, -58.4712, 0.66 ) }
    dend_32 { pt3dadd( 62.8803, 115.505, -58.5191, 0.29 ) }
    dend_32 { pt3dadd( 63.4532, 115.978, -58.596, 0.29 ) }
    dend_32 { pt3dadd( 63.5172, 116.031, -58.6057, 0.29 ) }
    dend_32 { pt3dadd( 64.6072, 116.933, -58.7797, 0.29 ) }
    dend_32 { pt3dadd( 65.0896, 117.318, -58.8583, 1.18 ) }
    dend_32 { pt3dadd( 65.899, 117.957, -58.992, 1.47 ) }
    dend_32 { pt3dadd( 66.1391, 118.144, -59.0318, 1.47 ) }
    dend_32 { pt3dadd( 67.0797, 118.875, -59.1764, 0.37 ) }
    dend_32 { pt3dadd( 67.9823, 119.602, -59.296, 0.37 ) }
    dend_32 { pt3dadd( 68.0556, 119.663, -59.3042, 0.37 ) }
    dend_32 { pt3dadd( 68.9355, 120.372, -59.3549, 0.22 ) }
    dend_32 { pt3dadd( 69.0, 120.425, -59.3591, 0.22 ) }
    dend_32 { pt3dadd( 70.352, 121.542, -59.452, 0.22 ) }
    dend_32 { pt3dadd( 71.4236, 122.449, -59.5222, 0.22 ) }
    dend_32 { pt3dadd( 71.5661, 122.571, -59.5223, 0.22 ) }
    dend_32 { pt3dadd( 72.9809, 123.819, -59.4501, 0.22 ) }
    dend_32 { pt3dadd( 73.7513, 124.581, -59.3627, 1.47 ) }
    dend_32 { pt3dadd( 74.3565, 125.265, -59.24, 1.99 ) }
    dend_32 { pt3dadd( 74.7765, 125.811, -59.1049, 1.99 ) }
    dend_32 { pt3dadd( 75.6893, 127.194, -58.7104, 0.66 ) }
    dend_32 { pt3dadd( 76.0301, 127.79, -58.5306, 0.22 ) }
    dend_32 { pt3dadd( 76.6501, 129.162, -58.114, 0.22 ) }
    dend_32 { pt3dadd( 76.9729, 129.859, -57.8324, 0.66 ) }
    dend_32 { pt3dadd( 77.0214, 129.967, -57.7849, 0.66 ) }
    dend_32 { pt3dadd( 77.3223, 130.624, -57.4968, 0.66 ) }
    dend_32 { pt3dadd( 77.3929, 130.78, -57.4355, 0.66 ) }
    dend_32 { pt3dadd( 77.9032, 131.899, -56.9515, 0.66 ) }
    dend_32 { pt3dadd( 78.3914, 133.071, -56.4147, 0.29 ) }
    dend_32 { pt3dadd( 78.4162, 133.159, -56.3805, 0.29 ) }
    dend_32 { pt3dadd( 78.5414, 133.809, -56.1414, 0.29 ) }
    dend_32 { pt3dadd( 78.5664, 133.982, -56.0661, 0.29 ) }
    dend_32 { pt3dadd( 78.6786, 135.002, -55.5961, 0.29 ) }
    dend_32 { pt3dadd( 78.7129, 135.467, -55.3777, 0.29 ) }
    dend_32 { pt3dadd( 78.781, 136.084, -55.0378, 0.29 ) }
    dend_32 { pt3dadd( 78.7936, 136.166, -54.989, 0.29 ) }
    dend_32 { pt3dadd( 79.0622, 137.431, -54.0673, 0.29 ) }
    dend_32 { pt3dadd( 79.4152, 138.804, -52.9655, 0.29 ) }
    dend_32 { pt3dadd( 79.4318, 138.858, -52.9212, 0.29 ) }
    dend_32 { pt3dadd( 80.0993, 140.859, -51.2712, 1.03 ) }
    dend_32 { pt3dadd( 80.4515, 141.944, -50.4464, 1.03 ) }
    dend_32 { pt3dadd( 81.0305, 143.805, -49.1608, 0.22 ) }
    dend_32 { pt3dadd( 81.0681, 143.948, -49.0783, 0.22 ) }
    dend_32 { pt3dadd( 81.3513, 145.138, -48.5531, 0.22 ) }
    dend_32 { pt3dadd( 81.4024, 145.389, -48.477, 0.22 ) }
    dend_32 { pt3dadd( 81.7422, 147.399, -48.1874, 0.22 ) }
    dend_32 { pt3dadd( 81.7805, 147.681, -48.1683, 0.22 ) }
    dend_32 { pt3dadd( 81.9778, 149.41, -48.1737, 0.22 ) }
    dend_32 { pt3dadd( 82.1524, 151.052, -48.1822, 1.25 ) }
    dend_32 { pt3dadd( 82.2323, 151.859, -48.1859, 1.69 ) }
    dend_32 { pt3dadd( 82.3258, 152.732, -48.1895, 1.69 ) }
    dend_32 { pt3dadd( 82.4799, 153.995, -48.2393, 0.74 ) }
    dend_32 { pt3dadd( 82.5579, 154.52, -48.2714, 0.29 ) }
    dend_32 { pt3dadd( 82.592, 154.699, -48.2854, 0.29 ) }
    dend_32 { pt3dadd( 82.8952, 156.179, -48.3567, 0.29 ) }
    dend_32 { pt3dadd( 82.9148, 156.262, -48.3604, 0.29 ) }
    dend_32 { pt3dadd( 83.2818, 157.674, -48.4173, 0.88 ) }
    dend_32 { pt3dadd( 83.5896, 158.866, -48.4491, 0.88 ) }
    dend_32 { pt3dadd( 83.8127, 159.821, -48.4553, 0.88 ) }
    dend_32 { pt3dadd( 83.9622, 160.629, -48.4359, 0.29 ) }
    dend_32 { pt3dadd( 84.0907, 161.511, -48.3839, 0.29 ) }
    dend_32 { pt3dadd( 84.1201, 161.699, -48.3668, 0.29 ) }
    dend_32 { pt3dadd( 84.286, 162.757, -48.2421, 0.29 ) }
    dend_32 { pt3dadd( 84.3318, 163.023, -48.2199, 0.29 ) }
    dend_32 { pt3dadd( 84.5708, 164.276, -48.1553, 0.29 ) }
    dend_32 { pt3dadd( 84.5965, 164.394, -48.1529, 0.29 ) }
    dend_32 { pt3dadd( 85.1369, 166.555, -48.1281, 0.29 ) }
    dend_32 { pt3dadd( 85.4972, 167.77, -48.1244, 0.74 ) }
    dend_32 { pt3dadd( 85.7272, 168.422, -48.1292, 0.74 ) }
    dend_32 { pt3dadd( 85.8787, 168.834, -48.1323, 0.74 ) }
    dend_32 { pt3dadd( 86.1496, 169.578, -48.1318, 0.74 ) }
    dend_32 { pt3dadd( 86.2049, 169.751, -48.129, 0.74 ) }
    dend_32 { pt3dadd( 86.37, 170.36, -48.1512, 0.29 ) }
    dend_32 { pt3dadd( 86.4136, 170.523, -48.163, 0.29 ) }
    dend_32 { pt3dadd( 86.7003, 171.742, -48.2771, 0.29 ) }
    dend_32 { pt3dadd( 87.0981, 173.651, -48.4683, 0.29 ) }
    dend_32 { pt3dadd( 87.1261, 173.806, -48.483, 0.29 ) }
    dend_32 { pt3dadd( 87.4171, 175.6, -48.6311, 0.29 ) }
    dend_32 { pt3dadd( 87.4296, 175.684, -48.6367, 0.29 ) }
    dend_32 { pt3dadd( 87.5978, 176.795, -48.6907, 1.25 ) }
    dend_32 { pt3dadd( 87.8215, 178.241, -48.7204, 2.14 ) }
    dend_32 { pt3dadd( 88.0001, 179.408, -48.7051, 2.8 ) }
    dend_32 { pt3dadd( 88.165, 180.557, -48.6413, 2.14 ) }
    dend_32 { pt3dadd( 88.344, 181.872, -48.5085, 0.88 ) }
    dend_32 { pt3dadd( 88.491, 183.005, -48.3894, 0.44 ) }
    dend_32 { pt3dadd( 88.6186, 183.986, -48.2822, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_32 { pt3dadd( 88.6349, 184.126, -48.2708, 0.44 ) }
    dend_32 { pt3dadd( 88.8563, 186.417, -48.2263, 0.44 ) }
    dend_32 { pt3dadd( 88.8622, 186.502, -48.2339, 0.44 ) }
    dend_32 { pt3dadd( 88.9513, 187.389, -48.4308, 0.44 ) }
    dend_32 { pt3dadd( 88.9849, 187.644, -48.5051, 0.44 ) }
    dend_32 { pt3dadd( 89.2297, 189.132, -48.9929, 0.44 ) }
    dend_32 { pt3dadd( 89.6215, 191.136, -49.7051, 1.18 ) }
    dend_32 { pt3dadd( 89.9877, 192.718, -50.2947, 0.81 ) }
    dend_32 { pt3dadd( 90.6829, 195.493, -51.3136, 0.29 ) }
    dend_32 { pt3dadd( 90.9235, 196.368, -51.623, 0.88 ) }
    dend_32 { pt3dadd( 91.2221, 197.349, -51.9123, 0.88 ) }
    dend_32 { pt3dadd( 92.1497, 200.121, -52.5717, 0.37 ) }
    dend_32 { pt3dadd( 92.5065, 201.145, -52.7493, 0.74 ) }
    dend_32 { pt3dadd( 92.5625, 201.306, -52.7663, 0.74 ) }
    dend_32 { pt3dadd( 92.9448, 202.488, -52.8278, 0.22 ) }
    dend_32 { pt3dadd( 94.0395, 205.956, -52.9354, 0.22 ) }
    dend_32 { pt3dadd( 94.1209, 206.212, -52.9357, 0.22 ) }
    dend_32 { pt3dadd( 94.535, 207.504, -52.8853, 0.22 ) }
    dend_32 { pt3dadd( 94.6148, 207.759, -52.877, 0.22 ) }
    dend_32 { pt3dadd( 95.1148, 209.391, -52.8352, 0.66 ) }
    dend_32 { pt3dadd( 95.1636, 209.555, -52.8324, 0.66 ) }
    dend_32 { pt3dadd( 95.4065, 210.441, -52.8743, 0.88 ) }
    dend_32 { pt3dadd( 95.6166, 211.191, -52.9393, 0.52 ) }
    dend_32 { pt3dadd( 95.6672, 211.366, -52.9598, 0.52 ) }
    dend_32 { pt3dadd( 95.8863, 212.06, -53.0215, 0.29 ) }
    dend_32 { pt3dadd( 96.5918, 214.232, -53.1726, 0.29 ) }
    dend_32 { pt3dadd( 97.0482, 215.674, -53.2373, 0.96 ) }
    dend_32 { pt3dadd( 97.0988, 215.837, -53.2412, 0.96 ) }
    dend_32 { pt3dadd( 97.408, 216.85, -53.2396, 0.96 ) }
    dend_32 { pt3dadd( 98.1268, 219.254, -53.2875, 0.22 ) }
    dend_32 { pt3dadd( 98.2617, 219.697, -53.303, 0.66 ) }
    dend_32 { pt3dadd( 98.4595, 220.307, -53.2881, 0.66 ) }
    dend_32 { pt3dadd( 98.4871, 220.388, -53.2839, 0.66 ) }
    dend_32 { pt3dadd( 98.7394, 221.249, -53.2645, 0.66 ) }
    dend_32 { pt3dadd( 99.0939, 222.565, -53.282, 0.44 ) }
    dend_32 { pt3dadd( 99.1119, 222.649, -53.2896, 0.44 ) }
    dend_32 { pt3dadd( 99.5126, 224.419, -53.4537, 0.44 ) }
    dend_32 { pt3dadd( 99.7791, 225.601, -53.5517, 1.33 ) }
    dend_32 { pt3dadd( 100.131, 227.217, -53.6337, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 39/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 7.77595, 33.3279, -19.3809, 1.18 ) }
    dend_31 { pt3dadd( 6.52152, 34.0572, -20.5601, 1.18 ) }
    dend_31 { pt3dadd( 5.80895, 34.4247, -21.2221, 1.18 ) }
    dend_31 { pt3dadd( 5.04043, 34.7571, -21.8711, 0.88 ) }
    dend_31 { pt3dadd( 3.82489, 35.2354, -22.843, 0.66 ) }
    dend_31 { pt3dadd( 2.68138, 35.6171, -23.6863, 1.18 ) }
    dend_31 { pt3dadd( 1.85267, 35.863, -24.2642, 1.4 ) }
    dend_31 { pt3dadd( 0.447286, 36.1582, -25.0982, 0.52 ) }
    dend_31 { pt3dadd( -0.47388, 36.2356, -25.622, 0.52 ) }
    dend_31 { pt3dadd( -0.602007, 36.2246, -25.6832, 0.52 ) }
    dend_31 { pt3dadd( -1.42667, 35.9454, -25.9815, 1.33 ) }
    dend_31 { pt3dadd( -1.476, 35.9044, -26.0051, 1.33 ) }
    dend_31 { pt3dadd( -1.88877, 35.4376, -26.4579, 1.33 ) }
    dend_31 { pt3dadd( -1.92021, 35.3972, -26.5031, 1.33 ) }
    dend_31 { pt3dadd( -2.35792, 34.8606, -27.1996, 0.81 ) }
    dend_31 { pt3dadd( -2.66226, 34.5115, -27.7239, 0.81 ) }
    dend_31 { pt3dadd( -3.49195, 33.5789, -29.2254, 0.88 ) }
    dend_31 { pt3dadd( -4.91873, 32.021, -31.8192, 0.88 ) }
    dend_31 { pt3dadd( -4.94867, 31.9908, -31.8711, 0.88 ) }
    dend_31 { pt3dadd( -5.60327, 31.3638, -32.9498, 0.88 ) }
    dend_31 { pt3dadd( -6.43158, 30.6473, -34.2269, 0.66 ) }
    dend_31 { pt3dadd( -6.75866, 30.3937, -34.6833, 0.44 ) }
    dend_31 { pt3dadd( -6.80543, 30.361, -34.7353, 0.44 ) }
    dend_31 { pt3dadd( -7.45537, 29.9131, -35.2699, 0.44 ) }
    dend_31 { pt3dadd( -7.50316, 29.882, -35.3067, 0.44 ) }
    dend_31 { pt3dadd( -7.81674, 29.6988, -35.5219, 0.88 ) }
    dend_31 { pt3dadd( -8.27307, 29.4023, -35.7827, 0.88 ) }
    dend_31 { pt3dadd( -9.35026, 28.525, -36.4837, 0.44 ) }
    dend_31 { pt3dadd( -9.38924, 28.479, -36.5154, 0.44 ) }
    dend_31 { pt3dadd( -9.62234, 28.0889, -36.8559, 0.44 ) }
    dend_31 { pt3dadd( -9.65783, 28.0165, -36.9231, 0.44 ) }
    dend_31 { pt3dadd( -9.93127, 27.1249, -37.7231, 0.44 ) }
    dend_31 { pt3dadd( -10.0376, 26.7245, -38.0831, 1.18 ) }
    dend_31 { pt3dadd( -10.2928, 25.7231, -38.992, 1.18 ) }
    dend_31 { pt3dadd( -10.7815, 23.9764, -40.5979, 0.37 ) }
    dend_31 { pt3dadd( -10.7978, 23.9283, -40.6441, 0.37 ) }
    dend_31 { pt3dadd( -11.1354, 23.1405, -41.5128, 0.37 ) }
    dend_31 { pt3dadd( -11.8318, 21.8013, -43.1813, 0.37 ) }
    dend_31 { pt3dadd( -11.8858, 21.7164, -43.2872, 0.37 ) }
    dend_31 { pt3dadd( -12.22, 21.2629, -43.824, 1.11 ) }
    dend_31 { pt3dadd( -12.9551, 20.3946, -44.6894, 1.11 ) }
    dend_31 { pt3dadd( -14.0273, 19.2444, -45.8121, 0.44 ) }
    dend_31 { pt3dadd( -14.0863, 19.1896, -45.8755, 0.44 ) }
    dend_31 { pt3dadd( -14.7859, 18.5265, -46.6719, 0.44 ) }
    dend_31 { pt3dadd( -15.0013, 18.3231, -46.9243, 1.11 ) }
    dend_31 { pt3dadd( -15.6813, 17.7234, -47.6586, 1.4 ) }
    dend_31 { pt3dadd( -15.7287, 17.6808, -47.7032, 1.4 ) }
    dend_31 { pt3dadd( -17.2821, 16.2359, -48.9765, 0.29 ) }
    dend_31 { pt3dadd( -17.6787, 15.8631, -49.3139, 0.29 ) }
    dend_31 { pt3dadd( -17.7227, 15.828, -49.352, 0.29 ) }
    dend_31 { pt3dadd( -18.544, 15.2596, -50.0285, 0.29 ) }
    dend_31 { pt3dadd( -19.4746, 14.6897, -50.8266, 0.74 ) }
    dend_31 { pt3dadd( -19.7708, 14.5167, -51.0645, 0.74 ) }
    dend_31 { pt3dadd( -19.87, 14.4617, -51.1365, 0.74 ) }
    dend_31 { pt3dadd( -21.5888, 13.6572, -52.5834, 0.37 ) }
    dend_31 { pt3dadd( -21.6338, 13.6385, -52.6289, 0.37 ) }
    dend_31 { pt3dadd( -22.7301, 13.2284, -53.8291, 1.11 ) }
    dend_31 { pt3dadd( -23.0499, 13.1257, -54.1894, 1.11 ) }
    dend_31 { pt3dadd( -23.1852, 13.0841, -54.3442, 1.11 ) }
    dend_31 { pt3dadd( -24.7331, 12.5911, -56.0742, 0.37 ) }
    dend_31 { pt3dadd( -26.57, 11.9478, -58.1593, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_31 { pt3dadd( -27.0758, 11.7723, -58.7178, 1.11 ) }
    dend_31 { pt3dadd( -28.2466, 11.411, -59.9193, 0.37 ) }
    dend_31 { pt3dadd( -28.2926, 11.3975, -59.9654, 0.37 ) }
    dend_31 { pt3dadd( -28.8736, 11.2519, -60.5471, 0.37 ) }
    dend_31 { pt3dadd( -29.7146, 11.1356, -61.4523, 0.37 ) }
    dend_31 { pt3dadd( -29.7589, 11.1376, -61.5015, 0.37 ) }
    dend_31 { pt3dadd( -30.8219, 11.3029, -62.7778, 0.29 ) }
    dend_31 { pt3dadd( -30.8605, 11.3128, -62.8314, 0.29 ) }
    dend_31 { pt3dadd( -32.1223, 11.6884, -64.6376, 1.47 ) }
    dend_31 { pt3dadd( -33.2616, 12.0481, -66.2722, 0.74 ) }
    dend_31 { pt3dadd( -33.6305, 12.1489, -66.7805, 0.74 ) }
    dend_31 { pt3dadd( -33.6695, 12.1566, -66.8344, 0.74 ) }
    dend_31 { pt3dadd( -34.9175, 12.2223, -68.5809, 0.37 ) }
    dend_31 { pt3dadd( -35.5617, 12.1336, -69.3882, 0.37 ) }
    dend_31 { pt3dadd( -36.1524, 11.8633, -69.8603, 0.37 ) }
    dend_31 { pt3dadd( -36.6833, 11.5479, -70.2162, 0.37 ) }
    dend_31 { pt3dadd( -36.8027, 11.4723, -70.2932, 0.37 ) }
    dend_31 { pt3dadd( -37.5498, 11.0049, -70.7302, 0.37 ) }
    dend_31 { pt3dadd( -37.6736, 10.9219, -70.8026, 0.37 ) }
    dend_31 { pt3dadd( -38.7718, 10.2832, -71.8388, 0.74 ) }
    dend_31 { pt3dadd( -39.8998, 9.71895, -73.2066, 0.22 ) }
    dend_31 { pt3dadd( -40.3458, 9.49835, -73.8094, 0.22 ) }
    dend_31 { pt3dadd( -40.378, 9.48215, -73.8548, 0.22 ) }
    dend_31 { pt3dadd( -41.4069, 8.96107, -75.3577, 0.66 ) }
    dend_31 { pt3dadd( -43.541, 7.86518, -78.3758, 1.55 ) }
    dend_31 { pt3dadd( -44.7822, 7.19897, -80.1335, 0.37 ) }
    dend_31 { pt3dadd( -45.1116, 7.03001, -80.5689, 0.22 ) }
    dend_31 { pt3dadd( -45.4841, 6.85191, -81.0676, 0.22 ) }
    dend_31 { pt3dadd( -45.6346, 6.78388, -81.2624, 0.22 ) }
    dend_31 { pt3dadd( -46.7382, 6.36059, -82.5294, 0.22 ) }
    dend_31 { pt3dadd( -46.7929, 6.33773, -82.5616, 0.22 ) }
    dend_31 { pt3dadd( -48.2386, 5.88584, -82.8906, 1.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -7.81154, 42.1581, -5.12502, 2.14 ) }
    dend_5 { pt3dadd( -8.14653, 43.309, -6.93631, 2.14 ) }
    dend_5 { pt3dadd( -8.15852, 43.3352, -6.96934, 2.14 ) }
    dend_5 { pt3dadd( -8.32258, 43.6943, -7.42118, 2.14 ) }
    dend_5 { pt3dadd( -8.34663, 43.7469, -7.48741, 2.14 ) }
    dend_5 { pt3dadd( -8.89487, 44.9468, -8.99735, 2.14 ) }
    dend_5 { pt3dadd( -9.08283, 45.3582, -9.51504, 2.5 ) }
    dend_5 { pt3dadd( -9.58894, 46.2225, -10.3902, 2.8 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 40/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -7.81154, 42.1581, -5.12502, 0.59 ) }
    dend_2 { pt3dadd( -8.65967, 42.9517, -4.93894, 0.59 ) }
    dend_2 { pt3dadd( -9.39126, 43.6262, -4.75766, 0.59 ) }
    dend_2 { pt3dadd( -9.43672, 43.6634, -4.74686, 0.59 ) }
    dend_2 { pt3dadd( -10.2719, 44.2733, -4.56718, 0.59 ) }
    dend_2 { pt3dadd( -11.3118, 44.9791, -4.25207, 0.59 ) }
    dend_2 { pt3dadd( -11.9421, 45.3897, -4.03661, 0.59 ) }
    dend_2 { pt3dadd( -11.9838, 45.4138, -4.02218, 0.59 ) }
    dend_2 { pt3dadd( -13.1269, 46.0518, -3.58343, 0.96 ) }
    dend_2 { pt3dadd( -13.7964, 46.4153, -3.32041, 0.96 ) }
    dend_2 { pt3dadd( -15.011, 47.06, -2.82419, 1.03 ) }
    dend_2 { pt3dadd( -15.4607, 47.3147, -2.64131, 1.03 ) }
    dend_2 { pt3dadd( -15.9818, 47.6348, -2.46065, 0.74 ) }
    dend_2 { pt3dadd( -16.3109, 47.8597, -2.35401, 0.52 ) }
    dend_2 { pt3dadd( -16.7676, 48.2064, -2.22831, 0.52 ) }
    dend_2 { pt3dadd( -17.1116, 48.4684, -2.1641, 0.37 ) }
    dend_2 { pt3dadd( -17.3934, 48.6735, -2.14815, 0.37 ) }
    dend_2 { pt3dadd( -17.9186, 48.9939, -2.11238, 0.37 ) }
    dend_2 { pt3dadd( -18.1568, 49.1162, -2.09516, 0.66 ) }
    dend_2 { pt3dadd( -18.8834, 49.4471, -2.04343, 0.66 ) }
    dend_2 { pt3dadd( -19.2529, 49.6041, -2.01852, 0.22 ) }
    dend_2 { pt3dadd( -19.3151, 49.6293, -2.01341, 0.22 ) }
    dend_2 { pt3dadd( -20.2293, 49.9904, -1.93026, 0.22 ) }
    dend_2 { pt3dadd( -20.8542, 50.2422, -1.87866, 0.29 ) }
    dend_2 { pt3dadd( -21.2587, 50.4083, -1.85173, 0.52 ) }
    dend_2 { pt3dadd( -21.7123, 50.5846, -1.79695, 0.52 ) }
    dend_2 { pt3dadd( -22.1426, 50.7404, -1.72728, 0.52 ) }
    dend_2 { pt3dadd( -22.197, 50.7563, -1.71158, 0.52 ) }
    dend_2 { pt3dadd( -22.6089, 50.8344, -1.45503, 0.22 ) }
    dend_2 { pt3dadd( -23.075, 50.8862, -1.08388, 0.22 ) }
    dend_2 { pt3dadd( -23.7798, 50.966, -0.471777, 0.22 ) }
    dend_2 { pt3dadd( -23.8363, 50.9726, -0.420066, 0.22 ) }
    dend_2 { pt3dadd( -24.8503, 51.0765, 0.466455, 1.55 ) }
    dend_2 { pt3dadd( -26.3341, 51.1998, 1.66886, 0.29 ) }
    dend_2 { pt3dadd( -26.3872, 51.2057, 1.70905, 0.29 ) }
    dend_2 { pt3dadd( -26.9476, 51.2925, 2.09384, 0.29 ) }
    dend_2 { pt3dadd( -27.0469, 51.3154, 2.15214, 0.29 ) }
    dend_2 { pt3dadd( -28.0273, 51.5919, 2.63708, 0.29 ) }
    dend_2 { pt3dadd( -28.6621, 51.8405, 2.86169, 0.29 ) }
    dend_2 { pt3dadd( -29.2791, 52.1427, 2.96119, 0.29 ) }
    dend_2 { pt3dadd( -29.3281, 52.1732, 2.97482, 0.29 ) }
    dend_2 { pt3dadd( -29.846, 52.7015, 3.28843, 0.29 ) }
    dend_2 { pt3dadd( -29.8722, 52.7449, 3.31957, 0.29 ) }
    dend_2 { pt3dadd( -30.1402, 53.4254, 3.8488, 0.29 ) }
    dend_2 { pt3dadd( -30.1599, 53.4647, 3.88847, 0.29 ) }
    dend_2 { pt3dadd( -30.3253, 53.6859, 4.17032, 0.29 ) }
    dend_2 { pt3dadd( -30.3575, 53.7167, 4.221, 0.29 ) }
    dend_2 { pt3dadd( -31.0117, 54.2594, 5.30653, 0.29 ) }
    dend_2 { pt3dadd( -31.0342, 54.2818, 5.34539, 0.29 ) }
    dend_2 { pt3dadd( -31.3713, 54.6505, 5.92568, 1.03 ) }
    dend_2 { pt3dadd( -31.3952, 54.6821, 5.96995, 1.03 ) }
    dend_2 { pt3dadd( -31.8471, 55.4177, 6.87192, 0.74 ) }
    dend_2 { pt3dadd( -32.2294, 56.1665, 7.6397, 0.15 ) }
    dend_2 { pt3dadd( -32.4852, 56.7631, 8.22372, 0.15 ) }
    dend_2 { pt3dadd( -32.5044, 56.8055, 8.26168, 0.15 ) }
    dend_2 { pt3dadd( -32.7179, 57.2383, 8.68008, 0.81 ) }
    dend_2 { pt3dadd( -32.9023, 57.5872, 9.03993, 1.18 ) }
    dend_2 { pt3dadd( -33.094, 57.9432, 9.39439, 1.18 ) }
    dend_2 { pt3dadd( -33.8564, 59.2324, 10.6687, 1.25 ) }
    dend_2 { pt3dadd( -34.1214, 59.6553, 11.1067, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_2 { pt3dadd( -34.8958, 60.983, 12.4521, 0.37 ) }
    dend_2 { pt3dadd( -34.9164, 61.0238, 12.491, 0.37 ) }
    dend_2 { pt3dadd( -35.184, 61.6521, 13.0265, 0.37 ) }
    dend_2 { pt3dadd( -35.5145, 62.577, 13.6984, 0.37 ) }
    dend_2 { pt3dadd( -35.5366, 62.6507, 13.7373, 0.37 ) }
    dend_2 { pt3dadd( -35.8069, 63.6926, 14.2097, 0.37 ) }
    dend_2 { pt3dadd( -35.9984, 64.5777, 14.5915, 1.33 ) }
    dend_2 { pt3dadd( -36.1276, 65.0789, 14.8556, 1.77 ) }
    dend_2 { pt3dadd( -36.1416, 65.1284, 14.8874, 1.77 ) }
    dend_2 { pt3dadd( -36.2669, 65.5054, 15.16, 1.77 ) }
    dend_2 { pt3dadd( -36.2842, 65.5435, 15.1893, 1.77 ) }
    dend_2 { pt3dadd( -37.1015, 66.7977, 16.2181, 0.44 ) }
    dend_2 { pt3dadd( -37.6446, 67.4753, 16.8178, 0.44 ) }
    dend_2 { pt3dadd( -37.671, 67.506, 16.8492, 0.44 ) }
    dend_2 { pt3dadd( -37.8893, 67.7596, 17.101, 0.81 ) }
    dend_2 { pt3dadd( -38.0524, 67.9505, 17.2836, 0.81 ) }
    dend_2 { pt3dadd( -38.2918, 68.2363, 17.5148, 0.81 ) }
    dend_2 { pt3dadd( -38.3419, 68.2993, 17.5488, 0.81 ) }
    dend_2 { pt3dadd( -38.9838, 69.1225, 18.1252, 0.59 ) }
    dend_2 { pt3dadd( -39.3428, 69.5696, 18.464, 0.59 ) }
    dend_2 { pt3dadd( -39.3765, 69.6071, 18.4961, 0.59 ) }
    dend_2 { pt3dadd( -39.6305, 69.8616, 18.7316, 0.59 ) }
    dend_2 { pt3dadd( -40.2999, 70.3801, 19.2776, 0.66 ) }
    dend_2 { pt3dadd( -41.0319, 70.9034, 19.8077, 0.29 ) }
    dend_2 { pt3dadd( -41.0775, 70.931, 19.8319, 0.29 ) }
    dend_2 { pt3dadd( -41.5528, 71.1274, 20.1058, 0.59 ) }
    dend_2 { pt3dadd( -41.5953, 71.1378, 20.1296, 0.59 ) }
    dend_2 { pt3dadd( -42.2829, 71.047, 20.477, 0.81 ) }
    dend_2 { pt3dadd( -47.3414, 76.08, 24.9658, 0.81 ) }
    dend_2 { pt3dadd( -52.1636, 80.5818, 30.1695, 0.81 ) }
    dend_2 { pt3dadd( -57.0941, 85.9191, 34.4786, 0.81 ) }
    dend_2 { pt3dadd( -60.3693, 92.1815, 39.2134, 0.81 ) }
    dend_2 { pt3dadd( -62.9154, 99.0867, 43.5705, 0.81 ) }
    dend_2 { pt3dadd( -65.137, 105.76, 48.4074, 0.81 ) }
    dend_2 { pt3dadd( -66.443, 112.835, 53.0555, 0.81 ) }
    dend_2 { pt3dadd( -67.9669, 119.346, 58.3415, 0.81 ) }
    dend_2 { pt3dadd( -68.891, 126.475, 63.0065, 0.81 ) }
    dend_2 { pt3dadd( -69.9868, 133.602, 67.6374, 0.81 ) }
    dend_2 { pt3dadd( -71.1214, 139.623, 73.5148, 0.81 ) }
    dend_2 { pt3dadd( -73.0749, 145.872, 78.944, 0.81 ) }
    dend_2 { pt3dadd( -74.6229, 151.331, 85.2126, 0.81 ) }
    dend_2 { pt3dadd( -76.6509, 156.645, 91.4568, 0.81 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 42/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -30.6552, -42.1227, 10.5744, 0.22 ) }
    dend_57 { pt3dadd( -38.5106, -49.4057, 15.129, 0.22 ) }
    dend_57 { pt3dadd( -47.475, -55.9653, 18.4662, 0.22 ) }
    dend_57 { pt3dadd( -56.1824, -62.75, 22.0664, 0.22 ) }
    dend_57 { pt3dadd( -64.6831, -70.7242, 22.8014, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 47/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -30.6552, -42.1227, 10.5744, 0.22 ) }
    dend_54 { pt3dadd( -37.0771, -47.9419, 14.2488, 0.22 ) }
    dend_54 { pt3dadd( -43.6805, -54.0221, 17.1416, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_42 (entry count 50/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 6.26179, -44.572, 5.64172, 0.81 ) }
    dend_50 { pt3dadd( 6.38945, -45.0525, 7.84369, 0.81 ) }
    dend_50 { pt3dadd( 6.39776, -45.0768, 7.91195, 0.81 ) }
    dend_50 { pt3dadd( 6.57356, -45.6497, 9.02933, 1.47 ) }
    dend_50 { pt3dadd( 6.61872, -45.8228, 9.28716, 1.47 ) }
    dend_50 { pt3dadd( 6.93286, -47.1594, 10.9771, 0.59 ) }
    dend_50 { pt3dadd( 7.06095, -47.7954, 11.6615, 0.52 ) }
    dend_50 { pt3dadd( 7.2497, -48.6627, 12.2619, 0.52 ) }
    dend_50 { pt3dadd( 7.39639, -49.4779, 12.7037, 1.11 ) }
    dend_50 { pt3dadd( 7.49639, -50.1278, 12.9448, 1.11 ) }
    dend_50 { pt3dadd( 7.51941, -50.2835, 12.9802, 1.11 ) }
    dend_50 { pt3dadd( 7.64451, -51.1147, 13.0213, 0.81 ) }
    dend_50 { pt3dadd( 7.75045, -51.8038, 13.0303, 0.81 ) }
    dend_50 { pt3dadd( 7.77089, -51.9183, 13.0285, 0.81 ) }
    dend_50 { pt3dadd( 7.87615, -52.463, 13.0776, 1.03 ) }
    dend_50 { pt3dadd( 8.11659, -53.4207, 13.2647, 0.52 ) }
    dend_50 { pt3dadd( 8.13794, -53.4877, 13.2918, 0.52 ) }
    dend_50 { pt3dadd( 8.42866, -54.1641, 13.8044, 0.52 ) }
    dend_50 { pt3dadd( 8.57185, -54.366, 14.1013, 0.44 ) }
    dend_50 { pt3dadd( 9.1409, -54.6833, 15.5142, 0.44 ) }
    dend_50 { pt3dadd( 9.47014, -54.6805, 16.2492, 0.44 ) }
    dend_50 { pt3dadd( 9.88352, -54.5826, 17.1115, 0.74 ) }
    dend_50 { pt3dadd( 9.91516, -54.569, 17.1755, 0.74 ) }
    dend_50 { pt3dadd( 10.2674, -54.3535, 17.8703, 0.74 ) }
    dend_50 { pt3dadd( 10.7728, -53.9557, 19.0278, 0.44 ) }
    dend_50 { pt3dadd( 11.1247, -53.6308, 19.9121, 0.44 ) }
    dend_50 { pt3dadd( 11.1482, -53.6099, 19.9889, 0.44 ) }
    dend_50 { pt3dadd( 11.4382, -53.4216, 21.1233, 0.44 ) }
    dend_50 { pt3dadd( 11.453, -53.4216, 21.1936, 0.44 ) }
    dend_50 { pt3dadd( 11.722, -53.9652, 23.2104, 0.44 ) }
    dend_50 { pt3dadd( 11.7269, -54.0286, 23.3018, 0.44 ) }
    dend_50 { pt3dadd( 11.7086, -54.7729, 24.1001, 0.44 ) }
    dend_50 { pt3dadd( 11.7015, -55.4181, 24.6225, 1.33 ) }
    dend_50 { pt3dadd( 11.6818, -56.3306, 25.1492, 1.62 ) }
    dend_50 { pt3dadd( 11.6804, -57.0611, 25.4772, 1.62 ) }
    dend_50 { pt3dadd( 11.7, -58.6875, 26.0329, 0.66 ) }
    dend_50 { pt3dadd( 11.7032, -58.7478, 26.0573, 0.66 ) }
    dend_50 { pt3dadd( 11.797, -59.5263, 26.4422, 0.52 ) }
    dend_50 { pt3dadd( 12.0059, -60.3759, 26.9494, 0.52 ) }
    dend_50 { pt3dadd( 12.3781, -61.2713, 27.5789, 0.52 ) }
    dend_50 { pt3dadd( 12.4124, -61.333, 27.6245, 0.52 ) }
    dend_50 { pt3dadd( 13.1458, -62.3587, 28.3346, 0.44 ) }
    dend_50 { pt3dadd( 13.5179, -62.7755, 28.6835, 0.59 ) }
    dend_50 { pt3dadd( 14.2652, -63.285, 29.3451, 0.37 ) }
    dend_50 { pt3dadd( 14.3198, -63.3043, 29.3892, 0.37 ) }
    dend_50 { pt3dadd( 16.8975, -69.7482, 37.1938, 0.37 ) }
    dend_50 { pt3dadd( 20.035, -75.8054, 45.0727, 0.37 ) }
    dend_50 { pt3dadd( 22.9872, -81.2767, 53.4002, 0.37 ) }
    dend_50 { pt3dadd( 24.8177, -85.3139, 62.7351, 0.37 ) }
    dend_50 { pt3dadd( 29.1368, -89.4218, 71.175, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_50 { pt3dadd( 34.5648, -91.8936, 79.5536, 0.37 ) }
    dend_50 { pt3dadd( 38.6664, -96.4966, 87.8691, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 2/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 6.26179, -44.572, 5.64172, 1.03 ) }
    dend_43 { pt3dadd( 6.28369, -44.587, 5.65361, 1.03 ) }
    dend_43 { pt3dadd( 6.35521, -44.6399, 5.69276, 1.03 ) }
    dend_43 { pt3dadd( 6.76535, -44.9495, 5.91751, 0.81 ) }
    dend_43 { pt3dadd( 7.28166, -45.3413, 6.20052, 0.81 ) }
    dend_43 { pt3dadd( 8.03589, -45.8922, 6.6132, 0.66 ) }
    dend_43 { pt3dadd( 8.33736, -46.1084, 6.77627, 0.96 ) }
    dend_43 { pt3dadd( 8.71576, -46.3739, 6.97927, 0.96 ) }
    dend_43 { pt3dadd( 9.16183, -46.6766, 7.2168, 0.96 ) }
    dend_43 { pt3dadd( 9.20485, -46.7027, 7.2395, 0.96 ) }
    dend_43 { pt3dadd( 9.65658, -46.9291, 7.47483, 0.96 ) }
    dend_43 { pt3dadd( 10.0018, -47.0322, 7.6516, 0.74 ) }
    dend_43 { pt3dadd( 10.2684, -47.0741, 7.78601, 0.37 ) }
    dend_43 { pt3dadd( 10.4931, -47.0709, 7.8997, 0.37 ) }
    dend_43 { pt3dadd( 10.9016, -47.0163, 8.10741, 0.37 ) }
    dend_43 { pt3dadd( 10.9437, -47.0083, 8.12907, 0.37 ) }
    dend_43 { pt3dadd( 11.5359, -46.8953, 8.43731, 0.37 ) }
    dend_43 { pt3dadd( 11.5721, -46.8918, 8.45695, 0.37 ) }
    dend_43 { pt3dadd( 11.9787, -46.8939, 8.68218, 0.37 ) }
    dend_43 { pt3dadd( 12.0615, -46.9072, 8.72876, 0.37 ) }
    dend_43 { pt3dadd( 12.5302, -47.0517, 8.99504, 0.37 ) }
    dend_43 { pt3dadd( 12.9886, -47.2548, 9.25648, 0.37 ) }
    dend_43 { pt3dadd( 13.5627, -47.5895, 9.53793, 1.33 ) }
    dend_43 { pt3dadd( 13.6001, -47.6161, 9.55356, 1.33 ) }
    dend_43 { pt3dadd( 14.0417, -47.9972, 9.65203, 1.77 ) }
    dend_43 { pt3dadd( 14.2001, -48.1409, 9.66935, 1.77 ) }
    dend_43 { pt3dadd( 14.6296, -48.5483, 9.67414, 1.77 ) }
    dend_43 { pt3dadd( 15.0918, -48.9736, 9.65293, 0.52 ) }
    dend_43 { pt3dadd( 15.6621, -49.4629, 9.61863, 0.52 ) }
    dend_43 { pt3dadd( 16.6826, -50.2607, 9.58883, 0.52 ) }
    dend_43 { pt3dadd( 17.0165, -50.4909, 9.58742, 0.52 ) }
    dend_43 { pt3dadd( 17.0583, -50.5154, 9.58941, 0.52 ) }
    dend_43 { pt3dadd( 17.4275, -50.6763, 9.63819, 0.66 ) }
    dend_43 { pt3dadd( 17.8981, -50.796, 9.76981, 0.74 ) }
    dend_43 { pt3dadd( 18.2315, -50.8002, 9.89441, 0.96 ) }
    dend_43 { pt3dadd( 18.52, -50.7579, 10.0318, 0.96 ) }
    dend_43 { pt3dadd( 18.8116, -50.6954, 10.1707, 0.81 ) }
    dend_43 { pt3dadd( 19.111, -50.6216, 10.3142, 0.81 ) }
    dend_43 { pt3dadd( 19.6982, -50.4703, 10.5984, 0.59 ) }
    dend_43 { pt3dadd( 20.1943, -50.3731, 10.8429, 0.44 ) }
    dend_43 { pt3dadd( 20.2378, -50.3673, 10.8625, 0.44 ) }
    dend_43 { pt3dadd( 20.5944, -50.3685, 11.0146, 0.37 ) }
    dend_43 { pt3dadd( 20.9224, -50.4275, 11.1406, 0.29 ) }
    dend_43 { pt3dadd( 21.3726, -50.5732, 11.3036, 0.29 ) }
    dend_43 { pt3dadd( 21.9873, -50.8309, 11.5032, 0.29 ) }
    dend_43 { pt3dadd( 22.4313, -51.0391, 11.6428, 1.11 ) }
    dend_43 { pt3dadd( 23.1925, -51.3925, 11.8811, 1.84 ) }
    dend_43 { pt3dadd( 24.2589, -51.9123, 12.2539, 2.21 ) }
    dend_43 { pt3dadd( 24.9855, -52.2712, 12.5289, 2.21 ) }
    dend_43 { pt3dadd( 25.6625, -52.6119, 12.8089, 1.11 ) }
    dend_43 { pt3dadd( 26.2018, -52.8885, 13.0858, 0.59 ) }
    dend_43 { pt3dadd( 26.6495, -53.1244, 13.3753, 0.37 ) }
    dend_43 { pt3dadd( 27.211, -53.4081, 13.8079, 0.74 ) }
    dend_43 { pt3dadd( 27.239, -53.4228, 13.8348, 0.74 ) }
    dend_43 { pt3dadd( 27.5695, -53.583, 14.1862, 0.74 ) }
    dend_43 { pt3dadd( 28.1285, -53.8446, 14.8271, 0.44 ) }
    dend_43 { pt3dadd( 28.5996, -54.0462, 15.3231, 0.44 ) }
    dend_43 { pt3dadd( 28.6383, -54.0614, 15.359, 0.44 ) }
    dend_43 { pt3dadd( 29.0386, -54.1784, 15.6549, 1.25 ) }
    dend_43 { pt3dadd( 29.616, -54.3081, 15.9944, 1.25 ) }
    dend_43 { pt3dadd( 29.7519, -54.3298, 16.0559, 1.25 ) }
    dend_43 { pt3dadd( 30.2484, -54.3916, 16.2223, 1.47 ) }
    dend_43 { pt3dadd( 30.3459, -54.3997, 16.2532, 1.47 ) }
    dend_43 { pt3dadd( 31.007, -54.4613, 16.4863, 0.96 ) }
    dend_43 { pt3dadd( 31.6518, -54.5236, 16.7306, 0.37 ) }
    dend_43 { pt3dadd( 32.1359, -54.6034, 16.9713, 0.37 ) }
    dend_43 { pt3dadd( 32.1926, -54.6161, 17.0064, 0.37 ) }
    dend_43 { pt3dadd( 32.8715, -54.8122, 17.523, 0.37 ) }
    dend_43 { pt3dadd( 33.3028, -54.9846, 17.9105, 0.37 ) }
    dend_43 { pt3dadd( 33.3282, -54.9989, 17.9391, 0.37 ) }
    dend_43 { pt3dadd( 33.8802, -55.4111, 18.6721, 0.37 ) }
    dend_43 { pt3dadd( 33.9536, -55.4771, 18.7746, 0.66 ) }
    dend_43 { pt3dadd( 33.9826, -55.5054, 18.8124, 0.66 ) }
    dend_43 { pt3dadd( 34.2754, -55.8198, 19.1429, 0.66 ) }
    dend_43 { pt3dadd( 34.3061, -55.8479, 19.1682, 0.66 ) }
    dend_43 { pt3dadd( 34.6704, -56.1483, 19.4149, 0.29 ) }
    dend_43 { pt3dadd( 34.7064, -56.1749, 19.4339, 0.29 ) }
    dend_43 { pt3dadd( 35.127, -56.4468, 19.6116, 0.22 ) }
    dend_43 { pt3dadd( 35.605, -56.7363, 19.7864, 0.22 ) }
    dend_43 { pt3dadd( 35.9159, -56.9065, 19.8874, 0.96 ) }
    dend_43 { pt3dadd( 36.0041, -56.9537, 19.9145, 0.96 ) }
    dend_43 { pt3dadd( 36.5682, -57.243, 20.0409, 1.18 ) }
    dend_43 { pt3dadd( 37.4288, -57.6712, 20.1906, 1.18 ) }
    dend_43 { pt3dadd( 37.4779, -57.6956, 20.197, 1.18 ) }
    dend_43 { pt3dadd( 37.8752, -57.8988, 20.246, 1.33 ) }
    dend_43 { pt3dadd( 38.3885, -58.1777, 20.3097, 1.18 ) }
    dend_43 { pt3dadd( 39.1736, -58.6459, 20.4226, 1.03 ) }
    dend_43 { pt3dadd( 39.2194, -58.6766, 20.4274, 1.03 ) }
    dend_43 { pt3dadd( 39.6371, -58.9857, 20.4793, 0.52 ) }
    dend_43 { pt3dadd( 40.218, -59.4186, 20.5597, 0.52 ) }
    dend_43 { pt3dadd( 40.263, -59.451, 20.5626, 0.52 ) }
    dend_43 { pt3dadd( 41.0676, -60.0403, 20.5907, 0.52 ) }
    dend_43 { pt3dadd( 41.8301, -60.6341, 20.6175, 1.4 ) }
    dend_43 { pt3dadd( 42.4688, -61.1399, 20.6384, 2.06 ) }
    dend_43 { pt3dadd( 43.0024, -61.5669, 20.6483, 2.5 ) }
    dend_43 { pt3dadd( 44.0256, -62.3736, 20.6402, 0.29 ) }
    dend_43 { pt3dadd( 44.6055, -62.8185, 20.6379, 0.29 ) }
    dend_43 { pt3dadd( 45.1118, -63.1746, 20.6264, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_43 { pt3dadd( 45.4388, -63.3759, 20.6317, 0.29 ) }
    dend_43 { pt3dadd( 45.4812, -63.3995, 20.6312, 0.29 ) }
    dend_43 { pt3dadd( 46.2101, -63.792, 20.6372, 1.18 ) }
    dend_43 { pt3dadd( 46.4723, -63.9311, 20.6541, 1.18 ) }
    dend_43 { pt3dadd( 47.2539, -64.3486, 20.6898, 0.44 ) }
    dend_43 { pt3dadd( 48.0562, -64.8015, 20.7173, 0.44 ) }
    dend_43 { pt3dadd( 48.6376, -65.1927, 20.7384, 0.29 ) }
    dend_43 { pt3dadd( 49.139, -65.5928, 20.7435, 0.29 ) }
    dend_43 { pt3dadd( 49.3748, -65.8103, 20.7481, 0.81 ) }
    dend_43 { pt3dadd( 49.7138, -66.1214, 20.7338, 0.81 ) }
    dend_43 { pt3dadd( 49.7493, -66.155, 20.7308, 0.81 ) }
    dend_43 { pt3dadd( 50.1946, -66.4958, 20.6627, 0.81 ) }
    dend_43 { pt3dadd( 50.9643, -66.8723, 20.5905, 0.29 ) }
    dend_43 { pt3dadd( 51.475, -66.9901, 20.586, 0.29 ) }
    dend_43 { pt3dadd( 52.2842, -67.0567, 20.6646, 0.29 ) }
    dend_43 { pt3dadd( 52.3379, -67.0576, 20.6752, 0.29 ) }
    dend_43 { pt3dadd( 52.8717, -67.0471, 20.8217, 1.18 ) }
    dend_43 { pt3dadd( 53.3855, -67.026, 21.0085, 1.62 ) }
    dend_43 { pt3dadd( 54.0804, -67.0076, 21.337, 1.33 ) }
    dend_43 { pt3dadd( 54.5369, -67.0231, 21.5773, 0.44 ) }
    dend_43 { pt3dadd( 55.1223, -67.0627, 21.9221, 0.37 ) }
    dend_43 { pt3dadd( 55.205, -67.0692, 21.9703, 0.37 ) }
    dend_43 { pt3dadd( 55.6664, -67.1158, 22.236, 0.37 ) }
    dend_43 { pt3dadd( 55.7964, -67.1288, 22.3095, 0.37 ) }
    dend_43 { pt3dadd( 56.4032, -67.2122, 22.649, 0.37 ) }
    dend_43 { pt3dadd( 56.8144, -67.2803, 22.8739, 0.37 ) }
    dend_43 { pt3dadd( 57.4254, -67.3824, 23.2127, 0.37 ) }
    dend_43 { pt3dadd( 57.4722, -67.3934, 23.2389, 0.37 ) }
    dend_43 { pt3dadd( 57.771, -67.4796, 23.4075, 0.66 ) }
    dend_43 { pt3dadd( 58.1081, -67.6252, 23.5902, 0.66 ) }
    dend_43 { pt3dadd( 58.5564, -67.9371, 23.8199, 0.66 ) }
    dend_43 { pt3dadd( 58.6672, -68.0406, 23.8733, 0.66 ) }
    dend_43 { pt3dadd( 59.0996, -68.5052, 24.0711, 0.66 ) }
    dend_43 { pt3dadd( 59.1357, -68.5448, 24.0872, 0.66 ) }
    dend_43 { pt3dadd( 59.496, -68.9604, 24.2407, 0.59 ) }
    dend_43 { pt3dadd( 59.8843, -69.4171, 24.3953, 0.59 ) }
    dend_43 { pt3dadd( 60.461, -70.127, 24.6171, 0.59 ) }
    dend_43 { pt3dadd( 60.4911, -70.1642, 24.6286, 0.59 ) }
    dend_43 { pt3dadd( 60.8239, -70.5681, 24.7578, 1.25 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 39/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -6.09164, -58.3277, -3.35089, 2.06 ) }
    dend_41 { pt3dadd( -5.2514, -61.2449, -3.72425, 2.06 ) }
    dend_41 { pt3dadd( -4.90041, -62.7213, -3.77524, 1.25 ) }
    dend_41 { pt3dadd( -4.64202, -63.9785, -3.75511, 1.25 ) }
    dend_41 { pt3dadd( -4.62962, -64.0464, -3.75195, 1.25 ) }
    dend_41 { pt3dadd( -4.40396, -65.4362, -3.70023, 0.59 ) }
    dend_41 { pt3dadd( -4.19809, -66.9151, -3.65495, 0.59 ) }
    dend_41 { pt3dadd( -4.15126, -67.4097, -3.59178, 0.74 ) }
    dend_41 { pt3dadd( -4.08933, -68.3204, -3.50199, 0.74 ) }
    dend_41 { pt3dadd( -4.04096, -69.7025, -3.46753, 0.74 ) }
    dend_41 { pt3dadd( -4.02068, -70.9377, -3.52289, 0.74 ) }
    dend_41 { pt3dadd( -4.0268, -71.5285, -3.59, 1.11 ) }
    dend_41 { pt3dadd( -4.0293, -71.6075, -3.6004, 1.11 ) }
    dend_41 { pt3dadd( -4.06218, -72.3958, -3.70386, 1.11 ) }
    dend_41 { pt3dadd( -4.12514, -73.5197, -3.84565, 0.44 ) }
    dend_41 { pt3dadd( -4.17465, -74.3199, -3.93088, 0.29 ) }
    dend_41 { pt3dadd( -4.26106, -76.6116, -4.06892, 0.29 ) }
    dend_41 { pt3dadd( -4.2601, -76.6913, -4.07198, 0.29 ) }
    dend_41 { pt3dadd( -4.24386, -77.1501, -4.08153, 0.44 ) }
    dend_41 { pt3dadd( -4.19078, -77.8345, -4.07541, 0.74 ) }
    dend_41 { pt3dadd( -4.10089, -78.5719, -4.04117, 1.47 ) }
    dend_41 { pt3dadd( -3.88058, -79.914, -3.98175, 1.77 ) }
    dend_41 { pt3dadd( -3.60545, -81.442, -3.96124, 1.77 ) }
    dend_41 { pt3dadd( -3.59478, -81.511, -3.96153, 1.77 ) }
    dend_41 { pt3dadd( -3.42935, -82.7289, -3.98468, 1.77 ) }
    dend_41 { pt3dadd( -3.32774, -83.7975, -4.01002, 1.03 ) }
    dend_41 { pt3dadd( -3.26327, -84.7357, -4.03464, 0.81 ) }
    dend_41 { pt3dadd( -3.22889, -85.6145, -4.05583, 0.44 ) }
    dend_41 { pt3dadd( -3.21365, -87.1396, -4.08373, 0.44 ) }
    dend_41 { pt3dadd( -3.2139, -87.2088, -4.08485, 0.44 ) }
    dend_41 { pt3dadd( -3.28334, -90.1279, -4.12191, 0.44 ) }
    dend_41 { pt3dadd( -3.28534, -90.2077, -4.12179, 0.44 ) }
    dend_41 { pt3dadd( -3.29549, -90.7309, -4.09715, 0.88 ) }
    dend_41 { pt3dadd( -3.29665, -90.8006, -4.0906, 0.88 ) }
    dend_41 { pt3dadd( -3.30931, -91.6078, -3.99742, 1.47 ) }
    dend_41 { pt3dadd( -3.32541, -92.7944, -3.84827, 1.84 ) }
    dend_41 { pt3dadd( -3.3404, -94.2583, -3.64237, 1.62 ) }
    dend_41 { pt3dadd( -3.3526, -95.2594, -3.5056, 0.74 ) }
    dend_41 { pt3dadd( -3.35794, -95.9187, -3.41667, 0.59 ) }
    dend_41 { pt3dadd( -3.34893, -96.92, -3.28157, 0.44 ) }
    dend_41 { pt3dadd( -3.31687, -98.209, -3.06839, 0.44 ) }
    dend_41 { pt3dadd( -3.31303, -98.2872, -3.0533, 0.44 ) }
    dend_41 { pt3dadd( -3.26735, -98.9207, -2.93107, 0.81 ) }
    dend_41 { pt3dadd( -3.24817, -99.1221, -2.89491, 0.81 ) }
    dend_41 { pt3dadd( -3.17514, -99.8913, -2.7503, 0.81 ) }
    dend_41 { pt3dadd( -3.0955, -100.85, -2.57083, 0.29 ) }
    dend_41 { pt3dadd( -3.04786, -101.459, -2.46345, 0.29 ) }
    dend_41 { pt3dadd( -2.88633, -103.54, -2.12263, 0.22 ) }
    dend_41 { pt3dadd( -2.88199, -103.609, -2.11281, 0.22 ) }
    dend_41 { pt3dadd( -2.85465, -104.173, -2.05022, 1.03 ) }
    dend_41 { pt3dadd( -2.82003, -105.197, -1.95713, 1.4 ) }
    dend_41 { pt3dadd( -2.7877, -106.137, -1.895, 1.4 ) }
    dend_41 { pt3dadd( -2.7877, -106.137, -1.895, 0.22 ) }
    dend_41 { pt3dadd( -2.72694, -107.287, -1.79818, 0.22 ) }
    dend_41 { pt3dadd( -2.64245, -108.946, -1.60398, 0.22 ) }
    dend_41 { pt3dadd( -2.6273, -109.383, -1.54179, 1.11 ) }
    dend_41 { pt3dadd( -2.61639, -110.201, -1.41108, 1.55 ) }
    dend_41 { pt3dadd( -2.62449, -111.031, -1.26967, 2.21 ) }
    dend_41 { pt3dadd( -2.64126, -111.913, -1.10467, 1.47 ) }
    dend_41 { pt3dadd( -2.6593, -112.655, -0.948876, 0.22 ) }
    dend_41 { pt3dadd( -2.67587, -113.61, -0.740708, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_41 { pt3dadd( -2.68002, -114.678, -0.519023, 0.22 ) }
    dend_41 { pt3dadd( -2.67929, -114.746, -0.504989, 0.22 ) }
    dend_41 { pt3dadd( -2.62311, -116.017, -0.260321, 0.22 ) }
    dend_41 { pt3dadd( -2.61756, -116.086, -0.248694, 0.22 ) }
    dend_41 { pt3dadd( -2.46916, -117.309, -0.0882186, 0.22 ) }
    dend_41 { pt3dadd( -2.43542, -117.53, -0.0584287, 0.66 ) }
    dend_41 { pt3dadd( -2.35124, -118.072, 0.0101104, 0.81 ) }
    dend_41 { pt3dadd( -2.26481, -118.689, 0.0420349, 0.81 ) }
    dend_41 { pt3dadd( -2.25018, -118.801, 0.0387199, 0.22 ) }
    dend_41 { pt3dadd( -2.24575, -118.87, 0.0335149, 0.22 ) }
    dend_41 { pt3dadd( -2.25107, -119.802, -0.0800067, 0.22 ) }
    dend_41 { pt3dadd( -2.25259, -119.871, -0.0871777, 0.22 ) }
    dend_41 { pt3dadd( -2.23485, -121.086, -0.311733, 0.22 ) }
    dend_41 { pt3dadd( -2.23396, -121.154, -0.325053, 0.22 ) }
    dend_41 { pt3dadd( -2.21533, -121.944, -0.480718, 0.22 ) }
    dend_41 { pt3dadd( -2.20536, -122.236, -0.539364, 0.22 ) }
    dend_41 { pt3dadd( -2.11716, -124.088, -0.928298, 0.22 ) }
    dend_41 { pt3dadd( -1.98444, -127.064, -1.54456, 0.22 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 18/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -6.09164, -58.3277, -3.35089, 0.59 ) }
    dend_38 { pt3dadd( -5.02457, -60.9865, -6.6433, 0.59 ) }
    dend_38 { pt3dadd( -4.82862, -61.4748, -7.24789, 0.59 ) }
    dend_38 { pt3dadd( -4.80375, -61.5368, -7.32461, 0.59 ) }
    dend_38 { pt3dadd( -4.50977, -62.2694, -8.23168, 0.59 ) }
    dend_38 { pt3dadd( -4.18908, -63.0685, -9.22114, 0.59 ) }
    dend_38 { pt3dadd( -3.97648, -63.5982, -9.8771, 0.59 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 25/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 100.131, 227.217, -53.6337, 0.74 ) }
    dend_34 { pt3dadd( 100.249, 228.381, -53.618, 0.74 ) }
    dend_34 { pt3dadd( 100.341, 230.199, -53.7494, 0.22 ) }
    dend_34 { pt3dadd( 100.368, 231.331, -53.8828, 0.44 ) }
    dend_34 { pt3dadd( 100.421, 233.319, -54.1575, 0.22 ) }
    dend_34 { pt3dadd( 100.436, 233.881, -54.2407, 0.44 ) }
    dend_34 { pt3dadd( 100.439, 234.482, -54.3526, 0.44 ) }
    dend_34 { pt3dadd( 100.371, 236.02, -54.7939, 0.22 ) }
    dend_34 { pt3dadd( 100.363, 236.086, -54.8188, 0.22 ) }
    dend_34 { pt3dadd( 100.143, 237.431, -55.3754, 0.22 ) }
    dend_34 { pt3dadd( 100.13, 237.498, -55.3964, 0.22 ) }
    dend_34 { pt3dadd( 99.9892, 238.72, -55.6372, 0.88 ) }
    dend_34 { pt3dadd( 99.9612, 239.183, -55.6945, 0.88 ) }
    dend_34 { pt3dadd( 99.9322, 240.424, -55.7451, 0.15 ) }
    dend_34 { pt3dadd( 99.9322, 240.496, -55.7457, 0.15 ) }
    dend_34 { pt3dadd( 99.9532, 242.68, -55.6754, 0.15 ) }
    dend_34 { pt3dadd( 100.016, 244.852, -55.5247, 0.15 ) }
    dend_34 { pt3dadd( 100.045, 245.322, -55.4603, 1.03 ) }
    dend_34 { pt3dadd( 100.123, 246.559, -55.2379, 1.03 ) }
    dend_34 { pt3dadd( 100.2, 247.65, -54.9734, 0.22 ) }
    dend_34 { pt3dadd( 100.307, 249.409, -54.4741, 0.22 ) }
    dend_34 { pt3dadd( 100.352, 250.281, -54.1688, 0.22 ) }
    dend_34 { pt3dadd( 100.392, 251.382, -53.7179, 0.22 ) }
    dend_34 { pt3dadd( 100.455, 252.971, -53.0619, 0.22 ) }
    dend_34 { pt3dadd( 100.523, 254.541, -52.4503, 0.22 ) }
    dend_34 { pt3dadd( 100.525, 254.608, -52.4258, 0.22 ) }
    dend_34 { pt3dadd( 100.551, 255.692, -52.0735, 1.4 ) }
    dend_34 { pt3dadd( 100.58, 256.682, -51.8116, 0.15 ) }
    dend_34 { pt3dadd( 100.727, 259.793, -51.1535, 0.15 ) }
    dend_34 { pt3dadd( 100.795, 260.681, -50.9906, 1.11 ) }
    dend_34 { pt3dadd( 100.856, 261.385, -50.8827, 1.11 ) }
    dend_34 { pt3dadd( 100.905, 261.882, -50.8115, 0.22 ) }
    dend_34 { pt3dadd( 101.06, 263.218, -50.6411, 0.22 ) }
    dend_34 { pt3dadd( 101.375, 265.022, -50.409, 0.22 ) }
    dend_34 { pt3dadd( 101.411, 265.172, -50.388, 0.22 ) }
    dend_34 { pt3dadd( 101.559, 265.684, -50.3079, 0.96 ) }
    dend_34 { pt3dadd( 101.696, 266.112, -50.2447, 0.96 ) }
    dend_34 { pt3dadd( 101.911, 266.76, -50.1511, 0.22 ) }
    dend_34 { pt3dadd( 102.688, 269.086, -49.874, 0.22 ) }
    dend_34 { pt3dadd( 102.733, 269.223, -49.8632, 0.22 ) }
    dend_34 { pt3dadd( 102.841, 269.551, -49.833, 0.44 ) }
    dend_34 { pt3dadd( 102.957, 269.907, -49.7976, 0.22 ) }
    dend_34 { pt3dadd( 103.153, 270.517, -49.7307, 0.22 ) }
    dend_34 { pt3dadd( 103.174, 270.585, -49.7221, 0.22 ) }
    dend_34 { pt3dadd( 103.686, 272.45, -49.4592, 0.22 ) }
    dend_34 { pt3dadd( 103.808, 272.895, -49.396, 0.44 ) }
    dend_34 { pt3dadd( 103.828, 272.975, -49.3846, 0.44 ) }
    dend_34 { pt3dadd( 103.939, 273.41, -49.321, 0.44 ) }
    dend_34 { pt3dadd( 104.291, 274.726, -49.1353, 0.22 ) }
    dend_34 { pt3dadd( 104.305, 274.797, -49.125, 0.22 ) }
    dend_34 { pt3dadd( 104.366, 275.164, -49.0735, 0.44 ) }
    dend_34 { pt3dadd( 104.438, 275.523, -48.9855, 0.44 ) }
    dend_34 { pt3dadd( 104.455, 275.6, -48.9613, 0.44 ) }
    dend_34 { pt3dadd( 104.486, 275.732, -48.9144, 0.15 ) }
    dend_34 { pt3dadd( 104.939, 277.634, -48.1842, 0.15 ) }
    dend_34 { pt3dadd( 105.345, 279.342, -47.5111, 0.15 ) }
    dend_34 { pt3dadd( 105.703, 280.821, -46.9044, 0.44 ) }
    dend_34 { pt3dadd( 105.72, 280.886, -46.8771, 0.44 ) }
    dend_34 { pt3dadd( 105.947, 281.745, -46.4966, 0.44 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 84/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 100.131, 227.217, -53.6337, 0.29 ) }
    dend_33 { pt3dadd( 100.844, 228.357, -54.0437, 0.29 ) }
    dend_33 { pt3dadd( 100.882, 228.422, -54.0787, 0.29 ) }
    dend_33 { pt3dadd( 101.761, 229.974, -55.0215, 0.29 ) }
    dend_33 { pt3dadd( 101.802, 230.046, -55.0662, 0.29 ) }
    dend_33 { pt3dadd( 102.835, 231.912, -56.2127, 0.29 ) }
    dend_33 { pt3dadd( 103.505, 233.127, -57.0601, 0.29 ) }
    dend_33 { pt3dadd( 104.278, 234.585, -58.1904, 0.96 ) }
    dend_33 { pt3dadd( 104.31, 234.646, -58.2369, 0.96 ) }
    dend_33 { pt3dadd( 104.714, 235.426, -58.8424, 0.96 ) }
    dend_33 { pt3dadd( 104.743, 235.487, -58.8893, 0.96 ) }
    dend_33 { pt3dadd( 105.521, 237.277, -60.1343, 0.37 ) }
    dend_33 { pt3dadd( 105.932, 238.285, -60.8053, 0.22 ) }
    dend_33 { pt3dadd( 106.436, 239.655, -61.5479, 0.22 ) }
    dend_33 { pt3dadd( 106.505, 239.87, -61.6558, 0.22 ) }
    dend_33 { pt3dadd( 106.946, 241.422, -62.396, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_33 { pt3dadd( 107.147, 242.263, -62.7929, 0.59 ) }
    dend_33 { pt3dadd( 107.161, 242.341, -62.8213, 0.59 ) }
    dend_33 { pt3dadd( 107.381, 243.785, -63.2981, 0.96 ) }
    dend_33 { pt3dadd( 107.5, 244.545, -63.5195, 0.96 ) }
    dend_33 { pt3dadd( 107.521, 244.681, -63.5582, 0.96 ) }
    dend_33 { pt3dadd( 107.777, 246.362, -63.9613, 0.59 ) }
    dend_33 { pt3dadd( 107.937, 247.755, -64.3621, 0.52 ) }
    dend_33 { pt3dadd( 108.069, 249.267, -64.7819, 0.52 ) }
    dend_33 { pt3dadd( 108.074, 249.348, -64.8027, 0.52 ) }
    dend_33 { pt3dadd( 108.201, 251.411, -65.2764, 1.62 ) }
    dend_33 { pt3dadd( 108.263, 252.605, -65.5947, 1.99 ) }
    dend_33 { pt3dadd( 108.362, 254.204, -66.0462, 0.37 ) }
    dend_33 { pt3dadd( 108.48, 256.07, -66.6319, 0.37 ) }
    dend_33 { pt3dadd( 108.557, 256.991, -66.906, 0.74 ) }
    dend_33 { pt3dadd( 108.689, 258.18, -67.2226, 0.74 ) }
    dend_33 { pt3dadd( 108.974, 260.336, -67.7692, 0.22 ) }
    dend_33 { pt3dadd( 109.194, 261.818, -68.2536, 0.22 ) }
    dend_33 { pt3dadd( 109.348, 262.724, -68.5908, 0.66 ) }
    dend_33 { pt3dadd( 109.559, 263.923, -69.1068, 0.66 ) }
    dend_33 { pt3dadd( 109.579, 264.038, -69.1592, 0.66 ) }
    dend_33 { pt3dadd( 109.966, 266.223, -70.1756, 0.22 ) }
    dend_33 { pt3dadd( 110.459, 269.027, -71.3752, 0.22 ) }
    dend_33 { pt3dadd( 110.473, 269.112, -71.4163, 0.22 ) }
    dend_33 { pt3dadd( 110.51, 269.358, -71.5406, 1.03 ) }
    dend_33 { pt3dadd( 110.521, 269.432, -71.5775, 1.03 ) }
    dend_33 { pt3dadd( 110.579, 269.754, -71.7178, 1.03 ) }
    dend_33 { pt3dadd( 110.749, 270.419, -71.8842, 0.29 ) }
    dend_33 { pt3dadd( 110.77, 270.499, -71.8919, 0.29 ) }
    dend_33 { pt3dadd( 110.969, 271.371, -71.9632, 0.29 ) }
    dend_33 { pt3dadd( 111.186, 272.382, -72.0332, 0.29 ) }
    dend_33 { pt3dadd( 111.203, 272.476, -72.0381, 0.29 ) }
    dend_33 { pt3dadd( 111.333, 273.353, -72.0759, 0.29 ) }
    dend_33 { pt3dadd( 111.354, 273.541, -72.0795, 0.29 ) }
    dend_33 { pt3dadd( 111.471, 274.701, -72.0846, 0.81 ) }
    dend_33 { pt3dadd( 111.531, 275.494, -72.0658, 0.81 ) }
    dend_33 { pt3dadd( 111.558, 276.181, -72.0163, 0.15 ) }
    dend_33 { pt3dadd( 111.561, 276.277, -72.0092, 0.15 ) }
    dend_33 { pt3dadd( 111.605, 277.902, -71.8901, 0.15 ) }
    // Section: dend_17, id: dend_17, parent: dend_5 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -9.58894, 46.2225, -10.3902, 1.77 ) }
    dend_17 { pt3dadd( -9.67073, 47.6204, -10.8849, 1.77 ) }
    dend_17 { pt3dadd( -9.77662, 48.3113, -11.0776, 1.69 ) }
    dend_17 { pt3dadd( -9.84909, 48.6418, -11.1831, 1.69 ) }
    dend_17 { pt3dadd( -9.86515, 48.6978, -11.2007, 1.69 ) }
    dend_17 { pt3dadd( -10.2141, 49.6959, -11.4981, 1.4 ) }
    dend_17 { pt3dadd( -10.2329, 49.743, -11.5127, 1.4 ) }
    dend_17 { pt3dadd( -10.5359, 50.3711, -11.6817, 1.25 ) }
    dend_17 { pt3dadd( -11.0714, 51.4042, -11.9474, 1.25 ) }
    dend_17 { pt3dadd( -11.4798, 52.1871, -12.1286, 1.18 ) }
    dend_17 { pt3dadd( -11.9014, 52.9731, -12.2589, 1.18 ) }
    dend_17 { pt3dadd( -12.3501, 53.7979, -12.3442, 1.18 ) }
    dend_17 { pt3dadd( -12.7049, 54.4548, -12.37, 1.18 ) }
    dend_17 { pt3dadd( -13.0996, 55.2032, -12.3683, 1.18 ) }
    dend_17 { pt3dadd( -13.4309, 55.8434, -12.3299, 1.33 ) }
    dend_17 { pt3dadd( -13.8697, 56.747, -12.2614, 1.33 ) }
    dend_17 { pt3dadd( -14.1133, 57.287, -12.211, 1.03 ) }
    dend_17 { pt3dadd( -14.4353, 58.0399, -12.1355, 1.03 ) }
    dend_17 { pt3dadd( -14.7104, 58.7011, -12.0994, 0.81 ) }
    dend_17 { pt3dadd( -14.7383, 58.7775, -12.1088, 0.81 ) }
    dend_17 { pt3dadd( -14.8722, 59.1623, -12.2128, 0.81 ) }
    dend_17 { pt3dadd( -14.9002, 59.2563, -12.254, 0.81 ) }
    dend_17 { pt3dadd( -15.0593, 59.8186, -12.5367, 0.81 ) }
    dend_17 { pt3dadd( -15.0703, 59.858, -12.557, 0.81 ) }
    dend_17 { pt3dadd( -15.4393, 61.1192, -13.1505, 1.03 ) }
    dend_17 { pt3dadd( -15.6182, 61.736, -13.451, 1.47 ) }
    dend_17 { pt3dadd( -15.9355, 62.7873, -13.9666, 1.47 ) }
    dend_17 { pt3dadd( -15.9523, 62.8401, -13.9911, 1.47 ) }
    dend_17 { pt3dadd( -16.1589, 63.4427, -14.2525, 1.77 ) }
    dend_17 { pt3dadd( -16.4291, 64.2083, -14.5686, 2.06 ) }
    dend_17 { pt3dadd( -16.7566, 65.0992, -14.9296, 1.47 ) }
    dend_17 { pt3dadd( -16.9339, 65.6185, -15.1376, 1.11 ) }
    dend_17 { pt3dadd( -17.1646, 66.3542, -15.4132, 1.47 ) }
    dend_17 { pt3dadd( -17.2968, 66.8546, -15.6061, 1.77 ) }
    dend_17 { pt3dadd( -17.535, 67.8179, -15.9884, 1.99 ) }
    dend_17 { pt3dadd( -17.7314, 68.6763, -16.3318, 2.28 ) }
    dend_17 { pt3dadd( -18.0069, 69.9836, -16.8319, 2.28 ) }
    dend_17 { pt3dadd( -18.2547, 71.3573, -17.3756, 2.5 ) }
    dend_17 { pt3dadd( -18.4693, 72.7659, -17.9461, 2.87 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 77/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -9.58894, 46.2225, -10.3902, 1.03 ) }
    dend_6 { pt3dadd( -9.75197, 46.2949, -10.4166, 1.03 ) }
    dend_6 { pt3dadd( -10.7694, 46.7021, -10.5686, 1.03 ) }
    dend_6 { pt3dadd( -11.495, 46.9557, -10.6788, 0.96 ) }
    dend_6 { pt3dadd( -12.1078, 47.1405, -10.7769, 0.96 ) }
    dend_6 { pt3dadd( -13.6307, 47.5583, -10.9998, 1.18 ) }
    dend_6 { pt3dadd( -14.467, 47.7645, -11.0995, 1.18 ) }
    dend_6 { pt3dadd( -15.4558, 47.9606, -11.1999, 1.18 ) }
    dend_6 { pt3dadd( -16.5116, 48.1223, -11.2863, 1.18 ) }
    dend_6 { pt3dadd( -17.695, 48.2598, -11.371, 1.18 ) }
    dend_6 { pt3dadd( -18.7454, 48.3394, -11.4452, 1.18 ) }
    dend_6 { pt3dadd( -19.8493, 48.3927, -11.5153, 1.18 ) }
    dend_6 { pt3dadd( -20.8801, 48.4269, -11.5852, 1.18 ) }
    dend_6 { pt3dadd( -21.8115, 48.4529, -11.6317, 1.55 ) }
    dend_6 { pt3dadd( -22.4751, 48.4674, -11.6548, 1.92 ) }
    dend_6 { pt3dadd( -23.5802, 48.4754, -11.6944, 1.92 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 93/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -76.6509, 156.645, 91.4568, 0.74 ) }
    dend_4 { pt3dadd( -83.0429, 163.506, 97.8822, 0.74 ) }
    dend_4 { pt3dadd( -90.1914, 170.08, 103.772, 0.74 ) }
    dend_4 { pt3dadd( -98.3764, 177.021, 107.596, 0.74 ) }
    dend_4 { pt3dadd( -107.079, 184.332, 108.805, 0.74 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -76.6509, 156.645, 91.4568, 0.52 ) }
    dend_3 { pt3dadd( -79.1821, 164.618, 97.514, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_3 { pt3dadd( -80.4752, 172.987, 103.449, 0.74 ) }
    dend_3 { pt3dadd( -80.6052, 181.519, 109.287, 0.74 ) }
    dend_3 { pt3dadd( -81.4627, 190.542, 114.365, 0.74 ) }
    // Section: dend_69, id: dend_69, parent: dend_57 (entry count 3/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -64.6831, -70.7242, 22.8014, 0.29 ) }
    dend_69 { pt3dadd( -73.314, -77.8573, 25.9297, 0.29 ) }
    dend_69 { pt3dadd( -82.6093, -84.0332, 28.9931, 0.29 ) }
    dend_69 { pt3dadd( -92.9847, -88.9455, 29.4671, 0.29 ) }
    dend_69 { pt3dadd( -103.822, -92.6168, 29.9287, 0.29 ) }
    dend_69 { pt3dadd( -114.689, -96.162, 30.5968, 0.29 ) }
    dend_69 { pt3dadd( -125.952, -97.9201, 31.231, 0.29 ) }
    dend_69 { pt3dadd( -137.361, -97.9627, 31.0716, 0.29 ) }
    dend_69 { pt3dadd( -148.526, -96.9582, 28.8623, 0.29 ) }
    dend_69 { pt3dadd( -159.215, -98.5856, 25.218, 0.29 ) }
    dend_69 { pt3dadd( -168.967, -100.232, 19.5273, 0.29 ) }
    dend_69 { pt3dadd( -177.367, -100.218, 11.775, 0.29 ) }
    dend_69 { pt3dadd( -186.117, -101.295, 4.5234, 0.29 ) }
    dend_69 { pt3dadd( -195.67, -102.184, -1.65946, 0.29 ) }
    dend_69 { pt3dadd( -205.287, -102.7, -7.79267, 0.29 ) }
    dend_69 { pt3dadd( -215.28, -104.321, -13.057, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 19/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -64.6831, -70.7242, 22.8014, 0.29 ) }
    dend_58 { pt3dadd( -75.6934, -79.8984, 25.1057, 0.29 ) }
    dend_58 { pt3dadd( -87.6589, -87.82, 26.7211, 0.29 ) }
    dend_58 { pt3dadd( -98.9306, -96.8764, 27.7251, 0.29 ) }
    dend_58 { pt3dadd( -109.452, -106.773, 29.4989, 0.29 ) }
    dend_58 { pt3dadd( -119.65, -117.155, 30.1975, 0.29 ) }
    dend_58 { pt3dadd( -130.096, -127.031, 32.497, 0.29 ) }
    dend_58 { pt3dadd( -140.085, -136.914, 36.3831, 0.29 ) }
    dend_58 { pt3dadd( -151.511, -145.433, 38.9534, 0.29 ) }
    dend_58 { pt3dadd( -161.074, -156.302, 40.9922, 0.29 ) }
    dend_58 { pt3dadd( -171.087, -166.836, 42.2434, 0.29 ) }
    dend_58 { pt3dadd( -181.421, -176.91, 40.6173, 0.29 ) }
    dend_58 { pt3dadd( -191.091, -187.337, 37.6376, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 32/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -43.6805, -54.0221, 17.1416, 0.29 ) }
    dend_56 { pt3dadd( -51.8906, -59.1791, 18.8101, 0.29 ) }
    dend_56 { pt3dadd( -60.8183, -63.1119, 19.5803, 0.29 ) }
    dend_56 { pt3dadd( -70.3205, -64.7079, 18.2829, 0.29 ) }
    dend_56 { pt3dadd( -79.4189, -67.1718, 15.8224, 0.29 ) }
    dend_56 { pt3dadd( -88.8792, -68.6096, 14.1164, 0.29 ) }
    dend_56 { pt3dadd( -98.347, -69.0571, 12.0155, 0.29 ) }
    dend_56 { pt3dadd( -107.967, -68.0056, 11.2238, 0.29 ) }
    dend_56 { pt3dadd( -117.466, -66.6273, 9.74614, 0.29 ) }
    dend_56 { pt3dadd( -126.713, -63.5522, 9.80612, 0.29 ) }
    dend_56 { pt3dadd( -136.212, -61.6649, 8.98953, 0.29 ) }
    dend_56 { pt3dadd( -145.772, -60.0004, 9.49366, 0.29 ) }
    dend_56 { pt3dadd( -155.423, -59.7673, 10.4942, 0.29 ) }
    dend_56 { pt3dadd( -165.084, -59.1093, 11.1751, 0.29 ) }
    dend_56 { pt3dadd( -174.772, -59.6996, 10.9418, 0.29 ) }
    dend_56 { pt3dadd( -184.261, -61.604, 9.96405, 0.29 ) }
    dend_56 { pt3dadd( -193.938, -62.3153, 9.5956, 0.29 ) }
    dend_56 { pt3dadd( -203.575, -63.167, 8.74484, 0.29 ) }
    dend_56 { pt3dadd( -213.118, -63.6222, 7.01917, 0.29 ) }
    dend_56 { pt3dadd( -222.585, -65.547, 5.87783, 0.29 ) }
    dend_56 { pt3dadd( -231.64, -67.8826, 3.15705, 0.29 ) }
    dend_56 { pt3dadd( -241.036, -68.4053, 0.767635, 0.29 ) }
    dend_56 { pt3dadd( -250.41, -67.9117, -1.70076, 0.29 ) }
    dend_56 { pt3dadd( -259.717, -66.8687, -4.26065, 0.29 ) }
    dend_56 { pt3dadd( -269.303, -66.1436, -5.60639, 0.29 ) }
    dend_56 { pt3dadd( -278.996, -66.1994, -6.10544, 0.29 ) }
    dend_56 { pt3dadd( -288.599, -67.0119, -4.91245, 0.29 ) }
    dend_56 { pt3dadd( -297.759, -69.6481, -2.90221, 0.29 ) }
    dend_56 { pt3dadd( -306.356, -73.3071, -0.0356274, 0.29 ) }
    dend_56 { pt3dadd( -314.796, -76.414, 3.7366, 0.29 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 62/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -43.6805, -54.0221, 17.1416, 0.29 ) }
    dend_55 { pt3dadd( -50.9339, -61.7211, 21.7282, 0.29 ) }
    dend_55 { pt3dadd( -56.9363, -69.6082, 27.6074, 0.29 ) }
    dend_55 { pt3dadd( -65.1436, -75.3031, 33.1452, 0.29 ) }
    dend_55 { pt3dadd( -75.348, -78.1517, 37.1796, 0.29 ) }
    dend_55 { pt3dadd( -84.8221, -82.507, 41.7327, 0.29 ) }
    dend_55 { pt3dadd( -94.4693, -87.6716, 44.9914, 0.29 ) }
    dend_55 { pt3dadd( -103.313, -93.9922, 48.6431, 0.29 ) }
    dend_55 { pt3dadd( -113.037, -99.6122, 50.8444, 0.29 ) }
    dend_55 { pt3dadd( -123.304, -104.296, 52.5184, 0.29 ) }
    dend_55 { pt3dadd( -133.705, -107.615, 55.6316, 0.29 ) }
    dend_55 { pt3dadd( -144.087, -109.313, 59.7955, 0.29 ) }
    dend_55 { pt3dadd( -153.242, -110.095, 66.3734, 0.29 ) }
    dend_55 { pt3dadd( -161.019, -109.046, 74.5163, 0.29 ) }
    dend_55 { pt3dadd( -168.43, -106.958, 82.8245, 0.29 ) }
    dend_55 { pt3dadd( -175.396, -106.118, 91.693, 0.29 ) }
    dend_55 { pt3dadd( -183.268, -104.109, 99.5823, 0.29 ) }
    dend_55 { pt3dadd( -191.725, -104.232, 107.074, 0.29 ) }
    dend_55 { pt3dadd( -198.891, -104.605, 115.803, 0.29 ) }
    dend_55 { pt3dadd( -206.677, -103.621, 123.944, 0.29 ) }
    dend_55 { pt3dadd( -213.898, -100.604, 132.167, 0.29 ) }
    dend_55 { pt3dadd( -221.162, -96.1257, 139.721, 0.29 ) }
    dend_55 { pt3dadd( -228.099, -91.9476, 147.731, 0.29 ) }
    dend_55 { pt3dadd( -234.575, -87.6828, 156.082, 0.29 ) }
    dend_55 { pt3dadd( -240.57, -84.8082, 165.285, 0.29 ) }
    dend_55 { pt3dadd( -247.553, -82.6954, 173.954, 0.29 ) }
    dend_55 { pt3dadd( -254.952, -80.8911, 182.332, 0.29 ) }
    dend_55 { pt3dadd( -262.102, -77.7979, 190.592, 0.29 ) }
    dend_55 { pt3dadd( -269.062, -73.463, 198.504, 0.29 ) }
    dend_55 { pt3dadd( -277.291, -68.4664, 204.624, 0.29 ) }
    dend_55 { pt3dadd( -284.809, -61.6002, 209.961, 0.29 ) }
    dend_55 { pt3dadd( -293.319, -55.92, 215.056, 0.29 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 94/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 60.8239, -70.5681, 24.7578, 0.52 ) }
    dend_47 { pt3dadd( 62.1437, -70.3717, 24.8079, 0.52 ) }
    dend_47 { pt3dadd( 63.3346, -70.2337, 24.8361, 0.52 ) }
    dend_47 { pt3dadd( 63.4239, -70.2292, 24.8421, 0.52 ) }
    dend_47 { pt3dadd( 64.8459, -70.2025, 24.973, 0.52 ) }
    dend_47 { pt3dadd( 66.2767, -70.1835, 25.1765, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_47 { pt3dadd( 68.0137, -70.2151, 25.508, 0.52 ) }
    dend_47 { pt3dadd( 68.0998, -70.224, 25.5313, 0.52 ) }
    dend_47 { pt3dadd( 69.679, -70.554, 26.0133, 0.52 ) }
    dend_47 { pt3dadd( 69.8563, -70.5965, 26.0738, 0.52 ) }
    dend_47 { pt3dadd( 71.4622, -71.0467, 26.6856, 1.4 ) }
    dend_47 { pt3dadd( 72.7638, -71.4307, 27.2067, 0.52 ) }
    dend_47 { pt3dadd( 74.3604, -71.9484, 27.8927, 0.52 ) }
    dend_47 { pt3dadd( 77.0271, -72.8161, 29.0304, 0.52 ) }
    dend_47 { pt3dadd( 78.0609, -73.1311, 29.4656, 0.96 ) }
    dend_47 { pt3dadd( 78.8841, -73.3707, 29.81, 0.52 ) }
    dend_47 { pt3dadd( 78.9647, -73.3917, 29.8436, 0.52 ) }
    dend_47 { pt3dadd( 79.7705, -73.5288, 30.1831, 0.37 ) }
    dend_47 { pt3dadd( 80.3958, -73.5331, 30.4651, 0.37 ) }
    dend_47 { pt3dadd( 81.303, -73.3523, 30.9307, 0.37 ) }
    dend_47 { pt3dadd( 81.3812, -73.3336, 30.9708, 0.37 ) }
    dend_47 { pt3dadd( 82.4909, -73.0338, 31.5278, 0.37 ) }
    dend_47 { pt3dadd( 82.5685, -73.0093, 31.5662, 0.37 ) }
    dend_47 { pt3dadd( 83.9205, -72.5242, 32.229, 0.74 ) }
    dend_47 { pt3dadd( 85.0315, -72.1287, 32.771, 1.03 ) }
    dend_47 { pt3dadd( 85.8721, -71.8739, 33.1807, 0.81 ) }
    dend_47 { pt3dadd( 86.5932, -71.6775, 33.5611, 0.29 ) }
    dend_47 { pt3dadd( 87.895, -71.3534, 34.2921, 0.29 ) }
    dend_47 { pt3dadd( 89.164, -71.0863, 35.0511, 0.29 ) }
    dend_47 { pt3dadd( 89.3229, -71.0567, 35.1526, 0.29 ) }
    dend_47 { pt3dadd( 90.4058, -70.8946, 35.8572, 0.29 ) }
    dend_47 { pt3dadd( 91.4826, -70.7557, 36.5546, 0.29 ) }
    dend_47 { pt3dadd( 91.558, -70.7469, 36.6022, 0.29 ) }
    dend_47 { pt3dadd( 92.5317, -70.6501, 37.1983, 0.29 ) }
    dend_47 { pt3dadd( 93.7227, -70.484, 37.8759, 0.29 ) }
    dend_47 { pt3dadd( 94.414, -70.3307, 38.3008, 0.74 ) }
    dend_47 { pt3dadd( 95.507, -70.0145, 38.9993, 0.74 ) }
    dend_47 { pt3dadd( 96.2714, -69.7826, 39.4895, 0.29 ) }
    dend_47 { pt3dadd( 96.3432, -69.7613, 39.5392, 0.29 ) }
    dend_47 { pt3dadd( 97.1124, -69.5256, 40.12, 0.29 ) }
    dend_47 { pt3dadd( 98.5123, -69.0895, 41.1996, 0.29 ) }
    dend_47 { pt3dadd( 99.2476, -68.868, 41.7591, 0.29 ) }
    dend_47 { pt3dadd( 99.3188, -68.8491, 41.8107, 0.29 ) }
    dend_47 { pt3dadd( 99.8797, -68.7523, 42.1868, 0.59 ) }
    dend_47 { pt3dadd( 100.541, -68.6511, 42.5862, 0.59 ) }
    dend_47 { pt3dadd( 101.405, -68.5419, 43.0336, 0.37 ) }
    dend_47 { pt3dadd( 102.372, -68.4261, 43.4205, 0.37 ) }
    dend_47 { pt3dadd( 102.465, -68.4099, 43.4606, 0.37 ) }
    dend_47 { pt3dadd( 103.585, -68.1185, 43.9902, 0.37 ) }
    dend_47 { pt3dadd( 104.273, -67.895, 44.3468, 0.96 ) }
    dend_47 { pt3dadd( 104.36, -67.8708, 44.3963, 0.96 ) }
    dend_47 { pt3dadd( 105.034, -67.6719, 44.7846, 0.96 ) }
    dend_47 { pt3dadd( 105.568, -67.5126, 45.0614, 0.22 ) }
    dend_47 { pt3dadd( 106.518, -67.2719, 45.5111, 0.22 ) }
    dend_47 { pt3dadd( 106.599, -67.2544, 45.5453, 0.22 ) }
    dend_47 { pt3dadd( 108.22, -67.1945, 46.207, 0.22 ) }
    dend_47 { pt3dadd( 108.844, -67.2328, 46.4557, 0.81 ) }
    dend_47 { pt3dadd( 109.728, -67.3692, 46.8014, 0.81 ) }
    dend_47 { pt3dadd( 109.976, -67.4233, 46.8973, 0.22 ) }
    dend_47 { pt3dadd( 110.055, -67.4454, 46.9312, 0.22 ) }
    dend_47 { pt3dadd( 111.871, -67.958, 47.7782, 0.22 ) }
    dend_47 { pt3dadd( 112.533, -68.1699, 48.1271, 0.88 ) }
    dend_47 { pt3dadd( 112.916, -68.3034, 48.3489, 1.18 ) }
    dend_47 { pt3dadd( 112.99, -68.3298, 48.3928, 1.18 ) }
    dend_47 { pt3dadd( 113.801, -68.6028, 48.8792, 0.15 ) }
    dend_47 { pt3dadd( 113.878, -68.6222, 48.9206, 0.15 ) }
    dend_47 { pt3dadd( 115.306, -68.8383, 49.6087, 0.15 ) }
    dend_47 { pt3dadd( 116.348, -68.9262, 50.066, 0.81 ) }
    dend_47 { pt3dadd( 116.532, -68.9316, 50.1388, 0.81 ) }
    dend_47 { pt3dadd( 117.398, -68.8899, 50.4544, 1.18 ) }
    dend_47 { pt3dadd( 118.953, -68.7539, 50.9799, 0.22 ) }
    dend_47 { pt3dadd( 119.36, -68.72, 51.1237, 0.15 ) }
    dend_47 { pt3dadd( 119.486, -68.7104, 51.1707, 0.15 ) }
    dend_47 { pt3dadd( 120.878, -68.6819, 51.7268, 0.15 ) }
    dend_47 { pt3dadd( 121.492, -68.6826, 51.9943, 1.11 ) }
    dend_47 { pt3dadd( 122.639, -68.7288, 52.5418, 1.47 ) }
    dend_47 { pt3dadd( 123.476, -68.7692, 52.9879, 0.15 ) }
    dend_47 { pt3dadd( 124.385, -68.7775, 53.4819, 0.15 ) }
    dend_47 { pt3dadd( 124.464, -68.7729, 53.5253, 0.15 ) }
    dend_47 { pt3dadd( 125.457, -68.608, 54.0872, 0.15 ) }
    dend_47 { pt3dadd( 125.61, -68.579, 54.174, 0.15 ) }
    dend_47 { pt3dadd( 126.147, -68.4233, 54.4862, 0.15 ) }
    dend_47 { pt3dadd( 126.559, -68.3257, 54.7256, 0.59 ) }
    dend_47 { pt3dadd( 126.802, -68.2937, 54.8648, 0.59 ) }
    dend_47 { pt3dadd( 127.888, -68.2631, 55.4792, 0.59 ) }
    dend_47 { pt3dadd( 128.882, -68.3452, 55.9692, 0.59 ) }
    dend_47 { pt3dadd( 128.963, -68.3561, 56.0051, 0.59 ) }
    dend_47 { pt3dadd( 130.266, -68.6004, 56.5343, 0.59 ) }
    dend_47 { pt3dadd( 131.12, -68.7772, 56.8475, 0.88 ) }
    dend_47 { pt3dadd( 131.31, -68.8179, 56.9146, 0.88 ) }
    dend_47 { pt3dadd( 132.388, -69.0568, 57.2777, 0.22 ) }
    dend_47 { pt3dadd( 132.568, -69.0938, 57.3349, 0.22 ) }
    dend_47 { pt3dadd( 133.262, -69.2338, 57.5529, 0.22 ) }
    dend_47 { pt3dadd( 133.526, -69.2879, 57.6362, 0.22 ) }
    dend_47 { pt3dadd( 134.997, -69.6089, 58.1319, 0.22 ) }
    dend_47 { pt3dadd( 135.113, -69.636, 58.1752, 0.22 ) }
    dend_47 { pt3dadd( 136.006, -69.8767, 58.5584, 0.96 ) }
    dend_47 { pt3dadd( 136.098, -69.9039, 58.594, 0.96 ) }
    dend_47 { pt3dadd( 137.033, -70.2054, 58.9166, 0.96 ) }
    dend_47 { pt3dadd( 137.115, -70.2336, 58.9426, 0.96 ) }
    dend_47 { pt3dadd( 137.577, -70.4123, 59.076, 0.96 ) }
    dend_47 { pt3dadd( 137.698, -70.4624, 59.1121, 0.96 ) }
    dend_47 { pt3dadd( 138.531, -70.823, 59.3743, 0.22 ) }
    dend_47 { pt3dadd( 138.689, -70.8913, 59.4235, 0.22 ) }
    dend_47 { pt3dadd( 139.601, -71.2884, 59.7033, 0.22 ) }
    dend_47 { pt3dadd( 139.68, -71.3233, 59.7293, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_47 { pt3dadd( 140.256, -71.5288, 59.8536, 0.74 ) }
    dend_47 { pt3dadd( 140.355, -71.5513, 59.8717, 0.74 ) }
    dend_47 { pt3dadd( 141.207, -71.6891, 60.0181, 1.03 ) }
    dend_47 { pt3dadd( 141.396, -71.707, 60.0438, 1.03 ) }
    dend_47 { pt3dadd( 141.977, -71.7217, 60.1108, 1.03 ) }
    dend_47 { pt3dadd( 143.565, -71.7042, 60.3173, 0.22 ) }
    dend_47 { pt3dadd( 145.424, -71.6171, 60.7411, 0.22 ) }
    dend_47 { pt3dadd( 145.508, -71.6129, 60.7701, 0.22 ) }
    dend_47 { pt3dadd( 146.388, -71.5641, 61.1546, 0.66 ) }
    dend_47 { pt3dadd( 146.823, -71.5413, 61.3481, 1.25 ) }
    dend_47 { pt3dadd( 147.604, -71.4998, 61.6286, 1.25 ) }
    dend_47 { pt3dadd( 149.282, -71.4421, 62.1676, 0.22 ) }
    dend_47 { pt3dadd( 150.741, -71.4244, 62.4868, 0.22 ) }
    dend_47 { pt3dadd( 150.842, -71.4245, 62.5037, 0.22 ) }
    dend_47 { pt3dadd( 152.616, -71.4749, 62.6963, 0.22 ) }
    dend_47 { pt3dadd( 154.711, -71.5883, 62.8158, 0.22 ) }
    dend_47 { pt3dadd( 154.888, -71.5974, 62.813, 0.22 ) }
    dend_47 { pt3dadd( 156.761, -71.6872, 62.6905, 0.22 ) }
    dend_47 { pt3dadd( 156.85, -71.6914, 62.6858, 0.22 ) }
    dend_47 { pt3dadd( 157.781, -71.7414, 62.6835, 0.22 ) }
    dend_47 { pt3dadd( 158.534, -71.7925, 62.7625, 1.03 ) }
    dend_47 { pt3dadd( 159.766, -71.876, 62.9836, 1.33 ) }
    dend_47 { pt3dadd( 160.615, -71.9215, 63.0566, 0.66 ) }
    dend_47 { pt3dadd( 161.714, -71.9713, 63.0029, 0.29 ) }
    dend_47 { pt3dadd( 161.816, -71.9764, 62.9925, 0.29 ) }
    dend_47 { pt3dadd( 163.021, -72.0627, 62.836, 0.29 ) }
    dend_47 { pt3dadd( 163.109, -72.0718, 62.8225, 0.29 ) }
    dend_47 { pt3dadd( 165.599, -72.5021, 62.5082, 0.96 ) }
    dend_47 { pt3dadd( 167.426, -72.8934, 62.3354, 0.96 ) }
    dend_47 { pt3dadd( 168.139, -73.0764, 62.3074, 0.15 ) }
    dend_47 { pt3dadd( 169.016, -73.3491, 62.3098, 0.15 ) }
    dend_47 { pt3dadd( 169.205, -73.4184, 62.3183, 0.15 ) }
    dend_47 { pt3dadd( 170.822, -74.1208, 62.563, 0.15 ) }
    dend_47 { pt3dadd( 171.455, -74.4598, 62.7451, 0.88 ) }
    dend_47 { pt3dadd( 171.966, -74.7238, 62.917, 0.88 ) }
    dend_47 { pt3dadd( 173.462, -75.3793, 63.3633, 0.22 ) }
    dend_47 { pt3dadd( 173.546, -75.4039, 63.3839, 0.22 ) }
    dend_47 { pt3dadd( 174.523, -75.5713, 63.5803, 0.22 ) }
    dend_47 { pt3dadd( 175.563, -75.576, 63.7359, 0.22 ) }
    dend_47 { pt3dadd( 176.585, -75.489, 63.872, 0.22 ) }
    dend_47 { pt3dadd( 176.995, -75.4051, 63.9044, 0.22 ) }
    dend_47 { pt3dadd( 177.899, -75.0947, 64.0061, 0.22 ) }
    dend_47 { pt3dadd( 177.983, -75.0618, 64.0149, 0.22 ) }
    dend_47 { pt3dadd( 178.865, -74.6207, 64.1021, 1.11 ) }
    dend_47 { pt3dadd( 178.945, -74.5804, 64.1154, 1.11 ) }
    dend_47 { pt3dadd( 180.507, -74.1534, 64.2301, 1.11 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 46/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 60.8239, -70.5681, 24.7578, 0.44 ) }
    dend_44 { pt3dadd( 60.9805, -71.8368, 24.6213, 0.44 ) }
    dend_44 { pt3dadd( 61.2266, -73.4855, 24.4484, 0.44 ) }
    dend_44 { pt3dadd( 61.5733, -75.6716, 24.2185, 0.44 ) }
    dend_44 { pt3dadd( 61.8537, -77.3095, 24.0613, 0.44 ) }
    dend_44 { pt3dadd( 61.8835, -77.4848, 24.0458, 0.44 ) }
    dend_44 { pt3dadd( 62.3015, -79.8571, 23.8642, 0.29 ) }
    dend_44 { pt3dadd( 62.419, -80.5117, 23.8232, 0.29 ) }
    dend_44 { pt3dadd( 62.4359, -80.5982, 23.8201, 0.29 ) }
    dend_44 { pt3dadd( 62.6515, -81.7208, 23.7832, 0.29 ) }
    dend_44 { pt3dadd( 62.8579, -83.0056, 23.7361, 0.44 ) }
    dend_44 { pt3dadd( 62.9652, -83.9329, 23.7031, 1.18 ) }
    dend_44 { pt3dadd( 63.0447, -85.2369, 23.659, 1.33 ) }
    dend_44 { pt3dadd( 63.0684, -86.0281, 23.6162, 0.37 ) }
    dend_44 { pt3dadd( 63.0761, -87.3367, 23.5259, 0.37 ) }
    dend_44 { pt3dadd( 63.075, -87.4259, 23.5189, 0.37 ) }
    dend_44 { pt3dadd( 63.0579, -88.8157, 23.4133, 0.37 ) }
    dend_44 { pt3dadd( 63.0541, -89.1043, 23.3924, 0.81 ) }
    dend_44 { pt3dadd( 63.0497, -90.2237, 23.3228, 0.81 ) }
    dend_44 { pt3dadd( 63.0661, -91.235, 23.279, 0.29 ) }
    dend_44 { pt3dadd( 63.131, -92.7272, 23.2658, 0.29 ) }
    dend_44 { pt3dadd( 63.1892, -94.1339, 23.276, 0.29 ) }
    dend_44 { pt3dadd( 63.2005, -94.3966, 23.2827, 0.81 ) }
    dend_44 { pt3dadd( 63.2018, -94.486, 23.2845, 0.81 ) }
    dend_44 { pt3dadd( 63.1918, -95.2679, 23.2909, 0.81 ) }
    dend_44 { pt3dadd( 63.1524, -96.2399, 23.2823, 0.22 ) }
    dend_44 { pt3dadd( 63.0742, -97.4371, 23.251, 0.22 ) }
    dend_44 { pt3dadd( 63.0697, -97.5389, 23.2482, 0.22 ) }
    dend_44 { pt3dadd( 63.0614, -99.7536, 23.121, 0.22 ) }
    dend_44 { pt3dadd( 63.0794, -100.309, 23.0781, 1.03 ) }
    dend_44 { pt3dadd( 63.1282, -101.275, 22.9765, 1.4 ) }
    dend_44 { pt3dadd( 63.152, -101.679, 22.9237, 1.4 ) }
    dend_44 { pt3dadd( 63.2472, -103.058, 22.7373, 1.18 ) }
    dend_44 { pt3dadd( 63.3496, -104.269, 22.5366, 0.59 ) }
    dend_44 { pt3dadd( 63.4178, -104.928, 22.4062, 0.37 ) }
    dend_44 { pt3dadd( 63.5267, -106.111, 22.1484, 0.37 ) }
    dend_44 { pt3dadd( 63.6513, -107.719, 21.7717, 0.37 ) }
    dend_44 { pt3dadd( 63.6564, -107.805, 21.7517, 0.37 ) }
    dend_44 { pt3dadd( 63.7049, -108.927, 21.5179, 1.11 ) }
    dend_44 { pt3dadd( 63.7111, -109.027, 21.4989, 1.11 ) }
    dend_44 { pt3dadd( 63.8122, -110.129, 21.296, 1.77 ) }
    dend_44 { pt3dadd( 63.9317, -111.102, 21.1281, 1.92 ) }
    dend_44 { pt3dadd( 64.0986, -112.191, 20.9748, 1.25 ) }
    dend_44 { pt3dadd( 64.2858, -113.341, 20.8328, 0.66 ) }
    dend_44 { pt3dadd( 64.4517, -114.425, 20.7187, 0.52 ) }
    dend_44 { pt3dadd( 64.6567, -115.803, 20.5605, 0.52 ) }
    dend_44 { pt3dadd( 64.6676, -115.891, 20.5491, 0.52 ) }
    dend_44 { pt3dadd( 64.7385, -117.063, 20.4154, 0.52 ) }
    dend_44 { pt3dadd( 64.7238, -118.09, 20.3087, 1.4 ) }
    dend_44 { pt3dadd( 64.6625, -118.845, 20.2419, 1.77 ) }
    dend_44 { pt3dadd( 64.442, -120.324, 20.1442, 0.74 ) }
    dend_44 { pt3dadd( 64.172, -121.6, 20.1141, 0.44 ) }
    dend_44 { pt3dadd( 63.8581, -122.825, 20.1236, 0.37 ) }
    dend_44 { pt3dadd( 63.5621, -123.73, 20.187, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_44 { pt3dadd( 63.5291, -123.825, 20.1997, 0.37 ) }
    dend_44 { pt3dadd( 63.0586, -125.195, 20.4474, 0.74 ) }
    dend_44 { pt3dadd( 62.6077, -126.611, 20.7582, 0.96 ) }
    dend_44 { pt3dadd( 62.5367, -126.873, 20.82, 0.96 ) }
    dend_44 { pt3dadd( 62.3075, -128.14, 21.0825, 0.44 ) }
    dend_44 { pt3dadd( 62.1047, -129.561, 21.4216, 0.44 ) }
    dend_44 { pt3dadd( 62.0955, -129.647, 21.4414, 0.44 ) }
    dend_44 { pt3dadd( 62.0414, -130.618, 21.6445, 0.81 ) }
    dend_44 { pt3dadd( 62.0373, -130.719, 21.6572, 0.81 ) }
    dend_44 { pt3dadd( 61.9955, -131.942, 21.7984, 1.18 ) }
    dend_44 { pt3dadd( 61.9711, -133.323, 21.9333, 0.74 ) }
    dend_44 { pt3dadd( 61.9641, -134.065, 22.019, 0.29 ) }
    dend_44 { pt3dadd( 61.9672, -134.981, 22.1254, 0.22 ) }
    dend_44 { pt3dadd( 61.9459, -136.131, 22.3147, 0.22 ) }
    dend_44 { pt3dadd( 61.8993, -137.36, 22.5423, 0.22 ) }
    dend_44 { pt3dadd( 61.8743, -137.754, 22.6207, 0.66 ) }
    dend_44 { pt3dadd( 61.8275, -138.681, 22.7245, 0.74 ) }
    dend_44 { pt3dadd( 61.7601, -139.755, 22.7941, 0.74 ) }
    dend_44 { pt3dadd( 61.6765, -141.235, 22.757, 0.22 ) }
    dend_44 { pt3dadd( 61.6066, -142.427, 22.6191, 0.22 ) }
    dend_44 { pt3dadd( 61.5836, -142.708, 22.5579, 0.22 ) }
    dend_44 { pt3dadd( 61.3669, -144.92, 21.9151, 0.22 ) }
    dend_44 { pt3dadd( 61.2792, -145.696, 21.6097, 0.88 ) }
    dend_44 { pt3dadd( 61.1505, -146.857, 21.0607, 0.88 ) }
    dend_44 { pt3dadd( 61.1085, -147.346, 20.7945, 0.59 ) }
    dend_44 { pt3dadd( 61.1029, -147.411, 20.757, 0.59 ) }
    dend_44 { pt3dadd( 61.0518, -147.899, 20.4881, 0.22 ) }
    dend_44 { pt3dadd( 60.9385, -148.794, 20.0629, 0.22 ) }
    dend_44 { pt3dadd( 60.8478, -149.489, 19.7694, 0.22 ) }
    dend_44 { pt3dadd( 60.8368, -149.572, 19.7384, 0.22 ) }
    dend_44 { pt3dadd( 60.6531, -151.397, 19.0175, 0.22 ) }
    dend_44 { pt3dadd( 60.5842, -152.408, 18.601, 0.96 ) }
    dend_44 { pt3dadd( 60.5076, -153.537, 18.1766, 1.33 ) }
    dend_44 { pt3dadd( 60.4386, -154.515, 17.8463, 1.33 ) }
    dend_44 { pt3dadd( 60.4331, -154.587, 17.8237, 1.33 ) }
    dend_44 { pt3dadd( 60.3065, -156.033, 17.4254, 0.37 ) }
    dend_44 { pt3dadd( 60.2261, -156.858, 17.2495, 0.22 ) }
    dend_44 { pt3dadd( 60.0595, -158.828, 16.8188, 0.22 ) }
    dend_44 { pt3dadd( 60.0036, -159.372, 16.6996, 0.66 ) }
    dend_44 { pt3dadd( 59.9095, -160.179, 16.5294, 0.81 ) }
    dend_44 { pt3dadd( 59.874, -160.452, 16.4745, 0.81 ) }
    dend_44 { pt3dadd( 59.7424, -161.363, 16.3143, 0.81 ) }
    dend_44 { pt3dadd( 59.6015, -162.379, 16.1138, 0.15 ) }
    dend_44 { pt3dadd( 59.3297, -164.74, 15.5488, 0.15 ) }
    dend_44 { pt3dadd( 59.3186, -164.827, 15.5321, 0.15 ) }
    dend_44 { pt3dadd( 59.2401, -165.263, 15.4974, 1.11 ) }
    dend_44 { pt3dadd( 59.0529, -166.005, 15.5422, 1.33 ) }
    dend_44 { pt3dadd( 58.8249, -166.714, 15.6736, 0.44 ) }
    dend_44 { pt3dadd( 58.5736, -167.405, 15.8818, 0.44 ) }
    dend_44 { pt3dadd( 58.1169, -168.627, 16.3775, 0.44 ) }
    dend_44 { pt3dadd( 57.4048, -170.69, 17.2143, 0.22 ) }
    dend_44 { pt3dadd( 57.006, -171.896, 17.7346, 0.74 ) }
    dend_44 { pt3dadd( 56.9834, -171.974, 17.7688, 0.74 ) }
    dend_44 { pt3dadd( 56.7782, -172.829, 18.1343, 0.74 ) }
    dend_44 { pt3dadd( 56.5437, -174.055, 18.6241, 0.22 ) }
    dend_44 { pt3dadd( 56.3799, -175.472, 19.0803, 0.22 ) }
    dend_44 { pt3dadd( 56.3488, -176.432, 19.3276, 0.74 ) }
    dend_44 { pt3dadd( 56.3672, -177.443, 19.5359, 1.03 ) }
    dend_44 { pt3dadd( 56.3954, -178.12, 19.6706, 0.81 ) }
    dend_44 { pt3dadd( 56.4086, -178.283, 19.7009, 0.22 ) }
    dend_44 { pt3dadd( 56.5445, -179.355, 19.9052, 0.22 ) }
    dend_44 { pt3dadd( 56.5598, -179.44, 19.9247, 0.22 ) }
    dend_44 { pt3dadd( 56.7291, -180.233, 20.1054, 0.22 ) }
    dend_44 { pt3dadd( 56.7957, -180.537, 20.182, 0.66 ) }
    dend_44 { pt3dadd( 56.988, -181.36, 20.4113, 0.66 ) }
    dend_44 { pt3dadd( 57.241, -182.423, 20.7171, 0.15 ) }
    dend_44 { pt3dadd( 57.4935, -183.464, 21.031, 0.15 ) }
    dend_44 { pt3dadd( 57.7164, -184.444, 21.3003, 0.15 ) }
    dend_44 { pt3dadd( 57.7378, -184.54, 21.3245, 0.15 ) }
    dend_44 { pt3dadd( 57.823, -184.946, 21.4074, 1.11 ) }
    dend_44 { pt3dadd( 57.9912, -185.876, 21.5438, 1.4 ) }
    dend_44 { pt3dadd( 58.0076, -185.976, 21.5535, 1.4 ) }
    dend_44 { pt3dadd( 58.1191, -186.993, 21.6343, 0.81 ) }
    dend_44 { pt3dadd( 58.1746, -187.644, 21.6843, 0.22 ) }
    dend_44 { pt3dadd( 58.2608, -188.599, 21.7601, 0.22 ) }
    dend_44 { pt3dadd( 58.3392, -190.315, 21.9574, 0.22 ) }
    dend_44 { pt3dadd( 58.3397, -190.431, 21.9743, 0.22 ) }
    dend_44 { pt3dadd( 58.3235, -191.267, 22.1172, 0.22 ) }
    dend_44 { pt3dadd( 58.3206, -191.341, 22.1321, 0.22 ) }
    dend_44 { pt3dadd( 58.2114, -193.309, 22.5998, 0.22 ) }
    dend_44 { pt3dadd( 58.1081, -194.873, 23.0332, 0.22 ) }
    dend_44 { pt3dadd( 58.0778, -195.261, 23.1522, 0.88 ) }
    dend_44 { pt3dadd( 58.0724, -195.345, 23.1786, 0.88 ) }
    dend_44 { pt3dadd( 58.0405, -195.891, 23.3605, 0.88 ) }
    dend_44 { pt3dadd( 57.9783, -196.881, 23.6603, 0.44 ) }
    dend_44 { pt3dadd( 57.9721, -196.98, 23.6846, 0.44 ) }
    dend_44 { pt3dadd( 57.9769, -198.236, 23.8956, 0.22 ) }
    dend_44 { pt3dadd( 57.9852, -198.694, 23.9606, 1.33 ) }
    dend_44 { pt3dadd( 57.9851, -198.784, 23.9672, 1.33 ) }
    dend_44 { pt3dadd( 57.9796, -199.895, 24.0188, 1.47 ) }
    dend_44 { pt3dadd( 57.9755, -201.043, 24.0245, 0.22 ) }
    dend_44 { pt3dadd( 57.9766, -201.719, 24.0191, 0.22 ) }
    dend_44 { pt3dadd( 57.9769, -201.795, 24.0161, 0.22 ) }
    dend_44 { pt3dadd( 57.9393, -204.391, 23.8859, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 94/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -3.97648, -63.5982, -9.8771, 0.29 ) }
    dend_40 { pt3dadd( -4.39057, -65.0233, -9.95534, 0.29 ) }
    dend_40 { pt3dadd( -4.86389, -66.6891, -10.091, 0.29 ) }
    dend_40 { pt3dadd( -5.25382, -67.9756, -10.1892, 0.29 ) }
    dend_40 { pt3dadd( -5.27484, -68.0453, -10.1937, 0.29 ) }
    dend_40 { pt3dadd( -5.57281, -69.0266, -10.2463, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_40 { pt3dadd( -6.00256, -70.3907, -10.3291, 0.29 ) }
    dend_40 { pt3dadd( -6.28998, -71.2838, -10.3467, 1.18 ) }
    dend_40 { pt3dadd( -6.71387, -72.3824, -10.3715, 1.55 ) }
    dend_40 { pt3dadd( -7.17971, -73.4911, -10.3892, 0.81 ) }
    dend_40 { pt3dadd( -7.50482, -74.2016, -10.3913, 0.59 ) }
    dend_40 { pt3dadd( -7.76181, -74.7303, -10.3871, 0.44 ) }
    dend_40 { pt3dadd( -7.98039, -75.1635, -10.3752, 0.29 ) }
    dend_40 { pt3dadd( -8.86098, -76.8743, -10.2684, 0.29 ) }
    dend_40 { pt3dadd( -9.08103, -77.2915, -10.2423, 0.29 ) }
    dend_40 { pt3dadd( -9.21515, -77.5302, -10.2241, 0.66 ) }
    dend_40 { pt3dadd( -9.48984, -78.0341, -10.1764, 0.66 ) }
    dend_40 { pt3dadd( -10.0564, -79.1972, -10.0256, 0.22 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -3.97648, -63.5982, -9.8771, 1.47 ) }
    dend_39 { pt3dadd( -3.59894, -64.1535, -10.5874, 1.47 ) }
    dend_39 { pt3dadd( -3.04038, -65.0096, -11.727, 1.77 ) }
    dend_39 { pt3dadd( -2.34681, -66.1127, -13.4381, 1.77 ) }
    dend_39 { pt3dadd( -1.33474, -67.756, -15.9254, 0.37 ) }
    dend_39 { pt3dadd( -1.2997, -67.8123, -16.0067, 0.37 ) }
    dend_39 { pt3dadd( -0.403188, -69.2816, -17.9528, 0.66 ) }
    dend_39 { pt3dadd( -0.061871, -69.8721, -18.6831, 0.96 ) }
    dend_39 { pt3dadd( 1.30806, -72.3277, -21.3911, 0.44 ) }
    dend_39 { pt3dadd( 1.84483, -73.2744, -22.276, 1.33 ) }
    dend_39 { pt3dadd( 2.26576, -74.0294, -22.8199, 1.92 ) }
    dend_39 { pt3dadd( 2.80882, -75.1151, -23.4783, 2.21 ) }
    dend_39 { pt3dadd( 3.47941, -76.6434, -24.1856, 1.47 ) }
    dend_39 { pt3dadd( 4.05596, -78.1416, -24.7642, 0.52 ) }
    dend_39 { pt3dadd( 4.26676, -78.7852, -24.9363, 0.52 ) }
    dend_39 { pt3dadd( 4.77469, -80.4935, -25.398, 0.52 ) }
    dend_39 { pt3dadd( 5.12036, -81.7014, -25.7142, 0.52 ) }
    dend_39 { pt3dadd( 5.46532, -82.8578, -25.9925, 0.44 ) }
    dend_39 { pt3dadd( 5.91413, -84.1712, -26.2646, 0.88 ) }
    dend_39 { pt3dadd( 6.36545, -85.2682, -26.4797, 1.4 ) }
    dend_39 { pt3dadd( 6.90953, -86.3961, -26.6859, 1.4 ) }
    dend_39 { pt3dadd( 7.75492, -87.9122, -26.9261, 0.88 ) }
    dend_39 { pt3dadd( 8.54152, -89.1992, -27.142, 0.59 ) }
    dend_39 { pt3dadd( 9.50759, -90.7211, -27.3996, 0.59 ) }
    dend_39 { pt3dadd( 10.4097, -92.1823, -27.6518, 0.59 ) }
    dend_39 { pt3dadd( 10.8618, -92.9837, -27.7826, 0.74 ) }
    dend_39 { pt3dadd( 11.3183, -93.9935, -27.9801, 0.74 ) }
    dend_39 { pt3dadd( 11.6076, -94.9182, -28.1865, 0.52 ) }
    dend_39 { pt3dadd( 11.6274, -95.022, -28.2102, 0.52 ) }
    dend_39 { pt3dadd( 11.7526, -96.3549, -28.4883, 0.52 ) }
    dend_39 { pt3dadd( 11.805, -98.1245, -28.7905, 0.52 ) }
    dend_39 { pt3dadd( 11.7865, -100.136, -29.1497, 0.52 ) }
    dend_39 { pt3dadd( 11.7416, -101.718, -29.4417, 1.33 ) }
    dend_39 { pt3dadd( 11.7084, -102.811, -29.639, 1.84 ) }
    dend_39 { pt3dadd( 11.6695, -104.422, -29.9078, 2.43 ) }
    dend_39 { pt3dadd( 11.6263, -106.62, -30.2698, 1.92 ) }
    dend_39 { pt3dadd( 11.5813, -108.513, -30.5421, 1.18 ) }
    dend_39 { pt3dadd( 11.5763, -108.619, -30.5558, 1.18 ) }
    dend_39 { pt3dadd( 11.4552, -110.201, -30.7873, 0.66 ) }
    dend_39 { pt3dadd( 11.2354, -112.203, -31.1308, 0.52 ) }
    dend_39 { pt3dadd( 11.0665, -113.344, -31.352, 0.52 ) }
    dend_39 { pt3dadd( 10.7509, -115.203, -31.7365, 0.52 ) }
    dend_39 { pt3dadd( 10.4109, -117.09, -32.178, 0.52 ) }
    dend_39 { pt3dadd( 10.3869, -117.215, -32.2112, 0.52 ) }
    dend_39 { pt3dadd( 10.0562, -118.877, -32.7146, 0.52 ) }
    dend_39 { pt3dadd( 9.79966, -120.236, -33.1367, 1.11 ) }
    dend_39 { pt3dadd( 9.77679, -120.378, -33.1854, 1.11 ) }
    dend_39 { pt3dadd( 9.51423, -122.567, -33.9758, 1.84 ) }
    dend_39 { pt3dadd( 9.50328, -122.683, -34.015, 1.84 ) }
    dend_39 { pt3dadd( 9.38593, -123.998, -34.4422, 2.28 ) }
    dend_39 { pt3dadd( 9.29927, -125.49, -34.8918, 2.28 ) }
    dend_39 { pt3dadd( 9.18177, -128.434, -35.8508, 0.44 ) }
    dend_39 { pt3dadd( 9.10319, -129.643, -36.2318, 0.44 ) }
    dend_39 { pt3dadd( 8.97936, -130.821, -36.6269, 0.44 ) }
    dend_39 { pt3dadd( 8.96048, -130.975, -36.684, 0.44 ) }
    dend_39 { pt3dadd( 8.70954, -132.713, -37.4016, 0.44 ) }
    dend_39 { pt3dadd( 8.44998, -134.597, -38.195, 0.44 ) }
    dend_39 { pt3dadd( 8.16652, -136.628, -39.0082, 0.44 ) }
    dend_39 { pt3dadd( 7.85699, -138.369, -39.7027, 0.44 ) }
    dend_39 { pt3dadd( 7.78051, -138.736, -39.8433, 0.29 ) }
    dend_39 { pt3dadd( 7.72261, -138.964, -39.917, 0.29 ) }
    dend_39 { pt3dadd( 7.16075, -140.712, -40.3265, 0.29 ) }
    dend_39 { pt3dadd( 7.12351, -140.829, -40.3394, 0.29 ) }
    dend_39 { pt3dadd( 6.64146, -142.365, -40.4706, 0.29 ) }
    dend_39 { pt3dadd( 6.44619, -142.975, -40.4929, 1.03 ) }
    dend_39 { pt3dadd( 6.00668, -144.246, -40.5518, 1.4 ) }
    dend_39 { pt3dadd( 5.66964, -145.209, -40.6502, 1.4 ) }
    dend_39 { pt3dadd( 5.6333, -145.326, -40.6668, 1.4 ) }
    dend_39 { pt3dadd( 5.21839, -146.956, -40.9359, 0.44 ) }
    dend_39 { pt3dadd( 4.94151, -148.376, -41.2241, 0.44 ) }
    dend_39 { pt3dadd( 4.92056, -148.495, -41.2487, 0.44 ) }
    dend_39 { pt3dadd( 4.6366, -150.294, -41.6101, 0.44 ) }
    dend_39 { pt3dadd( 4.28794, -152.498, -42.0301, 0.44 ) }
    dend_39 { pt3dadd( 4.27085, -152.604, -42.0452, 0.44 ) }
    dend_39 { pt3dadd( 4.03346, -154.077, -42.1852, 1.62 ) }
    dend_39 { pt3dadd( 3.79107, -155.792, -42.2761, 2.14 ) }
    dend_39 { pt3dadd( 3.61273, -157.455, -42.284, 2.14 ) }
    dend_39 { pt3dadd( 3.60224, -157.578, -42.2816, 2.14 ) }
    dend_39 { pt3dadd( 3.50321, -159.086, -42.2657, 1.4 ) }
    dend_39 { pt3dadd( 3.49521, -159.321, -42.265, 0.22 ) }
    dend_39 { pt3dadd( 3.51817, -161.569, -42.1749, 0.22 ) }
    dend_39 { pt3dadd( 3.62282, -163.869, -41.9956, 0.22 ) }
    dend_39 { pt3dadd( 3.69879, -165.038, -41.8734, 0.96 ) }
    dend_39 { pt3dadd( 3.77245, -166.37, -41.758, 1.4 ) }
    dend_39 { pt3dadd( 3.82211, -167.332, -41.6898, 1.4 ) }
    dend_39 { pt3dadd( 3.90534, -169.099, -41.5532, 0.74 ) }
    dend_39 { pt3dadd( 3.94808, -170.416, -41.4296, 0.29 ) }
    dend_39 { pt3dadd( 4.0208, -172.594, -41.2053, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_39 { pt3dadd( 4.12762, -174.927, -40.9733, 0.29 ) }
    dend_39 { pt3dadd( 4.1313, -175.035, -40.9713, 0.29 ) }
    dend_39 { pt3dadd( 4.14987, -176.1, -41.0425, 1.33 ) }
    dend_39 { pt3dadd( 4.15033, -176.207, -41.0606, 1.33 ) }
    dend_39 { pt3dadd( 4.1518, -177.485, -41.3328, 1.92 ) }
    dend_39 { pt3dadd( 4.1315, -178.831, -41.6878, 1.92 ) }
    dend_39 { pt3dadd( 4.06646, -180.458, -42.1082, 1.62 ) }
    dend_39 { pt3dadd( 4.05825, -180.562, -42.1385, 1.62 ) }
    dend_39 { pt3dadd( 3.9303, -181.728, -42.5015, 0.29 ) }
    dend_39 { pt3dadd( 3.7383, -183.248, -42.983, 0.29 ) }
    dend_39 { pt3dadd( 3.48449, -184.774, -43.4485, 1.47 ) }
    dend_39 { pt3dadd( 3.11814, -186.56, -44.0009, 1.47 ) }
    dend_39 { pt3dadd( 2.78851, -188.002, -44.3993, 0.66 ) }
    dend_39 { pt3dadd( 2.58254, -188.843, -44.6166, 0.37 ) }
    dend_39 { pt3dadd( 2.55881, -188.93, -44.6361, 0.37 ) }
    dend_39 { pt3dadd( 2.04464, -190.674, -44.9348, 0.29 ) }
    dend_39 { pt3dadd( 1.34968, -192.971, -45.1845, 0.22 ) }
    dend_39 { pt3dadd( 0.84735, -194.598, -45.3162, 0.22 ) }
    dend_39 { pt3dadd( 0.309085, -196.302, -45.3881, 0.22 ) }
    dend_39 { pt3dadd( -0.395149, -198.537, -45.4504, 0.22 ) }
    dend_39 { pt3dadd( -0.649059, -199.342, -45.4564, 0.88 ) }
    dend_39 { pt3dadd( -0.925097, -200.341, -45.4229, 1.25 ) }
    dend_39 { pt3dadd( -0.949482, -200.446, -45.4137, 1.25 ) }
    dend_39 { pt3dadd( -1.10694, -201.282, -45.3491, 0.29 ) }
    dend_39 { pt3dadd( -1.15046, -201.607, -45.3292, 0.29 ) }
    dend_39 { pt3dadd( -1.183, -202.101, -45.3027, 0.22 ) }
    dend_39 { pt3dadd( -1.03907, -205.602, -45.1796, 0.22 ) }
    dend_39 { pt3dadd( -0.979061, -206.084, -45.1637, 0.59 ) }
    dend_39 { pt3dadd( -0.716667, -207.185, -45.1395, 0.88 ) }
    dend_39 { pt3dadd( -0.370073, -208.189, -45.1273, 0.88 ) }
    dend_39 { pt3dadd( -0.141894, -208.765, -45.1215, 0.22 ) }
    dend_39 { pt3dadd( 0.857645, -210.733, -45.115, 0.22 ) }
    dend_39 { pt3dadd( 0.922757, -210.818, -45.1157, 0.22 ) }
    dend_39 { pt3dadd( 2.41388, -212.532, -45.1562, 0.22 ) }
    dend_39 { pt3dadd( 2.529, -212.642, -45.1623, 0.96 ) }
    // Section: dend_29, id: dend_29, parent: dend_17 (entry count 35/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -18.4693, 72.7659, -17.9461, 0.22 ) }
    dend_29 { pt3dadd( -19.9446, 72.643, -14.9576, 0.22 ) }
    dend_29 { pt3dadd( -20.0693, 72.6518, -14.7448, 0.22 ) }
    dend_29 { pt3dadd( -20.1317, 72.6989, -14.6982, 0.22 ) }
    dend_29 { pt3dadd( -20.4042, 72.9995, -14.6087, 0.37 ) }
    dend_29 { pt3dadd( -20.9016, 73.674, -14.5289, 0.37 ) }
    dend_29 { pt3dadd( -20.9622, 73.772, -14.5228, 0.37 ) }
    dend_29 { pt3dadd( -21.3177, 74.5194, -14.5784, 0.37 ) }
    dend_29 { pt3dadd( -21.9262, 76.1043, -14.7156, 0.29 ) }
    dend_29 { pt3dadd( -21.9519, 76.1811, -14.723, 0.29 ) }
    dend_29 { pt3dadd( -22.1467, 76.9478, -14.8786, 0.74 ) }
    dend_29 { pt3dadd( -22.2667, 77.6482, -15.1415, 0.74 ) }
    dend_29 { pt3dadd( -22.3501, 78.2992, -15.4525, 0.37 ) }
    dend_29 { pt3dadd( -22.4499, 79.2305, -15.9545, 0.22 ) }
    dend_29 { pt3dadd( -22.5512, 80.1389, -16.5061, 0.22 ) }
    dend_29 { pt3dadd( -22.7986, 81.8894, -17.5867, 0.22 ) }
    dend_29 { pt3dadd( -23.0794, 83.4254, -18.5718, 0.96 ) }
    dend_29 { pt3dadd( -23.2464, 84.1638, -19.0543, 1.62 ) }
    dend_29 { pt3dadd( -23.4869, 85.0976, -19.6533, 1.62 ) }
    dend_29 { pt3dadd( -23.8111, 86.1774, -20.2791, 0.66 ) }
    dend_29 { pt3dadd( -24.0071, 86.8082, -20.5828, 0.52 ) }
    dend_29 { pt3dadd( -24.2072, 87.3957, -20.7511, 0.52 ) }
    dend_29 { pt3dadd( -24.2838, 87.6337, -20.8034, 0.52 ) }
    dend_29 { pt3dadd( -24.4041, 88.1303, -20.9752, 0.52 ) }
    dend_29 { pt3dadd( -24.4153, 88.204, -21.0084, 0.52 ) }
    dend_29 { pt3dadd( -24.5706, 89.5457, -21.6902, 0.52 ) }
    dend_29 { pt3dadd( -24.6665, 90.3649, -22.1169, 0.74 ) }
    dend_29 { pt3dadd( -24.784, 91.4267, -22.6321, 0.74 ) }
    dend_29 { pt3dadd( -24.9222, 92.9819, -23.481, 0.37 ) }
    dend_29 { pt3dadd( -24.9278, 93.0408, -23.5163, 0.37 ) }
    dend_29 { pt3dadd( -25.0774, 93.9382, -24.0793, 0.37 ) }
    dend_29 { pt3dadd( -25.2557, 94.6561, -24.5617, 0.66 ) }
    dend_29 { pt3dadd( -25.5315, 95.467, -25.1137, 0.66 ) }
    dend_29 { pt3dadd( -26.1614, 96.9007, -25.9491, 0.29 ) }
    dend_29 { pt3dadd( -26.2908, 97.1426, -26.0728, 0.29 ) }
    dend_29 { pt3dadd( -26.938, 98.2955, -26.7105, 0.29 ) }
    dend_29 { pt3dadd( -27.0229, 98.4397, -26.7987, 0.29 ) }
    dend_29 { pt3dadd( -27.643, 99.4245, -27.416, 0.59 ) }
    dend_29 { pt3dadd( -28.1618, 100.168, -27.8503, 0.81 ) }
    dend_29 { pt3dadd( -28.6679, 100.901, -28.1673, 0.81 ) }
    dend_29 { pt3dadd( -28.9838, 101.493, -28.4377, 0.22 ) }
    dend_29 { pt3dadd( -29.0109, 101.565, -28.4653, 0.22 ) }
    dend_29 { pt3dadd( -29.2197, 102.24, -28.7151, 0.22 ) }
    dend_29 { pt3dadd( -29.2437, 102.324, -28.7467, 0.22 ) }
    dend_29 { pt3dadd( -29.5345, 103.352, -29.146, 0.22 ) }
    dend_29 { pt3dadd( -30.0616, 105.143, -29.8683, 0.22 ) }
    dend_29 { pt3dadd( -30.8522, 107.585, -30.8434, 0.22 ) }
    dend_29 { pt3dadd( -31.3661, 109.097, -31.4522, 0.88 ) }
    dend_29 { pt3dadd( -31.8015, 110.302, -31.936, 1.69 ) }
    dend_29 { pt3dadd( -32.1751, 111.254, -32.3076, 2.14 ) }
    dend_29 { pt3dadd( -32.5442, 112.106, -32.6289, 0.29 ) }
    dend_29 { pt3dadd( -33.0909, 113.133, -32.9641, 0.29 ) }
    dend_29 { pt3dadd( -33.1322, 113.198, -32.9868, 0.29 ) }
    dend_29 { pt3dadd( -33.6557, 113.956, -33.2055, 0.29 ) }
    dend_29 { pt3dadd( -34.0552, 114.536, -33.3519, 0.29 ) }
    dend_29 { pt3dadd( -34.1229, 114.635, -33.3759, 0.29 ) }
    dend_29 { pt3dadd( -34.8339, 115.705, -33.6745, 0.29 ) }
    dend_29 { pt3dadd( -35.3955, 116.591, -33.9615, 0.29 ) }
    dend_29 { pt3dadd( -35.8261, 117.3, -34.2125, 0.74 ) }
    dend_29 { pt3dadd( -36.1432, 117.857, -34.4231, 1.03 ) }
    dend_29 { pt3dadd( -36.5793, 118.678, -34.7423, 1.03 ) }
    dend_29 { pt3dadd( -37.0354, 119.558, -35.0798, 1.03 ) }
    dend_29 { pt3dadd( -37.1913, 119.873, -35.2083, 0.22 ) }
    dend_29 { pt3dadd( -37.2231, 119.93, -35.2314, 0.22 ) }
    dend_29 { pt3dadd( -37.4663, 120.341, -35.3923, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_29 { pt3dadd( -37.5794, 120.535, -35.4638, 0.22 ) }
    dend_29 { pt3dadd( -38.1073, 121.44, -35.7701, 0.22 ) }
    dend_29 { pt3dadd( -38.7437, 122.531, -36.0839, 0.81 ) }
    dend_29 { pt3dadd( -39.1803, 123.299, -36.3034, 0.81 ) }
    dend_29 { pt3dadd( -39.623, 124.149, -36.5163, 0.81 ) }
    dend_29 { pt3dadd( -39.9218, 124.781, -36.651, 0.22 ) }
    dend_29 { pt3dadd( -39.9532, 124.855, -36.6643, 0.22 ) }
    dend_29 { pt3dadd( -40.1918, 125.477, -36.7518, 0.22 ) }
    dend_29 { pt3dadd( -40.2756, 125.708, -36.7744, 0.22 ) }
    dend_29 { pt3dadd( -40.7825, 127.121, -36.9077, 0.22 ) }
    dend_29 { pt3dadd( -41.1964, 128.105, -37.008, 0.22 ) }
    dend_29 { pt3dadd( -41.4219, 128.577, -37.0555, 0.88 ) }
    dend_29 { pt3dadd( -41.7188, 129.117, -37.1189, 0.88 ) }
    dend_29 { pt3dadd( -41.7546, 129.174, -37.1325, 0.88 ) }
    dend_29 { pt3dadd( -42.0609, 129.6, -37.2793, 0.52 ) }
    dend_29 { pt3dadd( -42.6151, 130.265, -37.5899, 0.52 ) }
    dend_29 { pt3dadd( -43.0363, 130.727, -37.8361, 0.88 ) }
    dend_29 { pt3dadd( -43.5392, 131.263, -38.1313, 1.18 ) }
    dend_29 { pt3dadd( -44.6057, 132.443, -38.7445, 0.29 ) }
    dend_29 { pt3dadd( -44.9986, 132.907, -38.9593, 0.29 ) }
    dend_29 { pt3dadd( -45.0736, 133.006, -38.9993, 0.29 ) }
    dend_29 { pt3dadd( -45.575, 133.756, -39.2473, 0.29 ) }
    dend_29 { pt3dadd( -45.6753, 133.92, -39.2878, 0.29 ) }
    dend_29 { pt3dadd( -46.325, 135.132, -39.5427, 0.29 ) }
    dend_29 { pt3dadd( -46.6801, 135.847, -39.6597, 0.52 ) }
    dend_29 { pt3dadd( -46.9302, 136.391, -39.7505, 0.52 ) }
    dend_29 { pt3dadd( -47.2359, 137.103, -39.8642, 0.22 ) }
    dend_29 { pt3dadd( -47.7353, 138.351, -40.0564, 0.22 ) }
    dend_29 { pt3dadd( -48.1974, 139.572, -40.2908, 1.62 ) }
    dend_29 { pt3dadd( -48.5987, 140.699, -40.5436, 1.92 ) }
    dend_29 { pt3dadd( -49.1516, 142.312, -40.9415, 0.22 ) }
    dend_29 { pt3dadd( -49.6013, 143.638, -41.2929, 0.22 ) }
    dend_29 { pt3dadd( -49.6515, 143.789, -41.3304, 0.22 ) }
    dend_29 { pt3dadd( -50.0646, 144.974, -41.584, 0.59 ) }
    dend_29 { pt3dadd( -50.1224, 145.127, -41.6024, 0.59 ) }
    dend_29 { pt3dadd( -50.2638, 145.484, -41.6367, 0.59 ) }
    dend_29 { pt3dadd( -50.4095, 145.807, -41.6554, 0.59 ) }
    dend_29 { pt3dadd( -50.9345, 146.764, -41.679, 0.37 ) }
    dend_29 { pt3dadd( -51.268, 147.409, -41.7239, 0.22 ) }
    dend_29 { pt3dadd( -51.8317, 148.529, -41.8067, 0.22 ) }
    dend_29 { pt3dadd( -52.0737, 149.204, -41.9816, 0.22 ) }
    dend_29 { pt3dadd( -52.1461, 149.487, -42.0863, 0.22 ) }
    dend_29 { pt3dadd( -52.2505, 150.297, -42.5163, 0.22 ) }
    dend_29 { pt3dadd( -52.275, 151.494, -43.3882, 0.22 ) }
    dend_29 { pt3dadd( -52.2728, 151.555, -43.4398, 0.22 ) }
    dend_29 { pt3dadd( -52.1238, 153.468, -45.1941, 1.03 ) }
    dend_29 { pt3dadd( -52.068, 154.252, -45.9289, 1.33 ) }
    dend_29 { pt3dadd( -52.0023, 155.686, -47.3093, 0.37 ) }
    dend_29 { pt3dadd( -51.9721, 156.931, -48.5578, 0.15 ) }
    dend_29 { pt3dadd( -52.0085, 157.365, -49.0281, 0.15 ) }
    dend_29 { pt3dadd( -52.0211, 157.418, -49.0869, 0.15 ) }
    dend_29 { pt3dadd( -52.3735, 158.059, -49.784, 0.15 ) }
    dend_29 { pt3dadd( -52.6699, 158.472, -50.2225, 0.15 ) }
    dend_29 { pt3dadd( -52.7518, 158.566, -50.3018, 0.15 ) }
    dend_29 { pt3dadd( -53.3459, 159.247, -50.8018, 0.15 ) }
    dend_29 { pt3dadd( -53.9431, 160.028, -51.3527, 0.44 ) }
    dend_29 { pt3dadd( -54.348, 160.622, -51.7505, 0.66 ) }
    dend_29 { pt3dadd( -54.7663, 161.553, -52.3997, 0.44 ) }
    dend_29 { pt3dadd( -54.8524, 161.801, -52.5595, 0.15 ) }
    dend_29 { pt3dadd( -54.9163, 162.041, -52.7319, 0.15 ) }
    dend_29 { pt3dadd( -55.0408, 162.63, -53.1763, 0.15 ) }
    dend_29 { pt3dadd( -55.0525, 162.691, -53.2276, 0.15 ) }
    dend_29 { pt3dadd( -55.4875, 164.539, -54.8745, 1.11 ) }
    dend_29 { pt3dadd( -55.7527, 165.353, -55.6077, 1.11 ) }
    dend_29 { pt3dadd( -56.2981, 166.715, -56.825, 0.29 ) }
    dend_29 { pt3dadd( -56.4386, 167.02, -57.076, 0.29 ) }
    dend_29 { pt3dadd( -56.5388, 167.214, -57.2178, 0.29 ) }
    dend_29 { pt3dadd( -56.876, 167.836, -57.5676, 0.29 ) }
    dend_29 { pt3dadd( -57.4488, 168.819, -57.914, 0.29 ) }
    dend_29 { pt3dadd( -57.9402, 169.718, -58.1226, 0.96 ) }
    dend_29 { pt3dadd( -58.4884, 170.745, -58.3074, 0.96 ) }
    dend_29 { pt3dadd( -58.8119, 171.364, -58.4356, 0.59 ) }
    dend_29 { pt3dadd( -59.241, 172.229, -58.7078, 0.59 ) }
    dend_29 { pt3dadd( -59.4223, 172.614, -58.8618, 0.22 ) }
    dend_29 { pt3dadd( -59.8943, 173.544, -59.3147, 0.22 ) }
    dend_29 { pt3dadd( -60.4255, 174.469, -59.873, 0.88 ) }
    dend_29 { pt3dadd( -60.9242, 175.212, -60.4141, 0.88 ) }
    dend_29 { pt3dadd( -61.8756, 176.481, -61.4604, 1.18 ) }
    dend_29 { pt3dadd( -62.2459, 176.938, -61.867, 0.22 ) }
    dend_29 { pt3dadd( -62.8684, 177.7, -62.5358, 0.22 ) }
    dend_29 { pt3dadd( -62.9023, 177.745, -62.5742, 0.22 ) }
    dend_29 { pt3dadd( -63.34, 178.381, -63.0423, 0.22 ) }
    dend_29 { pt3dadd( -63.3919, 178.468, -63.0966, 0.22 ) }
    dend_29 { pt3dadd( -63.6306, 178.891, -63.2999, 0.59 ) }
    dend_29 { pt3dadd( -63.8328, 179.314, -63.5663, 0.59 ) }
    dend_29 { pt3dadd( -64.2541, 180.382, -64.3318, 0.81 ) }
    dend_29 { pt3dadd( -64.3118, 180.515, -64.4251, 0.81 ) }
    dend_29 { pt3dadd( -64.6833, 181.285, -64.966, 0.81 ) }
    dend_29 { pt3dadd( -64.7172, 181.345, -65.0076, 0.81 ) }
    dend_29 { pt3dadd( -65.5438, 182.663, -65.904, 0.81 ) }
    dend_29 { pt3dadd( -65.5837, 182.723, -65.94, 0.81 ) }
    dend_29 { pt3dadd( -66.5553, 184.108, -66.6685, 1.11 ) }
    dend_29 { pt3dadd( -67.4075, 185.304, -67.2353, 1.11 ) }
    dend_29 { pt3dadd( -67.9348, 186.028, -67.5421, 0.74 ) }
    dend_29 { pt3dadd( -68.2082, 186.403, -67.6696, 0.22 ) }
    dend_29 { pt3dadd( -69.037, 187.568, -68.0039, 0.22 ) }
    dend_29 { pt3dadd( -69.1643, 187.767, -68.0716, 0.22 ) }
    dend_29 { pt3dadd( -69.611, 188.563, -68.3691, 0.22 ) }
    dend_29 { pt3dadd( -69.7243, 188.791, -68.4532, 0.59 ) }
    dend_29 { pt3dadd( -70.1083, 189.64, -68.7726, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_29 { pt3dadd( -70.7963, 191.308, -69.4406, 0.44 ) }
    dend_29 { pt3dadd( -71.2935, 192.595, -69.9791, 0.74 ) }
    dend_29 { pt3dadd( -71.6177, 193.484, -70.3487, 1.47 ) }
    dend_29 { pt3dadd( -71.925, 194.363, -70.7032, 1.77 ) }
    dend_29 { pt3dadd( -72.1758, 195.106, -70.9833, 1.77 ) }
    dend_29 { pt3dadd( -72.6, 196.461, -71.4137, 0.37 ) }
    dend_29 { pt3dadd( -72.7141, 196.877, -71.5109, 0.22 ) }
    dend_29 { pt3dadd( -72.7531, 197.032, -71.5423, 0.22 ) }
    dend_29 { pt3dadd( -72.9457, 197.953, -71.7271, 0.22 ) }
    dend_29 { pt3dadd( -72.9937, 198.202, -71.7738, 0.22 ) }
    dend_29 { pt3dadd( -73.2046, 199.453, -71.9614, 0.22 ) }
    dend_29 { pt3dadd( -73.3443, 200.333, -72.0451, 0.59 ) }
    dend_29 { pt3dadd( -73.3571, 200.415, -72.0521, 0.59 ) }
    dend_29 { pt3dadd( -73.5112, 201.317, -72.1245, 0.59 ) }
    dend_29 { pt3dadd( -73.6383, 201.994, -72.174, 0.44 ) }
    dend_29 { pt3dadd( -73.7812, 202.574, -72.1803, 0.74 ) }
    dend_29 { pt3dadd( -73.9988, 203.259, -72.1401, 1.11 ) }
    dend_29 { pt3dadd( -74.1984, 203.788, -72.0717, 0.44 ) }
    dend_29 { pt3dadd( -74.4405, 204.387, -71.9776, 0.44 ) }
    dend_29 { pt3dadd( -74.5475, 204.668, -71.9279, 0.44 ) }
    dend_29 { pt3dadd( -74.948, 205.699, -71.7097, 0.37 ) }
    dend_29 { pt3dadd( -75.0547, 205.968, -71.6474, 0.37 ) }
    dend_29 { pt3dadd( -75.2995, 206.634, -71.4917, 0.37 ) }
    dend_29 { pt3dadd( -75.3849, 206.888, -71.4343, 0.37 ) }
    dend_29 { pt3dadd( -75.9211, 208.481, -71.1348, 0.37 ) }
    dend_29 { pt3dadd( -76.1622, 209.228, -71.0245, 0.66 ) }
    dend_29 { pt3dadd( -76.1866, 209.306, -71.0174, 0.66 ) }
    dend_29 { pt3dadd( -76.4979, 210.291, -70.9359, 1.33 ) }
    dend_29 { pt3dadd( -76.5246, 210.368, -70.9308, 1.33 ) }
    dend_29 { pt3dadd( -76.9847, 211.547, -70.8878, 1.33 ) }
    dend_29 { pt3dadd( -77.0347, 211.66, -70.8891, 1.33 ) }
    dend_29 { pt3dadd( -77.382, 212.471, -70.9053, 0.29 ) }
    dend_29 { pt3dadd( -77.4556, 212.643, -70.9062, 0.29 ) }
    dend_29 { pt3dadd( -77.8086, 213.482, -70.8976, 0.29 ) }
    dend_29 { pt3dadd( -77.8952, 213.705, -70.8918, 0.29 ) }
    dend_29 { pt3dadd( -78.3351, 215.002, -70.8317, 0.29 ) }
    dend_29 { pt3dadd( -78.5185, 215.582, -70.8008, 0.66 ) }
    dend_29 { pt3dadd( -78.5896, 215.83, -70.7849, 0.66 ) }
    dend_29 { pt3dadd( -78.7568, 216.501, -70.7405, 0.81 ) }
    dend_29 { pt3dadd( -78.7941, 216.673, -70.729, 0.81 ) }
    dend_29 { pt3dadd( -78.9132, 217.172, -70.7058, 0.81 ) }
    dend_29 { pt3dadd( -79.0222, 217.589, -70.6971, 0.15 ) }
    dend_29 { pt3dadd( -79.0576, 217.707, -70.6983, 0.15 ) }
    dend_29 { pt3dadd( -79.4285, 218.844, -70.7179, 0.15 ) }
    dend_29 { pt3dadd( -79.461, 218.932, -70.7147, 0.15 ) }
    dend_29 { pt3dadd( -79.8817, 220.014, -70.6227, 0.52 ) }
    dend_29 { pt3dadd( -79.9456, 220.176, -70.6024, 0.52 ) }
    dend_29 { pt3dadd( -80.1261, 220.641, -70.534, 0.81 ) }
    dend_29 { pt3dadd( -80.1517, 220.719, -70.523, 0.81 ) }
    dend_29 { pt3dadd( -80.4447, 221.772, -70.3504, 0.66 ) }
    dend_29 { pt3dadd( -80.5772, 222.342, -70.2538, 0.66 ) }
    dend_29 { pt3dadd( -80.6661, 222.853, -70.1654, 0.22 ) }
    dend_29 { pt3dadd( -80.6838, 223.001, -70.143, 0.22 ) }
    dend_29 { pt3dadd( -80.7732, 224.301, -69.9743, 0.22 ) }
    dend_29 { pt3dadd( -80.798, 224.802, -69.928, 0.44 ) }
    dend_29 { pt3dadd( -80.8018, 224.895, -69.9198, 0.44 ) }
    dend_29 { pt3dadd( -80.8492, 225.406, -69.8614, 0.44 ) }
    dend_29 { pt3dadd( -80.986, 226.495, -69.714, 0.22 ) }
    dend_29 { pt3dadd( -81.0102, 226.656, -69.6889, 0.22 ) }
    dend_29 { pt3dadd( -81.2084, 227.708, -69.5236, 0.22 ) }
    dend_29 { pt3dadd( -81.4214, 228.653, -69.4028, 0.44 ) }
    dend_29 { pt3dadd( -81.6269, 229.475, -69.3119, 0.44 ) }
    dend_29 { pt3dadd( -81.6484, 229.554, -69.3043, 0.44 ) }
    dend_29 { pt3dadd( -81.6814, 229.675, -69.2999, 0.22 ) }
    dend_29 { pt3dadd( -82.0528, 231.222, -69.3233, 0.22 ) }
    dend_29 { pt3dadd( -82.1642, 231.877, -69.3717, 0.22 ) }
    dend_29 { pt3dadd( -82.265, 232.821, -69.491, 0.22 ) }
    dend_29 { pt3dadd( -82.2662, 232.891, -69.4993, 0.22 ) }
    dend_29 { pt3dadd( -82.2528, 233.903, -69.6105, 0.22 ) }
    dend_29 { pt3dadd( -82.2493, 233.985, -69.617, 0.22 ) }
    dend_29 { pt3dadd( -82.1106, 235.254, -69.6747, 0.81 ) }
    dend_29 { pt3dadd( -82.1033, 235.347, -69.6747, 0.81 ) }
    dend_29 { pt3dadd( -82.0726, 236.372, -69.6317, 0.81 ) }
    dend_29 { pt3dadd( -82.0867, 237.054, -69.5765, 0.81 ) }
    dend_29 { pt3dadd( -82.1317, 237.682, -69.4991, 0.29 ) }
    dend_29 { pt3dadd( -82.1392, 237.764, -69.4903, 0.29 ) }
    dend_29 { pt3dadd( -82.2609, 239.144, -69.3663, 0.29 ) }
    dend_29 { pt3dadd( -82.2755, 239.306, -69.3547, 0.29 ) }
    dend_29 { pt3dadd( -82.3496, 240.503, -69.3707, 0.29 ) }
    dend_29 { pt3dadd( -82.3526, 240.62, -69.3785, 0.29 ) }
    dend_29 { pt3dadd( -82.3601, 241.719, -69.4986, 1.4 ) }
    dend_29 { pt3dadd( -82.3509, 243.243, -69.6964, 1.4 ) }
    dend_29 { pt3dadd( -82.3224, 244.388, -69.8681, 0.81 ) }
    dend_29 { pt3dadd( -82.3007, 245.893, -70.1201, 0.44 ) }
    dend_29 { pt3dadd( -82.3097, 246.675, -70.2613, 0.66 ) }
    dend_29 { pt3dadd( -82.3137, 246.854, -70.3021, 0.29 ) }
    dend_29 { pt3dadd( -82.3336, 247.268, -70.4221, 0.29 ) }
    dend_29 { pt3dadd( -82.3868, 247.856, -70.6151, 0.29 ) }
    dend_29 { pt3dadd( -82.3987, 247.965, -70.6494, 0.29 ) }
    dend_29 { pt3dadd( -82.6006, 249.23, -70.9863, 0.29 ) }
    dend_29 { pt3dadd( -82.8337, 250.458, -71.2362, 0.59 ) }
    dend_29 { pt3dadd( -82.8539, 250.548, -71.2493, 0.59 ) }
    dend_29 { pt3dadd( -83.1461, 251.584, -71.3299, 0.59 ) }
    dend_29 { pt3dadd( -83.1708, 251.662, -71.3327, 0.59 ) }
    dend_29 { pt3dadd( -83.8096, 253.451, -71.3372, 0.37 ) }
    dend_29 { pt3dadd( -84.3362, 254.702, -71.2056, 0.22 ) }
    dend_29 { pt3dadd( -84.6887, 255.489, -71.0665, 0.22 ) }
    dend_29 { pt3dadd( -85.6435, 257.562, -70.6518, 0.22 ) }
    dend_29 { pt3dadd( -85.6789, 257.634, -70.6365, 0.22 ) }
    dend_29 { pt3dadd( -86.5113, 259.228, -70.2949, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_29 { pt3dadd( -87.436, 260.859, -69.9419, 0.96 ) }
    dend_29 { pt3dadd( -88.3997, 262.416, -69.6257, 1.25 ) }
    dend_29 { pt3dadd( -88.4516, 262.491, -69.6088, 1.25 ) }
    dend_29 { pt3dadd( -89.1422, 263.371, -69.3979, 1.25 ) }
    dend_29 { pt3dadd( -89.6388, 263.959, -69.281, 0.37 ) }
    dend_29 { pt3dadd( -90.1301, 264.492, -69.2063, 0.37 ) }
    dend_29 { pt3dadd( -91.0974, 265.491, -69.1655, 0.29 ) }
    dend_29 { pt3dadd( -91.8316, 266.195, -69.1339, 0.29 ) }
    dend_29 { pt3dadd( -92.0958, 266.454, -69.1238, 0.88 ) }
    dend_29 { pt3dadd( -93.1552, 267.499, -69.1005, 0.96 ) }
    dend_29 { pt3dadd( -93.585, 267.904, -69.1141, 0.96 ) }
    dend_29 { pt3dadd( -94.0292, 268.301, -69.1273, 0.15 ) }
    dend_29 { pt3dadd( -94.0884, 268.355, -69.13, 0.15 ) }
    dend_29 { pt3dadd( -94.5704, 268.795, -69.1311, 0.15 ) }
    dend_29 { pt3dadd( -95.2126, 269.375, -69.1179, 0.15 ) }
    dend_29 { pt3dadd( -96.3175, 270.372, -69.0728, 0.15 ) }
    dend_29 { pt3dadd( -97.2157, 271.229, -69.0381, 0.15 ) }
    dend_29 { pt3dadd( -97.8226, 271.805, -68.9777, 0.15 ) }
    dend_29 { pt3dadd( -98.0831, 272.047, -68.9432, 0.15 ) }
    dend_29 { pt3dadd( -98.8721, 272.782, -68.8153, 0.15 ) }
    dend_29 { pt3dadd( -99.2888, 273.163, -68.7458, 1.47 ) }
    dend_29 { pt3dadd( -100.154, 273.952, -68.6092, 1.47 ) }
    dend_29 { pt3dadd( -101.313, 274.973, -68.4998, 0.29 ) }
    dend_29 { pt3dadd( -101.864, 275.429, -68.4586, 0.29 ) }
    dend_29 { pt3dadd( -102.093, 275.62, -68.4425, 0.29 ) }
    dend_29 { pt3dadd( -102.837, 276.259, -68.3995, 0.29 ) }
    dend_29 { pt3dadd( -103.036, 276.437, -68.395, 0.29 ) }
    dend_29 { pt3dadd( -103.884, 277.257, -68.4174, 0.29 ) }
    dend_29 { pt3dadd( -104.281, 277.716, -68.4611, 1.03 ) }
    dend_29 { pt3dadd( -104.752, 278.295, -68.5121, 1.4 ) }
    dend_29 { pt3dadd( -105.211, 278.844, -68.5663, 1.4 ) }
    dend_29 { pt3dadd( -105.598, 279.298, -68.6157, 0.29 ) }
    dend_29 { pt3dadd( -105.652, 279.358, -68.623, 0.29 ) }
    dend_29 { pt3dadd( -106.668, 280.536, -68.7763, 0.29 ) }
    dend_29 { pt3dadd( -107.666, 281.741, -68.9387, 0.29 ) }
    dend_29 { pt3dadd( -108.318, 282.57, -69.0536, 0.29 ) }
    dend_29 { pt3dadd( -108.688, 283.053, -69.1189, 0.29 ) }
    dend_29 { pt3dadd( -108.736, 283.117, -69.1264, 0.29 ) }
    dend_29 { pt3dadd( -109.836, 284.583, -69.2763, 0.29 ) }
    dend_29 { pt3dadd( -109.949, 284.739, -69.2885, 0.29 ) }
    dend_29 { pt3dadd( -110.596, 285.713, -69.3325, 0.29 ) }
    dend_29 { pt3dadd( -110.742, 285.938, -69.3392, 0.29 ) }
    dend_29 { pt3dadd( -110.992, 286.306, -69.3495, 0.29 ) }
    dend_29 { pt3dadd( -111.102, 286.464, -69.3531, 0.29 ) }
    dend_29 { pt3dadd( -111.566, 287.078, -69.2906, 0.29 ) }
    dend_29 { pt3dadd( -111.64, 287.185, -69.2794, 0.29 ) }
    dend_29 { pt3dadd( -112.47, 288.412, -69.164, 0.74 ) }
    dend_29 { pt3dadd( -112.518, 288.478, -69.1627, 0.74 ) }
    dend_29 { pt3dadd( -112.896, 288.959, -69.1814, 1.18 ) }
    dend_29 { pt3dadd( -113.828, 290.2, -69.2819, 0.29 ) }
    dend_29 { pt3dadd( -114.416, 291.011, -69.3758, 0.29 ) }
    dend_29 { pt3dadd( -114.824, 291.609, -69.425, 0.29 ) }
    dend_29 { pt3dadd( -115.739, 293.044, -69.4987, 0.29 ) }
    dend_29 { pt3dadd( -115.803, 293.167, -69.4966, 0.29 ) }
    dend_29 { pt3dadd( -116.112, 294.023, -69.414, 0.29 ) }
    dend_29 { pt3dadd( -116.132, 294.136, -69.3699, 0.29 ) }
    dend_29 { pt3dadd( -116.318, 295.542, -68.4773, 0.29 ) }
    dend_29 { pt3dadd( -116.391, 295.989, -68.1941, 0.29 ) }
    dend_29 { pt3dadd( -116.573, 296.808, -67.6652, 0.29 ) }
    dend_29 { pt3dadd( -116.738, 297.316, -67.3515, 0.52 ) }
    dend_29 { pt3dadd( -117.431, 298.808, -66.5715, 0.29 ) }
    dend_29 { pt3dadd( -117.517, 298.967, -66.5054, 0.29 ) }
    dend_29 { pt3dadd( -118.356, 300.398, -66.1026, 0.29 ) }
    dend_29 { pt3dadd( -118.569, 300.769, -66.0173, 0.15 ) }
    dend_29 { pt3dadd( -118.66, 300.926, -65.992, 0.15 ) }
    dend_29 { pt3dadd( -119.322, 302.2, -65.8405, 0.15 ) }
    dend_29 { pt3dadd( -119.348, 302.277, -65.8356, 0.15 ) }
    dend_29 { pt3dadd( -119.576, 303.099, -65.7576, 0.96 ) }
    dend_29 { pt3dadd( -119.722, 303.696, -65.6495, 0.96 ) }
    dend_29 { pt3dadd( -119.75, 303.806, -65.6247, 0.96 ) }
    dend_29 { pt3dadd( -119.957, 304.567, -65.4259, 0.22 ) }
    dend_29 { pt3dadd( -120.831, 307.066, -64.4378, 0.22 ) }
    dend_29 { pt3dadd( -120.862, 307.134, -64.4043, 0.22 ) }
    dend_29 { pt3dadd( -121.342, 308.01, -63.9154, 0.44 ) }
    dend_29 { pt3dadd( -121.65, 308.508, -63.6177, 0.66 ) }
    dend_29 { pt3dadd( -121.691, 308.571, -63.5862, 0.66 ) }
    dend_29 { pt3dadd( -122.742, 310.081, -62.8997, 0.15 ) }
    dend_29 { pt3dadd( -122.831, 310.201, -62.8372, 0.15 ) }
    dend_29 { pt3dadd( -123.609, 311.402, -62.2971, 0.15 ) }
    dend_29 { pt3dadd( -123.666, 311.504, -62.2587, 0.15 ) }
    dend_29 { pt3dadd( -124.642, 313.401, -61.3798, 0.15 ) }
    dend_29 { pt3dadd( -124.77, 313.66, -61.253, 0.74 ) }
    dend_29 { pt3dadd( -125.724, 315.62, -60.3204, 0.15 ) }
    dend_29 { pt3dadd( -126.007, 316.158, -60.0378, 0.52 ) }
    dend_29 { pt3dadd( -126.187, 316.473, -59.8372, 0.52 ) }
    dend_29 { pt3dadd( -127.418, 318.587, -58.3839, 0.15 ) }
    dend_29 { pt3dadd( -127.633, 318.939, -58.1211, 0.37 ) }
    dend_29 { pt3dadd( -128.178, 319.816, -57.5548, 0.15 ) }
    dend_29 { pt3dadd( -128.217, 319.878, -57.5205, 0.15 ) }
    dend_29 { pt3dadd( -129.103, 321.337, -56.8594, 0.37 ) }
    dend_29 { pt3dadd( -129.395, 321.85, -56.7001, 0.66 ) }
    dend_29 { pt3dadd( -129.674, 322.441, -56.6477, 0.15 ) }
    dend_29 { pt3dadd( -130.205, 323.783, -56.5862, 0.15 ) }
    dend_29 { pt3dadd( -130.252, 323.94, -56.5719, 0.15 ) }
    dend_29 { pt3dadd( -130.531, 325.102, -56.4557, 0.88 ) }
    dend_29 { pt3dadd( -130.54, 325.172, -56.4487, 0.88 ) }
    dend_29 { pt3dadd( -130.607, 326.032, -56.2921, 0.88 ) }
    dend_29 { pt3dadd( -130.609, 326.112, -56.2723, 0.88 ) }
    dend_29 { pt3dadd( -130.579, 327.968, -55.6389, 0.22 ) }
    dend_29 { pt3dadd( -130.576, 328.131, -55.5728, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_29 { pt3dadd( -130.539, 330.018, -54.6159, 0.22 ) }
    dend_29 { pt3dadd( -130.533, 330.33, -54.4573, 0.59 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 2/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -18.4693, 72.7659, -17.9461, 1.92 ) }
    dend_18 { pt3dadd( -18.2599, 73.6837, -18.0602, 1.92 ) }
    dend_18 { pt3dadd( -17.9106, 75.2146, -18.2505, 1.77 ) }
    dend_18 { pt3dadd( -17.8905, 75.3025, -18.2614, 1.77 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 6/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -23.5802, 48.4754, -11.6944, 0.74 ) }
    dend_10 { pt3dadd( -23.9327, 48.4562, -12.4697, 0.74 ) }
    dend_10 { pt3dadd( -23.974, 48.458, -12.5516, 0.66 ) }
    dend_10 { pt3dadd( -25.2724, 48.7137, -14.7661, 0.66 ) }
    dend_10 { pt3dadd( -27.3155, 49.4284, -18.4232, 0.66 ) }
    dend_10 { pt3dadd( -27.6122, 49.5574, -18.931, 0.66 ) }
    dend_10 { pt3dadd( -28.392, 49.9328, -20.2254, 0.66 ) }
    dend_10 { pt3dadd( -28.5677, 50.0392, -20.498, 1.03 ) }
    dend_10 { pt3dadd( -29.3719, 50.5989, -21.6477, 1.03 ) }
    dend_10 { pt3dadd( -30.6178, 51.5549, -23.1437, 0.74 ) }
    dend_10 { pt3dadd( -31.3223, 51.9331, -23.6164, 0.44 ) }
    dend_10 { pt3dadd( -31.3991, 51.9564, -23.6632, 0.44 ) }
    dend_10 { pt3dadd( -32.5835, 51.9925, -24.3938, 0.44 ) }
    dend_10 { pt3dadd( -32.6739, 51.9804, -24.4472, 0.44 ) }
    dend_10 { pt3dadd( -33.9042, 51.6685, -25.1143, 0.44 ) }
    dend_10 { pt3dadd( -34.7503, 51.4367, -25.5984, 1.4 ) }
    dend_10 { pt3dadd( -35.7511, 51.1586, -26.296, 1.4 ) }
    dend_10 { pt3dadd( -36.9515, 50.9588, -27.1851, 0.52 ) }
    dend_10 { pt3dadd( -37.1771, 50.9397, -27.3655, 0.52 ) }
    dend_10 { pt3dadd( -38.1251, 50.9988, -28.2052, 0.52 ) }
    dend_10 { pt3dadd( -39.3318, 51.2633, -29.3399, 0.52 ) }
    dend_10 { pt3dadd( -39.5211, 51.3228, -29.524, 0.52 ) }
    dend_10 { pt3dadd( -41.1189, 51.9969, -31.3311, 0.52 ) }
    dend_10 { pt3dadd( -41.1671, 52.0201, -31.3891, 0.52 ) }
    dend_10 { pt3dadd( -42.1828, 52.5379, -32.6607, 0.88 ) }
    dend_10 { pt3dadd( -42.8044, 52.8757, -33.4514, 0.88 ) }
    dend_10 { pt3dadd( -42.87, 52.9121, -33.5265, 0.88 ) }
    dend_10 { pt3dadd( -44.4662, 53.8816, -35.3858, 0.52 ) }
    dend_10 { pt3dadd( -44.5874, 53.9669, -35.5201, 0.52 ) }
    dend_10 { pt3dadd( -45.4861, 54.5353, -36.2656, 0.52 ) }
    dend_10 { pt3dadd( -45.8519, 54.7468, -36.4881, 0.52 ) }
    dend_10 { pt3dadd( -46.8076, 55.2575, -37.0979, 0.52 ) }
    dend_10 { pt3dadd( -47.1548, 55.421, -37.312, 0.52 ) }
    dend_10 { pt3dadd( -48.5706, 55.9036, -38.0949, 0.52 ) }
    dend_10 { pt3dadd( -49.7812, 56.1815, -38.9356, 2.06 ) }
    dend_10 { pt3dadd( -50.0171, 56.2104, -39.1283, 2.06 ) }
    dend_10 { pt3dadd( -52.0417, 56.2393, -40.9348, 0.96 ) }
    dend_10 { pt3dadd( -52.1943, 56.2254, -41.0982, 0.96 ) }
    dend_10 { pt3dadd( -53.2129, 56.0518, -42.2984, 0.96 ) }
    dend_10 { pt3dadd( -54.3419, 55.7769, -43.7496, 0.96 ) }
    dend_10 { pt3dadd( -54.46, 55.7524, -43.9072, 0.96 ) }
    dend_10 { pt3dadd( -55.1263, 55.6334, -44.7414, 0.96 ) }
    dend_10 { pt3dadd( -56.3211, 55.5065, -46.0068, 0.44 ) }
    dend_10 { pt3dadd( -57.1755, 55.5215, -46.8857, 0.44 ) }
    dend_10 { pt3dadd( -57.4573, 55.5892, -47.1468, 0.44 ) }
    dend_10 { pt3dadd( -58.0014, 55.8018, -47.5056, 0.44 ) }
    dend_10 { pt3dadd( -58.2146, 55.9022, -47.6248, 0.44 ) }
    dend_10 { pt3dadd( -59.136, 56.3888, -48.0205, 0.44 ) }
    dend_10 { pt3dadd( -59.3239, 56.4872, -48.0816, 0.44 ) }
    dend_10 { pt3dadd( -60.3113, 57.0525, -48.5732, 1.25 ) }
    dend_10 { pt3dadd( -61.4335, 57.689, -49.2719, 1.62 ) }
    dend_10 { pt3dadd( -61.5023, 57.729, -49.321, 1.62 ) }
    dend_10 { pt3dadd( -62.7136, 58.4684, -50.2922, 1.62 ) }
    dend_10 { pt3dadd( -62.7776, 58.5068, -50.3483, 1.62 ) }
    dend_10 { pt3dadd( -64.5854, 59.6124, -52.0206, 0.37 ) }
    dend_10 { pt3dadd( -64.6439, 59.6451, -52.0854, 0.37 ) }
    dend_10 { pt3dadd( -65.2234, 59.9343, -52.8105, 0.37 ) }
    dend_10 { pt3dadd( -65.2809, 59.951, -52.8814, 0.37 ) }
    dend_10 { pt3dadd( -66.053, 59.9117, -53.9923, 0.37 ) }
    dend_10 { pt3dadd( -66.1649, 59.884, -54.1539, 0.37 ) }
    dend_10 { pt3dadd( -67.3853, 59.4437, -55.763, 0.37 ) }
    dend_10 { pt3dadd( -67.5065, 59.3974, -55.925, 0.37 ) }
    dend_10 { pt3dadd( -68.295, 59.1171, -56.9944, 0.37 ) }
    dend_10 { pt3dadd( -70.0212, 58.7458, -59.4472, 0.37 ) }
    dend_10 { pt3dadd( -70.0745, 58.7438, -59.5218, 0.37 ) }
    dend_10 { pt3dadd( -70.8605, 58.8722, -60.4608, 0.37 ) }
    dend_10 { pt3dadd( -70.9879, 58.9208, -60.6175, 0.37 ) }
    dend_10 { pt3dadd( -71.7137, 59.3083, -61.5229, 0.37 ) }
    dend_10 { pt3dadd( -72.675, 59.9552, -62.6636, 0.66 ) }
    dend_10 { pt3dadd( -73.6142, 60.5655, -63.605, 1.25 ) }
    dend_10 { pt3dadd( -74.5222, 61.1084, -64.4963, 1.25 ) }
    dend_10 { pt3dadd( -76.397, 62.0989, -66.3615, 0.29 ) }
    dend_10 { pt3dadd( -77.1872, 62.4397, -67.1009, 0.29 ) }
    dend_10 { pt3dadd( -77.9846, 62.7133, -67.8508, 0.29 ) }
    dend_10 { pt3dadd( -79.3791, 63.1322, -69.1206, 0.29 ) }
    dend_10 { pt3dadd( -79.4557, 63.1539, -69.1904, 0.29 ) }
    dend_10 { pt3dadd( -80.4082, 63.3994, -70.1105, 0.52 ) }
    dend_10 { pt3dadd( -81.4609, 63.637, -71.1031, 0.81 ) }
    dend_10 { pt3dadd( -82.7855, 63.9386, -72.4907, 0.81 ) }
    dend_10 { pt3dadd( -82.846, 63.9556, -72.559, 0.81 ) }
    dend_10 { pt3dadd( -83.5937, 64.2643, -73.5276, 0.81 ) }
    dend_10 { pt3dadd( -85.0485, 65.0448, -75.4382, 0.52 ) }
    dend_10 { pt3dadd( -85.1074, 65.0853, -75.5171, 0.52 ) }
    dend_10 { pt3dadd( -85.7739, 65.6264, -76.4973, 1.18 ) }
    dend_10 { pt3dadd( -86.1465, 65.9491, -77.0377, 1.18 ) }
    dend_10 { pt3dadd( -87.1084, 66.6891, -78.4215, 0.74 ) }
    dend_10 { pt3dadd( -87.6944, 67.0647, -79.188, 0.59 ) }
    dend_10 { pt3dadd( -87.7635, 67.0963, -79.2619, 0.59 ) }
    dend_10 { pt3dadd( -89.084, 67.522, -80.5641, 0.59 ) }
    dend_10 { pt3dadd( -89.2029, 67.5517, -80.7015, 0.59 ) }
    dend_10 { pt3dadd( -90.1926, 67.7334, -81.8985, 0.59 ) }
    dend_10 { pt3dadd( -91.0235, 67.9037, -82.8663, 0.59 ) }
    dend_10 { pt3dadd( -91.1029, 67.9355, -82.966, 0.59 ) }
    dend_10 { pt3dadd( -91.5214, 68.2229, -83.5103, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_10 { pt3dadd( -92.7444, 69.7086, -85.1626, 0.59 ) }
    dend_10 { pt3dadd( -92.8023, 69.7971, -85.2441, 0.59 ) }
    dend_10 { pt3dadd( -93.1778, 70.5461, -85.8289, 0.59 ) }
    dend_10 { pt3dadd( -93.6302, 71.3562, -86.4648, 0.37 ) }
    dend_10 { pt3dadd( -93.6807, 71.4189, -86.5143, 0.37 ) }
    dend_10 { pt3dadd( -94.1216, 71.7896, -86.7962, 0.29 ) }
    dend_10 { pt3dadd( -94.963, 72.1772, -87.1039, 0.29 ) }
    dend_10 { pt3dadd( -95.0818, 72.2122, -87.1487, 0.29 ) }
    dend_10 { pt3dadd( -96.1091, 72.3799, -87.708, 0.52 ) }
    dend_10 { pt3dadd( -96.5903, 72.429, -88.029, 0.52 ) }
    dend_10 { pt3dadd( -96.6564, 72.4417, -88.0928, 0.52 ) }
    dend_10 { pt3dadd( -97.4116, 72.653, -88.9525, 0.52 ) }
    dend_10 { pt3dadd( -97.5465, 72.7032, -89.1084, 0.52 ) }
    dend_10 { pt3dadd( -98.9076, 73.2726, -90.5781, 0.52 ) }
    dend_10 { pt3dadd( -98.9633, 73.3011, -90.6457, 0.52 ) }
    dend_10 { pt3dadd( -100.325, 74.0248, -92.3412, 0.52 ) }
    dend_10 { pt3dadd( -101.326, 74.5654, -93.5918, 0.81 ) }
    dend_10 { pt3dadd( -102.34, 75.1095, -94.8191, 1.4 ) }
    dend_10 { pt3dadd( -103.164, 75.5271, -95.7384, 1.4 ) }
    dend_10 { pt3dadd( -105.073, 76.3633, -97.5472, 1.18 ) }
    dend_10 { pt3dadd( -105.446, 76.5074, -97.8704, 0.37 ) }
    dend_10 { pt3dadd( -105.59, 76.5611, -97.9964, 0.37 ) }
    dend_10 { pt3dadd( -106.303, 76.8716, -98.7399, 0.37 ) }
    dend_10 { pt3dadd( -106.539, 77.002, -99.0127, 0.37 ) }
    dend_10 { pt3dadd( -107.429, 77.6339, -99.9903, 0.37 ) }
    dend_10 { pt3dadd( -107.507, 77.6974, -100.06, 0.37 ) }
    dend_10 { pt3dadd( -108.88, 78.9668, -101.321, 0.37 ) }
    dend_10 { pt3dadd( -109.041, 79.1277, -101.472, 0.37 ) }
    dend_10 { pt3dadd( -109.699, 79.7838, -102.093, 0.44 ) }
    dend_10 { pt3dadd( -110.294, 80.3261, -102.753, 0.44 ) }
    dend_10 { pt3dadd( -110.353, 80.3752, -102.827, 0.44 ) }
    dend_10 { pt3dadd( -110.831, 80.6792, -103.361, 0.37 ) }
    dend_10 { pt3dadd( -110.976, 80.7561, -103.49, 0.37 ) }
    dend_10 { pt3dadd( -111.708, 81.1225, -104.123, 0.37 ) }
    dend_10 { pt3dadd( -113.284, 81.7863, -105.644, 0.37 ) }
    dend_10 { pt3dadd( -113.375, 81.8167, -105.733, 0.37 ) }
    dend_10 { pt3dadd( -114.073, 81.9975, -106.37, 0.74 ) }
    dend_10 { pt3dadd( -115.252, 82.2728, -107.457, 0.96 ) }
    dend_10 { pt3dadd( -116.044, 82.4415, -108.165, 0.37 ) }
    dend_10 { pt3dadd( -117.376, 82.7224, -109.274, 0.37 ) }
    dend_10 { pt3dadd( -118.267, 82.8763, -109.928, 0.29 ) }
    dend_10 { pt3dadd( -119.366, 83.0607, -110.789, 0.29 ) }
    dend_10 { pt3dadd( -120.382, 83.2215, -111.629, 0.29 ) }
    dend_10 { pt3dadd( -120.698, 83.2811, -111.886, 0.88 ) }
    dend_10 { pt3dadd( -121.4, 83.4973, -112.418, 1.18 ) }
    dend_10 { pt3dadd( -122.033, 83.7551, -112.795, 1.18 ) }
    dend_10 { pt3dadd( -123.068, 84.252, -113.35, 0.37 ) }
    dend_10 { pt3dadd( -123.644, 84.5304, -113.732, 0.15 ) }
    dend_10 { pt3dadd( -124.296, 84.7715, -114.211, 0.15 ) }
    dend_10 { pt3dadd( -124.359, 84.7887, -114.276, 0.15 ) }
    dend_10 { pt3dadd( -125.514, 84.9865, -115.692, 0.15 ) }
    dend_10 { pt3dadd( -125.576, 84.9933, -115.777, 0.15 ) }
    dend_10 { pt3dadd( -127.255, 85.1788, -118.033, 1.03 ) }
    dend_10 { pt3dadd( -127.706, 85.233, -118.62, 1.03 ) }
    dend_10 { pt3dadd( -129.042, 85.4798, -120.204, 0.37 ) }
    dend_10 { pt3dadd( -129.705, 85.6447, -120.908, 0.37 ) }
    dend_10 { pt3dadd( -129.767, 85.6673, -120.972, 0.37 ) }
    dend_10 { pt3dadd( -130.904, 86.1503, -122.001, 0.37 ) }
    dend_10 { pt3dadd( -131.678, 86.5329, -122.542, 1.11 ) }
    dend_10 { pt3dadd( -132.903, 87.2047, -123.355, 1.11 ) }
    dend_10 { pt3dadd( -132.986, 87.2511, -123.404, 1.11 ) }
    dend_10 { pt3dadd( -134.674, 88.2547, -124.528, 0.29 ) }
    dend_10 { pt3dadd( -134.82, 88.3409, -124.634, 0.29 ) }
    dend_10 { pt3dadd( -135.647, 88.7859, -125.28, 0.29 ) }
    dend_10 { pt3dadd( -135.736, 88.83, -125.351, 0.52 ) }
    dend_10 { pt3dadd( -136.509, 89.1741, -125.923, 0.81 ) }
    dend_10 { pt3dadd( -137.469, 89.5806, -126.552, 0.81 ) }
    dend_10 { pt3dadd( -137.949, 89.7466, -126.841, 0.96 ) }
    dend_10 { pt3dadd( -139.057, 90.0847, -127.543, 0.96 ) }
    dend_10 { pt3dadd( -140.176, 90.3974, -128.256, 0.29 ) }
    dend_10 { pt3dadd( -141.1, 90.685, -128.99, 0.29 ) }
    dend_10 { pt3dadd( -141.165, 90.7072, -129.051, 0.29 ) }
    dend_10 { pt3dadd( -142.44, 91.1716, -130.369, 0.22 ) }
    dend_10 { pt3dadd( -142.796, 91.3215, -130.79, 0.22 ) }
    dend_10 { pt3dadd( -143.757, 91.7666, -132.065, 0.22 ) }
    dend_10 { pt3dadd( -145.42, 92.4212, -134.229, 0.22 ) }
    dend_10 { pt3dadd( -145.574, 92.4702, -134.447, 0.22 ) }
    dend_10 { pt3dadd( -146.137, 92.6228, -135.222, 0.22 ) }
    dend_10 { pt3dadd( -146.192, 92.636, -135.296, 0.22 ) }
    dend_10 { pt3dadd( -146.866, 92.7547, -136.143, 0.81 ) }
    dend_10 { pt3dadd( -147.891, 92.8824, -137.296, 1.11 ) }
    dend_10 { pt3dadd( -150.095, 93.2056, -139.358, 0.88 ) }
    dend_10 { pt3dadd( -150.66, 93.315, -139.895, 0.44 ) }
    dend_10 { pt3dadd( -150.785, 93.3544, -140.026, 0.44 ) }
    dend_10 { pt3dadd( -151.236, 93.5508, -140.525, 0.44 ) }
    dend_10 { pt3dadd( -151.665, 93.7881, -141.001, 0.44 ) }
    dend_10 { pt3dadd( -152.342, 94.203, -141.677, 0.74 ) }
    dend_10 { pt3dadd( -152.406, 94.2468, -141.73, 0.74 ) }
    dend_10 { pt3dadd( -153.724, 95.1929, -142.895, 1.4 ) }
    dend_10 { pt3dadd( -153.794, 95.2403, -142.959, 1.4 ) }
    dend_10 { pt3dadd( -154.887, 95.8941, -144.031, 2.28 ) }
    dend_10 { pt3dadd( -155.625, 96.205, -144.755, 2.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 92/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -23.5802, 48.4754, -11.6944, 1.18 ) }
    dend_7 { pt3dadd( -24.333, 48.2113, -12.1356, 1.18 ) }
    dend_7 { pt3dadd( -25.1155, 47.9777, -12.5979, 0.88 ) }
    dend_7 { pt3dadd( -25.7255, 47.8967, -12.9392, 0.74 ) }
    dend_7 { pt3dadd( -26.1099, 47.8787, -13.147, 0.44 ) }
    dend_7 { pt3dadd( -26.1498, 47.8769, -13.1686, 0.44 ) }
    dend_7 { pt3dadd( -26.7999, 47.8463, -13.5202, 0.44 ) }
    dend_7 { pt3dadd( -27.0489, 47.854, -13.6517, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_7 { pt3dadd( -28.0856, 48.0066, -14.2294, 0.74 ) }
    dend_7 { pt3dadd( -28.6289, 48.133, -14.4855, 0.74 ) }
    // Section: dend_73, id: dend_73, parent: dend_69 (entry count 2/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -215.28, -104.321, -13.057, 0.29 ) }
    dend_73 { pt3dadd( -226.986, -106.375, -14.9833, 0.29 ) }
    dend_73 { pt3dadd( -238.733, -107.55, -17.3311, 0.29 ) }
    dend_73 { pt3dadd( -250.181, -107.62, -21.0711, 0.29 ) }
    dend_73 { pt3dadd( -261.149, -108.443, -25.9665, 0.29 ) }
    dend_73 { pt3dadd( -271.927, -110.38, -30.965, 0.29 ) }
    dend_73 { pt3dadd( -282.39, -114.149, -35.6129, 0.29 ) }
    dend_73 { pt3dadd( -293.401, -116.632, -39.8039, 0.29 ) }
    dend_73 { pt3dadd( -303.027, -121.646, -45.0997, 0.29 ) }
    dend_73 { pt3dadd( -312.076, -124.537, -52.4951, 0.29 ) }
    dend_73 { pt3dadd( -321.651, -126.815, -59.4239, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 13/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -215.28, -104.321, -13.057, 0.29 ) }
    dend_70 { pt3dadd( -223.655, -106.562, -15.5309, 0.29 ) }
    dend_70 { pt3dadd( -231.866, -108.772, -18.5245, 0.29 ) }
    dend_70 { pt3dadd( -240.067, -110.571, -21.7951, 0.29 ) }
    dend_70 { pt3dadd( -247.768, -113.258, -25.6398, 0.29 ) }
    dend_70 { pt3dadd( -254.544, -115.625, -31.0873, 0.29 ) }
    // Section: dend_64, id: dend_64, parent: dend_58 (entry count 19/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -191.091, -187.337, 37.6376, 0.29 ) }
    dend_64 { pt3dadd( -199.241, -189.901, 38.7164, 0.29 ) }
    dend_64 { pt3dadd( -207.084, -192.813, 40.8247, 0.29 ) }
    dend_64 { pt3dadd( -215.015, -196.132, 41.5877, 0.29 ) }
    dend_64 { pt3dadd( -223.319, -198.358, 41.7313, 0.29 ) }
    dend_64 { pt3dadd( -231.562, -200.815, 41.9664, 0.29 ) }
    dend_64 { pt3dadd( -239.465, -204.262, 42.3925, 0.29 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 26/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -191.091, -187.337, 37.6376, 0.29 ) }
    dend_59 { pt3dadd( -199.268, -199.297, 37.1166, 0.29 ) }
    dend_59 { pt3dadd( -207.689, -210.795, 34.597, 0.29 ) }
    dend_59 { pt3dadd( -214.659, -223.209, 31.6112, 0.29 ) }
    dend_59 { pt3dadd( -222.717, -234.36, 27.1689, 0.29 ) }
    dend_59 { pt3dadd( -231.978, -244.661, 23.2541, 0.29 ) }
    dend_59 { pt3dadd( -240.295, -256.114, 20.2356, 0.29 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 33/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 180.507, -74.1534, 64.2301, 0.22 ) }
    dend_49 { pt3dadd( 181.403, -72.4223, 63.5855, 0.22 ) }
    dend_49 { pt3dadd( 182.324, -70.7094, 62.8853, 0.22 ) }
    dend_49 { pt3dadd( 183.267, -68.9421, 62.1628, 0.22 ) }
    dend_49 { pt3dadd( 183.913, -67.7057, 61.6646, 0.22 ) }
    dend_49 { pt3dadd( 184.502, -66.5784, 61.2104, 0.66 ) }
    dend_49 { pt3dadd( 184.809, -65.9893, 60.9729, 0.66 ) }
    dend_49 { pt3dadd( 185.83, -64.0439, 60.2763, 0.15 ) }
    dend_49 { pt3dadd( 186.149, -63.4602, 60.0545, 0.74 ) }
    dend_49 { pt3dadd( 186.298, -63.1475, 59.9273, 0.74 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 43/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 180.507, -74.1534, 64.2301, 0.59 ) }
    dend_48 { pt3dadd( 181.668, -74.6911, 64.9267, 0.59 ) }
    dend_48 { pt3dadd( 181.743, -74.716, 64.965, 0.59 ) }
    dend_48 { pt3dadd( 182.694, -74.9417, 65.4127, 0.22 ) }
    dend_48 { pt3dadd( 184.579, -75.303, 66.2633, 0.22 ) }
    dend_48 { pt3dadd( 184.648, -75.3148, 66.294, 0.22 ) }
    dend_48 { pt3dadd( 185.434, -75.4116, 66.5716, 1.25 ) }
    dend_48 { pt3dadd( 186.773, -75.4902, 66.9114, 1.55 ) }
    dend_48 { pt3dadd( 187.418, -75.4971, 67.055, 1.55 ) }
    dend_48 { pt3dadd( 187.719, -75.4831, 67.1114, 1.55 ) }
    dend_48 { pt3dadd( 189.068, -75.3717, 67.3467, 0.52 ) }
    dend_48 { pt3dadd( 191.1, -75.2194, 67.7517, 0.52 ) }
    dend_48 { pt3dadd( 191.175, -75.2144, 67.7681, 0.52 ) }
    dend_48 { pt3dadd( 192.463, -75.1584, 68.01, 0.52 ) }
    dend_48 { pt3dadd( 192.569, -75.159, 68.0292, 0.52 ) }
    dend_48 { pt3dadd( 193.936, -75.2538, 68.2961, 0.52 ) }
    dend_48 { pt3dadd( 194.872, -75.3749, 68.5014, 0.96 ) }
    dend_48 { pt3dadd( 194.955, -75.3882, 68.5249, 0.96 ) }
    dend_48 { pt3dadd( 195.968, -75.5472, 68.8061, 0.88 ) }
    dend_48 { pt3dadd( 196.993, -75.6927, 69.0489, 0.22 ) }
    dend_48 { pt3dadd( 198.367, -75.8531, 69.3419, 0.22 ) }
    dend_48 { pt3dadd( 198.441, -75.8621, 69.3568, 0.22 ) }
    dend_48 { pt3dadd( 199.94, -76.0186, 69.662, 0.22 ) }
    dend_48 { pt3dadd( 200.046, -76.0287, 69.6827, 0.22 ) }
    dend_48 { pt3dadd( 200.99, -76.0943, 69.8756, 0.22 ) }
    dend_48 { pt3dadd( 201.066, -76.0965, 69.8883, 0.22 ) }
    dend_48 { pt3dadd( 202.158, -76.1577, 70.066, 0.22 ) }
    dend_48 { pt3dadd( 202.321, -76.176, 70.0889, 0.22 ) }
    dend_48 { pt3dadd( 203.626, -76.4874, 70.2756, 0.22 ) }
    dend_48 { pt3dadd( 204.086, -76.6077, 70.3587, 1.18 ) }
    dend_48 { pt3dadd( 204.673, -76.7717, 70.484, 1.55 ) }
    dend_48 { pt3dadd( 205.961, -77.1035, 70.7785, 1.18 ) }
    dend_48 { pt3dadd( 207.581, -77.4564, 71.1808, 0.22 ) }
    dend_48 { pt3dadd( 208.863, -77.6964, 71.5817, 0.22 ) }
    dend_48 { pt3dadd( 209.563, -77.798, 71.8598, 0.22 ) }
    dend_48 { pt3dadd( 209.633, -77.806, 71.8907, 0.22 ) }
    dend_48 { pt3dadd( 210.32, -77.856, 72.2198, 0.74 ) }
    dend_48 { pt3dadd( 211.021, -77.8304, 72.5203, 0.74 ) }
    dend_48 { pt3dadd( 212.058, -77.7589, 72.9193, 0.37 ) }
    dend_48 { pt3dadd( 212.671, -77.7049, 73.0993, 0.66 ) }
    dend_48 { pt3dadd( 212.904, -77.7005, 73.1545, 0.66 ) }
    dend_48 { pt3dadd( 213.568, -77.6957, 73.2956, 0.96 ) }
    dend_48 { pt3dadd( 215.108, -77.6824, 73.507, 0.37 ) }
    dend_48 { pt3dadd( 216.776, -77.6668, 73.6586, 0.37 ) }
    dend_48 { pt3dadd( 216.852, -77.6661, 73.6611, 0.37 ) }
    dend_48 { pt3dadd( 217.967, -77.6476, 73.6813, 0.37 ) }
    dend_48 { pt3dadd( 218.928, -77.6364, 73.7234, 0.37 ) }
    dend_48 { pt3dadd( 220.27, -77.6221, 73.8307, 0.81 ) }
    dend_48 { pt3dadd( 220.915, -77.6118, 73.9173, 0.81 ) }
    dend_48 { pt3dadd( 222.017, -77.5761, 74.0161, 0.44 ) }
    dend_48 { pt3dadd( 222.093, -77.5752, 74.0224, 0.44 ) }
    dend_48 { pt3dadd( 223.238, -77.577, 74.115, 0.44 ) }
    dend_48 { pt3dadd( 223.324, -77.5807, 74.1244, 0.44 ) }
    dend_48 { pt3dadd( 224.183, -77.6154, 74.2796, 0.44 ) }
    dend_48 { pt3dadd( 225.241, -77.6235, 74.4899, 0.44 ) }
    dend_48 { pt3dadd( 225.527, -77.6087, 74.5614, 0.44 ) }
    dend_48 { pt3dadd( 226.073, -77.5306, 74.7001, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_48 { pt3dadd( 226.145, -77.5117, 74.7195, 0.44 ) }
    dend_48 { pt3dadd( 226.773, -77.3183, 74.9086, 0.44 ) }
    dend_48 { pt3dadd( 226.852, -77.2912, 74.9361, 0.44 ) }
    dend_48 { pt3dadd( 227.544, -77.0508, 75.2196, 0.88 ) }
    dend_48 { pt3dadd( 228.24, -76.8358, 75.5081, 1.25 ) }
    dend_48 { pt3dadd( 229.11, -76.6175, 75.8757, 1.55 ) }
    dend_48 { pt3dadd( 229.259, -76.5878, 75.9396, 1.55 ) }
    dend_48 { pt3dadd( 229.91, -76.501, 76.225, 1.55 ) }
    dend_48 { pt3dadd( 229.989, -76.4943, 76.2604, 1.55 ) }
    dend_48 { pt3dadd( 230.904, -76.5304, 76.6189, 1.25 ) }
    dend_48 { pt3dadd( 231.721, -76.6226, 76.9141, 0.88 ) }
    dend_48 { pt3dadd( 232.412, -76.7294, 77.1492, 0.66 ) }
    dend_48 { pt3dadd( 233.533, -76.9223, 77.5145, 0.52 ) }
    dend_48 { pt3dadd( 233.687, -76.9519, 77.5632, 0.52 ) }
    dend_48 { pt3dadd( 235.938, -77.396, 78.1405, 0.52 ) }
    dend_48 { pt3dadd( 236.023, -77.4092, 78.1569, 0.52 ) }
    dend_48 { pt3dadd( 236.888, -77.4559, 78.2718, 0.52 ) }
    dend_48 { pt3dadd( 236.975, -77.4511, 78.2767, 0.52 ) }
    dend_48 { pt3dadd( 237.926, -77.3159, 78.2023, 0.52 ) }
    dend_48 { pt3dadd( 239.113, -77.0769, 78.0512, 0.52 ) }
    dend_48 { pt3dadd( 240.288, -76.8673, 77.8953, 0.52 ) }
    dend_48 { pt3dadd( 241.349, -76.7676, 77.8007, 0.52 ) }
    dend_48 { pt3dadd( 242.459, -76.7271, 77.7255, 1.25 ) }
    dend_48 { pt3dadd( 244.109, -76.7757, 77.6872, 0.88 ) }
    dend_48 { pt3dadd( 245.171, -76.8876, 77.7178, 0.44 ) }
    dend_48 { pt3dadd( 246.949, -77.2782, 77.9261, 0.44 ) }
    dend_48 { pt3dadd( 247.743, -77.5719, 78.0713, 0.74 ) }
    dend_48 { pt3dadd( 247.81, -77.6059, 78.0898, 0.74 ) }
    dend_48 { pt3dadd( 248.278, -77.8851, 78.285, 1.03 ) }
    dend_48 { pt3dadd( 248.527, -78.0536, 78.4247, 1.03 ) }
    dend_48 { pt3dadd( 249.035, -78.3839, 78.7136, 1.03 ) }
    dend_48 { pt3dadd( 249.911, -78.7686, 79.0876, 0.44 ) }
    dend_48 { pt3dadd( 250.704, -78.9979, 79.314, 0.29 ) }
    dend_48 { pt3dadd( 251.174, -79.0548, 79.4014, 0.29 ) }
    dend_48 { pt3dadd( 251.413, -79.0465, 79.4234, 0.29 ) }
    dend_48 { pt3dadd( 252.415, -78.8476, 79.3568, 0.29 ) }
    dend_48 { pt3dadd( 254.112, -78.3111, 79.0631, 0.29 ) }
    dend_48 { pt3dadd( 254.182, -78.2854, 79.0424, 0.29 ) }
    dend_48 { pt3dadd( 254.848, -78.0471, 78.827, 0.29 ) }
    dend_48 { pt3dadd( 254.93, -78.025, 78.8036, 0.29 ) }
    dend_48 { pt3dadd( 256.759, -77.5554, 78.443, 1.18 ) }
    dend_48 { pt3dadd( 256.833, -77.5389, 78.4364, 1.18 ) }
    dend_48 { pt3dadd( 258.457, -77.2088, 78.4839, 1.69 ) }
    dend_48 { pt3dadd( 259.422, -77.024, 78.5802, 1.99 ) }
    dend_48 { pt3dadd( 260.725, -76.7896, 78.7982, 0.66 ) }
    dend_48 { pt3dadd( 262.219, -76.5361, 79.1873, 0.44 ) }
    dend_48 { pt3dadd( 262.971, -76.4232, 79.4925, 0.22 ) }
    dend_48 { pt3dadd( 263.04, -76.4146, 79.5245, 0.22 ) }
    dend_48 { pt3dadd( 263.95, -76.3075, 80.0214, 0.22 ) }
    dend_48 { pt3dadd( 264.019, -76.3002, 80.054, 0.22 ) }
    dend_48 { pt3dadd( 264.564, -76.2468, 80.2694, 0.96 ) }
    dend_48 { pt3dadd( 265.107, -76.2193, 80.437, 0.96 ) }
    dend_48 { pt3dadd( 265.674, -76.1656, 80.5648, 0.22 ) }
    dend_48 { pt3dadd( 267.011, -75.9699, 80.7983, 0.22 ) }
    dend_48 { pt3dadd( 267.708, -75.8298, 80.8857, 1.11 ) }
    dend_48 { pt3dadd( 267.813, -75.8039, 80.8976, 1.11 ) }
    dend_48 { pt3dadd( 268.298, -75.6581, 80.9474, 1.11 ) }
    dend_48 { pt3dadd( 269.297, -75.3022, 81.0725, 0.22 ) }
    dend_48 { pt3dadd( 269.828, -75.0931, 81.1564, 0.22 ) }
    dend_48 { pt3dadd( 269.936, -75.0542, 81.1806, 0.22 ) }
    dend_48 { pt3dadd( 270.823, -74.7688, 81.4461, 0.52 ) }
    dend_48 { pt3dadd( 271.236, -74.6555, 81.5918, 0.52 ) }
    dend_48 { pt3dadd( 271.935, -74.4968, 81.8811, 0.22 ) }
    dend_48 { pt3dadd( 272.002, -74.4823, 81.9146, 0.22 ) }
    dend_48 { pt3dadd( 273.009, -74.2925, 82.4118, 0.22 ) }
    dend_48 { pt3dadd( 273.155, -74.2645, 82.4825, 0.22 ) }
    dend_48 { pt3dadd( 273.826, -74.14, 82.802, 0.22 ) }
    dend_48 { pt3dadd( 273.896, -74.1242, 82.8296, 0.22 ) }
    dend_48 { pt3dadd( 274.602, -73.9706, 83.0605, 0.37 ) }
    dend_48 { pt3dadd( 274.674, -73.9564, 83.0834, 0.37 ) }
    dend_48 { pt3dadd( 275.322, -73.8316, 83.2847, 0.37 ) }
    dend_48 { pt3dadd( 275.394, -73.8209, 83.3082, 0.37 ) }
    dend_48 { pt3dadd( 276.456, -73.7092, 83.661, 0.15 ) }
    dend_48 { pt3dadd( 277.108, -73.6686, 83.8609, 0.15 ) }
    dend_48 { pt3dadd( 278.811, -73.718, 84.3714, 0.15 ) }
    dend_48 { pt3dadd( 279.266, -73.763, 84.5079, 0.66 ) }
    dend_48 { pt3dadd( 280.027, -73.9003, 84.743, 1.11 ) }
    dend_48 { pt3dadd( 280.17, -73.9346, 84.7887, 1.11 ) }
    dend_48 { pt3dadd( 281.252, -74.2645, 85.1555, 0.15 ) }
    dend_48 { pt3dadd( 282.224, -74.5776, 85.4811, 0.15 ) }
    dend_48 { pt3dadd( 282.446, -74.6612, 85.5548, 0.15 ) }
    dend_48 { pt3dadd( 283.173, -74.9113, 85.8138, 0.15 ) }
    dend_48 { pt3dadd( 283.681, -75.0486, 86.0124, 0.44 ) }
    dend_48 { pt3dadd( 283.981, -75.0972, 86.1443, 0.44 ) }
    dend_48 { pt3dadd( 284.548, -75.1156, 86.4762, 0.81 ) }
    dend_48 { pt3dadd( 284.613, -75.1121, 86.5172, 0.81 ) }
    dend_48 { pt3dadd( 285.398, -75.0676, 87.0349, 0.81 ) }
    dend_48 { pt3dadd( 286.134, -75.0166, 87.5328, 0.81 ) }
    dend_48 { pt3dadd( 286.787, -74.9523, 87.9699, 0.22 ) }
    dend_48 { pt3dadd( 288.379, -74.7425, 89.0079, 0.22 ) }
    dend_48 { pt3dadd( 288.47, -74.7202, 89.0621, 0.22 ) }
    dend_48 { pt3dadd( 289.282, -74.465, 89.5145, 0.22 ) }
    dend_48 { pt3dadd( 290.166, -74.1558, 89.9962, 0.59 ) }
    dend_48 { pt3dadd( 291.121, -73.7711, 90.4868, 0.22 ) }
    dend_48 { pt3dadd( 291.741, -73.4814, 90.7661, 0.22 ) }
    dend_48 { pt3dadd( 293.333, -72.5495, 91.295, 0.88 ) }
    dend_48 { pt3dadd( 293.396, -72.5079, 91.3146, 0.88 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 97/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 57.9393, -204.391, 23.8859, 0.22 ) }
    dend_46 { pt3dadd( 58.1412, -204.959, 24.2759, 0.22 ) }
    dend_46 { pt3dadd( 58.2663, -205.325, 24.549, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_46 { pt3dadd( 58.577, -206.166, 25.1939, 0.37 ) }
    dend_46 { pt3dadd( 59.0458, -207.377, 26.0919, 0.22 ) }
    dend_46 { pt3dadd( 59.4245, -208.41, 26.8011, 0.22 ) }
    dend_46 { pt3dadd( 59.6289, -208.987, 27.1795, 1.11 ) }
    dend_46 { pt3dadd( 60.1233, -210.375, 28.0522, 0.22 ) }
    dend_46 { pt3dadd( 60.5698, -211.627, 28.8382, 0.22 ) }
    dend_46 { pt3dadd( 60.8461, -212.4, 29.3093, 0.22 ) }
    dend_46 { pt3dadd( 61.4309, -214.093, 30.3844, 0.22 ) }
    dend_46 { pt3dadd( 61.5046, -214.314, 30.509, 0.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 9/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 57.9393, -204.391, 23.8859, 0.22 ) }
    dend_45 { pt3dadd( 57.61, -205.776, 24.1324, 0.22 ) }
    dend_45 { pt3dadd( 57.426, -206.551, 24.2701, 0.66 ) }
    dend_45 { pt3dadd( 57.2829, -207.153, 24.3772, 0.88 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 13/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -17.8905, 75.3025, -18.2614, 0.74 ) }
    dend_22 { pt3dadd( -16.0649, 76.2382, -18.4613, 0.74 ) }
    dend_22 { pt3dadd( -14.3321, 77.056, -18.5797, 0.52 ) }
    dend_22 { pt3dadd( -13.9542, 77.2203, -18.5806, 0.52 ) }
    dend_22 { pt3dadd( -11.7695, 78.1569, -18.477, 0.52 ) }
    dend_22 { pt3dadd( -11.6133, 78.2275, -18.4647, 0.52 ) }
    dend_22 { pt3dadd( -10.3049, 78.8365, -18.3352, 0.52 ) }
    dend_22 { pt3dadd( -10.201, 78.8841, -18.3186, 0.52 ) }
    dend_22 { pt3dadd( -9.22955, 79.3789, -18.1986, 0.74 ) }
    dend_22 { pt3dadd( -8.46597, 79.8457, -18.205, 1.03 ) }
    dend_22 { pt3dadd( -7.95061, 80.2337, -18.3083, 1.03 ) }
    dend_22 { pt3dadd( -7.89164, 80.2809, -18.3255, 1.03 ) }
    dend_22 { pt3dadd( -6.4725, 81.4185, -18.9135, 1.03 ) }
    dend_22 { pt3dadd( -5.6727, 82.0143, -19.3482, 0.29 ) }
    dend_22 { pt3dadd( -4.66313, 82.6959, -19.9731, 0.29 ) }
    dend_22 { pt3dadd( -3.8987, 83.13, -20.434, 0.29 ) }
    dend_22 { pt3dadd( -3.82867, 83.1642, -20.4737, 0.29 ) }
    dend_22 { pt3dadd( -2.55035, 83.7571, -21.1124, 1.03 ) }
    dend_22 { pt3dadd( -1.29671, 84.3284, -21.644, 1.18 ) }
    dend_22 { pt3dadd( -0.606779, 84.6656, -21.9212, 0.44 ) }
    dend_22 { pt3dadd( 0.0481793, 85.03, -22.2011, 0.44 ) }
    dend_22 { pt3dadd( 0.117903, 85.0765, -22.228, 0.44 ) }
    dend_22 { pt3dadd( 0.956106, 85.7539, -22.4901, 0.44 ) }
    dend_22 { pt3dadd( 1.70438, 86.5574, -22.6087, 0.44 ) }
    dend_22 { pt3dadd( 1.7538, 86.6171, -22.6074, 0.44 ) }
    dend_22 { pt3dadd( 2.00443, 86.956, -22.6015, 0.29 ) }
    dend_22 { pt3dadd( 2.05336, 87.0173, -22.6028, 0.29 ) }
    dend_22 { pt3dadd( 2.49764, 87.456, -22.6128, 0.29 ) }
    dend_22 { pt3dadd( 2.59874, 87.5292, -22.6115, 0.29 ) }
    dend_22 { pt3dadd( 3.53835, 88.0622, -22.6862, 0.66 ) }
    dend_22 { pt3dadd( 3.60681, 88.0962, -22.6948, 0.66 ) }
    dend_22 { pt3dadd( 4.53497, 88.5454, -22.8204, 0.96 ) }
    dend_22 { pt3dadd( 5.10443, 88.8528, -22.9098, 1.18 ) }
    dend_22 { pt3dadd( 5.88014, 89.2872, -23.0435, 1.18 ) }
    dend_22 { pt3dadd( 7.45666, 90.2194, -23.3233, 0.74 ) }
    dend_22 { pt3dadd( 8.14751, 90.6481, -23.4538, 0.37 ) }
    dend_22 { pt3dadd( 9.07339, 91.2635, -23.6449, 0.37 ) }
    dend_22 { pt3dadd( 10.5854, 92.4423, -23.9644, 0.37 ) }
    dend_22 { pt3dadd( 10.7054, 92.5543, -23.9922, 0.37 ) }
    dend_22 { pt3dadd( 10.9384, 92.8214, -24.0474, 0.37 ) }
    dend_22 { pt3dadd( 10.9756, 92.8765, -24.054, 0.37 ) }
    dend_22 { pt3dadd( 11.5941, 93.9661, -24.185, 0.37 ) }
    dend_22 { pt3dadd( 12.1817, 95.1387, -24.2977, 0.37 ) }
    dend_22 { pt3dadd( 12.5802, 95.8696, -24.3871, 0.37 ) }
    dend_22 { pt3dadd( 12.749, 96.1316, -24.4216, 0.22 ) }
    dend_22 { pt3dadd( 13.2034, 96.7538, -24.5044, 0.22 ) }
    dend_22 { pt3dadd( 13.3144, 96.8875, -24.5252, 0.22 ) }
    dend_22 { pt3dadd( 13.9087, 97.5379, -24.6037, 0.22 ) }
    dend_22 { pt3dadd( 15.4152, 99.0419, -24.7755, 1.4 ) }
    dend_22 { pt3dadd( 16.2827, 99.8815, -24.8615, 1.69 ) }
    dend_22 { pt3dadd( 16.395, 99.9895, -24.8694, 1.69 ) }
    dend_22 { pt3dadd( 17.5299, 101.069, -24.9204, 1.69 ) }
    dend_22 { pt3dadd( 18.455, 101.899, -24.908, 1.03 ) }
    dend_22 { pt3dadd( 19.1083, 102.491, -24.9043, 0.37 ) }
    dend_22 { pt3dadd( 19.1571, 102.537, -24.9023, 0.37 ) }
    dend_22 { pt3dadd( 19.7317, 103.078, -25.2456, 0.37 ) }
    dend_22 { pt3dadd( 19.7792, 103.129, -25.3001, 0.37 ) }
    dend_22 { pt3dadd( 20.5061, 103.954, -26.4672, 0.37 ) }
    dend_22 { pt3dadd( 21.2648, 104.783, -27.7777, 1.18 ) }
    dend_22 { pt3dadd( 21.3353, 104.859, -27.9056, 1.18 ) }
    dend_22 { pt3dadd( 23.7474, 107.018, -31.9382, 0.29 ) }
    dend_22 { pt3dadd( 24.2233, 107.392, -32.6404, 0.29 ) }
    dend_22 { pt3dadd( 24.3738, 107.484, -32.8283, 0.29 ) }
    dend_22 { pt3dadd( 25.0571, 107.853, -33.5611, 0.29 ) }
    dend_22 { pt3dadd( 25.1131, 107.876, -33.608, 0.29 ) }
    dend_22 { pt3dadd( 26.967, 108.587, -34.8442, 0.29 ) }
    dend_22 { pt3dadd( 28.4061, 109.088, -35.5536, 1.25 ) }
    dend_22 { pt3dadd( 32.111, 110.359, -37.5108, 0.37 ) }
    dend_22 { pt3dadd( 33.3289, 110.806, -38.2008, 0.74 ) }
    dend_22 { pt3dadd( 34.9615, 111.46, -39.178, 0.29 ) }
    dend_22 { pt3dadd( 36.0889, 111.956, -39.862, 0.29 ) }
    dend_22 { pt3dadd( 36.2178, 112.024, -39.9359, 0.29 ) }
    dend_22 { pt3dadd( 38.0389, 113.02, -40.8962, 0.29 ) }
    dend_22 { pt3dadd( 38.1014, 113.06, -40.918, 0.29 ) }
    dend_22 { pt3dadd( 38.5087, 113.34, -41.0629, 0.29 ) }
    dend_22 { pt3dadd( 38.6287, 113.434, -41.0904, 0.29 ) }
    dend_22 { pt3dadd( 39.9678, 114.591, -41.3087, 0.29 ) }
    dend_22 { pt3dadd( 40.6917, 115.355, -41.3418, 1.18 ) }
    dend_22 { pt3dadd( 40.8064, 115.5, -41.3322, 1.18 ) }
    dend_22 { pt3dadd( 41.3007, 116.182, -41.3227, 1.18 ) }
    dend_22 { pt3dadd( 41.425, 116.378, -41.327, 1.18 ) }
    dend_22 { pt3dadd( 42.1499, 117.659, -41.3845, 0.59 ) }
    dend_22 { pt3dadd( 42.9372, 119.27, -41.4868, 0.29 ) }
    dend_22 { pt3dadd( 42.97, 119.342, -41.4899, 0.29 ) }
    dend_22 { pt3dadd( 43.4688, 120.464, -41.5406, 0.66 ) }
    dend_22 { pt3dadd( 43.9099, 121.347, -41.6307, 0.66 ) }
    dend_22 { pt3dadd( 43.9541, 121.425, -41.6416, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_22 { pt3dadd( 44.4433, 122.199, -41.813, 0.22 ) }
    dend_22 { pt3dadd( 45.2028, 123.282, -42.1132, 0.22 ) }
    dend_22 { pt3dadd( 45.2754, 123.379, -42.1444, 0.22 ) }
    dend_22 { pt3dadd( 46.4975, 124.967, -42.6509, 1.11 ) }
    dend_22 { pt3dadd( 47.0062, 125.618, -42.879, 1.11 ) }
    dend_22 { pt3dadd( 47.8102, 126.612, -43.2188, 0.74 ) }
    dend_22 { pt3dadd( 47.8656, 126.678, -43.2412, 0.74 ) }
    dend_22 { pt3dadd( 48.5177, 127.381, -43.4553, 0.37 ) }
    dend_22 { pt3dadd( 49.5797, 128.516, -43.6814, 0.37 ) }
    dend_22 { pt3dadd( 49.6488, 128.591, -43.6869, 0.37 ) }
    dend_22 { pt3dadd( 50.4655, 129.427, -43.685, 0.37 ) }
    dend_22 { pt3dadd( 50.7244, 129.686, -43.6654, 0.37 ) }
    dend_22 { pt3dadd( 51.3755, 130.34, -43.6235, 0.37 ) }
    dend_22 { pt3dadd( 52.5776, 131.527, -43.5334, 0.37 ) }
    dend_22 { pt3dadd( 52.6336, 131.581, -43.5304, 0.37 ) }
    dend_22 { pt3dadd( 53.5043, 132.429, -43.4864, 1.62 ) }
    dend_22 { pt3dadd( 53.9667, 132.893, -43.4656, 1.62 ) }
    dend_22 { pt3dadd( 55.1079, 134.027, -43.4011, 0.74 ) }
    dend_22 { pt3dadd( 56.3423, 135.238, -43.2972, 0.59 ) }
    dend_22 { pt3dadd( 56.3996, 135.29, -43.2903, 0.52 ) }
    dend_22 { pt3dadd( 57.2887, 136.018, -43.1805, 0.52 ) }
    dend_22 { pt3dadd( 57.3599, 136.069, -43.1712, 0.52 ) }
    dend_22 { pt3dadd( 57.757, 136.333, -43.109, 0.29 ) }
    dend_22 { pt3dadd( 58.9069, 137.053, -43.0135, 0.29 ) }
    dend_22 { pt3dadd( 58.982, 137.098, -43.0149, 0.29 ) }
    dend_22 { pt3dadd( 59.9201, 137.67, -43.1364, 0.29 ) }
    dend_22 { pt3dadd( 60.0234, 137.736, -43.1566, 0.29 ) }
    dend_22 { pt3dadd( 60.9597, 138.374, -43.3313, 0.29 ) }
    dend_22 { pt3dadd( 62.3126, 139.329, -43.5926, 1.11 ) }
    dend_22 { pt3dadd( 63.0377, 139.861, -43.7206, 1.11 ) }
    dend_22 { pt3dadd( 64.0507, 140.655, -43.8715, 0.59 ) }
    dend_22 { pt3dadd( 65.0215, 141.461, -43.9859, 0.37 ) }
    dend_22 { pt3dadd( 66.2093, 142.441, -44.0833, 0.22 ) }
    dend_22 { pt3dadd( 66.2693, 142.491, -44.0844, 0.22 ) }
    dend_22 { pt3dadd( 67.0603, 143.166, -44.0244, 0.22 ) }
    dend_22 { pt3dadd( 67.1864, 143.271, -44.007, 0.22 ) }
    dend_22 { pt3dadd( 67.3853, 143.432, -43.9611, 0.59 ) }
    dend_22 { pt3dadd( 67.478, 143.499, -43.9395, 0.59 ) }
    dend_22 { pt3dadd( 67.804, 143.731, -43.8955, 0.59 ) }
    dend_22 { pt3dadd( 69.0337, 144.607, -43.7862, 0.37 ) }
    dend_22 { pt3dadd( 70.0266, 145.266, -43.7171, 1.18 ) }
    dend_22 { pt3dadd( 70.8738, 145.817, -43.6636, 1.18 ) }
    dend_22 { pt3dadd( 71.7722, 146.404, -43.605, 1.18 ) }
    dend_22 { pt3dadd( 73.0298, 147.268, -43.5116, 0.37 ) }
    dend_22 { pt3dadd( 73.1187, 147.332, -43.5043, 0.37 ) }
    dend_22 { pt3dadd( 74.5337, 148.46, -43.3354, 0.37 ) }
    dend_22 { pt3dadd( 74.6586, 148.57, -43.3279, 0.37 ) }
    dend_22 { pt3dadd( 75.3552, 149.242, -43.285, 0.37 ) }
    dend_22 { pt3dadd( 76.2569, 150.197, -43.2109, 0.37 ) }
    dend_22 { pt3dadd( 76.3092, 150.254, -43.209, 0.37 ) }
    dend_22 { pt3dadd( 77.4925, 151.625, -43.2835, 0.37 ) }
    dend_22 { pt3dadd( 78.2473, 152.58, -43.4152, 0.81 ) }
    dend_22 { pt3dadd( 78.7062, 153.137, -43.5623, 0.81 ) }
    dend_22 { pt3dadd( 78.7668, 153.213, -43.5919, 0.81 ) }
    dend_22 { pt3dadd( 79.7347, 154.427, -44.2003, 0.29 ) }
    dend_22 { pt3dadd( 80.3136, 155.213, -44.6115, 0.29 ) }
    dend_22 { pt3dadd( 80.3915, 155.33, -44.6795, 0.29 ) }
    dend_22 { pt3dadd( 81.0581, 156.492, -45.2461, 0.29 ) }
    dend_22 { pt3dadd( 81.4705, 157.241, -45.6151, 0.22 ) }
    dend_22 { pt3dadd( 81.5054, 157.305, -45.6432, 0.22 ) }
    dend_22 { pt3dadd( 82.0155, 158.305, -46.0009, 0.22 ) }
    dend_22 { pt3dadd( 82.0513, 158.37, -46.0275, 0.22 ) }
    dend_22 { pt3dadd( 82.576, 159.274, -46.4072, 0.37 ) }
    dend_22 { pt3dadd( 83.2736, 160.377, -46.8347, 1.18 ) }
    dend_22 { pt3dadd( 83.68, 160.894, -47.0526, 1.18 ) }
    dend_22 { pt3dadd( 83.7816, 161.0, -47.1031, 1.18 ) }
    dend_22 { pt3dadd( 84.8434, 161.954, -47.6094, 0.37 ) }
    dend_22 { pt3dadd( 84.9279, 162.028, -47.6439, 0.37 ) }
    dend_22 { pt3dadd( 85.4879, 162.49, -47.8689, 0.29 ) }
    dend_22 { pt3dadd( 86.212, 163.081, -48.1492, 0.29 ) }
    dend_22 { pt3dadd( 87.5468, 164.154, -48.6885, 0.29 ) }
    dend_22 { pt3dadd( 87.6726, 164.252, -48.7334, 0.29 ) }
    dend_22 { pt3dadd( 88.5244, 164.895, -49.0248, 0.29 ) }
    dend_22 { pt3dadd( 90.315, 166.244, -49.6703, 0.29 ) }
    dend_22 { pt3dadd( 90.3658, 166.282, -49.6894, 0.29 ) }
    dend_22 { pt3dadd( 91.1564, 166.884, -49.9825, 0.74 ) }
    dend_22 { pt3dadd( 92.2006, 167.615, -50.4063, 1.18 ) }
    dend_22 { pt3dadd( 93.4775, 168.44, -50.9771, 1.18 ) }
    dend_22 { pt3dadd( 93.5397, 168.476, -51.0047, 1.18 ) }
    dend_22 { pt3dadd( 94.0749, 168.77, -51.2225, 1.18 ) }
    dend_22 { pt3dadd( 94.1665, 168.817, -51.257, 1.18 ) }
    dend_22 { pt3dadd( 96.2392, 169.87, -51.9935, 0.29 ) }
    dend_22 { pt3dadd( 96.305, 169.902, -52.0159, 0.29 ) }
    dend_22 { pt3dadd( 97.5321, 170.535, -52.314, 0.29 ) }
    dend_22 { pt3dadd( 97.5893, 170.566, -52.3251, 0.29 ) }
    dend_22 { pt3dadd( 98.5179, 171.107, -52.4087, 1.03 ) }
    dend_22 { pt3dadd( 98.9354, 171.373, -52.3739, 0.37 ) }
    dend_22 { pt3dadd( 98.9968, 171.415, -52.3528, 0.37 ) }
    dend_22 { pt3dadd( 99.4341, 171.712, -52.2595, 0.37 ) }
    dend_22 { pt3dadd( 99.5815, 171.819, -52.2576, 0.37 ) }
    dend_22 { pt3dadd( 100.247, 172.314, -52.3165, 0.37 ) }
    dend_22 { pt3dadd( 100.801, 172.713, -52.3814, 0.66 ) }
    dend_22 { pt3dadd( 101.196, 172.983, -52.4271, 0.88 ) }
    dend_22 { pt3dadd( 102.249, 173.758, -52.5088, 0.22 ) }
    dend_22 { pt3dadd( 103.351, 174.668, -52.5683, 0.22 ) }
    dend_22 { pt3dadd( 103.409, 174.72, -52.5704, 0.22 ) }
    dend_22 { pt3dadd( 104.833, 176.061, -52.6781, 0.22 ) }
    dend_22 { pt3dadd( 104.888, 176.116, -52.6828, 0.22 ) }
    dend_22 { pt3dadd( 106.342, 177.64, -52.7919, 0.22 ) }
    dend_22 { pt3dadd( 107.542, 178.945, -52.8357, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_22 { pt3dadd( 107.595, 179.003, -52.8376, 0.22 ) }
    dend_22 { pt3dadd( 108.646, 180.094, -52.9511, 1.18 ) }
    dend_22 { pt3dadd( 109.267, 180.722, -53.0788, 1.18 ) }
    dend_22 { pt3dadd( 109.333, 180.777, -53.1024, 1.18 ) }
    dend_22 { pt3dadd( 109.744, 181.025, -53.3227, 1.18 ) }
    dend_22 { pt3dadd( 110.135, 181.182, -53.5322, 1.18 ) }
    dend_22 { pt3dadd( 111.312, 181.579, -54.1318, 1.18 ) }
    dend_22 { pt3dadd( 111.377, 181.597, -54.1668, 1.18 ) }
    dend_22 { pt3dadd( 113.061, 182.075, -55.1905, 0.37 ) }
    dend_22 { pt3dadd( 113.131, 182.098, -55.2369, 0.37 ) }
    dend_22 { pt3dadd( 114.225, 182.551, -56.0446, 0.37 ) }
    dend_22 { pt3dadd( 114.342, 182.617, -56.1393, 0.37 ) }
    dend_22 { pt3dadd( 115.111, 183.233, -56.7549, 0.29 ) }
    dend_22 { pt3dadd( 115.678, 183.816, -57.1862, 0.29 ) }
    dend_22 { pt3dadd( 115.782, 183.936, -57.2402, 0.29 ) }
    dend_22 { pt3dadd( 116.191, 184.36, -57.4239, 0.29 ) }
    dend_22 { pt3dadd( 116.372, 184.503, -57.5005, 0.29 ) }
    dend_22 { pt3dadd( 117.73, 185.108, -57.8408, 0.29 ) }
    dend_22 { pt3dadd( 117.892, 185.158, -57.8674, 0.29 ) }
    dend_22 { pt3dadd( 118.953, 185.433, -58.1133, 0.29 ) }
    dend_22 { pt3dadd( 119.177, 185.498, -58.1677, 0.29 ) }
    dend_22 { pt3dadd( 120.486, 185.889, -58.4844, 1.03 ) }
    dend_22 { pt3dadd( 121.637, 186.394, -58.7405, 1.03 ) }
    dend_22 { pt3dadd( 121.767, 186.469, -58.7766, 1.03 ) }
    dend_22 { pt3dadd( 123.357, 187.462, -59.2446, 0.29 ) }
    dend_22 { pt3dadd( 124.334, 188.148, -59.5599, 0.29 ) }
    dend_22 { pt3dadd( 124.451, 188.238, -59.598, 0.29 ) }
    dend_22 { pt3dadd( 126.146, 189.715, -60.1399, 0.29 ) }
    dend_22 { pt3dadd( 127.512, 191.019, -60.6276, 1.47 ) }
    dend_22 { pt3dadd( 128.489, 191.934, -60.945, 2.21 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 30/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -17.8905, 75.3025, -18.2614, 1.55 ) }
    dend_19 { pt3dadd( -18.0226, 76.0175, -18.3201, 1.55 ) }
    dend_19 { pt3dadd( -18.1808, 77.1293, -18.4678, 0.81 ) }
    dend_19 { pt3dadd( -18.3083, 78.4332, -18.6533, 0.81 ) }
    dend_19 { pt3dadd( -18.3936, 79.5488, -18.8052, 0.81 ) }
    dend_19 { pt3dadd( -18.4565, 80.6026, -18.9384, 0.81 ) }
    dend_19 { pt3dadd( -18.502, 81.6006, -19.0535, 0.81 ) }
    dend_19 { pt3dadd( -18.5127, 82.9992, -19.2524, 1.18 ) }
    dend_19 { pt3dadd( -18.476, 83.9298, -19.3884, 1.18 ) }
    dend_19 { pt3dadd( -18.3715, 85.227, -19.5674, 1.62 ) }
    dend_19 { pt3dadd( -18.2962, 86.0572, -19.6705, 1.84 ) }
    dend_19 { pt3dadd( -18.2066, 86.9717, -19.7874, 1.84 ) }
    dend_19 { pt3dadd( -18.0916, 88.0117, -19.9093, 0.59 ) }
    dend_19 { pt3dadd( -18.0072, 88.7211, -19.9723, 0.59 ) }
    dend_19 { pt3dadd( -17.9141, 89.4808, -20.0658, 0.59 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 45/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -155.625, 96.205, -144.755, 0.44 ) }
    dend_14 { pt3dadd( -156.296, 96.3287, -144.894, 0.44 ) }
    dend_14 { pt3dadd( -156.371, 96.3431, -144.91, 0.44 ) }
    dend_14 { pt3dadd( -158.004, 96.6726, -145.277, 0.44 ) }
    dend_14 { pt3dadd( -159.861, 97.0879, -145.711, 0.44 ) }
    dend_14 { pt3dadd( -160.663, 97.2736, -145.916, 0.81 ) }
    dend_14 { pt3dadd( -160.724, 97.2887, -145.936, 0.81 ) }
    dend_14 { pt3dadd( -161.12, 97.3904, -146.077, 0.81 ) }
    dend_14 { pt3dadd( -161.191, 97.4082, -146.104, 0.81 ) }
    dend_14 { pt3dadd( -162.034, 97.6056, -146.436, 0.22 ) }
    dend_14 { pt3dadd( -165.636, 98.3785, -147.906, 0.22 ) }
    dend_14 { pt3dadd( -166.861, 98.6725, -148.412, 0.96 ) }
    dend_14 { pt3dadd( -167.743, 98.8992, -148.762, 0.96 ) }
    dend_14 { pt3dadd( -168.552, 99.1174, -149.075, 0.29 ) }
    dend_14 { pt3dadd( -169.518, 99.3916, -149.455, 0.29 ) }
    dend_14 { pt3dadd( -169.597, 99.4165, -149.486, 0.29 ) }
    dend_14 { pt3dadd( -170.663, 99.8656, -149.96, 0.29 ) }
    dend_14 { pt3dadd( -170.804, 99.9305, -150.021, 0.29 ) }
    dend_14 { pt3dadd( -171.934, 100.545, -150.618, 0.96 ) }
    dend_14 { pt3dadd( -171.993, 100.582, -150.654, 0.96 ) }
    dend_14 { pt3dadd( -172.624, 101.01, -151.053, 0.96 ) }
    dend_14 { pt3dadd( -173.431, 101.542, -151.672, 0.37 ) }
    dend_14 { pt3dadd( -173.801, 101.765, -152.001, 0.37 ) }
    dend_14 { pt3dadd( -173.913, 101.844, -152.116, 0.37 ) }
    dend_14 { pt3dadd( -174.395, 102.257, -152.705, 0.37 ) }
    dend_14 { pt3dadd( -174.443, 102.302, -152.766, 0.37 ) }
    dend_14 { pt3dadd( -175.265, 103.108, -153.811, 0.15 ) }
    dend_14 { pt3dadd( -175.31, 103.15, -153.86, 0.15 ) }
    dend_14 { pt3dadd( -175.423, 103.245, -153.963, 0.15 ) }
    dend_14 { pt3dadd( -175.511, 103.3, -154.023, 0.15 ) }
    dend_14 { pt3dadd( -176.449, 103.698, -154.585, 0.15 ) }
    dend_14 { pt3dadd( -177.197, 103.958, -154.986, 0.88 ) }
    dend_14 { pt3dadd( -177.483, 104.044, -155.121, 0.88 ) }
    dend_14 { pt3dadd( -178.171, 104.264, -155.454, 0.15 ) }
    dend_14 { pt3dadd( -179.187, 104.589, -155.966, 0.15 ) }
    dend_14 { pt3dadd( -180.28, 104.911, -156.555, 0.15 ) }
    dend_14 { pt3dadd( -181.199, 105.131, -157.011, 0.15 ) }
    dend_14 { pt3dadd( -181.363, 105.166, -157.084, 0.15 ) }
    dend_14 { pt3dadd( -182.217, 105.326, -157.416, 0.15 ) }
    dend_14 { pt3dadd( -182.364, 105.345, -157.471, 0.15 ) }
    dend_14 { pt3dadd( -183.383, 105.451, -157.813, 0.15 ) }
    dend_14 { pt3dadd( -184.715, 105.488, -158.19, 0.74 ) }
    dend_14 { pt3dadd( -184.864, 105.476, -158.233, 0.74 ) }
    dend_14 { pt3dadd( -185.65, 105.384, -158.47, 0.74 ) }
    dend_14 { pt3dadd( -186.739, 105.231, -158.816, 0.15 ) }
    dend_14 { pt3dadd( -186.823, 105.223, -158.844, 0.15 ) }
    dend_14 { pt3dadd( -187.465, 105.268, -159.092, 0.15 ) }
    dend_14 { pt3dadd( -187.69, 105.33, -159.208, 0.15 ) }
    dend_14 { pt3dadd( -188.031, 105.547, -159.457, 0.15 ) }
    dend_14 { pt3dadd( -188.292, 105.892, -159.751, 0.81 ) }
    dend_14 { pt3dadd( -188.32, 105.953, -159.793, 0.81 ) }
    dend_14 { pt3dadd( -188.668, 106.901, -160.449, 0.81 ) }
    dend_14 { pt3dadd( -188.692, 106.963, -160.494, 0.81 ) }
    dend_14 { pt3dadd( -189.333, 108.094, -161.699, 0.22 ) }
    dend_14 { pt3dadd( -189.377, 108.139, -161.762, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_14 { pt3dadd( -189.827, 108.433, -162.431, 0.22 ) }
    dend_14 { pt3dadd( -189.878, 108.456, -162.499, 0.22 ) }
    dend_14 { pt3dadd( -190.642, 108.719, -163.499, 0.44 ) }
    dend_14 { pt3dadd( -192.009, 109.1, -165.146, 1.11 ) }
    dend_14 { pt3dadd( -193.125, 109.354, -166.395, 1.11 ) }
    dend_14 { pt3dadd( -195.2, 109.762, -168.636, 0.52 ) }
    dend_14 { pt3dadd( -196.135, 109.914, -169.628, 0.52 ) }
    dend_14 { pt3dadd( -197.088, 110.057, -170.607, 0.29 ) }
    dend_14 { pt3dadd( -197.906, 110.168, -171.391, 0.29 ) }
    dend_14 { pt3dadd( -197.975, 110.176, -171.446, 0.29 ) }
    dend_14 { pt3dadd( -199.046, 110.275, -172.172, 0.29 ) }
    dend_14 { pt3dadd( -199.117, 110.28, -172.204, 0.29 ) }
    dend_14 { pt3dadd( -199.559, 110.346, -172.39, 0.52 ) }
    dend_14 { pt3dadd( -200.447, 110.539, -172.713, 0.52 ) }
    dend_14 { pt3dadd( -201.05, 110.681, -172.92, 0.52 ) }
    dend_14 { pt3dadd( -201.206, 110.712, -172.969, 0.52 ) }
    dend_14 { pt3dadd( -202.061, 110.862, -173.229, 0.29 ) }
    dend_14 { pt3dadd( -203.162, 110.987, -173.575, 0.29 ) }
    dend_14 { pt3dadd( -203.236, 110.993, -173.599, 0.29 ) }
    dend_14 { pt3dadd( -204.411, 111.004, -174.142, 0.66 ) }
    dend_14 { pt3dadd( -205.153, 111.018, -174.562, 0.66 ) }
    dend_14 { pt3dadd( -205.213, 111.02, -174.61, 0.66 ) }
    dend_14 { pt3dadd( -205.788, 111.048, -175.173, 0.22 ) }
    dend_14 { pt3dadd( -206.36, 111.098, -175.83, 0.22 ) }
    dend_14 { pt3dadd( -207.56, 111.269, -177.205, 0.22 ) }
    dend_14 { pt3dadd( -208.384, 111.435, -178.121, 0.52 ) }
    dend_14 { pt3dadd( -209.531, 111.698, -179.282, 0.88 ) }
    dend_14 { pt3dadd( -209.976, 111.798, -179.688, 1.18 ) }
    dend_14 { pt3dadd( -210.235, 111.853, -179.889, 1.18 ) }
    dend_14 { pt3dadd( -211.598, 112.087, -180.773, 1.18 ) }
    dend_14 { pt3dadd( -212.615, 112.253, -181.263, 1.18 ) }
    dend_14 { pt3dadd( -213.444, 112.357, -181.622, 0.29 ) }
    dend_14 { pt3dadd( -213.671, 112.384, -181.701, 0.29 ) }
    dend_14 { pt3dadd( -214.812, 112.514, -182.106, 0.29 ) }
    dend_14 { pt3dadd( -215.569, 112.613, -182.377, 0.44 ) }
    dend_14 { pt3dadd( -216.93, 112.857, -182.873, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 36/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -155.625, 96.205, -144.755, 0.29 ) }
    dend_11 { pt3dadd( -155.675, 96.0732, -144.807, 0.29 ) }
    dend_11 { pt3dadd( -156.116, 94.8208, -145.313, 0.29 ) }
    dend_11 { pt3dadd( -156.158, 94.6746, -145.387, 0.29 ) }
    dend_11 { pt3dadd( -156.381, 93.7323, -145.894, 0.29 ) }
    dend_11 { pt3dadd( -156.524, 92.9852, -146.356, 0.59 ) }
    dend_11 { pt3dadd( -156.64, 92.3067, -146.804, 0.81 ) }
    dend_11 { pt3dadd( -156.653, 92.2206, -146.865, 0.81 ) }
    dend_11 { pt3dadd( -156.78, 91.0525, -147.769, 0.81 ) }
    dend_11 { pt3dadd( -156.859, 90.5106, -148.217, 0.81 ) }
    dend_11 { pt3dadd( -157.131, 89.4336, -149.215, 0.29 ) }
    dend_11 { pt3dadd( -157.155, 89.3845, -149.265, 0.29 ) }
    dend_11 { pt3dadd( -157.43, 89.091, -149.724, 0.29 ) }
    dend_11 { pt3dadd( -157.589, 88.97, -149.953, 0.29 ) }
    dend_11 { pt3dadd( -158.015, 88.7118, -150.501, 0.81 ) }
    dend_11 { pt3dadd( -158.554, 88.3875, -151.18, 0.81 ) }
    dend_11 { pt3dadd( -159.054, 88.0733, -151.775, 0.81 ) }
    dend_11 { pt3dadd( -160.699, 86.9137, -153.795, 0.66 ) }
    dend_11 { pt3dadd( -161.065, 86.6245, -154.259, 0.59 ) }
    dend_11 { pt3dadd( -161.385, 86.3212, -154.681, 0.44 ) }
    dend_11 { pt3dadd( -161.745, 85.8687, -155.181, 0.44 ) }
    dend_11 { pt3dadd( -162.046, 85.3295, -155.563, 0.29 ) }
    dend_11 { pt3dadd( -162.079, 85.2548, -155.591, 0.29 ) }
    dend_11 { pt3dadd( -162.297, 84.8158, -155.632, 0.29 ) }
    dend_11 { pt3dadd( -162.422, 84.6036, -155.67, 0.29 ) }
    dend_11 { pt3dadd( -162.844, 83.9751, -155.828, 0.29 ) }
    dend_11 { pt3dadd( -163.59, 82.9455, -156.139, 0.29 ) }
    dend_11 { pt3dadd( -163.684, 82.8222, -156.182, 0.29 ) }
    dend_11 { pt3dadd( -164.942, 81.3086, -156.691, 0.29 ) }
    dend_11 { pt3dadd( -165.798, 80.331, -157.014, 0.81 ) }
    dend_11 { pt3dadd( -166.338, 79.7439, -157.212, 1.03 ) }
    dend_11 { pt3dadd( -166.389, 79.693, -157.23, 1.03 ) }
    dend_11 { pt3dadd( -167.038, 79.0714, -157.479, 1.03 ) }
    dend_11 { pt3dadd( -167.864, 78.3154, -157.675, 0.22 ) }
    dend_11 { pt3dadd( -168.751, 77.5602, -157.737, 0.22 ) }
    dend_11 { pt3dadd( -168.81, 77.5145, -157.736, 0.22 ) }
    dend_11 { pt3dadd( -169.963, 76.6383, -157.59, 0.22 ) }
    dend_11 { pt3dadd( -170.022, 76.5947, -157.579, 0.22 ) }
    dend_11 { pt3dadd( -171.292, 75.7428, -157.361, 1.03 ) }
    dend_11 { pt3dadd( -171.986, 75.3176, -157.279, 1.03 ) }
    dend_11 { pt3dadd( -172.749, 74.8958, -157.193, 0.66 ) }
    dend_11 { pt3dadd( -174.285, 74.0595, -157.009, 0.22 ) }
    dend_11 { pt3dadd( -174.358, 74.0201, -157.0, 0.22 ) }
    dend_11 { pt3dadd( -176.022, 73.1376, -156.849, 0.22 ) }
    dend_11 { pt3dadd( -176.745, 72.77, -156.861, 1.4 ) }
    dend_11 { pt3dadd( -176.821, 72.7352, -156.863, 1.4 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -28.6289, 48.133, -14.4855, 0.74 ) }
    dend_9 { pt3dadd( -28.2621, 49.4953, -17.1982, 0.74 ) }
    dend_9 { pt3dadd( -27.9936, 50.7659, -19.6247, 0.37 ) }
    dend_9 { pt3dadd( -27.9165, 51.208, -20.4426, 0.88 ) }
    dend_9 { pt3dadd( -27.7508, 52.1833, -22.3124, 1.18 ) }
    dend_9 { pt3dadd( -27.5274, 53.5501, -24.9907, 0.52 ) }
    dend_9 { pt3dadd( -27.5243, 53.5821, -25.0555, 0.52 ) }
    dend_9 { pt3dadd( -27.5859, 54.0002, -26.076, 0.52 ) }
    dend_9 { pt3dadd( -27.619, 54.0525, -26.2287, 0.52 ) }
    dend_9 { pt3dadd( -28.3491, 54.4507, -28.0996, 0.52 ) }
    dend_9 { pt3dadd( -28.3893, 54.4563, -28.1589, 0.52 ) }
    dend_9 { pt3dadd( -29.266, 54.4311, -29.3099, 0.52 ) }
    dend_9 { pt3dadd( -29.7584, 54.3946, -30.0867, 0.74 ) }
    dend_9 { pt3dadd( -30.3768, 54.3122, -31.1581, 0.74 ) }
    dend_9 { pt3dadd( -31.3836, 54.156, -32.8853, 1.25 ) }
    dend_9 { pt3dadd( -31.6984, 54.1076, -33.4753, 1.25 ) }
    dend_9 { pt3dadd( -32.4724, 53.8942, -35.4608, 1.25 ) }
    dend_9 { pt3dadd( -33.0602, 53.5914, -37.5434, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_9 { pt3dadd( -33.073, 53.5765, -37.623, 0.66 ) }
    dend_9 { pt3dadd( -33.1446, 53.3453, -38.6651, 0.59 ) }
    dend_9 { pt3dadd( -33.2725, 52.6912, -41.2768, 0.59 ) }
    dend_9 { pt3dadd( -33.3686, 52.0331, -43.9674, 0.96 ) }
    dend_9 { pt3dadd( -33.4053, 51.8449, -44.7825, 0.96 ) }
    dend_9 { pt3dadd( -33.5644, 51.309, -47.2603, 0.44 ) }
    dend_9 { pt3dadd( -33.7804, 50.792, -49.8988, 0.29 ) }
    dend_9 { pt3dadd( -33.9097, 50.5539, -51.229, 0.29 ) }
    dend_9 { pt3dadd( -34.4221, 50.1294, -54.0028, 1.03 ) }
    dend_9 { pt3dadd( -34.7278, 50.0462, -55.0231, 0.44 ) }
    dend_9 { pt3dadd( -35.1464, 49.9991, -55.9611, 0.44 ) }
    dend_9 { pt3dadd( -35.2608, 49.9939, -56.1553, 0.44 ) }
    dend_9 { pt3dadd( -35.5268, 49.9924, -56.6105, 0.44 ) }
    dend_9 { pt3dadd( -36.1246, 50.0951, -58.4149, 0.44 ) }
    dend_9 { pt3dadd( -36.1633, 50.1066, -58.562, 0.44 ) }
    dend_9 { pt3dadd( -36.5775, 50.2832, -60.2868, 0.74 ) }
    dend_9 { pt3dadd( -37.0513, 50.6639, -62.8545, 0.74 ) }
    dend_9 { pt3dadd( -37.3797, 51.1013, -65.1234, 1.11 ) }
    dend_9 { pt3dadd( -38.0469, 52.4437, -70.7587, 0.81 ) }
    dend_9 { pt3dadd( -38.0552, 52.4835, -70.9072, 0.81 ) }
    dend_9 { pt3dadd( -38.0684, 52.8223, -72.021, 0.81 ) }
    dend_9 { pt3dadd( -37.9198, 54.1743, -75.9547, 0.88 ) }
    dend_9 { pt3dadd( -37.7464, 55.2986, -78.842, 0.29 ) }
    dend_9 { pt3dadd( -37.6638, 55.6368, -79.613, 0.29 ) }
    dend_9 { pt3dadd( -37.2943, 57.0231, -82.2972, 0.29 ) }
    dend_9 { pt3dadd( -37.1734, 57.5, -83.1578, 0.29 ) }
    dend_9 { pt3dadd( -37.1645, 57.5317, -83.2106, 0.29 ) }
    dend_9 { pt3dadd( -37.1286, 57.7281, -83.4727, 0.44 ) }
    dend_9 { pt3dadd( -37.1237, 57.7739, -83.5292, 0.44 ) }
    dend_9 { pt3dadd( -37.1347, 59.0905, -85.1327, 0.44 ) }
    dend_9 { pt3dadd( -37.3157, 59.9109, -86.0272, 1.11 ) }
    dend_9 { pt3dadd( -37.6071, 61.3953, -87.8851, 0.29 ) }
    dend_9 { pt3dadd( -37.6597, 61.7192, -88.309, 0.29 ) }
    dend_9 { pt3dadd( -37.6784, 61.8512, -88.4846, 0.29 ) }
    dend_9 { pt3dadd( -37.7185, 62.1707, -88.9126, 0.29 ) }
    dend_9 { pt3dadd( -37.7616, 62.7144, -89.6404, 0.29 ) }
    dend_9 { pt3dadd( -37.731, 64.4391, -92.1516, 0.29 ) }
    dend_9 { pt3dadd( -37.7349, 64.4794, -92.2112, 0.29 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 38/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -28.6289, 48.133, -14.4855, 0.52 ) }
    dend_8 { pt3dadd( -28.7821, 48.2203, -14.6805, 0.52 ) }
    dend_8 { pt3dadd( -29.7323, 48.81, -15.8111, 0.52 ) }
    dend_8 { pt3dadd( -29.789, 48.8462, -15.8691, 0.52 ) }
    dend_8 { pt3dadd( -30.8434, 49.5317, -16.8559, 0.44 ) }
    dend_8 { pt3dadd( -30.9147, 49.5765, -16.9125, 0.44 ) }
    dend_8 { pt3dadd( -31.8283, 50.1397, -17.5487, 0.44 ) }
    dend_8 { pt3dadd( -31.9706, 50.2309, -17.6374, 0.44 ) }
    dend_8 { pt3dadd( -32.6256, 50.612, -17.9841, 0.44 ) }
    dend_8 { pt3dadd( -32.7984, 50.6934, -18.062, 0.88 ) }
    dend_8 { pt3dadd( -34.0479, 51.0837, -18.4953, 0.88 ) }
    dend_8 { pt3dadd( -35.0817, 51.264, -18.854, 0.88 ) }
    dend_8 { pt3dadd( -35.1643, 51.2691, -18.8819, 0.88 ) }
    dend_8 { pt3dadd( -36.4788, 51.3135, -19.312, 1.55 ) }
    dend_8 { pt3dadd( -37.4475, 51.3347, -19.6287, 1.77 ) }
    dend_8 { pt3dadd( -38.8674, 51.3583, -19.9713, 0.37 ) }
    dend_8 { pt3dadd( -39.9277, 51.3779, -20.1604, 0.29 ) }
    dend_8 { pt3dadd( -40.9641, 51.4446, -20.2969, 0.81 ) }
    dend_8 { pt3dadd( -41.8616, 51.5524, -20.3943, 0.88 ) }
    dend_8 { pt3dadd( -42.4618, 51.6575, -20.4536, 0.88 ) }
    dend_8 { pt3dadd( -44.4799, 52.0039, -20.6683, 0.59 ) }
    dend_8 { pt3dadd( -45.093, 52.1043, -20.7607, 0.59 ) }
    dend_8 { pt3dadd( -45.9001, 52.143, -20.8445, 0.22 ) }
    dend_8 { pt3dadd( -47.0006, 52.1155, -20.9682, 0.22 ) }
    dend_8 { pt3dadd( -47.8782, 52.067, -21.0922, 0.22 ) }
    dend_8 { pt3dadd( -49.3967, 51.9497, -21.227, 1.4 ) }
    dend_8 { pt3dadd( -50.3383, 51.8615, -21.3044, 1.84 ) }
    dend_8 { pt3dadd( -52.5319, 51.6302, -21.3819, 0.29 ) }
    dend_8 { pt3dadd( -54.1496, 51.4401, -21.4207, 0.29 ) }
    dend_8 { pt3dadd( -55.7013, 51.2586, -21.422, 0.29 ) }
    dend_8 { pt3dadd( -57.9191, 50.9888, -21.4104, 0.88 ) }
    dend_8 { pt3dadd( -58.9846, 50.8657, -21.4356, 1.03 ) }
    dend_8 { pt3dadd( -59.0589, 50.8568, -21.4366, 1.03 ) }
    dend_8 { pt3dadd( -60.3828, 50.6847, -21.4771, 0.59 ) }
    dend_8 { pt3dadd( -61.5541, 50.4702, -21.4883, 0.44 ) }
    dend_8 { pt3dadd( -62.2184, 50.3322, -21.5009, 0.29 ) }
    dend_8 { pt3dadd( -63.5111, 50.0065, -21.6155, 0.29 ) }
    dend_8 { pt3dadd( -65.1885, 49.5199, -21.6816, 0.29 ) }
    dend_8 { pt3dadd( -65.2828, 49.4849, -21.6786, 0.29 ) }
    dend_8 { pt3dadd( -65.8532, 49.1729, -21.5802, 0.29 ) }
    dend_8 { pt3dadd( -65.951, 49.0261, -21.504, 0.29 ) }
    dend_8 { pt3dadd( -66.4891, 47.9409, -20.8944, 0.29 ) }
    dend_8 { pt3dadd( -66.5281, 47.8554, -20.8524, 0.29 ) }
    dend_8 { pt3dadd( -67.0166, 47.0164, -20.439, 0.66 ) }
    dend_8 { pt3dadd( -67.3357, 46.59, -20.2319, 0.66 ) }
    dend_8 { pt3dadd( -69.0678, 44.7545, -19.4317, 0.37 ) }
    dend_8 { pt3dadd( -70.0329, 43.8984, -19.1067, 0.37 ) }
    dend_8 { pt3dadd( -71.0068, 43.1518, -18.8661, 0.37 ) }
    dend_8 { pt3dadd( -72.7256, 41.9608, -18.4316, 1.11 ) }
    dend_8 { pt3dadd( -73.5925, 41.4056, -18.2459, 1.47 ) }
    dend_8 { pt3dadd( -74.7709, 40.6845, -18.0138, 0.81 ) }
    dend_8 { pt3dadd( -75.9745, 39.9933, -17.7725, 0.44 ) }
    dend_8 { pt3dadd( -77.562, 39.0898, -17.3603, 0.44 ) }
    dend_8 { pt3dadd( -80.3798, 37.5266, -16.5191, 1.4 ) }
    dend_8 { pt3dadd( -81.3896, 36.9529, -16.2001, 1.69 ) }
    dend_8 { pt3dadd( -81.4623, 36.9105, -16.1728, 1.69 ) }
    dend_8 { pt3dadd( -83.0631, 35.8837, -15.4695, 0.29 ) }
    dend_8 { pt3dadd( -83.4613, 35.5975, -15.297, 0.29 ) }
    dend_8 { pt3dadd( -83.5985, 35.4763, -15.2433, 0.29 ) }
    dend_8 { pt3dadd( -84.0851, 34.7859, -15.1756, 0.29 ) }
    dend_8 { pt3dadd( -84.1982, 34.6293, -15.1684, 0.29 ) }
    dend_8 { pt3dadd( -84.9709, 34.0276, -15.323, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_8 { pt3dadd( -85.7908, 33.8299, -15.6799, 0.29 ) }
    dend_8 { pt3dadd( -86.0578, 33.7971, -15.7727, 0.29 ) }
    dend_8 { pt3dadd( -86.4893, 33.7421, -15.9149, 0.29 ) }
    dend_8 { pt3dadd( -87.7638, 33.5856, -16.3358, 0.29 ) }
    dend_8 { pt3dadd( -89.1334, 33.4151, -16.7986, 0.29 ) }
    dend_8 { pt3dadd( -90.2844, 33.2472, -17.2079, 1.4 ) }
    dend_8 { pt3dadd( -91.7417, 32.9364, -17.7602, 1.77 ) }
    dend_8 { pt3dadd( -92.7268, 32.6379, -18.1601, 1.77 ) }
    dend_8 { pt3dadd( -93.5617, 32.2655, -18.5303, 0.74 ) }
    dend_8 { pt3dadd( -94.4366, 31.6679, -18.9321, 0.59 ) }
    dend_8 { pt3dadd( -95.1184, 31.0138, -19.2555, 0.44 ) }
    dend_8 { pt3dadd( -95.6564, 30.3908, -19.5195, 0.44 ) }
    dend_8 { pt3dadd( -95.9071, 30.0851, -19.6169, 0.44 ) }
    dend_8 { pt3dadd( -96.7505, 29.061, -19.8049, 0.44 ) }
    dend_8 { pt3dadd( -97.3984, 28.3138, -19.8608, 0.44 ) }
    dend_8 { pt3dadd( -98.4895, 27.2122, -19.8409, 0.44 ) }
    dend_8 { pt3dadd( -99.1911, 26.7254, -19.7873, 0.74 ) }
    dend_8 { pt3dadd( -100.969, 26.2075, -19.3789, 0.29 ) }
    dend_8 { pt3dadd( -101.065, 26.2002, -19.3495, 0.29 ) }
    dend_8 { pt3dadd( -101.567, 26.251, -19.2041, 0.29 ) }
    dend_8 { pt3dadd( -102.009, 26.354, -19.0825, 0.29 ) }
    dend_8 { pt3dadd( -103.03, 26.6708, -18.8312, 0.29 ) }
    dend_8 { pt3dadd( -105.574, 27.3641, -18.2758, 0.29 ) }
    dend_8 { pt3dadd( -105.659, 27.3842, -18.2632, 0.29 ) }
    dend_8 { pt3dadd( -107.566, 27.7053, -18.0491, 0.29 ) }
    dend_8 { pt3dadd( -108.409, 27.797, -17.9906, 1.47 ) }
    dend_8 { pt3dadd( -109.325, 27.8469, -17.9737, 2.06 ) }
    dend_8 { pt3dadd( -111.656, 27.8438, -18.089, 1.62 ) }
    dend_8 { pt3dadd( -112.749, 27.8003, -18.2553, 0.59 ) }
    dend_8 { pt3dadd( -113.435, 27.751, -18.3738, 0.59 ) }
    dend_8 { pt3dadd( -114.311, 27.6357, -18.5667, 0.81 ) }
    dend_8 { pt3dadd( -114.759, 27.5577, -18.7024, 0.81 ) }
    dend_8 { pt3dadd( -115.205, 27.4703, -18.8402, 0.22 ) }
    dend_8 { pt3dadd( -115.919, 27.3361, -19.1301, 0.22 ) }
    dend_8 { pt3dadd( -116.486, 27.2582, -19.3097, 0.22 ) }
    dend_8 { pt3dadd( -117.507, 27.2215, -19.4657, 0.22 ) }
    dend_8 { pt3dadd( -117.582, 27.2238, -19.4695, 0.22 ) }
    dend_8 { pt3dadd( -119.824, 27.3868, -19.4798, 0.22 ) }
    dend_8 { pt3dadd( -120.596, 27.4705, -19.505, 1.11 ) }
    dend_8 { pt3dadd( -121.479, 27.5931, -19.5902, 1.55 ) }
    dend_8 { pt3dadd( -122.505, 27.7261, -19.7675, 0.29 ) }
    dend_8 { pt3dadd( -124.457, 27.8754, -20.2236, 0.29 ) }
    dend_8 { pt3dadd( -124.551, 27.8721, -20.2605, 0.29 ) }
    dend_8 { pt3dadd( -125.652, 27.6766, -20.8954, 0.88 ) }
    dend_8 { pt3dadd( -126.86, 27.3062, -21.6483, 1.69 ) }
    dend_8 { pt3dadd( -127.652, 26.987, -22.1346, 1.4 ) }
    dend_8 { pt3dadd( -128.435, 26.6238, -22.5366, 0.29 ) }
    dend_8 { pt3dadd( -129.962, 25.8911, -23.1034, 0.29 ) }
    dend_8 { pt3dadd( -131.03, 25.4098, -23.3798, 1.11 ) }
    dend_8 { pt3dadd( -131.757, 25.1295, -23.4682, 1.11 ) }
    dend_8 { pt3dadd( -133.033, 24.76, -23.4784, 0.88 ) }
    dend_8 { pt3dadd( -134.822, 24.3977, -23.371, 0.52 ) }
    dend_8 { pt3dadd( -135.739, 24.2839, -23.2736, 0.37 ) }
    dend_8 { pt3dadd( -136.842, 24.2037, -23.0404, 0.37 ) }
    dend_8 { pt3dadd( -138.413, 24.137, -22.6485, 0.37 ) }
    dend_8 { pt3dadd( -140.555, 24.081, -22.0927, 0.37 ) }
    dend_8 { pt3dadd( -140.641, 24.0758, -22.0732, 0.37 ) }
    dend_8 { pt3dadd( -141.114, 24.0292, -21.9426, 0.74 ) }
    dend_8 { pt3dadd( -143.013, 23.7343, -21.216, 0.15 ) }
    dend_8 { pt3dadd( -143.666, 23.6006, -20.9151, 0.15 ) }
    dend_8 { pt3dadd( -143.74, 23.5782, -20.8724, 0.15 ) }
    dend_8 { pt3dadd( -145.088, 23.1458, -20.0878, 0.15 ) }
    dend_8 { pt3dadd( -147.061, 22.6609, -19.0872, 0.15 ) }
    dend_8 { pt3dadd( -147.14, 22.6469, -19.0522, 0.15 ) }
    dend_8 { pt3dadd( -147.932, 22.5639, -18.7604, 0.15 ) }
    dend_8 { pt3dadd( -150.606, 22.4174, -17.845, 0.15 ) }
    dend_8 { pt3dadd( -151.938, 22.4288, -17.4608, 0.15 ) }
    dend_8 { pt3dadd( -153.13, 22.5401, -17.1953, 0.59 ) }
    dend_8 { pt3dadd( -153.617, 22.5911, -17.1553, 0.81 ) }
    dend_8 { pt3dadd( -153.717, 22.6038, -17.1506, 0.81 ) }
    dend_8 { pt3dadd( -153.988, 22.6628, -17.1671, 0.81 ) }
    dend_8 { pt3dadd( -154.411, 22.8143, -17.285, 0.15 ) }
    dend_8 { pt3dadd( -154.492, 22.8452, -17.305, 0.15 ) }
    dend_8 { pt3dadd( -155.204, 23.0931, -17.4599, 0.15 ) }
    dend_8 { pt3dadd( -155.287, 23.1225, -17.4766, 0.15 ) }
    dend_8 { pt3dadd( -156.957, 23.7542, -17.8012, 0.15 ) }
    dend_8 { pt3dadd( -168.928, 20.6503, -16.2437, 0.15 ) }
    dend_8 { pt3dadd( -180.687, 16.9214, -14.4, 0.15 ) }
    dend_8 { pt3dadd( -192.654, 13.6509, -13.1678, 0.15 ) }
    dend_8 { pt3dadd( -204.412, 10.5043, -10.4813, 0.15 ) }
    dend_8 { pt3dadd( -216.575, 8.48961, -8.69482, 0.15 ) }
    dend_8 { pt3dadd( -228.604, 5.43036, -9.88115, 0.15 ) }
    dend_8 { pt3dadd( -240.16, 2.315, -13.3943, 0.15 ) }
    dend_8 { pt3dadd( -251.213, -2.66038, -16.5034, 0.15 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 84/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -254.544, -115.625, -31.0873, 0.29 ) }
    dend_72 { pt3dadd( -263.501, -117.138, -34.2337, 0.29 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 86/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -254.544, -115.625, -31.0873, 0.29 ) }
    dend_71 { pt3dadd( -262.1, -119.545, -35.278, 0.29 ) }
    dend_71 { pt3dadd( -270.351, -122.896, -38.5528, 0.29 ) }
    dend_71 { pt3dadd( -278.365, -127.434, -40.9621, 0.29 ) }
    dend_71 { pt3dadd( -286.908, -131.361, -42.4442, 0.29 ) }
    dend_71 { pt3dadd( -295.09, -136.135, -43.6376, 0.29 ) }
    dend_71 { pt3dadd( -302.752, -141.853, -44.3865, 0.29 ) }
    dend_71 { pt3dadd( -310.744, -146.989, -45.4668, 0.29 ) }
    dend_71 { pt3dadd( -318.442, -152.603, -46.4583, 0.29 ) }
    dend_71 { pt3dadd( -325.278, -159.215, -47.8391, 0.29 ) }
    dend_71 { pt3dadd( -332.334, -165.773, -46.9775, 0.29 ) }
    dend_71 { pt3dadd( -340.02, -171.506, -46.0471, 0.29 ) }
    dend_71 { pt3dadd( -346.753, -178.074, -43.5806, 0.29 ) }
    dend_71 { pt3dadd( -353.334, -185.051, -42.0302, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_71 { pt3dadd( -358.125, -193.252, -39.5113, 0.29 ) }
    dend_71 { pt3dadd( -362.164, -201.238, -35.3307, 0.29 ) }
    dend_71 { pt3dadd( -368.138, -208.124, -31.7856, 0.29 ) }
    dend_71 { pt3dadd( -373.397, -215.16, -27.3897, 0.29 ) }
    dend_71 { pt3dadd( -378.026, -222.428, -22.611, 0.29 ) }
    dend_71 { pt3dadd( -382.61, -230.455, -19.2123, 0.29 ) }
    dend_71 { pt3dadd( -387.252, -238.274, -15.4236, 0.29 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 7/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -239.465, -204.262, 42.3925, 0.29 ) }
    dend_66 { pt3dadd( -247.533, -207.101, 43.9758, 0.29 ) }
    dend_66 { pt3dadd( -256.028, -208.739, 44.5458, 0.29 ) }
    dend_66 { pt3dadd( -264.51, -210.547, 44.6927, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 11/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -239.465, -204.262, 42.3925, 0.29 ) }
    dend_65 { pt3dadd( -246.815, -206.834, 42.9538, 0.29 ) }
    dend_65 { pt3dadd( -254.244, -208.958, 44.0037, 0.29 ) }
    dend_65 { pt3dadd( -261.646, -209.433, 46.3414, 0.29 ) }
    dend_65 { pt3dadd( -268.74, -210.303, 49.4264, 0.29 ) }
    dend_65 { pt3dadd( -276.031, -209.766, 52.0672, 0.29 ) }
    dend_65 { pt3dadd( -283.093, -207.54, 54.494, 0.29 ) }
    dend_65 { pt3dadd( -289.41, -204.417, 57.8545, 0.29 ) }
    dend_65 { pt3dadd( -294.994, -199.742, 60.8302, 0.29 ) }
    dend_65 { pt3dadd( -300.677, -195.089, 63.6503, 0.29 ) }
    dend_65 { pt3dadd( -306.419, -191.025, 67.103, 0.29 ) }
    dend_65 { pt3dadd( -311.553, -185.598, 69.6993, 0.29 ) }
    dend_65 { pt3dadd( -315.974, -179.074, 71.0424, 0.29 ) }
    dend_65 { pt3dadd( -320.848, -172.829, 72.0259, 0.29 ) }
    dend_65 { pt3dadd( -324.972, -165.918, 71.9641, 0.29 ) }
    dend_65 { pt3dadd( -328.665, -158.771, 71.207, 0.29 ) }
    dend_65 { pt3dadd( -333.06, -152.582, 68.5413, 0.29 ) }
    dend_65 { pt3dadd( -336.748, -145.548, 67.0152, 0.29 ) }
    dend_65 { pt3dadd( -339.634, -138.03, 66.028, 0.29 ) }
    dend_65 { pt3dadd( -342.443, -130.456, 65.2946, 0.29 ) }
    dend_65 { pt3dadd( -343.933, -122.467, 64.9108, 0.29 ) }
    dend_65 { pt3dadd( -344.869, -114.526, 66.1653, 0.29 ) }
    dend_65 { pt3dadd( -344.795, -106.485, 67.1762, 0.29 ) }
    dend_65 { pt3dadd( -343.874, -99.0772, 70.0905, 0.29 ) }
    dend_65 { pt3dadd( -343.371, -91.9176, 73.5956, 0.29 ) }
    dend_65 { pt3dadd( -343.295, -84.4668, 76.5586, 0.29 ) }
    dend_65 { pt3dadd( -343.621, -76.5687, 78.2304, 0.29 ) }
    dend_65 { pt3dadd( -345.56, -69.2078, 80.773, 0.29 ) }
    dend_65 { pt3dadd( -348.942, -62.0854, 82.2999, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 40/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -240.295, -256.114, 20.2356, 0.29 ) }
    dend_61 { pt3dadd( -242.809, -266.813, 19.4804, 0.29 ) }
    dend_61 { pt3dadd( -244.329, -277.539, 17.5024, 0.29 ) }
    dend_61 { pt3dadd( -247.828, -287.581, 14.8982, 0.29 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 44/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -240.295, -256.114, 20.2356, 0.29 ) }
    dend_60 { pt3dadd( -246.41, -263.006, 18.2826, 0.29 ) }
    dend_60 { pt3dadd( -252.175, -270.119, 16.0128, 0.29 ) }
    dend_60 { pt3dadd( -258.168, -277.17, 14.2069, 0.29 ) }
    dend_60 { pt3dadd( -264.336, -284.222, 13.1465, 0.29 ) }
    dend_60 { pt3dadd( -270.687, -291.13, 12.337, 0.29 ) }
    dend_60 { pt3dadd( -277.239, -297.591, 10.4706, 0.29 ) }
    dend_60 { pt3dadd( -282.424, -305.216, 8.31187, 0.29 ) }
    dend_60 { pt3dadd( -286.637, -313.274, 5.54684, 0.29 ) }
    dend_60 { pt3dadd( -291.124, -321.252, 3.01148, 0.29 ) }
    dend_60 { pt3dadd( -295.379, -328.779, -0.838223, 0.29 ) }
    dend_60 { pt3dadd( -299.61, -336.109, -5.04026, 0.29 ) }
    dend_60 { pt3dadd( -302.782, -344.786, -7.48135, 0.29 ) }
    dend_60 { pt3dadd( -306.346, -353.144, -10.3506, 0.29 ) }
    dend_60 { pt3dadd( -309.074, -362.121, -12.2889, 0.29 ) }
    dend_60 { pt3dadd( -312.199, -371.155, -12.9956, 0.29 ) }
    dend_60 { pt3dadd( -314.241, -380.553, -12.9348, 0.29 ) }
    dend_60 { pt3dadd( -315.274, -390.117, -13.4502, 0.29 ) }
    dend_60 { pt3dadd( -316.508, -399.651, -12.8752, 0.29 ) }
    dend_60 { pt3dadd( -316.33, -409.267, -12.2359, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 64/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 128.489, 191.934, -60.945, 0.44 ) }
    dend_26 { pt3dadd( 129.84, 193.714, -62.9336, 0.44 ) }
    dend_26 { pt3dadd( 130.452, 194.481, -63.6627, 0.44 ) }
    dend_26 { pt3dadd( 130.559, 194.585, -63.7758, 0.44 ) }
    dend_26 { pt3dadd( 131.13, 194.978, -64.3802, 0.52 ) }
    dend_26 { pt3dadd( 132.462, 195.904, -65.7061, 0.81 ) }
    dend_26 { pt3dadd( 132.576, 195.984, -65.8161, 0.81 ) }
    dend_26 { pt3dadd( 133.61, 196.719, -66.7805, 0.81 ) }
    dend_26 { pt3dadd( 135.474, 198.016, -68.4427, 0.15 ) }
    dend_26 { pt3dadd( 138.181, 199.899, -70.7619, 0.22 ) }
    dend_26 { pt3dadd( 139.517, 200.844, -71.7738, 0.22 ) }
    dend_26 { pt3dadd( 139.653, 200.947, -71.8649, 0.22 ) }
    dend_26 { pt3dadd( 140.56, 201.686, -72.425, 0.22 ) }
    dend_26 { pt3dadd( 140.686, 201.8, -72.4805, 0.22 ) }
    dend_26 { pt3dadd( 142.446, 203.703, -72.6047, 0.81 ) }
    dend_26 { pt3dadd( 143.697, 205.183, -72.3564, 0.22 ) }
    dend_26 { pt3dadd( 144.346, 205.919, -72.2317, 0.22 ) }
    dend_26 { pt3dadd( 144.628, 206.251, -72.2046, 0.22 ) }
    dend_26 { pt3dadd( 146.062, 208.016, -72.1633, 0.22 ) }
    dend_26 { pt3dadd( 146.118, 208.094, -72.1658, 0.22 ) }
    dend_26 { pt3dadd( 146.676, 209.043, -72.2467, 0.52 ) }
    dend_26 { pt3dadd( 146.975, 209.586, -72.3788, 0.52 ) }
    dend_26 { pt3dadd( 147.798, 211.221, -72.8811, 0.29 ) }
    dend_26 { pt3dadd( 148.061, 211.85, -73.0692, 0.74 ) }
    dend_26 { pt3dadd( 148.083, 211.917, -73.0865, 0.74 ) }
    dend_26 { pt3dadd( 148.387, 212.836, -73.2142, 0.74 ) }
    dend_26 { pt3dadd( 148.415, 212.93, -73.2171, 0.74 ) }
    dend_26 { pt3dadd( 148.595, 213.549, -73.1924, 0.15 ) }
    dend_26 { pt3dadd( 149.141, 215.652, -72.9698, 0.15 ) }
    dend_26 { pt3dadd( 149.346, 216.403, -72.8815, 1.11 ) }
    dend_26 { pt3dadd( 149.637, 217.43, -72.7531, 1.25 ) }
    dend_26 { pt3dadd( 149.833, 218.098, -72.6649, 0.15 ) }
    dend_26 { pt3dadd( 150.105, 219.15, -72.477, 0.15 ) }
    dend_26 { pt3dadd( 150.202, 219.484, -72.392, 0.15 ) }
    dend_26 { pt3dadd( 150.533, 220.472, -72.1275, 0.52 ) }
    dend_26 { pt3dadd( 150.934, 221.54, -71.8444, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_26 { pt3dadd( 150.967, 221.614, -71.8199, 0.88 ) }
    dend_26 { pt3dadd( 151.717, 223.078, -71.2733, 0.15 ) }
    dend_26 { pt3dadd( 153.094, 225.516, -70.2906, 0.15 ) }
    dend_26 { pt3dadd( 153.566, 226.303, -69.9624, 0.15 ) }
    dend_26 { pt3dadd( 153.615, 226.38, -69.9322, 0.15 ) }
    dend_26 { pt3dadd( 154.41, 227.519, -69.5135, 1.69 ) }
    dend_26 { pt3dadd( 155.222, 228.617, -69.1649, 0.22 ) }
    dend_26 { pt3dadd( 155.774, 229.275, -69.0585, 0.22 ) }
    dend_26 { pt3dadd( 155.851, 229.365, -69.0545, 0.22 ) }
    dend_26 { pt3dadd( 156.462, 230.088, -69.0574, 0.52 ) }
    dend_26 { pt3dadd( 156.849, 230.52, -69.1217, 0.52 ) }
    dend_26 { pt3dadd( 156.904, 230.58, -69.1412, 0.52 ) }
    dend_26 { pt3dadd( 157.832, 231.542, -69.3858, 0.15 ) }
    dend_26 { pt3dadd( 158.869, 232.681, -69.5491, 0.15 ) }
    dend_26 { pt3dadd( 158.925, 232.744, -69.5459, 0.15 ) }
    dend_26 { pt3dadd( 159.423, 233.302, -69.3904, 0.81 ) }
    dend_26 { pt3dadd( 159.663, 233.56, -69.2731, 0.81 ) }
    dend_26 { pt3dadd( 160.835, 234.805, -68.5175, 0.15 ) }
    dend_26 { pt3dadd( 160.888, 234.855, -68.4772, 0.15 ) }
    dend_26 { pt3dadd( 161.473, 235.343, -68.0592, 0.15 ) }
    dend_26 { pt3dadd( 161.568, 235.414, -67.9978, 0.15 ) }
    dend_26 { pt3dadd( 162.195, 235.863, -67.6201, 0.44 ) }
    dend_26 { pt3dadd( 162.766, 236.239, -67.3321, 0.15 ) }
    dend_26 { pt3dadd( 164.282, 237.213, -66.8866, 0.15 ) }
    dend_26 { pt3dadd( 164.428, 237.313, -66.8548, 0.74 ) }
    dend_26 { pt3dadd( 165.394, 237.977, -66.7059, 0.15 ) }
    dend_26 { pt3dadd( 165.609, 238.122, -66.682, 0.15 ) }
    dend_26 { pt3dadd( 166.074, 238.456, -66.6584, 0.66 ) }
    dend_26 { pt3dadd( 167.64, 239.618, -66.6664, 0.15 ) }
    dend_26 { pt3dadd( 167.705, 239.67, -66.6727, 0.15 ) }
    dend_26 { pt3dadd( 169.01, 240.701, -66.8175, 0.15 ) }
    dend_26 { pt3dadd( 169.139, 240.806, -66.8365, 0.15 ) }
    dend_26 { pt3dadd( 170.336, 241.745, -66.9918, 0.15 ) }
    dend_26 { pt3dadd( 170.41, 241.804, -66.9987, 0.15 ) }
    dend_26 { pt3dadd( 171.424, 242.581, -66.9256, 1.03 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 35/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 128.489, 191.934, -60.945, 0.29 ) }
    dend_23 { pt3dadd( 131.51, 191.58, -63.2262, 0.29 ) }
    dend_23 { pt3dadd( 132.386, 191.478, -63.8874, 0.29 ) }
    dend_23 { pt3dadd( 132.449, 191.471, -63.9349, 0.29 ) }
    dend_23 { pt3dadd( 133.541, 191.343, -64.7594, 0.29 ) }
    dend_23 { pt3dadd( 133.754, 191.318, -64.9202, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 41/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -17.9141, 89.4808, -20.0658, 0.37 ) }
    dend_21 { pt3dadd( -18.3133, 90.4221, -22.5921, 0.37 ) }
    dend_21 { pt3dadd( -18.5003, 90.8047, -23.5557, 0.37 ) }
    dend_21 { pt3dadd( -18.5142, 90.834, -23.6216, 0.37 ) }
    dend_21 { pt3dadd( -18.7873, 91.4192, -24.8486, 0.66 ) }
    dend_21 { pt3dadd( -19.0587, 92.07, -26.0272, 0.66 ) }
    dend_21 { pt3dadd( -19.0775, 92.1214, -26.1071, 0.66 ) }
    dend_21 { pt3dadd( -19.5896, 93.5859, -27.7041, 0.22 ) }
    dend_21 { pt3dadd( -19.6562, 94.0752, -28.0823, 0.22 ) }
    dend_21 { pt3dadd( -19.6539, 94.1678, -28.1364, 0.22 ) }
    dend_21 { pt3dadd( -19.4789, 95.1534, -28.5854, 0.74 ) }
    dend_21 { pt3dadd( -19.2939, 95.7756, -28.8722, 1.33 ) }
    dend_21 { pt3dadd( -18.9927, 96.7543, -29.3308, 1.33 ) }
    dend_21 { pt3dadd( -18.5126, 98.3225, -30.1013, 1.33 ) }
    dend_21 { pt3dadd( -18.2914, 99.2354, -30.599, 0.44 ) }
    dend_21 { pt3dadd( -18.1185, 100.164, -31.1794, 0.44 ) }
    dend_21 { pt3dadd( -17.9369, 101.732, -32.2847, 0.44 ) }
    dend_21 { pt3dadd( -17.8924, 102.904, -33.1662, 0.44 ) }
    dend_21 { pt3dadd( -17.9516, 103.582, -33.6817, 1.18 ) }
    dend_21 { pt3dadd( -18.1441, 104.507, -34.3524, 1.25 ) }
    dend_21 { pt3dadd( -18.4919, 105.614, -35.1416, 0.66 ) }
    dend_21 { pt3dadd( -18.6689, 106.056, -35.4453, 0.22 ) }
    dend_21 { pt3dadd( -18.6959, 106.114, -35.4842, 0.22 ) }
    dend_21 { pt3dadd( -19.0082, 106.841, -35.9915, 0.22 ) }
    dend_21 { pt3dadd( -19.1945, 107.442, -36.4758, 0.37 ) }
    dend_21 { pt3dadd( -19.3029, 107.969, -36.9768, 0.37 ) }
    dend_21 { pt3dadd( -19.3393, 108.349, -37.355, 0.37 ) }
    dend_21 { pt3dadd( -19.3366, 108.406, -37.4184, 0.37 ) }
    dend_21 { pt3dadd( -19.1537, 108.955, -38.212, 0.37 ) }
    dend_21 { pt3dadd( -18.5176, 109.933, -39.9641, 0.74 ) }
    dend_21 { pt3dadd( -18.4623, 109.984, -40.0898, 0.74 ) }
    dend_21 { pt3dadd( -18.2136, 110.181, -40.6166, 0.74 ) }
    dend_21 { pt3dadd( -18.141, 110.235, -40.763, 0.74 ) }
    dend_21 { pt3dadd( -17.2788, 110.937, -42.5556, 0.74 ) }
    dend_21 { pt3dadd( -17.248, 110.967, -42.6271, 0.74 ) }
    dend_21 { pt3dadd( -16.7287, 112.054, -44.5013, 1.03 ) }
    dend_21 { pt3dadd( -16.6073, 112.411, -45.0932, 1.03 ) }
    dend_21 { pt3dadd( -16.5979, 112.449, -45.1544, 1.03 ) }
    dend_21 { pt3dadd( -16.5184, 112.999, -45.9552, 1.03 ) }
    dend_21 { pt3dadd( -16.4652, 113.622, -46.8445, 0.37 ) }
    dend_21 { pt3dadd( -16.4187, 114.924, -48.6391, 0.88 ) }
    dend_21 { pt3dadd( -16.4276, 116.111, -50.1991, 0.37 ) }
    dend_21 { pt3dadd( -16.4289, 116.203, -50.3279, 0.37 ) }
    dend_21 { pt3dadd( -16.4358, 116.685, -50.9897, 0.37 ) }
    dend_21 { pt3dadd( -16.43, 118.077, -52.9051, 1.03 ) }
    dend_21 { pt3dadd( -16.3979, 118.737, -53.7148, 1.03 ) }
    dend_21 { pt3dadd( -16.3933, 118.786, -53.7703, 1.03 ) }
    dend_21 { pt3dadd( -16.251, 120.023, -55.0264, 1.25 ) }
    dend_21 { pt3dadd( -16.1584, 120.52, -55.4951, 1.25 ) }
    dend_21 { pt3dadd( -15.9545, 121.291, -56.1618, 0.52 ) }
    dend_21 { pt3dadd( -15.5449, 122.399, -57.0528, 0.52 ) }
    dend_21 { pt3dadd( -14.9601, 123.621, -58.0759, 0.96 ) }
    dend_21 { pt3dadd( -14.9364, 123.666, -58.1128, 0.96 ) }
    dend_21 { pt3dadd( -14.5548, 124.353, -58.6187, 0.96 ) }
    dend_21 { pt3dadd( -14.5325, 124.399, -58.6565, 0.96 ) }
    dend_21 { pt3dadd( -13.9314, 126.126, -60.1652, 0.29 ) }
    dend_21 { pt3dadd( -13.8805, 126.525, -60.6418, 0.29 ) }
    dend_21 { pt3dadd( -13.8615, 126.766, -60.9354, 0.29 ) }
    dend_21 { pt3dadd( -13.8302, 127.187, -61.4828, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_21 { pt3dadd( -13.7708, 128.236, -62.8393, 0.88 ) }
    dend_21 { pt3dadd( -13.7544, 128.739, -63.444, 0.88 ) }
    dend_21 { pt3dadd( -13.8795, 130.493, -65.2263, 0.29 ) }
    dend_21 { pt3dadd( -13.9453, 131.545, -66.2421, 0.29 ) }
    dend_21 { pt3dadd( -13.9484, 131.659, -66.3531, 0.29 ) }
    dend_21 { pt3dadd( -13.9391, 132.423, -67.1093, 0.29 ) }
    dend_21 { pt3dadd( -13.9335, 132.532, -67.2096, 0.29 ) }
    dend_21 { pt3dadd( -13.876, 133.609, -68.1767, 0.29 ) }
    dend_21 { pt3dadd( -13.8753, 133.713, -68.2668, 0.29 ) }
    dend_21 { pt3dadd( -13.9209, 135.684, -70.0073, 1.4 ) }
    dend_21 { pt3dadd( -13.898, 137.061, -71.265, 1.4 ) }
    dend_21 { pt3dadd( -13.8977, 137.107, -71.3091, 1.4 ) }
    dend_21 { pt3dadd( -13.8816, 138.311, -72.4824, 0.37 ) }
    dend_21 { pt3dadd( -13.8797, 138.374, -72.5402, 0.37 ) }
    dend_21 { pt3dadd( -13.8784, 139.23, -73.217, 0.37 ) }
    dend_21 { pt3dadd( -13.8996, 140.389, -73.9641, 0.37 ) }
    dend_21 { pt3dadd( -13.9136, 141.264, -74.5154, 0.37 ) }
    dend_21 { pt3dadd( -13.9037, 141.467, -74.6515, 0.37 ) }
    dend_21 { pt3dadd( -13.7666, 142.28, -75.2656, 0.37 ) }
    dend_21 { pt3dadd( -13.6997, 142.539, -75.4666, 1.03 ) }
    dend_21 { pt3dadd( -13.2534, 143.856, -76.5008, 1.03 ) }
    dend_21 { pt3dadd( -13.2025, 143.995, -76.5982, 1.03 ) }
    dend_21 { pt3dadd( -12.8043, 144.975, -77.2526, 1.33 ) }
    dend_21 { pt3dadd( -12.4243, 145.998, -77.9228, 0.44 ) }
    dend_21 { pt3dadd( -12.3163, 146.308, -78.122, 0.44 ) }
    dend_21 { pt3dadd( -12.265, 146.526, -78.2317, 0.29 ) }
    dend_21 { pt3dadd( -12.1983, 147.275, -78.4614, 0.29 ) }
    dend_21 { pt3dadd( -12.2015, 147.345, -78.4902, 0.29 ) }
    dend_21 { pt3dadd( -12.3576, 147.935, -78.7929, 0.29 ) }
    dend_21 { pt3dadd( -12.3799, 147.995, -78.8328, 0.29 ) }
    dend_21 { pt3dadd( -12.6901, 148.69, -79.3718, 0.29 ) }
    dend_21 { pt3dadd( -12.7159, 148.741, -79.4191, 0.29 ) }
    dend_21 { pt3dadd( -13.4816, 150.192, -80.8669, 0.37 ) }
    dend_21 { pt3dadd( -13.9363, 151.006, -81.7474, 0.66 ) }
    dend_21 { pt3dadd( -14.3634, 151.746, -82.5957, 1.11 ) }
    dend_21 { pt3dadd( -14.68, 152.269, -83.2139, 1.4 ) }
    dend_21 { pt3dadd( -15.3482, 153.336, -84.5274, 0.52 ) }
    dend_21 { pt3dadd( -15.3717, 153.373, -84.5722, 0.52 ) }
    dend_21 { pt3dadd( -15.9276, 154.208, -85.5078, 0.52 ) }
    dend_21 { pt3dadd( -15.9928, 154.308, -85.6115, 0.52 ) }
    dend_21 { pt3dadd( -16.8113, 155.566, -86.8089, 0.52 ) }
    dend_21 { pt3dadd( -17.5742, 156.717, -87.9398, 0.52 ) }
    dend_21 { pt3dadd( -17.7037, 156.891, -88.1105, 0.52 ) }
    dend_21 { pt3dadd( -18.3711, 157.64, -88.8966, 0.52 ) }
    dend_21 { pt3dadd( -18.9768, 158.2, -89.5237, 0.88 ) }
    dend_21 { pt3dadd( -19.0226, 158.231, -89.5723, 0.88 ) }
    dend_21 { pt3dadd( -20.2824, 158.601, -90.8486, 0.29 ) }
    dend_21 { pt3dadd( -20.8244, 158.612, -91.3797, 0.29 ) }
    dend_21 { pt3dadd( -21.5472, 158.467, -92.083, 0.29 ) }
    dend_21 { pt3dadd( -21.5986, 158.447, -92.1311, 0.29 ) }
    dend_21 { pt3dadd( -23.1372, 157.703, -93.4672, 0.59 ) }
    dend_21 { pt3dadd( -24.0149, 157.287, -94.146, 0.59 ) }
    dend_21 { pt3dadd( -24.4322, 157.099, -94.4656, 0.29 ) }
    dend_21 { pt3dadd( -25.1616, 156.839, -95.1915, 0.29 ) }
    dend_21 { pt3dadd( -25.648, 156.747, -95.7736, 0.29 ) }
    dend_21 { pt3dadd( -25.7356, 156.743, -95.8887, 0.29 ) }
    dend_21 { pt3dadd( -26.1637, 156.819, -96.5431, 0.29 ) }
    dend_21 { pt3dadd( -27.2049, 157.107, -98.259, 0.29 ) }
    dend_21 { pt3dadd( -27.9704, 157.338, -99.5413, 1.18 ) }
    dend_21 { pt3dadd( -28.3894, 157.452, -100.185, 1.18 ) }
    dend_21 { pt3dadd( -28.4256, 157.459, -100.235, 1.18 ) }
    dend_21 { pt3dadd( -29.3647, 157.582, -101.312, 0.29 ) }
    dend_21 { pt3dadd( -30.1782, 157.645, -102.032, 0.29 ) }
    dend_21 { pt3dadd( -30.3759, 157.662, -102.169, 0.29 ) }
    dend_21 { pt3dadd( -31.4644, 157.796, -102.869, 0.29 ) }
    dend_21 { pt3dadd( -31.7469, 157.835, -103.051, 0.29 ) }
    dend_21 { pt3dadd( -32.231, 157.905, -103.351, 0.74 ) }
    dend_21 { pt3dadd( -32.9715, 158.026, -103.793, 0.74 ) }
    dend_21 { pt3dadd( -34.505, 158.331, -104.793, 0.37 ) }
    dend_21 { pt3dadd( -34.5728, 158.347, -104.839, 0.37 ) }
    dend_21 { pt3dadd( -34.888, 158.442, -105.058, 0.29 ) }
    dend_21 { pt3dadd( -35.831, 158.785, -105.756, 0.29 ) }
    dend_21 { pt3dadd( -36.0694, 158.887, -105.939, 0.74 ) }
    dend_21 { pt3dadd( -36.2057, 158.956, -106.037, 0.74 ) }
    dend_21 { pt3dadd( -36.6233, 159.204, -106.278, 0.96 ) }
    dend_21 { pt3dadd( -37.074, 159.516, -106.607, 0.96 ) }
    dend_21 { pt3dadd( -37.7788, 160.115, -107.261, 0.59 ) }
    dend_21 { pt3dadd( -37.8208, 160.157, -107.306, 0.59 ) }
    dend_21 { pt3dadd( -38.1813, 160.497, -107.681, 0.22 ) }
    dend_21 { pt3dadd( -38.254, 160.542, -107.741, 0.22 ) }
    dend_21 { pt3dadd( -38.9535, 160.848, -108.215, 0.29 ) }
    dend_21 { pt3dadd( -39.0949, 160.886, -108.305, 0.29 ) }
    dend_21 { pt3dadd( -39.9614, 161.049, -108.807, 0.29 ) }
    dend_21 { pt3dadd( -40.0332, 161.058, -108.849, 0.29 ) }
    dend_21 { pt3dadd( -41.5243, 161.087, -109.653, 0.29 ) }
    dend_21 { pt3dadd( -41.6553, 161.077, -109.717, 0.29 ) }
    dend_21 { pt3dadd( -42.7763, 160.94, -110.189, 0.29 ) }
    dend_21 { pt3dadd( -42.843, 160.929, -110.216, 0.29 ) }
    dend_21 { pt3dadd( -43.4261, 160.831, -110.483, 1.03 ) }
    dend_21 { pt3dadd( -44.5075, 160.721, -110.993, 1.25 ) }
    dend_21 { pt3dadd( -45.0813, 160.7, -111.272, 0.29 ) }
    dend_21 { pt3dadd( -45.7983, 160.734, -111.749, 0.29 ) }
    dend_21 { pt3dadd( -45.9102, 160.75, -111.84, 0.29 ) }
    dend_21 { pt3dadd( -46.7179, 160.9, -112.611, 0.66 ) }
    dend_21 { pt3dadd( -47.2384, 161.003, -113.144, 0.88 ) }
    dend_21 { pt3dadd( -47.2872, 161.013, -113.197, 0.88 ) }
    dend_21 { pt3dadd( -49.0253, 161.333, -114.961, 0.44 ) }
    dend_21 { pt3dadd( -49.1326, 161.344, -115.074, 0.44 ) }
    dend_21 { pt3dadd( -49.8346, 161.341, -115.823, 0.44 ) }
    dend_21 { pt3dadd( -50.777, 161.22, -116.753, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_21 { pt3dadd( -50.8294, 161.21, -116.803, 0.44 ) }
    dend_21 { pt3dadd( -51.7905, 161.016, -117.597, 1.18 ) }
    dend_21 { pt3dadd( -53.159, 160.72, -118.557, 1.18 ) }
    dend_21 { pt3dadd( -54.2046, 160.556, -119.358, 0.29 ) }
    dend_21 { pt3dadd( -55.1896, 160.47, -120.148, 0.29 ) }
    dend_21 { pt3dadd( -55.2474, 160.47, -120.193, 0.29 ) }
    dend_21 { pt3dadd( -56.4315, 160.567, -121.138, 0.29 ) }
    dend_21 { pt3dadd( -56.4936, 160.576, -121.192, 0.29 ) }
    dend_21 { pt3dadd( -58.219, 160.966, -122.777, 0.29 ) }
    dend_21 { pt3dadd( -58.812, 161.129, -123.369, 1.11 ) }
    dend_21 { pt3dadd( -59.7855, 161.425, -124.488, 1.11 ) }
    dend_21 { pt3dadd( -61.042, 161.787, -126.041, 0.88 ) }
    dend_21 { pt3dadd( -62.2088, 162.126, -127.594, 0.66 ) }
    dend_21 { pt3dadd( -63.414, 162.472, -129.215, 0.66 ) }
    dend_21 { pt3dadd( -63.465, 162.486, -129.279, 0.66 ) }
    dend_21 { pt3dadd( -64.7076, 162.848, -130.651, 0.29 ) }
    dend_21 { pt3dadd( -65.1191, 162.983, -130.928, 0.29 ) }
    dend_21 { pt3dadd( -65.6129, 163.181, -130.898, 0.29 ) }
    dend_21 { pt3dadd( -66.1424, 163.412, -130.722, 0.29 ) }
    dend_21 { pt3dadd( -68.3126, 164.405, -129.635, 0.29 ) }
    dend_21 { pt3dadd( -70.0322, 165.199, -128.692, 1.47 ) }
    dend_21 { pt3dadd( -70.8794, 165.606, -128.193, 1.84 ) }
    dend_21 { pt3dadd( -71.6755, 166.004, -127.739, 1.84 ) }
    dend_21 { pt3dadd( -71.743, 166.039, -127.703, 1.84 ) }
    dend_21 { pt3dadd( -72.9595, 166.708, -127.15, 0.74 ) }
    dend_21 { pt3dadd( -73.5288, 167.06, -126.988, 0.59 ) }
    dend_21 { pt3dadd( -74.318, 167.667, -126.822, 0.59 ) }
    dend_21 { pt3dadd( -74.436, 167.77, -126.792, 0.59 ) }
    dend_21 { pt3dadd( -75.1686, 168.497, -126.613, 0.59 ) }
    dend_21 { pt3dadd( -75.4747, 168.825, -126.555, 1.03 ) }
    dend_21 { pt3dadd( -75.5237, 168.881, -126.544, 1.03 ) }
    dend_21 { pt3dadd( -76.1015, 169.528, -126.281, 1.03 ) }
    dend_21 { pt3dadd( -76.1481, 169.579, -126.251, 1.03 ) }
    dend_21 { pt3dadd( -76.5208, 169.948, -126.007, 0.66 ) }
    dend_21 { pt3dadd( -76.6232, 170.042, -125.931, 0.66 ) }
    dend_21 { pt3dadd( -77.6569, 170.942, -125.07, 0.29 ) }
    dend_21 { pt3dadd( -77.8376, 171.087, -124.91, 0.15 ) }
    dend_21 { pt3dadd( -77.9366, 171.154, -124.807, 0.15 ) }
    dend_21 { pt3dadd( -78.469, 171.514, -124.22, 0.15 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 39/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -17.9141, 89.4808, -20.0658, 0.59 ) }
    dend_20 { pt3dadd( -17.9732, 90.0219, -19.9831, 0.59 ) }
    dend_20 { pt3dadd( -18.0709, 90.8379, -19.837, 0.44 ) }
    dend_20 { pt3dadd( -18.1492, 91.4198, -19.7316, 0.59 ) }
    dend_20 { pt3dadd( -18.2473, 92.109, -19.6009, 0.59 ) }
    dend_20 { pt3dadd( -18.35, 92.8423, -19.4583, 0.37 ) }
    dend_20 { pt3dadd( -18.4626, 93.6746, -19.2952, 0.22 ) }
    dend_20 { pt3dadd( -18.4699, 93.7309, -19.2844, 0.22 ) }
    dend_20 { pt3dadd( -18.5889, 94.6763, -19.1228, 0.22 ) }
    dend_20 { pt3dadd( -18.6237, 94.9279, -19.0748, 0.66 ) }
    dend_20 { pt3dadd( -18.66, 95.1655, -19.0394, 0.66 ) }
    dend_20 { pt3dadd( -18.7146, 95.4613, -18.9886, 0.66 ) }
    dend_20 { pt3dadd( -18.7556, 95.6652, -18.9771, 0.66 ) }
    dend_20 { pt3dadd( -18.8494, 96.0141, -18.9604, 0.66 ) }
    dend_20 { pt3dadd( -18.8659, 96.0694, -18.9584, 0.66 ) }
    dend_20 { pt3dadd( -19.0194, 96.6614, -18.9571, 0.22 ) }
    dend_20 { pt3dadd( -19.1765, 97.3065, -18.9624, 0.22 ) }
    dend_20 { pt3dadd( -19.2982, 97.8807, -18.965, 0.22 ) }
    dend_20 { pt3dadd( -19.3198, 98.0025, -18.9645, 0.22 ) }
    dend_20 { pt3dadd( -19.7682, 100.712, -18.9098, 0.22 ) }
    dend_20 { pt3dadd( -19.8389, 101.187, -18.8927, 0.59 ) }
    dend_20 { pt3dadd( -19.846, 101.244, -18.8897, 0.59 ) }
    dend_20 { pt3dadd( -19.9, 101.797, -18.8705, 0.88 ) }
    dend_20 { pt3dadd( -19.946, 102.388, -18.8385, 0.88 ) }
    dend_20 { pt3dadd( -19.9787, 102.875, -18.8005, 0.74 ) }
    dend_20 { pt3dadd( -20.0094, 103.474, -18.7243, 0.52 ) }
    dend_20 { pt3dadd( -20.0199, 103.606, -18.7059, 0.29 ) }
    dend_20 { pt3dadd( -20.0336, 103.744, -18.6897, 0.29 ) }
    dend_20 { pt3dadd( -20.094, 104.289, -18.6362, 0.29 ) }
    dend_20 { pt3dadd( -20.182, 105.076, -18.5705, 0.29 ) }
    dend_20 { pt3dadd( -20.1917, 105.162, -18.5647, 0.29 ) }
    dend_20 { pt3dadd( -20.2936, 105.939, -18.5188, 1.03 ) }
    dend_20 { pt3dadd( -20.4094, 106.806, -18.4686, 1.4 ) }
    dend_20 { pt3dadd( -20.4771, 107.336, -18.4366, 1.77 ) }
    dend_20 { pt3dadd( -20.4838, 107.393, -18.4329, 1.77 ) }
    dend_20 { pt3dadd( -20.5646, 108.071, -18.3894, 1.77 ) }
    dend_20 { pt3dadd( -20.6186, 108.61, -18.3504, 1.03 ) }
    dend_20 { pt3dadd( -20.6557, 109.05, -18.3156, 1.03 ) }
    dend_20 { pt3dadd( -20.6948, 109.574, -18.2719, 1.03 ) }
    dend_20 { pt3dadd( -20.7336, 110.011, -18.2382, 0.96 ) }
    dend_20 { pt3dadd( -20.74, 110.093, -18.2341, 0.96 ) }
    dend_20 { pt3dadd( -20.7994, 110.933, -18.2088, 0.96 ) }
    dend_20 { pt3dadd( -20.8061, 111.021, -18.2046, 0.96 ) }
    dend_20 { pt3dadd( -20.8429, 111.449, -18.1812, 0.29 ) }
    dend_20 { pt3dadd( -20.9084, 112.419, -18.1057, 0.29 ) }
    dend_20 { pt3dadd( -20.9997, 114.046, -17.957, 0.29 ) }
    dend_20 { pt3dadd( -21.0056, 114.181, -17.943, 0.29 ) }
    dend_20 { pt3dadd( -21.0393, 115.109, -17.8387, 0.29 ) }
    dend_20 { pt3dadd( -21.0409, 115.166, -17.8317, 0.29 ) }
    dend_20 { pt3dadd( -21.0745, 117.362, -17.5322, 0.29 ) }
    dend_20 { pt3dadd( -21.0752, 117.476, -17.5147, 0.29 ) }
    dend_20 { pt3dadd( -21.0763, 117.831, -17.455, 0.74 ) }
    dend_20 { pt3dadd( -21.0747, 118.493, -17.3509, 1.18 ) }
    dend_20 { pt3dadd( -21.067, 119.147, -17.2642, 1.4 ) }
    dend_20 { pt3dadd( -21.0622, 119.818, -17.1587, 0.52 ) }
    dend_20 { pt3dadd( -21.0621, 119.875, -17.1481, 0.52 ) }
    dend_20 { pt3dadd( -21.0468, 120.511, -17.0178, 0.52 ) }
    dend_20 { pt3dadd( -21.0437, 120.576, -17.0044, 0.52 ) }
    dend_20 { pt3dadd( -20.982, 121.563, -16.7989, 0.52 ) }
    dend_20 { pt3dadd( -20.949, 122.374, -16.6517, 0.52 ) }
    dend_20 { pt3dadd( -20.9469, 122.431, -16.6447, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_20 { pt3dadd( -20.9093, 124.003, -16.509, 0.52 ) }
    dend_20 { pt3dadd( -20.8998, 124.632, -16.4701, 0.37 ) }
    dend_20 { pt3dadd( -20.8984, 124.871, -16.4603, 0.37 ) }
    dend_20 { pt3dadd( -20.9156, 126.847, -16.4237, 0.37 ) }
    dend_20 { pt3dadd( -20.9659, 128.354, -16.426, 1.03 ) }
    dend_20 { pt3dadd( -21.0093, 129.206, -16.4496, 1.55 ) }
    dend_20 { pt3dadd( -21.0831, 130.224, -16.5044, 1.55 ) }
    dend_20 { pt3dadd( -21.1353, 130.886, -16.5453, 0.88 ) }
    dend_20 { pt3dadd( -21.199, 131.678, -16.6018, 0.59 ) }
    dend_20 { pt3dadd( -21.3082, 132.975, -16.709, 0.59 ) }
    dend_20 { pt3dadd( -21.3918, 133.83, -16.772, 0.59 ) }
    dend_20 { pt3dadd( -21.402, 133.952, -16.7824, 0.59 ) }
    dend_20 { pt3dadd( -21.4401, 134.543, -16.8333, 0.59 ) }
    dend_20 { pt3dadd( -21.4419, 134.601, -16.8372, 0.59 ) }
    dend_20 { pt3dadd( -21.4278, 135.09, -16.8459, 0.81 ) }
    dend_20 { pt3dadd( -21.4233, 135.148, -16.8415, 0.81 ) }
    dend_20 { pt3dadd( -21.3903, 135.62, -16.7727, 0.81 ) }
    dend_20 { pt3dadd( -21.3584, 136.108, -16.7249, 0.52 ) }
    dend_20 { pt3dadd( -21.3531, 136.231, -16.7178, 0.52 ) }
    dend_20 { pt3dadd( -21.3369, 136.786, -16.6991, 0.52 ) }
    dend_20 { pt3dadd( -21.3358, 137.798, -16.688, 0.52 ) }
    dend_20 { pt3dadd( -21.3377, 137.856, -16.6866, 0.52 ) }
    dend_20 { pt3dadd( -21.3871, 138.652, -16.663, 0.96 ) }
    dend_20 { pt3dadd( -21.4418, 139.272, -16.6363, 0.96 ) }
    dend_20 { pt3dadd( -21.448, 139.329, -16.6329, 0.96 ) }
    dend_20 { pt3dadd( -21.5533, 140.174, -16.5656, 0.96 ) }
    dend_20 { pt3dadd( -21.6328, 140.812, -16.4949, 0.52 ) }
    dend_20 { pt3dadd( -21.6378, 140.869, -16.4866, 0.52 ) }
    dend_20 { pt3dadd( -21.6412, 141.873, -16.2907, 0.52 ) }
    dend_20 { pt3dadd( -21.622, 142.239, -16.22, 0.52 ) }
    dend_20 { pt3dadd( -21.6103, 142.378, -16.194, 0.52 ) }
    dend_20 { pt3dadd( -21.5506, 142.901, -16.1018, 0.37 ) }
    dend_20 { pt3dadd( -21.3946, 144.075, -15.9122, 0.37 ) }
    dend_20 { pt3dadd( -21.1592, 145.683, -15.6723, 0.37 ) }
    dend_20 { pt3dadd( -21.0932, 146.096, -15.6164, 0.81 ) }
    dend_20 { pt3dadd( -21.0737, 146.217, -15.6017, 0.81 ) }
    dend_20 { pt3dadd( -20.9749, 146.863, -15.5326, 0.81 ) }
    dend_20 { pt3dadd( -20.9667, 146.919, -15.5275, 0.81 ) }
    dend_20 { pt3dadd( -20.8597, 147.846, -15.4749, 0.81 ) }
    dend_20 { pt3dadd( -20.8409, 148.448, -15.4631, 0.52 ) }
    dend_20 { pt3dadd( -20.8381, 148.74, -15.4749, 0.22 ) }
    dend_20 { pt3dadd( -20.8433, 148.863, -15.4867, 0.22 ) }
    dend_20 { pt3dadd( -20.8807, 149.281, -15.5468, 0.22 ) }
    dend_20 { pt3dadd( -20.8936, 149.366, -15.5609, 0.22 ) }
    dend_20 { pt3dadd( -21.1344, 150.432, -15.7542, 0.22 ) }
    dend_20 { pt3dadd( -21.3577, 151.285, -15.918, 0.81 ) }
    dend_20 { pt3dadd( -21.5315, 151.884, -16.0438, 0.81 ) }
    dend_20 { pt3dadd( -21.5567, 151.966, -16.0611, 0.81 ) }
    dend_20 { pt3dadd( -21.8535, 152.859, -16.2443, 0.81 ) }
    dend_20 { pt3dadd( -22.1145, 153.627, -16.3825, 1.11 ) }
    dend_20 { pt3dadd( -22.142, 153.71, -16.394, 1.11 ) }
    dend_20 { pt3dadd( -22.3411, 154.376, -16.4439, 1.47 ) }
    dend_20 { pt3dadd( -22.4974, 155.043, -16.4361, 1.84 ) }
    dend_20 { pt3dadd( -22.6415, 155.758, -16.3917, 1.99 ) }
    dend_20 { pt3dadd( -22.7531, 156.465, -16.3122, 1.03 ) }
    dend_20 { pt3dadd( -22.8181, 157.017, -16.2268, 0.59 ) }
    dend_20 { pt3dadd( -22.8709, 157.617, -16.1138, 0.44 ) }
    dend_20 { pt3dadd( -22.9508, 159.465, -15.6834, 0.44 ) }
    dend_20 { pt3dadd( -22.9501, 159.521, -15.6689, 0.44 ) }
    dend_20 { pt3dadd( -22.9188, 160.055, -15.534, 0.81 ) }
    dend_20 { pt3dadd( -22.8813, 160.524, -15.4254, 0.81 ) }
    dend_20 { pt3dadd( -22.8787, 160.581, -15.4163, 0.81 ) }
    dend_20 { pt3dadd( -22.8574, 161.266, -15.351, 0.81 ) }
    dend_20 { pt3dadd( -22.8486, 161.936, -15.3317, 0.37 ) }
    dend_20 { pt3dadd( -22.8533, 162.611, -15.3116, 0.37 ) }
    dend_20 { pt3dadd( -22.8549, 162.677, -15.3097, 0.37 ) }
    dend_20 { pt3dadd( -22.8931, 164.485, -15.2399, 0.37 ) }
    dend_20 { pt3dadd( -22.8953, 164.6, -15.2343, 0.37 ) }
    dend_20 { pt3dadd( -22.971, 166.154, -15.1548, 0.37 ) }
    dend_20 { pt3dadd( -23.0086, 166.722, -15.1198, 0.37 ) }
    dend_20 { pt3dadd( -23.0231, 166.906, -15.0969, 0.37 ) }
    dend_20 { pt3dadd( -23.0796, 167.562, -14.9907, 0.37 ) }
    dend_20 { pt3dadd( -23.1041, 167.793, -14.94, 0.37 ) }
    dend_20 { pt3dadd( -23.2937, 168.87, -14.6779, 0.37 ) }
    dend_20 { pt3dadd( -23.3132, 168.931, -14.6623, 0.37 ) }
    dend_20 { pt3dadd( -23.6263, 169.688, -14.5045, 0.37 ) }
    dend_20 { pt3dadd( -23.6733, 169.79, -14.4865, 0.37 ) }
    dend_20 { pt3dadd( -23.9103, 170.297, -14.4167, 0.37 ) }
    dend_20 { pt3dadd( -23.9734, 170.452, -14.4002, 0.37 ) }
    dend_20 { pt3dadd( -24.2348, 171.321, -14.314, 0.37 ) }
    dend_20 { pt3dadd( -24.4369, 172.065, -14.2658, 0.37 ) }
    dend_20 { pt3dadd( -24.453, 172.129, -14.2641, 0.37 ) }
    dend_20 { pt3dadd( -24.6335, 172.885, -14.2374, 0.37 ) }
    dend_20 { pt3dadd( -24.7862, 173.588, -14.2118, 0.37 ) }
    dend_20 { pt3dadd( -24.9706, 174.51, -14.1772, 1.25 ) }
    dend_20 { pt3dadd( -25.1149, 175.31, -14.1429, 1.55 ) }
    dend_20 { pt3dadd( -25.169, 175.598, -14.133, 1.55 ) }
    dend_20 { pt3dadd( -25.1878, 175.689, -14.131, 1.55 ) }
    dend_20 { pt3dadd( -25.3363, 176.423, -14.1781, 0.59 ) }
    dend_20 { pt3dadd( -25.3502, 176.486, -14.188, 0.59 ) }
    dend_20 { pt3dadd( -25.4215, 176.777, -14.2532, 0.59 ) }
    dend_20 { pt3dadd( -25.6472, 177.823, -14.4672, 0.59 ) }
    dend_20 { pt3dadd( -25.6583, 177.877, -14.4791, 0.59 ) }
    dend_20 { pt3dadd( -25.8626, 178.898, -14.7089, 0.59 ) }
    dend_20 { pt3dadd( -26.0071, 179.675, -14.8993, 0.59 ) }
    dend_20 { pt3dadd( -26.1582, 180.62, -15.1278, 0.29 ) }
    dend_20 { pt3dadd( -26.305, 181.774, -15.3867, 0.29 ) }
    dend_20 { pt3dadd( -26.3934, 182.71, -15.5765, 0.81 ) }
    dend_20 { pt3dadd( -26.398, 182.766, -15.5853, 0.81 ) }
    dend_20 { pt3dadd( -26.4331, 183.296, -15.6364, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_20 { pt3dadd( -26.4717, 184.149, -15.7006, 0.52 ) }
    dend_20 { pt3dadd( -26.5122, 184.977, -15.7401, 0.52 ) }
    dend_20 { pt3dadd( -26.5157, 185.035, -15.7432, 0.52 ) }
    dend_20 { pt3dadd( -26.5922, 186.127, -15.7856, 0.52 ) }
    dend_20 { pt3dadd( -26.6018, 186.251, -15.7907, 0.52 ) }
    dend_20 { pt3dadd( -26.6873, 187.218, -15.8207, 0.96 ) }
    dend_20 { pt3dadd( -26.7504, 187.935, -15.8342, 0.96 ) }
    dend_20 { pt3dadd( -26.8049, 188.755, -15.8289, 0.66 ) }
    dend_20 { pt3dadd( -26.832, 189.404, -15.8063, 0.44 ) }
    dend_20 { pt3dadd( -26.8378, 190.122, -15.758, 0.44 ) }
    dend_20 { pt3dadd( -26.8267, 191.429, -15.6022, 0.44 ) }
    dend_20 { pt3dadd( -26.8049, 192.248, -15.4681, 1.18 ) }
    dend_20 { pt3dadd( -26.7831, 193.142, -15.2916, 1.92 ) }
    dend_20 { pt3dadd( -26.7677, 194.017, -15.0925, 2.21 ) }
    dend_20 { pt3dadd( -26.7448, 195.071, -14.8447, 1.69 ) }
    dend_20 { pt3dadd( -26.7164, 196.348, -14.5469, 0.59 ) }
    dend_20 { pt3dadd( -26.7152, 196.412, -14.5325, 0.59 ) }
    dend_20 { pt3dadd( -26.7097, 197.181, -14.3793, 0.59 ) }
    dend_20 { pt3dadd( -26.7278, 198.291, -14.181, 0.52 ) }
    dend_20 { pt3dadd( -26.73, 198.348, -14.1724, 0.52 ) }
    dend_20 { pt3dadd( -26.7825, 199.546, -14.0584, 0.81 ) }
    dend_20 { pt3dadd( -26.8126, 200.318, -14.0187, 1.03 ) }
    dend_20 { pt3dadd( -26.8341, 200.91, -13.9943, 1.03 ) }
    dend_20 { pt3dadd( -26.8558, 201.706, -13.9654, 0.44 ) }
    dend_20 { pt3dadd( -26.8765, 202.604, -13.9345, 0.44 ) }
    dend_20 { pt3dadd( -26.9229, 204.017, -13.8846, 0.44 ) }
    dend_20 { pt3dadd( -26.9396, 204.494, -13.8742, 0.81 ) }
    dend_20 { pt3dadd( -26.9759, 205.383, -13.8625, 0.81 ) }
    dend_20 { pt3dadd( -27.0183, 206.347, -13.854, 0.52 ) }
    dend_20 { pt3dadd( -27.0717, 207.366, -13.8469, 0.37 ) }
    dend_20 { pt3dadd( -27.2023, 209.069, -13.8479, 0.29 ) }
    dend_20 { pt3dadd( -27.2824, 209.826, -13.8515, 0.81 ) }
    dend_20 { pt3dadd( -27.329, 210.198, -13.8685, 1.03 ) }
    dend_20 { pt3dadd( -27.3375, 210.255, -13.8737, 1.03 ) }
    dend_20 { pt3dadd( -27.4908, 211.048, -13.9651, 1.03 ) }
    dend_20 { pt3dadd( -27.7372, 212.101, -14.0941, 0.52 ) }
    dend_20 { pt3dadd( -27.7491, 212.149, -14.0985, 0.52 ) }
    dend_20 { pt3dadd( -27.9336, 212.844, -14.122, 0.52 ) }
    dend_20 { pt3dadd( -27.9485, 212.908, -14.121, 0.52 ) }
    dend_20 { pt3dadd( -28.0973, 213.617, -14.0782, 0.52 ) }
    dend_20 { pt3dadd( -28.1766, 214.21, -13.9995, 0.29 ) }
    dend_20 { pt3dadd( -28.2259, 214.794, -13.8906, 0.29 ) }
    dend_20 { pt3dadd( -28.2295, 214.851, -13.8814, 0.29 ) }
    dend_20 { pt3dadd( -28.2657, 215.616, -13.7711, 0.29 ) }
    dend_20 { pt3dadd( -28.2745, 215.891, -13.7467, 0.29 ) }
    dend_20 { pt3dadd( -28.286, 217.099, -13.7108, 0.29 ) }
    dend_20 { pt3dadd( -28.2871, 217.156, -13.71, 0.29 ) }
    dend_20 { pt3dadd( -28.2981, 217.846, -13.7028, 0.29 ) }
    dend_20 { pt3dadd( -28.3041, 218.117, -13.7002, 0.96 ) }
    dend_20 { pt3dadd( -28.3213, 218.71, -13.6968, 0.96 ) }
    dend_20 { pt3dadd( -28.3229, 218.776, -13.6956, 0.96 ) }
    dend_20 { pt3dadd( -28.3576, 219.664, -13.6712, 0.88 ) }
    dend_20 { pt3dadd( -28.3693, 220.069, -13.6461, 0.29 ) }
    dend_20 { pt3dadd( -28.389, 220.425, -13.6134, 0.22 ) }
    dend_20 { pt3dadd( -28.3933, 220.483, -13.6086, 0.22 ) }
    dend_20 { pt3dadd( -28.4488, 220.961, -13.6022, 0.22 ) }
    dend_20 { pt3dadd( -28.4676, 221.092, -13.6073, 0.22 ) }
    dend_20 { pt3dadd( -28.5448, 221.685, -13.6656, 0.81 ) }
    dend_20 { pt3dadd( -28.6161, 222.399, -13.7511, 1.11 ) }
    dend_20 { pt3dadd( -28.6143, 222.532, -13.7782, 1.11 ) }
    dend_20 { pt3dadd( -28.5494, 223.251, -13.9718, 0.81 ) }
    dend_20 { pt3dadd( -28.5398, 223.304, -13.9879, 0.81 ) }
    dend_20 { pt3dadd( -28.3856, 223.892, -14.1659, 0.96 ) }
    dend_20 { pt3dadd( -28.1852, 224.484, -14.3273, 0.96 ) }
    dend_20 { pt3dadd( -27.8824, 225.446, -14.4395, 0.15 ) }
    dend_20 { pt3dadd( -27.8551, 225.565, -14.4408, 0.15 ) }
    dend_20 { pt3dadd( -27.7195, 226.289, -14.4002, 0.15 ) }
    dend_20 { pt3dadd( -27.7015, 226.477, -14.3862, 0.15 ) }
    dend_20 { pt3dadd( -27.6946, 227.197, -14.309, 0.15 ) }
    dend_20 { pt3dadd( -27.7593, 228.881, -14.0812, 0.15 ) }
    dend_20 { pt3dadd( -27.8398, 229.943, -13.9085, 0.15 ) }
    dend_20 { pt3dadd( -27.8452, 230.008, -13.8981, 0.15 ) }
    dend_20 { pt3dadd( -27.9721, 231.24, -13.7057, 0.15 ) }
    dend_20 { pt3dadd( -28.0675, 232.112, -13.573, 1.03 ) }
    dend_20 { pt3dadd( -28.1447, 232.753, -13.4795, 1.25 ) }
    dend_20 { pt3dadd( -28.1596, 232.874, -13.4637, 1.25 ) }
    dend_20 { pt3dadd( -28.2152, 233.411, -13.3886, 1.25 ) }
    dend_20 { pt3dadd( -28.2198, 233.497, -13.3758, 1.25 ) }
    dend_20 { pt3dadd( -28.2043, 233.915, -13.3045, 0.66 ) }
    dend_20 { pt3dadd( -28.1995, 233.98, -13.2949, 0.66 ) }
    dend_20 { pt3dadd( -28.1581, 234.577, -13.2081, 0.52 ) }
    dend_20 { pt3dadd( -28.1441, 234.768, -13.18, 0.29 ) }
    dend_20 { pt3dadd( -28.109, 235.245, -13.1099, 0.29 ) }
    dend_20 { pt3dadd( -28.0994, 235.367, -13.0917, 0.29 ) }
    dend_20 { pt3dadd( -28.029, 236.193, -12.9756, 0.29 ) }
    dend_20 { pt3dadd( -28.0272, 236.25, -12.9694, 0.29 ) }
    dend_20 { pt3dadd( -28.029, 236.922, -12.909, 0.29 ) }
    dend_20 { pt3dadd( -28.046, 237.338, -12.8845, 0.52 ) }
    dend_20 { pt3dadd( -28.0653, 237.576, -12.8782, 0.52 ) }
    dend_20 { pt3dadd( -28.125, 238.129, -12.8753, 0.22 ) }
    dend_20 { pt3dadd( -28.328, 239.57, -12.8982, 0.22 ) }
    dend_20 { pt3dadd( -28.3366, 239.626, -12.8994, 0.22 ) }
    dend_20 { pt3dadd( -28.4219, 240.135, -12.9139, 0.96 ) }
    dend_20 { pt3dadd( -28.4891, 240.616, -12.8952, 0.96 ) }
    dend_20 { pt3dadd( -28.5415, 241.104, -12.8368, 0.29 ) }
    dend_20 { pt3dadd( -28.5809, 241.643, -12.7352, 0.29 ) }
    dend_20 { pt3dadd( -28.5997, 242.285, -12.5782, 0.29 ) }
    dend_20 { pt3dadd( -28.6004, 242.333, -12.5659, 0.29 ) }
    dend_20 { pt3dadd( -28.603, 243.662, -12.2009, 0.29 ) }
    dend_20 { pt3dadd( -28.5941, 244.71, -11.908, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_20 { pt3dadd( -28.5847, 245.345, -11.7377, 1.92 ) }
    dend_20 { pt3dadd( -28.5784, 245.751, -11.6357, 1.92 ) }
    dend_20 { pt3dadd( -28.5734, 246.564, -11.4562, 0.52 ) }
    dend_20 { pt3dadd( -28.5786, 246.74, -11.4194, 0.52 ) }
    dend_20 { pt3dadd( -28.6044, 247.097, -11.358, 0.44 ) }
    dend_20 { pt3dadd( -28.6728, 247.983, -11.213, 0.44 ) }
    dend_20 { pt3dadd( -28.6967, 248.274, -11.1646, 0.81 ) }
    dend_20 { pt3dadd( -28.7493, 248.748, -11.099, 0.81 ) }
    dend_20 { pt3dadd( -28.8355, 249.456, -11.0318, 0.22 ) }
    dend_20 { pt3dadd( -28.8499, 249.57, -11.0245, 0.22 ) }
    dend_20 { pt3dadd( -29.0113, 250.83, -10.9739, 0.22 ) }
    dend_20 { pt3dadd( -29.0158, 250.879, -10.9748, 0.22 ) }
    dend_20 { pt3dadd( -29.1249, 252.619, -11.075, 0.22 ) }
    dend_20 { pt3dadd( -29.1417, 253.493, -11.151, 0.59 ) }
    dend_20 { pt3dadd( -29.129, 254.15, -11.2279, 0.96 ) }
    dend_20 { pt3dadd( -29.1268, 254.216, -11.2354, 0.96 ) }
    dend_20 { pt3dadd( -29.0692, 255.319, -11.357, 0.96 ) }
    dend_20 { pt3dadd( -29.059, 255.433, -11.3693, 0.96 ) }
    dend_20 { pt3dadd( -28.9394, 256.081, -11.4386, 0.96 ) }
    dend_20 { pt3dadd( -28.9298, 256.146, -11.4434, 0.96 ) }
    dend_20 { pt3dadd( -28.8796, 256.684, -11.4707, 0.22 ) }
    dend_20 { pt3dadd( -28.8782, 256.806, -11.4835, 0.22 ) }
    dend_20 { pt3dadd( -28.9061, 257.227, -11.5354, 0.22 ) }
    dend_20 { pt3dadd( -28.9205, 257.355, -11.5581, 0.22 ) }
    dend_20 { pt3dadd( -29.0089, 258.005, -11.7055, 0.22 ) }
    dend_20 { pt3dadd( -29.0168, 258.06, -11.7182, 0.22 ) }
    dend_20 { pt3dadd( -29.1912, 259.584, -12.1061, 0.22 ) }
    dend_20 { pt3dadd( -29.1976, 259.64, -12.1203, 0.22 ) }
    dend_20 { pt3dadd( -29.2927, 260.483, -12.3368, 0.22 ) }
    dend_20 { pt3dadd( -29.3284, 260.836, -12.4277, 0.96 ) }
    dend_20 { pt3dadd( -29.4103, 261.674, -12.6281, 1.25 ) }
    dend_20 { pt3dadd( -29.5045, 262.559, -12.819, 1.03 ) }
    dend_20 { pt3dadd( -29.5915, 263.286, -12.9586, 0.44 ) }
    dend_20 { pt3dadd( -29.702, 264.214, -13.1297, 0.22 ) }
    dend_20 { pt3dadd( -29.8016, 265.071, -13.2806, 1.18 ) }
    dend_20 { pt3dadd( -29.9265, 266.109, -13.4356, 1.84 ) }
    dend_20 { pt3dadd( -30.0042, 266.761, -13.5177, 1.33 ) }
    dend_20 { pt3dadd( -30.0114, 266.818, -13.522, 1.33 ) }
    dend_20 { pt3dadd( -30.0753, 267.435, -13.5459, 0.22 ) }
    dend_20 { pt3dadd( -30.1022, 267.69, -13.5421, 0.22 ) }
    dend_20 { pt3dadd( -30.1824, 268.468, -13.4918, 0.22 ) }
    dend_20 { pt3dadd( -30.1921, 268.582, -13.4822, 0.22 ) }
    dend_20 { pt3dadd( -30.2265, 269.073, -13.434, 0.74 ) }
    dend_20 { pt3dadd( -30.2549, 269.446, -13.3902, 0.22 ) }
    dend_20 { pt3dadd( -30.3042, 270.102, -13.3038, 0.22 ) }
    dend_20 { pt3dadd( -30.3092, 270.159, -13.2958, 0.22 ) }
    dend_20 { pt3dadd( -30.4484, 271.519, -13.0975, 0.22 ) }
    dend_20 { pt3dadd( -30.5042, 272.068, -13.0267, 0.22 ) }
    dend_20 { pt3dadd( -30.5902, 272.844, -12.9379, 1.33 ) }
    dend_20 { pt3dadd( -30.643, 273.31, -12.8879, 1.33 ) }
    dend_20 { pt3dadd( -30.7292, 274.036, -12.8169, 0.52 ) }
    dend_20 { pt3dadd( -30.7366, 274.093, -12.812, 0.52 ) }
    dend_20 { pt3dadd( -30.9168, 275.371, -12.7318, 0.29 ) }
    dend_20 { pt3dadd( -31.1246, 276.582, -12.6194, 0.29 ) }
    dend_20 { pt3dadd( -31.1675, 276.815, -12.5933, 0.59 ) }
    dend_20 { pt3dadd( -31.2745, 277.347, -12.5217, 0.59 ) }
    dend_20 { pt3dadd( -31.2864, 277.403, -12.513, 0.59 ) }
    dend_20 { pt3dadd( -31.809, 279.751, -12.0878, 0.22 ) }
    dend_20 { pt3dadd( -32.0378, 280.723, -11.8763, 0.29 ) }
    dend_20 { pt3dadd( -32.0631, 280.832, -11.8512, 0.29 ) }
    dend_20 { pt3dadd( -32.1432, 281.182, -11.7744, 0.29 ) }
    dend_20 { pt3dadd( -32.1813, 281.357, -11.7407, 0.29 ) }
    dend_20 { pt3dadd( -32.2856, 281.89, -11.6566, 0.29 ) }
    dend_20 { pt3dadd( -32.399, 282.589, -11.5795, 0.22 ) }
    dend_20 { pt3dadd( -32.408, 282.654, -11.5753, 0.22 ) }
    dend_20 { pt3dadd( -32.5326, 283.633, -11.525, 0.22 ) }
    dend_20 { pt3dadd( -32.6706, 284.769, -11.4789, 0.22 ) }
    dend_20 { pt3dadd( -32.7549, 285.426, -11.462, 1.33 ) }
    dend_20 { pt3dadd( -32.8593, 286.193, -11.4536, 1.47 ) }
    dend_20 { pt3dadd( -32.8684, 286.25, -11.4539, 1.47 ) }
    dend_20 { pt3dadd( -33.0162, 287.054, -11.4539, 0.22 ) }
    dend_20 { pt3dadd( -33.0327, 287.134, -11.4538, 0.22 ) }
    dend_20 { pt3dadd( -33.2291, 288.023, -11.444, 0.22 ) }
    dend_20 { pt3dadd( -33.2959, 288.319, -11.4451, 0.22 ) }
    dend_20 { pt3dadd( -33.4939, 289.215, -11.4574, 0.22 ) }
    dend_20 { pt3dadd( -33.7346, 290.364, -11.4615, 0.22 ) }
    dend_20 { pt3dadd( -33.7563, 290.478, -11.4603, 0.22 ) }
    dend_20 { pt3dadd( -33.9728, 291.726, -11.4408, 0.22 ) }
    dend_20 { pt3dadd( -34.2129, 293.241, -11.4139, 0.22 ) }
    dend_20 { pt3dadd( -34.3479, 294.155, -11.3977, 1.11 ) }
    dend_20 { pt3dadd( -34.4678, 295.061, -11.382, 1.4 ) }
    dend_20 { pt3dadd( -34.5857, 296.067, -11.3654, 1.4 ) }
    dend_20 { pt3dadd( -34.5912, 296.117, -11.364, 1.4 ) }
    dend_20 { pt3dadd( -34.6354, 296.574, -11.339, 1.4 ) }
    dend_20 { pt3dadd( -34.6396, 296.632, -11.3334, 1.33 ) }
    dend_20 { pt3dadd( -34.6594, 297.047, -11.3044, 0.22 ) }
    dend_20 { pt3dadd( -34.6842, 297.952, -11.2771, 0.22 ) }
    dend_20 { pt3dadd( -34.6856, 298.067, -11.2761, 0.22 ) }
    dend_20 { pt3dadd( -34.7239, 299.325, -11.229, 0.22 ) }
    dend_20 { pt3dadd( -34.729, 299.448, -11.2219, 0.22 ) }
    dend_20 { pt3dadd( -34.7816, 300.194, -11.167, 0.22 ) }
    dend_20 { pt3dadd( -34.7985, 300.373, -11.151, 0.22 ) }
    dend_20 { pt3dadd( -34.8785, 301.082, -11.0717, 0.74 ) }
    dend_20 { pt3dadd( -34.9454, 301.821, -11.0097, 0.22 ) }
    dend_20 { pt3dadd( -34.9506, 301.878, -11.0061, 0.22 ) }
    dend_20 { pt3dadd( -35.0273, 302.659, -10.9677, 0.22 ) }
    dend_20 { pt3dadd( -35.0397, 302.782, -10.9623, 0.22 ) }
    dend_20 { pt3dadd( -35.2471, 304.8, -10.925, 0.22 ) }
    dend_20 { pt3dadd( -35.3347, 305.707, -10.9307, 0.22 ) }
    dend_20 { pt3dadd( -35.3797, 306.234, -10.9448, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_20 { pt3dadd( -35.4538, 307.029, -10.962, 1.33 ) }
    dend_20 { pt3dadd( -35.4672, 307.164, -10.9638, 1.33 ) }
    dend_20 { pt3dadd( -35.5837, 308.299, -10.9611, 1.33 ) }
    dend_20 { pt3dadd( -35.5899, 308.357, -10.9594, 1.33 ) }
    dend_20 { pt3dadd( -35.691, 309.371, -10.8859, 1.33 ) }
    dend_20 { pt3dadd( -35.7419, 309.964, -10.8393, 0.66 ) }
    dend_20 { pt3dadd( -35.7874, 310.562, -10.7899, 0.66 ) }
    dend_20 { pt3dadd( -35.8133, 311.049, -10.7628, 0.44 ) }
    dend_20 { pt3dadd( -35.8221, 311.473, -10.7481, 0.29 ) }
    dend_20 { pt3dadd( -35.8233, 311.588, -10.7465, 0.29 ) }
    dend_20 { pt3dadd( -35.827, 312.614, -10.7595, 0.29 ) }
    dend_20 { pt3dadd( -35.8308, 312.68, -10.7618, 0.29 ) }
    dend_20 { pt3dadd( -35.9157, 313.578, -10.8035, 0.29 ) }
    dend_20 { pt3dadd( -35.9301, 313.693, -10.8072, 0.29 ) }
    dend_20 { pt3dadd( -36.0912, 314.634, -10.768, 0.29 ) }
    dend_20 { pt3dadd( -36.1472, 314.895, -10.7405, 0.29 ) }
    dend_20 { pt3dadd( -36.5505, 316.482, -10.4719, 0.29 ) }
    dend_20 { pt3dadd( -36.5833, 316.597, -10.4463, 0.29 ) }
    dend_20 { pt3dadd( -36.7391, 317.092, -10.3019, 1.03 ) }
    dend_20 { pt3dadd( -37.0423, 318.097, -9.97895, 1.03 ) }
    dend_20 { pt3dadd( -37.1682, 318.533, -9.81951, 1.25 ) }
    dend_20 { pt3dadd( -37.1785, 318.578, -9.80339, 1.25 ) }
    dend_20 { pt3dadd( -37.2409, 319.006, -9.66877, 0.88 ) }
    dend_20 { pt3dadd( -37.2924, 319.473, -9.57172, 0.44 ) }
    dend_20 { pt3dadd( -37.3303, 319.959, -9.52492, 0.22 ) }
    dend_20 { pt3dadd( -37.341, 320.19, -9.52307, 0.22 ) }
    dend_20 { pt3dadd( -37.3989, 321.297, -9.51642, 0.22 ) }
    dend_20 { pt3dadd( -37.4336, 321.806, -9.51495, 0.22 ) }
    dend_20 { pt3dadd( -37.4752, 322.195, -9.51038, 0.59 ) }
    dend_20 { pt3dadd( -37.5305, 322.575, -9.48761, 0.59 ) }
    dend_20 { pt3dadd( -37.5405, 322.631, -9.48165, 0.59 ) }
    dend_20 { pt3dadd( -37.6787, 323.344, -9.37558, 0.22 ) }
    dend_20 { pt3dadd( -37.7056, 323.479, -9.34863, 0.22 ) }
    dend_20 { pt3dadd( -38.0404, 325.034, -8.96674, 0.22 ) }
    dend_20 { pt3dadd( -38.1527, 325.549, -8.82831, 0.59 ) }
    dend_20 { pt3dadd( -38.2676, 326.017, -8.67984, 0.22 ) }
    dend_20 { pt3dadd( -38.2806, 326.07, -8.66194, 0.22 ) }
    dend_20 { pt3dadd( -38.4484, 326.782, -8.42082, 0.22 ) }
    dend_20 { pt3dadd( -38.7517, 328.084, -7.95988, 0.22 ) }
    dend_20 { pt3dadd( -38.77, 328.183, -7.92866, 0.22 ) }
    dend_20 { pt3dadd( -38.9434, 329.6, -7.61415, 0.22 ) }
    dend_20 { pt3dadd( -39.0224, 330.602, -7.44825, 0.22 ) }
    dend_20 { pt3dadd( -39.0666, 331.494, -7.33814, 0.37 ) }
    dend_20 { pt3dadd( -39.0816, 332.297, -7.2765, 0.74 ) }
    dend_20 { pt3dadd( -39.0573, 333.634, -7.24163, 1.47 ) }
    dend_20 { pt3dadd( -39.0412, 335.073, -7.22365, 1.77 ) }
    dend_20 { pt3dadd( -39.025, 336.092, -7.24056, 1.77 ) }
    dend_20 { pt3dadd( -39.0263, 336.15, -7.24041, 1.77 ) }
    dend_20 { pt3dadd( -39.0616, 336.803, -7.22222, 0.74 ) }
    dend_20 { pt3dadd( -39.1451, 337.704, -7.16692, 0.74 ) }
    dend_20 { pt3dadd( -39.2958, 338.605, -7.03626, 0.22 ) }
    dend_20 { pt3dadd( -39.3181, 338.716, -7.01561, 0.22 ) }
    dend_20 { pt3dadd( -39.5978, 340.244, -6.79376, 0.22 ) }
    dend_20 { pt3dadd( -39.6065, 340.301, -6.78755, 0.22 ) }
    dend_20 { pt3dadd( -39.6476, 340.658, -6.76306, 0.44 ) }
    dend_20 { pt3dadd( -39.6554, 340.781, -6.76087, 0.44 ) }
    dend_20 { pt3dadd( -39.6721, 342.042, -6.80056, 0.44 ) }
    dend_20 { pt3dadd( -39.6787, 342.699, -6.82821, 0.74 ) }
    dend_20 { pt3dadd( -39.6815, 342.878, -6.83437, 0.74 ) }
    dend_20 { pt3dadd( -39.6897, 343.175, -6.83993, 0.74 ) }
    dend_20 { pt3dadd( -39.7023, 343.66, -6.83799, 0.44 ) }
    dend_20 { pt3dadd( -39.7237, 344.528, -6.8102, 0.44 ) }
    dend_20 { pt3dadd( -39.7252, 344.585, -6.80647, 0.44 ) }
    dend_20 { pt3dadd( -39.7591, 346.196, -6.6352, 0.44 ) }
    dend_20 { pt3dadd( -39.7595, 346.253, -6.62872, 0.44 ) }
    dend_20 { pt3dadd( -39.7518, 346.764, -6.56643, 0.37 ) }
    dend_20 { pt3dadd( -39.7303, 347.354, -6.49646, 0.37 ) }
    dend_20 { pt3dadd( -39.7267, 347.411, -6.48964, 0.37 ) }
    dend_20 { pt3dadd( -39.6872, 348.074, -6.4161, 0.22 ) }
    dend_20 { pt3dadd( -39.6798, 348.197, -6.40344, 0.22 ) }
    dend_20 { pt3dadd( -39.6245, 349.325, -6.28888, 0.22 ) }
    dend_20 { pt3dadd( -39.5994, 349.938, -6.22767, 0.96 ) }
    dend_20 { pt3dadd( -39.576, 350.538, -6.16722, 0.96 ) }
    dend_20 { pt3dadd( -39.5301, 351.188, -6.12089, 0.22 ) }
    dend_20 { pt3dadd( -39.5078, 351.425, -6.11026, 0.22 ) }
    dend_20 { pt3dadd( -39.3101, 353.038, -6.06745, 0.22 ) }
    dend_20 { pt3dadd( -39.242, 353.448, -6.06409, 0.88 ) }
    dend_20 { pt3dadd( -39.2306, 353.504, -6.0642, 0.88 ) }
    dend_20 { pt3dadd( -39.0062, 354.446, -6.09072, 1.25 ) }
    dend_20 { pt3dadd( -38.9316, 354.707, -6.10525, 1.25 ) }
    dend_20 { pt3dadd( -38.9156, 354.762, -6.10919, 1.25 ) }
    dend_20 { pt3dadd( -38.7727, 355.226, -6.15735, 0.29 ) }
    dend_20 { pt3dadd( -38.763, 355.282, -6.1575, 0.29 ) }
    dend_20 { pt3dadd( -38.7473, 355.453, -6.14681, 0.29 ) }
    dend_20 { pt3dadd( -38.7475, 355.518, -6.13581, 0.29 ) }
    dend_20 { pt3dadd( -38.7851, 356.287, -5.99663, 0.22 ) }
    dend_20 { pt3dadd( -38.8001, 356.473, -5.96204, 0.22 ) }
    dend_20 { pt3dadd( -38.917, 357.569, -5.75002, 0.22 ) }
    dend_20 { pt3dadd( -38.9242, 357.633, -5.73715, 0.22 ) }
    dend_20 { pt3dadd( -39.0012, 358.294, -5.60012, 0.96 ) }
    dend_20 { pt3dadd( -39.0763, 358.885, -5.47773, 0.96 ) }
    dend_20 { pt3dadd( -39.0997, 359.009, -5.44228, 0.96 ) }
    dend_20 { pt3dadd( -39.1505, 359.235, -5.36656, 0.66 ) }
    dend_20 { pt3dadd( -39.2515, 359.618, -5.24251, 0.66 ) }
    dend_20 { pt3dadd( -39.2838, 359.732, -5.20983, 0.66 ) }
    dend_20 { pt3dadd( -39.5124, 360.517, -5.00781, 0.52 ) }
    dend_20 { pt3dadd( -39.8608, 361.644, -4.73676, 0.22 ) }
    dend_20 { pt3dadd( -39.9007, 361.758, -4.71063, 0.22 ) }
    dend_20 { pt3dadd( -40.4799, 363.24, -4.39926, 0.22 ) }
    dend_20 { pt3dadd( -40.6584, 363.616, -4.29781, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_20 { pt3dadd( -40.7118, 363.722, -4.26526, 0.81 ) }
    dend_20 { pt3dadd( -40.962, 364.182, -4.07605, 0.81 ) }
    dend_20 { pt3dadd( -41.3304, 364.95, -3.72464, 0.15 ) }
    dend_20 { pt3dadd( -41.4988, 365.318, -3.51249, 0.15 ) }
    dend_20 { pt3dadd( -42.0796, 366.572, -2.67371, 0.15 ) }
    dend_20 { pt3dadd( -42.4041, 367.294, -2.16258, 0.15 ) }
    dend_20 { pt3dadd( -42.8241, 368.266, -1.44247, 0.15 ) }
    dend_20 { pt3dadd( -43.2631, 369.383, -0.556143, 1.4 ) }
    dend_20 { pt3dadd( -43.4817, 370.053, -0.00431974, 1.4 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -216.93, 112.857, -182.873, 0.22 ) }
    dend_16 { pt3dadd( -218.123, 113.039, -183.92, 0.22 ) }
    dend_16 { pt3dadd( -218.851, 113.146, -184.475, 0.22 ) }
    dend_16 { pt3dadd( -219.759, 113.276, -185.052, 0.22 ) }
    dend_16 { pt3dadd( -219.812, 113.283, -185.082, 0.22 ) }
    dend_16 { pt3dadd( -220.497, 113.379, -185.422, 0.22 ) }
    dend_16 { pt3dadd( -220.545, 113.386, -185.444, 0.22 ) }
    dend_16 { pt3dadd( -221.239, 113.463, -185.697, 1.25 ) }
    dend_16 { pt3dadd( -222.269, 113.546, -186.074, 1.25 ) }
    dend_16 { pt3dadd( -222.828, 113.568, -186.281, 0.22 ) }
    dend_16 { pt3dadd( -224.024, 113.61, -186.779, 0.22 ) }
    dend_16 { pt3dadd( -224.202, 113.616, -186.857, 0.22 ) }
    dend_16 { pt3dadd( -225.377, 113.674, -187.416, 0.22 ) }
    dend_16 { pt3dadd( -225.667, 113.694, -187.563, 0.22 ) }
    dend_16 { pt3dadd( -226.635, 113.776, -188.078, 0.22 ) }
    dend_16 { pt3dadd( -227.803, 113.878, -188.718, 0.22 ) }
    dend_16 { pt3dadd( -228.088, 113.906, -188.878, 1.11 ) }
    dend_16 { pt3dadd( -228.15, 113.912, -188.911, 1.11 ) }
    dend_16 { pt3dadd( -228.894, 114.013, -189.305, 1.11 ) }
    dend_16 { pt3dadd( -228.956, 114.018, -189.337, 1.11 ) }
    dend_16 { pt3dadd( -229.904, 114.032, -189.792, 0.22 ) }
    dend_16 { pt3dadd( -229.959, 114.032, -189.818, 0.22 ) }
    dend_16 { pt3dadd( -230.749, 114.047, -190.248, 0.22 ) }
    dend_16 { pt3dadd( -230.876, 114.06, -190.32, 0.22 ) }
    dend_16 { pt3dadd( -231.716, 114.154, -190.821, 0.22 ) }
    dend_16 { pt3dadd( -231.776, 114.163, -190.858, 0.22 ) }
    dend_16 { pt3dadd( -232.633, 114.374, -191.425, 0.22 ) }
    dend_16 { pt3dadd( -232.732, 114.404, -191.493, 0.22 ) }
    dend_16 { pt3dadd( -233.553, 114.777, -192.13, 0.96 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 38/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -216.93, 112.857, -182.873, 0.22 ) }
    dend_15 { pt3dadd( -216.989, 114.499, -183.234, 0.22 ) }
    dend_15 { pt3dadd( -216.991, 114.58, -183.254, 0.22 ) }
    dend_15 { pt3dadd( -217.064, 115.923, -183.601, 0.22 ) }
    dend_15 { pt3dadd( -217.071, 116.092, -183.658, 0.22 ) }
    dend_15 { pt3dadd( -217.127, 117.401, -184.099, 0.22 ) }
    dend_15 { pt3dadd( -217.243, 120.117, -185.014, 0.22 ) }
    dend_15 { pt3dadd( -217.248, 120.272, -185.072, 0.22 ) }
    dend_15 { pt3dadd( -217.277, 121.163, -185.435, 0.22 ) }
    dend_15 { pt3dadd( -217.347, 122.75, -186.216, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 48/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -176.821, 72.7352, -156.863, 0.66 ) }
    dend_13 { pt3dadd( -177.304, 72.0714, -156.863, 0.66 ) }
    dend_13 { pt3dadd( -177.869, 71.3079, -156.855, 0.66 ) }
    dend_13 { pt3dadd( -178.677, 70.2656, -156.877, 0.44 ) }
    dend_13 { pt3dadd( -179.37, 69.4338, -156.95, 0.52 ) }
    dend_13 { pt3dadd( -179.883, 68.847, -157.024, 0.52 ) }
    dend_13 { pt3dadd( -180.706, 68.0119, -157.179, 0.22 ) }
    dend_13 { pt3dadd( -180.764, 67.9585, -157.194, 0.22 ) }
    dend_13 { pt3dadd( -181.851, 67.1313, -157.575, 0.22 ) }
    dend_13 { pt3dadd( -182.636, 66.6762, -157.923, 0.88 ) }
    dend_13 { pt3dadd( -182.771, 66.6263, -157.989, 0.88 ) }
    dend_13 { pt3dadd( -184.017, 66.3652, -158.646, 0.88 ) }
    dend_13 { pt3dadd( -184.086, 66.3564, -158.686, 0.88 ) }
    dend_13 { pt3dadd( -185.056, 66.2846, -159.247, 0.44 ) }
    dend_13 { pt3dadd( -185.809, 66.3186, -159.685, 0.22 ) }
    dend_13 { pt3dadd( -187.056, 66.4438, -160.387, 0.22 ) }
    dend_13 { pt3dadd( -187.361, 66.4859, -160.561, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 65/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -176.821, 72.7352, -156.863, 0.22 ) }
    dend_12 { pt3dadd( -177.354, 73.2358, -157.147, 0.22 ) }
    dend_12 { pt3dadd( -177.884, 73.7237, -157.437, 0.22 ) }
    dend_12 { pt3dadd( -178.782, 74.5484, -157.927, 0.22 ) }
    dend_12 { pt3dadd( -179.486, 75.1955, -158.312, 0.22 ) }
    dend_12 { pt3dadd( -179.558, 75.2619, -158.352, 0.22 ) }
    dend_12 { pt3dadd( -180.522, 76.1476, -158.878, 0.22 ) }
    dend_12 { pt3dadd( -180.572, 76.198, -158.915, 0.22 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 73/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -264.51, -210.547, 44.6927, 0.29 ) }
    dend_68 { pt3dadd( -270.668, -212.101, 46.0331, 0.29 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 75/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -264.51, -210.547, 44.6927, 0.29 ) }
    dend_67 { pt3dadd( -275.343, -213.533, 44.6199, 0.29 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 77/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -247.828, -287.581, 14.8982, 0.29 ) }
    dend_63 { pt3dadd( -250.495, -300.711, 13.2639, 0.29 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 79/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -247.828, -287.581, 14.8982, 0.29 ) }
    dend_62 { pt3dadd( -251.073, -295.187, 11.5485, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 81/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 171.424, 242.581, -66.9256, 0.15 ) }
    dend_28 { pt3dadd( 174.281, 243.793, -67.5312, 0.15 ) }
    dend_28 { pt3dadd( 175.172, 244.239, -67.6712, 0.96 ) }
    dend_28 { pt3dadd( 175.275, 244.295, -67.6838, 0.96 ) }
    dend_28 { pt3dadd( 176.454, 244.993, -67.7615, 0.15 ) }
    dend_28 { pt3dadd( 176.525, 245.037, -67.7635, 0.15 ) }
    dend_28 { pt3dadd( 177.474, 245.72, -67.6318, 0.15 ) }
    dend_28 { pt3dadd( 177.696, 245.99, -67.4347, 0.52 ) }
    dend_28 { pt3dadd( 177.73, 246.038, -67.3916, 0.52 ) }
    dend_28 { pt3dadd( 178.021, 246.473, -66.9392, 0.66 ) }
    dend_28 { pt3dadd( 178.05, 246.515, -66.8874, 0.66 ) }
    dend_28 { pt3dadd( 179.052, 247.754, -65.3639, 0.15 ) }
    dend_28 { pt3dadd( 179.731, 248.451, -64.4781, 0.15 ) }
    dend_28 { pt3dadd( 179.83, 248.544, -64.3635, 0.96 ) }
    dend_28 { pt3dadd( 179.924, 248.623, -64.2669, 0.96 ) }
    dend_28 { pt3dadd( 180.667, 249.235, -63.5312, 0.15 ) }
    dend_28 { pt3dadd( 181.829, 250.193, -62.4355, 0.15 ) }
    dend_28 { pt3dadd( 182.648, 250.84, -61.7321, 0.15 ) }
    dend_28 { pt3dadd( 182.75, 250.926, -61.6389, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_28 { pt3dadd( 183.547, 251.632, -60.8866, 0.15 ) }
    dend_28 { pt3dadd( 184.757, 252.735, -59.748, 0.15 ) }
    dend_28 { pt3dadd( 185.097, 253.074, -59.4448, 0.88 ) }
    dend_28 { pt3dadd( 185.184, 253.167, -59.3754, 0.88 ) }
    dend_28 { pt3dadd( 185.418, 253.433, -59.2303, 0.88 ) }
    dend_28 { pt3dadd( 185.474, 253.492, -59.2088, 0.88 ) }
    dend_28 { pt3dadd( 186.057, 254.111, -59.0373, 0.22 ) }
    dend_28 { pt3dadd( 187.723, 255.774, -58.6958, 0.22 ) }
    dend_28 { pt3dadd( 188.215, 256.259, -58.6002, 0.66 ) }
    dend_28 { pt3dadd( 190.427, 258.444, -58.1628, 0.15 ) }
    dend_28 { pt3dadd( 191.705, 259.703, -57.8967, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 171.424, 242.581, -66.9256, 0.15 ) }
    dend_27 { pt3dadd( 172.074, 243.774, -67.1248, 0.15 ) }
    dend_27 { pt3dadd( 172.803, 245.114, -67.3484, 0.15 ) }
    dend_27 { pt3dadd( 172.843, 245.188, -67.361, 0.15 ) }
    dend_27 { pt3dadd( 174.072, 247.445, -67.7377, 1.03 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 16/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 133.754, 191.318, -64.9202, 0.29 ) }
    dend_25 { pt3dadd( 135.794, 190.788, -66.1693, 0.29 ) }
    dend_25 { pt3dadd( 135.861, 190.769, -66.2077, 0.29 ) }
    dend_25 { pt3dadd( 136.909, 190.459, -66.7952, 0.74 ) }
    dend_25 { pt3dadd( 137.575, 190.285, -67.0762, 0.74 ) }
    dend_25 { pt3dadd( 138.388, 190.084, -67.3697, 0.74 ) }
    dend_25 { pt3dadd( 138.451, 190.068, -67.3941, 0.74 ) }
    dend_25 { pt3dadd( 139.522, 189.819, -67.692, 0.22 ) }
    dend_25 { pt3dadd( 139.587, 189.803, -67.7113, 0.22 ) }
    dend_25 { pt3dadd( 141.344, 189.348, -68.2479, 0.22 ) }
    dend_25 { pt3dadd( 141.417, 189.327, -68.2698, 0.22 ) }
    dend_25 { pt3dadd( 142.489, 189.049, -68.5602, 0.52 ) }
    dend_25 { pt3dadd( 142.555, 189.031, -68.5731, 0.52 ) }
    dend_25 { pt3dadd( 143.229, 188.859, -68.6172, 0.52 ) }
    dend_25 { pt3dadd( 143.444, 188.819, -68.6152, 0.52 ) }
    dend_25 { pt3dadd( 144.11, 188.763, -68.5132, 0.22 ) }
    dend_25 { pt3dadd( 144.178, 188.765, -68.4972, 0.22 ) }
    dend_25 { pt3dadd( 144.738, 188.802, -68.3532, 0.22 ) }
    dend_25 { pt3dadd( 145.028, 188.828, -68.2929, 0.22 ) }
    dend_25 { pt3dadd( 145.856, 188.887, -68.1659, 0.22 ) }
    dend_25 { pt3dadd( 145.993, 188.892, -68.1513, 0.22 ) }
    dend_25 { pt3dadd( 147.239, 188.924, -68.0741, 0.22 ) }
    dend_25 { pt3dadd( 147.808, 188.91, -68.1161, 0.74 ) }
    dend_25 { pt3dadd( 147.876, 188.903, -68.1292, 0.74 ) }
    dend_25 { pt3dadd( 148.881, 188.729, -68.4022, 0.74 ) }
    dend_25 { pt3dadd( 148.954, 188.711, -68.4261, 0.74 ) }
    dend_25 { pt3dadd( 149.182, 188.663, -68.5203, 1.03 ) }
    dend_25 { pt3dadd( 150.725, 188.385, -69.2913, 0.52 ) }
    dend_25 { pt3dadd( 151.608, 188.255, -69.7194, 0.22 ) }
    dend_25 { pt3dadd( 151.67, 188.247, -69.7495, 0.22 ) }
    dend_25 { pt3dadd( 152.184, 188.195, -70.0045, 0.59 ) }
    dend_25 { pt3dadd( 153.267, 188.091, -70.5061, 0.59 ) }
    dend_25 { pt3dadd( 153.425, 188.072, -70.5656, 0.59 ) }
    dend_25 { pt3dadd( 154.287, 187.961, -70.7759, 0.59 ) }
    dend_25 { pt3dadd( 154.363, 187.95, -70.7935, 0.59 ) }
    dend_25 { pt3dadd( 155.001, 187.839, -70.9196, 0.96 ) }
    dend_25 { pt3dadd( 155.078, 187.822, -70.9324, 0.96 ) }
    dend_25 { pt3dadd( 156.043, 187.543, -71.0032, 0.96 ) }
    dend_25 { pt3dadd( 156.118, 187.519, -71.0092, 0.96 ) }
    dend_25 { pt3dadd( 156.819, 187.302, -71.0707, 0.44 ) }
    dend_25 { pt3dadd( 156.886, 187.28, -71.0744, 0.44 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 57/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 133.754, 191.318, -64.9202, 0.29 ) }
    dend_24 { pt3dadd( 134.119, 190.054, -65.1748, 0.29 ) }
    dend_24 { pt3dadd( 134.513, 188.692, -65.449, 0.29 ) }
    dend_24 { pt3dadd( 134.719, 187.979, -65.5927, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_77, dend_74, dend_35, dend_0, dend_79, dend_78, dend_76, dend_75, dend_51, dend_36, dend_30, dend_1, dend_53, dend_52, dend_42, dend_37, dend_32, dend_31, dend_5, dend_2, dend_57, dend_54, dend_50, dend_43, dend_41, dend_38, dend_34, dend_33, dend_17, dend_6, dend_4, dend_3, dend_69, dend_58, dend_56, dend_55, dend_47, dend_44, dend_40, dend_39, dend_29, dend_18, dend_10, dend_7, dend_73, dend_70, dend_64, dend_59, dend_49, dend_48, dend_46, dend_45, dend_22, dend_19, dend_14, dend_11, dend_9, dend_8, dend_72, dend_71, dend_66, dend_65, dend_61, dend_60, dend_26, dend_23, dend_21, dend_20, dend_16, dend_15, dend_13, dend_12, dend_68, dend_67, dend_63, dend_62, dend_28, dend_27, dend_25, dend_24]}
    ModelViewParmSubset_2 = new SectionList()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_77, dend_74, dend_35, dend_0, dend_79, dend_78, dend_76, dend_75, dend_51, dend_36, dend_30, dend_1, dend_53, dend_52, dend_42, dend_37, dend_32, dend_31, dend_5, dend_2, dend_57, dend_54, dend_50, dend_43, dend_41, dend_38, dend_34, dend_33, dend_17, dend_6, dend_4, dend_3, dend_69, dend_58, dend_56, dend_55, dend_47, dend_44, dend_40, dend_39, dend_29, dend_18, dend_10, dend_7, dend_73, dend_70, dend_64, dend_59, dend_49, dend_48, dend_46, dend_45, dend_22, dend_19, dend_14, dend_11, dend_9, dend_8, dend_72, dend_71, dend_66, dend_65, dend_61, dend_60, dend_26, dend_23, dend_21, dend_20, dend_16, dend_15, dend_13, dend_12, dend_68, dend_67, dend_63, dend_62, dend_28, dend_27, dend_25, dend_24]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_77 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_74 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_79 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_78 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_76 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_75 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_53 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_52 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_32 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_57 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_43 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_41 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_34 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_33 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_69 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_58 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_56 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_55 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_47 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_44 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_39 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_29 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_73 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_70 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_64 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_59 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_48 OneSecGrp_SectionRef_53.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_9 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_8 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_71 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_65 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_60 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_26 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_21 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_20 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_51 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_30 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_37 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_6 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_38 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_7 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_17 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_18 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_54 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_45 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_49 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_46 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_23 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_24 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_11 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_12 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_13 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_25 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_72 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_16 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_27 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_66 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_68 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_67 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_28 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_61 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_62 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_63 OneSecGrp_SectionRef_78.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_68, dend_67, dend_63, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_77 nseg = 3
    dend_74 nseg = 7
    dend_79 nseg = 3
    dend_78 nseg = 3
    dend_76 nseg = 5
    dend_75 nseg = 5
    dend_53 nseg = 3
    dend_52 nseg = 3
    dend_32 nseg = 11
    dend_31 nseg = 5
    dend_2 nseg = 9
    dend_57 nseg = 3
    dend_50 nseg = 5
    dend_43 nseg = 3
    dend_41 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 3
    dend_4 nseg = 3
    dend_3 nseg = 3
    dend_69 nseg = 9
    dend_58 nseg = 9
    dend_56 nseg = 15
    dend_55 nseg = 17
    dend_47 nseg = 7
    dend_44 nseg = 7
    dend_39 nseg = 9
    dend_29 nseg = 15
    dend_10 nseg = 9
    dend_73 nseg = 7
    dend_70 nseg = 3
    dend_64 nseg = 3
    dend_59 nseg = 5
    dend_48 nseg = 7
    dend_22 nseg = 11
    dend_14 nseg = 3
    dend_9 nseg = 5
    dend_8 nseg = 13
    dend_71 nseg = 9
    dend_65 nseg = 11
    dend_60 nseg = 9
    dend_26 nseg = 3
    dend_21 nseg = 9
    dend_20 nseg = 15
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_LBC_2571ecba02_0_0


