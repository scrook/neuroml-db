// Cell: bAC217_L6_BTC_0aac470ea8_0_0
/*
{
  "id" : "bAC217_L6_BTC_0aac470ea8_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.16881, -12.804, 0.0, 3.44428", "1.99522, -11.5105, 0.0, 5.75363", "1.82164, -10.2169, 0.0, 7.75663", "1.64805, -8.92341, 0.0, 8.89598", "1.47447, -7.62987, 0.0, 9.91596", "1.30088, -6.33633, 0.0, 10.9547", "1.1273, -5.04279, 0.0, 11.8384", "0.953711, -3.74926, 0.0, 12.6846", "0.780126, -2.45572, 0.0, 13.1367", "0.606541, -1.16218, 0.0, 13.4162", "0.432956, 0.13136, 0.0, 13.3909", "0.25937, 1.4249, 0.0, 13.2383", "0.085785, 2.71844, 0.0, 12.8868", "-0.0878002, 4.01197, 0.0, 12.8103", "-0.261385, 5.30551, 0.0, 12.9125", "-0.434971, 6.59905, 0.0, 12.4763", "-0.608556, 7.89259, 0.0, 11.6777", "-0.782141, 9.18613, 0.0, 10.5994", "-0.955726, 10.4797, 0.0, 9.19908", "-1.12931, 11.7732, 0.0, 7.03753", "-1.3029, 13.0667, 0.0, 4.1381" ]
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.21969, -11.987, -4.59, 1.84", "3.21969, -11.987, -4.59, 1.84", "3.50817, -12.8953, -4.64369, 1.84", "4.12351, -14.8327, -4.75822, 2.14", "4.5174, -16.0729, -4.83153, 1.92", "5.01824, -17.6498, -4.92475, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.219697, -12.424, -1.64, 2.43", "0.219697, -12.424, -1.64, 2.43", "-0.632381, -14.352, -1.89574, 1.92", "-1.34143, -15.9563, -2.10855, 2.14", "-1.78039, -16.9495, -2.2403, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.5397, 11.896, 0.0, 3.02", "1.5397, 11.896, 0.0, 3.02", "1.8789, 13.1038, -0.0769799, 2.36", "2.33165, 14.5979, -0.161389, 2.36", "3.0838, 16.998, -0.282366, 2.29", "3.66273, 18.7771, -0.38327, 2.21", "4.25626, 20.537, -0.487788, 2.29", "4.77724, 22.053, -0.581068, 2.43", "5.37437, 23.7297, -0.691222, 2.36", "5.87598, 25.0408, -0.768345, 2.51", "6.41426, 26.3199, -0.844342, 3.17", "6.76384, 27.107, -0.878859, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.3029, 13.0667, 0.0, 0.475068", "-3.29794, 27.9334, 0.0, 0.475068", "-5.29297, 42.8002, 0.0, 0.475068" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "5.01824, -17.6498, -4.92475, 0.88", "4.03247, -17.6488, -5.49615, 0.88", "3.07824, -17.7314, -6.03706, 0.81", "2.12928, -17.8922, -6.58999, 0.81", "1.03371, -18.1572, -7.25019, 0.96", "-0.00458741, -18.482, -7.90576, 1.4", "-1.00395, -18.8824, -8.59379, 1.77", "-1.88595, -19.2957, -9.23946, 0.44", "-2.64619, -19.7521, -9.82422, 0.44", "-3.06766, -20.0902, -10.1467, 0.44", "-3.39883, -20.4881, -10.4404, 0.66", "-3.78593, -21.2517, -10.9467, 1.03", "-11.5821, -22.8232, -17.6653, 1.03", "-18.3105, -23.9229, -25.5371, 1.03", "-23.2592, -23.6519, -34.6915, 1.03" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "5.01824, -17.6498, -4.92475, 1.11", "5.82008, -18.5841, -4.86127, 1.11", "6.53002, -19.4595, -4.74873, 1.25", "6.80473, -19.816, -4.68219, 1.7", "7.28627, -20.4704, -4.54683, 1.77", "8.10735, -21.5912, -4.31539, 1.33", "8.74147, -22.4649, -4.14478, 1.03", "9.21952, -23.1503, -3.97985, 1.03", "9.69522, -23.8616, -3.82879, 1.03", "10.0991, -24.4919, -3.73287, 1.33", "10.6852, -25.4632, -3.66111, 1.33", "11.221, -26.4148, -3.6882, 0.74", "11.7471, -27.423, -3.81408, 0.74", "12.293, -28.4562, -3.99149, 0.88", "12.7035, -29.2308, -4.14144, 1.33", "13.0281, -29.8185, -4.22846, 2.06", "13.7149, -31.0409, -4.35058, 0.96", "14.3021, -32.0174, -4.3878, 0.74", "14.7535, -32.7242, -4.37623, 1.18", "15.0682, -33.1947, -4.3238, 1.55", "15.8892, -34.399, -4.1517, 0.88", "16.3757, -35.1234, -4.07491, 0.81", "17.0303, -36.1311, -4.04785, 0.88", "17.3837, -36.7111, -4.0881, 1.4", "17.676, -37.2447, -4.18188, 1.4", "18.0929, -38.0888, -4.40241, 0.81", "18.4714, -38.9271, -4.69237, 0.88", "18.7707, -39.5968, -4.953, 0.52", "18.9478, -39.9801, -5.11422, 0.96", "19.2768, -40.612, -5.36192, 1.92", "19.7352, -41.4072, -5.62734, 0.74", "20.1988, -42.1498, -5.84127, 0.74", "20.6819, -42.8536, -6.01151, 0.96", "21.1713, -43.4938, -6.16535, 1.55", "22.0574, -44.5393, -6.44778, 0.81", "22.821, -45.3575, -6.68941, 0.81", "23.5563, -46.0926, -6.92271, 1.25", "24.2847, -46.7983, -7.15099, 1.4", "25.3593, -47.8472, -7.44597, 0.81", "26.2764, -48.7869, -7.65493, 0.81", "26.7966, -49.329, -7.75795, 1.18", "27.3968, -49.9194, -7.85527, 1.55", "28.0388, -50.5476, -7.92919, 1.55", "28.8153, -51.3623, -7.98665, 0.59", "29.5617, -52.2259, -7.96134, 0.81", "30.0424, -52.8303, -7.88602, 1.33", "30.7601, -53.7754, -7.73283, 0.37", "31.1458, -54.3228, -7.61121, 0.22", "35.844, -60.2158, -8.18756, 0.22", "41.414, -65.1391, -9.92401, 0.22", "47.4441, -69.8331, -10.2395, 0.22", "53.0977, -74.8333, -9.14947, 0.22", "59.3387, -79.0093, -7.54123, 0.22", "64.9227, -84.1391, -6.82044, 0.22", "70.1846, -89.5884, -7.35674, 0.22", "75.2715, -95.0279, -8.8519, 0.22", "80.6618, -100.38, -9.13997, 0.22", "85.5931, -106.098, -9.71905, 0.22", "90.0235, -112.071, -11.0379, 0.22", "93.9465, -118.017, -13.5625, 0.22", "98.7685, -123.103, -16.5644, 0.22", "102.321, -128.5, -20.5729, 0.22", "106.471, -134.257, -23.2156, 0.22", "109.906, -140.752, -24.7598, 0.22", "114.202, -146.93, -25.132, 0.22" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.78039, -16.9495, -2.2403, 0.96", "-2.88645, -17.5491, -2.53426, 0.96", "-3.48989, -17.8967, -2.70215, 0.96", "-4.10589, -18.2744, -2.88111, 1.25", "-4.43037, -18.4889, -2.97916, 1.25", "-5.0251, -18.9033, -3.17172, 0.96", "-5.58609, -19.305, -3.36731, 0.96", "-6.07887, -19.672, -3.55108, 1.47", "-6.69795, -20.0952, -3.78983, 1.62", "-7.46296, -20.5419, -4.07997, 0.96", "-8.0883, -20.8559, -4.32051, 0.96", "-8.97204, -21.2233, -4.65693, 1.11", "-9.6069, -21.428, -4.89353, 1.4", "-10.7177, -21.6953, -5.3036, 1.33", "-11.6312, -21.8617, -5.65273, 0.96", "-12.5641, -22.0109, -6.02091, 1.18", "-13.032, -22.0838, -6.20886, 1.18", "-14.2218, -22.2925, -6.70369, 0.88", "-14.9005, -22.4593, -7.00075, 0.88", "-15.3588, -22.6251, -7.22411, 1.03", "-16.2021, -23.0489, -7.65099, 1.25", "-16.7424, -23.3847, -7.92104, 0.88", "-17.2642, -23.7675, -8.17716, 0.88", "-17.7324, -24.1502, -8.4004, 1.11", "-18.2607, -24.5712, -8.65499, 1.25", "-18.9375, -25.092, -9.03143, 0.88", "-19.433, -25.4907, -9.38927, 1.03", "-19.7696, -25.7968, -9.71306, 1.4", "-20.1555, -26.1929, -10.2095, 1.18", "-20.5891, -26.6737, -10.9671, 1.25", "-20.8058, -27.0774, -11.7901, 1.4", "-20.123, -27.1931, -12.4548, 1.4", "-19.3837, -27.1157, -12.6788, 1.47", "-17.9156, -26.8553, -12.8942, 0.52", "-17.1418, -26.692, -12.8873, 0.52", "-16.3437, -26.5087, -12.7865, 0.59", "-15.0255, -26.2138, -12.4651, 0.59", "-14.2376, -26.051, -12.1922, 0.66", "-13.4114, -25.9219, -11.8232, 0.74", "-12.3199, -25.7952, -11.2707, 0.59", "-11.5079, -25.7456, -10.8249, 0.88", "-10.4275, -25.7329, -10.1793, 0.37", "-9.86152, -25.7714, -9.8201, 0.37", "-9.31908, -25.8612, -9.43337, 0.37", "-14.4926, -30.3024, -12.9287, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.78039, -16.9495, -2.2403, 1.4", "-1.65799, -18.3305, -2.01992, 1.4", "-1.51838, -19.7511, -1.81677, 1.03", "-1.37581, -21.1323, -1.62, 1.33", "-1.21444, -22.7277, -1.38376, 1.25", "-1.06093, -24.1774, -1.14841, 1.25", "-0.9162, -25.5591, -0.90046, 1.11", "-0.796463, -26.888, -0.675262, 1.84", "-0.713239, -27.7468, -0.54337, 1.62", "-0.540594, -29.3862, -0.268814, 1.18", "-0.369401, -31.1244, 0.0456549, 1.11", "-0.207634, -32.8729, 0.373517, 1.25", "-0.111375, -34.029, 0.581013, 1.55", "-0.0172052, -35.2866, 0.816211, 2.06" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.76384, 27.107, -0.878859, 2.88", "6.93883, 28.1849, -0.738726, 2.88", "7.15972, 29.5456, -0.56184, 2.58", "7.40936, 31.0833, -0.361933, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.76384, 27.107, -0.878859, 1.62", "8.19253, 26.5997, -1.26096, 1.62", "9.85982, 25.8368, -1.63317, 0.96", "10.9605, 25.2517, -1.84358, 0.96", "12.1687, 24.5194, -2.05034, 1.11", "12.8146, 24.0927, -2.14907, 1.25", "14.0383, 23.202, -2.33188, 0.96", "15.4866, 21.9315, -2.50754, 0.81", "16.2888, 21.1843, -2.59338, 0.81", "16.9894, 20.5531, -2.6754, 0.81", "17.6535, 19.9926, -2.796, 0.88", "18.7713, 19.1456, -3.0529, 0.74", "19.9763, 18.3576, -3.37274, 0.59", "21.044, 17.7477, -3.66247, 0.74", "21.7967, 17.347, -3.85512, 0.66", "22.5879, 16.9282, -4.01409, 0.66", "23.7194, 16.316, -4.18135, 0.96", "24.8845, 15.6899, -4.28618, 1.11", "26.3186, 14.8532, -4.35423, 0.81", "27.4639, 14.1072, -4.37915, 0.81", "28.5675, 13.3335, -4.40498, 0.52", "29.2842, 12.7873, -4.4561, 0.52", "29.822, 12.3332, -4.57274, 0.52", "30.5081, 11.6877, -4.89216, 0.74", "31.3006, 10.8813, -5.47787, 0.96", "31.8021, 10.3293, -5.94835, 1.03", "32.4322, 9.60912, -6.61984, 0.81", "33.2282, 8.73829, -7.42338, 0.52", "33.8971, 7.96711, -8.13406, 0.88", "34.2348, 7.5823, -8.49656, 1.11", "34.9473, 6.81518, -9.21848, 0.81", "35.6923, 6.11517, -9.82485, 0.22", "36.716, 5.33954, -10.3708, 0.15", "44.787, -0.929386, -12.5678, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-5.29297, 42.8002, 0.0, 0.15", "-7.28801, 57.6669, 0.0, 0.15", "-9.28305, 72.5336, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-23.2592, -23.6519, -34.6915, 0.15", "-29.3749, -24.7403, -39.5262, 0.15", "-35.8739, -25.3902, -43.9242, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-23.2592, -23.6519, -34.6915, 0.59", "-28.5817, -24.8631, -44.0153, 0.15", "-34.0264, -25.0751, -53.3456, 0.15", "-41.5739, -24.0835, -60.9903, 0.15", "-50.206, -24.2899, -67.4821, 0.15", "-57.7045, -25.2354, -75.2049, 0.15", "-64.9451, -28.1321, -82.6547, 0.15", "-72.6911, -30.2167, -89.8845, 0.15", "-80.0391, -33.0715, -97.2464, 0.15", "-87.6524, -36.025, -104.291, 0.15", "-96.5273, -37.373, -110.305, 0.15", "-104.792, -38.5406, -117.167, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "114.202, -146.93, -25.132, 0.15", "120.873, -153.931, -27.3118, 0.15", "126.827, -161.716, -28.2492, 0.15", "132.546, -169.678, -27.6102, 0.15", "138.247, -177.581, -26.3545, 0.15", "144.314, -185.333, -26.3404, 0.15", "151.254, -192.381, -25.9666, 0.15", "159.764, -197.56, -24.8683, 0.15", "167.136, -204.175, -25.6424, 0.15", "174.17, -211.148, -25.4902, 0.15", "180.943, -218.209, -27.0335, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "114.202, -146.93, -25.132, 0.59", "118.146, -152.651, -25.234, 0.15", "121.589, -158.488, -26.6672, 0.15", "123.99, -164.46, -29.1637, 0.15", "125.316, -170.923, -31.0454, 0.15", "127.744, -176.948, -33.3729, 0.15", "130.099, -183.14, -35.2599, 0.15", "133.758, -188.757, -37.0714, 0.15", "137.514, -194.174, -39.2951, 0.15", "140.781, -200.215, -40.0898, 0.15", "143.364, -206.487, -41.2864, 0.15", "146.553, -212.483, -42.581, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-14.4926, -30.3024, -12.9287, 0.15", "-21.1497, -34.5756, -15.2263, 0.15", "-27.1409, -39.7402, -17.3156, 0.15", "-32.6783, -45.6671, -17.5873, 0.15", "-37.8432, -51.7042, -19.2461, 0.15", "-42.7823, -57.6011, -21.8916, 0.15", "-46.5905, -64.544, -23.3013, 0.15", "-50.4928, -71.3404, -25.1807, 0.15", "-54.465, -78.3044, -25.7097, 0.15", "-59.2155, -84.8235, -25.6053, 0.15", "-64.022, -91.1837, -24.3261, 0.15", "-67.8746, -98.1513, -23.3159, 0.15", "-71.8127, -105.126, -23.9572, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-14.4926, -30.3024, -12.9287, 0.59", "-19.516, -36.3492, -20.0974, 0.15", "-23.5249, -42.5199, -27.7482, 0.15", "-28.5223, -48.1769, -35.2743, 0.15", "-31.9704, -53.6, -43.7657, 0.15", "-34.4634, -58.9245, -52.6372, 0.15", "-37.5816, -65.0867, -60.6816, 0.15", "-39.0892, -71.4877, -68.9521, 0.15", "-40.354, -78.5446, -76.6523, 0.15", "-40.3033, -84.5287, -85.3725, 0.15", "-41.1793, -90.695, -93.9173, 0.15", "-41.9528, -95.8624, -103.179, 0.15", "-41.6523, -101.683, -112.014, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-0.0172052, -35.2866, 0.816211, 0.44", "-0.852299, -36.5347, 1.51183, 0.44", "-1.23992, -37.056, 1.85152, 0.44", "-1.77336, -37.7553, 2.44213, 0.44", "-2.20174, -38.3613, 3.03718, 0.66", "-2.52383, -38.9225, 3.56156, 0.66", "-2.69661, -39.3236, 3.89433, 0.44", "-2.8659, -39.8627, 4.35261, 0.52", "-2.96612, -40.649, 4.91371, 0.66", "-2.92456, -41.5131, 5.36607, 0.66", "-2.79058, -42.5172, 5.79439, 0.88", "-2.6279, -43.5492, 6.16417, 1.11", "-2.4841, -44.5248, 6.45199, 0.74", "-2.3976, -45.251, 6.58158, 0.29", "-2.34677, -45.9957, 6.62116, 0.22", "-2.33931, -46.4382, 6.60817, 0.22", "-2.37647, -47.0202, 6.56868, 0.22", "-2.43626, -47.5686, 6.51218, 0.22", "-2.56687, -48.7469, 6.38053, 0.29", "-2.63437, -49.6595, 6.2894, 0.52", "-2.64482, -50.3047, 6.23548, 0.52", "-2.58639, -51.1907, 6.18349, 0.44", "-2.40244, -52.5032, 6.15224, 0.29", "-2.28162, -53.144, 6.16203, 0.66", "-2.18397, -53.5932, 6.21044, 1.77", "-2.00208, -54.4065, 6.35595, 1.18", "-1.81808, -55.4436, 6.6048, 0.52", "-1.68939, -56.4092, 6.88271, 0.52", "-1.62416, -57.0338, 7.08811, 0.81", "-1.50535, -57.9677, 7.40862, 0.96", "-1.3768, -58.7822, 7.71325, 0.52", "-1.18507, -59.8839, 8.18413, 0.22", "-1.08414, -60.4002, 8.43513, 0.29", "-0.934753, -61.0766, 8.80684, 0.29", "-0.727119, -62.0397, 9.35071, 0.22", "-0.589894, -62.6701, 9.72124, 0.37", "-0.458296, -63.3209, 10.1105, 0.74", "-0.365219, -63.9458, 10.4782, 1.03", "-0.334914, -64.6531, 10.8569, 1.25", "-0.416069, -66.0383, 11.5279, 0.37", "-0.511739, -66.8445, 11.9016, 1.18", "-0.599569, -67.5892, 12.2216, 2.65", "-0.702645, -68.8046, 12.7014, 2.21", "-0.7495, -69.9818, 13.1456, 0.96", "-0.734687, -70.9538, 13.498, 0.29", "-0.694043, -71.6426, 13.7531, 0.29", "-0.658418, -72.2853, 13.9887, 0.66", "-0.633371, -73.0534, 14.3046, 0.44", "-0.619843, -73.7364, 14.608, 0.22", "-0.61222, -74.0791, 14.7717, 0.22", "-0.61337, -74.4962, 14.9569, 0.22", "-0.661677, -75.3467, 15.2886, 0.29", "-0.706929, -75.9894, 15.5171, 0.29", "-0.722252, -76.4306, 15.6579, 0.22", "-0.723756, -76.9394, 15.7939, 0.22", "-0.690524, -77.3859, 15.9074, 0.81", "-0.61758, -77.8075, 16.0082, 1.55", "-0.382569, -78.7181, 16.2381, 1.84", "0.0331472, -80.0819, 16.5853, 0.15", "0.155948, -80.5107, 16.7042, 0.15", "0.256742, -80.8687, 16.8072, 0.15", "0.365235, -81.302, 16.932, 0.15", "0.509578, -81.9441, 17.1122, 0.88", "0.623828, -82.4778, 17.2544, 1.92", "0.874089, -83.537, 17.5024, 1.99", "0.945548, -83.808, 17.5606, 1.99", "1.25622, -85.0604, 17.7892, 0.15", "1.33395, -85.4072, 17.8382, 0.15", "1.40455, -85.7645, 17.8697, 0.37", "1.46021, -86.1279, 17.8869, 0.37", "1.57158, -86.9899, 17.9201, 0.15", "1.61939, -87.5253, 17.9497, 0.15", "1.67182, -88.1556, 17.9982, 0.22", "1.69085, -88.5232, 18.0401, 0.22", "1.68644, -89.1876, 18.1306, 0.15", "1.6582, -89.6958, 18.2076, 0.15", "1.62593, -90.0979, 18.2752, 0.59", "1.61269, -90.5247, 18.3578, 1.03", "1.63691, -91.1844, 18.4806, 0.22", "1.69992, -91.8783, 18.617, 0.07", "1.75954, -92.3231, 18.7157, 0.07", "1.80837, -92.6032, 18.7882, 0.66", "1.96536, -93.3327, 19.0258, 0.96", "2.31627, -94.648, 19.5146, 0.22", "2.55504, -95.3603, 19.8201, 0.22", "2.73761, -95.82, 20.0583, 0.44", "2.9592, -96.3385, 20.3542, 1.25", "3.17268, -96.79, 20.6239, 1.92", "3.4955, -97.3569, 20.9907, 1.11", "3.85218, -97.8957, 21.3775, 0.22", "4.13716, -98.3186, 21.6667, 0.22", "4.44859, -98.8185, 21.9767, 0.52", "4.80629, -99.5137, 22.3633, 0.22", "5.10985, -100.269, 22.7706, 0.22", "5.30218, -100.88, 23.1032, 0.22", "5.37768, -101.192, 23.2698, 0.81", "5.52293, -101.932, 23.6743, 1.77", "5.74304, -103.338, 24.4809, 0.37", "5.84876, -104.075, 24.9136, 0.15", "5.89594, -104.413, 25.1049, 0.15", "5.96246, -104.835, 25.3334, 0.37", "6.05332, -105.349, 25.6127, 1.18", "6.17711, -105.956, 25.9389, 1.55", "6.38681, -106.888, 26.3961, 0.81", "6.51918, -107.543, 26.6723, 0.15", "6.58591, -107.965, 26.8388, 0.22", "6.67835, -108.602, 27.0761, 0.15", "6.7503, -109.188, 27.2817, 0.96", "6.83162, -109.837, 27.5072, 1.18", "6.96922, -110.837, 27.8447, 0.22", "7.05487, -111.307, 28.0029, 0.22", "7.19015, -111.897, 28.2067, 0.37", "7.23596, -112.061, 28.2616, 0.37", "7.42472, -112.655, 28.4641, 0.22", "7.52588, -112.929, 28.5679, 0.22", "7.74957, -113.398, 28.7399, 0.81" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-0.0172052, -35.2866, 0.816211, 1.84", "-0.232317, -35.9905, 0.573517, 1.84", "-0.441758, -36.8353, 0.29853, 1.55", "-0.621237, -37.7473, 0.0219027, 1.55", "-0.789065, -38.7007, -0.235745, 1.55", "-0.946306, -39.6471, -0.453479, 1.47", "-1.08276, -40.4761, -0.622009, 0.96", "-1.18451, -41.137, -0.724979, 1.55", "-1.36381, -42.3224, -0.837134, 1.25", "-1.55114, -43.5467, -0.9103, 1.47", "-1.75187, -44.8085, -0.948492, 1.03", "-1.90638, -45.6608, -0.954208, 1.18", "-2.14983, -46.8628, -0.92963, 1.99", "-2.3915, -47.8824, -0.880481, 1.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "7.40936, 31.0833, -0.361933, 2.14", "8.43288, 32.2476, -0.44138, 2.14" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "7.40936, 31.0833, -0.361933, 1.47", "7.27319, 31.9956, 0.56977, 1.47", "7.12948, 32.5433, 1.15048, 1.18", "6.91277, 33.0456, 1.72963, 1.18", "6.58323, 33.5614, 2.39995, 1.47", "6.22621, 33.9361, 2.96753, 1.47", "6.0029, 34.0758, 3.24373, 1.47", "5.39254, 34.1601, 3.73388, 1.47", "4.53836, 34.0294, 4.18914, 1.03", "4.01262, 33.8527, 4.3842, 1.62", "3.52475, 33.6258, 4.52096, 1.77", "2.89892, 33.2562, 4.67039, 1.77" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "44.787, -0.929386, -12.5678, 0.15", "50.4069, -5.0695, -14.3068, 0.15", "56.3685, -8.75137, -16.0506, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "44.787, -0.929386, -12.5678, 0.59", "52.1646, -6.47081, -15.6246, 0.15", "58.3892, -13.0754, -18.8904, 0.15", "62.9515, -20.5606, -22.7293, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-35.8739, -25.3902, -43.9242, 0.15", "-46.3564, -26.1338, -44.6757, 0.15", "-56.4517, -24.6218, -47.0604, 0.15", "-65.924, -21.0156, -49.3624, 0.15", "-76.0092, -18.8448, -51.0103, 0.15", "-86.2627, -17.7573, -52.9519, 0.15", "-96.3298, -16.6281, -55.7164, 0.15", "-105.983, -14.0778, -58.8139, 0.15", "-115.711, -11.0145, -60.9231, 0.15", "-124.826, -8.10693, -65.1489, 0.15", "-134.595, -6.78794, -68.7808, 0.15", "-144.982, -5.76372, -69.7645, 0.15", "-155.356, -5.09998, -71.2611, 0.15", "-165.566, -3.02595, -71.8611, 0.15", "-176.007, -2.18645, -71.6024, 0.15", "-186.305, -2.36917, -69.5569, 0.15", "-195.963, -1.57362, -65.6452, 0.15", "-206.013, -0.749569, -62.878, 0.15", "-215.553, -1.10821, -58.5176, 0.15", "-225.074, -1.2362, -54.1245, 0.15", "-235.19, -0.40691, -51.6043, 0.15", "-245.118, 1.29449, -48.9449, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-35.8739, -25.3902, -43.9242, 0.59", "-41.9114, -30.1426, -53.8453, 0.15", "-49.3419, -34.0379, -63.2252, 0.15", "-55.6017, -38.7759, -73.0175, 0.15", "-61.4783, -43.3739, -83.1117, 0.15", "-67.0021, -46.8849, -93.8588, 0.15", "-72.7682, -51.5546, -103.98, 0.15", "-77.4033, -55.7829, -114.856, 0.15", "-83.0611, -59.8355, -125.322, 0.15", "-86.0554, -65.9682, -135.749, 0.15", "-87.46, -72.2606, -146.384, 0.15", "-88.6409, -78.7419, -156.918, 0.15", "-91.241, -85.7878, -166.795, 0.15", "-91.5854, -93.5441, -176.382, 0.15", "-92.8774, -102.893, -184.172, 0.15", "-96.099, -112.197, -191.494, 0.15", "-99.4445, -120.911, -199.523, 0.15", "-101.798, -128.142, -209.311, 0.15", "-104.165, -135.377, -219.091, 0.15", "-103.677, -144.315, -227.442, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-104.792, -38.5406, -117.167, 0.15", "-113.515, -40.487, -124.781, 0.15", "-123.0, -42.4046, -131.431, 0.15", "-133.309, -43.7826, -136.882, 0.15", "-142.505, -43.6561, -144.17, 0.15", "-152.008, -42.2094, -150.85, 0.15", "-162.445, -43.0864, -156.152, 0.15", "-173.036, -44.7825, -160.932, 0.15", "-182.727, -47.9118, -166.759, 0.15", "-191.916, -53.0328, -171.853, 0.15", "-200.882, -58.4379, -177.024, 0.15", "-208.871, -65.9574, -180.732, 0.15", "-216.349, -73.3532, -185.566, 0.15", "-223.509, -80.8474, -190.694, 0.15", "-230.223, -89.512, -194.162, 0.15", "-236.017, -99.2002, -195.895, 0.15", "-242.368, -108.379, -198.498, 0.15", "-246.707, -118.691, -200.369, 0.15", "-250.034, -128.778, -204.3, 0.15", "-251.265, -139.66, -206.742, 0.15", "-254.781, -150.201, -208.822, 0.15", "-258.899, -160.752, -209.166, 0.15", "-262.306, -171.342, -211.142, 0.15", "-267.496, -181.221, -213.43, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-104.792, -38.5406, -117.167, 0.59", "-112.164, -39.5223, -128.53, 0.15", "-118.997, -40.9753, -140.175, 0.15", "-126.993, -43.3572, -150.882, 0.15", "-134.036, -47.5394, -161.664, 0.15", "-140.244, -50.5583, -173.341, 0.15", "-144.147, -55.0511, -185.492, 0.15", "-149.507, -57.1945, -197.779, 0.15", "-155.625, -58.8807, -209.784, 0.15", "-161.978, -61.2035, -221.552, 0.15", "-166.296, -65.2419, -233.737, 0.15", "-171.097, -71.6372, -244.565, 0.15", "-175.17, -76.6664, -256.429, 0.15", "-178.207, -81.095, -268.85, 0.15", "-181.309, -85.3684, -281.314, 0.15", "-183.187, -88.78, -294.298, 0.15", "-186.968, -91.0134, -307.142, 0.15", "-192.192, -92.3792, -319.602, 0.15", "-195.26, -95.6735, -332.392, 0.15", "-199.849, -100.2, -344.288, 0.15", "-206.134, -105.013, -355.252, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-71.8127, -105.126, -23.9572, 0.15", "-75.2716, -109.835, -24.6158, 0.15", "-78.2059, -114.898, -24.6916, 0.15", "-80.6271, -120.193, -25.0005, 0.15", "-83.4658, -125.271, -24.3169, 0.15", "-86.1536, -130.391, -23.4013, 0.15", "-87.7734, -135.907, -22.5007, 0.15", "-89.1534, -141.531, -22.8201, 0.15", "-90.6791, -146.951, -24.2574, 0.15", "-92.3855, -151.982, -26.6875, 0.15", "-93.4279, -156.559, -30.2237, 0.15", "-94.659, -160.595, -34.3743, 0.15", "-96.0459, -164.532, -38.5815, 0.15", "-98.0253, -167.95, -43.047, 0.15", "-99.4629, -170.376, -48.3629, 0.15", "-100.837, -172.751, -53.7217, 0.15", "-101.1, -175.658, -58.9557, 0.15", "-100.755, -179.084, -63.8245, 0.15", "-100.366, -182.426, -68.7536, 0.15", "-100.913, -185.591, -73.7949, 0.15", "-101.721, -188.285, -79.1, 0.15", "-103.513, -190.695, -84.3157, 0.15", "-105.485, -192.998, -89.5208, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-71.8127, -105.126, -23.9572, 0.59", "-76.0892, -110.733, -24.7309, 0.15", "-80.0723, -116.469, -25.9357, 0.15", "-85.3161, -121.315, -26.3157, 0.15", "-90.4154, -126.307, -26.4991, 0.15", "-96.0016, -130.805, -26.6638, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-41.6523, -101.683, -112.014, 0.15", "-42.6788, -106.924, -118.778, 0.15", "-44.618, -112.955, -124.576, 0.15", "-46.1955, -118.184, -131.256, 0.15", "-48.1765, -124.707, -136.431, 0.15", "-50.2819, -132.025, -140.255, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-41.6523, -101.683, -112.014, 0.59", "-45.5143, -107.009, -120.532, 0.15", "-49.204, -112.464, -129.033, 0.15", "-51.7621, -119.981, -136.077, 0.15", "-53.1954, -128.726, -141.743, 0.15", "-52.4575, -137.833, -146.839, 0.15", "-50.7298, -147.027, -151.491, 0.15", "-47.7042, -155.83, -156.268, 0.15", "-45.8421, -165.595, -159.4, 0.15", "-42.5127, -174.508, -163.737, 0.15", "-40.9933, -183.419, -169.01, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "7.74957, -113.398, 28.7399, 0.22", "7.3994, -114.001, 28.7289, 0.22", "6.93108, -114.807, 28.7141, 0.22", "6.52438, -115.507, 28.7013, 0.22", "5.79891, -116.756, 28.6785, 0.22", "5.47154, -117.32, 28.6682, 0.15", "5.14506, -117.882, 28.6579, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "7.74957, -113.398, 28.7399, 1.18", "7.91069, -114.081, 29.1015, 1.18", "8.08526, -114.87, 29.4857, 0.29", "8.22954, -115.596, 29.8313, 0.15", "8.30238, -116.01, 30.0224, 0.15", "8.36551, -116.417, 30.2037, 0.29", "8.43111, -116.997, 30.4587, 0.66", "8.46406, -117.597, 30.7165, 1.4", "8.42865, -118.486, 31.071, 0.22", "8.36499, -119.103, 31.3025, 0.22", "8.32749, -119.373, 31.3982, 0.22", "8.24033, -119.949, 31.5807, 0.22", "8.15794, -120.445, 31.723, 0.66", "8.03864, -121.065, 31.8816, 0.15", "7.91032, -121.59, 32.0036, 0.15", "7.73193, -122.23, 32.148, 0.52", "7.50477, -123.021, 32.3333, 0.29", "7.41512, -123.336, 32.409, 0.15", "7.323, -123.655, 32.4929, 0.15", "7.14618, -124.238, 32.6395, 0.15", "7.01767, -124.632, 32.7322, 0.29", "6.84455, -125.171, 32.8671, 1.11", "6.68388, -125.72, 33.0145, 1.77", "6.50283, -126.483, 33.2282, 1.77", "6.35111, -127.282, 33.4633, 1.33", "6.17327, -128.394, 33.793, 0.15", "6.06678, -129.134, 34.024, 0.22", "5.99374, -129.666, 34.197, 0.66", "5.9261, -130.179, 34.3701, 0.81", "5.82026, -131.132, 34.7055, 0.15", "5.79521, -131.693, 34.9155, 0.22", "5.8178, -132.167, 35.1041, 0.22", "5.87413, -132.774, 35.3424, 0.22", "5.91701, -133.13, 35.478, 0.66", "6.04248, -133.828, 35.7437, 1.4", "6.29861, -134.811, 36.1476, 0.88", "6.47616, -135.424, 36.409, 0.15", "6.65403, -136.012, 36.6572, 0.15", "6.78985, -136.438, 36.8355, 0.22", "6.99676, -137.107, 37.1198, 0.29", "7.13643, -137.63, 37.3345, 0.15", "7.25591, -138.35, 37.5985, 0.15", "7.27121, -138.6, 37.6833, 0.15", "7.26572, -139.125, 37.8666, 0.22", "7.20527, -139.888, 38.1335, 0.22", "7.16343, -140.218, 38.2476, 0.22", "7.07508, -140.912, 38.4824, 0.37", "7.00437, -141.621, 38.7336, 0.22", "6.96972, -142.097, 38.899, 0.88", "6.93729, -143.162, 39.2573, 2.06", "6.9646, -144.406, 39.6172, 0.59", "7.03424, -145.25, 39.8137, 0.22", "7.11668, -145.808, 39.9053, 0.22", "7.20283, -146.302, 39.9669, 0.22", "7.33239, -146.982, 40.0207, 0.59", "7.55252, -147.946, 40.0321, 0.07", "7.71819, -148.531, 39.9701, 0.15", "7.93449, -149.223, 39.831, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-2.3915, -47.8824, -0.880481, 0.74", "-2.61172, -49.8573, -1.21784, 0.74", "-2.81711, -51.616, -1.54798, 0.74", "-2.96265, -52.6102, -1.73452, 0.81", "-3.27231, -54.2487, -2.05066, 0.88", "-3.49642, -55.3012, -2.25422, 0.81", "-3.82486, -56.6595, -2.52123, 1.18", "-4.10883, -57.6686, -2.74087, 1.18", "-4.54192, -58.9033, -3.00605, 1.03", "-5.06532, -60.2123, -3.29955, 1.11", "-5.53152, -61.2346, -3.52751, 0.74", "-6.12462, -62.383, -3.7621, 1.11", "-6.65809, -63.3593, -3.93984, 0.81", "-7.28718, -64.5102, -4.12342, 0.81", "-7.4844, -64.9307, -4.1811, 0.81", "-7.81032, -65.8195, -4.28197, 0.88", "-8.07491, -66.8053, -4.35263, 0.88", "-8.37871, -68.4349, -4.40058, 1.11", "-8.48573, -69.2125, -4.37994, 1.33", "-8.70429, -71.092, -4.18141, 0.74", "-8.80382, -72.2073, -4.04295, 0.74", "-8.87412, -73.8484, -3.81435, 0.88", "-8.87818, -74.8144, -3.65011, 1.25", "-8.8806, -75.8103, -3.43507, 1.03", "-8.95673, -77.1382, -3.0438, 0.74", "-9.38909, -87.7305, -3.13859, 0.74", "-10.5333, -98.1803, -1.66164, 0.74", "-11.237, -108.603, 0.245931, 0.74", "-11.3294, -118.547, 4.10884, 0.74", "-10.4626, -128.574, 7.6261, 0.74", "-10.1774, -138.264, 12.1396, 0.74", "-11.9321, -148.225, 15.5217, 0.74", "-11.6225, -158.563, 17.9729, 0.74", "-10.6995, -168.824, 20.6198, 0.74", "-9.89455, -179.142, 23.0495, 0.74", "-9.00991, -189.488, 25.3175, 0.74", "-8.55335, -199.502, 28.9496, 0.74", "-10.0361, -208.817, 34.0604, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-2.3915, -47.8824, -0.880481, 1.03", "-2.35963, -48.575, -0.482766, 1.03", "-2.32664, -49.6007, 0.0492432, 1.03", "-2.31585, -50.394, 0.38194, 1.03", "-2.28696, -51.5689, 0.791478, 1.03", "-2.23469, -52.5625, 1.07625, 0.96", "-2.16984, -53.2672, 1.25684, 0.96", "-2.08751, -53.8604, 1.37417, 0.96", "-1.75417, -55.4778, 1.60818, 0.88", "-1.46669, -56.4371, 1.71252, 0.88", "-0.937704, -57.6848, 1.83851, 0.88", "-0.245, -58.9199, 1.97557, 0.81", "0.341352, -59.7554, 2.09196, 0.81", "0.823002, -60.3224, 2.20039, 0.81", "1.56485, -61.0519, 2.37996, 0.88", "2.33701, -61.8031, 2.60094, 1.03", "2.84362, -62.3581, 2.78199, 1.03", "3.45416, -63.2061, 3.05165, 0.81", "3.86551, -63.996, 3.28403, 1.4", "4.05221, -64.4886, 3.41682, 1.92", "4.40121, -65.8014, 3.69752, 1.4", "4.7223, -67.3486, 3.91876, 0.88", "4.9178, -68.4359, 4.01223, 0.88", "5.10881, -69.5704, 4.05146, 1.03", "5.22454, -70.2029, 4.04684, 1.03", "5.43772, -71.2341, 4.00133, 0.81", "5.66275, -72.1861, 3.90507, 1.18", "5.72487, -72.4738, 3.86545, 1.18", "5.79823, -73.0357, 3.7931, 0.74", "5.77282, -73.7637, 3.74409, 0.44", "5.68983, -74.1948, 3.74476, 0.44", "5.48923, -74.826, 3.78467, 0.66", "5.17302, -75.6624, 3.85504, 0.81", "4.88146, -76.4193, 3.91879, 0.96", "4.4332, -77.6036, 4.01442, 1.33", "4.14885, -78.3867, 4.07338, 0.88", "3.89355, -79.1564, 4.13734, 1.11", "3.62573, -80.0585, 4.23505, 1.18", "3.38926, -80.9153, 4.34853, 1.18", "3.06682, -82.1117, 4.53179, 0.52", "2.75406, -83.3526, 4.7602, 0.52", "2.52723, -84.2783, 4.94551, 0.74", "2.32426, -85.14, 5.12778, 0.96", "2.14458, -85.9468, 5.28896, 1.62", "1.97655, -86.7529, 5.43038, 1.62", "1.78646, -87.7614, 5.57145, 1.33", "1.65386, -88.591, 5.64773, 0.44", "1.56277, -89.0835, 5.66733, 0.59", "1.33749, -90.0043, 5.68968, 0.59", "1.02766, -90.9907, 5.724, 0.88", "0.730022, -91.7481, 5.76193, 1.25", "0.515289, -92.2078, 5.7986, 2.21", "-0.0291765, -93.2781, 5.93029, 1.84", "-0.67088, -94.4843, 6.12538, 1.33", "-1.26091, -95.5872, 6.36053, 0.66", "-1.54939, -96.1672, 6.49494, 0.44", "-1.83427, -96.7921, 6.64216, 0.44", "-2.10584, -97.4613, 6.79627, 0.81", "-2.37689, -98.3161, 6.9697, 1.11", "-2.6033, -99.2728, 7.12273, 0.74", "-2.80544, -100.309, 7.26182, 0.37", "-2.95491, -101.11, 7.34721, 0.37", "-3.05709, -101.615, 7.39679, 0.74", "-3.23302, -102.378, 7.47616, 0.88", "-3.52144, -103.494, 7.61751, 0.44", "-3.68306, -104.01, 7.71177, 0.44", "-3.87426, -104.502, 7.8591, 0.59", "-4.13846, -105.042, 8.08541, 0.96", "-4.38952, -105.477, 8.31856, 1.25", "-4.67198, -105.929, 8.61387, 1.25", "-4.99678, -106.47, 9.00496, 0.81", "-5.19258, -106.903, 9.30023, 1.11", "-5.38096, -107.661, 9.69316, 0.22", "-5.41699, -108.012, 9.80607, 0.22", "-5.43967, -108.572, 9.93382, 0.22", "-5.46137, -109.079, 10.0182, 0.74", "-5.49425, -109.588, 10.0896, 1.18", "-5.60939, -110.748, 10.2558, 0.66", "-5.75678, -111.748, 10.4276, 0.37", "-5.99151, -112.621, 10.622, 0.66", "-6.24702, -113.347, 10.8338, 0.66", "-6.46066, -113.899, 11.0348, 1.25", "-6.66419, -114.42, 11.269, 2.06", "-6.94155, -115.184, 11.6776, 2.21", "-7.39072, -116.615, 12.4934, 1.03", "-7.6083, -117.436, 12.9518, 0.59", "-7.79071, -118.294, 13.3769, 0.37", "-7.89528, -118.932, 13.6644, 0.66", "-7.98196, -119.708, 13.9839, 0.37", "-8.02043, -120.551, 14.3147, 0.29", "-8.01039, -121.101, 14.5122, 0.52", "-8.00587, -122.057, 14.8464, 0.22", "-7.98975, -122.544, 15.0667, 0.22", "-7.93696, -123.072, 15.3898, 0.29", "-7.84496, -123.554, 15.7939, 0.96", "-7.73597, -124.017, 16.2567, 1.77", "-7.6283, -124.474, 16.7129, 1.77", "-7.39611, -125.54, 17.6573, 0.29", "-7.30733, -126.011, 17.972, 0.29", "-7.25084, -126.428, 18.1666, 0.29", "-7.19261, -127.069, 18.3506, 0.29", "-7.16873, -127.917, 18.4807, 0.29", "-7.2213, -128.911, 18.5304, 0.29", "-7.29088, -129.402, 18.5264, 0.29", "-7.45895, -130.126, 18.5218, 0.29", "-7.72738, -130.97, 18.5503, 0.29", "-8.05962, -131.847, 18.6398, 0.29", "-8.28767, -132.394, 18.7236, 1.03", "-8.57273, -133.03, 18.8476, 1.92", "-9.05646, -134.099, 19.08, 3.02", "-9.58918, -135.298, 19.369, 2.36", "-10.1865, -136.677, 19.7316, 0.22", "-10.3915, -137.188, 19.8776, 0.22", "-10.6364, -137.881, 20.088, 0.22", "-10.7304, -138.19, 20.1841, 0.52", "-10.8555, -138.697, 20.3534, 0.96", "-11.0189, -139.444, 20.6036, 0.44", "-11.2156, -140.378, 20.9034, 0.22", "-11.3384, -140.978, 21.0855, 0.37", "-11.4775, -141.684, 21.2854, 0.81", "-11.6108, -142.301, 21.4528, 0.96", "-11.8213, -143.139, 21.6558, 1.25", "-12.0359, -143.941, 21.8172, 0.66", "-12.131, -144.318, 21.8749, 0.22", "-12.3117, -145.144, 21.9753, 0.22", "-12.3763, -145.536, 22.0206, 0.44", "-12.5017, -146.543, 22.1448, 0.22", "-12.5504, -147.242, 22.2547, 0.22", "-12.581, -148.084, 22.4214, 0.29", "-12.609, -148.777, 22.5731, 0.52", "-12.639, -149.495, 22.7328, 0.52", "-12.691, -150.256, 22.9049, 0.52", "-12.7704, -150.973, 23.0695, 1.18", "-12.8808, -151.635, 23.2182, 2.43", "-13.1228, -152.768, 23.4714, 1.33", "-13.3438, -153.684, 23.6616, 0.59", "-13.5325, -154.432, 23.8038, 0.81", "-13.6955, -155.079, 23.9201, 0.15", "-13.806, -155.509, 23.9935, 0.15", "-13.8533, -155.726, 24.0318, 0.15", "-13.9091, -155.997, 24.0901, 0.22", "-14.0392, -156.517, 24.2165, 0.37", "-14.2347, -157.12, 24.3444, 0.37", "-14.5071, -157.763, 24.4408, 0.22", "-14.877, -158.452, 24.5042, 0.22", "-15.1355, -158.847, 24.5151, 0.22", "-15.4203, -159.212, 24.5106, 0.74", "-15.8786, -159.737, 24.4842, 1.77", "-16.4254, -160.33, 24.4378, 2.21", "-16.8312, -160.756, 24.4218, 2.21", "-17.7194, -161.67, 24.4301, 0.37", "-18.2741, -162.278, 24.4711, 0.37", "-18.6979, -162.802, 24.5417, 0.22", "-19.0473, -163.296, 24.6549, 0.22", "-19.4462, -163.906, 24.8436, 0.22", "-19.6688, -164.262, 24.9841, 0.81", "-19.9985, -164.8, 25.2773, 1.25", "-20.3885, -165.407, 25.6947, 0.88", "-20.8473, -166.048, 26.1995, 0.22", "-21.0851, -166.374, 26.4599, 0.22", "-21.3449, -166.771, 26.7357, 0.22", "-21.5989, -167.263, 27.0391, 0.22", "-21.8034, -167.919, 27.3455, 0.44", "-21.9174, -168.55, 27.5577, 1.47", "-22.0175, -169.24, 27.7209, 1.47", "-22.1545, -170.111, 27.8722, 0.44", "-22.2889, -170.923, 27.9753, 0.96", "-22.5228, -172.107, 28.0802, 0.22", "-22.6634, -172.734, 28.13, 0.22", "-22.9216, -173.684, 28.2136, 0.22", "-23.16, -174.39, 28.2684, 0.22", "-23.3664, -174.906, 28.3015, 0.22", "-23.6492, -175.52, 28.3322, 0.22", "-24.0554, -176.335, 28.3853, 0.22", "-24.2959, -176.847, 28.4253, 0.81", "-24.6392, -177.64, 28.4985, 1.77", "-24.9539, -178.411, 28.5932, 1.18", "-25.519, -179.897, 28.8132, 0.22", "-25.686, -180.394, 28.9074, 0.22", "-25.9439, -181.247, 29.1147, 0.88", "-26.2201, -182.308, 29.4418, 0.15", "-26.3482, -182.929, 29.695, 0.15", "-26.4164, -183.538, 29.9837, 0.29", "-26.4155, -184.156, 30.3124, 0.74", "-26.389, -184.629, 30.5742, 1.4", "-26.3227, -185.336, 31.0004, 0.59", "-26.2255, -186.276, 31.5713, 0.15", "-26.1562, -186.993, 31.9882, 0.15", "-26.0903, -187.642, 32.3514, 0.15", "-26.0085, -188.24, 32.6514, 0.29", "-25.8761, -188.991, 33.0149, 0.96", "-25.7172, -189.817, 33.41, 0.44", "-25.588, -190.485, 33.733, 0.22", "-25.4321, -191.288, 34.1571, 0.22", "-25.2598, -192.058, 34.5782, 0.15", "-25.0938, -192.717, 34.9268, 0.15", "-24.9833, -193.16, 35.1508, 0.15", "-24.8973, -193.604, 35.353, 0.29", "-24.8173, -194.391, 35.6546, 0.44", "-24.8086, -195.165, 35.8964, 0.44", "-24.8713, -196.234, 36.1874, 0.44", "-24.961, -197.119, 36.3705, 0.44", "-25.109, -198.207, 36.5496, 0.88", "-25.2728, -199.053, 36.6586, 1.03", "-25.4897, -199.863, 36.7443, 0.37", "-25.7392, -200.537, 36.8155, 0.15", "-26.06, -201.186, 36.9013, 0.15", "-26.397, -201.736, 36.989, 0.37", "-26.8967, -202.416, 37.1211, 0.22", "-27.312, -202.896, 37.2282, 0.81", "-28.0598, -203.633, 37.4107, 1.25", "-28.9783, -204.391, 37.617, 0.88", "-29.6005, -204.834, 37.743, 0.22", "-30.2278, -205.239, 37.8385, 0.22", "-30.8547, -205.634, 37.8999, 0.74", "-31.7202, -206.212, 37.9253, 1.47", "-32.4091, -206.722, 37.8897, 0.37", "-33.411, -207.573, 37.7269, 0.22", "-34.0702, -208.243, 37.5284, 0.29", "-34.586, -208.905, 37.2862, 0.29", "-34.9367, -209.541, 37.0217, 0.29", "-35.1877, -210.249, 36.7141, 0.37", "-35.3909, -211.191, 36.3364, 0.22", "-35.5015, -212.253, 35.9629, 0.22", "-35.5227, -212.772, 35.8072, 0.22", "-35.5249, -213.566, 35.6408, 0.37", "-35.5261, -214.164, 35.5738, 0.59", "-35.5782, -215.589, 35.5187, 0.66", "-35.6565, -216.57, 35.5472, 0.88", "-35.7338, -217.228, 35.6294, 0.88", "-35.9171, -218.405, 35.8364, 0.52", "-36.147, -219.681, 36.1082, 0.22", "-36.3673, -220.96, 36.4438, 0.22", "-36.4552, -221.482, 36.6078, 0.81", "-36.6993, -222.871, 37.0819, 1.25", "-36.8197, -223.668, 37.3567, 1.03", "-36.8827, -224.184, 37.5295, 1.03", "-36.9882, -225.451, 37.9739, 0.22", "-37.0382, -226.388, 38.3027, 0.22", "-37.0868, -227.019, 38.5056, 0.22", "-37.2123, -228.045, 38.7882, 0.22", "-37.3302, -228.629, 38.9444, 0.22", "-37.648, -229.702, 39.2032, 0.22", "-37.9642, -230.415, 39.347, 0.74", "-38.3392, -231.095, 39.4553, 1.11", "-38.6623, -231.599, 39.4933, 1.11", "-39.3745, -232.554, 39.4734, 0.74", "-39.925, -233.241, 39.3684, 1.4", "-40.7935, -234.29, 39.0664, 0.66", "-41.3843, -235.025, 38.7904, 0.07", "-42.0985, -235.961, 38.4002, 0.07", "-42.5647, -236.598, 38.1228, 0.22", "-43.0681, -237.355, 37.7996, 0.22", "-43.4032, -237.892, 37.5929, 0.44", "-43.8027, -238.6, 37.3704, 0.44", "-44.3313, -239.553, 37.2219, 0.44", "-44.6737, -240.173, 37.2424, 0.22", "-45.152, -241.041, 37.3916, 0.15", "-45.4518, -241.523, 37.5499, 0.37", "-45.6757, -241.819, 37.6983, 0.37", "-46.2675, -242.511, 38.1512, 0.15", "-46.8334, -243.1, 38.6182, 0.15", "-47.0216, -243.273, 38.7719, 0.52", "-47.5595, -243.666, 39.1647, 1.03", "-48.3058, -244.145, 39.6467, 0.15", "-48.867, -244.47, 39.9478, 0.15", "-49.4219, -244.775, 40.1726, 0.15", "-49.7856, -244.992, 40.2839, 0.59", "-50.5764, -245.519, 40.4794, 0.15", "-50.8369, -245.708, 40.5282, 0.15", "-51.2429, -246.048, 40.5867, 0.66", "-51.5871, -246.374, 40.6338, 0.81", "-52.5259, -247.389, 40.7608, 0.15", "-53.2567, -248.272, 40.8594, 0.15", "-53.8804, -249.11, 40.9431, 0.29", "-54.7342, -250.314, 41.0557, 0.22", "-55.4664, -251.405, 41.1531, 0.15", "-55.7634, -251.852, 41.1926, 0.66", "-56.2453, -252.54, 41.2382, 0.81", "-56.8622, -253.327, 41.2712, 0.44", "-57.244, -253.792, 41.2859, 1.03", "-57.6632, -254.236, 41.2947, 1.25", "-58.82, -255.341, 41.2958, 0.52", "-59.7289, -256.121, 41.2823, 0.22", "-60.3163, -256.557, 41.2594, 0.07" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "8.43288, 32.2476, -0.44138, 0.96", "9.87581, 33.7778, -1.83398, 0.96", "10.5799, 34.5184, -2.50943, 1.03", "11.568, 35.4413, -3.22019, 1.03", "12.4436, 36.2592, -3.85005, 1.62", "13.2921, 37.0518, -4.46039, 1.33", "14.4834, 38.1646, -5.31736, 1.03", "15.4018, 39.0093, -5.93061, 0.96", "17.2053, 40.6087, -7.01552, 1.62" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "8.43288, 32.2476, -0.44138, 0.88", "9.2392, 34.0338, -0.717418, 0.88", "10.2232, 35.8155, -1.04141, 0.81", "10.6931, 36.6483, -1.23918, 0.66", "11.1501, 37.5138, -1.47554, 1.11", "11.6952, 38.6855, -1.80826, 0.74", "12.0504, 39.5575, -2.06643, 0.52", "12.469, 40.7833, -2.54743, 0.22", "12.5802, 41.7649, -2.90179, 0.29", "12.4069, 42.4616, -3.14203, 0.29", "11.9745, 43.1988, -3.41362, 0.66", "11.6542, 43.573, -3.57006, 0.66", "10.7554, 44.4578, -3.92478, 0.81", "9.59972, 45.5711, -4.37228, 1.18", "8.73166, 46.503, -4.74766, 1.03", "7.87095, 47.6012, -5.21762, 0.81", "7.13807, 48.7654, -5.74074, 1.11", "6.34912, 50.3578, -6.48122, 0.88", "5.84187, 51.6861, -7.12924, 0.66", "5.48986, 52.9102, -7.72199, 0.66", "5.22852, 53.9407, -8.15636, 0.66", "4.98894, 54.8795, -8.49037, 0.66", "4.68281, 56.0003, -8.86598, 0.81", "4.41565, 56.8571, -9.17155, 1.18", "4.08723, 57.8007, -9.49161, 1.18", "3.36603, 59.8909, -10.1303, 0.52", "2.94359, 60.9948, -10.451, 0.52", "2.62363, 61.8681, -10.6975, 0.52", "2.44269, 62.4963, -10.8645, 1.03", "2.25829, 63.6304, -11.1811, 1.03", "2.30922, 65.0075, -11.6434, 0.66", "1.11727, 75.9872, -16.4549, 0.66", "-0.299716, 87.3682, -19.9997, 0.66", "-4.28755, 98.352, -22.9146, 0.66", "-9.11635, 109.103, -25.4976, 0.66", "-14.327, 119.401, -29.1646, 0.66", "-21.5094, 128.95, -31.494, 0.66", "-28.4216, 138.168, -35.5174, 0.66", "-34.342, 147.752, -40.1341, 0.66", "-40.5828, 157.765, -42.9694, 0.66", "-47.4384, 166.883, -47.3276, 0.66", "-52.2915, 176.239, -53.464, 0.66", "-57.6547, 185.731, -58.9023, 0.66", "-63.2514, 195.041, -64.4516, 0.66", "-68.859, 203.924, -70.7206, 0.66", "-75.6463, 211.625, -77.532, 0.66" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "2.89892, 33.2562, 4.67039, 0.96", "1.84268, 33.9404, 4.77589, 0.96", "0.827062, 34.3653, 4.93869, 0.66", "-0.608905, 34.5146, 5.2679, 0.52", "-1.18793, 34.2362, 5.48042, 0.52", "-1.95912, 33.2748, 5.88311, 0.52", "-2.34359, 32.7444, 6.10853, 0.88", "-3.14264, 31.4817, 6.64649, 1.11", "-3.8776, 30.3289, 7.15548, 1.25", "-4.51333, 29.4541, 7.55099, 1.25", "-5.87554, 27.8919, 8.25469, 0.66", "-6.67991, 27.1159, 8.59849, 0.96", "-7.58067, 26.3932, 8.94723, 1.33", "-8.76924, 25.6019, 9.37955, 1.33", "-10.5873, 24.5719, 10.0349, 1.33", "-12.5858, 23.5293, 10.7947, 0.88", "-13.7925, 22.9519, 11.2416, 0.88", "-15.1647, 22.287, 11.7413, 1.4", "-16.0522, 21.8372, 12.0775, 1.55", "-17.4211, 21.0951, 12.6416, 2.06", "-18.4622, 20.4369, 13.1999, 2.06" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "2.89892, 33.2562, 4.67039, 0.74", "2.57227, 32.2688, 4.47179, 0.74", "2.11707, 31.0138, 4.2711, 0.52", "1.70482, 29.9189, 4.13691, 0.88", "1.25648, 28.7549, 4.07606, 0.44", "0.958506, 28.007, 4.08009, 0.44", "0.727787, 27.445, 4.10365, 0.37", "0.30317, 26.4421, 4.22199, 0.88", "-0.0947859, 25.3904, 4.41885, 0.44", "-0.485357, 24.2299, 4.66681, 0.44", "-0.711688, 23.3952, 4.83826, 0.74", "-0.85585, 22.7364, 4.97317, 1.11", "-1.10668, 21.2985, 5.28513, 0.96", "-1.27423, 19.9604, 5.61744, 1.18", "-1.37958, 18.8157, 5.95154, 1.18", "-1.48348, 17.5124, 6.38061, 0.88", "-1.5614, 16.4341, 6.78414, 0.66", "-1.62558, 15.5576, 7.16491, 0.66", "-1.69244, 14.6251, 7.6014, 0.66", "-1.7719, 13.5598, 8.12167, 0.66", "-1.85328, 12.3425, 8.69945, 0.66", "-1.984, 10.6259, 9.39277, 0.52", "-2.05045, 9.69782, 9.68552, 0.52", "-2.14391, 8.0909, 10.0498, 0.52", "-2.19546, 6.98121, 10.1979, 0.52", "-2.22836, 5.84582, 10.2676, 0.52", "-2.25829, 4.37583, 10.3026, 0.96", "-2.29617, 3.62906, 10.3035, 1.11", "-2.36184, 2.86373, 10.2969, 1.11", "-2.59339, 0.976244, 10.298, 0.44", "-2.73602, 0.0829182, 10.2941, 0.44", "-3.07882, -1.5124, 10.3157, 0.66", "-3.36355, -2.59758, 10.3378, 0.52", "-3.53757, -3.15787, 10.3351, 0.88", "-3.70645, -3.64879, 10.3209, 1.33", "-4.07922, -4.74217, 10.2493, 0.96", "-4.56126, -6.31099, 10.1047, 0.59", "-4.85149, -7.43084, 9.96563, 0.59", "-4.99829, -8.15764, 9.8735, 0.96", "-5.16318, -9.17722, 9.75378, 0.52", "-5.33076, -10.5596, 9.62008, 0.22", "-5.41337, -11.4475, 9.56232, 0.29", "-5.50328, -12.2399, 9.52724, 0.29", "-5.60387, -12.8467, 9.51795, 1.03", "-5.80568, -13.7631, 9.5154, 1.84", "-6.20478, -15.104, 9.53431, 0.74", "-6.73938, -16.4874, 9.58464, 0.29", "-7.38779, -17.7495, 9.66845, 0.29", "-7.80186, -18.4215, 9.73173, 0.29", "-8.10031, -18.8663, 9.7795, 0.88", "-8.50914, -19.4546, 9.84855, 1.47", "-8.94621, -20.106, 9.91566, 0.88", "-9.9212, -21.7605, 10.0485, 0.22", "-10.2249, -22.3981, 10.0811, 0.15", "-10.54, -23.2031, 10.1192, 0.37", "-10.8085, -23.9268, 10.1627, 0.22", "-11.2313, -25.0096, 10.2478, 0.22", "-11.6328, -25.9067, 10.3376, 0.52", "-11.8992, -26.4065, 10.4052, 0.96", "-12.5406, -27.3199, 10.5736, 1.62", "-13.4488, -28.3535, 10.8095, 0.96", "-14.4853, -29.3885, 11.0902, 0.59", "-15.305, -30.1454, 11.3267, 0.88", "-16.088, -30.8625, 11.5527, 1.55", "-16.7713, -31.4981, 11.7461, 1.55", "-17.7832, -32.5154, 12.0166, 0.37", "-18.6026, -33.4555, 12.2576, 0.22", "-19.0609, -34.042, 12.4038, 0.44", "-19.6929, -34.9336, 12.6158, 1.11", "-19.98, -35.4026, 12.7116, 1.11", "-20.5581, -36.4881, 12.9116, 0.44", "-21.02, -37.4615, 13.0475, 0.22", "-21.3968, -38.3647, 13.1225, 0.29", "-21.6193, -38.9179, 13.1364, 0.15", "-21.9912, -39.8539, 13.1232, 0.29", "-22.1392, -40.228, 13.1081, 0.96", "-22.4933, -41.1051, 13.0524, 1.62", "-23.073, -42.5905, 12.9317, 2.06", "-23.6194, -44.0445, 12.8289, 1.4", "-23.8782, -44.7471, 12.7913, 0.59", "-24.2802, -45.8474, 12.7594, 0.22", "-24.5232, -46.5855, 12.7504, 0.22", "-24.7403, -47.33, 12.7589, 0.66", "-24.9525, -48.1517, 12.7765, 0.74", "-25.1577, -49.0335, 12.8095, 0.22", "-25.3984, -50.0213, 12.8689, 0.15", "-25.6032, -50.8336, 12.9485, 0.22", "-25.7365, -51.4026, 13.0186, 0.66", "-25.9048, -52.1145, 13.1251, 1.25", "-26.1562, -53.0947, 13.2925, 1.47", "-26.5029, -54.2695, 13.5103, 0.88", "-26.8482, -55.267, 13.702, 0.22", "-27.1255, -55.9536, 13.8344, 0.22", "-27.4247, -56.6138, 13.9573, 0.22", "-27.9563, -57.649, 14.1381, 0.37", "-28.461, -58.5359, 14.27, 0.37", "-29.0203, -59.469, 14.3905, 0.52", "-29.3595, -60.0297, 14.4595, 0.22", "-29.6743, -60.5753, 14.5296, 0.37", "-29.9446, -61.13, 14.5984, 0.74", "-30.2987, -62.1196, 14.715, 0.22", "-30.5627, -63.1869, 14.828, 0.22", "-30.7247, -64.0463, 14.9013, 0.29", "-30.8464, -64.6857, 14.9472, 0.52", "-31.0258, -65.6064, 15.0027, 1.11", "-31.1876, -66.4192, 15.0415, 1.7", "-31.4278, -67.5435, 15.078, 1.33", "-31.7009, -68.8189, 15.0923, 0.22", "-31.8869, -69.8305, 15.1001, 0.22", "-31.9463, -70.1806, 15.1025, 0.22", "-32.0113, -70.5888, 15.106, 0.29", "-32.108, -71.2205, 15.1143, 0.52", "-32.2208, -72.0348, 15.1308, 0.22", "-32.3384, -72.7137, 15.1551, 0.22", "-32.4862, -73.2788, 15.1803, 0.22", "-32.7376, -73.8611, 15.2156, 0.81", "-33.0391, -74.3341, 15.2533, 1.47", "-33.3202, -74.684, 15.2864, 1.47", "-34.0615, -75.5014, 15.3713, 0.22", "-34.474, -75.9457, 15.418, 0.22", "-34.9625, -76.5107, 15.4733, 0.37", "-35.5611, -77.2712, 15.541, 0.44", "-35.9527, -77.8073, 15.5859, 0.22", "-36.1071, -78.0418, 15.5989, 0.22", "-36.2917, -78.3484, 15.6088, 0.22", "-36.6383, -78.9536, 15.6217, 0.22", "-36.9176, -79.4411, 15.6306, 0.74", "-37.2593, -80.0428, 15.6416, 1.47", "-37.7904, -80.8955, 15.6764, 1.99", "-38.3291, -81.6689, 15.7437, 1.77", "-39.2593, -82.8562, 15.8976, 0.66", "-39.8088, -83.4861, 16.0054, 0.15", "-40.3942, -84.1141, 16.1271, 0.15", "-41.0229, -84.781, 16.2586, 0.22", "-41.5752, -85.3394, 16.3729, 0.22", "-42.1511, -85.9115, 16.4593, 0.29", "-42.6386, -86.4086, 16.4991, 0.81", "-43.2872, -87.1311, 16.5005, 1.47", "-43.9997, -88.023, 16.4248, 0.52", "-44.5844, -88.941, 16.2707, 0.22", "-44.9577, -89.6849, 16.1104, 0.22", "-45.1911, -90.3028, 15.9798, 0.22", "-45.2809, -90.6221, 15.9116, 0.22", "-45.3903, -91.1489, 15.8014, 0.29", "-45.5287, -91.9509, 15.6334, 0.74", "-45.6319, -92.5573, 15.5018, 1.03", "-45.9152, -93.8382, 15.2415, 0.37", "-46.1567, -94.7076, 15.0732, 0.88", "-46.4167, -95.5395, 14.9207, 1.18", "-46.6661, -96.2938, 14.7882, 1.18", "-47.1332, -97.6828, 14.5785, 0.29", "-47.5698, -98.877, 14.4321, 0.29", "-47.8944, -99.6938, 14.3651, 0.37", "-48.1413, -100.263, 14.352, 0.88", "-48.398, -100.842, 14.3693, 0.66", "-48.7127, -101.635, 14.433, 0.22", "-48.9279, -102.282, 14.5153, 0.22", "-49.1144, -103.0, 14.6101, 0.37", "-49.2206, -103.512, 14.6815, 0.66", "-49.371, -104.321, 14.8041, 1.11", "-49.5522, -105.284, 14.9572, 0.66", "-49.6847, -105.89, 15.0565, 0.29", "-49.8819, -106.731, 15.2072, 0.22", "-50.0273, -107.302, 15.2991, 0.29", "-50.2892, -108.304, 15.4114, 0.96", "-50.4838, -109.019, 15.4525, 1.03", "-50.8105, -110.25, 15.4572, 0.81", "-51.0507, -111.241, 15.4087, 0.29", "-51.2585, -112.061, 15.3355, 0.22", "-51.4846, -112.92, 15.233, 0.29", "-51.6868, -113.669, 15.1228, 0.74", "-51.8634, -114.328, 15.0217, 0.52", "-52.2811, -115.769, 14.8116, 0.29", "-52.736, -117.106, 14.6658, 0.29", "-53.2274, -118.319, 14.6205, 0.29", "-53.5285, -118.972, 14.6284, 0.29", "-53.8471, -119.605, 14.6509, 1.03", "-54.1726, -120.216, 14.676, 1.7", "-54.7459, -121.284, 14.7271, 1.4", "-55.6064, -122.886, 14.8201, 0.44", "-56.1132, -123.796, 14.8971, 0.15", "-56.34, -124.194, 14.9355, 0.37", "-56.7056, -124.83, 14.9885, 0.59", "-57.0538, -125.457, 15.0218, 0.59", "-57.6957, -126.636, 15.0384, 0.22", "-58.1929, -127.513, 15.021, 0.22", "-58.5707, -128.16, 15.007, 0.22", "-58.8683, -128.68, 14.991, 0.88", "-59.1512, -129.206, 14.9951, 1.47", "-59.5458, -129.985, 15.0131, 1.84", "-60.6406, -132.281, 15.1019, 0.22", "-60.8025, -132.639, 15.1129, 0.22", "-61.0138, -133.118, 15.1334, 0.22", "-61.5078, -134.18, 15.1756, 0.22", "-61.8529, -134.847, 15.1993, 0.22", "-62.1482, -135.358, 15.2051, 0.74", "-62.7003, -136.262, 15.1702, 1.33", "-63.4182, -137.344, 15.1023, 0.22", "-63.8532, -137.954, 15.0496, 0.22", "-64.3353, -138.64, 14.9986, 0.22", "-64.6755, -139.197, 15.0091, 0.15", "-64.9065, -139.65, 15.0607, 0.15", "-65.2154, -140.307, 15.2132, 0.37", "-65.3558, -140.632, 15.3164, 0.96", "-65.8635, -141.852, 15.78, 2.14", "-66.4681, -143.269, 16.3841, 0.66", "-66.93, -144.242, 16.8566, 0.15", "-67.3813, -145.064, 17.3141, 0.15", "-67.6763, -145.54, 17.6115, 0.44", "-67.9683, -145.976, 17.9005, 1.03", "-68.4633, -146.682, 18.3744, 1.55", "-69.0744, -147.555, 18.9785, 0.44", "-69.4731, -148.171, 19.349, 0.22", "-69.7502, -148.663, 19.5941, 0.22", "-70.1568, -149.434, 19.9189, 0.22", "-70.5351, -150.171, 20.1762, 0.29", "-70.9684, -151.021, 20.4041, 0.29", "-71.5175, -152.093, 20.6097, 0.15", "-71.9382, -152.887, 20.7187, 0.22", "-72.3974, -153.704, 20.7648, 0.88", "-73.0742, -154.849, 20.7313, 0.74", "-73.5375, -155.584, 20.6492, 0.88", "-74.0225, -156.339, 20.5038, 1.77", "-74.5678, -157.193, 20.2729, 2.29", "-75.3667, -158.504, 19.81, 0.07", "-75.8219, -159.305, 19.4545, 0.15", "-76.0836, -159.81, 19.1782, 0.15", "-76.2128, -160.091, 19.0096, 0.15", "-76.402, -160.638, 18.6775, 0.15", "-76.4836, -161.073, 18.4392, 0.15", "-76.5648, -161.852, 18.1111, 0.15", "-76.5874, -162.143, 18.0107, 0.15", "-76.6433, -162.967, 17.7635, 0.66", "-76.7753, -164.467, 17.3632, 0.29", "-76.8904, -165.444, 17.1429, 0.22", "-77.0119, -166.338, 16.9754, 0.22", "-77.1529, -167.114, 16.8638, 0.22", "-77.2663, -167.508, 16.8232, 0.59", "-77.4383, -167.882, 16.8033, 0.74", "-77.6929, -168.245, 16.8262, 0.37", "-78.0815, -168.673, 16.904, 0.15", "-78.8975, -169.468, 17.1131, 0.15", "-79.3638, -169.883, 17.2458, 0.22", "-79.8403, -170.305, 17.3836, 0.29", "-80.3274, -170.755, 17.542, 0.22", "-80.9409, -171.381, 17.7614, 0.22", "-81.6035, -172.148, 18.02, 0.29", "-82.0488, -172.733, 18.215, 0.29", "-82.6128, -173.462, 18.4559, 0.22", "-83.0945, -174.033, 18.6402, 0.37", "-83.5752, -174.571, 18.7969, 0.74", "-83.9237, -174.957, 18.9033, 1.03", "-84.617, -175.736, 19.1138, 0.22", "-85.2363, -176.468, 19.2981, 0.22", "-85.7731, -177.113, 19.4412, 0.15", "-86.1792, -177.623, 19.5317, 0.15", "-86.4629, -178.013, 19.5918, 0.15", "-86.8969, -178.7, 19.6623, 0.22", "-87.4754, -179.752, 19.7245, 0.29", "-87.9086, -180.692, 19.7609, 0.74", "-88.3269, -181.76, 19.8113, 0.74", "-88.6269, -182.602, 19.8569, 0.37", "-88.9216, -183.503, 19.9096, 0.37", "-89.1351, -184.196, 19.9696, 1.4", "-89.4478, -185.191, 20.0791, 2.95", "-89.9341, -186.581, 20.274, 1.18", "-90.379, -187.659, 20.4567, 0.22", "-90.9435, -188.905, 20.7127, 0.29", "-91.3739, -189.827, 20.9235, 0.74", "-91.7013, -190.51, 21.0806, 1.33", "-92.2631, -191.54, 21.312, 0.81", "-92.7729, -192.384, 21.4465, 1.18", "-93.6051, -193.78, 21.5857, 0.66", "-94.1028, -194.699, 21.6257, 0.29", "-94.2835, -195.06, 21.6268, 0.44", "-94.9688, -196.567, 21.6016, 0.29", "-95.4501, -197.696, 21.5483, 0.81", "-96.1527, -199.321, 21.3997, 0.22", "-96.5292, -200.057, 21.2735, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "56.3685, -8.75137, -16.0506, 0.15", "62.5168, -12.9111, -17.7615, 0.15", "68.3564, -17.5016, -19.3267, 0.15", "74.2096, -21.7106, -21.7963, 0.15", "80.3756, -25.9052, -23.3351, 0.15", "86.7873, -29.0788, -26.1096, 0.15", "93.0827, -32.2943, -29.0924, 0.15", "99.0792, -36.3717, -31.4568, 0.15", "104.013, -41.5, -34.0211, 0.15", "109.96, -45.953, -35.6214, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "56.3685, -8.75137, -16.0506, 0.59", "64.3542, -13.8812, -17.2949, 0.15", "72.1757, -19.1635, -18.84, 0.15", "80.131, -24.4443, -19.3756, 0.15", "88.1308, -29.6881, -19.4068, 0.15", "96.304, -34.5194, -20.7538, 0.15", "104.159, -39.7096, -22.4669, 0.15", "111.354, -45.7338, -24.0506, 0.15", "118.106, -51.9303, -26.5707, 0.15", "124.102, -58.7568, -29.1989, 0.15", "129.16, -66.5092, -30.7206, 0.15", "135.166, -73.6081, -32.3248, 0.15", "141.22, -80.358, -35.0381, 0.15", "146.869, -87.1514, -38.4236, 0.15", "153.867, -92.7336, -41.74, 0.15", "162.534, -96.6361, -43.3172, 0.15", "171.172, -100.711, -44.528, 0.15", "180.38, -103.324, -45.9806, 0.15", "189.387, -106.58, -47.2455, 0.15", "198.754, -108.085, -49.3047, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "62.9515, -20.5606, -22.7293, 0.15", "68.6517, -27.3522, -26.7531, 0.15", "73.8822, -34.8206, -30.0096, 0.15", "79.3936, -41.6822, -34.1644, 0.15", "83.2645, -50.1153, -36.6092, 0.15", "86.8063, -58.9393, -37.5236, 0.15", "90.2788, -67.6735, -39.2952, 0.15", "94.833, -75.4641, -42.7319, 0.15", "100.636, -82.9098, -44.8708, 0.15", "105.204, -91.2032, -46.4826, 0.15", "110.876, -98.9577, -47.3734, 0.15", "115.949, -107.057, -48.4713, 0.15", "120.61, -115.118, -50.9241, 0.15", "123.393, -123.782, -53.9089, 0.15", "126.792, -132.488, -55.9644, 0.15", "131.952, -140.565, -56.7957, 0.15", "136.595, -148.535, -59.59, 0.15", "142.517, -155.888, -61.7575, 0.15", "148.018, -163.709, -63.0202, 0.15", "153.22, -171.369, -65.7868, 0.15", "158.494, -179.216, -67.6961, 0.15", "162.994, -187.08, -71.0156, 0.15", "167.036, -195.456, -73.3983, 0.15", "170.829, -204.158, -74.5664, 0.15", "174.368, -212.666, -77.2246, 0.15", "178.429, -221.026, -79.6385, 0.15", "181.311, -229.973, -81.2886, 0.15", "184.685, -238.895, -81.4036, 0.15", "189.456, -247.065, -79.7605, 0.15", "195.047, -254.382, -76.7998, 0.15", "201.466, -260.857, -73.3822, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "62.9515, -20.5606, -22.7293, 0.59", "71.657, -28.388, -23.9695, 0.15", "81.781, -34.4778, -25.2434, 0.15", "92.1295, -40.2794, -26.1393, 0.15", "100.775, -47.8443, -28.8166, 0.15", "108.487, -56.0589, -32.1583, 0.15", "117.039, -63.3678, -35.7744, 0.15", "126.488, -69.5125, -39.552, 0.15", "136.806, -74.5047, -42.909, 0.15", "147.376, -79.7638, -44.6037, 0.15", "157.355, -86.144, -45.2923, 0.15", "167.575, -92.0441, -43.8689, 0.15", "176.451, -99.3253, -41.1494, 0.15", "183.7, -107.504, -36.8925, 0.15", "188.76, -115.892, -30.4813, 0.15", "194.179, -124.564, -24.8248, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-96.0016, -130.805, -26.6638, 0.15", "-100.3, -135.339, -27.1851, 0.15", "-104.249, -139.908, -28.8647, 0.15", "-108.504, -144.405, -29.8716, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-96.0016, -130.805, -26.6638, 0.59", "-103.288, -138.831, -27.2083, 0.15", "-108.97, -147.943, -26.4976, 0.15", "-115.373, -156.554, -25.2524, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-50.2819, -132.025, -140.255, 0.15", "-53.1222, -140.042, -146.856, 0.15", "-56.2434, -148.867, -152.073, 0.15", "-58.6253, -157.21, -158.401, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-50.2819, -132.025, -140.255, 0.59", "-52.4263, -141.0, -149.351, 0.15", "-51.8344, -150.181, -158.414, 0.15", "-53.0888, -159.398, -167.396, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "7.93449, -149.223, 39.831, 0.15", "8.69392, -149.86, 39.8627, 0.15", "9.04391, -150.154, 39.8772, 0.37", "9.63068, -150.646, 39.9017, 1.18", "10.0577, -151.004, 39.9195, 0.88", "10.808, -151.633, 39.9508, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "7.93449, -149.223, 39.831, 0.22", "7.97602, -149.784, 39.698, 0.22", "8.00105, -150.201, 39.5807, 0.81", "8.01214, -150.605, 39.4673, 1.18", "7.99178, -151.217, 39.3069, 0.22", "7.92543, -151.734, 39.1852, 0.22", "7.8219, -152.244, 39.0764, 0.29", "7.68592, -152.723, 38.9864, 0.66", "7.50227, -153.203, 38.9159, 0.81", "7.26103, -153.72, 38.8641, 0.22", "6.89982, -154.388, 38.8359, 0.22", "6.71671, -154.716, 38.8418, 0.29", "6.53858, -155.045, 38.8601, 0.96", "6.37641, -155.368, 38.8912, 1.7", "6.06728, -156.081, 38.9856, 0.52", "5.8443, -156.724, 39.0967, 0.22", "5.75619, -157.063, 39.1699, 0.15", "5.64408, -157.605, 39.311, 0.22", "5.56123, -158.081, 39.4311, 0.15", "5.49571, -158.486, 39.5321, 0.15", "5.4525, -158.762, 39.5979, 0.15", "5.40876, -159.071, 39.6627, 0.37", "5.3488, -159.471, 39.7205, 0.59", "5.22462, -160.211, 39.7674, 0.07", "5.14097, -160.63, 39.7624, 0.07", "5.04459, -161.088, 39.737, 0.15", "4.98138, -161.402, 39.7126, 0.66", "4.90769, -161.79, 39.6806, 0.74", "4.79562, -162.443, 39.6383, 0.15", "4.73038, -162.862, 39.6309, 0.22", "4.67943, -163.204, 39.6294, 0.15", "4.626, -163.499, 39.6327, 0.81", "4.55574, -163.811, 39.6422, 0.66", "4.41199, -164.335, 39.6561, 0.15", "4.28027, -164.753, 39.6576, 0.22", "4.10027, -165.273, 39.6495, 0.52", "3.92441, -165.688, 39.6463, 0.59", "3.67981, -166.231, 39.668, 0.07", "3.48381, -166.66, 39.7018, 0.22", "3.4116, -166.815, 39.7156, 0.22", "3.24585, -167.168, 39.7522, 0.96", "2.92695, -167.836, 39.8367, 0.07", "2.6645, -168.419, 39.9438, 0.07", "2.54944, -168.687, 40.0213, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-10.0361, -208.817, 34.0604, 0.15", "-9.67291, -217.792, 35.7595, 0.15", "-10.3183, -226.72, 37.6205, 0.15", "-10.8646, -235.614, 39.68, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-10.0361, -208.817, 34.0604, 0.59", "-10.9185, -219.742, 36.3866, 0.15", "-12.5295, -230.82, 36.2215, 0.15", "-15.3781, -241.452, 38.5024, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "17.2053, 40.6087, -7.01552, 0.52", "17.9996, 41.7415, -8.10879, 0.52", "18.8224, 42.3337, -9.43115, 0.37", "19.4295, 42.5833, -10.3828, 0.37", "19.7385, 42.6996, -10.8798, 0.52", "20.296, 42.9661, -11.8293, 0.52", "21.1251, 43.4782, -13.34, 0.44", "21.4955, 43.7248, -14.1222, 0.44", "21.901, 44.0701, -14.9943, 0.66", "22.2622, 44.4815, -15.6757, 0.66", "22.7362, 45.1611, -16.4154, 0.88", "23.0632, 45.7093, -16.7906, 1.03", "23.7991, 46.9795, -17.3499, 0.52", "24.3897, 47.9645, -17.6842, 0.52", "24.9218, 48.8082, -17.925, 0.52", "25.4289, 49.5371, -18.1136, 0.52", "26.2837, 50.6969, -18.4401, 0.22", "27.1117, 51.7691, -18.7403, 0.44", "27.9382, 52.83, -19.0278, 0.74", "28.7954, 54.0211, -19.3543, 1.18", "29.3876, 54.9171, -19.6216, 0.88", "30.3133, 56.3537, -20.1146, 0.29", "37.728, 66.2337, -24.3436, 0.29", "45.1013, 75.8485, -29.2744, 0.29", "52.4456, 86.1995, -32.1353, 0.29", "60.6763, 96.2428, -33.1478, 0.29", "68.4992, 106.601, -33.7679, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "17.2053, 40.6087, -7.01552, 0.88", "18.5216, 41.3865, -6.88452, 0.88", "19.4073, 41.8943, -6.84956, 0.81", "20.4286, 42.5014, -6.90644, 0.96", "21.48, 43.1476, -7.06279, 1.33", "22.6899, 43.9414, -7.31689, 1.33", "23.3863, 44.4159, -7.47752, 1.33", "24.1454, 44.9862, -7.68629, 1.33", "25.0803, 45.7251, -7.99056, 1.18", "25.9585, 46.4343, -8.30937, 1.03", "26.7424, 47.0456, -8.58963, 0.88", "27.7195, 47.8065, -8.91498, 1.4", "28.9185, 48.7627, -9.2664, 0.74", "29.905, 49.5556, -9.5256, 1.25", "30.9756, 50.3972, -9.7956, 1.77", "32.3639, 51.5072, -10.1849, 0.96", "33.4949, 52.4531, -10.57, 0.59", "34.3017, 53.1841, -10.9054, 0.74", "34.8851, 53.7589, -11.1861, 0.96", "35.881, 54.8178, -11.6867, 1.11", "36.5908, 55.6092, -12.0252, 1.4", "37.2332, 56.3375, -12.2967, 1.4", "38.3329, 57.5108, -12.6927, 0.96", "38.8248, 57.9928, -12.8176, 0.96", "39.9098, 58.9466, -12.9563, 1.18", "40.8647, 59.6781, -12.967, 1.18", "41.8985, 60.3752, -12.9376, 1.03", "42.6266, 60.8215, -12.9358, 0.96", "43.6109, 61.3992, -12.9972, 0.81", "44.6746, 62.0273, -13.1556, 0.74", "45.7865, 62.708, -13.4303, 0.96", "46.909, 63.4423, -13.7839, 1.25", "48.1221, 64.2903, -14.2257, 1.55", "49.1416, 65.0734, -14.6341, 0.88", "50.2338, 66.0423, -15.1389, 0.59", "50.8653, 66.6963, -15.4454, 0.81", "51.5111, 67.4841, -15.7575, 0.96", "52.1907, 68.3667, -16.0569, 1.33", "53.1986, 69.7828, -16.4427, 1.55", "54.0357, 71.0694, -16.7453, 1.7", "54.7863, 72.3602, -17.0336, 1.62", "55.5659, 73.8473, -17.3675, 1.62" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-75.6463, 211.625, -77.532, 0.15", "-76.8956, 214.344, -78.7856, 0.15", "-77.6729, 217.192, -80.0956, 0.15", "-78.9516, 220.035, -80.9507, 0.15", "-80.1151, 222.947, -81.7061, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-75.6463, 211.625, -77.532, 0.59", "-80.5721, 220.388, -79.7088, 0.15", "-86.2845, 228.681, -81.9998, 0.15", "-89.9497, 238.189, -82.6406, 0.15", "-92.4032, 247.959, -84.1788, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-18.4622, 20.4369, 13.1999, 0.81", "-16.8537, 21.1536, 13.8586, 0.81", "-15.9516, 21.636, 14.1614, 0.44", "-14.6504, 22.4977, 14.628, 0.59", "-13.5982, 23.2845, 15.0622, 0.59", "-12.7276, 23.9735, 15.4554, 0.88", "-12.0663, 24.5136, 15.7744, 1.11", "-11.2441, 25.1947, 16.0497, 1.11", "-10.4836, 26.0303, 16.3157, 0.29", "-10.3298, 26.5637, 16.5169, 0.29", "-10.5477, 26.9985, 16.7788, 0.29", "-10.7327, 27.2258, 16.9455, 0.29", "-10.9179, 27.4833, 17.1865, 0.29", "-11.132, 27.9188, 17.7172, 0.59", "-11.1823, 28.3164, 18.2905, 1.11", "-11.1303, 28.929, 19.2738, 1.84", "-11.0178, 29.4075, 20.1471, 1.84", "-10.821, 29.9903, 21.3022, 0.96", "-10.6576, 30.3656, 22.128, 0.74", "-10.4545, 30.7779, 23.0208, 0.74", "-10.2604, 31.2739, 24.0235, 0.74", "-10.1609, 31.6935, 24.7904, 1.11", "-10.0734, 32.2552, 25.625, 1.47", "-9.98507, 32.8669, 26.4043, 1.47", "-9.85069, 33.7075, 27.3656, 0.74", "-9.65938, 34.836, 28.5693, 0.52", "-9.54218, 35.4528, 29.2095, 0.52", "-9.37765, 36.2976, 30.126, 0.37", "-9.19731, 36.9246, 30.9506, 0.37", "-9.08901, 37.0697, 31.3411, 0.37", "-8.93851, 37.0853, 31.8644, 0.37", "-8.82512, 37.0521, 32.2595, 0.37", "-8.65272, 37.0127, 33.2716, 0.37", "-8.65393, 37.0793, 34.0809, 0.37", "-8.75025, 37.3845, 35.2102, 0.37", "-8.85658, 37.7005, 35.9751, 0.37", "-9.01902, 38.1, 36.7481, 0.59", "-9.22831, 38.5845, 37.5296, 0.88", "-9.64746, 39.5534, 38.7838, 0.88", "-10.0418, 40.3988, 39.7317, 0.59", "-10.5608, 41.4843, 40.7931, 0.59", "-10.8501, 42.1744, 41.3941, 0.29", "-11.0999, 42.9289, 41.9742, 0.29", "-11.3147, 43.8157, 42.5762, 0.29", "-11.4224, 44.4802, 42.9778, 0.96", "-11.4746, 45.1319, 43.3723, 1.84", "-11.5003, 46.1351, 43.9627, 0.37", "-11.5294, 46.9087, 44.4423, 0.81", "-11.6308, 47.8206, 45.0735, 1.55", "-11.8062, 48.7259, 45.8038, 0.22", "-11.9757, 49.4044, 46.3859, 0.22", "-12.1125, 49.881, 46.834, 0.22", "-12.2309, 50.4824, 47.3956, 0.29", "-12.2667, 51.0664, 47.8967, 0.29", "-12.2277, 51.7479, 48.4421, 0.59", "-12.0765, 52.7496, 49.237, 1.77", "-11.9298, 53.4602, 49.7946, 2.14", "-11.5613, 54.781, 50.8165, 0.29", "-11.3474, 55.4078, 51.2856, 0.29", "-11.1357, 56.0176, 51.7292, 0.29", "-11.005, 56.3621, 51.9821, 0.29", "-10.8164, 56.8358, 52.3679, 0.88", "-10.5736, 57.4147, 52.8926, 1.62", "-10.3534, 57.8784, 53.3742, 1.62", "-10.0266, 58.479, 53.9875, 2.21", "-9.12189, 59.9039, 55.3981, 0.22", "-8.718, 60.4812, 55.9504, 0.22", "-8.42876, 60.8657, 56.3177, 0.22", "-8.12087, 61.2537, 56.6782, 0.22", "-7.51798, 61.9749, 57.3154, 0.44", "-6.78058, 62.7685, 57.9749, 0.66", "-6.66301, 62.9003, 58.0708, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-18.4622, 20.4369, 13.1999, 0.96", "-17.8463, 19.7242, 13.7592, 0.96", "-17.1882, 18.9793, 14.3225, 0.37", "-17.016, 18.6856, 14.5077, 0.29", "-16.7957, 18.1134, 14.8061, 0.22", "-16.7066, 17.7189, 15.0076, 0.22", "-16.6267, 17.0946, 15.327, 0.52", "-16.6022, 16.3275, 15.7215, 0.74", "-16.7331, 15.2443, 16.2612, 0.52", "-16.8743, 14.4506, 16.6456, 1.11", "-17.1036, 13.2357, 17.2334, 1.62", "-17.3014, 12.1555, 17.7433, 1.33", "-17.5452, 10.6329, 18.4502, 1.11", "-17.8386, 8.55212, 19.4082, 0.44", "-17.9749, 7.45281, 19.9029, 0.44", "-18.1184, 6.31032, 20.3995, 0.44", "-18.241, 5.39297, 20.7699, 0.96", "-18.4282, 4.06578, 21.2937, 1.47", "-18.6887, 2.52499, 21.8904, 1.7", "-19.0474, 0.814624, 22.5806, 1.7", "-19.4925, -0.700737, 23.2453, 1.7", "-20.0218, -2.1104, 23.908, 0.59", "-20.5891, -3.40753, 24.5744, 0.44", "-21.146, -4.55511, 25.2225, 0.44", "-21.479, -5.21224, 25.6512, 0.44", "-21.9508, -6.17276, 26.4068, 0.44", "-22.0791, -6.49749, 26.7156, 0.44", "-22.1352, -6.90526, 27.1163, 0.44", "-22.0866, -7.5419, 27.6872, 0.44", "-22.0392, -7.96767, 28.0417, 0.88", "-21.9892, -8.99413, 28.8206, 1.4", "-22.03, -9.71079, 29.3418, 1.4", "-22.2561, -10.8763, 30.1757, 0.66", "-22.5202, -11.7447, 30.7802, 0.22", "-22.8298, -12.5952, 31.384, 0.22", "-23.0124, -13.0815, 31.7418, 1.03", "-23.3144, -13.9131, 32.3701, 2.36", "-23.6152, -14.8769, 33.1234, 2.65", "-24.0167, -16.5766, 34.532, 0.81", "-24.0724, -17.5193, 35.2841, 0.22", "-24.0285, -17.9761, 35.6381, 0.22", "-23.9403, -18.4089, 35.9736, 0.66", "-23.7778, -18.9373, 36.3887, 0.66", "-23.6464, -19.2619, 36.6571, 0.66", "-23.2015, -20.1392, 37.4469, 0.22", "-23.0219, -20.5922, 37.8557, 0.22", "-22.9748, -20.8025, 38.0594, 0.22", "-22.9675, -21.1563, 38.4266, 0.22", "-23.0414, -21.6444, 38.9307, 0.22", "-23.1099, -21.8545, 39.1395, 0.22", "-23.3583, -22.3619, 39.6135, 0.22", "-23.5243, -22.668, 39.8532, 0.29", "-23.9717, -23.4745, 40.3949, 0.29", "-24.1825, -23.9024, 40.6471, 0.59", "-24.5196, -24.7004, 41.072, 0.88", "-24.7864, -25.4941, 41.4799, 0.66", "-24.9916, -26.5161, 41.99, 0.22", "-25.017, -26.999, 42.2389, 0.22", "-24.9557, -28.1748, 42.8975, 0.59", "-24.8292, -29.1514, 43.4835, 1.03", "-24.6687, -30.1135, 44.0818, 1.62", "-24.4513, -31.4, 44.9249, 0.59", "-24.2795, -32.7218, 45.7913, 0.22", "-24.2267, -33.6443, 46.4063, 0.52", "-24.2535, -34.1916, 46.7904, 1.25", "-24.401, -35.0888, 47.4676, 2.14", "-24.6456, -35.9053, 48.1163, 1.33", "-25.0983, -36.9682, 49.0477, 0.52", "-25.3666, -37.5587, 49.602, 0.22", "-25.6284, -38.2152, 50.2534, 0.44", "-25.7975, -38.7332, 50.81, 0.44", "-25.8973, -39.2682, 51.3782, 0.22", "-25.9515, -39.8046, 51.8501, 0.22", "-26.0018, -40.4853, 52.3748, 0.22", "-26.0412, -40.9782, 52.6879, 0.52", "-26.1165, -41.6848, 53.0681, 0.74", "-26.3399, -42.8318, 53.6814, 0.81", "-26.6835, -43.8104, 54.3274, 0.22", "-27.0372, -44.3722, 54.8247, 0.22", "-27.2343, -44.5933, 55.0908, 0.22", "-27.5324, -44.9179, 55.5388, 0.66", "-28.0145, -45.4566, 56.382, 1.33", "-28.3778, -45.9245, 57.1424, 1.55", "-28.6929, -46.4815, 57.9552, 0.88", "-29.0596, -47.2679, 58.8858, 0.15", "-29.4345, -48.1032, 59.7695, 0.29", "-29.6337, -48.573, 60.2205, 0.88", "-29.8518, -49.0725, 60.631, 1.25", "-30.0979, -49.6151, 61.0452, 1.33", "-30.7728, -51.0421, 62.1193, 0.22", "-31.0708, -51.675, 62.5914, 0.74", "-31.3516, -52.2795, 63.0445, 1.25", "-31.7704, -53.3291, 63.7976, 0.44", "-31.9363, -54.12, 64.3355, 0.22", "-31.9484, -54.5943, 64.6288, 0.22", "-31.8611, -55.2654, 64.9806, 0.96", "-31.7764, -55.6945, 65.1922, 1.55", "-31.5727, -56.5637, 65.6119, 1.33", "-31.0755, -58.5386, 66.5981, 0.15", "-30.9755, -59.016, 66.8367, 0.37", "-30.8402, -59.9068, 67.3065, 0.15", "-30.7855, -60.655, 67.7538, 0.15", "-30.7893, -61.3337, 68.2106, 0.52", "-30.8526, -62.0568, 68.7457, 1.18", "-31.0041, -62.9249, 69.4484, 2.06", "-31.2194, -64.0262, 70.3834, 0.96", "-31.4583, -65.1542, 71.3741, 0.22", "-31.65, -65.9558, 72.0798, 0.22", "-31.8916, -66.8987, 72.9281, 0.22", "-32.0498, -67.5037, 73.4787, 0.22", "-32.2825, -68.3975, 74.3318, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "194.179, -124.564, -24.8248, 0.15", "201.754, -131.012, -25.3317, 0.15", "208.52, -138.239, -25.3417, 0.15", "215.519, -145.245, -25.9356, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "194.179, -124.564, -24.8248, 0.59", "202.515, -130.971, -24.6533, 0.15", "210.651, -137.472, -23.2018, 0.15", "216.985, -145.647, -22.2174, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "68.4992, 106.601, -33.7679, 0.15", "72.7834, 111.604, -37.5803, 0.15", "75.4887, 117.195, -41.8764, 0.15", "76.5203, 122.861, -46.7295, 0.15", "76.4933, 128.735, -51.4052, 0.15", "75.3982, 134.072, -56.6218, 0.15", "75.3353, 139.315, -62.0611, 0.15", "75.6309, 144.792, -67.2346, 0.15", "75.8389, 150.227, -72.4597, 0.15", "76.3039, 156.409, -76.6595, 0.15", "75.4819, 163.207, -79.5477, 0.15", "75.9503, 170.475, -80.9151, 0.15", "77.3398, 177.713, -81.8155, 0.15", "77.7834, 185.105, -81.3897, 0.15", "78.8839, 192.409, -80.5276, 0.15", "80.6822, 199.624, -80.1783, 0.15", "81.0097, 207.017, -80.5168, 0.15", "81.1271, 214.34, -81.6083, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "68.4992, 106.601, -33.7679, 0.59", "75.3406, 113.254, -31.9937, 0.15", "81.5688, 120.22, -29.4798, 0.15", "88.4753, 125.933, -25.6214, 0.15", "93.9838, 132.34, -20.8503, 0.15", "100.251, 137.674, -15.5751, 0.15", "105.954, 143.551, -10.3052, 0.15", "110.849, 149.817, -4.73272, 0.15", "117.524, 155.646, -0.669284, 0.15", "124.129, 161.411, 3.60171, 0.15", "129.972, 168.014, 7.62993, 0.15", "134.677, 175.448, 11.5414, 0.15", "140.862, 181.542, 15.9284, 0.15", "148.316, 185.63, 20.9032, 0.15", "156.399, 189.054, 25.4431, 0.15", "164.599, 192.775, 29.4895, 0.15", "172.658, 197.822, 31.8983, 0.15", "181.448, 202.171, 32.883, 0.15", "189.697, 207.305, 34.2443, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "55.5659, 73.8473, -17.3675, 0.66", "56.2191, 75.26, -17.671, 0.66", "56.5854, 75.9903, -17.8638, 0.66", "57.0334, 76.8672, -18.1079, 0.44", "57.3655, 77.5028, -18.2722, 0.37", "57.8112, 78.3447, -18.4593, 0.37", "58.2195, 79.0923, -18.5867, 0.37", "58.4334, 79.4469, -18.6371, 0.59", "58.8143, 80.1015, -18.6968, 1.11", "59.3647, 81.1692, -18.7258, 0.37", "59.7726, 82.0203, -18.6445, 0.59", "60.2416, 83.0605, -18.4389, 0.37", "60.7115, 84.0813, -18.1725, 0.44", "60.9855, 84.6353, -18.016, 0.22", "61.264, 85.1274, -17.8787, 0.22", "62.0927, 86.4074, -17.5555, 0.22", "62.5972, 87.0773, -17.4329, 0.22", "62.8992, 87.4178, -17.4069, 0.44", "63.416, 87.9161, -17.4367, 0.66", "64.2195, 88.6075, -17.5887, 0.22", "64.5699, 88.8866, -17.6934, 0.22", "65.0212, 89.2254, -17.8653, 0.66", "65.4103, 89.5017, -18.0058, 1.03", "66.3028, 90.1369, -18.316, 0.22", "67.0643, 90.7032, -18.5708, 0.66", "67.5318, 91.0657, -18.7137, 0.81", "68.5922, 91.898, -19.0198, 1.03", "69.4052, 92.5355, -19.2437, 0.74", "70.2133, 93.1576, -19.4536, 0.37", "70.8078, 93.586, -19.6073, 0.37", "71.3114, 93.9409, -19.7395, 0.29", "71.8358, 94.3066, -19.8814, 0.29", "72.2691, 94.6113, -20.0078, 0.66", "72.9112, 95.0494, -20.185, 1.25", "74.0585, 95.8132, -20.5032, 0.29", "74.4066, 96.047, -20.6042, 0.29", "75.1287, 96.565, -20.8239, 0.88", "75.8174, 97.1037, -21.0342, 0.52", "76.3757, 97.5741, -21.2076, 1.11", "77.1397, 98.2602, -21.4522, 0.66", "77.8641, 98.9285, -21.6703, 0.29", "78.3906, 99.395, -21.8287, 0.59", "79.339, 100.172, -22.1234, 0.22", "79.7842, 100.503, -22.2659, 0.59", "80.403, 100.929, -22.4726, 1.18", "81.1795, 101.412, -22.7285, 0.22", "81.7019, 101.716, -22.9004, 0.22", "82.1409, 101.968, -23.0457, 0.22", "82.6218, 102.257, -23.1887, 0.22", "82.9463, 102.494, -23.2748, 0.22", "83.3164, 102.839, -23.3617, 0.37", "83.8643, 103.476, -23.4654, 0.37", "84.2262, 103.951, -23.5129, 0.22", "84.6422, 104.536, -23.5417, 0.52", "85.2102, 105.337, -23.5432, 0.52", "85.6031, 105.855, -23.533, 0.96", "86.0115, 106.336, -23.5224, 1.77", "86.4798, 106.829, -23.5164, 1.77", "87.1502, 107.5, -23.5203, 0.22", "87.63, 107.969, -23.5367, 0.22", "88.096, 108.387, -23.5599, 0.22", "88.5681, 108.799, -23.598, 0.22", "88.9974, 109.175, -23.6577, 0.22", "89.4965, 109.648, -23.7484, 0.22", "90.0053, 110.179, -23.8737, 0.22", "90.2625, 110.471, -23.9416, 0.66", "90.6431, 110.917, -24.0399, 0.81", "91.2109, 111.579, -24.1672, 0.22", "91.6708, 112.082, -24.2535, 0.22", "92.0647, 112.522, -24.3094, 0.74", "92.5353, 113.105, -24.354, 0.88", "92.8061, 113.476, -24.3632, 1.11", "93.4241, 114.399, -24.3259, 1.11", "93.9471, 115.269, -24.245, 0.37", "94.5129, 116.249, -24.1117, 0.22", "94.8599, 116.862, -24.0002, 0.29", "95.1809, 117.419, -23.8747, 0.29", "95.5285, 117.973, -23.7303, 0.37", "95.9201, 118.458, -23.592, 0.37", "96.2772, 118.756, -23.5, 0.22", "96.7402, 119.019, -23.4247, 0.22", "97.4313, 119.334, -23.3446, 0.22", "98.1038, 119.605, -23.2983, 0.29", "99.0984, 119.987, -23.249, 0.22", "99.6911, 120.229, -23.2241, 1.4", "100.318, 120.527, -23.1886, 2.21", "100.76, 120.789, -23.1356, 1.7", "101.341, 121.202, -23.0047, 0.96", "102.019, 121.713, -22.7766, 0.96", "102.415, 122.004, -22.6159, 1.47", "102.844, 122.294, -22.4383, 1.47", "103.704, 122.834, -22.0922, 0.22", "104.252, 123.168, -21.8936, 0.22", "104.822, 123.532, -21.7072, 0.22", "105.374, 123.907, -21.5666, 0.22", "105.839, 124.229, -21.4804, 0.22", "106.179, 124.486, -21.4535, 0.88", "106.68, 124.894, -21.4627, 1.99", "107.374, 125.504, -21.5304, 1.55", "108.173, 126.276, -21.6545, 0.22", "108.751, 126.856, -21.7565, 0.22", "109.52, 127.605, -21.9126, 0.29", "109.995, 128.053, -22.0209, 0.59", "110.729, 128.702, -22.2426, 0.96", "111.575, 129.396, -22.5595, 0.15", "112.285, 129.936, -22.8482, 1.18", "113.198, 130.597, -23.2324, 1.18", "113.977, 131.134, -23.563, 1.4", "115.102, 131.879, -24.0456, 0.22", "115.612, 132.22, -24.2671, 0.37", "116.155, 132.595, -24.4898, 1.03", "116.402, 132.781, -24.5807, 0.88", "116.757, 133.058, -24.6797, 0.74", "117.268, 133.451, -24.7819, 0.96", "117.992, 134.063, -24.8443, 0.22", "118.641, 134.646, -24.8972, 0.96", "118.982, 134.952, -24.942, 0.74", "119.581, 135.453, -25.0235, 0.22", "120.178, 135.934, -25.1065, 0.29", "121.063, 136.629, -25.2373, 0.29", "121.672, 137.091, -25.3488, 0.29", "122.607, 137.805, -25.5657, 0.22", "123.068, 138.165, -25.6864, 0.66", "123.448, 138.483, -25.7887, 1.55", "123.687, 138.682, -25.8596, 1.55", "124.566, 139.397, -26.1583, 0.15", "125.25, 139.989, -26.3961, 0.15", "125.827, 140.531, -26.6054, 0.15", "126.3, 141.018, -26.8095, 0.15", "126.727, 141.487, -27.0018, 0.15", "127.062, 141.884, -27.1392, 0.88", "127.476, 142.413, -27.2952, 1.18", "127.972, 143.094, -27.4656, 1.18", "128.686, 144.081, -27.7057, 0.22", "129.448, 145.102, -27.9595, 0.22", "129.92, 145.761, -28.1079, 1.18", "130.149, 146.08, -28.1747, 1.92", "130.529, 146.612, -28.2703, 1.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "55.5659, 73.8473, -17.3675, 0.44", "56.1941, 74.0596, -17.472, 0.44", "56.8645, 74.2915, -17.5754, 0.44", "57.2015, 74.3894, -17.6174, 0.96", "57.9624, 74.5661, -17.6906, 1.7", "58.6393, 74.7074, -17.7498, 1.99", "59.6569, 74.9005, -17.8444, 1.11", "60.3411, 75.0115, -17.9264, 0.37", "60.9685, 75.1016, -18.0375, 0.37", "61.7333, 75.2053, -18.2124, 0.37", "62.2076, 75.2737, -18.3617, 0.37", "62.6536, 75.3425, -18.5359, 0.44", "63.2948, 75.4402, -18.8322, 0.96", "64.0935, 75.5622, -19.2515, 1.62", "64.8899, 75.7015, -19.6656, 1.18", "65.9545, 75.9086, -20.18, 0.29", "66.513, 76.0149, -20.4105, 0.44", "66.9368, 76.0938, -20.5497, 0.59", "67.6068, 76.2091, -20.7209, 0.29", "68.5197, 76.3727, -20.8956, 0.29", "69.5709, 76.5892, -21.0484, 0.59", "70.2923, 76.7868, -21.1342, 1.03", "71.153, 77.0909, -21.233, 1.7", "71.9641, 77.4296, -21.3267, 1.7", "72.9383, 77.8538, -21.4377, 0.96", "73.5229, 78.098, -21.5183, 1.33", "74.6212, 78.5454, -21.6766, 1.62", "75.4928, 78.9018, -21.8247, 0.52", "76.1649, 79.1769, -21.949, 0.22", "76.8831, 79.4728, -22.0927, 0.22", "77.7866, 79.8335, -22.3035, 0.22", "78.4696, 80.1253, -22.4913, 0.74", "79.0813, 80.4271, -22.6885, 1.33", "79.61, 80.7597, -22.8905, 1.77", "80.3766, 81.3615, -23.2251, 0.44", "81.0698, 82.0201, -23.5556, 0.22", "81.612, 82.586, -23.8208, 0.66", "82.0401, 83.0203, -24.0272, 0.29", "82.4191, 83.3759, -24.1987, 0.29", "82.6644, 83.5684, -24.2987, 0.22", "83.0082, 83.7909, -24.4146, 0.22", "83.527, 84.0683, -24.5558, 0.52", "84.165, 84.3393, -24.7138, 0.88", "84.7282, 84.5355, -24.8622, 0.88", "85.3761, 84.7496, -25.0432, 0.22", "85.9542, 84.9587, -25.2015, 0.22", "86.2396, 85.0726, -25.28, 0.52", "86.7484, 85.2888, -25.4195, 1.4", "87.4314, 85.5683, -25.6192, 1.18", "88.4823, 85.9732, -25.9448, 0.22", "89.24, 86.26, -26.2133, 0.59", "89.7997, 86.4672, -26.4186, 0.22", "90.4327, 86.7218, -26.6643, 0.88", "91.2349, 87.0966, -26.993, 1.55", "91.5354, 87.2621, -27.129, 1.55", "92.5285, 87.9026, -27.6483, 0.88", "92.9899, 88.2353, -27.9169, 0.44", "93.408, 88.5613, -28.1686, 0.22", "93.8315, 88.8832, -28.4227, 0.22", "94.2776, 89.2145, -28.6858, 0.37", "94.7693, 89.5537, -28.9655, 1.11", "95.4113, 89.9601, -29.309, 1.18", "96.0112, 90.3289, -29.6168, 0.29", "96.843, 90.8229, -30.0239, 0.22", "97.3034, 91.0893, -30.2311, 0.22", "97.7774, 91.3713, -30.4201, 1.11", "98.1189, 91.5898, -30.5338, 1.18", "98.814, 92.0873, -30.7124, 0.29", "99.4684, 92.5553, -30.8279, 0.29", "99.8854, 92.8373, -30.876, 1.03", "100.454, 93.1671, -30.9167, 1.92", "100.854, 93.3686, -30.9549, 1.92", "102.139, 93.9289, -31.1311, 0.15", "102.814, 94.174, -31.2453, 0.15", "103.213, 94.3102, -31.3162, 0.37", "103.779, 94.5063, -31.4239, 1.11", "104.732, 94.8401, -31.6051, 1.47", "105.659, 95.1459, -31.7829, 0.44", "106.636, 95.4448, -31.9707, 0.22", "107.414, 95.6712, -32.1166, 0.74", "108.037, 95.8212, -32.2185, 0.88", "109.117, 95.9551, -32.3728, 0.22", "109.624, 95.9439, -32.4273, 0.22", "110.123, 95.8502, -32.4805, 0.44", "110.611, 95.6982, -32.536, 0.81", "111.205, 95.4737, -32.6062, 1.03", "112.17, 95.1134, -32.7237, 0.81", "112.956, 94.8459, -32.8096, 0.22", "113.517, 94.7021, -32.8723, 0.22", "113.984, 94.6429, -32.9354, 0.22", "114.887, 94.6552, -33.0773, 0.37", "115.879, 94.798, -33.258, 0.22", "116.239, 94.895, -33.3399, 0.96", "116.883, 95.1305, -33.527, 1.84", "118.092, 95.6683, -33.9684, 0.22", "118.644, 95.9648, -34.2188, 0.22", "118.864, 96.1186, -34.3422, 0.22", "119.251, 96.4708, -34.5923, 0.22", "119.604, 96.8536, -34.8354, 0.44", "120.082, 97.4094, -35.1511, 1.18", "120.501, 97.8781, -35.3955, 1.62", "120.934, 98.3137, -35.6084, 1.7", "121.631, 98.9973, -35.8897, 1.25", "122.549, 99.8414, -36.1909, 0.29", "123.138, 100.305, -36.3523, 1.03", "123.667, 100.659, -36.4915, 1.47", "124.69, 101.236, -36.7466, 0.22", "125.521, 101.636, -36.9557, 0.88", "126.153, 101.906, -37.1157, 0.44", "127.088, 102.302, -37.3643, 0.22", "127.757, 102.615, -37.5463, 0.22", "128.275, 102.887, -37.6884, 1.03", "128.888, 103.249, -37.8489, 1.47", "129.41, 103.613, -37.9883, 1.25", "130.181, 104.264, -38.2155, 0.52", "131.007, 105.065, -38.4862, 0.37", "131.434, 105.49, -38.6448, 1.03", "131.679, 105.73, -38.7565, 1.4", "132.433, 106.433, -39.1511, 0.96", "132.947, 106.856, -39.4543, 0.81", "133.721, 107.42, -39.9451, 0.22", "134.201, 107.72, -40.2602, 0.22", "134.616, 107.946, -40.5133, 0.74", "134.932, 108.109, -40.6879, 0.81", "135.544, 108.442, -40.9872, 0.22", "135.844, 108.633, -41.1231, 0.22", "136.279, 108.954, -41.3336, 0.88", "136.94, 109.507, -41.6589, 1.33", "137.466, 110.012, -41.9443, 1.7", "138.111, 110.713, -42.3251, 1.47", "138.79, 111.545, -42.7615, 0.22", "139.188, 112.073, -43.0323, 0.22", "139.622, 112.735, -43.3639, 0.29", "139.887, 113.254, -43.6028, 0.15", "140.04, 113.658, -43.7682, 0.15", "140.202, 114.27, -43.9865, 0.59", "140.322, 114.869, -44.1794, 0.37", "140.475, 115.673, -44.4552, 0.22", "140.644, 116.524, -44.7857, 0.22", "140.743, 116.939, -44.9634, 1.11", "140.957, 117.778, -45.3661, 0.22", "141.12, 118.397, -45.6945, 0.07", "141.263, 118.988, -46.0056, 0.07", "141.348, 119.352, -46.1779, 0.88", "141.408, 119.657, -46.293, 1.11", "141.476, 120.312, -46.4435, 0.81", "141.492, 121.023, -46.4902, 0.37", "141.479, 122.04, -46.4285, 0.15", "141.461, 122.891, -46.289, 0.15", "141.441, 123.628, -46.1009, 0.15", "141.437, 124.317, -45.8869, 0.59", "141.441, 125.308, -45.5201, 0.29", "141.443, 125.837, -45.2885, 0.66", "141.457, 126.446, -44.9871, 1.47", "141.489, 127.396, -44.4865, 0.22", "141.523, 128.078, -44.1255, 0.15", "141.593, 128.808, -43.7449, 0.15", "141.656, 129.32, -43.4819, 0.44", "141.728, 129.795, -43.261, 0.44", "141.86, 130.518, -42.9469, 0.22", "141.919, 130.839, -42.8216, 0.15", "141.979, 131.513, -42.5641, 0.15", "141.983, 131.775, -42.472, 0.15", "141.934, 132.169, -42.3393, 0.44", "141.867, 132.473, -42.2334, 0.44", "141.656, 133.356, -41.9005, 0.15", "141.533, 133.981, -41.6483, 0.22", "141.463, 134.405, -41.4718, 0.29", "141.438, 135.101, -41.1998, 0.29", "141.497, 135.646, -41.0196, 0.74", "141.666, 136.299, -40.8493, 0.66", "141.891, 136.877, -40.7404, 1.55", "142.036, 137.19, -40.7049, 1.55", "142.548, 138.158, -40.6783, 0.15", "142.954, 138.845, -40.7042, 0.22", "143.356, 139.498, -40.7581, 0.22", "143.617, 139.907, -40.8095, 0.22", "143.988, 140.451, -40.8986, 0.37", "144.743, 141.497, -41.1002, 0.22", "145.407, 142.421, -41.2735, 0.15", "145.709, 142.854, -41.3356, 1.18", "146.061, 143.393, -41.3886, 2.21", "146.184, 143.595, -41.401, 2.21", "146.796, 144.767, -41.4136, 0.22", "147.158, 145.674, -41.378, 0.22", "147.457, 146.677, -41.3278, 0.22", "147.537, 147.016, -41.3095, 0.66", "147.583, 147.265, -41.3007, 1.25", "147.709, 148.106, -41.2997, 1.62", "147.819, 149.131, -41.3411, 0.22", "147.919, 150.17, -41.4622, 0.22", "147.95, 150.572, -41.5317, 0.37", "148.003, 151.171, -41.6551, 0.88", "148.04, 151.633, -41.7563, 0.88", "148.066, 152.297, -41.9209, 0.22", "148.041, 153.056, -42.1067, 0.15", "147.986, 153.655, -42.2268, 0.15", "147.933, 153.945, -42.323, 0.52", "147.793, 154.561, -42.5719, 0.88", "147.615, 155.268, -42.8889, 0.22", "147.49, 155.759, -43.1394, 0.22", "147.169, 156.947, -43.751, 0.15", "146.69, 158.978, -44.774, 0.22", "146.568, 159.613, -45.0859, 0.44", "146.484, 160.285, -45.3995, 0.22", "146.448, 161.004, -45.7037, 0.29", "146.455, 161.585, -45.9173, 0.22", "146.522, 162.586, -46.2007, 0.15", "146.586, 163.042, -46.2464, 0.15", "146.709, 163.85, -46.322, 0.15", "146.791, 164.283, -46.3554, 0.29", "146.891, 164.712, -46.3684, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-6.66301, 62.9003, 58.0708, 0.07", "-6.86591, 63.5102, 58.1364, 0.07", "-7.02977, 64.0789, 58.227, 0.07", "-7.26273, 65.1681, 58.4667, 0.07", "-7.41102, 66.0861, 58.6679, 0.29", "-7.49135, 66.8091, 58.8283, 0.07", "-7.55645, 67.9829, 59.0799, 0.07", "-7.5445, 68.5647, 59.2124, 0.52", "-7.45174, 70.0278, 59.5621, 1.03", "-7.3123, 71.614, 59.9789, 0.15", "-7.25984, 72.2582, 60.1528, 0.15", "-7.21683, 73.0632, 60.3622, 0.15", "-7.20164, 73.7973, 60.5232, 0.15", "-7.23306, 74.4561, 60.6731, 0.07", "-7.29492, 74.9709, 60.8034, 0.07", "-7.37819, 75.6327, 60.9863, 0.44", "-7.42193, 76.0117, 61.102, 0.74", "-7.44269, 76.4324, 61.247, 0.74", "-7.38773, 77.8054, 61.7587, 0.15", "-7.29764, 78.6373, 62.0776, 0.15", "-7.1474, 79.6564, 62.4644, 0.37", "-6.98368, 80.6072, 62.8247, 1.7", "-6.80456, 81.6564, 63.1997, 1.03", "-6.54792, 83.0678, 63.6827, 0.15", "-6.29342, 84.3003, 64.1054, 0.15", "-6.18812, 84.8048, 64.2732, 0.66", "-6.04655, 85.4431, 64.4917, 1.03", "-5.77362, 86.5158, 64.8364, 0.15", "-5.40577, 87.8018, 65.2369, 0.15", "-5.11005, 88.669, 65.5314, 0.15", "-4.8437, 89.3632, 65.7697, 0.29", "-4.55676, 90.0966, 66.0116, 0.29", "-4.32678, 90.788, 66.2173, 0.74", "-4.12141, 91.6117, 66.4556, 0.81", "-4.02983, 92.181, 66.6103, 0.81", "-3.91138, 93.7606, 67.014, 0.15", "-3.93331, 94.5684, 67.2537, 0.74", "-4.18293, 96.3237, 67.8334, 0.15", "-4.43429, 97.1756, 68.1632, 0.15", "-4.83354, 97.9227, 68.4943, 0.15", "-5.22893, 98.446, 68.7488, 0.29", "-6.04041, 99.2451, 69.2072, 0.15", "-6.32069, 99.4703, 69.3483, 0.52", "-7.29781, 100.101, 69.8352, 1.4", "-9.11929, 101.137, 70.7401, 0.15", "-9.61843, 101.373, 70.9874, 0.15", "-9.86505, 101.467, 71.1228, 0.15", "-10.9387, 101.768, 71.7741, 0.81", "-12.0992, 101.961, 72.5438, 0.15", "-12.5014, 101.972, 72.8346, 0.15", "-13.0849, 101.933, 73.264, 1.18", "-14.7481, 101.765, 74.4705, 0.07", "-15.8416, 101.625, 75.231, 0.07", "-16.3534, 101.557, 75.5616, 0.59", "-16.8879, 101.509, 75.8695, 1.77", "-18.6961, 101.39, 76.8291, 0.07", "-19.525, 101.348, 77.2466, 0.07", "-20.0726, 101.314, 77.4918, 0.37", "-20.6236, 101.287, 77.711, 0.52", "-21.8819, 101.207, 78.2118, 0.07", "-23.0801, 101.133, 78.6606, 0.07", "-23.5724, 101.089, 78.828, 0.07", "-23.9772, 101.042, 78.9647, 0.29", "-24.8983, 100.888, 79.2895, 0.66", "-25.9689, 100.62, 79.696, 0.07", "-26.7565, 100.375, 80.0004, 0.29", "-27.4606, 100.144, 80.2782, 0.88", "-28.9432, 99.6864, 80.9132, 0.15", "-29.6986, 99.4615, 81.2681, 0.52", "-31.2795, 98.9988, 82.0433, 0.07", "-31.7911, 98.8573, 82.2937, 0.59", "-32.4885, 98.6664, 82.6435, 1.47", "-34.1346, 98.2402, 83.4828, 0.07", "-34.7554, 98.0837, 83.8075, 0.07", "-35.6979, 97.8478, 84.3073, 0.07", "-35.988, 97.7761, 84.457, 0.37", "-36.6021, 97.6306, 84.7501, 0.81", "-37.7603, 97.3754, 85.2616, 0.07", "-38.6845, 97.1893, 85.6171, 0.07", "-39.1602, 97.1332, 85.7791, 0.44", "-39.6581, 97.1103, 85.9401, 0.88", "-41.039, 97.1359, 86.3396, 0.15", "-41.7809, 97.1957, 86.5241, 0.37", "-42.193, 97.2463, 86.6066, 0.37", "-43.8945, 97.447, 86.8782, 0.15", "-44.4529, 97.5057, 86.9595, 0.15", "-45.2967, 97.6008, 87.0672, 0.37", "-46.8175, 97.7574, 87.2246, 0.07", "-47.795, 97.8666, 87.3156, 0.29", "-48.6805, 97.9756, 87.4017, 0.07", "-49.5582, 98.0977, 87.4871, 0.07", "-51.4376, 98.3784, 87.6643, 0.07", "-53.931, 98.7681, 87.9017, 0.07", "-54.734, 98.9061, 87.9782, 0.07", "-55.8848, 99.1222, 88.1009, 0.07", "-56.5737, 99.2668, 88.1865, 0.59", "-57.612, 99.4801, 88.3194, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-6.66301, 62.9003, 58.0708, 0.37", "-6.50651, 61.9554, 59.0268, 0.37", "-6.33531, 61.3375, 59.6278, 0.37", "-6.17714, 60.9223, 60.0297, 0.59", "-5.84778, 60.1972, 60.6538, 0.22", "-5.59168, 59.649, 61.0708, 0.22", "-5.42254, 59.2287, 61.3463, 0.15", "-5.27105, 58.8138, 61.6254, 0.15", "-5.07578, 58.2251, 61.9665, 0.15", "-4.92774, 57.6473, 62.2585, 0.59", "-4.87068, 57.2021, 62.4415, 0.88", "-4.85071, 56.041, 62.8528, 0.15", "-4.92348, 55.198, 63.1655, 0.15", "-4.99969, 54.7277, 63.3298, 0.44", "-5.10332, 54.2795, 63.4775, 0.81", "-5.29044, 53.613, 63.6914, 0.07", "-5.53443, 52.798, 63.9267, 0.22", "-5.79616, 51.9429, 64.1416, 0.22", "-6.15794, 50.7403, 64.4025, 0.07", "-6.46678, 49.7498, 64.5956, 0.07", "-6.75258, 48.8087, 64.7678, 0.07", "-6.90023, 48.2772, 64.8496, 0.29", "-7.24596, 46.9836, 65.0324, 0.07", "-7.39971, 46.3763, 65.1024, 0.88", "-7.59074, 45.6111, 65.1953, 1.25", "-7.70357, 45.1101, 65.2541, 1.25", "-8.03866, 43.4825, 65.4368, 0.07", "-8.25491, 42.4051, 65.5488, 0.07", "-8.3712, 41.7977, 65.603, 0.07", "-8.43978, 41.4409, 65.6327, 0.52", "-8.62818, 40.4872, 65.7001, 0.66", "-8.73919, 39.9966, 65.7238, 0.22", "-8.89514, 39.3544, 65.7374, 0.52", "-9.0378, 38.8199, 65.7299, 0.29", "-9.33681, 37.824, 65.7095, 0.07", "-9.62493, 36.9691, 65.6859, 0.07", "-9.856, 36.3482, 65.673, 0.22", "-10.0293, 35.9211, 65.6662, 0.22", "-10.5244, 34.7398, 65.6495, 0.07", "-10.6601, 34.4325, 65.6457, 0.37", "-10.8235, 34.0772, 65.6436, 0.59", "-11.2193, 33.252, 65.6461, 0.07", "-11.5485, 32.5852, 65.6562, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-32.2825, -68.3975, 74.3318, 0.15", "-33.5195, -68.6446, 74.7778, 0.15", "-34.7369, -68.8733, 75.1883, 0.15", "-35.8578, -69.0762, 75.5345, 0.15", "-37.0107, -69.2813, 75.8767, 0.37", "-38.2864, -69.5009, 76.2418, 0.15", "-39.5717, -69.7117, 76.5996, 0.07", "-40.2198, -69.8172, 76.7832, 0.22", "-42.1766, -70.1395, 77.2454, 0.15", "-42.3154, -70.1585, 77.2737, 0.59", "-43.1977, -70.2648, 77.4515, 1.11", "-43.5966, -70.3136, 77.5321, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-32.2825, -68.3975, 74.3318, 0.59", "-32.4734, -69.0445, 74.6729, 0.59", "-32.6194, -69.5121, 74.9313, 0.96", "-32.801, -70.25, 75.3163, 1.47", "-32.8907, -70.7512, 75.5525, 1.47", "-33.0014, -71.6611, 75.9498, 0.22", "-33.0507, -71.9995, 76.1084, 0.15", "-33.1211, -72.3124, 76.2861, 0.15", "-33.258, -72.8368, 76.6216, 0.15", "-33.3834, -73.278, 76.9215, 0.37", "-33.5163, -73.7177, 77.2691, 0.37", "-33.7544, -74.4827, 77.9874, 0.22", "-33.883, -74.9145, 78.4472, 0.22", "-33.9555, -75.1688, 78.7315, 0.96", "-34.1224, -75.8006, 79.4746, 2.06", "-34.2597, -76.4072, 80.2168, 1.11", "-34.4134, -77.2167, 81.2239, 0.22", "-34.4945, -77.8473, 81.9985, 0.22", "-34.5364, -78.1272, 82.3399, 0.22", "-34.5793, -78.3485, 82.6109, 0.22", "-34.6273, -78.5361, 82.848, 0.22", "-34.7414, -78.8072, 83.1769, 0.22", "-34.9287, -79.0942, 83.5192, 0.22", "-35.2652, -79.526, 84.0315, 0.22", "-35.5609, -79.9111, 84.4575, 0.22", "-35.7495, -80.1759, 84.722, 0.66", "-36.1054, -80.7434, 85.2414, 1.11", "-36.5985, -81.6047, 85.9984, 0.29", "-37.0279, -82.3559, 86.65, 0.22", "-37.3874, -82.9825, 87.1968, 0.22", "-37.5668, -83.2668, 87.4426, 0.29", "-38.0309, -83.9715, 88.0416, 0.22", "-38.2431, -84.2891, 88.3101, 0.96", "-38.6128, -84.8263, 88.7622, 1.84", "-39.2447, -85.7025, 89.5131, 0.29", "-39.7684, -86.3712, 90.1415, 0.22", "-40.1127, -86.7992, 90.5711, 0.22", "-40.3252, -87.0694, 90.8467, 0.22", "-40.5091, -87.3459, 91.1109, 0.37", "-40.768, -87.8504, 91.5394, 0.52", "-41.0206, -88.4881, 91.9789, 0.29", "-41.2012, -89.074, 92.3353, 0.29", "-41.3041, -89.4269, 92.5202, 0.29", "-41.4935, -90.1313, 92.8599, 0.44", "-41.6831, -90.9694, 93.2373, 0.52", "-41.9128, -92.1579, 93.7299, 0.15", "-42.0151, -92.7584, 93.9667, 0.59", "-42.1907, -93.7332, 94.3767, 1.7", "-42.4316, -94.9098, 94.933, 0.15", "-42.5547, -95.4517, 95.2335, 0.44", "-42.6337, -95.8194, 95.4555, 0.44", "-42.7415, -96.3366, 95.8024, 0.07", "-42.8442, -96.7794, 96.1164, 0.07", "-42.9464, -97.1047, 96.3733, 0.07", "-43.1265, -97.5339, 96.7349, 0.29", "-43.4731, -98.2295, 97.3345, 0.52", "-43.7279, -98.7227, 97.7681, 0.22", "-43.946, -99.1352, 98.1375, 0.22", "-44.1889, -99.5861, 98.555, 0.37", "-44.4242, -100.01, 98.9835, 0.74", "-44.7866, -100.594, 99.6447, 1.33", "-45.1874, -101.14, 100.348, 0.22", "-45.4985, -101.516, 100.866, 0.15", "-45.7433, -101.792, 101.266, 0.29", "-46.0774, -102.165, 101.822, 0.15", "-46.3537, -102.45, 102.26, 0.59", "-46.6497, -102.725, 102.727, 0.74", "-47.1058, -103.086, 103.391, 0.07", "-47.5372, -103.408, 104.01, 0.15", "-47.8458, -103.633, 104.448, 0.15", "-48.1015, -103.818, 104.804, 0.15", "-48.4021, -104.026, 105.193, 0.15", "-48.8389, -104.316, 105.721, 0.29", "-49.2095, -104.538, 106.13, 0.74", "-49.7819, -104.864, 106.708, 1.03", "-50.36, -105.195, 107.26, 0.29", "-51.1671, -105.672, 108.042, 0.22", "-51.6731, -105.982, 108.515, 0.88", "-52.2419, -106.322, 109.05, 1.33", "-52.7453, -106.605, 109.514, 1.47", "-53.7067, -107.112, 110.396, 0.22", "-54.2093, -107.355, 110.852, 0.22", "-54.7885, -107.628, 111.393, 1.03", "-55.4085, -107.907, 111.969, 1.55", "-56.2985, -108.316, 112.801, 0.74", "-57.1536, -108.757, 113.653, 0.22", "-57.5868, -109.023, 114.099, 0.22", "-57.9818, -109.288, 114.503, 0.22", "-58.4311, -109.628, 114.982, 0.15", "-58.8357, -110.009, 115.434, 0.37", "-59.3157, -110.588, 116.027, 0.15", "-59.6271, -111.071, 116.448, 0.15", "-59.9907, -111.758, 117.01, 0.22", "-60.1451, -112.083, 117.26, 0.15", "-60.3602, -112.595, 117.646, 0.15", "-60.4696, -112.924, 117.887, 0.74", "-60.5676, -113.334, 118.177, 0.88", "-60.6745, -114.219, 118.803, 0.15", "-60.7054, -114.56, 119.047, 0.22", "-60.7924, -114.937, 119.375, 0.22", "-61.0162, -115.509, 119.971, 0.22", "-61.0944, -115.66, 120.151, 0.22", "-61.302, -115.984, 120.57, 0.88", "-61.7023, -116.46, 121.231, 1.84", "-62.3942, -117.107, 122.204, 0.15", "-62.8385, -117.475, 122.738, 0.15", "-63.1957, -117.74, 123.093, 0.29", "-63.711, -118.154, 123.615, 0.74", "-64.15, -118.548, 124.082, 1.11", "-64.5418, -118.958, 124.541, 0.52", "-65.0637, -119.555, 125.196, 0.22", "-65.8883, -120.431, 126.262, 0.29", "-66.5326, -121.086, 127.151, 0.15", "-66.879, -121.431, 127.669, 0.37", "-67.314, -121.845, 128.371, 1.18", "-67.8725, -122.385, 129.395, 0.44", "-68.332, -122.803, 130.353, 0.29", "-68.6391, -123.08, 131.064, 0.15", "-68.8956, -123.285, 131.625, 0.88", "-69.2712, -123.582, 132.457, 1.03", "-69.7693, -123.981, 133.651, 0.22", "-70.1806, -124.36, 134.842, 0.22", "-70.3594, -124.537, 135.43, 0.59", "-70.5632, -124.733, 136.121, 0.96", "-70.8469, -124.955, 137.081, 0.37", "-71.2223, -125.171, 138.359, 0.15", "-71.5291, -125.26, 139.376, 0.59", "-71.714, -125.28, 139.989, 1.77", "-72.1772, -125.275, 141.538, 0.22", "-72.4597, -125.257, 142.522, 0.22", "-72.6778, -125.235, 143.226, 0.37", "-72.9204, -125.221, 143.897, 0.37", "-73.1232, -125.23, 144.417, 0.37", "-73.3872, -125.258, 145.129, 0.81", "-73.5883, -125.325, 145.77, 0.81", "-73.8517, -125.571, 146.826, 0.29", "-73.9537, -125.791, 147.487, 0.29", "-73.9369, -126.005, 147.988, 0.29", "-73.8771, -126.122, 148.237, 0.29", "-73.5096, -126.562, 149.196, 0.29", "-73.3279, -126.745, 149.578, 0.44", "-72.9772, -127.089, 150.277, 0.44", "-72.54, -127.557, 151.271, 0.81", "-72.234, -127.935, 152.178, 0.81", "-72.0628, -128.22, 152.921, 0.81", "-72.0113, -128.371, 153.376, 0.22", "-71.9713, -128.698, 154.465, 0.22", "-72.0328, -129.044, 155.709, 0.22", "-72.1681, -129.354, 156.823, 0.81", "-72.3508, -129.659, 157.852, 0.52", "-72.7184, -130.16, 159.337, 0.22", "-72.9195, -130.395, 159.948, 0.22", "-73.1185, -130.59, 160.366, 0.52", "-73.5745, -130.956, 160.995, 0.15", "-73.8384, -131.133, 161.23, 0.59", "-74.6195, -131.607, 161.718, 0.15", "-75.247, -131.961, 161.947, 0.37", "-75.9772, -132.351, 162.135, 0.15", "-76.6585, -132.66, 162.25, 0.37", "-77.1194, -132.796, 162.266, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "130.529, 146.612, -28.2703, 0.96", "131.228, 147.279, -28.5254, 0.96", "131.707, 147.785, -28.7036, 1.25", "132.136, 148.29, -28.8665, 0.66", "132.396, 148.622, -28.967, 0.22", "132.707, 149.031, -29.0881, 0.15", "132.909, 149.288, -29.166, 0.37", "133.315, 149.837, -29.3253, 0.15", "133.61, 150.215, -29.4398, 0.37", "133.838, 150.478, -29.5265, 0.88", "134.114, 150.759, -29.6476, 0.88", "134.738, 151.312, -29.9969, 0.22", "135.168, 151.664, -30.2453, 0.22", "135.606, 151.971, -30.5072, 0.22", "135.909, 152.16, -30.6961, 0.22", "136.548, 152.527, -31.1256, 1.25", "137.201, 152.875, -31.6258, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "130.529, 146.612, -28.2703, 0.29", "130.94, 148.088, -27.7722, 0.29", "131.24, 148.819, -27.6361, 0.22", "131.524, 149.427, -27.5802, 0.66", "131.96, 150.33, -27.5473, 0.22", "132.401, 151.212, -27.5484, 0.15", "132.8, 152.038, -27.559, 0.15", "133.31, 153.09, -27.6426, 0.15", "133.842, 154.206, -27.789, 0.22", "134.324, 155.222, -27.9676, 0.29", "134.731, 156.068, -28.149, 0.22", "135.176, 156.925, -28.3799, 0.29", "135.881, 158.061, -28.7795, 0.22", "136.563, 159.03, -29.1798, 0.66", "136.981, 159.581, -29.4236, 1.11", "137.503, 160.256, -29.7328, 1.18", "138.221, 161.202, -30.1745, 0.37", "139.003, 162.245, -30.6573, 0.37", "139.621, 163.169, -31.0215, 0.22", "140.152, 164.18, -31.2858, 0.22", "140.468, 164.946, -31.4328, 0.22", "140.687, 165.591, -31.5181, 0.59", "140.829, 166.061, -31.548, 1.03", "141.132, 167.111, -31.5611, 1.18", "141.776, 169.08, -31.4997, 0.44", "142.081, 169.919, -31.4623, 0.88", "142.444, 170.86, -31.3895, 1.7", "142.886, 171.944, -31.2738, 2.29", "143.298, 172.914, -31.1526, 2.29", "143.627, 173.623, -31.0371, 1.99" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "143.627, 173.623, -31.0371, 0.22", "145.051, 176.039, -31.3706, 0.22", "145.719, 177.173, -31.5273, 0.22", "146.426, 178.373, -31.693, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "143.627, 173.623, -31.0371, 0.29", "144.845, 174.5, -31.4852, 0.29", "145.655, 175.082, -31.783, 0.29", "146.47, 175.668, -32.0829, 0.29", "147.159, 176.165, -32.3366, 0.52", "147.862, 176.67, -32.5952, 0.52", "149.024, 177.507, -33.0229, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_35", "dend_35", "dend_35", "dend_35", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_BTC_0aac470ea8_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_35
create dend_47
public dend_47
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_10
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_58(0), soma_0(0.45000018730548563)
    connect dend_35(0), soma_0(0.45000018730548563)
    connect dend_0(0), soma_0(0.45000018730548563)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_20(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.16881, -12.804, 0.0, 3.44428 ) }
    soma_0 { pt3dadd( 1.99522, -11.5105, 0.0, 5.75363 ) }
    soma_0 { pt3dadd( 1.82164, -10.2169, 0.0, 7.75663 ) }
    soma_0 { pt3dadd( 1.64805, -8.92341, 0.0, 8.89598 ) }
    soma_0 { pt3dadd( 1.47447, -7.62987, 0.0, 9.91596 ) }
    soma_0 { pt3dadd( 1.30088, -6.33633, 0.0, 10.9547 ) }
    soma_0 { pt3dadd( 1.1273, -5.04279, 0.0, 11.8384 ) }
    soma_0 { pt3dadd( 0.953711, -3.74926, 0.0, 12.6846 ) }
    soma_0 { pt3dadd( 0.780126, -2.45572, 0.0, 13.1367 ) }
    soma_0 { pt3dadd( 0.606541, -1.16218, 0.0, 13.4162 ) }
    soma_0 { pt3dadd( 0.432956, 0.13136, 0.0, 13.3909 ) }
    soma_0 { pt3dadd( 0.25937, 1.4249, 0.0, 13.2383 ) }
    soma_0 { pt3dadd( 0.085785, 2.71844, 0.0, 12.8868 ) }
    soma_0 { pt3dadd( -0.0878002, 4.01197, 0.0, 12.8103 ) }
    soma_0 { pt3dadd( -0.261385, 5.30551, 0.0, 12.9125 ) }
    soma_0 { pt3dadd( -0.434971, 6.59905, 0.0, 12.4763 ) }
    soma_0 { pt3dadd( -0.608556, 7.89259, 0.0, 11.6777 ) }
    soma_0 { pt3dadd( -0.782141, 9.18613, 0.0, 10.5994 ) }
    soma_0 { pt3dadd( -0.955726, 10.4797, 0.0, 9.19908 ) }
    soma_0 { pt3dadd( -1.12931, 11.7732, 0.0, 7.03753 ) }
    soma_0 { pt3dadd( -1.3029, 13.0667, 0.0, 4.1381 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 21/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.21969, -11.987, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.21969, -11.987, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.50817, -12.8953, -4.64369, 1.84 ) }
    dend_58 { pt3dadd( 4.12351, -14.8327, -4.75822, 2.14 ) }
    dend_58 { pt3dadd( 4.5174, -16.0729, -4.83153, 1.92 ) }
    dend_58 { pt3dadd( 5.01824, -17.6498, -4.92475, 2.06 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 27/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.219697, -12.424, -1.64, 2.43 ) }
    dend_35 { pt3dadd( 0.219697, -12.424, -1.64, 2.43 ) }
    dend_35 { pt3dadd( -0.632381, -14.352, -1.89574, 1.92 ) }
    dend_35 { pt3dadd( -1.34143, -15.9563, -2.10855, 2.14 ) }
    dend_35 { pt3dadd( -1.78039, -16.9495, -2.2403, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.5397, 11.896, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.5397, 11.896, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.8789, 13.1038, -0.0769799, 2.36 ) }
    dend_0 { pt3dadd( 2.33165, 14.5979, -0.161389, 2.36 ) }
    dend_0 { pt3dadd( 3.0838, 16.998, -0.282366, 2.29 ) }
    dend_0 { pt3dadd( 3.66273, 18.7771, -0.38327, 2.21 ) }
    dend_0 { pt3dadd( 4.25626, 20.537, -0.487788, 2.29 ) }
    dend_0 { pt3dadd( 4.77724, 22.053, -0.581068, 2.43 ) }
    dend_0 { pt3dadd( 5.37437, 23.7297, -0.691222, 2.36 ) }
    dend_0 { pt3dadd( 5.87598, 25.0408, -0.768345, 2.51 ) }
    dend_0 { pt3dadd( 6.41426, 26.3199, -0.844342, 3.17 ) }
    dend_0 { pt3dadd( 6.76384, 27.107, -0.878859, 3.17 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 44/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.3029, 13.0667, 0.0, 0.475068 ) }
    axon_0 { pt3dadd( -3.29794, 27.9334, 0.0, 0.475068 ) }
    axon_0 { pt3dadd( -5.29297, 42.8002, 0.0, 0.475068 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 47/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 5.01824, -17.6498, -4.92475, 0.88 ) }
    dend_62 { pt3dadd( 4.03247, -17.6488, -5.49615, 0.88 ) }
    dend_62 { pt3dadd( 3.07824, -17.7314, -6.03706, 0.81 ) }
    dend_62 { pt3dadd( 2.12928, -17.8922, -6.58999, 0.81 ) }
    dend_62 { pt3dadd( 1.03371, -18.1572, -7.25019, 0.96 ) }
    dend_62 { pt3dadd( -0.00458741, -18.482, -7.90576, 1.4 ) }
    dend_62 { pt3dadd( -1.00395, -18.8824, -8.59379, 1.77 ) }
    dend_62 { pt3dadd( -1.88595, -19.2957, -9.23946, 0.44 ) }
    dend_62 { pt3dadd( -2.64619, -19.7521, -9.82422, 0.44 ) }
    dend_62 { pt3dadd( -3.06766, -20.0902, -10.1467, 0.44 ) }
    dend_62 { pt3dadd( -3.39883, -20.4881, -10.4404, 0.66 ) }
    dend_62 { pt3dadd( -3.78593, -21.2517, -10.9467, 1.03 ) }
    dend_62 { pt3dadd( -11.5821, -22.8232, -17.6653, 1.03 ) }
    dend_62 { pt3dadd( -18.3105, -23.9229, -25.5371, 1.03 ) }
    dend_62 { pt3dadd( -23.2592, -23.6519, -34.6915, 1.03 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 62/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 5.01824, -17.6498, -4.92475, 1.11 ) }
    dend_59 { pt3dadd( 5.82008, -18.5841, -4.86127, 1.11 ) }
    dend_59 { pt3dadd( 6.53002, -19.4595, -4.74873, 1.25 ) }
    dend_59 { pt3dadd( 6.80473, -19.816, -4.68219, 1.7 ) }
    dend_59 { pt3dadd( 7.28627, -20.4704, -4.54683, 1.77 ) }
    dend_59 { pt3dadd( 8.10735, -21.5912, -4.31539, 1.33 ) }
    dend_59 { pt3dadd( 8.74147, -22.4649, -4.14478, 1.03 ) }
    dend_59 { pt3dadd( 9.21952, -23.1503, -3.97985, 1.03 ) }
    dend_59 { pt3dadd( 9.69522, -23.8616, -3.82879, 1.03 ) }
    dend_59 { pt3dadd( 10.0991, -24.4919, -3.73287, 1.33 ) }
    dend_59 { pt3dadd( 10.6852, -25.4632, -3.66111, 1.33 ) }
    dend_59 { pt3dadd( 11.221, -26.4148, -3.6882, 0.74 ) }
    dend_59 { pt3dadd( 11.7471, -27.423, -3.81408, 0.74 ) }
    dend_59 { pt3dadd( 12.293, -28.4562, -3.99149, 0.88 ) }
    dend_59 { pt3dadd( 12.7035, -29.2308, -4.14144, 1.33 ) }
    dend_59 { pt3dadd( 13.0281, -29.8185, -4.22846, 2.06 ) }
    dend_59 { pt3dadd( 13.7149, -31.0409, -4.35058, 0.96 ) }
    dend_59 { pt3dadd( 14.3021, -32.0174, -4.3878, 0.74 ) }
    dend_59 { pt3dadd( 14.7535, -32.7242, -4.37623, 1.18 ) }
    dend_59 { pt3dadd( 15.0682, -33.1947, -4.3238, 1.55 ) }
    dend_59 { pt3dadd( 15.8892, -34.399, -4.1517, 0.88 ) }
    dend_59 { pt3dadd( 16.3757, -35.1234, -4.07491, 0.81 ) }
    dend_59 { pt3dadd( 17.0303, -36.1311, -4.04785, 0.88 ) }
    dend_59 { pt3dadd( 17.3837, -36.7111, -4.0881, 1.4 ) }
    dend_59 { pt3dadd( 17.676, -37.2447, -4.18188, 1.4 ) }
    dend_59 { pt3dadd( 18.0929, -38.0888, -4.40241, 0.81 ) }
    dend_59 { pt3dadd( 18.4714, -38.9271, -4.69237, 0.88 ) }
    dend_59 { pt3dadd( 18.7707, -39.5968, -4.953, 0.52 ) }
    dend_59 { pt3dadd( 18.9478, -39.9801, -5.11422, 0.96 ) }
    dend_59 { pt3dadd( 19.2768, -40.612, -5.36192, 1.92 ) }
    dend_59 { pt3dadd( 19.7352, -41.4072, -5.62734, 0.74 ) }
    dend_59 { pt3dadd( 20.1988, -42.1498, -5.84127, 0.74 ) }
    dend_59 { pt3dadd( 20.6819, -42.8536, -6.01151, 0.96 ) }
    dend_59 { pt3dadd( 21.1713, -43.4938, -6.16535, 1.55 ) }
    dend_59 { pt3dadd( 22.0574, -44.5393, -6.44778, 0.81 ) }
    dend_59 { pt3dadd( 22.821, -45.3575, -6.68941, 0.81 ) }
    dend_59 { pt3dadd( 23.5563, -46.0926, -6.92271, 1.25 ) }
    dend_59 { pt3dadd( 24.2847, -46.7983, -7.15099, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_59 { pt3dadd( 25.3593, -47.8472, -7.44597, 0.81 ) }
    dend_59 { pt3dadd( 26.2764, -48.7869, -7.65493, 0.81 ) }
    dend_59 { pt3dadd( 26.7966, -49.329, -7.75795, 1.18 ) }
    dend_59 { pt3dadd( 27.3968, -49.9194, -7.85527, 1.55 ) }
    dend_59 { pt3dadd( 28.0388, -50.5476, -7.92919, 1.55 ) }
    dend_59 { pt3dadd( 28.8153, -51.3623, -7.98665, 0.59 ) }
    dend_59 { pt3dadd( 29.5617, -52.2259, -7.96134, 0.81 ) }
    dend_59 { pt3dadd( 30.0424, -52.8303, -7.88602, 1.33 ) }
    dend_59 { pt3dadd( 30.7601, -53.7754, -7.73283, 0.37 ) }
    dend_59 { pt3dadd( 31.1458, -54.3228, -7.61121, 0.22 ) }
    dend_59 { pt3dadd( 35.844, -60.2158, -8.18756, 0.22 ) }
    dend_59 { pt3dadd( 41.414, -65.1391, -9.92401, 0.22 ) }
    dend_59 { pt3dadd( 47.4441, -69.8331, -10.2395, 0.22 ) }
    dend_59 { pt3dadd( 53.0977, -74.8333, -9.14947, 0.22 ) }
    dend_59 { pt3dadd( 59.3387, -79.0093, -7.54123, 0.22 ) }
    dend_59 { pt3dadd( 64.9227, -84.1391, -6.82044, 0.22 ) }
    dend_59 { pt3dadd( 70.1846, -89.5884, -7.35674, 0.22 ) }
    dend_59 { pt3dadd( 75.2715, -95.0279, -8.8519, 0.22 ) }
    dend_59 { pt3dadd( 80.6618, -100.38, -9.13997, 0.22 ) }
    dend_59 { pt3dadd( 85.5931, -106.098, -9.71905, 0.22 ) }
    dend_59 { pt3dadd( 90.0235, -112.071, -11.0379, 0.22 ) }
    dend_59 { pt3dadd( 93.9465, -118.017, -13.5625, 0.22 ) }
    dend_59 { pt3dadd( 98.7685, -123.103, -16.5644, 0.22 ) }
    dend_59 { pt3dadd( 102.321, -128.5, -20.5729, 0.22 ) }
    dend_59 { pt3dadd( 106.471, -134.257, -23.2156, 0.22 ) }
    dend_59 { pt3dadd( 109.906, -140.752, -24.7598, 0.22 ) }
    dend_59 { pt3dadd( 114.202, -146.93, -25.132, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_35 (entry count 27/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.78039, -16.9495, -2.2403, 0.96 ) }
    dend_47 { pt3dadd( -2.88645, -17.5491, -2.53426, 0.96 ) }
    dend_47 { pt3dadd( -3.48989, -17.8967, -2.70215, 0.96 ) }
    dend_47 { pt3dadd( -4.10589, -18.2744, -2.88111, 1.25 ) }
    dend_47 { pt3dadd( -4.43037, -18.4889, -2.97916, 1.25 ) }
    dend_47 { pt3dadd( -5.0251, -18.9033, -3.17172, 0.96 ) }
    dend_47 { pt3dadd( -5.58609, -19.305, -3.36731, 0.96 ) }
    dend_47 { pt3dadd( -6.07887, -19.672, -3.55108, 1.47 ) }
    dend_47 { pt3dadd( -6.69795, -20.0952, -3.78983, 1.62 ) }
    dend_47 { pt3dadd( -7.46296, -20.5419, -4.07997, 0.96 ) }
    dend_47 { pt3dadd( -8.0883, -20.8559, -4.32051, 0.96 ) }
    dend_47 { pt3dadd( -8.97204, -21.2233, -4.65693, 1.11 ) }
    dend_47 { pt3dadd( -9.6069, -21.428, -4.89353, 1.4 ) }
    dend_47 { pt3dadd( -10.7177, -21.6953, -5.3036, 1.33 ) }
    dend_47 { pt3dadd( -11.6312, -21.8617, -5.65273, 0.96 ) }
    dend_47 { pt3dadd( -12.5641, -22.0109, -6.02091, 1.18 ) }
    dend_47 { pt3dadd( -13.032, -22.0838, -6.20886, 1.18 ) }
    dend_47 { pt3dadd( -14.2218, -22.2925, -6.70369, 0.88 ) }
    dend_47 { pt3dadd( -14.9005, -22.4593, -7.00075, 0.88 ) }
    dend_47 { pt3dadd( -15.3588, -22.6251, -7.22411, 1.03 ) }
    dend_47 { pt3dadd( -16.2021, -23.0489, -7.65099, 1.25 ) }
    dend_47 { pt3dadd( -16.7424, -23.3847, -7.92104, 0.88 ) }
    dend_47 { pt3dadd( -17.2642, -23.7675, -8.17716, 0.88 ) }
    dend_47 { pt3dadd( -17.7324, -24.1502, -8.4004, 1.11 ) }
    dend_47 { pt3dadd( -18.2607, -24.5712, -8.65499, 1.25 ) }
    dend_47 { pt3dadd( -18.9375, -25.092, -9.03143, 0.88 ) }
    dend_47 { pt3dadd( -19.433, -25.4907, -9.38927, 1.03 ) }
    dend_47 { pt3dadd( -19.7696, -25.7968, -9.71306, 1.4 ) }
    dend_47 { pt3dadd( -20.1555, -26.1929, -10.2095, 1.18 ) }
    dend_47 { pt3dadd( -20.5891, -26.6737, -10.9671, 1.25 ) }
    dend_47 { pt3dadd( -20.8058, -27.0774, -11.7901, 1.4 ) }
    dend_47 { pt3dadd( -20.123, -27.1931, -12.4548, 1.4 ) }
    dend_47 { pt3dadd( -19.3837, -27.1157, -12.6788, 1.47 ) }
    dend_47 { pt3dadd( -17.9156, -26.8553, -12.8942, 0.52 ) }
    dend_47 { pt3dadd( -17.1418, -26.692, -12.8873, 0.52 ) }
    dend_47 { pt3dadd( -16.3437, -26.5087, -12.7865, 0.59 ) }
    dend_47 { pt3dadd( -15.0255, -26.2138, -12.4651, 0.59 ) }
    dend_47 { pt3dadd( -14.2376, -26.051, -12.1922, 0.66 ) }
    dend_47 { pt3dadd( -13.4114, -25.9219, -11.8232, 0.74 ) }
    dend_47 { pt3dadd( -12.3199, -25.7952, -11.2707, 0.59 ) }
    dend_47 { pt3dadd( -11.5079, -25.7456, -10.8249, 0.88 ) }
    dend_47 { pt3dadd( -10.4275, -25.7329, -10.1793, 0.37 ) }
    dend_47 { pt3dadd( -9.86152, -25.7714, -9.8201, 0.37 ) }
    dend_47 { pt3dadd( -9.31908, -25.8612, -9.43337, 0.37 ) }
    dend_47 { pt3dadd( -14.4926, -30.3024, -12.9287, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 72/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.78039, -16.9495, -2.2403, 1.4 ) }
    dend_36 { pt3dadd( -1.65799, -18.3305, -2.01992, 1.4 ) }
    dend_36 { pt3dadd( -1.51838, -19.7511, -1.81677, 1.03 ) }
    dend_36 { pt3dadd( -1.37581, -21.1323, -1.62, 1.33 ) }
    dend_36 { pt3dadd( -1.21444, -22.7277, -1.38376, 1.25 ) }
    dend_36 { pt3dadd( -1.06093, -24.1774, -1.14841, 1.25 ) }
    dend_36 { pt3dadd( -0.9162, -25.5591, -0.90046, 1.11 ) }
    dend_36 { pt3dadd( -0.796463, -26.888, -0.675262, 1.84 ) }
    dend_36 { pt3dadd( -0.713239, -27.7468, -0.54337, 1.62 ) }
    dend_36 { pt3dadd( -0.540594, -29.3862, -0.268814, 1.18 ) }
    dend_36 { pt3dadd( -0.369401, -31.1244, 0.0456549, 1.11 ) }
    dend_36 { pt3dadd( -0.207634, -32.8729, 0.373517, 1.25 ) }
    dend_36 { pt3dadd( -0.111375, -34.029, 0.581013, 1.55 ) }
    dend_36 { pt3dadd( -0.0172052, -35.2866, 0.816211, 2.06 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 86/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.76384, 27.107, -0.878859, 2.88 ) }
    dend_10 { pt3dadd( 6.93883, 28.1849, -0.738726, 2.88 ) }
    dend_10 { pt3dadd( 7.15972, 29.5456, -0.56184, 2.58 ) }
    dend_10 { pt3dadd( 7.40936, 31.0833, -0.361933, 2.36 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 90/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.76384, 27.107, -0.878859, 1.62 ) }
    dend_1 { pt3dadd( 8.19253, 26.5997, -1.26096, 1.62 ) }
    dend_1 { pt3dadd( 9.85982, 25.8368, -1.63317, 0.96 ) }
    dend_1 { pt3dadd( 10.9605, 25.2517, -1.84358, 0.96 ) }
    dend_1 { pt3dadd( 12.1687, 24.5194, -2.05034, 1.11 ) }
    dend_1 { pt3dadd( 12.8146, 24.0927, -2.14907, 1.25 ) }
    dend_1 { pt3dadd( 14.0383, 23.202, -2.33188, 0.96 ) }
    dend_1 { pt3dadd( 15.4866, 21.9315, -2.50754, 0.81 ) }
    dend_1 { pt3dadd( 16.2888, 21.1843, -2.59338, 0.81 ) }
    dend_1 { pt3dadd( 16.9894, 20.5531, -2.6754, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( 17.6535, 19.9926, -2.796, 0.88 ) }
    dend_1 { pt3dadd( 18.7713, 19.1456, -3.0529, 0.74 ) }
    dend_1 { pt3dadd( 19.9763, 18.3576, -3.37274, 0.59 ) }
    dend_1 { pt3dadd( 21.044, 17.7477, -3.66247, 0.74 ) }
    dend_1 { pt3dadd( 21.7967, 17.347, -3.85512, 0.66 ) }
    dend_1 { pt3dadd( 22.5879, 16.9282, -4.01409, 0.66 ) }
    dend_1 { pt3dadd( 23.7194, 16.316, -4.18135, 0.96 ) }
    dend_1 { pt3dadd( 24.8845, 15.6899, -4.28618, 1.11 ) }
    dend_1 { pt3dadd( 26.3186, 14.8532, -4.35423, 0.81 ) }
    dend_1 { pt3dadd( 27.4639, 14.1072, -4.37915, 0.81 ) }
    dend_1 { pt3dadd( 28.5675, 13.3335, -4.40498, 0.52 ) }
    dend_1 { pt3dadd( 29.2842, 12.7873, -4.4561, 0.52 ) }
    dend_1 { pt3dadd( 29.822, 12.3332, -4.57274, 0.52 ) }
    dend_1 { pt3dadd( 30.5081, 11.6877, -4.89216, 0.74 ) }
    dend_1 { pt3dadd( 31.3006, 10.8813, -5.47787, 0.96 ) }
    dend_1 { pt3dadd( 31.8021, 10.3293, -5.94835, 1.03 ) }
    dend_1 { pt3dadd( 32.4322, 9.60912, -6.61984, 0.81 ) }
    dend_1 { pt3dadd( 33.2282, 8.73829, -7.42338, 0.52 ) }
    dend_1 { pt3dadd( 33.8971, 7.96711, -8.13406, 0.88 ) }
    dend_1 { pt3dadd( 34.2348, 7.5823, -8.49656, 1.11 ) }
    dend_1 { pt3dadd( 34.9473, 6.81518, -9.21848, 0.81 ) }
    dend_1 { pt3dadd( 35.6923, 6.11517, -9.82485, 0.22 ) }
    dend_1 { pt3dadd( 36.716, 5.33954, -10.3708, 0.15 ) }
    dend_1 { pt3dadd( 44.787, -0.929386, -12.5678, 0.15 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 24/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -5.29297, 42.8002, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -7.28801, 57.6669, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -9.28305, 72.5336, 0.0, 0.15 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -23.2592, -23.6519, -34.6915, 0.15 ) }
    dend_66 { pt3dadd( -29.3749, -24.7403, -39.5262, 0.15 ) }
    dend_66 { pt3dadd( -35.8739, -25.3902, -43.9242, 0.15 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 30/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -23.2592, -23.6519, -34.6915, 0.59 ) }
    dend_63 { pt3dadd( -28.5817, -24.8631, -44.0153, 0.15 ) }
    dend_63 { pt3dadd( -34.0264, -25.0751, -53.3456, 0.15 ) }
    dend_63 { pt3dadd( -41.5739, -24.0835, -60.9903, 0.15 ) }
    dend_63 { pt3dadd( -50.206, -24.2899, -67.4821, 0.15 ) }
    dend_63 { pt3dadd( -57.7045, -25.2354, -75.2049, 0.15 ) }
    dend_63 { pt3dadd( -64.9451, -28.1321, -82.6547, 0.15 ) }
    dend_63 { pt3dadd( -72.6911, -30.2167, -89.8845, 0.15 ) }
    dend_63 { pt3dadd( -80.0391, -33.0715, -97.2464, 0.15 ) }
    dend_63 { pt3dadd( -87.6524, -36.025, -104.291, 0.15 ) }
    dend_63 { pt3dadd( -96.5273, -37.373, -110.305, 0.15 ) }
    dend_63 { pt3dadd( -104.792, -38.5406, -117.167, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 42/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 114.202, -146.93, -25.132, 0.15 ) }
    dend_61 { pt3dadd( 120.873, -153.931, -27.3118, 0.15 ) }
    dend_61 { pt3dadd( 126.827, -161.716, -28.2492, 0.15 ) }
    dend_61 { pt3dadd( 132.546, -169.678, -27.6102, 0.15 ) }
    dend_61 { pt3dadd( 138.247, -177.581, -26.3545, 0.15 ) }
    dend_61 { pt3dadd( 144.314, -185.333, -26.3404, 0.15 ) }
    dend_61 { pt3dadd( 151.254, -192.381, -25.9666, 0.15 ) }
    dend_61 { pt3dadd( 159.764, -197.56, -24.8683, 0.15 ) }
    dend_61 { pt3dadd( 167.136, -204.175, -25.6424, 0.15 ) }
    dend_61 { pt3dadd( 174.17, -211.148, -25.4902, 0.15 ) }
    dend_61 { pt3dadd( 180.943, -218.209, -27.0335, 0.15 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 53/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 114.202, -146.93, -25.132, 0.59 ) }
    dend_60 { pt3dadd( 118.146, -152.651, -25.234, 0.15 ) }
    dend_60 { pt3dadd( 121.589, -158.488, -26.6672, 0.15 ) }
    dend_60 { pt3dadd( 123.99, -164.46, -29.1637, 0.15 ) }
    dend_60 { pt3dadd( 125.316, -170.923, -31.0454, 0.15 ) }
    dend_60 { pt3dadd( 127.744, -176.948, -33.3729, 0.15 ) }
    dend_60 { pt3dadd( 130.099, -183.14, -35.2599, 0.15 ) }
    dend_60 { pt3dadd( 133.758, -188.757, -37.0714, 0.15 ) }
    dend_60 { pt3dadd( 137.514, -194.174, -39.2951, 0.15 ) }
    dend_60 { pt3dadd( 140.781, -200.215, -40.0898, 0.15 ) }
    dend_60 { pt3dadd( 143.364, -206.487, -41.2864, 0.15 ) }
    dend_60 { pt3dadd( 146.553, -212.483, -42.581, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 65/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -14.4926, -30.3024, -12.9287, 0.15 ) }
    dend_53 { pt3dadd( -21.1497, -34.5756, -15.2263, 0.15 ) }
    dend_53 { pt3dadd( -27.1409, -39.7402, -17.3156, 0.15 ) }
    dend_53 { pt3dadd( -32.6783, -45.6671, -17.5873, 0.15 ) }
    dend_53 { pt3dadd( -37.8432, -51.7042, -19.2461, 0.15 ) }
    dend_53 { pt3dadd( -42.7823, -57.6011, -21.8916, 0.15 ) }
    dend_53 { pt3dadd( -46.5905, -64.544, -23.3013, 0.15 ) }
    dend_53 { pt3dadd( -50.4928, -71.3404, -25.1807, 0.15 ) }
    dend_53 { pt3dadd( -54.465, -78.3044, -25.7097, 0.15 ) }
    dend_53 { pt3dadd( -59.2155, -84.8235, -25.6053, 0.15 ) }
    dend_53 { pt3dadd( -64.022, -91.1837, -24.3261, 0.15 ) }
    dend_53 { pt3dadd( -67.8746, -98.1513, -23.3159, 0.15 ) }
    dend_53 { pt3dadd( -71.8127, -105.126, -23.9572, 0.15 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 78/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -14.4926, -30.3024, -12.9287, 0.59 ) }
    dend_48 { pt3dadd( -19.516, -36.3492, -20.0974, 0.15 ) }
    dend_48 { pt3dadd( -23.5249, -42.5199, -27.7482, 0.15 ) }
    dend_48 { pt3dadd( -28.5223, -48.1769, -35.2743, 0.15 ) }
    dend_48 { pt3dadd( -31.9704, -53.6, -43.7657, 0.15 ) }
    dend_48 { pt3dadd( -34.4634, -58.9245, -52.6372, 0.15 ) }
    dend_48 { pt3dadd( -37.5816, -65.0867, -60.6816, 0.15 ) }
    dend_48 { pt3dadd( -39.0892, -71.4877, -68.9521, 0.15 ) }
    dend_48 { pt3dadd( -40.354, -78.5446, -76.6523, 0.15 ) }
    dend_48 { pt3dadd( -40.3033, -84.5287, -85.3725, 0.15 ) }
    dend_48 { pt3dadd( -41.1793, -90.695, -93.9173, 0.15 ) }
    dend_48 { pt3dadd( -41.9528, -95.8624, -103.179, 0.15 ) }
    dend_48 { pt3dadd( -41.6523, -101.683, -112.014, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 91/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -0.0172052, -35.2866, 0.816211, 0.44 ) }
    dend_42 { pt3dadd( -0.852299, -36.5347, 1.51183, 0.44 ) }
    dend_42 { pt3dadd( -1.23992, -37.056, 1.85152, 0.44 ) }
    dend_42 { pt3dadd( -1.77336, -37.7553, 2.44213, 0.44 ) }
    dend_42 { pt3dadd( -2.20174, -38.3613, 3.03718, 0.66 ) }
    dend_42 { pt3dadd( -2.52383, -38.9225, 3.56156, 0.66 ) }
    dend_42 { pt3dadd( -2.69661, -39.3236, 3.89433, 0.44 ) }
    dend_42 { pt3dadd( -2.8659, -39.8627, 4.35261, 0.52 ) }
    dend_42 { pt3dadd( -2.96612, -40.649, 4.91371, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( -2.92456, -41.5131, 5.36607, 0.66 ) }
    dend_42 { pt3dadd( -2.79058, -42.5172, 5.79439, 0.88 ) }
    dend_42 { pt3dadd( -2.6279, -43.5492, 6.16417, 1.11 ) }
    dend_42 { pt3dadd( -2.4841, -44.5248, 6.45199, 0.74 ) }
    dend_42 { pt3dadd( -2.3976, -45.251, 6.58158, 0.29 ) }
    dend_42 { pt3dadd( -2.34677, -45.9957, 6.62116, 0.22 ) }
    dend_42 { pt3dadd( -2.33931, -46.4382, 6.60817, 0.22 ) }
    dend_42 { pt3dadd( -2.37647, -47.0202, 6.56868, 0.22 ) }
    dend_42 { pt3dadd( -2.43626, -47.5686, 6.51218, 0.22 ) }
    dend_42 { pt3dadd( -2.56687, -48.7469, 6.38053, 0.29 ) }
    dend_42 { pt3dadd( -2.63437, -49.6595, 6.2894, 0.52 ) }
    dend_42 { pt3dadd( -2.64482, -50.3047, 6.23548, 0.52 ) }
    dend_42 { pt3dadd( -2.58639, -51.1907, 6.18349, 0.44 ) }
    dend_42 { pt3dadd( -2.40244, -52.5032, 6.15224, 0.29 ) }
    dend_42 { pt3dadd( -2.28162, -53.144, 6.16203, 0.66 ) }
    dend_42 { pt3dadd( -2.18397, -53.5932, 6.21044, 1.77 ) }
    dend_42 { pt3dadd( -2.00208, -54.4065, 6.35595, 1.18 ) }
    dend_42 { pt3dadd( -1.81808, -55.4436, 6.6048, 0.52 ) }
    dend_42 { pt3dadd( -1.68939, -56.4092, 6.88271, 0.52 ) }
    dend_42 { pt3dadd( -1.62416, -57.0338, 7.08811, 0.81 ) }
    dend_42 { pt3dadd( -1.50535, -57.9677, 7.40862, 0.96 ) }
    dend_42 { pt3dadd( -1.3768, -58.7822, 7.71325, 0.52 ) }
    dend_42 { pt3dadd( -1.18507, -59.8839, 8.18413, 0.22 ) }
    dend_42 { pt3dadd( -1.08414, -60.4002, 8.43513, 0.29 ) }
    dend_42 { pt3dadd( -0.934753, -61.0766, 8.80684, 0.29 ) }
    dend_42 { pt3dadd( -0.727119, -62.0397, 9.35071, 0.22 ) }
    dend_42 { pt3dadd( -0.589894, -62.6701, 9.72124, 0.37 ) }
    dend_42 { pt3dadd( -0.458296, -63.3209, 10.1105, 0.74 ) }
    dend_42 { pt3dadd( -0.365219, -63.9458, 10.4782, 1.03 ) }
    dend_42 { pt3dadd( -0.334914, -64.6531, 10.8569, 1.25 ) }
    dend_42 { pt3dadd( -0.416069, -66.0383, 11.5279, 0.37 ) }
    dend_42 { pt3dadd( -0.511739, -66.8445, 11.9016, 1.18 ) }
    dend_42 { pt3dadd( -0.599569, -67.5892, 12.2216, 2.65 ) }
    dend_42 { pt3dadd( -0.702645, -68.8046, 12.7014, 2.21 ) }
    dend_42 { pt3dadd( -0.7495, -69.9818, 13.1456, 0.96 ) }
    dend_42 { pt3dadd( -0.734687, -70.9538, 13.498, 0.29 ) }
    dend_42 { pt3dadd( -0.694043, -71.6426, 13.7531, 0.29 ) }
    dend_42 { pt3dadd( -0.658418, -72.2853, 13.9887, 0.66 ) }
    dend_42 { pt3dadd( -0.633371, -73.0534, 14.3046, 0.44 ) }
    dend_42 { pt3dadd( -0.619843, -73.7364, 14.608, 0.22 ) }
    dend_42 { pt3dadd( -0.61222, -74.0791, 14.7717, 0.22 ) }
    dend_42 { pt3dadd( -0.61337, -74.4962, 14.9569, 0.22 ) }
    dend_42 { pt3dadd( -0.661677, -75.3467, 15.2886, 0.29 ) }
    dend_42 { pt3dadd( -0.706929, -75.9894, 15.5171, 0.29 ) }
    dend_42 { pt3dadd( -0.722252, -76.4306, 15.6579, 0.22 ) }
    dend_42 { pt3dadd( -0.723756, -76.9394, 15.7939, 0.22 ) }
    dend_42 { pt3dadd( -0.690524, -77.3859, 15.9074, 0.81 ) }
    dend_42 { pt3dadd( -0.61758, -77.8075, 16.0082, 1.55 ) }
    dend_42 { pt3dadd( -0.382569, -78.7181, 16.2381, 1.84 ) }
    dend_42 { pt3dadd( 0.0331472, -80.0819, 16.5853, 0.15 ) }
    dend_42 { pt3dadd( 0.155948, -80.5107, 16.7042, 0.15 ) }
    dend_42 { pt3dadd( 0.256742, -80.8687, 16.8072, 0.15 ) }
    dend_42 { pt3dadd( 0.365235, -81.302, 16.932, 0.15 ) }
    dend_42 { pt3dadd( 0.509578, -81.9441, 17.1122, 0.88 ) }
    dend_42 { pt3dadd( 0.623828, -82.4778, 17.2544, 1.92 ) }
    dend_42 { pt3dadd( 0.874089, -83.537, 17.5024, 1.99 ) }
    dend_42 { pt3dadd( 0.945548, -83.808, 17.5606, 1.99 ) }
    dend_42 { pt3dadd( 1.25622, -85.0604, 17.7892, 0.15 ) }
    dend_42 { pt3dadd( 1.33395, -85.4072, 17.8382, 0.15 ) }
    dend_42 { pt3dadd( 1.40455, -85.7645, 17.8697, 0.37 ) }
    dend_42 { pt3dadd( 1.46021, -86.1279, 17.8869, 0.37 ) }
    dend_42 { pt3dadd( 1.57158, -86.9899, 17.9201, 0.15 ) }
    dend_42 { pt3dadd( 1.61939, -87.5253, 17.9497, 0.15 ) }
    dend_42 { pt3dadd( 1.67182, -88.1556, 17.9982, 0.22 ) }
    dend_42 { pt3dadd( 1.69085, -88.5232, 18.0401, 0.22 ) }
    dend_42 { pt3dadd( 1.68644, -89.1876, 18.1306, 0.15 ) }
    dend_42 { pt3dadd( 1.6582, -89.6958, 18.2076, 0.15 ) }
    dend_42 { pt3dadd( 1.62593, -90.0979, 18.2752, 0.59 ) }
    dend_42 { pt3dadd( 1.61269, -90.5247, 18.3578, 1.03 ) }
    dend_42 { pt3dadd( 1.63691, -91.1844, 18.4806, 0.22 ) }
    dend_42 { pt3dadd( 1.69992, -91.8783, 18.617, 0.07 ) }
    dend_42 { pt3dadd( 1.75954, -92.3231, 18.7157, 0.07 ) }
    dend_42 { pt3dadd( 1.80837, -92.6032, 18.7882, 0.66 ) }
    dend_42 { pt3dadd( 1.96536, -93.3327, 19.0258, 0.96 ) }
    dend_42 { pt3dadd( 2.31627, -94.648, 19.5146, 0.22 ) }
    dend_42 { pt3dadd( 2.55504, -95.3603, 19.8201, 0.22 ) }
    dend_42 { pt3dadd( 2.73761, -95.82, 20.0583, 0.44 ) }
    dend_42 { pt3dadd( 2.9592, -96.3385, 20.3542, 1.25 ) }
    dend_42 { pt3dadd( 3.17268, -96.79, 20.6239, 1.92 ) }
    dend_42 { pt3dadd( 3.4955, -97.3569, 20.9907, 1.11 ) }
    dend_42 { pt3dadd( 3.85218, -97.8957, 21.3775, 0.22 ) }
    dend_42 { pt3dadd( 4.13716, -98.3186, 21.6667, 0.22 ) }
    dend_42 { pt3dadd( 4.44859, -98.8185, 21.9767, 0.52 ) }
    dend_42 { pt3dadd( 4.80629, -99.5137, 22.3633, 0.22 ) }
    dend_42 { pt3dadd( 5.10985, -100.269, 22.7706, 0.22 ) }
    dend_42 { pt3dadd( 5.30218, -100.88, 23.1032, 0.22 ) }
    dend_42 { pt3dadd( 5.37768, -101.192, 23.2698, 0.81 ) }
    dend_42 { pt3dadd( 5.52293, -101.932, 23.6743, 1.77 ) }
    dend_42 { pt3dadd( 5.74304, -103.338, 24.4809, 0.37 ) }
    dend_42 { pt3dadd( 5.84876, -104.075, 24.9136, 0.15 ) }
    dend_42 { pt3dadd( 5.89594, -104.413, 25.1049, 0.15 ) }
    dend_42 { pt3dadd( 5.96246, -104.835, 25.3334, 0.37 ) }
    dend_42 { pt3dadd( 6.05332, -105.349, 25.6127, 1.18 ) }
    dend_42 { pt3dadd( 6.17711, -105.956, 25.9389, 1.55 ) }
    dend_42 { pt3dadd( 6.38681, -106.888, 26.3961, 0.81 ) }
    dend_42 { pt3dadd( 6.51918, -107.543, 26.6723, 0.15 ) }
    dend_42 { pt3dadd( 6.58591, -107.965, 26.8388, 0.22 ) }
    dend_42 { pt3dadd( 6.67835, -108.602, 27.0761, 0.15 ) }
    dend_42 { pt3dadd( 6.7503, -109.188, 27.2817, 0.96 ) }
    dend_42 { pt3dadd( 6.83162, -109.837, 27.5072, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_42 { pt3dadd( 6.96922, -110.837, 27.8447, 0.22 ) }
    dend_42 { pt3dadd( 7.05487, -111.307, 28.0029, 0.22 ) }
    dend_42 { pt3dadd( 7.19015, -111.897, 28.2067, 0.37 ) }
    dend_42 { pt3dadd( 7.23596, -112.061, 28.2616, 0.37 ) }
    dend_42 { pt3dadd( 7.42472, -112.655, 28.4641, 0.22 ) }
    dend_42 { pt3dadd( 7.52588, -112.929, 28.5679, 0.22 ) }
    dend_42 { pt3dadd( 7.74957, -113.398, 28.7399, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 7/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -0.0172052, -35.2866, 0.816211, 1.84 ) }
    dend_37 { pt3dadd( -0.232317, -35.9905, 0.573517, 1.84 ) }
    dend_37 { pt3dadd( -0.441758, -36.8353, 0.29853, 1.55 ) }
    dend_37 { pt3dadd( -0.621237, -37.7473, 0.0219027, 1.55 ) }
    dend_37 { pt3dadd( -0.789065, -38.7007, -0.235745, 1.55 ) }
    dend_37 { pt3dadd( -0.946306, -39.6471, -0.453479, 1.47 ) }
    dend_37 { pt3dadd( -1.08276, -40.4761, -0.622009, 0.96 ) }
    dend_37 { pt3dadd( -1.18451, -41.137, -0.724979, 1.55 ) }
    dend_37 { pt3dadd( -1.36381, -42.3224, -0.837134, 1.25 ) }
    dend_37 { pt3dadd( -1.55114, -43.5467, -0.9103, 1.47 ) }
    dend_37 { pt3dadd( -1.75187, -44.8085, -0.948492, 1.03 ) }
    dend_37 { pt3dadd( -1.90638, -45.6608, -0.954208, 1.18 ) }
    dend_37 { pt3dadd( -2.14983, -46.8628, -0.92963, 1.99 ) }
    dend_37 { pt3dadd( -2.3915, -47.8824, -0.880481, 1.92 ) }
    // Section: dend_20, id: dend_20, parent: dend_10 (entry count 21/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 7.40936, 31.0833, -0.361933, 2.14 ) }
    dend_20 { pt3dadd( 8.43288, 32.2476, -0.44138, 2.14 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 7.40936, 31.0833, -0.361933, 1.47 ) }
    dend_11 { pt3dadd( 7.27319, 31.9956, 0.56977, 1.47 ) }
    dend_11 { pt3dadd( 7.12948, 32.5433, 1.15048, 1.18 ) }
    dend_11 { pt3dadd( 6.91277, 33.0456, 1.72963, 1.18 ) }
    dend_11 { pt3dadd( 6.58323, 33.5614, 2.39995, 1.47 ) }
    dend_11 { pt3dadd( 6.22621, 33.9361, 2.96753, 1.47 ) }
    dend_11 { pt3dadd( 6.0029, 34.0758, 3.24373, 1.47 ) }
    dend_11 { pt3dadd( 5.39254, 34.1601, 3.73388, 1.47 ) }
    dend_11 { pt3dadd( 4.53836, 34.0294, 4.18914, 1.03 ) }
    dend_11 { pt3dadd( 4.01262, 33.8527, 4.3842, 1.62 ) }
    dend_11 { pt3dadd( 3.52475, 33.6258, 4.52096, 1.77 ) }
    dend_11 { pt3dadd( 2.89892, 33.2562, 4.67039, 1.77 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 44.787, -0.929386, -12.5678, 0.15 ) }
    dend_7 { pt3dadd( 50.4069, -5.0695, -14.3068, 0.15 ) }
    dend_7 { pt3dadd( 56.3685, -8.75137, -16.0506, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 44.787, -0.929386, -12.5678, 0.59 ) }
    dend_2 { pt3dadd( 52.1646, -6.47081, -15.6246, 0.15 ) }
    dend_2 { pt3dadd( 58.3892, -13.0754, -18.8904, 0.15 ) }
    dend_2 { pt3dadd( 62.9515, -20.5606, -22.7293, 0.15 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 42/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -35.8739, -25.3902, -43.9242, 0.15 ) }
    dend_68 { pt3dadd( -46.3564, -26.1338, -44.6757, 0.15 ) }
    dend_68 { pt3dadd( -56.4517, -24.6218, -47.0604, 0.15 ) }
    dend_68 { pt3dadd( -65.924, -21.0156, -49.3624, 0.15 ) }
    dend_68 { pt3dadd( -76.0092, -18.8448, -51.0103, 0.15 ) }
    dend_68 { pt3dadd( -86.2627, -17.7573, -52.9519, 0.15 ) }
    dend_68 { pt3dadd( -96.3298, -16.6281, -55.7164, 0.15 ) }
    dend_68 { pt3dadd( -105.983, -14.0778, -58.8139, 0.15 ) }
    dend_68 { pt3dadd( -115.711, -11.0145, -60.9231, 0.15 ) }
    dend_68 { pt3dadd( -124.826, -8.10693, -65.1489, 0.15 ) }
    dend_68 { pt3dadd( -134.595, -6.78794, -68.7808, 0.15 ) }
    dend_68 { pt3dadd( -144.982, -5.76372, -69.7645, 0.15 ) }
    dend_68 { pt3dadd( -155.356, -5.09998, -71.2611, 0.15 ) }
    dend_68 { pt3dadd( -165.566, -3.02595, -71.8611, 0.15 ) }
    dend_68 { pt3dadd( -176.007, -2.18645, -71.6024, 0.15 ) }
    dend_68 { pt3dadd( -186.305, -2.36917, -69.5569, 0.15 ) }
    dend_68 { pt3dadd( -195.963, -1.57362, -65.6452, 0.15 ) }
    dend_68 { pt3dadd( -206.013, -0.749569, -62.878, 0.15 ) }
    dend_68 { pt3dadd( -215.553, -1.10821, -58.5176, 0.15 ) }
    dend_68 { pt3dadd( -225.074, -1.2362, -54.1245, 0.15 ) }
    dend_68 { pt3dadd( -235.19, -0.40691, -51.6043, 0.15 ) }
    dend_68 { pt3dadd( -245.118, 1.29449, -48.9449, 0.15 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 64/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -35.8739, -25.3902, -43.9242, 0.59 ) }
    dend_67 { pt3dadd( -41.9114, -30.1426, -53.8453, 0.15 ) }
    dend_67 { pt3dadd( -49.3419, -34.0379, -63.2252, 0.15 ) }
    dend_67 { pt3dadd( -55.6017, -38.7759, -73.0175, 0.15 ) }
    dend_67 { pt3dadd( -61.4783, -43.3739, -83.1117, 0.15 ) }
    dend_67 { pt3dadd( -67.0021, -46.8849, -93.8588, 0.15 ) }
    dend_67 { pt3dadd( -72.7682, -51.5546, -103.98, 0.15 ) }
    dend_67 { pt3dadd( -77.4033, -55.7829, -114.856, 0.15 ) }
    dend_67 { pt3dadd( -83.0611, -59.8355, -125.322, 0.15 ) }
    dend_67 { pt3dadd( -86.0554, -65.9682, -135.749, 0.15 ) }
    dend_67 { pt3dadd( -87.46, -72.2606, -146.384, 0.15 ) }
    dend_67 { pt3dadd( -88.6409, -78.7419, -156.918, 0.15 ) }
    dend_67 { pt3dadd( -91.241, -85.7878, -166.795, 0.15 ) }
    dend_67 { pt3dadd( -91.5854, -93.5441, -176.382, 0.15 ) }
    dend_67 { pt3dadd( -92.8774, -102.893, -184.172, 0.15 ) }
    dend_67 { pt3dadd( -96.099, -112.197, -191.494, 0.15 ) }
    dend_67 { pt3dadd( -99.4445, -120.911, -199.523, 0.15 ) }
    dend_67 { pt3dadd( -101.798, -128.142, -209.311, 0.15 ) }
    dend_67 { pt3dadd( -104.165, -135.377, -219.091, 0.15 ) }
    dend_67 { pt3dadd( -103.677, -144.315, -227.442, 0.15 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 84/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -104.792, -38.5406, -117.167, 0.15 ) }
    dend_65 { pt3dadd( -113.515, -40.487, -124.781, 0.15 ) }
    dend_65 { pt3dadd( -123.0, -42.4046, -131.431, 0.15 ) }
    dend_65 { pt3dadd( -133.309, -43.7826, -136.882, 0.15 ) }
    dend_65 { pt3dadd( -142.505, -43.6561, -144.17, 0.15 ) }
    dend_65 { pt3dadd( -152.008, -42.2094, -150.85, 0.15 ) }
    dend_65 { pt3dadd( -162.445, -43.0864, -156.152, 0.15 ) }
    dend_65 { pt3dadd( -173.036, -44.7825, -160.932, 0.15 ) }
    dend_65 { pt3dadd( -182.727, -47.9118, -166.759, 0.15 ) }
    dend_65 { pt3dadd( -191.916, -53.0328, -171.853, 0.15 ) }
    dend_65 { pt3dadd( -200.882, -58.4379, -177.024, 0.15 ) }
    dend_65 { pt3dadd( -208.871, -65.9574, -180.732, 0.15 ) }
    dend_65 { pt3dadd( -216.349, -73.3532, -185.566, 0.15 ) }
    dend_65 { pt3dadd( -223.509, -80.8474, -190.694, 0.15 ) }
    dend_65 { pt3dadd( -230.223, -89.512, -194.162, 0.15 ) }
    dend_65 { pt3dadd( -236.017, -99.2002, -195.895, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_65 { pt3dadd( -242.368, -108.379, -198.498, 0.15 ) }
    dend_65 { pt3dadd( -246.707, -118.691, -200.369, 0.15 ) }
    dend_65 { pt3dadd( -250.034, -128.778, -204.3, 0.15 ) }
    dend_65 { pt3dadd( -251.265, -139.66, -206.742, 0.15 ) }
    dend_65 { pt3dadd( -254.781, -150.201, -208.822, 0.15 ) }
    dend_65 { pt3dadd( -258.899, -160.752, -209.166, 0.15 ) }
    dend_65 { pt3dadd( -262.306, -171.342, -211.142, 0.15 ) }
    dend_65 { pt3dadd( -267.496, -181.221, -213.43, 0.15 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 8/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -104.792, -38.5406, -117.167, 0.59 ) }
    dend_64 { pt3dadd( -112.164, -39.5223, -128.53, 0.15 ) }
    dend_64 { pt3dadd( -118.997, -40.9753, -140.175, 0.15 ) }
    dend_64 { pt3dadd( -126.993, -43.3572, -150.882, 0.15 ) }
    dend_64 { pt3dadd( -134.036, -47.5394, -161.664, 0.15 ) }
    dend_64 { pt3dadd( -140.244, -50.5583, -173.341, 0.15 ) }
    dend_64 { pt3dadd( -144.147, -55.0511, -185.492, 0.15 ) }
    dend_64 { pt3dadd( -149.507, -57.1945, -197.779, 0.15 ) }
    dend_64 { pt3dadd( -155.625, -58.8807, -209.784, 0.15 ) }
    dend_64 { pt3dadd( -161.978, -61.2035, -221.552, 0.15 ) }
    dend_64 { pt3dadd( -166.296, -65.2419, -233.737, 0.15 ) }
    dend_64 { pt3dadd( -171.097, -71.6372, -244.565, 0.15 ) }
    dend_64 { pt3dadd( -175.17, -76.6664, -256.429, 0.15 ) }
    dend_64 { pt3dadd( -178.207, -81.095, -268.85, 0.15 ) }
    dend_64 { pt3dadd( -181.309, -85.3684, -281.314, 0.15 ) }
    dend_64 { pt3dadd( -183.187, -88.78, -294.298, 0.15 ) }
    dend_64 { pt3dadd( -186.968, -91.0134, -307.142, 0.15 ) }
    dend_64 { pt3dadd( -192.192, -92.3792, -319.602, 0.15 ) }
    dend_64 { pt3dadd( -195.26, -95.6735, -332.392, 0.15 ) }
    dend_64 { pt3dadd( -199.849, -100.2, -344.288, 0.15 ) }
    dend_64 { pt3dadd( -206.134, -105.013, -355.252, 0.15 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 29/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -71.8127, -105.126, -23.9572, 0.15 ) }
    dend_57 { pt3dadd( -75.2716, -109.835, -24.6158, 0.15 ) }
    dend_57 { pt3dadd( -78.2059, -114.898, -24.6916, 0.15 ) }
    dend_57 { pt3dadd( -80.6271, -120.193, -25.0005, 0.15 ) }
    dend_57 { pt3dadd( -83.4658, -125.271, -24.3169, 0.15 ) }
    dend_57 { pt3dadd( -86.1536, -130.391, -23.4013, 0.15 ) }
    dend_57 { pt3dadd( -87.7734, -135.907, -22.5007, 0.15 ) }
    dend_57 { pt3dadd( -89.1534, -141.531, -22.8201, 0.15 ) }
    dend_57 { pt3dadd( -90.6791, -146.951, -24.2574, 0.15 ) }
    dend_57 { pt3dadd( -92.3855, -151.982, -26.6875, 0.15 ) }
    dend_57 { pt3dadd( -93.4279, -156.559, -30.2237, 0.15 ) }
    dend_57 { pt3dadd( -94.659, -160.595, -34.3743, 0.15 ) }
    dend_57 { pt3dadd( -96.0459, -164.532, -38.5815, 0.15 ) }
    dend_57 { pt3dadd( -98.0253, -167.95, -43.047, 0.15 ) }
    dend_57 { pt3dadd( -99.4629, -170.376, -48.3629, 0.15 ) }
    dend_57 { pt3dadd( -100.837, -172.751, -53.7217, 0.15 ) }
    dend_57 { pt3dadd( -101.1, -175.658, -58.9557, 0.15 ) }
    dend_57 { pt3dadd( -100.755, -179.084, -63.8245, 0.15 ) }
    dend_57 { pt3dadd( -100.366, -182.426, -68.7536, 0.15 ) }
    dend_57 { pt3dadd( -100.913, -185.591, -73.7949, 0.15 ) }
    dend_57 { pt3dadd( -101.721, -188.285, -79.1, 0.15 ) }
    dend_57 { pt3dadd( -103.513, -190.695, -84.3157, 0.15 ) }
    dend_57 { pt3dadd( -105.485, -192.998, -89.5208, 0.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -71.8127, -105.126, -23.9572, 0.59 ) }
    dend_54 { pt3dadd( -76.0892, -110.733, -24.7309, 0.15 ) }
    dend_54 { pt3dadd( -80.0723, -116.469, -25.9357, 0.15 ) }
    dend_54 { pt3dadd( -85.3161, -121.315, -26.3157, 0.15 ) }
    dend_54 { pt3dadd( -90.4154, -126.307, -26.4991, 0.15 ) }
    dend_54 { pt3dadd( -96.0016, -130.805, -26.6638, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -41.6523, -101.683, -112.014, 0.15 ) }
    dend_50 { pt3dadd( -42.6788, -106.924, -118.778, 0.15 ) }
    dend_50 { pt3dadd( -44.618, -112.955, -124.576, 0.15 ) }
    dend_50 { pt3dadd( -46.1955, -118.184, -131.256, 0.15 ) }
    dend_50 { pt3dadd( -48.1765, -124.707, -136.431, 0.15 ) }
    dend_50 { pt3dadd( -50.2819, -132.025, -140.255, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 64/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -41.6523, -101.683, -112.014, 0.59 ) }
    dend_49 { pt3dadd( -45.5143, -107.009, -120.532, 0.15 ) }
    dend_49 { pt3dadd( -49.204, -112.464, -129.033, 0.15 ) }
    dend_49 { pt3dadd( -51.7621, -119.981, -136.077, 0.15 ) }
    dend_49 { pt3dadd( -53.1954, -128.726, -141.743, 0.15 ) }
    dend_49 { pt3dadd( -52.4575, -137.833, -146.839, 0.15 ) }
    dend_49 { pt3dadd( -50.7298, -147.027, -151.491, 0.15 ) }
    dend_49 { pt3dadd( -47.7042, -155.83, -156.268, 0.15 ) }
    dend_49 { pt3dadd( -45.8421, -165.595, -159.4, 0.15 ) }
    dend_49 { pt3dadd( -42.5127, -174.508, -163.737, 0.15 ) }
    dend_49 { pt3dadd( -40.9933, -183.419, -169.01, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 75/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 7.74957, -113.398, 28.7399, 0.22 ) }
    dend_46 { pt3dadd( 7.3994, -114.001, 28.7289, 0.22 ) }
    dend_46 { pt3dadd( 6.93108, -114.807, 28.7141, 0.22 ) }
    dend_46 { pt3dadd( 6.52438, -115.507, 28.7013, 0.22 ) }
    dend_46 { pt3dadd( 5.79891, -116.756, 28.6785, 0.22 ) }
    dend_46 { pt3dadd( 5.47154, -117.32, 28.6682, 0.15 ) }
    dend_46 { pt3dadd( 5.14506, -117.882, 28.6579, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 82/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 7.74957, -113.398, 28.7399, 1.18 ) }
    dend_43 { pt3dadd( 7.91069, -114.081, 29.1015, 1.18 ) }
    dend_43 { pt3dadd( 8.08526, -114.87, 29.4857, 0.29 ) }
    dend_43 { pt3dadd( 8.22954, -115.596, 29.8313, 0.15 ) }
    dend_43 { pt3dadd( 8.30238, -116.01, 30.0224, 0.15 ) }
    dend_43 { pt3dadd( 8.36551, -116.417, 30.2037, 0.29 ) }
    dend_43 { pt3dadd( 8.43111, -116.997, 30.4587, 0.66 ) }
    dend_43 { pt3dadd( 8.46406, -117.597, 30.7165, 1.4 ) }
    dend_43 { pt3dadd( 8.42865, -118.486, 31.071, 0.22 ) }
    dend_43 { pt3dadd( 8.36499, -119.103, 31.3025, 0.22 ) }
    dend_43 { pt3dadd( 8.32749, -119.373, 31.3982, 0.22 ) }
    dend_43 { pt3dadd( 8.24033, -119.949, 31.5807, 0.22 ) }
    dend_43 { pt3dadd( 8.15794, -120.445, 31.723, 0.66 ) }
    dend_43 { pt3dadd( 8.03864, -121.065, 31.8816, 0.15 ) }
    dend_43 { pt3dadd( 7.91032, -121.59, 32.0036, 0.15 ) }
    dend_43 { pt3dadd( 7.73193, -122.23, 32.148, 0.52 ) }
    dend_43 { pt3dadd( 7.50477, -123.021, 32.3333, 0.29 ) }
    dend_43 { pt3dadd( 7.41512, -123.336, 32.409, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( 7.323, -123.655, 32.4929, 0.15 ) }
    dend_43 { pt3dadd( 7.14618, -124.238, 32.6395, 0.15 ) }
    dend_43 { pt3dadd( 7.01767, -124.632, 32.7322, 0.29 ) }
    dend_43 { pt3dadd( 6.84455, -125.171, 32.8671, 1.11 ) }
    dend_43 { pt3dadd( 6.68388, -125.72, 33.0145, 1.77 ) }
    dend_43 { pt3dadd( 6.50283, -126.483, 33.2282, 1.77 ) }
    dend_43 { pt3dadd( 6.35111, -127.282, 33.4633, 1.33 ) }
    dend_43 { pt3dadd( 6.17327, -128.394, 33.793, 0.15 ) }
    dend_43 { pt3dadd( 6.06678, -129.134, 34.024, 0.22 ) }
    dend_43 { pt3dadd( 5.99374, -129.666, 34.197, 0.66 ) }
    dend_43 { pt3dadd( 5.9261, -130.179, 34.3701, 0.81 ) }
    dend_43 { pt3dadd( 5.82026, -131.132, 34.7055, 0.15 ) }
    dend_43 { pt3dadd( 5.79521, -131.693, 34.9155, 0.22 ) }
    dend_43 { pt3dadd( 5.8178, -132.167, 35.1041, 0.22 ) }
    dend_43 { pt3dadd( 5.87413, -132.774, 35.3424, 0.22 ) }
    dend_43 { pt3dadd( 5.91701, -133.13, 35.478, 0.66 ) }
    dend_43 { pt3dadd( 6.04248, -133.828, 35.7437, 1.4 ) }
    dend_43 { pt3dadd( 6.29861, -134.811, 36.1476, 0.88 ) }
    dend_43 { pt3dadd( 6.47616, -135.424, 36.409, 0.15 ) }
    dend_43 { pt3dadd( 6.65403, -136.012, 36.6572, 0.15 ) }
    dend_43 { pt3dadd( 6.78985, -136.438, 36.8355, 0.22 ) }
    dend_43 { pt3dadd( 6.99676, -137.107, 37.1198, 0.29 ) }
    dend_43 { pt3dadd( 7.13643, -137.63, 37.3345, 0.15 ) }
    dend_43 { pt3dadd( 7.25591, -138.35, 37.5985, 0.15 ) }
    dend_43 { pt3dadd( 7.27121, -138.6, 37.6833, 0.15 ) }
    dend_43 { pt3dadd( 7.26572, -139.125, 37.8666, 0.22 ) }
    dend_43 { pt3dadd( 7.20527, -139.888, 38.1335, 0.22 ) }
    dend_43 { pt3dadd( 7.16343, -140.218, 38.2476, 0.22 ) }
    dend_43 { pt3dadd( 7.07508, -140.912, 38.4824, 0.37 ) }
    dend_43 { pt3dadd( 7.00437, -141.621, 38.7336, 0.22 ) }
    dend_43 { pt3dadd( 6.96972, -142.097, 38.899, 0.88 ) }
    dend_43 { pt3dadd( 6.93729, -143.162, 39.2573, 2.06 ) }
    dend_43 { pt3dadd( 6.9646, -144.406, 39.6172, 0.59 ) }
    dend_43 { pt3dadd( 7.03424, -145.25, 39.8137, 0.22 ) }
    dend_43 { pt3dadd( 7.11668, -145.808, 39.9053, 0.22 ) }
    dend_43 { pt3dadd( 7.20283, -146.302, 39.9669, 0.22 ) }
    dend_43 { pt3dadd( 7.33239, -146.982, 40.0207, 0.59 ) }
    dend_43 { pt3dadd( 7.55252, -147.946, 40.0321, 0.07 ) }
    dend_43 { pt3dadd( 7.71819, -148.531, 39.9701, 0.15 ) }
    dend_43 { pt3dadd( 7.93449, -149.223, 39.831, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 40/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -2.3915, -47.8824, -0.880481, 0.74 ) }
    dend_39 { pt3dadd( -2.61172, -49.8573, -1.21784, 0.74 ) }
    dend_39 { pt3dadd( -2.81711, -51.616, -1.54798, 0.74 ) }
    dend_39 { pt3dadd( -2.96265, -52.6102, -1.73452, 0.81 ) }
    dend_39 { pt3dadd( -3.27231, -54.2487, -2.05066, 0.88 ) }
    dend_39 { pt3dadd( -3.49642, -55.3012, -2.25422, 0.81 ) }
    dend_39 { pt3dadd( -3.82486, -56.6595, -2.52123, 1.18 ) }
    dend_39 { pt3dadd( -4.10883, -57.6686, -2.74087, 1.18 ) }
    dend_39 { pt3dadd( -4.54192, -58.9033, -3.00605, 1.03 ) }
    dend_39 { pt3dadd( -5.06532, -60.2123, -3.29955, 1.11 ) }
    dend_39 { pt3dadd( -5.53152, -61.2346, -3.52751, 0.74 ) }
    dend_39 { pt3dadd( -6.12462, -62.383, -3.7621, 1.11 ) }
    dend_39 { pt3dadd( -6.65809, -63.3593, -3.93984, 0.81 ) }
    dend_39 { pt3dadd( -7.28718, -64.5102, -4.12342, 0.81 ) }
    dend_39 { pt3dadd( -7.4844, -64.9307, -4.1811, 0.81 ) }
    dend_39 { pt3dadd( -7.81032, -65.8195, -4.28197, 0.88 ) }
    dend_39 { pt3dadd( -8.07491, -66.8053, -4.35263, 0.88 ) }
    dend_39 { pt3dadd( -8.37871, -68.4349, -4.40058, 1.11 ) }
    dend_39 { pt3dadd( -8.48573, -69.2125, -4.37994, 1.33 ) }
    dend_39 { pt3dadd( -8.70429, -71.092, -4.18141, 0.74 ) }
    dend_39 { pt3dadd( -8.80382, -72.2073, -4.04295, 0.74 ) }
    dend_39 { pt3dadd( -8.87412, -73.8484, -3.81435, 0.88 ) }
    dend_39 { pt3dadd( -8.87818, -74.8144, -3.65011, 1.25 ) }
    dend_39 { pt3dadd( -8.8806, -75.8103, -3.43507, 1.03 ) }
    dend_39 { pt3dadd( -8.95673, -77.1382, -3.0438, 0.74 ) }
    dend_39 { pt3dadd( -9.38909, -87.7305, -3.13859, 0.74 ) }
    dend_39 { pt3dadd( -10.5333, -98.1803, -1.66164, 0.74 ) }
    dend_39 { pt3dadd( -11.237, -108.603, 0.245931, 0.74 ) }
    dend_39 { pt3dadd( -11.3294, -118.547, 4.10884, 0.74 ) }
    dend_39 { pt3dadd( -10.4626, -128.574, 7.6261, 0.74 ) }
    dend_39 { pt3dadd( -10.1774, -138.264, 12.1396, 0.74 ) }
    dend_39 { pt3dadd( -11.9321, -148.225, 15.5217, 0.74 ) }
    dend_39 { pt3dadd( -11.6225, -158.563, 17.9729, 0.74 ) }
    dend_39 { pt3dadd( -10.6995, -168.824, 20.6198, 0.74 ) }
    dend_39 { pt3dadd( -9.89455, -179.142, 23.0495, 0.74 ) }
    dend_39 { pt3dadd( -9.00991, -189.488, 25.3175, 0.74 ) }
    dend_39 { pt3dadd( -8.55335, -199.502, 28.9496, 0.74 ) }
    dend_39 { pt3dadd( -10.0361, -208.817, 34.0604, 0.74 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -2.3915, -47.8824, -0.880481, 1.03 ) }
    dend_38 { pt3dadd( -2.35963, -48.575, -0.482766, 1.03 ) }
    dend_38 { pt3dadd( -2.32664, -49.6007, 0.0492432, 1.03 ) }
    dend_38 { pt3dadd( -2.31585, -50.394, 0.38194, 1.03 ) }
    dend_38 { pt3dadd( -2.28696, -51.5689, 0.791478, 1.03 ) }
    dend_38 { pt3dadd( -2.23469, -52.5625, 1.07625, 0.96 ) }
    dend_38 { pt3dadd( -2.16984, -53.2672, 1.25684, 0.96 ) }
    dend_38 { pt3dadd( -2.08751, -53.8604, 1.37417, 0.96 ) }
    dend_38 { pt3dadd( -1.75417, -55.4778, 1.60818, 0.88 ) }
    dend_38 { pt3dadd( -1.46669, -56.4371, 1.71252, 0.88 ) }
    dend_38 { pt3dadd( -0.937704, -57.6848, 1.83851, 0.88 ) }
    dend_38 { pt3dadd( -0.245, -58.9199, 1.97557, 0.81 ) }
    dend_38 { pt3dadd( 0.341352, -59.7554, 2.09196, 0.81 ) }
    dend_38 { pt3dadd( 0.823002, -60.3224, 2.20039, 0.81 ) }
    dend_38 { pt3dadd( 1.56485, -61.0519, 2.37996, 0.88 ) }
    dend_38 { pt3dadd( 2.33701, -61.8031, 2.60094, 1.03 ) }
    dend_38 { pt3dadd( 2.84362, -62.3581, 2.78199, 1.03 ) }
    dend_38 { pt3dadd( 3.45416, -63.2061, 3.05165, 0.81 ) }
    dend_38 { pt3dadd( 3.86551, -63.996, 3.28403, 1.4 ) }
    dend_38 { pt3dadd( 4.05221, -64.4886, 3.41682, 1.92 ) }
    dend_38 { pt3dadd( 4.40121, -65.8014, 3.69752, 1.4 ) }
    dend_38 { pt3dadd( 4.7223, -67.3486, 3.91876, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( 4.9178, -68.4359, 4.01223, 0.88 ) }
    dend_38 { pt3dadd( 5.10881, -69.5704, 4.05146, 1.03 ) }
    dend_38 { pt3dadd( 5.22454, -70.2029, 4.04684, 1.03 ) }
    dend_38 { pt3dadd( 5.43772, -71.2341, 4.00133, 0.81 ) }
    dend_38 { pt3dadd( 5.66275, -72.1861, 3.90507, 1.18 ) }
    dend_38 { pt3dadd( 5.72487, -72.4738, 3.86545, 1.18 ) }
    dend_38 { pt3dadd( 5.79823, -73.0357, 3.7931, 0.74 ) }
    dend_38 { pt3dadd( 5.77282, -73.7637, 3.74409, 0.44 ) }
    dend_38 { pt3dadd( 5.68983, -74.1948, 3.74476, 0.44 ) }
    dend_38 { pt3dadd( 5.48923, -74.826, 3.78467, 0.66 ) }
    dend_38 { pt3dadd( 5.17302, -75.6624, 3.85504, 0.81 ) }
    dend_38 { pt3dadd( 4.88146, -76.4193, 3.91879, 0.96 ) }
    dend_38 { pt3dadd( 4.4332, -77.6036, 4.01442, 1.33 ) }
    dend_38 { pt3dadd( 4.14885, -78.3867, 4.07338, 0.88 ) }
    dend_38 { pt3dadd( 3.89355, -79.1564, 4.13734, 1.11 ) }
    dend_38 { pt3dadd( 3.62573, -80.0585, 4.23505, 1.18 ) }
    dend_38 { pt3dadd( 3.38926, -80.9153, 4.34853, 1.18 ) }
    dend_38 { pt3dadd( 3.06682, -82.1117, 4.53179, 0.52 ) }
    dend_38 { pt3dadd( 2.75406, -83.3526, 4.7602, 0.52 ) }
    dend_38 { pt3dadd( 2.52723, -84.2783, 4.94551, 0.74 ) }
    dend_38 { pt3dadd( 2.32426, -85.14, 5.12778, 0.96 ) }
    dend_38 { pt3dadd( 2.14458, -85.9468, 5.28896, 1.62 ) }
    dend_38 { pt3dadd( 1.97655, -86.7529, 5.43038, 1.62 ) }
    dend_38 { pt3dadd( 1.78646, -87.7614, 5.57145, 1.33 ) }
    dend_38 { pt3dadd( 1.65386, -88.591, 5.64773, 0.44 ) }
    dend_38 { pt3dadd( 1.56277, -89.0835, 5.66733, 0.59 ) }
    dend_38 { pt3dadd( 1.33749, -90.0043, 5.68968, 0.59 ) }
    dend_38 { pt3dadd( 1.02766, -90.9907, 5.724, 0.88 ) }
    dend_38 { pt3dadd( 0.730022, -91.7481, 5.76193, 1.25 ) }
    dend_38 { pt3dadd( 0.515289, -92.2078, 5.7986, 2.21 ) }
    dend_38 { pt3dadd( -0.0291765, -93.2781, 5.93029, 1.84 ) }
    dend_38 { pt3dadd( -0.67088, -94.4843, 6.12538, 1.33 ) }
    dend_38 { pt3dadd( -1.26091, -95.5872, 6.36053, 0.66 ) }
    dend_38 { pt3dadd( -1.54939, -96.1672, 6.49494, 0.44 ) }
    dend_38 { pt3dadd( -1.83427, -96.7921, 6.64216, 0.44 ) }
    dend_38 { pt3dadd( -2.10584, -97.4613, 6.79627, 0.81 ) }
    dend_38 { pt3dadd( -2.37689, -98.3161, 6.9697, 1.11 ) }
    dend_38 { pt3dadd( -2.6033, -99.2728, 7.12273, 0.74 ) }
    dend_38 { pt3dadd( -2.80544, -100.309, 7.26182, 0.37 ) }
    dend_38 { pt3dadd( -2.95491, -101.11, 7.34721, 0.37 ) }
    dend_38 { pt3dadd( -3.05709, -101.615, 7.39679, 0.74 ) }
    dend_38 { pt3dadd( -3.23302, -102.378, 7.47616, 0.88 ) }
    dend_38 { pt3dadd( -3.52144, -103.494, 7.61751, 0.44 ) }
    dend_38 { pt3dadd( -3.68306, -104.01, 7.71177, 0.44 ) }
    dend_38 { pt3dadd( -3.87426, -104.502, 7.8591, 0.59 ) }
    dend_38 { pt3dadd( -4.13846, -105.042, 8.08541, 0.96 ) }
    dend_38 { pt3dadd( -4.38952, -105.477, 8.31856, 1.25 ) }
    dend_38 { pt3dadd( -4.67198, -105.929, 8.61387, 1.25 ) }
    dend_38 { pt3dadd( -4.99678, -106.47, 9.00496, 0.81 ) }
    dend_38 { pt3dadd( -5.19258, -106.903, 9.30023, 1.11 ) }
    dend_38 { pt3dadd( -5.38096, -107.661, 9.69316, 0.22 ) }
    dend_38 { pt3dadd( -5.41699, -108.012, 9.80607, 0.22 ) }
    dend_38 { pt3dadd( -5.43967, -108.572, 9.93382, 0.22 ) }
    dend_38 { pt3dadd( -5.46137, -109.079, 10.0182, 0.74 ) }
    dend_38 { pt3dadd( -5.49425, -109.588, 10.0896, 1.18 ) }
    dend_38 { pt3dadd( -5.60939, -110.748, 10.2558, 0.66 ) }
    dend_38 { pt3dadd( -5.75678, -111.748, 10.4276, 0.37 ) }
    dend_38 { pt3dadd( -5.99151, -112.621, 10.622, 0.66 ) }
    dend_38 { pt3dadd( -6.24702, -113.347, 10.8338, 0.66 ) }
    dend_38 { pt3dadd( -6.46066, -113.899, 11.0348, 1.25 ) }
    dend_38 { pt3dadd( -6.66419, -114.42, 11.269, 2.06 ) }
    dend_38 { pt3dadd( -6.94155, -115.184, 11.6776, 2.21 ) }
    dend_38 { pt3dadd( -7.39072, -116.615, 12.4934, 1.03 ) }
    dend_38 { pt3dadd( -7.6083, -117.436, 12.9518, 0.59 ) }
    dend_38 { pt3dadd( -7.79071, -118.294, 13.3769, 0.37 ) }
    dend_38 { pt3dadd( -7.89528, -118.932, 13.6644, 0.66 ) }
    dend_38 { pt3dadd( -7.98196, -119.708, 13.9839, 0.37 ) }
    dend_38 { pt3dadd( -8.02043, -120.551, 14.3147, 0.29 ) }
    dend_38 { pt3dadd( -8.01039, -121.101, 14.5122, 0.52 ) }
    dend_38 { pt3dadd( -8.00587, -122.057, 14.8464, 0.22 ) }
    dend_38 { pt3dadd( -7.98975, -122.544, 15.0667, 0.22 ) }
    dend_38 { pt3dadd( -7.93696, -123.072, 15.3898, 0.29 ) }
    dend_38 { pt3dadd( -7.84496, -123.554, 15.7939, 0.96 ) }
    dend_38 { pt3dadd( -7.73597, -124.017, 16.2567, 1.77 ) }
    dend_38 { pt3dadd( -7.6283, -124.474, 16.7129, 1.77 ) }
    dend_38 { pt3dadd( -7.39611, -125.54, 17.6573, 0.29 ) }
    dend_38 { pt3dadd( -7.30733, -126.011, 17.972, 0.29 ) }
    dend_38 { pt3dadd( -7.25084, -126.428, 18.1666, 0.29 ) }
    dend_38 { pt3dadd( -7.19261, -127.069, 18.3506, 0.29 ) }
    dend_38 { pt3dadd( -7.16873, -127.917, 18.4807, 0.29 ) }
    dend_38 { pt3dadd( -7.2213, -128.911, 18.5304, 0.29 ) }
    dend_38 { pt3dadd( -7.29088, -129.402, 18.5264, 0.29 ) }
    dend_38 { pt3dadd( -7.45895, -130.126, 18.5218, 0.29 ) }
    dend_38 { pt3dadd( -7.72738, -130.97, 18.5503, 0.29 ) }
    dend_38 { pt3dadd( -8.05962, -131.847, 18.6398, 0.29 ) }
    dend_38 { pt3dadd( -8.28767, -132.394, 18.7236, 1.03 ) }
    dend_38 { pt3dadd( -8.57273, -133.03, 18.8476, 1.92 ) }
    dend_38 { pt3dadd( -9.05646, -134.099, 19.08, 3.02 ) }
    dend_38 { pt3dadd( -9.58918, -135.298, 19.369, 2.36 ) }
    dend_38 { pt3dadd( -10.1865, -136.677, 19.7316, 0.22 ) }
    dend_38 { pt3dadd( -10.3915, -137.188, 19.8776, 0.22 ) }
    dend_38 { pt3dadd( -10.6364, -137.881, 20.088, 0.22 ) }
    dend_38 { pt3dadd( -10.7304, -138.19, 20.1841, 0.52 ) }
    dend_38 { pt3dadd( -10.8555, -138.697, 20.3534, 0.96 ) }
    dend_38 { pt3dadd( -11.0189, -139.444, 20.6036, 0.44 ) }
    dend_38 { pt3dadd( -11.2156, -140.378, 20.9034, 0.22 ) }
    dend_38 { pt3dadd( -11.3384, -140.978, 21.0855, 0.37 ) }
    dend_38 { pt3dadd( -11.4775, -141.684, 21.2854, 0.81 ) }
    dend_38 { pt3dadd( -11.6108, -142.301, 21.4528, 0.96 ) }
    dend_38 { pt3dadd( -11.8213, -143.139, 21.6558, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -12.0359, -143.941, 21.8172, 0.66 ) }
    dend_38 { pt3dadd( -12.131, -144.318, 21.8749, 0.22 ) }
    dend_38 { pt3dadd( -12.3117, -145.144, 21.9753, 0.22 ) }
    dend_38 { pt3dadd( -12.3763, -145.536, 22.0206, 0.44 ) }
    dend_38 { pt3dadd( -12.5017, -146.543, 22.1448, 0.22 ) }
    dend_38 { pt3dadd( -12.5504, -147.242, 22.2547, 0.22 ) }
    dend_38 { pt3dadd( -12.581, -148.084, 22.4214, 0.29 ) }
    dend_38 { pt3dadd( -12.609, -148.777, 22.5731, 0.52 ) }
    dend_38 { pt3dadd( -12.639, -149.495, 22.7328, 0.52 ) }
    dend_38 { pt3dadd( -12.691, -150.256, 22.9049, 0.52 ) }
    dend_38 { pt3dadd( -12.7704, -150.973, 23.0695, 1.18 ) }
    dend_38 { pt3dadd( -12.8808, -151.635, 23.2182, 2.43 ) }
    dend_38 { pt3dadd( -13.1228, -152.768, 23.4714, 1.33 ) }
    dend_38 { pt3dadd( -13.3438, -153.684, 23.6616, 0.59 ) }
    dend_38 { pt3dadd( -13.5325, -154.432, 23.8038, 0.81 ) }
    dend_38 { pt3dadd( -13.6955, -155.079, 23.9201, 0.15 ) }
    dend_38 { pt3dadd( -13.806, -155.509, 23.9935, 0.15 ) }
    dend_38 { pt3dadd( -13.8533, -155.726, 24.0318, 0.15 ) }
    dend_38 { pt3dadd( -13.9091, -155.997, 24.0901, 0.22 ) }
    dend_38 { pt3dadd( -14.0392, -156.517, 24.2165, 0.37 ) }
    dend_38 { pt3dadd( -14.2347, -157.12, 24.3444, 0.37 ) }
    dend_38 { pt3dadd( -14.5071, -157.763, 24.4408, 0.22 ) }
    dend_38 { pt3dadd( -14.877, -158.452, 24.5042, 0.22 ) }
    dend_38 { pt3dadd( -15.1355, -158.847, 24.5151, 0.22 ) }
    dend_38 { pt3dadd( -15.4203, -159.212, 24.5106, 0.74 ) }
    dend_38 { pt3dadd( -15.8786, -159.737, 24.4842, 1.77 ) }
    dend_38 { pt3dadd( -16.4254, -160.33, 24.4378, 2.21 ) }
    dend_38 { pt3dadd( -16.8312, -160.756, 24.4218, 2.21 ) }
    dend_38 { pt3dadd( -17.7194, -161.67, 24.4301, 0.37 ) }
    dend_38 { pt3dadd( -18.2741, -162.278, 24.4711, 0.37 ) }
    dend_38 { pt3dadd( -18.6979, -162.802, 24.5417, 0.22 ) }
    dend_38 { pt3dadd( -19.0473, -163.296, 24.6549, 0.22 ) }
    dend_38 { pt3dadd( -19.4462, -163.906, 24.8436, 0.22 ) }
    dend_38 { pt3dadd( -19.6688, -164.262, 24.9841, 0.81 ) }
    dend_38 { pt3dadd( -19.9985, -164.8, 25.2773, 1.25 ) }
    dend_38 { pt3dadd( -20.3885, -165.407, 25.6947, 0.88 ) }
    dend_38 { pt3dadd( -20.8473, -166.048, 26.1995, 0.22 ) }
    dend_38 { pt3dadd( -21.0851, -166.374, 26.4599, 0.22 ) }
    dend_38 { pt3dadd( -21.3449, -166.771, 26.7357, 0.22 ) }
    dend_38 { pt3dadd( -21.5989, -167.263, 27.0391, 0.22 ) }
    dend_38 { pt3dadd( -21.8034, -167.919, 27.3455, 0.44 ) }
    dend_38 { pt3dadd( -21.9174, -168.55, 27.5577, 1.47 ) }
    dend_38 { pt3dadd( -22.0175, -169.24, 27.7209, 1.47 ) }
    dend_38 { pt3dadd( -22.1545, -170.111, 27.8722, 0.44 ) }
    dend_38 { pt3dadd( -22.2889, -170.923, 27.9753, 0.96 ) }
    dend_38 { pt3dadd( -22.5228, -172.107, 28.0802, 0.22 ) }
    dend_38 { pt3dadd( -22.6634, -172.734, 28.13, 0.22 ) }
    dend_38 { pt3dadd( -22.9216, -173.684, 28.2136, 0.22 ) }
    dend_38 { pt3dadd( -23.16, -174.39, 28.2684, 0.22 ) }
    dend_38 { pt3dadd( -23.3664, -174.906, 28.3015, 0.22 ) }
    dend_38 { pt3dadd( -23.6492, -175.52, 28.3322, 0.22 ) }
    dend_38 { pt3dadd( -24.0554, -176.335, 28.3853, 0.22 ) }
    dend_38 { pt3dadd( -24.2959, -176.847, 28.4253, 0.81 ) }
    dend_38 { pt3dadd( -24.6392, -177.64, 28.4985, 1.77 ) }
    dend_38 { pt3dadd( -24.9539, -178.411, 28.5932, 1.18 ) }
    dend_38 { pt3dadd( -25.519, -179.897, 28.8132, 0.22 ) }
    dend_38 { pt3dadd( -25.686, -180.394, 28.9074, 0.22 ) }
    dend_38 { pt3dadd( -25.9439, -181.247, 29.1147, 0.88 ) }
    dend_38 { pt3dadd( -26.2201, -182.308, 29.4418, 0.15 ) }
    dend_38 { pt3dadd( -26.3482, -182.929, 29.695, 0.15 ) }
    dend_38 { pt3dadd( -26.4164, -183.538, 29.9837, 0.29 ) }
    dend_38 { pt3dadd( -26.4155, -184.156, 30.3124, 0.74 ) }
    dend_38 { pt3dadd( -26.389, -184.629, 30.5742, 1.4 ) }
    dend_38 { pt3dadd( -26.3227, -185.336, 31.0004, 0.59 ) }
    dend_38 { pt3dadd( -26.2255, -186.276, 31.5713, 0.15 ) }
    dend_38 { pt3dadd( -26.1562, -186.993, 31.9882, 0.15 ) }
    dend_38 { pt3dadd( -26.0903, -187.642, 32.3514, 0.15 ) }
    dend_38 { pt3dadd( -26.0085, -188.24, 32.6514, 0.29 ) }
    dend_38 { pt3dadd( -25.8761, -188.991, 33.0149, 0.96 ) }
    dend_38 { pt3dadd( -25.7172, -189.817, 33.41, 0.44 ) }
    dend_38 { pt3dadd( -25.588, -190.485, 33.733, 0.22 ) }
    dend_38 { pt3dadd( -25.4321, -191.288, 34.1571, 0.22 ) }
    dend_38 { pt3dadd( -25.2598, -192.058, 34.5782, 0.15 ) }
    dend_38 { pt3dadd( -25.0938, -192.717, 34.9268, 0.15 ) }
    dend_38 { pt3dadd( -24.9833, -193.16, 35.1508, 0.15 ) }
    dend_38 { pt3dadd( -24.8973, -193.604, 35.353, 0.29 ) }
    dend_38 { pt3dadd( -24.8173, -194.391, 35.6546, 0.44 ) }
    dend_38 { pt3dadd( -24.8086, -195.165, 35.8964, 0.44 ) }
    dend_38 { pt3dadd( -24.8713, -196.234, 36.1874, 0.44 ) }
    dend_38 { pt3dadd( -24.961, -197.119, 36.3705, 0.44 ) }
    dend_38 { pt3dadd( -25.109, -198.207, 36.5496, 0.88 ) }
    dend_38 { pt3dadd( -25.2728, -199.053, 36.6586, 1.03 ) }
    dend_38 { pt3dadd( -25.4897, -199.863, 36.7443, 0.37 ) }
    dend_38 { pt3dadd( -25.7392, -200.537, 36.8155, 0.15 ) }
    dend_38 { pt3dadd( -26.06, -201.186, 36.9013, 0.15 ) }
    dend_38 { pt3dadd( -26.397, -201.736, 36.989, 0.37 ) }
    dend_38 { pt3dadd( -26.8967, -202.416, 37.1211, 0.22 ) }
    dend_38 { pt3dadd( -27.312, -202.896, 37.2282, 0.81 ) }
    dend_38 { pt3dadd( -28.0598, -203.633, 37.4107, 1.25 ) }
    dend_38 { pt3dadd( -28.9783, -204.391, 37.617, 0.88 ) }
    dend_38 { pt3dadd( -29.6005, -204.834, 37.743, 0.22 ) }
    dend_38 { pt3dadd( -30.2278, -205.239, 37.8385, 0.22 ) }
    dend_38 { pt3dadd( -30.8547, -205.634, 37.8999, 0.74 ) }
    dend_38 { pt3dadd( -31.7202, -206.212, 37.9253, 1.47 ) }
    dend_38 { pt3dadd( -32.4091, -206.722, 37.8897, 0.37 ) }
    dend_38 { pt3dadd( -33.411, -207.573, 37.7269, 0.22 ) }
    dend_38 { pt3dadd( -34.0702, -208.243, 37.5284, 0.29 ) }
    dend_38 { pt3dadd( -34.586, -208.905, 37.2862, 0.29 ) }
    dend_38 { pt3dadd( -34.9367, -209.541, 37.0217, 0.29 ) }
    dend_38 { pt3dadd( -35.1877, -210.249, 36.7141, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_38 { pt3dadd( -35.3909, -211.191, 36.3364, 0.22 ) }
    dend_38 { pt3dadd( -35.5015, -212.253, 35.9629, 0.22 ) }
    dend_38 { pt3dadd( -35.5227, -212.772, 35.8072, 0.22 ) }
    dend_38 { pt3dadd( -35.5249, -213.566, 35.6408, 0.37 ) }
    dend_38 { pt3dadd( -35.5261, -214.164, 35.5738, 0.59 ) }
    dend_38 { pt3dadd( -35.5782, -215.589, 35.5187, 0.66 ) }
    dend_38 { pt3dadd( -35.6565, -216.57, 35.5472, 0.88 ) }
    dend_38 { pt3dadd( -35.7338, -217.228, 35.6294, 0.88 ) }
    dend_38 { pt3dadd( -35.9171, -218.405, 35.8364, 0.52 ) }
    dend_38 { pt3dadd( -36.147, -219.681, 36.1082, 0.22 ) }
    dend_38 { pt3dadd( -36.3673, -220.96, 36.4438, 0.22 ) }
    dend_38 { pt3dadd( -36.4552, -221.482, 36.6078, 0.81 ) }
    dend_38 { pt3dadd( -36.6993, -222.871, 37.0819, 1.25 ) }
    dend_38 { pt3dadd( -36.8197, -223.668, 37.3567, 1.03 ) }
    dend_38 { pt3dadd( -36.8827, -224.184, 37.5295, 1.03 ) }
    dend_38 { pt3dadd( -36.9882, -225.451, 37.9739, 0.22 ) }
    dend_38 { pt3dadd( -37.0382, -226.388, 38.3027, 0.22 ) }
    dend_38 { pt3dadd( -37.0868, -227.019, 38.5056, 0.22 ) }
    dend_38 { pt3dadd( -37.2123, -228.045, 38.7882, 0.22 ) }
    dend_38 { pt3dadd( -37.3302, -228.629, 38.9444, 0.22 ) }
    dend_38 { pt3dadd( -37.648, -229.702, 39.2032, 0.22 ) }
    dend_38 { pt3dadd( -37.9642, -230.415, 39.347, 0.74 ) }
    dend_38 { pt3dadd( -38.3392, -231.095, 39.4553, 1.11 ) }
    dend_38 { pt3dadd( -38.6623, -231.599, 39.4933, 1.11 ) }
    dend_38 { pt3dadd( -39.3745, -232.554, 39.4734, 0.74 ) }
    dend_38 { pt3dadd( -39.925, -233.241, 39.3684, 1.4 ) }
    dend_38 { pt3dadd( -40.7935, -234.29, 39.0664, 0.66 ) }
    dend_38 { pt3dadd( -41.3843, -235.025, 38.7904, 0.07 ) }
    dend_38 { pt3dadd( -42.0985, -235.961, 38.4002, 0.07 ) }
    dend_38 { pt3dadd( -42.5647, -236.598, 38.1228, 0.22 ) }
    dend_38 { pt3dadd( -43.0681, -237.355, 37.7996, 0.22 ) }
    dend_38 { pt3dadd( -43.4032, -237.892, 37.5929, 0.44 ) }
    dend_38 { pt3dadd( -43.8027, -238.6, 37.3704, 0.44 ) }
    dend_38 { pt3dadd( -44.3313, -239.553, 37.2219, 0.44 ) }
    dend_38 { pt3dadd( -44.6737, -240.173, 37.2424, 0.22 ) }
    dend_38 { pt3dadd( -45.152, -241.041, 37.3916, 0.15 ) }
    dend_38 { pt3dadd( -45.4518, -241.523, 37.5499, 0.37 ) }
    dend_38 { pt3dadd( -45.6757, -241.819, 37.6983, 0.37 ) }
    dend_38 { pt3dadd( -46.2675, -242.511, 38.1512, 0.15 ) }
    dend_38 { pt3dadd( -46.8334, -243.1, 38.6182, 0.15 ) }
    dend_38 { pt3dadd( -47.0216, -243.273, 38.7719, 0.52 ) }
    dend_38 { pt3dadd( -47.5595, -243.666, 39.1647, 1.03 ) }
    dend_38 { pt3dadd( -48.3058, -244.145, 39.6467, 0.15 ) }
    dend_38 { pt3dadd( -48.867, -244.47, 39.9478, 0.15 ) }
    dend_38 { pt3dadd( -49.4219, -244.775, 40.1726, 0.15 ) }
    dend_38 { pt3dadd( -49.7856, -244.992, 40.2839, 0.59 ) }
    dend_38 { pt3dadd( -50.5764, -245.519, 40.4794, 0.15 ) }
    dend_38 { pt3dadd( -50.8369, -245.708, 40.5282, 0.15 ) }
    dend_38 { pt3dadd( -51.2429, -246.048, 40.5867, 0.66 ) }
    dend_38 { pt3dadd( -51.5871, -246.374, 40.6338, 0.81 ) }
    dend_38 { pt3dadd( -52.5259, -247.389, 40.7608, 0.15 ) }
    dend_38 { pt3dadd( -53.2567, -248.272, 40.8594, 0.15 ) }
    dend_38 { pt3dadd( -53.8804, -249.11, 40.9431, 0.29 ) }
    dend_38 { pt3dadd( -54.7342, -250.314, 41.0557, 0.22 ) }
    dend_38 { pt3dadd( -55.4664, -251.405, 41.1531, 0.15 ) }
    dend_38 { pt3dadd( -55.7634, -251.852, 41.1926, 0.66 ) }
    dend_38 { pt3dadd( -56.2453, -252.54, 41.2382, 0.81 ) }
    dend_38 { pt3dadd( -56.8622, -253.327, 41.2712, 0.44 ) }
    dend_38 { pt3dadd( -57.244, -253.792, 41.2859, 1.03 ) }
    dend_38 { pt3dadd( -57.6632, -254.236, 41.2947, 1.25 ) }
    dend_38 { pt3dadd( -58.82, -255.341, 41.2958, 0.52 ) }
    dend_38 { pt3dadd( -59.7289, -256.121, 41.2823, 0.22 ) }
    dend_38 { pt3dadd( -60.3163, -256.557, 41.2594, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 63/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 8.43288, 32.2476, -0.44138, 0.96 ) }
    dend_24 { pt3dadd( 9.87581, 33.7778, -1.83398, 0.96 ) }
    dend_24 { pt3dadd( 10.5799, 34.5184, -2.50943, 1.03 ) }
    dend_24 { pt3dadd( 11.568, 35.4413, -3.22019, 1.03 ) }
    dend_24 { pt3dadd( 12.4436, 36.2592, -3.85005, 1.62 ) }
    dend_24 { pt3dadd( 13.2921, 37.0518, -4.46039, 1.33 ) }
    dend_24 { pt3dadd( 14.4834, 38.1646, -5.31736, 1.03 ) }
    dend_24 { pt3dadd( 15.4018, 39.0093, -5.93061, 0.96 ) }
    dend_24 { pt3dadd( 17.2053, 40.6087, -7.01552, 1.62 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 72/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 8.43288, 32.2476, -0.44138, 0.88 ) }
    dend_21 { pt3dadd( 9.2392, 34.0338, -0.717418, 0.88 ) }
    dend_21 { pt3dadd( 10.2232, 35.8155, -1.04141, 0.81 ) }
    dend_21 { pt3dadd( 10.6931, 36.6483, -1.23918, 0.66 ) }
    dend_21 { pt3dadd( 11.1501, 37.5138, -1.47554, 1.11 ) }
    dend_21 { pt3dadd( 11.6952, 38.6855, -1.80826, 0.74 ) }
    dend_21 { pt3dadd( 12.0504, 39.5575, -2.06643, 0.52 ) }
    dend_21 { pt3dadd( 12.469, 40.7833, -2.54743, 0.22 ) }
    dend_21 { pt3dadd( 12.5802, 41.7649, -2.90179, 0.29 ) }
    dend_21 { pt3dadd( 12.4069, 42.4616, -3.14203, 0.29 ) }
    dend_21 { pt3dadd( 11.9745, 43.1988, -3.41362, 0.66 ) }
    dend_21 { pt3dadd( 11.6542, 43.573, -3.57006, 0.66 ) }
    dend_21 { pt3dadd( 10.7554, 44.4578, -3.92478, 0.81 ) }
    dend_21 { pt3dadd( 9.59972, 45.5711, -4.37228, 1.18 ) }
    dend_21 { pt3dadd( 8.73166, 46.503, -4.74766, 1.03 ) }
    dend_21 { pt3dadd( 7.87095, 47.6012, -5.21762, 0.81 ) }
    dend_21 { pt3dadd( 7.13807, 48.7654, -5.74074, 1.11 ) }
    dend_21 { pt3dadd( 6.34912, 50.3578, -6.48122, 0.88 ) }
    dend_21 { pt3dadd( 5.84187, 51.6861, -7.12924, 0.66 ) }
    dend_21 { pt3dadd( 5.48986, 52.9102, -7.72199, 0.66 ) }
    dend_21 { pt3dadd( 5.22852, 53.9407, -8.15636, 0.66 ) }
    dend_21 { pt3dadd( 4.98894, 54.8795, -8.49037, 0.66 ) }
    dend_21 { pt3dadd( 4.68281, 56.0003, -8.86598, 0.81 ) }
    dend_21 { pt3dadd( 4.41565, 56.8571, -9.17155, 1.18 ) }
    dend_21 { pt3dadd( 4.08723, 57.8007, -9.49161, 1.18 ) }
    dend_21 { pt3dadd( 3.36603, 59.8909, -10.1303, 0.52 ) }
    dend_21 { pt3dadd( 2.94359, 60.9948, -10.451, 0.52 ) }
    dend_21 { pt3dadd( 2.62363, 61.8681, -10.6975, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 2.44269, 62.4963, -10.8645, 1.03 ) }
    dend_21 { pt3dadd( 2.25829, 63.6304, -11.1811, 1.03 ) }
    dend_21 { pt3dadd( 2.30922, 65.0075, -11.6434, 0.66 ) }
    dend_21 { pt3dadd( 1.11727, 75.9872, -16.4549, 0.66 ) }
    dend_21 { pt3dadd( -0.299716, 87.3682, -19.9997, 0.66 ) }
    dend_21 { pt3dadd( -4.28755, 98.352, -22.9146, 0.66 ) }
    dend_21 { pt3dadd( -9.11635, 109.103, -25.4976, 0.66 ) }
    dend_21 { pt3dadd( -14.327, 119.401, -29.1646, 0.66 ) }
    dend_21 { pt3dadd( -21.5094, 128.95, -31.494, 0.66 ) }
    dend_21 { pt3dadd( -28.4216, 138.168, -35.5174, 0.66 ) }
    dend_21 { pt3dadd( -34.342, 147.752, -40.1341, 0.66 ) }
    dend_21 { pt3dadd( -40.5828, 157.765, -42.9694, 0.66 ) }
    dend_21 { pt3dadd( -47.4384, 166.883, -47.3276, 0.66 ) }
    dend_21 { pt3dadd( -52.2915, 176.239, -53.464, 0.66 ) }
    dend_21 { pt3dadd( -57.6547, 185.731, -58.9023, 0.66 ) }
    dend_21 { pt3dadd( -63.2514, 195.041, -64.4516, 0.66 ) }
    dend_21 { pt3dadd( -68.859, 203.924, -70.7206, 0.66 ) }
    dend_21 { pt3dadd( -75.6463, 211.625, -77.532, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 18/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 2.89892, 33.2562, 4.67039, 0.96 ) }
    dend_13 { pt3dadd( 1.84268, 33.9404, 4.77589, 0.96 ) }
    dend_13 { pt3dadd( 0.827062, 34.3653, 4.93869, 0.66 ) }
    dend_13 { pt3dadd( -0.608905, 34.5146, 5.2679, 0.52 ) }
    dend_13 { pt3dadd( -1.18793, 34.2362, 5.48042, 0.52 ) }
    dend_13 { pt3dadd( -1.95912, 33.2748, 5.88311, 0.52 ) }
    dend_13 { pt3dadd( -2.34359, 32.7444, 6.10853, 0.88 ) }
    dend_13 { pt3dadd( -3.14264, 31.4817, 6.64649, 1.11 ) }
    dend_13 { pt3dadd( -3.8776, 30.3289, 7.15548, 1.25 ) }
    dend_13 { pt3dadd( -4.51333, 29.4541, 7.55099, 1.25 ) }
    dend_13 { pt3dadd( -5.87554, 27.8919, 8.25469, 0.66 ) }
    dend_13 { pt3dadd( -6.67991, 27.1159, 8.59849, 0.96 ) }
    dend_13 { pt3dadd( -7.58067, 26.3932, 8.94723, 1.33 ) }
    dend_13 { pt3dadd( -8.76924, 25.6019, 9.37955, 1.33 ) }
    dend_13 { pt3dadd( -10.5873, 24.5719, 10.0349, 1.33 ) }
    dend_13 { pt3dadd( -12.5858, 23.5293, 10.7947, 0.88 ) }
    dend_13 { pt3dadd( -13.7925, 22.9519, 11.2416, 0.88 ) }
    dend_13 { pt3dadd( -15.1647, 22.287, 11.7413, 1.4 ) }
    dend_13 { pt3dadd( -16.0522, 21.8372, 12.0775, 1.55 ) }
    dend_13 { pt3dadd( -17.4211, 21.0951, 12.6416, 2.06 ) }
    dend_13 { pt3dadd( -18.4622, 20.4369, 13.1999, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 2.89892, 33.2562, 4.67039, 0.74 ) }
    dend_12 { pt3dadd( 2.57227, 32.2688, 4.47179, 0.74 ) }
    dend_12 { pt3dadd( 2.11707, 31.0138, 4.2711, 0.52 ) }
    dend_12 { pt3dadd( 1.70482, 29.9189, 4.13691, 0.88 ) }
    dend_12 { pt3dadd( 1.25648, 28.7549, 4.07606, 0.44 ) }
    dend_12 { pt3dadd( 0.958506, 28.007, 4.08009, 0.44 ) }
    dend_12 { pt3dadd( 0.727787, 27.445, 4.10365, 0.37 ) }
    dend_12 { pt3dadd( 0.30317, 26.4421, 4.22199, 0.88 ) }
    dend_12 { pt3dadd( -0.0947859, 25.3904, 4.41885, 0.44 ) }
    dend_12 { pt3dadd( -0.485357, 24.2299, 4.66681, 0.44 ) }
    dend_12 { pt3dadd( -0.711688, 23.3952, 4.83826, 0.74 ) }
    dend_12 { pt3dadd( -0.85585, 22.7364, 4.97317, 1.11 ) }
    dend_12 { pt3dadd( -1.10668, 21.2985, 5.28513, 0.96 ) }
    dend_12 { pt3dadd( -1.27423, 19.9604, 5.61744, 1.18 ) }
    dend_12 { pt3dadd( -1.37958, 18.8157, 5.95154, 1.18 ) }
    dend_12 { pt3dadd( -1.48348, 17.5124, 6.38061, 0.88 ) }
    dend_12 { pt3dadd( -1.5614, 16.4341, 6.78414, 0.66 ) }
    dend_12 { pt3dadd( -1.62558, 15.5576, 7.16491, 0.66 ) }
    dend_12 { pt3dadd( -1.69244, 14.6251, 7.6014, 0.66 ) }
    dend_12 { pt3dadd( -1.7719, 13.5598, 8.12167, 0.66 ) }
    dend_12 { pt3dadd( -1.85328, 12.3425, 8.69945, 0.66 ) }
    dend_12 { pt3dadd( -1.984, 10.6259, 9.39277, 0.52 ) }
    dend_12 { pt3dadd( -2.05045, 9.69782, 9.68552, 0.52 ) }
    dend_12 { pt3dadd( -2.14391, 8.0909, 10.0498, 0.52 ) }
    dend_12 { pt3dadd( -2.19546, 6.98121, 10.1979, 0.52 ) }
    dend_12 { pt3dadd( -2.22836, 5.84582, 10.2676, 0.52 ) }
    dend_12 { pt3dadd( -2.25829, 4.37583, 10.3026, 0.96 ) }
    dend_12 { pt3dadd( -2.29617, 3.62906, 10.3035, 1.11 ) }
    dend_12 { pt3dadd( -2.36184, 2.86373, 10.2969, 1.11 ) }
    dend_12 { pt3dadd( -2.59339, 0.976244, 10.298, 0.44 ) }
    dend_12 { pt3dadd( -2.73602, 0.0829182, 10.2941, 0.44 ) }
    dend_12 { pt3dadd( -3.07882, -1.5124, 10.3157, 0.66 ) }
    dend_12 { pt3dadd( -3.36355, -2.59758, 10.3378, 0.52 ) }
    dend_12 { pt3dadd( -3.53757, -3.15787, 10.3351, 0.88 ) }
    dend_12 { pt3dadd( -3.70645, -3.64879, 10.3209, 1.33 ) }
    dend_12 { pt3dadd( -4.07922, -4.74217, 10.2493, 0.96 ) }
    dend_12 { pt3dadd( -4.56126, -6.31099, 10.1047, 0.59 ) }
    dend_12 { pt3dadd( -4.85149, -7.43084, 9.96563, 0.59 ) }
    dend_12 { pt3dadd( -4.99829, -8.15764, 9.8735, 0.96 ) }
    dend_12 { pt3dadd( -5.16318, -9.17722, 9.75378, 0.52 ) }
    dend_12 { pt3dadd( -5.33076, -10.5596, 9.62008, 0.22 ) }
    dend_12 { pt3dadd( -5.41337, -11.4475, 9.56232, 0.29 ) }
    dend_12 { pt3dadd( -5.50328, -12.2399, 9.52724, 0.29 ) }
    dend_12 { pt3dadd( -5.60387, -12.8467, 9.51795, 1.03 ) }
    dend_12 { pt3dadd( -5.80568, -13.7631, 9.5154, 1.84 ) }
    dend_12 { pt3dadd( -6.20478, -15.104, 9.53431, 0.74 ) }
    dend_12 { pt3dadd( -6.73938, -16.4874, 9.58464, 0.29 ) }
    dend_12 { pt3dadd( -7.38779, -17.7495, 9.66845, 0.29 ) }
    dend_12 { pt3dadd( -7.80186, -18.4215, 9.73173, 0.29 ) }
    dend_12 { pt3dadd( -8.10031, -18.8663, 9.7795, 0.88 ) }
    dend_12 { pt3dadd( -8.50914, -19.4546, 9.84855, 1.47 ) }
    dend_12 { pt3dadd( -8.94621, -20.106, 9.91566, 0.88 ) }
    dend_12 { pt3dadd( -9.9212, -21.7605, 10.0485, 0.22 ) }
    dend_12 { pt3dadd( -10.2249, -22.3981, 10.0811, 0.15 ) }
    dend_12 { pt3dadd( -10.54, -23.2031, 10.1192, 0.37 ) }
    dend_12 { pt3dadd( -10.8085, -23.9268, 10.1627, 0.22 ) }
    dend_12 { pt3dadd( -11.2313, -25.0096, 10.2478, 0.22 ) }
    dend_12 { pt3dadd( -11.6328, -25.9067, 10.3376, 0.52 ) }
    dend_12 { pt3dadd( -11.8992, -26.4065, 10.4052, 0.96 ) }
    dend_12 { pt3dadd( -12.5406, -27.3199, 10.5736, 1.62 ) }
    dend_12 { pt3dadd( -13.4488, -28.3535, 10.8095, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( -14.4853, -29.3885, 11.0902, 0.59 ) }
    dend_12 { pt3dadd( -15.305, -30.1454, 11.3267, 0.88 ) }
    dend_12 { pt3dadd( -16.088, -30.8625, 11.5527, 1.55 ) }
    dend_12 { pt3dadd( -16.7713, -31.4981, 11.7461, 1.55 ) }
    dend_12 { pt3dadd( -17.7832, -32.5154, 12.0166, 0.37 ) }
    dend_12 { pt3dadd( -18.6026, -33.4555, 12.2576, 0.22 ) }
    dend_12 { pt3dadd( -19.0609, -34.042, 12.4038, 0.44 ) }
    dend_12 { pt3dadd( -19.6929, -34.9336, 12.6158, 1.11 ) }
    dend_12 { pt3dadd( -19.98, -35.4026, 12.7116, 1.11 ) }
    dend_12 { pt3dadd( -20.5581, -36.4881, 12.9116, 0.44 ) }
    dend_12 { pt3dadd( -21.02, -37.4615, 13.0475, 0.22 ) }
    dend_12 { pt3dadd( -21.3968, -38.3647, 13.1225, 0.29 ) }
    dend_12 { pt3dadd( -21.6193, -38.9179, 13.1364, 0.15 ) }
    dend_12 { pt3dadd( -21.9912, -39.8539, 13.1232, 0.29 ) }
    dend_12 { pt3dadd( -22.1392, -40.228, 13.1081, 0.96 ) }
    dend_12 { pt3dadd( -22.4933, -41.1051, 13.0524, 1.62 ) }
    dend_12 { pt3dadd( -23.073, -42.5905, 12.9317, 2.06 ) }
    dend_12 { pt3dadd( -23.6194, -44.0445, 12.8289, 1.4 ) }
    dend_12 { pt3dadd( -23.8782, -44.7471, 12.7913, 0.59 ) }
    dend_12 { pt3dadd( -24.2802, -45.8474, 12.7594, 0.22 ) }
    dend_12 { pt3dadd( -24.5232, -46.5855, 12.7504, 0.22 ) }
    dend_12 { pt3dadd( -24.7403, -47.33, 12.7589, 0.66 ) }
    dend_12 { pt3dadd( -24.9525, -48.1517, 12.7765, 0.74 ) }
    dend_12 { pt3dadd( -25.1577, -49.0335, 12.8095, 0.22 ) }
    dend_12 { pt3dadd( -25.3984, -50.0213, 12.8689, 0.15 ) }
    dend_12 { pt3dadd( -25.6032, -50.8336, 12.9485, 0.22 ) }
    dend_12 { pt3dadd( -25.7365, -51.4026, 13.0186, 0.66 ) }
    dend_12 { pt3dadd( -25.9048, -52.1145, 13.1251, 1.25 ) }
    dend_12 { pt3dadd( -26.1562, -53.0947, 13.2925, 1.47 ) }
    dend_12 { pt3dadd( -26.5029, -54.2695, 13.5103, 0.88 ) }
    dend_12 { pt3dadd( -26.8482, -55.267, 13.702, 0.22 ) }
    dend_12 { pt3dadd( -27.1255, -55.9536, 13.8344, 0.22 ) }
    dend_12 { pt3dadd( -27.4247, -56.6138, 13.9573, 0.22 ) }
    dend_12 { pt3dadd( -27.9563, -57.649, 14.1381, 0.37 ) }
    dend_12 { pt3dadd( -28.461, -58.5359, 14.27, 0.37 ) }
    dend_12 { pt3dadd( -29.0203, -59.469, 14.3905, 0.52 ) }
    dend_12 { pt3dadd( -29.3595, -60.0297, 14.4595, 0.22 ) }
    dend_12 { pt3dadd( -29.6743, -60.5753, 14.5296, 0.37 ) }
    dend_12 { pt3dadd( -29.9446, -61.13, 14.5984, 0.74 ) }
    dend_12 { pt3dadd( -30.2987, -62.1196, 14.715, 0.22 ) }
    dend_12 { pt3dadd( -30.5627, -63.1869, 14.828, 0.22 ) }
    dend_12 { pt3dadd( -30.7247, -64.0463, 14.9013, 0.29 ) }
    dend_12 { pt3dadd( -30.8464, -64.6857, 14.9472, 0.52 ) }
    dend_12 { pt3dadd( -31.0258, -65.6064, 15.0027, 1.11 ) }
    dend_12 { pt3dadd( -31.1876, -66.4192, 15.0415, 1.7 ) }
    dend_12 { pt3dadd( -31.4278, -67.5435, 15.078, 1.33 ) }
    dend_12 { pt3dadd( -31.7009, -68.8189, 15.0923, 0.22 ) }
    dend_12 { pt3dadd( -31.8869, -69.8305, 15.1001, 0.22 ) }
    dend_12 { pt3dadd( -31.9463, -70.1806, 15.1025, 0.22 ) }
    dend_12 { pt3dadd( -32.0113, -70.5888, 15.106, 0.29 ) }
    dend_12 { pt3dadd( -32.108, -71.2205, 15.1143, 0.52 ) }
    dend_12 { pt3dadd( -32.2208, -72.0348, 15.1308, 0.22 ) }
    dend_12 { pt3dadd( -32.3384, -72.7137, 15.1551, 0.22 ) }
    dend_12 { pt3dadd( -32.4862, -73.2788, 15.1803, 0.22 ) }
    dend_12 { pt3dadd( -32.7376, -73.8611, 15.2156, 0.81 ) }
    dend_12 { pt3dadd( -33.0391, -74.3341, 15.2533, 1.47 ) }
    dend_12 { pt3dadd( -33.3202, -74.684, 15.2864, 1.47 ) }
    dend_12 { pt3dadd( -34.0615, -75.5014, 15.3713, 0.22 ) }
    dend_12 { pt3dadd( -34.474, -75.9457, 15.418, 0.22 ) }
    dend_12 { pt3dadd( -34.9625, -76.5107, 15.4733, 0.37 ) }
    dend_12 { pt3dadd( -35.5611, -77.2712, 15.541, 0.44 ) }
    dend_12 { pt3dadd( -35.9527, -77.8073, 15.5859, 0.22 ) }
    dend_12 { pt3dadd( -36.1071, -78.0418, 15.5989, 0.22 ) }
    dend_12 { pt3dadd( -36.2917, -78.3484, 15.6088, 0.22 ) }
    dend_12 { pt3dadd( -36.6383, -78.9536, 15.6217, 0.22 ) }
    dend_12 { pt3dadd( -36.9176, -79.4411, 15.6306, 0.74 ) }
    dend_12 { pt3dadd( -37.2593, -80.0428, 15.6416, 1.47 ) }
    dend_12 { pt3dadd( -37.7904, -80.8955, 15.6764, 1.99 ) }
    dend_12 { pt3dadd( -38.3291, -81.6689, 15.7437, 1.77 ) }
    dend_12 { pt3dadd( -39.2593, -82.8562, 15.8976, 0.66 ) }
    dend_12 { pt3dadd( -39.8088, -83.4861, 16.0054, 0.15 ) }
    dend_12 { pt3dadd( -40.3942, -84.1141, 16.1271, 0.15 ) }
    dend_12 { pt3dadd( -41.0229, -84.781, 16.2586, 0.22 ) }
    dend_12 { pt3dadd( -41.5752, -85.3394, 16.3729, 0.22 ) }
    dend_12 { pt3dadd( -42.1511, -85.9115, 16.4593, 0.29 ) }
    dend_12 { pt3dadd( -42.6386, -86.4086, 16.4991, 0.81 ) }
    dend_12 { pt3dadd( -43.2872, -87.1311, 16.5005, 1.47 ) }
    dend_12 { pt3dadd( -43.9997, -88.023, 16.4248, 0.52 ) }
    dend_12 { pt3dadd( -44.5844, -88.941, 16.2707, 0.22 ) }
    dend_12 { pt3dadd( -44.9577, -89.6849, 16.1104, 0.22 ) }
    dend_12 { pt3dadd( -45.1911, -90.3028, 15.9798, 0.22 ) }
    dend_12 { pt3dadd( -45.2809, -90.6221, 15.9116, 0.22 ) }
    dend_12 { pt3dadd( -45.3903, -91.1489, 15.8014, 0.29 ) }
    dend_12 { pt3dadd( -45.5287, -91.9509, 15.6334, 0.74 ) }
    dend_12 { pt3dadd( -45.6319, -92.5573, 15.5018, 1.03 ) }
    dend_12 { pt3dadd( -45.9152, -93.8382, 15.2415, 0.37 ) }
    dend_12 { pt3dadd( -46.1567, -94.7076, 15.0732, 0.88 ) }
    dend_12 { pt3dadd( -46.4167, -95.5395, 14.9207, 1.18 ) }
    dend_12 { pt3dadd( -46.6661, -96.2938, 14.7882, 1.18 ) }
    dend_12 { pt3dadd( -47.1332, -97.6828, 14.5785, 0.29 ) }
    dend_12 { pt3dadd( -47.5698, -98.877, 14.4321, 0.29 ) }
    dend_12 { pt3dadd( -47.8944, -99.6938, 14.3651, 0.37 ) }
    dend_12 { pt3dadd( -48.1413, -100.263, 14.352, 0.88 ) }
    dend_12 { pt3dadd( -48.398, -100.842, 14.3693, 0.66 ) }
    dend_12 { pt3dadd( -48.7127, -101.635, 14.433, 0.22 ) }
    dend_12 { pt3dadd( -48.9279, -102.282, 14.5153, 0.22 ) }
    dend_12 { pt3dadd( -49.1144, -103.0, 14.6101, 0.37 ) }
    dend_12 { pt3dadd( -49.2206, -103.512, 14.6815, 0.66 ) }
    dend_12 { pt3dadd( -49.371, -104.321, 14.8041, 1.11 ) }
    dend_12 { pt3dadd( -49.5522, -105.284, 14.9572, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( -49.6847, -105.89, 15.0565, 0.29 ) }
    dend_12 { pt3dadd( -49.8819, -106.731, 15.2072, 0.22 ) }
    dend_12 { pt3dadd( -50.0273, -107.302, 15.2991, 0.29 ) }
    dend_12 { pt3dadd( -50.2892, -108.304, 15.4114, 0.96 ) }
    dend_12 { pt3dadd( -50.4838, -109.019, 15.4525, 1.03 ) }
    dend_12 { pt3dadd( -50.8105, -110.25, 15.4572, 0.81 ) }
    dend_12 { pt3dadd( -51.0507, -111.241, 15.4087, 0.29 ) }
    dend_12 { pt3dadd( -51.2585, -112.061, 15.3355, 0.22 ) }
    dend_12 { pt3dadd( -51.4846, -112.92, 15.233, 0.29 ) }
    dend_12 { pt3dadd( -51.6868, -113.669, 15.1228, 0.74 ) }
    dend_12 { pt3dadd( -51.8634, -114.328, 15.0217, 0.52 ) }
    dend_12 { pt3dadd( -52.2811, -115.769, 14.8116, 0.29 ) }
    dend_12 { pt3dadd( -52.736, -117.106, 14.6658, 0.29 ) }
    dend_12 { pt3dadd( -53.2274, -118.319, 14.6205, 0.29 ) }
    dend_12 { pt3dadd( -53.5285, -118.972, 14.6284, 0.29 ) }
    dend_12 { pt3dadd( -53.8471, -119.605, 14.6509, 1.03 ) }
    dend_12 { pt3dadd( -54.1726, -120.216, 14.676, 1.7 ) }
    dend_12 { pt3dadd( -54.7459, -121.284, 14.7271, 1.4 ) }
    dend_12 { pt3dadd( -55.6064, -122.886, 14.8201, 0.44 ) }
    dend_12 { pt3dadd( -56.1132, -123.796, 14.8971, 0.15 ) }
    dend_12 { pt3dadd( -56.34, -124.194, 14.9355, 0.37 ) }
    dend_12 { pt3dadd( -56.7056, -124.83, 14.9885, 0.59 ) }
    dend_12 { pt3dadd( -57.0538, -125.457, 15.0218, 0.59 ) }
    dend_12 { pt3dadd( -57.6957, -126.636, 15.0384, 0.22 ) }
    dend_12 { pt3dadd( -58.1929, -127.513, 15.021, 0.22 ) }
    dend_12 { pt3dadd( -58.5707, -128.16, 15.007, 0.22 ) }
    dend_12 { pt3dadd( -58.8683, -128.68, 14.991, 0.88 ) }
    dend_12 { pt3dadd( -59.1512, -129.206, 14.9951, 1.47 ) }
    dend_12 { pt3dadd( -59.5458, -129.985, 15.0131, 1.84 ) }
    dend_12 { pt3dadd( -60.6406, -132.281, 15.1019, 0.22 ) }
    dend_12 { pt3dadd( -60.8025, -132.639, 15.1129, 0.22 ) }
    dend_12 { pt3dadd( -61.0138, -133.118, 15.1334, 0.22 ) }
    dend_12 { pt3dadd( -61.5078, -134.18, 15.1756, 0.22 ) }
    dend_12 { pt3dadd( -61.8529, -134.847, 15.1993, 0.22 ) }
    dend_12 { pt3dadd( -62.1482, -135.358, 15.2051, 0.74 ) }
    dend_12 { pt3dadd( -62.7003, -136.262, 15.1702, 1.33 ) }
    dend_12 { pt3dadd( -63.4182, -137.344, 15.1023, 0.22 ) }
    dend_12 { pt3dadd( -63.8532, -137.954, 15.0496, 0.22 ) }
    dend_12 { pt3dadd( -64.3353, -138.64, 14.9986, 0.22 ) }
    dend_12 { pt3dadd( -64.6755, -139.197, 15.0091, 0.15 ) }
    dend_12 { pt3dadd( -64.9065, -139.65, 15.0607, 0.15 ) }
    dend_12 { pt3dadd( -65.2154, -140.307, 15.2132, 0.37 ) }
    dend_12 { pt3dadd( -65.3558, -140.632, 15.3164, 0.96 ) }
    dend_12 { pt3dadd( -65.8635, -141.852, 15.78, 2.14 ) }
    dend_12 { pt3dadd( -66.4681, -143.269, 16.3841, 0.66 ) }
    dend_12 { pt3dadd( -66.93, -144.242, 16.8566, 0.15 ) }
    dend_12 { pt3dadd( -67.3813, -145.064, 17.3141, 0.15 ) }
    dend_12 { pt3dadd( -67.6763, -145.54, 17.6115, 0.44 ) }
    dend_12 { pt3dadd( -67.9683, -145.976, 17.9005, 1.03 ) }
    dend_12 { pt3dadd( -68.4633, -146.682, 18.3744, 1.55 ) }
    dend_12 { pt3dadd( -69.0744, -147.555, 18.9785, 0.44 ) }
    dend_12 { pt3dadd( -69.4731, -148.171, 19.349, 0.22 ) }
    dend_12 { pt3dadd( -69.7502, -148.663, 19.5941, 0.22 ) }
    dend_12 { pt3dadd( -70.1568, -149.434, 19.9189, 0.22 ) }
    dend_12 { pt3dadd( -70.5351, -150.171, 20.1762, 0.29 ) }
    dend_12 { pt3dadd( -70.9684, -151.021, 20.4041, 0.29 ) }
    dend_12 { pt3dadd( -71.5175, -152.093, 20.6097, 0.15 ) }
    dend_12 { pt3dadd( -71.9382, -152.887, 20.7187, 0.22 ) }
    dend_12 { pt3dadd( -72.3974, -153.704, 20.7648, 0.88 ) }
    dend_12 { pt3dadd( -73.0742, -154.849, 20.7313, 0.74 ) }
    dend_12 { pt3dadd( -73.5375, -155.584, 20.6492, 0.88 ) }
    dend_12 { pt3dadd( -74.0225, -156.339, 20.5038, 1.77 ) }
    dend_12 { pt3dadd( -74.5678, -157.193, 20.2729, 2.29 ) }
    dend_12 { pt3dadd( -75.3667, -158.504, 19.81, 0.07 ) }
    dend_12 { pt3dadd( -75.8219, -159.305, 19.4545, 0.15 ) }
    dend_12 { pt3dadd( -76.0836, -159.81, 19.1782, 0.15 ) }
    dend_12 { pt3dadd( -76.2128, -160.091, 19.0096, 0.15 ) }
    dend_12 { pt3dadd( -76.402, -160.638, 18.6775, 0.15 ) }
    dend_12 { pt3dadd( -76.4836, -161.073, 18.4392, 0.15 ) }
    dend_12 { pt3dadd( -76.5648, -161.852, 18.1111, 0.15 ) }
    dend_12 { pt3dadd( -76.5874, -162.143, 18.0107, 0.15 ) }
    dend_12 { pt3dadd( -76.6433, -162.967, 17.7635, 0.66 ) }
    dend_12 { pt3dadd( -76.7753, -164.467, 17.3632, 0.29 ) }
    dend_12 { pt3dadd( -76.8904, -165.444, 17.1429, 0.22 ) }
    dend_12 { pt3dadd( -77.0119, -166.338, 16.9754, 0.22 ) }
    dend_12 { pt3dadd( -77.1529, -167.114, 16.8638, 0.22 ) }
    dend_12 { pt3dadd( -77.2663, -167.508, 16.8232, 0.59 ) }
    dend_12 { pt3dadd( -77.4383, -167.882, 16.8033, 0.74 ) }
    dend_12 { pt3dadd( -77.6929, -168.245, 16.8262, 0.37 ) }
    dend_12 { pt3dadd( -78.0815, -168.673, 16.904, 0.15 ) }
    dend_12 { pt3dadd( -78.8975, -169.468, 17.1131, 0.15 ) }
    dend_12 { pt3dadd( -79.3638, -169.883, 17.2458, 0.22 ) }
    dend_12 { pt3dadd( -79.8403, -170.305, 17.3836, 0.29 ) }
    dend_12 { pt3dadd( -80.3274, -170.755, 17.542, 0.22 ) }
    dend_12 { pt3dadd( -80.9409, -171.381, 17.7614, 0.22 ) }
    dend_12 { pt3dadd( -81.6035, -172.148, 18.02, 0.29 ) }
    dend_12 { pt3dadd( -82.0488, -172.733, 18.215, 0.29 ) }
    dend_12 { pt3dadd( -82.6128, -173.462, 18.4559, 0.22 ) }
    dend_12 { pt3dadd( -83.0945, -174.033, 18.6402, 0.37 ) }
    dend_12 { pt3dadd( -83.5752, -174.571, 18.7969, 0.74 ) }
    dend_12 { pt3dadd( -83.9237, -174.957, 18.9033, 1.03 ) }
    dend_12 { pt3dadd( -84.617, -175.736, 19.1138, 0.22 ) }
    dend_12 { pt3dadd( -85.2363, -176.468, 19.2981, 0.22 ) }
    dend_12 { pt3dadd( -85.7731, -177.113, 19.4412, 0.15 ) }
    dend_12 { pt3dadd( -86.1792, -177.623, 19.5317, 0.15 ) }
    dend_12 { pt3dadd( -86.4629, -178.013, 19.5918, 0.15 ) }
    dend_12 { pt3dadd( -86.8969, -178.7, 19.6623, 0.22 ) }
    dend_12 { pt3dadd( -87.4754, -179.752, 19.7245, 0.29 ) }
    dend_12 { pt3dadd( -87.9086, -180.692, 19.7609, 0.74 ) }
    dend_12 { pt3dadd( -88.3269, -181.76, 19.8113, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_12 { pt3dadd( -88.6269, -182.602, 19.8569, 0.37 ) }
    dend_12 { pt3dadd( -88.9216, -183.503, 19.9096, 0.37 ) }
    dend_12 { pt3dadd( -89.1351, -184.196, 19.9696, 1.4 ) }
    dend_12 { pt3dadd( -89.4478, -185.191, 20.0791, 2.95 ) }
    dend_12 { pt3dadd( -89.9341, -186.581, 20.274, 1.18 ) }
    dend_12 { pt3dadd( -90.379, -187.659, 20.4567, 0.22 ) }
    dend_12 { pt3dadd( -90.9435, -188.905, 20.7127, 0.29 ) }
    dend_12 { pt3dadd( -91.3739, -189.827, 20.9235, 0.74 ) }
    dend_12 { pt3dadd( -91.7013, -190.51, 21.0806, 1.33 ) }
    dend_12 { pt3dadd( -92.2631, -191.54, 21.312, 0.81 ) }
    dend_12 { pt3dadd( -92.7729, -192.384, 21.4465, 1.18 ) }
    dend_12 { pt3dadd( -93.6051, -193.78, 21.5857, 0.66 ) }
    dend_12 { pt3dadd( -94.1028, -194.699, 21.6257, 0.29 ) }
    dend_12 { pt3dadd( -94.2835, -195.06, 21.6268, 0.44 ) }
    dend_12 { pt3dadd( -94.9688, -196.567, 21.6016, 0.29 ) }
    dend_12 { pt3dadd( -95.4501, -197.696, 21.5483, 0.81 ) }
    dend_12 { pt3dadd( -96.1527, -199.321, 21.3997, 0.22 ) }
    dend_12 { pt3dadd( -96.5292, -200.057, 21.2735, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 56.3685, -8.75137, -16.0506, 0.15 ) }
    dend_9 { pt3dadd( 62.5168, -12.9111, -17.7615, 0.15 ) }
    dend_9 { pt3dadd( 68.3564, -17.5016, -19.3267, 0.15 ) }
    dend_9 { pt3dadd( 74.2096, -21.7106, -21.7963, 0.15 ) }
    dend_9 { pt3dadd( 80.3756, -25.9052, -23.3351, 0.15 ) }
    dend_9 { pt3dadd( 86.7873, -29.0788, -26.1096, 0.15 ) }
    dend_9 { pt3dadd( 93.0827, -32.2943, -29.0924, 0.15 ) }
    dend_9 { pt3dadd( 99.0792, -36.3717, -31.4568, 0.15 ) }
    dend_9 { pt3dadd( 104.013, -41.5, -34.0211, 0.15 ) }
    dend_9 { pt3dadd( 109.96, -45.953, -35.6214, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 28/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 56.3685, -8.75137, -16.0506, 0.59 ) }
    dend_8 { pt3dadd( 64.3542, -13.8812, -17.2949, 0.15 ) }
    dend_8 { pt3dadd( 72.1757, -19.1635, -18.84, 0.15 ) }
    dend_8 { pt3dadd( 80.131, -24.4443, -19.3756, 0.15 ) }
    dend_8 { pt3dadd( 88.1308, -29.6881, -19.4068, 0.15 ) }
    dend_8 { pt3dadd( 96.304, -34.5194, -20.7538, 0.15 ) }
    dend_8 { pt3dadd( 104.159, -39.7096, -22.4669, 0.15 ) }
    dend_8 { pt3dadd( 111.354, -45.7338, -24.0506, 0.15 ) }
    dend_8 { pt3dadd( 118.106, -51.9303, -26.5707, 0.15 ) }
    dend_8 { pt3dadd( 124.102, -58.7568, -29.1989, 0.15 ) }
    dend_8 { pt3dadd( 129.16, -66.5092, -30.7206, 0.15 ) }
    dend_8 { pt3dadd( 135.166, -73.6081, -32.3248, 0.15 ) }
    dend_8 { pt3dadd( 141.22, -80.358, -35.0381, 0.15 ) }
    dend_8 { pt3dadd( 146.869, -87.1514, -38.4236, 0.15 ) }
    dend_8 { pt3dadd( 153.867, -92.7336, -41.74, 0.15 ) }
    dend_8 { pt3dadd( 162.534, -96.6361, -43.3172, 0.15 ) }
    dend_8 { pt3dadd( 171.172, -100.711, -44.528, 0.15 ) }
    dend_8 { pt3dadd( 180.38, -103.324, -45.9806, 0.15 ) }
    dend_8 { pt3dadd( 189.387, -106.58, -47.2455, 0.15 ) }
    dend_8 { pt3dadd( 198.754, -108.085, -49.3047, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 62.9515, -20.5606, -22.7293, 0.15 ) }
    dend_6 { pt3dadd( 68.6517, -27.3522, -26.7531, 0.15 ) }
    dend_6 { pt3dadd( 73.8822, -34.8206, -30.0096, 0.15 ) }
    dend_6 { pt3dadd( 79.3936, -41.6822, -34.1644, 0.15 ) }
    dend_6 { pt3dadd( 83.2645, -50.1153, -36.6092, 0.15 ) }
    dend_6 { pt3dadd( 86.8063, -58.9393, -37.5236, 0.15 ) }
    dend_6 { pt3dadd( 90.2788, -67.6735, -39.2952, 0.15 ) }
    dend_6 { pt3dadd( 94.833, -75.4641, -42.7319, 0.15 ) }
    dend_6 { pt3dadd( 100.636, -82.9098, -44.8708, 0.15 ) }
    dend_6 { pt3dadd( 105.204, -91.2032, -46.4826, 0.15 ) }
    dend_6 { pt3dadd( 110.876, -98.9577, -47.3734, 0.15 ) }
    dend_6 { pt3dadd( 115.949, -107.057, -48.4713, 0.15 ) }
    dend_6 { pt3dadd( 120.61, -115.118, -50.9241, 0.15 ) }
    dend_6 { pt3dadd( 123.393, -123.782, -53.9089, 0.15 ) }
    dend_6 { pt3dadd( 126.792, -132.488, -55.9644, 0.15 ) }
    dend_6 { pt3dadd( 131.952, -140.565, -56.7957, 0.15 ) }
    dend_6 { pt3dadd( 136.595, -148.535, -59.59, 0.15 ) }
    dend_6 { pt3dadd( 142.517, -155.888, -61.7575, 0.15 ) }
    dend_6 { pt3dadd( 148.018, -163.709, -63.0202, 0.15 ) }
    dend_6 { pt3dadd( 153.22, -171.369, -65.7868, 0.15 ) }
    dend_6 { pt3dadd( 158.494, -179.216, -67.6961, 0.15 ) }
    dend_6 { pt3dadd( 162.994, -187.08, -71.0156, 0.15 ) }
    dend_6 { pt3dadd( 167.036, -195.456, -73.3983, 0.15 ) }
    dend_6 { pt3dadd( 170.829, -204.158, -74.5664, 0.15 ) }
    dend_6 { pt3dadd( 174.368, -212.666, -77.2246, 0.15 ) }
    dend_6 { pt3dadd( 178.429, -221.026, -79.6385, 0.15 ) }
    dend_6 { pt3dadd( 181.311, -229.973, -81.2886, 0.15 ) }
    dend_6 { pt3dadd( 184.685, -238.895, -81.4036, 0.15 ) }
    dend_6 { pt3dadd( 189.456, -247.065, -79.7605, 0.15 ) }
    dend_6 { pt3dadd( 195.047, -254.382, -76.7998, 0.15 ) }
    dend_6 { pt3dadd( 201.466, -260.857, -73.3822, 0.15 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 62.9515, -20.5606, -22.7293, 0.59 ) }
    dend_3 { pt3dadd( 71.657, -28.388, -23.9695, 0.15 ) }
    dend_3 { pt3dadd( 81.781, -34.4778, -25.2434, 0.15 ) }
    dend_3 { pt3dadd( 92.1295, -40.2794, -26.1393, 0.15 ) }
    dend_3 { pt3dadd( 100.775, -47.8443, -28.8166, 0.15 ) }
    dend_3 { pt3dadd( 108.487, -56.0589, -32.1583, 0.15 ) }
    dend_3 { pt3dadd( 117.039, -63.3678, -35.7744, 0.15 ) }
    dend_3 { pt3dadd( 126.488, -69.5125, -39.552, 0.15 ) }
    dend_3 { pt3dadd( 136.806, -74.5047, -42.909, 0.15 ) }
    dend_3 { pt3dadd( 147.376, -79.7638, -44.6037, 0.15 ) }
    dend_3 { pt3dadd( 157.355, -86.144, -45.2923, 0.15 ) }
    dend_3 { pt3dadd( 167.575, -92.0441, -43.8689, 0.15 ) }
    dend_3 { pt3dadd( 176.451, -99.3253, -41.1494, 0.15 ) }
    dend_3 { pt3dadd( 183.7, -107.504, -36.8925, 0.15 ) }
    dend_3 { pt3dadd( 188.76, -115.892, -30.4813, 0.15 ) }
    dend_3 { pt3dadd( 194.179, -124.564, -24.8248, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 95/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -96.0016, -130.805, -26.6638, 0.15 ) }
    dend_56 { pt3dadd( -100.3, -135.339, -27.1851, 0.15 ) }
    dend_56 { pt3dadd( -104.249, -139.908, -28.8647, 0.15 ) }
    dend_56 { pt3dadd( -108.504, -144.405, -29.8716, 0.15 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 99/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -96.0016, -130.805, -26.6638, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_55 { pt3dadd( -103.288, -138.831, -27.2083, 0.15 ) }
    dend_55 { pt3dadd( -108.97, -147.943, -26.4976, 0.15 ) }
    dend_55 { pt3dadd( -115.373, -156.554, -25.2524, 0.15 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 3/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -50.2819, -132.025, -140.255, 0.15 ) }
    dend_52 { pt3dadd( -53.1222, -140.042, -146.856, 0.15 ) }
    dend_52 { pt3dadd( -56.2434, -148.867, -152.073, 0.15 ) }
    dend_52 { pt3dadd( -58.6253, -157.21, -158.401, 0.15 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 7/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -50.2819, -132.025, -140.255, 0.59 ) }
    dend_51 { pt3dadd( -52.4263, -141.0, -149.351, 0.15 ) }
    dend_51 { pt3dadd( -51.8344, -150.181, -158.414, 0.15 ) }
    dend_51 { pt3dadd( -53.0888, -159.398, -167.396, 0.15 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 11/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 7.93449, -149.223, 39.831, 0.15 ) }
    dend_45 { pt3dadd( 8.69392, -149.86, 39.8627, 0.15 ) }
    dend_45 { pt3dadd( 9.04391, -150.154, 39.8772, 0.37 ) }
    dend_45 { pt3dadd( 9.63068, -150.646, 39.9017, 1.18 ) }
    dend_45 { pt3dadd( 10.0577, -151.004, 39.9195, 0.88 ) }
    dend_45 { pt3dadd( 10.808, -151.633, 39.9508, 0.22 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 7.93449, -149.223, 39.831, 0.22 ) }
    dend_44 { pt3dadd( 7.97602, -149.784, 39.698, 0.22 ) }
    dend_44 { pt3dadd( 8.00105, -150.201, 39.5807, 0.81 ) }
    dend_44 { pt3dadd( 8.01214, -150.605, 39.4673, 1.18 ) }
    dend_44 { pt3dadd( 7.99178, -151.217, 39.3069, 0.22 ) }
    dend_44 { pt3dadd( 7.92543, -151.734, 39.1852, 0.22 ) }
    dend_44 { pt3dadd( 7.8219, -152.244, 39.0764, 0.29 ) }
    dend_44 { pt3dadd( 7.68592, -152.723, 38.9864, 0.66 ) }
    dend_44 { pt3dadd( 7.50227, -153.203, 38.9159, 0.81 ) }
    dend_44 { pt3dadd( 7.26103, -153.72, 38.8641, 0.22 ) }
    dend_44 { pt3dadd( 6.89982, -154.388, 38.8359, 0.22 ) }
    dend_44 { pt3dadd( 6.71671, -154.716, 38.8418, 0.29 ) }
    dend_44 { pt3dadd( 6.53858, -155.045, 38.8601, 0.96 ) }
    dend_44 { pt3dadd( 6.37641, -155.368, 38.8912, 1.7 ) }
    dend_44 { pt3dadd( 6.06728, -156.081, 38.9856, 0.52 ) }
    dend_44 { pt3dadd( 5.8443, -156.724, 39.0967, 0.22 ) }
    dend_44 { pt3dadd( 5.75619, -157.063, 39.1699, 0.15 ) }
    dend_44 { pt3dadd( 5.64408, -157.605, 39.311, 0.22 ) }
    dend_44 { pt3dadd( 5.56123, -158.081, 39.4311, 0.15 ) }
    dend_44 { pt3dadd( 5.49571, -158.486, 39.5321, 0.15 ) }
    dend_44 { pt3dadd( 5.4525, -158.762, 39.5979, 0.15 ) }
    dend_44 { pt3dadd( 5.40876, -159.071, 39.6627, 0.37 ) }
    dend_44 { pt3dadd( 5.3488, -159.471, 39.7205, 0.59 ) }
    dend_44 { pt3dadd( 5.22462, -160.211, 39.7674, 0.07 ) }
    dend_44 { pt3dadd( 5.14097, -160.63, 39.7624, 0.07 ) }
    dend_44 { pt3dadd( 5.04459, -161.088, 39.737, 0.15 ) }
    dend_44 { pt3dadd( 4.98138, -161.402, 39.7126, 0.66 ) }
    dend_44 { pt3dadd( 4.90769, -161.79, 39.6806, 0.74 ) }
    dend_44 { pt3dadd( 4.79562, -162.443, 39.6383, 0.15 ) }
    dend_44 { pt3dadd( 4.73038, -162.862, 39.6309, 0.22 ) }
    dend_44 { pt3dadd( 4.67943, -163.204, 39.6294, 0.15 ) }
    dend_44 { pt3dadd( 4.626, -163.499, 39.6327, 0.81 ) }
    dend_44 { pt3dadd( 4.55574, -163.811, 39.6422, 0.66 ) }
    dend_44 { pt3dadd( 4.41199, -164.335, 39.6561, 0.15 ) }
    dend_44 { pt3dadd( 4.28027, -164.753, 39.6576, 0.22 ) }
    dend_44 { pt3dadd( 4.10027, -165.273, 39.6495, 0.52 ) }
    dend_44 { pt3dadd( 3.92441, -165.688, 39.6463, 0.59 ) }
    dend_44 { pt3dadd( 3.67981, -166.231, 39.668, 0.07 ) }
    dend_44 { pt3dadd( 3.48381, -166.66, 39.7018, 0.22 ) }
    dend_44 { pt3dadd( 3.4116, -166.815, 39.7156, 0.22 ) }
    dend_44 { pt3dadd( 3.24585, -167.168, 39.7522, 0.96 ) }
    dend_44 { pt3dadd( 2.92695, -167.836, 39.8367, 0.07 ) }
    dend_44 { pt3dadd( 2.6645, -168.419, 39.9438, 0.07 ) }
    dend_44 { pt3dadd( 2.54944, -168.687, 40.0213, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 61/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -10.0361, -208.817, 34.0604, 0.15 ) }
    dend_41 { pt3dadd( -9.67291, -217.792, 35.7595, 0.15 ) }
    dend_41 { pt3dadd( -10.3183, -226.72, 37.6205, 0.15 ) }
    dend_41 { pt3dadd( -10.8646, -235.614, 39.68, 0.15 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 65/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -10.0361, -208.817, 34.0604, 0.59 ) }
    dend_40 { pt3dadd( -10.9185, -219.742, 36.3866, 0.15 ) }
    dend_40 { pt3dadd( -12.5295, -230.82, 36.2215, 0.15 ) }
    dend_40 { pt3dadd( -15.3781, -241.452, 38.5024, 0.15 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 69/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 17.2053, 40.6087, -7.01552, 0.52 ) }
    dend_32 { pt3dadd( 17.9996, 41.7415, -8.10879, 0.52 ) }
    dend_32 { pt3dadd( 18.8224, 42.3337, -9.43115, 0.37 ) }
    dend_32 { pt3dadd( 19.4295, 42.5833, -10.3828, 0.37 ) }
    dend_32 { pt3dadd( 19.7385, 42.6996, -10.8798, 0.52 ) }
    dend_32 { pt3dadd( 20.296, 42.9661, -11.8293, 0.52 ) }
    dend_32 { pt3dadd( 21.1251, 43.4782, -13.34, 0.44 ) }
    dend_32 { pt3dadd( 21.4955, 43.7248, -14.1222, 0.44 ) }
    dend_32 { pt3dadd( 21.901, 44.0701, -14.9943, 0.66 ) }
    dend_32 { pt3dadd( 22.2622, 44.4815, -15.6757, 0.66 ) }
    dend_32 { pt3dadd( 22.7362, 45.1611, -16.4154, 0.88 ) }
    dend_32 { pt3dadd( 23.0632, 45.7093, -16.7906, 1.03 ) }
    dend_32 { pt3dadd( 23.7991, 46.9795, -17.3499, 0.52 ) }
    dend_32 { pt3dadd( 24.3897, 47.9645, -17.6842, 0.52 ) }
    dend_32 { pt3dadd( 24.9218, 48.8082, -17.925, 0.52 ) }
    dend_32 { pt3dadd( 25.4289, 49.5371, -18.1136, 0.52 ) }
    dend_32 { pt3dadd( 26.2837, 50.6969, -18.4401, 0.22 ) }
    dend_32 { pt3dadd( 27.1117, 51.7691, -18.7403, 0.44 ) }
    dend_32 { pt3dadd( 27.9382, 52.83, -19.0278, 0.74 ) }
    dend_32 { pt3dadd( 28.7954, 54.0211, -19.3543, 1.18 ) }
    dend_32 { pt3dadd( 29.3876, 54.9171, -19.6216, 0.88 ) }
    dend_32 { pt3dadd( 30.3133, 56.3537, -20.1146, 0.29 ) }
    dend_32 { pt3dadd( 37.728, 66.2337, -24.3436, 0.29 ) }
    dend_32 { pt3dadd( 45.1013, 75.8485, -29.2744, 0.29 ) }
    dend_32 { pt3dadd( 52.4456, 86.1995, -32.1353, 0.29 ) }
    dend_32 { pt3dadd( 60.6763, 96.2428, -33.1478, 0.29 ) }
    dend_32 { pt3dadd( 68.4992, 106.601, -33.7679, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 96/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 17.2053, 40.6087, -7.01552, 0.88 ) }
    dend_25 { pt3dadd( 18.5216, 41.3865, -6.88452, 0.88 ) }
    dend_25 { pt3dadd( 19.4073, 41.8943, -6.84956, 0.81 ) }
    dend_25 { pt3dadd( 20.4286, 42.5014, -6.90644, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_25 { pt3dadd( 21.48, 43.1476, -7.06279, 1.33 ) }
    dend_25 { pt3dadd( 22.6899, 43.9414, -7.31689, 1.33 ) }
    dend_25 { pt3dadd( 23.3863, 44.4159, -7.47752, 1.33 ) }
    dend_25 { pt3dadd( 24.1454, 44.9862, -7.68629, 1.33 ) }
    dend_25 { pt3dadd( 25.0803, 45.7251, -7.99056, 1.18 ) }
    dend_25 { pt3dadd( 25.9585, 46.4343, -8.30937, 1.03 ) }
    dend_25 { pt3dadd( 26.7424, 47.0456, -8.58963, 0.88 ) }
    dend_25 { pt3dadd( 27.7195, 47.8065, -8.91498, 1.4 ) }
    dend_25 { pt3dadd( 28.9185, 48.7627, -9.2664, 0.74 ) }
    dend_25 { pt3dadd( 29.905, 49.5556, -9.5256, 1.25 ) }
    dend_25 { pt3dadd( 30.9756, 50.3972, -9.7956, 1.77 ) }
    dend_25 { pt3dadd( 32.3639, 51.5072, -10.1849, 0.96 ) }
    dend_25 { pt3dadd( 33.4949, 52.4531, -10.57, 0.59 ) }
    dend_25 { pt3dadd( 34.3017, 53.1841, -10.9054, 0.74 ) }
    dend_25 { pt3dadd( 34.8851, 53.7589, -11.1861, 0.96 ) }
    dend_25 { pt3dadd( 35.881, 54.8178, -11.6867, 1.11 ) }
    dend_25 { pt3dadd( 36.5908, 55.6092, -12.0252, 1.4 ) }
    dend_25 { pt3dadd( 37.2332, 56.3375, -12.2967, 1.4 ) }
    dend_25 { pt3dadd( 38.3329, 57.5108, -12.6927, 0.96 ) }
    dend_25 { pt3dadd( 38.8248, 57.9928, -12.8176, 0.96 ) }
    dend_25 { pt3dadd( 39.9098, 58.9466, -12.9563, 1.18 ) }
    dend_25 { pt3dadd( 40.8647, 59.6781, -12.967, 1.18 ) }
    dend_25 { pt3dadd( 41.8985, 60.3752, -12.9376, 1.03 ) }
    dend_25 { pt3dadd( 42.6266, 60.8215, -12.9358, 0.96 ) }
    dend_25 { pt3dadd( 43.6109, 61.3992, -12.9972, 0.81 ) }
    dend_25 { pt3dadd( 44.6746, 62.0273, -13.1556, 0.74 ) }
    dend_25 { pt3dadd( 45.7865, 62.708, -13.4303, 0.96 ) }
    dend_25 { pt3dadd( 46.909, 63.4423, -13.7839, 1.25 ) }
    dend_25 { pt3dadd( 48.1221, 64.2903, -14.2257, 1.55 ) }
    dend_25 { pt3dadd( 49.1416, 65.0734, -14.6341, 0.88 ) }
    dend_25 { pt3dadd( 50.2338, 66.0423, -15.1389, 0.59 ) }
    dend_25 { pt3dadd( 50.8653, 66.6963, -15.4454, 0.81 ) }
    dend_25 { pt3dadd( 51.5111, 67.4841, -15.7575, 0.96 ) }
    dend_25 { pt3dadd( 52.1907, 68.3667, -16.0569, 1.33 ) }
    dend_25 { pt3dadd( 53.1986, 69.7828, -16.4427, 1.55 ) }
    dend_25 { pt3dadd( 54.0357, 71.0694, -16.7453, 1.7 ) }
    dend_25 { pt3dadd( 54.7863, 72.3602, -17.0336, 1.62 ) }
    dend_25 { pt3dadd( 55.5659, 73.8473, -17.3675, 1.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -75.6463, 211.625, -77.532, 0.15 ) }
    dend_23 { pt3dadd( -76.8956, 214.344, -78.7856, 0.15 ) }
    dend_23 { pt3dadd( -77.6729, 217.192, -80.0956, 0.15 ) }
    dend_23 { pt3dadd( -78.9516, 220.035, -80.9507, 0.15 ) }
    dend_23 { pt3dadd( -80.1151, 222.947, -81.7061, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 43/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -75.6463, 211.625, -77.532, 0.59 ) }
    dend_22 { pt3dadd( -80.5721, 220.388, -79.7088, 0.15 ) }
    dend_22 { pt3dadd( -86.2845, 228.681, -81.9998, 0.15 ) }
    dend_22 { pt3dadd( -89.9497, 238.189, -82.6406, 0.15 ) }
    dend_22 { pt3dadd( -92.4032, 247.959, -84.1788, 0.15 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 48/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -18.4622, 20.4369, 13.1999, 0.81 ) }
    dend_17 { pt3dadd( -16.8537, 21.1536, 13.8586, 0.81 ) }
    dend_17 { pt3dadd( -15.9516, 21.636, 14.1614, 0.44 ) }
    dend_17 { pt3dadd( -14.6504, 22.4977, 14.628, 0.59 ) }
    dend_17 { pt3dadd( -13.5982, 23.2845, 15.0622, 0.59 ) }
    dend_17 { pt3dadd( -12.7276, 23.9735, 15.4554, 0.88 ) }
    dend_17 { pt3dadd( -12.0663, 24.5136, 15.7744, 1.11 ) }
    dend_17 { pt3dadd( -11.2441, 25.1947, 16.0497, 1.11 ) }
    dend_17 { pt3dadd( -10.4836, 26.0303, 16.3157, 0.29 ) }
    dend_17 { pt3dadd( -10.3298, 26.5637, 16.5169, 0.29 ) }
    dend_17 { pt3dadd( -10.5477, 26.9985, 16.7788, 0.29 ) }
    dend_17 { pt3dadd( -10.7327, 27.2258, 16.9455, 0.29 ) }
    dend_17 { pt3dadd( -10.9179, 27.4833, 17.1865, 0.29 ) }
    dend_17 { pt3dadd( -11.132, 27.9188, 17.7172, 0.59 ) }
    dend_17 { pt3dadd( -11.1823, 28.3164, 18.2905, 1.11 ) }
    dend_17 { pt3dadd( -11.1303, 28.929, 19.2738, 1.84 ) }
    dend_17 { pt3dadd( -11.0178, 29.4075, 20.1471, 1.84 ) }
    dend_17 { pt3dadd( -10.821, 29.9903, 21.3022, 0.96 ) }
    dend_17 { pt3dadd( -10.6576, 30.3656, 22.128, 0.74 ) }
    dend_17 { pt3dadd( -10.4545, 30.7779, 23.0208, 0.74 ) }
    dend_17 { pt3dadd( -10.2604, 31.2739, 24.0235, 0.74 ) }
    dend_17 { pt3dadd( -10.1609, 31.6935, 24.7904, 1.11 ) }
    dend_17 { pt3dadd( -10.0734, 32.2552, 25.625, 1.47 ) }
    dend_17 { pt3dadd( -9.98507, 32.8669, 26.4043, 1.47 ) }
    dend_17 { pt3dadd( -9.85069, 33.7075, 27.3656, 0.74 ) }
    dend_17 { pt3dadd( -9.65938, 34.836, 28.5693, 0.52 ) }
    dend_17 { pt3dadd( -9.54218, 35.4528, 29.2095, 0.52 ) }
    dend_17 { pt3dadd( -9.37765, 36.2976, 30.126, 0.37 ) }
    dend_17 { pt3dadd( -9.19731, 36.9246, 30.9506, 0.37 ) }
    dend_17 { pt3dadd( -9.08901, 37.0697, 31.3411, 0.37 ) }
    dend_17 { pt3dadd( -8.93851, 37.0853, 31.8644, 0.37 ) }
    dend_17 { pt3dadd( -8.82512, 37.0521, 32.2595, 0.37 ) }
    dend_17 { pt3dadd( -8.65272, 37.0127, 33.2716, 0.37 ) }
    dend_17 { pt3dadd( -8.65393, 37.0793, 34.0809, 0.37 ) }
    dend_17 { pt3dadd( -8.75025, 37.3845, 35.2102, 0.37 ) }
    dend_17 { pt3dadd( -8.85658, 37.7005, 35.9751, 0.37 ) }
    dend_17 { pt3dadd( -9.01902, 38.1, 36.7481, 0.59 ) }
    dend_17 { pt3dadd( -9.22831, 38.5845, 37.5296, 0.88 ) }
    dend_17 { pt3dadd( -9.64746, 39.5534, 38.7838, 0.88 ) }
    dend_17 { pt3dadd( -10.0418, 40.3988, 39.7317, 0.59 ) }
    dend_17 { pt3dadd( -10.5608, 41.4843, 40.7931, 0.59 ) }
    dend_17 { pt3dadd( -10.8501, 42.1744, 41.3941, 0.29 ) }
    dend_17 { pt3dadd( -11.0999, 42.9289, 41.9742, 0.29 ) }
    dend_17 { pt3dadd( -11.3147, 43.8157, 42.5762, 0.29 ) }
    dend_17 { pt3dadd( -11.4224, 44.4802, 42.9778, 0.96 ) }
    dend_17 { pt3dadd( -11.4746, 45.1319, 43.3723, 1.84 ) }
    dend_17 { pt3dadd( -11.5003, 46.1351, 43.9627, 0.37 ) }
    dend_17 { pt3dadd( -11.5294, 46.9087, 44.4423, 0.81 ) }
    dend_17 { pt3dadd( -11.6308, 47.8206, 45.0735, 1.55 ) }
    dend_17 { pt3dadd( -11.8062, 48.7259, 45.8038, 0.22 ) }
    dend_17 { pt3dadd( -11.9757, 49.4044, 46.3859, 0.22 ) }
    dend_17 { pt3dadd( -12.1125, 49.881, 46.834, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_17 { pt3dadd( -12.2309, 50.4824, 47.3956, 0.29 ) }
    dend_17 { pt3dadd( -12.2667, 51.0664, 47.8967, 0.29 ) }
    dend_17 { pt3dadd( -12.2277, 51.7479, 48.4421, 0.59 ) }
    dend_17 { pt3dadd( -12.0765, 52.7496, 49.237, 1.77 ) }
    dend_17 { pt3dadd( -11.9298, 53.4602, 49.7946, 2.14 ) }
    dend_17 { pt3dadd( -11.5613, 54.781, 50.8165, 0.29 ) }
    dend_17 { pt3dadd( -11.3474, 55.4078, 51.2856, 0.29 ) }
    dend_17 { pt3dadd( -11.1357, 56.0176, 51.7292, 0.29 ) }
    dend_17 { pt3dadd( -11.005, 56.3621, 51.9821, 0.29 ) }
    dend_17 { pt3dadd( -10.8164, 56.8358, 52.3679, 0.88 ) }
    dend_17 { pt3dadd( -10.5736, 57.4147, 52.8926, 1.62 ) }
    dend_17 { pt3dadd( -10.3534, 57.8784, 53.3742, 1.62 ) }
    dend_17 { pt3dadd( -10.0266, 58.479, 53.9875, 2.21 ) }
    dend_17 { pt3dadd( -9.12189, 59.9039, 55.3981, 0.22 ) }
    dend_17 { pt3dadd( -8.718, 60.4812, 55.9504, 0.22 ) }
    dend_17 { pt3dadd( -8.42876, 60.8657, 56.3177, 0.22 ) }
    dend_17 { pt3dadd( -8.12087, 61.2537, 56.6782, 0.22 ) }
    dend_17 { pt3dadd( -7.51798, 61.9749, 57.3154, 0.44 ) }
    dend_17 { pt3dadd( -6.78058, 62.7685, 57.9749, 0.66 ) }
    dend_17 { pt3dadd( -6.66301, 62.9003, 58.0708, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -18.4622, 20.4369, 13.1999, 0.96 ) }
    dend_14 { pt3dadd( -17.8463, 19.7242, 13.7592, 0.96 ) }
    dend_14 { pt3dadd( -17.1882, 18.9793, 14.3225, 0.37 ) }
    dend_14 { pt3dadd( -17.016, 18.6856, 14.5077, 0.29 ) }
    dend_14 { pt3dadd( -16.7957, 18.1134, 14.8061, 0.22 ) }
    dend_14 { pt3dadd( -16.7066, 17.7189, 15.0076, 0.22 ) }
    dend_14 { pt3dadd( -16.6267, 17.0946, 15.327, 0.52 ) }
    dend_14 { pt3dadd( -16.6022, 16.3275, 15.7215, 0.74 ) }
    dend_14 { pt3dadd( -16.7331, 15.2443, 16.2612, 0.52 ) }
    dend_14 { pt3dadd( -16.8743, 14.4506, 16.6456, 1.11 ) }
    dend_14 { pt3dadd( -17.1036, 13.2357, 17.2334, 1.62 ) }
    dend_14 { pt3dadd( -17.3014, 12.1555, 17.7433, 1.33 ) }
    dend_14 { pt3dadd( -17.5452, 10.6329, 18.4502, 1.11 ) }
    dend_14 { pt3dadd( -17.8386, 8.55212, 19.4082, 0.44 ) }
    dend_14 { pt3dadd( -17.9749, 7.45281, 19.9029, 0.44 ) }
    dend_14 { pt3dadd( -18.1184, 6.31032, 20.3995, 0.44 ) }
    dend_14 { pt3dadd( -18.241, 5.39297, 20.7699, 0.96 ) }
    dend_14 { pt3dadd( -18.4282, 4.06578, 21.2937, 1.47 ) }
    dend_14 { pt3dadd( -18.6887, 2.52499, 21.8904, 1.7 ) }
    dend_14 { pt3dadd( -19.0474, 0.814624, 22.5806, 1.7 ) }
    dend_14 { pt3dadd( -19.4925, -0.700737, 23.2453, 1.7 ) }
    dend_14 { pt3dadd( -20.0218, -2.1104, 23.908, 0.59 ) }
    dend_14 { pt3dadd( -20.5891, -3.40753, 24.5744, 0.44 ) }
    dend_14 { pt3dadd( -21.146, -4.55511, 25.2225, 0.44 ) }
    dend_14 { pt3dadd( -21.479, -5.21224, 25.6512, 0.44 ) }
    dend_14 { pt3dadd( -21.9508, -6.17276, 26.4068, 0.44 ) }
    dend_14 { pt3dadd( -22.0791, -6.49749, 26.7156, 0.44 ) }
    dend_14 { pt3dadd( -22.1352, -6.90526, 27.1163, 0.44 ) }
    dend_14 { pt3dadd( -22.0866, -7.5419, 27.6872, 0.44 ) }
    dend_14 { pt3dadd( -22.0392, -7.96767, 28.0417, 0.88 ) }
    dend_14 { pt3dadd( -21.9892, -8.99413, 28.8206, 1.4 ) }
    dend_14 { pt3dadd( -22.03, -9.71079, 29.3418, 1.4 ) }
    dend_14 { pt3dadd( -22.2561, -10.8763, 30.1757, 0.66 ) }
    dend_14 { pt3dadd( -22.5202, -11.7447, 30.7802, 0.22 ) }
    dend_14 { pt3dadd( -22.8298, -12.5952, 31.384, 0.22 ) }
    dend_14 { pt3dadd( -23.0124, -13.0815, 31.7418, 1.03 ) }
    dend_14 { pt3dadd( -23.3144, -13.9131, 32.3701, 2.36 ) }
    dend_14 { pt3dadd( -23.6152, -14.8769, 33.1234, 2.65 ) }
    dend_14 { pt3dadd( -24.0167, -16.5766, 34.532, 0.81 ) }
    dend_14 { pt3dadd( -24.0724, -17.5193, 35.2841, 0.22 ) }
    dend_14 { pt3dadd( -24.0285, -17.9761, 35.6381, 0.22 ) }
    dend_14 { pt3dadd( -23.9403, -18.4089, 35.9736, 0.66 ) }
    dend_14 { pt3dadd( -23.7778, -18.9373, 36.3887, 0.66 ) }
    dend_14 { pt3dadd( -23.6464, -19.2619, 36.6571, 0.66 ) }
    dend_14 { pt3dadd( -23.2015, -20.1392, 37.4469, 0.22 ) }
    dend_14 { pt3dadd( -23.0219, -20.5922, 37.8557, 0.22 ) }
    dend_14 { pt3dadd( -22.9748, -20.8025, 38.0594, 0.22 ) }
    dend_14 { pt3dadd( -22.9675, -21.1563, 38.4266, 0.22 ) }
    dend_14 { pt3dadd( -23.0414, -21.6444, 38.9307, 0.22 ) }
    dend_14 { pt3dadd( -23.1099, -21.8545, 39.1395, 0.22 ) }
    dend_14 { pt3dadd( -23.3583, -22.3619, 39.6135, 0.22 ) }
    dend_14 { pt3dadd( -23.5243, -22.668, 39.8532, 0.29 ) }
    dend_14 { pt3dadd( -23.9717, -23.4745, 40.3949, 0.29 ) }
    dend_14 { pt3dadd( -24.1825, -23.9024, 40.6471, 0.59 ) }
    dend_14 { pt3dadd( -24.5196, -24.7004, 41.072, 0.88 ) }
    dend_14 { pt3dadd( -24.7864, -25.4941, 41.4799, 0.66 ) }
    dend_14 { pt3dadd( -24.9916, -26.5161, 41.99, 0.22 ) }
    dend_14 { pt3dadd( -25.017, -26.999, 42.2389, 0.22 ) }
    dend_14 { pt3dadd( -24.9557, -28.1748, 42.8975, 0.59 ) }
    dend_14 { pt3dadd( -24.8292, -29.1514, 43.4835, 1.03 ) }
    dend_14 { pt3dadd( -24.6687, -30.1135, 44.0818, 1.62 ) }
    dend_14 { pt3dadd( -24.4513, -31.4, 44.9249, 0.59 ) }
    dend_14 { pt3dadd( -24.2795, -32.7218, 45.7913, 0.22 ) }
    dend_14 { pt3dadd( -24.2267, -33.6443, 46.4063, 0.52 ) }
    dend_14 { pt3dadd( -24.2535, -34.1916, 46.7904, 1.25 ) }
    dend_14 { pt3dadd( -24.401, -35.0888, 47.4676, 2.14 ) }
    dend_14 { pt3dadd( -24.6456, -35.9053, 48.1163, 1.33 ) }
    dend_14 { pt3dadd( -25.0983, -36.9682, 49.0477, 0.52 ) }
    dend_14 { pt3dadd( -25.3666, -37.5587, 49.602, 0.22 ) }
    dend_14 { pt3dadd( -25.6284, -38.2152, 50.2534, 0.44 ) }
    dend_14 { pt3dadd( -25.7975, -38.7332, 50.81, 0.44 ) }
    dend_14 { pt3dadd( -25.8973, -39.2682, 51.3782, 0.22 ) }
    dend_14 { pt3dadd( -25.9515, -39.8046, 51.8501, 0.22 ) }
    dend_14 { pt3dadd( -26.0018, -40.4853, 52.3748, 0.22 ) }
    dend_14 { pt3dadd( -26.0412, -40.9782, 52.6879, 0.52 ) }
    dend_14 { pt3dadd( -26.1165, -41.6848, 53.0681, 0.74 ) }
    dend_14 { pt3dadd( -26.3399, -42.8318, 53.6814, 0.81 ) }
    dend_14 { pt3dadd( -26.6835, -43.8104, 54.3274, 0.22 ) }
    dend_14 { pt3dadd( -27.0372, -44.3722, 54.8247, 0.22 ) }
    dend_14 { pt3dadd( -27.2343, -44.5933, 55.0908, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( -27.5324, -44.9179, 55.5388, 0.66 ) }
    dend_14 { pt3dadd( -28.0145, -45.4566, 56.382, 1.33 ) }
    dend_14 { pt3dadd( -28.3778, -45.9245, 57.1424, 1.55 ) }
    dend_14 { pt3dadd( -28.6929, -46.4815, 57.9552, 0.88 ) }
    dend_14 { pt3dadd( -29.0596, -47.2679, 58.8858, 0.15 ) }
    dend_14 { pt3dadd( -29.4345, -48.1032, 59.7695, 0.29 ) }
    dend_14 { pt3dadd( -29.6337, -48.573, 60.2205, 0.88 ) }
    dend_14 { pt3dadd( -29.8518, -49.0725, 60.631, 1.25 ) }
    dend_14 { pt3dadd( -30.0979, -49.6151, 61.0452, 1.33 ) }
    dend_14 { pt3dadd( -30.7728, -51.0421, 62.1193, 0.22 ) }
    dend_14 { pt3dadd( -31.0708, -51.675, 62.5914, 0.74 ) }
    dend_14 { pt3dadd( -31.3516, -52.2795, 63.0445, 1.25 ) }
    dend_14 { pt3dadd( -31.7704, -53.3291, 63.7976, 0.44 ) }
    dend_14 { pt3dadd( -31.9363, -54.12, 64.3355, 0.22 ) }
    dend_14 { pt3dadd( -31.9484, -54.5943, 64.6288, 0.22 ) }
    dend_14 { pt3dadd( -31.8611, -55.2654, 64.9806, 0.96 ) }
    dend_14 { pt3dadd( -31.7764, -55.6945, 65.1922, 1.55 ) }
    dend_14 { pt3dadd( -31.5727, -56.5637, 65.6119, 1.33 ) }
    dend_14 { pt3dadd( -31.0755, -58.5386, 66.5981, 0.15 ) }
    dend_14 { pt3dadd( -30.9755, -59.016, 66.8367, 0.37 ) }
    dend_14 { pt3dadd( -30.8402, -59.9068, 67.3065, 0.15 ) }
    dend_14 { pt3dadd( -30.7855, -60.655, 67.7538, 0.15 ) }
    dend_14 { pt3dadd( -30.7893, -61.3337, 68.2106, 0.52 ) }
    dend_14 { pt3dadd( -30.8526, -62.0568, 68.7457, 1.18 ) }
    dend_14 { pt3dadd( -31.0041, -62.9249, 69.4484, 2.06 ) }
    dend_14 { pt3dadd( -31.2194, -64.0262, 70.3834, 0.96 ) }
    dend_14 { pt3dadd( -31.4583, -65.1542, 71.3741, 0.22 ) }
    dend_14 { pt3dadd( -31.65, -65.9558, 72.0798, 0.22 ) }
    dend_14 { pt3dadd( -31.8916, -66.8987, 72.9281, 0.22 ) }
    dend_14 { pt3dadd( -32.0498, -67.5037, 73.4787, 0.22 ) }
    dend_14 { pt3dadd( -32.2825, -68.3975, 74.3318, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 31/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 194.179, -124.564, -24.8248, 0.15 ) }
    dend_5 { pt3dadd( 201.754, -131.012, -25.3317, 0.15 ) }
    dend_5 { pt3dadd( 208.52, -138.239, -25.3417, 0.15 ) }
    dend_5 { pt3dadd( 215.519, -145.245, -25.9356, 0.15 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 35/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 194.179, -124.564, -24.8248, 0.59 ) }
    dend_4 { pt3dadd( 202.515, -130.971, -24.6533, 0.15 ) }
    dend_4 { pt3dadd( 210.651, -137.472, -23.2018, 0.15 ) }
    dend_4 { pt3dadd( 216.985, -145.647, -22.2174, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 68.4992, 106.601, -33.7679, 0.15 ) }
    dend_34 { pt3dadd( 72.7834, 111.604, -37.5803, 0.15 ) }
    dend_34 { pt3dadd( 75.4887, 117.195, -41.8764, 0.15 ) }
    dend_34 { pt3dadd( 76.5203, 122.861, -46.7295, 0.15 ) }
    dend_34 { pt3dadd( 76.4933, 128.735, -51.4052, 0.15 ) }
    dend_34 { pt3dadd( 75.3982, 134.072, -56.6218, 0.15 ) }
    dend_34 { pt3dadd( 75.3353, 139.315, -62.0611, 0.15 ) }
    dend_34 { pt3dadd( 75.6309, 144.792, -67.2346, 0.15 ) }
    dend_34 { pt3dadd( 75.8389, 150.227, -72.4597, 0.15 ) }
    dend_34 { pt3dadd( 76.3039, 156.409, -76.6595, 0.15 ) }
    dend_34 { pt3dadd( 75.4819, 163.207, -79.5477, 0.15 ) }
    dend_34 { pt3dadd( 75.9503, 170.475, -80.9151, 0.15 ) }
    dend_34 { pt3dadd( 77.3398, 177.713, -81.8155, 0.15 ) }
    dend_34 { pt3dadd( 77.7834, 185.105, -81.3897, 0.15 ) }
    dend_34 { pt3dadd( 78.8839, 192.409, -80.5276, 0.15 ) }
    dend_34 { pt3dadd( 80.6822, 199.624, -80.1783, 0.15 ) }
    dend_34 { pt3dadd( 81.0097, 207.017, -80.5168, 0.15 ) }
    dend_34 { pt3dadd( 81.1271, 214.34, -81.6083, 0.15 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 57/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 68.4992, 106.601, -33.7679, 0.59 ) }
    dend_33 { pt3dadd( 75.3406, 113.254, -31.9937, 0.15 ) }
    dend_33 { pt3dadd( 81.5688, 120.22, -29.4798, 0.15 ) }
    dend_33 { pt3dadd( 88.4753, 125.933, -25.6214, 0.15 ) }
    dend_33 { pt3dadd( 93.9838, 132.34, -20.8503, 0.15 ) }
    dend_33 { pt3dadd( 100.251, 137.674, -15.5751, 0.15 ) }
    dend_33 { pt3dadd( 105.954, 143.551, -10.3052, 0.15 ) }
    dend_33 { pt3dadd( 110.849, 149.817, -4.73272, 0.15 ) }
    dend_33 { pt3dadd( 117.524, 155.646, -0.669284, 0.15 ) }
    dend_33 { pt3dadd( 124.129, 161.411, 3.60171, 0.15 ) }
    dend_33 { pt3dadd( 129.972, 168.014, 7.62993, 0.15 ) }
    dend_33 { pt3dadd( 134.677, 175.448, 11.5414, 0.15 ) }
    dend_33 { pt3dadd( 140.862, 181.542, 15.9284, 0.15 ) }
    dend_33 { pt3dadd( 148.316, 185.63, 20.9032, 0.15 ) }
    dend_33 { pt3dadd( 156.399, 189.054, 25.4431, 0.15 ) }
    dend_33 { pt3dadd( 164.599, 192.775, 29.4895, 0.15 ) }
    dend_33 { pt3dadd( 172.658, 197.822, 31.8983, 0.15 ) }
    dend_33 { pt3dadd( 181.448, 202.171, 32.883, 0.15 ) }
    dend_33 { pt3dadd( 189.697, 207.305, 34.2443, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 55.5659, 73.8473, -17.3675, 0.66 ) }
    dend_27 { pt3dadd( 56.2191, 75.26, -17.671, 0.66 ) }
    dend_27 { pt3dadd( 56.5854, 75.9903, -17.8638, 0.66 ) }
    dend_27 { pt3dadd( 57.0334, 76.8672, -18.1079, 0.44 ) }
    dend_27 { pt3dadd( 57.3655, 77.5028, -18.2722, 0.37 ) }
    dend_27 { pt3dadd( 57.8112, 78.3447, -18.4593, 0.37 ) }
    dend_27 { pt3dadd( 58.2195, 79.0923, -18.5867, 0.37 ) }
    dend_27 { pt3dadd( 58.4334, 79.4469, -18.6371, 0.59 ) }
    dend_27 { pt3dadd( 58.8143, 80.1015, -18.6968, 1.11 ) }
    dend_27 { pt3dadd( 59.3647, 81.1692, -18.7258, 0.37 ) }
    dend_27 { pt3dadd( 59.7726, 82.0203, -18.6445, 0.59 ) }
    dend_27 { pt3dadd( 60.2416, 83.0605, -18.4389, 0.37 ) }
    dend_27 { pt3dadd( 60.7115, 84.0813, -18.1725, 0.44 ) }
    dend_27 { pt3dadd( 60.9855, 84.6353, -18.016, 0.22 ) }
    dend_27 { pt3dadd( 61.264, 85.1274, -17.8787, 0.22 ) }
    dend_27 { pt3dadd( 62.0927, 86.4074, -17.5555, 0.22 ) }
    dend_27 { pt3dadd( 62.5972, 87.0773, -17.4329, 0.22 ) }
    dend_27 { pt3dadd( 62.8992, 87.4178, -17.4069, 0.44 ) }
    dend_27 { pt3dadd( 63.416, 87.9161, -17.4367, 0.66 ) }
    dend_27 { pt3dadd( 64.2195, 88.6075, -17.5887, 0.22 ) }
    dend_27 { pt3dadd( 64.5699, 88.8866, -17.6934, 0.22 ) }
    dend_27 { pt3dadd( 65.0212, 89.2254, -17.8653, 0.66 ) }
    dend_27 { pt3dadd( 65.4103, 89.5017, -18.0058, 1.03 ) }
    dend_27 { pt3dadd( 66.3028, 90.1369, -18.316, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_27 { pt3dadd( 67.0643, 90.7032, -18.5708, 0.66 ) }
    dend_27 { pt3dadd( 67.5318, 91.0657, -18.7137, 0.81 ) }
    dend_27 { pt3dadd( 68.5922, 91.898, -19.0198, 1.03 ) }
    dend_27 { pt3dadd( 69.4052, 92.5355, -19.2437, 0.74 ) }
    dend_27 { pt3dadd( 70.2133, 93.1576, -19.4536, 0.37 ) }
    dend_27 { pt3dadd( 70.8078, 93.586, -19.6073, 0.37 ) }
    dend_27 { pt3dadd( 71.3114, 93.9409, -19.7395, 0.29 ) }
    dend_27 { pt3dadd( 71.8358, 94.3066, -19.8814, 0.29 ) }
    dend_27 { pt3dadd( 72.2691, 94.6113, -20.0078, 0.66 ) }
    dend_27 { pt3dadd( 72.9112, 95.0494, -20.185, 1.25 ) }
    dend_27 { pt3dadd( 74.0585, 95.8132, -20.5032, 0.29 ) }
    dend_27 { pt3dadd( 74.4066, 96.047, -20.6042, 0.29 ) }
    dend_27 { pt3dadd( 75.1287, 96.565, -20.8239, 0.88 ) }
    dend_27 { pt3dadd( 75.8174, 97.1037, -21.0342, 0.52 ) }
    dend_27 { pt3dadd( 76.3757, 97.5741, -21.2076, 1.11 ) }
    dend_27 { pt3dadd( 77.1397, 98.2602, -21.4522, 0.66 ) }
    dend_27 { pt3dadd( 77.8641, 98.9285, -21.6703, 0.29 ) }
    dend_27 { pt3dadd( 78.3906, 99.395, -21.8287, 0.59 ) }
    dend_27 { pt3dadd( 79.339, 100.172, -22.1234, 0.22 ) }
    dend_27 { pt3dadd( 79.7842, 100.503, -22.2659, 0.59 ) }
    dend_27 { pt3dadd( 80.403, 100.929, -22.4726, 1.18 ) }
    dend_27 { pt3dadd( 81.1795, 101.412, -22.7285, 0.22 ) }
    dend_27 { pt3dadd( 81.7019, 101.716, -22.9004, 0.22 ) }
    dend_27 { pt3dadd( 82.1409, 101.968, -23.0457, 0.22 ) }
    dend_27 { pt3dadd( 82.6218, 102.257, -23.1887, 0.22 ) }
    dend_27 { pt3dadd( 82.9463, 102.494, -23.2748, 0.22 ) }
    dend_27 { pt3dadd( 83.3164, 102.839, -23.3617, 0.37 ) }
    dend_27 { pt3dadd( 83.8643, 103.476, -23.4654, 0.37 ) }
    dend_27 { pt3dadd( 84.2262, 103.951, -23.5129, 0.22 ) }
    dend_27 { pt3dadd( 84.6422, 104.536, -23.5417, 0.52 ) }
    dend_27 { pt3dadd( 85.2102, 105.337, -23.5432, 0.52 ) }
    dend_27 { pt3dadd( 85.6031, 105.855, -23.533, 0.96 ) }
    dend_27 { pt3dadd( 86.0115, 106.336, -23.5224, 1.77 ) }
    dend_27 { pt3dadd( 86.4798, 106.829, -23.5164, 1.77 ) }
    dend_27 { pt3dadd( 87.1502, 107.5, -23.5203, 0.22 ) }
    dend_27 { pt3dadd( 87.63, 107.969, -23.5367, 0.22 ) }
    dend_27 { pt3dadd( 88.096, 108.387, -23.5599, 0.22 ) }
    dend_27 { pt3dadd( 88.5681, 108.799, -23.598, 0.22 ) }
    dend_27 { pt3dadd( 88.9974, 109.175, -23.6577, 0.22 ) }
    dend_27 { pt3dadd( 89.4965, 109.648, -23.7484, 0.22 ) }
    dend_27 { pt3dadd( 90.0053, 110.179, -23.8737, 0.22 ) }
    dend_27 { pt3dadd( 90.2625, 110.471, -23.9416, 0.66 ) }
    dend_27 { pt3dadd( 90.6431, 110.917, -24.0399, 0.81 ) }
    dend_27 { pt3dadd( 91.2109, 111.579, -24.1672, 0.22 ) }
    dend_27 { pt3dadd( 91.6708, 112.082, -24.2535, 0.22 ) }
    dend_27 { pt3dadd( 92.0647, 112.522, -24.3094, 0.74 ) }
    dend_27 { pt3dadd( 92.5353, 113.105, -24.354, 0.88 ) }
    dend_27 { pt3dadd( 92.8061, 113.476, -24.3632, 1.11 ) }
    dend_27 { pt3dadd( 93.4241, 114.399, -24.3259, 1.11 ) }
    dend_27 { pt3dadd( 93.9471, 115.269, -24.245, 0.37 ) }
    dend_27 { pt3dadd( 94.5129, 116.249, -24.1117, 0.22 ) }
    dend_27 { pt3dadd( 94.8599, 116.862, -24.0002, 0.29 ) }
    dend_27 { pt3dadd( 95.1809, 117.419, -23.8747, 0.29 ) }
    dend_27 { pt3dadd( 95.5285, 117.973, -23.7303, 0.37 ) }
    dend_27 { pt3dadd( 95.9201, 118.458, -23.592, 0.37 ) }
    dend_27 { pt3dadd( 96.2772, 118.756, -23.5, 0.22 ) }
    dend_27 { pt3dadd( 96.7402, 119.019, -23.4247, 0.22 ) }
    dend_27 { pt3dadd( 97.4313, 119.334, -23.3446, 0.22 ) }
    dend_27 { pt3dadd( 98.1038, 119.605, -23.2983, 0.29 ) }
    dend_27 { pt3dadd( 99.0984, 119.987, -23.249, 0.22 ) }
    dend_27 { pt3dadd( 99.6911, 120.229, -23.2241, 1.4 ) }
    dend_27 { pt3dadd( 100.318, 120.527, -23.1886, 2.21 ) }
    dend_27 { pt3dadd( 100.76, 120.789, -23.1356, 1.7 ) }
    dend_27 { pt3dadd( 101.341, 121.202, -23.0047, 0.96 ) }
    dend_27 { pt3dadd( 102.019, 121.713, -22.7766, 0.96 ) }
    dend_27 { pt3dadd( 102.415, 122.004, -22.6159, 1.47 ) }
    dend_27 { pt3dadd( 102.844, 122.294, -22.4383, 1.47 ) }
    dend_27 { pt3dadd( 103.704, 122.834, -22.0922, 0.22 ) }
    dend_27 { pt3dadd( 104.252, 123.168, -21.8936, 0.22 ) }
    dend_27 { pt3dadd( 104.822, 123.532, -21.7072, 0.22 ) }
    dend_27 { pt3dadd( 105.374, 123.907, -21.5666, 0.22 ) }
    dend_27 { pt3dadd( 105.839, 124.229, -21.4804, 0.22 ) }
    dend_27 { pt3dadd( 106.179, 124.486, -21.4535, 0.88 ) }
    dend_27 { pt3dadd( 106.68, 124.894, -21.4627, 1.99 ) }
    dend_27 { pt3dadd( 107.374, 125.504, -21.5304, 1.55 ) }
    dend_27 { pt3dadd( 108.173, 126.276, -21.6545, 0.22 ) }
    dend_27 { pt3dadd( 108.751, 126.856, -21.7565, 0.22 ) }
    dend_27 { pt3dadd( 109.52, 127.605, -21.9126, 0.29 ) }
    dend_27 { pt3dadd( 109.995, 128.053, -22.0209, 0.59 ) }
    dend_27 { pt3dadd( 110.729, 128.702, -22.2426, 0.96 ) }
    dend_27 { pt3dadd( 111.575, 129.396, -22.5595, 0.15 ) }
    dend_27 { pt3dadd( 112.285, 129.936, -22.8482, 1.18 ) }
    dend_27 { pt3dadd( 113.198, 130.597, -23.2324, 1.18 ) }
    dend_27 { pt3dadd( 113.977, 131.134, -23.563, 1.4 ) }
    dend_27 { pt3dadd( 115.102, 131.879, -24.0456, 0.22 ) }
    dend_27 { pt3dadd( 115.612, 132.22, -24.2671, 0.37 ) }
    dend_27 { pt3dadd( 116.155, 132.595, -24.4898, 1.03 ) }
    dend_27 { pt3dadd( 116.402, 132.781, -24.5807, 0.88 ) }
    dend_27 { pt3dadd( 116.757, 133.058, -24.6797, 0.74 ) }
    dend_27 { pt3dadd( 117.268, 133.451, -24.7819, 0.96 ) }
    dend_27 { pt3dadd( 117.992, 134.063, -24.8443, 0.22 ) }
    dend_27 { pt3dadd( 118.641, 134.646, -24.8972, 0.96 ) }
    dend_27 { pt3dadd( 118.982, 134.952, -24.942, 0.74 ) }
    dend_27 { pt3dadd( 119.581, 135.453, -25.0235, 0.22 ) }
    dend_27 { pt3dadd( 120.178, 135.934, -25.1065, 0.29 ) }
    dend_27 { pt3dadd( 121.063, 136.629, -25.2373, 0.29 ) }
    dend_27 { pt3dadd( 121.672, 137.091, -25.3488, 0.29 ) }
    dend_27 { pt3dadd( 122.607, 137.805, -25.5657, 0.22 ) }
    dend_27 { pt3dadd( 123.068, 138.165, -25.6864, 0.66 ) }
    dend_27 { pt3dadd( 123.448, 138.483, -25.7887, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_27 { pt3dadd( 123.687, 138.682, -25.8596, 1.55 ) }
    dend_27 { pt3dadd( 124.566, 139.397, -26.1583, 0.15 ) }
    dend_27 { pt3dadd( 125.25, 139.989, -26.3961, 0.15 ) }
    dend_27 { pt3dadd( 125.827, 140.531, -26.6054, 0.15 ) }
    dend_27 { pt3dadd( 126.3, 141.018, -26.8095, 0.15 ) }
    dend_27 { pt3dadd( 126.727, 141.487, -27.0018, 0.15 ) }
    dend_27 { pt3dadd( 127.062, 141.884, -27.1392, 0.88 ) }
    dend_27 { pt3dadd( 127.476, 142.413, -27.2952, 1.18 ) }
    dend_27 { pt3dadd( 127.972, 143.094, -27.4656, 1.18 ) }
    dend_27 { pt3dadd( 128.686, 144.081, -27.7057, 0.22 ) }
    dend_27 { pt3dadd( 129.448, 145.102, -27.9595, 0.22 ) }
    dend_27 { pt3dadd( 129.92, 145.761, -28.1079, 1.18 ) }
    dend_27 { pt3dadd( 130.149, 146.08, -28.1747, 1.92 ) }
    dend_27 { pt3dadd( 130.529, 146.612, -28.2703, 1.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 55.5659, 73.8473, -17.3675, 0.44 ) }
    dend_26 { pt3dadd( 56.1941, 74.0596, -17.472, 0.44 ) }
    dend_26 { pt3dadd( 56.8645, 74.2915, -17.5754, 0.44 ) }
    dend_26 { pt3dadd( 57.2015, 74.3894, -17.6174, 0.96 ) }
    dend_26 { pt3dadd( 57.9624, 74.5661, -17.6906, 1.7 ) }
    dend_26 { pt3dadd( 58.6393, 74.7074, -17.7498, 1.99 ) }
    dend_26 { pt3dadd( 59.6569, 74.9005, -17.8444, 1.11 ) }
    dend_26 { pt3dadd( 60.3411, 75.0115, -17.9264, 0.37 ) }
    dend_26 { pt3dadd( 60.9685, 75.1016, -18.0375, 0.37 ) }
    dend_26 { pt3dadd( 61.7333, 75.2053, -18.2124, 0.37 ) }
    dend_26 { pt3dadd( 62.2076, 75.2737, -18.3617, 0.37 ) }
    dend_26 { pt3dadd( 62.6536, 75.3425, -18.5359, 0.44 ) }
    dend_26 { pt3dadd( 63.2948, 75.4402, -18.8322, 0.96 ) }
    dend_26 { pt3dadd( 64.0935, 75.5622, -19.2515, 1.62 ) }
    dend_26 { pt3dadd( 64.8899, 75.7015, -19.6656, 1.18 ) }
    dend_26 { pt3dadd( 65.9545, 75.9086, -20.18, 0.29 ) }
    dend_26 { pt3dadd( 66.513, 76.0149, -20.4105, 0.44 ) }
    dend_26 { pt3dadd( 66.9368, 76.0938, -20.5497, 0.59 ) }
    dend_26 { pt3dadd( 67.6068, 76.2091, -20.7209, 0.29 ) }
    dend_26 { pt3dadd( 68.5197, 76.3727, -20.8956, 0.29 ) }
    dend_26 { pt3dadd( 69.5709, 76.5892, -21.0484, 0.59 ) }
    dend_26 { pt3dadd( 70.2923, 76.7868, -21.1342, 1.03 ) }
    dend_26 { pt3dadd( 71.153, 77.0909, -21.233, 1.7 ) }
    dend_26 { pt3dadd( 71.9641, 77.4296, -21.3267, 1.7 ) }
    dend_26 { pt3dadd( 72.9383, 77.8538, -21.4377, 0.96 ) }
    dend_26 { pt3dadd( 73.5229, 78.098, -21.5183, 1.33 ) }
    dend_26 { pt3dadd( 74.6212, 78.5454, -21.6766, 1.62 ) }
    dend_26 { pt3dadd( 75.4928, 78.9018, -21.8247, 0.52 ) }
    dend_26 { pt3dadd( 76.1649, 79.1769, -21.949, 0.22 ) }
    dend_26 { pt3dadd( 76.8831, 79.4728, -22.0927, 0.22 ) }
    dend_26 { pt3dadd( 77.7866, 79.8335, -22.3035, 0.22 ) }
    dend_26 { pt3dadd( 78.4696, 80.1253, -22.4913, 0.74 ) }
    dend_26 { pt3dadd( 79.0813, 80.4271, -22.6885, 1.33 ) }
    dend_26 { pt3dadd( 79.61, 80.7597, -22.8905, 1.77 ) }
    dend_26 { pt3dadd( 80.3766, 81.3615, -23.2251, 0.44 ) }
    dend_26 { pt3dadd( 81.0698, 82.0201, -23.5556, 0.22 ) }
    dend_26 { pt3dadd( 81.612, 82.586, -23.8208, 0.66 ) }
    dend_26 { pt3dadd( 82.0401, 83.0203, -24.0272, 0.29 ) }
    dend_26 { pt3dadd( 82.4191, 83.3759, -24.1987, 0.29 ) }
    dend_26 { pt3dadd( 82.6644, 83.5684, -24.2987, 0.22 ) }
    dend_26 { pt3dadd( 83.0082, 83.7909, -24.4146, 0.22 ) }
    dend_26 { pt3dadd( 83.527, 84.0683, -24.5558, 0.52 ) }
    dend_26 { pt3dadd( 84.165, 84.3393, -24.7138, 0.88 ) }
    dend_26 { pt3dadd( 84.7282, 84.5355, -24.8622, 0.88 ) }
    dend_26 { pt3dadd( 85.3761, 84.7496, -25.0432, 0.22 ) }
    dend_26 { pt3dadd( 85.9542, 84.9587, -25.2015, 0.22 ) }
    dend_26 { pt3dadd( 86.2396, 85.0726, -25.28, 0.52 ) }
    dend_26 { pt3dadd( 86.7484, 85.2888, -25.4195, 1.4 ) }
    dend_26 { pt3dadd( 87.4314, 85.5683, -25.6192, 1.18 ) }
    dend_26 { pt3dadd( 88.4823, 85.9732, -25.9448, 0.22 ) }
    dend_26 { pt3dadd( 89.24, 86.26, -26.2133, 0.59 ) }
    dend_26 { pt3dadd( 89.7997, 86.4672, -26.4186, 0.22 ) }
    dend_26 { pt3dadd( 90.4327, 86.7218, -26.6643, 0.88 ) }
    dend_26 { pt3dadd( 91.2349, 87.0966, -26.993, 1.55 ) }
    dend_26 { pt3dadd( 91.5354, 87.2621, -27.129, 1.55 ) }
    dend_26 { pt3dadd( 92.5285, 87.9026, -27.6483, 0.88 ) }
    dend_26 { pt3dadd( 92.9899, 88.2353, -27.9169, 0.44 ) }
    dend_26 { pt3dadd( 93.408, 88.5613, -28.1686, 0.22 ) }
    dend_26 { pt3dadd( 93.8315, 88.8832, -28.4227, 0.22 ) }
    dend_26 { pt3dadd( 94.2776, 89.2145, -28.6858, 0.37 ) }
    dend_26 { pt3dadd( 94.7693, 89.5537, -28.9655, 1.11 ) }
    dend_26 { pt3dadd( 95.4113, 89.9601, -29.309, 1.18 ) }
    dend_26 { pt3dadd( 96.0112, 90.3289, -29.6168, 0.29 ) }
    dend_26 { pt3dadd( 96.843, 90.8229, -30.0239, 0.22 ) }
    dend_26 { pt3dadd( 97.3034, 91.0893, -30.2311, 0.22 ) }
    dend_26 { pt3dadd( 97.7774, 91.3713, -30.4201, 1.11 ) }
    dend_26 { pt3dadd( 98.1189, 91.5898, -30.5338, 1.18 ) }
    dend_26 { pt3dadd( 98.814, 92.0873, -30.7124, 0.29 ) }
    dend_26 { pt3dadd( 99.4684, 92.5553, -30.8279, 0.29 ) }
    dend_26 { pt3dadd( 99.8854, 92.8373, -30.876, 1.03 ) }
    dend_26 { pt3dadd( 100.454, 93.1671, -30.9167, 1.92 ) }
    dend_26 { pt3dadd( 100.854, 93.3686, -30.9549, 1.92 ) }
    dend_26 { pt3dadd( 102.139, 93.9289, -31.1311, 0.15 ) }
    dend_26 { pt3dadd( 102.814, 94.174, -31.2453, 0.15 ) }
    dend_26 { pt3dadd( 103.213, 94.3102, -31.3162, 0.37 ) }
    dend_26 { pt3dadd( 103.779, 94.5063, -31.4239, 1.11 ) }
    dend_26 { pt3dadd( 104.732, 94.8401, -31.6051, 1.47 ) }
    dend_26 { pt3dadd( 105.659, 95.1459, -31.7829, 0.44 ) }
    dend_26 { pt3dadd( 106.636, 95.4448, -31.9707, 0.22 ) }
    dend_26 { pt3dadd( 107.414, 95.6712, -32.1166, 0.74 ) }
    dend_26 { pt3dadd( 108.037, 95.8212, -32.2185, 0.88 ) }
    dend_26 { pt3dadd( 109.117, 95.9551, -32.3728, 0.22 ) }
    dend_26 { pt3dadd( 109.624, 95.9439, -32.4273, 0.22 ) }
    dend_26 { pt3dadd( 110.123, 95.8502, -32.4805, 0.44 ) }
    dend_26 { pt3dadd( 110.611, 95.6982, -32.536, 0.81 ) }
    dend_26 { pt3dadd( 111.205, 95.4737, -32.6062, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_26 { pt3dadd( 112.17, 95.1134, -32.7237, 0.81 ) }
    dend_26 { pt3dadd( 112.956, 94.8459, -32.8096, 0.22 ) }
    dend_26 { pt3dadd( 113.517, 94.7021, -32.8723, 0.22 ) }
    dend_26 { pt3dadd( 113.984, 94.6429, -32.9354, 0.22 ) }
    dend_26 { pt3dadd( 114.887, 94.6552, -33.0773, 0.37 ) }
    dend_26 { pt3dadd( 115.879, 94.798, -33.258, 0.22 ) }
    dend_26 { pt3dadd( 116.239, 94.895, -33.3399, 0.96 ) }
    dend_26 { pt3dadd( 116.883, 95.1305, -33.527, 1.84 ) }
    dend_26 { pt3dadd( 118.092, 95.6683, -33.9684, 0.22 ) }
    dend_26 { pt3dadd( 118.644, 95.9648, -34.2188, 0.22 ) }
    dend_26 { pt3dadd( 118.864, 96.1186, -34.3422, 0.22 ) }
    dend_26 { pt3dadd( 119.251, 96.4708, -34.5923, 0.22 ) }
    dend_26 { pt3dadd( 119.604, 96.8536, -34.8354, 0.44 ) }
    dend_26 { pt3dadd( 120.082, 97.4094, -35.1511, 1.18 ) }
    dend_26 { pt3dadd( 120.501, 97.8781, -35.3955, 1.62 ) }
    dend_26 { pt3dadd( 120.934, 98.3137, -35.6084, 1.7 ) }
    dend_26 { pt3dadd( 121.631, 98.9973, -35.8897, 1.25 ) }
    dend_26 { pt3dadd( 122.549, 99.8414, -36.1909, 0.29 ) }
    dend_26 { pt3dadd( 123.138, 100.305, -36.3523, 1.03 ) }
    dend_26 { pt3dadd( 123.667, 100.659, -36.4915, 1.47 ) }
    dend_26 { pt3dadd( 124.69, 101.236, -36.7466, 0.22 ) }
    dend_26 { pt3dadd( 125.521, 101.636, -36.9557, 0.88 ) }
    dend_26 { pt3dadd( 126.153, 101.906, -37.1157, 0.44 ) }
    dend_26 { pt3dadd( 127.088, 102.302, -37.3643, 0.22 ) }
    dend_26 { pt3dadd( 127.757, 102.615, -37.5463, 0.22 ) }
    dend_26 { pt3dadd( 128.275, 102.887, -37.6884, 1.03 ) }
    dend_26 { pt3dadd( 128.888, 103.249, -37.8489, 1.47 ) }
    dend_26 { pt3dadd( 129.41, 103.613, -37.9883, 1.25 ) }
    dend_26 { pt3dadd( 130.181, 104.264, -38.2155, 0.52 ) }
    dend_26 { pt3dadd( 131.007, 105.065, -38.4862, 0.37 ) }
    dend_26 { pt3dadd( 131.434, 105.49, -38.6448, 1.03 ) }
    dend_26 { pt3dadd( 131.679, 105.73, -38.7565, 1.4 ) }
    dend_26 { pt3dadd( 132.433, 106.433, -39.1511, 0.96 ) }
    dend_26 { pt3dadd( 132.947, 106.856, -39.4543, 0.81 ) }
    dend_26 { pt3dadd( 133.721, 107.42, -39.9451, 0.22 ) }
    dend_26 { pt3dadd( 134.201, 107.72, -40.2602, 0.22 ) }
    dend_26 { pt3dadd( 134.616, 107.946, -40.5133, 0.74 ) }
    dend_26 { pt3dadd( 134.932, 108.109, -40.6879, 0.81 ) }
    dend_26 { pt3dadd( 135.544, 108.442, -40.9872, 0.22 ) }
    dend_26 { pt3dadd( 135.844, 108.633, -41.1231, 0.22 ) }
    dend_26 { pt3dadd( 136.279, 108.954, -41.3336, 0.88 ) }
    dend_26 { pt3dadd( 136.94, 109.507, -41.6589, 1.33 ) }
    dend_26 { pt3dadd( 137.466, 110.012, -41.9443, 1.7 ) }
    dend_26 { pt3dadd( 138.111, 110.713, -42.3251, 1.47 ) }
    dend_26 { pt3dadd( 138.79, 111.545, -42.7615, 0.22 ) }
    dend_26 { pt3dadd( 139.188, 112.073, -43.0323, 0.22 ) }
    dend_26 { pt3dadd( 139.622, 112.735, -43.3639, 0.29 ) }
    dend_26 { pt3dadd( 139.887, 113.254, -43.6028, 0.15 ) }
    dend_26 { pt3dadd( 140.04, 113.658, -43.7682, 0.15 ) }
    dend_26 { pt3dadd( 140.202, 114.27, -43.9865, 0.59 ) }
    dend_26 { pt3dadd( 140.322, 114.869, -44.1794, 0.37 ) }
    dend_26 { pt3dadd( 140.475, 115.673, -44.4552, 0.22 ) }
    dend_26 { pt3dadd( 140.644, 116.524, -44.7857, 0.22 ) }
    dend_26 { pt3dadd( 140.743, 116.939, -44.9634, 1.11 ) }
    dend_26 { pt3dadd( 140.957, 117.778, -45.3661, 0.22 ) }
    dend_26 { pt3dadd( 141.12, 118.397, -45.6945, 0.07 ) }
    dend_26 { pt3dadd( 141.263, 118.988, -46.0056, 0.07 ) }
    dend_26 { pt3dadd( 141.348, 119.352, -46.1779, 0.88 ) }
    dend_26 { pt3dadd( 141.408, 119.657, -46.293, 1.11 ) }
    dend_26 { pt3dadd( 141.476, 120.312, -46.4435, 0.81 ) }
    dend_26 { pt3dadd( 141.492, 121.023, -46.4902, 0.37 ) }
    dend_26 { pt3dadd( 141.479, 122.04, -46.4285, 0.15 ) }
    dend_26 { pt3dadd( 141.461, 122.891, -46.289, 0.15 ) }
    dend_26 { pt3dadd( 141.441, 123.628, -46.1009, 0.15 ) }
    dend_26 { pt3dadd( 141.437, 124.317, -45.8869, 0.59 ) }
    dend_26 { pt3dadd( 141.441, 125.308, -45.5201, 0.29 ) }
    dend_26 { pt3dadd( 141.443, 125.837, -45.2885, 0.66 ) }
    dend_26 { pt3dadd( 141.457, 126.446, -44.9871, 1.47 ) }
    dend_26 { pt3dadd( 141.489, 127.396, -44.4865, 0.22 ) }
    dend_26 { pt3dadd( 141.523, 128.078, -44.1255, 0.15 ) }
    dend_26 { pt3dadd( 141.593, 128.808, -43.7449, 0.15 ) }
    dend_26 { pt3dadd( 141.656, 129.32, -43.4819, 0.44 ) }
    dend_26 { pt3dadd( 141.728, 129.795, -43.261, 0.44 ) }
    dend_26 { pt3dadd( 141.86, 130.518, -42.9469, 0.22 ) }
    dend_26 { pt3dadd( 141.919, 130.839, -42.8216, 0.15 ) }
    dend_26 { pt3dadd( 141.979, 131.513, -42.5641, 0.15 ) }
    dend_26 { pt3dadd( 141.983, 131.775, -42.472, 0.15 ) }
    dend_26 { pt3dadd( 141.934, 132.169, -42.3393, 0.44 ) }
    dend_26 { pt3dadd( 141.867, 132.473, -42.2334, 0.44 ) }
    dend_26 { pt3dadd( 141.656, 133.356, -41.9005, 0.15 ) }
    dend_26 { pt3dadd( 141.533, 133.981, -41.6483, 0.22 ) }
    dend_26 { pt3dadd( 141.463, 134.405, -41.4718, 0.29 ) }
    dend_26 { pt3dadd( 141.438, 135.101, -41.1998, 0.29 ) }
    dend_26 { pt3dadd( 141.497, 135.646, -41.0196, 0.74 ) }
    dend_26 { pt3dadd( 141.666, 136.299, -40.8493, 0.66 ) }
    dend_26 { pt3dadd( 141.891, 136.877, -40.7404, 1.55 ) }
    dend_26 { pt3dadd( 142.036, 137.19, -40.7049, 1.55 ) }
    dend_26 { pt3dadd( 142.548, 138.158, -40.6783, 0.15 ) }
    dend_26 { pt3dadd( 142.954, 138.845, -40.7042, 0.22 ) }
    dend_26 { pt3dadd( 143.356, 139.498, -40.7581, 0.22 ) }
    dend_26 { pt3dadd( 143.617, 139.907, -40.8095, 0.22 ) }
    dend_26 { pt3dadd( 143.988, 140.451, -40.8986, 0.37 ) }
    dend_26 { pt3dadd( 144.743, 141.497, -41.1002, 0.22 ) }
    dend_26 { pt3dadd( 145.407, 142.421, -41.2735, 0.15 ) }
    dend_26 { pt3dadd( 145.709, 142.854, -41.3356, 1.18 ) }
    dend_26 { pt3dadd( 146.061, 143.393, -41.3886, 2.21 ) }
    dend_26 { pt3dadd( 146.184, 143.595, -41.401, 2.21 ) }
    dend_26 { pt3dadd( 146.796, 144.767, -41.4136, 0.22 ) }
    dend_26 { pt3dadd( 147.158, 145.674, -41.378, 0.22 ) }
    dend_26 { pt3dadd( 147.457, 146.677, -41.3278, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_26 { pt3dadd( 147.537, 147.016, -41.3095, 0.66 ) }
    dend_26 { pt3dadd( 147.583, 147.265, -41.3007, 1.25 ) }
    dend_26 { pt3dadd( 147.709, 148.106, -41.2997, 1.62 ) }
    dend_26 { pt3dadd( 147.819, 149.131, -41.3411, 0.22 ) }
    dend_26 { pt3dadd( 147.919, 150.17, -41.4622, 0.22 ) }
    dend_26 { pt3dadd( 147.95, 150.572, -41.5317, 0.37 ) }
    dend_26 { pt3dadd( 148.003, 151.171, -41.6551, 0.88 ) }
    dend_26 { pt3dadd( 148.04, 151.633, -41.7563, 0.88 ) }
    dend_26 { pt3dadd( 148.066, 152.297, -41.9209, 0.22 ) }
    dend_26 { pt3dadd( 148.041, 153.056, -42.1067, 0.15 ) }
    dend_26 { pt3dadd( 147.986, 153.655, -42.2268, 0.15 ) }
    dend_26 { pt3dadd( 147.933, 153.945, -42.323, 0.52 ) }
    dend_26 { pt3dadd( 147.793, 154.561, -42.5719, 0.88 ) }
    dend_26 { pt3dadd( 147.615, 155.268, -42.8889, 0.22 ) }
    dend_26 { pt3dadd( 147.49, 155.759, -43.1394, 0.22 ) }
    dend_26 { pt3dadd( 147.169, 156.947, -43.751, 0.15 ) }
    dend_26 { pt3dadd( 146.69, 158.978, -44.774, 0.22 ) }
    dend_26 { pt3dadd( 146.568, 159.613, -45.0859, 0.44 ) }
    dend_26 { pt3dadd( 146.484, 160.285, -45.3995, 0.22 ) }
    dend_26 { pt3dadd( 146.448, 161.004, -45.7037, 0.29 ) }
    dend_26 { pt3dadd( 146.455, 161.585, -45.9173, 0.22 ) }
    dend_26 { pt3dadd( 146.522, 162.586, -46.2007, 0.15 ) }
    dend_26 { pt3dadd( 146.586, 163.042, -46.2464, 0.15 ) }
    dend_26 { pt3dadd( 146.709, 163.85, -46.322, 0.15 ) }
    dend_26 { pt3dadd( 146.791, 164.283, -46.3554, 0.29 ) }
    dend_26 { pt3dadd( 146.891, 164.712, -46.3684, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 26/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -6.66301, 62.9003, 58.0708, 0.07 ) }
    dend_19 { pt3dadd( -6.86591, 63.5102, 58.1364, 0.07 ) }
    dend_19 { pt3dadd( -7.02977, 64.0789, 58.227, 0.07 ) }
    dend_19 { pt3dadd( -7.26273, 65.1681, 58.4667, 0.07 ) }
    dend_19 { pt3dadd( -7.41102, 66.0861, 58.6679, 0.29 ) }
    dend_19 { pt3dadd( -7.49135, 66.8091, 58.8283, 0.07 ) }
    dend_19 { pt3dadd( -7.55645, 67.9829, 59.0799, 0.07 ) }
    dend_19 { pt3dadd( -7.5445, 68.5647, 59.2124, 0.52 ) }
    dend_19 { pt3dadd( -7.45174, 70.0278, 59.5621, 1.03 ) }
    dend_19 { pt3dadd( -7.3123, 71.614, 59.9789, 0.15 ) }
    dend_19 { pt3dadd( -7.25984, 72.2582, 60.1528, 0.15 ) }
    dend_19 { pt3dadd( -7.21683, 73.0632, 60.3622, 0.15 ) }
    dend_19 { pt3dadd( -7.20164, 73.7973, 60.5232, 0.15 ) }
    dend_19 { pt3dadd( -7.23306, 74.4561, 60.6731, 0.07 ) }
    dend_19 { pt3dadd( -7.29492, 74.9709, 60.8034, 0.07 ) }
    dend_19 { pt3dadd( -7.37819, 75.6327, 60.9863, 0.44 ) }
    dend_19 { pt3dadd( -7.42193, 76.0117, 61.102, 0.74 ) }
    dend_19 { pt3dadd( -7.44269, 76.4324, 61.247, 0.74 ) }
    dend_19 { pt3dadd( -7.38773, 77.8054, 61.7587, 0.15 ) }
    dend_19 { pt3dadd( -7.29764, 78.6373, 62.0776, 0.15 ) }
    dend_19 { pt3dadd( -7.1474, 79.6564, 62.4644, 0.37 ) }
    dend_19 { pt3dadd( -6.98368, 80.6072, 62.8247, 1.7 ) }
    dend_19 { pt3dadd( -6.80456, 81.6564, 63.1997, 1.03 ) }
    dend_19 { pt3dadd( -6.54792, 83.0678, 63.6827, 0.15 ) }
    dend_19 { pt3dadd( -6.29342, 84.3003, 64.1054, 0.15 ) }
    dend_19 { pt3dadd( -6.18812, 84.8048, 64.2732, 0.66 ) }
    dend_19 { pt3dadd( -6.04655, 85.4431, 64.4917, 1.03 ) }
    dend_19 { pt3dadd( -5.77362, 86.5158, 64.8364, 0.15 ) }
    dend_19 { pt3dadd( -5.40577, 87.8018, 65.2369, 0.15 ) }
    dend_19 { pt3dadd( -5.11005, 88.669, 65.5314, 0.15 ) }
    dend_19 { pt3dadd( -4.8437, 89.3632, 65.7697, 0.29 ) }
    dend_19 { pt3dadd( -4.55676, 90.0966, 66.0116, 0.29 ) }
    dend_19 { pt3dadd( -4.32678, 90.788, 66.2173, 0.74 ) }
    dend_19 { pt3dadd( -4.12141, 91.6117, 66.4556, 0.81 ) }
    dend_19 { pt3dadd( -4.02983, 92.181, 66.6103, 0.81 ) }
    dend_19 { pt3dadd( -3.91138, 93.7606, 67.014, 0.15 ) }
    dend_19 { pt3dadd( -3.93331, 94.5684, 67.2537, 0.74 ) }
    dend_19 { pt3dadd( -4.18293, 96.3237, 67.8334, 0.15 ) }
    dend_19 { pt3dadd( -4.43429, 97.1756, 68.1632, 0.15 ) }
    dend_19 { pt3dadd( -4.83354, 97.9227, 68.4943, 0.15 ) }
    dend_19 { pt3dadd( -5.22893, 98.446, 68.7488, 0.29 ) }
    dend_19 { pt3dadd( -6.04041, 99.2451, 69.2072, 0.15 ) }
    dend_19 { pt3dadd( -6.32069, 99.4703, 69.3483, 0.52 ) }
    dend_19 { pt3dadd( -7.29781, 100.101, 69.8352, 1.4 ) }
    dend_19 { pt3dadd( -9.11929, 101.137, 70.7401, 0.15 ) }
    dend_19 { pt3dadd( -9.61843, 101.373, 70.9874, 0.15 ) }
    dend_19 { pt3dadd( -9.86505, 101.467, 71.1228, 0.15 ) }
    dend_19 { pt3dadd( -10.9387, 101.768, 71.7741, 0.81 ) }
    dend_19 { pt3dadd( -12.0992, 101.961, 72.5438, 0.15 ) }
    dend_19 { pt3dadd( -12.5014, 101.972, 72.8346, 0.15 ) }
    dend_19 { pt3dadd( -13.0849, 101.933, 73.264, 1.18 ) }
    dend_19 { pt3dadd( -14.7481, 101.765, 74.4705, 0.07 ) }
    dend_19 { pt3dadd( -15.8416, 101.625, 75.231, 0.07 ) }
    dend_19 { pt3dadd( -16.3534, 101.557, 75.5616, 0.59 ) }
    dend_19 { pt3dadd( -16.8879, 101.509, 75.8695, 1.77 ) }
    dend_19 { pt3dadd( -18.6961, 101.39, 76.8291, 0.07 ) }
    dend_19 { pt3dadd( -19.525, 101.348, 77.2466, 0.07 ) }
    dend_19 { pt3dadd( -20.0726, 101.314, 77.4918, 0.37 ) }
    dend_19 { pt3dadd( -20.6236, 101.287, 77.711, 0.52 ) }
    dend_19 { pt3dadd( -21.8819, 101.207, 78.2118, 0.07 ) }
    dend_19 { pt3dadd( -23.0801, 101.133, 78.6606, 0.07 ) }
    dend_19 { pt3dadd( -23.5724, 101.089, 78.828, 0.07 ) }
    dend_19 { pt3dadd( -23.9772, 101.042, 78.9647, 0.29 ) }
    dend_19 { pt3dadd( -24.8983, 100.888, 79.2895, 0.66 ) }
    dend_19 { pt3dadd( -25.9689, 100.62, 79.696, 0.07 ) }
    dend_19 { pt3dadd( -26.7565, 100.375, 80.0004, 0.29 ) }
    dend_19 { pt3dadd( -27.4606, 100.144, 80.2782, 0.88 ) }
    dend_19 { pt3dadd( -28.9432, 99.6864, 80.9132, 0.15 ) }
    dend_19 { pt3dadd( -29.6986, 99.4615, 81.2681, 0.52 ) }
    dend_19 { pt3dadd( -31.2795, 98.9988, 82.0433, 0.07 ) }
    dend_19 { pt3dadd( -31.7911, 98.8573, 82.2937, 0.59 ) }
    dend_19 { pt3dadd( -32.4885, 98.6664, 82.6435, 1.47 ) }
    dend_19 { pt3dadd( -34.1346, 98.2402, 83.4828, 0.07 ) }
    dend_19 { pt3dadd( -34.7554, 98.0837, 83.8075, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( -35.6979, 97.8478, 84.3073, 0.07 ) }
    dend_19 { pt3dadd( -35.988, 97.7761, 84.457, 0.37 ) }
    dend_19 { pt3dadd( -36.6021, 97.6306, 84.7501, 0.81 ) }
    dend_19 { pt3dadd( -37.7603, 97.3754, 85.2616, 0.07 ) }
    dend_19 { pt3dadd( -38.6845, 97.1893, 85.6171, 0.07 ) }
    dend_19 { pt3dadd( -39.1602, 97.1332, 85.7791, 0.44 ) }
    dend_19 { pt3dadd( -39.6581, 97.1103, 85.9401, 0.88 ) }
    dend_19 { pt3dadd( -41.039, 97.1359, 86.3396, 0.15 ) }
    dend_19 { pt3dadd( -41.7809, 97.1957, 86.5241, 0.37 ) }
    dend_19 { pt3dadd( -42.193, 97.2463, 86.6066, 0.37 ) }
    dend_19 { pt3dadd( -43.8945, 97.447, 86.8782, 0.15 ) }
    dend_19 { pt3dadd( -44.4529, 97.5057, 86.9595, 0.15 ) }
    dend_19 { pt3dadd( -45.2967, 97.6008, 87.0672, 0.37 ) }
    dend_19 { pt3dadd( -46.8175, 97.7574, 87.2246, 0.07 ) }
    dend_19 { pt3dadd( -47.795, 97.8666, 87.3156, 0.29 ) }
    dend_19 { pt3dadd( -48.6805, 97.9756, 87.4017, 0.07 ) }
    dend_19 { pt3dadd( -49.5582, 98.0977, 87.4871, 0.07 ) }
    dend_19 { pt3dadd( -51.4376, 98.3784, 87.6643, 0.07 ) }
    dend_19 { pt3dadd( -53.931, 98.7681, 87.9017, 0.07 ) }
    dend_19 { pt3dadd( -54.734, 98.9061, 87.9782, 0.07 ) }
    dend_19 { pt3dadd( -55.8848, 99.1222, 88.1009, 0.07 ) }
    dend_19 { pt3dadd( -56.5737, 99.2668, 88.1865, 0.59 ) }
    dend_19 { pt3dadd( -57.612, 99.4801, 88.3194, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -6.66301, 62.9003, 58.0708, 0.37 ) }
    dend_18 { pt3dadd( -6.50651, 61.9554, 59.0268, 0.37 ) }
    dend_18 { pt3dadd( -6.33531, 61.3375, 59.6278, 0.37 ) }
    dend_18 { pt3dadd( -6.17714, 60.9223, 60.0297, 0.59 ) }
    dend_18 { pt3dadd( -5.84778, 60.1972, 60.6538, 0.22 ) }
    dend_18 { pt3dadd( -5.59168, 59.649, 61.0708, 0.22 ) }
    dend_18 { pt3dadd( -5.42254, 59.2287, 61.3463, 0.15 ) }
    dend_18 { pt3dadd( -5.27105, 58.8138, 61.6254, 0.15 ) }
    dend_18 { pt3dadd( -5.07578, 58.2251, 61.9665, 0.15 ) }
    dend_18 { pt3dadd( -4.92774, 57.6473, 62.2585, 0.59 ) }
    dend_18 { pt3dadd( -4.87068, 57.2021, 62.4415, 0.88 ) }
    dend_18 { pt3dadd( -4.85071, 56.041, 62.8528, 0.15 ) }
    dend_18 { pt3dadd( -4.92348, 55.198, 63.1655, 0.15 ) }
    dend_18 { pt3dadd( -4.99969, 54.7277, 63.3298, 0.44 ) }
    dend_18 { pt3dadd( -5.10332, 54.2795, 63.4775, 0.81 ) }
    dend_18 { pt3dadd( -5.29044, 53.613, 63.6914, 0.07 ) }
    dend_18 { pt3dadd( -5.53443, 52.798, 63.9267, 0.22 ) }
    dend_18 { pt3dadd( -5.79616, 51.9429, 64.1416, 0.22 ) }
    dend_18 { pt3dadd( -6.15794, 50.7403, 64.4025, 0.07 ) }
    dend_18 { pt3dadd( -6.46678, 49.7498, 64.5956, 0.07 ) }
    dend_18 { pt3dadd( -6.75258, 48.8087, 64.7678, 0.07 ) }
    dend_18 { pt3dadd( -6.90023, 48.2772, 64.8496, 0.29 ) }
    dend_18 { pt3dadd( -7.24596, 46.9836, 65.0324, 0.07 ) }
    dend_18 { pt3dadd( -7.39971, 46.3763, 65.1024, 0.88 ) }
    dend_18 { pt3dadd( -7.59074, 45.6111, 65.1953, 1.25 ) }
    dend_18 { pt3dadd( -7.70357, 45.1101, 65.2541, 1.25 ) }
    dend_18 { pt3dadd( -8.03866, 43.4825, 65.4368, 0.07 ) }
    dend_18 { pt3dadd( -8.25491, 42.4051, 65.5488, 0.07 ) }
    dend_18 { pt3dadd( -8.3712, 41.7977, 65.603, 0.07 ) }
    dend_18 { pt3dadd( -8.43978, 41.4409, 65.6327, 0.52 ) }
    dend_18 { pt3dadd( -8.62818, 40.4872, 65.7001, 0.66 ) }
    dend_18 { pt3dadd( -8.73919, 39.9966, 65.7238, 0.22 ) }
    dend_18 { pt3dadd( -8.89514, 39.3544, 65.7374, 0.52 ) }
    dend_18 { pt3dadd( -9.0378, 38.8199, 65.7299, 0.29 ) }
    dend_18 { pt3dadd( -9.33681, 37.824, 65.7095, 0.07 ) }
    dend_18 { pt3dadd( -9.62493, 36.9691, 65.6859, 0.07 ) }
    dend_18 { pt3dadd( -9.856, 36.3482, 65.673, 0.22 ) }
    dend_18 { pt3dadd( -10.0293, 35.9211, 65.6662, 0.22 ) }
    dend_18 { pt3dadd( -10.5244, 34.7398, 65.6495, 0.07 ) }
    dend_18 { pt3dadd( -10.6601, 34.4325, 65.6457, 0.37 ) }
    dend_18 { pt3dadd( -10.8235, 34.0772, 65.6436, 0.59 ) }
    dend_18 { pt3dadd( -11.2193, 33.252, 65.6461, 0.07 ) }
    dend_18 { pt3dadd( -11.5485, 32.5852, 65.6562, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 66/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -32.2825, -68.3975, 74.3318, 0.15 ) }
    dend_16 { pt3dadd( -33.5195, -68.6446, 74.7778, 0.15 ) }
    dend_16 { pt3dadd( -34.7369, -68.8733, 75.1883, 0.15 ) }
    dend_16 { pt3dadd( -35.8578, -69.0762, 75.5345, 0.15 ) }
    dend_16 { pt3dadd( -37.0107, -69.2813, 75.8767, 0.37 ) }
    dend_16 { pt3dadd( -38.2864, -69.5009, 76.2418, 0.15 ) }
    dend_16 { pt3dadd( -39.5717, -69.7117, 76.5996, 0.07 ) }
    dend_16 { pt3dadd( -40.2198, -69.8172, 76.7832, 0.22 ) }
    dend_16 { pt3dadd( -42.1766, -70.1395, 77.2454, 0.15 ) }
    dend_16 { pt3dadd( -42.3154, -70.1585, 77.2737, 0.59 ) }
    dend_16 { pt3dadd( -43.1977, -70.2648, 77.4515, 1.11 ) }
    dend_16 { pt3dadd( -43.5966, -70.3136, 77.5321, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -32.2825, -68.3975, 74.3318, 0.59 ) }
    dend_15 { pt3dadd( -32.4734, -69.0445, 74.6729, 0.59 ) }
    dend_15 { pt3dadd( -32.6194, -69.5121, 74.9313, 0.96 ) }
    dend_15 { pt3dadd( -32.801, -70.25, 75.3163, 1.47 ) }
    dend_15 { pt3dadd( -32.8907, -70.7512, 75.5525, 1.47 ) }
    dend_15 { pt3dadd( -33.0014, -71.6611, 75.9498, 0.22 ) }
    dend_15 { pt3dadd( -33.0507, -71.9995, 76.1084, 0.15 ) }
    dend_15 { pt3dadd( -33.1211, -72.3124, 76.2861, 0.15 ) }
    dend_15 { pt3dadd( -33.258, -72.8368, 76.6216, 0.15 ) }
    dend_15 { pt3dadd( -33.3834, -73.278, 76.9215, 0.37 ) }
    dend_15 { pt3dadd( -33.5163, -73.7177, 77.2691, 0.37 ) }
    dend_15 { pt3dadd( -33.7544, -74.4827, 77.9874, 0.22 ) }
    dend_15 { pt3dadd( -33.883, -74.9145, 78.4472, 0.22 ) }
    dend_15 { pt3dadd( -33.9555, -75.1688, 78.7315, 0.96 ) }
    dend_15 { pt3dadd( -34.1224, -75.8006, 79.4746, 2.06 ) }
    dend_15 { pt3dadd( -34.2597, -76.4072, 80.2168, 1.11 ) }
    dend_15 { pt3dadd( -34.4134, -77.2167, 81.2239, 0.22 ) }
    dend_15 { pt3dadd( -34.4945, -77.8473, 81.9985, 0.22 ) }
    dend_15 { pt3dadd( -34.5364, -78.1272, 82.3399, 0.22 ) }
    dend_15 { pt3dadd( -34.5793, -78.3485, 82.6109, 0.22 ) }
    dend_15 { pt3dadd( -34.6273, -78.5361, 82.848, 0.22 ) }
    dend_15 { pt3dadd( -34.7414, -78.8072, 83.1769, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_15 { pt3dadd( -34.9287, -79.0942, 83.5192, 0.22 ) }
    dend_15 { pt3dadd( -35.2652, -79.526, 84.0315, 0.22 ) }
    dend_15 { pt3dadd( -35.5609, -79.9111, 84.4575, 0.22 ) }
    dend_15 { pt3dadd( -35.7495, -80.1759, 84.722, 0.66 ) }
    dend_15 { pt3dadd( -36.1054, -80.7434, 85.2414, 1.11 ) }
    dend_15 { pt3dadd( -36.5985, -81.6047, 85.9984, 0.29 ) }
    dend_15 { pt3dadd( -37.0279, -82.3559, 86.65, 0.22 ) }
    dend_15 { pt3dadd( -37.3874, -82.9825, 87.1968, 0.22 ) }
    dend_15 { pt3dadd( -37.5668, -83.2668, 87.4426, 0.29 ) }
    dend_15 { pt3dadd( -38.0309, -83.9715, 88.0416, 0.22 ) }
    dend_15 { pt3dadd( -38.2431, -84.2891, 88.3101, 0.96 ) }
    dend_15 { pt3dadd( -38.6128, -84.8263, 88.7622, 1.84 ) }
    dend_15 { pt3dadd( -39.2447, -85.7025, 89.5131, 0.29 ) }
    dend_15 { pt3dadd( -39.7684, -86.3712, 90.1415, 0.22 ) }
    dend_15 { pt3dadd( -40.1127, -86.7992, 90.5711, 0.22 ) }
    dend_15 { pt3dadd( -40.3252, -87.0694, 90.8467, 0.22 ) }
    dend_15 { pt3dadd( -40.5091, -87.3459, 91.1109, 0.37 ) }
    dend_15 { pt3dadd( -40.768, -87.8504, 91.5394, 0.52 ) }
    dend_15 { pt3dadd( -41.0206, -88.4881, 91.9789, 0.29 ) }
    dend_15 { pt3dadd( -41.2012, -89.074, 92.3353, 0.29 ) }
    dend_15 { pt3dadd( -41.3041, -89.4269, 92.5202, 0.29 ) }
    dend_15 { pt3dadd( -41.4935, -90.1313, 92.8599, 0.44 ) }
    dend_15 { pt3dadd( -41.6831, -90.9694, 93.2373, 0.52 ) }
    dend_15 { pt3dadd( -41.9128, -92.1579, 93.7299, 0.15 ) }
    dend_15 { pt3dadd( -42.0151, -92.7584, 93.9667, 0.59 ) }
    dend_15 { pt3dadd( -42.1907, -93.7332, 94.3767, 1.7 ) }
    dend_15 { pt3dadd( -42.4316, -94.9098, 94.933, 0.15 ) }
    dend_15 { pt3dadd( -42.5547, -95.4517, 95.2335, 0.44 ) }
    dend_15 { pt3dadd( -42.6337, -95.8194, 95.4555, 0.44 ) }
    dend_15 { pt3dadd( -42.7415, -96.3366, 95.8024, 0.07 ) }
    dend_15 { pt3dadd( -42.8442, -96.7794, 96.1164, 0.07 ) }
    dend_15 { pt3dadd( -42.9464, -97.1047, 96.3733, 0.07 ) }
    dend_15 { pt3dadd( -43.1265, -97.5339, 96.7349, 0.29 ) }
    dend_15 { pt3dadd( -43.4731, -98.2295, 97.3345, 0.52 ) }
    dend_15 { pt3dadd( -43.7279, -98.7227, 97.7681, 0.22 ) }
    dend_15 { pt3dadd( -43.946, -99.1352, 98.1375, 0.22 ) }
    dend_15 { pt3dadd( -44.1889, -99.5861, 98.555, 0.37 ) }
    dend_15 { pt3dadd( -44.4242, -100.01, 98.9835, 0.74 ) }
    dend_15 { pt3dadd( -44.7866, -100.594, 99.6447, 1.33 ) }
    dend_15 { pt3dadd( -45.1874, -101.14, 100.348, 0.22 ) }
    dend_15 { pt3dadd( -45.4985, -101.516, 100.866, 0.15 ) }
    dend_15 { pt3dadd( -45.7433, -101.792, 101.266, 0.29 ) }
    dend_15 { pt3dadd( -46.0774, -102.165, 101.822, 0.15 ) }
    dend_15 { pt3dadd( -46.3537, -102.45, 102.26, 0.59 ) }
    dend_15 { pt3dadd( -46.6497, -102.725, 102.727, 0.74 ) }
    dend_15 { pt3dadd( -47.1058, -103.086, 103.391, 0.07 ) }
    dend_15 { pt3dadd( -47.5372, -103.408, 104.01, 0.15 ) }
    dend_15 { pt3dadd( -47.8458, -103.633, 104.448, 0.15 ) }
    dend_15 { pt3dadd( -48.1015, -103.818, 104.804, 0.15 ) }
    dend_15 { pt3dadd( -48.4021, -104.026, 105.193, 0.15 ) }
    dend_15 { pt3dadd( -48.8389, -104.316, 105.721, 0.29 ) }
    dend_15 { pt3dadd( -49.2095, -104.538, 106.13, 0.74 ) }
    dend_15 { pt3dadd( -49.7819, -104.864, 106.708, 1.03 ) }
    dend_15 { pt3dadd( -50.36, -105.195, 107.26, 0.29 ) }
    dend_15 { pt3dadd( -51.1671, -105.672, 108.042, 0.22 ) }
    dend_15 { pt3dadd( -51.6731, -105.982, 108.515, 0.88 ) }
    dend_15 { pt3dadd( -52.2419, -106.322, 109.05, 1.33 ) }
    dend_15 { pt3dadd( -52.7453, -106.605, 109.514, 1.47 ) }
    dend_15 { pt3dadd( -53.7067, -107.112, 110.396, 0.22 ) }
    dend_15 { pt3dadd( -54.2093, -107.355, 110.852, 0.22 ) }
    dend_15 { pt3dadd( -54.7885, -107.628, 111.393, 1.03 ) }
    dend_15 { pt3dadd( -55.4085, -107.907, 111.969, 1.55 ) }
    dend_15 { pt3dadd( -56.2985, -108.316, 112.801, 0.74 ) }
    dend_15 { pt3dadd( -57.1536, -108.757, 113.653, 0.22 ) }
    dend_15 { pt3dadd( -57.5868, -109.023, 114.099, 0.22 ) }
    dend_15 { pt3dadd( -57.9818, -109.288, 114.503, 0.22 ) }
    dend_15 { pt3dadd( -58.4311, -109.628, 114.982, 0.15 ) }
    dend_15 { pt3dadd( -58.8357, -110.009, 115.434, 0.37 ) }
    dend_15 { pt3dadd( -59.3157, -110.588, 116.027, 0.15 ) }
    dend_15 { pt3dadd( -59.6271, -111.071, 116.448, 0.15 ) }
    dend_15 { pt3dadd( -59.9907, -111.758, 117.01, 0.22 ) }
    dend_15 { pt3dadd( -60.1451, -112.083, 117.26, 0.15 ) }
    dend_15 { pt3dadd( -60.3602, -112.595, 117.646, 0.15 ) }
    dend_15 { pt3dadd( -60.4696, -112.924, 117.887, 0.74 ) }
    dend_15 { pt3dadd( -60.5676, -113.334, 118.177, 0.88 ) }
    dend_15 { pt3dadd( -60.6745, -114.219, 118.803, 0.15 ) }
    dend_15 { pt3dadd( -60.7054, -114.56, 119.047, 0.22 ) }
    dend_15 { pt3dadd( -60.7924, -114.937, 119.375, 0.22 ) }
    dend_15 { pt3dadd( -61.0162, -115.509, 119.971, 0.22 ) }
    dend_15 { pt3dadd( -61.0944, -115.66, 120.151, 0.22 ) }
    dend_15 { pt3dadd( -61.302, -115.984, 120.57, 0.88 ) }
    dend_15 { pt3dadd( -61.7023, -116.46, 121.231, 1.84 ) }
    dend_15 { pt3dadd( -62.3942, -117.107, 122.204, 0.15 ) }
    dend_15 { pt3dadd( -62.8385, -117.475, 122.738, 0.15 ) }
    dend_15 { pt3dadd( -63.1957, -117.74, 123.093, 0.29 ) }
    dend_15 { pt3dadd( -63.711, -118.154, 123.615, 0.74 ) }
    dend_15 { pt3dadd( -64.15, -118.548, 124.082, 1.11 ) }
    dend_15 { pt3dadd( -64.5418, -118.958, 124.541, 0.52 ) }
    dend_15 { pt3dadd( -65.0637, -119.555, 125.196, 0.22 ) }
    dend_15 { pt3dadd( -65.8883, -120.431, 126.262, 0.29 ) }
    dend_15 { pt3dadd( -66.5326, -121.086, 127.151, 0.15 ) }
    dend_15 { pt3dadd( -66.879, -121.431, 127.669, 0.37 ) }
    dend_15 { pt3dadd( -67.314, -121.845, 128.371, 1.18 ) }
    dend_15 { pt3dadd( -67.8725, -122.385, 129.395, 0.44 ) }
    dend_15 { pt3dadd( -68.332, -122.803, 130.353, 0.29 ) }
    dend_15 { pt3dadd( -68.6391, -123.08, 131.064, 0.15 ) }
    dend_15 { pt3dadd( -68.8956, -123.285, 131.625, 0.88 ) }
    dend_15 { pt3dadd( -69.2712, -123.582, 132.457, 1.03 ) }
    dend_15 { pt3dadd( -69.7693, -123.981, 133.651, 0.22 ) }
    dend_15 { pt3dadd( -70.1806, -124.36, 134.842, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -70.3594, -124.537, 135.43, 0.59 ) }
    dend_15 { pt3dadd( -70.5632, -124.733, 136.121, 0.96 ) }
    dend_15 { pt3dadd( -70.8469, -124.955, 137.081, 0.37 ) }
    dend_15 { pt3dadd( -71.2223, -125.171, 138.359, 0.15 ) }
    dend_15 { pt3dadd( -71.5291, -125.26, 139.376, 0.59 ) }
    dend_15 { pt3dadd( -71.714, -125.28, 139.989, 1.77 ) }
    dend_15 { pt3dadd( -72.1772, -125.275, 141.538, 0.22 ) }
    dend_15 { pt3dadd( -72.4597, -125.257, 142.522, 0.22 ) }
    dend_15 { pt3dadd( -72.6778, -125.235, 143.226, 0.37 ) }
    dend_15 { pt3dadd( -72.9204, -125.221, 143.897, 0.37 ) }
    dend_15 { pt3dadd( -73.1232, -125.23, 144.417, 0.37 ) }
    dend_15 { pt3dadd( -73.3872, -125.258, 145.129, 0.81 ) }
    dend_15 { pt3dadd( -73.5883, -125.325, 145.77, 0.81 ) }
    dend_15 { pt3dadd( -73.8517, -125.571, 146.826, 0.29 ) }
    dend_15 { pt3dadd( -73.9537, -125.791, 147.487, 0.29 ) }
    dend_15 { pt3dadd( -73.9369, -126.005, 147.988, 0.29 ) }
    dend_15 { pt3dadd( -73.8771, -126.122, 148.237, 0.29 ) }
    dend_15 { pt3dadd( -73.5096, -126.562, 149.196, 0.29 ) }
    dend_15 { pt3dadd( -73.3279, -126.745, 149.578, 0.44 ) }
    dend_15 { pt3dadd( -72.9772, -127.089, 150.277, 0.44 ) }
    dend_15 { pt3dadd( -72.54, -127.557, 151.271, 0.81 ) }
    dend_15 { pt3dadd( -72.234, -127.935, 152.178, 0.81 ) }
    dend_15 { pt3dadd( -72.0628, -128.22, 152.921, 0.81 ) }
    dend_15 { pt3dadd( -72.0113, -128.371, 153.376, 0.22 ) }
    dend_15 { pt3dadd( -71.9713, -128.698, 154.465, 0.22 ) }
    dend_15 { pt3dadd( -72.0328, -129.044, 155.709, 0.22 ) }
    dend_15 { pt3dadd( -72.1681, -129.354, 156.823, 0.81 ) }
    dend_15 { pt3dadd( -72.3508, -129.659, 157.852, 0.52 ) }
    dend_15 { pt3dadd( -72.7184, -130.16, 159.337, 0.22 ) }
    dend_15 { pt3dadd( -72.9195, -130.395, 159.948, 0.22 ) }
    dend_15 { pt3dadd( -73.1185, -130.59, 160.366, 0.52 ) }
    dend_15 { pt3dadd( -73.5745, -130.956, 160.995, 0.15 ) }
    dend_15 { pt3dadd( -73.8384, -131.133, 161.23, 0.59 ) }
    dend_15 { pt3dadd( -74.6195, -131.607, 161.718, 0.15 ) }
    dend_15 { pt3dadd( -75.247, -131.961, 161.947, 0.37 ) }
    dend_15 { pt3dadd( -75.9772, -132.351, 162.135, 0.15 ) }
    dend_15 { pt3dadd( -76.6585, -132.66, 162.25, 0.37 ) }
    dend_15 { pt3dadd( -77.1194, -132.796, 162.266, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 38/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 130.529, 146.612, -28.2703, 0.96 ) }
    dend_31 { pt3dadd( 131.228, 147.279, -28.5254, 0.96 ) }
    dend_31 { pt3dadd( 131.707, 147.785, -28.7036, 1.25 ) }
    dend_31 { pt3dadd( 132.136, 148.29, -28.8665, 0.66 ) }
    dend_31 { pt3dadd( 132.396, 148.622, -28.967, 0.22 ) }
    dend_31 { pt3dadd( 132.707, 149.031, -29.0881, 0.15 ) }
    dend_31 { pt3dadd( 132.909, 149.288, -29.166, 0.37 ) }
    dend_31 { pt3dadd( 133.315, 149.837, -29.3253, 0.15 ) }
    dend_31 { pt3dadd( 133.61, 150.215, -29.4398, 0.37 ) }
    dend_31 { pt3dadd( 133.838, 150.478, -29.5265, 0.88 ) }
    dend_31 { pt3dadd( 134.114, 150.759, -29.6476, 0.88 ) }
    dend_31 { pt3dadd( 134.738, 151.312, -29.9969, 0.22 ) }
    dend_31 { pt3dadd( 135.168, 151.664, -30.2453, 0.22 ) }
    dend_31 { pt3dadd( 135.606, 151.971, -30.5072, 0.22 ) }
    dend_31 { pt3dadd( 135.909, 152.16, -30.6961, 0.22 ) }
    dend_31 { pt3dadd( 136.548, 152.527, -31.1256, 1.25 ) }
    dend_31 { pt3dadd( 137.201, 152.875, -31.6258, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 130.529, 146.612, -28.2703, 0.29 ) }
    dend_28 { pt3dadd( 130.94, 148.088, -27.7722, 0.29 ) }
    dend_28 { pt3dadd( 131.24, 148.819, -27.6361, 0.22 ) }
    dend_28 { pt3dadd( 131.524, 149.427, -27.5802, 0.66 ) }
    dend_28 { pt3dadd( 131.96, 150.33, -27.5473, 0.22 ) }
    dend_28 { pt3dadd( 132.401, 151.212, -27.5484, 0.15 ) }
    dend_28 { pt3dadd( 132.8, 152.038, -27.559, 0.15 ) }
    dend_28 { pt3dadd( 133.31, 153.09, -27.6426, 0.15 ) }
    dend_28 { pt3dadd( 133.842, 154.206, -27.789, 0.22 ) }
    dend_28 { pt3dadd( 134.324, 155.222, -27.9676, 0.29 ) }
    dend_28 { pt3dadd( 134.731, 156.068, -28.149, 0.22 ) }
    dend_28 { pt3dadd( 135.176, 156.925, -28.3799, 0.29 ) }
    dend_28 { pt3dadd( 135.881, 158.061, -28.7795, 0.22 ) }
    dend_28 { pt3dadd( 136.563, 159.03, -29.1798, 0.66 ) }
    dend_28 { pt3dadd( 136.981, 159.581, -29.4236, 1.11 ) }
    dend_28 { pt3dadd( 137.503, 160.256, -29.7328, 1.18 ) }
    dend_28 { pt3dadd( 138.221, 161.202, -30.1745, 0.37 ) }
    dend_28 { pt3dadd( 139.003, 162.245, -30.6573, 0.37 ) }
    dend_28 { pt3dadd( 139.621, 163.169, -31.0215, 0.22 ) }
    dend_28 { pt3dadd( 140.152, 164.18, -31.2858, 0.22 ) }
    dend_28 { pt3dadd( 140.468, 164.946, -31.4328, 0.22 ) }
    dend_28 { pt3dadd( 140.687, 165.591, -31.5181, 0.59 ) }
    dend_28 { pt3dadd( 140.829, 166.061, -31.548, 1.03 ) }
    dend_28 { pt3dadd( 141.132, 167.111, -31.5611, 1.18 ) }
    dend_28 { pt3dadd( 141.776, 169.08, -31.4997, 0.44 ) }
    dend_28 { pt3dadd( 142.081, 169.919, -31.4623, 0.88 ) }
    dend_28 { pt3dadd( 142.444, 170.86, -31.3895, 1.7 ) }
    dend_28 { pt3dadd( 142.886, 171.944, -31.2738, 2.29 ) }
    dend_28 { pt3dadd( 143.298, 172.914, -31.1526, 2.29 ) }
    dend_28 { pt3dadd( 143.627, 173.623, -31.0371, 1.99 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 85/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 143.627, 173.623, -31.0371, 0.22 ) }
    dend_30 { pt3dadd( 145.051, 176.039, -31.3706, 0.22 ) }
    dend_30 { pt3dadd( 145.719, 177.173, -31.5273, 0.22 ) }
    dend_30 { pt3dadd( 146.426, 178.373, -31.693, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 143.627, 173.623, -31.0371, 0.29 ) }
    dend_29 { pt3dadd( 144.845, 174.5, -31.4852, 0.29 ) }
    dend_29 { pt3dadd( 145.655, 175.082, -31.783, 0.29 ) }
    dend_29 { pt3dadd( 146.47, 175.668, -32.0829, 0.29 ) }
    dend_29 { pt3dadd( 147.159, 176.165, -32.3366, 0.52 ) }
    dend_29 { pt3dadd( 147.862, 176.67, -32.5952, 0.52 ) }
    dend_29 { pt3dadd( 149.024, 177.507, -33.0229, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_58 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_62 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_47 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_63 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_61 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_60 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_53 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_48 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_42 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_68 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_67 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_65 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_64 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_57 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_49 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_3 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_32 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_25 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_33 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_27 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_26 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_58 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_11 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_66 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_46 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_45 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_16 OneSecGrp_SectionRef_67.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_54 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_56 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_31 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_55 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_28 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_30 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_41 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_29 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_40 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_51 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_5 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_4 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_28 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_62 nseg = 3
    dend_59 nseg = 9
    dend_47 nseg = 3
    dend_1 nseg = 3
    dend_63 nseg = 5
    dend_61 nseg = 5
    dend_60 nseg = 3
    dend_53 nseg = 5
    dend_48 nseg = 7
    dend_42 nseg = 5
    dend_68 nseg = 11
    dend_67 nseg = 11
    dend_65 nseg = 13
    dend_64 nseg = 13
    dend_57 nseg = 7
    dend_50 nseg = 3
    dend_49 nseg = 5
    dend_39 nseg = 9
    dend_38 nseg = 11
    dend_21 nseg = 11
    dend_12 nseg = 13
    dend_9 nseg = 3
    dend_8 nseg = 9
    dend_6 nseg = 15
    dend_3 nseg = 9
    dend_32 nseg = 5
    dend_25 nseg = 3
    dend_22 nseg = 3
    dend_17 nseg = 3
    dend_14 nseg = 5
    dend_34 nseg = 7
    dend_33 nseg = 9
    dend_27 nseg = 5
    dend_26 nseg = 7
    dend_19 nseg = 5
    dend_15 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_BTC_0aac470ea8_0_0


