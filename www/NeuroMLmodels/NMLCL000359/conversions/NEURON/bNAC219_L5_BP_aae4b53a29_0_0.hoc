// Cell: bNAC219_L5_BP_aae4b53a29_0_0
/*
{
  "id" : "bNAC219_L5_BP_aae4b53a29_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.33797, 8.53983, 2.89562, 0.83", "-6.53482, 11.0177, 3.37775, 1.11", "-8.4197, 12.4776, 3.62854, 0.83", "-10.251, 13.8837, 3.85325, 0.83", "-11.3352, 14.6855, 3.97639, 1.11", "-14.7305, 17.191, 4.37103, 1.11", "-20.8033, 21.4805, 5.06865, 0.83", "-22.9912, 22.9669, 5.29902, 0.83", "-24.7237, 24.109, 5.44211, 0.83", "-26.4132, 25.2409, 5.56597, 0.83", "-27.7884, 26.1739, 5.6328, 0.55", "-28.8222, 26.8055, 5.70063, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.61193, 6.24531, -6.22749, 0.55", "7.29964, 6.82672, -6.8277, 0.55", "8.85922, 6.97349, -7.62191, 0.83", "11.3275, 7.12968, -9.09722, 0.55", "12.519, 7.20507, -9.80937, 1.38", "15.4487, 7.39046, -11.5604, 0.55", "16.6965, 7.32768, -12.3959, 0.83", "23.151, 6.17641, -17.0902, 0.55", "23.7754, 6.02159, -17.6066, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.687288, -10.7663, 3.33263, 1.11", "-0.741632, -15.5612, 5.05161, 1.11", "-0.763766, -17.514, 5.75168, 0.83", "-0.793171, -20.1084, 6.68178, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.843764, 10.7523, -1.40709, 1.11", "0.85437, 13.5289, -1.38783, 1.11", "0.830509, 18.0589, -1.19586, 1.38", "0.832669, 18.3114, -1.17995, 1.38", "1.03861, 21.442, -0.918605, 0.83", "1.35666, 24.7574, -0.445029, 0.83", "1.9486, 28.5128, 0.589552, 0.83", "2.3142, 29.9437, 1.18407, 0.83", "2.69567, 30.985, 1.74046, 1.11", "3.85994, 33.5305, 3.20845, 0.55", "5.21897, 36.1942, 4.95751, 0.83", "7.07332, 38.9519, 6.99762, 0.55", "8.04573, 40.1053, 7.94526, 0.83", "9.38537, 41.6694, 9.39402, 0.55", "11.019, 43.657, 11.3254, 0.55", "13.256, 46.6405, 14.2326, 0.55", "15.7158, 50.0463, 17.4407, 0.55", "17.2096, 52.2549, 19.7802, 0.55", "18.9708, 55.0451, 23.0252, 0.55", "19.328, 55.6054, 23.7545, 0.83", "20.2506, 57.0862, 25.7976, 0.55", "21.0487, 58.2435, 27.414, 0.83", "22.8505, 61.3876, 31.2309, 0.55", "23.5811, 62.5366, 32.3799, 0.83", "24.3186, 63.3902, 33.1999, 0.55", "25.0811, 64.1293, 33.862, 0.83", "26.8183, 65.5151, 35.1217, 0.83", "29.1545, 67.3984, 36.5537, 0.83", "30.6148, 68.6387, 37.2575, 0.55", "31.7225, 69.7059, 37.8001, 0.55", "34.6361, 72.4649, 39.1745, 0.83", "36.5328, 74.2346, 39.9785, 0.55", "39.4376, 76.831, 41.0719, 0.55", "42.1261, 79.0165, 41.9597, 0.55", "44.5463, 80.8728, 42.6854, 0.55", "47.6359, 83.056, 43.4559, 0.55", "49.5445, 84.1399, 43.8642, 0.55", "50.8785, 84.7576, 43.982, 0.55", "52.6883, 85.2475, 43.99, 0.55", "55.4423, 85.5395, 43.7867, 0.55", "57.1781, 85.5084, 43.5975, 0.55", "59.6889, 85.3965, 43.4917, 0.55", "64.3971, 85.3329, 43.7021, 0.55", "68.0421, 85.4529, 44.1241, 0.55", "71.8601, 85.7656, 44.7993, 0.55", "74.2726, 86.0517, 45.4262, 0.55", "80.448, 87.3822, 47.4718, 0.55", "84.043, 88.465, 48.9654, 0.55", "86.6872, 89.4659, 50.35, 0.55", "88.2718, 90.3644, 51.2564, 0.55", "90.0997, 91.6795, 52.2952, 0.55", "93.2311, 94.2509, 53.748, 0.55", "93.9662, 94.8685, 53.9733, 0.55", "96.1042, 96.5252, 54.4733, 0.55", "98.0613, 98.2779, 54.9233, 0.83", "99.1317, 99.2494, 55.151, 0.55", "100.739, 100.908, 55.4239, 0.83", "108.805, 109.763, 59.1879, 0.83", "115.831, 119.827, 61.8353, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-28.8222, 26.8055, 5.70063, 0.55", "-30.335, 28.0519, 4.68312, 0.55", "-31.98, 29.4071, 3.57667, 0.55", "-33.9652, 31.0426, 2.24144, 0.55", "-35.6044, 32.3931, 1.1389, 0.83", "-36.9781, 33.5247, 0.214971, 0.55", "-39.5278, 35.6253, -1.49997, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-28.8222, 26.8055, 5.70063, 0.55", "-30.6618, 27.2039, 5.37509, 0.55", "-32.6345, 27.5482, 5.21996, 0.55", "-34.8755, 27.9301, 5.09842, 0.55", "-38.1435, 28.4214, 5.21734, 0.55", "-40.8934, 28.7361, 5.50318, 0.55", "-43.7869, 29.0111, 5.92103, 0.55", "-46.6079, 29.0632, 6.60614, 0.55", "-49.056, 28.8556, 7.40596, 0.55", "-52.1321, 28.3604, 8.70263, 0.55", "-53.4839, 28.0342, 9.43828, 0.55", "-54.9487, 27.6615, 10.2919, 0.55", "-57.5264, 26.8275, 11.6691, 0.55", "-58.8831, 26.4062, 12.1959, 0.55", "-60.304, 25.9235, 12.7358, 0.55", "-61.9815, 25.3849, 13.2142, 0.55", "-63.8005, 24.8409, 13.6888, 0.55", "-66.3925, 24.0632, 14.3104, 0.55", "-69.8298, 23.2778, 14.857, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "23.7754, 6.02159, -17.6066, 0.55", "30.5728, 7.60551, -19.0332, 0.55", "34.4751, 8.33222, -20.4211, 0.55", "38.3188, 8.8812, -21.8603, 0.55", "40.9408, 9.15137, -22.851, 0.55", "44.7694, 9.45494, -24.2765, 0.55", "52.7028, 9.94996, -27.4945, 0.55", "61.6937, 10.501, -31.7522, 0.55", "66.0387, 10.5181, -34.1419, 0.55", "68.3617, 10.4814, -35.5805, 0.55", "70.9082, 10.4617, -37.2614, 0.55", "75.4472, 10.2969, -40.253, 0.55", "77.0909, 10.1434, -41.4028, 0.55", "84.0507, 9.71213, -46.8022, 0.55", "88.9762, 9.51567, -50.9883, 0.55", "91.8134, 9.46473, -53.4732, 0.55", "94.6421, 9.38839, -55.9514, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "23.7754, 6.02159, -17.6066, 0.83", "26.1177, 7.58867, -17.6788, 0.83", "27.4575, 8.48067, -17.7831, 0.55", "29.4303, 9.83158, -18.1112, 0.83", "30.7559, 10.7732, -18.3746, 0.55", "32.5817, 12.1233, -18.7121, 0.83", "34.7745, 13.7943, -19.0359, 0.55", "35.8804, 14.5528, -19.1483, 0.55", "38.4367, 15.9495, -19.2075, 0.83", "40.7641, 16.943, -18.9399, 0.55", "42.0639, 17.4897, -18.6621, 0.83", "44.0092, 18.3622, -18.0366, 0.55", "46.796, 19.6814, -16.7726, 0.55", "50.671, 21.3162, -14.8039, 0.55", "54.3672, 22.7492, -12.6579, 0.55", "57.296, 23.8546, -10.9021, 0.55", "62.1231, 25.7011, -7.98248, 0.55", "65.6493, 27.1596, -5.77046, 0.55", "67.7695, 28.2272, -4.36142, 0.55", "71.6564, 30.6087, -1.7454, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.793171, -20.1084, 6.68178, 0.83", "-1.08958, -23.4086, 6.55017, 0.83", "-1.37838, -26.6239, 6.42195, 0.83", "-1.70081, -30.2137, 6.2788, 0.83", "-1.86918, -32.0883, 6.20404, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.793171, -20.1084, 6.68178, 0.55", "-0.0344052, -21.9477, 7.74832, 0.55", "0.702856, -24.1858, 9.19412, 0.55", "1.26797, -27.0897, 11.295, 0.55", "1.41816, -28.2135, 12.1579, 0.83", "1.61742, -31.0682, 14.7333, 0.55", "1.6091, -32.5342, 16.1166, 0.55", "1.5601, -35.383, 18.9381, 0.83", "1.43355, -37.492, 21.1913, 0.55", "1.17184, -39.2199, 23.0572, 0.55", "0.590575, -42.4862, 26.5484, 0.55", "0.12324, -45.0892, 29.3002, 0.55", "-0.203162, -47.1795, 31.5259, 0.55", "-0.444316, -49.4066, 33.7928, 0.28", "-0.475829, -50.3392, 34.6849, 0.55", "-0.511369, -52.0634, 36.2271, 0.28", "-0.299348, -54.7741, 38.1454, 0.55", "-1.59528, -63.6455, 45.4701, 0.55", "-2.91246, -71.8355, 53.5461, 0.55", "-3.30583, -78.6218, 62.9176, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-39.5278, 35.6253, -1.49997, 0.55", "-42.0838, 36.064, 0.0333641, 0.55", "-43.1522, 36.1957, 0.820119, 0.83", "-44.3926, 36.2944, 1.91836, 0.55", "-45.3358, 36.3745, 2.84984, 0.83", "-47.806, 36.6767, 5.2619, 0.55", "-48.7403, 36.8082, 6.18208, 0.28", "-50.2883, 37.0536, 7.85568, 0.55", "-52.3656, 37.3954, 10.0901, 0.55", "-53.948, 37.6511, 11.7087, 0.55", "-56.0667, 37.9881, 13.7987, 0.28", "-56.6218, 38.0761, 14.2704, 0.55", "-57.7732, 38.27, 15.1999, 0.28", "-58.5596, 38.4188, 15.7521, 0.55", "-60.175, 38.7025, 16.7335, 0.28", "-61.1285, 38.8116, 17.2613, 0.55", "-62.8142, 38.8774, 18.2145, 0.28", "-63.9494, 38.9116, 18.8139, 0.55", "-70.673, 38.7289, 25.6824, 0.55", "-76.7842, 37.645, 33.0236, 0.55", "-82.677, 35.65, 40.3524, 0.55", "-88.5972, 32.5343, 47.2561, 0.55", "-93.3926, 29.8199, 55.1333, 0.55", "-98.9015, 27.4611, 62.6503, 0.55", "-104.449, 26.6765, 70.4616, 0.55", "-110.001, 25.1284, 78.1554, 0.55", "-115.34, 24.2208, 86.0986, 0.55", "-120.229, 23.1717, 94.3088, 0.55", "-124.209, 21.0232, 102.792, 0.55", "-128.235, 19.7698, 111.43, 0.55", "-132.436, 17.5574, 119.79, 0.55", "-135.524, 14.917, 128.502, 0.55", "-136.968, 12.8906, 137.788, 0.55", "-138.447, 9.09005, 146.493, 0.55", "-138.563, 5.06139, 155.221, 0.55", "-139.165, 1.45583, 164.112, 0.55", "-140.757, -1.41737, 173.147, 0.55", "-144.28, -2.73326, 181.994, 0.55", "-147.016, -5.13759, 190.891, 0.55", "-147.877, -5.99978, 200.427, 0.55", "-150.246, -6.10719, 209.743, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-39.5278, 35.6253, -1.49997, 0.55", "-40.991, 36.8296, -3.83178, 0.55", "-41.9869, 38.1348, -6.33221, 0.55", "-42.8605, 39.6723, -8.92803, 0.55", "-43.4076, 40.6351, -10.5535, 0.55", "-44.4055, 42.3912, -13.5185, 0.83", "-45.1355, 43.6761, -15.6878, 0.55", "-45.8515, 45.4485, -18.8331, 0.83", "-46.0022, 46.5829, -20.5404, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-69.8298, 23.2778, 14.857, 0.28", "-70.8916, 21.499, 14.0741, 0.28", "-71.3928, 20.748, 13.6646, 0.28", "-72.0411, 19.6909, 13.049, 0.55", "-72.5763, 18.7586, 12.5199, 0.28", "-73.3674, 17.334, 11.7356, 0.55", "-75.5746, 13.1294, 9.51554, 0.28", "-76.284, 11.674, 8.61661, 0.55", "-77.3517, 9.44583, 7.1521, 0.28", "-77.9589, 8.1231, 6.21329, 0.55", "-78.3763, 7.21567, 5.54214, 0.28", "-78.8528, 6.17244, 4.78155, 0.55", "-80.295, 2.66866, 2.35206, 0.28", "-80.7458, 1.61642, 1.57456, 0.55", "-81.523, 0.0425956, 0.192856, 0.28", "-82.1626, -0.942169, -0.805382, 0.28", "-82.7431, -1.58836, -1.51614, 0.55", "-84.7894, -3.3934, -3.49382, 0.28", "-85.7466, -4.12146, -4.28935, 0.55", "-88.0822, -5.75122, -6.24094, 0.28", "-90.4239, -7.1737, -8.03993, 0.28", "-92.9726, -8.50146, -9.87604, 0.28", "-94.1455, -8.99084, -10.5965, 0.55", "-99.793, -15.1163, -15.7838, 0.55", "-106.249, -21.6259, -19.2851, 0.55", "-112.441, -27.5143, -24.1132, 0.55", "-118.709, -32.6541, -29.6462, 0.55", "-124.972, -36.9535, -35.8607, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-69.8298, 23.2778, 14.857, 0.55", "-70.4989, 23.2334, 14.8862, 0.55", "-72.4059, 23.0838, 15.2095, 0.55", "-73.126, 23.0054, 15.3662, 0.55", "-74.8228, 22.7685, 15.7543, 0.55", "-77.4217, 22.4436, 16.232, 0.55", "-78.7693, 22.3178, 16.4615, 0.28", "-80.8643, 22.0818, 16.7736, 0.55", "-82.4164, 21.8815, 16.9473, 0.55", "-83.072, 21.7925, 17.0216, 0.28", "-87.0043, 21.2572, 17.4617, 0.55", "-88.8352, 20.9362, 17.5483, 0.28", "-91.2932, 20.5098, 17.5222, 0.28", "-93.4015, 20.1864, 17.3808, 0.55", "-101.745, 19.9236, 18.7333, 0.55", "-109.885, 19.3448, 20.953, 0.55", "-117.654, 17.8093, 23.9186, 0.55", "-125.22, 17.6062, 27.6903, 0.55", "-131.853, 16.9371, 32.8936, 0.55", "-137.344, 16.5723, 39.3155, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "94.6421, 9.38839, -55.9514, 0.55", "99.2754, 10.8945, -59.6769, 0.55", "100.733, 11.3171, -60.9537, 0.55", "102.553, 11.7833, -62.5369, 0.55", "105.847, 12.6225, -65.6084, 0.55", "109.272, 13.3651, -68.9164, 0.55", "110.937, 13.5869, -70.5064, 0.83", "112.297, 13.6849, -71.9321, 0.55", "113.305, 13.6834, -73.1143, 0.83", "115.701, 13.345, -76.1796, 0.55", "117.658, 12.8722, -78.7406, 0.55", "119.911, 12.2982, -81.5694, 0.55", "122.423, 11.7426, -84.7647, 0.55", "124.104, 11.3325, -86.9575, 0.55", "125.998, 10.8709, -89.4967, 0.55", "127.637, 10.5486, -91.8063, 0.55", "128.672, 10.464, -93.3945, 0.55", "129.949, 10.417, -96.5583, 0.55", "130.632, 10.3365, -98.5399, 0.55", "131.179, 10.1463, -101.174, 0.55", "131.885, 9.71079, -105.633, 0.55", "132.022, 9.57739, -106.642, 0.28", "133.82, 7.81194, -118.924, 0.28", "134.454, 7.30943, -122.531, 0.83", "136.995, 5.28183, -135.354, 0.83", "138.311, 4.09805, -141.339, 0.83", "138.958, 3.51417, -143.776, 0.55", "139.721, 2.92406, -146.156, 0.55", "141.936, 1.6647, -150.602, 0.55", "144.349, 0.481083, -154.525, 0.28", "145.115, 0.181606, -154.792, 0.55", "146.826, -0.425253, -154.74, 0.28", "147.895, -0.741414, -154.543, 0.55", "149.01, -1.09682, -154.242, 0.28", "150.356, -1.46272, -153.812, 0.55", "152.374, -1.87885, -153.373, 0.28", "153.988, -2.25695, -153.079, 0.55", "155.781, -2.53984, -152.885, 0.28", "158.215, -2.8918, -152.836, 0.55", "160.945, -3.20451, -152.94, 0.55", "163.345, -3.4329, -153.188, 0.28", "166.664, -3.69775, -153.712, 0.55", "172.402, -3.92732, -155.216, 0.55", "174.941, -3.86207, -156.174, 0.55", "176.033, -3.77524, -156.698, 0.83", "178.11, -3.57343, -157.887, 0.55", "179.555, -3.36435, -158.797, 0.83", "183.448, -2.69395, -161.278, 0.55", "185.81, -2.44202, -162.873, 0.28", "186.802, -2.41109, -163.438, 0.55", "189.506, -2.61503, -164.71, 0.28", "190.448, -2.7821, -165.101, 0.55", "192.384, -3.28484, -165.615, 0.28", "194.347, -4.03136, -165.811, 0.55", "198.312, -5.83773, -165.514, 0.28", "200.138, -6.7757, -165.186, 0.55", "202.843, -8.34749, -164.566, 0.28", "206.265, -10.3335, -163.654, 0.55", "208.744, -11.7394, -162.951, 0.55", "213.051, -14.0443, -161.644, 0.28", "214.822, -14.8898, -161.248, 0.55", "217.882, -16.1306, -160.89, 0.28", "220.945, -17.1045, -160.725, 0.55", "222.636, -17.4189, -160.852, 0.28", "224.178, -17.4818, -161.065, 0.55", "228.543, -17.3539, -162.05, 0.28", "231.677, -17.0416, -162.781, 0.28", "234.417, -16.5684, -163.435, 0.55", "237.445, -15.9455, -164.299, 0.28", "238.212, -15.7442, -164.487, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "94.6421, 9.38839, -55.9514, 0.55", "95.1014, 7.57144, -57.415, 0.55", "95.3459, 6.02121, -58.5361, 0.28", "95.5699, 4.58684, -59.4357, 0.55", "96.2074, 1.54931, -61.3757, 0.28", "96.2417, 1.36128, -61.5257, 0.55", "96.4493, 0.385767, -62.3984, 0.28", "96.5398, -0.405635, -63.2558, 0.55", "96.5815, -1.22008, -64.2528, 0.28", "96.6015, -2.32448, -65.669, 0.55", "96.6503, -5.10421, -69.1666, 0.55", "96.6618, -7.63206, -72.404, 0.55", "96.6485, -9.65207, -74.9942, 0.55", "96.5952, -11.6419, -77.5, 0.55", "96.5799, -12.1588, -78.123, 0.28", "96.5816, -12.7167, -78.7378, 0.55", "96.6643, -13.4986, -79.5126, 0.28", "96.9686, -14.9167, -80.7658, 0.55", "97.8048, -17.6849, -82.7118, 0.55", "98.2699, -19.1891, -83.619, 0.28", "98.6501, -20.71, -84.6085, 0.55", "99.0195, -22.8297, -86.0742, 0.28", "99.2027, -24.5351, -87.2965, 0.55", "99.3626, -27.0836, -89.127, 0.28", "99.5493, -29.7301, -90.9359, 0.55", "99.7667, -33.5683, -93.5964, 0.28", "99.8358, -35.6132, -95.0206, 0.55", "99.8704, -37.699, -96.5283, 0.28", "99.8792, -39.5223, -97.9748, 0.28", "99.9702, -41.7814, -99.9934, 0.55", "100.21, -43.8828, -101.813, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "71.6564, 30.6087, -1.7454, 0.55", "74.2038, 30.4257, -1.08371, 0.55", "76.0675, 30.2034, -0.772237, 0.55", "80.1547, 29.6488, -0.299626, 0.55", "81.9981, 29.3455, -0.247351, 0.55", "84.0115, 29.0474, -0.296354, 0.55", "86.7189, 28.6762, -0.557527, 0.55", "89.5835, 28.183, -1.09569, 0.55", "91.0918, 27.8882, -1.54683, 0.55", "94.1672, 27.248, -2.87795, 0.55", "95.5845, 26.9605, -3.53657, 0.55", "98.9086, 26.2156, -5.15895, 0.55", "101.162, 25.623, -6.23108, 0.55", "102.818, 25.1837, -6.94456, 0.83", "105.466, 24.3869, -8.04575, 0.55", "108.06, 23.4902, -9.01284, 0.83", "110.261, 22.6361, -9.74631, 0.55", "112.217, 21.9142, -10.3, 0.55", "113.327, 21.5581, -10.5584, 0.83", "115.915, 20.748, -11.0265, 0.28", "117.2, 20.4061, -11.1828, 0.28", "118.445, 19.9902, -11.3909, 0.28", "119.791, 19.576, -11.6252, 0.28", "121.945, 18.9494, -12.0481, 0.28", "122.811, 18.7105, -12.1935, 0.55", "124.878, 18.1797, -12.3412, 0.55", "128.594, 17.2063, -12.4167, 0.55", "129.622, 16.914, -12.39, 0.55", "130.54, 16.6266, -12.324, 0.83", "132.529, 16.0796, -12.0252, 0.55", "134.258, 15.6102, -11.738, 0.55", "135.891, 15.1744, -11.4596, 0.55", "137.157, 14.8112, -11.278, 0.55", "139.169, 14.0846, -11.076, 0.55", "141.545, 13.0054, -10.9509, 0.55", "145.248, 10.8855, -10.9792, 0.55", "147.286, 9.40862, -11.0979, 0.55", "149.059, 7.81684, -11.2634, 0.28", "149.589, 7.22285, -11.3335, 0.55", "150.766, 5.54941, -11.5189, 0.28", "151.782, 3.66514, -11.6939, 0.55", "152.742, 1.32068, -11.7319, 0.55", "153.388, -0.212472, -11.6835, 0.28", "153.624, -0.751202, -11.6399, 0.55", "154.234, -2.08662, -11.5125, 0.28", "155.067, -3.81833, -11.3038, 0.55", "157.233, -7.97415, -10.6933, 0.55", "158.361, -10.0626, -10.3403, 0.55", "159.407, -11.9743, -9.99921, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "71.6564, 30.6087, -1.7454, 0.55", "73.4045, 30.8004, -0.439238, 0.55", "73.965, 30.8624, -0.0510964, 0.55", "76.0576, 31.0012, 1.29627, 0.55", "78.3918, 31.1988, 2.8391, 0.55", "81.3844, 31.4389, 4.89475, 0.55", "82.2109, 31.5066, 5.45716, 0.55", "83.6964, 31.5729, 6.44629, 0.55", "85.3227, 31.6878, 7.4732, 0.55", "87.2102, 31.8806, 8.58787, 0.55", "88.9878, 32.0868, 9.647, 0.55", "89.9604, 32.2476, 10.1874, 0.55", "91.1007, 32.4693, 10.823, 0.55", "92.509, 32.7863, 11.588, 0.83", "94.814, 33.3208, 12.5994, 0.55", "96.3427, 33.6209, 13.19, 0.83", "98.4693, 33.9468, 13.9277, 0.55", "99.124, 34.0123, 14.1414, 0.55", "101.16, 34.1194, 14.7526, 0.55", "104.813, 34.1059, 15.6805, 0.55", "107.494, 33.9547, 16.285, 0.55", "109.622, 33.734, 16.8031, 0.55", "111.797, 33.3908, 17.3933, 0.55", "112.256, 33.3064, 17.5185, 0.28", "113.187, 33.0991, 17.7667, 0.83", "117.012, 32.1914, 18.8022, 0.55", "119.688, 31.5638, 19.476, 0.55", "121.882, 31.0984, 20.0886, 0.55", "123.193, 30.8153, 20.4666, 0.83", "124.224, 30.607, 20.7674, 0.28", "125.16, 30.4203, 21.0318, 0.55", "132.376, 30.6125, 24.2981, 0.55", "140.052, 29.749, 26.0617, 0.55", "147.655, 29.8036, 28.29, 0.55", "154.526, 28.5771, 32.0409, 0.55", "160.974, 26.2522, 36.0146, 0.55", "168.019, 23.0313, 37.6785, 0.55", "174.953, 19.2071, 37.944, 0.55", "182.51, 16.8269, 37.881, 0.55", "189.998, 14.2766, 38.3304, 0.55", "197.748, 12.6292, 38.3687, 0.55", "205.471, 11.23, 39.4559, 0.55", "212.767, 8.45357, 40.8113, 0.55", "220.213, 6.98345, 43.0861, 0.55", "227.312, 6.55026, 46.5782, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.86918, -32.0883, 6.20404, 1.38", "0.470752, -34.7236, 5.31929, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.86918, -32.0883, 6.20404, 0.55", "-3.42206, -34.0608, 6.04072, 0.55", "-5.13193, -36.5853, 5.86312, 0.55", "-6.47137, -38.2598, 5.7388, 0.55", "-7.57548, -39.6602, 5.44934, 0.55", "-9.95479, -42.564, 4.57336, 0.55", "-11.6188, -44.5049, 3.9083, 0.55", "-13.0898, -46.2449, 3.25623, 0.55", "-16.8746, -50.4836, 1.58362, 0.55", "-21.4315, -55.3942, -0.387659, 0.55", "-24.9534, -59.115, -1.98134, 0.55", "-27.1949, -61.5572, -3.03361, 0.55", "-29.7651, -64.4854, -4.23178, 0.55", "-33.0216, -68.6776, -5.70247, 0.55", "-34.9218, -71.6447, -6.51629, 0.55", "-37.2835, -75.9054, -7.29148, 0.55", "-39.1654, -79.8924, -7.82559, 0.55", "-41.0528, -84.8607, -8.32537, 0.55", "-42.8205, -90.6867, -8.70729, 0.55", "-43.756, -95.1333, -8.83442, 0.55", "-44.0927, -97.3432, -8.73443, 0.55", "-44.6143, -102.53, -8.17727, 0.55", "-45.0341, -107.382, -7.5186, 0.55", "-45.2574, -112.264, -6.46288, 0.55", "-45.4351, -115.064, -5.70988, 0.55", "-45.9755, -123.721, -3.05938, 0.55", "-46.021, -124.358, -2.85372, 0.55", "-46.2397, -128.261, -1.48937, 0.55", "-46.9758, -135.242, 1.06834, 0.55", "-47.2166, -137.578, 1.78441, 0.55", "-47.5976, -141.234, 2.27179, 0.55", "-47.6625, -142.593, 2.15038, 0.55", "-47.5643, -147.194, 0.913715, 0.55", "-47.2518, -150.175, -0.485264, 0.55", "-46.4954, -154.926, -3.64885, 0.55", "-45.277, -160.738, -7.9309, 0.28", "-44.9273, -162.175, -9.17815, 0.55", "-44.3643, -164.355, -11.2577, 0.28", "-44.2801, -164.683, -11.5887, 0.55", "-43.8509, -166.482, -13.2508, 0.28", "-43.7654, -167.093, -13.6819, 0.55", "-43.4744, -170.267, -15.328, 0.28", "-43.4185, -171.347, -15.8802, 0.55", "-43.3194, -174.471, -17.3073, 0.28", "-43.2844, -175.454, -17.7524, 0.55", "-43.1984, -178.847, -19.2374, 0.28", "-43.1497, -180.408, -19.9272, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-3.30583, -78.6218, 62.9176, 0.55", "-5.16271, -83.1653, 67.2419, 0.55", "-7.69654, -87.1906, 71.7328, 0.55", "-10.0257, -91.6304, 75.9345, 0.55", "-12.4657, -96.1029, 80.0375, 0.55", "-14.1762, -101.255, 83.6872, 0.55", "-15.8361, -106.19, 87.6474, 0.55", "-16.7021, -112.091, 90.3339, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-3.30583, -78.6218, 62.9176, 0.55", "-1.64633, -86.2564, 69.9738, 0.55", "0.14897, -95.05, 75.4766, 0.55", "0.26798, -103.869, 81.2252, 0.55", "-0.383934, -113.166, 86.1198, 0.55", "-0.590238, -122.438, 91.1022, 0.55", "-0.597906, -131.342, 96.7197, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-46.0022, 46.5829, -20.5404, 0.83", "-45.7667, 47.914, -23.1244, 0.83", "-45.2435, 51.2363, -28.9812, 0.55", "-44.9805, 52.7098, -31.3431, 0.83", "-44.6607, 54.3209, -33.7265, 0.55", "-44.2673, 56.0553, -35.8695, 0.55", "-44.0313, 56.9602, -36.8069, 0.28", "-43.8824, 57.6124, -37.2377, 0.55", "-43.2016, 59.9056, -38.1752, 0.28", "-42.8734, 60.8951, -38.5292, 0.55", "-41.7453, 64.378, -39.6064, 0.28", "-40.9049, 67.1737, -40.3503, 0.55", "-39.7776, 71.6077, -41.3347, 0.28", "-38.9085, 75.5457, -42.0994, 0.28", "-38.5404, 77.7804, -42.4611, 0.55", "-38.2643, 80.4555, -42.8583, 0.28", "-38.2108, 81.749, -43.015, 0.55", "-38.2738, 84.7842, -43.4837, 0.28", "-38.4677, 86.8025, -43.872, 0.28", "-38.7116, 88.7769, -44.3031, 0.28", "-38.8026, 89.8134, -44.5422, 0.55", "-38.9723, 93.9511, -45.6461, 0.28", "-39.0315, 98.8073, -47.0722, 0.55", "-39.0288, 100.48, -47.5759, 0.55", "-39.0451, 102.169, -48.0401, 0.55", "-39.2811, 105.77, -49.0476, 0.55", "-39.5975, 108.143, -49.7299, 0.28", "-39.8225, 109.054, -49.9804, 0.55", "-40.5897, 111.553, -50.5761, 0.28", "-41.5327, 114.205, -51.29, 0.55", "-43.2615, 118.029, -52.3919, 0.28", "-44.16, 119.637, -52.8689, 0.28", "-45.7297, 121.857, -53.6902, 0.55", "-47.5387, 124.163, -54.6331, 0.28", "-47.8789, 124.528, -54.7882, 0.55", "-49.1305, 125.701, -55.298, 0.28", "-53.4785, 129.497, -56.8941, 0.55", "-59.6811, 134.169, -59.189, 0.28", "-60.8565, 134.943, -59.6606, 0.55", "-64.1182, 136.932, -60.9733, 0.28", "-65.4995, 137.74, -61.5551, 0.28", "-66.7186, 138.4, -62.1073, 0.55", "-70.4209, 139.864, -63.8667, 0.28", "-73.0577, 140.677, -64.9446, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-46.0022, 46.5829, -20.5404, 0.55", "-46.0719, 47.8332, -20.7735, 0.55", "-46.1289, 48.5769, -20.8415, 0.28", "-46.2693, 49.1249, -20.7573, 0.55", "-46.5915, 50.3832, -20.5638, 0.28", "-46.8179, 51.2671, -20.4278, 0.55", "-47.2353, 52.8965, -20.1773, 0.28", "-47.5377, 53.7854, -19.8934, 0.55", "-48.8242, 55.9902, -18.4843, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-124.972, -36.9535, -35.8607, 0.55", "-130.998, -44.4149, -40.0372, 0.55", "-135.35, -52.7507, -44.6213, 0.55", "-138.475, -60.3659, -51.0774, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-124.972, -36.9535, -35.8607, 0.55", "-132.169, -40.3305, -44.3256, 0.55", "-138.31, -42.8759, -53.8475, 0.55", "-143.999, -45.3658, -63.6603, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-137.344, 16.5723, 39.3155, 0.55", "-142.62, 16.1601, 42.1894, 0.55", "-148.087, 16.6344, 44.6679, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-137.344, 16.5723, 39.3155, 0.55", "-147.74, 15.3944, 41.2378, 0.55", "-158.014, 15.7751, 43.9687, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "100.21, -43.8828, -101.813, 0.28", "106.314, -46.4223, -111.472, 0.28", "106.891, -46.74, -112.345, 0.55", "107.866, -47.2764, -113.82, 0.28", "108.687, -47.7281, -115.061, 0.28", "109.774, -48.326, -116.704, 0.55", "111.207, -49.1143, -118.871, 0.55", "112.757, -50.8755, -120.148, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "100.21, -43.8828, -101.813, 0.55", "100.726, -44.7924, -102.909, 0.55", "100.874, -45.1978, -103.398, 0.28", "101.087, -45.8897, -104.252, 0.55", "101.554, -47.4137, -106.133, 0.28", "101.878, -48.47, -107.436, 0.55", "102.427, -50.2595, -109.645, 0.28", "103.028, -52.4243, -112.539, 0.28", "103.255, -53.4157, -113.894, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "159.407, -11.9743, -9.99921, 0.28", "161.541, -14.8748, -9.085, 0.28", "164.208, -18.7108, -7.55224, 0.28", "165.885, -21.2017, -6.45481, 0.55", "166.896, -22.5725, -5.76752, 0.28", "167.433, -23.3107, -5.39055, 0.28", "170.098, -26.9558, -3.58896, 0.55", "170.704, -27.7642, -3.07228, 0.28", "172.114, -29.9008, -1.57292, 0.55", "173.321, -31.7605, -0.355132, 0.28", "174.384, -33.2696, 0.611407, 0.55", "175.637, -35.0775, 1.64314, 0.55", "177.663, -37.9545, 2.89369, 0.55", "178.153, -38.6612, 3.17221, 0.55", "179.906, -41.3041, 4.1725, 0.28", "180.584, -42.3862, 4.54666, 0.55", "181.537, -43.7646, 5.02802, 0.28", "182.889, -45.7236, 5.61504, 0.55", "185.173, -48.8136, 6.07407, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "159.407, -11.9743, -9.99921, 0.55", "156.434, -11.8545, -10.3252, 0.55", "154.019, -11.7572, -10.5899, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.470752, -34.7236, 5.31929, 0.83", "0.543702, -34.9147, 5.27835, 0.83", "1.45727, -36.6159, 4.93843, 0.83", "2.22781, -38.1055, 4.54749, 0.55", "2.84253, -39.2938, 4.2356, 0.55", "4.14915, -41.8197, 3.57267, 0.83", "5.734, -44.8834, 2.76858, 0.55", "6.61289, -46.4888, 2.36473, 0.83", "8.22243, -49.0502, 1.77214, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.470752, -34.7236, 5.31929, 0.55", "-0.446522, -35.815, 2.14878, 0.55", "-1.43111, -36.9865, -1.25436, 0.55", "-2.59341, -38.3694, -5.27181, 0.55", "-4.00483, -40.0488, -10.1503, 0.55", "-4.80576, -41.0017, -12.9187, 0.55", "-4.96666, -41.1932, -13.4748, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-0.597906, -131.342, 96.7197, 0.55", "0.364496, -140.145, 102.957, 0.55", "2.68842, -149.471, 107.951, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-0.597906, -131.342, 96.7197, 0.55", "-0.60364, -137.862, 100.466, 0.55", "-0.902255, -144.214, 104.48, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-48.8242, 55.9902, -18.4843, 0.28", "-49.8295, 57.6097, -17.0855, 0.28", "-50.2036, 58.2268, -16.4865, 0.55", "-51.2663, 60.0153, -14.7163, 0.28", "-51.8013, 60.8972, -13.9266, 0.55", "-53.2726, 63.2813, -11.8705, 0.28", "-54.768, 65.7045, -9.78082, 0.55", "-57.2601, 69.5215, -6.27498, 0.28", "-57.7898, 70.3407, -5.52809, 0.55", "-58.9485, 72.2463, -3.95529, 0.28", "-59.3951, 73.0324, -3.34034, 0.55", "-64.9141, 78.5056, 2.10052, 0.55", "-71.1044, 84.9102, 5.36866, 0.55", "-76.2312, 91.5607, 9.78522, 0.55", "-80.0347, 99.2368, 13.863, 0.55", "-84.8814, 106.592, 17.3895, 0.55", "-90.586, 112.637, 21.9649, 0.55", "-95.6704, 118.002, 27.913, 0.55", "-99.9025, 122.441, 35.152, 0.55", "-104.119, 127.397, 42.0563, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-48.8242, 55.9902, -18.4843, 0.55", "-52.7804, 54.6461, -17.7674, 0.55", "-54.8361, 53.8828, -17.4069, 0.28", "-56.3659, 53.3148, -17.1387, 0.55", "-57.6409, 52.8414, -16.9151, 0.28", "-58.534, 52.5098, -16.7585, 0.55", "-60.9966, 51.5955, -16.3268, 0.28", "-62.6017, 50.8801, -16.2514, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-138.475, -60.3659, -51.0774, 0.55", "-143.06, -70.0459, -55.8247, 0.55", "-147.422, -80.3147, -59.4014, 0.55", "-150.893, -90.0255, -64.9615, 0.55", "-155.55, -99.9882, -69.0027, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-138.475, -60.3659, -51.0774, 0.55", "-142.43, -63.671, -59.1477, 0.55", "-145.848, -65.6112, -67.8795, 0.55", "-150.142, -68.7507, -75.8422, 0.55", "-156.315, -70.479, -82.9561, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-143.999, -45.3658, -63.6603, 0.55", "-149.774, -43.2938, -71.1478, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-143.999, -45.3658, -63.6603, 0.55", "-148.708, -54.7765, -68.5486, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "112.757, -50.8755, -120.148, 0.28", "116.472, -52.8763, -122.333, 0.28", "118.198, -53.8058, -123.348, 0.55", "121.488, -55.5781, -125.283, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "112.757, -50.8755, -120.148, 0.55", "112.267, -51.7422, -121.689, 0.55", "111.288, -53.4757, -124.772, 0.28", "110.968, -54.0404, -125.776, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "103.255, -53.4157, -113.894, 0.28", "104.114, -56.2164, -118.149, 0.28", "104.54, -57.6032, -120.256, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "103.255, -53.4157, -113.894, 0.55", "102.341, -53.8782, -113.365, 0.55", "99.7913, -55.1681, -111.891, 0.28", "99.1857, -55.4745, -111.54, 0.55", "97.529, -56.3127, -110.582, 0.28", "96.4612, -56.853, -109.965, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "8.22243, -49.0502, 1.77214, 0.83", "8.2354, -49.3771, 1.72497, 0.83", "8.50212, -53.6552, 1.20135, 0.83", "8.49946, -56.8518, 1.08748, 0.83", "8.3871, -59.93, 1.34726, 0.83", "8.19297, -64.0204, 2.03281, 0.83", "7.89759, -68.728, 3.02902, 0.83", "7.67332, -73.983, 4.3991, 0.83", "7.52873, -79.0858, 5.95583, 0.83", "6.91468, -85.3393, 7.85192, 0.83", "6.43054, -88.2087, 8.61401, 0.83", "6.01659, -90.3675, 9.05831, 0.83", "5.11057, -94.5071, 9.85297, 0.83", "4.32027, -98.2192, 10.3402, 0.83", "2.77853, -106.156, 10.3948, 0.83", "1.81061, -110.503, 9.86417, 0.83", "0.826804, -114.51, 9.09479, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "8.22243, -49.0502, 1.77214, 0.55", "7.06451, -51.4623, 1.79605, 0.55", "6.20007, -53.2178, 1.94724, 0.55", "5.67901, -54.3455, 2.15786, 0.55", "4.95033, -56.1194, 2.65951, 0.55", "3.60198, -59.6429, 3.87859, 0.55", "2.56308, -62.3207, 5.09535, 0.55", "1.73537, -64.4761, 6.29902, 0.55", "0.848781, -66.6577, 7.66872, 0.55", "0.0997713, -68.4702, 8.8986, 0.28", "-0.530445, -69.959, 10.1183, 0.55", "-1.73378, -72.6808, 12.7136, 0.55", "-2.55851, -74.3536, 14.4826, 0.55", "-3.03082, -75.2902, 15.4646, 0.55", "-3.64347, -76.3912, 16.5668, 0.83", "-5.49195, -79.6473, 19.6204, 0.28", "-6.10305, -80.7239, 20.6019, 0.55", "-7.14721, -82.6666, 22.3102, 0.28", "-7.46794, -83.267, 22.88, 0.55", "-8.14369, -84.6781, 24.1895, 0.28", "-8.52348, -85.4786, 24.8758, 0.55", "-9.92928, -88.0529, 26.4167, 0.55", "-11.9356, -95.1399, 33.2635, 0.55", "-13.4501, -101.931, 40.5238, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-4.96666, -41.1932, -13.4748, 0.55", "-6.80558, -42.0801, -15.6119, 0.55", "-7.35512, -42.2956, -16.2116, 0.55", "-8.73807, -42.8413, -17.6612, 0.55", "-11.7828, -43.9485, -20.6916, 0.28", "-12.2387, -44.1045, -21.1119, 0.55", "-14.1374, -44.8161, -22.7905, 0.55", "-16.7477, -45.8116, -24.828, 0.55", "-17.7512, -46.1621, -25.5806, 0.28", "-18.6395, -46.4122, -26.1849, 0.28", "-20.166, -46.8241, -27.0094, 0.55", "-22.0375, -47.2354, -28.0793, 0.28", "-23.7838, -47.4675, -29.0973, 0.55", "-25.1477, -47.5405, -29.8523, 0.55", "-26.0959, -47.5133, -30.3964, 0.55", "-28.8956, -47.3083, -32.0682, 0.55", "-31.8671, -46.907, -33.763, 0.55", "-33.1031, -46.6798, -34.4303, 0.28", "-34.2752, -46.4798, -35.0859, 0.55", "-36.6364, -46.2194, -36.4017, 0.28", "-37.4285, -46.1538, -36.8381, 0.83", "-38.912, -46.0219, -37.5564, 0.28", "-39.9737, -46.0122, -37.9462, 0.55", "-41.5098, -46.0513, -38.4857, 0.28", "-42.1227, -46.0608, -38.6808, 0.55", "-43.2565, -46.1029, -38.985, 0.55", "-44.989, -46.0084, -39.3719, 0.55", "-46.1283, -45.8854, -39.5602, 0.28", "-47.0585, -45.6853, -39.6368, 0.55", "-48.1692, -45.3257, -39.7241, 0.28", "-48.3536, -45.253, -39.7434, 0.55", "-50.0658, -44.529, -40.1872, 0.28", "-51.3138, -43.9731, -40.6277, 0.55", "-52.9754, -43.129, -41.4076, 0.83", "-54.3497, -42.3965, -42.1857, 0.28", "-54.705, -42.2073, -42.4181, 0.55", "-57.4274, -40.7824, -44.3383, 0.28", "-57.9035, -40.5371, -44.7169, 0.55", "-59.3185, -39.7234, -45.9083, 0.28", "-59.6837, -39.514, -46.2183, 0.55", "-60.6217, -38.9724, -46.9557, 0.28", "-61.2868, -38.5847, -47.4399, 0.55", "-62.7721, -37.7335, -48.3204, 0.28", "-63.6484, -37.2857, -48.816, 0.55", "-65.5083, -36.4419, -49.7892, 0.28", "-66.0597, -36.2187, -50.0727, 0.55", "-66.9182, -35.9314, -50.4919, 0.28", "-67.6451, -35.6922, -50.8142, 0.55", "-69.1523, -35.2201, -51.4007, 0.28", "-69.6052, -35.0883, -51.5641, 0.55", "-72.9742, -34.059, -52.6284, 0.28", "-74.1612, -33.6279, -52.901, 0.55", "-76.2841, -32.7746, -53.2558, 0.28", "-77.2434, -32.3572, -53.3864, 0.55", "-79.4368, -31.4226, -53.5703, 0.28", "-80.2374, -31.1146, -53.6073, 0.55", "-83.1034, -30.2492, -53.6098, 0.28", "-84.2845, -30.0287, -53.6086, 0.55", "-85.944, -29.9766, -53.6034, 0.55", "-86.9574, -30.0083, -53.5801, 0.55", "-89.0071, -30.1348, -53.3797, 0.28", "-91.0108, -30.2868, -53.0582, 0.28", "-92.6759, -30.4104, -52.7416, 0.55", "-94.7031, -30.4003, -52.1219, 0.28", "-95.6998, -30.2784, -51.673, 0.55", "-98.0687, -29.6169, -50.3432, 0.28", "-99.2539, -29.0477, -49.3513, 0.55", "-99.9915, -28.5622, -48.5288, 0.28", "-100.763, -28.0224, -47.3877, 0.55", "-101.694, -27.3102, -45.8205, 0.28", "-102.048, -27.0653, -45.2327, 0.55", "-103.954, -26.0172, -42.4694, 0.28", "-104.598, -25.6961, -41.5473, 0.55", "-106.111, -25.0097, -39.3125, 0.28", "-106.932, -24.6498, -38.0996, 0.55", "-107.608, -24.3555, -37.1041, 0.55", "-108.425, -24.0112, -35.9411, 0.28", "-108.882, -23.8362, -35.4211, 0.55", "-110.455, -23.1866, -33.7808, 0.28", "-111.28, -22.7358, -32.8968, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-4.96666, -41.1932, -13.4748, 0.55", "-4.61172, -41.1999, -14.701, 0.55", "-4.23357, -41.0662, -15.913, 0.55", "-3.69775, -40.7857, -17.3878, 0.55", "-3.22085, -40.4536, -18.5593, 0.55", "0.367892, -37.4014, -25.8862, 0.55", "1.14251, -36.5153, -27.5349, 0.55", "2.22843, -35.0213, -29.9861, 0.55", "2.98229, -33.903, -31.7225, 0.55", "3.73533, -32.7081, -33.3777, 0.28", "4.97713, -30.7102, -35.8197, 0.55", "6.97791, -27.604, -39.2897, 0.28", "7.09909, -27.4058, -39.6627, 0.55", "7.33365, -26.6673, -42.4125, 0.28", "7.19252, -26.3259, -44.3138, 0.55", "6.86556, -26.1284, -46.3792, 0.55", "6.25066, -25.9686, -50.1026, 0.55", "5.07055, -25.7032, -57.4172, 0.55", "4.37104, -25.5622, -62.3463, 0.55", "4.1765, -25.5216, -64.0544, 0.55", "3.14932, -25.1269, -75.2961, 0.55", "2.99259, -24.9571, -78.3446, 0.55", "3.03223, -24.8428, -80.0599, 0.55", "3.4838, -24.6223, -84.0549, 0.55", "5.18934, -24.4877, -93.6172, 0.55", "5.77221, -24.5384, -96.1825, 0.28", "6.2223, -24.6158, -97.624, 0.55", "6.9414, -24.811, -99.7564, 0.28", "7.31367, -24.9693, -100.619, 0.55", "9.07047, -25.758, -102.892, 0.28", "11.0334, -27.0286, -103.682, 0.55", "12.2548, -27.9657, -104.092, 0.28", "13.4368, -29.0335, -104.353, 0.55", "14.5269, -30.2293, -104.514, 0.28", "15.0073, -30.8549, -104.605, 0.55", "16.1666, -32.5128, -104.75, 0.28", "16.4532, -33.0093, -104.868, 0.55", "18.0408, -35.8489, -105.715, 0.28", "18.7695, -37.147, -106.299, 0.55", "20.3499, -39.8851, -107.91, 0.28", "20.947, -40.8797, -108.639, 0.55", "22.995, -44.1106, -111.292, 0.28", "23.489, -44.8932, -111.976, 0.55", "24.9497, -47.3786, -114.226, 0.28", "25.2666, -47.9699, -114.693, 0.55", "26.0503, -49.5426, -115.897, 0.28", "26.4895, -50.4484, -116.697, 0.55", "26.935, -51.3281, -117.569, 0.55", "27.8287, -53.084, -119.296, 0.28", "28.459, -54.1442, -120.536, 0.55", "30.4538, -56.6562, -124.487, 0.28", "31.2109, -57.4291, -126.066, 0.55", "31.747, -57.9053, -127.139, 0.28", "32.3031, -58.3219, -128.213, 0.55", "34.0631, -59.4368, -131.473, 0.28", "35.4315, -60.311, -133.895, 0.55", "37.9281, -62.0515, -137.802, 0.28", "38.7175, -62.5905, -139.026, 0.55", "40.326, -63.5658, -141.207, 0.28", "40.8903, -63.8844, -141.881, 0.55", "41.903, -64.3945, -142.785, 0.28", "42.833, -64.8188, -143.5, 0.55", "45.4635, -65.8359, -145.162, 0.28", "48.4947, -66.8751, -147.011, 0.28", "50.0687, -67.3325, -147.834, 0.28", "51.6156, -67.7392, -148.754, 0.55", "53.8656, -68.2236, -150.1, 0.28", "54.8741, -68.424, -150.676, 0.83", "57.4876, -68.9742, -152.051, 0.28", "58.5985, -69.2371, -152.711, 0.55", "63.4019, -70.5791, -155.85, 0.28", "65.7246, -71.2736, -157.616, 0.28", "67.3639, -71.7745, -159.014, 0.55", "68.2689, -72.0857, -159.945, 0.55", "70.5735, -72.9453, -162.627, 0.28", "72.6853, -73.8696, -165.243, 0.55", "74.6122, -74.7886, -167.63, 0.28", "76.303, -75.6497, -169.899, 0.55", "77.7049, -76.3393, -171.763, 0.28", "78.8848, -76.7958, -173.208, 0.55", "81.7989, -77.6923, -176.529, 0.28", "83.3113, -78.1455, -178.143, 0.55", "85.6302, -78.8361, -180.473, 0.28", "87.5486, -79.336, -182.328, 0.55", "92.0226, -80.269, -186.662, 0.28", "93.7715, -80.5209, -188.553, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "2.68842, -149.471, 107.951, 0.55", "3.84475, -157.827, 112.032, 0.55", "6.10728, -166.688, 114.07, 0.55", "7.70993, -175.323, 117.338, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "2.68842, -149.471, 107.951, 0.55", "4.36526, -156.78, 113.731, 0.55", "4.42403, -163.277, 120.617, 0.55", "4.0508, -168.257, 128.66, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-0.902255, -144.214, 104.48, 0.55", "0.461061, -153.437, 110.237, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.902255, -144.214, 104.48, 0.55", "-1.64013, -153.775, 110.156, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "0.826804, -114.51, 9.09479, 0.83", "1.76855, -118.468, 9.46644, 0.83", "2.76994, -121.803, 9.97864, 0.83", "3.76534, -125.118, 10.4878, 0.83", "4.71064, -128.266, 10.9713, 0.83", "6.16742, -133.118, 11.7164, 0.83", "7.61368, -137.934, 12.4562, 0.83", "8.91799, -141.121, 13.278, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "0.826804, -114.51, 9.09479, 0.55", "2.25237, -116.601, 8.86047, 0.55", "3.2975, -118.236, 8.40626, 0.55", "3.99572, -119.444, 7.96406, 0.55", "4.57403, -120.859, 7.30965, 0.83", "5.09308, -122.466, 6.39471, 0.55", "5.60079, -124.038, 5.49979, 0.83", "6.02955, -125.742, 4.39207, 0.55", "6.26005, -126.732, 3.65987, 0.83", "6.83036, -129.932, 1.0704, 0.55", "7.04747, -132.443, -1.07973, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-13.4501, -101.931, 40.5238, 0.55", "-15.8547, -108.398, 45.5113, 0.55", "-19.1109, -113.918, 51.115, 0.55", "-22.6418, -118.609, 57.2787, 0.55", "-26.6095, -122.245, 63.8754, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-13.4501, -101.931, 40.5238, 0.55", "-15.198, -106.075, 43.6636, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "8.91799, -141.121, 13.278, 0.55", "9.10848, -143.423, 13.8681, 0.55", "9.43917, -146.361, 14.6871, 0.55", "9.75077, -149.135, 15.4449, 0.55", "9.94651, -151.106, 15.956, 0.55", "10.251, -154.626, 16.8176, 0.55", "11.2311, -164.521, 18.9723, 0.55", "11.63, -167.881, 19.551, 0.55", "11.908, -170.252, 19.8392, 0.55", "12.2253, -172.961, 19.9496, 0.55", "12.416, -175.056, 19.8534, 0.55", "12.9854, -179.954, 19.4115, 0.55", "13.2877, -183.672, 19.0851, 0.55", "13.5595, -186.113, 18.9354, 0.55", "14.2764, -192.442, 18.8729, 0.55", "14.7516, -196.696, 19.0217, 0.55", "15.424, -202.179, 19.5184, 0.55", "16.3197, -208.398, 20.5507, 0.55", "17.1324, -212.549, 21.4753, 0.55", "17.6791, -215.002, 22.0805, 0.55", "18.1405, -217.263, 22.6366, 0.55", "18.7583, -220.127, 23.2007, 0.55", "20.1138, -227.034, 24.1031, 0.55", "20.7176, -229.706, 24.343, 0.55", "21.3167, -232.683, 24.598, 0.55", "22.1771, -237.153, 24.9621, 0.55", "22.6827, -240.59, 25.2931, 0.55", "22.9697, -243.856, 25.5869, 0.55", "23.1052, -246.97, 25.8836, 0.55", "23.1904, -250.009, 26.223, 0.55", "23.2619, -252.172, 26.4416, 0.55", "23.3872, -255.711, 26.6745, 0.55", "23.4433, -259.962, 26.6373, 0.55", "23.5071, -262.027, 26.4576, 0.55", "23.5682, -263.841, 26.1601, 0.55", "23.8187, -267.263, 25.377, 0.55", "23.949, -269.432, 24.8225, 0.55", "24.1506, -272.106, 24.2371, 0.55", "24.2335, -273.986, 23.948, 0.55", "24.3812, -278.871, 23.3984, 0.55", "24.4296, -282.529, 23.2601, 0.55", "24.4593, -288.189, 23.5218, 0.55", "24.5939, -291.841, 24.0275, 0.55", "24.7189, -295.674, 24.6868, 0.28", "24.7375, -297.215, 25.0196, 0.28", "24.8007, -300.953, 26.1701, 0.28", "24.8558, -304.405, 27.5116, 0.28", "25.3992, -308.966, 29.7115, 0.28", "27.6915, -319.229, 31.8794, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "8.91799, -141.121, 13.278, 0.55", "9.88938, -141.514, 13.8878, 0.55", "11.8243, -142.513, 15.2898, 0.55", "13.4635, -143.494, 16.574, 0.28", "15.1981, -144.608, 18.0083, 0.55", "16.1786, -145.317, 19.0294, 0.28", "17.7982, -146.594, 20.9846, 0.55", "18.3661, -147.267, 22.0384, 0.28", "18.545, -147.51, 22.4754, 0.28", "18.8519, -147.858, 23.2381, 0.55", "20.1447, -149.002, 26.0481, 0.28", "20.7169, -149.449, 27.2084, 0.55", "22.6319, -150.746, 30.4019, 0.28", "23.7356, -151.386, 32.0294, 0.28", "25.1738, -152.209, 33.9474, 0.55", "27.4488, -153.486, 36.5586, 0.28", "27.7786, -153.655, 36.8715, 0.55", "29.4671, -154.482, 38.2859, 0.28", "29.6295, -154.558, 38.3956, 0.55", "31.0387, -155.462, 39.4082, 0.28", "31.6877, -155.954, 39.9333, 0.55", "37.005, -159.599, 44.3082, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-26.6095, -122.245, 63.8754, 0.55", "-27.7405, -126.962, 73.2123, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-26.6095, -122.245, 63.8754, 0.55", "-31.919, -130.566, 72.3739, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L5_BP_aae4b53a29_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.33797, 8.53983, 2.89562, 0.83 ) }
    dend_43 { pt3dadd( -6.53482, 11.0177, 3.37775, 1.11 ) }
    dend_43 { pt3dadd( -8.4197, 12.4776, 3.62854, 0.83 ) }
    dend_43 { pt3dadd( -10.251, 13.8837, 3.85325, 0.83 ) }
    dend_43 { pt3dadd( -11.3352, 14.6855, 3.97639, 1.11 ) }
    dend_43 { pt3dadd( -14.7305, 17.191, 4.37103, 1.11 ) }
    dend_43 { pt3dadd( -20.8033, 21.4805, 5.06865, 0.83 ) }
    dend_43 { pt3dadd( -22.9912, 22.9669, 5.29902, 0.83 ) }
    dend_43 { pt3dadd( -24.7237, 24.109, 5.44211, 0.83 ) }
    dend_43 { pt3dadd( -26.4132, 25.2409, 5.56597, 0.83 ) }
    dend_43 { pt3dadd( -27.7884, 26.1739, 5.6328, 0.55 ) }
    dend_43 { pt3dadd( -28.8222, 26.8055, 5.70063, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.61193, 6.24531, -6.22749, 0.55 ) }
    dend_28 { pt3dadd( 7.29964, 6.82672, -6.8277, 0.55 ) }
    dend_28 { pt3dadd( 8.85922, 6.97349, -7.62191, 0.83 ) }
    dend_28 { pt3dadd( 11.3275, 7.12968, -9.09722, 0.55 ) }
    dend_28 { pt3dadd( 12.519, 7.20507, -9.80937, 1.38 ) }
    dend_28 { pt3dadd( 15.4487, 7.39046, -11.5604, 0.55 ) }
    dend_28 { pt3dadd( 16.6965, 7.32768, -12.3959, 0.83 ) }
    dend_28 { pt3dadd( 23.151, 6.17641, -17.0902, 0.55 ) }
    dend_28 { pt3dadd( 23.7754, 6.02159, -17.6066, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.687288, -10.7663, 3.33263, 1.11 ) }
    dend_1 { pt3dadd( -0.741632, -15.5612, 5.05161, 1.11 ) }
    dend_1 { pt3dadd( -0.763766, -17.514, 5.75168, 0.83 ) }
    dend_1 { pt3dadd( -0.793171, -20.1084, 6.68178, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.843764, 10.7523, -1.40709, 1.11 ) }
    dend_0 { pt3dadd( 0.85437, 13.5289, -1.38783, 1.11 ) }
    dend_0 { pt3dadd( 0.830509, 18.0589, -1.19586, 1.38 ) }
    dend_0 { pt3dadd( 0.832669, 18.3114, -1.17995, 1.38 ) }
    dend_0 { pt3dadd( 1.03861, 21.442, -0.918605, 0.83 ) }
    dend_0 { pt3dadd( 1.35666, 24.7574, -0.445029, 0.83 ) }
    dend_0 { pt3dadd( 1.9486, 28.5128, 0.589552, 0.83 ) }
    dend_0 { pt3dadd( 2.3142, 29.9437, 1.18407, 0.83 ) }
    dend_0 { pt3dadd( 2.69567, 30.985, 1.74046, 1.11 ) }
    dend_0 { pt3dadd( 3.85994, 33.5305, 3.20845, 0.55 ) }
    dend_0 { pt3dadd( 5.21897, 36.1942, 4.95751, 0.83 ) }
    dend_0 { pt3dadd( 7.07332, 38.9519, 6.99762, 0.55 ) }
    dend_0 { pt3dadd( 8.04573, 40.1053, 7.94526, 0.83 ) }
    dend_0 { pt3dadd( 9.38537, 41.6694, 9.39402, 0.55 ) }
    dend_0 { pt3dadd( 11.019, 43.657, 11.3254, 0.55 ) }
    dend_0 { pt3dadd( 13.256, 46.6405, 14.2326, 0.55 ) }
    dend_0 { pt3dadd( 15.7158, 50.0463, 17.4407, 0.55 ) }
    dend_0 { pt3dadd( 17.2096, 52.2549, 19.7802, 0.55 ) }
    dend_0 { pt3dadd( 18.9708, 55.0451, 23.0252, 0.55 ) }
    dend_0 { pt3dadd( 19.328, 55.6054, 23.7545, 0.83 ) }
    dend_0 { pt3dadd( 20.2506, 57.0862, 25.7976, 0.55 ) }
    dend_0 { pt3dadd( 21.0487, 58.2435, 27.414, 0.83 ) }
    dend_0 { pt3dadd( 22.8505, 61.3876, 31.2309, 0.55 ) }
    dend_0 { pt3dadd( 23.5811, 62.5366, 32.3799, 0.83 ) }
    dend_0 { pt3dadd( 24.3186, 63.3902, 33.1999, 0.55 ) }
    dend_0 { pt3dadd( 25.0811, 64.1293, 33.862, 0.83 ) }
    dend_0 { pt3dadd( 26.8183, 65.5151, 35.1217, 0.83 ) }
    dend_0 { pt3dadd( 29.1545, 67.3984, 36.5537, 0.83 ) }
    dend_0 { pt3dadd( 30.6148, 68.6387, 37.2575, 0.55 ) }
    dend_0 { pt3dadd( 31.7225, 69.7059, 37.8001, 0.55 ) }
    dend_0 { pt3dadd( 34.6361, 72.4649, 39.1745, 0.83 ) }
    dend_0 { pt3dadd( 36.5328, 74.2346, 39.9785, 0.55 ) }
    dend_0 { pt3dadd( 39.4376, 76.831, 41.0719, 0.55 ) }
    dend_0 { pt3dadd( 42.1261, 79.0165, 41.9597, 0.55 ) }
    dend_0 { pt3dadd( 44.5463, 80.8728, 42.6854, 0.55 ) }
    dend_0 { pt3dadd( 47.6359, 83.056, 43.4559, 0.55 ) }
    dend_0 { pt3dadd( 49.5445, 84.1399, 43.8642, 0.55 ) }
    dend_0 { pt3dadd( 50.8785, 84.7576, 43.982, 0.55 ) }
    dend_0 { pt3dadd( 52.6883, 85.2475, 43.99, 0.55 ) }
    dend_0 { pt3dadd( 55.4423, 85.5395, 43.7867, 0.55 ) }
    dend_0 { pt3dadd( 57.1781, 85.5084, 43.5975, 0.55 ) }
    dend_0 { pt3dadd( 59.6889, 85.3965, 43.4917, 0.55 ) }
    dend_0 { pt3dadd( 64.3971, 85.3329, 43.7021, 0.55 ) }
    dend_0 { pt3dadd( 68.0421, 85.4529, 44.1241, 0.55 ) }
    dend_0 { pt3dadd( 71.8601, 85.7656, 44.7993, 0.55 ) }
    dend_0 { pt3dadd( 74.2726, 86.0517, 45.4262, 0.55 ) }
    dend_0 { pt3dadd( 80.448, 87.3822, 47.4718, 0.55 ) }
    dend_0 { pt3dadd( 84.043, 88.465, 48.9654, 0.55 ) }
    dend_0 { pt3dadd( 86.6872, 89.4659, 50.35, 0.55 ) }
    dend_0 { pt3dadd( 88.2718, 90.3644, 51.2564, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 90.0997, 91.6795, 52.2952, 0.55 ) }
    dend_0 { pt3dadd( 93.2311, 94.2509, 53.748, 0.55 ) }
    dend_0 { pt3dadd( 93.9662, 94.8685, 53.9733, 0.55 ) }
    dend_0 { pt3dadd( 96.1042, 96.5252, 54.4733, 0.55 ) }
    dend_0 { pt3dadd( 98.0613, 98.2779, 54.9233, 0.83 ) }
    dend_0 { pt3dadd( 99.1317, 99.2494, 55.151, 0.55 ) }
    dend_0 { pt3dadd( 100.739, 100.908, 55.4239, 0.83 ) }
    dend_0 { pt3dadd( 108.805, 109.763, 59.1879, 0.83 ) }
    dend_0 { pt3dadd( 115.831, 119.827, 61.8353, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -28.8222, 26.8055, 5.70063, 0.55 ) }
    dend_55 { pt3dadd( -30.335, 28.0519, 4.68312, 0.55 ) }
    dend_55 { pt3dadd( -31.98, 29.4071, 3.57667, 0.55 ) }
    dend_55 { pt3dadd( -33.9652, 31.0426, 2.24144, 0.55 ) }
    dend_55 { pt3dadd( -35.6044, 32.3931, 1.1389, 0.83 ) }
    dend_55 { pt3dadd( -36.9781, 33.5247, 0.214971, 0.55 ) }
    dend_55 { pt3dadd( -39.5278, 35.6253, -1.49997, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -28.8222, 26.8055, 5.70063, 0.55 ) }
    dend_44 { pt3dadd( -30.6618, 27.2039, 5.37509, 0.55 ) }
    dend_44 { pt3dadd( -32.6345, 27.5482, 5.21996, 0.55 ) }
    dend_44 { pt3dadd( -34.8755, 27.9301, 5.09842, 0.55 ) }
    dend_44 { pt3dadd( -38.1435, 28.4214, 5.21734, 0.55 ) }
    dend_44 { pt3dadd( -40.8934, 28.7361, 5.50318, 0.55 ) }
    dend_44 { pt3dadd( -43.7869, 29.0111, 5.92103, 0.55 ) }
    dend_44 { pt3dadd( -46.6079, 29.0632, 6.60614, 0.55 ) }
    dend_44 { pt3dadd( -49.056, 28.8556, 7.40596, 0.55 ) }
    dend_44 { pt3dadd( -52.1321, 28.3604, 8.70263, 0.55 ) }
    dend_44 { pt3dadd( -53.4839, 28.0342, 9.43828, 0.55 ) }
    dend_44 { pt3dadd( -54.9487, 27.6615, 10.2919, 0.55 ) }
    dend_44 { pt3dadd( -57.5264, 26.8275, 11.6691, 0.55 ) }
    dend_44 { pt3dadd( -58.8831, 26.4062, 12.1959, 0.55 ) }
    dend_44 { pt3dadd( -60.304, 25.9235, 12.7358, 0.55 ) }
    dend_44 { pt3dadd( -61.9815, 25.3849, 13.2142, 0.55 ) }
    dend_44 { pt3dadd( -63.8005, 24.8409, 13.6888, 0.55 ) }
    dend_44 { pt3dadd( -66.3925, 24.0632, 14.3104, 0.55 ) }
    dend_44 { pt3dadd( -69.8298, 23.2778, 14.857, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 23.7754, 6.02159, -17.6066, 0.55 ) }
    dend_34 { pt3dadd( 30.5728, 7.60551, -19.0332, 0.55 ) }
    dend_34 { pt3dadd( 34.4751, 8.33222, -20.4211, 0.55 ) }
    dend_34 { pt3dadd( 38.3188, 8.8812, -21.8603, 0.55 ) }
    dend_34 { pt3dadd( 40.9408, 9.15137, -22.851, 0.55 ) }
    dend_34 { pt3dadd( 44.7694, 9.45494, -24.2765, 0.55 ) }
    dend_34 { pt3dadd( 52.7028, 9.94996, -27.4945, 0.55 ) }
    dend_34 { pt3dadd( 61.6937, 10.501, -31.7522, 0.55 ) }
    dend_34 { pt3dadd( 66.0387, 10.5181, -34.1419, 0.55 ) }
    dend_34 { pt3dadd( 68.3617, 10.4814, -35.5805, 0.55 ) }
    dend_34 { pt3dadd( 70.9082, 10.4617, -37.2614, 0.55 ) }
    dend_34 { pt3dadd( 75.4472, 10.2969, -40.253, 0.55 ) }
    dend_34 { pt3dadd( 77.0909, 10.1434, -41.4028, 0.55 ) }
    dend_34 { pt3dadd( 84.0507, 9.71213, -46.8022, 0.55 ) }
    dend_34 { pt3dadd( 88.9762, 9.51567, -50.9883, 0.55 ) }
    dend_34 { pt3dadd( 91.8134, 9.46473, -53.4732, 0.55 ) }
    dend_34 { pt3dadd( 94.6421, 9.38839, -55.9514, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 23.7754, 6.02159, -17.6066, 0.83 ) }
    dend_29 { pt3dadd( 26.1177, 7.58867, -17.6788, 0.83 ) }
    dend_29 { pt3dadd( 27.4575, 8.48067, -17.7831, 0.55 ) }
    dend_29 { pt3dadd( 29.4303, 9.83158, -18.1112, 0.83 ) }
    dend_29 { pt3dadd( 30.7559, 10.7732, -18.3746, 0.55 ) }
    dend_29 { pt3dadd( 32.5817, 12.1233, -18.7121, 0.83 ) }
    dend_29 { pt3dadd( 34.7745, 13.7943, -19.0359, 0.55 ) }
    dend_29 { pt3dadd( 35.8804, 14.5528, -19.1483, 0.55 ) }
    dend_29 { pt3dadd( 38.4367, 15.9495, -19.2075, 0.83 ) }
    dend_29 { pt3dadd( 40.7641, 16.943, -18.9399, 0.55 ) }
    dend_29 { pt3dadd( 42.0639, 17.4897, -18.6621, 0.83 ) }
    dend_29 { pt3dadd( 44.0092, 18.3622, -18.0366, 0.55 ) }
    dend_29 { pt3dadd( 46.796, 19.6814, -16.7726, 0.55 ) }
    dend_29 { pt3dadd( 50.671, 21.3162, -14.8039, 0.55 ) }
    dend_29 { pt3dadd( 54.3672, 22.7492, -12.6579, 0.55 ) }
    dend_29 { pt3dadd( 57.296, 23.8546, -10.9021, 0.55 ) }
    dend_29 { pt3dadd( 62.1231, 25.7011, -7.98248, 0.55 ) }
    dend_29 { pt3dadd( 65.6493, 27.1596, -5.77046, 0.55 ) }
    dend_29 { pt3dadd( 67.7695, 28.2272, -4.36142, 0.55 ) }
    dend_29 { pt3dadd( 71.6564, 30.6087, -1.7454, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.793171, -20.1084, 6.68178, 0.83 ) }
    dend_11 { pt3dadd( -1.08958, -23.4086, 6.55017, 0.83 ) }
    dend_11 { pt3dadd( -1.37838, -26.6239, 6.42195, 0.83 ) }
    dend_11 { pt3dadd( -1.70081, -30.2137, 6.2788, 0.83 ) }
    dend_11 { pt3dadd( -1.86918, -32.0883, 6.20404, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.793171, -20.1084, 6.68178, 0.55 ) }
    dend_2 { pt3dadd( -0.0344052, -21.9477, 7.74832, 0.55 ) }
    dend_2 { pt3dadd( 0.702856, -24.1858, 9.19412, 0.55 ) }
    dend_2 { pt3dadd( 1.26797, -27.0897, 11.295, 0.55 ) }
    dend_2 { pt3dadd( 1.41816, -28.2135, 12.1579, 0.83 ) }
    dend_2 { pt3dadd( 1.61742, -31.0682, 14.7333, 0.55 ) }
    dend_2 { pt3dadd( 1.6091, -32.5342, 16.1166, 0.55 ) }
    dend_2 { pt3dadd( 1.5601, -35.383, 18.9381, 0.83 ) }
    dend_2 { pt3dadd( 1.43355, -37.492, 21.1913, 0.55 ) }
    dend_2 { pt3dadd( 1.17184, -39.2199, 23.0572, 0.55 ) }
    dend_2 { pt3dadd( 0.590575, -42.4862, 26.5484, 0.55 ) }
    dend_2 { pt3dadd( 0.12324, -45.0892, 29.3002, 0.55 ) }
    dend_2 { pt3dadd( -0.203162, -47.1795, 31.5259, 0.55 ) }
    dend_2 { pt3dadd( -0.444316, -49.4066, 33.7928, 0.28 ) }
    dend_2 { pt3dadd( -0.475829, -50.3392, 34.6849, 0.55 ) }
    dend_2 { pt3dadd( -0.511369, -52.0634, 36.2271, 0.28 ) }
    dend_2 { pt3dadd( -0.299348, -54.7741, 38.1454, 0.55 ) }
    dend_2 { pt3dadd( -1.59528, -63.6455, 45.4701, 0.55 ) }
    dend_2 { pt3dadd( -2.91246, -71.8355, 53.5461, 0.55 ) }
    dend_2 { pt3dadd( -3.30583, -78.6218, 62.9176, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -39.5278, 35.6253, -1.49997, 0.55 ) }
    dend_61 { pt3dadd( -42.0838, 36.064, 0.0333641, 0.55 ) }
    dend_61 { pt3dadd( -43.1522, 36.1957, 0.820119, 0.83 ) }
    dend_61 { pt3dadd( -44.3926, 36.2944, 1.91836, 0.55 ) }
    dend_61 { pt3dadd( -45.3358, 36.3745, 2.84984, 0.83 ) }
    dend_61 { pt3dadd( -47.806, 36.6767, 5.2619, 0.55 ) }
    dend_61 { pt3dadd( -48.7403, 36.8082, 6.18208, 0.28 ) }
    dend_61 { pt3dadd( -50.2883, 37.0536, 7.85568, 0.55 ) }
    dend_61 { pt3dadd( -52.3656, 37.3954, 10.0901, 0.55 ) }
    dend_61 { pt3dadd( -53.948, 37.6511, 11.7087, 0.55 ) }
    dend_61 { pt3dadd( -56.0667, 37.9881, 13.7987, 0.28 ) }
    dend_61 { pt3dadd( -56.6218, 38.0761, 14.2704, 0.55 ) }
    dend_61 { pt3dadd( -57.7732, 38.27, 15.1999, 0.28 ) }
    dend_61 { pt3dadd( -58.5596, 38.4188, 15.7521, 0.55 ) }
    dend_61 { pt3dadd( -60.175, 38.7025, 16.7335, 0.28 ) }
    dend_61 { pt3dadd( -61.1285, 38.8116, 17.2613, 0.55 ) }
    dend_61 { pt3dadd( -62.8142, 38.8774, 18.2145, 0.28 ) }
    dend_61 { pt3dadd( -63.9494, 38.9116, 18.8139, 0.55 ) }
    dend_61 { pt3dadd( -70.673, 38.7289, 25.6824, 0.55 ) }
    dend_61 { pt3dadd( -76.7842, 37.645, 33.0236, 0.55 ) }
    dend_61 { pt3dadd( -82.677, 35.65, 40.3524, 0.55 ) }
    dend_61 { pt3dadd( -88.5972, 32.5343, 47.2561, 0.55 ) }
    dend_61 { pt3dadd( -93.3926, 29.8199, 55.1333, 0.55 ) }
    dend_61 { pt3dadd( -98.9015, 27.4611, 62.6503, 0.55 ) }
    dend_61 { pt3dadd( -104.449, 26.6765, 70.4616, 0.55 ) }
    dend_61 { pt3dadd( -110.001, 25.1284, 78.1554, 0.55 ) }
    dend_61 { pt3dadd( -115.34, 24.2208, 86.0986, 0.55 ) }
    dend_61 { pt3dadd( -120.229, 23.1717, 94.3088, 0.55 ) }
    dend_61 { pt3dadd( -124.209, 21.0232, 102.792, 0.55 ) }
    dend_61 { pt3dadd( -128.235, 19.7698, 111.43, 0.55 ) }
    dend_61 { pt3dadd( -132.436, 17.5574, 119.79, 0.55 ) }
    dend_61 { pt3dadd( -135.524, 14.917, 128.502, 0.55 ) }
    dend_61 { pt3dadd( -136.968, 12.8906, 137.788, 0.55 ) }
    dend_61 { pt3dadd( -138.447, 9.09005, 146.493, 0.55 ) }
    dend_61 { pt3dadd( -138.563, 5.06139, 155.221, 0.55 ) }
    dend_61 { pt3dadd( -139.165, 1.45583, 164.112, 0.55 ) }
    dend_61 { pt3dadd( -140.757, -1.41737, 173.147, 0.55 ) }
    dend_61 { pt3dadd( -144.28, -2.73326, 181.994, 0.55 ) }
    dend_61 { pt3dadd( -147.016, -5.13759, 190.891, 0.55 ) }
    dend_61 { pt3dadd( -147.877, -5.99978, 200.427, 0.55 ) }
    dend_61 { pt3dadd( -150.246, -6.10719, 209.743, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -39.5278, 35.6253, -1.49997, 0.55 ) }
    dend_56 { pt3dadd( -40.991, 36.8296, -3.83178, 0.55 ) }
    dend_56 { pt3dadd( -41.9869, 38.1348, -6.33221, 0.55 ) }
    dend_56 { pt3dadd( -42.8605, 39.6723, -8.92803, 0.55 ) }
    dend_56 { pt3dadd( -43.4076, 40.6351, -10.5535, 0.55 ) }
    dend_56 { pt3dadd( -44.4055, 42.3912, -13.5185, 0.83 ) }
    dend_56 { pt3dadd( -45.1355, 43.6761, -15.6878, 0.55 ) }
    dend_56 { pt3dadd( -45.8515, 45.4485, -18.8331, 0.83 ) }
    dend_56 { pt3dadd( -46.0022, 46.5829, -20.5404, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -69.8298, 23.2778, 14.857, 0.28 ) }
    dend_48 { pt3dadd( -70.8916, 21.499, 14.0741, 0.28 ) }
    dend_48 { pt3dadd( -71.3928, 20.748, 13.6646, 0.28 ) }
    dend_48 { pt3dadd( -72.0411, 19.6909, 13.049, 0.55 ) }
    dend_48 { pt3dadd( -72.5763, 18.7586, 12.5199, 0.28 ) }
    dend_48 { pt3dadd( -73.3674, 17.334, 11.7356, 0.55 ) }
    dend_48 { pt3dadd( -75.5746, 13.1294, 9.51554, 0.28 ) }
    dend_48 { pt3dadd( -76.284, 11.674, 8.61661, 0.55 ) }
    dend_48 { pt3dadd( -77.3517, 9.44583, 7.1521, 0.28 ) }
    dend_48 { pt3dadd( -77.9589, 8.1231, 6.21329, 0.55 ) }
    dend_48 { pt3dadd( -78.3763, 7.21567, 5.54214, 0.28 ) }
    dend_48 { pt3dadd( -78.8528, 6.17244, 4.78155, 0.55 ) }
    dend_48 { pt3dadd( -80.295, 2.66866, 2.35206, 0.28 ) }
    dend_48 { pt3dadd( -80.7458, 1.61642, 1.57456, 0.55 ) }
    dend_48 { pt3dadd( -81.523, 0.0425956, 0.192856, 0.28 ) }
    dend_48 { pt3dadd( -82.1626, -0.942169, -0.805382, 0.28 ) }
    dend_48 { pt3dadd( -82.7431, -1.58836, -1.51614, 0.55 ) }
    dend_48 { pt3dadd( -84.7894, -3.3934, -3.49382, 0.28 ) }
    dend_48 { pt3dadd( -85.7466, -4.12146, -4.28935, 0.55 ) }
    dend_48 { pt3dadd( -88.0822, -5.75122, -6.24094, 0.28 ) }
    dend_48 { pt3dadd( -90.4239, -7.1737, -8.03993, 0.28 ) }
    dend_48 { pt3dadd( -92.9726, -8.50146, -9.87604, 0.28 ) }
    dend_48 { pt3dadd( -94.1455, -8.99084, -10.5965, 0.55 ) }
    dend_48 { pt3dadd( -99.793, -15.1163, -15.7838, 0.55 ) }
    dend_48 { pt3dadd( -106.249, -21.6259, -19.2851, 0.55 ) }
    dend_48 { pt3dadd( -112.441, -27.5143, -24.1132, 0.55 ) }
    dend_48 { pt3dadd( -118.709, -32.6541, -29.6462, 0.55 ) }
    dend_48 { pt3dadd( -124.972, -36.9535, -35.8607, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -69.8298, 23.2778, 14.857, 0.55 ) }
    dend_45 { pt3dadd( -70.4989, 23.2334, 14.8862, 0.55 ) }
    dend_45 { pt3dadd( -72.4059, 23.0838, 15.2095, 0.55 ) }
    dend_45 { pt3dadd( -73.126, 23.0054, 15.3662, 0.55 ) }
    dend_45 { pt3dadd( -74.8228, 22.7685, 15.7543, 0.55 ) }
    dend_45 { pt3dadd( -77.4217, 22.4436, 16.232, 0.55 ) }
    dend_45 { pt3dadd( -78.7693, 22.3178, 16.4615, 0.28 ) }
    dend_45 { pt3dadd( -80.8643, 22.0818, 16.7736, 0.55 ) }
    dend_45 { pt3dadd( -82.4164, 21.8815, 16.9473, 0.55 ) }
    dend_45 { pt3dadd( -83.072, 21.7925, 17.0216, 0.28 ) }
    dend_45 { pt3dadd( -87.0043, 21.2572, 17.4617, 0.55 ) }
    dend_45 { pt3dadd( -88.8352, 20.9362, 17.5483, 0.28 ) }
    dend_45 { pt3dadd( -91.2932, 20.5098, 17.5222, 0.28 ) }
    dend_45 { pt3dadd( -93.4015, 20.1864, 17.3808, 0.55 ) }
    dend_45 { pt3dadd( -101.745, 19.9236, 18.7333, 0.55 ) }
    dend_45 { pt3dadd( -109.885, 19.3448, 20.953, 0.55 ) }
    dend_45 { pt3dadd( -117.654, 17.8093, 23.9186, 0.55 ) }
    dend_45 { pt3dadd( -125.22, 17.6062, 27.6903, 0.55 ) }
    dend_45 { pt3dadd( -131.853, 16.9371, 32.8936, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -137.344, 16.5723, 39.3155, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 94.6421, 9.38839, -55.9514, 0.55 ) }
    dend_42 { pt3dadd( 99.2754, 10.8945, -59.6769, 0.55 ) }
    dend_42 { pt3dadd( 100.733, 11.3171, -60.9537, 0.55 ) }
    dend_42 { pt3dadd( 102.553, 11.7833, -62.5369, 0.55 ) }
    dend_42 { pt3dadd( 105.847, 12.6225, -65.6084, 0.55 ) }
    dend_42 { pt3dadd( 109.272, 13.3651, -68.9164, 0.55 ) }
    dend_42 { pt3dadd( 110.937, 13.5869, -70.5064, 0.83 ) }
    dend_42 { pt3dadd( 112.297, 13.6849, -71.9321, 0.55 ) }
    dend_42 { pt3dadd( 113.305, 13.6834, -73.1143, 0.83 ) }
    dend_42 { pt3dadd( 115.701, 13.345, -76.1796, 0.55 ) }
    dend_42 { pt3dadd( 117.658, 12.8722, -78.7406, 0.55 ) }
    dend_42 { pt3dadd( 119.911, 12.2982, -81.5694, 0.55 ) }
    dend_42 { pt3dadd( 122.423, 11.7426, -84.7647, 0.55 ) }
    dend_42 { pt3dadd( 124.104, 11.3325, -86.9575, 0.55 ) }
    dend_42 { pt3dadd( 125.998, 10.8709, -89.4967, 0.55 ) }
    dend_42 { pt3dadd( 127.637, 10.5486, -91.8063, 0.55 ) }
    dend_42 { pt3dadd( 128.672, 10.464, -93.3945, 0.55 ) }
    dend_42 { pt3dadd( 129.949, 10.417, -96.5583, 0.55 ) }
    dend_42 { pt3dadd( 130.632, 10.3365, -98.5399, 0.55 ) }
    dend_42 { pt3dadd( 131.179, 10.1463, -101.174, 0.55 ) }
    dend_42 { pt3dadd( 131.885, 9.71079, -105.633, 0.55 ) }
    dend_42 { pt3dadd( 132.022, 9.57739, -106.642, 0.28 ) }
    dend_42 { pt3dadd( 133.82, 7.81194, -118.924, 0.28 ) }
    dend_42 { pt3dadd( 134.454, 7.30943, -122.531, 0.83 ) }
    dend_42 { pt3dadd( 136.995, 5.28183, -135.354, 0.83 ) }
    dend_42 { pt3dadd( 138.311, 4.09805, -141.339, 0.83 ) }
    dend_42 { pt3dadd( 138.958, 3.51417, -143.776, 0.55 ) }
    dend_42 { pt3dadd( 139.721, 2.92406, -146.156, 0.55 ) }
    dend_42 { pt3dadd( 141.936, 1.6647, -150.602, 0.55 ) }
    dend_42 { pt3dadd( 144.349, 0.481083, -154.525, 0.28 ) }
    dend_42 { pt3dadd( 145.115, 0.181606, -154.792, 0.55 ) }
    dend_42 { pt3dadd( 146.826, -0.425253, -154.74, 0.28 ) }
    dend_42 { pt3dadd( 147.895, -0.741414, -154.543, 0.55 ) }
    dend_42 { pt3dadd( 149.01, -1.09682, -154.242, 0.28 ) }
    dend_42 { pt3dadd( 150.356, -1.46272, -153.812, 0.55 ) }
    dend_42 { pt3dadd( 152.374, -1.87885, -153.373, 0.28 ) }
    dend_42 { pt3dadd( 153.988, -2.25695, -153.079, 0.55 ) }
    dend_42 { pt3dadd( 155.781, -2.53984, -152.885, 0.28 ) }
    dend_42 { pt3dadd( 158.215, -2.8918, -152.836, 0.55 ) }
    dend_42 { pt3dadd( 160.945, -3.20451, -152.94, 0.55 ) }
    dend_42 { pt3dadd( 163.345, -3.4329, -153.188, 0.28 ) }
    dend_42 { pt3dadd( 166.664, -3.69775, -153.712, 0.55 ) }
    dend_42 { pt3dadd( 172.402, -3.92732, -155.216, 0.55 ) }
    dend_42 { pt3dadd( 174.941, -3.86207, -156.174, 0.55 ) }
    dend_42 { pt3dadd( 176.033, -3.77524, -156.698, 0.83 ) }
    dend_42 { pt3dadd( 178.11, -3.57343, -157.887, 0.55 ) }
    dend_42 { pt3dadd( 179.555, -3.36435, -158.797, 0.83 ) }
    dend_42 { pt3dadd( 183.448, -2.69395, -161.278, 0.55 ) }
    dend_42 { pt3dadd( 185.81, -2.44202, -162.873, 0.28 ) }
    dend_42 { pt3dadd( 186.802, -2.41109, -163.438, 0.55 ) }
    dend_42 { pt3dadd( 189.506, -2.61503, -164.71, 0.28 ) }
    dend_42 { pt3dadd( 190.448, -2.7821, -165.101, 0.55 ) }
    dend_42 { pt3dadd( 192.384, -3.28484, -165.615, 0.28 ) }
    dend_42 { pt3dadd( 194.347, -4.03136, -165.811, 0.55 ) }
    dend_42 { pt3dadd( 198.312, -5.83773, -165.514, 0.28 ) }
    dend_42 { pt3dadd( 200.138, -6.7757, -165.186, 0.55 ) }
    dend_42 { pt3dadd( 202.843, -8.34749, -164.566, 0.28 ) }
    dend_42 { pt3dadd( 206.265, -10.3335, -163.654, 0.55 ) }
    dend_42 { pt3dadd( 208.744, -11.7394, -162.951, 0.55 ) }
    dend_42 { pt3dadd( 213.051, -14.0443, -161.644, 0.28 ) }
    dend_42 { pt3dadd( 214.822, -14.8898, -161.248, 0.55 ) }
    dend_42 { pt3dadd( 217.882, -16.1306, -160.89, 0.28 ) }
    dend_42 { pt3dadd( 220.945, -17.1045, -160.725, 0.55 ) }
    dend_42 { pt3dadd( 222.636, -17.4189, -160.852, 0.28 ) }
    dend_42 { pt3dadd( 224.178, -17.4818, -161.065, 0.55 ) }
    dend_42 { pt3dadd( 228.543, -17.3539, -162.05, 0.28 ) }
    dend_42 { pt3dadd( 231.677, -17.0416, -162.781, 0.28 ) }
    dend_42 { pt3dadd( 234.417, -16.5684, -163.435, 0.55 ) }
    dend_42 { pt3dadd( 237.445, -15.9455, -164.299, 0.28 ) }
    dend_42 { pt3dadd( 238.212, -15.7442, -164.487, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 94.6421, 9.38839, -55.9514, 0.55 ) }
    dend_35 { pt3dadd( 95.1014, 7.57144, -57.415, 0.55 ) }
    dend_35 { pt3dadd( 95.3459, 6.02121, -58.5361, 0.28 ) }
    dend_35 { pt3dadd( 95.5699, 4.58684, -59.4357, 0.55 ) }
    dend_35 { pt3dadd( 96.2074, 1.54931, -61.3757, 0.28 ) }
    dend_35 { pt3dadd( 96.2417, 1.36128, -61.5257, 0.55 ) }
    dend_35 { pt3dadd( 96.4493, 0.385767, -62.3984, 0.28 ) }
    dend_35 { pt3dadd( 96.5398, -0.405635, -63.2558, 0.55 ) }
    dend_35 { pt3dadd( 96.5815, -1.22008, -64.2528, 0.28 ) }
    dend_35 { pt3dadd( 96.6015, -2.32448, -65.669, 0.55 ) }
    dend_35 { pt3dadd( 96.6503, -5.10421, -69.1666, 0.55 ) }
    dend_35 { pt3dadd( 96.6618, -7.63206, -72.404, 0.55 ) }
    dend_35 { pt3dadd( 96.6485, -9.65207, -74.9942, 0.55 ) }
    dend_35 { pt3dadd( 96.5952, -11.6419, -77.5, 0.55 ) }
    dend_35 { pt3dadd( 96.5799, -12.1588, -78.123, 0.28 ) }
    dend_35 { pt3dadd( 96.5816, -12.7167, -78.7378, 0.55 ) }
    dend_35 { pt3dadd( 96.6643, -13.4986, -79.5126, 0.28 ) }
    dend_35 { pt3dadd( 96.9686, -14.9167, -80.7658, 0.55 ) }
    dend_35 { pt3dadd( 97.8048, -17.6849, -82.7118, 0.55 ) }
    dend_35 { pt3dadd( 98.2699, -19.1891, -83.619, 0.28 ) }
    dend_35 { pt3dadd( 98.6501, -20.71, -84.6085, 0.55 ) }
    dend_35 { pt3dadd( 99.0195, -22.8297, -86.0742, 0.28 ) }
    dend_35 { pt3dadd( 99.2027, -24.5351, -87.2965, 0.55 ) }
    dend_35 { pt3dadd( 99.3626, -27.0836, -89.127, 0.28 ) }
    dend_35 { pt3dadd( 99.5493, -29.7301, -90.9359, 0.55 ) }
    dend_35 { pt3dadd( 99.7667, -33.5683, -93.5964, 0.28 ) }
    dend_35 { pt3dadd( 99.8358, -35.6132, -95.0206, 0.55 ) }
    dend_35 { pt3dadd( 99.8704, -37.699, -96.5283, 0.28 ) }
    dend_35 { pt3dadd( 99.8792, -39.5223, -97.9748, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 99.9702, -41.7814, -99.9934, 0.55 ) }
    dend_35 { pt3dadd( 100.21, -43.8828, -101.813, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 71.6564, 30.6087, -1.7454, 0.55 ) }
    dend_31 { pt3dadd( 74.2038, 30.4257, -1.08371, 0.55 ) }
    dend_31 { pt3dadd( 76.0675, 30.2034, -0.772237, 0.55 ) }
    dend_31 { pt3dadd( 80.1547, 29.6488, -0.299626, 0.55 ) }
    dend_31 { pt3dadd( 81.9981, 29.3455, -0.247351, 0.55 ) }
    dend_31 { pt3dadd( 84.0115, 29.0474, -0.296354, 0.55 ) }
    dend_31 { pt3dadd( 86.7189, 28.6762, -0.557527, 0.55 ) }
    dend_31 { pt3dadd( 89.5835, 28.183, -1.09569, 0.55 ) }
    dend_31 { pt3dadd( 91.0918, 27.8882, -1.54683, 0.55 ) }
    dend_31 { pt3dadd( 94.1672, 27.248, -2.87795, 0.55 ) }
    dend_31 { pt3dadd( 95.5845, 26.9605, -3.53657, 0.55 ) }
    dend_31 { pt3dadd( 98.9086, 26.2156, -5.15895, 0.55 ) }
    dend_31 { pt3dadd( 101.162, 25.623, -6.23108, 0.55 ) }
    dend_31 { pt3dadd( 102.818, 25.1837, -6.94456, 0.83 ) }
    dend_31 { pt3dadd( 105.466, 24.3869, -8.04575, 0.55 ) }
    dend_31 { pt3dadd( 108.06, 23.4902, -9.01284, 0.83 ) }
    dend_31 { pt3dadd( 110.261, 22.6361, -9.74631, 0.55 ) }
    dend_31 { pt3dadd( 112.217, 21.9142, -10.3, 0.55 ) }
    dend_31 { pt3dadd( 113.327, 21.5581, -10.5584, 0.83 ) }
    dend_31 { pt3dadd( 115.915, 20.748, -11.0265, 0.28 ) }
    dend_31 { pt3dadd( 117.2, 20.4061, -11.1828, 0.28 ) }
    dend_31 { pt3dadd( 118.445, 19.9902, -11.3909, 0.28 ) }
    dend_31 { pt3dadd( 119.791, 19.576, -11.6252, 0.28 ) }
    dend_31 { pt3dadd( 121.945, 18.9494, -12.0481, 0.28 ) }
    dend_31 { pt3dadd( 122.811, 18.7105, -12.1935, 0.55 ) }
    dend_31 { pt3dadd( 124.878, 18.1797, -12.3412, 0.55 ) }
    dend_31 { pt3dadd( 128.594, 17.2063, -12.4167, 0.55 ) }
    dend_31 { pt3dadd( 129.622, 16.914, -12.39, 0.55 ) }
    dend_31 { pt3dadd( 130.54, 16.6266, -12.324, 0.83 ) }
    dend_31 { pt3dadd( 132.529, 16.0796, -12.0252, 0.55 ) }
    dend_31 { pt3dadd( 134.258, 15.6102, -11.738, 0.55 ) }
    dend_31 { pt3dadd( 135.891, 15.1744, -11.4596, 0.55 ) }
    dend_31 { pt3dadd( 137.157, 14.8112, -11.278, 0.55 ) }
    dend_31 { pt3dadd( 139.169, 14.0846, -11.076, 0.55 ) }
    dend_31 { pt3dadd( 141.545, 13.0054, -10.9509, 0.55 ) }
    dend_31 { pt3dadd( 145.248, 10.8855, -10.9792, 0.55 ) }
    dend_31 { pt3dadd( 147.286, 9.40862, -11.0979, 0.55 ) }
    dend_31 { pt3dadd( 149.059, 7.81684, -11.2634, 0.28 ) }
    dend_31 { pt3dadd( 149.589, 7.22285, -11.3335, 0.55 ) }
    dend_31 { pt3dadd( 150.766, 5.54941, -11.5189, 0.28 ) }
    dend_31 { pt3dadd( 151.782, 3.66514, -11.6939, 0.55 ) }
    dend_31 { pt3dadd( 152.742, 1.32068, -11.7319, 0.55 ) }
    dend_31 { pt3dadd( 153.388, -0.212472, -11.6835, 0.28 ) }
    dend_31 { pt3dadd( 153.624, -0.751202, -11.6399, 0.55 ) }
    dend_31 { pt3dadd( 154.234, -2.08662, -11.5125, 0.28 ) }
    dend_31 { pt3dadd( 155.067, -3.81833, -11.3038, 0.55 ) }
    dend_31 { pt3dadd( 157.233, -7.97415, -10.6933, 0.55 ) }
    dend_31 { pt3dadd( 158.361, -10.0626, -10.3403, 0.55 ) }
    dend_31 { pt3dadd( 159.407, -11.9743, -9.99921, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 71.6564, 30.6087, -1.7454, 0.55 ) }
    dend_30 { pt3dadd( 73.4045, 30.8004, -0.439238, 0.55 ) }
    dend_30 { pt3dadd( 73.965, 30.8624, -0.0510964, 0.55 ) }
    dend_30 { pt3dadd( 76.0576, 31.0012, 1.29627, 0.55 ) }
    dend_30 { pt3dadd( 78.3918, 31.1988, 2.8391, 0.55 ) }
    dend_30 { pt3dadd( 81.3844, 31.4389, 4.89475, 0.55 ) }
    dend_30 { pt3dadd( 82.2109, 31.5066, 5.45716, 0.55 ) }
    dend_30 { pt3dadd( 83.6964, 31.5729, 6.44629, 0.55 ) }
    dend_30 { pt3dadd( 85.3227, 31.6878, 7.4732, 0.55 ) }
    dend_30 { pt3dadd( 87.2102, 31.8806, 8.58787, 0.55 ) }
    dend_30 { pt3dadd( 88.9878, 32.0868, 9.647, 0.55 ) }
    dend_30 { pt3dadd( 89.9604, 32.2476, 10.1874, 0.55 ) }
    dend_30 { pt3dadd( 91.1007, 32.4693, 10.823, 0.55 ) }
    dend_30 { pt3dadd( 92.509, 32.7863, 11.588, 0.83 ) }
    dend_30 { pt3dadd( 94.814, 33.3208, 12.5994, 0.55 ) }
    dend_30 { pt3dadd( 96.3427, 33.6209, 13.19, 0.83 ) }
    dend_30 { pt3dadd( 98.4693, 33.9468, 13.9277, 0.55 ) }
    dend_30 { pt3dadd( 99.124, 34.0123, 14.1414, 0.55 ) }
    dend_30 { pt3dadd( 101.16, 34.1194, 14.7526, 0.55 ) }
    dend_30 { pt3dadd( 104.813, 34.1059, 15.6805, 0.55 ) }
    dend_30 { pt3dadd( 107.494, 33.9547, 16.285, 0.55 ) }
    dend_30 { pt3dadd( 109.622, 33.734, 16.8031, 0.55 ) }
    dend_30 { pt3dadd( 111.797, 33.3908, 17.3933, 0.55 ) }
    dend_30 { pt3dadd( 112.256, 33.3064, 17.5185, 0.28 ) }
    dend_30 { pt3dadd( 113.187, 33.0991, 17.7667, 0.83 ) }
    dend_30 { pt3dadd( 117.012, 32.1914, 18.8022, 0.55 ) }
    dend_30 { pt3dadd( 119.688, 31.5638, 19.476, 0.55 ) }
    dend_30 { pt3dadd( 121.882, 31.0984, 20.0886, 0.55 ) }
    dend_30 { pt3dadd( 123.193, 30.8153, 20.4666, 0.83 ) }
    dend_30 { pt3dadd( 124.224, 30.607, 20.7674, 0.28 ) }
    dend_30 { pt3dadd( 125.16, 30.4203, 21.0318, 0.55 ) }
    dend_30 { pt3dadd( 132.376, 30.6125, 24.2981, 0.55 ) }
    dend_30 { pt3dadd( 140.052, 29.749, 26.0617, 0.55 ) }
    dend_30 { pt3dadd( 147.655, 29.8036, 28.29, 0.55 ) }
    dend_30 { pt3dadd( 154.526, 28.5771, 32.0409, 0.55 ) }
    dend_30 { pt3dadd( 160.974, 26.2522, 36.0146, 0.55 ) }
    dend_30 { pt3dadd( 168.019, 23.0313, 37.6785, 0.55 ) }
    dend_30 { pt3dadd( 174.953, 19.2071, 37.944, 0.55 ) }
    dend_30 { pt3dadd( 182.51, 16.8269, 37.881, 0.55 ) }
    dend_30 { pt3dadd( 189.998, 14.2766, 38.3304, 0.55 ) }
    dend_30 { pt3dadd( 197.748, 12.6292, 38.3687, 0.55 ) }
    dend_30 { pt3dadd( 205.471, 11.23, 39.4559, 0.55 ) }
    dend_30 { pt3dadd( 212.767, 8.45357, 40.8113, 0.55 ) }
    dend_30 { pt3dadd( 220.213, 6.98345, 43.0861, 0.55 ) }
    dend_30 { pt3dadd( 227.312, 6.55026, 46.5782, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.86918, -32.0883, 6.20404, 1.38 ) }
    dend_13 { pt3dadd( 0.470752, -34.7236, 5.31929, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.86918, -32.0883, 6.20404, 0.55 ) }
    dend_12 { pt3dadd( -3.42206, -34.0608, 6.04072, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -5.13193, -36.5853, 5.86312, 0.55 ) }
    dend_12 { pt3dadd( -6.47137, -38.2598, 5.7388, 0.55 ) }
    dend_12 { pt3dadd( -7.57548, -39.6602, 5.44934, 0.55 ) }
    dend_12 { pt3dadd( -9.95479, -42.564, 4.57336, 0.55 ) }
    dend_12 { pt3dadd( -11.6188, -44.5049, 3.9083, 0.55 ) }
    dend_12 { pt3dadd( -13.0898, -46.2449, 3.25623, 0.55 ) }
    dend_12 { pt3dadd( -16.8746, -50.4836, 1.58362, 0.55 ) }
    dend_12 { pt3dadd( -21.4315, -55.3942, -0.387659, 0.55 ) }
    dend_12 { pt3dadd( -24.9534, -59.115, -1.98134, 0.55 ) }
    dend_12 { pt3dadd( -27.1949, -61.5572, -3.03361, 0.55 ) }
    dend_12 { pt3dadd( -29.7651, -64.4854, -4.23178, 0.55 ) }
    dend_12 { pt3dadd( -33.0216, -68.6776, -5.70247, 0.55 ) }
    dend_12 { pt3dadd( -34.9218, -71.6447, -6.51629, 0.55 ) }
    dend_12 { pt3dadd( -37.2835, -75.9054, -7.29148, 0.55 ) }
    dend_12 { pt3dadd( -39.1654, -79.8924, -7.82559, 0.55 ) }
    dend_12 { pt3dadd( -41.0528, -84.8607, -8.32537, 0.55 ) }
    dend_12 { pt3dadd( -42.8205, -90.6867, -8.70729, 0.55 ) }
    dend_12 { pt3dadd( -43.756, -95.1333, -8.83442, 0.55 ) }
    dend_12 { pt3dadd( -44.0927, -97.3432, -8.73443, 0.55 ) }
    dend_12 { pt3dadd( -44.6143, -102.53, -8.17727, 0.55 ) }
    dend_12 { pt3dadd( -45.0341, -107.382, -7.5186, 0.55 ) }
    dend_12 { pt3dadd( -45.2574, -112.264, -6.46288, 0.55 ) }
    dend_12 { pt3dadd( -45.4351, -115.064, -5.70988, 0.55 ) }
    dend_12 { pt3dadd( -45.9755, -123.721, -3.05938, 0.55 ) }
    dend_12 { pt3dadd( -46.021, -124.358, -2.85372, 0.55 ) }
    dend_12 { pt3dadd( -46.2397, -128.261, -1.48937, 0.55 ) }
    dend_12 { pt3dadd( -46.9758, -135.242, 1.06834, 0.55 ) }
    dend_12 { pt3dadd( -47.2166, -137.578, 1.78441, 0.55 ) }
    dend_12 { pt3dadd( -47.5976, -141.234, 2.27179, 0.55 ) }
    dend_12 { pt3dadd( -47.6625, -142.593, 2.15038, 0.55 ) }
    dend_12 { pt3dadd( -47.5643, -147.194, 0.913715, 0.55 ) }
    dend_12 { pt3dadd( -47.2518, -150.175, -0.485264, 0.55 ) }
    dend_12 { pt3dadd( -46.4954, -154.926, -3.64885, 0.55 ) }
    dend_12 { pt3dadd( -45.277, -160.738, -7.9309, 0.28 ) }
    dend_12 { pt3dadd( -44.9273, -162.175, -9.17815, 0.55 ) }
    dend_12 { pt3dadd( -44.3643, -164.355, -11.2577, 0.28 ) }
    dend_12 { pt3dadd( -44.2801, -164.683, -11.5887, 0.55 ) }
    dend_12 { pt3dadd( -43.8509, -166.482, -13.2508, 0.28 ) }
    dend_12 { pt3dadd( -43.7654, -167.093, -13.6819, 0.55 ) }
    dend_12 { pt3dadd( -43.4744, -170.267, -15.328, 0.28 ) }
    dend_12 { pt3dadd( -43.4185, -171.347, -15.8802, 0.55 ) }
    dend_12 { pt3dadd( -43.3194, -174.471, -17.3073, 0.28 ) }
    dend_12 { pt3dadd( -43.2844, -175.454, -17.7524, 0.55 ) }
    dend_12 { pt3dadd( -43.1984, -178.847, -19.2374, 0.28 ) }
    dend_12 { pt3dadd( -43.1497, -180.408, -19.9272, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -3.30583, -78.6218, 62.9176, 0.55 ) }
    dend_10 { pt3dadd( -5.16271, -83.1653, 67.2419, 0.55 ) }
    dend_10 { pt3dadd( -7.69654, -87.1906, 71.7328, 0.55 ) }
    dend_10 { pt3dadd( -10.0257, -91.6304, 75.9345, 0.55 ) }
    dend_10 { pt3dadd( -12.4657, -96.1029, 80.0375, 0.55 ) }
    dend_10 { pt3dadd( -14.1762, -101.255, 83.6872, 0.55 ) }
    dend_10 { pt3dadd( -15.8361, -106.19, 87.6474, 0.55 ) }
    dend_10 { pt3dadd( -16.7021, -112.091, 90.3339, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -3.30583, -78.6218, 62.9176, 0.55 ) }
    dend_3 { pt3dadd( -1.64633, -86.2564, 69.9738, 0.55 ) }
    dend_3 { pt3dadd( 0.14897, -95.05, 75.4766, 0.55 ) }
    dend_3 { pt3dadd( 0.26798, -103.869, 81.2252, 0.55 ) }
    dend_3 { pt3dadd( -0.383934, -113.166, 86.1198, 0.55 ) }
    dend_3 { pt3dadd( -0.590238, -122.438, 91.1022, 0.55 ) }
    dend_3 { pt3dadd( -0.597906, -131.342, 96.7197, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -46.0022, 46.5829, -20.5404, 0.83 ) }
    dend_60 { pt3dadd( -45.7667, 47.914, -23.1244, 0.83 ) }
    dend_60 { pt3dadd( -45.2435, 51.2363, -28.9812, 0.55 ) }
    dend_60 { pt3dadd( -44.9805, 52.7098, -31.3431, 0.83 ) }
    dend_60 { pt3dadd( -44.6607, 54.3209, -33.7265, 0.55 ) }
    dend_60 { pt3dadd( -44.2673, 56.0553, -35.8695, 0.55 ) }
    dend_60 { pt3dadd( -44.0313, 56.9602, -36.8069, 0.28 ) }
    dend_60 { pt3dadd( -43.8824, 57.6124, -37.2377, 0.55 ) }
    dend_60 { pt3dadd( -43.2016, 59.9056, -38.1752, 0.28 ) }
    dend_60 { pt3dadd( -42.8734, 60.8951, -38.5292, 0.55 ) }
    dend_60 { pt3dadd( -41.7453, 64.378, -39.6064, 0.28 ) }
    dend_60 { pt3dadd( -40.9049, 67.1737, -40.3503, 0.55 ) }
    dend_60 { pt3dadd( -39.7776, 71.6077, -41.3347, 0.28 ) }
    dend_60 { pt3dadd( -38.9085, 75.5457, -42.0994, 0.28 ) }
    dend_60 { pt3dadd( -38.5404, 77.7804, -42.4611, 0.55 ) }
    dend_60 { pt3dadd( -38.2643, 80.4555, -42.8583, 0.28 ) }
    dend_60 { pt3dadd( -38.2108, 81.749, -43.015, 0.55 ) }
    dend_60 { pt3dadd( -38.2738, 84.7842, -43.4837, 0.28 ) }
    dend_60 { pt3dadd( -38.4677, 86.8025, -43.872, 0.28 ) }
    dend_60 { pt3dadd( -38.7116, 88.7769, -44.3031, 0.28 ) }
    dend_60 { pt3dadd( -38.8026, 89.8134, -44.5422, 0.55 ) }
    dend_60 { pt3dadd( -38.9723, 93.9511, -45.6461, 0.28 ) }
    dend_60 { pt3dadd( -39.0315, 98.8073, -47.0722, 0.55 ) }
    dend_60 { pt3dadd( -39.0288, 100.48, -47.5759, 0.55 ) }
    dend_60 { pt3dadd( -39.0451, 102.169, -48.0401, 0.55 ) }
    dend_60 { pt3dadd( -39.2811, 105.77, -49.0476, 0.55 ) }
    dend_60 { pt3dadd( -39.5975, 108.143, -49.7299, 0.28 ) }
    dend_60 { pt3dadd( -39.8225, 109.054, -49.9804, 0.55 ) }
    dend_60 { pt3dadd( -40.5897, 111.553, -50.5761, 0.28 ) }
    dend_60 { pt3dadd( -41.5327, 114.205, -51.29, 0.55 ) }
    dend_60 { pt3dadd( -43.2615, 118.029, -52.3919, 0.28 ) }
    dend_60 { pt3dadd( -44.16, 119.637, -52.8689, 0.28 ) }
    dend_60 { pt3dadd( -45.7297, 121.857, -53.6902, 0.55 ) }
    dend_60 { pt3dadd( -47.5387, 124.163, -54.6331, 0.28 ) }
    dend_60 { pt3dadd( -47.8789, 124.528, -54.7882, 0.55 ) }
    dend_60 { pt3dadd( -49.1305, 125.701, -55.298, 0.28 ) }
    dend_60 { pt3dadd( -53.4785, 129.497, -56.8941, 0.55 ) }
    dend_60 { pt3dadd( -59.6811, 134.169, -59.189, 0.28 ) }
    dend_60 { pt3dadd( -60.8565, 134.943, -59.6606, 0.55 ) }
    dend_60 { pt3dadd( -64.1182, 136.932, -60.9733, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -65.4995, 137.74, -61.5551, 0.28 ) }
    dend_60 { pt3dadd( -66.7186, 138.4, -62.1073, 0.55 ) }
    dend_60 { pt3dadd( -70.4209, 139.864, -63.8667, 0.28 ) }
    dend_60 { pt3dadd( -73.0577, 140.677, -64.9446, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -46.0022, 46.5829, -20.5404, 0.55 ) }
    dend_57 { pt3dadd( -46.0719, 47.8332, -20.7735, 0.55 ) }
    dend_57 { pt3dadd( -46.1289, 48.5769, -20.8415, 0.28 ) }
    dend_57 { pt3dadd( -46.2693, 49.1249, -20.7573, 0.55 ) }
    dend_57 { pt3dadd( -46.5915, 50.3832, -20.5638, 0.28 ) }
    dend_57 { pt3dadd( -46.8179, 51.2671, -20.4278, 0.55 ) }
    dend_57 { pt3dadd( -47.2353, 52.8965, -20.1773, 0.28 ) }
    dend_57 { pt3dadd( -47.5377, 53.7854, -19.8934, 0.55 ) }
    dend_57 { pt3dadd( -48.8242, 55.9902, -18.4843, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -124.972, -36.9535, -35.8607, 0.55 ) }
    dend_52 { pt3dadd( -130.998, -44.4149, -40.0372, 0.55 ) }
    dend_52 { pt3dadd( -135.35, -52.7507, -44.6213, 0.55 ) }
    dend_52 { pt3dadd( -138.475, -60.3659, -51.0774, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -124.972, -36.9535, -35.8607, 0.55 ) }
    dend_49 { pt3dadd( -132.169, -40.3305, -44.3256, 0.55 ) }
    dend_49 { pt3dadd( -138.31, -42.8759, -53.8475, 0.55 ) }
    dend_49 { pt3dadd( -143.999, -45.3658, -63.6603, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -137.344, 16.5723, 39.3155, 0.55 ) }
    dend_47 { pt3dadd( -142.62, 16.1601, 42.1894, 0.55 ) }
    dend_47 { pt3dadd( -148.087, 16.6344, 44.6679, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -137.344, 16.5723, 39.3155, 0.55 ) }
    dend_46 { pt3dadd( -147.74, 15.3944, 41.2378, 0.55 ) }
    dend_46 { pt3dadd( -158.014, 15.7751, 43.9687, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 100.21, -43.8828, -101.813, 0.28 ) }
    dend_39 { pt3dadd( 106.314, -46.4223, -111.472, 0.28 ) }
    dend_39 { pt3dadd( 106.891, -46.74, -112.345, 0.55 ) }
    dend_39 { pt3dadd( 107.866, -47.2764, -113.82, 0.28 ) }
    dend_39 { pt3dadd( 108.687, -47.7281, -115.061, 0.28 ) }
    dend_39 { pt3dadd( 109.774, -48.326, -116.704, 0.55 ) }
    dend_39 { pt3dadd( 111.207, -49.1143, -118.871, 0.55 ) }
    dend_39 { pt3dadd( 112.757, -50.8755, -120.148, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 100.21, -43.8828, -101.813, 0.55 ) }
    dend_36 { pt3dadd( 100.726, -44.7924, -102.909, 0.55 ) }
    dend_36 { pt3dadd( 100.874, -45.1978, -103.398, 0.28 ) }
    dend_36 { pt3dadd( 101.087, -45.8897, -104.252, 0.55 ) }
    dend_36 { pt3dadd( 101.554, -47.4137, -106.133, 0.28 ) }
    dend_36 { pt3dadd( 101.878, -48.47, -107.436, 0.55 ) }
    dend_36 { pt3dadd( 102.427, -50.2595, -109.645, 0.28 ) }
    dend_36 { pt3dadd( 103.028, -52.4243, -112.539, 0.28 ) }
    dend_36 { pt3dadd( 103.255, -53.4157, -113.894, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 159.407, -11.9743, -9.99921, 0.28 ) }
    dend_33 { pt3dadd( 161.541, -14.8748, -9.085, 0.28 ) }
    dend_33 { pt3dadd( 164.208, -18.7108, -7.55224, 0.28 ) }
    dend_33 { pt3dadd( 165.885, -21.2017, -6.45481, 0.55 ) }
    dend_33 { pt3dadd( 166.896, -22.5725, -5.76752, 0.28 ) }
    dend_33 { pt3dadd( 167.433, -23.3107, -5.39055, 0.28 ) }
    dend_33 { pt3dadd( 170.098, -26.9558, -3.58896, 0.55 ) }
    dend_33 { pt3dadd( 170.704, -27.7642, -3.07228, 0.28 ) }
    dend_33 { pt3dadd( 172.114, -29.9008, -1.57292, 0.55 ) }
    dend_33 { pt3dadd( 173.321, -31.7605, -0.355132, 0.28 ) }
    dend_33 { pt3dadd( 174.384, -33.2696, 0.611407, 0.55 ) }
    dend_33 { pt3dadd( 175.637, -35.0775, 1.64314, 0.55 ) }
    dend_33 { pt3dadd( 177.663, -37.9545, 2.89369, 0.55 ) }
    dend_33 { pt3dadd( 178.153, -38.6612, 3.17221, 0.55 ) }
    dend_33 { pt3dadd( 179.906, -41.3041, 4.1725, 0.28 ) }
    dend_33 { pt3dadd( 180.584, -42.3862, 4.54666, 0.55 ) }
    dend_33 { pt3dadd( 181.537, -43.7646, 5.02802, 0.28 ) }
    dend_33 { pt3dadd( 182.889, -45.7236, 5.61504, 0.55 ) }
    dend_33 { pt3dadd( 185.173, -48.8136, 6.07407, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 159.407, -11.9743, -9.99921, 0.55 ) }
    dend_32 { pt3dadd( 156.434, -11.8545, -10.3252, 0.55 ) }
    dend_32 { pt3dadd( 154.019, -11.7572, -10.5899, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.470752, -34.7236, 5.31929, 0.83 ) }
    dend_17 { pt3dadd( 0.543702, -34.9147, 5.27835, 0.83 ) }
    dend_17 { pt3dadd( 1.45727, -36.6159, 4.93843, 0.83 ) }
    dend_17 { pt3dadd( 2.22781, -38.1055, 4.54749, 0.55 ) }
    dend_17 { pt3dadd( 2.84253, -39.2938, 4.2356, 0.55 ) }
    dend_17 { pt3dadd( 4.14915, -41.8197, 3.57267, 0.83 ) }
    dend_17 { pt3dadd( 5.734, -44.8834, 2.76858, 0.55 ) }
    dend_17 { pt3dadd( 6.61289, -46.4888, 2.36473, 0.83 ) }
    dend_17 { pt3dadd( 8.22243, -49.0502, 1.77214, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.470752, -34.7236, 5.31929, 0.55 ) }
    dend_14 { pt3dadd( -0.446522, -35.815, 2.14878, 0.55 ) }
    dend_14 { pt3dadd( -1.43111, -36.9865, -1.25436, 0.55 ) }
    dend_14 { pt3dadd( -2.59341, -38.3694, -5.27181, 0.55 ) }
    dend_14 { pt3dadd( -4.00483, -40.0488, -10.1503, 0.55 ) }
    dend_14 { pt3dadd( -4.80576, -41.0017, -12.9187, 0.55 ) }
    dend_14 { pt3dadd( -4.96666, -41.1932, -13.4748, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -0.597906, -131.342, 96.7197, 0.55 ) }
    dend_7 { pt3dadd( 0.364496, -140.145, 102.957, 0.55 ) }
    dend_7 { pt3dadd( 2.68842, -149.471, 107.951, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -0.597906, -131.342, 96.7197, 0.55 ) }
    dend_4 { pt3dadd( -0.60364, -137.862, 100.466, 0.55 ) }
    dend_4 { pt3dadd( -0.902255, -144.214, 104.48, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -48.8242, 55.9902, -18.4843, 0.28 ) }
    dend_59 { pt3dadd( -49.8295, 57.6097, -17.0855, 0.28 ) }
    dend_59 { pt3dadd( -50.2036, 58.2268, -16.4865, 0.55 ) }
    dend_59 { pt3dadd( -51.2663, 60.0153, -14.7163, 0.28 ) }
    dend_59 { pt3dadd( -51.8013, 60.8972, -13.9266, 0.55 ) }
    dend_59 { pt3dadd( -53.2726, 63.2813, -11.8705, 0.28 ) }
    dend_59 { pt3dadd( -54.768, 65.7045, -9.78082, 0.55 ) }
    dend_59 { pt3dadd( -57.2601, 69.5215, -6.27498, 0.28 ) }
    dend_59 { pt3dadd( -57.7898, 70.3407, -5.52809, 0.55 ) }
    dend_59 { pt3dadd( -58.9485, 72.2463, -3.95529, 0.28 ) }
    dend_59 { pt3dadd( -59.3951, 73.0324, -3.34034, 0.55 ) }
    dend_59 { pt3dadd( -64.9141, 78.5056, 2.10052, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -71.1044, 84.9102, 5.36866, 0.55 ) }
    dend_59 { pt3dadd( -76.2312, 91.5607, 9.78522, 0.55 ) }
    dend_59 { pt3dadd( -80.0347, 99.2368, 13.863, 0.55 ) }
    dend_59 { pt3dadd( -84.8814, 106.592, 17.3895, 0.55 ) }
    dend_59 { pt3dadd( -90.586, 112.637, 21.9649, 0.55 ) }
    dend_59 { pt3dadd( -95.6704, 118.002, 27.913, 0.55 ) }
    dend_59 { pt3dadd( -99.9025, 122.441, 35.152, 0.55 ) }
    dend_59 { pt3dadd( -104.119, 127.397, 42.0563, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -48.8242, 55.9902, -18.4843, 0.55 ) }
    dend_58 { pt3dadd( -52.7804, 54.6461, -17.7674, 0.55 ) }
    dend_58 { pt3dadd( -54.8361, 53.8828, -17.4069, 0.28 ) }
    dend_58 { pt3dadd( -56.3659, 53.3148, -17.1387, 0.55 ) }
    dend_58 { pt3dadd( -57.6409, 52.8414, -16.9151, 0.28 ) }
    dend_58 { pt3dadd( -58.534, 52.5098, -16.7585, 0.55 ) }
    dend_58 { pt3dadd( -60.9966, 51.5955, -16.3268, 0.28 ) }
    dend_58 { pt3dadd( -62.6017, 50.8801, -16.2514, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -138.475, -60.3659, -51.0774, 0.55 ) }
    dend_54 { pt3dadd( -143.06, -70.0459, -55.8247, 0.55 ) }
    dend_54 { pt3dadd( -147.422, -80.3147, -59.4014, 0.55 ) }
    dend_54 { pt3dadd( -150.893, -90.0255, -64.9615, 0.55 ) }
    dend_54 { pt3dadd( -155.55, -99.9882, -69.0027, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -138.475, -60.3659, -51.0774, 0.55 ) }
    dend_53 { pt3dadd( -142.43, -63.671, -59.1477, 0.55 ) }
    dend_53 { pt3dadd( -145.848, -65.6112, -67.8795, 0.55 ) }
    dend_53 { pt3dadd( -150.142, -68.7507, -75.8422, 0.55 ) }
    dend_53 { pt3dadd( -156.315, -70.479, -82.9561, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -143.999, -45.3658, -63.6603, 0.55 ) }
    dend_51 { pt3dadd( -149.774, -43.2938, -71.1478, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -143.999, -45.3658, -63.6603, 0.55 ) }
    dend_50 { pt3dadd( -148.708, -54.7765, -68.5486, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 112.757, -50.8755, -120.148, 0.28 ) }
    dend_41 { pt3dadd( 116.472, -52.8763, -122.333, 0.28 ) }
    dend_41 { pt3dadd( 118.198, -53.8058, -123.348, 0.55 ) }
    dend_41 { pt3dadd( 121.488, -55.5781, -125.283, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 112.757, -50.8755, -120.148, 0.55 ) }
    dend_40 { pt3dadd( 112.267, -51.7422, -121.689, 0.55 ) }
    dend_40 { pt3dadd( 111.288, -53.4757, -124.772, 0.28 ) }
    dend_40 { pt3dadd( 110.968, -54.0404, -125.776, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 103.255, -53.4157, -113.894, 0.28 ) }
    dend_38 { pt3dadd( 104.114, -56.2164, -118.149, 0.28 ) }
    dend_38 { pt3dadd( 104.54, -57.6032, -120.256, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 103.255, -53.4157, -113.894, 0.55 ) }
    dend_37 { pt3dadd( 102.341, -53.8782, -113.365, 0.55 ) }
    dend_37 { pt3dadd( 99.7913, -55.1681, -111.891, 0.28 ) }
    dend_37 { pt3dadd( 99.1857, -55.4745, -111.54, 0.55 ) }
    dend_37 { pt3dadd( 97.529, -56.3127, -110.582, 0.28 ) }
    dend_37 { pt3dadd( 96.4612, -56.853, -109.965, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 8.22243, -49.0502, 1.77214, 0.83 ) }
    dend_23 { pt3dadd( 8.2354, -49.3771, 1.72497, 0.83 ) }
    dend_23 { pt3dadd( 8.50212, -53.6552, 1.20135, 0.83 ) }
    dend_23 { pt3dadd( 8.49946, -56.8518, 1.08748, 0.83 ) }
    dend_23 { pt3dadd( 8.3871, -59.93, 1.34726, 0.83 ) }
    dend_23 { pt3dadd( 8.19297, -64.0204, 2.03281, 0.83 ) }
    dend_23 { pt3dadd( 7.89759, -68.728, 3.02902, 0.83 ) }
    dend_23 { pt3dadd( 7.67332, -73.983, 4.3991, 0.83 ) }
    dend_23 { pt3dadd( 7.52873, -79.0858, 5.95583, 0.83 ) }
    dend_23 { pt3dadd( 6.91468, -85.3393, 7.85192, 0.83 ) }
    dend_23 { pt3dadd( 6.43054, -88.2087, 8.61401, 0.83 ) }
    dend_23 { pt3dadd( 6.01659, -90.3675, 9.05831, 0.83 ) }
    dend_23 { pt3dadd( 5.11057, -94.5071, 9.85297, 0.83 ) }
    dend_23 { pt3dadd( 4.32027, -98.2192, 10.3402, 0.83 ) }
    dend_23 { pt3dadd( 2.77853, -106.156, 10.3948, 0.83 ) }
    dend_23 { pt3dadd( 1.81061, -110.503, 9.86417, 0.83 ) }
    dend_23 { pt3dadd( 0.826804, -114.51, 9.09479, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 8.22243, -49.0502, 1.77214, 0.55 ) }
    dend_18 { pt3dadd( 7.06451, -51.4623, 1.79605, 0.55 ) }
    dend_18 { pt3dadd( 6.20007, -53.2178, 1.94724, 0.55 ) }
    dend_18 { pt3dadd( 5.67901, -54.3455, 2.15786, 0.55 ) }
    dend_18 { pt3dadd( 4.95033, -56.1194, 2.65951, 0.55 ) }
    dend_18 { pt3dadd( 3.60198, -59.6429, 3.87859, 0.55 ) }
    dend_18 { pt3dadd( 2.56308, -62.3207, 5.09535, 0.55 ) }
    dend_18 { pt3dadd( 1.73537, -64.4761, 6.29902, 0.55 ) }
    dend_18 { pt3dadd( 0.848781, -66.6577, 7.66872, 0.55 ) }
    dend_18 { pt3dadd( 0.0997713, -68.4702, 8.8986, 0.28 ) }
    dend_18 { pt3dadd( -0.530445, -69.959, 10.1183, 0.55 ) }
    dend_18 { pt3dadd( -1.73378, -72.6808, 12.7136, 0.55 ) }
    dend_18 { pt3dadd( -2.55851, -74.3536, 14.4826, 0.55 ) }
    dend_18 { pt3dadd( -3.03082, -75.2902, 15.4646, 0.55 ) }
    dend_18 { pt3dadd( -3.64347, -76.3912, 16.5668, 0.83 ) }
    dend_18 { pt3dadd( -5.49195, -79.6473, 19.6204, 0.28 ) }
    dend_18 { pt3dadd( -6.10305, -80.7239, 20.6019, 0.55 ) }
    dend_18 { pt3dadd( -7.14721, -82.6666, 22.3102, 0.28 ) }
    dend_18 { pt3dadd( -7.46794, -83.267, 22.88, 0.55 ) }
    dend_18 { pt3dadd( -8.14369, -84.6781, 24.1895, 0.28 ) }
    dend_18 { pt3dadd( -8.52348, -85.4786, 24.8758, 0.55 ) }
    dend_18 { pt3dadd( -9.92928, -88.0529, 26.4167, 0.55 ) }
    dend_18 { pt3dadd( -11.9356, -95.1399, 33.2635, 0.55 ) }
    dend_18 { pt3dadd( -13.4501, -101.931, 40.5238, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -4.96666, -41.1932, -13.4748, 0.55 ) }
    dend_16 { pt3dadd( -6.80558, -42.0801, -15.6119, 0.55 ) }
    dend_16 { pt3dadd( -7.35512, -42.2956, -16.2116, 0.55 ) }
    dend_16 { pt3dadd( -8.73807, -42.8413, -17.6612, 0.55 ) }
    dend_16 { pt3dadd( -11.7828, -43.9485, -20.6916, 0.28 ) }
    dend_16 { pt3dadd( -12.2387, -44.1045, -21.1119, 0.55 ) }
    dend_16 { pt3dadd( -14.1374, -44.8161, -22.7905, 0.55 ) }
    dend_16 { pt3dadd( -16.7477, -45.8116, -24.828, 0.55 ) }
    dend_16 { pt3dadd( -17.7512, -46.1621, -25.5806, 0.28 ) }
    dend_16 { pt3dadd( -18.6395, -46.4122, -26.1849, 0.28 ) }
    dend_16 { pt3dadd( -20.166, -46.8241, -27.0094, 0.55 ) }
    dend_16 { pt3dadd( -22.0375, -47.2354, -28.0793, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -23.7838, -47.4675, -29.0973, 0.55 ) }
    dend_16 { pt3dadd( -25.1477, -47.5405, -29.8523, 0.55 ) }
    dend_16 { pt3dadd( -26.0959, -47.5133, -30.3964, 0.55 ) }
    dend_16 { pt3dadd( -28.8956, -47.3083, -32.0682, 0.55 ) }
    dend_16 { pt3dadd( -31.8671, -46.907, -33.763, 0.55 ) }
    dend_16 { pt3dadd( -33.1031, -46.6798, -34.4303, 0.28 ) }
    dend_16 { pt3dadd( -34.2752, -46.4798, -35.0859, 0.55 ) }
    dend_16 { pt3dadd( -36.6364, -46.2194, -36.4017, 0.28 ) }
    dend_16 { pt3dadd( -37.4285, -46.1538, -36.8381, 0.83 ) }
    dend_16 { pt3dadd( -38.912, -46.0219, -37.5564, 0.28 ) }
    dend_16 { pt3dadd( -39.9737, -46.0122, -37.9462, 0.55 ) }
    dend_16 { pt3dadd( -41.5098, -46.0513, -38.4857, 0.28 ) }
    dend_16 { pt3dadd( -42.1227, -46.0608, -38.6808, 0.55 ) }
    dend_16 { pt3dadd( -43.2565, -46.1029, -38.985, 0.55 ) }
    dend_16 { pt3dadd( -44.989, -46.0084, -39.3719, 0.55 ) }
    dend_16 { pt3dadd( -46.1283, -45.8854, -39.5602, 0.28 ) }
    dend_16 { pt3dadd( -47.0585, -45.6853, -39.6368, 0.55 ) }
    dend_16 { pt3dadd( -48.1692, -45.3257, -39.7241, 0.28 ) }
    dend_16 { pt3dadd( -48.3536, -45.253, -39.7434, 0.55 ) }
    dend_16 { pt3dadd( -50.0658, -44.529, -40.1872, 0.28 ) }
    dend_16 { pt3dadd( -51.3138, -43.9731, -40.6277, 0.55 ) }
    dend_16 { pt3dadd( -52.9754, -43.129, -41.4076, 0.83 ) }
    dend_16 { pt3dadd( -54.3497, -42.3965, -42.1857, 0.28 ) }
    dend_16 { pt3dadd( -54.705, -42.2073, -42.4181, 0.55 ) }
    dend_16 { pt3dadd( -57.4274, -40.7824, -44.3383, 0.28 ) }
    dend_16 { pt3dadd( -57.9035, -40.5371, -44.7169, 0.55 ) }
    dend_16 { pt3dadd( -59.3185, -39.7234, -45.9083, 0.28 ) }
    dend_16 { pt3dadd( -59.6837, -39.514, -46.2183, 0.55 ) }
    dend_16 { pt3dadd( -60.6217, -38.9724, -46.9557, 0.28 ) }
    dend_16 { pt3dadd( -61.2868, -38.5847, -47.4399, 0.55 ) }
    dend_16 { pt3dadd( -62.7721, -37.7335, -48.3204, 0.28 ) }
    dend_16 { pt3dadd( -63.6484, -37.2857, -48.816, 0.55 ) }
    dend_16 { pt3dadd( -65.5083, -36.4419, -49.7892, 0.28 ) }
    dend_16 { pt3dadd( -66.0597, -36.2187, -50.0727, 0.55 ) }
    dend_16 { pt3dadd( -66.9182, -35.9314, -50.4919, 0.28 ) }
    dend_16 { pt3dadd( -67.6451, -35.6922, -50.8142, 0.55 ) }
    dend_16 { pt3dadd( -69.1523, -35.2201, -51.4007, 0.28 ) }
    dend_16 { pt3dadd( -69.6052, -35.0883, -51.5641, 0.55 ) }
    dend_16 { pt3dadd( -72.9742, -34.059, -52.6284, 0.28 ) }
    dend_16 { pt3dadd( -74.1612, -33.6279, -52.901, 0.55 ) }
    dend_16 { pt3dadd( -76.2841, -32.7746, -53.2558, 0.28 ) }
    dend_16 { pt3dadd( -77.2434, -32.3572, -53.3864, 0.55 ) }
    dend_16 { pt3dadd( -79.4368, -31.4226, -53.5703, 0.28 ) }
    dend_16 { pt3dadd( -80.2374, -31.1146, -53.6073, 0.55 ) }
    dend_16 { pt3dadd( -83.1034, -30.2492, -53.6098, 0.28 ) }
    dend_16 { pt3dadd( -84.2845, -30.0287, -53.6086, 0.55 ) }
    dend_16 { pt3dadd( -85.944, -29.9766, -53.6034, 0.55 ) }
    dend_16 { pt3dadd( -86.9574, -30.0083, -53.5801, 0.55 ) }
    dend_16 { pt3dadd( -89.0071, -30.1348, -53.3797, 0.28 ) }
    dend_16 { pt3dadd( -91.0108, -30.2868, -53.0582, 0.28 ) }
    dend_16 { pt3dadd( -92.6759, -30.4104, -52.7416, 0.55 ) }
    dend_16 { pt3dadd( -94.7031, -30.4003, -52.1219, 0.28 ) }
    dend_16 { pt3dadd( -95.6998, -30.2784, -51.673, 0.55 ) }
    dend_16 { pt3dadd( -98.0687, -29.6169, -50.3432, 0.28 ) }
    dend_16 { pt3dadd( -99.2539, -29.0477, -49.3513, 0.55 ) }
    dend_16 { pt3dadd( -99.9915, -28.5622, -48.5288, 0.28 ) }
    dend_16 { pt3dadd( -100.763, -28.0224, -47.3877, 0.55 ) }
    dend_16 { pt3dadd( -101.694, -27.3102, -45.8205, 0.28 ) }
    dend_16 { pt3dadd( -102.048, -27.0653, -45.2327, 0.55 ) }
    dend_16 { pt3dadd( -103.954, -26.0172, -42.4694, 0.28 ) }
    dend_16 { pt3dadd( -104.598, -25.6961, -41.5473, 0.55 ) }
    dend_16 { pt3dadd( -106.111, -25.0097, -39.3125, 0.28 ) }
    dend_16 { pt3dadd( -106.932, -24.6498, -38.0996, 0.55 ) }
    dend_16 { pt3dadd( -107.608, -24.3555, -37.1041, 0.55 ) }
    dend_16 { pt3dadd( -108.425, -24.0112, -35.9411, 0.28 ) }
    dend_16 { pt3dadd( -108.882, -23.8362, -35.4211, 0.55 ) }
    dend_16 { pt3dadd( -110.455, -23.1866, -33.7808, 0.28 ) }
    dend_16 { pt3dadd( -111.28, -22.7358, -32.8968, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -4.96666, -41.1932, -13.4748, 0.55 ) }
    dend_15 { pt3dadd( -4.61172, -41.1999, -14.701, 0.55 ) }
    dend_15 { pt3dadd( -4.23357, -41.0662, -15.913, 0.55 ) }
    dend_15 { pt3dadd( -3.69775, -40.7857, -17.3878, 0.55 ) }
    dend_15 { pt3dadd( -3.22085, -40.4536, -18.5593, 0.55 ) }
    dend_15 { pt3dadd( 0.367892, -37.4014, -25.8862, 0.55 ) }
    dend_15 { pt3dadd( 1.14251, -36.5153, -27.5349, 0.55 ) }
    dend_15 { pt3dadd( 2.22843, -35.0213, -29.9861, 0.55 ) }
    dend_15 { pt3dadd( 2.98229, -33.903, -31.7225, 0.55 ) }
    dend_15 { pt3dadd( 3.73533, -32.7081, -33.3777, 0.28 ) }
    dend_15 { pt3dadd( 4.97713, -30.7102, -35.8197, 0.55 ) }
    dend_15 { pt3dadd( 6.97791, -27.604, -39.2897, 0.28 ) }
    dend_15 { pt3dadd( 7.09909, -27.4058, -39.6627, 0.55 ) }
    dend_15 { pt3dadd( 7.33365, -26.6673, -42.4125, 0.28 ) }
    dend_15 { pt3dadd( 7.19252, -26.3259, -44.3138, 0.55 ) }
    dend_15 { pt3dadd( 6.86556, -26.1284, -46.3792, 0.55 ) }
    dend_15 { pt3dadd( 6.25066, -25.9686, -50.1026, 0.55 ) }
    dend_15 { pt3dadd( 5.07055, -25.7032, -57.4172, 0.55 ) }
    dend_15 { pt3dadd( 4.37104, -25.5622, -62.3463, 0.55 ) }
    dend_15 { pt3dadd( 4.1765, -25.5216, -64.0544, 0.55 ) }
    dend_15 { pt3dadd( 3.14932, -25.1269, -75.2961, 0.55 ) }
    dend_15 { pt3dadd( 2.99259, -24.9571, -78.3446, 0.55 ) }
    dend_15 { pt3dadd( 3.03223, -24.8428, -80.0599, 0.55 ) }
    dend_15 { pt3dadd( 3.4838, -24.6223, -84.0549, 0.55 ) }
    dend_15 { pt3dadd( 5.18934, -24.4877, -93.6172, 0.55 ) }
    dend_15 { pt3dadd( 5.77221, -24.5384, -96.1825, 0.28 ) }
    dend_15 { pt3dadd( 6.2223, -24.6158, -97.624, 0.55 ) }
    dend_15 { pt3dadd( 6.9414, -24.811, -99.7564, 0.28 ) }
    dend_15 { pt3dadd( 7.31367, -24.9693, -100.619, 0.55 ) }
    dend_15 { pt3dadd( 9.07047, -25.758, -102.892, 0.28 ) }
    dend_15 { pt3dadd( 11.0334, -27.0286, -103.682, 0.55 ) }
    dend_15 { pt3dadd( 12.2548, -27.9657, -104.092, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 13.4368, -29.0335, -104.353, 0.55 ) }
    dend_15 { pt3dadd( 14.5269, -30.2293, -104.514, 0.28 ) }
    dend_15 { pt3dadd( 15.0073, -30.8549, -104.605, 0.55 ) }
    dend_15 { pt3dadd( 16.1666, -32.5128, -104.75, 0.28 ) }
    dend_15 { pt3dadd( 16.4532, -33.0093, -104.868, 0.55 ) }
    dend_15 { pt3dadd( 18.0408, -35.8489, -105.715, 0.28 ) }
    dend_15 { pt3dadd( 18.7695, -37.147, -106.299, 0.55 ) }
    dend_15 { pt3dadd( 20.3499, -39.8851, -107.91, 0.28 ) }
    dend_15 { pt3dadd( 20.947, -40.8797, -108.639, 0.55 ) }
    dend_15 { pt3dadd( 22.995, -44.1106, -111.292, 0.28 ) }
    dend_15 { pt3dadd( 23.489, -44.8932, -111.976, 0.55 ) }
    dend_15 { pt3dadd( 24.9497, -47.3786, -114.226, 0.28 ) }
    dend_15 { pt3dadd( 25.2666, -47.9699, -114.693, 0.55 ) }
    dend_15 { pt3dadd( 26.0503, -49.5426, -115.897, 0.28 ) }
    dend_15 { pt3dadd( 26.4895, -50.4484, -116.697, 0.55 ) }
    dend_15 { pt3dadd( 26.935, -51.3281, -117.569, 0.55 ) }
    dend_15 { pt3dadd( 27.8287, -53.084, -119.296, 0.28 ) }
    dend_15 { pt3dadd( 28.459, -54.1442, -120.536, 0.55 ) }
    dend_15 { pt3dadd( 30.4538, -56.6562, -124.487, 0.28 ) }
    dend_15 { pt3dadd( 31.2109, -57.4291, -126.066, 0.55 ) }
    dend_15 { pt3dadd( 31.747, -57.9053, -127.139, 0.28 ) }
    dend_15 { pt3dadd( 32.3031, -58.3219, -128.213, 0.55 ) }
    dend_15 { pt3dadd( 34.0631, -59.4368, -131.473, 0.28 ) }
    dend_15 { pt3dadd( 35.4315, -60.311, -133.895, 0.55 ) }
    dend_15 { pt3dadd( 37.9281, -62.0515, -137.802, 0.28 ) }
    dend_15 { pt3dadd( 38.7175, -62.5905, -139.026, 0.55 ) }
    dend_15 { pt3dadd( 40.326, -63.5658, -141.207, 0.28 ) }
    dend_15 { pt3dadd( 40.8903, -63.8844, -141.881, 0.55 ) }
    dend_15 { pt3dadd( 41.903, -64.3945, -142.785, 0.28 ) }
    dend_15 { pt3dadd( 42.833, -64.8188, -143.5, 0.55 ) }
    dend_15 { pt3dadd( 45.4635, -65.8359, -145.162, 0.28 ) }
    dend_15 { pt3dadd( 48.4947, -66.8751, -147.011, 0.28 ) }
    dend_15 { pt3dadd( 50.0687, -67.3325, -147.834, 0.28 ) }
    dend_15 { pt3dadd( 51.6156, -67.7392, -148.754, 0.55 ) }
    dend_15 { pt3dadd( 53.8656, -68.2236, -150.1, 0.28 ) }
    dend_15 { pt3dadd( 54.8741, -68.424, -150.676, 0.83 ) }
    dend_15 { pt3dadd( 57.4876, -68.9742, -152.051, 0.28 ) }
    dend_15 { pt3dadd( 58.5985, -69.2371, -152.711, 0.55 ) }
    dend_15 { pt3dadd( 63.4019, -70.5791, -155.85, 0.28 ) }
    dend_15 { pt3dadd( 65.7246, -71.2736, -157.616, 0.28 ) }
    dend_15 { pt3dadd( 67.3639, -71.7745, -159.014, 0.55 ) }
    dend_15 { pt3dadd( 68.2689, -72.0857, -159.945, 0.55 ) }
    dend_15 { pt3dadd( 70.5735, -72.9453, -162.627, 0.28 ) }
    dend_15 { pt3dadd( 72.6853, -73.8696, -165.243, 0.55 ) }
    dend_15 { pt3dadd( 74.6122, -74.7886, -167.63, 0.28 ) }
    dend_15 { pt3dadd( 76.303, -75.6497, -169.899, 0.55 ) }
    dend_15 { pt3dadd( 77.7049, -76.3393, -171.763, 0.28 ) }
    dend_15 { pt3dadd( 78.8848, -76.7958, -173.208, 0.55 ) }
    dend_15 { pt3dadd( 81.7989, -77.6923, -176.529, 0.28 ) }
    dend_15 { pt3dadd( 83.3113, -78.1455, -178.143, 0.55 ) }
    dend_15 { pt3dadd( 85.6302, -78.8361, -180.473, 0.28 ) }
    dend_15 { pt3dadd( 87.5486, -79.336, -182.328, 0.55 ) }
    dend_15 { pt3dadd( 92.0226, -80.269, -186.662, 0.28 ) }
    dend_15 { pt3dadd( 93.7715, -80.5209, -188.553, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 2.68842, -149.471, 107.951, 0.55 ) }
    dend_9 { pt3dadd( 3.84475, -157.827, 112.032, 0.55 ) }
    dend_9 { pt3dadd( 6.10728, -166.688, 114.07, 0.55 ) }
    dend_9 { pt3dadd( 7.70993, -175.323, 117.338, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 2.68842, -149.471, 107.951, 0.55 ) }
    dend_8 { pt3dadd( 4.36526, -156.78, 113.731, 0.55 ) }
    dend_8 { pt3dadd( 4.42403, -163.277, 120.617, 0.55 ) }
    dend_8 { pt3dadd( 4.0508, -168.257, 128.66, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -0.902255, -144.214, 104.48, 0.55 ) }
    dend_6 { pt3dadd( 0.461061, -153.437, 110.237, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.902255, -144.214, 104.48, 0.55 ) }
    dend_5 { pt3dadd( -1.64013, -153.775, 110.156, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 0.826804, -114.51, 9.09479, 0.83 ) }
    dend_25 { pt3dadd( 1.76855, -118.468, 9.46644, 0.83 ) }
    dend_25 { pt3dadd( 2.76994, -121.803, 9.97864, 0.83 ) }
    dend_25 { pt3dadd( 3.76534, -125.118, 10.4878, 0.83 ) }
    dend_25 { pt3dadd( 4.71064, -128.266, 10.9713, 0.83 ) }
    dend_25 { pt3dadd( 6.16742, -133.118, 11.7164, 0.83 ) }
    dend_25 { pt3dadd( 7.61368, -137.934, 12.4562, 0.83 ) }
    dend_25 { pt3dadd( 8.91799, -141.121, 13.278, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 0.826804, -114.51, 9.09479, 0.55 ) }
    dend_24 { pt3dadd( 2.25237, -116.601, 8.86047, 0.55 ) }
    dend_24 { pt3dadd( 3.2975, -118.236, 8.40626, 0.55 ) }
    dend_24 { pt3dadd( 3.99572, -119.444, 7.96406, 0.55 ) }
    dend_24 { pt3dadd( 4.57403, -120.859, 7.30965, 0.83 ) }
    dend_24 { pt3dadd( 5.09308, -122.466, 6.39471, 0.55 ) }
    dend_24 { pt3dadd( 5.60079, -124.038, 5.49979, 0.83 ) }
    dend_24 { pt3dadd( 6.02955, -125.742, 4.39207, 0.55 ) }
    dend_24 { pt3dadd( 6.26005, -126.732, 3.65987, 0.83 ) }
    dend_24 { pt3dadd( 6.83036, -129.932, 1.0704, 0.55 ) }
    dend_24 { pt3dadd( 7.04747, -132.443, -1.07973, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -13.4501, -101.931, 40.5238, 0.55 ) }
    dend_20 { pt3dadd( -15.8547, -108.398, 45.5113, 0.55 ) }
    dend_20 { pt3dadd( -19.1109, -113.918, 51.115, 0.55 ) }
    dend_20 { pt3dadd( -22.6418, -118.609, 57.2787, 0.55 ) }
    dend_20 { pt3dadd( -26.6095, -122.245, 63.8754, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -13.4501, -101.931, 40.5238, 0.55 ) }
    dend_19 { pt3dadd( -15.198, -106.075, 43.6636, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 8.91799, -141.121, 13.278, 0.55 ) }
    dend_27 { pt3dadd( 9.10848, -143.423, 13.8681, 0.55 ) }
    dend_27 { pt3dadd( 9.43917, -146.361, 14.6871, 0.55 ) }
    dend_27 { pt3dadd( 9.75077, -149.135, 15.4449, 0.55 ) }
    dend_27 { pt3dadd( 9.94651, -151.106, 15.956, 0.55 ) }
    dend_27 { pt3dadd( 10.251, -154.626, 16.8176, 0.55 ) }
    dend_27 { pt3dadd( 11.2311, -164.521, 18.9723, 0.55 ) }
    dend_27 { pt3dadd( 11.63, -167.881, 19.551, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 11.908, -170.252, 19.8392, 0.55 ) }
    dend_27 { pt3dadd( 12.2253, -172.961, 19.9496, 0.55 ) }
    dend_27 { pt3dadd( 12.416, -175.056, 19.8534, 0.55 ) }
    dend_27 { pt3dadd( 12.9854, -179.954, 19.4115, 0.55 ) }
    dend_27 { pt3dadd( 13.2877, -183.672, 19.0851, 0.55 ) }
    dend_27 { pt3dadd( 13.5595, -186.113, 18.9354, 0.55 ) }
    dend_27 { pt3dadd( 14.2764, -192.442, 18.8729, 0.55 ) }
    dend_27 { pt3dadd( 14.7516, -196.696, 19.0217, 0.55 ) }
    dend_27 { pt3dadd( 15.424, -202.179, 19.5184, 0.55 ) }
    dend_27 { pt3dadd( 16.3197, -208.398, 20.5507, 0.55 ) }
    dend_27 { pt3dadd( 17.1324, -212.549, 21.4753, 0.55 ) }
    dend_27 { pt3dadd( 17.6791, -215.002, 22.0805, 0.55 ) }
    dend_27 { pt3dadd( 18.1405, -217.263, 22.6366, 0.55 ) }
    dend_27 { pt3dadd( 18.7583, -220.127, 23.2007, 0.55 ) }
    dend_27 { pt3dadd( 20.1138, -227.034, 24.1031, 0.55 ) }
    dend_27 { pt3dadd( 20.7176, -229.706, 24.343, 0.55 ) }
    dend_27 { pt3dadd( 21.3167, -232.683, 24.598, 0.55 ) }
    dend_27 { pt3dadd( 22.1771, -237.153, 24.9621, 0.55 ) }
    dend_27 { pt3dadd( 22.6827, -240.59, 25.2931, 0.55 ) }
    dend_27 { pt3dadd( 22.9697, -243.856, 25.5869, 0.55 ) }
    dend_27 { pt3dadd( 23.1052, -246.97, 25.8836, 0.55 ) }
    dend_27 { pt3dadd( 23.1904, -250.009, 26.223, 0.55 ) }
    dend_27 { pt3dadd( 23.2619, -252.172, 26.4416, 0.55 ) }
    dend_27 { pt3dadd( 23.3872, -255.711, 26.6745, 0.55 ) }
    dend_27 { pt3dadd( 23.4433, -259.962, 26.6373, 0.55 ) }
    dend_27 { pt3dadd( 23.5071, -262.027, 26.4576, 0.55 ) }
    dend_27 { pt3dadd( 23.5682, -263.841, 26.1601, 0.55 ) }
    dend_27 { pt3dadd( 23.8187, -267.263, 25.377, 0.55 ) }
    dend_27 { pt3dadd( 23.949, -269.432, 24.8225, 0.55 ) }
    dend_27 { pt3dadd( 24.1506, -272.106, 24.2371, 0.55 ) }
    dend_27 { pt3dadd( 24.2335, -273.986, 23.948, 0.55 ) }
    dend_27 { pt3dadd( 24.3812, -278.871, 23.3984, 0.55 ) }
    dend_27 { pt3dadd( 24.4296, -282.529, 23.2601, 0.55 ) }
    dend_27 { pt3dadd( 24.4593, -288.189, 23.5218, 0.55 ) }
    dend_27 { pt3dadd( 24.5939, -291.841, 24.0275, 0.55 ) }
    dend_27 { pt3dadd( 24.7189, -295.674, 24.6868, 0.28 ) }
    dend_27 { pt3dadd( 24.7375, -297.215, 25.0196, 0.28 ) }
    dend_27 { pt3dadd( 24.8007, -300.953, 26.1701, 0.28 ) }
    dend_27 { pt3dadd( 24.8558, -304.405, 27.5116, 0.28 ) }
    dend_27 { pt3dadd( 25.3992, -308.966, 29.7115, 0.28 ) }
    dend_27 { pt3dadd( 27.6915, -319.229, 31.8794, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 8.91799, -141.121, 13.278, 0.55 ) }
    dend_26 { pt3dadd( 9.88938, -141.514, 13.8878, 0.55 ) }
    dend_26 { pt3dadd( 11.8243, -142.513, 15.2898, 0.55 ) }
    dend_26 { pt3dadd( 13.4635, -143.494, 16.574, 0.28 ) }
    dend_26 { pt3dadd( 15.1981, -144.608, 18.0083, 0.55 ) }
    dend_26 { pt3dadd( 16.1786, -145.317, 19.0294, 0.28 ) }
    dend_26 { pt3dadd( 17.7982, -146.594, 20.9846, 0.55 ) }
    dend_26 { pt3dadd( 18.3661, -147.267, 22.0384, 0.28 ) }
    dend_26 { pt3dadd( 18.545, -147.51, 22.4754, 0.28 ) }
    dend_26 { pt3dadd( 18.8519, -147.858, 23.2381, 0.55 ) }
    dend_26 { pt3dadd( 20.1447, -149.002, 26.0481, 0.28 ) }
    dend_26 { pt3dadd( 20.7169, -149.449, 27.2084, 0.55 ) }
    dend_26 { pt3dadd( 22.6319, -150.746, 30.4019, 0.28 ) }
    dend_26 { pt3dadd( 23.7356, -151.386, 32.0294, 0.28 ) }
    dend_26 { pt3dadd( 25.1738, -152.209, 33.9474, 0.55 ) }
    dend_26 { pt3dadd( 27.4488, -153.486, 36.5586, 0.28 ) }
    dend_26 { pt3dadd( 27.7786, -153.655, 36.8715, 0.55 ) }
    dend_26 { pt3dadd( 29.4671, -154.482, 38.2859, 0.28 ) }
    dend_26 { pt3dadd( 29.6295, -154.558, 38.3956, 0.55 ) }
    dend_26 { pt3dadd( 31.0387, -155.462, 39.4082, 0.28 ) }
    dend_26 { pt3dadd( 31.6877, -155.954, 39.9333, 0.55 ) }
    dend_26 { pt3dadd( 37.005, -159.599, 44.3082, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -26.6095, -122.245, 63.8754, 0.55 ) }
    dend_22 { pt3dadd( -27.7405, -126.962, 73.2123, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -26.6095, -122.245, 63.8754, 0.55 ) }
    dend_21 { pt3dadd( -31.919, -130.566, 72.3739, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    dend_44 nseg = 3
    dend_34 nseg = 5
    dend_29 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 13
    dend_48 nseg = 5
    dend_45 nseg = 3
    dend_42 nseg = 11
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 9
    dend_12 nseg = 9
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 7
    dend_33 nseg = 3
    dend_59 nseg = 5
    dend_54 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 7
    dend_15 nseg = 11
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L5_BP_aae4b53a29_0_0


