// Cell: Cell_473835796
/*
{
  "id" : "Cell_473835796",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "339.672, 374.774, 52.08, 15.7512", "347.547, 374.774, 52.08, 15.7512", "355.423, 374.774, 52.08, 15.7512" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "347.547, 374.774, 52.08, 1.0", "353.389, 388.59, 52.08, 1.0", "359.23, 402.406, 52.08, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996825598374783
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "341.354, 375.583, 60.9815, 0.9484", "340.262, 375.425, 61.0744, 0.6864", "339.154, 375.182, 61.0044, 0.6864", "338.097, 375.617, 61.1316, 0.6864", "337.029, 375.957, 61.2825, 0.6864", "335.901, 375.805, 61.5569, 0.6864", "334.771, 375.664, 61.8271, 0.6864", "333.635, 375.572, 62.0791, 0.6864", "332.509, 375.565, 62.34, 0.6864", "331.421, 375.894, 62.636, 0.6864", "330.352, 376.268, 62.9493, 0.6864", "329.337, 376.777, 63.3167, 0.6864", "328.299, 377.072, 63.602, 0.6864", "327.194, 376.777, 63.665, 0.6864", "326.082, 376.517, 63.7524, 0.6864", "324.953, 376.344, 63.9036, 0.6864", "323.831, 376.371, 64.0226, 0.6864", "322.717, 376.629, 64.1052, 0.6864", "321.589, 376.759, 64.1161, 0.6864", "320.444, 376.768, 64.0598, 0.6864", "319.374, 377.081, 64.0192, 0.6864", "318.356, 377.602, 63.9892, 0.6864", "317.261, 377.717, 63.9481, 0.6864", "316.123, 377.601, 63.9002, 0.6864", "315.09, 377.98, 63.9304, 0.6864", "314.097, 378.547, 63.9906, 0.6864", "312.985, 378.745, 64.0732, 0.6864", "311.848, 378.869, 64.16, 0.6864", "310.772, 379.244, 64.332, 0.6864", "309.705, 379.647, 64.5134, 0.6864", "308.745, 380.263, 64.6786, 0.6864", "307.794, 380.895, 64.8427, 0.6864", "306.832, 381.514, 64.8312, 0.6864", "305.869, 382.13, 64.808, 0.6864", "304.802, 382.527, 64.5498, 0.6864", "303.732, 382.921, 64.2883, 0.6864", "302.817, 383.6, 64.0842, 0.6864", "301.902, 384.282, 63.88, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996825598374783,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "353.874, 371.102, 56.3184, 0.46", "354.897, 370.712, 57.1228, 0.6282", "355.666, 369.877, 57.2191, 0.536", "356.425, 369.021, 57.2788, 0.4306", "357.355, 368.355, 57.3432, 0.3706", "358.294, 367.709, 57.4081, 0.3136", "359.389, 367.377, 57.4865, 0.3062", "360.478, 367.032, 57.5714, 0.3036", "361.512, 366.547, 57.7231, 0.3494", "362.55, 366.071, 57.8659, 0.3932", "363.625, 365.678, 57.9183, 0.4184", "364.648, 365.229, 57.9891, 0.4382", "365.177, 364.22, 58.2414, 0.4064", "365.525, 363.139, 58.3699, 0.3598", "365.797, 362.028, 58.4478, 0.3068", "366.24, 360.98, 58.5169, 0.3168", "366.751, 359.957, 58.583, 0.3514", "366.8, 358.841, 58.69, 0.4144", "366.725, 357.7, 58.8081, 0.485", "366.994, 356.601, 58.854, 0.42", "367.337, 355.509, 58.8848, 0.326", "367.556, 354.388, 58.8585, 0.2954", "367.749, 353.26, 58.8207, 0.2774", "368.096, 352.177, 58.5869, 0.2746", "368.469, 351.102, 58.3167, 0.2746", "368.732, 349.988, 58.2534, 0.2746", "368.983, 348.873, 58.2078, 0.2746", "368.956, 347.733, 58.256, 0.2746", "368.908, 346.59, 58.3108, 0.2746", "369.514, 345.637, 58.497, 0.275", "370.065, 344.662, 58.6956, 0.2752", "370.147, 343.525, 58.9165, 0.276", "370.177, 342.389, 59.1595, 0.2772", "370.059, 341.258, 59.4642, 0.2796", "369.99, 340.127, 59.7943, 0.284", "370.056, 338.996, 60.1922, 0.2936", "370.138, 337.864, 60.5436, 0.3092", "370.26, 336.732, 60.7765, 0.3404", "370.375, 335.597, 61.0145, 0.3522", "370.473, 334.462, 61.2651, 0.315", "370.641, 333.34, 61.4552, 0.2872", "370.982, 332.249, 61.4984, 0.283", "371.335, 331.16, 61.4897, 0.2826", "371.71, 330.081, 61.3715, 0.2904", "372.037, 328.987, 61.2688, 0.3066", "372.29, 327.871, 61.1884, 0.335", "372.405, 326.746, 61.1988, 0.335", "372.332, 325.605, 61.332, 0.2964", "372.369, 324.469, 61.5009, 0.2766", "372.517, 323.339, 61.707, 0.2764", "372.594, 322.202, 61.8716, 0.277", "372.599, 321.059, 61.9951, 0.2788", "372.654, 319.921, 62.2056, 0.2852", "372.758, 318.788, 62.5027, 0.2958", "372.931, 317.665, 62.771, 0.323", "373.172, 316.551, 63.0126, 0.3658", "373.493, 315.458, 63.1067, 0.3998", "373.892, 314.386, 63.0647, 0.4256", "374.203, 313.29, 62.9476, 0.41", "374.438, 312.172, 62.7654, 0.3584", "374.628, 311.047, 62.6567, 0.3198", "374.785, 309.913, 62.5999, 0.2902", "374.817, 308.774, 62.6534, 0.2872", "374.792, 307.631, 62.7572, 0.2964", "375.073, 306.55, 62.5108, 0.312", "375.488, 305.496, 62.113, 0.3306", "375.773, 304.394, 62.1225, 0.3118", "376.021, 303.279, 62.2502, 0.282", "376.076, 302.158, 62.7273, 0.2834", "376.099, 301.034, 63.2621, 0.29", "376.418, 299.942, 63.4606, 0.3162", "376.755, 298.852, 63.639, 0.3438", "377.215, 297.822, 63.1932, 0.3358", "377.68, 296.796, 62.7124, 0.3258", "378.266, 295.818, 62.4632, 0.3434", "378.823, 294.833, 62.2289, 0.3588", "378.888, 293.691, 62.1029, 0.323", "378.961, 292.552, 62.0018, 0.2906", "379.128, 291.423, 62.1774, 0.2972", "379.316, 290.301, 62.3913, 0.3072", "379.742, 289.27, 63.0146, 0.353", "380.158, 288.233, 63.6146, 0.3928", "380.526, 287.168, 64.0805, 0.3986", "380.891, 286.098, 64.5235, 0.4082", "381.235, 285.015, 64.8458, 0.438", "381.455, 283.925, 65.1879, 0.456", "381.267, 282.808, 65.5976, 0.4354", "381.301, 281.725, 66.0257, 0.4088", "381.781, 280.703, 66.4899, 0.3702", "381.684, 279.637, 66.563, 0.352", "381.328, 278.55, 66.4616, 0.343", "381.516, 277.449, 66.1956, 0.4184", "381.789, 276.345, 65.9028, 0.5076", "382.447, 275.411, 65.8095, 0.516", "383.052, 274.457, 65.7597, 0.5084", "383.24, 273.332, 65.9918, 0.3986", "383.471, 272.219, 66.206, 0.3146", "383.895, 271.158, 66.3429, 0.3424", "384.281, 270.086, 66.484, 0.3608", "384.522, 268.969, 66.6422, 0.3436", "384.759, 267.852, 66.7677, 0.339", "384.982, 266.729, 66.7724, 0.3808", "385.181, 265.605, 66.8402, 0.4254", "385.313, 264.472, 67.081, 0.4772", "385.487, 263.346, 67.2619, 0.497", "385.764, 262.237, 67.2972, 0.4386", "385.975, 261.117, 67.3501, 0.3836", "386.046, 259.976, 67.4414, 0.336", "386.141, 258.838, 67.5298, 0.3108", "386.291, 257.703, 67.6122, 0.3304", "386.491, 256.58, 67.6861, 0.3306", "386.776, 255.472, 67.7457, 0.299", "387.076, 254.368, 67.8423, 0.2788", "387.395, 253.272, 67.9974, 0.2762", "387.818, 252.22, 68.1366, 0.2746", "388.393, 251.232, 68.252, 0.2746", "388.848, 250.194, 68.374, 0.2746", "389.141, 249.089, 68.5056, 0.2746", "389.36, 247.971, 68.6546, 0.2746", "389.493, 246.837, 68.8251, 0.2746", "389.788, 245.755, 69.1074, 0.2746", "390.272, 244.731, 69.519, 0.275", "391.027, 244.025, 70.079, 0.2754", "392.068, 243.651, 70.7958, 0.276", "393.151, 243.353, 71.3082, 0.2776", "394.249, 243.085, 71.7382, 0.2796", "395.323, 242.695, 71.7186, 0.2548", "396.396, 242.299, 71.68, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996825598374783,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "354.193, 374.895, 55.4039, 1.4982", "355.317, 374.94, 55.9084, 0.685", "356.333, 374.639, 56.9358, 0.6406", "357.438, 374.703, 57.1715, 0.6406", "358.567, 374.88, 57.1684, 0.6406", "359.602, 375.344, 57.185, 0.6406", "360.613, 375.879, 57.206, 0.6406", "361.633, 376.395, 57.1659, 0.6406", "362.656, 376.907, 57.115, 0.6406", "363.62, 377.521, 57.0626, 0.6406", "364.578, 378.147, 57.01, 0.6406", "365.539, 378.768, 57.0016, 0.6406", "366.5, 379.388, 56.9951, 0.6406" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996825598374783
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "352.982, 379.101, 55.902, 2.3952", "353.81, 380.95, 58.1798, 0.6864", "353.639, 382.003, 59.1833, 0.6864", "353.529, 383.079, 60.051, 0.6864", "353.552, 384.198, 60.6259, 0.6864", "353.732, 385.284, 61.089, 0.6864", "354.249, 386.301, 61.3147, 0.6864", "354.76, 387.319, 61.5628, 0.6864", "355.26, 388.341, 61.8526, 0.6864", "355.454, 389.376, 62.2168, 0.6864", "355.076, 390.437, 62.72, 0.6864", "354.449, 391.311, 63.236, 0.6864", "353.549, 391.982, 63.7661, 0.6864", "352.742, 392.758, 64.2222, 0.6864", "352.035, 393.645, 64.5999, 0.6864", "351.402, 394.582, 64.9625, 0.6864", "350.841, 395.569, 65.3106, 0.6864", "350.363, 396.591, 65.7163, 0.6864", "349.965, 397.646, 66.1772, 0.6864", "349.365, 398.598, 66.423, 0.6864", "348.652, 399.492, 66.5479, 0.6864", "348.096, 400.48, 66.743, 0.6864", "347.611, 401.512, 66.9696, 0.6864", "347.138, 402.551, 67.1367, 0.6864", "346.669, 403.593, 67.2776, 0.6864", "346.15, 404.6, 67.6421, 0.6864", "345.615, 405.594, 68.0893, 0.6864", "345.335, 406.669, 68.6501, 0.6864", "345.136, 407.768, 69.2395, 0.6864", "345.254, 408.888, 69.7371, 0.6864", "345.234, 409.97, 70.2394, 0.6864", "344.562, 410.871, 70.7633, 0.6864", "343.931, 411.799, 71.253, 0.6864", "343.439, 412.82, 71.6248, 0.6864", "342.977, 413.855, 71.9751, 0.6864", "342.599, 414.929, 72.2576, 0.6864", "342.24, 416.009, 72.5231, 0.6864", "341.932, 417.108, 72.7364, 0.6864", "341.622, 418.205, 72.9669, 0.6864", "341.307, 419.299, 73.2382, 0.6864", "340.99, 420.391, 73.5199, 0.6864", "340.668, 421.483, 73.8214, 0.6864", "340.474, 422.589, 74.1233, 0.6864", "340.526, 423.725, 74.4251, 0.6864", "340.485, 424.854, 74.7323, 0.6864", "340.264, 425.97, 75.049, 0.6864", "339.977, 427.067, 75.3116, 0.6864", "339.564, 428.132, 75.4737, 0.6864", "339.307, 429.223, 75.6784, 0.6864", "339.339, 430.36, 75.9618, 0.6864", "339.154, 431.462, 76.2544, 0.6864", "338.758, 432.528, 76.5562, 0.6864", "338.419, 433.614, 76.8214, 0.6864", "338.132, 434.718, 77.0526, 0.6864", "338.035, 435.84, 77.2845, 0.6864", "338.095, 436.978, 77.516, 0.6864", "338.221, 438.111, 77.7118, 0.6864", "338.397, 439.24, 77.8798, 0.6864", "338.516, 440.374, 78.0828, 0.6864", "338.596, 441.511, 78.3065, 0.6864", "338.764, 442.637, 78.5579, 0.6864", "338.977, 443.755, 78.8245, 0.6864", "338.897, 444.879, 79.1168, 0.6864", "338.733, 446.004, 79.4167, 0.6864", "338.503, 447.121, 79.6155, 0.6864", "338.259, 448.236, 79.7913, 0.6864", "337.811, 449.284, 79.9196, 0.6864", "337.331, 450.322, 80.0411, 0.6864", "336.797, 451.333, 80.0615, 0.6864", "336.255, 452.34, 80.0696, 0.6864", "336.05, 453.461, 80.0722, 0.6864", "335.878, 454.591, 80.0741, 0.6864", "336.003, 455.727, 80.0503, 0.6864", "336.136, 456.863, 80.0257, 0.6864", "336.492, 457.95, 80.143, 0.6864", "336.845, 459.036, 80.2631, 0.6864", "336.927, 460.172, 80.5249, 0.6864", "337.016, 461.307, 80.7898, 0.6864", "337.378, 462.38, 81.1922, 0.6864", "337.728, 463.454, 81.5962, 0.6864", "337.673, 464.579, 82.0756, 0.6864", "337.586, 465.696, 82.5446, 0.6864", "336.995, 466.667, 82.8587, 0.6864", "336.43, 467.648, 83.1835, 0.6864", "336.167, 468.746, 83.6265, 0.6864", "335.968, 469.845, 84.1355, 0.6864", "336.016, 470.945, 84.8966, 0.6864", "336.003, 472.056, 85.519, 0.6864", "335.897, 473.182, 85.925, 0.6864", "335.874, 474.313, 86.2663, 0.6864", "335.966, 475.449, 86.5147, 0.6864", "336.245, 476.529, 86.802, 0.6864", "336.78, 477.53, 87.1436, 0.6864", "337.4, 478.425, 87.8968, 0.6864", "338.068, 479.259, 88.8924, 0.6864", "338.492, 479.806, 91.0258, 0.6864", "338.871, 480.298, 93.38, 0.6864", "339.108, 481.006, 95.4786, 0.6864", "339.322, 481.756, 97.5313, 0.6864", "339.376, 482.687, 99.1234, 0.6864", "339.404, 483.648, 100.637, 0.6864", "339.21, 484.733, 101.316, 0.6864", "338.993, 485.829, 101.916, 0.6864", "338.932, 486.966, 102.149, 0.6864", "338.885, 488.106, 102.35, 0.6864", "338.943, 489.248, 102.432, 0.6864", "339.009, 490.389, 102.505, 0.6864", "339.076, 491.531, 102.579, 0.6864", "339.143, 492.673, 102.653, 0.6864", "339.276, 493.809, 102.719, 0.6864", "339.414, 494.944, 102.784, 0.6864", "339.738, 496.039, 102.821, 0.6864", "340.076, 497.133, 102.855, 0.6864", "340.047, 498.273, 102.868, 0.6864", "339.993, 499.415, 102.88, 0.6864", "339.893, 500.555, 102.883, 0.6864", "339.79, 501.694, 102.886, 0.6864", "339.594, 502.821, 102.888, 0.6864", "339.395, 503.948, 102.892, 0.6864", "339.141, 505.063, 102.897, 0.6864", "338.886, 506.178, 102.903, 0.6864", "338.642, 507.297, 102.914, 0.6864", "338.4, 508.414, 102.925, 0.6864", "338.179, 509.536, 102.947, 0.6864", "337.958, 510.659, 102.969, 0.6864", "337.738, 511.781, 103.011, 0.6864", "337.518, 512.904, 103.055, 0.6864", "337.298, 514.026, 103.139, 0.6864", "337.078, 515.148, 103.225, 0.6864", "336.596, 516.181, 103.39, 0.6864", "336.113, 517.214, 103.576, 0.6864", "335.815, 518.304, 104.004, 0.6864", "335.585, 519.401, 104.465, 0.6864", "335.615, 520.518, 105.061, 0.6864", "335.565, 521.624, 105.655, 0.6864", "335.215, 522.687, 106.244, 0.6864", "334.749, 523.672, 106.873, 0.6864", "333.958, 524.439, 107.613, 0.6864", "333.235, 525.257, 108.371, 0.6864", "332.706, 526.217, 109.178, 0.6864", "332.198, 527.19, 109.959, 0.6864", "331.747, 528.201, 110.672, 0.6864", "331.3, 529.217, 111.34, 0.6864", "330.865, 530.251, 111.891, 0.6864", "330.578, 531.29, 112.583, 0.6864", "330.676, 532.346, 113.635, 0.6864", "330.956, 533.348, 114.548, 0.6864", "331.641, 534.23, 115.149, 0.6864", "332.216, 535.182, 115.664, 0.6864", "332.632, 536.235, 116.058, 0.6864", "333.102, 537.262, 116.474, 0.6864", "333.645, 538.253, 116.92, 0.6864", "334.347, 539.12, 117.309, 0.6864", "335.199, 539.87, 117.644, 0.6864", "336.02, 540.657, 117.958, 0.6864", "336.813, 541.471, 118.257, 0.6864", "337.654, 542.224, 118.664, 0.6864", "338.533, 542.929, 119.153, 0.6864", "339.365, 543.697, 119.463, 0.6864", "340.166, 544.512, 119.643, 0.6864", "340.88, 545.396, 119.858, 0.6864", "341.533, 546.331, 120.098, 0.6864", "342.198, 547.26, 120.11, 0.6864", "342.867, 548.187, 120.05, 0.6864", "343.641, 549.024, 120.215, 0.6864", "344.44, 549.835, 120.44, 0.6864", "345.061, 550.775, 120.837, 0.6864", "345.636, 551.748, 121.28, 0.6864", "346.23, 552.724, 121.336, 0.6864", "346.828, 553.698, 121.329, 0.6864", "347.074, 554.807, 121.227, 0.6864", "347.273, 555.931, 121.112, 0.6864", "347.383, 557.054, 120.642, 0.6864", "347.484, 558.174, 120.139, 0.6864", "347.783, 559.275, 120.091, 0.6864", "348.095, 560.376, 120.077, 0.6864", "348.068, 561.511, 120.418, 0.6864", "348.037, 562.646, 120.763, 0.6864", "348.359, 563.728, 121.211, 0.6864", "348.688, 564.808, 121.66, 0.6864", "349.168, 565.829, 122.114, 0.6864", "349.652, 566.849, 122.563, 0.6864", "350.232, 567.83, 122.819, 0.6864", "350.804, 568.814, 123.072, 0.6864", "351.076, 569.925, 123.143, 0.6864", "351.365, 571.025, 123.218, 0.6864", "352.207, 571.797, 123.363, 0.6864", "353.01, 572.597, 123.516, 0.6864", "353.44, 573.653, 123.733, 0.6864", "353.863, 574.714, 123.916, 0.6864", "354.271, 575.781, 124.034, 0.6864", "354.57, 576.878, 124.115, 0.6864", "354.733, 578.009, 124.15, 0.6864", "354.951, 579.132, 124.192, 0.6864", "355.211, 580.246, 124.237, 0.6864", "355.314, 581.377, 124.291, 0.6864", "355.307, 582.52, 124.35, 0.6864", "355.297, 583.664, 124.389, 0.6864", "355.283, 584.808, 124.414, 0.6864", "355.329, 585.95, 124.476, 0.6864", "355.416, 587.091, 124.562, 0.6864", "355.666, 588.198, 124.684, 0.6864", "356.016, 589.286, 124.828, 0.6864", "356.642, 590.214, 124.92, 0.6864", "357.414, 591.056, 124.984, 0.6864", "357.945, 592.049, 124.999, 0.6864", "358.353, 593.118, 124.989, 0.6864", "358.811, 594.165, 124.962, 0.6864", "359.29, 595.204, 124.928, 0.6864", "360.051, 596.027, 125.021, 0.6864", "360.924, 596.764, 125.165, 0.6864", "361.51, 597.722, 125.219, 0.6864", "361.99, 598.76, 125.239, 0.6864", "362.882, 599.394, 125.194, 0.6864", "363.912, 599.891, 125.126, 0.6864", "364.8, 600.595, 125.036, 0.6864", "365.646, 601.365, 124.938, 0.6864", "366.357, 602.255, 124.803, 0.6864", "367.033, 603.176, 124.659, 0.6864", "367.755, 604.063, 124.598, 0.6864", "368.488, 604.942, 124.557, 0.6864", "368.839, 606.01, 124.619, 0.6864", "369.105, 607.122, 124.705, 0.6864", "369.664, 608.112, 124.755, 0.6864", "370.271, 609.082, 124.8, 0.6864", "370.565, 610.179, 124.964, 0.6864", "370.817, 611.292, 125.144, 0.6864", "370.768, 612.423, 125.453, 0.6864", "370.686, 613.557, 125.776, 0.6864", "371.296, 614.505, 126.034, 0.6864", "371.929, 615.45, 126.287, 0.6864", "372.365, 616.505, 126.503, 0.6864", "372.771, 617.563, 126.716, 0.6864", "372.641, 618.698, 126.892, 0.6864", "372.51, 619.832, 127.065, 0.6864", "372.389, 620.968, 127.21, 0.6864", "372.427, 622.058, 127.439, 0.6864", "373.073, 622.976, 127.988, 0.6864", "373.618, 623.934, 128.554, 0.6864", "373.827, 625.029, 129.177, 0.6864", "374.128, 626.094, 129.749, 0.6864", "374.706, 627.066, 130.167, 0.6864", "375.34, 627.999, 130.544, 0.6864", "376.135, 628.815, 130.8, 0.6864", "376.987, 629.547, 131.126, 0.6864", "377.987, 630.061, 131.639, 0.6864", "378.943, 630.651, 132.065, 0.6864", "379.81, 631.39, 132.316, 0.6864", "380.651, 632.158, 132.44, 0.6864", "381.44, 632.984, 132.312, 0.6864", "382.27, 633.763, 132.344, 0.6864", "383.171, 634.454, 132.667, 0.6864", "383.801, 635.355, 133.118, 0.6864", "384.274, 636.374, 133.644, 0.6864", "384.741, 637.409, 133.956, 0.6864", "385.205, 638.45, 134.204, 0.6864", "385.992, 639.26, 134.461, 0.6864", "386.823, 640.041, 134.72, 0.6864", "387.83, 640.498, 135.342, 0.6864", "388.826, 640.96, 136.002, 0.6864", "389.503, 641.849, 136.604, 0.6864", "390.221, 642.689, 137.219, 0.6864", "391.186, 643.232, 137.921, 0.6864", "392.175, 643.74, 138.516, 0.6864", "393.258, 644.099, 138.674, 0.6864", "394.32, 644.509, 138.732, 0.6864", "395.303, 645.08, 138.458, 0.6864", "396.189, 645.769, 138.258, 0.6864", "396.888, 646.674, 138.198, 0.6864", "397.611, 647.56, 138.15, 0.6864", "398.372, 648.415, 138.123, 0.6864", "399.142, 649.26, 138.115, 0.6864", "399.929, 650.091, 138.139, 0.6864", "400.661, 650.961, 138.275, 0.6864", "401.307, 651.896, 138.592, 0.6864", "401.801, 652.906, 138.993, 0.6864", "402.199, 653.962, 139.446, 0.6864", "402.728, 654.964, 139.566, 0.6864", "403.336, 655.933, 139.485, 0.6864", "403.869, 656.942, 139.379, 0.6864", "404.361, 657.974, 139.259, 0.6864", "404.854, 659.005, 139.148, 0.6864", "405.347, 660.036, 139.043, 0.6864", "405.991, 660.974, 138.974, 0.6864", "406.711, 661.861, 138.924, 0.6864", "407.186, 662.885, 138.858, 0.6864", "407.557, 663.967, 138.786, 0.6864", "408.152, 664.941, 138.745, 0.6864", "408.755, 665.911, 138.713, 0.6864", "409.145, 666.985, 138.746, 0.6864", "409.546, 668.056, 138.769, 0.6864", "410.043, 669.087, 138.702, 0.6864", "410.559, 670.106, 138.642, 0.6864", "411.249, 671.018, 138.639, 0.6864", "411.854, 671.968, 138.65, 0.6864", "412.072, 673.091, 138.723, 0.6864", "412.298, 674.209, 138.845, 0.6864", "412.553, 675.317, 139.183, 0.6864", "412.803, 676.424, 139.517, 0.6864", "413.035, 677.537, 139.834, 0.6864", "413.242, 678.655, 140.117, 0.6864", "413.373, 679.79, 140.287, 0.6864", "413.529, 680.92, 140.463, 0.6864", "413.754, 682.039, 140.657, 0.6864", "414.166, 683.055, 140.812, 0.6864", "414.992, 683.847, 140.882, 0.6864", "415.712, 684.713, 141.037, 0.6864", "416.227, 685.726, 141.357, 0.6864", "416.523, 686.789, 141.733, 0.6864", "416.529, 687.918, 142.183, 0.6864", "416.496, 689.046, 142.633, 0.6864", "416.422, 690.173, 143.083, 0.6864", "416.273, 691.292, 143.508, 0.6864", "416.06, 692.404, 143.911, 0.6864", "415.568, 693.386, 144.318, 0.6864", "414.859, 694.267, 144.728, 0.6864", "414.218, 695.194, 145.19, 0.6864", "413.632, 696.154, 145.692, 0.6864", "412.985, 697.08, 146.11, 0.6864", "412.301, 697.985, 146.476, 0.6864", "412.089, 699.06, 146.557, 0.6864", "412.072, 700.203, 146.522, 0.6864", "412.069, 701.346, 146.466, 0.6864", "412.069, 702.49, 146.407, 0.6864", "412.647, 703.449, 146.469, 0.6864", "413.283, 704.394, 146.557, 0.6864", "413.587, 705.495, 146.736, 0.6864", "413.824, 706.607, 146.85, 0.6864", "413.899, 707.748, 146.809, 0.6864", "414.121, 708.848, 146.844, 0.6864", "414.648, 709.86, 147.035, 0.6864", "415.12, 710.892, 147.308, 0.6864", "415.488, 711.961, 147.729, 0.6864", "416.056, 712.892, 148.195, 0.6864", "416.911, 713.619, 148.725, 0.6864", "417.882, 714.147, 149.055, 0.6864", "418.988, 714.434, 149.144, 0.6864", "419.847, 715.071, 149.277, 0.6864", "420.491, 716.015, 149.447, 0.6864", "421.156, 716.944, 149.57, 0.6864", "421.836, 717.863, 149.656, 0.6864", "422.612, 718.694, 149.787, 0.6864", "423.462, 719.457, 149.954, 0.6864", "424.107, 720.375, 150.08, 0.6864", "424.613, 721.401, 150.179, 0.6864", "424.961, 722.483, 150.243, 0.6864", "425.218, 723.597, 150.288, 0.6864", "425.322, 724.73, 150.172, 0.6864", "425.358, 725.871, 149.987, 0.6864", "425.492, 726.991, 149.563, 0.6864", "425.654, 728.107, 149.078, 0.6864", "426.011, 729.182, 148.798, 0.6864", "426.415, 730.248, 148.567, 0.6864", "426.628, 731.368, 148.514, 0.6864", "426.806, 732.499, 148.495, 0.6864", "427.367, 733.481, 148.714, 0.6864", "427.97, 734.448, 148.96, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996825598374783,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "347.977, 367.21, 53.0048, 1.3594", "347.984, 366.066, 52.974, 0.9386", "347.839, 364.933, 52.8842, 0.9152", "347.682, 363.8, 52.7906, 0.9152", "347.83, 362.669, 52.6652, 0.9152", "347.995, 361.537, 52.5384, 0.9152", "348.236, 360.419, 52.5585, 0.9152", "348.48, 359.302, 52.5843, 0.9152", "348.704, 358.181, 52.5591, 0.9152", "348.928, 357.058, 52.5319, 0.9152", "349.122, 355.934, 52.3306, 0.9152", "349.316, 354.809, 52.1248, 0.9152", "349.211, 353.677, 51.8566, 0.9152", "349.097, 352.544, 51.5866, 0.9152", "349.185, 351.406, 51.4086, 0.9152", "349.276, 350.268, 51.2313, 0.9152" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996825598374783
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "341.121, 377.518, 52.08, 0.7116", "339.988, 377.662, 52.0246, 0.7098", "338.853, 377.807, 51.9691, 0.7092" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996825598374783
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "348.753, 382.13, 47.0425, 0.717", "349.201, 383.181, 46.8538, 0.7092", "349.651, 384.23, 46.6673, 0.7092", "349.96, 385.33, 46.559, 0.7092", "350.266, 386.432, 46.4506, 0.7092", "350.336, 387.573, 46.3929, 0.7092", "350.408, 388.715, 46.3352, 0.7092", "350.96, 389.717, 46.2815, 0.7092", "351.51, 390.72, 46.2277, 0.7092" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996825598374783
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "359.23, 402.406, 52.08, 1.0", "365.071, 416.222, 52.08, 1.0", "370.913, 430.038, 52.08, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "301.902, 384.282, 63.88, 0.6864", "300.503, 384.624, 62.8096, 0.4102", "299.424, 384.352, 62.4848, 0.3788", "298.344, 383.989, 62.2443, 0.3782", "297.274, 383.588, 62.1051, 0.387", "296.206, 383.184, 61.973, 0.3966", "295.139, 382.769, 61.9447, 0.3692", "294.074, 382.352, 61.9212, 0.3404", "293.057, 381.832, 61.798, 0.3118", "292.042, 381.307, 61.6708, 0.2832", "291.102, 380.653, 61.6672, 0.2964", "290.164, 379.999, 61.6641, 0.311", "289.201, 379.382, 61.5846, 0.369", "288.238, 378.766, 61.5037, 0.4262", "287.258, 378.178, 61.367, 0.4424", "286.299, 377.569, 61.2374, 0.4548", "285.686, 376.603, 61.2248, 0.4008", "285.055, 375.655, 61.208, 0.3488", "284.134, 374.977, 61.1293, 0.3254", "283.218, 374.293, 61.0523, 0.3074", "282.363, 373.533, 60.9977, 0.3534", "281.511, 372.77, 60.9196, 0.3908", "280.672, 371.999, 60.6925, 0.3748", "279.841, 371.219, 60.4741, 0.3646", "279.047, 370.399, 60.2974, 0.3828", "278.225, 369.613, 60.0799, 0.4046", "277.288, 368.977, 59.6904, 0.4428", "276.451, 368.224, 59.4356, 0.4752", "275.73, 367.336, 59.3396, 0.5012", "275.017, 366.443, 59.253, 0.4854", "274.31, 365.545, 59.1749, 0.4314", "273.717, 364.576, 59.052, 0.39", "273.22, 363.546, 58.8913, 0.3592", "272.505, 362.689, 58.7233, 0.3638", "271.626, 361.962, 58.5505, 0.3948", "270.651, 361.392, 58.3024, 0.4044", "269.61, 360.935, 58.0006, 0.3986", "268.544, 360.543, 57.6881, 0.4092", "267.464, 360.193, 57.3686, 0.431", "266.395, 359.809, 57.0368, 0.4356", "265.332, 359.405, 56.6978, 0.4294", "264.286, 358.959, 56.432, 0.4316", "263.246, 358.492, 56.2013, 0.4376", "262.189, 358.064, 56.0076, 0.4566", "261.123, 357.653, 55.8309, 0.4818", "260.013, 357.399, 55.7192, 0.508", "258.886, 357.204, 55.6321, 0.535", "257.836, 356.769, 55.5845, 0.5288", "256.807, 356.269, 55.5475, 0.5136", "255.804, 355.722, 55.5013, 0.4564", "254.807, 355.162, 55.4526, 0.3876", "253.814, 354.6, 55.6237, 0.34", "252.822, 354.037, 55.8516, 0.298", "251.815, 353.498, 56.0339, 0.3082", "250.806, 352.964, 56.2064, 0.3298", "249.704, 352.69, 56.3539, 0.3272", "248.583, 352.471, 56.4962, 0.3196", "247.641, 351.834, 56.5242, 0.3054", "246.71, 351.168, 56.544, 0.2908", "245.645, 350.755, 56.5718, 0.3172", "244.576, 350.349, 56.6, 0.3448", "243.438, 350.375, 56.8588, 0.2874", "242.299, 350.407, 57.12, 0.2288" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "301.902, 384.282, 63.88, 0.6864", "300.684, 384.654, 63.7703, 0.5402", "299.641, 385.06, 63.6499, 0.4592", "298.801, 385.836, 63.485, 0.5136", "298.029, 386.663, 63.3209, 0.5454", "297.467, 387.658, 63.1593, 0.503", "296.861, 388.621, 63.0137, 0.465", "296.12, 389.492, 62.9174, 0.4402", "295.415, 390.389, 62.8824, 0.4224", "294.817, 391.362, 63.0238, 0.425", "294.158, 392.288, 63.1448, 0.4498", "293.335, 393.082, 63.2094, 0.5354", "292.495, 393.856, 63.259, 0.5846", "291.606, 394.576, 63.2685, 0.538", "290.753, 395.332, 63.2192, 0.5184", "289.979, 396.172, 63.037, 0.561", "289.184, 396.99, 62.837, 0.5662", "288.345, 397.762, 62.6018, 0.4984", "287.462, 398.479, 62.4207, 0.457", "286.503, 399.099, 62.3316, 0.4606", "285.52, 399.682, 62.3017, 0.4992", "284.505, 400.211, 62.3582, 0.5888", "283.536, 400.81, 62.4277, 0.609", "282.63, 401.507, 62.5153, 0.5316", "281.718, 402.194, 62.6609, 0.444", "280.797, 402.866, 62.8869, 0.3428", "279.94, 403.612, 63.1005, 0.2838", "279.165, 404.45, 63.2982, 0.2778", "278.324, 405.212, 63.5138, 0.2748", "277.409, 405.892, 63.7493, 0.2752", "276.378, 406.245, 63.931, 0.2758", "275.235, 406.284, 64.0618, 0.2768", "274.235, 406.687, 64.2188, 0.28", "273.363, 407.425, 64.3994, 0.2852", "272.493, 408.163, 64.594, 0.3004", "271.623, 408.902, 64.7926, 0.3186", "270.734, 409.621, 64.8721, 0.336", "269.844, 410.339, 64.9432, 0.3532", "268.861, 410.921, 64.9586, 0.354", "267.87, 411.495, 64.9704, 0.3538", "266.953, 412.179, 64.9751, 0.452", "266.041, 412.867, 64.9793, 0.555", "265.152, 413.583, 65.1616, 0.5604", "264.233, 414.247, 65.3442, 0.5508", "263.149, 414.604, 65.4948, 0.4746", "262.081, 415.003, 65.6082, 0.4284", "261.065, 415.529, 65.6099, 0.4728", "260.02, 415.962, 65.6121, 0.5146", "258.888, 416.143, 65.6158, 0.5498", "257.763, 416.337, 65.6762, 0.5838", "256.645, 416.562, 65.8773, 0.615", "255.531, 416.813, 66.0136, 0.6356", "254.428, 417.117, 66.0108, 0.6328", "253.312, 417.279, 66.0094, 0.6122", "252.175, 417.155, 66.01, 0.5546", "251.079, 417.249, 66.061, 0.4868", "250.06, 417.766, 66.2088, 0.3992", "249.02, 418.233, 66.372, 0.331", "247.943, 418.608, 66.5633, 0.299", "246.917, 419.092, 66.775, 0.2864", "245.957, 419.704, 67.0107, 0.2976", "244.919, 420.139, 67.2594, 0.3278", "243.814, 420.413, 67.5192, 0.375", "242.709, 420.697, 67.713, 0.3916", "241.605, 420.99, 67.851, 0.3822", "240.561, 421.432, 68.0977, 0.3606", "239.557, 421.963, 68.4093, 0.3314", "238.464, 422.144, 68.6193, 0.3288", "237.322, 422.125, 68.7716, 0.3414", "236.21, 422.335, 68.8579, 0.3486", "235.113, 422.656, 68.9122, 0.353", "234.059, 423.092, 69.0281, 0.3534", "233.028, 423.583, 69.1737, 0.3516", "231.944, 423.931, 69.298, 0.3828", "230.836, 424.212, 69.4126, 0.4296", "229.744, 424.549, 69.3904, 0.4426", "228.659, 424.91, 69.309, 0.4408", "227.798, 425.629, 69.3286, 0.4254", "226.999, 426.448, 69.3767, 0.406", "226.055, 427.075, 69.6024, 0.3718", "225.076, 427.657, 69.8706, 0.334", "224.12, 428.274, 70.1646, 0.3828", "223.168, 428.896, 70.4631, 0.4468", "222.096, 429.278, 70.5418, 0.413", "221.006, 429.624, 70.5872, 0.3644", "219.967, 430.092, 70.8126, 0.3228", "218.931, 430.568, 71.0483, 0.2818", "218.4, 431.565, 71.407, 0.2904", "217.872, 432.567, 71.7668, 0.3026", "217.059, 433.363, 72.0639, 0.3884", "216.247, 434.159, 72.3562, 0.4782", "215.431, 434.954, 72.597, 0.6118", "214.613, 435.75, 72.8188, 0.7272", "213.784, 436.538, 72.8767, 0.6862", "212.957, 437.324, 72.8655, 0.6278", "212.141, 438.103, 72.3932, 0.456", "211.346, 438.904, 71.9972, 0.3162", "210.654, 439.814, 72.0012, 0.3448", "209.953, 440.718, 72.0118, 0.3986", "209.215, 441.591, 72.0535, 0.5684", "208.456, 442.444, 72.137, 0.6932", "207.625, 443.224, 72.373, 0.6544", "206.803, 444.015, 72.6088, 0.6394", "206.014, 444.837, 72.8431, 0.6944", "205.239, 445.675, 73.017, 0.7362", "204.508, 446.555, 73.0209, 0.7406", "203.742, 447.4, 73.0383, 0.6936", "202.889, 448.163, 73.0887, 0.5222", "202.066, 448.954, 73.0898, 0.3882", "201.305, 449.807, 72.9798, 0.338", "200.58, 450.685, 73.0341, 0.3658", "199.919, 451.607, 73.402, 0.543", "198.992, 452.223, 73.7019, 0.5758", "197.978, 452.743, 73.9799, 0.562", "197.03, 453.374, 74.1292, 0.549", "196.102, 454.041, 74.24, 0.536", "195.107, 454.603, 74.2294, 0.5036", "194.094, 455.135, 74.1849, 0.466", "193.115, 455.724, 74.223, 0.4588", "192.144, 456.328, 74.282, 0.459", "191.229, 457.012, 74.3579, 0.5126", "190.325, 457.713, 74.4374, 0.5776", "189.281, 458.158, 74.5251, 0.5318", "188.207, 458.553, 74.6144, 0.4644", "187.181, 459.049, 74.4265, 0.5358", "186.162, 459.561, 74.1983, 0.6274", "185.105, 459.996, 74.1045, 0.5444", "184.043, 460.42, 74.0289, 0.4378", "183.169, 461.147, 73.9609, 0.4782", "182.316, 461.909, 73.8934, 0.5342" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "366.5, 379.388, 56.9951, 0.6406", "366.717, 379.708, 56.9663, 0.626", "367.461, 380.541, 56.8182, 0.5948", "368.458, 381.087, 56.5118, 0.5948", "369.488, 381.546, 56.182, 0.5948", "370.592, 381.8, 55.7976, 0.5948", "371.694, 382.074, 55.4688, 0.5948", "372.791, 382.389, 55.2591, 0.5948", "373.878, 382.732, 55.2051, 0.577", "374.951, 383.122, 55.4039, 0.5304", "376.035, 383.477, 55.5646, 0.509", "377.134, 383.789, 55.6819, 0.517", "378.249, 384.037, 55.7161, 0.5094", "379.378, 384.214, 55.6564, 0.484", "380.508, 384.216, 55.5229, 0.5002", "381.637, 384.055, 55.3204, 0.5552", "382.755, 383.822, 55.2552, 0.5222", "383.862, 383.537, 55.2874, 0.4274", "384.993, 383.439, 55.2874, 0.3712", "386.137, 383.457, 55.267, 0.34", "387.277, 383.39, 55.2619, 0.3364", "388.415, 383.278, 55.265, 0.3472", "389.557, 383.233, 55.2832, 0.376", "390.701, 383.223, 55.3092, 0.4136", "391.82, 383.422, 55.1908, 0.3866", "392.928, 383.694, 55.0231, 0.3376", "393.915, 384.248, 54.8836, 0.385", "394.866, 384.88, 54.7518, 0.4592", "395.799, 385.542, 54.8307, 0.45", "396.728, 386.207, 54.9497, 0.425", "397.339, 387.167, 55.0004, 0.4274", "397.924, 388.149, 55.0455, 0.432", "398.99, 388.514, 55.0749, 0.3752", "400.077, 388.848, 55.104, 0.3154", "400.59, 389.871, 55.167, 0.3252", "401.106, 390.891, 55.2297, 0.3346", "401.75, 391.836, 55.2882, 0.339", "402.401, 392.776, 55.3498, 0.343", "403.189, 393.603, 55.4831, 0.3366", "403.99, 394.416, 55.6217, 0.3274", "404.889, 395.12, 55.7981, 0.3002", "405.811, 395.787, 55.9653, 0.2794", "406.827, 396.311, 56.0977, 0.285", "407.788, 396.914, 56.1574, 0.2958", "408.634, 397.683, 56.0658, 0.3174", "409.484, 398.447, 56.0496, 0.3484", "410.342, 399.201, 56.1879, 0.3982", "410.906, 400.086, 56.434, 0.4066", "410.921, 401.216, 56.8798, 0.3378", "410.929, 402.348, 57.2681, 0.2906", "410.927, 403.487, 57.5565, 0.2814", "410.925, 404.626, 57.8091, 0.2762", "410.925, 405.768, 57.9986, 0.2774", "410.873, 406.905, 58.1843, 0.2798", "410.73, 408.039, 58.3624, 0.2846", "410.688, 409.171, 58.5724, 0.2934", "410.809, 410.304, 58.8347, 0.3094", "410.909, 411.435, 59.1556, 0.3394", "410.977, 412.564, 59.5692, 0.3912", "410.977, 413.694, 59.9455, 0.395", "410.878, 414.827, 60.268, 0.3284", "410.887, 415.958, 60.4691, 0.2868", "411.052, 417.091, 60.496, 0.2806", "411.111, 418.226, 60.4831, 0.279", "411.024, 419.366, 60.415, 0.2836", "411.132, 420.486, 60.4472, 0.2958", "411.452, 421.582, 60.59, 0.3162", "411.863, 422.643, 60.7986, 0.3766", "412.349, 423.673, 61.0621, 0.4706", "412.767, 424.733, 61.2707, 0.508", "413.135, 425.814, 61.4393, 0.5044", "413.533, 426.885, 61.4023, 0.5792", "413.943, 427.951, 61.2713, 0.6902", "414.605, 428.871, 61.3256, 0.7834", "415.33, 429.754, 61.4264, 0.872", "415.916, 430.733, 61.5409, 0.7634", "416.473, 431.732, 61.6582, 0.6148", "417.102, 432.682, 61.8352, 0.5548", "417.745, 433.626, 62.0225, 0.5102", "418.089, 434.709, 62.0281, 0.6646", "418.378, 435.815, 62.0024, 0.8534", "418.865, 436.848, 61.9937, 0.9404", "419.378, 437.871, 61.9867, 1.0146", "419.779, 438.928, 62.3986, 0.8158", "420.155, 439.99, 62.8205, 0.6132", "420.174, 441.132, 62.9924, 0.6268", "420.27, 442.253, 63.1537, 0.6348", "420.816, 443.258, 63.2542, 0.61", "421.353, 444.267, 63.3699, 0.581", "421.847, 445.295, 63.5569, 0.533", "422.264, 446.349, 63.7381, 0.4788", "422.431, 447.478, 63.8996, 0.4046", "422.565, 448.61, 64.0587, 0.3454", "422.606, 449.752, 64.2107, 0.3272", "422.955, 450.793, 64.3927, 0.3612", "423.595, 451.738, 64.6036, 0.4446", "424.219, 452.693, 64.7352, 0.4758", "424.835, 453.658, 64.8012, 0.4638", "425.495, 454.589, 64.9454, 0.4296", "426.19, 455.493, 65.1493, 0.3782", "426.934, 456.345, 65.5192, 0.4064", "427.714, 457.158, 66.0134, 0.4936", "428.604, 457.814, 66.5977, 0.5684", "429.576, 458.356, 67.2468, 0.6342", "430.21, 459.201, 67.8202, 0.6392", "430.616, 460.248, 68.3424, 0.6034", "430.979, 461.319, 68.7481, 0.5568", "431.315, 462.404, 69.0827, 0.5038", "431.615, 463.505, 69.1916, 0.5388", "431.901, 464.613, 69.2177, 0.606", "432.111, 465.733, 69.447, 0.5622", "432.304, 466.855, 69.7147, 0.4972", "432.341, 467.986, 70.0916, 0.463", "432.355, 469.119, 70.4847, 0.4336", "432.712, 470.201, 70.642, 0.434", "433.085, 471.28, 70.8, 0.4394", "433.481, 472.34, 71.2074, 0.532", "433.919, 473.382, 71.5803, 0.6108", "434.549, 474.332, 71.7937, 0.6266", "435.204, 475.264, 72.0054, 0.6322", "435.968, 476.111, 72.2092, 0.5916", "436.837, 476.764, 72.4601, 0.5544", "437.955, 476.959, 72.823, 0.5252", "438.928, 477.446, 73.1951, 0.5152", "439.76, 478.215, 73.5764, 0.5238", "440.469, 479.082, 74.0558, 0.454", "441.098, 480.012, 74.5976, 0.3344", "441.322, 481.053, 75.2685, 0.3008", "441.319, 482.156, 76.0113, 0.3146", "441.123, 483.246, 76.6214, 0.3434", "440.837, 484.331, 77.1711, 0.379", "440.503, 485.39, 77.831, 0.3952", "440.072, 486.409, 78.4644, 0.3862", "439.465, 487.361, 78.9222, 0.3376", "439.091, 488.371, 79.3674, 0.3148", "439.19, 489.498, 79.7868, 0.3446", "439.302, 490.625, 80.1808, 0.3482", "439.432, 491.752, 80.5395, 0.3156", "439.386, 492.878, 80.8371, 0.3132", "439.204, 494.002, 81.0874, 0.3344", "438.999, 495.12, 81.4044, 0.3218", "438.776, 496.232, 81.7628, 0.2882", "438.73, 497.346, 82.2802, 0.275", "438.793, 498.46, 82.8965, 0.2746", "438.822, 499.594, 83.1802, 0.2746", "438.835, 500.737, 83.3291, 0.2746", "438.839, 501.877, 83.5108, 0.2746", "438.839, 503.019, 83.706, 0.2746", "438.839, 504.161, 83.8617, 0.2746", "438.839, 505.304, 84.0017, 0.2748", "438.839, 506.447, 84.1159, 0.2748", "438.839, 507.591, 84.2198, 0.275", "438.839, 508.733, 84.3391, 0.2756", "438.839, 509.876, 84.4645, 0.2762", "438.88, 511.016, 84.6765, 0.2778", "438.938, 512.154, 84.9237, 0.28", "439.179, 513.252, 85.3406, 0.2866", "439.49, 514.336, 85.8203, 0.2948", "439.891, 515.117, 87.4278, 0.3364", "440.322, 515.798, 89.4166, 0.3894", "440.956, 516.28, 91.4166, 0.3796", "441.605, 516.748, 93.4175, 0.3656", "441.68, 517.697, 94.9586, 0.367", "441.757, 518.653, 96.4734, 0.3686", "442.085, 519.686, 97.3638, 0.3724", "442.417, 520.72, 98.2475, 0.3746", "442.793, 521.758, 98.9797, 0.3456", "443.179, 522.793, 99.6974, 0.319", "443.743, 523.77, 100.16, 0.3352", "444.307, 524.748, 100.619, 0.3518", "444.859, 525.734, 101.045, 0.373", "445.415, 526.717, 101.492, 0.3954", "446.0, 527.665, 102.128, 0.4276", "446.52, 528.631, 102.778, 0.4544", "446.534, 529.732, 103.54, 0.437", "446.65, 530.801, 104.232, 0.4222", "447.357, 531.693, 104.514, 0.4212", "448.107, 532.509, 104.983, 0.4102", "448.998, 533.071, 106.076, 0.366", "449.721, 533.765, 107.156, 0.3272", "450.05, 534.773, 108.207, 0.3014", "450.197, 535.815, 109.096, 0.2936", "450.012, 536.918, 109.689, 0.318", "450.099, 538.005, 110.141, 0.3612", "450.486, 539.075, 110.436, 0.4252", "450.882, 540.066, 111.269, 0.4826", "451.29, 540.98, 112.627, 0.5334", "452.041, 541.308, 113.866, 0.5566", "453.074, 541.156, 115.007, 0.5566", "454.064, 540.714, 115.729, 0.551", "455.036, 540.153, 116.279, 0.5428", "455.97, 539.534, 116.841, 0.4792", "456.891, 538.897, 117.407, 0.3984", "457.823, 538.25, 117.75, 0.3622", "458.757, 537.6, 118.046, 0.3354", "459.348, 536.741, 117.077, 0.284", "459.888, 535.85, 115.92, 0.2288" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "366.5, 379.388, 56.9951, 0.6406", "367.227, 379.231, 57.0959, 0.5726", "368.343, 378.996, 57.2572, 0.4722", "369.47, 378.816, 57.4683, 0.406", "370.598, 378.648, 57.6738, 0.3548", "371.736, 378.558, 57.8452, 0.4012", "372.873, 378.463, 58.0479, 0.4364", "373.998, 378.336, 58.445, 0.4036", "375.128, 378.214, 58.7653, 0.374", "376.266, 378.113, 58.8308, 0.3542", "377.395, 377.956, 58.9277, 0.3448", "378.499, 377.666, 59.1018, 0.361", "379.541, 377.251, 59.3709, 0.353", "380.475, 376.615, 59.8086, 0.3018", "381.404, 375.958, 60.1006, 0.2924", "382.327, 375.29, 60.3109, 0.3064", "383.186, 374.539, 60.447, 0.3584", "384.016, 373.753, 60.5514, 0.4266", "384.453, 372.758, 61.0162, 0.4326", "384.727, 371.675, 61.6294, 0.413", "385.469, 370.835, 61.9265, 0.4126", "386.221, 369.996, 62.181, 0.4118", "386.568, 368.91, 62.4282, 0.3858", "386.965, 367.852, 62.706, 0.3724", "387.618, 366.93, 63.1417, 0.4244", "388.296, 366.025, 63.537, 0.4624", "389.085, 365.2, 63.7288, 0.4296", "389.891, 364.396, 63.9512, 0.3908", "390.774, 363.686, 64.3233, 0.323", "391.576, 362.901, 64.6514, 0.2746", "392.177, 361.931, 64.8704, 0.2746", "392.796, 360.973, 65.0555, 0.2746", "393.447, 360.034, 65.1832, 0.2746", "394.129, 359.116, 65.2994, 0.2746", "394.856, 358.234, 65.3976, 0.2746", "395.56, 357.334, 65.4987, 0.2746", "396.228, 356.408, 65.6034, 0.2746", "396.936, 355.514, 65.7824, 0.2746", "397.699, 354.671, 66.0682, 0.2746", "398.525, 353.895, 66.3642, 0.2746", "399.431, 353.208, 66.6733, 0.2746", "400.352, 352.54, 66.9519, 0.2746", "401.291, 351.893, 67.1919, 0.2746", "402.288, 351.358, 67.4176, 0.2746", "403.356, 350.959, 67.6259, 0.2746", "404.448, 350.63, 67.7818, 0.2746", "405.565, 350.389, 67.8748, 0.2746", "406.618, 349.982, 67.9538, 0.2746", "407.599, 349.396, 68.0173, 0.2746", "408.628, 348.905, 68.07, 0.2746", "409.702, 348.515, 68.1111, 0.2746", "410.633, 347.905, 68.1478, 0.2746", "411.421, 347.076, 68.1797, 0.2746", "412.297, 346.351, 68.1621, 0.2746", "413.253, 345.724, 68.098, 0.2746", "414.054, 344.932, 67.9994, 0.2746", "414.737, 344.016, 67.8751, 0.2746", "415.432, 343.123, 67.5195, 0.2748", "416.136, 342.247, 67.0023, 0.2752", "416.742, 341.299, 67.0639, 0.2764", "417.288, 340.307, 67.4699, 0.278", "417.612, 339.255, 68.1439, 0.2848", "417.856, 338.182, 68.9119, 0.2936", "418.109, 337.081, 69.2938, 0.3242", "418.365, 335.972, 69.5747, 0.3602", "418.439, 334.835, 69.6539, 0.3354", "418.474, 333.691, 69.6895, 0.2976", "418.674, 332.572, 69.93, 0.285", "418.901, 331.456, 70.2052, 0.2768", "419.283, 330.382, 70.3651, 0.2778", "419.684, 329.312, 70.5085, 0.28", "419.757, 328.175, 70.3884, 0.2942", "419.809, 327.033, 70.252, 0.309", "420.082, 325.926, 70.4304, 0.3228", "420.362, 324.819, 70.6149, 0.3366", "420.712, 323.73, 70.7426, 0.3128", "421.062, 322.643, 70.8697, 0.2888", "421.478, 321.641, 71.757, 0.3244", "421.9, 320.644, 72.6488, 0.3606", "422.74, 319.931, 73.4031, 0.4044", "423.544, 319.19, 74.1625, 0.445", "424.068, 318.228, 74.963, 0.459", "424.633, 317.287, 75.7098, 0.4836", "425.399, 316.46, 76.19, 0.5598", "426.205, 315.681, 76.6391, 0.6234", "427.191, 315.116, 76.9485, 0.63", "428.154, 314.517, 77.2604, 0.6124", "429.021, 313.781, 77.5813, 0.5012", "429.777, 312.971, 77.9646, 0.416", "430.203, 311.935, 78.5316, 0.4082", "430.633, 310.898, 79.0782, 0.422", "431.072, 309.862, 79.5732, 0.4892", "431.518, 308.822, 79.9518, 0.5144", "431.981, 307.777, 80.0825, 0.4506", "432.472, 306.746, 80.106, 0.3856", "433.005, 305.736, 79.954, 0.3182", "433.414, 304.683, 79.9644, 0.2776", "433.642, 303.566, 80.2094, 0.2756", "434.165, 302.641, 80.5342, 0.2746", "435.07, 301.963, 80.9617, 0.2746", "435.721, 301.077, 81.1863, 0.2748", "436.168, 300.024, 81.2501, 0.275", "436.764, 299.073, 80.9822, 0.276", "437.464, 298.189, 80.4868, 0.2774", "438.259, 297.387, 80.1259, 0.2814", "439.102, 296.623, 79.8305, 0.2866", "440.158, 296.584, 80.5879, 0.3672", "441.241, 296.639, 81.48, 0.4576" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "349.276, 350.268, 51.2313, 0.9152", "350.369, 349.674, 49.2509, 0.817", "351.24, 349.13, 48.1678, 0.7716", "351.96, 348.242, 48.0808, 0.59", "352.423, 347.298, 47.9707, 0.4584", "352.143, 346.19, 47.794, 0.4734", "351.804, 345.115, 47.4751, 0.5052", "351.32, 344.116, 46.7936, 0.58", "350.779, 343.142, 46.2255, 0.6188", "350.112, 342.222, 45.904, 0.5794", "349.734, 341.198, 45.68, 0.4898", "349.693, 340.056, 45.5689, 0.342", "349.896, 338.943, 45.3852, 0.302", "350.194, 337.843, 45.1724, 0.305", "349.579, 336.953, 44.9257, 0.3582", "348.831, 336.094, 44.6743, 0.4188", "348.369, 335.063, 44.347, 0.4734", "347.943, 334.01, 44.0096, 0.5272", "347.612, 332.929, 43.5912, 0.5132", "347.292, 331.845, 43.1628, 0.4912", "347.158, 330.738, 42.5468, 0.5226", "347.085, 329.642, 41.93, 0.5546", "347.807, 328.764, 41.6391, 0.5032", "348.552, 327.909, 41.349, 0.4568", "349.507, 327.289, 41.0687, 0.4596", "350.457, 326.665, 40.7868, 0.4756", "351.384, 326.004, 40.4939, 0.5772", "352.304, 325.374, 40.0459, 0.652", "353.181, 324.93, 38.6126, 0.5566", "353.867, 324.421, 36.8659, 0.445", "354.32, 323.831, 34.7393, 0.314", "354.24, 322.982, 33.0428, 0.2848", "353.804, 322.065, 32.2692, 0.292", "353.124, 321.148, 32.4296, 0.3092", "352.279, 321.002, 32.8759, 0.3534", "351.296, 321.512, 33.5656, 0.4204", "351.02, 322.42, 34.2773, 0.4486", "351.094, 323.523, 35.0, 0.4576" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "349.276, 350.268, 51.2313, 0.9152", "349.898, 348.831, 51.5144, 0.7464", "350.257, 347.759, 51.9369, 0.8052", "350.542, 346.657, 52.1906, 0.793", "350.809, 345.547, 52.3989, 0.762", "351.512, 344.654, 52.2603, 0.7042", "352.238, 343.772, 52.1052, 0.645" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "338.853, 377.807, 51.9691, 0.7092", "337.38, 377.684, 51.8627, 0.7092", "336.247, 377.534, 51.7863, 0.7092", "335.23, 377.02, 51.6494, 0.7092", "334.217, 376.49, 51.5099, 0.7092", "333.296, 375.822, 51.2235, 0.7092", "332.379, 375.15, 50.9328, 0.7092", "331.272, 374.97, 50.4235, 0.7092", "330.159, 374.802, 49.9092, 0.7092" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "351.51, 390.72, 46.2277, 0.7092", "350.134, 390.774, 45.9648, 0.6864", "349.809, 391.86, 46.3417, 0.6864", "350.091, 392.902, 46.8972, 0.6864", "350.521, 393.934, 47.4953, 0.6864", "350.365, 395.049, 47.8022, 0.6864", "350.18, 396.173, 48.0693, 0.6864", "350.137, 397.316, 48.0116, 0.6864", "350.12, 398.456, 47.9363, 0.6864", "350.329, 399.578, 47.7025, 0.6864", "350.516, 400.7, 47.4639, 0.6864", "350.531, 401.838, 47.1934, 0.6864", "350.547, 402.976, 46.9221, 0.6864", "350.578, 404.115, 46.6452, 0.6864", "350.66, 405.247, 46.4332, 0.6864", "350.939, 406.356, 46.4741, 0.6864", "351.218, 407.465, 46.5385, 0.6864", "351.495, 408.574, 46.6701, 0.6864", "351.611, 409.682, 46.7564, 0.6864", "351.326, 410.79, 46.7306, 0.6864", "350.922, 411.849, 46.6696, 0.6864", "350.361, 412.846, 46.5629, 0.6864", "349.897, 413.887, 46.4775, 0.6864", "349.507, 414.961, 46.4092, 0.6864", "349.41, 416.077, 46.583, 0.6864", "349.462, 417.213, 46.8801, 0.6864", "349.117, 418.259, 47.1979, 0.6864", "348.585, 419.263, 47.5258, 0.6864", "348.116, 420.303, 47.5566, 0.6864", "347.666, 421.355, 47.4872, 0.6864", "347.246, 422.416, 47.299, 0.6864", "346.837, 423.48, 47.0714, 0.6864", "346.242, 424.447, 46.83, 0.6864", "345.602, 425.389, 46.5856, 0.6864", "345.393, 426.505, 46.4321, 0.6864", "345.219, 427.634, 46.2862, 0.6864", "345.072, 428.768, 46.2392, 0.6864", "344.925, 429.903, 46.1994, 0.6864", "344.654, 431.013, 46.1401, 0.6864", "344.376, 432.122, 46.0799, 0.6864", "344.106, 433.234, 46.0387, 0.6864", "343.826, 434.342, 46.0186, 0.6864", "343.487, 435.434, 46.128, 0.6864", "343.362, 436.543, 45.99, 0.6864", "343.468, 437.67, 45.5857, 0.6864", "343.458, 438.802, 45.5624, 0.6864", "343.362, 439.937, 45.8254, 0.6864", "343.469, 441.065, 46.0446, 0.5708", "343.66, 442.189, 46.2456, 0.407" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "351.51, 390.72, 46.2277, 0.7092", "351.29, 389.795, 47.0434, 0.614", "351.285, 388.789, 47.5919, 0.5014", "351.983, 387.911, 47.0456, 0.3766", "352.871, 387.344, 46.5391, 0.339", "353.981, 387.137, 46.0782, 0.4024", "354.981, 387.516, 45.7254, 0.4706", "355.938, 388.129, 45.416, 0.5408", "356.919, 388.702, 45.0559, 0.559", "357.906, 389.257, 44.6774, 0.558", "358.94, 389.733, 44.4066, 0.524", "359.981, 390.195, 44.1535, 0.4846", "360.916, 390.7, 43.1374, 0.593", "361.853, 391.163, 42.0521, 0.689", "362.885, 391.255, 40.8587, 0.5976", "363.912, 391.396, 39.7138, 0.5038", "364.929, 391.76, 38.7929, 0.3978", "365.962, 392.019, 37.8711, 0.3336", "367.041, 391.973, 36.9463, 0.388", "368.107, 391.827, 36.0657, 0.4422", "369.151, 391.486, 35.2696, 0.496", "370.184, 391.087, 34.6349, 0.506", "371.201, 390.581, 34.2916, 0.4366", "372.232, 390.472, 33.9385, 0.3864", "373.284, 390.897, 33.572, 0.3622", "374.184, 391.519, 34.043, 0.3246", "375.042, 392.053, 35.07, 0.2912", "375.961, 392.072, 36.7394, 0.2882", "376.916, 391.871, 37.8762, 0.3012", "377.924, 391.352, 38.2278, 0.3376", "378.654, 390.551, 38.0248, 0.3906", "379.206, 389.576, 37.4758, 0.4538", "379.871, 388.887, 36.1491, 0.4758", "380.593, 388.345, 34.4285, 0.4768", "381.451, 388.826, 33.2836, 0.359", "382.326, 389.418, 32.2, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "351.51, 390.72, 46.2277, 0.7092", "352.222, 391.48, 45.7453, 0.5708", "353.069, 392.234, 45.3835, 0.559", "354.009, 392.862, 45.1338, 0.5454", "355.021, 393.392, 44.973, 0.5306", "355.954, 394.034, 44.7275, 0.4898", "356.827, 394.761, 44.4167, 0.429", "357.134, 395.736, 44.1241, 0.415", "357.069, 396.872, 43.8438, 0.432", "356.536, 397.836, 43.6685, 0.4464", "355.836, 398.74, 43.5305, 0.46", "355.741, 399.817, 43.3633, 0.4738", "355.855, 400.953, 43.1861, 0.4878", "356.128, 402.047, 42.7854, 0.4546", "356.43, 403.136, 42.3438, 0.4128", "356.888, 404.115, 41.4235, 0.4324", "357.348, 405.09, 40.4925, 0.4532" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "182.316, 461.909, 73.8934, 0.5342", "182.357, 462.183, 74.3708, 0.4918", "182.227, 463.114, 75.6736, 0.3928", "181.671, 464.057, 76.4859, 0.364", "181.213, 465.058, 77.1929, 0.3562", "180.84, 466.11, 77.8092, 0.367", "180.199, 467.029, 78.1267, 0.4938", "179.403, 467.828, 78.3832, 0.581", "178.44, 468.423, 78.7699, 0.441", "177.597, 469.151, 79.1008, 0.3798", "176.943, 470.085, 79.3444, 0.4416", "176.208, 470.947, 79.6334, 0.4594", "175.4, 471.747, 79.963, 0.4372", "174.562, 472.491, 80.4731, 0.3896", "173.699, 473.194, 81.1236, 0.3222", "172.726, 473.717, 81.7034, 0.3116", "171.676, 474.115, 82.2349, 0.3402", "170.647, 474.584, 82.6182, 0.3844", "169.632, 475.1, 82.9074, 0.4384", "168.735, 475.782, 83.1827, 0.4292", "167.912, 476.568, 83.4487, 0.38", "166.889, 476.937, 83.7172, 0.3528", "165.76, 477.079, 83.9868, 0.3378", "164.809, 477.564, 84.7336, 0.2902", "163.935, 478.192, 85.68, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "182.316, 461.909, 73.8934, 0.5342", "181.711, 462.159, 73.9402, 0.551", "180.693, 462.666, 74.0659, 0.5514", "179.74, 463.294, 74.265, 0.5036", "178.757, 463.862, 74.5102, 0.4438", "177.723, 464.335, 74.8292, 0.3644", "176.755, 464.909, 75.1789, 0.322", "175.881, 465.63, 75.5734, 0.3326", "174.946, 466.225, 76.137, 0.3234", "173.941, 466.673, 76.8978, 0.2908", "172.947, 467.16, 77.5928, 0.2752", "171.964, 467.685, 78.2244, 0.2756", "171.223, 468.473, 78.6262, 0.277", "170.681, 469.477, 78.8379, 0.2792", "170.165, 470.449, 78.2611, 0.2922", "169.66, 471.408, 77.3716, 0.3096", "169.013, 472.304, 76.6819, 0.3828", "168.321, 473.179, 76.057, 0.474", "167.641, 474.091, 76.039, 0.448", "166.962, 475.01, 76.1508, 0.397", "166.174, 475.836, 76.1989, 0.4268", "165.363, 476.643, 76.2342, 0.4728", "164.367, 477.184, 76.1351, 0.4572", "163.333, 477.675, 76.0102, 0.4296", "162.215, 477.883, 75.9744, 0.4706", "161.083, 478.05, 75.9514, 0.5218", "160.009, 478.436, 75.9321, 0.4694", "158.943, 478.849, 75.913, 0.4036", "158.063, 479.567, 76.1074, 0.414", "157.202, 480.315, 76.3221, 0.4316", "156.245, 480.917, 76.7351, 0.3666", "155.281, 481.509, 77.1632, 0.295", "154.328, 482.134, 77.3648, 0.287", "153.375, 482.762, 77.5639, 0.28", "152.485, 483.473, 77.8235, 0.2884", "151.579, 484.156, 78.083, 0.2988", "150.495, 484.506, 78.3434, 0.3346", "149.454, 484.928, 78.6271, 0.3576", "148.622, 485.695, 79.0208, 0.3212", "147.805, 486.481, 79.3643, 0.2928", "147.015, 487.304, 79.6093, 0.2804", "146.102, 487.961, 79.7924, 0.2746", "145.081, 488.474, 79.9221, 0.2746", "144.047, 488.959, 80.0052, 0.2746", "143.001, 489.424, 80.0534, 0.2746", "142.086, 490.089, 80.0856, 0.2746", "141.238, 490.857, 80.1094, 0.2746", "140.339, 491.562, 80.1237, 0.2746", "139.417, 492.238, 80.134, 0.2746", "138.743, 493.142, 80.1861, 0.2746", "138.155, 494.122, 80.2522, 0.2746", "137.348, 494.92, 80.3149, 0.2746", "136.486, 495.672, 80.3768, 0.2746", "135.744, 496.538, 80.4933, 0.2746", "135.024, 497.426, 80.6201, 0.2746", "134.197, 498.211, 80.8027, 0.2746", "133.354, 498.98, 80.9945, 0.2746", "132.427, 499.645, 81.1616, 0.2746", "131.488, 500.295, 81.3252, 0.2746", "130.67, 501.089, 81.4943, 0.2746", "129.865, 501.899, 81.6642, 0.2746", "128.955, 502.587, 81.828, 0.2746", "128.034, 503.263, 81.991, 0.2746", "127.484, 504.263, 82.1257, 0.2746", "126.937, 505.266, 82.2601, 0.2746", "126.093, 506.037, 82.3376, 0.2746", "125.249, 506.808, 82.4155, 0.2746", "124.407, 507.582, 82.4995, 0.2746", "123.593, 508.38, 82.5787, 0.2746", "123.02, 509.369, 82.6179, 0.2746", "122.344, 510.258, 82.6549, 0.2746", "121.366, 510.852, 82.6857, 0.2746", "120.38, 511.432, 82.7232, 0.2746", "119.372, 511.973, 82.7798, 0.2746", "118.549, 512.674, 82.8517, 0.2746", "118.149, 513.745, 82.9595, 0.2746", "117.574, 514.679, 83.1174, 0.2746", "116.641, 515.334, 83.3764, 0.2748", "115.75, 516.034, 83.708, 0.275", "114.909, 516.791, 84.1294, 0.2754", "114.102, 517.565, 84.6852, 0.2768", "113.338, 518.365, 85.4062, 0.2792", "112.564, 519.178, 85.764, 0.2854", "111.779, 520.01, 85.6954, 0.2956", "110.934, 520.758, 85.3944, 0.318", "110.031, 521.427, 84.8663, 0.352", "109.186, 522.174, 84.499, 0.3564", "108.392, 522.993, 84.2755, 0.334", "107.74, 523.917, 84.1322, 0.3324", "107.213, 524.931, 84.0599, 0.3488", "106.477, 525.773, 84.11, 0.369", "105.584, 526.485, 84.2523, 0.3922", "104.626, 527.087, 84.5558, 0.425", "103.623, 527.608, 84.9769, 0.465", "102.856, 528.384, 85.451, 0.55", "102.25, 529.331, 85.9603, 0.6656", "101.602, 530.266, 86.2364, 0.6142", "100.939, 531.195, 86.4349, 0.5076", "100.321, 532.156, 86.4469, 0.5068", "99.7139, 533.125, 86.4181, 0.5292", "99.0096, 534.012, 86.079, 0.5292", "98.285, 534.882, 85.675, 0.5246", "97.5021, 535.714, 85.5691, 0.5252", "96.6974, 536.521, 85.5086, 0.5262", "95.6911, 537.065, 85.4588, 0.5174", "94.6906, 537.618, 85.4529, 0.499", "93.7133, 538.208, 85.6232, 0.4426", "92.6889, 538.688, 85.911, 0.4092", "91.6195, 539.06, 86.3108, 0.3976", "90.5412, 539.378, 86.8221, 0.3698", "89.4606, 539.681, 87.3639, 0.3374", "88.3801, 540.044, 87.5174, 0.3106", "87.2996, 540.418, 87.5871, 0.2848", "86.2997, 540.919, 88.1115, 0.2948", "85.3164, 541.446, 88.7292, 0.3118", "84.226, 541.227, 89.1083, 0.387", "83.1349, 541.009, 89.5062, 0.4578", "82.1294, 541.442, 90.3185, 0.43", "81.1448, 541.801, 91.3461, 0.3848", "80.2113, 541.977, 92.9068, 0.2964", "79.1519, 542.019, 93.8773, 0.2782", "78.0548, 542.023, 94.6708, 0.281", "76.9172, 542.047, 94.6196, 0.2928", "75.7752, 542.073, 94.474, 0.3054", "74.7817, 541.766, 93.3055, 0.3754", "73.7602, 541.658, 92.2116, 0.4312", "72.7019, 541.81, 91.2153, 0.4684", "71.7267, 542.217, 90.4999, 0.4404", "70.8551, 542.943, 90.1354, 0.3306", "69.8831, 543.496, 90.2082, 0.2904", "68.8315, 543.914, 90.6273, 0.305", "67.9486, 544.583, 90.8446, 0.3198", "67.1908, 545.439, 90.9121, 0.3344", "66.3552, 546.207, 90.7054, 0.3444", "65.4792, 546.929, 90.3568, 0.3518", "64.6382, 547.677, 89.8772, 0.339", "63.814, 548.439, 89.3354, 0.3166", "62.9238, 549.144, 89.0798, 0.3316", "62.0063, 549.825, 88.9428, 0.362", "61.5654, 550.83, 88.8756, 0.353", "61.2718, 551.937, 88.83, 0.3318", "60.6995, 552.911, 89.0324, 0.3422", "60.0655, 553.857, 89.2895, 0.3598", "59.873, 554.967, 89.5065, 0.3716", "59.7486, 556.101, 89.7173, 0.3826", "59.7254, 557.242, 89.6776, 0.4182", "59.7173, 558.386, 89.6, 0.4576" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "352.238, 343.772, 52.1052, 0.645", "352.465, 343.051, 51.8468, 0.4672", "352.758, 341.961, 51.7387, 0.2942", "352.945, 340.849, 52.2166, 0.3174", "353.248, 339.767, 52.6011, 0.357", "353.697, 338.72, 52.8716, 0.4166", "353.98, 337.639, 53.2487, 0.4128", "354.068, 336.518, 53.7555, 0.3322", "354.284, 335.424, 54.3127, 0.3224", "354.603, 334.353, 54.9091, 0.3678", "354.388, 333.343, 55.3087, 0.4126", "353.783, 332.378, 55.5646, 0.4572", "353.02, 331.545, 55.7598, 0.446", "352.161, 330.791, 55.9191, 0.402", "351.444, 329.918, 56.1907, 0.4016", "350.801, 328.981, 56.5228, 0.4246", "350.301, 327.971, 56.9041, 0.3902", "349.872, 326.923, 57.3104, 0.326", "349.284, 325.957, 57.3362, 0.3058", "348.619, 325.028, 57.1791, 0.3064", "347.912, 324.149, 56.7538, 0.3238", "347.188, 323.291, 56.2229, 0.348", "346.491, 322.394, 55.907, 0.3326", "345.803, 321.487, 55.6511, 0.3062", "345.253, 320.489, 55.5162, 0.3248", "344.74, 319.468, 55.4117, 0.3544", "344.302, 318.413, 55.2126, 0.318", "343.862, 317.364, 55.1376, 0.2936", "343.408, 316.337, 55.678, 0.3286", "343.068, 315.283, 56.2159, 0.3432", "343.008, 314.162, 56.7479, 0.3086", "343.066, 313.048, 56.9173, 0.2976", "343.322, 311.947, 56.4878, 0.3254", "343.497, 310.829, 56.1324, 0.3532", "343.573, 309.693, 55.8692, 0.381", "343.794, 308.589, 55.568, 0.3886", "344.179, 307.521, 55.2238, 0.3726", "344.477, 306.424, 54.9937, 0.3942", "344.706, 305.305, 54.8498, 0.4438", "344.893, 304.178, 54.8688, 0.421", "345.057, 303.047, 54.9797, 0.3574", "345.313, 301.935, 54.9195, 0.3672", "345.603, 300.828, 54.7968, 0.404", "345.723, 299.701, 54.5558, 0.405", "345.784, 298.563, 54.2755, 0.3944", "345.648, 297.443, 53.8894, 0.3614", "345.457, 296.329, 53.475, 0.3226", "345.419, 295.198, 53.1087, 0.3634", "345.415, 294.063, 52.7528, 0.4214", "344.964, 293.034, 52.6557, 0.4172", "344.422, 292.027, 52.6114, 0.4", "344.025, 290.957, 52.764, 0.3876", "343.646, 289.88, 52.9346, 0.3758", "343.485, 288.748, 52.8282, 0.3756", "343.32, 287.618, 52.7246, 0.3756", "342.817, 286.591, 52.836, 0.3944", "342.316, 285.564, 52.9441, 0.4116", "341.855, 284.517, 52.9488, 0.387", "341.423, 283.463, 52.9519, 0.363", "341.294, 282.326, 52.9385, 0.346", "341.208, 281.192, 52.9301, 0.3344", "341.462, 280.076, 52.964, 0.364", "341.71, 278.96, 53.03, 0.3828", "341.931, 277.84, 53.2101, 0.3634", "342.138, 276.718, 53.3047, 0.3648", "342.296, 275.587, 53.0981, 0.4402", "342.443, 274.457, 52.8777, 0.5154", "342.565, 273.324, 52.6162, 0.59", "342.708, 272.194, 52.381, 0.6028", "342.914, 271.071, 52.2214, 0.436", "343.003, 269.95, 52.0601, 0.3096", "342.763, 268.833, 51.8935, 0.2956", "342.529, 267.715, 51.7104, 0.2918", "342.304, 266.598, 51.494, 0.3082", "342.082, 265.478, 51.2884, 0.323", "341.863, 264.358, 51.1034, 0.3354", "341.724, 263.23, 50.9384, 0.3442", "341.732, 262.087, 50.8082, 0.3466", "341.792, 260.948, 50.6873, 0.347", "341.921, 259.812, 50.5786, 0.3452", "342.27, 258.75, 50.3784, 0.3382", "342.826, 257.756, 50.0945, 0.3268", "343.724, 257.243, 49.7848, 0.3128", "344.841, 257.033, 49.4589, 0.297", "345.504, 256.286, 49.0683, 0.3102", "345.904, 255.229, 48.6399, 0.34", "346.442, 254.23, 48.3258, 0.419", "347.017, 253.247, 48.0424, 0.5116", "347.593, 252.262, 47.8596, 0.4708", "348.168, 251.275, 47.6932, 0.4076", "348.241, 250.147, 47.4956, 0.3868", "348.268, 249.007, 47.2954, 0.3698", "348.121, 247.874, 47.1517, 0.339", "347.962, 246.742, 47.0123, 0.3072", "347.878, 245.603, 46.9479, 0.333", "347.799, 244.461, 46.8882, 0.3628", "348.023, 243.342, 46.9944, 0.3442", "348.262, 242.225, 47.1092, 0.3232", "348.513, 241.108, 47.1456, 0.3374", "348.763, 239.993, 47.1786, 0.3528", "348.879, 238.855, 47.2038, 0.3074", "348.992, 237.716, 47.2287, 0.2602", "349.355, 236.633, 47.1352, 0.2442", "349.721, 235.55, 47.04, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "352.238, 343.772, 52.1052, 0.645", "352.828, 343.336, 51.9803, 0.617", "353.766, 342.684, 51.8734, 0.5894", "354.714, 342.042, 51.7994, 0.5676", "355.691, 341.45, 51.7678, 0.6246", "356.672, 340.862, 51.7406, 0.69", "357.578, 340.168, 51.952, 0.6432", "358.478, 339.469, 52.1774, 0.5896", "359.095, 338.51, 52.3345, 0.5966", "359.712, 337.549, 52.4793, 0.6024", "360.383, 336.621, 52.4754, 0.5856", "361.082, 335.723, 52.4796, 0.5628", "362.017, 335.064, 52.5549, 0.4894", "362.923, 334.376, 52.642, 0.4234", "363.603, 333.459, 52.8209, 0.4148", "364.253, 332.524, 52.964, 0.4044", "364.694, 331.469, 52.8732, 0.3812", "365.109, 330.407, 52.7794, 0.3598", "365.358, 329.291, 52.6674, 0.3482", "365.807, 328.304, 52.5773, 0.3532", "366.72, 327.615, 52.5375, 0.3962", "367.643, 326.939, 52.5146, 0.4068", "368.583, 326.288, 52.521, 0.3598", "369.435, 325.54, 52.5465, 0.3332", "370.177, 324.668, 52.596, 0.3316", "370.887, 323.773, 52.6683, 0.3412", "371.559, 322.848, 52.7685, 0.3642", "372.21, 321.909, 52.883, 0.4006", "372.835, 320.953, 53.0152, 0.4532", "373.477, 320.007, 53.0908, 0.519", "374.135, 319.071, 53.1009, 0.5998", "374.827, 318.161, 53.1446, 0.6012", "375.55, 317.276, 53.2185, 0.5294", "376.293, 316.406, 53.3078, 0.4492", "377.05, 315.549, 53.4097, 0.362", "377.79, 314.685, 53.6631, 0.3288", "378.516, 313.814, 54.0375, 0.3384", "379.296, 312.979, 54.1523, 0.3616", "380.081, 312.15, 54.2391, 0.3864", "380.953, 311.417, 54.5034, 0.382", "381.829, 310.69, 54.7764, 0.376", "382.612, 309.856, 54.7333, 0.4922", "383.392, 309.02, 54.6837, 0.6108" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "330.159, 374.802, 49.9092, 0.7092", "329.345, 374.757, 49.6944, 0.5828", "328.21, 374.695, 49.3948, 0.4064", "327.138, 374.321, 49.1028, 0.396", "326.072, 373.923, 48.8116, 0.3984", "325.102, 373.322, 48.6786, 0.4604", "324.133, 372.715, 48.5489, 0.5238" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "330.159, 374.802, 49.9092, 0.7092", "329.298, 375.022, 49.562, 0.6994", "328.203, 375.301, 49.1207, 0.6868", "327.257, 375.916, 48.7267, 0.6864", "326.315, 376.547, 48.3347, 0.6864", "325.531, 377.379, 48.3694, 0.6864", "324.751, 378.216, 48.4109, 0.6864", "323.967, 379.046, 48.566, 0.6864", "323.184, 379.877, 48.7231, 0.6864", "322.408, 380.716, 48.65, 0.6864", "321.632, 381.557, 48.5736, 0.6864", "321.125, 382.58, 48.4114, 0.6864", "320.623, 383.606, 48.2482, 0.6864", "319.836, 384.431, 48.0547, 0.6864", "319.044, 385.253, 47.8612, 0.6864", "318.214, 386.037, 47.7288, 0.6864", "317.382, 386.821, 47.5961, 0.6864", "316.613, 387.667, 47.4695, 0.6864", "315.844, 388.512, 47.343, 0.6864", "314.869, 389.11, 47.2842, 0.6864", "313.892, 389.705, 47.2256, 0.6864", "312.859, 390.194, 47.1758, 0.6864", "311.835, 390.695, 47.1276, 0.6864", "311.139, 391.604, 47.1433, 0.6864", "310.438, 392.508, 47.1579, 0.6864", "309.633, 393.32, 47.1467, 0.6864", "308.82, 394.124, 47.1346, 0.6864", "307.902, 394.807, 47.1075, 0.6864", "306.988, 395.493, 47.0893, 0.6864", "306.117, 396.235, 47.1988, 0.6864", "305.258, 396.986, 47.3082, 0.6864", "304.559, 397.891, 47.4186, 0.6864", "303.872, 398.803, 47.5154, 0.6864", "303.301, 399.795, 47.4594, 0.6864", "302.728, 400.784, 47.3956, 0.6864", "302.125, 401.753, 47.2422, 0.6864", "301.546, 402.735, 47.0893, 0.6864", "301.205, 403.825, 46.9406, 0.6864", "300.847, 404.909, 46.7989, 0.6864", "300.322, 405.924, 46.7225, 0.6864", "299.798, 406.941, 46.653, 0.6864", "299.298, 407.97, 46.6449, 0.6864", "298.779, 408.987, 46.6474, 0.6864", "298.097, 409.905, 46.7404, 0.6864", "297.451, 410.842, 46.823, 0.6864", "297.033, 411.908, 46.8395, 0.6864", "296.638, 412.979, 46.8314, 0.6864", "296.373, 414.09, 46.6796, 0.6864", "296.059, 415.182, 46.5307, 0.6864", "295.468, 416.16, 46.3985, 0.6864", "294.921, 417.159, 46.3072, 0.6864", "294.576, 418.249, 46.3974, 0.6864", "294.158, 419.3, 46.5004, 0.6864", "293.477, 420.217, 46.6497, 0.6864", "292.724, 421.062, 46.8188, 0.6864", "291.796, 421.724, 47.0372, 0.6864", "290.916, 422.441, 47.2592, 0.6864", "290.16, 423.294, 47.4911, 0.6864", "289.329, 424.057, 47.71, 0.6864", "288.339, 424.622, 47.901, 0.6864", "287.392, 425.252, 48.076, 0.6864", "286.538, 426.011, 48.2191, 0.6864", "285.701, 426.789, 48.3224, 0.6864", "284.898, 427.603, 48.3476, 0.6864", "284.125, 428.444, 48.3305, 0.6864", "283.409, 429.336, 48.2303, 0.6864", "282.721, 430.248, 48.1729, 0.6864", "282.085, 431.199, 48.1981, 0.6864", "281.441, 432.144, 48.2185, 0.6864", "280.779, 433.076, 48.2292, 0.6864", "280.073, 433.974, 48.2126, 0.6864", "279.293, 434.81, 48.1446, 0.6864", "278.572, 435.692, 48.113, 0.6864", "277.964, 436.661, 48.1499, 0.6864", "277.396, 437.652, 48.225, 0.6864", "276.9, 438.681, 48.3678, 0.6864", "276.516, 439.747, 48.4893, 0.6864", "276.317, 440.872, 48.575, 0.6864", "275.951, 441.931, 48.6315, 0.6864", "275.313, 442.88, 48.641, 0.6864", "274.633, 443.799, 48.6321, 0.6864", "273.9, 444.676, 48.5976, 0.6864", "273.243, 445.607, 48.55, 0.6864", "272.688, 446.606, 48.4859, 0.6864", "272.147, 447.614, 48.384, 0.6864", "271.628, 448.63, 48.2345, 0.6864", "271.193, 449.682, 48.1102, 0.6864", "270.868, 450.78, 48.0169, 0.6864", "270.477, 451.85, 47.992, 0.6864", "270.003, 452.891, 48.0497, 0.6864", "269.457, 453.892, 48.0774, 0.6864", "268.822, 454.843, 48.0696, 0.6864", "268.306, 455.853, 47.9856, 0.6864", "267.931, 456.932, 47.8125, 0.6864", "267.516, 457.996, 47.7288, 0.6864", "267.056, 459.044, 47.742, 0.6864", "266.444, 459.993, 47.8022, 0.6864", "265.689, 460.851, 47.9066, 0.6864", "265.014, 461.768, 48.0603, 0.6864", "264.416, 462.739, 48.2602, 0.6864", "263.898, 463.754, 48.4212, 0.6864", "263.454, 464.806, 48.5467, 0.6864", "262.994, 465.853, 48.6326, 0.6864", "262.52, 466.894, 48.6833, 0.6864", "261.971, 467.895, 48.7102, 0.6864", "261.358, 468.862, 48.7152, 0.6864", "260.682, 469.78, 48.7172, 0.6864", "259.949, 470.659, 48.7161, 0.6864", "259.365, 471.629, 48.7144, 0.6864", "258.912, 472.679, 48.7122, 0.6864", "258.448, 473.725, 48.7091, 0.6864", "257.975, 474.767, 48.7052, 0.6864", "257.266, 475.621, 48.6979, 0.6864", "256.363, 476.326, 48.6881, 0.6864", "255.629, 477.183, 48.6797, 0.6864", "255.01, 478.145, 48.6724, 0.6864", "254.508, 479.168, 48.6242, 0.6864", "254.064, 480.223, 48.5554, 0.6864", "253.531, 481.23, 48.4378, 0.6864", "252.951, 482.215, 48.2961, 0.6864", "252.274, 483.133, 48.2698, 0.6864", "251.551, 484.018, 48.2964, 0.6864", "250.825, 484.903, 48.3526, 0.6864", "250.099, 485.786, 48.4221, 0.6864", "249.32, 486.622, 48.4448, 0.6864", "248.518, 487.439, 48.447, 0.6864", "247.715, 488.252, 48.3666, 0.6864", "246.912, 489.066, 48.251, 0.6864", "246.48, 490.087, 48.0486, 0.6864", "246.195, 491.191, 47.8125, 0.6864", "246.061, 492.32, 47.6062, 0.6864", "245.975, 493.459, 47.4093, 0.6864", "245.595, 494.523, 47.234, 0.6864", "245.127, 495.564, 47.0652, 0.6864", "244.604, 496.579, 46.9319, 0.6864", "244.068, 497.589, 46.8087, 0.6864", "243.754, 498.681, 46.7687, 0.6864", "243.5, 499.798, 46.7513, 0.6864", "243.426, 500.935, 46.8348, 0.6864", "243.395, 502.078, 46.9431, 0.6864", "243.194, 503.2, 46.9512, 0.6864", "242.95, 504.318, 46.9347, 0.6864", "242.652, 505.42, 46.8026, 0.6864", "242.34, 506.519, 46.6432, 0.6864", "242.013, 507.613, 46.4906, 0.6864", "241.681, 508.707, 46.3397, 0.6864", "241.259, 509.767, 46.2168, 0.6864", "240.815, 510.821, 46.1006, 0.6864", "240.386, 511.88, 45.9757, 0.6864", "239.962, 512.941, 45.8489, 0.6864", "239.39, 513.928, 45.7708, 0.6864", "238.785, 514.899, 45.7038, 0.6864", "238.186, 515.873, 45.7523, 0.6864", "237.589, 516.849, 45.8276, 0.6864", "237.314, 517.946, 45.8926, 0.6864", "237.111, 519.072, 45.955, 0.6864", "237.092, 520.212, 45.9038, 0.6864", "237.105, 521.356, 45.8307, 0.6864", "236.67, 522.396, 45.8315, 0.6864", "236.156, 523.419, 45.845, 0.6864", "235.43, 524.296, 45.887, 0.6864", "234.67, 525.152, 45.9334, 0.6864", "234.273, 526.214, 45.8928, 0.6864", "233.923, 527.303, 45.8408, 0.6864", "233.457, 528.347, 45.8623, 0.6864", "232.979, 529.386, 45.8928, 0.6864", "232.296, 530.3, 45.913, 0.6864", "231.589, 531.199, 45.932, 0.6864", "230.638, 531.824, 45.8377, 0.6864", "229.665, 532.424, 45.7338, 0.6864", "228.948, 533.309, 45.6554, 0.6864", "228.249, 534.214, 45.5787, 0.6864", "227.839, 535.28, 45.5781, 0.6864", "227.444, 536.353, 45.5812, 0.6864", "226.93, 537.375, 45.6319, 0.6864", "226.41, 538.394, 45.6848, 0.6864", "225.829, 539.378, 45.6089, 0.6864", "225.247, 540.363, 45.5314, 0.6864", "224.652, 541.337, 45.3796, 0.6864", "224.058, 542.313, 45.2276, 0.6864", "223.482, 543.298, 45.0366, 0.6864", "222.905, 544.283, 44.8448, 0.6864", "222.327, 545.267, 44.6121, 0.6864", "221.752, 546.251, 44.3803, 0.6864", "221.207, 547.254, 44.2008, 0.6864", "220.658, 548.254, 44.021, 0.6864", "219.84, 549.049, 43.8189, 0.6864", "219.026, 549.848, 43.6176, 0.6864", "218.426, 550.82, 43.4512, 0.6864", "217.837, 551.797, 43.2964, 0.6864", "217.432, 552.867, 43.3577, 0.6864", "216.978, 553.897, 43.4174, 0.6864", "216.038, 554.548, 43.4647, 0.6864", "215.101, 555.203, 43.4893, 0.6864", "214.192, 555.895, 43.3115, 0.6864", "213.345, 556.631, 43.1155, 0.6864", "212.936, 557.692, 42.7896, 0.6864", "212.506, 558.742, 42.4729, 0.6864", "211.94, 559.731, 42.2125, 0.6864", "211.345, 560.7, 41.9664, 0.6864", "210.601, 561.566, 41.7976, 0.6864", "209.819, 562.387, 41.6237, 0.6864", "208.842, 562.976, 41.4232, 0.6864", "207.887, 563.595, 41.2317, 0.6864", "207.038, 564.36, 41.0824, 0.6864", "206.236, 565.165, 40.9466, 0.6864", "205.625, 566.13, 40.8674, 0.6864", "205.009, 567.094, 40.7935, 0.6864", "204.378, 568.049, 40.742, 0.6864", "203.741, 568.998, 40.6834, 0.6864", "203.083, 569.933, 40.5972, 0.6864", "202.418, 570.863, 40.4916, 0.6864", "201.733, 571.776, 40.3133, 0.6864", "201.079, 572.709, 40.1484, 0.6864", "200.535, 573.715, 40.0324, 0.6864", "200.063, 574.748, 39.9174, 0.6864", "199.807, 575.861, 39.8048, 0.6864", "199.572, 576.98, 39.6858, 0.6864", "199.405, 578.109, 39.548, 0.6864", "199.233, 579.239, 39.4198, 0.6864", "199.053, 580.368, 39.317, 0.6864", "198.516, 581.193, 39.2325, 0.6864", "197.428, 581.548, 39.1754, 0.6864", "196.463, 582.108, 39.076, 0.6864", "195.622, 582.883, 38.9323, 0.6864", "194.922, 583.767, 38.8088, 0.6864", "194.36, 584.764, 38.7052, 0.6864", "193.647, 585.638, 38.6266, 0.6864", "192.79, 586.395, 38.5717, 0.6864", "192.221, 587.338, 38.521, 0.6864", "191.885, 588.431, 38.4734, 0.6864", "191.691, 589.551, 38.4045, 0.6864", "191.592, 590.691, 38.3214, 0.6864", "191.28, 591.774, 38.169, 0.6864", "190.824, 592.821, 37.9708, 0.6864", "190.397, 593.879, 37.8, 0.6864", "189.988, 594.946, 37.6466, 0.6864", "189.676, 596.043, 37.5449, 0.6864", "189.415, 597.157, 37.4707, 0.6864", "189.206, 598.28, 37.3892, 0.6864", "189.023, 599.409, 37.3044, 0.6864", "188.778, 600.523, 37.1459, 0.6864", "188.504, 601.631, 36.9513, 0.6864", "188.038, 602.664, 36.7934, 0.6864", "187.48, 603.661, 36.6534, 0.6864", "186.748, 604.527, 36.5856, 0.6864", "185.936, 605.333, 36.5509, 0.6864", "185.115, 606.13, 36.5761, 0.6864", "184.292, 606.924, 36.6257, 0.6864", "183.938, 607.965, 36.7349, 0.6864", "183.746, 609.092, 36.8645, 0.6864", "183.119, 610.008, 36.86, 0.6864", "182.352, 610.857, 36.8127, 0.6864", "181.298, 611.279, 36.6408, 0.6864", "180.229, 611.68, 36.4624, 0.6864", "179.435, 612.5, 36.2776, 0.6864", "178.641, 613.321, 36.0926, 0.6864", "178.006, 614.267, 35.8607, 0.6864", "177.37, 615.214, 35.6292, 0.6864", "176.893, 616.252, 35.4802, 0.6864", "176.416, 617.29, 35.3315, 0.6864" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "343.66, 442.189, 46.2456, 0.407", "343.36, 442.515, 46.1524, 0.4362", "342.642, 443.397, 45.9743, 0.4916", "342.007, 444.348, 45.8959, 0.5156", "341.448, 445.341, 45.8581, 0.5422", "340.998, 446.393, 45.8755, 0.5724", "340.525, 447.434, 45.878, 0.6412", "340.023, 448.462, 45.8601, 0.762", "339.615, 449.525, 45.7971, 0.8372", "339.309, 450.626, 45.6842, 0.8618", "338.832, 451.647, 45.5524, 0.8708", "338.178, 452.582, 45.4006, 0.8638", "337.654, 453.587, 45.3124, 0.8234", "337.259, 454.661, 45.2889, 0.749", "337.151, 455.766, 45.2861, 0.6796", "337.309, 456.9, 45.3026, 0.6146", "337.311, 458.034, 45.3146, 0.6662", "337.171, 459.168, 45.3222, 0.8242", "336.87, 460.262, 45.2976, 0.79", "336.432, 461.319, 45.2458, 0.5912", "336.096, 462.407, 45.3026, 0.4748", "335.845, 463.521, 45.4516, 0.4282", "335.305, 464.486, 45.5745, 0.4152", "334.533, 465.329, 45.677, 0.429", "333.954, 466.294, 45.6691, 0.4478", "333.516, 467.35, 45.5812, 0.4704", "333.358, 468.463, 45.4756, 0.5176", "333.347, 469.607, 45.3608, 0.578", "333.198, 470.737, 45.2659, 0.5568", "332.977, 471.858, 45.1814, 0.4934", "332.475, 472.866, 45.0685, 0.4506", "331.848, 473.82, 44.9425, 0.417", "331.309, 474.826, 44.8493, 0.4382", "330.813, 475.856, 44.7703, 0.4838", "330.257, 476.853, 44.6998, 0.5418", "329.672, 477.837, 44.6328, 0.6054", "329.06, 478.803, 44.5228, 0.6076", "328.435, 479.76, 44.3937, 0.583", "327.971, 480.798, 44.2758, 0.5446", "327.578, 481.871, 44.1624, 0.5002", "327.448, 482.995, 44.0516, 0.5086", "327.418, 484.137, 43.9412, 0.5372", "327.36, 485.278, 43.8161, 0.51", "327.29, 486.418, 43.685, 0.4618", "326.914, 487.482, 43.6352, 0.4514", "326.427, 488.517, 43.6148, 0.4548", "325.835, 489.492, 43.5445, 0.501", "325.208, 490.449, 43.458, 0.5612", "324.699, 491.47, 43.3902, 0.564", "324.228, 492.513, 43.3289, 0.5476", "323.835, 493.586, 43.3138, 0.5478", "323.464, 494.668, 43.3129, 0.5532", "322.806, 495.585, 43.3793, 0.501", "322.061, 496.454, 43.4658, 0.4314", "321.323, 497.324, 43.6153, 0.4186", "320.587, 498.197, 43.7819, 0.4212", "319.917, 499.124, 43.8866, 0.4544", "319.266, 500.063, 43.9751, 0.4956", "318.72, 501.066, 43.9751, 0.5328", "318.198, 502.084, 43.953, 0.569", "317.496, 502.979, 43.8365, 0.609", "316.75, 503.845, 43.6976, 0.65", "315.966, 504.672, 43.4591, 0.6", "315.174, 505.491, 43.1978, 0.5296", "315.38, 506.53, 43.0088, 0.4724", "315.758, 507.608, 42.8322, 0.4176", "315.987, 508.727, 42.9184, 0.3958", "316.206, 509.849, 43.0223, 0.3764", "316.242, 510.992, 43.0186, 0.3516", "316.274, 512.136, 43.0128, 0.3268" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "343.66, 442.189, 46.2456, 0.407", "344.05, 442.702, 45.6319, 0.3994", "344.783, 443.54, 45.3057, 0.4444", "345.567, 444.372, 45.3992, 0.5246", "346.451, 445.083, 45.6232, 0.566", "347.384, 445.736, 45.9113, 0.5886", "348.152, 446.56, 46.1087, 0.5498", "348.842, 447.472, 46.2622, 0.4812", "349.474, 448.422, 46.1692, 0.4852", "350.079, 449.388, 45.9659, 0.5218", "350.431, 450.458, 45.7582, 0.631", "350.672, 451.573, 45.5484, 0.7724", "350.643, 452.704, 45.4448, 0.7874", "350.511, 453.84, 45.3818, 0.754", "350.54, 454.979, 45.376, 0.662", "350.628, 456.12, 45.3911, 0.5486", "350.996, 457.19, 45.4149, 0.4706", "351.453, 458.24, 45.4412, 0.4038", "351.926, 459.28, 45.4798, 0.4096", "352.408, 460.319, 45.5218, 0.4382", "352.536, 461.439, 45.5974, 0.465", "352.572, 462.583, 45.6817, 0.4914", "353.083, 463.573, 45.8349, 0.477", "353.712, 464.526, 46.0048, 0.4526", "354.465, 465.385, 46.0656, 0.4732", "355.236, 466.23, 46.1096, 0.5008", "355.666, 467.283, 46.0468, 0.4342", "356.064, 468.355, 45.9743, 0.3588", "356.707, 469.297, 46.0536, 0.3648", "357.371, 470.229, 46.1457, 0.3778", "357.645, 471.331, 46.2557, 0.4052", "357.889, 472.448, 46.3669, 0.4334", "357.922, 473.59, 46.4663, 0.4416", "357.938, 474.733, 46.5648, 0.4482", "357.408, 475.737, 46.5066, 0.4502", "356.847, 476.734, 46.4397, 0.4522", "356.759, 477.867, 46.2126, 0.443", "356.688, 479.005, 45.9802, 0.4336" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "357.348, 405.09, 40.4925, 0.4532", "357.32, 405.491, 40.3007, 0.444", "357.192, 406.591, 39.797, 0.414", "356.445, 407.456, 39.6752, 0.3406", "355.608, 408.186, 39.5637, 0.2916", "354.521, 408.543, 39.4797, 0.3092", "353.43, 408.878, 39.366, 0.3322", "352.326, 409.174, 39.2008, 0.3648", "351.51, 409.829, 39.02, 0.3672", "350.982, 410.839, 38.8231, 0.3396", "350.84, 411.938, 38.5482, 0.3378", "350.868, 413.074, 38.239, 0.3474", "350.772, 414.192, 37.7415, 0.4378", "350.626, 415.302, 37.1652, 0.562", "350.199, 416.347, 36.9312, 0.5962", "349.703, 417.376, 36.7833, 0.6078", "349.261, 418.429, 36.8214, 0.6732", "348.831, 419.49, 36.8973, 0.7494", "348.247, 420.469, 36.79, 0.7228", "347.636, 421.436, 36.6506, 0.6778", "346.904, 422.306, 36.3958, 0.5674", "346.156, 423.164, 36.1264, 0.4488", "345.632, 424.178, 36.0948, 0.4748", "345.122, 425.202, 36.087, 0.5088", "344.551, 426.191, 36.2516, 0.4346", "343.972, 427.174, 36.3776, 0.3648", "343.274, 428.062, 35.9383, 0.3574", "342.753, 429.007, 35.4752, 0.3526", "342.783, 430.129, 34.9367, 0.3556", "342.65, 431.217, 34.459, 0.382", "342.129, 432.226, 34.1244, 0.4632", "341.613, 433.241, 33.8467, 0.5204", "341.11, 434.266, 33.6997, 0.5224", "340.52, 435.235, 33.6955, 0.5042", "339.798, 436.119, 33.9018, 0.4564", "339.126, 437.04, 33.9864, 0.434", "338.518, 438.008, 33.9147, 0.4442", "337.951, 439.0, 33.8265, 0.4584", "337.41, 440.008, 33.7268, 0.4752", "336.841, 440.999, 33.7117, 0.518", "336.257, 441.982, 33.7408, 0.5744", "335.762, 442.981, 34.2611, 0.4434", "335.306, 443.986, 35.0, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "357.348, 405.09, 40.4925, 0.4532", "357.603, 405.043, 39.788, 0.472", "358.382, 404.725, 37.891, 0.5398", "359.412, 404.896, 37.254, 0.5632", "360.509, 405.173, 36.9729, 0.5766", "361.624, 404.918, 36.9583, 0.6332", "362.404, 404.263, 36.8836, 0.658", "362.847, 403.211, 36.748, 0.6512", "363.647, 402.552, 36.6108, 0.6362", "364.74, 402.219, 36.4717, 0.6144", "365.866, 402.082, 36.372, 0.594", "367.009, 402.044, 36.2922, 0.5746", "368.0, 402.484, 35.891, 0.5446", "368.929, 403.115, 35.3604, 0.5106", "369.892, 402.8, 34.8362, 0.478", "370.865, 402.236, 34.314, 0.4458", "371.352, 401.239, 33.8789, 0.4016", "371.874, 400.337, 33.4816, 0.3636", "373.012, 400.433, 33.2889, 0.3778", "374.13, 400.43, 33.0576, 0.3818", "375.163, 399.97, 32.6528, 0.3396", "374.921, 398.873, 32.2862, 0.2842", "374.66, 397.769, 31.92, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "383.392, 309.02, 54.6837, 0.6108", "384.681, 308.318, 54.278, 0.414", "385.6, 307.695, 53.9048, 0.374", "386.34, 306.825, 53.7127, 0.3382", "386.904, 305.88, 53.9193, 0.3318", "387.211, 304.827, 54.7028, 0.3678", "387.251, 303.741, 55.3459, 0.4188", "387.078, 302.632, 55.8774, 0.4818", "387.082, 301.499, 56.0045, 0.4886", "387.159, 300.358, 55.9622, 0.472", "387.339, 299.23, 55.9306, 0.4594", "387.556, 298.107, 55.9031, 0.4484", "387.785, 296.986, 55.9048, 0.419", "388.017, 295.866, 55.9185, 0.3824", "388.034, 294.731, 55.839, 0.399", "387.97, 293.589, 55.7242, 0.4358", "387.988, 292.448, 55.7603, 0.4168", "388.036, 291.305, 55.851, 0.3776", "388.332, 290.22, 56.1803, 0.4074", "388.712, 289.154, 56.59, 0.4604", "389.056, 288.068, 56.8459, 0.5644", "389.391, 286.978, 57.0615, 0.6818", "389.923, 285.968, 57.0408, 0.599", "390.456, 284.958, 57.0094, 0.5042", "390.671, 283.834, 57.0766, 0.4322", "391.02, 282.774, 57.3168, 0.371", "391.63, 281.836, 57.8987, 0.3306", "392.336, 280.953, 58.0927, 0.3012", "393.104, 280.107, 58.0546, 0.2802", "393.865, 279.302, 58.753, 0.2938", "394.651, 278.538, 59.5118, 0.3214", "395.522, 277.904, 60.4523, 0.392", "396.473, 277.423, 61.29, 0.4252", "397.568, 277.225, 61.9419, 0.3908", "398.447, 276.673, 62.4604, 0.351", "399.094, 275.743, 62.8376, 0.3054", "399.802, 274.882, 63.4071, 0.2958", "400.562, 274.084, 64.1519, 0.319", "401.178, 273.162, 64.7413, 0.3348", "401.714, 272.172, 65.2476, 0.3468", "401.94, 271.083, 65.5483, 0.35", "402.011, 269.944, 65.7457, 0.349", "402.289, 268.847, 65.9509, 0.3264", "402.659, 267.768, 66.1595, 0.2936", "403.039, 266.7, 66.5134, 0.302", "403.422, 265.634, 66.9194, 0.3248", "403.833, 264.579, 67.3058, 0.387", "404.255, 263.526, 67.6858, 0.4626", "404.645, 262.474, 68.2242, 0.4864", "405.027, 261.421, 68.7943, 0.4998", "405.676, 260.504, 69.2457, 0.4528", "406.359, 259.603, 69.6822, 0.3984", "406.784, 258.554, 70.0269, 0.353", "407.184, 257.491, 70.3626, 0.3086", "407.279, 256.367, 70.7616, 0.3372", "407.342, 255.237, 71.167, 0.373", "407.695, 254.153, 71.37, 0.3358", "408.018, 253.062, 71.5386, 0.309", "408.152, 251.926, 71.5758, 0.3424", "408.258, 250.789, 71.6128, 0.3636", "408.244, 249.645, 71.6484, 0.3286", "408.272, 248.504, 71.6621, 0.301", "408.447, 247.374, 71.5968, 0.2992", "408.561, 246.241, 71.5221, 0.3048", "408.477, 245.101, 71.4162, 0.3342", "408.417, 243.96, 71.3087, 0.363", "408.432, 242.817, 71.1973, 0.3902", "408.453, 241.675, 71.0654, 0.3956", "408.493, 240.534, 70.8722, 0.3356", "408.529, 239.393, 70.693, 0.2888", "408.549, 238.251, 70.5552, 0.2806", "408.567, 237.109, 70.429, 0.2746", "408.583, 235.965, 70.3357, 0.2746", "408.586, 234.822, 70.2444, 0.2746", "408.557, 233.679, 70.1579, 0.2746", "408.533, 232.535, 70.0952, 0.2746", "408.527, 231.391, 70.1, 0.2746", "408.522, 230.247, 70.1271, 0.2746", "408.522, 229.104, 70.2181, 0.2746", "408.522, 227.961, 70.3161, 0.2746", "408.522, 226.819, 70.4348, 0.2746", "408.522, 225.675, 70.5452, 0.2746", "408.522, 224.532, 70.632, 0.2746", "408.522, 223.388, 70.7207, 0.2746", "408.522, 222.245, 70.8151, 0.2746", "408.522, 221.102, 70.9246, 0.2746", "408.522, 219.959, 71.0774, 0.2748", "408.449, 218.831, 71.3238, 0.2748", "408.171, 217.741, 71.8326, 0.2752", "407.845, 216.676, 72.4374, 0.276", "407.447, 215.647, 73.1847, 0.2778", "406.93, 214.677, 73.8506, 0.2814", "406.25, 213.785, 74.4058, 0.2874", "405.701, 212.821, 74.9473, 0.305", "405.304, 211.768, 75.4726, 0.3368", "404.85, 210.736, 75.9172, 0.391", "404.339, 209.725, 76.2801, 0.468", "403.708, 208.807, 76.8295, 0.4386", "402.996, 207.956, 77.5118, 0.3336", "402.362, 207.023, 77.9134, 0.3156", "401.757, 206.061, 78.2222, 0.3266", "401.219, 205.059, 78.517, 0.382", "400.701, 204.046, 78.8085, 0.4486", "400.747, 202.926, 79.0012, 0.4254", "400.875, 201.792, 79.1798, 0.3894", "400.818, 200.653, 79.3503, 0.3112", "400.743, 199.514, 79.52, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "383.392, 309.02, 54.6837, 0.6108", "383.789, 308.668, 54.6734, 0.5934", "384.661, 307.929, 54.719, 0.6166", "385.544, 307.203, 54.8156, 0.6856", "386.385, 306.43, 54.7702, 0.667", "387.201, 305.63, 54.6454, 0.5996", "388.174, 305.064, 54.5924, 0.5316", "389.227, 304.614, 54.5754, 0.4636", "390.327, 304.334, 54.7159, 0.4988", "391.449, 304.134, 54.9293, 0.582", "392.553, 303.849, 55.0925, 0.6054", "393.65, 303.526, 55.2339, 0.6036", "394.722, 303.13, 55.1681, 0.5724", "395.792, 302.728, 55.0805, 0.538", "396.887, 302.982, 54.8918, 0.5056", "397.984, 303.295, 54.6935, 0.4734", "399.041, 302.869, 54.9105, 0.515", "400.102, 302.464, 55.2017, 0.5342", "401.176, 302.16, 55.8155, 0.455", "402.243, 301.822, 56.345, 0.3964", "403.286, 301.362, 56.5802, 0.4106", "404.356, 301.007, 56.744, 0.4182", "405.498, 300.929, 56.7193, 0.4094", "406.639, 300.87, 56.7571, 0.3958", "407.781, 300.848, 56.9209, 0.3728", "408.919, 300.863, 57.1628, 0.368", "410.052, 300.931, 57.5182, 0.3898", "411.142, 301.189, 57.9429, 0.4728", "412.207, 301.561, 58.4094, 0.5926", "413.207, 301.251, 59.1259, 0.5304", "414.191, 300.762, 59.908, 0.4204", "415.298, 300.576, 60.3243, 0.5264", "416.424, 300.434, 60.6864, 0.6642", "417.406, 299.865, 60.7558, 0.6738", "418.373, 299.255, 60.7964, 0.671", "419.386, 298.726, 60.8944, 0.7012", "420.404, 298.204, 60.9972, 0.7344", "421.255, 297.463, 61.409, 0.6468", "422.105, 296.764, 61.9223, 0.5472", "423.069, 296.741, 63.4281, 0.3998", "424.003, 296.591, 64.8628, 0.2804", "424.803, 295.921, 66.0044, 0.2778", "425.617, 295.237, 66.9908, 0.2762", "426.478, 294.508, 67.4691, 0.2782", "427.286, 293.728, 67.8272, 0.2814", "427.94, 292.789, 67.8213, 0.2886", "428.655, 291.91, 67.7505, 0.3044", "429.548, 291.201, 67.4957, 0.3442", "430.447, 290.499, 67.2946, 0.3906", "431.355, 289.806, 67.1796, 0.4468", "432.118, 288.99, 67.3534, 0.4338", "432.719, 288.038, 67.8513, 0.343", "433.497, 287.246, 68.2965, 0.3766", "434.386, 286.553, 68.6988, 0.4912", "434.983, 285.587, 69.046, 0.4612", "435.578, 284.619, 69.358, 0.4424", "436.168, 283.641, 69.4968, 0.4788", "436.878, 282.786, 69.6374, 0.4956", "437.876, 282.23, 69.783, 0.4648", "438.721, 281.519, 69.7542, 0.4792", "439.304, 280.544, 69.4333, 0.5696", "439.966, 279.622, 69.2177, 0.5552", "440.715, 278.757, 69.1208, 0.4236", "441.388, 277.838, 69.1362, 0.364", "441.995, 276.87, 69.2499, 0.3674", "442.626, 275.919, 69.4467, 0.3616", "443.276, 274.983, 69.7068, 0.3482", "444.021, 274.144, 70.1425, 0.4224", "444.831, 273.367, 70.6975, 0.5558", "445.602, 272.565, 71.3364, 0.5486", "446.349, 271.746, 72.025, 0.458", "447.289, 271.13, 72.1347, 0.3756", "448.291, 270.58, 72.0605, 0.2956", "449.197, 269.888, 71.8519, 0.2828", "450.077, 269.165, 71.6433, 0.2768", "450.832, 268.307, 71.5047, 0.2806", "451.676, 267.553, 71.491, 0.289", "452.634, 266.931, 71.6352, 0.3026", "453.456, 266.164, 71.7276, 0.3148", "454.13, 265.24, 71.7626, 0.3254", "454.513, 264.198, 71.7458, 0.3188", "454.668, 263.065, 71.6887, 0.2992", "455.333, 262.323, 71.787, 0.3142", "456.382, 261.875, 72.0023, 0.3552", "457.041, 260.993, 72.2809, 0.3374", "457.606, 260.006, 72.5746, 0.3052", "457.862, 258.9, 72.6328, 0.2886", "458.067, 257.774, 72.6505, 0.2746", "458.062, 256.634, 72.4478, 0.2746", "458.059, 255.493, 72.2453, 0.2746", "458.207, 254.359, 72.1392, 0.2746", "458.356, 253.225, 72.0359, 0.2746", "458.442, 252.085, 72.032, 0.2746", "458.542, 250.948, 72.0292, 0.2746", "458.992, 249.896, 72.0642, 0.2746", "459.431, 248.842, 72.1014, 0.2746", "459.663, 247.722, 72.184, 0.2746", "459.895, 246.602, 72.2694, 0.2746", "460.149, 245.488, 72.3811, 0.2746", "460.412, 244.376, 72.5071, 0.2746", "460.727, 243.28, 72.7252, 0.2746", "461.016, 242.177, 72.9224, 0.2746", "461.159, 241.043, 73.0108, 0.2746", "461.391, 239.945, 73.0724, 0.2746", "462.079, 239.031, 72.998, 0.2746", "462.61, 238.047, 72.8994, 0.2746", "462.835, 236.926, 72.7538, 0.2746", "463.039, 235.802, 72.63, 0.2746", "463.214, 234.672, 72.5388, 0.2746", "463.408, 233.545, 72.5035, 0.2746", "463.628, 232.423, 72.5472, 0.2746", "463.998, 231.358, 72.5984, 0.2746", "464.578, 230.373, 72.66, 0.2746", "465.166, 229.391, 72.7087, 0.2746", "465.766, 228.417, 72.7398, 0.2746", "466.186, 227.375, 72.7502, 0.2746", "466.387, 226.248, 72.7348, 0.2746", "466.865, 225.249, 72.6989, 0.2746", "467.587, 224.362, 72.6449, 0.2746", "468.056, 223.347, 72.5824, 0.2746", "468.346, 222.24, 72.5138, 0.2746", "468.46, 221.111, 72.4514, 0.2744", "468.466, 219.967, 72.3926, 0.2744", "468.732, 218.876, 72.3156, 0.2742", "469.161, 217.815, 72.2277, 0.2738", "469.788, 216.875, 72.1036, 0.2728", "470.522, 216.0, 71.96, 0.2714", "471.036, 215.006, 71.524, 0.265", "471.482, 213.974, 70.9968, 0.257", "471.759, 212.869, 71.0242, 0.2432", "472.014, 211.754, 71.12, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "324.133, 372.715, 48.5489, 0.5238", "324.02, 372.987, 47.8288, 0.3198", "324.537, 372.185, 46.8563, 0.318", "324.985, 371.223, 46.0916, 0.373", "324.938, 370.085, 45.8312, 0.4866", "324.846, 368.953, 45.5459, 0.5646", "324.673, 367.83, 45.2178, 0.5806", "325.016, 367.135, 44.5096, 0.5452", "326.039, 367.005, 43.3051, 0.4438", "327.126, 366.865, 42.4978, 0.4636", "328.174, 366.675, 41.6654, 0.484", "328.693, 365.778, 40.476, 0.5152", "329.585, 365.213, 39.7877, 0.5792", "330.624, 364.78, 39.2991, 0.6566", "331.481, 364.061, 38.9808, 0.6174", "332.279, 363.247, 38.7178, 0.5404", "332.81, 362.254, 38.456, 0.458", "333.266, 361.211, 38.1942, 0.374", "333.645, 360.188, 37.3974, 0.4506", "334.003, 359.17, 36.4694, 0.5668", "334.65, 358.246, 36.0212, 0.5744", "335.307, 357.327, 35.5928, 0.5778", "336.228, 356.65, 35.6045, 0.5196", "337.125, 355.944, 35.667, 0.47", "337.931, 355.138, 35.9069, 0.4504", "338.754, 354.349, 36.0702, 0.4454", "339.632, 353.615, 36.0046, 0.4844", "340.228, 352.712, 35.854, 0.4888", "340.477, 351.6, 35.597, 0.4502", "340.641, 350.482, 35.2405, 0.479", "340.719, 349.356, 34.7799, 0.5788", "341.374, 348.473, 34.4428, 0.5566", "342.145, 347.638, 34.13, 0.5098", "342.53, 346.579, 33.8618, 0.5888", "342.857, 345.488, 33.6, 0.6864" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "324.133, 372.715, 48.5489, 0.5238", "322.695, 373.269, 48.3739, 0.4528", "321.832, 374.008, 48.0502, 0.4292", "321.096, 374.846, 47.6039, 0.4482", "320.49, 375.788, 47.0324, 0.5108", "319.656, 376.402, 46.1737, 0.6252", "318.673, 376.799, 45.1254, 0.7738", "317.641, 377.26, 44.8392, 0.764", "316.6, 377.732, 44.6849, 0.7268", "315.471, 377.757, 44.5752, 0.717", "314.329, 377.715, 44.4721, 0.7114", "313.294, 377.244, 44.4444, 0.7278", "312.268, 376.737, 44.4237, 0.7462", "311.145, 376.55, 44.4153, 0.7558", "310.011, 376.387, 44.408, 0.7648", "308.968, 376.824, 44.0583, 0.6594", "307.928, 377.27, 43.6638, 0.5592", "306.9, 377.648, 42.866, 0.5492", "305.858, 377.98, 42.1254, 0.5484", "304.72, 377.966, 41.8001, 0.6144", "303.587, 377.99, 41.5744, 0.684", "302.464, 378.189, 41.8093, 0.7694", "301.382, 378.487, 42.0588, 0.8158", "300.425, 379.101, 42.3553, 0.7372", "299.483, 379.743, 42.5664, 0.6564", "298.577, 380.441, 42.5975, 0.5706", "297.621, 381.049, 42.5463, 0.514", "296.566, 381.485, 42.3382, 0.5132", "295.479, 381.733, 42.1887, 0.5386", "294.337, 381.666, 42.1372, 0.6088", "293.199, 381.69, 42.14, 0.6756", "292.068, 381.852, 42.2248, 0.7368", "290.997, 382.206, 42.1705, 0.7124", "289.979, 382.723, 41.9964, 0.614", "288.9, 383.051, 41.8384, 0.621", "287.771, 383.227, 41.6937, 0.7126", "286.635, 383.315, 41.7295, 0.7814", "285.493, 383.341, 41.8939, 0.834", "284.451, 383.701, 42.1008, 0.799", "283.474, 384.29, 42.3371, 0.7044", "282.87, 385.186, 42.488, 0.6406", "282.484, 386.262, 42.5894, 0.595", "281.908, 387.234, 42.7636, 0.5556", "281.224, 388.148, 42.9786, 0.52", "280.52, 389.047, 43.0256, 0.6024", "279.806, 389.942, 43.0055, 0.7318", "278.875, 390.565, 42.8551, 0.6426", "277.858, 391.083, 42.6538, 0.4682", "276.771, 391.31, 42.1392, 0.5142", "275.663, 391.451, 41.5327, 0.6248", "274.559, 391.69, 41.116, 0.6418", "273.455, 391.946, 40.733, 0.6426", "272.431, 392.445, 40.5628, 0.6188", "271.414, 392.964, 40.4118, 0.5928", "270.279, 392.877, 40.3642, 0.5628", "269.145, 392.799, 40.3354, 0.5336", "268.044, 393.106, 40.4757, 0.5166", "266.952, 393.438, 40.6048, 0.4988", "265.922, 393.935, 40.6613, 0.4776", "264.885, 394.417, 40.7098, 0.4508", "263.819, 394.831, 40.7215, 0.397", "262.788, 395.308, 40.7378, 0.37", "261.882, 396.006, 40.7708, 0.4398", "260.981, 396.711, 40.8145, 0.5012", "260.096, 397.436, 40.8954, 0.5336", "259.202, 398.146, 40.9884, 0.5628", "258.267, 398.804, 41.1233, 0.5824", "257.286, 399.378, 41.2899, 0.5782", "256.249, 399.855, 41.4924, 0.547", "255.397, 400.554, 41.6354, 0.5072", "254.741, 401.491, 41.715, 0.4584", "254.149, 402.467, 41.8149, 0.4374", "253.61, 403.475, 41.9328, 0.4412", "252.905, 404.354, 42.0392, 0.457", "252.056, 405.12, 42.1352, 0.4828", "251.048, 405.578, 42.366, 0.5314", "249.946, 405.852, 42.6765, 0.593", "248.826, 405.827, 42.8604, 0.5664", "247.698, 405.644, 42.9783, 0.4932", "246.765, 406.146, 43.036, 0.4576", "245.905, 406.9, 43.0713, 0.436", "244.988, 407.582, 43.1043, 0.3858", "244.053, 408.241, 43.1365, 0.327", "242.987, 408.631, 43.2645, 0.329", "241.895, 408.971, 43.4112, 0.3428", "240.773, 409.18, 43.4356, 0.4178", "239.644, 409.37, 43.4423, 0.5016", "238.58, 409.774, 43.2634, 0.4844", "237.524, 410.205, 43.0606, 0.4542", "236.397, 410.356, 42.8092, 0.4718", "235.266, 410.48, 42.553, 0.494", "234.344, 409.816, 42.4906, 0.561", "233.393, 409.201, 42.4435, 0.6154", "232.297, 408.872, 42.4371, 0.6134", "231.189, 408.615, 42.4589, 0.6034", "230.048, 408.54, 42.5536, 0.5722", "228.908, 408.458, 42.6552, 0.5366", "227.768, 408.369, 42.7736, 0.4898", "226.666, 408.458, 42.7736, 0.4468", "225.653, 408.978, 42.4906, 0.4124", "224.638, 409.492, 42.2097, 0.412", "223.618, 409.997, 41.9336, 0.4814", "222.609, 410.527, 41.7592, 0.5314", "221.62, 411.103, 41.7763, 0.5442", "220.638, 411.689, 41.7441, 0.567", "219.663, 412.286, 41.6514, 0.6022", "218.678, 412.867, 41.5724, 0.6302", "217.685, 413.434, 41.5058, 0.652", "216.739, 414.072, 41.4366, 0.5902", "215.837, 414.776, 41.3655, 0.4526", "214.935, 415.478, 41.3039, 0.3932", "214.031, 416.178, 41.2516, 0.4042", "213.128, 416.88, 41.1715, 0.495", "212.228, 417.585, 41.0668, 0.6572", "211.283, 418.226, 41.0001, 0.8298", "210.301, 418.813, 40.9654, 1.0118", "209.316, 419.394, 40.9346, 1.0518", "208.329, 419.973, 40.9066, 0.972", "207.428, 420.665, 40.8671, 0.8986", "206.598, 421.452, 40.8181, 0.8302", "205.878, 422.329, 40.6496, 0.7472", "205.238, 423.271, 40.3925, 0.6534", "204.451, 424.086, 40.2296, 0.697", "203.59, 424.838, 40.1148, 0.8108", "202.676, 425.519, 40.2234, 0.897", "201.736, 426.168, 40.4393, 0.9696", "200.953, 426.989, 40.5289, 0.7568", "200.216, 427.864, 40.5798, 0.456", "199.374, 428.634, 40.5759, 0.3928", "198.505, 429.378, 40.5583, 0.3896", "197.728, 430.215, 40.4757, 0.3814", "196.972, 431.072, 40.3791, 0.3722", "196.024, 431.698, 40.2788, 0.4104", "195.038, 432.278, 40.1783, 0.4582", "194.043, 432.838, 40.2427, 0.6246", "193.044, 433.396, 40.3357, 0.8112", "191.965, 433.748, 40.5989, 0.8676", "190.873, 434.067, 40.889, 0.903", "189.886, 434.624, 41.1925, 0.8524", "188.913, 435.213, 41.4977, 0.7902", "188.404, 436.213, 41.6184, 0.7442", "187.951, 437.263, 41.7169, 0.7002", "187.443, 438.287, 41.8281, 0.6164", "186.926, 439.304, 41.9364, 0.534", "186.099, 440.095, 41.9373, 0.5074", "185.282, 440.892, 41.8734, 0.478", "184.518, 441.729, 41.4786, 0.4332", "183.755, 442.568, 41.1608, 0.436", "182.991, 443.42, 41.13, 0.616", "182.21, 444.254, 41.0914, 0.762", "181.369, 445.029, 41.0259, 0.7964", "180.527, 445.803, 40.9665, 0.8132", "179.685, 446.578, 40.9251, 0.775", "178.808, 447.306, 40.8724, 0.7216", "177.828, 447.894, 40.7848, 0.6222", "176.893, 448.541, 40.7442, 0.5312", "176.095, 449.359, 40.8444, 0.4658", "175.256, 450.127, 40.9542, 0.4362", "174.301, 450.755, 41.0908, 0.509", "173.363, 451.406, 41.2051, 0.591", "172.467, 452.118, 41.2622, 0.6972", "171.557, 452.809, 41.2796, 0.7206", "170.63, 453.48, 41.2549, 0.6556", "169.667, 454.087, 41.0586, 0.6594", "168.68, 454.654, 40.7529, 0.7074", "167.686, 455.204, 40.4482, 0.7208", "166.686, 455.748, 40.1439, 0.7178", "165.666, 456.236, 39.7513, 0.7528", "164.637, 456.703, 39.3221, 0.8034", "163.669, 457.254, 38.71, 0.7068", "162.726, 457.839, 38.0257, 0.552", "161.797, 458.15, 36.6845, 0.4516", "160.874, 458.372, 35.1243, 0.3692", "160.154, 459.163, 34.1832, 0.3488", "159.366, 459.893, 33.4354, 0.3536", "158.318, 460.343, 33.2265, 0.4318", "157.266, 460.781, 33.1514, 0.473", "156.203, 461.19, 33.4376, 0.4144", "155.187, 461.668, 33.882, 0.3574", "154.235, 462.242, 34.5414, 0.303", "153.216, 462.701, 35.0487, 0.292", "152.149, 463.08, 35.4483, 0.3116", "151.078, 463.193, 36.2936, 0.39", "150.006, 463.23, 37.2688, 0.4856", "148.88, 463.26, 37.6905, 0.5518", "147.744, 463.291, 38.0097, 0.6128", "146.669, 463.653, 38.0618, 0.6442", "145.604, 464.07, 38.0682, 0.6708", "144.609, 464.629, 37.9333, 0.641", "143.621, 465.203, 37.7826, 0.6048", "142.53, 465.51, 37.4956, 0.5112", "141.522, 465.907, 37.2078, 0.4286", "141.019, 466.929, 36.9956, 0.438", "140.498, 467.943, 36.7772, 0.4504", "139.889, 468.907, 36.5271, 0.4772", "139.189, 469.776, 36.2869, 0.4878", "138.204, 470.351, 36.0777, 0.4486", "137.242, 470.961, 35.8977, 0.4232", "136.341, 471.664, 35.7969, 0.4356", "135.445, 472.375, 35.7202, 0.4224", "134.56, 473.099, 35.6891, 0.3608", "133.649, 473.788, 35.5524, 0.362", "132.722, 474.455, 35.352, 0.4012", "131.863, 475.203, 35.2702, 0.44", "131.042, 476.0, 35.2587, 0.4788", "130.458, 476.961, 35.2864, 0.5054", "130.001, 478.009, 35.3349, 0.5256", "129.302, 478.89, 35.3492, 0.5122", "128.479, 479.686, 35.3455, 0.4818", "127.788, 480.591, 35.3405, 0.5034", "127.145, 481.538, 35.3346, 0.5442", "126.522, 482.496, 35.2649, 0.4624", "125.903, 483.458, 35.1736, 0.3394", "125.808, 484.555, 35.1047, 0.3202", "125.882, 485.697, 35.0428, 0.3346", "125.746, 486.828, 34.9574, 0.3722", "125.57, 487.958, 34.8678, 0.414", "124.965, 488.914, 34.8127, 0.3686", "124.302, 489.846, 34.7626, 0.3116", "123.617, 490.762, 34.7379, 0.3202", "122.933, 491.679, 34.7161, 0.3382", "122.36, 492.668, 34.6917, 0.399", "121.756, 493.629, 34.6494, 0.4562", "120.827, 494.292, 34.4232, 0.4788", "119.839, 494.2, 34.1012, 0.4376", "118.818, 493.707, 33.728, 0.3624", "117.714, 493.587, 33.4928, 0.294", "116.574, 493.636, 33.32, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "176.416, 617.29, 35.3315, 0.6864", "176.605, 618.641, 36.4277, 0.4858", "176.33, 619.73, 36.519, 0.5104", "175.991, 620.823, 36.4879, 0.5638", "175.245, 621.683, 36.4493, 0.6116", "174.477, 622.531, 36.4101, 0.6592", "173.627, 623.296, 36.3611, 0.5466", "172.773, 624.055, 36.3118, 0.4248", "171.698, 624.441, 36.3098, 0.3828", "170.617, 624.816, 36.309, 0.3432", "169.905, 625.705, 36.3129, 0.4352", "169.202, 626.608, 36.3171, 0.5306", "168.502, 627.513, 36.2984, 0.5612", "167.802, 628.417, 36.2796, 0.5916", "166.841, 629.038, 36.3398, 0.5246", "165.88, 629.658, 36.4, 0.4576" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "176.416, 617.29, 35.3315, 0.6864", "176.107, 617.697, 35.268, 0.6194", "175.372, 618.571, 35.1739, 0.5814", "174.608, 619.422, 35.11, 0.6154", "173.731, 620.143, 35.0274, 0.6286", "172.781, 620.779, 34.9328, 0.6282", "171.808, 621.376, 34.7805, 0.6572", "170.821, 621.951, 34.5943, 0.7036", "169.854, 622.547, 34.284, 0.696", "168.898, 623.155, 33.9035, 0.658", "167.977, 623.819, 33.5709, 0.5724", "167.077, 624.512, 33.2648, 0.46", "166.752, 625.513, 33.2287, 0.4238", "166.692, 626.655, 33.3164, 0.4228", "166.16, 627.625, 33.4376, 0.3984", "165.474, 628.539, 33.57, 0.3664", "164.425, 628.955, 33.7086, 0.3474", "163.346, 629.333, 33.8478, 0.3292", "162.588, 630.178, 33.9584, 0.3856", "161.848, 631.05, 34.0676, 0.4464", "161.131, 631.941, 34.1477, 0.4662", "160.415, 632.832, 34.2269, 0.4848", "159.653, 633.685, 34.2737, 0.4328", "158.889, 634.536, 34.3199, 0.3792", "157.952, 635.19, 34.4322, 0.3736", "157.013, 635.841, 34.5456, 0.3688", "156.163, 636.606, 34.4683, 0.4534", "155.315, 637.374, 34.389, 0.539", "154.368, 638.016, 34.3328, 0.589", "153.421, 638.656, 34.2765, 0.6388", "152.667, 639.512, 34.4719, 0.6394", "151.913, 640.369, 34.6685, 0.6398" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "316.274, 512.136, 43.0128, 0.3268", "316.572, 513.158, 43.4899, 0.4418", "316.848, 514.249, 44.0062, 0.5902", "316.685, 515.369, 44.2742, 0.75", "316.491, 516.492, 44.5239, 0.9104", "315.874, 517.443, 44.805, 0.9174", "315.235, 518.384, 45.0876, 0.916", "314.431, 519.17, 45.5801, 0.7894", "313.62, 519.951, 46.079, 0.6588", "312.767, 520.7, 46.447, 0.6496", "311.914, 521.447, 46.8107, 0.644", "311.962, 522.581, 46.9888, 0.7192", "312.004, 523.721, 47.1738, 0.7876", "311.925, 524.858, 47.4258, 0.8018", "311.586, 525.821, 47.6918, 0.8544", "310.572, 526.338, 47.9931, 1.005", "309.568, 526.872, 48.2751, 1.0768", "308.58, 527.442, 48.5122, 0.9658", "307.754, 528.161, 48.7197, 0.8708", "307.274, 529.197, 48.8639, 0.8094", "306.868, 530.259, 49.0104, 0.7556", "306.611, 531.372, 49.1607, 0.7174", "306.458, 532.495, 49.315, 0.7078", "306.507, 533.636, 49.4768, 0.7546", "306.428, 534.76, 49.6762, 0.7836", "306.107, 535.853, 49.9472, 0.778", "305.669, 536.891, 50.2454, 0.7692", "305.062, 537.851, 50.5828, 0.7554", "304.628, 538.88, 50.8908, 0.7134", "304.408, 539.998, 51.1613, 0.635", "304.184, 541.117, 51.3433, 0.603", "303.951, 542.235, 51.4128, 0.6298", "303.997, 543.337, 51.4814, 0.6918", "304.379, 544.415, 51.5488, 0.7956", "304.771, 545.489, 51.5578, 0.8064", "305.172, 546.56, 51.5057, 0.7186", "305.482, 547.657, 51.4724, 0.6132", "305.702, 548.78, 51.4581, 0.4904", "306.018, 549.875, 51.5088, 0.401", "306.425, 550.942, 51.6225, 0.3438", "306.854, 551.994, 51.9134, 0.3362", "307.302, 553.029, 52.3734, 0.3758", "307.219, 554.079, 52.8956, 0.405", "306.846, 555.136, 53.4517, 0.4288", "306.938, 556.231, 53.7748, 0.4914", "307.201, 557.341, 54.0114, 0.5684", "307.357, 558.471, 54.0341, 0.6392", "307.478, 559.608, 53.9851, 0.708", "307.246, 560.714, 54.0198, 0.6966", "306.928, 561.814, 54.0747, 0.6658", "306.641, 562.91, 54.4351, 0.6068", "306.362, 564.005, 54.8694, 0.5412", "306.313, 565.127, 55.3294, 0.5826", "306.315, 566.255, 55.795, 0.6478", "306.22, 567.39, 56.0132, 0.7188", "306.11, 568.526, 56.1926, 0.791", "305.702, 569.588, 56.145, 0.8124", "305.253, 570.64, 56.0655, 0.8266", "304.647, 571.607, 55.9177, 0.8228", "304.023, 572.563, 55.7609, 0.8166", "303.456, 573.556, 55.6942, 0.7364", "302.898, 574.553, 55.6394, 0.6466", "302.668, 575.669, 55.6716, 0.6382", "302.477, 576.796, 55.7136, 0.639", "302.227, 577.91, 55.8597, 0.6148", "301.97, 579.024, 56.0171, 0.588", "302.53, 579.992, 56.2142, 0.5562", "303.15, 580.951, 56.413, 0.5244", "303.698, 581.953, 56.5396, 0.5088", "304.192, 582.968, 56.663, 0.4936", "304.108, 584.108, 56.7526, 0.48", "304.128, 585.209, 56.8504, 0.4658", "304.951, 586.001, 57.0108, 0.4478", "305.874, 586.634, 57.2653, 0.4442", "306.921, 587.071, 57.6355, 0.4582", "306.799, 588.016, 58.123, 0.4316", "306.418, 589.073, 58.6368, 0.3956", "305.956, 590.103, 59.0876, 0.3464", "305.481, 591.128, 59.5283, 0.295", "305.398, 592.242, 59.9953, 0.288", "305.374, 593.37, 60.4663, 0.2876", "306.257, 593.988, 61.0792, 0.303", "307.21, 594.568, 61.7033, 0.3194", "307.993, 595.372, 62.2367, 0.3424", "308.78, 596.17, 62.7651, 0.365", "309.814, 596.641, 63.1128, 0.3664", "310.852, 597.043, 63.4424, 0.3708", "311.952, 596.73, 63.5765, 0.409", "313.052, 596.463, 63.714, 0.4444", "314.177, 596.661, 63.8837, 0.4532", "315.259, 596.951, 64.0612, 0.4572", "316.12, 597.696, 64.2807, 0.4366", "317.021, 598.376, 64.4994, 0.4096", "318.106, 598.726, 64.715, 0.3516", "319.134, 599.165, 64.9491, 0.3116", "319.904, 600.002, 65.2652, 0.3504", "320.661, 600.849, 65.5752, 0.3772", "321.37, 601.739, 65.8616, 0.3598", "322.027, 602.66, 66.1654, 0.3436", "322.507, 603.689, 66.5283, 0.3326", "322.819, 604.748, 66.8914, 0.3174", "322.737, 605.88, 67.2554, 0.2926", "322.823, 606.988, 67.5763, 0.2772", "323.232, 608.052, 67.8129, 0.2796", "323.46, 609.142, 68.028, 0.284", "323.363, 610.279, 68.2032, 0.292", "323.229, 611.411, 68.4354, 0.3078", "323.037, 612.531, 68.7582, 0.336", "322.835, 613.648, 69.081, 0.3828", "322.615, 614.764, 69.4042, 0.4582", "322.188, 615.782, 69.7166, 0.4706", "321.466, 616.661, 70.0143, 0.3912", "320.642, 617.425, 70.3136, 0.331", "319.686, 618.041, 70.6152, 0.2954", "319.026, 618.873, 70.9971, 0.2774", "318.711, 619.955, 71.4731, 0.28", "319.189, 620.754, 71.9107, 0.286", "320.125, 621.389, 72.326, 0.2944", "320.715, 622.318, 72.7493, 0.3188", "321.188, 623.345, 73.1755, 0.3486", "320.99, 624.457, 73.4723, 0.3948", "320.768, 625.572, 73.7646, 0.4416", "319.784, 626.12, 74.2417, 0.4012", "318.931, 626.786, 74.7046, 0.392", "318.51, 627.838, 75.1201, 0.4846", "318.633, 628.809, 75.4835, 0.5002", "319.345, 629.695, 75.7904, 0.4322", "319.969, 630.622, 76.3143, 0.4396", "320.508, 631.585, 77.0395, 0.5174", "320.859, 632.635, 77.5858, 0.5818", "321.07, 633.746, 78.0021, 0.6366", "321.116, 634.871, 78.3605, 0.6892", "321.043, 636.005, 78.6775, 0.7402", "320.859, 637.125, 78.9673, 0.6814", "320.599, 638.233, 79.2386, 0.5458", "320.717, 639.321, 79.5634, 0.482", "321.077, 640.396, 79.9229, 0.464", "321.576, 641.414, 80.2239, 0.4184", "322.137, 642.405, 80.498, 0.3598", "322.186, 643.484, 80.8662, 0.3244", "322.013, 644.603, 81.2759, 0.2992", "321.791, 645.708, 81.7452, 0.3072", "321.551, 646.808, 82.2371, 0.3276", "321.487, 647.931, 82.6767, 0.3584", "321.486, 649.062, 83.097, 0.393", "321.57, 650.193, 83.4182, 0.4184", "321.685, 651.326, 83.7035, 0.4408", "321.606, 652.456, 83.9787, 0.4082", "321.458, 653.584, 84.25, 0.3562", "321.923, 654.56, 84.691, 0.3462", "322.553, 655.494, 85.1777, 0.3476", "322.725, 656.56, 85.9034, 0.3468", "322.79, 657.656, 86.6844, 0.3458", "322.397, 658.668, 87.386, 0.362", "321.904, 659.662, 88.0704, 0.3822", "321.191, 660.531, 88.5436, 0.3624", "320.455, 661.388, 88.9974, 0.3388", "320.399, 662.519, 89.2623, 0.33", "320.375, 663.654, 89.5188, 0.3228", "320.974, 664.626, 89.6535, 0.3772", "321.578, 665.596, 89.7907, 0.4284", "322.29, 666.487, 89.9968, 0.3968", "322.98, 667.391, 90.1975, 0.3664", "323.36, 668.47, 90.3221, 0.3534", "323.714, 669.555, 90.4548, 0.337", "323.942, 670.673, 90.6312, 0.302", "324.072, 671.796, 90.7707, 0.2776", "323.921, 672.929, 90.8048, 0.2826", "323.781, 674.064, 90.7668, 0.2912", "323.663, 675.2, 90.592, 0.3068", "323.36, 676.27, 90.3297, 0.3338", "322.775, 677.24, 89.9329, 0.379", "322.386, 678.291, 89.7364, 0.4006", "322.174, 679.416, 89.7204, 0.4008", "321.925, 680.531, 89.71, 0.3824", "321.647, 681.641, 89.7044, 0.35", "321.383, 682.754, 89.7056, 0.361", "321.129, 683.87, 89.7117, 0.4032", "320.755, 684.946, 89.7445, 0.3896", "320.305, 685.997, 89.794, 0.341", "320.235, 687.099, 89.8274, 0.3016", "320.4, 688.232, 89.8509, 0.2678", "320.954, 689.188, 89.8671, 0.2454", "321.693, 690.061, 89.88, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "316.274, 512.136, 43.0128, 0.3268", "315.393, 512.836, 42.9184, 0.4402", "314.448, 513.481, 42.8725, 0.5654", "313.559, 514.196, 42.8428, 0.7118", "312.712, 514.966, 42.8263, 0.8754", "311.845, 515.703, 42.6163, 0.9442", "310.961, 516.413, 42.2512, 0.9374", "310.055, 517.093, 41.8513, 0.9242", "309.134, 517.747, 41.4246, 0.906", "308.18, 518.351, 40.9937, 0.9142", "307.202, 518.917, 40.56, 0.9424", "306.279, 519.574, 40.2424, 0.9724", "305.397, 520.295, 40.0095, 1.0038", "304.587, 521.095, 39.8577, 0.9498", "303.83, 521.952, 39.7645, 0.8342", "303.158, 522.873, 39.7068, 0.7654", "302.54, 523.836, 39.6738, 0.7292", "301.762, 524.654, 39.6315, 0.7228", "300.872, 525.373, 39.5825, 0.7372", "299.888, 525.939, 39.5077, 0.7342", "298.845, 526.408, 39.4164, 0.7204", "297.791, 526.849, 39.2557, 0.7436", "296.732, 527.27, 39.0527, 0.7896", "295.916, 528.006, 38.8016, 0.8654", "295.238, 528.92, 38.5232, 0.9578", "294.629, 529.885, 38.3508, 0.8996", "294.056, 530.873, 38.2304, 0.7672", "293.563, 531.904, 38.1917, 0.8178", "293.103, 532.952, 38.187, 0.944", "292.729, 534.031, 38.1466, 0.9352", "292.388, 535.122, 38.0923, 0.872", "291.849, 536.121, 37.8843, 0.7692", "291.255, 537.093, 37.6328, 0.6552", "291.024, 538.203, 37.4606, 0.717", "290.839, 539.33, 37.2977, 0.7994", "290.339, 540.354, 37.2112, 0.6608", "289.809, 541.366, 37.133, 0.4984", "289.203, 542.337, 37.1389, 0.4424", "288.593, 543.305, 37.1504, 0.3934", "287.928, 544.222, 36.7856, 0.5196", "287.258, 545.137, 36.3975, 0.6568", "286.495, 545.974, 36.0251, 0.7348", "285.728, 546.808, 35.6541, 0.8096", "285.06, 547.731, 35.4068, 0.8486", "284.397, 548.659, 35.1658, 0.8858", "283.645, 549.517, 34.972, 0.875", "282.888, 550.372, 34.7802, 0.8618", "282.036, 551.131, 34.6279, 0.7328", "281.184, 551.891, 34.4758, 0.6018" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "356.688, 479.005, 45.9802, 0.4336", "356.826, 479.672, 45.8819, 0.4686", "357.508, 480.59, 45.981, 0.4568", "358.176, 481.518, 46.0964, 0.4356", "358.803, 482.472, 46.256, 0.3878", "359.016, 483.468, 46.3641, 0.363", "358.589, 484.53, 46.3924, 0.374", "358.606, 485.577, 46.5021, 0.4048", "359.09, 486.61, 46.6976, 0.4566", "359.38, 487.696, 46.9372, 0.4582", "359.503, 488.828, 47.215, 0.4172", "359.273, 489.899, 47.46, 0.3766", "358.766, 490.92, 47.6792, 0.3362", "358.542, 492.016, 47.8842, 0.308", "358.483, 493.155, 48.0808, 0.2872", "358.919, 494.158, 48.4254, 0.292", "359.53, 495.112, 48.8225, 0.306", "359.952, 496.162, 49.0935, 0.3586", "360.314, 497.243, 49.3242, 0.4234", "360.322, 498.371, 49.4836, 0.4996", "360.243, 499.512, 49.6261, 0.5786", "360.758, 500.497, 49.6406, 0.591", "361.388, 501.451, 49.6303, 0.5902", "362.28, 502.151, 49.7042, 0.5544", "363.215, 502.809, 49.7924, 0.5126", "363.599, 503.865, 49.859, 0.466", "363.905, 504.963, 49.9285, 0.425", "363.914, 506.106, 50.0699, 0.4688", "363.943, 507.247, 50.2037, 0.5056", "364.119, 508.376, 50.2788, 0.4912", "364.346, 509.488, 50.3902, 0.4802", "364.883, 510.489, 50.7268, 0.4904", "365.43, 511.485, 51.0555, 0.4998", "366.016, 512.461, 51.3442, 0.5054", "366.577, 513.449, 51.6099, 0.5132", "367.013, 514.505, 51.7642, 0.5314", "367.509, 515.521, 51.9397, 0.5454", "368.286, 516.354, 52.2158, 0.5406", "369.042, 517.207, 52.435, 0.5408", "369.77, 518.088, 52.5778, 0.5478", "370.211, 519.09, 52.6618, 0.6082", "370.333, 520.227, 52.68, 0.7282", "370.288, 521.362, 52.7136, 0.779", "370.126, 522.495, 52.7576, 0.783", "369.986, 523.626, 52.9304, 0.7484", "369.855, 524.758, 53.1826, 0.69", "369.512, 525.822, 53.6063, 0.705", "369.056, 526.85, 54.122, 0.7592", "368.688, 527.909, 54.6549, 0.7554", "368.35, 528.98, 55.193, 0.7318", "368.195, 530.106, 55.4372, 0.649", "368.074, 531.24, 55.6284, 0.5558", "368.4, 532.32, 55.6559, 0.5462", "368.798, 533.393, 55.6564, 0.5504", "368.911, 534.531, 55.7553, 0.5564", "369.02, 535.669, 55.8561, 0.5624", "369.306, 536.768, 56.1669, 0.6312", "369.639, 537.832, 56.4796, 0.6906", "370.649, 538.355, 56.7927, 0.595", "371.62, 538.932, 57.0962, 0.531", "372.434, 539.729, 57.3614, 0.5986", "373.275, 540.497, 57.5658, 0.6122", "374.18, 541.195, 57.6321, 0.5034", "375.001, 541.971, 57.7842, 0.484", "375.655, 542.9, 58.1056, 0.641", "376.017, 543.934, 58.4427, 0.7584", "376.107, 545.066, 58.7947, 0.8388", "376.117, 546.198, 59.1514, 0.8304", "376.066, 547.332, 59.5118, 0.7532", "376.222, 548.412, 60.1605, 0.6436", "376.537, 549.453, 61.0324, 0.509", "377.501, 549.566, 61.7148, 0.4554", "378.609, 549.469, 62.354, 0.4204", "378.379, 550.272, 63.1274, 0.4862", "378.029, 551.278, 63.8448, 0.551", "378.263, 552.386, 64.2188, 0.53", "378.482, 553.499, 64.573, 0.4992", "378.669, 554.622, 64.8799, 0.4458", "379.09, 555.636, 65.3621, 0.4204", "379.715, 556.558, 65.9974, 0.4198", "380.449, 557.419, 66.39, 0.4902", "381.198, 558.271, 66.75, 0.5702", "382.018, 559.066, 66.8472, 0.6192", "382.846, 559.854, 66.9113, 0.6642", "383.905, 560.279, 66.7912, 0.515", "384.965, 560.703, 66.6912, 0.3732", "385.962, 561.259, 66.89, 0.3882", "386.965, 561.801, 67.0768, 0.4044", "388.02, 562.242, 67.1826, 0.4286", "388.985, 562.768, 67.2787, 0.4448", "389.379, 563.842, 67.3148, 0.4096", "389.809, 564.899, 67.3725, 0.3886", "390.374, 565.891, 67.5133, 0.4212", "391.185, 566.596, 67.7754, 0.4436", "392.238, 567.017, 68.157, 0.4556", "392.928, 567.852, 68.5796, 0.4488", "393.494, 568.83, 69.0164, 0.4352", "393.925, 569.877, 69.3717, 0.5254", "394.345, 570.932, 69.6942, 0.6054", "394.884, 571.936, 69.9356, 0.4788", "395.38, 572.959, 70.1705, 0.3892", "395.749, 574.039, 70.3864, 0.4062", "396.051, 575.133, 70.6096, 0.4298", "396.202, 576.263, 70.8495, 0.4674", "396.477, 577.357, 71.1178, 0.507", "396.919, 578.405, 71.4235, 0.5496", "397.55, 579.324, 71.6881, 0.5334", "398.376, 580.11, 71.9107, 0.457", "399.181, 580.921, 72.0451, 0.3976", "399.964, 581.755, 72.0913, 0.3552", "400.608, 582.685, 72.1442, 0.3798", "401.115, 583.709, 72.2033, 0.4712", "401.692, 584.695, 72.3013, 0.4452", "402.307, 585.658, 72.422, 0.3522", "403.262, 586.216, 72.5248, 0.3346", "404.318, 586.656, 72.6225, 0.3394", "405.423, 586.921, 72.8496, 0.3672", "406.54, 587.145, 73.1083, 0.4004", "407.663, 587.356, 73.1858, 0.3956", "408.789, 587.563, 73.2273, 0.3834", "409.557, 588.408, 73.2889, 0.3644", "410.33, 589.252, 73.3491, 0.348", "411.277, 589.892, 73.3474, 0.4342", "412.232, 590.511, 73.3566, 0.5186", "413.366, 590.613, 73.6148, 0.557", "414.501, 590.7, 73.8746, 0.5938", "415.63, 590.562, 74.1616, 0.6078", "416.76, 590.423, 74.4383, 0.6148", "417.889, 590.249, 74.5791, 0.5332", "419.02, 590.1, 74.7216, 0.4626", "420.163, 590.116, 74.8728, 0.4642", "421.297, 590.179, 75.0338, 0.4686", "422.404, 590.466, 75.2405, 0.4866", "423.497, 590.585, 75.5084, 0.5032", "424.567, 590.224, 75.9534, 0.5152", "425.641, 590.132, 76.3154, 0.4912", "426.722, 590.496, 76.538, 0.4064", "427.792, 590.889, 76.7654, 0.3678", "428.844, 591.326, 77.0006, 0.4044", "429.895, 591.774, 77.1576, 0.4134", "430.94, 592.239, 77.1938, 0.3802", "432.014, 592.606, 77.1324, 0.3584", "433.133, 592.834, 76.93, 0.353", "434.26, 592.995, 76.7413, 0.3416", "435.401, 593.058, 76.5719, 0.322", "436.482, 592.849, 76.5568, 0.3538", "437.493, 592.32, 76.7256, 0.447", "438.188, 591.476, 76.8734, 0.5014", "438.708, 590.458, 77.0098, 0.5346", "439.503, 589.674, 77.0666, 0.5122", "440.427, 589.002, 77.0851, 0.4628", "441.254, 588.217, 77.0902, 0.413", "442.034, 587.38, 77.0885, 0.363", "443.024, 586.883, 76.8606, 0.341", "444.105, 586.532, 76.5363, 0.3312", "445.228, 586.359, 76.4086, 0.3622", "446.367, 586.254, 76.3552, 0.4088", "447.496, 586.084, 76.4341, 0.4584", "448.623, 585.89, 76.5587, 0.5092", "449.76, 585.782, 76.5741, 0.4882", "450.902, 585.699, 76.5542, 0.444", "452.034, 585.544, 76.5512, 0.3932", "453.164, 585.365, 76.5534, 0.3406", "454.301, 585.394, 76.6732, 0.3342", "455.44, 585.479, 76.8242, 0.3402", "456.451, 585.968, 76.8029, 0.3708", "457.432, 586.558, 76.7402, 0.4074", "458.474, 587.025, 76.8093, 0.3796", "459.526, 587.47, 76.9012, 0.3406", "460.537, 588.002, 77.079, 0.322", "461.54, 588.547, 77.2705, 0.3066", "462.589, 588.998, 77.4606, 0.3282", "463.635, 589.449, 77.6502, 0.352", "464.55, 590.131, 77.8268, 0.3246", "465.46, 590.82, 77.9884, 0.3038", "466.335, 591.559, 78.0254, 0.3366", "467.174, 592.33, 77.9598, 0.3408", "467.96, 593.156, 77.7249, 0.298", "468.761, 593.969, 77.5625, 0.2746", "469.58, 594.768, 77.4886, 0.2748", "470.503, 595.413, 77.3408, 0.2748", "471.537, 595.891, 77.1128, 0.2752", "472.516, 596.462, 76.8477, 0.2758", "473.435, 597.133, 76.5425, 0.277", "474.395, 597.741, 76.2756, 0.2798", "475.395, 598.287, 76.0488, 0.2842", "476.465, 598.601, 75.8201, 0.3008", "477.602, 598.682, 75.5891, 0.3294", "478.743, 598.669, 75.5157, 0.3876", "479.887, 598.638, 75.4746, 0.4516", "481.025, 598.751, 75.4508, 0.4346", "482.16, 598.884, 75.4292, 0.4074", "483.303, 598.887, 75.4202, 0.4142", "484.447, 598.875, 75.413, 0.4252", "485.548, 598.58, 75.3617, 0.3874", "486.645, 598.251, 75.3054, 0.3442", "487.783, 598.163, 75.2408, 0.3012", "488.924, 598.087, 75.1761, 0.2582", "490.022, 598.364, 74.8339, 0.2428", "491.119, 598.655, 74.48, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "356.688, 479.005, 45.9802, 0.4336", "356.695, 479.338, 45.6739, 0.5408", "356.708, 480.453, 45.1954, 0.5694", "356.715, 481.595, 45.0472, 0.3922", "356.711, 482.737, 44.9058, 0.3316", "356.699, 483.88, 44.7686, 0.3438", "356.81, 485.015, 44.6804, 0.3982", "356.987, 486.144, 44.6177, 0.4748", "357.208, 487.266, 44.5642, 0.5402", "357.448, 488.385, 44.5144, 0.6004", "357.318, 489.498, 44.541, 0.6262", "357.048, 490.61, 44.5959, 0.639", "356.603, 491.656, 44.7516, 0.5424", "356.1, 492.68, 44.9403, 0.41", "356.19, 493.774, 45.0304, 0.3394", "356.448, 494.889, 45.0929, 0.2864", "356.849, 495.958, 44.9728, 0.2794", "357.258, 497.026, 44.8414, 0.2754", "357.557, 498.127, 44.6642, 0.2766", "357.856, 499.229, 44.4867, 0.2778" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "151.913, 640.369, 34.6685, 0.6398", "151.569, 640.712, 34.7844, 0.64", "150.676, 641.361, 35.1277, 0.5916", "149.593, 641.665, 35.6289, 0.4348", "148.984, 642.494, 35.8095, 0.3608", "148.601, 643.572, 35.838, 0.3264", "148.058, 644.572, 35.8302, 0.3578", "147.443, 645.536, 35.8067, 0.4174", "146.643, 646.338, 35.8053, 0.4264", "145.766, 647.074, 35.8131, 0.4146", "144.953, 647.872, 35.9615, 0.3936", "144.162, 648.695, 36.162, 0.369", "143.998, 649.768, 36.3297, 0.383", "144.007, 650.911, 36.4879, 0.4076", "144.909, 651.565, 36.722, 0.3212", "145.86, 652.194, 36.96, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "151.913, 640.369, 34.6685, 0.6398", "151.393, 640.662, 34.8396, 0.5842", "150.403, 641.219, 35.1473, 0.4836", "149.383, 641.726, 35.1722, 0.4054", "148.342, 642.191, 34.9642, 0.3456", "147.276, 642.575, 34.5904, 0.287", "146.203, 642.928, 34.16, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "281.184, 551.891, 34.4758, 0.6018", "281.036, 552.717, 34.3448, 0.5136", "280.841, 553.842, 34.179, 0.4226", "280.651, 554.969, 34.0542, 0.4276", "280.389, 556.076, 33.9326, 0.4102", "279.947, 557.129, 33.8198, 0.3372", "279.309, 557.979, 33.8036, 0.287", "278.241, 558.384, 33.9982, 0.2858", "277.158, 558.735, 34.1813, 0.2922", "276.048, 559.008, 34.347, 0.3094", "274.952, 559.327, 34.4854, 0.3386", "273.878, 559.711, 34.5836, 0.385", "272.918, 560.284, 34.5486, 0.421", "272.105, 561.085, 34.3521, 0.444", "271.406, 561.974, 34.158, 0.5052", "270.829, 562.959, 33.9668, 0.6074", "270.161, 563.88, 33.8187, 0.6488", "269.421, 564.75, 33.7047, 0.6424", "268.714, 565.648, 33.626, 0.674", "268.03, 566.566, 33.5712, 0.732", "267.496, 567.567, 33.5759, 0.7524", "267.063, 568.626, 33.6207, 0.748", "266.701, 569.707, 33.74, 0.7068", "266.379, 570.803, 33.9066, 0.6428", "266.005, 571.883, 33.9122, 0.6152", "265.602, 572.953, 33.8307, 0.6074", "265.302, 574.048, 33.5588, 0.5672", "265.051, 575.154, 33.1996, 0.5122", "264.83, 576.268, 32.8633, 0.4932", "264.616, 577.384, 32.5315, 0.4814", "264.065, 578.366, 32.1698, 0.5234", "263.464, 579.328, 31.8035, 0.5736", "262.876, 580.3, 31.4703, 0.528", "262.291, 581.272, 31.1408, 0.4712", "261.28, 581.771, 31.1282, 0.4634", "260.234, 582.227, 31.148, 0.4614", "259.569, 583.155, 31.3258, 0.535", "258.904, 584.083, 31.5053, 0.6074", "258.216, 584.992, 31.752, 0.6246", "257.608, 585.934, 32.0068, 0.6244", "257.44, 587.058, 32.3081, 0.527", "257.248, 588.18, 32.578, 0.443", "256.932, 589.278, 32.6819, 0.4284", "256.793, 590.374, 32.7614, 0.442", "257.145, 591.463, 32.7718, 0.5342", "257.328, 592.56, 32.7597, 0.5632", "257.091, 593.679, 32.6922, 0.4356", "256.647, 594.657, 32.6057, 0.3522", "255.699, 595.294, 32.4736, 0.3754", "254.843, 596.034, 32.4985, 0.3916", "254.101, 596.9, 32.7163, 0.399", "253.539, 597.869, 32.9479, 0.382", "253.172, 598.948, 33.194, 0.3384", "252.602, 599.907, 33.39, 0.325", "251.823, 600.743, 33.5345, 0.3426", "251.057, 601.592, 33.6134, 0.362", "250.301, 602.45, 33.6356, 0.3828", "249.614, 603.36, 33.584, 0.4326", "248.981, 604.313, 33.4746, 0.5048", "248.366, 605.277, 33.4281, 0.5482", "247.763, 606.249, 33.4278, 0.5702", "247.142, 607.208, 33.3407, 0.594", "246.508, 608.16, 33.1968, 0.6188", "245.743, 608.998, 33.0982, 0.6024", "244.902, 609.774, 33.0257, 0.562", "244.338, 610.742, 32.9403, 0.5102", "243.902, 611.797, 32.849, 0.4534", "243.554, 612.885, 32.7614, 0.3766", "243.24, 613.985, 32.6749, 0.2924", "242.279, 614.43, 32.618, 0.2812", "241.176, 614.729, 32.5679, 0.2862", "240.052, 614.943, 32.5979, 0.3044", "238.926, 615.14, 32.6432, 0.3252", "237.985, 615.757, 32.7939, 0.3268", "237.079, 616.452, 32.9638, 0.325", "236.424, 617.377, 33.3122, 0.3116", "235.777, 618.309, 33.6672, 0.298", "234.649, 618.472, 33.7198, 0.3332", "233.52, 618.64, 33.759, 0.373", "232.488, 619.127, 33.5482, 0.5044", "231.478, 619.641, 33.357, 0.6224", "230.794, 620.556, 33.4659, 0.5348", "230.049, 621.391, 33.5793, 0.4572", "228.973, 621.772, 33.717, 0.437", "228.014, 622.294, 33.7714, 0.4692", "227.457, 623.288, 33.5454, 0.6772", "226.882, 624.274, 33.3981, 0.8258", "226.273, 625.242, 33.404, 0.8578", "225.664, 626.21, 33.4592, 0.8638", "225.057, 627.179, 33.5961, 0.8268", "224.367, 628.079, 33.7131, 0.7792", "223.54, 628.868, 33.7966, 0.7146", "222.753, 629.694, 33.8853, 0.6544", "222.03, 630.58, 33.9828, 0.6008", "221.365, 631.499, 34.2516, 0.5882", "220.764, 632.456, 34.7071, 0.6198", "220.509, 633.542, 35.0428, 0.5064", "220.365, 634.669, 35.3399, 0.346", "221.283, 635.164, 35.047, 0.3518", "222.34, 635.576, 34.6772, 0.3794", "222.215, 636.682, 34.419, 0.4342", "222.031, 637.805, 34.2278, 0.4736", "221.749, 638.914, 34.3238, 0.4388", "221.456, 640.015, 34.4803, 0.4078", "221.117, 641.096, 34.8704, 0.3906", "220.671, 642.112, 35.2386, 0.3988", "219.838, 642.887, 35.5284, 0.5", "218.932, 643.161, 35.7364, 0.5946", "217.913, 642.644, 35.8154, 0.6788", "216.851, 642.445, 35.926, 0.7418", "215.732, 642.676, 36.0794, 0.7762", "214.609, 642.697, 36.1438, 0.7924", "213.48, 642.509, 36.1203, 0.7908", "212.398, 642.684, 36.0802, 0.8062", "211.356, 643.154, 36.0265, 0.8358", "210.456, 643.827, 35.8985, 0.72", "209.655, 644.641, 35.719, 0.5034", "208.634, 644.97, 35.7235, 0.455", "207.492, 645.034, 35.8288, 0.4986", "206.412, 645.362, 35.8299, 0.464", "205.358, 645.807, 35.7846, 0.3944", "204.556, 646.584, 35.7339, 0.3658", "203.836, 647.467, 35.6849, 0.357", "202.804, 647.961, 35.7381, 0.5002", "201.784, 648.475, 35.7857, 0.6246", "200.87, 649.163, 35.7888, 0.5972", "199.937, 649.818, 35.793, 0.5692", "198.889, 650.278, 35.8036, 0.5358", "197.843, 650.74, 35.8137, 0.5024", "196.803, 651.219, 35.8218, 0.4668", "195.756, 651.672, 35.7972, 0.4514", "194.664, 652.008, 35.6194, 0.53", "193.575, 652.35, 35.4281, 0.5906", "192.496, 652.716, 35.1834, 0.5794", "191.407, 652.888, 34.9731, 0.5494", "190.296, 652.622, 34.841, 0.4766", "189.268, 652.689, 34.6914, 0.433", "188.415, 653.446, 34.5055, 0.4502", "187.637, 654.273, 34.2672, 0.4592", "186.93, 655.165, 33.9816, 0.461", "186.173, 656.018, 33.78, 0.4556", "185.378, 656.837, 33.6479, 0.4444", "184.543, 657.617, 33.5972, 0.4024", "183.68, 658.367, 33.6073, 0.3376", "182.888, 659.19, 33.6218, 0.3594", "182.143, 660.058, 33.6395, 0.4354", "181.302, 660.826, 33.7109, 0.4292", "180.405, 661.534, 33.8142, 0.3738", "179.634, 662.366, 33.9321, 0.3772", "178.938, 663.272, 34.0584, 0.415", "178.177, 664.12, 34.281, 0.4166", "177.39, 664.943, 34.5439, 0.4028", "176.747, 665.875, 34.8443, 0.5082", "176.147, 666.842, 35.1565, 0.6506", "175.522, 667.795, 35.376, 0.6988", "174.888, 668.745, 35.5687, 0.7198", "174.865, 669.838, 35.6745, 0.6152", "175.011, 670.972, 35.756, 0.476", "174.917, 672.108, 35.9346, 0.3518", "174.803, 673.244, 36.12, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "281.184, 551.891, 34.4758, 0.6018", "280.431, 552.48, 34.9815, 0.599", "279.563, 553.189, 35.4138, 0.6026", "278.736, 553.975, 35.2008, 0.6332", "277.887, 554.735, 35.0123, 0.6526", "276.948, 555.386, 34.9196, 0.628", "275.968, 555.954, 34.8667, 0.6336", "274.869, 556.27, 34.932, 0.7294", "273.78, 556.614, 35.0014, 0.7678", "272.718, 557.04, 35.0837, 0.6382", "271.708, 557.55, 35.1691, 0.5268", "270.841, 558.296, 35.2629, 0.4662", "269.961, 559.023, 35.3998, 0.4268", "269.051, 559.709, 35.637, 0.4372", "268.098, 560.332, 35.7952, 0.4784", "267.095, 560.884, 35.8604, 0.556", "266.132, 561.494, 35.8865, 0.6232", "265.204, 562.165, 35.8714, 0.6792", "264.166, 562.587, 35.8803, 0.6476", "263.05, 562.839, 35.9061, 0.5556", "261.966, 563.195, 35.8999, 0.534", "260.9, 563.609, 35.8761, 0.552", "259.912, 564.176, 35.8691, 0.6398", "258.958, 564.807, 35.8688, 0.7562", "258.132, 565.588, 35.8526, 0.7836", "257.358, 566.431, 35.8302, 0.7748", "256.692, 567.357, 35.7622, 0.8016", "256.067, 568.315, 35.677, 0.8422", "255.26, 569.109, 35.632, 0.8702", "254.38, 569.841, 35.6026, 0.8934", "253.449, 570.504, 35.6107, 0.8314", "252.499, 571.142, 35.6317, 0.74", "251.534, 571.754, 35.5608, 0.6108", "250.562, 572.357, 35.4623, 0.4706", "249.553, 572.893, 35.3492, 0.4074", "248.536, 573.413, 35.2321, 0.363", "247.538, 573.965, 35.0283, 0.3678", "246.626, 574.599, 34.834, 0.389", "246.18, 575.653, 34.799, 0.4432", "245.769, 576.717, 34.7466, 0.4842", "245.555, 577.839, 34.5974, 0.4512", "245.274, 578.935, 34.4632, 0.4254", "244.691, 579.92, 34.3966, 0.4328", "244.014, 580.821, 34.505, 0.4162", "243.178, 581.584, 34.909, 0.3594", "242.351, 582.366, 35.1106, 0.3434", "241.533, 583.165, 35.1218, 0.3656", "240.742, 583.991, 35.0622, 0.3844", "239.977, 584.84, 34.9387, 0.4", "239.198, 585.678, 34.904, 0.422", "238.408, 586.505, 34.9437, 0.4492", "237.645, 587.356, 34.8743, 0.4232", "236.9, 588.221, 34.7365, 0.3636", "236.207, 589.129, 34.7242, 0.347", "235.55, 590.065, 34.7894, 0.3572", "234.664, 590.775, 34.9796, 0.3376", "233.748, 591.455, 35.1873, 0.3138", "232.908, 592.227, 35.3489, 0.3218", "232.076, 593.01, 35.5057, 0.333", "231.142, 593.669, 35.5779, 0.327", "230.198, 594.315, 35.6418, 0.3194", "229.481, 595.2, 35.6815, 0.341", "228.781, 596.105, 35.719, 0.365", "228.135, 597.048, 35.8299, 0.3748", "227.492, 597.994, 35.9444, 0.384", "227.558, 599.121, 36.1696, 0.3084", "227.656, 600.257, 36.4, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "357.856, 499.229, 44.4867, 0.2778", "357.646, 499.682, 43.5084, 0.3564", "357.284, 500.617, 42.523, 0.4244", "356.934, 501.706, 42.4813, 0.4024", "356.706, 502.818, 42.5018, 0.3924", "356.628, 503.958, 42.5967, 0.3964", "356.451, 505.084, 42.6196, 0.3754", "356.16, 506.19, 42.5575, 0.3254", "355.754, 507.252, 42.4483, 0.3266", "355.24, 508.271, 42.2948, 0.376", "354.82, 509.329, 42.2022, 0.4058", "354.486, 510.424, 42.1655, 0.418", "354.233, 511.537, 42.1534, 0.4464", "354.047, 512.665, 42.1624, 0.4888", "353.744, 513.76, 42.0255, 0.5602", "353.345, 514.828, 41.767, 0.656", "353.035, 515.911, 41.3529, 0.6358", "352.798, 517.008, 40.8108, 0.5206", "352.737, 518.13, 40.6294, 0.4688", "352.813, 519.271, 40.7229, 0.465", "353.123, 520.353, 40.8024, 0.4596", "353.593, 521.395, 40.8716, 0.453", "353.836, 522.499, 41.0256, 0.5268", "353.97, 523.633, 41.2202, 0.6392", "354.154, 524.745, 41.6693, 0.6694", "354.357, 525.849, 42.2086, 0.6702", "354.404, 526.982, 42.268, 0.833", "354.405, 528.127, 42.1812, 1.045", "354.236, 529.252, 42.0375, 1.0662", "354.02, 530.374, 41.8785, 1.035", "353.564, 531.416, 41.8491, 0.9142", "353.053, 532.439, 41.8494, 0.773", "353.069, 533.557, 41.9322, 0.5748", "353.191, 534.694, 42.0319, 0.365", "352.771, 535.684, 41.1037, 0.5406", "352.363, 536.68, 40.1752, 0.7238", "352.146, 537.759, 39.415, 0.9056", "351.93, 538.841, 38.6733, 1.0524", "351.727, 539.939, 38.0702, 0.9346", "351.587, 541.04, 37.5206, 0.8108", "351.855, 542.148, 37.324, 0.6464", "352.137, 543.254, 37.1316, 0.517", "352.487, 544.341, 36.9594, 0.565", "352.822, 545.433, 36.7886, 0.6008", "353.077, 546.545, 36.6257, 0.574", "353.29, 547.657, 36.37, 0.5404", "353.293, 548.765, 35.674, 0.4754", "353.35, 549.849, 34.8617, 0.4154", "353.613, 550.834, 33.5922, 0.3744", "353.469, 551.878, 33.1808, 0.3636", "353.09, 552.958, 33.2576, 0.3698", "352.925, 554.054, 33.8176, 0.4592", "352.83, 555.155, 34.5405, 0.5764", "352.607, 556.265, 34.7323, 0.5716", "352.345, 557.38, 34.7698, 0.5314", "351.882, 558.416, 34.5576, 0.523", "351.38, 559.439, 34.298, 0.5208", "350.771, 560.399, 33.9928, 0.4292", "350.145, 561.346, 33.679, 0.3214", "349.686, 562.379, 33.259, 0.3014", "349.247, 563.42, 32.8289, 0.2902", "349.303, 564.562, 32.7463, 0.3138", "349.356, 565.703, 32.6662, 0.3372", "349.029, 566.799, 32.6407, 0.3294", "348.695, 567.893, 32.594, 0.3228", "348.318, 568.971, 32.41, 0.3224", "347.94, 570.048, 32.2423, 0.3254", "347.546, 571.121, 32.1812, 0.3508", "347.134, 572.188, 32.1429, 0.3762", "346.609, 573.203, 32.2384, 0.4024", "346.079, 574.216, 32.3375, 0.4198", "345.531, 575.219, 32.4551, 0.3918", "344.929, 576.18, 32.5814, 0.3682", "344.107, 576.973, 32.7429, 0.362", "343.292, 577.77, 32.9619, 0.3562", "342.494, 578.577, 33.3178, 0.3514", "341.621, 579.294, 33.5283, 0.3886", "340.639, 579.88, 33.5272, 0.487", "339.714, 580.542, 33.4323, 0.524", "338.862, 581.302, 33.2195, 0.4836", "338.005, 582.056, 33.0663, 0.4864", "337.142, 582.806, 32.9851, 0.5418", "336.195, 583.423, 32.8748, 0.558", "335.148, 583.88, 32.7295, 0.5276", "334.12, 584.377, 32.6206, 0.5484", "333.111, 584.917, 32.5522, 0.6268", "332.279, 585.653, 32.529, 0.6274", "331.633, 586.596, 32.5539, 0.5458", "331.026, 587.564, 32.5086, 0.4884", "330.441, 588.548, 32.4184, 0.4464", "329.63, 589.317, 32.2776, 0.4554", "328.69, 589.964, 32.1076, 0.4934", "327.682, 590.481, 31.8142, 0.5704", "326.642, 590.934, 31.4605, 0.6666", "325.951, 591.776, 31.1716, 0.6402", "325.398, 592.773, 30.9081, 0.565", "325.094, 593.864, 30.8305, 0.4774", "324.866, 594.985, 30.8104, 0.386", "324.221, 595.891, 30.9512, 0.3328", "323.451, 596.733, 31.1405, 0.2908", "322.359, 596.98, 31.3874, 0.2592", "321.235, 597.168, 31.64, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "357.856, 499.229, 44.4867, 0.2778", "357.938, 499.366, 44.4623, 0.279", "358.525, 500.346, 44.2884, 0.2878", "359.113, 501.325, 44.1364, 0.3084", "359.702, 502.304, 43.9978, 0.3364", "360.048, 503.377, 43.9796, 0.3682", "360.259, 504.502, 44.0275, 0.4022", "360.486, 505.621, 44.1927, 0.388", "360.718, 506.737, 44.4058, 0.3542", "361.352, 507.644, 44.6275, 0.3844", "362.134, 508.474, 44.8524, 0.4382", "363.0, 509.213, 45.0806, 0.4294", "363.893, 509.922, 45.3099, 0.4", "364.479, 510.866, 45.7243, 0.3898", "364.977, 511.878, 46.1924, 0.3848", "364.835, 512.971, 46.8667, 0.3794", "364.665, 514.068, 47.5496, 0.3738", "364.897, 515.174, 47.9662, 0.4066", "365.129, 516.283, 48.3703, 0.4392", "365.386, 517.393, 48.5803, 0.469", "365.602, 518.507, 48.7771, 0.5056", "365.408, 519.635, 48.8412, 0.6126", "365.228, 520.763, 48.8832, 0.7102", "365.12, 521.902, 48.813, 0.7598", "365.112, 523.023, 48.7668, 0.7982", "365.594, 524.061, 48.8379, 0.783", "366.054, 525.106, 48.9359, 0.7392", "366.436, 526.182, 49.1249, 0.5984", "366.686, 527.266, 49.3578, 0.522", "366.493, 528.383, 49.7395, 0.6646", "366.516, 529.46, 50.0794, 0.7336", "367.113, 530.43, 50.3084, 0.6058", "367.748, 531.378, 50.468, 0.5256", "368.451, 532.28, 50.5047, 0.5302", "369.01, 533.257, 50.4834, 0.5512", "369.352, 534.349, 50.3745, 0.5974", "369.6, 535.458, 50.2586, 0.595", "369.724, 536.596, 50.1332, 0.5268", "370.135, 537.611, 50.1155, 0.5434", "370.856, 538.499, 50.2124, 0.65", "371.389, 539.494, 50.3185, 0.5912", "371.791, 540.565, 50.4305, 0.4154", "371.854, 541.69, 50.4711, 0.3822", "371.806, 542.833, 50.4882, 0.3956", "372.194, 543.882, 50.4549, 0.4418", "372.708, 544.903, 50.4064, 0.4978", "372.757, 546.019, 50.307, 0.5032", "372.681, 547.159, 50.1942, 0.495", "372.978, 548.243, 50.4599, 0.4582", "373.356, 549.313, 50.8057, 0.4152", "373.855, 550.339, 50.958, 0.4404", "374.359, 551.365, 51.102, 0.4686", "375.03, 552.29, 50.9499, 0.4892", "375.719, 553.194, 50.7923, 0.5114", "376.688, 553.799, 50.6223, 0.557", "377.615, 554.437, 50.4538, 0.5966", "377.934, 555.533, 50.3042, 0.552", "378.214, 556.636, 50.1766, 0.516", "378.21, 557.78, 50.192, 0.5384", "378.195, 558.923, 50.2536, 0.5882", "378.149, 560.062, 50.4736, 0.7316", "378.098, 561.202, 50.6817, 0.8184", "378.021, 562.341, 50.8486, 0.7168", "378.007, 563.478, 50.9776, 0.6166", "378.189, 564.607, 50.9849, 0.5214", "378.299, 565.739, 50.9883, 0.4324", "378.188, 566.877, 50.979, 0.3618", "378.042, 568.011, 50.995, 0.3112", "377.789, 569.125, 51.0854, 0.3202", "377.661, 570.242, 51.168, 0.344", "377.886, 571.363, 51.2291, 0.409", "377.947, 572.476, 51.315, 0.4506", "377.612, 573.568, 51.4604, 0.4374", "377.447, 574.672, 51.6054, 0.4278", "377.623, 575.802, 51.7507, 0.4258", "377.766, 576.934, 51.8862, 0.42", "377.845, 578.075, 52.0044, 0.4074", "377.654, 579.153, 52.0982, 0.3848", "377.089, 580.149, 52.1578, 0.3488", "376.871, 581.211, 52.1912, 0.3446", "377.016, 582.347, 52.1973, 0.3738", "376.899, 583.462, 52.262, 0.3786", "376.589, 584.562, 52.3706, 0.3654", "376.453, 585.694, 52.4664, 0.3914", "376.37, 586.833, 52.5585, 0.429", "376.951, 587.819, 52.5445, 0.4696", "377.504, 588.811, 52.53, 0.5082", "377.337, 589.943, 52.5076, 0.4824", "377.164, 591.073, 52.4913, 0.4558", "376.906, 592.187, 52.5706, 0.418", "376.651, 593.301, 52.6632, 0.38", "376.442, 594.42, 52.9536, 0.338", "376.231, 595.538, 53.2426, 0.2992", "375.983, 596.649, 53.5158, 0.3054", "375.771, 597.764, 53.795, 0.314", "375.797, 598.9, 54.1131, 0.3394", "375.832, 600.036, 54.4158, 0.351", "375.882, 601.174, 54.691, 0.3364", "375.703, 602.262, 54.9069, 0.3384", "375.167, 603.271, 55.0292, 0.3668", "374.77, 604.327, 55.1382, 0.3722", "374.589, 605.456, 55.2266, 0.342", "374.867, 606.48, 55.3249, 0.3264", "375.517, 607.422, 55.4313, 0.3222", "375.813, 608.474, 55.5691, 0.3376", "375.83, 609.616, 55.7318, 0.3684", "375.604, 610.716, 55.981, 0.422", "375.389, 611.767, 56.264, 0.481", "376.115, 612.648, 56.4516, 0.4932", "376.891, 613.468, 56.6289, 0.5152", "377.887, 614.027, 56.7613, 0.58", "378.742, 614.701, 56.87, 0.6162", "379.078, 615.795, 56.894, 0.5492", "379.273, 616.903, 56.926, 0.539", "379.173, 618.043, 56.9752, 0.6454", "379.121, 619.183, 57.0497, 0.743", "379.154, 620.325, 57.1729, 0.824", "379.346, 621.433, 57.239, 0.858", "379.785, 622.489, 57.2169, 0.8188", "380.172, 623.565, 57.1844, 0.804", "380.482, 624.665, 57.1368, 0.825", "380.888, 625.728, 57.108, 0.8398", "381.429, 626.736, 57.1052, 0.8462", "382.011, 627.72, 57.1234, 0.792", "382.622, 628.686, 57.157, 0.6944", "382.684, 629.766, 57.2603, 0.6254", "382.503, 630.894, 57.3944, 0.5686", "381.993, 631.9, 57.64, 0.5696", "381.427, 632.885, 57.9085, 0.5894", "381.141, 633.988, 58.1602, 0.7206", "380.826, 635.076, 58.4279, 0.8286", "380.152, 635.981, 58.8885, 0.6566", "379.554, 636.92, 59.2987, 0.5074", "379.397, 638.051, 59.4196, 0.4874", "379.365, 639.167, 59.5269, 0.4826", "379.822, 640.214, 59.5776, 0.5382", "380.268, 641.268, 59.6338, 0.593", "380.665, 642.34, 59.7106, 0.645", "380.768, 643.364, 59.8251, 0.681", "380.055, 644.254, 60.0446, 0.6728", "379.569, 645.235, 60.2678, 0.661", "379.46, 646.371, 60.4974, 0.6438", "379.401, 647.51, 60.6502, 0.6364", "379.4, 648.654, 60.711, 0.641", "379.475, 649.792, 60.7194, 0.6078", "379.639, 650.925, 60.6693, 0.5324", "379.214, 651.851, 60.5788, 0.5272", "378.383, 652.636, 60.4604, 0.5704", "377.723, 653.555, 60.3728, 0.6394", "377.159, 654.55, 60.3028, 0.723", "376.62, 655.557, 60.1255, 0.6448", "376.087, 656.565, 59.9245, 0.5308", "375.174, 657.23, 59.8811, 0.4902", "374.214, 657.852, 59.8576, 0.459", "373.932, 658.95, 59.8214, 0.4616", "373.717, 660.066, 59.7845, 0.46", "373.844, 661.203, 59.7442, 0.4158", "373.865, 662.32, 59.7265, 0.3776", "373.326, 663.328, 59.8287, 0.3714", "373.267, 664.163, 59.9418, 0.3686", "374.326, 664.594, 60.0799, 0.3734", "375.188, 665.291, 59.9855, 0.3452", "375.918, 666.165, 59.7349, 0.295", "376.789, 666.891, 59.5812, 0.278", "377.723, 667.552, 59.4706, 0.2758", "378.736, 668.067, 59.5244, 0.276", "379.785, 668.519, 59.6512, 0.2772", "380.695, 669.198, 59.9169, 0.282", "381.581, 669.91, 60.2048, 0.2876", "382.592, 670.438, 60.2644, 0.3098", "383.62, 670.94, 60.2952, 0.334", "384.464, 671.687, 59.8366, 0.2828", "385.299, 672.443, 59.36, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_182",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_37", "dend_34", "dend_33", "dend_26", "dend_16", "dend_0", "dend_42", "dend_39", "dend_36", "dend_35", "dend_32", "dend_27", "dend_17", "dend_5", "dend_4", "dend_1", "dend_41", "dend_40", "dend_31", "dend_28", "dend_23", "dend_18", "dend_11", "dend_6", "dend_3", "dend_2", "dend_30", "dend_29", "dend_25", "dend_24", "dend_22", "dend_19", "dend_15", "dend_12", "dend_10", "dend_7", "dend_21", "dend_20", "dend_14", "dend_13", "dend_9", "dend_8" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6985",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_16", "dend_16", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "1.7914958"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "41.081215"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0035023075",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "9.184643E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.32888675",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "7.2282145E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.008139626",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.765603E-5",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.043064404",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.2139903",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.3706855E-4",
    "erev" : "-92.1516"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "9.5553894E-4",
    "erev" : "-92.1516"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "3.749046E-6",
    "erev" : "-92.1516"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "4.9891544E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0050529465",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_473835796",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_473835796

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_5, id: dend_5, parent: dend_0
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_182, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_182
// Group: {name=dend, groups=[], sections=[dend_38, dend_37, dend_34, dend_33, dend_26, dend_16, dend_0, dend_42, dend_39, dend_36, dend_35, dend_32, dend_27, dend_17, dend_5, dend_4, dend_1, dend_41, dend_40, dend_31, dend_28, dend_23, dend_18, dend_11, dend_6, dend_3, dend_2, dend_30, dend_29, dend_25, dend_24, dend_22, dend_19, dend_15, dend_12, dend_10, dend_7, dend_21, dend_20, dend_14, dend_13, dend_9, dend_8]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_6985, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_6985
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_16, dend_16, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_473835796
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.49996825598374783)
    connect dend_38(0), soma_0(0.49996825598374783)
    connect dend_37(0), soma_0(0.49996825598374783)
    connect dend_34(0), soma_0(0.49996825598374783)
    connect dend_33(0), soma_0(0.49996825598374783)
    connect dend_26(0), soma_0(0.49996825598374783)
    connect dend_16(0), soma_0(0.49996825598374783)
    connect dend_0(0), soma_0(0.49996825598374783)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_5(0), dend_0(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 339.672, 374.774, 52.08, 15.7512 ) }
    soma_0 { pt3dadd( 347.547, 374.774, 52.08, 15.7512 ) }
    soma_0 { pt3dadd( 355.423, 374.774, 52.08, 15.7512 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 347.547, 374.774, 52.08, 1.0 ) }
    axon_0 { pt3dadd( 353.389, 388.59, 52.08, 1.0 ) }
    axon_0 { pt3dadd( 359.23, 402.406, 52.08, 1.0 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 6/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 341.354, 375.583, 60.9815, 0.9484 ) }
    dend_38 { pt3dadd( 340.262, 375.425, 61.0744, 0.6864 ) }
    dend_38 { pt3dadd( 339.154, 375.182, 61.0044, 0.6864 ) }
    dend_38 { pt3dadd( 338.097, 375.617, 61.1316, 0.6864 ) }
    dend_38 { pt3dadd( 337.029, 375.957, 61.2825, 0.6864 ) }
    dend_38 { pt3dadd( 335.901, 375.805, 61.5569, 0.6864 ) }
    dend_38 { pt3dadd( 334.771, 375.664, 61.8271, 0.6864 ) }
    dend_38 { pt3dadd( 333.635, 375.572, 62.0791, 0.6864 ) }
    dend_38 { pt3dadd( 332.509, 375.565, 62.34, 0.6864 ) }
    dend_38 { pt3dadd( 331.421, 375.894, 62.636, 0.6864 ) }
    dend_38 { pt3dadd( 330.352, 376.268, 62.9493, 0.6864 ) }
    dend_38 { pt3dadd( 329.337, 376.777, 63.3167, 0.6864 ) }
    dend_38 { pt3dadd( 328.299, 377.072, 63.602, 0.6864 ) }
    dend_38 { pt3dadd( 327.194, 376.777, 63.665, 0.6864 ) }
    dend_38 { pt3dadd( 326.082, 376.517, 63.7524, 0.6864 ) }
    dend_38 { pt3dadd( 324.953, 376.344, 63.9036, 0.6864 ) }
    dend_38 { pt3dadd( 323.831, 376.371, 64.0226, 0.6864 ) }
    dend_38 { pt3dadd( 322.717, 376.629, 64.1052, 0.6864 ) }
    dend_38 { pt3dadd( 321.589, 376.759, 64.1161, 0.6864 ) }
    dend_38 { pt3dadd( 320.444, 376.768, 64.0598, 0.6864 ) }
    dend_38 { pt3dadd( 319.374, 377.081, 64.0192, 0.6864 ) }
    dend_38 { pt3dadd( 318.356, 377.602, 63.9892, 0.6864 ) }
    dend_38 { pt3dadd( 317.261, 377.717, 63.9481, 0.6864 ) }
    dend_38 { pt3dadd( 316.123, 377.601, 63.9002, 0.6864 ) }
    dend_38 { pt3dadd( 315.09, 377.98, 63.9304, 0.6864 ) }
    dend_38 { pt3dadd( 314.097, 378.547, 63.9906, 0.6864 ) }
    dend_38 { pt3dadd( 312.985, 378.745, 64.0732, 0.6864 ) }
    dend_38 { pt3dadd( 311.848, 378.869, 64.16, 0.6864 ) }
    dend_38 { pt3dadd( 310.772, 379.244, 64.332, 0.6864 ) }
    dend_38 { pt3dadd( 309.705, 379.647, 64.5134, 0.6864 ) }
    dend_38 { pt3dadd( 308.745, 380.263, 64.6786, 0.6864 ) }
    dend_38 { pt3dadd( 307.794, 380.895, 64.8427, 0.6864 ) }
    dend_38 { pt3dadd( 306.832, 381.514, 64.8312, 0.6864 ) }
    dend_38 { pt3dadd( 305.869, 382.13, 64.808, 0.6864 ) }
    dend_38 { pt3dadd( 304.802, 382.527, 64.5498, 0.6864 ) }
    dend_38 { pt3dadd( 303.732, 382.921, 64.2883, 0.6864 ) }
    dend_38 { pt3dadd( 302.817, 383.6, 64.0842, 0.6864 ) }
    dend_38 { pt3dadd( 301.902, 384.282, 63.88, 0.6864 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 44/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 353.874, 371.102, 56.3184, 0.46 ) }
    dend_37 { pt3dadd( 354.897, 370.712, 57.1228, 0.6282 ) }
    dend_37 { pt3dadd( 355.666, 369.877, 57.2191, 0.536 ) }
    dend_37 { pt3dadd( 356.425, 369.021, 57.2788, 0.4306 ) }
    dend_37 { pt3dadd( 357.355, 368.355, 57.3432, 0.3706 ) }
    dend_37 { pt3dadd( 358.294, 367.709, 57.4081, 0.3136 ) }
    dend_37 { pt3dadd( 359.389, 367.377, 57.4865, 0.3062 ) }
    dend_37 { pt3dadd( 360.478, 367.032, 57.5714, 0.3036 ) }
    dend_37 { pt3dadd( 361.512, 366.547, 57.7231, 0.3494 ) }
    dend_37 { pt3dadd( 362.55, 366.071, 57.8659, 0.3932 ) }
    dend_37 { pt3dadd( 363.625, 365.678, 57.9183, 0.4184 ) }
    dend_37 { pt3dadd( 364.648, 365.229, 57.9891, 0.4382 ) }
    dend_37 { pt3dadd( 365.177, 364.22, 58.2414, 0.4064 ) }
    dend_37 { pt3dadd( 365.525, 363.139, 58.3699, 0.3598 ) }
    dend_37 { pt3dadd( 365.797, 362.028, 58.4478, 0.3068 ) }
    dend_37 { pt3dadd( 366.24, 360.98, 58.5169, 0.3168 ) }
    dend_37 { pt3dadd( 366.751, 359.957, 58.583, 0.3514 ) }
    dend_37 { pt3dadd( 366.8, 358.841, 58.69, 0.4144 ) }
    dend_37 { pt3dadd( 366.725, 357.7, 58.8081, 0.485 ) }
    dend_37 { pt3dadd( 366.994, 356.601, 58.854, 0.42 ) }
    dend_37 { pt3dadd( 367.337, 355.509, 58.8848, 0.326 ) }
    dend_37 { pt3dadd( 367.556, 354.388, 58.8585, 0.2954 ) }
    dend_37 { pt3dadd( 367.749, 353.26, 58.8207, 0.2774 ) }
    dend_37 { pt3dadd( 368.096, 352.177, 58.5869, 0.2746 ) }
    dend_37 { pt3dadd( 368.469, 351.102, 58.3167, 0.2746 ) }
    dend_37 { pt3dadd( 368.732, 349.988, 58.2534, 0.2746 ) }
    dend_37 { pt3dadd( 368.983, 348.873, 58.2078, 0.2746 ) }
    dend_37 { pt3dadd( 368.956, 347.733, 58.256, 0.2746 ) }
    dend_37 { pt3dadd( 368.908, 346.59, 58.3108, 0.2746 ) }
    dend_37 { pt3dadd( 369.514, 345.637, 58.497, 0.275 ) }
    dend_37 { pt3dadd( 370.065, 344.662, 58.6956, 0.2752 ) }
    dend_37 { pt3dadd( 370.147, 343.525, 58.9165, 0.276 ) }
    dend_37 { pt3dadd( 370.177, 342.389, 59.1595, 0.2772 ) }
    dend_37 { pt3dadd( 370.059, 341.258, 59.4642, 0.2796 ) }
    dend_37 { pt3dadd( 369.99, 340.127, 59.7943, 0.284 ) }
    dend_37 { pt3dadd( 370.056, 338.996, 60.1922, 0.2936 ) }
    dend_37 { pt3dadd( 370.138, 337.864, 60.5436, 0.3092 ) }
    dend_37 { pt3dadd( 370.26, 336.732, 60.7765, 0.3404 ) }
    dend_37 { pt3dadd( 370.375, 335.597, 61.0145, 0.3522 ) }
    dend_37 { pt3dadd( 370.473, 334.462, 61.2651, 0.315 ) }
    dend_37 { pt3dadd( 370.641, 333.34, 61.4552, 0.2872 ) }
    dend_37 { pt3dadd( 370.982, 332.249, 61.4984, 0.283 ) }
    dend_37 { pt3dadd( 371.335, 331.16, 61.4897, 0.2826 ) }
    dend_37 { pt3dadd( 371.71, 330.081, 61.3715, 0.2904 ) }
    dend_37 { pt3dadd( 372.037, 328.987, 61.2688, 0.3066 ) }
    dend_37 { pt3dadd( 372.29, 327.871, 61.1884, 0.335 ) }
    dend_37 { pt3dadd( 372.405, 326.746, 61.1988, 0.335 ) }
    dend_37 { pt3dadd( 372.332, 325.605, 61.332, 0.2964 ) }
    dend_37 { pt3dadd( 372.369, 324.469, 61.5009, 0.2766 ) }
    dend_37 { pt3dadd( 372.517, 323.339, 61.707, 0.2764 ) }
    dend_37 { pt3dadd( 372.594, 322.202, 61.8716, 0.277 ) }
    dend_37 { pt3dadd( 372.599, 321.059, 61.9951, 0.2788 ) }
    dend_37 { pt3dadd( 372.654, 319.921, 62.2056, 0.2852 ) }
    dend_37 { pt3dadd( 372.758, 318.788, 62.5027, 0.2958 ) }
    dend_37 { pt3dadd( 372.931, 317.665, 62.771, 0.323 ) }
    dend_37 { pt3dadd( 373.172, 316.551, 63.0126, 0.3658 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_37 { pt3dadd( 373.493, 315.458, 63.1067, 0.3998 ) }
    dend_37 { pt3dadd( 373.892, 314.386, 63.0647, 0.4256 ) }
    dend_37 { pt3dadd( 374.203, 313.29, 62.9476, 0.41 ) }
    dend_37 { pt3dadd( 374.438, 312.172, 62.7654, 0.3584 ) }
    dend_37 { pt3dadd( 374.628, 311.047, 62.6567, 0.3198 ) }
    dend_37 { pt3dadd( 374.785, 309.913, 62.5999, 0.2902 ) }
    dend_37 { pt3dadd( 374.817, 308.774, 62.6534, 0.2872 ) }
    dend_37 { pt3dadd( 374.792, 307.631, 62.7572, 0.2964 ) }
    dend_37 { pt3dadd( 375.073, 306.55, 62.5108, 0.312 ) }
    dend_37 { pt3dadd( 375.488, 305.496, 62.113, 0.3306 ) }
    dend_37 { pt3dadd( 375.773, 304.394, 62.1225, 0.3118 ) }
    dend_37 { pt3dadd( 376.021, 303.279, 62.2502, 0.282 ) }
    dend_37 { pt3dadd( 376.076, 302.158, 62.7273, 0.2834 ) }
    dend_37 { pt3dadd( 376.099, 301.034, 63.2621, 0.29 ) }
    dend_37 { pt3dadd( 376.418, 299.942, 63.4606, 0.3162 ) }
    dend_37 { pt3dadd( 376.755, 298.852, 63.639, 0.3438 ) }
    dend_37 { pt3dadd( 377.215, 297.822, 63.1932, 0.3358 ) }
    dend_37 { pt3dadd( 377.68, 296.796, 62.7124, 0.3258 ) }
    dend_37 { pt3dadd( 378.266, 295.818, 62.4632, 0.3434 ) }
    dend_37 { pt3dadd( 378.823, 294.833, 62.2289, 0.3588 ) }
    dend_37 { pt3dadd( 378.888, 293.691, 62.1029, 0.323 ) }
    dend_37 { pt3dadd( 378.961, 292.552, 62.0018, 0.2906 ) }
    dend_37 { pt3dadd( 379.128, 291.423, 62.1774, 0.2972 ) }
    dend_37 { pt3dadd( 379.316, 290.301, 62.3913, 0.3072 ) }
    dend_37 { pt3dadd( 379.742, 289.27, 63.0146, 0.353 ) }
    dend_37 { pt3dadd( 380.158, 288.233, 63.6146, 0.3928 ) }
    dend_37 { pt3dadd( 380.526, 287.168, 64.0805, 0.3986 ) }
    dend_37 { pt3dadd( 380.891, 286.098, 64.5235, 0.4082 ) }
    dend_37 { pt3dadd( 381.235, 285.015, 64.8458, 0.438 ) }
    dend_37 { pt3dadd( 381.455, 283.925, 65.1879, 0.456 ) }
    dend_37 { pt3dadd( 381.267, 282.808, 65.5976, 0.4354 ) }
    dend_37 { pt3dadd( 381.301, 281.725, 66.0257, 0.4088 ) }
    dend_37 { pt3dadd( 381.781, 280.703, 66.4899, 0.3702 ) }
    dend_37 { pt3dadd( 381.684, 279.637, 66.563, 0.352 ) }
    dend_37 { pt3dadd( 381.328, 278.55, 66.4616, 0.343 ) }
    dend_37 { pt3dadd( 381.516, 277.449, 66.1956, 0.4184 ) }
    dend_37 { pt3dadd( 381.789, 276.345, 65.9028, 0.5076 ) }
    dend_37 { pt3dadd( 382.447, 275.411, 65.8095, 0.516 ) }
    dend_37 { pt3dadd( 383.052, 274.457, 65.7597, 0.5084 ) }
    dend_37 { pt3dadd( 383.24, 273.332, 65.9918, 0.3986 ) }
    dend_37 { pt3dadd( 383.471, 272.219, 66.206, 0.3146 ) }
    dend_37 { pt3dadd( 383.895, 271.158, 66.3429, 0.3424 ) }
    dend_37 { pt3dadd( 384.281, 270.086, 66.484, 0.3608 ) }
    dend_37 { pt3dadd( 384.522, 268.969, 66.6422, 0.3436 ) }
    dend_37 { pt3dadd( 384.759, 267.852, 66.7677, 0.339 ) }
    dend_37 { pt3dadd( 384.982, 266.729, 66.7724, 0.3808 ) }
    dend_37 { pt3dadd( 385.181, 265.605, 66.8402, 0.4254 ) }
    dend_37 { pt3dadd( 385.313, 264.472, 67.081, 0.4772 ) }
    dend_37 { pt3dadd( 385.487, 263.346, 67.2619, 0.497 ) }
    dend_37 { pt3dadd( 385.764, 262.237, 67.2972, 0.4386 ) }
    dend_37 { pt3dadd( 385.975, 261.117, 67.3501, 0.3836 ) }
    dend_37 { pt3dadd( 386.046, 259.976, 67.4414, 0.336 ) }
    dend_37 { pt3dadd( 386.141, 258.838, 67.5298, 0.3108 ) }
    dend_37 { pt3dadd( 386.291, 257.703, 67.6122, 0.3304 ) }
    dend_37 { pt3dadd( 386.491, 256.58, 67.6861, 0.3306 ) }
    dend_37 { pt3dadd( 386.776, 255.472, 67.7457, 0.299 ) }
    dend_37 { pt3dadd( 387.076, 254.368, 67.8423, 0.2788 ) }
    dend_37 { pt3dadd( 387.395, 253.272, 67.9974, 0.2762 ) }
    dend_37 { pt3dadd( 387.818, 252.22, 68.1366, 0.2746 ) }
    dend_37 { pt3dadd( 388.393, 251.232, 68.252, 0.2746 ) }
    dend_37 { pt3dadd( 388.848, 250.194, 68.374, 0.2746 ) }
    dend_37 { pt3dadd( 389.141, 249.089, 68.5056, 0.2746 ) }
    dend_37 { pt3dadd( 389.36, 247.971, 68.6546, 0.2746 ) }
    dend_37 { pt3dadd( 389.493, 246.837, 68.8251, 0.2746 ) }
    dend_37 { pt3dadd( 389.788, 245.755, 69.1074, 0.2746 ) }
    dend_37 { pt3dadd( 390.272, 244.731, 69.519, 0.275 ) }
    dend_37 { pt3dadd( 391.027, 244.025, 70.079, 0.2754 ) }
    dend_37 { pt3dadd( 392.068, 243.651, 70.7958, 0.276 ) }
    dend_37 { pt3dadd( 393.151, 243.353, 71.3082, 0.2776 ) }
    dend_37 { pt3dadd( 394.249, 243.085, 71.7382, 0.2796 ) }
    dend_37 { pt3dadd( 395.323, 242.695, 71.7186, 0.2548 ) }
    dend_37 { pt3dadd( 396.396, 242.299, 71.68, 0.2288 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 72/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 354.193, 374.895, 55.4039, 1.4982 ) }
    dend_34 { pt3dadd( 355.317, 374.94, 55.9084, 0.685 ) }
    dend_34 { pt3dadd( 356.333, 374.639, 56.9358, 0.6406 ) }
    dend_34 { pt3dadd( 357.438, 374.703, 57.1715, 0.6406 ) }
    dend_34 { pt3dadd( 358.567, 374.88, 57.1684, 0.6406 ) }
    dend_34 { pt3dadd( 359.602, 375.344, 57.185, 0.6406 ) }
    dend_34 { pt3dadd( 360.613, 375.879, 57.206, 0.6406 ) }
    dend_34 { pt3dadd( 361.633, 376.395, 57.1659, 0.6406 ) }
    dend_34 { pt3dadd( 362.656, 376.907, 57.115, 0.6406 ) }
    dend_34 { pt3dadd( 363.62, 377.521, 57.0626, 0.6406 ) }
    dend_34 { pt3dadd( 364.578, 378.147, 57.01, 0.6406 ) }
    dend_34 { pt3dadd( 365.539, 378.768, 57.0016, 0.6406 ) }
    dend_34 { pt3dadd( 366.5, 379.388, 56.9951, 0.6406 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 85/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 352.982, 379.101, 55.902, 2.3952 ) }
    dend_33 { pt3dadd( 353.81, 380.95, 58.1798, 0.6864 ) }
    dend_33 { pt3dadd( 353.639, 382.003, 59.1833, 0.6864 ) }
    dend_33 { pt3dadd( 353.529, 383.079, 60.051, 0.6864 ) }
    dend_33 { pt3dadd( 353.552, 384.198, 60.6259, 0.6864 ) }
    dend_33 { pt3dadd( 353.732, 385.284, 61.089, 0.6864 ) }
    dend_33 { pt3dadd( 354.249, 386.301, 61.3147, 0.6864 ) }
    dend_33 { pt3dadd( 354.76, 387.319, 61.5628, 0.6864 ) }
    dend_33 { pt3dadd( 355.26, 388.341, 61.8526, 0.6864 ) }
    dend_33 { pt3dadd( 355.454, 389.376, 62.2168, 0.6864 ) }
    dend_33 { pt3dadd( 355.076, 390.437, 62.72, 0.6864 ) }
    dend_33 { pt3dadd( 354.449, 391.311, 63.236, 0.6864 ) }
    dend_33 { pt3dadd( 353.549, 391.982, 63.7661, 0.6864 ) }
    dend_33 { pt3dadd( 352.742, 392.758, 64.2222, 0.6864 ) }
    dend_33 { pt3dadd( 352.035, 393.645, 64.5999, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_33 { pt3dadd( 351.402, 394.582, 64.9625, 0.6864 ) }
    dend_33 { pt3dadd( 350.841, 395.569, 65.3106, 0.6864 ) }
    dend_33 { pt3dadd( 350.363, 396.591, 65.7163, 0.6864 ) }
    dend_33 { pt3dadd( 349.965, 397.646, 66.1772, 0.6864 ) }
    dend_33 { pt3dadd( 349.365, 398.598, 66.423, 0.6864 ) }
    dend_33 { pt3dadd( 348.652, 399.492, 66.5479, 0.6864 ) }
    dend_33 { pt3dadd( 348.096, 400.48, 66.743, 0.6864 ) }
    dend_33 { pt3dadd( 347.611, 401.512, 66.9696, 0.6864 ) }
    dend_33 { pt3dadd( 347.138, 402.551, 67.1367, 0.6864 ) }
    dend_33 { pt3dadd( 346.669, 403.593, 67.2776, 0.6864 ) }
    dend_33 { pt3dadd( 346.15, 404.6, 67.6421, 0.6864 ) }
    dend_33 { pt3dadd( 345.615, 405.594, 68.0893, 0.6864 ) }
    dend_33 { pt3dadd( 345.335, 406.669, 68.6501, 0.6864 ) }
    dend_33 { pt3dadd( 345.136, 407.768, 69.2395, 0.6864 ) }
    dend_33 { pt3dadd( 345.254, 408.888, 69.7371, 0.6864 ) }
    dend_33 { pt3dadd( 345.234, 409.97, 70.2394, 0.6864 ) }
    dend_33 { pt3dadd( 344.562, 410.871, 70.7633, 0.6864 ) }
    dend_33 { pt3dadd( 343.931, 411.799, 71.253, 0.6864 ) }
    dend_33 { pt3dadd( 343.439, 412.82, 71.6248, 0.6864 ) }
    dend_33 { pt3dadd( 342.977, 413.855, 71.9751, 0.6864 ) }
    dend_33 { pt3dadd( 342.599, 414.929, 72.2576, 0.6864 ) }
    dend_33 { pt3dadd( 342.24, 416.009, 72.5231, 0.6864 ) }
    dend_33 { pt3dadd( 341.932, 417.108, 72.7364, 0.6864 ) }
    dend_33 { pt3dadd( 341.622, 418.205, 72.9669, 0.6864 ) }
    dend_33 { pt3dadd( 341.307, 419.299, 73.2382, 0.6864 ) }
    dend_33 { pt3dadd( 340.99, 420.391, 73.5199, 0.6864 ) }
    dend_33 { pt3dadd( 340.668, 421.483, 73.8214, 0.6864 ) }
    dend_33 { pt3dadd( 340.474, 422.589, 74.1233, 0.6864 ) }
    dend_33 { pt3dadd( 340.526, 423.725, 74.4251, 0.6864 ) }
    dend_33 { pt3dadd( 340.485, 424.854, 74.7323, 0.6864 ) }
    dend_33 { pt3dadd( 340.264, 425.97, 75.049, 0.6864 ) }
    dend_33 { pt3dadd( 339.977, 427.067, 75.3116, 0.6864 ) }
    dend_33 { pt3dadd( 339.564, 428.132, 75.4737, 0.6864 ) }
    dend_33 { pt3dadd( 339.307, 429.223, 75.6784, 0.6864 ) }
    dend_33 { pt3dadd( 339.339, 430.36, 75.9618, 0.6864 ) }
    dend_33 { pt3dadd( 339.154, 431.462, 76.2544, 0.6864 ) }
    dend_33 { pt3dadd( 338.758, 432.528, 76.5562, 0.6864 ) }
    dend_33 { pt3dadd( 338.419, 433.614, 76.8214, 0.6864 ) }
    dend_33 { pt3dadd( 338.132, 434.718, 77.0526, 0.6864 ) }
    dend_33 { pt3dadd( 338.035, 435.84, 77.2845, 0.6864 ) }
    dend_33 { pt3dadd( 338.095, 436.978, 77.516, 0.6864 ) }
    dend_33 { pt3dadd( 338.221, 438.111, 77.7118, 0.6864 ) }
    dend_33 { pt3dadd( 338.397, 439.24, 77.8798, 0.6864 ) }
    dend_33 { pt3dadd( 338.516, 440.374, 78.0828, 0.6864 ) }
    dend_33 { pt3dadd( 338.596, 441.511, 78.3065, 0.6864 ) }
    dend_33 { pt3dadd( 338.764, 442.637, 78.5579, 0.6864 ) }
    dend_33 { pt3dadd( 338.977, 443.755, 78.8245, 0.6864 ) }
    dend_33 { pt3dadd( 338.897, 444.879, 79.1168, 0.6864 ) }
    dend_33 { pt3dadd( 338.733, 446.004, 79.4167, 0.6864 ) }
    dend_33 { pt3dadd( 338.503, 447.121, 79.6155, 0.6864 ) }
    dend_33 { pt3dadd( 338.259, 448.236, 79.7913, 0.6864 ) }
    dend_33 { pt3dadd( 337.811, 449.284, 79.9196, 0.6864 ) }
    dend_33 { pt3dadd( 337.331, 450.322, 80.0411, 0.6864 ) }
    dend_33 { pt3dadd( 336.797, 451.333, 80.0615, 0.6864 ) }
    dend_33 { pt3dadd( 336.255, 452.34, 80.0696, 0.6864 ) }
    dend_33 { pt3dadd( 336.05, 453.461, 80.0722, 0.6864 ) }
    dend_33 { pt3dadd( 335.878, 454.591, 80.0741, 0.6864 ) }
    dend_33 { pt3dadd( 336.003, 455.727, 80.0503, 0.6864 ) }
    dend_33 { pt3dadd( 336.136, 456.863, 80.0257, 0.6864 ) }
    dend_33 { pt3dadd( 336.492, 457.95, 80.143, 0.6864 ) }
    dend_33 { pt3dadd( 336.845, 459.036, 80.2631, 0.6864 ) }
    dend_33 { pt3dadd( 336.927, 460.172, 80.5249, 0.6864 ) }
    dend_33 { pt3dadd( 337.016, 461.307, 80.7898, 0.6864 ) }
    dend_33 { pt3dadd( 337.378, 462.38, 81.1922, 0.6864 ) }
    dend_33 { pt3dadd( 337.728, 463.454, 81.5962, 0.6864 ) }
    dend_33 { pt3dadd( 337.673, 464.579, 82.0756, 0.6864 ) }
    dend_33 { pt3dadd( 337.586, 465.696, 82.5446, 0.6864 ) }
    dend_33 { pt3dadd( 336.995, 466.667, 82.8587, 0.6864 ) }
    dend_33 { pt3dadd( 336.43, 467.648, 83.1835, 0.6864 ) }
    dend_33 { pt3dadd( 336.167, 468.746, 83.6265, 0.6864 ) }
    dend_33 { pt3dadd( 335.968, 469.845, 84.1355, 0.6864 ) }
    dend_33 { pt3dadd( 336.016, 470.945, 84.8966, 0.6864 ) }
    dend_33 { pt3dadd( 336.003, 472.056, 85.519, 0.6864 ) }
    dend_33 { pt3dadd( 335.897, 473.182, 85.925, 0.6864 ) }
    dend_33 { pt3dadd( 335.874, 474.313, 86.2663, 0.6864 ) }
    dend_33 { pt3dadd( 335.966, 475.449, 86.5147, 0.6864 ) }
    dend_33 { pt3dadd( 336.245, 476.529, 86.802, 0.6864 ) }
    dend_33 { pt3dadd( 336.78, 477.53, 87.1436, 0.6864 ) }
    dend_33 { pt3dadd( 337.4, 478.425, 87.8968, 0.6864 ) }
    dend_33 { pt3dadd( 338.068, 479.259, 88.8924, 0.6864 ) }
    dend_33 { pt3dadd( 338.492, 479.806, 91.0258, 0.6864 ) }
    dend_33 { pt3dadd( 338.871, 480.298, 93.38, 0.6864 ) }
    dend_33 { pt3dadd( 339.108, 481.006, 95.4786, 0.6864 ) }
    dend_33 { pt3dadd( 339.322, 481.756, 97.5313, 0.6864 ) }
    dend_33 { pt3dadd( 339.376, 482.687, 99.1234, 0.6864 ) }
    dend_33 { pt3dadd( 339.404, 483.648, 100.637, 0.6864 ) }
    dend_33 { pt3dadd( 339.21, 484.733, 101.316, 0.6864 ) }
    dend_33 { pt3dadd( 338.993, 485.829, 101.916, 0.6864 ) }
    dend_33 { pt3dadd( 338.932, 486.966, 102.149, 0.6864 ) }
    dend_33 { pt3dadd( 338.885, 488.106, 102.35, 0.6864 ) }
    dend_33 { pt3dadd( 338.943, 489.248, 102.432, 0.6864 ) }
    dend_33 { pt3dadd( 339.009, 490.389, 102.505, 0.6864 ) }
    dend_33 { pt3dadd( 339.076, 491.531, 102.579, 0.6864 ) }
    dend_33 { pt3dadd( 339.143, 492.673, 102.653, 0.6864 ) }
    dend_33 { pt3dadd( 339.276, 493.809, 102.719, 0.6864 ) }
    dend_33 { pt3dadd( 339.414, 494.944, 102.784, 0.6864 ) }
    dend_33 { pt3dadd( 339.738, 496.039, 102.821, 0.6864 ) }
    dend_33 { pt3dadd( 340.076, 497.133, 102.855, 0.6864 ) }
    dend_33 { pt3dadd( 340.047, 498.273, 102.868, 0.6864 ) }
    dend_33 { pt3dadd( 339.993, 499.415, 102.88, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_33 { pt3dadd( 339.893, 500.555, 102.883, 0.6864 ) }
    dend_33 { pt3dadd( 339.79, 501.694, 102.886, 0.6864 ) }
    dend_33 { pt3dadd( 339.594, 502.821, 102.888, 0.6864 ) }
    dend_33 { pt3dadd( 339.395, 503.948, 102.892, 0.6864 ) }
    dend_33 { pt3dadd( 339.141, 505.063, 102.897, 0.6864 ) }
    dend_33 { pt3dadd( 338.886, 506.178, 102.903, 0.6864 ) }
    dend_33 { pt3dadd( 338.642, 507.297, 102.914, 0.6864 ) }
    dend_33 { pt3dadd( 338.4, 508.414, 102.925, 0.6864 ) }
    dend_33 { pt3dadd( 338.179, 509.536, 102.947, 0.6864 ) }
    dend_33 { pt3dadd( 337.958, 510.659, 102.969, 0.6864 ) }
    dend_33 { pt3dadd( 337.738, 511.781, 103.011, 0.6864 ) }
    dend_33 { pt3dadd( 337.518, 512.904, 103.055, 0.6864 ) }
    dend_33 { pt3dadd( 337.298, 514.026, 103.139, 0.6864 ) }
    dend_33 { pt3dadd( 337.078, 515.148, 103.225, 0.6864 ) }
    dend_33 { pt3dadd( 336.596, 516.181, 103.39, 0.6864 ) }
    dend_33 { pt3dadd( 336.113, 517.214, 103.576, 0.6864 ) }
    dend_33 { pt3dadd( 335.815, 518.304, 104.004, 0.6864 ) }
    dend_33 { pt3dadd( 335.585, 519.401, 104.465, 0.6864 ) }
    dend_33 { pt3dadd( 335.615, 520.518, 105.061, 0.6864 ) }
    dend_33 { pt3dadd( 335.565, 521.624, 105.655, 0.6864 ) }
    dend_33 { pt3dadd( 335.215, 522.687, 106.244, 0.6864 ) }
    dend_33 { pt3dadd( 334.749, 523.672, 106.873, 0.6864 ) }
    dend_33 { pt3dadd( 333.958, 524.439, 107.613, 0.6864 ) }
    dend_33 { pt3dadd( 333.235, 525.257, 108.371, 0.6864 ) }
    dend_33 { pt3dadd( 332.706, 526.217, 109.178, 0.6864 ) }
    dend_33 { pt3dadd( 332.198, 527.19, 109.959, 0.6864 ) }
    dend_33 { pt3dadd( 331.747, 528.201, 110.672, 0.6864 ) }
    dend_33 { pt3dadd( 331.3, 529.217, 111.34, 0.6864 ) }
    dend_33 { pt3dadd( 330.865, 530.251, 111.891, 0.6864 ) }
    dend_33 { pt3dadd( 330.578, 531.29, 112.583, 0.6864 ) }
    dend_33 { pt3dadd( 330.676, 532.346, 113.635, 0.6864 ) }
    dend_33 { pt3dadd( 330.956, 533.348, 114.548, 0.6864 ) }
    dend_33 { pt3dadd( 331.641, 534.23, 115.149, 0.6864 ) }
    dend_33 { pt3dadd( 332.216, 535.182, 115.664, 0.6864 ) }
    dend_33 { pt3dadd( 332.632, 536.235, 116.058, 0.6864 ) }
    dend_33 { pt3dadd( 333.102, 537.262, 116.474, 0.6864 ) }
    dend_33 { pt3dadd( 333.645, 538.253, 116.92, 0.6864 ) }
    dend_33 { pt3dadd( 334.347, 539.12, 117.309, 0.6864 ) }
    dend_33 { pt3dadd( 335.199, 539.87, 117.644, 0.6864 ) }
    dend_33 { pt3dadd( 336.02, 540.657, 117.958, 0.6864 ) }
    dend_33 { pt3dadd( 336.813, 541.471, 118.257, 0.6864 ) }
    dend_33 { pt3dadd( 337.654, 542.224, 118.664, 0.6864 ) }
    dend_33 { pt3dadd( 338.533, 542.929, 119.153, 0.6864 ) }
    dend_33 { pt3dadd( 339.365, 543.697, 119.463, 0.6864 ) }
    dend_33 { pt3dadd( 340.166, 544.512, 119.643, 0.6864 ) }
    dend_33 { pt3dadd( 340.88, 545.396, 119.858, 0.6864 ) }
    dend_33 { pt3dadd( 341.533, 546.331, 120.098, 0.6864 ) }
    dend_33 { pt3dadd( 342.198, 547.26, 120.11, 0.6864 ) }
    dend_33 { pt3dadd( 342.867, 548.187, 120.05, 0.6864 ) }
    dend_33 { pt3dadd( 343.641, 549.024, 120.215, 0.6864 ) }
    dend_33 { pt3dadd( 344.44, 549.835, 120.44, 0.6864 ) }
    dend_33 { pt3dadd( 345.061, 550.775, 120.837, 0.6864 ) }
    dend_33 { pt3dadd( 345.636, 551.748, 121.28, 0.6864 ) }
    dend_33 { pt3dadd( 346.23, 552.724, 121.336, 0.6864 ) }
    dend_33 { pt3dadd( 346.828, 553.698, 121.329, 0.6864 ) }
    dend_33 { pt3dadd( 347.074, 554.807, 121.227, 0.6864 ) }
    dend_33 { pt3dadd( 347.273, 555.931, 121.112, 0.6864 ) }
    dend_33 { pt3dadd( 347.383, 557.054, 120.642, 0.6864 ) }
    dend_33 { pt3dadd( 347.484, 558.174, 120.139, 0.6864 ) }
    dend_33 { pt3dadd( 347.783, 559.275, 120.091, 0.6864 ) }
    dend_33 { pt3dadd( 348.095, 560.376, 120.077, 0.6864 ) }
    dend_33 { pt3dadd( 348.068, 561.511, 120.418, 0.6864 ) }
    dend_33 { pt3dadd( 348.037, 562.646, 120.763, 0.6864 ) }
    dend_33 { pt3dadd( 348.359, 563.728, 121.211, 0.6864 ) }
    dend_33 { pt3dadd( 348.688, 564.808, 121.66, 0.6864 ) }
    dend_33 { pt3dadd( 349.168, 565.829, 122.114, 0.6864 ) }
    dend_33 { pt3dadd( 349.652, 566.849, 122.563, 0.6864 ) }
    dend_33 { pt3dadd( 350.232, 567.83, 122.819, 0.6864 ) }
    dend_33 { pt3dadd( 350.804, 568.814, 123.072, 0.6864 ) }
    dend_33 { pt3dadd( 351.076, 569.925, 123.143, 0.6864 ) }
    dend_33 { pt3dadd( 351.365, 571.025, 123.218, 0.6864 ) }
    dend_33 { pt3dadd( 352.207, 571.797, 123.363, 0.6864 ) }
    dend_33 { pt3dadd( 353.01, 572.597, 123.516, 0.6864 ) }
    dend_33 { pt3dadd( 353.44, 573.653, 123.733, 0.6864 ) }
    dend_33 { pt3dadd( 353.863, 574.714, 123.916, 0.6864 ) }
    dend_33 { pt3dadd( 354.271, 575.781, 124.034, 0.6864 ) }
    dend_33 { pt3dadd( 354.57, 576.878, 124.115, 0.6864 ) }
    dend_33 { pt3dadd( 354.733, 578.009, 124.15, 0.6864 ) }
    dend_33 { pt3dadd( 354.951, 579.132, 124.192, 0.6864 ) }
    dend_33 { pt3dadd( 355.211, 580.246, 124.237, 0.6864 ) }
    dend_33 { pt3dadd( 355.314, 581.377, 124.291, 0.6864 ) }
    dend_33 { pt3dadd( 355.307, 582.52, 124.35, 0.6864 ) }
    dend_33 { pt3dadd( 355.297, 583.664, 124.389, 0.6864 ) }
    dend_33 { pt3dadd( 355.283, 584.808, 124.414, 0.6864 ) }
    dend_33 { pt3dadd( 355.329, 585.95, 124.476, 0.6864 ) }
    dend_33 { pt3dadd( 355.416, 587.091, 124.562, 0.6864 ) }
    dend_33 { pt3dadd( 355.666, 588.198, 124.684, 0.6864 ) }
    dend_33 { pt3dadd( 356.016, 589.286, 124.828, 0.6864 ) }
    dend_33 { pt3dadd( 356.642, 590.214, 124.92, 0.6864 ) }
    dend_33 { pt3dadd( 357.414, 591.056, 124.984, 0.6864 ) }
    dend_33 { pt3dadd( 357.945, 592.049, 124.999, 0.6864 ) }
    dend_33 { pt3dadd( 358.353, 593.118, 124.989, 0.6864 ) }
    dend_33 { pt3dadd( 358.811, 594.165, 124.962, 0.6864 ) }
    dend_33 { pt3dadd( 359.29, 595.204, 124.928, 0.6864 ) }
    dend_33 { pt3dadd( 360.051, 596.027, 125.021, 0.6864 ) }
    dend_33 { pt3dadd( 360.924, 596.764, 125.165, 0.6864 ) }
    dend_33 { pt3dadd( 361.51, 597.722, 125.219, 0.6864 ) }
    dend_33 { pt3dadd( 361.99, 598.76, 125.239, 0.6864 ) }
    dend_33 { pt3dadd( 362.882, 599.394, 125.194, 0.6864 ) }
    dend_33 { pt3dadd( 363.912, 599.891, 125.126, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( 364.8, 600.595, 125.036, 0.6864 ) }
    dend_33 { pt3dadd( 365.646, 601.365, 124.938, 0.6864 ) }
    dend_33 { pt3dadd( 366.357, 602.255, 124.803, 0.6864 ) }
    dend_33 { pt3dadd( 367.033, 603.176, 124.659, 0.6864 ) }
    dend_33 { pt3dadd( 367.755, 604.063, 124.598, 0.6864 ) }
    dend_33 { pt3dadd( 368.488, 604.942, 124.557, 0.6864 ) }
    dend_33 { pt3dadd( 368.839, 606.01, 124.619, 0.6864 ) }
    dend_33 { pt3dadd( 369.105, 607.122, 124.705, 0.6864 ) }
    dend_33 { pt3dadd( 369.664, 608.112, 124.755, 0.6864 ) }
    dend_33 { pt3dadd( 370.271, 609.082, 124.8, 0.6864 ) }
    dend_33 { pt3dadd( 370.565, 610.179, 124.964, 0.6864 ) }
    dend_33 { pt3dadd( 370.817, 611.292, 125.144, 0.6864 ) }
    dend_33 { pt3dadd( 370.768, 612.423, 125.453, 0.6864 ) }
    dend_33 { pt3dadd( 370.686, 613.557, 125.776, 0.6864 ) }
    dend_33 { pt3dadd( 371.296, 614.505, 126.034, 0.6864 ) }
    dend_33 { pt3dadd( 371.929, 615.45, 126.287, 0.6864 ) }
    dend_33 { pt3dadd( 372.365, 616.505, 126.503, 0.6864 ) }
    dend_33 { pt3dadd( 372.771, 617.563, 126.716, 0.6864 ) }
    dend_33 { pt3dadd( 372.641, 618.698, 126.892, 0.6864 ) }
    dend_33 { pt3dadd( 372.51, 619.832, 127.065, 0.6864 ) }
    dend_33 { pt3dadd( 372.389, 620.968, 127.21, 0.6864 ) }
    dend_33 { pt3dadd( 372.427, 622.058, 127.439, 0.6864 ) }
    dend_33 { pt3dadd( 373.073, 622.976, 127.988, 0.6864 ) }
    dend_33 { pt3dadd( 373.618, 623.934, 128.554, 0.6864 ) }
    dend_33 { pt3dadd( 373.827, 625.029, 129.177, 0.6864 ) }
    dend_33 { pt3dadd( 374.128, 626.094, 129.749, 0.6864 ) }
    dend_33 { pt3dadd( 374.706, 627.066, 130.167, 0.6864 ) }
    dend_33 { pt3dadd( 375.34, 627.999, 130.544, 0.6864 ) }
    dend_33 { pt3dadd( 376.135, 628.815, 130.8, 0.6864 ) }
    dend_33 { pt3dadd( 376.987, 629.547, 131.126, 0.6864 ) }
    dend_33 { pt3dadd( 377.987, 630.061, 131.639, 0.6864 ) }
    dend_33 { pt3dadd( 378.943, 630.651, 132.065, 0.6864 ) }
    dend_33 { pt3dadd( 379.81, 631.39, 132.316, 0.6864 ) }
    dend_33 { pt3dadd( 380.651, 632.158, 132.44, 0.6864 ) }
    dend_33 { pt3dadd( 381.44, 632.984, 132.312, 0.6864 ) }
    dend_33 { pt3dadd( 382.27, 633.763, 132.344, 0.6864 ) }
    dend_33 { pt3dadd( 383.171, 634.454, 132.667, 0.6864 ) }
    dend_33 { pt3dadd( 383.801, 635.355, 133.118, 0.6864 ) }
    dend_33 { pt3dadd( 384.274, 636.374, 133.644, 0.6864 ) }
    dend_33 { pt3dadd( 384.741, 637.409, 133.956, 0.6864 ) }
    dend_33 { pt3dadd( 385.205, 638.45, 134.204, 0.6864 ) }
    dend_33 { pt3dadd( 385.992, 639.26, 134.461, 0.6864 ) }
    dend_33 { pt3dadd( 386.823, 640.041, 134.72, 0.6864 ) }
    dend_33 { pt3dadd( 387.83, 640.498, 135.342, 0.6864 ) }
    dend_33 { pt3dadd( 388.826, 640.96, 136.002, 0.6864 ) }
    dend_33 { pt3dadd( 389.503, 641.849, 136.604, 0.6864 ) }
    dend_33 { pt3dadd( 390.221, 642.689, 137.219, 0.6864 ) }
    dend_33 { pt3dadd( 391.186, 643.232, 137.921, 0.6864 ) }
    dend_33 { pt3dadd( 392.175, 643.74, 138.516, 0.6864 ) }
    dend_33 { pt3dadd( 393.258, 644.099, 138.674, 0.6864 ) }
    dend_33 { pt3dadd( 394.32, 644.509, 138.732, 0.6864 ) }
    dend_33 { pt3dadd( 395.303, 645.08, 138.458, 0.6864 ) }
    dend_33 { pt3dadd( 396.189, 645.769, 138.258, 0.6864 ) }
    dend_33 { pt3dadd( 396.888, 646.674, 138.198, 0.6864 ) }
    dend_33 { pt3dadd( 397.611, 647.56, 138.15, 0.6864 ) }
    dend_33 { pt3dadd( 398.372, 648.415, 138.123, 0.6864 ) }
    dend_33 { pt3dadd( 399.142, 649.26, 138.115, 0.6864 ) }
    dend_33 { pt3dadd( 399.929, 650.091, 138.139, 0.6864 ) }
    dend_33 { pt3dadd( 400.661, 650.961, 138.275, 0.6864 ) }
    dend_33 { pt3dadd( 401.307, 651.896, 138.592, 0.6864 ) }
    dend_33 { pt3dadd( 401.801, 652.906, 138.993, 0.6864 ) }
    dend_33 { pt3dadd( 402.199, 653.962, 139.446, 0.6864 ) }
    dend_33 { pt3dadd( 402.728, 654.964, 139.566, 0.6864 ) }
    dend_33 { pt3dadd( 403.336, 655.933, 139.485, 0.6864 ) }
    dend_33 { pt3dadd( 403.869, 656.942, 139.379, 0.6864 ) }
    dend_33 { pt3dadd( 404.361, 657.974, 139.259, 0.6864 ) }
    dend_33 { pt3dadd( 404.854, 659.005, 139.148, 0.6864 ) }
    dend_33 { pt3dadd( 405.347, 660.036, 139.043, 0.6864 ) }
    dend_33 { pt3dadd( 405.991, 660.974, 138.974, 0.6864 ) }
    dend_33 { pt3dadd( 406.711, 661.861, 138.924, 0.6864 ) }
    dend_33 { pt3dadd( 407.186, 662.885, 138.858, 0.6864 ) }
    dend_33 { pt3dadd( 407.557, 663.967, 138.786, 0.6864 ) }
    dend_33 { pt3dadd( 408.152, 664.941, 138.745, 0.6864 ) }
    dend_33 { pt3dadd( 408.755, 665.911, 138.713, 0.6864 ) }
    dend_33 { pt3dadd( 409.145, 666.985, 138.746, 0.6864 ) }
    dend_33 { pt3dadd( 409.546, 668.056, 138.769, 0.6864 ) }
    dend_33 { pt3dadd( 410.043, 669.087, 138.702, 0.6864 ) }
    dend_33 { pt3dadd( 410.559, 670.106, 138.642, 0.6864 ) }
    dend_33 { pt3dadd( 411.249, 671.018, 138.639, 0.6864 ) }
    dend_33 { pt3dadd( 411.854, 671.968, 138.65, 0.6864 ) }
    dend_33 { pt3dadd( 412.072, 673.091, 138.723, 0.6864 ) }
    dend_33 { pt3dadd( 412.298, 674.209, 138.845, 0.6864 ) }
    dend_33 { pt3dadd( 412.553, 675.317, 139.183, 0.6864 ) }
    dend_33 { pt3dadd( 412.803, 676.424, 139.517, 0.6864 ) }
    dend_33 { pt3dadd( 413.035, 677.537, 139.834, 0.6864 ) }
    dend_33 { pt3dadd( 413.242, 678.655, 140.117, 0.6864 ) }
    dend_33 { pt3dadd( 413.373, 679.79, 140.287, 0.6864 ) }
    dend_33 { pt3dadd( 413.529, 680.92, 140.463, 0.6864 ) }
    dend_33 { pt3dadd( 413.754, 682.039, 140.657, 0.6864 ) }
    dend_33 { pt3dadd( 414.166, 683.055, 140.812, 0.6864 ) }
    dend_33 { pt3dadd( 414.992, 683.847, 140.882, 0.6864 ) }
    dend_33 { pt3dadd( 415.712, 684.713, 141.037, 0.6864 ) }
    dend_33 { pt3dadd( 416.227, 685.726, 141.357, 0.6864 ) }
    dend_33 { pt3dadd( 416.523, 686.789, 141.733, 0.6864 ) }
    dend_33 { pt3dadd( 416.529, 687.918, 142.183, 0.6864 ) }
    dend_33 { pt3dadd( 416.496, 689.046, 142.633, 0.6864 ) }
    dend_33 { pt3dadd( 416.422, 690.173, 143.083, 0.6864 ) }
    dend_33 { pt3dadd( 416.273, 691.292, 143.508, 0.6864 ) }
    dend_33 { pt3dadd( 416.06, 692.404, 143.911, 0.6864 ) }
    dend_33 { pt3dadd( 415.568, 693.386, 144.318, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_33 { pt3dadd( 414.859, 694.267, 144.728, 0.6864 ) }
    dend_33 { pt3dadd( 414.218, 695.194, 145.19, 0.6864 ) }
    dend_33 { pt3dadd( 413.632, 696.154, 145.692, 0.6864 ) }
    dend_33 { pt3dadd( 412.985, 697.08, 146.11, 0.6864 ) }
    dend_33 { pt3dadd( 412.301, 697.985, 146.476, 0.6864 ) }
    dend_33 { pt3dadd( 412.089, 699.06, 146.557, 0.6864 ) }
    dend_33 { pt3dadd( 412.072, 700.203, 146.522, 0.6864 ) }
    dend_33 { pt3dadd( 412.069, 701.346, 146.466, 0.6864 ) }
    dend_33 { pt3dadd( 412.069, 702.49, 146.407, 0.6864 ) }
    dend_33 { pt3dadd( 412.647, 703.449, 146.469, 0.6864 ) }
    dend_33 { pt3dadd( 413.283, 704.394, 146.557, 0.6864 ) }
    dend_33 { pt3dadd( 413.587, 705.495, 146.736, 0.6864 ) }
    dend_33 { pt3dadd( 413.824, 706.607, 146.85, 0.6864 ) }
    dend_33 { pt3dadd( 413.899, 707.748, 146.809, 0.6864 ) }
    dend_33 { pt3dadd( 414.121, 708.848, 146.844, 0.6864 ) }
    dend_33 { pt3dadd( 414.648, 709.86, 147.035, 0.6864 ) }
    dend_33 { pt3dadd( 415.12, 710.892, 147.308, 0.6864 ) }
    dend_33 { pt3dadd( 415.488, 711.961, 147.729, 0.6864 ) }
    dend_33 { pt3dadd( 416.056, 712.892, 148.195, 0.6864 ) }
    dend_33 { pt3dadd( 416.911, 713.619, 148.725, 0.6864 ) }
    dend_33 { pt3dadd( 417.882, 714.147, 149.055, 0.6864 ) }
    dend_33 { pt3dadd( 418.988, 714.434, 149.144, 0.6864 ) }
    dend_33 { pt3dadd( 419.847, 715.071, 149.277, 0.6864 ) }
    dend_33 { pt3dadd( 420.491, 716.015, 149.447, 0.6864 ) }
    dend_33 { pt3dadd( 421.156, 716.944, 149.57, 0.6864 ) }
    dend_33 { pt3dadd( 421.836, 717.863, 149.656, 0.6864 ) }
    dend_33 { pt3dadd( 422.612, 718.694, 149.787, 0.6864 ) }
    dend_33 { pt3dadd( 423.462, 719.457, 149.954, 0.6864 ) }
    dend_33 { pt3dadd( 424.107, 720.375, 150.08, 0.6864 ) }
    dend_33 { pt3dadd( 424.613, 721.401, 150.179, 0.6864 ) }
    dend_33 { pt3dadd( 424.961, 722.483, 150.243, 0.6864 ) }
    dend_33 { pt3dadd( 425.218, 723.597, 150.288, 0.6864 ) }
    dend_33 { pt3dadd( 425.322, 724.73, 150.172, 0.6864 ) }
    dend_33 { pt3dadd( 425.358, 725.871, 149.987, 0.6864 ) }
    dend_33 { pt3dadd( 425.492, 726.991, 149.563, 0.6864 ) }
    dend_33 { pt3dadd( 425.654, 728.107, 149.078, 0.6864 ) }
    dend_33 { pt3dadd( 426.011, 729.182, 148.798, 0.6864 ) }
    dend_33 { pt3dadd( 426.415, 730.248, 148.567, 0.6864 ) }
    dend_33 { pt3dadd( 426.628, 731.368, 148.514, 0.6864 ) }
    dend_33 { pt3dadd( 426.806, 732.499, 148.495, 0.6864 ) }
    dend_33 { pt3dadd( 427.367, 733.481, 148.714, 0.6864 ) }
    dend_33 { pt3dadd( 427.97, 734.448, 148.96, 0.6864 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 42/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 347.977, 367.21, 53.0048, 1.3594 ) }
    dend_26 { pt3dadd( 347.984, 366.066, 52.974, 0.9386 ) }
    dend_26 { pt3dadd( 347.839, 364.933, 52.8842, 0.9152 ) }
    dend_26 { pt3dadd( 347.682, 363.8, 52.7906, 0.9152 ) }
    dend_26 { pt3dadd( 347.83, 362.669, 52.6652, 0.9152 ) }
    dend_26 { pt3dadd( 347.995, 361.537, 52.5384, 0.9152 ) }
    dend_26 { pt3dadd( 348.236, 360.419, 52.5585, 0.9152 ) }
    dend_26 { pt3dadd( 348.48, 359.302, 52.5843, 0.9152 ) }
    dend_26 { pt3dadd( 348.704, 358.181, 52.5591, 0.9152 ) }
    dend_26 { pt3dadd( 348.928, 357.058, 52.5319, 0.9152 ) }
    dend_26 { pt3dadd( 349.122, 355.934, 52.3306, 0.9152 ) }
    dend_26 { pt3dadd( 349.316, 354.809, 52.1248, 0.9152 ) }
    dend_26 { pt3dadd( 349.211, 353.677, 51.8566, 0.9152 ) }
    dend_26 { pt3dadd( 349.097, 352.544, 51.5866, 0.9152 ) }
    dend_26 { pt3dadd( 349.185, 351.406, 51.4086, 0.9152 ) }
    dend_26 { pt3dadd( 349.276, 350.268, 51.2313, 0.9152 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 58/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 341.121, 377.518, 52.08, 0.7116 ) }
    dend_16 { pt3dadd( 339.988, 377.662, 52.0246, 0.7098 ) }
    dend_16 { pt3dadd( 338.853, 377.807, 51.9691, 0.7092 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 348.753, 382.13, 47.0425, 0.717 ) }
    dend_0 { pt3dadd( 349.201, 383.181, 46.8538, 0.7092 ) }
    dend_0 { pt3dadd( 349.651, 384.23, 46.6673, 0.7092 ) }
    dend_0 { pt3dadd( 349.96, 385.33, 46.559, 0.7092 ) }
    dend_0 { pt3dadd( 350.266, 386.432, 46.4506, 0.7092 ) }
    dend_0 { pt3dadd( 350.336, 387.573, 46.3929, 0.7092 ) }
    dend_0 { pt3dadd( 350.408, 388.715, 46.3352, 0.7092 ) }
    dend_0 { pt3dadd( 350.96, 389.717, 46.2815, 0.7092 ) }
    dend_0 { pt3dadd( 351.51, 390.72, 46.2277, 0.7092 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 70/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 359.23, 402.406, 52.08, 1.0 ) }
    axon_1 { pt3dadd( 365.071, 416.222, 52.08, 1.0 ) }
    axon_1 { pt3dadd( 370.913, 430.038, 52.08, 1.0 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 73/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 301.902, 384.282, 63.88, 0.6864 ) }
    dend_42 { pt3dadd( 300.503, 384.624, 62.8096, 0.4102 ) }
    dend_42 { pt3dadd( 299.424, 384.352, 62.4848, 0.3788 ) }
    dend_42 { pt3dadd( 298.344, 383.989, 62.2443, 0.3782 ) }
    dend_42 { pt3dadd( 297.274, 383.588, 62.1051, 0.387 ) }
    dend_42 { pt3dadd( 296.206, 383.184, 61.973, 0.3966 ) }
    dend_42 { pt3dadd( 295.139, 382.769, 61.9447, 0.3692 ) }
    dend_42 { pt3dadd( 294.074, 382.352, 61.9212, 0.3404 ) }
    dend_42 { pt3dadd( 293.057, 381.832, 61.798, 0.3118 ) }
    dend_42 { pt3dadd( 292.042, 381.307, 61.6708, 0.2832 ) }
    dend_42 { pt3dadd( 291.102, 380.653, 61.6672, 0.2964 ) }
    dend_42 { pt3dadd( 290.164, 379.999, 61.6641, 0.311 ) }
    dend_42 { pt3dadd( 289.201, 379.382, 61.5846, 0.369 ) }
    dend_42 { pt3dadd( 288.238, 378.766, 61.5037, 0.4262 ) }
    dend_42 { pt3dadd( 287.258, 378.178, 61.367, 0.4424 ) }
    dend_42 { pt3dadd( 286.299, 377.569, 61.2374, 0.4548 ) }
    dend_42 { pt3dadd( 285.686, 376.603, 61.2248, 0.4008 ) }
    dend_42 { pt3dadd( 285.055, 375.655, 61.208, 0.3488 ) }
    dend_42 { pt3dadd( 284.134, 374.977, 61.1293, 0.3254 ) }
    dend_42 { pt3dadd( 283.218, 374.293, 61.0523, 0.3074 ) }
    dend_42 { pt3dadd( 282.363, 373.533, 60.9977, 0.3534 ) }
    dend_42 { pt3dadd( 281.511, 372.77, 60.9196, 0.3908 ) }
    dend_42 { pt3dadd( 280.672, 371.999, 60.6925, 0.3748 ) }
    dend_42 { pt3dadd( 279.841, 371.219, 60.4741, 0.3646 ) }
    dend_42 { pt3dadd( 279.047, 370.399, 60.2974, 0.3828 ) }
    dend_42 { pt3dadd( 278.225, 369.613, 60.0799, 0.4046 ) }
    dend_42 { pt3dadd( 277.288, 368.977, 59.6904, 0.4428 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_42 { pt3dadd( 276.451, 368.224, 59.4356, 0.4752 ) }
    dend_42 { pt3dadd( 275.73, 367.336, 59.3396, 0.5012 ) }
    dend_42 { pt3dadd( 275.017, 366.443, 59.253, 0.4854 ) }
    dend_42 { pt3dadd( 274.31, 365.545, 59.1749, 0.4314 ) }
    dend_42 { pt3dadd( 273.717, 364.576, 59.052, 0.39 ) }
    dend_42 { pt3dadd( 273.22, 363.546, 58.8913, 0.3592 ) }
    dend_42 { pt3dadd( 272.505, 362.689, 58.7233, 0.3638 ) }
    dend_42 { pt3dadd( 271.626, 361.962, 58.5505, 0.3948 ) }
    dend_42 { pt3dadd( 270.651, 361.392, 58.3024, 0.4044 ) }
    dend_42 { pt3dadd( 269.61, 360.935, 58.0006, 0.3986 ) }
    dend_42 { pt3dadd( 268.544, 360.543, 57.6881, 0.4092 ) }
    dend_42 { pt3dadd( 267.464, 360.193, 57.3686, 0.431 ) }
    dend_42 { pt3dadd( 266.395, 359.809, 57.0368, 0.4356 ) }
    dend_42 { pt3dadd( 265.332, 359.405, 56.6978, 0.4294 ) }
    dend_42 { pt3dadd( 264.286, 358.959, 56.432, 0.4316 ) }
    dend_42 { pt3dadd( 263.246, 358.492, 56.2013, 0.4376 ) }
    dend_42 { pt3dadd( 262.189, 358.064, 56.0076, 0.4566 ) }
    dend_42 { pt3dadd( 261.123, 357.653, 55.8309, 0.4818 ) }
    dend_42 { pt3dadd( 260.013, 357.399, 55.7192, 0.508 ) }
    dend_42 { pt3dadd( 258.886, 357.204, 55.6321, 0.535 ) }
    dend_42 { pt3dadd( 257.836, 356.769, 55.5845, 0.5288 ) }
    dend_42 { pt3dadd( 256.807, 356.269, 55.5475, 0.5136 ) }
    dend_42 { pt3dadd( 255.804, 355.722, 55.5013, 0.4564 ) }
    dend_42 { pt3dadd( 254.807, 355.162, 55.4526, 0.3876 ) }
    dend_42 { pt3dadd( 253.814, 354.6, 55.6237, 0.34 ) }
    dend_42 { pt3dadd( 252.822, 354.037, 55.8516, 0.298 ) }
    dend_42 { pt3dadd( 251.815, 353.498, 56.0339, 0.3082 ) }
    dend_42 { pt3dadd( 250.806, 352.964, 56.2064, 0.3298 ) }
    dend_42 { pt3dadd( 249.704, 352.69, 56.3539, 0.3272 ) }
    dend_42 { pt3dadd( 248.583, 352.471, 56.4962, 0.3196 ) }
    dend_42 { pt3dadd( 247.641, 351.834, 56.5242, 0.3054 ) }
    dend_42 { pt3dadd( 246.71, 351.168, 56.544, 0.2908 ) }
    dend_42 { pt3dadd( 245.645, 350.755, 56.5718, 0.3172 ) }
    dend_42 { pt3dadd( 244.576, 350.349, 56.6, 0.3448 ) }
    dend_42 { pt3dadd( 243.438, 350.375, 56.8588, 0.2874 ) }
    dend_42 { pt3dadd( 242.299, 350.407, 57.12, 0.2288 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 36/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 301.902, 384.282, 63.88, 0.6864 ) }
    dend_39 { pt3dadd( 300.684, 384.654, 63.7703, 0.5402 ) }
    dend_39 { pt3dadd( 299.641, 385.06, 63.6499, 0.4592 ) }
    dend_39 { pt3dadd( 298.801, 385.836, 63.485, 0.5136 ) }
    dend_39 { pt3dadd( 298.029, 386.663, 63.3209, 0.5454 ) }
    dend_39 { pt3dadd( 297.467, 387.658, 63.1593, 0.503 ) }
    dend_39 { pt3dadd( 296.861, 388.621, 63.0137, 0.465 ) }
    dend_39 { pt3dadd( 296.12, 389.492, 62.9174, 0.4402 ) }
    dend_39 { pt3dadd( 295.415, 390.389, 62.8824, 0.4224 ) }
    dend_39 { pt3dadd( 294.817, 391.362, 63.0238, 0.425 ) }
    dend_39 { pt3dadd( 294.158, 392.288, 63.1448, 0.4498 ) }
    dend_39 { pt3dadd( 293.335, 393.082, 63.2094, 0.5354 ) }
    dend_39 { pt3dadd( 292.495, 393.856, 63.259, 0.5846 ) }
    dend_39 { pt3dadd( 291.606, 394.576, 63.2685, 0.538 ) }
    dend_39 { pt3dadd( 290.753, 395.332, 63.2192, 0.5184 ) }
    dend_39 { pt3dadd( 289.979, 396.172, 63.037, 0.561 ) }
    dend_39 { pt3dadd( 289.184, 396.99, 62.837, 0.5662 ) }
    dend_39 { pt3dadd( 288.345, 397.762, 62.6018, 0.4984 ) }
    dend_39 { pt3dadd( 287.462, 398.479, 62.4207, 0.457 ) }
    dend_39 { pt3dadd( 286.503, 399.099, 62.3316, 0.4606 ) }
    dend_39 { pt3dadd( 285.52, 399.682, 62.3017, 0.4992 ) }
    dend_39 { pt3dadd( 284.505, 400.211, 62.3582, 0.5888 ) }
    dend_39 { pt3dadd( 283.536, 400.81, 62.4277, 0.609 ) }
    dend_39 { pt3dadd( 282.63, 401.507, 62.5153, 0.5316 ) }
    dend_39 { pt3dadd( 281.718, 402.194, 62.6609, 0.444 ) }
    dend_39 { pt3dadd( 280.797, 402.866, 62.8869, 0.3428 ) }
    dend_39 { pt3dadd( 279.94, 403.612, 63.1005, 0.2838 ) }
    dend_39 { pt3dadd( 279.165, 404.45, 63.2982, 0.2778 ) }
    dend_39 { pt3dadd( 278.324, 405.212, 63.5138, 0.2748 ) }
    dend_39 { pt3dadd( 277.409, 405.892, 63.7493, 0.2752 ) }
    dend_39 { pt3dadd( 276.378, 406.245, 63.931, 0.2758 ) }
    dend_39 { pt3dadd( 275.235, 406.284, 64.0618, 0.2768 ) }
    dend_39 { pt3dadd( 274.235, 406.687, 64.2188, 0.28 ) }
    dend_39 { pt3dadd( 273.363, 407.425, 64.3994, 0.2852 ) }
    dend_39 { pt3dadd( 272.493, 408.163, 64.594, 0.3004 ) }
    dend_39 { pt3dadd( 271.623, 408.902, 64.7926, 0.3186 ) }
    dend_39 { pt3dadd( 270.734, 409.621, 64.8721, 0.336 ) }
    dend_39 { pt3dadd( 269.844, 410.339, 64.9432, 0.3532 ) }
    dend_39 { pt3dadd( 268.861, 410.921, 64.9586, 0.354 ) }
    dend_39 { pt3dadd( 267.87, 411.495, 64.9704, 0.3538 ) }
    dend_39 { pt3dadd( 266.953, 412.179, 64.9751, 0.452 ) }
    dend_39 { pt3dadd( 266.041, 412.867, 64.9793, 0.555 ) }
    dend_39 { pt3dadd( 265.152, 413.583, 65.1616, 0.5604 ) }
    dend_39 { pt3dadd( 264.233, 414.247, 65.3442, 0.5508 ) }
    dend_39 { pt3dadd( 263.149, 414.604, 65.4948, 0.4746 ) }
    dend_39 { pt3dadd( 262.081, 415.003, 65.6082, 0.4284 ) }
    dend_39 { pt3dadd( 261.065, 415.529, 65.6099, 0.4728 ) }
    dend_39 { pt3dadd( 260.02, 415.962, 65.6121, 0.5146 ) }
    dend_39 { pt3dadd( 258.888, 416.143, 65.6158, 0.5498 ) }
    dend_39 { pt3dadd( 257.763, 416.337, 65.6762, 0.5838 ) }
    dend_39 { pt3dadd( 256.645, 416.562, 65.8773, 0.615 ) }
    dend_39 { pt3dadd( 255.531, 416.813, 66.0136, 0.6356 ) }
    dend_39 { pt3dadd( 254.428, 417.117, 66.0108, 0.6328 ) }
    dend_39 { pt3dadd( 253.312, 417.279, 66.0094, 0.6122 ) }
    dend_39 { pt3dadd( 252.175, 417.155, 66.01, 0.5546 ) }
    dend_39 { pt3dadd( 251.079, 417.249, 66.061, 0.4868 ) }
    dend_39 { pt3dadd( 250.06, 417.766, 66.2088, 0.3992 ) }
    dend_39 { pt3dadd( 249.02, 418.233, 66.372, 0.331 ) }
    dend_39 { pt3dadd( 247.943, 418.608, 66.5633, 0.299 ) }
    dend_39 { pt3dadd( 246.917, 419.092, 66.775, 0.2864 ) }
    dend_39 { pt3dadd( 245.957, 419.704, 67.0107, 0.2976 ) }
    dend_39 { pt3dadd( 244.919, 420.139, 67.2594, 0.3278 ) }
    dend_39 { pt3dadd( 243.814, 420.413, 67.5192, 0.375 ) }
    dend_39 { pt3dadd( 242.709, 420.697, 67.713, 0.3916 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_39 { pt3dadd( 241.605, 420.99, 67.851, 0.3822 ) }
    dend_39 { pt3dadd( 240.561, 421.432, 68.0977, 0.3606 ) }
    dend_39 { pt3dadd( 239.557, 421.963, 68.4093, 0.3314 ) }
    dend_39 { pt3dadd( 238.464, 422.144, 68.6193, 0.3288 ) }
    dend_39 { pt3dadd( 237.322, 422.125, 68.7716, 0.3414 ) }
    dend_39 { pt3dadd( 236.21, 422.335, 68.8579, 0.3486 ) }
    dend_39 { pt3dadd( 235.113, 422.656, 68.9122, 0.353 ) }
    dend_39 { pt3dadd( 234.059, 423.092, 69.0281, 0.3534 ) }
    dend_39 { pt3dadd( 233.028, 423.583, 69.1737, 0.3516 ) }
    dend_39 { pt3dadd( 231.944, 423.931, 69.298, 0.3828 ) }
    dend_39 { pt3dadd( 230.836, 424.212, 69.4126, 0.4296 ) }
    dend_39 { pt3dadd( 229.744, 424.549, 69.3904, 0.4426 ) }
    dend_39 { pt3dadd( 228.659, 424.91, 69.309, 0.4408 ) }
    dend_39 { pt3dadd( 227.798, 425.629, 69.3286, 0.4254 ) }
    dend_39 { pt3dadd( 226.999, 426.448, 69.3767, 0.406 ) }
    dend_39 { pt3dadd( 226.055, 427.075, 69.6024, 0.3718 ) }
    dend_39 { pt3dadd( 225.076, 427.657, 69.8706, 0.334 ) }
    dend_39 { pt3dadd( 224.12, 428.274, 70.1646, 0.3828 ) }
    dend_39 { pt3dadd( 223.168, 428.896, 70.4631, 0.4468 ) }
    dend_39 { pt3dadd( 222.096, 429.278, 70.5418, 0.413 ) }
    dend_39 { pt3dadd( 221.006, 429.624, 70.5872, 0.3644 ) }
    dend_39 { pt3dadd( 219.967, 430.092, 70.8126, 0.3228 ) }
    dend_39 { pt3dadd( 218.931, 430.568, 71.0483, 0.2818 ) }
    dend_39 { pt3dadd( 218.4, 431.565, 71.407, 0.2904 ) }
    dend_39 { pt3dadd( 217.872, 432.567, 71.7668, 0.3026 ) }
    dend_39 { pt3dadd( 217.059, 433.363, 72.0639, 0.3884 ) }
    dend_39 { pt3dadd( 216.247, 434.159, 72.3562, 0.4782 ) }
    dend_39 { pt3dadd( 215.431, 434.954, 72.597, 0.6118 ) }
    dend_39 { pt3dadd( 214.613, 435.75, 72.8188, 0.7272 ) }
    dend_39 { pt3dadd( 213.784, 436.538, 72.8767, 0.6862 ) }
    dend_39 { pt3dadd( 212.957, 437.324, 72.8655, 0.6278 ) }
    dend_39 { pt3dadd( 212.141, 438.103, 72.3932, 0.456 ) }
    dend_39 { pt3dadd( 211.346, 438.904, 71.9972, 0.3162 ) }
    dend_39 { pt3dadd( 210.654, 439.814, 72.0012, 0.3448 ) }
    dend_39 { pt3dadd( 209.953, 440.718, 72.0118, 0.3986 ) }
    dend_39 { pt3dadd( 209.215, 441.591, 72.0535, 0.5684 ) }
    dend_39 { pt3dadd( 208.456, 442.444, 72.137, 0.6932 ) }
    dend_39 { pt3dadd( 207.625, 443.224, 72.373, 0.6544 ) }
    dend_39 { pt3dadd( 206.803, 444.015, 72.6088, 0.6394 ) }
    dend_39 { pt3dadd( 206.014, 444.837, 72.8431, 0.6944 ) }
    dend_39 { pt3dadd( 205.239, 445.675, 73.017, 0.7362 ) }
    dend_39 { pt3dadd( 204.508, 446.555, 73.0209, 0.7406 ) }
    dend_39 { pt3dadd( 203.742, 447.4, 73.0383, 0.6936 ) }
    dend_39 { pt3dadd( 202.889, 448.163, 73.0887, 0.5222 ) }
    dend_39 { pt3dadd( 202.066, 448.954, 73.0898, 0.3882 ) }
    dend_39 { pt3dadd( 201.305, 449.807, 72.9798, 0.338 ) }
    dend_39 { pt3dadd( 200.58, 450.685, 73.0341, 0.3658 ) }
    dend_39 { pt3dadd( 199.919, 451.607, 73.402, 0.543 ) }
    dend_39 { pt3dadd( 198.992, 452.223, 73.7019, 0.5758 ) }
    dend_39 { pt3dadd( 197.978, 452.743, 73.9799, 0.562 ) }
    dend_39 { pt3dadd( 197.03, 453.374, 74.1292, 0.549 ) }
    dend_39 { pt3dadd( 196.102, 454.041, 74.24, 0.536 ) }
    dend_39 { pt3dadd( 195.107, 454.603, 74.2294, 0.5036 ) }
    dend_39 { pt3dadd( 194.094, 455.135, 74.1849, 0.466 ) }
    dend_39 { pt3dadd( 193.115, 455.724, 74.223, 0.4588 ) }
    dend_39 { pt3dadd( 192.144, 456.328, 74.282, 0.459 ) }
    dend_39 { pt3dadd( 191.229, 457.012, 74.3579, 0.5126 ) }
    dend_39 { pt3dadd( 190.325, 457.713, 74.4374, 0.5776 ) }
    dend_39 { pt3dadd( 189.281, 458.158, 74.5251, 0.5318 ) }
    dend_39 { pt3dadd( 188.207, 458.553, 74.6144, 0.4644 ) }
    dend_39 { pt3dadd( 187.181, 459.049, 74.4265, 0.5358 ) }
    dend_39 { pt3dadd( 186.162, 459.561, 74.1983, 0.6274 ) }
    dend_39 { pt3dadd( 185.105, 459.996, 74.1045, 0.5444 ) }
    dend_39 { pt3dadd( 184.043, 460.42, 74.0289, 0.4378 ) }
    dend_39 { pt3dadd( 183.169, 461.147, 73.9609, 0.4782 ) }
    dend_39 { pt3dadd( 182.316, 461.909, 73.8934, 0.5342 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 66/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 366.5, 379.388, 56.9951, 0.6406 ) }
    dend_36 { pt3dadd( 366.717, 379.708, 56.9663, 0.626 ) }
    dend_36 { pt3dadd( 367.461, 380.541, 56.8182, 0.5948 ) }
    dend_36 { pt3dadd( 368.458, 381.087, 56.5118, 0.5948 ) }
    dend_36 { pt3dadd( 369.488, 381.546, 56.182, 0.5948 ) }
    dend_36 { pt3dadd( 370.592, 381.8, 55.7976, 0.5948 ) }
    dend_36 { pt3dadd( 371.694, 382.074, 55.4688, 0.5948 ) }
    dend_36 { pt3dadd( 372.791, 382.389, 55.2591, 0.5948 ) }
    dend_36 { pt3dadd( 373.878, 382.732, 55.2051, 0.577 ) }
    dend_36 { pt3dadd( 374.951, 383.122, 55.4039, 0.5304 ) }
    dend_36 { pt3dadd( 376.035, 383.477, 55.5646, 0.509 ) }
    dend_36 { pt3dadd( 377.134, 383.789, 55.6819, 0.517 ) }
    dend_36 { pt3dadd( 378.249, 384.037, 55.7161, 0.5094 ) }
    dend_36 { pt3dadd( 379.378, 384.214, 55.6564, 0.484 ) }
    dend_36 { pt3dadd( 380.508, 384.216, 55.5229, 0.5002 ) }
    dend_36 { pt3dadd( 381.637, 384.055, 55.3204, 0.5552 ) }
    dend_36 { pt3dadd( 382.755, 383.822, 55.2552, 0.5222 ) }
    dend_36 { pt3dadd( 383.862, 383.537, 55.2874, 0.4274 ) }
    dend_36 { pt3dadd( 384.993, 383.439, 55.2874, 0.3712 ) }
    dend_36 { pt3dadd( 386.137, 383.457, 55.267, 0.34 ) }
    dend_36 { pt3dadd( 387.277, 383.39, 55.2619, 0.3364 ) }
    dend_36 { pt3dadd( 388.415, 383.278, 55.265, 0.3472 ) }
    dend_36 { pt3dadd( 389.557, 383.233, 55.2832, 0.376 ) }
    dend_36 { pt3dadd( 390.701, 383.223, 55.3092, 0.4136 ) }
    dend_36 { pt3dadd( 391.82, 383.422, 55.1908, 0.3866 ) }
    dend_36 { pt3dadd( 392.928, 383.694, 55.0231, 0.3376 ) }
    dend_36 { pt3dadd( 393.915, 384.248, 54.8836, 0.385 ) }
    dend_36 { pt3dadd( 394.866, 384.88, 54.7518, 0.4592 ) }
    dend_36 { pt3dadd( 395.799, 385.542, 54.8307, 0.45 ) }
    dend_36 { pt3dadd( 396.728, 386.207, 54.9497, 0.425 ) }
    dend_36 { pt3dadd( 397.339, 387.167, 55.0004, 0.4274 ) }
    dend_36 { pt3dadd( 397.924, 388.149, 55.0455, 0.432 ) }
    dend_36 { pt3dadd( 398.99, 388.514, 55.0749, 0.3752 ) }
    dend_36 { pt3dadd( 400.077, 388.848, 55.104, 0.3154 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_36 { pt3dadd( 400.59, 389.871, 55.167, 0.3252 ) }
    dend_36 { pt3dadd( 401.106, 390.891, 55.2297, 0.3346 ) }
    dend_36 { pt3dadd( 401.75, 391.836, 55.2882, 0.339 ) }
    dend_36 { pt3dadd( 402.401, 392.776, 55.3498, 0.343 ) }
    dend_36 { pt3dadd( 403.189, 393.603, 55.4831, 0.3366 ) }
    dend_36 { pt3dadd( 403.99, 394.416, 55.6217, 0.3274 ) }
    dend_36 { pt3dadd( 404.889, 395.12, 55.7981, 0.3002 ) }
    dend_36 { pt3dadd( 405.811, 395.787, 55.9653, 0.2794 ) }
    dend_36 { pt3dadd( 406.827, 396.311, 56.0977, 0.285 ) }
    dend_36 { pt3dadd( 407.788, 396.914, 56.1574, 0.2958 ) }
    dend_36 { pt3dadd( 408.634, 397.683, 56.0658, 0.3174 ) }
    dend_36 { pt3dadd( 409.484, 398.447, 56.0496, 0.3484 ) }
    dend_36 { pt3dadd( 410.342, 399.201, 56.1879, 0.3982 ) }
    dend_36 { pt3dadd( 410.906, 400.086, 56.434, 0.4066 ) }
    dend_36 { pt3dadd( 410.921, 401.216, 56.8798, 0.3378 ) }
    dend_36 { pt3dadd( 410.929, 402.348, 57.2681, 0.2906 ) }
    dend_36 { pt3dadd( 410.927, 403.487, 57.5565, 0.2814 ) }
    dend_36 { pt3dadd( 410.925, 404.626, 57.8091, 0.2762 ) }
    dend_36 { pt3dadd( 410.925, 405.768, 57.9986, 0.2774 ) }
    dend_36 { pt3dadd( 410.873, 406.905, 58.1843, 0.2798 ) }
    dend_36 { pt3dadd( 410.73, 408.039, 58.3624, 0.2846 ) }
    dend_36 { pt3dadd( 410.688, 409.171, 58.5724, 0.2934 ) }
    dend_36 { pt3dadd( 410.809, 410.304, 58.8347, 0.3094 ) }
    dend_36 { pt3dadd( 410.909, 411.435, 59.1556, 0.3394 ) }
    dend_36 { pt3dadd( 410.977, 412.564, 59.5692, 0.3912 ) }
    dend_36 { pt3dadd( 410.977, 413.694, 59.9455, 0.395 ) }
    dend_36 { pt3dadd( 410.878, 414.827, 60.268, 0.3284 ) }
    dend_36 { pt3dadd( 410.887, 415.958, 60.4691, 0.2868 ) }
    dend_36 { pt3dadd( 411.052, 417.091, 60.496, 0.2806 ) }
    dend_36 { pt3dadd( 411.111, 418.226, 60.4831, 0.279 ) }
    dend_36 { pt3dadd( 411.024, 419.366, 60.415, 0.2836 ) }
    dend_36 { pt3dadd( 411.132, 420.486, 60.4472, 0.2958 ) }
    dend_36 { pt3dadd( 411.452, 421.582, 60.59, 0.3162 ) }
    dend_36 { pt3dadd( 411.863, 422.643, 60.7986, 0.3766 ) }
    dend_36 { pt3dadd( 412.349, 423.673, 61.0621, 0.4706 ) }
    dend_36 { pt3dadd( 412.767, 424.733, 61.2707, 0.508 ) }
    dend_36 { pt3dadd( 413.135, 425.814, 61.4393, 0.5044 ) }
    dend_36 { pt3dadd( 413.533, 426.885, 61.4023, 0.5792 ) }
    dend_36 { pt3dadd( 413.943, 427.951, 61.2713, 0.6902 ) }
    dend_36 { pt3dadd( 414.605, 428.871, 61.3256, 0.7834 ) }
    dend_36 { pt3dadd( 415.33, 429.754, 61.4264, 0.872 ) }
    dend_36 { pt3dadd( 415.916, 430.733, 61.5409, 0.7634 ) }
    dend_36 { pt3dadd( 416.473, 431.732, 61.6582, 0.6148 ) }
    dend_36 { pt3dadd( 417.102, 432.682, 61.8352, 0.5548 ) }
    dend_36 { pt3dadd( 417.745, 433.626, 62.0225, 0.5102 ) }
    dend_36 { pt3dadd( 418.089, 434.709, 62.0281, 0.6646 ) }
    dend_36 { pt3dadd( 418.378, 435.815, 62.0024, 0.8534 ) }
    dend_36 { pt3dadd( 418.865, 436.848, 61.9937, 0.9404 ) }
    dend_36 { pt3dadd( 419.378, 437.871, 61.9867, 1.0146 ) }
    dend_36 { pt3dadd( 419.779, 438.928, 62.3986, 0.8158 ) }
    dend_36 { pt3dadd( 420.155, 439.99, 62.8205, 0.6132 ) }
    dend_36 { pt3dadd( 420.174, 441.132, 62.9924, 0.6268 ) }
    dend_36 { pt3dadd( 420.27, 442.253, 63.1537, 0.6348 ) }
    dend_36 { pt3dadd( 420.816, 443.258, 63.2542, 0.61 ) }
    dend_36 { pt3dadd( 421.353, 444.267, 63.3699, 0.581 ) }
    dend_36 { pt3dadd( 421.847, 445.295, 63.5569, 0.533 ) }
    dend_36 { pt3dadd( 422.264, 446.349, 63.7381, 0.4788 ) }
    dend_36 { pt3dadd( 422.431, 447.478, 63.8996, 0.4046 ) }
    dend_36 { pt3dadd( 422.565, 448.61, 64.0587, 0.3454 ) }
    dend_36 { pt3dadd( 422.606, 449.752, 64.2107, 0.3272 ) }
    dend_36 { pt3dadd( 422.955, 450.793, 64.3927, 0.3612 ) }
    dend_36 { pt3dadd( 423.595, 451.738, 64.6036, 0.4446 ) }
    dend_36 { pt3dadd( 424.219, 452.693, 64.7352, 0.4758 ) }
    dend_36 { pt3dadd( 424.835, 453.658, 64.8012, 0.4638 ) }
    dend_36 { pt3dadd( 425.495, 454.589, 64.9454, 0.4296 ) }
    dend_36 { pt3dadd( 426.19, 455.493, 65.1493, 0.3782 ) }
    dend_36 { pt3dadd( 426.934, 456.345, 65.5192, 0.4064 ) }
    dend_36 { pt3dadd( 427.714, 457.158, 66.0134, 0.4936 ) }
    dend_36 { pt3dadd( 428.604, 457.814, 66.5977, 0.5684 ) }
    dend_36 { pt3dadd( 429.576, 458.356, 67.2468, 0.6342 ) }
    dend_36 { pt3dadd( 430.21, 459.201, 67.8202, 0.6392 ) }
    dend_36 { pt3dadd( 430.616, 460.248, 68.3424, 0.6034 ) }
    dend_36 { pt3dadd( 430.979, 461.319, 68.7481, 0.5568 ) }
    dend_36 { pt3dadd( 431.315, 462.404, 69.0827, 0.5038 ) }
    dend_36 { pt3dadd( 431.615, 463.505, 69.1916, 0.5388 ) }
    dend_36 { pt3dadd( 431.901, 464.613, 69.2177, 0.606 ) }
    dend_36 { pt3dadd( 432.111, 465.733, 69.447, 0.5622 ) }
    dend_36 { pt3dadd( 432.304, 466.855, 69.7147, 0.4972 ) }
    dend_36 { pt3dadd( 432.341, 467.986, 70.0916, 0.463 ) }
    dend_36 { pt3dadd( 432.355, 469.119, 70.4847, 0.4336 ) }
    dend_36 { pt3dadd( 432.712, 470.201, 70.642, 0.434 ) }
    dend_36 { pt3dadd( 433.085, 471.28, 70.8, 0.4394 ) }
    dend_36 { pt3dadd( 433.481, 472.34, 71.2074, 0.532 ) }
    dend_36 { pt3dadd( 433.919, 473.382, 71.5803, 0.6108 ) }
    dend_36 { pt3dadd( 434.549, 474.332, 71.7937, 0.6266 ) }
    dend_36 { pt3dadd( 435.204, 475.264, 72.0054, 0.6322 ) }
    dend_36 { pt3dadd( 435.968, 476.111, 72.2092, 0.5916 ) }
    dend_36 { pt3dadd( 436.837, 476.764, 72.4601, 0.5544 ) }
    dend_36 { pt3dadd( 437.955, 476.959, 72.823, 0.5252 ) }
    dend_36 { pt3dadd( 438.928, 477.446, 73.1951, 0.5152 ) }
    dend_36 { pt3dadd( 439.76, 478.215, 73.5764, 0.5238 ) }
    dend_36 { pt3dadd( 440.469, 479.082, 74.0558, 0.454 ) }
    dend_36 { pt3dadd( 441.098, 480.012, 74.5976, 0.3344 ) }
    dend_36 { pt3dadd( 441.322, 481.053, 75.2685, 0.3008 ) }
    dend_36 { pt3dadd( 441.319, 482.156, 76.0113, 0.3146 ) }
    dend_36 { pt3dadd( 441.123, 483.246, 76.6214, 0.3434 ) }
    dend_36 { pt3dadd( 440.837, 484.331, 77.1711, 0.379 ) }
    dend_36 { pt3dadd( 440.503, 485.39, 77.831, 0.3952 ) }
    dend_36 { pt3dadd( 440.072, 486.409, 78.4644, 0.3862 ) }
    dend_36 { pt3dadd( 439.465, 487.361, 78.9222, 0.3376 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_36 { pt3dadd( 439.091, 488.371, 79.3674, 0.3148 ) }
    dend_36 { pt3dadd( 439.19, 489.498, 79.7868, 0.3446 ) }
    dend_36 { pt3dadd( 439.302, 490.625, 80.1808, 0.3482 ) }
    dend_36 { pt3dadd( 439.432, 491.752, 80.5395, 0.3156 ) }
    dend_36 { pt3dadd( 439.386, 492.878, 80.8371, 0.3132 ) }
    dend_36 { pt3dadd( 439.204, 494.002, 81.0874, 0.3344 ) }
    dend_36 { pt3dadd( 438.999, 495.12, 81.4044, 0.3218 ) }
    dend_36 { pt3dadd( 438.776, 496.232, 81.7628, 0.2882 ) }
    dend_36 { pt3dadd( 438.73, 497.346, 82.2802, 0.275 ) }
    dend_36 { pt3dadd( 438.793, 498.46, 82.8965, 0.2746 ) }
    dend_36 { pt3dadd( 438.822, 499.594, 83.1802, 0.2746 ) }
    dend_36 { pt3dadd( 438.835, 500.737, 83.3291, 0.2746 ) }
    dend_36 { pt3dadd( 438.839, 501.877, 83.5108, 0.2746 ) }
    dend_36 { pt3dadd( 438.839, 503.019, 83.706, 0.2746 ) }
    dend_36 { pt3dadd( 438.839, 504.161, 83.8617, 0.2746 ) }
    dend_36 { pt3dadd( 438.839, 505.304, 84.0017, 0.2748 ) }
    dend_36 { pt3dadd( 438.839, 506.447, 84.1159, 0.2748 ) }
    dend_36 { pt3dadd( 438.839, 507.591, 84.2198, 0.275 ) }
    dend_36 { pt3dadd( 438.839, 508.733, 84.3391, 0.2756 ) }
    dend_36 { pt3dadd( 438.839, 509.876, 84.4645, 0.2762 ) }
    dend_36 { pt3dadd( 438.88, 511.016, 84.6765, 0.2778 ) }
    dend_36 { pt3dadd( 438.938, 512.154, 84.9237, 0.28 ) }
    dend_36 { pt3dadd( 439.179, 513.252, 85.3406, 0.2866 ) }
    dend_36 { pt3dadd( 439.49, 514.336, 85.8203, 0.2948 ) }
    dend_36 { pt3dadd( 439.891, 515.117, 87.4278, 0.3364 ) }
    dend_36 { pt3dadd( 440.322, 515.798, 89.4166, 0.3894 ) }
    dend_36 { pt3dadd( 440.956, 516.28, 91.4166, 0.3796 ) }
    dend_36 { pt3dadd( 441.605, 516.748, 93.4175, 0.3656 ) }
    dend_36 { pt3dadd( 441.68, 517.697, 94.9586, 0.367 ) }
    dend_36 { pt3dadd( 441.757, 518.653, 96.4734, 0.3686 ) }
    dend_36 { pt3dadd( 442.085, 519.686, 97.3638, 0.3724 ) }
    dend_36 { pt3dadd( 442.417, 520.72, 98.2475, 0.3746 ) }
    dend_36 { pt3dadd( 442.793, 521.758, 98.9797, 0.3456 ) }
    dend_36 { pt3dadd( 443.179, 522.793, 99.6974, 0.319 ) }
    dend_36 { pt3dadd( 443.743, 523.77, 100.16, 0.3352 ) }
    dend_36 { pt3dadd( 444.307, 524.748, 100.619, 0.3518 ) }
    dend_36 { pt3dadd( 444.859, 525.734, 101.045, 0.373 ) }
    dend_36 { pt3dadd( 445.415, 526.717, 101.492, 0.3954 ) }
    dend_36 { pt3dadd( 446.0, 527.665, 102.128, 0.4276 ) }
    dend_36 { pt3dadd( 446.52, 528.631, 102.778, 0.4544 ) }
    dend_36 { pt3dadd( 446.534, 529.732, 103.54, 0.437 ) }
    dend_36 { pt3dadd( 446.65, 530.801, 104.232, 0.4222 ) }
    dend_36 { pt3dadd( 447.357, 531.693, 104.514, 0.4212 ) }
    dend_36 { pt3dadd( 448.107, 532.509, 104.983, 0.4102 ) }
    dend_36 { pt3dadd( 448.998, 533.071, 106.076, 0.366 ) }
    dend_36 { pt3dadd( 449.721, 533.765, 107.156, 0.3272 ) }
    dend_36 { pt3dadd( 450.05, 534.773, 108.207, 0.3014 ) }
    dend_36 { pt3dadd( 450.197, 535.815, 109.096, 0.2936 ) }
    dend_36 { pt3dadd( 450.012, 536.918, 109.689, 0.318 ) }
    dend_36 { pt3dadd( 450.099, 538.005, 110.141, 0.3612 ) }
    dend_36 { pt3dadd( 450.486, 539.075, 110.436, 0.4252 ) }
    dend_36 { pt3dadd( 450.882, 540.066, 111.269, 0.4826 ) }
    dend_36 { pt3dadd( 451.29, 540.98, 112.627, 0.5334 ) }
    dend_36 { pt3dadd( 452.041, 541.308, 113.866, 0.5566 ) }
    dend_36 { pt3dadd( 453.074, 541.156, 115.007, 0.5566 ) }
    dend_36 { pt3dadd( 454.064, 540.714, 115.729, 0.551 ) }
    dend_36 { pt3dadd( 455.036, 540.153, 116.279, 0.5428 ) }
    dend_36 { pt3dadd( 455.97, 539.534, 116.841, 0.4792 ) }
    dend_36 { pt3dadd( 456.891, 538.897, 117.407, 0.3984 ) }
    dend_36 { pt3dadd( 457.823, 538.25, 117.75, 0.3622 ) }
    dend_36 { pt3dadd( 458.757, 537.6, 118.046, 0.3354 ) }
    dend_36 { pt3dadd( 459.348, 536.741, 117.077, 0.284 ) }
    dend_36 { pt3dadd( 459.888, 535.85, 115.92, 0.2288 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 63/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 366.5, 379.388, 56.9951, 0.6406 ) }
    dend_35 { pt3dadd( 367.227, 379.231, 57.0959, 0.5726 ) }
    dend_35 { pt3dadd( 368.343, 378.996, 57.2572, 0.4722 ) }
    dend_35 { pt3dadd( 369.47, 378.816, 57.4683, 0.406 ) }
    dend_35 { pt3dadd( 370.598, 378.648, 57.6738, 0.3548 ) }
    dend_35 { pt3dadd( 371.736, 378.558, 57.8452, 0.4012 ) }
    dend_35 { pt3dadd( 372.873, 378.463, 58.0479, 0.4364 ) }
    dend_35 { pt3dadd( 373.998, 378.336, 58.445, 0.4036 ) }
    dend_35 { pt3dadd( 375.128, 378.214, 58.7653, 0.374 ) }
    dend_35 { pt3dadd( 376.266, 378.113, 58.8308, 0.3542 ) }
    dend_35 { pt3dadd( 377.395, 377.956, 58.9277, 0.3448 ) }
    dend_35 { pt3dadd( 378.499, 377.666, 59.1018, 0.361 ) }
    dend_35 { pt3dadd( 379.541, 377.251, 59.3709, 0.353 ) }
    dend_35 { pt3dadd( 380.475, 376.615, 59.8086, 0.3018 ) }
    dend_35 { pt3dadd( 381.404, 375.958, 60.1006, 0.2924 ) }
    dend_35 { pt3dadd( 382.327, 375.29, 60.3109, 0.3064 ) }
    dend_35 { pt3dadd( 383.186, 374.539, 60.447, 0.3584 ) }
    dend_35 { pt3dadd( 384.016, 373.753, 60.5514, 0.4266 ) }
    dend_35 { pt3dadd( 384.453, 372.758, 61.0162, 0.4326 ) }
    dend_35 { pt3dadd( 384.727, 371.675, 61.6294, 0.413 ) }
    dend_35 { pt3dadd( 385.469, 370.835, 61.9265, 0.4126 ) }
    dend_35 { pt3dadd( 386.221, 369.996, 62.181, 0.4118 ) }
    dend_35 { pt3dadd( 386.568, 368.91, 62.4282, 0.3858 ) }
    dend_35 { pt3dadd( 386.965, 367.852, 62.706, 0.3724 ) }
    dend_35 { pt3dadd( 387.618, 366.93, 63.1417, 0.4244 ) }
    dend_35 { pt3dadd( 388.296, 366.025, 63.537, 0.4624 ) }
    dend_35 { pt3dadd( 389.085, 365.2, 63.7288, 0.4296 ) }
    dend_35 { pt3dadd( 389.891, 364.396, 63.9512, 0.3908 ) }
    dend_35 { pt3dadd( 390.774, 363.686, 64.3233, 0.323 ) }
    dend_35 { pt3dadd( 391.576, 362.901, 64.6514, 0.2746 ) }
    dend_35 { pt3dadd( 392.177, 361.931, 64.8704, 0.2746 ) }
    dend_35 { pt3dadd( 392.796, 360.973, 65.0555, 0.2746 ) }
    dend_35 { pt3dadd( 393.447, 360.034, 65.1832, 0.2746 ) }
    dend_35 { pt3dadd( 394.129, 359.116, 65.2994, 0.2746 ) }
    dend_35 { pt3dadd( 394.856, 358.234, 65.3976, 0.2746 ) }
    dend_35 { pt3dadd( 395.56, 357.334, 65.4987, 0.2746 ) }
    dend_35 { pt3dadd( 396.228, 356.408, 65.6034, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( 396.936, 355.514, 65.7824, 0.2746 ) }
    dend_35 { pt3dadd( 397.699, 354.671, 66.0682, 0.2746 ) }
    dend_35 { pt3dadd( 398.525, 353.895, 66.3642, 0.2746 ) }
    dend_35 { pt3dadd( 399.431, 353.208, 66.6733, 0.2746 ) }
    dend_35 { pt3dadd( 400.352, 352.54, 66.9519, 0.2746 ) }
    dend_35 { pt3dadd( 401.291, 351.893, 67.1919, 0.2746 ) }
    dend_35 { pt3dadd( 402.288, 351.358, 67.4176, 0.2746 ) }
    dend_35 { pt3dadd( 403.356, 350.959, 67.6259, 0.2746 ) }
    dend_35 { pt3dadd( 404.448, 350.63, 67.7818, 0.2746 ) }
    dend_35 { pt3dadd( 405.565, 350.389, 67.8748, 0.2746 ) }
    dend_35 { pt3dadd( 406.618, 349.982, 67.9538, 0.2746 ) }
    dend_35 { pt3dadd( 407.599, 349.396, 68.0173, 0.2746 ) }
    dend_35 { pt3dadd( 408.628, 348.905, 68.07, 0.2746 ) }
    dend_35 { pt3dadd( 409.702, 348.515, 68.1111, 0.2746 ) }
    dend_35 { pt3dadd( 410.633, 347.905, 68.1478, 0.2746 ) }
    dend_35 { pt3dadd( 411.421, 347.076, 68.1797, 0.2746 ) }
    dend_35 { pt3dadd( 412.297, 346.351, 68.1621, 0.2746 ) }
    dend_35 { pt3dadd( 413.253, 345.724, 68.098, 0.2746 ) }
    dend_35 { pt3dadd( 414.054, 344.932, 67.9994, 0.2746 ) }
    dend_35 { pt3dadd( 414.737, 344.016, 67.8751, 0.2746 ) }
    dend_35 { pt3dadd( 415.432, 343.123, 67.5195, 0.2748 ) }
    dend_35 { pt3dadd( 416.136, 342.247, 67.0023, 0.2752 ) }
    dend_35 { pt3dadd( 416.742, 341.299, 67.0639, 0.2764 ) }
    dend_35 { pt3dadd( 417.288, 340.307, 67.4699, 0.278 ) }
    dend_35 { pt3dadd( 417.612, 339.255, 68.1439, 0.2848 ) }
    dend_35 { pt3dadd( 417.856, 338.182, 68.9119, 0.2936 ) }
    dend_35 { pt3dadd( 418.109, 337.081, 69.2938, 0.3242 ) }
    dend_35 { pt3dadd( 418.365, 335.972, 69.5747, 0.3602 ) }
    dend_35 { pt3dadd( 418.439, 334.835, 69.6539, 0.3354 ) }
    dend_35 { pt3dadd( 418.474, 333.691, 69.6895, 0.2976 ) }
    dend_35 { pt3dadd( 418.674, 332.572, 69.93, 0.285 ) }
    dend_35 { pt3dadd( 418.901, 331.456, 70.2052, 0.2768 ) }
    dend_35 { pt3dadd( 419.283, 330.382, 70.3651, 0.2778 ) }
    dend_35 { pt3dadd( 419.684, 329.312, 70.5085, 0.28 ) }
    dend_35 { pt3dadd( 419.757, 328.175, 70.3884, 0.2942 ) }
    dend_35 { pt3dadd( 419.809, 327.033, 70.252, 0.309 ) }
    dend_35 { pt3dadd( 420.082, 325.926, 70.4304, 0.3228 ) }
    dend_35 { pt3dadd( 420.362, 324.819, 70.6149, 0.3366 ) }
    dend_35 { pt3dadd( 420.712, 323.73, 70.7426, 0.3128 ) }
    dend_35 { pt3dadd( 421.062, 322.643, 70.8697, 0.2888 ) }
    dend_35 { pt3dadd( 421.478, 321.641, 71.757, 0.3244 ) }
    dend_35 { pt3dadd( 421.9, 320.644, 72.6488, 0.3606 ) }
    dend_35 { pt3dadd( 422.74, 319.931, 73.4031, 0.4044 ) }
    dend_35 { pt3dadd( 423.544, 319.19, 74.1625, 0.445 ) }
    dend_35 { pt3dadd( 424.068, 318.228, 74.963, 0.459 ) }
    dend_35 { pt3dadd( 424.633, 317.287, 75.7098, 0.4836 ) }
    dend_35 { pt3dadd( 425.399, 316.46, 76.19, 0.5598 ) }
    dend_35 { pt3dadd( 426.205, 315.681, 76.6391, 0.6234 ) }
    dend_35 { pt3dadd( 427.191, 315.116, 76.9485, 0.63 ) }
    dend_35 { pt3dadd( 428.154, 314.517, 77.2604, 0.6124 ) }
    dend_35 { pt3dadd( 429.021, 313.781, 77.5813, 0.5012 ) }
    dend_35 { pt3dadd( 429.777, 312.971, 77.9646, 0.416 ) }
    dend_35 { pt3dadd( 430.203, 311.935, 78.5316, 0.4082 ) }
    dend_35 { pt3dadd( 430.633, 310.898, 79.0782, 0.422 ) }
    dend_35 { pt3dadd( 431.072, 309.862, 79.5732, 0.4892 ) }
    dend_35 { pt3dadd( 431.518, 308.822, 79.9518, 0.5144 ) }
    dend_35 { pt3dadd( 431.981, 307.777, 80.0825, 0.4506 ) }
    dend_35 { pt3dadd( 432.472, 306.746, 80.106, 0.3856 ) }
    dend_35 { pt3dadd( 433.005, 305.736, 79.954, 0.3182 ) }
    dend_35 { pt3dadd( 433.414, 304.683, 79.9644, 0.2776 ) }
    dend_35 { pt3dadd( 433.642, 303.566, 80.2094, 0.2756 ) }
    dend_35 { pt3dadd( 434.165, 302.641, 80.5342, 0.2746 ) }
    dend_35 { pt3dadd( 435.07, 301.963, 80.9617, 0.2746 ) }
    dend_35 { pt3dadd( 435.721, 301.077, 81.1863, 0.2748 ) }
    dend_35 { pt3dadd( 436.168, 300.024, 81.2501, 0.275 ) }
    dend_35 { pt3dadd( 436.764, 299.073, 80.9822, 0.276 ) }
    dend_35 { pt3dadd( 437.464, 298.189, 80.4868, 0.2774 ) }
    dend_35 { pt3dadd( 438.259, 297.387, 80.1259, 0.2814 ) }
    dend_35 { pt3dadd( 439.102, 296.623, 79.8305, 0.2866 ) }
    dend_35 { pt3dadd( 440.158, 296.584, 80.5879, 0.3672 ) }
    dend_35 { pt3dadd( 441.241, 296.639, 81.48, 0.4576 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 71/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 349.276, 350.268, 51.2313, 0.9152 ) }
    dend_32 { pt3dadd( 350.369, 349.674, 49.2509, 0.817 ) }
    dend_32 { pt3dadd( 351.24, 349.13, 48.1678, 0.7716 ) }
    dend_32 { pt3dadd( 351.96, 348.242, 48.0808, 0.59 ) }
    dend_32 { pt3dadd( 352.423, 347.298, 47.9707, 0.4584 ) }
    dend_32 { pt3dadd( 352.143, 346.19, 47.794, 0.4734 ) }
    dend_32 { pt3dadd( 351.804, 345.115, 47.4751, 0.5052 ) }
    dend_32 { pt3dadd( 351.32, 344.116, 46.7936, 0.58 ) }
    dend_32 { pt3dadd( 350.779, 343.142, 46.2255, 0.6188 ) }
    dend_32 { pt3dadd( 350.112, 342.222, 45.904, 0.5794 ) }
    dend_32 { pt3dadd( 349.734, 341.198, 45.68, 0.4898 ) }
    dend_32 { pt3dadd( 349.693, 340.056, 45.5689, 0.342 ) }
    dend_32 { pt3dadd( 349.896, 338.943, 45.3852, 0.302 ) }
    dend_32 { pt3dadd( 350.194, 337.843, 45.1724, 0.305 ) }
    dend_32 { pt3dadd( 349.579, 336.953, 44.9257, 0.3582 ) }
    dend_32 { pt3dadd( 348.831, 336.094, 44.6743, 0.4188 ) }
    dend_32 { pt3dadd( 348.369, 335.063, 44.347, 0.4734 ) }
    dend_32 { pt3dadd( 347.943, 334.01, 44.0096, 0.5272 ) }
    dend_32 { pt3dadd( 347.612, 332.929, 43.5912, 0.5132 ) }
    dend_32 { pt3dadd( 347.292, 331.845, 43.1628, 0.4912 ) }
    dend_32 { pt3dadd( 347.158, 330.738, 42.5468, 0.5226 ) }
    dend_32 { pt3dadd( 347.085, 329.642, 41.93, 0.5546 ) }
    dend_32 { pt3dadd( 347.807, 328.764, 41.6391, 0.5032 ) }
    dend_32 { pt3dadd( 348.552, 327.909, 41.349, 0.4568 ) }
    dend_32 { pt3dadd( 349.507, 327.289, 41.0687, 0.4596 ) }
    dend_32 { pt3dadd( 350.457, 326.665, 40.7868, 0.4756 ) }
    dend_32 { pt3dadd( 351.384, 326.004, 40.4939, 0.5772 ) }
    dend_32 { pt3dadd( 352.304, 325.374, 40.0459, 0.652 ) }
    dend_32 { pt3dadd( 353.181, 324.93, 38.6126, 0.5566 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_32 { pt3dadd( 353.867, 324.421, 36.8659, 0.445 ) }
    dend_32 { pt3dadd( 354.32, 323.831, 34.7393, 0.314 ) }
    dend_32 { pt3dadd( 354.24, 322.982, 33.0428, 0.2848 ) }
    dend_32 { pt3dadd( 353.804, 322.065, 32.2692, 0.292 ) }
    dend_32 { pt3dadd( 353.124, 321.148, 32.4296, 0.3092 ) }
    dend_32 { pt3dadd( 352.279, 321.002, 32.8759, 0.3534 ) }
    dend_32 { pt3dadd( 351.296, 321.512, 33.5656, 0.4204 ) }
    dend_32 { pt3dadd( 351.02, 322.42, 34.2773, 0.4486 ) }
    dend_32 { pt3dadd( 351.094, 323.523, 35.0, 0.4576 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 9/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 349.276, 350.268, 51.2313, 0.9152 ) }
    dend_27 { pt3dadd( 349.898, 348.831, 51.5144, 0.7464 ) }
    dend_27 { pt3dadd( 350.257, 347.759, 51.9369, 0.8052 ) }
    dend_27 { pt3dadd( 350.542, 346.657, 52.1906, 0.793 ) }
    dend_27 { pt3dadd( 350.809, 345.547, 52.3989, 0.762 ) }
    dend_27 { pt3dadd( 351.512, 344.654, 52.2603, 0.7042 ) }
    dend_27 { pt3dadd( 352.238, 343.772, 52.1052, 0.645 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 16/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 338.853, 377.807, 51.9691, 0.7092 ) }
    dend_17 { pt3dadd( 337.38, 377.684, 51.8627, 0.7092 ) }
    dend_17 { pt3dadd( 336.247, 377.534, 51.7863, 0.7092 ) }
    dend_17 { pt3dadd( 335.23, 377.02, 51.6494, 0.7092 ) }
    dend_17 { pt3dadd( 334.217, 376.49, 51.5099, 0.7092 ) }
    dend_17 { pt3dadd( 333.296, 375.822, 51.2235, 0.7092 ) }
    dend_17 { pt3dadd( 332.379, 375.15, 50.9328, 0.7092 ) }
    dend_17 { pt3dadd( 331.272, 374.97, 50.4235, 0.7092 ) }
    dend_17 { pt3dadd( 330.159, 374.802, 49.9092, 0.7092 ) }
    // Section: dend_5, id: dend_5, parent: dend_0 (entry count 25/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 351.51, 390.72, 46.2277, 0.7092 ) }
    dend_5 { pt3dadd( 350.134, 390.774, 45.9648, 0.6864 ) }
    dend_5 { pt3dadd( 349.809, 391.86, 46.3417, 0.6864 ) }
    dend_5 { pt3dadd( 350.091, 392.902, 46.8972, 0.6864 ) }
    dend_5 { pt3dadd( 350.521, 393.934, 47.4953, 0.6864 ) }
    dend_5 { pt3dadd( 350.365, 395.049, 47.8022, 0.6864 ) }
    dend_5 { pt3dadd( 350.18, 396.173, 48.0693, 0.6864 ) }
    dend_5 { pt3dadd( 350.137, 397.316, 48.0116, 0.6864 ) }
    dend_5 { pt3dadd( 350.12, 398.456, 47.9363, 0.6864 ) }
    dend_5 { pt3dadd( 350.329, 399.578, 47.7025, 0.6864 ) }
    dend_5 { pt3dadd( 350.516, 400.7, 47.4639, 0.6864 ) }
    dend_5 { pt3dadd( 350.531, 401.838, 47.1934, 0.6864 ) }
    dend_5 { pt3dadd( 350.547, 402.976, 46.9221, 0.6864 ) }
    dend_5 { pt3dadd( 350.578, 404.115, 46.6452, 0.6864 ) }
    dend_5 { pt3dadd( 350.66, 405.247, 46.4332, 0.6864 ) }
    dend_5 { pt3dadd( 350.939, 406.356, 46.4741, 0.6864 ) }
    dend_5 { pt3dadd( 351.218, 407.465, 46.5385, 0.6864 ) }
    dend_5 { pt3dadd( 351.495, 408.574, 46.6701, 0.6864 ) }
    dend_5 { pt3dadd( 351.611, 409.682, 46.7564, 0.6864 ) }
    dend_5 { pt3dadd( 351.326, 410.79, 46.7306, 0.6864 ) }
    dend_5 { pt3dadd( 350.922, 411.849, 46.6696, 0.6864 ) }
    dend_5 { pt3dadd( 350.361, 412.846, 46.5629, 0.6864 ) }
    dend_5 { pt3dadd( 349.897, 413.887, 46.4775, 0.6864 ) }
    dend_5 { pt3dadd( 349.507, 414.961, 46.4092, 0.6864 ) }
    dend_5 { pt3dadd( 349.41, 416.077, 46.583, 0.6864 ) }
    dend_5 { pt3dadd( 349.462, 417.213, 46.8801, 0.6864 ) }
    dend_5 { pt3dadd( 349.117, 418.259, 47.1979, 0.6864 ) }
    dend_5 { pt3dadd( 348.585, 419.263, 47.5258, 0.6864 ) }
    dend_5 { pt3dadd( 348.116, 420.303, 47.5566, 0.6864 ) }
    dend_5 { pt3dadd( 347.666, 421.355, 47.4872, 0.6864 ) }
    dend_5 { pt3dadd( 347.246, 422.416, 47.299, 0.6864 ) }
    dend_5 { pt3dadd( 346.837, 423.48, 47.0714, 0.6864 ) }
    dend_5 { pt3dadd( 346.242, 424.447, 46.83, 0.6864 ) }
    dend_5 { pt3dadd( 345.602, 425.389, 46.5856, 0.6864 ) }
    dend_5 { pt3dadd( 345.393, 426.505, 46.4321, 0.6864 ) }
    dend_5 { pt3dadd( 345.219, 427.634, 46.2862, 0.6864 ) }
    dend_5 { pt3dadd( 345.072, 428.768, 46.2392, 0.6864 ) }
    dend_5 { pt3dadd( 344.925, 429.903, 46.1994, 0.6864 ) }
    dend_5 { pt3dadd( 344.654, 431.013, 46.1401, 0.6864 ) }
    dend_5 { pt3dadd( 344.376, 432.122, 46.0799, 0.6864 ) }
    dend_5 { pt3dadd( 344.106, 433.234, 46.0387, 0.6864 ) }
    dend_5 { pt3dadd( 343.826, 434.342, 46.0186, 0.6864 ) }
    dend_5 { pt3dadd( 343.487, 435.434, 46.128, 0.6864 ) }
    dend_5 { pt3dadd( 343.362, 436.543, 45.99, 0.6864 ) }
    dend_5 { pt3dadd( 343.468, 437.67, 45.5857, 0.6864 ) }
    dend_5 { pt3dadd( 343.458, 438.802, 45.5624, 0.6864 ) }
    dend_5 { pt3dadd( 343.362, 439.937, 45.8254, 0.6864 ) }
    dend_5 { pt3dadd( 343.469, 441.065, 46.0446, 0.5708 ) }
    dend_5 { pt3dadd( 343.66, 442.189, 46.2456, 0.407 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 74/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 351.51, 390.72, 46.2277, 0.7092 ) }
    dend_4 { pt3dadd( 351.29, 389.795, 47.0434, 0.614 ) }
    dend_4 { pt3dadd( 351.285, 388.789, 47.5919, 0.5014 ) }
    dend_4 { pt3dadd( 351.983, 387.911, 47.0456, 0.3766 ) }
    dend_4 { pt3dadd( 352.871, 387.344, 46.5391, 0.339 ) }
    dend_4 { pt3dadd( 353.981, 387.137, 46.0782, 0.4024 ) }
    dend_4 { pt3dadd( 354.981, 387.516, 45.7254, 0.4706 ) }
    dend_4 { pt3dadd( 355.938, 388.129, 45.416, 0.5408 ) }
    dend_4 { pt3dadd( 356.919, 388.702, 45.0559, 0.559 ) }
    dend_4 { pt3dadd( 357.906, 389.257, 44.6774, 0.558 ) }
    dend_4 { pt3dadd( 358.94, 389.733, 44.4066, 0.524 ) }
    dend_4 { pt3dadd( 359.981, 390.195, 44.1535, 0.4846 ) }
    dend_4 { pt3dadd( 360.916, 390.7, 43.1374, 0.593 ) }
    dend_4 { pt3dadd( 361.853, 391.163, 42.0521, 0.689 ) }
    dend_4 { pt3dadd( 362.885, 391.255, 40.8587, 0.5976 ) }
    dend_4 { pt3dadd( 363.912, 391.396, 39.7138, 0.5038 ) }
    dend_4 { pt3dadd( 364.929, 391.76, 38.7929, 0.3978 ) }
    dend_4 { pt3dadd( 365.962, 392.019, 37.8711, 0.3336 ) }
    dend_4 { pt3dadd( 367.041, 391.973, 36.9463, 0.388 ) }
    dend_4 { pt3dadd( 368.107, 391.827, 36.0657, 0.4422 ) }
    dend_4 { pt3dadd( 369.151, 391.486, 35.2696, 0.496 ) }
    dend_4 { pt3dadd( 370.184, 391.087, 34.6349, 0.506 ) }
    dend_4 { pt3dadd( 371.201, 390.581, 34.2916, 0.4366 ) }
    dend_4 { pt3dadd( 372.232, 390.472, 33.9385, 0.3864 ) }
    dend_4 { pt3dadd( 373.284, 390.897, 33.572, 0.3622 ) }
    dend_4 { pt3dadd( 374.184, 391.519, 34.043, 0.3246 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_4 { pt3dadd( 375.042, 392.053, 35.07, 0.2912 ) }
    dend_4 { pt3dadd( 375.961, 392.072, 36.7394, 0.2882 ) }
    dend_4 { pt3dadd( 376.916, 391.871, 37.8762, 0.3012 ) }
    dend_4 { pt3dadd( 377.924, 391.352, 38.2278, 0.3376 ) }
    dend_4 { pt3dadd( 378.654, 390.551, 38.0248, 0.3906 ) }
    dend_4 { pt3dadd( 379.206, 389.576, 37.4758, 0.4538 ) }
    dend_4 { pt3dadd( 379.871, 388.887, 36.1491, 0.4758 ) }
    dend_4 { pt3dadd( 380.593, 388.345, 34.4285, 0.4768 ) }
    dend_4 { pt3dadd( 381.451, 388.826, 33.2836, 0.359 ) }
    dend_4 { pt3dadd( 382.326, 389.418, 32.2, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 351.51, 390.72, 46.2277, 0.7092 ) }
    dend_1 { pt3dadd( 352.222, 391.48, 45.7453, 0.5708 ) }
    dend_1 { pt3dadd( 353.069, 392.234, 45.3835, 0.559 ) }
    dend_1 { pt3dadd( 354.009, 392.862, 45.1338, 0.5454 ) }
    dend_1 { pt3dadd( 355.021, 393.392, 44.973, 0.5306 ) }
    dend_1 { pt3dadd( 355.954, 394.034, 44.7275, 0.4898 ) }
    dend_1 { pt3dadd( 356.827, 394.761, 44.4167, 0.429 ) }
    dend_1 { pt3dadd( 357.134, 395.736, 44.1241, 0.415 ) }
    dend_1 { pt3dadd( 357.069, 396.872, 43.8438, 0.432 ) }
    dend_1 { pt3dadd( 356.536, 397.836, 43.6685, 0.4464 ) }
    dend_1 { pt3dadd( 355.836, 398.74, 43.5305, 0.46 ) }
    dend_1 { pt3dadd( 355.741, 399.817, 43.3633, 0.4738 ) }
    dend_1 { pt3dadd( 355.855, 400.953, 43.1861, 0.4878 ) }
    dend_1 { pt3dadd( 356.128, 402.047, 42.7854, 0.4546 ) }
    dend_1 { pt3dadd( 356.43, 403.136, 42.3438, 0.4128 ) }
    dend_1 { pt3dadd( 356.888, 404.115, 41.4235, 0.4324 ) }
    dend_1 { pt3dadd( 357.348, 405.09, 40.4925, 0.4532 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 27/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 182.316, 461.909, 73.8934, 0.5342 ) }
    dend_41 { pt3dadd( 182.357, 462.183, 74.3708, 0.4918 ) }
    dend_41 { pt3dadd( 182.227, 463.114, 75.6736, 0.3928 ) }
    dend_41 { pt3dadd( 181.671, 464.057, 76.4859, 0.364 ) }
    dend_41 { pt3dadd( 181.213, 465.058, 77.1929, 0.3562 ) }
    dend_41 { pt3dadd( 180.84, 466.11, 77.8092, 0.367 ) }
    dend_41 { pt3dadd( 180.199, 467.029, 78.1267, 0.4938 ) }
    dend_41 { pt3dadd( 179.403, 467.828, 78.3832, 0.581 ) }
    dend_41 { pt3dadd( 178.44, 468.423, 78.7699, 0.441 ) }
    dend_41 { pt3dadd( 177.597, 469.151, 79.1008, 0.3798 ) }
    dend_41 { pt3dadd( 176.943, 470.085, 79.3444, 0.4416 ) }
    dend_41 { pt3dadd( 176.208, 470.947, 79.6334, 0.4594 ) }
    dend_41 { pt3dadd( 175.4, 471.747, 79.963, 0.4372 ) }
    dend_41 { pt3dadd( 174.562, 472.491, 80.4731, 0.3896 ) }
    dend_41 { pt3dadd( 173.699, 473.194, 81.1236, 0.3222 ) }
    dend_41 { pt3dadd( 172.726, 473.717, 81.7034, 0.3116 ) }
    dend_41 { pt3dadd( 171.676, 474.115, 82.2349, 0.3402 ) }
    dend_41 { pt3dadd( 170.647, 474.584, 82.6182, 0.3844 ) }
    dend_41 { pt3dadd( 169.632, 475.1, 82.9074, 0.4384 ) }
    dend_41 { pt3dadd( 168.735, 475.782, 83.1827, 0.4292 ) }
    dend_41 { pt3dadd( 167.912, 476.568, 83.4487, 0.38 ) }
    dend_41 { pt3dadd( 166.889, 476.937, 83.7172, 0.3528 ) }
    dend_41 { pt3dadd( 165.76, 477.079, 83.9868, 0.3378 ) }
    dend_41 { pt3dadd( 164.809, 477.564, 84.7336, 0.2902 ) }
    dend_41 { pt3dadd( 163.935, 478.192, 85.68, 0.2288 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 52/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 182.316, 461.909, 73.8934, 0.5342 ) }
    dend_40 { pt3dadd( 181.711, 462.159, 73.9402, 0.551 ) }
    dend_40 { pt3dadd( 180.693, 462.666, 74.0659, 0.5514 ) }
    dend_40 { pt3dadd( 179.74, 463.294, 74.265, 0.5036 ) }
    dend_40 { pt3dadd( 178.757, 463.862, 74.5102, 0.4438 ) }
    dend_40 { pt3dadd( 177.723, 464.335, 74.8292, 0.3644 ) }
    dend_40 { pt3dadd( 176.755, 464.909, 75.1789, 0.322 ) }
    dend_40 { pt3dadd( 175.881, 465.63, 75.5734, 0.3326 ) }
    dend_40 { pt3dadd( 174.946, 466.225, 76.137, 0.3234 ) }
    dend_40 { pt3dadd( 173.941, 466.673, 76.8978, 0.2908 ) }
    dend_40 { pt3dadd( 172.947, 467.16, 77.5928, 0.2752 ) }
    dend_40 { pt3dadd( 171.964, 467.685, 78.2244, 0.2756 ) }
    dend_40 { pt3dadd( 171.223, 468.473, 78.6262, 0.277 ) }
    dend_40 { pt3dadd( 170.681, 469.477, 78.8379, 0.2792 ) }
    dend_40 { pt3dadd( 170.165, 470.449, 78.2611, 0.2922 ) }
    dend_40 { pt3dadd( 169.66, 471.408, 77.3716, 0.3096 ) }
    dend_40 { pt3dadd( 169.013, 472.304, 76.6819, 0.3828 ) }
    dend_40 { pt3dadd( 168.321, 473.179, 76.057, 0.474 ) }
    dend_40 { pt3dadd( 167.641, 474.091, 76.039, 0.448 ) }
    dend_40 { pt3dadd( 166.962, 475.01, 76.1508, 0.397 ) }
    dend_40 { pt3dadd( 166.174, 475.836, 76.1989, 0.4268 ) }
    dend_40 { pt3dadd( 165.363, 476.643, 76.2342, 0.4728 ) }
    dend_40 { pt3dadd( 164.367, 477.184, 76.1351, 0.4572 ) }
    dend_40 { pt3dadd( 163.333, 477.675, 76.0102, 0.4296 ) }
    dend_40 { pt3dadd( 162.215, 477.883, 75.9744, 0.4706 ) }
    dend_40 { pt3dadd( 161.083, 478.05, 75.9514, 0.5218 ) }
    dend_40 { pt3dadd( 160.009, 478.436, 75.9321, 0.4694 ) }
    dend_40 { pt3dadd( 158.943, 478.849, 75.913, 0.4036 ) }
    dend_40 { pt3dadd( 158.063, 479.567, 76.1074, 0.414 ) }
    dend_40 { pt3dadd( 157.202, 480.315, 76.3221, 0.4316 ) }
    dend_40 { pt3dadd( 156.245, 480.917, 76.7351, 0.3666 ) }
    dend_40 { pt3dadd( 155.281, 481.509, 77.1632, 0.295 ) }
    dend_40 { pt3dadd( 154.328, 482.134, 77.3648, 0.287 ) }
    dend_40 { pt3dadd( 153.375, 482.762, 77.5639, 0.28 ) }
    dend_40 { pt3dadd( 152.485, 483.473, 77.8235, 0.2884 ) }
    dend_40 { pt3dadd( 151.579, 484.156, 78.083, 0.2988 ) }
    dend_40 { pt3dadd( 150.495, 484.506, 78.3434, 0.3346 ) }
    dend_40 { pt3dadd( 149.454, 484.928, 78.6271, 0.3576 ) }
    dend_40 { pt3dadd( 148.622, 485.695, 79.0208, 0.3212 ) }
    dend_40 { pt3dadd( 147.805, 486.481, 79.3643, 0.2928 ) }
    dend_40 { pt3dadd( 147.015, 487.304, 79.6093, 0.2804 ) }
    dend_40 { pt3dadd( 146.102, 487.961, 79.7924, 0.2746 ) }
    dend_40 { pt3dadd( 145.081, 488.474, 79.9221, 0.2746 ) }
    dend_40 { pt3dadd( 144.047, 488.959, 80.0052, 0.2746 ) }
    dend_40 { pt3dadd( 143.001, 489.424, 80.0534, 0.2746 ) }
    dend_40 { pt3dadd( 142.086, 490.089, 80.0856, 0.2746 ) }
    dend_40 { pt3dadd( 141.238, 490.857, 80.1094, 0.2746 ) }
    dend_40 { pt3dadd( 140.339, 491.562, 80.1237, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_40 { pt3dadd( 139.417, 492.238, 80.134, 0.2746 ) }
    dend_40 { pt3dadd( 138.743, 493.142, 80.1861, 0.2746 ) }
    dend_40 { pt3dadd( 138.155, 494.122, 80.2522, 0.2746 ) }
    dend_40 { pt3dadd( 137.348, 494.92, 80.3149, 0.2746 ) }
    dend_40 { pt3dadd( 136.486, 495.672, 80.3768, 0.2746 ) }
    dend_40 { pt3dadd( 135.744, 496.538, 80.4933, 0.2746 ) }
    dend_40 { pt3dadd( 135.024, 497.426, 80.6201, 0.2746 ) }
    dend_40 { pt3dadd( 134.197, 498.211, 80.8027, 0.2746 ) }
    dend_40 { pt3dadd( 133.354, 498.98, 80.9945, 0.2746 ) }
    dend_40 { pt3dadd( 132.427, 499.645, 81.1616, 0.2746 ) }
    dend_40 { pt3dadd( 131.488, 500.295, 81.3252, 0.2746 ) }
    dend_40 { pt3dadd( 130.67, 501.089, 81.4943, 0.2746 ) }
    dend_40 { pt3dadd( 129.865, 501.899, 81.6642, 0.2746 ) }
    dend_40 { pt3dadd( 128.955, 502.587, 81.828, 0.2746 ) }
    dend_40 { pt3dadd( 128.034, 503.263, 81.991, 0.2746 ) }
    dend_40 { pt3dadd( 127.484, 504.263, 82.1257, 0.2746 ) }
    dend_40 { pt3dadd( 126.937, 505.266, 82.2601, 0.2746 ) }
    dend_40 { pt3dadd( 126.093, 506.037, 82.3376, 0.2746 ) }
    dend_40 { pt3dadd( 125.249, 506.808, 82.4155, 0.2746 ) }
    dend_40 { pt3dadd( 124.407, 507.582, 82.4995, 0.2746 ) }
    dend_40 { pt3dadd( 123.593, 508.38, 82.5787, 0.2746 ) }
    dend_40 { pt3dadd( 123.02, 509.369, 82.6179, 0.2746 ) }
    dend_40 { pt3dadd( 122.344, 510.258, 82.6549, 0.2746 ) }
    dend_40 { pt3dadd( 121.366, 510.852, 82.6857, 0.2746 ) }
    dend_40 { pt3dadd( 120.38, 511.432, 82.7232, 0.2746 ) }
    dend_40 { pt3dadd( 119.372, 511.973, 82.7798, 0.2746 ) }
    dend_40 { pt3dadd( 118.549, 512.674, 82.8517, 0.2746 ) }
    dend_40 { pt3dadd( 118.149, 513.745, 82.9595, 0.2746 ) }
    dend_40 { pt3dadd( 117.574, 514.679, 83.1174, 0.2746 ) }
    dend_40 { pt3dadd( 116.641, 515.334, 83.3764, 0.2748 ) }
    dend_40 { pt3dadd( 115.75, 516.034, 83.708, 0.275 ) }
    dend_40 { pt3dadd( 114.909, 516.791, 84.1294, 0.2754 ) }
    dend_40 { pt3dadd( 114.102, 517.565, 84.6852, 0.2768 ) }
    dend_40 { pt3dadd( 113.338, 518.365, 85.4062, 0.2792 ) }
    dend_40 { pt3dadd( 112.564, 519.178, 85.764, 0.2854 ) }
    dend_40 { pt3dadd( 111.779, 520.01, 85.6954, 0.2956 ) }
    dend_40 { pt3dadd( 110.934, 520.758, 85.3944, 0.318 ) }
    dend_40 { pt3dadd( 110.031, 521.427, 84.8663, 0.352 ) }
    dend_40 { pt3dadd( 109.186, 522.174, 84.499, 0.3564 ) }
    dend_40 { pt3dadd( 108.392, 522.993, 84.2755, 0.334 ) }
    dend_40 { pt3dadd( 107.74, 523.917, 84.1322, 0.3324 ) }
    dend_40 { pt3dadd( 107.213, 524.931, 84.0599, 0.3488 ) }
    dend_40 { pt3dadd( 106.477, 525.773, 84.11, 0.369 ) }
    dend_40 { pt3dadd( 105.584, 526.485, 84.2523, 0.3922 ) }
    dend_40 { pt3dadd( 104.626, 527.087, 84.5558, 0.425 ) }
    dend_40 { pt3dadd( 103.623, 527.608, 84.9769, 0.465 ) }
    dend_40 { pt3dadd( 102.856, 528.384, 85.451, 0.55 ) }
    dend_40 { pt3dadd( 102.25, 529.331, 85.9603, 0.6656 ) }
    dend_40 { pt3dadd( 101.602, 530.266, 86.2364, 0.6142 ) }
    dend_40 { pt3dadd( 100.939, 531.195, 86.4349, 0.5076 ) }
    dend_40 { pt3dadd( 100.321, 532.156, 86.4469, 0.5068 ) }
    dend_40 { pt3dadd( 99.7139, 533.125, 86.4181, 0.5292 ) }
    dend_40 { pt3dadd( 99.0096, 534.012, 86.079, 0.5292 ) }
    dend_40 { pt3dadd( 98.285, 534.882, 85.675, 0.5246 ) }
    dend_40 { pt3dadd( 97.5021, 535.714, 85.5691, 0.5252 ) }
    dend_40 { pt3dadd( 96.6974, 536.521, 85.5086, 0.5262 ) }
    dend_40 { pt3dadd( 95.6911, 537.065, 85.4588, 0.5174 ) }
    dend_40 { pt3dadd( 94.6906, 537.618, 85.4529, 0.499 ) }
    dend_40 { pt3dadd( 93.7133, 538.208, 85.6232, 0.4426 ) }
    dend_40 { pt3dadd( 92.6889, 538.688, 85.911, 0.4092 ) }
    dend_40 { pt3dadd( 91.6195, 539.06, 86.3108, 0.3976 ) }
    dend_40 { pt3dadd( 90.5412, 539.378, 86.8221, 0.3698 ) }
    dend_40 { pt3dadd( 89.4606, 539.681, 87.3639, 0.3374 ) }
    dend_40 { pt3dadd( 88.3801, 540.044, 87.5174, 0.3106 ) }
    dend_40 { pt3dadd( 87.2996, 540.418, 87.5871, 0.2848 ) }
    dend_40 { pt3dadd( 86.2997, 540.919, 88.1115, 0.2948 ) }
    dend_40 { pt3dadd( 85.3164, 541.446, 88.7292, 0.3118 ) }
    dend_40 { pt3dadd( 84.226, 541.227, 89.1083, 0.387 ) }
    dend_40 { pt3dadd( 83.1349, 541.009, 89.5062, 0.4578 ) }
    dend_40 { pt3dadd( 82.1294, 541.442, 90.3185, 0.43 ) }
    dend_40 { pt3dadd( 81.1448, 541.801, 91.3461, 0.3848 ) }
    dend_40 { pt3dadd( 80.2113, 541.977, 92.9068, 0.2964 ) }
    dend_40 { pt3dadd( 79.1519, 542.019, 93.8773, 0.2782 ) }
    dend_40 { pt3dadd( 78.0548, 542.023, 94.6708, 0.281 ) }
    dend_40 { pt3dadd( 76.9172, 542.047, 94.6196, 0.2928 ) }
    dend_40 { pt3dadd( 75.7752, 542.073, 94.474, 0.3054 ) }
    dend_40 { pt3dadd( 74.7817, 541.766, 93.3055, 0.3754 ) }
    dend_40 { pt3dadd( 73.7602, 541.658, 92.2116, 0.4312 ) }
    dend_40 { pt3dadd( 72.7019, 541.81, 91.2153, 0.4684 ) }
    dend_40 { pt3dadd( 71.7267, 542.217, 90.4999, 0.4404 ) }
    dend_40 { pt3dadd( 70.8551, 542.943, 90.1354, 0.3306 ) }
    dend_40 { pt3dadd( 69.8831, 543.496, 90.2082, 0.2904 ) }
    dend_40 { pt3dadd( 68.8315, 543.914, 90.6273, 0.305 ) }
    dend_40 { pt3dadd( 67.9486, 544.583, 90.8446, 0.3198 ) }
    dend_40 { pt3dadd( 67.1908, 545.439, 90.9121, 0.3344 ) }
    dend_40 { pt3dadd( 66.3552, 546.207, 90.7054, 0.3444 ) }
    dend_40 { pt3dadd( 65.4792, 546.929, 90.3568, 0.3518 ) }
    dend_40 { pt3dadd( 64.6382, 547.677, 89.8772, 0.339 ) }
    dend_40 { pt3dadd( 63.814, 548.439, 89.3354, 0.3166 ) }
    dend_40 { pt3dadd( 62.9238, 549.144, 89.0798, 0.3316 ) }
    dend_40 { pt3dadd( 62.0063, 549.825, 88.9428, 0.362 ) }
    dend_40 { pt3dadd( 61.5654, 550.83, 88.8756, 0.353 ) }
    dend_40 { pt3dadd( 61.2718, 551.937, 88.83, 0.3318 ) }
    dend_40 { pt3dadd( 60.6995, 552.911, 89.0324, 0.3422 ) }
    dend_40 { pt3dadd( 60.0655, 553.857, 89.2895, 0.3598 ) }
    dend_40 { pt3dadd( 59.873, 554.967, 89.5065, 0.3716 ) }
    dend_40 { pt3dadd( 59.7486, 556.101, 89.7173, 0.3826 ) }
    dend_40 { pt3dadd( 59.7254, 557.242, 89.6776, 0.4182 ) }
    dend_40 { pt3dadd( 59.7173, 558.386, 89.6, 0.4576 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 99/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 352.238, 343.772, 52.1052, 0.645 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_31 { pt3dadd( 352.465, 343.051, 51.8468, 0.4672 ) }
    dend_31 { pt3dadd( 352.758, 341.961, 51.7387, 0.2942 ) }
    dend_31 { pt3dadd( 352.945, 340.849, 52.2166, 0.3174 ) }
    dend_31 { pt3dadd( 353.248, 339.767, 52.6011, 0.357 ) }
    dend_31 { pt3dadd( 353.697, 338.72, 52.8716, 0.4166 ) }
    dend_31 { pt3dadd( 353.98, 337.639, 53.2487, 0.4128 ) }
    dend_31 { pt3dadd( 354.068, 336.518, 53.7555, 0.3322 ) }
    dend_31 { pt3dadd( 354.284, 335.424, 54.3127, 0.3224 ) }
    dend_31 { pt3dadd( 354.603, 334.353, 54.9091, 0.3678 ) }
    dend_31 { pt3dadd( 354.388, 333.343, 55.3087, 0.4126 ) }
    dend_31 { pt3dadd( 353.783, 332.378, 55.5646, 0.4572 ) }
    dend_31 { pt3dadd( 353.02, 331.545, 55.7598, 0.446 ) }
    dend_31 { pt3dadd( 352.161, 330.791, 55.9191, 0.402 ) }
    dend_31 { pt3dadd( 351.444, 329.918, 56.1907, 0.4016 ) }
    dend_31 { pt3dadd( 350.801, 328.981, 56.5228, 0.4246 ) }
    dend_31 { pt3dadd( 350.301, 327.971, 56.9041, 0.3902 ) }
    dend_31 { pt3dadd( 349.872, 326.923, 57.3104, 0.326 ) }
    dend_31 { pt3dadd( 349.284, 325.957, 57.3362, 0.3058 ) }
    dend_31 { pt3dadd( 348.619, 325.028, 57.1791, 0.3064 ) }
    dend_31 { pt3dadd( 347.912, 324.149, 56.7538, 0.3238 ) }
    dend_31 { pt3dadd( 347.188, 323.291, 56.2229, 0.348 ) }
    dend_31 { pt3dadd( 346.491, 322.394, 55.907, 0.3326 ) }
    dend_31 { pt3dadd( 345.803, 321.487, 55.6511, 0.3062 ) }
    dend_31 { pt3dadd( 345.253, 320.489, 55.5162, 0.3248 ) }
    dend_31 { pt3dadd( 344.74, 319.468, 55.4117, 0.3544 ) }
    dend_31 { pt3dadd( 344.302, 318.413, 55.2126, 0.318 ) }
    dend_31 { pt3dadd( 343.862, 317.364, 55.1376, 0.2936 ) }
    dend_31 { pt3dadd( 343.408, 316.337, 55.678, 0.3286 ) }
    dend_31 { pt3dadd( 343.068, 315.283, 56.2159, 0.3432 ) }
    dend_31 { pt3dadd( 343.008, 314.162, 56.7479, 0.3086 ) }
    dend_31 { pt3dadd( 343.066, 313.048, 56.9173, 0.2976 ) }
    dend_31 { pt3dadd( 343.322, 311.947, 56.4878, 0.3254 ) }
    dend_31 { pt3dadd( 343.497, 310.829, 56.1324, 0.3532 ) }
    dend_31 { pt3dadd( 343.573, 309.693, 55.8692, 0.381 ) }
    dend_31 { pt3dadd( 343.794, 308.589, 55.568, 0.3886 ) }
    dend_31 { pt3dadd( 344.179, 307.521, 55.2238, 0.3726 ) }
    dend_31 { pt3dadd( 344.477, 306.424, 54.9937, 0.3942 ) }
    dend_31 { pt3dadd( 344.706, 305.305, 54.8498, 0.4438 ) }
    dend_31 { pt3dadd( 344.893, 304.178, 54.8688, 0.421 ) }
    dend_31 { pt3dadd( 345.057, 303.047, 54.9797, 0.3574 ) }
    dend_31 { pt3dadd( 345.313, 301.935, 54.9195, 0.3672 ) }
    dend_31 { pt3dadd( 345.603, 300.828, 54.7968, 0.404 ) }
    dend_31 { pt3dadd( 345.723, 299.701, 54.5558, 0.405 ) }
    dend_31 { pt3dadd( 345.784, 298.563, 54.2755, 0.3944 ) }
    dend_31 { pt3dadd( 345.648, 297.443, 53.8894, 0.3614 ) }
    dend_31 { pt3dadd( 345.457, 296.329, 53.475, 0.3226 ) }
    dend_31 { pt3dadd( 345.419, 295.198, 53.1087, 0.3634 ) }
    dend_31 { pt3dadd( 345.415, 294.063, 52.7528, 0.4214 ) }
    dend_31 { pt3dadd( 344.964, 293.034, 52.6557, 0.4172 ) }
    dend_31 { pt3dadd( 344.422, 292.027, 52.6114, 0.4 ) }
    dend_31 { pt3dadd( 344.025, 290.957, 52.764, 0.3876 ) }
    dend_31 { pt3dadd( 343.646, 289.88, 52.9346, 0.3758 ) }
    dend_31 { pt3dadd( 343.485, 288.748, 52.8282, 0.3756 ) }
    dend_31 { pt3dadd( 343.32, 287.618, 52.7246, 0.3756 ) }
    dend_31 { pt3dadd( 342.817, 286.591, 52.836, 0.3944 ) }
    dend_31 { pt3dadd( 342.316, 285.564, 52.9441, 0.4116 ) }
    dend_31 { pt3dadd( 341.855, 284.517, 52.9488, 0.387 ) }
    dend_31 { pt3dadd( 341.423, 283.463, 52.9519, 0.363 ) }
    dend_31 { pt3dadd( 341.294, 282.326, 52.9385, 0.346 ) }
    dend_31 { pt3dadd( 341.208, 281.192, 52.9301, 0.3344 ) }
    dend_31 { pt3dadd( 341.462, 280.076, 52.964, 0.364 ) }
    dend_31 { pt3dadd( 341.71, 278.96, 53.03, 0.3828 ) }
    dend_31 { pt3dadd( 341.931, 277.84, 53.2101, 0.3634 ) }
    dend_31 { pt3dadd( 342.138, 276.718, 53.3047, 0.3648 ) }
    dend_31 { pt3dadd( 342.296, 275.587, 53.0981, 0.4402 ) }
    dend_31 { pt3dadd( 342.443, 274.457, 52.8777, 0.5154 ) }
    dend_31 { pt3dadd( 342.565, 273.324, 52.6162, 0.59 ) }
    dend_31 { pt3dadd( 342.708, 272.194, 52.381, 0.6028 ) }
    dend_31 { pt3dadd( 342.914, 271.071, 52.2214, 0.436 ) }
    dend_31 { pt3dadd( 343.003, 269.95, 52.0601, 0.3096 ) }
    dend_31 { pt3dadd( 342.763, 268.833, 51.8935, 0.2956 ) }
    dend_31 { pt3dadd( 342.529, 267.715, 51.7104, 0.2918 ) }
    dend_31 { pt3dadd( 342.304, 266.598, 51.494, 0.3082 ) }
    dend_31 { pt3dadd( 342.082, 265.478, 51.2884, 0.323 ) }
    dend_31 { pt3dadd( 341.863, 264.358, 51.1034, 0.3354 ) }
    dend_31 { pt3dadd( 341.724, 263.23, 50.9384, 0.3442 ) }
    dend_31 { pt3dadd( 341.732, 262.087, 50.8082, 0.3466 ) }
    dend_31 { pt3dadd( 341.792, 260.948, 50.6873, 0.347 ) }
    dend_31 { pt3dadd( 341.921, 259.812, 50.5786, 0.3452 ) }
    dend_31 { pt3dadd( 342.27, 258.75, 50.3784, 0.3382 ) }
    dend_31 { pt3dadd( 342.826, 257.756, 50.0945, 0.3268 ) }
    dend_31 { pt3dadd( 343.724, 257.243, 49.7848, 0.3128 ) }
    dend_31 { pt3dadd( 344.841, 257.033, 49.4589, 0.297 ) }
    dend_31 { pt3dadd( 345.504, 256.286, 49.0683, 0.3102 ) }
    dend_31 { pt3dadd( 345.904, 255.229, 48.6399, 0.34 ) }
    dend_31 { pt3dadd( 346.442, 254.23, 48.3258, 0.419 ) }
    dend_31 { pt3dadd( 347.017, 253.247, 48.0424, 0.5116 ) }
    dend_31 { pt3dadd( 347.593, 252.262, 47.8596, 0.4708 ) }
    dend_31 { pt3dadd( 348.168, 251.275, 47.6932, 0.4076 ) }
    dend_31 { pt3dadd( 348.241, 250.147, 47.4956, 0.3868 ) }
    dend_31 { pt3dadd( 348.268, 249.007, 47.2954, 0.3698 ) }
    dend_31 { pt3dadd( 348.121, 247.874, 47.1517, 0.339 ) }
    dend_31 { pt3dadd( 347.962, 246.742, 47.0123, 0.3072 ) }
    dend_31 { pt3dadd( 347.878, 245.603, 46.9479, 0.333 ) }
    dend_31 { pt3dadd( 347.799, 244.461, 46.8882, 0.3628 ) }
    dend_31 { pt3dadd( 348.023, 243.342, 46.9944, 0.3442 ) }
    dend_31 { pt3dadd( 348.262, 242.225, 47.1092, 0.3232 ) }
    dend_31 { pt3dadd( 348.513, 241.108, 47.1456, 0.3374 ) }
    dend_31 { pt3dadd( 348.763, 239.993, 47.1786, 0.3528 ) }
    dend_31 { pt3dadd( 348.879, 238.855, 47.2038, 0.3074 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_31 { pt3dadd( 348.992, 237.716, 47.2287, 0.2602 ) }
    dend_31 { pt3dadd( 349.355, 236.633, 47.1352, 0.2442 ) }
    dend_31 { pt3dadd( 349.721, 235.55, 47.04, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 3/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 352.238, 343.772, 52.1052, 0.645 ) }
    dend_28 { pt3dadd( 352.828, 343.336, 51.9803, 0.617 ) }
    dend_28 { pt3dadd( 353.766, 342.684, 51.8734, 0.5894 ) }
    dend_28 { pt3dadd( 354.714, 342.042, 51.7994, 0.5676 ) }
    dend_28 { pt3dadd( 355.691, 341.45, 51.7678, 0.6246 ) }
    dend_28 { pt3dadd( 356.672, 340.862, 51.7406, 0.69 ) }
    dend_28 { pt3dadd( 357.578, 340.168, 51.952, 0.6432 ) }
    dend_28 { pt3dadd( 358.478, 339.469, 52.1774, 0.5896 ) }
    dend_28 { pt3dadd( 359.095, 338.51, 52.3345, 0.5966 ) }
    dend_28 { pt3dadd( 359.712, 337.549, 52.4793, 0.6024 ) }
    dend_28 { pt3dadd( 360.383, 336.621, 52.4754, 0.5856 ) }
    dend_28 { pt3dadd( 361.082, 335.723, 52.4796, 0.5628 ) }
    dend_28 { pt3dadd( 362.017, 335.064, 52.5549, 0.4894 ) }
    dend_28 { pt3dadd( 362.923, 334.376, 52.642, 0.4234 ) }
    dend_28 { pt3dadd( 363.603, 333.459, 52.8209, 0.4148 ) }
    dend_28 { pt3dadd( 364.253, 332.524, 52.964, 0.4044 ) }
    dend_28 { pt3dadd( 364.694, 331.469, 52.8732, 0.3812 ) }
    dend_28 { pt3dadd( 365.109, 330.407, 52.7794, 0.3598 ) }
    dend_28 { pt3dadd( 365.358, 329.291, 52.6674, 0.3482 ) }
    dend_28 { pt3dadd( 365.807, 328.304, 52.5773, 0.3532 ) }
    dend_28 { pt3dadd( 366.72, 327.615, 52.5375, 0.3962 ) }
    dend_28 { pt3dadd( 367.643, 326.939, 52.5146, 0.4068 ) }
    dend_28 { pt3dadd( 368.583, 326.288, 52.521, 0.3598 ) }
    dend_28 { pt3dadd( 369.435, 325.54, 52.5465, 0.3332 ) }
    dend_28 { pt3dadd( 370.177, 324.668, 52.596, 0.3316 ) }
    dend_28 { pt3dadd( 370.887, 323.773, 52.6683, 0.3412 ) }
    dend_28 { pt3dadd( 371.559, 322.848, 52.7685, 0.3642 ) }
    dend_28 { pt3dadd( 372.21, 321.909, 52.883, 0.4006 ) }
    dend_28 { pt3dadd( 372.835, 320.953, 53.0152, 0.4532 ) }
    dend_28 { pt3dadd( 373.477, 320.007, 53.0908, 0.519 ) }
    dend_28 { pt3dadd( 374.135, 319.071, 53.1009, 0.5998 ) }
    dend_28 { pt3dadd( 374.827, 318.161, 53.1446, 0.6012 ) }
    dend_28 { pt3dadd( 375.55, 317.276, 53.2185, 0.5294 ) }
    dend_28 { pt3dadd( 376.293, 316.406, 53.3078, 0.4492 ) }
    dend_28 { pt3dadd( 377.05, 315.549, 53.4097, 0.362 ) }
    dend_28 { pt3dadd( 377.79, 314.685, 53.6631, 0.3288 ) }
    dend_28 { pt3dadd( 378.516, 313.814, 54.0375, 0.3384 ) }
    dend_28 { pt3dadd( 379.296, 312.979, 54.1523, 0.3616 ) }
    dend_28 { pt3dadd( 380.081, 312.15, 54.2391, 0.3864 ) }
    dend_28 { pt3dadd( 380.953, 311.417, 54.5034, 0.382 ) }
    dend_28 { pt3dadd( 381.829, 310.69, 54.7764, 0.376 ) }
    dend_28 { pt3dadd( 382.612, 309.856, 54.7333, 0.4922 ) }
    dend_28 { pt3dadd( 383.392, 309.02, 54.6837, 0.6108 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 46/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 330.159, 374.802, 49.9092, 0.7092 ) }
    dend_23 { pt3dadd( 329.345, 374.757, 49.6944, 0.5828 ) }
    dend_23 { pt3dadd( 328.21, 374.695, 49.3948, 0.4064 ) }
    dend_23 { pt3dadd( 327.138, 374.321, 49.1028, 0.396 ) }
    dend_23 { pt3dadd( 326.072, 373.923, 48.8116, 0.3984 ) }
    dend_23 { pt3dadd( 325.102, 373.322, 48.6786, 0.4604 ) }
    dend_23 { pt3dadd( 324.133, 372.715, 48.5489, 0.5238 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 53/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 330.159, 374.802, 49.9092, 0.7092 ) }
    dend_18 { pt3dadd( 329.298, 375.022, 49.562, 0.6994 ) }
    dend_18 { pt3dadd( 328.203, 375.301, 49.1207, 0.6868 ) }
    dend_18 { pt3dadd( 327.257, 375.916, 48.7267, 0.6864 ) }
    dend_18 { pt3dadd( 326.315, 376.547, 48.3347, 0.6864 ) }
    dend_18 { pt3dadd( 325.531, 377.379, 48.3694, 0.6864 ) }
    dend_18 { pt3dadd( 324.751, 378.216, 48.4109, 0.6864 ) }
    dend_18 { pt3dadd( 323.967, 379.046, 48.566, 0.6864 ) }
    dend_18 { pt3dadd( 323.184, 379.877, 48.7231, 0.6864 ) }
    dend_18 { pt3dadd( 322.408, 380.716, 48.65, 0.6864 ) }
    dend_18 { pt3dadd( 321.632, 381.557, 48.5736, 0.6864 ) }
    dend_18 { pt3dadd( 321.125, 382.58, 48.4114, 0.6864 ) }
    dend_18 { pt3dadd( 320.623, 383.606, 48.2482, 0.6864 ) }
    dend_18 { pt3dadd( 319.836, 384.431, 48.0547, 0.6864 ) }
    dend_18 { pt3dadd( 319.044, 385.253, 47.8612, 0.6864 ) }
    dend_18 { pt3dadd( 318.214, 386.037, 47.7288, 0.6864 ) }
    dend_18 { pt3dadd( 317.382, 386.821, 47.5961, 0.6864 ) }
    dend_18 { pt3dadd( 316.613, 387.667, 47.4695, 0.6864 ) }
    dend_18 { pt3dadd( 315.844, 388.512, 47.343, 0.6864 ) }
    dend_18 { pt3dadd( 314.869, 389.11, 47.2842, 0.6864 ) }
    dend_18 { pt3dadd( 313.892, 389.705, 47.2256, 0.6864 ) }
    dend_18 { pt3dadd( 312.859, 390.194, 47.1758, 0.6864 ) }
    dend_18 { pt3dadd( 311.835, 390.695, 47.1276, 0.6864 ) }
    dend_18 { pt3dadd( 311.139, 391.604, 47.1433, 0.6864 ) }
    dend_18 { pt3dadd( 310.438, 392.508, 47.1579, 0.6864 ) }
    dend_18 { pt3dadd( 309.633, 393.32, 47.1467, 0.6864 ) }
    dend_18 { pt3dadd( 308.82, 394.124, 47.1346, 0.6864 ) }
    dend_18 { pt3dadd( 307.902, 394.807, 47.1075, 0.6864 ) }
    dend_18 { pt3dadd( 306.988, 395.493, 47.0893, 0.6864 ) }
    dend_18 { pt3dadd( 306.117, 396.235, 47.1988, 0.6864 ) }
    dend_18 { pt3dadd( 305.258, 396.986, 47.3082, 0.6864 ) }
    dend_18 { pt3dadd( 304.559, 397.891, 47.4186, 0.6864 ) }
    dend_18 { pt3dadd( 303.872, 398.803, 47.5154, 0.6864 ) }
    dend_18 { pt3dadd( 303.301, 399.795, 47.4594, 0.6864 ) }
    dend_18 { pt3dadd( 302.728, 400.784, 47.3956, 0.6864 ) }
    dend_18 { pt3dadd( 302.125, 401.753, 47.2422, 0.6864 ) }
    dend_18 { pt3dadd( 301.546, 402.735, 47.0893, 0.6864 ) }
    dend_18 { pt3dadd( 301.205, 403.825, 46.9406, 0.6864 ) }
    dend_18 { pt3dadd( 300.847, 404.909, 46.7989, 0.6864 ) }
    dend_18 { pt3dadd( 300.322, 405.924, 46.7225, 0.6864 ) }
    dend_18 { pt3dadd( 299.798, 406.941, 46.653, 0.6864 ) }
    dend_18 { pt3dadd( 299.298, 407.97, 46.6449, 0.6864 ) }
    dend_18 { pt3dadd( 298.779, 408.987, 46.6474, 0.6864 ) }
    dend_18 { pt3dadd( 298.097, 409.905, 46.7404, 0.6864 ) }
    dend_18 { pt3dadd( 297.451, 410.842, 46.823, 0.6864 ) }
    dend_18 { pt3dadd( 297.033, 411.908, 46.8395, 0.6864 ) }
    dend_18 { pt3dadd( 296.638, 412.979, 46.8314, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_18 { pt3dadd( 296.373, 414.09, 46.6796, 0.6864 ) }
    dend_18 { pt3dadd( 296.059, 415.182, 46.5307, 0.6864 ) }
    dend_18 { pt3dadd( 295.468, 416.16, 46.3985, 0.6864 ) }
    dend_18 { pt3dadd( 294.921, 417.159, 46.3072, 0.6864 ) }
    dend_18 { pt3dadd( 294.576, 418.249, 46.3974, 0.6864 ) }
    dend_18 { pt3dadd( 294.158, 419.3, 46.5004, 0.6864 ) }
    dend_18 { pt3dadd( 293.477, 420.217, 46.6497, 0.6864 ) }
    dend_18 { pt3dadd( 292.724, 421.062, 46.8188, 0.6864 ) }
    dend_18 { pt3dadd( 291.796, 421.724, 47.0372, 0.6864 ) }
    dend_18 { pt3dadd( 290.916, 422.441, 47.2592, 0.6864 ) }
    dend_18 { pt3dadd( 290.16, 423.294, 47.4911, 0.6864 ) }
    dend_18 { pt3dadd( 289.329, 424.057, 47.71, 0.6864 ) }
    dend_18 { pt3dadd( 288.339, 424.622, 47.901, 0.6864 ) }
    dend_18 { pt3dadd( 287.392, 425.252, 48.076, 0.6864 ) }
    dend_18 { pt3dadd( 286.538, 426.011, 48.2191, 0.6864 ) }
    dend_18 { pt3dadd( 285.701, 426.789, 48.3224, 0.6864 ) }
    dend_18 { pt3dadd( 284.898, 427.603, 48.3476, 0.6864 ) }
    dend_18 { pt3dadd( 284.125, 428.444, 48.3305, 0.6864 ) }
    dend_18 { pt3dadd( 283.409, 429.336, 48.2303, 0.6864 ) }
    dend_18 { pt3dadd( 282.721, 430.248, 48.1729, 0.6864 ) }
    dend_18 { pt3dadd( 282.085, 431.199, 48.1981, 0.6864 ) }
    dend_18 { pt3dadd( 281.441, 432.144, 48.2185, 0.6864 ) }
    dend_18 { pt3dadd( 280.779, 433.076, 48.2292, 0.6864 ) }
    dend_18 { pt3dadd( 280.073, 433.974, 48.2126, 0.6864 ) }
    dend_18 { pt3dadd( 279.293, 434.81, 48.1446, 0.6864 ) }
    dend_18 { pt3dadd( 278.572, 435.692, 48.113, 0.6864 ) }
    dend_18 { pt3dadd( 277.964, 436.661, 48.1499, 0.6864 ) }
    dend_18 { pt3dadd( 277.396, 437.652, 48.225, 0.6864 ) }
    dend_18 { pt3dadd( 276.9, 438.681, 48.3678, 0.6864 ) }
    dend_18 { pt3dadd( 276.516, 439.747, 48.4893, 0.6864 ) }
    dend_18 { pt3dadd( 276.317, 440.872, 48.575, 0.6864 ) }
    dend_18 { pt3dadd( 275.951, 441.931, 48.6315, 0.6864 ) }
    dend_18 { pt3dadd( 275.313, 442.88, 48.641, 0.6864 ) }
    dend_18 { pt3dadd( 274.633, 443.799, 48.6321, 0.6864 ) }
    dend_18 { pt3dadd( 273.9, 444.676, 48.5976, 0.6864 ) }
    dend_18 { pt3dadd( 273.243, 445.607, 48.55, 0.6864 ) }
    dend_18 { pt3dadd( 272.688, 446.606, 48.4859, 0.6864 ) }
    dend_18 { pt3dadd( 272.147, 447.614, 48.384, 0.6864 ) }
    dend_18 { pt3dadd( 271.628, 448.63, 48.2345, 0.6864 ) }
    dend_18 { pt3dadd( 271.193, 449.682, 48.1102, 0.6864 ) }
    dend_18 { pt3dadd( 270.868, 450.78, 48.0169, 0.6864 ) }
    dend_18 { pt3dadd( 270.477, 451.85, 47.992, 0.6864 ) }
    dend_18 { pt3dadd( 270.003, 452.891, 48.0497, 0.6864 ) }
    dend_18 { pt3dadd( 269.457, 453.892, 48.0774, 0.6864 ) }
    dend_18 { pt3dadd( 268.822, 454.843, 48.0696, 0.6864 ) }
    dend_18 { pt3dadd( 268.306, 455.853, 47.9856, 0.6864 ) }
    dend_18 { pt3dadd( 267.931, 456.932, 47.8125, 0.6864 ) }
    dend_18 { pt3dadd( 267.516, 457.996, 47.7288, 0.6864 ) }
    dend_18 { pt3dadd( 267.056, 459.044, 47.742, 0.6864 ) }
    dend_18 { pt3dadd( 266.444, 459.993, 47.8022, 0.6864 ) }
    dend_18 { pt3dadd( 265.689, 460.851, 47.9066, 0.6864 ) }
    dend_18 { pt3dadd( 265.014, 461.768, 48.0603, 0.6864 ) }
    dend_18 { pt3dadd( 264.416, 462.739, 48.2602, 0.6864 ) }
    dend_18 { pt3dadd( 263.898, 463.754, 48.4212, 0.6864 ) }
    dend_18 { pt3dadd( 263.454, 464.806, 48.5467, 0.6864 ) }
    dend_18 { pt3dadd( 262.994, 465.853, 48.6326, 0.6864 ) }
    dend_18 { pt3dadd( 262.52, 466.894, 48.6833, 0.6864 ) }
    dend_18 { pt3dadd( 261.971, 467.895, 48.7102, 0.6864 ) }
    dend_18 { pt3dadd( 261.358, 468.862, 48.7152, 0.6864 ) }
    dend_18 { pt3dadd( 260.682, 469.78, 48.7172, 0.6864 ) }
    dend_18 { pt3dadd( 259.949, 470.659, 48.7161, 0.6864 ) }
    dend_18 { pt3dadd( 259.365, 471.629, 48.7144, 0.6864 ) }
    dend_18 { pt3dadd( 258.912, 472.679, 48.7122, 0.6864 ) }
    dend_18 { pt3dadd( 258.448, 473.725, 48.7091, 0.6864 ) }
    dend_18 { pt3dadd( 257.975, 474.767, 48.7052, 0.6864 ) }
    dend_18 { pt3dadd( 257.266, 475.621, 48.6979, 0.6864 ) }
    dend_18 { pt3dadd( 256.363, 476.326, 48.6881, 0.6864 ) }
    dend_18 { pt3dadd( 255.629, 477.183, 48.6797, 0.6864 ) }
    dend_18 { pt3dadd( 255.01, 478.145, 48.6724, 0.6864 ) }
    dend_18 { pt3dadd( 254.508, 479.168, 48.6242, 0.6864 ) }
    dend_18 { pt3dadd( 254.064, 480.223, 48.5554, 0.6864 ) }
    dend_18 { pt3dadd( 253.531, 481.23, 48.4378, 0.6864 ) }
    dend_18 { pt3dadd( 252.951, 482.215, 48.2961, 0.6864 ) }
    dend_18 { pt3dadd( 252.274, 483.133, 48.2698, 0.6864 ) }
    dend_18 { pt3dadd( 251.551, 484.018, 48.2964, 0.6864 ) }
    dend_18 { pt3dadd( 250.825, 484.903, 48.3526, 0.6864 ) }
    dend_18 { pt3dadd( 250.099, 485.786, 48.4221, 0.6864 ) }
    dend_18 { pt3dadd( 249.32, 486.622, 48.4448, 0.6864 ) }
    dend_18 { pt3dadd( 248.518, 487.439, 48.447, 0.6864 ) }
    dend_18 { pt3dadd( 247.715, 488.252, 48.3666, 0.6864 ) }
    dend_18 { pt3dadd( 246.912, 489.066, 48.251, 0.6864 ) }
    dend_18 { pt3dadd( 246.48, 490.087, 48.0486, 0.6864 ) }
    dend_18 { pt3dadd( 246.195, 491.191, 47.8125, 0.6864 ) }
    dend_18 { pt3dadd( 246.061, 492.32, 47.6062, 0.6864 ) }
    dend_18 { pt3dadd( 245.975, 493.459, 47.4093, 0.6864 ) }
    dend_18 { pt3dadd( 245.595, 494.523, 47.234, 0.6864 ) }
    dend_18 { pt3dadd( 245.127, 495.564, 47.0652, 0.6864 ) }
    dend_18 { pt3dadd( 244.604, 496.579, 46.9319, 0.6864 ) }
    dend_18 { pt3dadd( 244.068, 497.589, 46.8087, 0.6864 ) }
    dend_18 { pt3dadd( 243.754, 498.681, 46.7687, 0.6864 ) }
    dend_18 { pt3dadd( 243.5, 499.798, 46.7513, 0.6864 ) }
    dend_18 { pt3dadd( 243.426, 500.935, 46.8348, 0.6864 ) }
    dend_18 { pt3dadd( 243.395, 502.078, 46.9431, 0.6864 ) }
    dend_18 { pt3dadd( 243.194, 503.2, 46.9512, 0.6864 ) }
    dend_18 { pt3dadd( 242.95, 504.318, 46.9347, 0.6864 ) }
    dend_18 { pt3dadd( 242.652, 505.42, 46.8026, 0.6864 ) }
    dend_18 { pt3dadd( 242.34, 506.519, 46.6432, 0.6864 ) }
    dend_18 { pt3dadd( 242.013, 507.613, 46.4906, 0.6864 ) }
    dend_18 { pt3dadd( 241.681, 508.707, 46.3397, 0.6864 ) }
    dend_18 { pt3dadd( 241.259, 509.767, 46.2168, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_18 { pt3dadd( 240.815, 510.821, 46.1006, 0.6864 ) }
    dend_18 { pt3dadd( 240.386, 511.88, 45.9757, 0.6864 ) }
    dend_18 { pt3dadd( 239.962, 512.941, 45.8489, 0.6864 ) }
    dend_18 { pt3dadd( 239.39, 513.928, 45.7708, 0.6864 ) }
    dend_18 { pt3dadd( 238.785, 514.899, 45.7038, 0.6864 ) }
    dend_18 { pt3dadd( 238.186, 515.873, 45.7523, 0.6864 ) }
    dend_18 { pt3dadd( 237.589, 516.849, 45.8276, 0.6864 ) }
    dend_18 { pt3dadd( 237.314, 517.946, 45.8926, 0.6864 ) }
    dend_18 { pt3dadd( 237.111, 519.072, 45.955, 0.6864 ) }
    dend_18 { pt3dadd( 237.092, 520.212, 45.9038, 0.6864 ) }
    dend_18 { pt3dadd( 237.105, 521.356, 45.8307, 0.6864 ) }
    dend_18 { pt3dadd( 236.67, 522.396, 45.8315, 0.6864 ) }
    dend_18 { pt3dadd( 236.156, 523.419, 45.845, 0.6864 ) }
    dend_18 { pt3dadd( 235.43, 524.296, 45.887, 0.6864 ) }
    dend_18 { pt3dadd( 234.67, 525.152, 45.9334, 0.6864 ) }
    dend_18 { pt3dadd( 234.273, 526.214, 45.8928, 0.6864 ) }
    dend_18 { pt3dadd( 233.923, 527.303, 45.8408, 0.6864 ) }
    dend_18 { pt3dadd( 233.457, 528.347, 45.8623, 0.6864 ) }
    dend_18 { pt3dadd( 232.979, 529.386, 45.8928, 0.6864 ) }
    dend_18 { pt3dadd( 232.296, 530.3, 45.913, 0.6864 ) }
    dend_18 { pt3dadd( 231.589, 531.199, 45.932, 0.6864 ) }
    dend_18 { pt3dadd( 230.638, 531.824, 45.8377, 0.6864 ) }
    dend_18 { pt3dadd( 229.665, 532.424, 45.7338, 0.6864 ) }
    dend_18 { pt3dadd( 228.948, 533.309, 45.6554, 0.6864 ) }
    dend_18 { pt3dadd( 228.249, 534.214, 45.5787, 0.6864 ) }
    dend_18 { pt3dadd( 227.839, 535.28, 45.5781, 0.6864 ) }
    dend_18 { pt3dadd( 227.444, 536.353, 45.5812, 0.6864 ) }
    dend_18 { pt3dadd( 226.93, 537.375, 45.6319, 0.6864 ) }
    dend_18 { pt3dadd( 226.41, 538.394, 45.6848, 0.6864 ) }
    dend_18 { pt3dadd( 225.829, 539.378, 45.6089, 0.6864 ) }
    dend_18 { pt3dadd( 225.247, 540.363, 45.5314, 0.6864 ) }
    dend_18 { pt3dadd( 224.652, 541.337, 45.3796, 0.6864 ) }
    dend_18 { pt3dadd( 224.058, 542.313, 45.2276, 0.6864 ) }
    dend_18 { pt3dadd( 223.482, 543.298, 45.0366, 0.6864 ) }
    dend_18 { pt3dadd( 222.905, 544.283, 44.8448, 0.6864 ) }
    dend_18 { pt3dadd( 222.327, 545.267, 44.6121, 0.6864 ) }
    dend_18 { pt3dadd( 221.752, 546.251, 44.3803, 0.6864 ) }
    dend_18 { pt3dadd( 221.207, 547.254, 44.2008, 0.6864 ) }
    dend_18 { pt3dadd( 220.658, 548.254, 44.021, 0.6864 ) }
    dend_18 { pt3dadd( 219.84, 549.049, 43.8189, 0.6864 ) }
    dend_18 { pt3dadd( 219.026, 549.848, 43.6176, 0.6864 ) }
    dend_18 { pt3dadd( 218.426, 550.82, 43.4512, 0.6864 ) }
    dend_18 { pt3dadd( 217.837, 551.797, 43.2964, 0.6864 ) }
    dend_18 { pt3dadd( 217.432, 552.867, 43.3577, 0.6864 ) }
    dend_18 { pt3dadd( 216.978, 553.897, 43.4174, 0.6864 ) }
    dend_18 { pt3dadd( 216.038, 554.548, 43.4647, 0.6864 ) }
    dend_18 { pt3dadd( 215.101, 555.203, 43.4893, 0.6864 ) }
    dend_18 { pt3dadd( 214.192, 555.895, 43.3115, 0.6864 ) }
    dend_18 { pt3dadd( 213.345, 556.631, 43.1155, 0.6864 ) }
    dend_18 { pt3dadd( 212.936, 557.692, 42.7896, 0.6864 ) }
    dend_18 { pt3dadd( 212.506, 558.742, 42.4729, 0.6864 ) }
    dend_18 { pt3dadd( 211.94, 559.731, 42.2125, 0.6864 ) }
    dend_18 { pt3dadd( 211.345, 560.7, 41.9664, 0.6864 ) }
    dend_18 { pt3dadd( 210.601, 561.566, 41.7976, 0.6864 ) }
    dend_18 { pt3dadd( 209.819, 562.387, 41.6237, 0.6864 ) }
    dend_18 { pt3dadd( 208.842, 562.976, 41.4232, 0.6864 ) }
    dend_18 { pt3dadd( 207.887, 563.595, 41.2317, 0.6864 ) }
    dend_18 { pt3dadd( 207.038, 564.36, 41.0824, 0.6864 ) }
    dend_18 { pt3dadd( 206.236, 565.165, 40.9466, 0.6864 ) }
    dend_18 { pt3dadd( 205.625, 566.13, 40.8674, 0.6864 ) }
    dend_18 { pt3dadd( 205.009, 567.094, 40.7935, 0.6864 ) }
    dend_18 { pt3dadd( 204.378, 568.049, 40.742, 0.6864 ) }
    dend_18 { pt3dadd( 203.741, 568.998, 40.6834, 0.6864 ) }
    dend_18 { pt3dadd( 203.083, 569.933, 40.5972, 0.6864 ) }
    dend_18 { pt3dadd( 202.418, 570.863, 40.4916, 0.6864 ) }
    dend_18 { pt3dadd( 201.733, 571.776, 40.3133, 0.6864 ) }
    dend_18 { pt3dadd( 201.079, 572.709, 40.1484, 0.6864 ) }
    dend_18 { pt3dadd( 200.535, 573.715, 40.0324, 0.6864 ) }
    dend_18 { pt3dadd( 200.063, 574.748, 39.9174, 0.6864 ) }
    dend_18 { pt3dadd( 199.807, 575.861, 39.8048, 0.6864 ) }
    dend_18 { pt3dadd( 199.572, 576.98, 39.6858, 0.6864 ) }
    dend_18 { pt3dadd( 199.405, 578.109, 39.548, 0.6864 ) }
    dend_18 { pt3dadd( 199.233, 579.239, 39.4198, 0.6864 ) }
    dend_18 { pt3dadd( 199.053, 580.368, 39.317, 0.6864 ) }
    dend_18 { pt3dadd( 198.516, 581.193, 39.2325, 0.6864 ) }
    dend_18 { pt3dadd( 197.428, 581.548, 39.1754, 0.6864 ) }
    dend_18 { pt3dadd( 196.463, 582.108, 39.076, 0.6864 ) }
    dend_18 { pt3dadd( 195.622, 582.883, 38.9323, 0.6864 ) }
    dend_18 { pt3dadd( 194.922, 583.767, 38.8088, 0.6864 ) }
    dend_18 { pt3dadd( 194.36, 584.764, 38.7052, 0.6864 ) }
    dend_18 { pt3dadd( 193.647, 585.638, 38.6266, 0.6864 ) }
    dend_18 { pt3dadd( 192.79, 586.395, 38.5717, 0.6864 ) }
    dend_18 { pt3dadd( 192.221, 587.338, 38.521, 0.6864 ) }
    dend_18 { pt3dadd( 191.885, 588.431, 38.4734, 0.6864 ) }
    dend_18 { pt3dadd( 191.691, 589.551, 38.4045, 0.6864 ) }
    dend_18 { pt3dadd( 191.592, 590.691, 38.3214, 0.6864 ) }
    dend_18 { pt3dadd( 191.28, 591.774, 38.169, 0.6864 ) }
    dend_18 { pt3dadd( 190.824, 592.821, 37.9708, 0.6864 ) }
    dend_18 { pt3dadd( 190.397, 593.879, 37.8, 0.6864 ) }
    dend_18 { pt3dadd( 189.988, 594.946, 37.6466, 0.6864 ) }
    dend_18 { pt3dadd( 189.676, 596.043, 37.5449, 0.6864 ) }
    dend_18 { pt3dadd( 189.415, 597.157, 37.4707, 0.6864 ) }
    dend_18 { pt3dadd( 189.206, 598.28, 37.3892, 0.6864 ) }
    dend_18 { pt3dadd( 189.023, 599.409, 37.3044, 0.6864 ) }
    dend_18 { pt3dadd( 188.778, 600.523, 37.1459, 0.6864 ) }
    dend_18 { pt3dadd( 188.504, 601.631, 36.9513, 0.6864 ) }
    dend_18 { pt3dadd( 188.038, 602.664, 36.7934, 0.6864 ) }
    dend_18 { pt3dadd( 187.48, 603.661, 36.6534, 0.6864 ) }
    dend_18 { pt3dadd( 186.748, 604.527, 36.5856, 0.6864 ) }
    dend_18 { pt3dadd( 185.936, 605.333, 36.5509, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_18 { pt3dadd( 185.115, 606.13, 36.5761, 0.6864 ) }
    dend_18 { pt3dadd( 184.292, 606.924, 36.6257, 0.6864 ) }
    dend_18 { pt3dadd( 183.938, 607.965, 36.7349, 0.6864 ) }
    dend_18 { pt3dadd( 183.746, 609.092, 36.8645, 0.6864 ) }
    dend_18 { pt3dadd( 183.119, 610.008, 36.86, 0.6864 ) }
    dend_18 { pt3dadd( 182.352, 610.857, 36.8127, 0.6864 ) }
    dend_18 { pt3dadd( 181.298, 611.279, 36.6408, 0.6864 ) }
    dend_18 { pt3dadd( 180.229, 611.68, 36.4624, 0.6864 ) }
    dend_18 { pt3dadd( 179.435, 612.5, 36.2776, 0.6864 ) }
    dend_18 { pt3dadd( 178.641, 613.321, 36.0926, 0.6864 ) }
    dend_18 { pt3dadd( 178.006, 614.267, 35.8607, 0.6864 ) }
    dend_18 { pt3dadd( 177.37, 615.214, 35.6292, 0.6864 ) }
    dend_18 { pt3dadd( 176.893, 616.252, 35.4802, 0.6864 ) }
    dend_18 { pt3dadd( 176.416, 617.29, 35.3315, 0.6864 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 14/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 343.66, 442.189, 46.2456, 0.407 ) }
    dend_11 { pt3dadd( 343.36, 442.515, 46.1524, 0.4362 ) }
    dend_11 { pt3dadd( 342.642, 443.397, 45.9743, 0.4916 ) }
    dend_11 { pt3dadd( 342.007, 444.348, 45.8959, 0.5156 ) }
    dend_11 { pt3dadd( 341.448, 445.341, 45.8581, 0.5422 ) }
    dend_11 { pt3dadd( 340.998, 446.393, 45.8755, 0.5724 ) }
    dend_11 { pt3dadd( 340.525, 447.434, 45.878, 0.6412 ) }
    dend_11 { pt3dadd( 340.023, 448.462, 45.8601, 0.762 ) }
    dend_11 { pt3dadd( 339.615, 449.525, 45.7971, 0.8372 ) }
    dend_11 { pt3dadd( 339.309, 450.626, 45.6842, 0.8618 ) }
    dend_11 { pt3dadd( 338.832, 451.647, 45.5524, 0.8708 ) }
    dend_11 { pt3dadd( 338.178, 452.582, 45.4006, 0.8638 ) }
    dend_11 { pt3dadd( 337.654, 453.587, 45.3124, 0.8234 ) }
    dend_11 { pt3dadd( 337.259, 454.661, 45.2889, 0.749 ) }
    dend_11 { pt3dadd( 337.151, 455.766, 45.2861, 0.6796 ) }
    dend_11 { pt3dadd( 337.309, 456.9, 45.3026, 0.6146 ) }
    dend_11 { pt3dadd( 337.311, 458.034, 45.3146, 0.6662 ) }
    dend_11 { pt3dadd( 337.171, 459.168, 45.3222, 0.8242 ) }
    dend_11 { pt3dadd( 336.87, 460.262, 45.2976, 0.79 ) }
    dend_11 { pt3dadd( 336.432, 461.319, 45.2458, 0.5912 ) }
    dend_11 { pt3dadd( 336.096, 462.407, 45.3026, 0.4748 ) }
    dend_11 { pt3dadd( 335.845, 463.521, 45.4516, 0.4282 ) }
    dend_11 { pt3dadd( 335.305, 464.486, 45.5745, 0.4152 ) }
    dend_11 { pt3dadd( 334.533, 465.329, 45.677, 0.429 ) }
    dend_11 { pt3dadd( 333.954, 466.294, 45.6691, 0.4478 ) }
    dend_11 { pt3dadd( 333.516, 467.35, 45.5812, 0.4704 ) }
    dend_11 { pt3dadd( 333.358, 468.463, 45.4756, 0.5176 ) }
    dend_11 { pt3dadd( 333.347, 469.607, 45.3608, 0.578 ) }
    dend_11 { pt3dadd( 333.198, 470.737, 45.2659, 0.5568 ) }
    dend_11 { pt3dadd( 332.977, 471.858, 45.1814, 0.4934 ) }
    dend_11 { pt3dadd( 332.475, 472.866, 45.0685, 0.4506 ) }
    dend_11 { pt3dadd( 331.848, 473.82, 44.9425, 0.417 ) }
    dend_11 { pt3dadd( 331.309, 474.826, 44.8493, 0.4382 ) }
    dend_11 { pt3dadd( 330.813, 475.856, 44.7703, 0.4838 ) }
    dend_11 { pt3dadd( 330.257, 476.853, 44.6998, 0.5418 ) }
    dend_11 { pt3dadd( 329.672, 477.837, 44.6328, 0.6054 ) }
    dend_11 { pt3dadd( 329.06, 478.803, 44.5228, 0.6076 ) }
    dend_11 { pt3dadd( 328.435, 479.76, 44.3937, 0.583 ) }
    dend_11 { pt3dadd( 327.971, 480.798, 44.2758, 0.5446 ) }
    dend_11 { pt3dadd( 327.578, 481.871, 44.1624, 0.5002 ) }
    dend_11 { pt3dadd( 327.448, 482.995, 44.0516, 0.5086 ) }
    dend_11 { pt3dadd( 327.418, 484.137, 43.9412, 0.5372 ) }
    dend_11 { pt3dadd( 327.36, 485.278, 43.8161, 0.51 ) }
    dend_11 { pt3dadd( 327.29, 486.418, 43.685, 0.4618 ) }
    dend_11 { pt3dadd( 326.914, 487.482, 43.6352, 0.4514 ) }
    dend_11 { pt3dadd( 326.427, 488.517, 43.6148, 0.4548 ) }
    dend_11 { pt3dadd( 325.835, 489.492, 43.5445, 0.501 ) }
    dend_11 { pt3dadd( 325.208, 490.449, 43.458, 0.5612 ) }
    dend_11 { pt3dadd( 324.699, 491.47, 43.3902, 0.564 ) }
    dend_11 { pt3dadd( 324.228, 492.513, 43.3289, 0.5476 ) }
    dend_11 { pt3dadd( 323.835, 493.586, 43.3138, 0.5478 ) }
    dend_11 { pt3dadd( 323.464, 494.668, 43.3129, 0.5532 ) }
    dend_11 { pt3dadd( 322.806, 495.585, 43.3793, 0.501 ) }
    dend_11 { pt3dadd( 322.061, 496.454, 43.4658, 0.4314 ) }
    dend_11 { pt3dadd( 321.323, 497.324, 43.6153, 0.4186 ) }
    dend_11 { pt3dadd( 320.587, 498.197, 43.7819, 0.4212 ) }
    dend_11 { pt3dadd( 319.917, 499.124, 43.8866, 0.4544 ) }
    dend_11 { pt3dadd( 319.266, 500.063, 43.9751, 0.4956 ) }
    dend_11 { pt3dadd( 318.72, 501.066, 43.9751, 0.5328 ) }
    dend_11 { pt3dadd( 318.198, 502.084, 43.953, 0.569 ) }
    dend_11 { pt3dadd( 317.496, 502.979, 43.8365, 0.609 ) }
    dend_11 { pt3dadd( 316.75, 503.845, 43.6976, 0.65 ) }
    dend_11 { pt3dadd( 315.966, 504.672, 43.4591, 0.6 ) }
    dend_11 { pt3dadd( 315.174, 505.491, 43.1978, 0.5296 ) }
    dend_11 { pt3dadd( 315.38, 506.53, 43.0088, 0.4724 ) }
    dend_11 { pt3dadd( 315.758, 507.608, 42.8322, 0.4176 ) }
    dend_11 { pt3dadd( 315.987, 508.727, 42.9184, 0.3958 ) }
    dend_11 { pt3dadd( 316.206, 509.849, 43.0223, 0.3764 ) }
    dend_11 { pt3dadd( 316.242, 510.992, 43.0186, 0.3516 ) }
    dend_11 { pt3dadd( 316.274, 512.136, 43.0128, 0.3268 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 343.66, 442.189, 46.2456, 0.407 ) }
    dend_6 { pt3dadd( 344.05, 442.702, 45.6319, 0.3994 ) }
    dend_6 { pt3dadd( 344.783, 443.54, 45.3057, 0.4444 ) }
    dend_6 { pt3dadd( 345.567, 444.372, 45.3992, 0.5246 ) }
    dend_6 { pt3dadd( 346.451, 445.083, 45.6232, 0.566 ) }
    dend_6 { pt3dadd( 347.384, 445.736, 45.9113, 0.5886 ) }
    dend_6 { pt3dadd( 348.152, 446.56, 46.1087, 0.5498 ) }
    dend_6 { pt3dadd( 348.842, 447.472, 46.2622, 0.4812 ) }
    dend_6 { pt3dadd( 349.474, 448.422, 46.1692, 0.4852 ) }
    dend_6 { pt3dadd( 350.079, 449.388, 45.9659, 0.5218 ) }
    dend_6 { pt3dadd( 350.431, 450.458, 45.7582, 0.631 ) }
    dend_6 { pt3dadd( 350.672, 451.573, 45.5484, 0.7724 ) }
    dend_6 { pt3dadd( 350.643, 452.704, 45.4448, 0.7874 ) }
    dend_6 { pt3dadd( 350.511, 453.84, 45.3818, 0.754 ) }
    dend_6 { pt3dadd( 350.54, 454.979, 45.376, 0.662 ) }
    dend_6 { pt3dadd( 350.628, 456.12, 45.3911, 0.5486 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_6 { pt3dadd( 350.996, 457.19, 45.4149, 0.4706 ) }
    dend_6 { pt3dadd( 351.453, 458.24, 45.4412, 0.4038 ) }
    dend_6 { pt3dadd( 351.926, 459.28, 45.4798, 0.4096 ) }
    dend_6 { pt3dadd( 352.408, 460.319, 45.5218, 0.4382 ) }
    dend_6 { pt3dadd( 352.536, 461.439, 45.5974, 0.465 ) }
    dend_6 { pt3dadd( 352.572, 462.583, 45.6817, 0.4914 ) }
    dend_6 { pt3dadd( 353.083, 463.573, 45.8349, 0.477 ) }
    dend_6 { pt3dadd( 353.712, 464.526, 46.0048, 0.4526 ) }
    dend_6 { pt3dadd( 354.465, 465.385, 46.0656, 0.4732 ) }
    dend_6 { pt3dadd( 355.236, 466.23, 46.1096, 0.5008 ) }
    dend_6 { pt3dadd( 355.666, 467.283, 46.0468, 0.4342 ) }
    dend_6 { pt3dadd( 356.064, 468.355, 45.9743, 0.3588 ) }
    dend_6 { pt3dadd( 356.707, 469.297, 46.0536, 0.3648 ) }
    dend_6 { pt3dadd( 357.371, 470.229, 46.1457, 0.3778 ) }
    dend_6 { pt3dadd( 357.645, 471.331, 46.2557, 0.4052 ) }
    dend_6 { pt3dadd( 357.889, 472.448, 46.3669, 0.4334 ) }
    dend_6 { pt3dadd( 357.922, 473.59, 46.4663, 0.4416 ) }
    dend_6 { pt3dadd( 357.938, 474.733, 46.5648, 0.4482 ) }
    dend_6 { pt3dadd( 357.408, 475.737, 46.5066, 0.4502 ) }
    dend_6 { pt3dadd( 356.847, 476.734, 46.4397, 0.4522 ) }
    dend_6 { pt3dadd( 356.759, 477.867, 46.2126, 0.443 ) }
    dend_6 { pt3dadd( 356.688, 479.005, 45.9802, 0.4336 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 357.348, 405.09, 40.4925, 0.4532 ) }
    dend_3 { pt3dadd( 357.32, 405.491, 40.3007, 0.444 ) }
    dend_3 { pt3dadd( 357.192, 406.591, 39.797, 0.414 ) }
    dend_3 { pt3dadd( 356.445, 407.456, 39.6752, 0.3406 ) }
    dend_3 { pt3dadd( 355.608, 408.186, 39.5637, 0.2916 ) }
    dend_3 { pt3dadd( 354.521, 408.543, 39.4797, 0.3092 ) }
    dend_3 { pt3dadd( 353.43, 408.878, 39.366, 0.3322 ) }
    dend_3 { pt3dadd( 352.326, 409.174, 39.2008, 0.3648 ) }
    dend_3 { pt3dadd( 351.51, 409.829, 39.02, 0.3672 ) }
    dend_3 { pt3dadd( 350.982, 410.839, 38.8231, 0.3396 ) }
    dend_3 { pt3dadd( 350.84, 411.938, 38.5482, 0.3378 ) }
    dend_3 { pt3dadd( 350.868, 413.074, 38.239, 0.3474 ) }
    dend_3 { pt3dadd( 350.772, 414.192, 37.7415, 0.4378 ) }
    dend_3 { pt3dadd( 350.626, 415.302, 37.1652, 0.562 ) }
    dend_3 { pt3dadd( 350.199, 416.347, 36.9312, 0.5962 ) }
    dend_3 { pt3dadd( 349.703, 417.376, 36.7833, 0.6078 ) }
    dend_3 { pt3dadd( 349.261, 418.429, 36.8214, 0.6732 ) }
    dend_3 { pt3dadd( 348.831, 419.49, 36.8973, 0.7494 ) }
    dend_3 { pt3dadd( 348.247, 420.469, 36.79, 0.7228 ) }
    dend_3 { pt3dadd( 347.636, 421.436, 36.6506, 0.6778 ) }
    dend_3 { pt3dadd( 346.904, 422.306, 36.3958, 0.5674 ) }
    dend_3 { pt3dadd( 346.156, 423.164, 36.1264, 0.4488 ) }
    dend_3 { pt3dadd( 345.632, 424.178, 36.0948, 0.4748 ) }
    dend_3 { pt3dadd( 345.122, 425.202, 36.087, 0.5088 ) }
    dend_3 { pt3dadd( 344.551, 426.191, 36.2516, 0.4346 ) }
    dend_3 { pt3dadd( 343.972, 427.174, 36.3776, 0.3648 ) }
    dend_3 { pt3dadd( 343.274, 428.062, 35.9383, 0.3574 ) }
    dend_3 { pt3dadd( 342.753, 429.007, 35.4752, 0.3526 ) }
    dend_3 { pt3dadd( 342.783, 430.129, 34.9367, 0.3556 ) }
    dend_3 { pt3dadd( 342.65, 431.217, 34.459, 0.382 ) }
    dend_3 { pt3dadd( 342.129, 432.226, 34.1244, 0.4632 ) }
    dend_3 { pt3dadd( 341.613, 433.241, 33.8467, 0.5204 ) }
    dend_3 { pt3dadd( 341.11, 434.266, 33.6997, 0.5224 ) }
    dend_3 { pt3dadd( 340.52, 435.235, 33.6955, 0.5042 ) }
    dend_3 { pt3dadd( 339.798, 436.119, 33.9018, 0.4564 ) }
    dend_3 { pt3dadd( 339.126, 437.04, 33.9864, 0.434 ) }
    dend_3 { pt3dadd( 338.518, 438.008, 33.9147, 0.4442 ) }
    dend_3 { pt3dadd( 337.951, 439.0, 33.8265, 0.4584 ) }
    dend_3 { pt3dadd( 337.41, 440.008, 33.7268, 0.4752 ) }
    dend_3 { pt3dadd( 336.841, 440.999, 33.7117, 0.518 ) }
    dend_3 { pt3dadd( 336.257, 441.982, 33.7408, 0.5744 ) }
    dend_3 { pt3dadd( 335.762, 442.981, 34.2611, 0.4434 ) }
    dend_3 { pt3dadd( 335.306, 443.986, 35.0, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 65/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 357.348, 405.09, 40.4925, 0.4532 ) }
    dend_2 { pt3dadd( 357.603, 405.043, 39.788, 0.472 ) }
    dend_2 { pt3dadd( 358.382, 404.725, 37.891, 0.5398 ) }
    dend_2 { pt3dadd( 359.412, 404.896, 37.254, 0.5632 ) }
    dend_2 { pt3dadd( 360.509, 405.173, 36.9729, 0.5766 ) }
    dend_2 { pt3dadd( 361.624, 404.918, 36.9583, 0.6332 ) }
    dend_2 { pt3dadd( 362.404, 404.263, 36.8836, 0.658 ) }
    dend_2 { pt3dadd( 362.847, 403.211, 36.748, 0.6512 ) }
    dend_2 { pt3dadd( 363.647, 402.552, 36.6108, 0.6362 ) }
    dend_2 { pt3dadd( 364.74, 402.219, 36.4717, 0.6144 ) }
    dend_2 { pt3dadd( 365.866, 402.082, 36.372, 0.594 ) }
    dend_2 { pt3dadd( 367.009, 402.044, 36.2922, 0.5746 ) }
    dend_2 { pt3dadd( 368.0, 402.484, 35.891, 0.5446 ) }
    dend_2 { pt3dadd( 368.929, 403.115, 35.3604, 0.5106 ) }
    dend_2 { pt3dadd( 369.892, 402.8, 34.8362, 0.478 ) }
    dend_2 { pt3dadd( 370.865, 402.236, 34.314, 0.4458 ) }
    dend_2 { pt3dadd( 371.352, 401.239, 33.8789, 0.4016 ) }
    dend_2 { pt3dadd( 371.874, 400.337, 33.4816, 0.3636 ) }
    dend_2 { pt3dadd( 373.012, 400.433, 33.2889, 0.3778 ) }
    dend_2 { pt3dadd( 374.13, 400.43, 33.0576, 0.3818 ) }
    dend_2 { pt3dadd( 375.163, 399.97, 32.6528, 0.3396 ) }
    dend_2 { pt3dadd( 374.921, 398.873, 32.2862, 0.2842 ) }
    dend_2 { pt3dadd( 374.66, 397.769, 31.92, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 88/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 383.392, 309.02, 54.6837, 0.6108 ) }
    dend_30 { pt3dadd( 384.681, 308.318, 54.278, 0.414 ) }
    dend_30 { pt3dadd( 385.6, 307.695, 53.9048, 0.374 ) }
    dend_30 { pt3dadd( 386.34, 306.825, 53.7127, 0.3382 ) }
    dend_30 { pt3dadd( 386.904, 305.88, 53.9193, 0.3318 ) }
    dend_30 { pt3dadd( 387.211, 304.827, 54.7028, 0.3678 ) }
    dend_30 { pt3dadd( 387.251, 303.741, 55.3459, 0.4188 ) }
    dend_30 { pt3dadd( 387.078, 302.632, 55.8774, 0.4818 ) }
    dend_30 { pt3dadd( 387.082, 301.499, 56.0045, 0.4886 ) }
    dend_30 { pt3dadd( 387.159, 300.358, 55.9622, 0.472 ) }
    dend_30 { pt3dadd( 387.339, 299.23, 55.9306, 0.4594 ) }
    dend_30 { pt3dadd( 387.556, 298.107, 55.9031, 0.4484 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_30 { pt3dadd( 387.785, 296.986, 55.9048, 0.419 ) }
    dend_30 { pt3dadd( 388.017, 295.866, 55.9185, 0.3824 ) }
    dend_30 { pt3dadd( 388.034, 294.731, 55.839, 0.399 ) }
    dend_30 { pt3dadd( 387.97, 293.589, 55.7242, 0.4358 ) }
    dend_30 { pt3dadd( 387.988, 292.448, 55.7603, 0.4168 ) }
    dend_30 { pt3dadd( 388.036, 291.305, 55.851, 0.3776 ) }
    dend_30 { pt3dadd( 388.332, 290.22, 56.1803, 0.4074 ) }
    dend_30 { pt3dadd( 388.712, 289.154, 56.59, 0.4604 ) }
    dend_30 { pt3dadd( 389.056, 288.068, 56.8459, 0.5644 ) }
    dend_30 { pt3dadd( 389.391, 286.978, 57.0615, 0.6818 ) }
    dend_30 { pt3dadd( 389.923, 285.968, 57.0408, 0.599 ) }
    dend_30 { pt3dadd( 390.456, 284.958, 57.0094, 0.5042 ) }
    dend_30 { pt3dadd( 390.671, 283.834, 57.0766, 0.4322 ) }
    dend_30 { pt3dadd( 391.02, 282.774, 57.3168, 0.371 ) }
    dend_30 { pt3dadd( 391.63, 281.836, 57.8987, 0.3306 ) }
    dend_30 { pt3dadd( 392.336, 280.953, 58.0927, 0.3012 ) }
    dend_30 { pt3dadd( 393.104, 280.107, 58.0546, 0.2802 ) }
    dend_30 { pt3dadd( 393.865, 279.302, 58.753, 0.2938 ) }
    dend_30 { pt3dadd( 394.651, 278.538, 59.5118, 0.3214 ) }
    dend_30 { pt3dadd( 395.522, 277.904, 60.4523, 0.392 ) }
    dend_30 { pt3dadd( 396.473, 277.423, 61.29, 0.4252 ) }
    dend_30 { pt3dadd( 397.568, 277.225, 61.9419, 0.3908 ) }
    dend_30 { pt3dadd( 398.447, 276.673, 62.4604, 0.351 ) }
    dend_30 { pt3dadd( 399.094, 275.743, 62.8376, 0.3054 ) }
    dend_30 { pt3dadd( 399.802, 274.882, 63.4071, 0.2958 ) }
    dend_30 { pt3dadd( 400.562, 274.084, 64.1519, 0.319 ) }
    dend_30 { pt3dadd( 401.178, 273.162, 64.7413, 0.3348 ) }
    dend_30 { pt3dadd( 401.714, 272.172, 65.2476, 0.3468 ) }
    dend_30 { pt3dadd( 401.94, 271.083, 65.5483, 0.35 ) }
    dend_30 { pt3dadd( 402.011, 269.944, 65.7457, 0.349 ) }
    dend_30 { pt3dadd( 402.289, 268.847, 65.9509, 0.3264 ) }
    dend_30 { pt3dadd( 402.659, 267.768, 66.1595, 0.2936 ) }
    dend_30 { pt3dadd( 403.039, 266.7, 66.5134, 0.302 ) }
    dend_30 { pt3dadd( 403.422, 265.634, 66.9194, 0.3248 ) }
    dend_30 { pt3dadd( 403.833, 264.579, 67.3058, 0.387 ) }
    dend_30 { pt3dadd( 404.255, 263.526, 67.6858, 0.4626 ) }
    dend_30 { pt3dadd( 404.645, 262.474, 68.2242, 0.4864 ) }
    dend_30 { pt3dadd( 405.027, 261.421, 68.7943, 0.4998 ) }
    dend_30 { pt3dadd( 405.676, 260.504, 69.2457, 0.4528 ) }
    dend_30 { pt3dadd( 406.359, 259.603, 69.6822, 0.3984 ) }
    dend_30 { pt3dadd( 406.784, 258.554, 70.0269, 0.353 ) }
    dend_30 { pt3dadd( 407.184, 257.491, 70.3626, 0.3086 ) }
    dend_30 { pt3dadd( 407.279, 256.367, 70.7616, 0.3372 ) }
    dend_30 { pt3dadd( 407.342, 255.237, 71.167, 0.373 ) }
    dend_30 { pt3dadd( 407.695, 254.153, 71.37, 0.3358 ) }
    dend_30 { pt3dadd( 408.018, 253.062, 71.5386, 0.309 ) }
    dend_30 { pt3dadd( 408.152, 251.926, 71.5758, 0.3424 ) }
    dend_30 { pt3dadd( 408.258, 250.789, 71.6128, 0.3636 ) }
    dend_30 { pt3dadd( 408.244, 249.645, 71.6484, 0.3286 ) }
    dend_30 { pt3dadd( 408.272, 248.504, 71.6621, 0.301 ) }
    dend_30 { pt3dadd( 408.447, 247.374, 71.5968, 0.2992 ) }
    dend_30 { pt3dadd( 408.561, 246.241, 71.5221, 0.3048 ) }
    dend_30 { pt3dadd( 408.477, 245.101, 71.4162, 0.3342 ) }
    dend_30 { pt3dadd( 408.417, 243.96, 71.3087, 0.363 ) }
    dend_30 { pt3dadd( 408.432, 242.817, 71.1973, 0.3902 ) }
    dend_30 { pt3dadd( 408.453, 241.675, 71.0654, 0.3956 ) }
    dend_30 { pt3dadd( 408.493, 240.534, 70.8722, 0.3356 ) }
    dend_30 { pt3dadd( 408.529, 239.393, 70.693, 0.2888 ) }
    dend_30 { pt3dadd( 408.549, 238.251, 70.5552, 0.2806 ) }
    dend_30 { pt3dadd( 408.567, 237.109, 70.429, 0.2746 ) }
    dend_30 { pt3dadd( 408.583, 235.965, 70.3357, 0.2746 ) }
    dend_30 { pt3dadd( 408.586, 234.822, 70.2444, 0.2746 ) }
    dend_30 { pt3dadd( 408.557, 233.679, 70.1579, 0.2746 ) }
    dend_30 { pt3dadd( 408.533, 232.535, 70.0952, 0.2746 ) }
    dend_30 { pt3dadd( 408.527, 231.391, 70.1, 0.2746 ) }
    dend_30 { pt3dadd( 408.522, 230.247, 70.1271, 0.2746 ) }
    dend_30 { pt3dadd( 408.522, 229.104, 70.2181, 0.2746 ) }
    dend_30 { pt3dadd( 408.522, 227.961, 70.3161, 0.2746 ) }
    dend_30 { pt3dadd( 408.522, 226.819, 70.4348, 0.2746 ) }
    dend_30 { pt3dadd( 408.522, 225.675, 70.5452, 0.2746 ) }
    dend_30 { pt3dadd( 408.522, 224.532, 70.632, 0.2746 ) }
    dend_30 { pt3dadd( 408.522, 223.388, 70.7207, 0.2746 ) }
    dend_30 { pt3dadd( 408.522, 222.245, 70.8151, 0.2746 ) }
    dend_30 { pt3dadd( 408.522, 221.102, 70.9246, 0.2746 ) }
    dend_30 { pt3dadd( 408.522, 219.959, 71.0774, 0.2748 ) }
    dend_30 { pt3dadd( 408.449, 218.831, 71.3238, 0.2748 ) }
    dend_30 { pt3dadd( 408.171, 217.741, 71.8326, 0.2752 ) }
    dend_30 { pt3dadd( 407.845, 216.676, 72.4374, 0.276 ) }
    dend_30 { pt3dadd( 407.447, 215.647, 73.1847, 0.2778 ) }
    dend_30 { pt3dadd( 406.93, 214.677, 73.8506, 0.2814 ) }
    dend_30 { pt3dadd( 406.25, 213.785, 74.4058, 0.2874 ) }
    dend_30 { pt3dadd( 405.701, 212.821, 74.9473, 0.305 ) }
    dend_30 { pt3dadd( 405.304, 211.768, 75.4726, 0.3368 ) }
    dend_30 { pt3dadd( 404.85, 210.736, 75.9172, 0.391 ) }
    dend_30 { pt3dadd( 404.339, 209.725, 76.2801, 0.468 ) }
    dend_30 { pt3dadd( 403.708, 208.807, 76.8295, 0.4386 ) }
    dend_30 { pt3dadd( 402.996, 207.956, 77.5118, 0.3336 ) }
    dend_30 { pt3dadd( 402.362, 207.023, 77.9134, 0.3156 ) }
    dend_30 { pt3dadd( 401.757, 206.061, 78.2222, 0.3266 ) }
    dend_30 { pt3dadd( 401.219, 205.059, 78.517, 0.382 ) }
    dend_30 { pt3dadd( 400.701, 204.046, 78.8085, 0.4486 ) }
    dend_30 { pt3dadd( 400.747, 202.926, 79.0012, 0.4254 ) }
    dend_30 { pt3dadd( 400.875, 201.792, 79.1798, 0.3894 ) }
    dend_30 { pt3dadd( 400.818, 200.653, 79.3503, 0.3112 ) }
    dend_30 { pt3dadd( 400.743, 199.514, 79.52, 0.2288 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 95/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 383.392, 309.02, 54.6837, 0.6108 ) }
    dend_29 { pt3dadd( 383.789, 308.668, 54.6734, 0.5934 ) }
    dend_29 { pt3dadd( 384.661, 307.929, 54.719, 0.6166 ) }
    dend_29 { pt3dadd( 385.544, 307.203, 54.8156, 0.6856 ) }
    dend_29 { pt3dadd( 386.385, 306.43, 54.7702, 0.667 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_29 { pt3dadd( 387.201, 305.63, 54.6454, 0.5996 ) }
    dend_29 { pt3dadd( 388.174, 305.064, 54.5924, 0.5316 ) }
    dend_29 { pt3dadd( 389.227, 304.614, 54.5754, 0.4636 ) }
    dend_29 { pt3dadd( 390.327, 304.334, 54.7159, 0.4988 ) }
    dend_29 { pt3dadd( 391.449, 304.134, 54.9293, 0.582 ) }
    dend_29 { pt3dadd( 392.553, 303.849, 55.0925, 0.6054 ) }
    dend_29 { pt3dadd( 393.65, 303.526, 55.2339, 0.6036 ) }
    dend_29 { pt3dadd( 394.722, 303.13, 55.1681, 0.5724 ) }
    dend_29 { pt3dadd( 395.792, 302.728, 55.0805, 0.538 ) }
    dend_29 { pt3dadd( 396.887, 302.982, 54.8918, 0.5056 ) }
    dend_29 { pt3dadd( 397.984, 303.295, 54.6935, 0.4734 ) }
    dend_29 { pt3dadd( 399.041, 302.869, 54.9105, 0.515 ) }
    dend_29 { pt3dadd( 400.102, 302.464, 55.2017, 0.5342 ) }
    dend_29 { pt3dadd( 401.176, 302.16, 55.8155, 0.455 ) }
    dend_29 { pt3dadd( 402.243, 301.822, 56.345, 0.3964 ) }
    dend_29 { pt3dadd( 403.286, 301.362, 56.5802, 0.4106 ) }
    dend_29 { pt3dadd( 404.356, 301.007, 56.744, 0.4182 ) }
    dend_29 { pt3dadd( 405.498, 300.929, 56.7193, 0.4094 ) }
    dend_29 { pt3dadd( 406.639, 300.87, 56.7571, 0.3958 ) }
    dend_29 { pt3dadd( 407.781, 300.848, 56.9209, 0.3728 ) }
    dend_29 { pt3dadd( 408.919, 300.863, 57.1628, 0.368 ) }
    dend_29 { pt3dadd( 410.052, 300.931, 57.5182, 0.3898 ) }
    dend_29 { pt3dadd( 411.142, 301.189, 57.9429, 0.4728 ) }
    dend_29 { pt3dadd( 412.207, 301.561, 58.4094, 0.5926 ) }
    dend_29 { pt3dadd( 413.207, 301.251, 59.1259, 0.5304 ) }
    dend_29 { pt3dadd( 414.191, 300.762, 59.908, 0.4204 ) }
    dend_29 { pt3dadd( 415.298, 300.576, 60.3243, 0.5264 ) }
    dend_29 { pt3dadd( 416.424, 300.434, 60.6864, 0.6642 ) }
    dend_29 { pt3dadd( 417.406, 299.865, 60.7558, 0.6738 ) }
    dend_29 { pt3dadd( 418.373, 299.255, 60.7964, 0.671 ) }
    dend_29 { pt3dadd( 419.386, 298.726, 60.8944, 0.7012 ) }
    dend_29 { pt3dadd( 420.404, 298.204, 60.9972, 0.7344 ) }
    dend_29 { pt3dadd( 421.255, 297.463, 61.409, 0.6468 ) }
    dend_29 { pt3dadd( 422.105, 296.764, 61.9223, 0.5472 ) }
    dend_29 { pt3dadd( 423.069, 296.741, 63.4281, 0.3998 ) }
    dend_29 { pt3dadd( 424.003, 296.591, 64.8628, 0.2804 ) }
    dend_29 { pt3dadd( 424.803, 295.921, 66.0044, 0.2778 ) }
    dend_29 { pt3dadd( 425.617, 295.237, 66.9908, 0.2762 ) }
    dend_29 { pt3dadd( 426.478, 294.508, 67.4691, 0.2782 ) }
    dend_29 { pt3dadd( 427.286, 293.728, 67.8272, 0.2814 ) }
    dend_29 { pt3dadd( 427.94, 292.789, 67.8213, 0.2886 ) }
    dend_29 { pt3dadd( 428.655, 291.91, 67.7505, 0.3044 ) }
    dend_29 { pt3dadd( 429.548, 291.201, 67.4957, 0.3442 ) }
    dend_29 { pt3dadd( 430.447, 290.499, 67.2946, 0.3906 ) }
    dend_29 { pt3dadd( 431.355, 289.806, 67.1796, 0.4468 ) }
    dend_29 { pt3dadd( 432.118, 288.99, 67.3534, 0.4338 ) }
    dend_29 { pt3dadd( 432.719, 288.038, 67.8513, 0.343 ) }
    dend_29 { pt3dadd( 433.497, 287.246, 68.2965, 0.3766 ) }
    dend_29 { pt3dadd( 434.386, 286.553, 68.6988, 0.4912 ) }
    dend_29 { pt3dadd( 434.983, 285.587, 69.046, 0.4612 ) }
    dend_29 { pt3dadd( 435.578, 284.619, 69.358, 0.4424 ) }
    dend_29 { pt3dadd( 436.168, 283.641, 69.4968, 0.4788 ) }
    dend_29 { pt3dadd( 436.878, 282.786, 69.6374, 0.4956 ) }
    dend_29 { pt3dadd( 437.876, 282.23, 69.783, 0.4648 ) }
    dend_29 { pt3dadd( 438.721, 281.519, 69.7542, 0.4792 ) }
    dend_29 { pt3dadd( 439.304, 280.544, 69.4333, 0.5696 ) }
    dend_29 { pt3dadd( 439.966, 279.622, 69.2177, 0.5552 ) }
    dend_29 { pt3dadd( 440.715, 278.757, 69.1208, 0.4236 ) }
    dend_29 { pt3dadd( 441.388, 277.838, 69.1362, 0.364 ) }
    dend_29 { pt3dadd( 441.995, 276.87, 69.2499, 0.3674 ) }
    dend_29 { pt3dadd( 442.626, 275.919, 69.4467, 0.3616 ) }
    dend_29 { pt3dadd( 443.276, 274.983, 69.7068, 0.3482 ) }
    dend_29 { pt3dadd( 444.021, 274.144, 70.1425, 0.4224 ) }
    dend_29 { pt3dadd( 444.831, 273.367, 70.6975, 0.5558 ) }
    dend_29 { pt3dadd( 445.602, 272.565, 71.3364, 0.5486 ) }
    dend_29 { pt3dadd( 446.349, 271.746, 72.025, 0.458 ) }
    dend_29 { pt3dadd( 447.289, 271.13, 72.1347, 0.3756 ) }
    dend_29 { pt3dadd( 448.291, 270.58, 72.0605, 0.2956 ) }
    dend_29 { pt3dadd( 449.197, 269.888, 71.8519, 0.2828 ) }
    dend_29 { pt3dadd( 450.077, 269.165, 71.6433, 0.2768 ) }
    dend_29 { pt3dadd( 450.832, 268.307, 71.5047, 0.2806 ) }
    dend_29 { pt3dadd( 451.676, 267.553, 71.491, 0.289 ) }
    dend_29 { pt3dadd( 452.634, 266.931, 71.6352, 0.3026 ) }
    dend_29 { pt3dadd( 453.456, 266.164, 71.7276, 0.3148 ) }
    dend_29 { pt3dadd( 454.13, 265.24, 71.7626, 0.3254 ) }
    dend_29 { pt3dadd( 454.513, 264.198, 71.7458, 0.3188 ) }
    dend_29 { pt3dadd( 454.668, 263.065, 71.6887, 0.2992 ) }
    dend_29 { pt3dadd( 455.333, 262.323, 71.787, 0.3142 ) }
    dend_29 { pt3dadd( 456.382, 261.875, 72.0023, 0.3552 ) }
    dend_29 { pt3dadd( 457.041, 260.993, 72.2809, 0.3374 ) }
    dend_29 { pt3dadd( 457.606, 260.006, 72.5746, 0.3052 ) }
    dend_29 { pt3dadd( 457.862, 258.9, 72.6328, 0.2886 ) }
    dend_29 { pt3dadd( 458.067, 257.774, 72.6505, 0.2746 ) }
    dend_29 { pt3dadd( 458.062, 256.634, 72.4478, 0.2746 ) }
    dend_29 { pt3dadd( 458.059, 255.493, 72.2453, 0.2746 ) }
    dend_29 { pt3dadd( 458.207, 254.359, 72.1392, 0.2746 ) }
    dend_29 { pt3dadd( 458.356, 253.225, 72.0359, 0.2746 ) }
    dend_29 { pt3dadd( 458.442, 252.085, 72.032, 0.2746 ) }
    dend_29 { pt3dadd( 458.542, 250.948, 72.0292, 0.2746 ) }
    dend_29 { pt3dadd( 458.992, 249.896, 72.0642, 0.2746 ) }
    dend_29 { pt3dadd( 459.431, 248.842, 72.1014, 0.2746 ) }
    dend_29 { pt3dadd( 459.663, 247.722, 72.184, 0.2746 ) }
    dend_29 { pt3dadd( 459.895, 246.602, 72.2694, 0.2746 ) }
    dend_29 { pt3dadd( 460.149, 245.488, 72.3811, 0.2746 ) }
    dend_29 { pt3dadd( 460.412, 244.376, 72.5071, 0.2746 ) }
    dend_29 { pt3dadd( 460.727, 243.28, 72.7252, 0.2746 ) }
    dend_29 { pt3dadd( 461.016, 242.177, 72.9224, 0.2746 ) }
    dend_29 { pt3dadd( 461.159, 241.043, 73.0108, 0.2746 ) }
    dend_29 { pt3dadd( 461.391, 239.945, 73.0724, 0.2746 ) }
    dend_29 { pt3dadd( 462.079, 239.031, 72.998, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_29 { pt3dadd( 462.61, 238.047, 72.8994, 0.2746 ) }
    dend_29 { pt3dadd( 462.835, 236.926, 72.7538, 0.2746 ) }
    dend_29 { pt3dadd( 463.039, 235.802, 72.63, 0.2746 ) }
    dend_29 { pt3dadd( 463.214, 234.672, 72.5388, 0.2746 ) }
    dend_29 { pt3dadd( 463.408, 233.545, 72.5035, 0.2746 ) }
    dend_29 { pt3dadd( 463.628, 232.423, 72.5472, 0.2746 ) }
    dend_29 { pt3dadd( 463.998, 231.358, 72.5984, 0.2746 ) }
    dend_29 { pt3dadd( 464.578, 230.373, 72.66, 0.2746 ) }
    dend_29 { pt3dadd( 465.166, 229.391, 72.7087, 0.2746 ) }
    dend_29 { pt3dadd( 465.766, 228.417, 72.7398, 0.2746 ) }
    dend_29 { pt3dadd( 466.186, 227.375, 72.7502, 0.2746 ) }
    dend_29 { pt3dadd( 466.387, 226.248, 72.7348, 0.2746 ) }
    dend_29 { pt3dadd( 466.865, 225.249, 72.6989, 0.2746 ) }
    dend_29 { pt3dadd( 467.587, 224.362, 72.6449, 0.2746 ) }
    dend_29 { pt3dadd( 468.056, 223.347, 72.5824, 0.2746 ) }
    dend_29 { pt3dadd( 468.346, 222.24, 72.5138, 0.2746 ) }
    dend_29 { pt3dadd( 468.46, 221.111, 72.4514, 0.2744 ) }
    dend_29 { pt3dadd( 468.466, 219.967, 72.3926, 0.2744 ) }
    dend_29 { pt3dadd( 468.732, 218.876, 72.3156, 0.2742 ) }
    dend_29 { pt3dadd( 469.161, 217.815, 72.2277, 0.2738 ) }
    dend_29 { pt3dadd( 469.788, 216.875, 72.1036, 0.2728 ) }
    dend_29 { pt3dadd( 470.522, 216.0, 71.96, 0.2714 ) }
    dend_29 { pt3dadd( 471.036, 215.006, 71.524, 0.265 ) }
    dend_29 { pt3dadd( 471.482, 213.974, 70.9968, 0.257 ) }
    dend_29 { pt3dadd( 471.759, 212.869, 71.0242, 0.2432 ) }
    dend_29 { pt3dadd( 472.014, 211.754, 71.12, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 26/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 324.133, 372.715, 48.5489, 0.5238 ) }
    dend_25 { pt3dadd( 324.02, 372.987, 47.8288, 0.3198 ) }
    dend_25 { pt3dadd( 324.537, 372.185, 46.8563, 0.318 ) }
    dend_25 { pt3dadd( 324.985, 371.223, 46.0916, 0.373 ) }
    dend_25 { pt3dadd( 324.938, 370.085, 45.8312, 0.4866 ) }
    dend_25 { pt3dadd( 324.846, 368.953, 45.5459, 0.5646 ) }
    dend_25 { pt3dadd( 324.673, 367.83, 45.2178, 0.5806 ) }
    dend_25 { pt3dadd( 325.016, 367.135, 44.5096, 0.5452 ) }
    dend_25 { pt3dadd( 326.039, 367.005, 43.3051, 0.4438 ) }
    dend_25 { pt3dadd( 327.126, 366.865, 42.4978, 0.4636 ) }
    dend_25 { pt3dadd( 328.174, 366.675, 41.6654, 0.484 ) }
    dend_25 { pt3dadd( 328.693, 365.778, 40.476, 0.5152 ) }
    dend_25 { pt3dadd( 329.585, 365.213, 39.7877, 0.5792 ) }
    dend_25 { pt3dadd( 330.624, 364.78, 39.2991, 0.6566 ) }
    dend_25 { pt3dadd( 331.481, 364.061, 38.9808, 0.6174 ) }
    dend_25 { pt3dadd( 332.279, 363.247, 38.7178, 0.5404 ) }
    dend_25 { pt3dadd( 332.81, 362.254, 38.456, 0.458 ) }
    dend_25 { pt3dadd( 333.266, 361.211, 38.1942, 0.374 ) }
    dend_25 { pt3dadd( 333.645, 360.188, 37.3974, 0.4506 ) }
    dend_25 { pt3dadd( 334.003, 359.17, 36.4694, 0.5668 ) }
    dend_25 { pt3dadd( 334.65, 358.246, 36.0212, 0.5744 ) }
    dend_25 { pt3dadd( 335.307, 357.327, 35.5928, 0.5778 ) }
    dend_25 { pt3dadd( 336.228, 356.65, 35.6045, 0.5196 ) }
    dend_25 { pt3dadd( 337.125, 355.944, 35.667, 0.47 ) }
    dend_25 { pt3dadd( 337.931, 355.138, 35.9069, 0.4504 ) }
    dend_25 { pt3dadd( 338.754, 354.349, 36.0702, 0.4454 ) }
    dend_25 { pt3dadd( 339.632, 353.615, 36.0046, 0.4844 ) }
    dend_25 { pt3dadd( 340.228, 352.712, 35.854, 0.4888 ) }
    dend_25 { pt3dadd( 340.477, 351.6, 35.597, 0.4502 ) }
    dend_25 { pt3dadd( 340.641, 350.482, 35.2405, 0.479 ) }
    dend_25 { pt3dadd( 340.719, 349.356, 34.7799, 0.5788 ) }
    dend_25 { pt3dadd( 341.374, 348.473, 34.4428, 0.5566 ) }
    dend_25 { pt3dadd( 342.145, 347.638, 34.13, 0.5098 ) }
    dend_25 { pt3dadd( 342.53, 346.579, 33.8618, 0.5888 ) }
    dend_25 { pt3dadd( 342.857, 345.488, 33.6, 0.6864 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 61/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 324.133, 372.715, 48.5489, 0.5238 ) }
    dend_24 { pt3dadd( 322.695, 373.269, 48.3739, 0.4528 ) }
    dend_24 { pt3dadd( 321.832, 374.008, 48.0502, 0.4292 ) }
    dend_24 { pt3dadd( 321.096, 374.846, 47.6039, 0.4482 ) }
    dend_24 { pt3dadd( 320.49, 375.788, 47.0324, 0.5108 ) }
    dend_24 { pt3dadd( 319.656, 376.402, 46.1737, 0.6252 ) }
    dend_24 { pt3dadd( 318.673, 376.799, 45.1254, 0.7738 ) }
    dend_24 { pt3dadd( 317.641, 377.26, 44.8392, 0.764 ) }
    dend_24 { pt3dadd( 316.6, 377.732, 44.6849, 0.7268 ) }
    dend_24 { pt3dadd( 315.471, 377.757, 44.5752, 0.717 ) }
    dend_24 { pt3dadd( 314.329, 377.715, 44.4721, 0.7114 ) }
    dend_24 { pt3dadd( 313.294, 377.244, 44.4444, 0.7278 ) }
    dend_24 { pt3dadd( 312.268, 376.737, 44.4237, 0.7462 ) }
    dend_24 { pt3dadd( 311.145, 376.55, 44.4153, 0.7558 ) }
    dend_24 { pt3dadd( 310.011, 376.387, 44.408, 0.7648 ) }
    dend_24 { pt3dadd( 308.968, 376.824, 44.0583, 0.6594 ) }
    dend_24 { pt3dadd( 307.928, 377.27, 43.6638, 0.5592 ) }
    dend_24 { pt3dadd( 306.9, 377.648, 42.866, 0.5492 ) }
    dend_24 { pt3dadd( 305.858, 377.98, 42.1254, 0.5484 ) }
    dend_24 { pt3dadd( 304.72, 377.966, 41.8001, 0.6144 ) }
    dend_24 { pt3dadd( 303.587, 377.99, 41.5744, 0.684 ) }
    dend_24 { pt3dadd( 302.464, 378.189, 41.8093, 0.7694 ) }
    dend_24 { pt3dadd( 301.382, 378.487, 42.0588, 0.8158 ) }
    dend_24 { pt3dadd( 300.425, 379.101, 42.3553, 0.7372 ) }
    dend_24 { pt3dadd( 299.483, 379.743, 42.5664, 0.6564 ) }
    dend_24 { pt3dadd( 298.577, 380.441, 42.5975, 0.5706 ) }
    dend_24 { pt3dadd( 297.621, 381.049, 42.5463, 0.514 ) }
    dend_24 { pt3dadd( 296.566, 381.485, 42.3382, 0.5132 ) }
    dend_24 { pt3dadd( 295.479, 381.733, 42.1887, 0.5386 ) }
    dend_24 { pt3dadd( 294.337, 381.666, 42.1372, 0.6088 ) }
    dend_24 { pt3dadd( 293.199, 381.69, 42.14, 0.6756 ) }
    dend_24 { pt3dadd( 292.068, 381.852, 42.2248, 0.7368 ) }
    dend_24 { pt3dadd( 290.997, 382.206, 42.1705, 0.7124 ) }
    dend_24 { pt3dadd( 289.979, 382.723, 41.9964, 0.614 ) }
    dend_24 { pt3dadd( 288.9, 383.051, 41.8384, 0.621 ) }
    dend_24 { pt3dadd( 287.771, 383.227, 41.6937, 0.7126 ) }
    dend_24 { pt3dadd( 286.635, 383.315, 41.7295, 0.7814 ) }
    dend_24 { pt3dadd( 285.493, 383.341, 41.8939, 0.834 ) }
    dend_24 { pt3dadd( 284.451, 383.701, 42.1008, 0.799 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_24 { pt3dadd( 283.474, 384.29, 42.3371, 0.7044 ) }
    dend_24 { pt3dadd( 282.87, 385.186, 42.488, 0.6406 ) }
    dend_24 { pt3dadd( 282.484, 386.262, 42.5894, 0.595 ) }
    dend_24 { pt3dadd( 281.908, 387.234, 42.7636, 0.5556 ) }
    dend_24 { pt3dadd( 281.224, 388.148, 42.9786, 0.52 ) }
    dend_24 { pt3dadd( 280.52, 389.047, 43.0256, 0.6024 ) }
    dend_24 { pt3dadd( 279.806, 389.942, 43.0055, 0.7318 ) }
    dend_24 { pt3dadd( 278.875, 390.565, 42.8551, 0.6426 ) }
    dend_24 { pt3dadd( 277.858, 391.083, 42.6538, 0.4682 ) }
    dend_24 { pt3dadd( 276.771, 391.31, 42.1392, 0.5142 ) }
    dend_24 { pt3dadd( 275.663, 391.451, 41.5327, 0.6248 ) }
    dend_24 { pt3dadd( 274.559, 391.69, 41.116, 0.6418 ) }
    dend_24 { pt3dadd( 273.455, 391.946, 40.733, 0.6426 ) }
    dend_24 { pt3dadd( 272.431, 392.445, 40.5628, 0.6188 ) }
    dend_24 { pt3dadd( 271.414, 392.964, 40.4118, 0.5928 ) }
    dend_24 { pt3dadd( 270.279, 392.877, 40.3642, 0.5628 ) }
    dend_24 { pt3dadd( 269.145, 392.799, 40.3354, 0.5336 ) }
    dend_24 { pt3dadd( 268.044, 393.106, 40.4757, 0.5166 ) }
    dend_24 { pt3dadd( 266.952, 393.438, 40.6048, 0.4988 ) }
    dend_24 { pt3dadd( 265.922, 393.935, 40.6613, 0.4776 ) }
    dend_24 { pt3dadd( 264.885, 394.417, 40.7098, 0.4508 ) }
    dend_24 { pt3dadd( 263.819, 394.831, 40.7215, 0.397 ) }
    dend_24 { pt3dadd( 262.788, 395.308, 40.7378, 0.37 ) }
    dend_24 { pt3dadd( 261.882, 396.006, 40.7708, 0.4398 ) }
    dend_24 { pt3dadd( 260.981, 396.711, 40.8145, 0.5012 ) }
    dend_24 { pt3dadd( 260.096, 397.436, 40.8954, 0.5336 ) }
    dend_24 { pt3dadd( 259.202, 398.146, 40.9884, 0.5628 ) }
    dend_24 { pt3dadd( 258.267, 398.804, 41.1233, 0.5824 ) }
    dend_24 { pt3dadd( 257.286, 399.378, 41.2899, 0.5782 ) }
    dend_24 { pt3dadd( 256.249, 399.855, 41.4924, 0.547 ) }
    dend_24 { pt3dadd( 255.397, 400.554, 41.6354, 0.5072 ) }
    dend_24 { pt3dadd( 254.741, 401.491, 41.715, 0.4584 ) }
    dend_24 { pt3dadd( 254.149, 402.467, 41.8149, 0.4374 ) }
    dend_24 { pt3dadd( 253.61, 403.475, 41.9328, 0.4412 ) }
    dend_24 { pt3dadd( 252.905, 404.354, 42.0392, 0.457 ) }
    dend_24 { pt3dadd( 252.056, 405.12, 42.1352, 0.4828 ) }
    dend_24 { pt3dadd( 251.048, 405.578, 42.366, 0.5314 ) }
    dend_24 { pt3dadd( 249.946, 405.852, 42.6765, 0.593 ) }
    dend_24 { pt3dadd( 248.826, 405.827, 42.8604, 0.5664 ) }
    dend_24 { pt3dadd( 247.698, 405.644, 42.9783, 0.4932 ) }
    dend_24 { pt3dadd( 246.765, 406.146, 43.036, 0.4576 ) }
    dend_24 { pt3dadd( 245.905, 406.9, 43.0713, 0.436 ) }
    dend_24 { pt3dadd( 244.988, 407.582, 43.1043, 0.3858 ) }
    dend_24 { pt3dadd( 244.053, 408.241, 43.1365, 0.327 ) }
    dend_24 { pt3dadd( 242.987, 408.631, 43.2645, 0.329 ) }
    dend_24 { pt3dadd( 241.895, 408.971, 43.4112, 0.3428 ) }
    dend_24 { pt3dadd( 240.773, 409.18, 43.4356, 0.4178 ) }
    dend_24 { pt3dadd( 239.644, 409.37, 43.4423, 0.5016 ) }
    dend_24 { pt3dadd( 238.58, 409.774, 43.2634, 0.4844 ) }
    dend_24 { pt3dadd( 237.524, 410.205, 43.0606, 0.4542 ) }
    dend_24 { pt3dadd( 236.397, 410.356, 42.8092, 0.4718 ) }
    dend_24 { pt3dadd( 235.266, 410.48, 42.553, 0.494 ) }
    dend_24 { pt3dadd( 234.344, 409.816, 42.4906, 0.561 ) }
    dend_24 { pt3dadd( 233.393, 409.201, 42.4435, 0.6154 ) }
    dend_24 { pt3dadd( 232.297, 408.872, 42.4371, 0.6134 ) }
    dend_24 { pt3dadd( 231.189, 408.615, 42.4589, 0.6034 ) }
    dend_24 { pt3dadd( 230.048, 408.54, 42.5536, 0.5722 ) }
    dend_24 { pt3dadd( 228.908, 408.458, 42.6552, 0.5366 ) }
    dend_24 { pt3dadd( 227.768, 408.369, 42.7736, 0.4898 ) }
    dend_24 { pt3dadd( 226.666, 408.458, 42.7736, 0.4468 ) }
    dend_24 { pt3dadd( 225.653, 408.978, 42.4906, 0.4124 ) }
    dend_24 { pt3dadd( 224.638, 409.492, 42.2097, 0.412 ) }
    dend_24 { pt3dadd( 223.618, 409.997, 41.9336, 0.4814 ) }
    dend_24 { pt3dadd( 222.609, 410.527, 41.7592, 0.5314 ) }
    dend_24 { pt3dadd( 221.62, 411.103, 41.7763, 0.5442 ) }
    dend_24 { pt3dadd( 220.638, 411.689, 41.7441, 0.567 ) }
    dend_24 { pt3dadd( 219.663, 412.286, 41.6514, 0.6022 ) }
    dend_24 { pt3dadd( 218.678, 412.867, 41.5724, 0.6302 ) }
    dend_24 { pt3dadd( 217.685, 413.434, 41.5058, 0.652 ) }
    dend_24 { pt3dadd( 216.739, 414.072, 41.4366, 0.5902 ) }
    dend_24 { pt3dadd( 215.837, 414.776, 41.3655, 0.4526 ) }
    dend_24 { pt3dadd( 214.935, 415.478, 41.3039, 0.3932 ) }
    dend_24 { pt3dadd( 214.031, 416.178, 41.2516, 0.4042 ) }
    dend_24 { pt3dadd( 213.128, 416.88, 41.1715, 0.495 ) }
    dend_24 { pt3dadd( 212.228, 417.585, 41.0668, 0.6572 ) }
    dend_24 { pt3dadd( 211.283, 418.226, 41.0001, 0.8298 ) }
    dend_24 { pt3dadd( 210.301, 418.813, 40.9654, 1.0118 ) }
    dend_24 { pt3dadd( 209.316, 419.394, 40.9346, 1.0518 ) }
    dend_24 { pt3dadd( 208.329, 419.973, 40.9066, 0.972 ) }
    dend_24 { pt3dadd( 207.428, 420.665, 40.8671, 0.8986 ) }
    dend_24 { pt3dadd( 206.598, 421.452, 40.8181, 0.8302 ) }
    dend_24 { pt3dadd( 205.878, 422.329, 40.6496, 0.7472 ) }
    dend_24 { pt3dadd( 205.238, 423.271, 40.3925, 0.6534 ) }
    dend_24 { pt3dadd( 204.451, 424.086, 40.2296, 0.697 ) }
    dend_24 { pt3dadd( 203.59, 424.838, 40.1148, 0.8108 ) }
    dend_24 { pt3dadd( 202.676, 425.519, 40.2234, 0.897 ) }
    dend_24 { pt3dadd( 201.736, 426.168, 40.4393, 0.9696 ) }
    dend_24 { pt3dadd( 200.953, 426.989, 40.5289, 0.7568 ) }
    dend_24 { pt3dadd( 200.216, 427.864, 40.5798, 0.456 ) }
    dend_24 { pt3dadd( 199.374, 428.634, 40.5759, 0.3928 ) }
    dend_24 { pt3dadd( 198.505, 429.378, 40.5583, 0.3896 ) }
    dend_24 { pt3dadd( 197.728, 430.215, 40.4757, 0.3814 ) }
    dend_24 { pt3dadd( 196.972, 431.072, 40.3791, 0.3722 ) }
    dend_24 { pt3dadd( 196.024, 431.698, 40.2788, 0.4104 ) }
    dend_24 { pt3dadd( 195.038, 432.278, 40.1783, 0.4582 ) }
    dend_24 { pt3dadd( 194.043, 432.838, 40.2427, 0.6246 ) }
    dend_24 { pt3dadd( 193.044, 433.396, 40.3357, 0.8112 ) }
    dend_24 { pt3dadd( 191.965, 433.748, 40.5989, 0.8676 ) }
    dend_24 { pt3dadd( 190.873, 434.067, 40.889, 0.903 ) }
    dend_24 { pt3dadd( 189.886, 434.624, 41.1925, 0.8524 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_24 { pt3dadd( 188.913, 435.213, 41.4977, 0.7902 ) }
    dend_24 { pt3dadd( 188.404, 436.213, 41.6184, 0.7442 ) }
    dend_24 { pt3dadd( 187.951, 437.263, 41.7169, 0.7002 ) }
    dend_24 { pt3dadd( 187.443, 438.287, 41.8281, 0.6164 ) }
    dend_24 { pt3dadd( 186.926, 439.304, 41.9364, 0.534 ) }
    dend_24 { pt3dadd( 186.099, 440.095, 41.9373, 0.5074 ) }
    dend_24 { pt3dadd( 185.282, 440.892, 41.8734, 0.478 ) }
    dend_24 { pt3dadd( 184.518, 441.729, 41.4786, 0.4332 ) }
    dend_24 { pt3dadd( 183.755, 442.568, 41.1608, 0.436 ) }
    dend_24 { pt3dadd( 182.991, 443.42, 41.13, 0.616 ) }
    dend_24 { pt3dadd( 182.21, 444.254, 41.0914, 0.762 ) }
    dend_24 { pt3dadd( 181.369, 445.029, 41.0259, 0.7964 ) }
    dend_24 { pt3dadd( 180.527, 445.803, 40.9665, 0.8132 ) }
    dend_24 { pt3dadd( 179.685, 446.578, 40.9251, 0.775 ) }
    dend_24 { pt3dadd( 178.808, 447.306, 40.8724, 0.7216 ) }
    dend_24 { pt3dadd( 177.828, 447.894, 40.7848, 0.6222 ) }
    dend_24 { pt3dadd( 176.893, 448.541, 40.7442, 0.5312 ) }
    dend_24 { pt3dadd( 176.095, 449.359, 40.8444, 0.4658 ) }
    dend_24 { pt3dadd( 175.256, 450.127, 40.9542, 0.4362 ) }
    dend_24 { pt3dadd( 174.301, 450.755, 41.0908, 0.509 ) }
    dend_24 { pt3dadd( 173.363, 451.406, 41.2051, 0.591 ) }
    dend_24 { pt3dadd( 172.467, 452.118, 41.2622, 0.6972 ) }
    dend_24 { pt3dadd( 171.557, 452.809, 41.2796, 0.7206 ) }
    dend_24 { pt3dadd( 170.63, 453.48, 41.2549, 0.6556 ) }
    dend_24 { pt3dadd( 169.667, 454.087, 41.0586, 0.6594 ) }
    dend_24 { pt3dadd( 168.68, 454.654, 40.7529, 0.7074 ) }
    dend_24 { pt3dadd( 167.686, 455.204, 40.4482, 0.7208 ) }
    dend_24 { pt3dadd( 166.686, 455.748, 40.1439, 0.7178 ) }
    dend_24 { pt3dadd( 165.666, 456.236, 39.7513, 0.7528 ) }
    dend_24 { pt3dadd( 164.637, 456.703, 39.3221, 0.8034 ) }
    dend_24 { pt3dadd( 163.669, 457.254, 38.71, 0.7068 ) }
    dend_24 { pt3dadd( 162.726, 457.839, 38.0257, 0.552 ) }
    dend_24 { pt3dadd( 161.797, 458.15, 36.6845, 0.4516 ) }
    dend_24 { pt3dadd( 160.874, 458.372, 35.1243, 0.3692 ) }
    dend_24 { pt3dadd( 160.154, 459.163, 34.1832, 0.3488 ) }
    dend_24 { pt3dadd( 159.366, 459.893, 33.4354, 0.3536 ) }
    dend_24 { pt3dadd( 158.318, 460.343, 33.2265, 0.4318 ) }
    dend_24 { pt3dadd( 157.266, 460.781, 33.1514, 0.473 ) }
    dend_24 { pt3dadd( 156.203, 461.19, 33.4376, 0.4144 ) }
    dend_24 { pt3dadd( 155.187, 461.668, 33.882, 0.3574 ) }
    dend_24 { pt3dadd( 154.235, 462.242, 34.5414, 0.303 ) }
    dend_24 { pt3dadd( 153.216, 462.701, 35.0487, 0.292 ) }
    dend_24 { pt3dadd( 152.149, 463.08, 35.4483, 0.3116 ) }
    dend_24 { pt3dadd( 151.078, 463.193, 36.2936, 0.39 ) }
    dend_24 { pt3dadd( 150.006, 463.23, 37.2688, 0.4856 ) }
    dend_24 { pt3dadd( 148.88, 463.26, 37.6905, 0.5518 ) }
    dend_24 { pt3dadd( 147.744, 463.291, 38.0097, 0.6128 ) }
    dend_24 { pt3dadd( 146.669, 463.653, 38.0618, 0.6442 ) }
    dend_24 { pt3dadd( 145.604, 464.07, 38.0682, 0.6708 ) }
    dend_24 { pt3dadd( 144.609, 464.629, 37.9333, 0.641 ) }
    dend_24 { pt3dadd( 143.621, 465.203, 37.7826, 0.6048 ) }
    dend_24 { pt3dadd( 142.53, 465.51, 37.4956, 0.5112 ) }
    dend_24 { pt3dadd( 141.522, 465.907, 37.2078, 0.4286 ) }
    dend_24 { pt3dadd( 141.019, 466.929, 36.9956, 0.438 ) }
    dend_24 { pt3dadd( 140.498, 467.943, 36.7772, 0.4504 ) }
    dend_24 { pt3dadd( 139.889, 468.907, 36.5271, 0.4772 ) }
    dend_24 { pt3dadd( 139.189, 469.776, 36.2869, 0.4878 ) }
    dend_24 { pt3dadd( 138.204, 470.351, 36.0777, 0.4486 ) }
    dend_24 { pt3dadd( 137.242, 470.961, 35.8977, 0.4232 ) }
    dend_24 { pt3dadd( 136.341, 471.664, 35.7969, 0.4356 ) }
    dend_24 { pt3dadd( 135.445, 472.375, 35.7202, 0.4224 ) }
    dend_24 { pt3dadd( 134.56, 473.099, 35.6891, 0.3608 ) }
    dend_24 { pt3dadd( 133.649, 473.788, 35.5524, 0.362 ) }
    dend_24 { pt3dadd( 132.722, 474.455, 35.352, 0.4012 ) }
    dend_24 { pt3dadd( 131.863, 475.203, 35.2702, 0.44 ) }
    dend_24 { pt3dadd( 131.042, 476.0, 35.2587, 0.4788 ) }
    dend_24 { pt3dadd( 130.458, 476.961, 35.2864, 0.5054 ) }
    dend_24 { pt3dadd( 130.001, 478.009, 35.3349, 0.5256 ) }
    dend_24 { pt3dadd( 129.302, 478.89, 35.3492, 0.5122 ) }
    dend_24 { pt3dadd( 128.479, 479.686, 35.3455, 0.4818 ) }
    dend_24 { pt3dadd( 127.788, 480.591, 35.3405, 0.5034 ) }
    dend_24 { pt3dadd( 127.145, 481.538, 35.3346, 0.5442 ) }
    dend_24 { pt3dadd( 126.522, 482.496, 35.2649, 0.4624 ) }
    dend_24 { pt3dadd( 125.903, 483.458, 35.1736, 0.3394 ) }
    dend_24 { pt3dadd( 125.808, 484.555, 35.1047, 0.3202 ) }
    dend_24 { pt3dadd( 125.882, 485.697, 35.0428, 0.3346 ) }
    dend_24 { pt3dadd( 125.746, 486.828, 34.9574, 0.3722 ) }
    dend_24 { pt3dadd( 125.57, 487.958, 34.8678, 0.414 ) }
    dend_24 { pt3dadd( 124.965, 488.914, 34.8127, 0.3686 ) }
    dend_24 { pt3dadd( 124.302, 489.846, 34.7626, 0.3116 ) }
    dend_24 { pt3dadd( 123.617, 490.762, 34.7379, 0.3202 ) }
    dend_24 { pt3dadd( 122.933, 491.679, 34.7161, 0.3382 ) }
    dend_24 { pt3dadd( 122.36, 492.668, 34.6917, 0.399 ) }
    dend_24 { pt3dadd( 121.756, 493.629, 34.6494, 0.4562 ) }
    dend_24 { pt3dadd( 120.827, 494.292, 34.4232, 0.4788 ) }
    dend_24 { pt3dadd( 119.839, 494.2, 34.1012, 0.4376 ) }
    dend_24 { pt3dadd( 118.818, 493.707, 33.728, 0.3624 ) }
    dend_24 { pt3dadd( 117.714, 493.587, 33.4928, 0.294 ) }
    dend_24 { pt3dadd( 116.574, 493.636, 33.32, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 89/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 176.416, 617.29, 35.3315, 0.6864 ) }
    dend_22 { pt3dadd( 176.605, 618.641, 36.4277, 0.4858 ) }
    dend_22 { pt3dadd( 176.33, 619.73, 36.519, 0.5104 ) }
    dend_22 { pt3dadd( 175.991, 620.823, 36.4879, 0.5638 ) }
    dend_22 { pt3dadd( 175.245, 621.683, 36.4493, 0.6116 ) }
    dend_22 { pt3dadd( 174.477, 622.531, 36.4101, 0.6592 ) }
    dend_22 { pt3dadd( 173.627, 623.296, 36.3611, 0.5466 ) }
    dend_22 { pt3dadd( 172.773, 624.055, 36.3118, 0.4248 ) }
    dend_22 { pt3dadd( 171.698, 624.441, 36.3098, 0.3828 ) }
    dend_22 { pt3dadd( 170.617, 624.816, 36.309, 0.3432 ) }
    dend_22 { pt3dadd( 169.905, 625.705, 36.3129, 0.4352 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_22 { pt3dadd( 169.202, 626.608, 36.3171, 0.5306 ) }
    dend_22 { pt3dadd( 168.502, 627.513, 36.2984, 0.5612 ) }
    dend_22 { pt3dadd( 167.802, 628.417, 36.2796, 0.5916 ) }
    dend_22 { pt3dadd( 166.841, 629.038, 36.3398, 0.5246 ) }
    dend_22 { pt3dadd( 165.88, 629.658, 36.4, 0.4576 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 5/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 176.416, 617.29, 35.3315, 0.6864 ) }
    dend_19 { pt3dadd( 176.107, 617.697, 35.268, 0.6194 ) }
    dend_19 { pt3dadd( 175.372, 618.571, 35.1739, 0.5814 ) }
    dend_19 { pt3dadd( 174.608, 619.422, 35.11, 0.6154 ) }
    dend_19 { pt3dadd( 173.731, 620.143, 35.0274, 0.6286 ) }
    dend_19 { pt3dadd( 172.781, 620.779, 34.9328, 0.6282 ) }
    dend_19 { pt3dadd( 171.808, 621.376, 34.7805, 0.6572 ) }
    dend_19 { pt3dadd( 170.821, 621.951, 34.5943, 0.7036 ) }
    dend_19 { pt3dadd( 169.854, 622.547, 34.284, 0.696 ) }
    dend_19 { pt3dadd( 168.898, 623.155, 33.9035, 0.658 ) }
    dend_19 { pt3dadd( 167.977, 623.819, 33.5709, 0.5724 ) }
    dend_19 { pt3dadd( 167.077, 624.512, 33.2648, 0.46 ) }
    dend_19 { pt3dadd( 166.752, 625.513, 33.2287, 0.4238 ) }
    dend_19 { pt3dadd( 166.692, 626.655, 33.3164, 0.4228 ) }
    dend_19 { pt3dadd( 166.16, 627.625, 33.4376, 0.3984 ) }
    dend_19 { pt3dadd( 165.474, 628.539, 33.57, 0.3664 ) }
    dend_19 { pt3dadd( 164.425, 628.955, 33.7086, 0.3474 ) }
    dend_19 { pt3dadd( 163.346, 629.333, 33.8478, 0.3292 ) }
    dend_19 { pt3dadd( 162.588, 630.178, 33.9584, 0.3856 ) }
    dend_19 { pt3dadd( 161.848, 631.05, 34.0676, 0.4464 ) }
    dend_19 { pt3dadd( 161.131, 631.941, 34.1477, 0.4662 ) }
    dend_19 { pt3dadd( 160.415, 632.832, 34.2269, 0.4848 ) }
    dend_19 { pt3dadd( 159.653, 633.685, 34.2737, 0.4328 ) }
    dend_19 { pt3dadd( 158.889, 634.536, 34.3199, 0.3792 ) }
    dend_19 { pt3dadd( 157.952, 635.19, 34.4322, 0.3736 ) }
    dend_19 { pt3dadd( 157.013, 635.841, 34.5456, 0.3688 ) }
    dend_19 { pt3dadd( 156.163, 636.606, 34.4683, 0.4534 ) }
    dend_19 { pt3dadd( 155.315, 637.374, 34.389, 0.539 ) }
    dend_19 { pt3dadd( 154.368, 638.016, 34.3328, 0.589 ) }
    dend_19 { pt3dadd( 153.421, 638.656, 34.2765, 0.6388 ) }
    dend_19 { pt3dadd( 152.667, 639.512, 34.4719, 0.6394 ) }
    dend_19 { pt3dadd( 151.913, 640.369, 34.6685, 0.6398 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 37/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 316.274, 512.136, 43.0128, 0.3268 ) }
    dend_15 { pt3dadd( 316.572, 513.158, 43.4899, 0.4418 ) }
    dend_15 { pt3dadd( 316.848, 514.249, 44.0062, 0.5902 ) }
    dend_15 { pt3dadd( 316.685, 515.369, 44.2742, 0.75 ) }
    dend_15 { pt3dadd( 316.491, 516.492, 44.5239, 0.9104 ) }
    dend_15 { pt3dadd( 315.874, 517.443, 44.805, 0.9174 ) }
    dend_15 { pt3dadd( 315.235, 518.384, 45.0876, 0.916 ) }
    dend_15 { pt3dadd( 314.431, 519.17, 45.5801, 0.7894 ) }
    dend_15 { pt3dadd( 313.62, 519.951, 46.079, 0.6588 ) }
    dend_15 { pt3dadd( 312.767, 520.7, 46.447, 0.6496 ) }
    dend_15 { pt3dadd( 311.914, 521.447, 46.8107, 0.644 ) }
    dend_15 { pt3dadd( 311.962, 522.581, 46.9888, 0.7192 ) }
    dend_15 { pt3dadd( 312.004, 523.721, 47.1738, 0.7876 ) }
    dend_15 { pt3dadd( 311.925, 524.858, 47.4258, 0.8018 ) }
    dend_15 { pt3dadd( 311.586, 525.821, 47.6918, 0.8544 ) }
    dend_15 { pt3dadd( 310.572, 526.338, 47.9931, 1.005 ) }
    dend_15 { pt3dadd( 309.568, 526.872, 48.2751, 1.0768 ) }
    dend_15 { pt3dadd( 308.58, 527.442, 48.5122, 0.9658 ) }
    dend_15 { pt3dadd( 307.754, 528.161, 48.7197, 0.8708 ) }
    dend_15 { pt3dadd( 307.274, 529.197, 48.8639, 0.8094 ) }
    dend_15 { pt3dadd( 306.868, 530.259, 49.0104, 0.7556 ) }
    dend_15 { pt3dadd( 306.611, 531.372, 49.1607, 0.7174 ) }
    dend_15 { pt3dadd( 306.458, 532.495, 49.315, 0.7078 ) }
    dend_15 { pt3dadd( 306.507, 533.636, 49.4768, 0.7546 ) }
    dend_15 { pt3dadd( 306.428, 534.76, 49.6762, 0.7836 ) }
    dend_15 { pt3dadd( 306.107, 535.853, 49.9472, 0.778 ) }
    dend_15 { pt3dadd( 305.669, 536.891, 50.2454, 0.7692 ) }
    dend_15 { pt3dadd( 305.062, 537.851, 50.5828, 0.7554 ) }
    dend_15 { pt3dadd( 304.628, 538.88, 50.8908, 0.7134 ) }
    dend_15 { pt3dadd( 304.408, 539.998, 51.1613, 0.635 ) }
    dend_15 { pt3dadd( 304.184, 541.117, 51.3433, 0.603 ) }
    dend_15 { pt3dadd( 303.951, 542.235, 51.4128, 0.6298 ) }
    dend_15 { pt3dadd( 303.997, 543.337, 51.4814, 0.6918 ) }
    dend_15 { pt3dadd( 304.379, 544.415, 51.5488, 0.7956 ) }
    dend_15 { pt3dadd( 304.771, 545.489, 51.5578, 0.8064 ) }
    dend_15 { pt3dadd( 305.172, 546.56, 51.5057, 0.7186 ) }
    dend_15 { pt3dadd( 305.482, 547.657, 51.4724, 0.6132 ) }
    dend_15 { pt3dadd( 305.702, 548.78, 51.4581, 0.4904 ) }
    dend_15 { pt3dadd( 306.018, 549.875, 51.5088, 0.401 ) }
    dend_15 { pt3dadd( 306.425, 550.942, 51.6225, 0.3438 ) }
    dend_15 { pt3dadd( 306.854, 551.994, 51.9134, 0.3362 ) }
    dend_15 { pt3dadd( 307.302, 553.029, 52.3734, 0.3758 ) }
    dend_15 { pt3dadd( 307.219, 554.079, 52.8956, 0.405 ) }
    dend_15 { pt3dadd( 306.846, 555.136, 53.4517, 0.4288 ) }
    dend_15 { pt3dadd( 306.938, 556.231, 53.7748, 0.4914 ) }
    dend_15 { pt3dadd( 307.201, 557.341, 54.0114, 0.5684 ) }
    dend_15 { pt3dadd( 307.357, 558.471, 54.0341, 0.6392 ) }
    dend_15 { pt3dadd( 307.478, 559.608, 53.9851, 0.708 ) }
    dend_15 { pt3dadd( 307.246, 560.714, 54.0198, 0.6966 ) }
    dend_15 { pt3dadd( 306.928, 561.814, 54.0747, 0.6658 ) }
    dend_15 { pt3dadd( 306.641, 562.91, 54.4351, 0.6068 ) }
    dend_15 { pt3dadd( 306.362, 564.005, 54.8694, 0.5412 ) }
    dend_15 { pt3dadd( 306.313, 565.127, 55.3294, 0.5826 ) }
    dend_15 { pt3dadd( 306.315, 566.255, 55.795, 0.6478 ) }
    dend_15 { pt3dadd( 306.22, 567.39, 56.0132, 0.7188 ) }
    dend_15 { pt3dadd( 306.11, 568.526, 56.1926, 0.791 ) }
    dend_15 { pt3dadd( 305.702, 569.588, 56.145, 0.8124 ) }
    dend_15 { pt3dadd( 305.253, 570.64, 56.0655, 0.8266 ) }
    dend_15 { pt3dadd( 304.647, 571.607, 55.9177, 0.8228 ) }
    dend_15 { pt3dadd( 304.023, 572.563, 55.7609, 0.8166 ) }
    dend_15 { pt3dadd( 303.456, 573.556, 55.6942, 0.7364 ) }
    dend_15 { pt3dadd( 302.898, 574.553, 55.6394, 0.6466 ) }
    dend_15 { pt3dadd( 302.668, 575.669, 55.6716, 0.6382 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_15 { pt3dadd( 302.477, 576.796, 55.7136, 0.639 ) }
    dend_15 { pt3dadd( 302.227, 577.91, 55.8597, 0.6148 ) }
    dend_15 { pt3dadd( 301.97, 579.024, 56.0171, 0.588 ) }
    dend_15 { pt3dadd( 302.53, 579.992, 56.2142, 0.5562 ) }
    dend_15 { pt3dadd( 303.15, 580.951, 56.413, 0.5244 ) }
    dend_15 { pt3dadd( 303.698, 581.953, 56.5396, 0.5088 ) }
    dend_15 { pt3dadd( 304.192, 582.968, 56.663, 0.4936 ) }
    dend_15 { pt3dadd( 304.108, 584.108, 56.7526, 0.48 ) }
    dend_15 { pt3dadd( 304.128, 585.209, 56.8504, 0.4658 ) }
    dend_15 { pt3dadd( 304.951, 586.001, 57.0108, 0.4478 ) }
    dend_15 { pt3dadd( 305.874, 586.634, 57.2653, 0.4442 ) }
    dend_15 { pt3dadd( 306.921, 587.071, 57.6355, 0.4582 ) }
    dend_15 { pt3dadd( 306.799, 588.016, 58.123, 0.4316 ) }
    dend_15 { pt3dadd( 306.418, 589.073, 58.6368, 0.3956 ) }
    dend_15 { pt3dadd( 305.956, 590.103, 59.0876, 0.3464 ) }
    dend_15 { pt3dadd( 305.481, 591.128, 59.5283, 0.295 ) }
    dend_15 { pt3dadd( 305.398, 592.242, 59.9953, 0.288 ) }
    dend_15 { pt3dadd( 305.374, 593.37, 60.4663, 0.2876 ) }
    dend_15 { pt3dadd( 306.257, 593.988, 61.0792, 0.303 ) }
    dend_15 { pt3dadd( 307.21, 594.568, 61.7033, 0.3194 ) }
    dend_15 { pt3dadd( 307.993, 595.372, 62.2367, 0.3424 ) }
    dend_15 { pt3dadd( 308.78, 596.17, 62.7651, 0.365 ) }
    dend_15 { pt3dadd( 309.814, 596.641, 63.1128, 0.3664 ) }
    dend_15 { pt3dadd( 310.852, 597.043, 63.4424, 0.3708 ) }
    dend_15 { pt3dadd( 311.952, 596.73, 63.5765, 0.409 ) }
    dend_15 { pt3dadd( 313.052, 596.463, 63.714, 0.4444 ) }
    dend_15 { pt3dadd( 314.177, 596.661, 63.8837, 0.4532 ) }
    dend_15 { pt3dadd( 315.259, 596.951, 64.0612, 0.4572 ) }
    dend_15 { pt3dadd( 316.12, 597.696, 64.2807, 0.4366 ) }
    dend_15 { pt3dadd( 317.021, 598.376, 64.4994, 0.4096 ) }
    dend_15 { pt3dadd( 318.106, 598.726, 64.715, 0.3516 ) }
    dend_15 { pt3dadd( 319.134, 599.165, 64.9491, 0.3116 ) }
    dend_15 { pt3dadd( 319.904, 600.002, 65.2652, 0.3504 ) }
    dend_15 { pt3dadd( 320.661, 600.849, 65.5752, 0.3772 ) }
    dend_15 { pt3dadd( 321.37, 601.739, 65.8616, 0.3598 ) }
    dend_15 { pt3dadd( 322.027, 602.66, 66.1654, 0.3436 ) }
    dend_15 { pt3dadd( 322.507, 603.689, 66.5283, 0.3326 ) }
    dend_15 { pt3dadd( 322.819, 604.748, 66.8914, 0.3174 ) }
    dend_15 { pt3dadd( 322.737, 605.88, 67.2554, 0.2926 ) }
    dend_15 { pt3dadd( 322.823, 606.988, 67.5763, 0.2772 ) }
    dend_15 { pt3dadd( 323.232, 608.052, 67.8129, 0.2796 ) }
    dend_15 { pt3dadd( 323.46, 609.142, 68.028, 0.284 ) }
    dend_15 { pt3dadd( 323.363, 610.279, 68.2032, 0.292 ) }
    dend_15 { pt3dadd( 323.229, 611.411, 68.4354, 0.3078 ) }
    dend_15 { pt3dadd( 323.037, 612.531, 68.7582, 0.336 ) }
    dend_15 { pt3dadd( 322.835, 613.648, 69.081, 0.3828 ) }
    dend_15 { pt3dadd( 322.615, 614.764, 69.4042, 0.4582 ) }
    dend_15 { pt3dadd( 322.188, 615.782, 69.7166, 0.4706 ) }
    dend_15 { pt3dadd( 321.466, 616.661, 70.0143, 0.3912 ) }
    dend_15 { pt3dadd( 320.642, 617.425, 70.3136, 0.331 ) }
    dend_15 { pt3dadd( 319.686, 618.041, 70.6152, 0.2954 ) }
    dend_15 { pt3dadd( 319.026, 618.873, 70.9971, 0.2774 ) }
    dend_15 { pt3dadd( 318.711, 619.955, 71.4731, 0.28 ) }
    dend_15 { pt3dadd( 319.189, 620.754, 71.9107, 0.286 ) }
    dend_15 { pt3dadd( 320.125, 621.389, 72.326, 0.2944 ) }
    dend_15 { pt3dadd( 320.715, 622.318, 72.7493, 0.3188 ) }
    dend_15 { pt3dadd( 321.188, 623.345, 73.1755, 0.3486 ) }
    dend_15 { pt3dadd( 320.99, 624.457, 73.4723, 0.3948 ) }
    dend_15 { pt3dadd( 320.768, 625.572, 73.7646, 0.4416 ) }
    dend_15 { pt3dadd( 319.784, 626.12, 74.2417, 0.4012 ) }
    dend_15 { pt3dadd( 318.931, 626.786, 74.7046, 0.392 ) }
    dend_15 { pt3dadd( 318.51, 627.838, 75.1201, 0.4846 ) }
    dend_15 { pt3dadd( 318.633, 628.809, 75.4835, 0.5002 ) }
    dend_15 { pt3dadd( 319.345, 629.695, 75.7904, 0.4322 ) }
    dend_15 { pt3dadd( 319.969, 630.622, 76.3143, 0.4396 ) }
    dend_15 { pt3dadd( 320.508, 631.585, 77.0395, 0.5174 ) }
    dend_15 { pt3dadd( 320.859, 632.635, 77.5858, 0.5818 ) }
    dend_15 { pt3dadd( 321.07, 633.746, 78.0021, 0.6366 ) }
    dend_15 { pt3dadd( 321.116, 634.871, 78.3605, 0.6892 ) }
    dend_15 { pt3dadd( 321.043, 636.005, 78.6775, 0.7402 ) }
    dend_15 { pt3dadd( 320.859, 637.125, 78.9673, 0.6814 ) }
    dend_15 { pt3dadd( 320.599, 638.233, 79.2386, 0.5458 ) }
    dend_15 { pt3dadd( 320.717, 639.321, 79.5634, 0.482 ) }
    dend_15 { pt3dadd( 321.077, 640.396, 79.9229, 0.464 ) }
    dend_15 { pt3dadd( 321.576, 641.414, 80.2239, 0.4184 ) }
    dend_15 { pt3dadd( 322.137, 642.405, 80.498, 0.3598 ) }
    dend_15 { pt3dadd( 322.186, 643.484, 80.8662, 0.3244 ) }
    dend_15 { pt3dadd( 322.013, 644.603, 81.2759, 0.2992 ) }
    dend_15 { pt3dadd( 321.791, 645.708, 81.7452, 0.3072 ) }
    dend_15 { pt3dadd( 321.551, 646.808, 82.2371, 0.3276 ) }
    dend_15 { pt3dadd( 321.487, 647.931, 82.6767, 0.3584 ) }
    dend_15 { pt3dadd( 321.486, 649.062, 83.097, 0.393 ) }
    dend_15 { pt3dadd( 321.57, 650.193, 83.4182, 0.4184 ) }
    dend_15 { pt3dadd( 321.685, 651.326, 83.7035, 0.4408 ) }
    dend_15 { pt3dadd( 321.606, 652.456, 83.9787, 0.4082 ) }
    dend_15 { pt3dadd( 321.458, 653.584, 84.25, 0.3562 ) }
    dend_15 { pt3dadd( 321.923, 654.56, 84.691, 0.3462 ) }
    dend_15 { pt3dadd( 322.553, 655.494, 85.1777, 0.3476 ) }
    dend_15 { pt3dadd( 322.725, 656.56, 85.9034, 0.3468 ) }
    dend_15 { pt3dadd( 322.79, 657.656, 86.6844, 0.3458 ) }
    dend_15 { pt3dadd( 322.397, 658.668, 87.386, 0.362 ) }
    dend_15 { pt3dadd( 321.904, 659.662, 88.0704, 0.3822 ) }
    dend_15 { pt3dadd( 321.191, 660.531, 88.5436, 0.3624 ) }
    dend_15 { pt3dadd( 320.455, 661.388, 88.9974, 0.3388 ) }
    dend_15 { pt3dadd( 320.399, 662.519, 89.2623, 0.33 ) }
    dend_15 { pt3dadd( 320.375, 663.654, 89.5188, 0.3228 ) }
    dend_15 { pt3dadd( 320.974, 664.626, 89.6535, 0.3772 ) }
    dend_15 { pt3dadd( 321.578, 665.596, 89.7907, 0.4284 ) }
    dend_15 { pt3dadd( 322.29, 666.487, 89.9968, 0.3968 ) }
    dend_15 { pt3dadd( 322.98, 667.391, 90.1975, 0.3664 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_15 { pt3dadd( 323.36, 668.47, 90.3221, 0.3534 ) }
    dend_15 { pt3dadd( 323.714, 669.555, 90.4548, 0.337 ) }
    dend_15 { pt3dadd( 323.942, 670.673, 90.6312, 0.302 ) }
    dend_15 { pt3dadd( 324.072, 671.796, 90.7707, 0.2776 ) }
    dend_15 { pt3dadd( 323.921, 672.929, 90.8048, 0.2826 ) }
    dend_15 { pt3dadd( 323.781, 674.064, 90.7668, 0.2912 ) }
    dend_15 { pt3dadd( 323.663, 675.2, 90.592, 0.3068 ) }
    dend_15 { pt3dadd( 323.36, 676.27, 90.3297, 0.3338 ) }
    dend_15 { pt3dadd( 322.775, 677.24, 89.9329, 0.379 ) }
    dend_15 { pt3dadd( 322.386, 678.291, 89.7364, 0.4006 ) }
    dend_15 { pt3dadd( 322.174, 679.416, 89.7204, 0.4008 ) }
    dend_15 { pt3dadd( 321.925, 680.531, 89.71, 0.3824 ) }
    dend_15 { pt3dadd( 321.647, 681.641, 89.7044, 0.35 ) }
    dend_15 { pt3dadd( 321.383, 682.754, 89.7056, 0.361 ) }
    dend_15 { pt3dadd( 321.129, 683.87, 89.7117, 0.4032 ) }
    dend_15 { pt3dadd( 320.755, 684.946, 89.7445, 0.3896 ) }
    dend_15 { pt3dadd( 320.305, 685.997, 89.794, 0.341 ) }
    dend_15 { pt3dadd( 320.235, 687.099, 89.8274, 0.3016 ) }
    dend_15 { pt3dadd( 320.4, 688.232, 89.8509, 0.2678 ) }
    dend_15 { pt3dadd( 320.954, 689.188, 89.8671, 0.2454 ) }
    dend_15 { pt3dadd( 321.693, 690.061, 89.88, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 21/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 316.274, 512.136, 43.0128, 0.3268 ) }
    dend_12 { pt3dadd( 315.393, 512.836, 42.9184, 0.4402 ) }
    dend_12 { pt3dadd( 314.448, 513.481, 42.8725, 0.5654 ) }
    dend_12 { pt3dadd( 313.559, 514.196, 42.8428, 0.7118 ) }
    dend_12 { pt3dadd( 312.712, 514.966, 42.8263, 0.8754 ) }
    dend_12 { pt3dadd( 311.845, 515.703, 42.6163, 0.9442 ) }
    dend_12 { pt3dadd( 310.961, 516.413, 42.2512, 0.9374 ) }
    dend_12 { pt3dadd( 310.055, 517.093, 41.8513, 0.9242 ) }
    dend_12 { pt3dadd( 309.134, 517.747, 41.4246, 0.906 ) }
    dend_12 { pt3dadd( 308.18, 518.351, 40.9937, 0.9142 ) }
    dend_12 { pt3dadd( 307.202, 518.917, 40.56, 0.9424 ) }
    dend_12 { pt3dadd( 306.279, 519.574, 40.2424, 0.9724 ) }
    dend_12 { pt3dadd( 305.397, 520.295, 40.0095, 1.0038 ) }
    dend_12 { pt3dadd( 304.587, 521.095, 39.8577, 0.9498 ) }
    dend_12 { pt3dadd( 303.83, 521.952, 39.7645, 0.8342 ) }
    dend_12 { pt3dadd( 303.158, 522.873, 39.7068, 0.7654 ) }
    dend_12 { pt3dadd( 302.54, 523.836, 39.6738, 0.7292 ) }
    dend_12 { pt3dadd( 301.762, 524.654, 39.6315, 0.7228 ) }
    dend_12 { pt3dadd( 300.872, 525.373, 39.5825, 0.7372 ) }
    dend_12 { pt3dadd( 299.888, 525.939, 39.5077, 0.7342 ) }
    dend_12 { pt3dadd( 298.845, 526.408, 39.4164, 0.7204 ) }
    dend_12 { pt3dadd( 297.791, 526.849, 39.2557, 0.7436 ) }
    dend_12 { pt3dadd( 296.732, 527.27, 39.0527, 0.7896 ) }
    dend_12 { pt3dadd( 295.916, 528.006, 38.8016, 0.8654 ) }
    dend_12 { pt3dadd( 295.238, 528.92, 38.5232, 0.9578 ) }
    dend_12 { pt3dadd( 294.629, 529.885, 38.3508, 0.8996 ) }
    dend_12 { pt3dadd( 294.056, 530.873, 38.2304, 0.7672 ) }
    dend_12 { pt3dadd( 293.563, 531.904, 38.1917, 0.8178 ) }
    dend_12 { pt3dadd( 293.103, 532.952, 38.187, 0.944 ) }
    dend_12 { pt3dadd( 292.729, 534.031, 38.1466, 0.9352 ) }
    dend_12 { pt3dadd( 292.388, 535.122, 38.0923, 0.872 ) }
    dend_12 { pt3dadd( 291.849, 536.121, 37.8843, 0.7692 ) }
    dend_12 { pt3dadd( 291.255, 537.093, 37.6328, 0.6552 ) }
    dend_12 { pt3dadd( 291.024, 538.203, 37.4606, 0.717 ) }
    dend_12 { pt3dadd( 290.839, 539.33, 37.2977, 0.7994 ) }
    dend_12 { pt3dadd( 290.339, 540.354, 37.2112, 0.6608 ) }
    dend_12 { pt3dadd( 289.809, 541.366, 37.133, 0.4984 ) }
    dend_12 { pt3dadd( 289.203, 542.337, 37.1389, 0.4424 ) }
    dend_12 { pt3dadd( 288.593, 543.305, 37.1504, 0.3934 ) }
    dend_12 { pt3dadd( 287.928, 544.222, 36.7856, 0.5196 ) }
    dend_12 { pt3dadd( 287.258, 545.137, 36.3975, 0.6568 ) }
    dend_12 { pt3dadd( 286.495, 545.974, 36.0251, 0.7348 ) }
    dend_12 { pt3dadd( 285.728, 546.808, 35.6541, 0.8096 ) }
    dend_12 { pt3dadd( 285.06, 547.731, 35.4068, 0.8486 ) }
    dend_12 { pt3dadd( 284.397, 548.659, 35.1658, 0.8858 ) }
    dend_12 { pt3dadd( 283.645, 549.517, 34.972, 0.875 ) }
    dend_12 { pt3dadd( 282.888, 550.372, 34.7802, 0.8618 ) }
    dend_12 { pt3dadd( 282.036, 551.131, 34.6279, 0.7328 ) }
    dend_12 { pt3dadd( 281.184, 551.891, 34.4758, 0.6018 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 70/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 356.688, 479.005, 45.9802, 0.4336 ) }
    dend_10 { pt3dadd( 356.826, 479.672, 45.8819, 0.4686 ) }
    dend_10 { pt3dadd( 357.508, 480.59, 45.981, 0.4568 ) }
    dend_10 { pt3dadd( 358.176, 481.518, 46.0964, 0.4356 ) }
    dend_10 { pt3dadd( 358.803, 482.472, 46.256, 0.3878 ) }
    dend_10 { pt3dadd( 359.016, 483.468, 46.3641, 0.363 ) }
    dend_10 { pt3dadd( 358.589, 484.53, 46.3924, 0.374 ) }
    dend_10 { pt3dadd( 358.606, 485.577, 46.5021, 0.4048 ) }
    dend_10 { pt3dadd( 359.09, 486.61, 46.6976, 0.4566 ) }
    dend_10 { pt3dadd( 359.38, 487.696, 46.9372, 0.4582 ) }
    dend_10 { pt3dadd( 359.503, 488.828, 47.215, 0.4172 ) }
    dend_10 { pt3dadd( 359.273, 489.899, 47.46, 0.3766 ) }
    dend_10 { pt3dadd( 358.766, 490.92, 47.6792, 0.3362 ) }
    dend_10 { pt3dadd( 358.542, 492.016, 47.8842, 0.308 ) }
    dend_10 { pt3dadd( 358.483, 493.155, 48.0808, 0.2872 ) }
    dend_10 { pt3dadd( 358.919, 494.158, 48.4254, 0.292 ) }
    dend_10 { pt3dadd( 359.53, 495.112, 48.8225, 0.306 ) }
    dend_10 { pt3dadd( 359.952, 496.162, 49.0935, 0.3586 ) }
    dend_10 { pt3dadd( 360.314, 497.243, 49.3242, 0.4234 ) }
    dend_10 { pt3dadd( 360.322, 498.371, 49.4836, 0.4996 ) }
    dend_10 { pt3dadd( 360.243, 499.512, 49.6261, 0.5786 ) }
    dend_10 { pt3dadd( 360.758, 500.497, 49.6406, 0.591 ) }
    dend_10 { pt3dadd( 361.388, 501.451, 49.6303, 0.5902 ) }
    dend_10 { pt3dadd( 362.28, 502.151, 49.7042, 0.5544 ) }
    dend_10 { pt3dadd( 363.215, 502.809, 49.7924, 0.5126 ) }
    dend_10 { pt3dadd( 363.599, 503.865, 49.859, 0.466 ) }
    dend_10 { pt3dadd( 363.905, 504.963, 49.9285, 0.425 ) }
    dend_10 { pt3dadd( 363.914, 506.106, 50.0699, 0.4688 ) }
    dend_10 { pt3dadd( 363.943, 507.247, 50.2037, 0.5056 ) }
    dend_10 { pt3dadd( 364.119, 508.376, 50.2788, 0.4912 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_10 { pt3dadd( 364.346, 509.488, 50.3902, 0.4802 ) }
    dend_10 { pt3dadd( 364.883, 510.489, 50.7268, 0.4904 ) }
    dend_10 { pt3dadd( 365.43, 511.485, 51.0555, 0.4998 ) }
    dend_10 { pt3dadd( 366.016, 512.461, 51.3442, 0.5054 ) }
    dend_10 { pt3dadd( 366.577, 513.449, 51.6099, 0.5132 ) }
    dend_10 { pt3dadd( 367.013, 514.505, 51.7642, 0.5314 ) }
    dend_10 { pt3dadd( 367.509, 515.521, 51.9397, 0.5454 ) }
    dend_10 { pt3dadd( 368.286, 516.354, 52.2158, 0.5406 ) }
    dend_10 { pt3dadd( 369.042, 517.207, 52.435, 0.5408 ) }
    dend_10 { pt3dadd( 369.77, 518.088, 52.5778, 0.5478 ) }
    dend_10 { pt3dadd( 370.211, 519.09, 52.6618, 0.6082 ) }
    dend_10 { pt3dadd( 370.333, 520.227, 52.68, 0.7282 ) }
    dend_10 { pt3dadd( 370.288, 521.362, 52.7136, 0.779 ) }
    dend_10 { pt3dadd( 370.126, 522.495, 52.7576, 0.783 ) }
    dend_10 { pt3dadd( 369.986, 523.626, 52.9304, 0.7484 ) }
    dend_10 { pt3dadd( 369.855, 524.758, 53.1826, 0.69 ) }
    dend_10 { pt3dadd( 369.512, 525.822, 53.6063, 0.705 ) }
    dend_10 { pt3dadd( 369.056, 526.85, 54.122, 0.7592 ) }
    dend_10 { pt3dadd( 368.688, 527.909, 54.6549, 0.7554 ) }
    dend_10 { pt3dadd( 368.35, 528.98, 55.193, 0.7318 ) }
    dend_10 { pt3dadd( 368.195, 530.106, 55.4372, 0.649 ) }
    dend_10 { pt3dadd( 368.074, 531.24, 55.6284, 0.5558 ) }
    dend_10 { pt3dadd( 368.4, 532.32, 55.6559, 0.5462 ) }
    dend_10 { pt3dadd( 368.798, 533.393, 55.6564, 0.5504 ) }
    dend_10 { pt3dadd( 368.911, 534.531, 55.7553, 0.5564 ) }
    dend_10 { pt3dadd( 369.02, 535.669, 55.8561, 0.5624 ) }
    dend_10 { pt3dadd( 369.306, 536.768, 56.1669, 0.6312 ) }
    dend_10 { pt3dadd( 369.639, 537.832, 56.4796, 0.6906 ) }
    dend_10 { pt3dadd( 370.649, 538.355, 56.7927, 0.595 ) }
    dend_10 { pt3dadd( 371.62, 538.932, 57.0962, 0.531 ) }
    dend_10 { pt3dadd( 372.434, 539.729, 57.3614, 0.5986 ) }
    dend_10 { pt3dadd( 373.275, 540.497, 57.5658, 0.6122 ) }
    dend_10 { pt3dadd( 374.18, 541.195, 57.6321, 0.5034 ) }
    dend_10 { pt3dadd( 375.001, 541.971, 57.7842, 0.484 ) }
    dend_10 { pt3dadd( 375.655, 542.9, 58.1056, 0.641 ) }
    dend_10 { pt3dadd( 376.017, 543.934, 58.4427, 0.7584 ) }
    dend_10 { pt3dadd( 376.107, 545.066, 58.7947, 0.8388 ) }
    dend_10 { pt3dadd( 376.117, 546.198, 59.1514, 0.8304 ) }
    dend_10 { pt3dadd( 376.066, 547.332, 59.5118, 0.7532 ) }
    dend_10 { pt3dadd( 376.222, 548.412, 60.1605, 0.6436 ) }
    dend_10 { pt3dadd( 376.537, 549.453, 61.0324, 0.509 ) }
    dend_10 { pt3dadd( 377.501, 549.566, 61.7148, 0.4554 ) }
    dend_10 { pt3dadd( 378.609, 549.469, 62.354, 0.4204 ) }
    dend_10 { pt3dadd( 378.379, 550.272, 63.1274, 0.4862 ) }
    dend_10 { pt3dadd( 378.029, 551.278, 63.8448, 0.551 ) }
    dend_10 { pt3dadd( 378.263, 552.386, 64.2188, 0.53 ) }
    dend_10 { pt3dadd( 378.482, 553.499, 64.573, 0.4992 ) }
    dend_10 { pt3dadd( 378.669, 554.622, 64.8799, 0.4458 ) }
    dend_10 { pt3dadd( 379.09, 555.636, 65.3621, 0.4204 ) }
    dend_10 { pt3dadd( 379.715, 556.558, 65.9974, 0.4198 ) }
    dend_10 { pt3dadd( 380.449, 557.419, 66.39, 0.4902 ) }
    dend_10 { pt3dadd( 381.198, 558.271, 66.75, 0.5702 ) }
    dend_10 { pt3dadd( 382.018, 559.066, 66.8472, 0.6192 ) }
    dend_10 { pt3dadd( 382.846, 559.854, 66.9113, 0.6642 ) }
    dend_10 { pt3dadd( 383.905, 560.279, 66.7912, 0.515 ) }
    dend_10 { pt3dadd( 384.965, 560.703, 66.6912, 0.3732 ) }
    dend_10 { pt3dadd( 385.962, 561.259, 66.89, 0.3882 ) }
    dend_10 { pt3dadd( 386.965, 561.801, 67.0768, 0.4044 ) }
    dend_10 { pt3dadd( 388.02, 562.242, 67.1826, 0.4286 ) }
    dend_10 { pt3dadd( 388.985, 562.768, 67.2787, 0.4448 ) }
    dend_10 { pt3dadd( 389.379, 563.842, 67.3148, 0.4096 ) }
    dend_10 { pt3dadd( 389.809, 564.899, 67.3725, 0.3886 ) }
    dend_10 { pt3dadd( 390.374, 565.891, 67.5133, 0.4212 ) }
    dend_10 { pt3dadd( 391.185, 566.596, 67.7754, 0.4436 ) }
    dend_10 { pt3dadd( 392.238, 567.017, 68.157, 0.4556 ) }
    dend_10 { pt3dadd( 392.928, 567.852, 68.5796, 0.4488 ) }
    dend_10 { pt3dadd( 393.494, 568.83, 69.0164, 0.4352 ) }
    dend_10 { pt3dadd( 393.925, 569.877, 69.3717, 0.5254 ) }
    dend_10 { pt3dadd( 394.345, 570.932, 69.6942, 0.6054 ) }
    dend_10 { pt3dadd( 394.884, 571.936, 69.9356, 0.4788 ) }
    dend_10 { pt3dadd( 395.38, 572.959, 70.1705, 0.3892 ) }
    dend_10 { pt3dadd( 395.749, 574.039, 70.3864, 0.4062 ) }
    dend_10 { pt3dadd( 396.051, 575.133, 70.6096, 0.4298 ) }
    dend_10 { pt3dadd( 396.202, 576.263, 70.8495, 0.4674 ) }
    dend_10 { pt3dadd( 396.477, 577.357, 71.1178, 0.507 ) }
    dend_10 { pt3dadd( 396.919, 578.405, 71.4235, 0.5496 ) }
    dend_10 { pt3dadd( 397.55, 579.324, 71.6881, 0.5334 ) }
    dend_10 { pt3dadd( 398.376, 580.11, 71.9107, 0.457 ) }
    dend_10 { pt3dadd( 399.181, 580.921, 72.0451, 0.3976 ) }
    dend_10 { pt3dadd( 399.964, 581.755, 72.0913, 0.3552 ) }
    dend_10 { pt3dadd( 400.608, 582.685, 72.1442, 0.3798 ) }
    dend_10 { pt3dadd( 401.115, 583.709, 72.2033, 0.4712 ) }
    dend_10 { pt3dadd( 401.692, 584.695, 72.3013, 0.4452 ) }
    dend_10 { pt3dadd( 402.307, 585.658, 72.422, 0.3522 ) }
    dend_10 { pt3dadd( 403.262, 586.216, 72.5248, 0.3346 ) }
    dend_10 { pt3dadd( 404.318, 586.656, 72.6225, 0.3394 ) }
    dend_10 { pt3dadd( 405.423, 586.921, 72.8496, 0.3672 ) }
    dend_10 { pt3dadd( 406.54, 587.145, 73.1083, 0.4004 ) }
    dend_10 { pt3dadd( 407.663, 587.356, 73.1858, 0.3956 ) }
    dend_10 { pt3dadd( 408.789, 587.563, 73.2273, 0.3834 ) }
    dend_10 { pt3dadd( 409.557, 588.408, 73.2889, 0.3644 ) }
    dend_10 { pt3dadd( 410.33, 589.252, 73.3491, 0.348 ) }
    dend_10 { pt3dadd( 411.277, 589.892, 73.3474, 0.4342 ) }
    dend_10 { pt3dadd( 412.232, 590.511, 73.3566, 0.5186 ) }
    dend_10 { pt3dadd( 413.366, 590.613, 73.6148, 0.557 ) }
    dend_10 { pt3dadd( 414.501, 590.7, 73.8746, 0.5938 ) }
    dend_10 { pt3dadd( 415.63, 590.562, 74.1616, 0.6078 ) }
    dend_10 { pt3dadd( 416.76, 590.423, 74.4383, 0.6148 ) }
    dend_10 { pt3dadd( 417.889, 590.249, 74.5791, 0.5332 ) }
    dend_10 { pt3dadd( 419.02, 590.1, 74.7216, 0.4626 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_10 { pt3dadd( 420.163, 590.116, 74.8728, 0.4642 ) }
    dend_10 { pt3dadd( 421.297, 590.179, 75.0338, 0.4686 ) }
    dend_10 { pt3dadd( 422.404, 590.466, 75.2405, 0.4866 ) }
    dend_10 { pt3dadd( 423.497, 590.585, 75.5084, 0.5032 ) }
    dend_10 { pt3dadd( 424.567, 590.224, 75.9534, 0.5152 ) }
    dend_10 { pt3dadd( 425.641, 590.132, 76.3154, 0.4912 ) }
    dend_10 { pt3dadd( 426.722, 590.496, 76.538, 0.4064 ) }
    dend_10 { pt3dadd( 427.792, 590.889, 76.7654, 0.3678 ) }
    dend_10 { pt3dadd( 428.844, 591.326, 77.0006, 0.4044 ) }
    dend_10 { pt3dadd( 429.895, 591.774, 77.1576, 0.4134 ) }
    dend_10 { pt3dadd( 430.94, 592.239, 77.1938, 0.3802 ) }
    dend_10 { pt3dadd( 432.014, 592.606, 77.1324, 0.3584 ) }
    dend_10 { pt3dadd( 433.133, 592.834, 76.93, 0.353 ) }
    dend_10 { pt3dadd( 434.26, 592.995, 76.7413, 0.3416 ) }
    dend_10 { pt3dadd( 435.401, 593.058, 76.5719, 0.322 ) }
    dend_10 { pt3dadd( 436.482, 592.849, 76.5568, 0.3538 ) }
    dend_10 { pt3dadd( 437.493, 592.32, 76.7256, 0.447 ) }
    dend_10 { pt3dadd( 438.188, 591.476, 76.8734, 0.5014 ) }
    dend_10 { pt3dadd( 438.708, 590.458, 77.0098, 0.5346 ) }
    dend_10 { pt3dadd( 439.503, 589.674, 77.0666, 0.5122 ) }
    dend_10 { pt3dadd( 440.427, 589.002, 77.0851, 0.4628 ) }
    dend_10 { pt3dadd( 441.254, 588.217, 77.0902, 0.413 ) }
    dend_10 { pt3dadd( 442.034, 587.38, 77.0885, 0.363 ) }
    dend_10 { pt3dadd( 443.024, 586.883, 76.8606, 0.341 ) }
    dend_10 { pt3dadd( 444.105, 586.532, 76.5363, 0.3312 ) }
    dend_10 { pt3dadd( 445.228, 586.359, 76.4086, 0.3622 ) }
    dend_10 { pt3dadd( 446.367, 586.254, 76.3552, 0.4088 ) }
    dend_10 { pt3dadd( 447.496, 586.084, 76.4341, 0.4584 ) }
    dend_10 { pt3dadd( 448.623, 585.89, 76.5587, 0.5092 ) }
    dend_10 { pt3dadd( 449.76, 585.782, 76.5741, 0.4882 ) }
    dend_10 { pt3dadd( 450.902, 585.699, 76.5542, 0.444 ) }
    dend_10 { pt3dadd( 452.034, 585.544, 76.5512, 0.3932 ) }
    dend_10 { pt3dadd( 453.164, 585.365, 76.5534, 0.3406 ) }
    dend_10 { pt3dadd( 454.301, 585.394, 76.6732, 0.3342 ) }
    dend_10 { pt3dadd( 455.44, 585.479, 76.8242, 0.3402 ) }
    dend_10 { pt3dadd( 456.451, 585.968, 76.8029, 0.3708 ) }
    dend_10 { pt3dadd( 457.432, 586.558, 76.7402, 0.4074 ) }
    dend_10 { pt3dadd( 458.474, 587.025, 76.8093, 0.3796 ) }
    dend_10 { pt3dadd( 459.526, 587.47, 76.9012, 0.3406 ) }
    dend_10 { pt3dadd( 460.537, 588.002, 77.079, 0.322 ) }
    dend_10 { pt3dadd( 461.54, 588.547, 77.2705, 0.3066 ) }
    dend_10 { pt3dadd( 462.589, 588.998, 77.4606, 0.3282 ) }
    dend_10 { pt3dadd( 463.635, 589.449, 77.6502, 0.352 ) }
    dend_10 { pt3dadd( 464.55, 590.131, 77.8268, 0.3246 ) }
    dend_10 { pt3dadd( 465.46, 590.82, 77.9884, 0.3038 ) }
    dend_10 { pt3dadd( 466.335, 591.559, 78.0254, 0.3366 ) }
    dend_10 { pt3dadd( 467.174, 592.33, 77.9598, 0.3408 ) }
    dend_10 { pt3dadd( 467.96, 593.156, 77.7249, 0.298 ) }
    dend_10 { pt3dadd( 468.761, 593.969, 77.5625, 0.2746 ) }
    dend_10 { pt3dadd( 469.58, 594.768, 77.4886, 0.2748 ) }
    dend_10 { pt3dadd( 470.503, 595.413, 77.3408, 0.2748 ) }
    dend_10 { pt3dadd( 471.537, 595.891, 77.1128, 0.2752 ) }
    dend_10 { pt3dadd( 472.516, 596.462, 76.8477, 0.2758 ) }
    dend_10 { pt3dadd( 473.435, 597.133, 76.5425, 0.277 ) }
    dend_10 { pt3dadd( 474.395, 597.741, 76.2756, 0.2798 ) }
    dend_10 { pt3dadd( 475.395, 598.287, 76.0488, 0.2842 ) }
    dend_10 { pt3dadd( 476.465, 598.601, 75.8201, 0.3008 ) }
    dend_10 { pt3dadd( 477.602, 598.682, 75.5891, 0.3294 ) }
    dend_10 { pt3dadd( 478.743, 598.669, 75.5157, 0.3876 ) }
    dend_10 { pt3dadd( 479.887, 598.638, 75.4746, 0.4516 ) }
    dend_10 { pt3dadd( 481.025, 598.751, 75.4508, 0.4346 ) }
    dend_10 { pt3dadd( 482.16, 598.884, 75.4292, 0.4074 ) }
    dend_10 { pt3dadd( 483.303, 598.887, 75.4202, 0.4142 ) }
    dend_10 { pt3dadd( 484.447, 598.875, 75.413, 0.4252 ) }
    dend_10 { pt3dadd( 485.548, 598.58, 75.3617, 0.3874 ) }
    dend_10 { pt3dadd( 486.645, 598.251, 75.3054, 0.3442 ) }
    dend_10 { pt3dadd( 487.783, 598.163, 75.2408, 0.3012 ) }
    dend_10 { pt3dadd( 488.924, 598.087, 75.1761, 0.2582 ) }
    dend_10 { pt3dadd( 490.022, 598.364, 74.8339, 0.2428 ) }
    dend_10 { pt3dadd( 491.119, 598.655, 74.48, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 70/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 356.688, 479.005, 45.9802, 0.4336 ) }
    dend_7 { pt3dadd( 356.695, 479.338, 45.6739, 0.5408 ) }
    dend_7 { pt3dadd( 356.708, 480.453, 45.1954, 0.5694 ) }
    dend_7 { pt3dadd( 356.715, 481.595, 45.0472, 0.3922 ) }
    dend_7 { pt3dadd( 356.711, 482.737, 44.9058, 0.3316 ) }
    dend_7 { pt3dadd( 356.699, 483.88, 44.7686, 0.3438 ) }
    dend_7 { pt3dadd( 356.81, 485.015, 44.6804, 0.3982 ) }
    dend_7 { pt3dadd( 356.987, 486.144, 44.6177, 0.4748 ) }
    dend_7 { pt3dadd( 357.208, 487.266, 44.5642, 0.5402 ) }
    dend_7 { pt3dadd( 357.448, 488.385, 44.5144, 0.6004 ) }
    dend_7 { pt3dadd( 357.318, 489.498, 44.541, 0.6262 ) }
    dend_7 { pt3dadd( 357.048, 490.61, 44.5959, 0.639 ) }
    dend_7 { pt3dadd( 356.603, 491.656, 44.7516, 0.5424 ) }
    dend_7 { pt3dadd( 356.1, 492.68, 44.9403, 0.41 ) }
    dend_7 { pt3dadd( 356.19, 493.774, 45.0304, 0.3394 ) }
    dend_7 { pt3dadd( 356.448, 494.889, 45.0929, 0.2864 ) }
    dend_7 { pt3dadd( 356.849, 495.958, 44.9728, 0.2794 ) }
    dend_7 { pt3dadd( 357.258, 497.026, 44.8414, 0.2754 ) }
    dend_7 { pt3dadd( 357.557, 498.127, 44.6642, 0.2766 ) }
    dend_7 { pt3dadd( 357.856, 499.229, 44.4867, 0.2778 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 90/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 151.913, 640.369, 34.6685, 0.6398 ) }
    dend_21 { pt3dadd( 151.569, 640.712, 34.7844, 0.64 ) }
    dend_21 { pt3dadd( 150.676, 641.361, 35.1277, 0.5916 ) }
    dend_21 { pt3dadd( 149.593, 641.665, 35.6289, 0.4348 ) }
    dend_21 { pt3dadd( 148.984, 642.494, 35.8095, 0.3608 ) }
    dend_21 { pt3dadd( 148.601, 643.572, 35.838, 0.3264 ) }
    dend_21 { pt3dadd( 148.058, 644.572, 35.8302, 0.3578 ) }
    dend_21 { pt3dadd( 147.443, 645.536, 35.8067, 0.4174 ) }
    dend_21 { pt3dadd( 146.643, 646.338, 35.8053, 0.4264 ) }
    dend_21 { pt3dadd( 145.766, 647.074, 35.8131, 0.4146 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_21 { pt3dadd( 144.953, 647.872, 35.9615, 0.3936 ) }
    dend_21 { pt3dadd( 144.162, 648.695, 36.162, 0.369 ) }
    dend_21 { pt3dadd( 143.998, 649.768, 36.3297, 0.383 ) }
    dend_21 { pt3dadd( 144.007, 650.911, 36.4879, 0.4076 ) }
    dend_21 { pt3dadd( 144.909, 651.565, 36.722, 0.3212 ) }
    dend_21 { pt3dadd( 145.86, 652.194, 36.96, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 6/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 151.913, 640.369, 34.6685, 0.6398 ) }
    dend_20 { pt3dadd( 151.393, 640.662, 34.8396, 0.5842 ) }
    dend_20 { pt3dadd( 150.403, 641.219, 35.1473, 0.4836 ) }
    dend_20 { pt3dadd( 149.383, 641.726, 35.1722, 0.4054 ) }
    dend_20 { pt3dadd( 148.342, 642.191, 34.9642, 0.3456 ) }
    dend_20 { pt3dadd( 147.276, 642.575, 34.5904, 0.287 ) }
    dend_20 { pt3dadd( 146.203, 642.928, 34.16, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 13/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 281.184, 551.891, 34.4758, 0.6018 ) }
    dend_14 { pt3dadd( 281.036, 552.717, 34.3448, 0.5136 ) }
    dend_14 { pt3dadd( 280.841, 553.842, 34.179, 0.4226 ) }
    dend_14 { pt3dadd( 280.651, 554.969, 34.0542, 0.4276 ) }
    dend_14 { pt3dadd( 280.389, 556.076, 33.9326, 0.4102 ) }
    dend_14 { pt3dadd( 279.947, 557.129, 33.8198, 0.3372 ) }
    dend_14 { pt3dadd( 279.309, 557.979, 33.8036, 0.287 ) }
    dend_14 { pt3dadd( 278.241, 558.384, 33.9982, 0.2858 ) }
    dend_14 { pt3dadd( 277.158, 558.735, 34.1813, 0.2922 ) }
    dend_14 { pt3dadd( 276.048, 559.008, 34.347, 0.3094 ) }
    dend_14 { pt3dadd( 274.952, 559.327, 34.4854, 0.3386 ) }
    dend_14 { pt3dadd( 273.878, 559.711, 34.5836, 0.385 ) }
    dend_14 { pt3dadd( 272.918, 560.284, 34.5486, 0.421 ) }
    dend_14 { pt3dadd( 272.105, 561.085, 34.3521, 0.444 ) }
    dend_14 { pt3dadd( 271.406, 561.974, 34.158, 0.5052 ) }
    dend_14 { pt3dadd( 270.829, 562.959, 33.9668, 0.6074 ) }
    dend_14 { pt3dadd( 270.161, 563.88, 33.8187, 0.6488 ) }
    dend_14 { pt3dadd( 269.421, 564.75, 33.7047, 0.6424 ) }
    dend_14 { pt3dadd( 268.714, 565.648, 33.626, 0.674 ) }
    dend_14 { pt3dadd( 268.03, 566.566, 33.5712, 0.732 ) }
    dend_14 { pt3dadd( 267.496, 567.567, 33.5759, 0.7524 ) }
    dend_14 { pt3dadd( 267.063, 568.626, 33.6207, 0.748 ) }
    dend_14 { pt3dadd( 266.701, 569.707, 33.74, 0.7068 ) }
    dend_14 { pt3dadd( 266.379, 570.803, 33.9066, 0.6428 ) }
    dend_14 { pt3dadd( 266.005, 571.883, 33.9122, 0.6152 ) }
    dend_14 { pt3dadd( 265.602, 572.953, 33.8307, 0.6074 ) }
    dend_14 { pt3dadd( 265.302, 574.048, 33.5588, 0.5672 ) }
    dend_14 { pt3dadd( 265.051, 575.154, 33.1996, 0.5122 ) }
    dend_14 { pt3dadd( 264.83, 576.268, 32.8633, 0.4932 ) }
    dend_14 { pt3dadd( 264.616, 577.384, 32.5315, 0.4814 ) }
    dend_14 { pt3dadd( 264.065, 578.366, 32.1698, 0.5234 ) }
    dend_14 { pt3dadd( 263.464, 579.328, 31.8035, 0.5736 ) }
    dend_14 { pt3dadd( 262.876, 580.3, 31.4703, 0.528 ) }
    dend_14 { pt3dadd( 262.291, 581.272, 31.1408, 0.4712 ) }
    dend_14 { pt3dadd( 261.28, 581.771, 31.1282, 0.4634 ) }
    dend_14 { pt3dadd( 260.234, 582.227, 31.148, 0.4614 ) }
    dend_14 { pt3dadd( 259.569, 583.155, 31.3258, 0.535 ) }
    dend_14 { pt3dadd( 258.904, 584.083, 31.5053, 0.6074 ) }
    dend_14 { pt3dadd( 258.216, 584.992, 31.752, 0.6246 ) }
    dend_14 { pt3dadd( 257.608, 585.934, 32.0068, 0.6244 ) }
    dend_14 { pt3dadd( 257.44, 587.058, 32.3081, 0.527 ) }
    dend_14 { pt3dadd( 257.248, 588.18, 32.578, 0.443 ) }
    dend_14 { pt3dadd( 256.932, 589.278, 32.6819, 0.4284 ) }
    dend_14 { pt3dadd( 256.793, 590.374, 32.7614, 0.442 ) }
    dend_14 { pt3dadd( 257.145, 591.463, 32.7718, 0.5342 ) }
    dend_14 { pt3dadd( 257.328, 592.56, 32.7597, 0.5632 ) }
    dend_14 { pt3dadd( 257.091, 593.679, 32.6922, 0.4356 ) }
    dend_14 { pt3dadd( 256.647, 594.657, 32.6057, 0.3522 ) }
    dend_14 { pt3dadd( 255.699, 595.294, 32.4736, 0.3754 ) }
    dend_14 { pt3dadd( 254.843, 596.034, 32.4985, 0.3916 ) }
    dend_14 { pt3dadd( 254.101, 596.9, 32.7163, 0.399 ) }
    dend_14 { pt3dadd( 253.539, 597.869, 32.9479, 0.382 ) }
    dend_14 { pt3dadd( 253.172, 598.948, 33.194, 0.3384 ) }
    dend_14 { pt3dadd( 252.602, 599.907, 33.39, 0.325 ) }
    dend_14 { pt3dadd( 251.823, 600.743, 33.5345, 0.3426 ) }
    dend_14 { pt3dadd( 251.057, 601.592, 33.6134, 0.362 ) }
    dend_14 { pt3dadd( 250.301, 602.45, 33.6356, 0.3828 ) }
    dend_14 { pt3dadd( 249.614, 603.36, 33.584, 0.4326 ) }
    dend_14 { pt3dadd( 248.981, 604.313, 33.4746, 0.5048 ) }
    dend_14 { pt3dadd( 248.366, 605.277, 33.4281, 0.5482 ) }
    dend_14 { pt3dadd( 247.763, 606.249, 33.4278, 0.5702 ) }
    dend_14 { pt3dadd( 247.142, 607.208, 33.3407, 0.594 ) }
    dend_14 { pt3dadd( 246.508, 608.16, 33.1968, 0.6188 ) }
    dend_14 { pt3dadd( 245.743, 608.998, 33.0982, 0.6024 ) }
    dend_14 { pt3dadd( 244.902, 609.774, 33.0257, 0.562 ) }
    dend_14 { pt3dadd( 244.338, 610.742, 32.9403, 0.5102 ) }
    dend_14 { pt3dadd( 243.902, 611.797, 32.849, 0.4534 ) }
    dend_14 { pt3dadd( 243.554, 612.885, 32.7614, 0.3766 ) }
    dend_14 { pt3dadd( 243.24, 613.985, 32.6749, 0.2924 ) }
    dend_14 { pt3dadd( 242.279, 614.43, 32.618, 0.2812 ) }
    dend_14 { pt3dadd( 241.176, 614.729, 32.5679, 0.2862 ) }
    dend_14 { pt3dadd( 240.052, 614.943, 32.5979, 0.3044 ) }
    dend_14 { pt3dadd( 238.926, 615.14, 32.6432, 0.3252 ) }
    dend_14 { pt3dadd( 237.985, 615.757, 32.7939, 0.3268 ) }
    dend_14 { pt3dadd( 237.079, 616.452, 32.9638, 0.325 ) }
    dend_14 { pt3dadd( 236.424, 617.377, 33.3122, 0.3116 ) }
    dend_14 { pt3dadd( 235.777, 618.309, 33.6672, 0.298 ) }
    dend_14 { pt3dadd( 234.649, 618.472, 33.7198, 0.3332 ) }
    dend_14 { pt3dadd( 233.52, 618.64, 33.759, 0.373 ) }
    dend_14 { pt3dadd( 232.488, 619.127, 33.5482, 0.5044 ) }
    dend_14 { pt3dadd( 231.478, 619.641, 33.357, 0.6224 ) }
    dend_14 { pt3dadd( 230.794, 620.556, 33.4659, 0.5348 ) }
    dend_14 { pt3dadd( 230.049, 621.391, 33.5793, 0.4572 ) }
    dend_14 { pt3dadd( 228.973, 621.772, 33.717, 0.437 ) }
    dend_14 { pt3dadd( 228.014, 622.294, 33.7714, 0.4692 ) }
    dend_14 { pt3dadd( 227.457, 623.288, 33.5454, 0.6772 ) }
    dend_14 { pt3dadd( 226.882, 624.274, 33.3981, 0.8258 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_14 { pt3dadd( 226.273, 625.242, 33.404, 0.8578 ) }
    dend_14 { pt3dadd( 225.664, 626.21, 33.4592, 0.8638 ) }
    dend_14 { pt3dadd( 225.057, 627.179, 33.5961, 0.8268 ) }
    dend_14 { pt3dadd( 224.367, 628.079, 33.7131, 0.7792 ) }
    dend_14 { pt3dadd( 223.54, 628.868, 33.7966, 0.7146 ) }
    dend_14 { pt3dadd( 222.753, 629.694, 33.8853, 0.6544 ) }
    dend_14 { pt3dadd( 222.03, 630.58, 33.9828, 0.6008 ) }
    dend_14 { pt3dadd( 221.365, 631.499, 34.2516, 0.5882 ) }
    dend_14 { pt3dadd( 220.764, 632.456, 34.7071, 0.6198 ) }
    dend_14 { pt3dadd( 220.509, 633.542, 35.0428, 0.5064 ) }
    dend_14 { pt3dadd( 220.365, 634.669, 35.3399, 0.346 ) }
    dend_14 { pt3dadd( 221.283, 635.164, 35.047, 0.3518 ) }
    dend_14 { pt3dadd( 222.34, 635.576, 34.6772, 0.3794 ) }
    dend_14 { pt3dadd( 222.215, 636.682, 34.419, 0.4342 ) }
    dend_14 { pt3dadd( 222.031, 637.805, 34.2278, 0.4736 ) }
    dend_14 { pt3dadd( 221.749, 638.914, 34.3238, 0.4388 ) }
    dend_14 { pt3dadd( 221.456, 640.015, 34.4803, 0.4078 ) }
    dend_14 { pt3dadd( 221.117, 641.096, 34.8704, 0.3906 ) }
    dend_14 { pt3dadd( 220.671, 642.112, 35.2386, 0.3988 ) }
    dend_14 { pt3dadd( 219.838, 642.887, 35.5284, 0.5 ) }
    dend_14 { pt3dadd( 218.932, 643.161, 35.7364, 0.5946 ) }
    dend_14 { pt3dadd( 217.913, 642.644, 35.8154, 0.6788 ) }
    dend_14 { pt3dadd( 216.851, 642.445, 35.926, 0.7418 ) }
    dend_14 { pt3dadd( 215.732, 642.676, 36.0794, 0.7762 ) }
    dend_14 { pt3dadd( 214.609, 642.697, 36.1438, 0.7924 ) }
    dend_14 { pt3dadd( 213.48, 642.509, 36.1203, 0.7908 ) }
    dend_14 { pt3dadd( 212.398, 642.684, 36.0802, 0.8062 ) }
    dend_14 { pt3dadd( 211.356, 643.154, 36.0265, 0.8358 ) }
    dend_14 { pt3dadd( 210.456, 643.827, 35.8985, 0.72 ) }
    dend_14 { pt3dadd( 209.655, 644.641, 35.719, 0.5034 ) }
    dend_14 { pt3dadd( 208.634, 644.97, 35.7235, 0.455 ) }
    dend_14 { pt3dadd( 207.492, 645.034, 35.8288, 0.4986 ) }
    dend_14 { pt3dadd( 206.412, 645.362, 35.8299, 0.464 ) }
    dend_14 { pt3dadd( 205.358, 645.807, 35.7846, 0.3944 ) }
    dend_14 { pt3dadd( 204.556, 646.584, 35.7339, 0.3658 ) }
    dend_14 { pt3dadd( 203.836, 647.467, 35.6849, 0.357 ) }
    dend_14 { pt3dadd( 202.804, 647.961, 35.7381, 0.5002 ) }
    dend_14 { pt3dadd( 201.784, 648.475, 35.7857, 0.6246 ) }
    dend_14 { pt3dadd( 200.87, 649.163, 35.7888, 0.5972 ) }
    dend_14 { pt3dadd( 199.937, 649.818, 35.793, 0.5692 ) }
    dend_14 { pt3dadd( 198.889, 650.278, 35.8036, 0.5358 ) }
    dend_14 { pt3dadd( 197.843, 650.74, 35.8137, 0.5024 ) }
    dend_14 { pt3dadd( 196.803, 651.219, 35.8218, 0.4668 ) }
    dend_14 { pt3dadd( 195.756, 651.672, 35.7972, 0.4514 ) }
    dend_14 { pt3dadd( 194.664, 652.008, 35.6194, 0.53 ) }
    dend_14 { pt3dadd( 193.575, 652.35, 35.4281, 0.5906 ) }
    dend_14 { pt3dadd( 192.496, 652.716, 35.1834, 0.5794 ) }
    dend_14 { pt3dadd( 191.407, 652.888, 34.9731, 0.5494 ) }
    dend_14 { pt3dadd( 190.296, 652.622, 34.841, 0.4766 ) }
    dend_14 { pt3dadd( 189.268, 652.689, 34.6914, 0.433 ) }
    dend_14 { pt3dadd( 188.415, 653.446, 34.5055, 0.4502 ) }
    dend_14 { pt3dadd( 187.637, 654.273, 34.2672, 0.4592 ) }
    dend_14 { pt3dadd( 186.93, 655.165, 33.9816, 0.461 ) }
    dend_14 { pt3dadd( 186.173, 656.018, 33.78, 0.4556 ) }
    dend_14 { pt3dadd( 185.378, 656.837, 33.6479, 0.4444 ) }
    dend_14 { pt3dadd( 184.543, 657.617, 33.5972, 0.4024 ) }
    dend_14 { pt3dadd( 183.68, 658.367, 33.6073, 0.3376 ) }
    dend_14 { pt3dadd( 182.888, 659.19, 33.6218, 0.3594 ) }
    dend_14 { pt3dadd( 182.143, 660.058, 33.6395, 0.4354 ) }
    dend_14 { pt3dadd( 181.302, 660.826, 33.7109, 0.4292 ) }
    dend_14 { pt3dadd( 180.405, 661.534, 33.8142, 0.3738 ) }
    dend_14 { pt3dadd( 179.634, 662.366, 33.9321, 0.3772 ) }
    dend_14 { pt3dadd( 178.938, 663.272, 34.0584, 0.415 ) }
    dend_14 { pt3dadd( 178.177, 664.12, 34.281, 0.4166 ) }
    dend_14 { pt3dadd( 177.39, 664.943, 34.5439, 0.4028 ) }
    dend_14 { pt3dadd( 176.747, 665.875, 34.8443, 0.5082 ) }
    dend_14 { pt3dadd( 176.147, 666.842, 35.1565, 0.6506 ) }
    dend_14 { pt3dadd( 175.522, 667.795, 35.376, 0.6988 ) }
    dend_14 { pt3dadd( 174.888, 668.745, 35.5687, 0.7198 ) }
    dend_14 { pt3dadd( 174.865, 669.838, 35.6745, 0.6152 ) }
    dend_14 { pt3dadd( 175.011, 670.972, 35.756, 0.476 ) }
    dend_14 { pt3dadd( 174.917, 672.108, 35.9346, 0.3518 ) }
    dend_14 { pt3dadd( 174.803, 673.244, 36.12, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 73/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 281.184, 551.891, 34.4758, 0.6018 ) }
    dend_13 { pt3dadd( 280.431, 552.48, 34.9815, 0.599 ) }
    dend_13 { pt3dadd( 279.563, 553.189, 35.4138, 0.6026 ) }
    dend_13 { pt3dadd( 278.736, 553.975, 35.2008, 0.6332 ) }
    dend_13 { pt3dadd( 277.887, 554.735, 35.0123, 0.6526 ) }
    dend_13 { pt3dadd( 276.948, 555.386, 34.9196, 0.628 ) }
    dend_13 { pt3dadd( 275.968, 555.954, 34.8667, 0.6336 ) }
    dend_13 { pt3dadd( 274.869, 556.27, 34.932, 0.7294 ) }
    dend_13 { pt3dadd( 273.78, 556.614, 35.0014, 0.7678 ) }
    dend_13 { pt3dadd( 272.718, 557.04, 35.0837, 0.6382 ) }
    dend_13 { pt3dadd( 271.708, 557.55, 35.1691, 0.5268 ) }
    dend_13 { pt3dadd( 270.841, 558.296, 35.2629, 0.4662 ) }
    dend_13 { pt3dadd( 269.961, 559.023, 35.3998, 0.4268 ) }
    dend_13 { pt3dadd( 269.051, 559.709, 35.637, 0.4372 ) }
    dend_13 { pt3dadd( 268.098, 560.332, 35.7952, 0.4784 ) }
    dend_13 { pt3dadd( 267.095, 560.884, 35.8604, 0.556 ) }
    dend_13 { pt3dadd( 266.132, 561.494, 35.8865, 0.6232 ) }
    dend_13 { pt3dadd( 265.204, 562.165, 35.8714, 0.6792 ) }
    dend_13 { pt3dadd( 264.166, 562.587, 35.8803, 0.6476 ) }
    dend_13 { pt3dadd( 263.05, 562.839, 35.9061, 0.5556 ) }
    dend_13 { pt3dadd( 261.966, 563.195, 35.8999, 0.534 ) }
    dend_13 { pt3dadd( 260.9, 563.609, 35.8761, 0.552 ) }
    dend_13 { pt3dadd( 259.912, 564.176, 35.8691, 0.6398 ) }
    dend_13 { pt3dadd( 258.958, 564.807, 35.8688, 0.7562 ) }
    dend_13 { pt3dadd( 258.132, 565.588, 35.8526, 0.7836 ) }
    dend_13 { pt3dadd( 257.358, 566.431, 35.8302, 0.7748 ) }
    dend_13 { pt3dadd( 256.692, 567.357, 35.7622, 0.8016 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_13 { pt3dadd( 256.067, 568.315, 35.677, 0.8422 ) }
    dend_13 { pt3dadd( 255.26, 569.109, 35.632, 0.8702 ) }
    dend_13 { pt3dadd( 254.38, 569.841, 35.6026, 0.8934 ) }
    dend_13 { pt3dadd( 253.449, 570.504, 35.6107, 0.8314 ) }
    dend_13 { pt3dadd( 252.499, 571.142, 35.6317, 0.74 ) }
    dend_13 { pt3dadd( 251.534, 571.754, 35.5608, 0.6108 ) }
    dend_13 { pt3dadd( 250.562, 572.357, 35.4623, 0.4706 ) }
    dend_13 { pt3dadd( 249.553, 572.893, 35.3492, 0.4074 ) }
    dend_13 { pt3dadd( 248.536, 573.413, 35.2321, 0.363 ) }
    dend_13 { pt3dadd( 247.538, 573.965, 35.0283, 0.3678 ) }
    dend_13 { pt3dadd( 246.626, 574.599, 34.834, 0.389 ) }
    dend_13 { pt3dadd( 246.18, 575.653, 34.799, 0.4432 ) }
    dend_13 { pt3dadd( 245.769, 576.717, 34.7466, 0.4842 ) }
    dend_13 { pt3dadd( 245.555, 577.839, 34.5974, 0.4512 ) }
    dend_13 { pt3dadd( 245.274, 578.935, 34.4632, 0.4254 ) }
    dend_13 { pt3dadd( 244.691, 579.92, 34.3966, 0.4328 ) }
    dend_13 { pt3dadd( 244.014, 580.821, 34.505, 0.4162 ) }
    dend_13 { pt3dadd( 243.178, 581.584, 34.909, 0.3594 ) }
    dend_13 { pt3dadd( 242.351, 582.366, 35.1106, 0.3434 ) }
    dend_13 { pt3dadd( 241.533, 583.165, 35.1218, 0.3656 ) }
    dend_13 { pt3dadd( 240.742, 583.991, 35.0622, 0.3844 ) }
    dend_13 { pt3dadd( 239.977, 584.84, 34.9387, 0.4 ) }
    dend_13 { pt3dadd( 239.198, 585.678, 34.904, 0.422 ) }
    dend_13 { pt3dadd( 238.408, 586.505, 34.9437, 0.4492 ) }
    dend_13 { pt3dadd( 237.645, 587.356, 34.8743, 0.4232 ) }
    dend_13 { pt3dadd( 236.9, 588.221, 34.7365, 0.3636 ) }
    dend_13 { pt3dadd( 236.207, 589.129, 34.7242, 0.347 ) }
    dend_13 { pt3dadd( 235.55, 590.065, 34.7894, 0.3572 ) }
    dend_13 { pt3dadd( 234.664, 590.775, 34.9796, 0.3376 ) }
    dend_13 { pt3dadd( 233.748, 591.455, 35.1873, 0.3138 ) }
    dend_13 { pt3dadd( 232.908, 592.227, 35.3489, 0.3218 ) }
    dend_13 { pt3dadd( 232.076, 593.01, 35.5057, 0.333 ) }
    dend_13 { pt3dadd( 231.142, 593.669, 35.5779, 0.327 ) }
    dend_13 { pt3dadd( 230.198, 594.315, 35.6418, 0.3194 ) }
    dend_13 { pt3dadd( 229.481, 595.2, 35.6815, 0.341 ) }
    dend_13 { pt3dadd( 228.781, 596.105, 35.719, 0.365 ) }
    dend_13 { pt3dadd( 228.135, 597.048, 35.8299, 0.3748 ) }
    dend_13 { pt3dadd( 227.492, 597.994, 35.9444, 0.384 ) }
    dend_13 { pt3dadd( 227.558, 599.121, 36.1696, 0.3084 ) }
    dend_13 { pt3dadd( 227.656, 600.257, 36.4, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 40/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 357.856, 499.229, 44.4867, 0.2778 ) }
    dend_9 { pt3dadd( 357.646, 499.682, 43.5084, 0.3564 ) }
    dend_9 { pt3dadd( 357.284, 500.617, 42.523, 0.4244 ) }
    dend_9 { pt3dadd( 356.934, 501.706, 42.4813, 0.4024 ) }
    dend_9 { pt3dadd( 356.706, 502.818, 42.5018, 0.3924 ) }
    dend_9 { pt3dadd( 356.628, 503.958, 42.5967, 0.3964 ) }
    dend_9 { pt3dadd( 356.451, 505.084, 42.6196, 0.3754 ) }
    dend_9 { pt3dadd( 356.16, 506.19, 42.5575, 0.3254 ) }
    dend_9 { pt3dadd( 355.754, 507.252, 42.4483, 0.3266 ) }
    dend_9 { pt3dadd( 355.24, 508.271, 42.2948, 0.376 ) }
    dend_9 { pt3dadd( 354.82, 509.329, 42.2022, 0.4058 ) }
    dend_9 { pt3dadd( 354.486, 510.424, 42.1655, 0.418 ) }
    dend_9 { pt3dadd( 354.233, 511.537, 42.1534, 0.4464 ) }
    dend_9 { pt3dadd( 354.047, 512.665, 42.1624, 0.4888 ) }
    dend_9 { pt3dadd( 353.744, 513.76, 42.0255, 0.5602 ) }
    dend_9 { pt3dadd( 353.345, 514.828, 41.767, 0.656 ) }
    dend_9 { pt3dadd( 353.035, 515.911, 41.3529, 0.6358 ) }
    dend_9 { pt3dadd( 352.798, 517.008, 40.8108, 0.5206 ) }
    dend_9 { pt3dadd( 352.737, 518.13, 40.6294, 0.4688 ) }
    dend_9 { pt3dadd( 352.813, 519.271, 40.7229, 0.465 ) }
    dend_9 { pt3dadd( 353.123, 520.353, 40.8024, 0.4596 ) }
    dend_9 { pt3dadd( 353.593, 521.395, 40.8716, 0.453 ) }
    dend_9 { pt3dadd( 353.836, 522.499, 41.0256, 0.5268 ) }
    dend_9 { pt3dadd( 353.97, 523.633, 41.2202, 0.6392 ) }
    dend_9 { pt3dadd( 354.154, 524.745, 41.6693, 0.6694 ) }
    dend_9 { pt3dadd( 354.357, 525.849, 42.2086, 0.6702 ) }
    dend_9 { pt3dadd( 354.404, 526.982, 42.268, 0.833 ) }
    dend_9 { pt3dadd( 354.405, 528.127, 42.1812, 1.045 ) }
    dend_9 { pt3dadd( 354.236, 529.252, 42.0375, 1.0662 ) }
    dend_9 { pt3dadd( 354.02, 530.374, 41.8785, 1.035 ) }
    dend_9 { pt3dadd( 353.564, 531.416, 41.8491, 0.9142 ) }
    dend_9 { pt3dadd( 353.053, 532.439, 41.8494, 0.773 ) }
    dend_9 { pt3dadd( 353.069, 533.557, 41.9322, 0.5748 ) }
    dend_9 { pt3dadd( 353.191, 534.694, 42.0319, 0.365 ) }
    dend_9 { pt3dadd( 352.771, 535.684, 41.1037, 0.5406 ) }
    dend_9 { pt3dadd( 352.363, 536.68, 40.1752, 0.7238 ) }
    dend_9 { pt3dadd( 352.146, 537.759, 39.415, 0.9056 ) }
    dend_9 { pt3dadd( 351.93, 538.841, 38.6733, 1.0524 ) }
    dend_9 { pt3dadd( 351.727, 539.939, 38.0702, 0.9346 ) }
    dend_9 { pt3dadd( 351.587, 541.04, 37.5206, 0.8108 ) }
    dend_9 { pt3dadd( 351.855, 542.148, 37.324, 0.6464 ) }
    dend_9 { pt3dadd( 352.137, 543.254, 37.1316, 0.517 ) }
    dend_9 { pt3dadd( 352.487, 544.341, 36.9594, 0.565 ) }
    dend_9 { pt3dadd( 352.822, 545.433, 36.7886, 0.6008 ) }
    dend_9 { pt3dadd( 353.077, 546.545, 36.6257, 0.574 ) }
    dend_9 { pt3dadd( 353.29, 547.657, 36.37, 0.5404 ) }
    dend_9 { pt3dadd( 353.293, 548.765, 35.674, 0.4754 ) }
    dend_9 { pt3dadd( 353.35, 549.849, 34.8617, 0.4154 ) }
    dend_9 { pt3dadd( 353.613, 550.834, 33.5922, 0.3744 ) }
    dend_9 { pt3dadd( 353.469, 551.878, 33.1808, 0.3636 ) }
    dend_9 { pt3dadd( 353.09, 552.958, 33.2576, 0.3698 ) }
    dend_9 { pt3dadd( 352.925, 554.054, 33.8176, 0.4592 ) }
    dend_9 { pt3dadd( 352.83, 555.155, 34.5405, 0.5764 ) }
    dend_9 { pt3dadd( 352.607, 556.265, 34.7323, 0.5716 ) }
    dend_9 { pt3dadd( 352.345, 557.38, 34.7698, 0.5314 ) }
    dend_9 { pt3dadd( 351.882, 558.416, 34.5576, 0.523 ) }
    dend_9 { pt3dadd( 351.38, 559.439, 34.298, 0.5208 ) }
    dend_9 { pt3dadd( 350.771, 560.399, 33.9928, 0.4292 ) }
    dend_9 { pt3dadd( 350.145, 561.346, 33.679, 0.3214 ) }
    dend_9 { pt3dadd( 349.686, 562.379, 33.259, 0.3014 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_9 { pt3dadd( 349.247, 563.42, 32.8289, 0.2902 ) }
    dend_9 { pt3dadd( 349.303, 564.562, 32.7463, 0.3138 ) }
    dend_9 { pt3dadd( 349.356, 565.703, 32.6662, 0.3372 ) }
    dend_9 { pt3dadd( 349.029, 566.799, 32.6407, 0.3294 ) }
    dend_9 { pt3dadd( 348.695, 567.893, 32.594, 0.3228 ) }
    dend_9 { pt3dadd( 348.318, 568.971, 32.41, 0.3224 ) }
    dend_9 { pt3dadd( 347.94, 570.048, 32.2423, 0.3254 ) }
    dend_9 { pt3dadd( 347.546, 571.121, 32.1812, 0.3508 ) }
    dend_9 { pt3dadd( 347.134, 572.188, 32.1429, 0.3762 ) }
    dend_9 { pt3dadd( 346.609, 573.203, 32.2384, 0.4024 ) }
    dend_9 { pt3dadd( 346.079, 574.216, 32.3375, 0.4198 ) }
    dend_9 { pt3dadd( 345.531, 575.219, 32.4551, 0.3918 ) }
    dend_9 { pt3dadd( 344.929, 576.18, 32.5814, 0.3682 ) }
    dend_9 { pt3dadd( 344.107, 576.973, 32.7429, 0.362 ) }
    dend_9 { pt3dadd( 343.292, 577.77, 32.9619, 0.3562 ) }
    dend_9 { pt3dadd( 342.494, 578.577, 33.3178, 0.3514 ) }
    dend_9 { pt3dadd( 341.621, 579.294, 33.5283, 0.3886 ) }
    dend_9 { pt3dadd( 340.639, 579.88, 33.5272, 0.487 ) }
    dend_9 { pt3dadd( 339.714, 580.542, 33.4323, 0.524 ) }
    dend_9 { pt3dadd( 338.862, 581.302, 33.2195, 0.4836 ) }
    dend_9 { pt3dadd( 338.005, 582.056, 33.0663, 0.4864 ) }
    dend_9 { pt3dadd( 337.142, 582.806, 32.9851, 0.5418 ) }
    dend_9 { pt3dadd( 336.195, 583.423, 32.8748, 0.558 ) }
    dend_9 { pt3dadd( 335.148, 583.88, 32.7295, 0.5276 ) }
    dend_9 { pt3dadd( 334.12, 584.377, 32.6206, 0.5484 ) }
    dend_9 { pt3dadd( 333.111, 584.917, 32.5522, 0.6268 ) }
    dend_9 { pt3dadd( 332.279, 585.653, 32.529, 0.6274 ) }
    dend_9 { pt3dadd( 331.633, 586.596, 32.5539, 0.5458 ) }
    dend_9 { pt3dadd( 331.026, 587.564, 32.5086, 0.4884 ) }
    dend_9 { pt3dadd( 330.441, 588.548, 32.4184, 0.4464 ) }
    dend_9 { pt3dadd( 329.63, 589.317, 32.2776, 0.4554 ) }
    dend_9 { pt3dadd( 328.69, 589.964, 32.1076, 0.4934 ) }
    dend_9 { pt3dadd( 327.682, 590.481, 31.8142, 0.5704 ) }
    dend_9 { pt3dadd( 326.642, 590.934, 31.4605, 0.6666 ) }
    dend_9 { pt3dadd( 325.951, 591.776, 31.1716, 0.6402 ) }
    dend_9 { pt3dadd( 325.398, 592.773, 30.9081, 0.565 ) }
    dend_9 { pt3dadd( 325.094, 593.864, 30.8305, 0.4774 ) }
    dend_9 { pt3dadd( 324.866, 594.985, 30.8104, 0.386 ) }
    dend_9 { pt3dadd( 324.221, 595.891, 30.9512, 0.3328 ) }
    dend_9 { pt3dadd( 323.451, 596.733, 31.1405, 0.2908 ) }
    dend_9 { pt3dadd( 322.359, 596.98, 31.3874, 0.2592 ) }
    dend_9 { pt3dadd( 321.235, 597.168, 31.64, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 42/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 357.856, 499.229, 44.4867, 0.2778 ) }
    dend_8 { pt3dadd( 357.938, 499.366, 44.4623, 0.279 ) }
    dend_8 { pt3dadd( 358.525, 500.346, 44.2884, 0.2878 ) }
    dend_8 { pt3dadd( 359.113, 501.325, 44.1364, 0.3084 ) }
    dend_8 { pt3dadd( 359.702, 502.304, 43.9978, 0.3364 ) }
    dend_8 { pt3dadd( 360.048, 503.377, 43.9796, 0.3682 ) }
    dend_8 { pt3dadd( 360.259, 504.502, 44.0275, 0.4022 ) }
    dend_8 { pt3dadd( 360.486, 505.621, 44.1927, 0.388 ) }
    dend_8 { pt3dadd( 360.718, 506.737, 44.4058, 0.3542 ) }
    dend_8 { pt3dadd( 361.352, 507.644, 44.6275, 0.3844 ) }
    dend_8 { pt3dadd( 362.134, 508.474, 44.8524, 0.4382 ) }
    dend_8 { pt3dadd( 363.0, 509.213, 45.0806, 0.4294 ) }
    dend_8 { pt3dadd( 363.893, 509.922, 45.3099, 0.4 ) }
    dend_8 { pt3dadd( 364.479, 510.866, 45.7243, 0.3898 ) }
    dend_8 { pt3dadd( 364.977, 511.878, 46.1924, 0.3848 ) }
    dend_8 { pt3dadd( 364.835, 512.971, 46.8667, 0.3794 ) }
    dend_8 { pt3dadd( 364.665, 514.068, 47.5496, 0.3738 ) }
    dend_8 { pt3dadd( 364.897, 515.174, 47.9662, 0.4066 ) }
    dend_8 { pt3dadd( 365.129, 516.283, 48.3703, 0.4392 ) }
    dend_8 { pt3dadd( 365.386, 517.393, 48.5803, 0.469 ) }
    dend_8 { pt3dadd( 365.602, 518.507, 48.7771, 0.5056 ) }
    dend_8 { pt3dadd( 365.408, 519.635, 48.8412, 0.6126 ) }
    dend_8 { pt3dadd( 365.228, 520.763, 48.8832, 0.7102 ) }
    dend_8 { pt3dadd( 365.12, 521.902, 48.813, 0.7598 ) }
    dend_8 { pt3dadd( 365.112, 523.023, 48.7668, 0.7982 ) }
    dend_8 { pt3dadd( 365.594, 524.061, 48.8379, 0.783 ) }
    dend_8 { pt3dadd( 366.054, 525.106, 48.9359, 0.7392 ) }
    dend_8 { pt3dadd( 366.436, 526.182, 49.1249, 0.5984 ) }
    dend_8 { pt3dadd( 366.686, 527.266, 49.3578, 0.522 ) }
    dend_8 { pt3dadd( 366.493, 528.383, 49.7395, 0.6646 ) }
    dend_8 { pt3dadd( 366.516, 529.46, 50.0794, 0.7336 ) }
    dend_8 { pt3dadd( 367.113, 530.43, 50.3084, 0.6058 ) }
    dend_8 { pt3dadd( 367.748, 531.378, 50.468, 0.5256 ) }
    dend_8 { pt3dadd( 368.451, 532.28, 50.5047, 0.5302 ) }
    dend_8 { pt3dadd( 369.01, 533.257, 50.4834, 0.5512 ) }
    dend_8 { pt3dadd( 369.352, 534.349, 50.3745, 0.5974 ) }
    dend_8 { pt3dadd( 369.6, 535.458, 50.2586, 0.595 ) }
    dend_8 { pt3dadd( 369.724, 536.596, 50.1332, 0.5268 ) }
    dend_8 { pt3dadd( 370.135, 537.611, 50.1155, 0.5434 ) }
    dend_8 { pt3dadd( 370.856, 538.499, 50.2124, 0.65 ) }
    dend_8 { pt3dadd( 371.389, 539.494, 50.3185, 0.5912 ) }
    dend_8 { pt3dadd( 371.791, 540.565, 50.4305, 0.4154 ) }
    dend_8 { pt3dadd( 371.854, 541.69, 50.4711, 0.3822 ) }
    dend_8 { pt3dadd( 371.806, 542.833, 50.4882, 0.3956 ) }
    dend_8 { pt3dadd( 372.194, 543.882, 50.4549, 0.4418 ) }
    dend_8 { pt3dadd( 372.708, 544.903, 50.4064, 0.4978 ) }
    dend_8 { pt3dadd( 372.757, 546.019, 50.307, 0.5032 ) }
    dend_8 { pt3dadd( 372.681, 547.159, 50.1942, 0.495 ) }
    dend_8 { pt3dadd( 372.978, 548.243, 50.4599, 0.4582 ) }
    dend_8 { pt3dadd( 373.356, 549.313, 50.8057, 0.4152 ) }
    dend_8 { pt3dadd( 373.855, 550.339, 50.958, 0.4404 ) }
    dend_8 { pt3dadd( 374.359, 551.365, 51.102, 0.4686 ) }
    dend_8 { pt3dadd( 375.03, 552.29, 50.9499, 0.4892 ) }
    dend_8 { pt3dadd( 375.719, 553.194, 50.7923, 0.5114 ) }
    dend_8 { pt3dadd( 376.688, 553.799, 50.6223, 0.557 ) }
    dend_8 { pt3dadd( 377.615, 554.437, 50.4538, 0.5966 ) }
    dend_8 { pt3dadd( 377.934, 555.533, 50.3042, 0.552 ) }
    dend_8 { pt3dadd( 378.214, 556.636, 50.1766, 0.516 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_8 { pt3dadd( 378.21, 557.78, 50.192, 0.5384 ) }
    dend_8 { pt3dadd( 378.195, 558.923, 50.2536, 0.5882 ) }
    dend_8 { pt3dadd( 378.149, 560.062, 50.4736, 0.7316 ) }
    dend_8 { pt3dadd( 378.098, 561.202, 50.6817, 0.8184 ) }
    dend_8 { pt3dadd( 378.021, 562.341, 50.8486, 0.7168 ) }
    dend_8 { pt3dadd( 378.007, 563.478, 50.9776, 0.6166 ) }
    dend_8 { pt3dadd( 378.189, 564.607, 50.9849, 0.5214 ) }
    dend_8 { pt3dadd( 378.299, 565.739, 50.9883, 0.4324 ) }
    dend_8 { pt3dadd( 378.188, 566.877, 50.979, 0.3618 ) }
    dend_8 { pt3dadd( 378.042, 568.011, 50.995, 0.3112 ) }
    dend_8 { pt3dadd( 377.789, 569.125, 51.0854, 0.3202 ) }
    dend_8 { pt3dadd( 377.661, 570.242, 51.168, 0.344 ) }
    dend_8 { pt3dadd( 377.886, 571.363, 51.2291, 0.409 ) }
    dend_8 { pt3dadd( 377.947, 572.476, 51.315, 0.4506 ) }
    dend_8 { pt3dadd( 377.612, 573.568, 51.4604, 0.4374 ) }
    dend_8 { pt3dadd( 377.447, 574.672, 51.6054, 0.4278 ) }
    dend_8 { pt3dadd( 377.623, 575.802, 51.7507, 0.4258 ) }
    dend_8 { pt3dadd( 377.766, 576.934, 51.8862, 0.42 ) }
    dend_8 { pt3dadd( 377.845, 578.075, 52.0044, 0.4074 ) }
    dend_8 { pt3dadd( 377.654, 579.153, 52.0982, 0.3848 ) }
    dend_8 { pt3dadd( 377.089, 580.149, 52.1578, 0.3488 ) }
    dend_8 { pt3dadd( 376.871, 581.211, 52.1912, 0.3446 ) }
    dend_8 { pt3dadd( 377.016, 582.347, 52.1973, 0.3738 ) }
    dend_8 { pt3dadd( 376.899, 583.462, 52.262, 0.3786 ) }
    dend_8 { pt3dadd( 376.589, 584.562, 52.3706, 0.3654 ) }
    dend_8 { pt3dadd( 376.453, 585.694, 52.4664, 0.3914 ) }
    dend_8 { pt3dadd( 376.37, 586.833, 52.5585, 0.429 ) }
    dend_8 { pt3dadd( 376.951, 587.819, 52.5445, 0.4696 ) }
    dend_8 { pt3dadd( 377.504, 588.811, 52.53, 0.5082 ) }
    dend_8 { pt3dadd( 377.337, 589.943, 52.5076, 0.4824 ) }
    dend_8 { pt3dadd( 377.164, 591.073, 52.4913, 0.4558 ) }
    dend_8 { pt3dadd( 376.906, 592.187, 52.5706, 0.418 ) }
    dend_8 { pt3dadd( 376.651, 593.301, 52.6632, 0.38 ) }
    dend_8 { pt3dadd( 376.442, 594.42, 52.9536, 0.338 ) }
    dend_8 { pt3dadd( 376.231, 595.538, 53.2426, 0.2992 ) }
    dend_8 { pt3dadd( 375.983, 596.649, 53.5158, 0.3054 ) }
    dend_8 { pt3dadd( 375.771, 597.764, 53.795, 0.314 ) }
    dend_8 { pt3dadd( 375.797, 598.9, 54.1131, 0.3394 ) }
    dend_8 { pt3dadd( 375.832, 600.036, 54.4158, 0.351 ) }
    dend_8 { pt3dadd( 375.882, 601.174, 54.691, 0.3364 ) }
    dend_8 { pt3dadd( 375.703, 602.262, 54.9069, 0.3384 ) }
    dend_8 { pt3dadd( 375.167, 603.271, 55.0292, 0.3668 ) }
    dend_8 { pt3dadd( 374.77, 604.327, 55.1382, 0.3722 ) }
    dend_8 { pt3dadd( 374.589, 605.456, 55.2266, 0.342 ) }
    dend_8 { pt3dadd( 374.867, 606.48, 55.3249, 0.3264 ) }
    dend_8 { pt3dadd( 375.517, 607.422, 55.4313, 0.3222 ) }
    dend_8 { pt3dadd( 375.813, 608.474, 55.5691, 0.3376 ) }
    dend_8 { pt3dadd( 375.83, 609.616, 55.7318, 0.3684 ) }
    dend_8 { pt3dadd( 375.604, 610.716, 55.981, 0.422 ) }
    dend_8 { pt3dadd( 375.389, 611.767, 56.264, 0.481 ) }
    dend_8 { pt3dadd( 376.115, 612.648, 56.4516, 0.4932 ) }
    dend_8 { pt3dadd( 376.891, 613.468, 56.6289, 0.5152 ) }
    dend_8 { pt3dadd( 377.887, 614.027, 56.7613, 0.58 ) }
    dend_8 { pt3dadd( 378.742, 614.701, 56.87, 0.6162 ) }
    dend_8 { pt3dadd( 379.078, 615.795, 56.894, 0.5492 ) }
    dend_8 { pt3dadd( 379.273, 616.903, 56.926, 0.539 ) }
    dend_8 { pt3dadd( 379.173, 618.043, 56.9752, 0.6454 ) }
    dend_8 { pt3dadd( 379.121, 619.183, 57.0497, 0.743 ) }
    dend_8 { pt3dadd( 379.154, 620.325, 57.1729, 0.824 ) }
    dend_8 { pt3dadd( 379.346, 621.433, 57.239, 0.858 ) }
    dend_8 { pt3dadd( 379.785, 622.489, 57.2169, 0.8188 ) }
    dend_8 { pt3dadd( 380.172, 623.565, 57.1844, 0.804 ) }
    dend_8 { pt3dadd( 380.482, 624.665, 57.1368, 0.825 ) }
    dend_8 { pt3dadd( 380.888, 625.728, 57.108, 0.8398 ) }
    dend_8 { pt3dadd( 381.429, 626.736, 57.1052, 0.8462 ) }
    dend_8 { pt3dadd( 382.011, 627.72, 57.1234, 0.792 ) }
    dend_8 { pt3dadd( 382.622, 628.686, 57.157, 0.6944 ) }
    dend_8 { pt3dadd( 382.684, 629.766, 57.2603, 0.6254 ) }
    dend_8 { pt3dadd( 382.503, 630.894, 57.3944, 0.5686 ) }
    dend_8 { pt3dadd( 381.993, 631.9, 57.64, 0.5696 ) }
    dend_8 { pt3dadd( 381.427, 632.885, 57.9085, 0.5894 ) }
    dend_8 { pt3dadd( 381.141, 633.988, 58.1602, 0.7206 ) }
    dend_8 { pt3dadd( 380.826, 635.076, 58.4279, 0.8286 ) }
    dend_8 { pt3dadd( 380.152, 635.981, 58.8885, 0.6566 ) }
    dend_8 { pt3dadd( 379.554, 636.92, 59.2987, 0.5074 ) }
    dend_8 { pt3dadd( 379.397, 638.051, 59.4196, 0.4874 ) }
    dend_8 { pt3dadd( 379.365, 639.167, 59.5269, 0.4826 ) }
    dend_8 { pt3dadd( 379.822, 640.214, 59.5776, 0.5382 ) }
    dend_8 { pt3dadd( 380.268, 641.268, 59.6338, 0.593 ) }
    dend_8 { pt3dadd( 380.665, 642.34, 59.7106, 0.645 ) }
    dend_8 { pt3dadd( 380.768, 643.364, 59.8251, 0.681 ) }
    dend_8 { pt3dadd( 380.055, 644.254, 60.0446, 0.6728 ) }
    dend_8 { pt3dadd( 379.569, 645.235, 60.2678, 0.661 ) }
    dend_8 { pt3dadd( 379.46, 646.371, 60.4974, 0.6438 ) }
    dend_8 { pt3dadd( 379.401, 647.51, 60.6502, 0.6364 ) }
    dend_8 { pt3dadd( 379.4, 648.654, 60.711, 0.641 ) }
    dend_8 { pt3dadd( 379.475, 649.792, 60.7194, 0.6078 ) }
    dend_8 { pt3dadd( 379.639, 650.925, 60.6693, 0.5324 ) }
    dend_8 { pt3dadd( 379.214, 651.851, 60.5788, 0.5272 ) }
    dend_8 { pt3dadd( 378.383, 652.636, 60.4604, 0.5704 ) }
    dend_8 { pt3dadd( 377.723, 653.555, 60.3728, 0.6394 ) }
    dend_8 { pt3dadd( 377.159, 654.55, 60.3028, 0.723 ) }
    dend_8 { pt3dadd( 376.62, 655.557, 60.1255, 0.6448 ) }
    dend_8 { pt3dadd( 376.087, 656.565, 59.9245, 0.5308 ) }
    dend_8 { pt3dadd( 375.174, 657.23, 59.8811, 0.4902 ) }
    dend_8 { pt3dadd( 374.214, 657.852, 59.8576, 0.459 ) }
    dend_8 { pt3dadd( 373.932, 658.95, 59.8214, 0.4616 ) }
    dend_8 { pt3dadd( 373.717, 660.066, 59.7845, 0.46 ) }
    dend_8 { pt3dadd( 373.844, 661.203, 59.7442, 0.4158 ) }
    dend_8 { pt3dadd( 373.865, 662.32, 59.7265, 0.3776 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_8 { pt3dadd( 373.326, 663.328, 59.8287, 0.3714 ) }
    dend_8 { pt3dadd( 373.267, 664.163, 59.9418, 0.3686 ) }
    dend_8 { pt3dadd( 374.326, 664.594, 60.0799, 0.3734 ) }
    dend_8 { pt3dadd( 375.188, 665.291, 59.9855, 0.3452 ) }
    dend_8 { pt3dadd( 375.918, 666.165, 59.7349, 0.295 ) }
    dend_8 { pt3dadd( 376.789, 666.891, 59.5812, 0.278 ) }
    dend_8 { pt3dadd( 377.723, 667.552, 59.4706, 0.2758 ) }
    dend_8 { pt3dadd( 378.736, 668.067, 59.5244, 0.276 ) }
    dend_8 { pt3dadd( 379.785, 668.519, 59.6512, 0.2772 ) }
    dend_8 { pt3dadd( 380.695, 669.198, 59.9169, 0.282 ) }
    dend_8 { pt3dadd( 381.581, 669.91, 60.2048, 0.2876 ) }
    dend_8 { pt3dadd( 382.592, 670.438, 60.2644, 0.3098 ) }
    dend_8 { pt3dadd( 383.62, 670.94, 60.2952, 0.334 ) }
    dend_8 { pt3dadd( 384.464, 671.687, 59.8366, 0.2828 ) }
    dend_8 { pt3dadd( 385.299, 672.443, 59.36, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_182, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_182 = new SectionList()
    soma_0 ModelViewParmSubset_182.append()
    axon_0 ModelViewParmSubset_182.append()
    axon_1 ModelViewParmSubset_182.append()

    // Group: {name=dend, groups=[], sections=[dend_38, dend_37, dend_34, dend_33, dend_26, dend_16, dend_0, dend_42, dend_39, dend_36, dend_35, dend_32, dend_27, dend_17, dend_5, dend_4, dend_1, dend_41, dend_40, dend_31, dend_28, dend_23, dend_18, dend_11, dend_6, dend_3, dend_2, dend_30, dend_29, dend_25, dend_24, dend_22, dend_19, dend_15, dend_12, dend_10, dend_7, dend_21, dend_20, dend_14, dend_13, dend_9, dend_8]}
    dend = new SectionList()
    dend_38 dend.append()
    dend_37 dend.append()
    dend_34 dend.append()
    dend_33 dend.append()
    dend_26 dend.append()
    dend_16 dend.append()
    dend_0 dend.append()
    dend_42 dend.append()
    dend_39 dend.append()
    dend_36 dend.append()
    dend_35 dend.append()
    dend_32 dend.append()
    dend_27 dend.append()
    dend_17 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_41 dend.append()
    dend_40 dend.append()
    dend_31 dend.append()
    dend_28 dend.append()
    dend_23 dend.append()
    dend_18 dend.append()
    dend_11 dend.append()
    dend_6 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_22 dend.append()
    dend_19 dend.append()
    dend_15 dend.append()
    dend_12 dend.append()
    dend_10 dend.append()
    dend_7 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_6985, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_6985 = new SectionList()
    soma_0 OneSecGrp_SectionRef_6985.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_16, dend_16, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 1.7914958  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 41.081215  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.0035023075  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 9.184643E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.32888675  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 7.2282145E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.008139626  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 3.765603E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.043064404  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.2139903  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.3706855E-4  // units: S cm-2
        e_pas_nml2 = -92.1516  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 9.5553894E-4  // units: S cm-2
        e_pas_nml2 = -92.1516  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 3.749046E-6  // units: S cm-2
        e_pas_nml2 = -92.1516  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 4.9891544E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0050529465  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_473835796
    forsec soma {
        insert CaDynamics_473835796
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_38 nseg = 3
    dend_37 nseg = 7
    dend_33 nseg = 21
    dend_42 nseg = 3
    dend_39 nseg = 7
    dend_36 nseg = 11
    dend_35 nseg = 7
    dend_32 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_40 nseg = 9
    dend_31 nseg = 5
    dend_28 nseg = 3
    dend_18 nseg = 15
    dend_11 nseg = 3
    dend_6 nseg = 3
    dend_3 nseg = 3
    dend_30 nseg = 7
    dend_29 nseg = 7
    dend_25 nseg = 3
    dend_24 nseg = 13
    dend_15 nseg = 11
    dend_12 nseg = 3
    dend_10 nseg = 11
    dend_14 nseg = 9
    dend_13 nseg = 3
    dend_9 nseg = 5
    dend_8 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_473835796


