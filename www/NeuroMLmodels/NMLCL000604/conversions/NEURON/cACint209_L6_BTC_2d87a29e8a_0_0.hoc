// Cell: cACint209_L6_BTC_2d87a29e8a_0_0
/*
{
  "id" : "cACint209_L6_BTC_2d87a29e8a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.16881, -12.804, 0.0, 3.44428", "1.99522, -11.5105, 0.0, 5.75363", "1.82164, -10.2169, 0.0, 7.75663", "1.64805, -8.92341, 0.0, 8.89598", "1.47447, -7.62987, 0.0, 9.91596", "1.30088, -6.33633, 0.0, 10.9547", "1.1273, -5.04279, 0.0, 11.8384", "0.953711, -3.74926, 0.0, 12.6846", "0.780126, -2.45572, 0.0, 13.1367", "0.606541, -1.16218, 0.0, 13.4162", "0.432956, 0.13136, 0.0, 13.3909", "0.25937, 1.4249, 0.0, 13.2383", "0.085785, 2.71844, 0.0, 12.8868", "-0.0878002, 4.01197, 0.0, 12.8103", "-0.261385, 5.30551, 0.0, 12.9125", "-0.434971, 6.59905, 0.0, 12.4763", "-0.608556, 7.89259, 0.0, 11.6777", "-0.782141, 9.18613, 0.0, 10.5994", "-0.955726, 10.4797, 0.0, 9.19908", "-1.12931, 11.7732, 0.0, 7.03753", "-1.3029, 13.0667, 0.0, 4.1381" ]
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.21969, -12.5959, -4.59, 1.84", "3.21969, -12.5959, -4.59, 1.84", "3.52009, -13.5915, -4.64591, 1.84", "4.16086, -15.7152, -4.76517, 2.14", "4.57103, -17.0746, -4.84151, 1.92", "5.09257, -18.8031, -4.93858, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.219697, -13.0559, -1.64, 2.43", "0.219697, -13.0559, -1.64, 2.43", "-0.660271, -15.1518, -1.90411, 1.92", "-1.39252, -16.8958, -2.12389, 2.14", "-1.84585, -17.9756, -2.25995, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.5397, 12.5441, 0.0, 3.02", "1.5397, 12.5441, 0.0, 3.02", "1.766, 13.3923, -0.0513586, 2.36", "2.06806, 14.4416, -0.107674, 2.36", "2.56988, 16.1271, -0.188386, 2.29", "2.95612, 17.3766, -0.255706, 2.21", "3.3521, 18.6125, -0.325437, 2.29", "3.69969, 19.6771, -0.387671, 2.43", "4.09807, 20.8547, -0.461162, 2.36", "4.43274, 21.7754, -0.512616, 2.51", "4.79186, 22.6737, -0.563319, 3.17", "5.02508, 23.2265, -0.586348, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.3029, 13.0667, 0.0, 0.475778", "-3.29794, 27.9334, 0.0, 0.475778", "-5.29297, 42.8002, 0.0, 0.475778" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "5.09257, -18.8031, -4.93858, 0.88", "4.29767, -18.6126, -5.90625, 0.88", "3.51369, -18.5257, -6.84023, 0.81", "2.73077, -18.5292, -7.794, 0.81", "1.8262, -18.6237, -8.92724, 0.96", "0.972074, -18.7963, -10.041, 1.4", "0.162099, -19.06, -11.1827, 1.77", "-0.544663, -19.3593, -12.2373, 0.44", "-1.15447, -19.7312, -13.1875, 0.44", "-1.5031, -20.036, -13.7227, 0.44", "-1.77666, -20.4257, -14.2008, 0.66", "-2.06726, -21.215, -14.9643, 1.03", "-7.67575, -21.3784, -25.0877, 1.03", "-11.6737, -21.0735, -35.9453, 1.03", "-13.1699, -19.3579, -47.2936, 1.03" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "5.09257, -18.8031, -4.93858, 1.11", "6.18004, -20.2342, -4.77876, 1.11", "7.13361, -21.5749, -4.55943, 1.25", "7.49889, -22.121, -4.44271, 1.7", "8.13559, -23.1228, -4.21276, 1.77", "9.22095, -24.8385, -3.81992, 1.33", "10.0599, -26.1754, -3.52832, 1.03", "10.6866, -27.2243, -3.25816, 1.03", "11.3107, -28.3114, -3.00884, 1.03", "11.8439, -29.2727, -2.84378, 1.33", "12.6241, -30.7499, -2.70156, 1.33", "13.3469, -32.1924, -2.70479, 0.74", "14.0668, -33.7158, -2.85087, 0.74", "14.8203, -35.2756, -3.06807, 0.88", "15.3892, -36.4445, -3.25469, 1.33", "15.8359, -37.3329, -3.3568, 2.06", "16.7738, -39.1829, -3.48447, 0.96", "17.5695, -40.6643, -3.49625, 0.74", "18.1777, -41.7391, -3.44697, 1.18", "18.5969, -42.4566, -3.34913, 1.55", "19.6865, -44.295, -3.04315, 0.88", "20.3352, -45.3997, -2.8978, 0.81", "21.2165, -46.9327, -2.81117, 0.88", "21.6981, -47.8123, -2.8432, 1.4", "22.1022, -48.6182, -2.95707, 1.4", "22.6866, -49.8888, -3.24508, 0.81", "23.226, -51.1469, -3.63593, 0.88", "23.6565, -52.1508, -3.98951, 0.52", "23.9125, -52.7253, -4.20815, 0.96", "24.3847, -53.6745, -4.53825, 1.92", "25.0356, -54.8724, -4.88252, 0.74", "25.6889, -55.9937, -5.15149, 0.74", "26.3659, -57.0594, -5.3548, 0.96", "27.052, -58.031, -5.53184, 1.55", "28.2992, -59.6203, -5.85375, 0.81", "29.3772, -60.8663, -6.12568, 0.81", "30.4172, -61.9875, -6.38651, 1.25", "31.448, -63.0646, -6.64009, 1.4", "32.963, -64.6667, -6.95543, 0.81", "34.2487, -66.1018, -7.16572, 0.81", "34.9754, -66.9299, -7.26342, 1.18", "35.8127, -67.8337, -7.34446, 1.55", "36.7044, -68.7964, -7.38838, 1.55", "37.7765, -70.0439, -7.39837, 0.59", "38.7935, -71.3657, -7.29709, 0.81", "39.4388, -72.291, -7.15024, 1.33", "40.3952, -73.7374, -6.875, 0.37", "40.9026, -74.5751, -6.67299, 0.22", "47.3816, -83.5537, -7.09129, 0.22", "55.2818, -91.0844, -9.00028, 0.22", "63.6552, -98.3389, -8.8341, 0.22", "71.3013, -106.081, -6.74237, 0.22", "79.7418, -112.634, -3.81267, 0.22", "87.3327, -120.554, -2.25623, 0.22", "94.6202, -128.895, -2.52884, 0.22", "101.786, -137.184, -4.17827, 0.22", "109.226, -145.394, -4.08006, 0.22", "116.042, -154.121, -4.46567, 0.22", "122.237, -163.184, -5.97039, 0.22", "127.873, -172.144, -9.24309, 0.22", "134.876, -179.844, -13.0426, 0.22", "140.205, -187.922, -18.4396, 0.22", "146.185, -196.607, -21.8429, 0.22", "150.982, -206.398, -23.814, 0.22", "156.855, -215.791, -24.0063, 0.22" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.84585, -17.9756, -2.25995, 0.96", "-3.74474, -19.1458, -2.06506, 0.96", "-4.78407, -19.8207, -1.97219, 0.96", "-5.84826, -20.5505, -1.89109, 1.25", "-6.41013, -20.9627, -1.85555, 1.25", "-7.44666, -21.7559, -1.81236, 0.96", "-8.43257, -22.5229, -1.79457, 0.96", "-9.30524, -23.2217, -1.79899, 1.47", "-10.4094, -24.031, -1.81419, 1.62", "-11.7761, -24.8941, -1.81953, 0.96", "-12.8992, -25.5075, -1.8254, 0.96", "-14.4896, -26.2372, -1.82243, 1.11", "-15.6331, -26.6551, -1.80782, 1.4", "-17.6378, -27.223, -1.76929, 1.33", "-19.298, -27.5934, -1.75243, 0.96", "-21.0023, -27.9339, -1.75215, 1.18", "-21.8594, -28.1011, -1.75708, 1.18", "-24.0481, -28.5674, -1.79812, 0.88", "-25.3026, -28.9185, -1.84863, 0.88", "-26.1604, -29.2505, -1.92283, 1.03", "-27.7407, -30.0738, -2.09336, 1.25", "-28.7463, -30.7171, -2.20198, 0.88", "-29.7103, -31.4438, -2.30381, 0.88", "-30.5681, -32.1667, -2.38772, 1.11", "-31.5387, -32.9627, -2.48582, 1.25", "-32.8155, -33.947, -2.68994, 0.88", "-33.8018, -34.6954, -2.97113, 1.03", "-34.5212, -35.2636, -3.29278, 1.4", "-35.4227, -35.9909, -3.86362, 1.18", "-36.5615, -36.8636, -4.82468, 1.25", "-37.4037, -37.5742, -6.02205, 1.4", "-36.7391, -37.6888, -7.52108, 1.4", "-35.7163, -37.4698, -8.34258, 1.47", "-33.5455, -36.8532, -9.60207, 0.52", "-32.3261, -36.4866, -10.073, 0.52", "-31.0094, -36.0859, -10.4088, 0.59", "-28.7346, -35.4448, -10.7184, 0.59", "-27.3221, -35.0893, -10.7762, 0.66", "-25.785, -34.7951, -10.7085, 0.74", "-23.7093, -34.4881, -10.5193, 0.59", "-22.1397, -34.3417, -10.3267, 0.88", "-20.0137, -34.2447, -9.99126, 0.37", "-18.8833, -34.2763, -9.78565, 0.37", "-17.7689, -34.4034, -9.52513, 0.37", "-27.8927, -42.7281, -12.0998, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.84585, -17.9756, -2.25995, 1.4", "-1.65712, -19.8046, -2.00675, 1.4", "-1.44797, -21.6858, -1.77713, 1.03", "-1.23612, -23.5147, -1.55544, 1.33", "-0.994736, -25.6274, -1.28782, 1.25", "-0.76484, -27.5471, -1.01933, 1.25", "-0.545528, -29.3771, -0.733633, 1.11", "-0.360239, -31.1372, -0.473703, 1.84", "-0.234432, -32.2745, -0.32338, 1.62", "0.0251251, -34.4455, -0.00912154, 1.18", "0.287621, -36.7478, 0.354493, 1.11", "0.539646, -39.0639, 0.735698, 1.25", "0.691995, -40.5952, 0.977094, 1.55", "0.845379, -42.2613, 1.25256, 2.06" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "5.02508, 23.2265, -0.586348, 2.88", "5.18197, 24.3076, -0.457955, 2.88", "5.37999, 25.6723, -0.295889, 2.58", "5.60379, 27.2146, -0.11273, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.02508, 23.2265, -0.586348, 1.62", "6.52782, 22.6802, -0.614376, 1.62", "8.26441, 21.8631, -0.566279, 0.96", "9.40266, 21.2379, -0.495839, 0.96", "10.6464, 20.4564, -0.390417, 1.11", "11.3086, 20.0014, -0.320751, 1.25", "12.5621, 19.0515, -0.180804, 0.96", "14.036, 17.6976, 0.0350313, 0.81", "14.8497, 16.9016, 0.167904, 0.81", "15.562, 16.2291, 0.275988, 0.81", "16.2471, 15.6302, 0.334294, 0.88", "17.4126, 14.7231, 0.374632, 0.74", "18.679, 13.8773, 0.369898, 0.59", "19.8027, 13.222, 0.355396, 0.74", "20.5923, 12.7919, 0.355309, 0.66", "21.4122, 12.3441, 0.398215, 0.66", "22.5711, 11.6921, 0.51969, 0.96", "23.749, 11.028, 0.71129, 1.11", "25.1847, 10.1425, 1.01055, 0.81", "26.3245, 9.35322, 1.28226, 0.81", "27.4231, 8.534, 1.54476, 0.52", "28.1443, 7.95383, 1.68323, 0.52", "28.7035, 7.46786, 1.71167, 0.52", "29.4558, 6.76997, 1.58205, 0.74", "30.3743, 5.88987, 1.22048, 0.96", "30.9784, 5.28418, 0.894729, 1.03", "31.7558, 4.49138, 0.407112, 0.81", "32.7275, 3.53339, -0.166405, 0.52", "33.5523, 2.68474, -0.681606, 0.88", "33.9695, 2.26098, -0.945606, 1.11", "34.84, 1.41658, -1.46213, 0.81", "35.7164, 0.649044, -1.85991, 0.22", "36.8549, -0.194496, -2.13058, 0.15", "45.3488, -6.92215, -2.17101, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-5.29297, 42.8002, 0.0, 0.176958", "-7.28801, 57.6669, 0.0, 0.176958", "-9.28305, 72.5336, 0.0, 0.176958" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-13.1699, -19.3579, -47.2936, 0.15", "-18.51, -20.0353, -54.5413, 0.15", "-24.4476, -20.3141, -61.3363, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-13.1699, -19.3579, -47.2936, 0.59", "-15.6353, -19.1831, -57.2876, 0.15", "-18.2767, -18.0206, -67.1699, 0.15", "-23.3512, -15.9503, -75.885, 0.15", "-29.6325, -15.2538, -84.012, 0.15", "-34.5154, -15.0867, -93.074, 0.15", "-39.1022, -16.8882, -102.113, 0.15", "-44.2615, -17.9259, -110.961, 0.15", "-48.9716, -19.7007, -119.942, 0.15", "-53.9987, -21.6248, -128.718, 0.15", "-60.5481, -22.1335, -136.645, 0.15", "-66.3367, -22.3267, -145.156, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "156.855, -215.791, -24.0063, 0.15", "163.754, -223.153, -25.0412, 0.15", "169.393, -231.546, -25.813, 0.15", "173.973, -240.592, -25.5778, 0.15", "178.198, -249.783, -24.8587, 0.15", "183.407, -258.485, -24.8359, 0.15", "189.126, -266.796, -23.8077, 0.15", "195.708, -273.847, -20.6721, 0.15", "202.408, -281.44, -20.1214, 0.15", "208.325, -289.623, -19.1837, 0.15", "214.96, -297.275, -19.7055, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "156.855, -215.791, -24.0063, 0.59", "162.098, -224.065, -23.7746, 0.15", "166.661, -232.593, -25.3486, 0.15", "169.804, -241.369, -28.3644, 0.15", "171.473, -250.781, -30.5179, 0.15", "174.652, -259.622, -33.3004, 0.15", "177.727, -268.668, -35.4738, 0.15", "182.589, -276.912, -37.575, 0.15", "187.589, -284.903, -40.2489, 0.15", "191.906, -293.672, -40.9423, 0.15", "195.287, -302.785, -42.1708, 0.15", "199.5, -311.524, -43.5474, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-27.8927, -42.7281, -12.0998, 0.15", "-35.4326, -49.2485, -10.735, 0.15", "-42.1033, -56.7336, -9.89552, 0.15", "-46.9245, -65.335, -7.89561, 0.15", "-52.4124, -73.7576, -7.48246, 0.15", "-58.4331, -81.7942, -8.10938, 0.15", "-62.3704, -91.0357, -8.67548, 0.15", "-66.7588, -100.045, -9.57203, 0.15", "-70.1955, -109.494, -9.2073, 0.15", "-73.9392, -118.69, -7.57807, 0.15", "-76.8807, -127.893, -4.76992, 0.15", "-79.0639, -137.563, -3.05598, 0.15", "-82.5508, -146.998, -2.82281, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-27.8927, -42.7281, -12.0998, 0.59", "-32.5302, -49.1616, -17.4327, 0.15", "-36.27, -55.9279, -23.0511, 0.15", "-40.8108, -62.0971, -28.7656, 0.15", "-43.9114, -68.4489, -35.1981, 0.15", "-46.1445, -74.9055, -41.8809, 0.15", "-49.0834, -81.8528, -47.749, 0.15", "-50.6394, -89.2447, -53.6033, 0.15", "-52.1071, -97.1206, -58.8141, 0.15", "-52.227, -104.418, -64.985, 0.15", "-53.1864, -111.733, -71.0594, 0.15", "-53.8807, -118.331, -77.9388, 0.15", "-53.755, -125.535, -84.2173, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "0.845379, -42.2613, 1.25256, 0.44", "-0.113956, -44.2412, 2.55262, 0.44", "-0.553704, -45.0687, 3.18099, 0.44", "-1.11528, -46.1797, 4.22519, 0.44", "-1.52297, -47.1425, 5.23926, 0.66", "-1.80134, -48.0335, 6.11298, 0.66", "-1.93161, -48.6696, 6.65585, 0.44", "-2.01113, -49.524, 7.37918, 0.52", "-1.95163, -50.7685, 8.22577, 0.66", "-1.72374, -52.1339, 8.86299, 0.66", "-1.36872, -53.7194, 9.43125, 0.88", "-0.992496, -55.3484, 9.90386, 1.11", "-0.673348, -56.8881, 10.2643, 0.74", "-0.495785, -58.034, 10.4166, 0.29", "-0.40201, -59.2088, 10.4503, 0.22", "-0.392395, -59.907, 10.4253, 0.22", "-0.45611, -60.8253, 10.3764, 0.22", "-0.559077, -61.6909, 10.3111, 0.22", "-0.78709, -63.5504, 10.1566, 0.29", "-0.910814, -64.9906, 10.0407, 0.52", "-0.940293, -66.0085, 9.96086, 0.52", "-0.866915, -67.4056, 9.85746, 0.44", "-0.600151, -69.475, 9.73629, 0.29", "-0.415832, -70.4851, 9.7026, 0.66", "-0.252999, -71.1933, 9.73487, 1.77", "0.0698003, -72.4758, 9.87576, 1.18", "0.434119, -74.1121, 10.1646, 0.52", "0.72767, -75.6361, 10.5161, 0.52", "0.90044, -76.6223, 10.7871, 0.81", "1.1945, -78.0965, 11.2043, 0.96", "1.49619, -79.3822, 11.5959, 0.52", "1.95117, -81.1215, 12.2048, 0.22", "2.19131, -81.9367, 12.5305, 0.29", "2.54614, -83.0047, 13.0134, 0.29", "3.04917, -84.5255, 13.7241, 0.22", "3.38552, -85.5211, 14.2099, 0.37", "3.72048, -86.5488, 14.7249, 0.74", "3.99148, -87.536, 15.2224, 1.03", "4.17564, -88.6538, 15.7577, 1.25", "4.30651, -90.8437, 16.7527, 0.37", "4.3062, -92.1186, 17.3247, 1.18", "4.29769, -93.2961, 17.816, 2.65", "4.32743, -95.2173, 18.542, 2.21", "4.42603, -97.0774, 19.1962, 0.96", "4.58027, -98.6128, 19.6965, 0.29", "4.73542, -99.7006, 20.0482, 0.29", "4.87593, -100.716, 20.3736, 0.66", "5.03056, -101.93, 20.8187, 0.44", "5.16329, -103.009, 21.2504, 0.22", "5.23522, -103.55, 21.4835, 0.22", "5.30256, -104.209, 21.7503, 0.22", "5.35659, -105.554, 22.2438, 0.29", "5.37682, -106.569, 22.5877, 0.29", "5.4079, -107.266, 22.7947, 0.22", "5.45795, -108.07, 22.9893, 0.22", "5.55008, -108.775, 23.1392, 0.81", "5.69535, -109.44, 23.2568, 1.55", "6.12626, -110.876, 23.501, 1.84", "6.86544, -113.026, 23.8481, 0.15", "7.08981, -113.702, 23.9743, 0.15", "7.27592, -114.267, 24.0856, 0.15", "7.4816, -114.95, 24.2255, 0.15", "7.76073, -115.963, 24.4315, 0.88", "7.98173, -116.805, 24.5938, 1.92", "8.44239, -118.476, 24.8577, 1.99", "8.56924, -118.903, 24.915, 1.99", "9.11248, -120.878, 25.1277, 0.15", "9.24572, -121.425, 25.1687, 0.15", "9.36244, -121.988, 25.1866, 0.37", "9.45239, -122.561, 25.1891, 0.37", "9.63294, -123.921, 25.1911, 0.15", "9.71717, -124.765, 25.2131, 0.15", "9.81556, -125.76, 25.2601, 0.22", "9.86097, -126.34, 25.3114, 0.22", "9.89177, -127.389, 25.4396, 0.15", "9.88192, -128.191, 25.5579, 0.15", "9.86199, -128.826, 25.6645, 0.59", "9.87533, -129.5, 25.7862, 1.03", "9.95931, -130.542, 25.9513, 0.22", "10.1048, -131.637, 26.1221, 0.07", "10.2301, -132.339, 26.2412, 0.07", "10.3291, -132.78, 26.3272, 0.66", "10.6477, -133.932, 26.6117, 0.96", "11.3426, -136.007, 27.1886, 0.22", "11.8043, -137.13, 27.5429, 0.22", "12.1583, -137.855, 27.8213, 0.44", "12.5901, -138.673, 28.1694, 1.25", "13.0003, -139.385, 28.4828, 1.92", "13.6052, -140.279, 28.8979, 1.11", "14.2662, -141.128, 29.3301, 0.22", "14.7872, -141.795, 29.6466, 0.22", "15.3547, -142.582, 29.9835, 0.52", "16.0183, -143.679, 30.4139, 0.22", "16.6109, -144.871, 30.8932, 0.22", "17.0139, -145.834, 31.3045, 0.22", "17.1854, -146.326, 31.5178, 0.81", "17.5464, -147.494, 32.0495, 1.77", "18.1643, -149.715, 33.1348, 0.37", "18.4777, -150.879, 33.7216, 0.15", "18.617, -151.415, 33.9808, 0.15", "18.7983, -152.08, 34.2866, 0.37", "19.0339, -152.892, 34.6571, 1.18", "19.3347, -153.85, 35.0834, 1.55", "19.8097, -155.321, 35.6673, 0.81", "20.1056, -156.356, 36.0173, 0.15", "20.2652, -157.022, 36.2328, 0.22", "20.489, -158.028, 36.5406, 0.15", "20.6714, -158.953, 36.8098, 0.96", "20.8749, -159.978, 37.1041, 1.18", "21.2028, -161.556, 37.5389, 0.22", "21.3874, -162.297, 37.7352, 0.22", "21.6613, -163.228, 37.9792, 0.37", "21.7488, -163.486, 38.0417, 0.37", "22.1002, -164.424, 38.2649, 0.22", "22.2865, -164.856, 38.3779, 0.22", "22.677, -165.596, 38.5452, 0.81" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.845379, -42.2613, 1.25256, 1.84", "0.690701, -43.3409, 0.806945, 1.84", "0.563807, -44.6355, 0.318463, 1.55", "0.480734, -46.0326, -0.158173, 1.55", "0.405484, -47.4931, -0.603472, 1.55", "0.32488, -48.9434, -0.988788, 1.47", "0.245095, -50.214, -1.29526, 0.96", "0.175671, -51.2275, -1.49311, 1.55", "0.019806, -53.0464, -1.74701, 1.25", "-0.165128, -54.9261, -1.95182, 1.47", "-0.384551, -56.8641, -2.11568, 1.03", "-0.56859, -58.1739, -2.20818, 1.18", "-0.879209, -60.0225, -2.30648, 1.99", "-1.20482, -61.5921, -2.36841, 1.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.60379, 27.2146, -0.11273, 2.14", "6.92136, 28.8027, -0.0100416, 2.14" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.60379, 27.2146, -0.11273, 1.47", "5.2386, 28.5864, 1.10049, 1.47", "4.93014, 29.4098, 1.84709, 1.18", "4.52183, 30.1656, 2.58059, 1.18", "3.94145, 30.9432, 3.41858, 1.47", "3.3432, 31.5098, 4.11712, 1.47", "2.98421, 31.7223, 4.45021, 1.47", "2.05384, 31.8568, 5.01074, 1.47", "0.795985, 31.6716, 5.48984, 1.03", "0.0381546, 31.4132, 5.67222, 1.62", "-0.656461, 31.0794, 5.78365, 1.77", "-1.54204, 30.5355, 5.89466, 1.77" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "45.3488, -6.92215, -2.17101, 0.15", "51.864, -11.6257, -1.40152, 0.15", "58.7426, -15.7916, -0.699254, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "45.3488, -6.92215, -2.17101, 0.59", "55.7883, -14.7334, -3.71238, 0.15", "64.7959, -24.0493, -5.82246, 0.15", "71.8204, -34.6366, -9.13028, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-24.4476, -20.3141, -61.3363, 0.15", "-34.7857, -18.0096, -66.5669, 0.15", "-43.3785, -13.4885, -73.2952, 0.15", "-50.7486, -6.78976, -79.6475, 0.15", "-59.4348, -1.43679, -85.6008, 0.15", "-68.4969, 2.71046, -91.943, 0.15", "-77.0215, 6.74363, -99.0572, 0.15", "-84.5646, 12.2081, -106.323, 0.15", "-92.4342, 18.3986, -112.591, 0.15", "-98.8682, 23.9575, -120.791, 0.15", "-106.681, 28.0032, -128.674, 0.15", "-116.29, 32.241, -134.083, 0.15", "-125.784, 36.0038, -140.02, 0.15", "-135.057, 41.4185, -144.944, 0.15", "-145.288, 45.6212, -149.091, 0.15", "-156.425, 48.8528, -151.342, 0.15", "-167.399, 53.2246, -151.378, 0.15", "-178.282, 57.6052, -152.765, 0.15", "-189.674, 60.696, -152.301, 0.15", "-200.991, 64.0451, -151.792, 0.15", "-211.836, 68.4209, -153.462, 0.15", "-222.286, 73.739, -154.898, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-24.4476, -20.3141, -61.3363, 0.59", "-26.282, -22.8379, -68.5664, 0.15", "-28.9133, -24.606, -75.7748, 0.15", "-30.9006, -27.0864, -82.9794, 0.15", "-32.5846, -29.5383, -90.2706, 0.15", "-33.7783, -31.3608, -97.8379, 0.15", "-35.4032, -33.8745, -105.121, 0.15", "-36.1596, -36.282, -112.581, 0.15", "-37.564, -38.4252, -120.027, 0.15", "-37.7436, -42.2641, -126.9, 0.15", "-36.9967, -46.4283, -133.541, 0.15", "-36.1708, -50.741, -140.078, 0.15", "-36.3712, -55.2027, -146.564, 0.15", "-35.4522, -60.4187, -152.391, 0.15", "-35.6834, -66.4725, -157.422, 0.15", "-37.1072, -72.2209, -162.612, 0.15", "-38.3646, -77.5956, -168.228, 0.15", "-38.4697, -82.2067, -174.61, 0.15", "-38.5846, -86.8189, -180.992, 0.15", "-37.6275, -92.8691, -185.94, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-66.3367, -22.3267, -145.156, 0.15", "-72.4603, -22.9073, -155.137, 0.15", "-79.5961, -23.3671, -164.428, 0.15", "-87.8152, -23.1716, -172.786, 0.15", "-94.2484, -21.5356, -182.45, 0.15", "-101.007, -18.4958, -191.535, 0.15", "-109.336, -17.7641, -199.753, 0.15", "-118.063, -17.8725, -207.581, 0.15", "-125.783, -19.5794, -216.237, 0.15", "-133.483, -23.4456, -224.188, 0.15", "-140.981, -27.6381, -232.167, 0.15", "-148.247, -34.2029, -238.614, 0.15", "-154.671, -40.6894, -245.969, 0.15", "-160.717, -47.3182, -253.516, 0.15", "-166.983, -55.265, -259.435, 0.15", "-173.03, -64.4478, -263.504, 0.15", "-179.278, -73.0008, -268.53, 0.15", "-183.981, -83.0419, -272.34, 0.15", "-187.071, -92.9519, -277.789, 0.15", "-188.731, -104.029, -281.254, 0.15", "-192.618, -114.424, -285.033, 0.15", "-197.607, -124.779, -287.343, 0.15", "-201.43, -135.243, -290.994, 0.15", "-206.759, -144.701, -295.423, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-66.3367, -22.3267, -145.156, 0.59", "-69.2661, -21.8176, -154.723, 0.15", "-71.7426, -21.6414, -164.429, 0.15", "-75.2031, -22.2783, -173.81, 0.15", "-77.9167, -24.2932, -183.241, 0.15", "-79.895, -25.3186, -193.008, 0.15", "-80.0974, -27.4312, -202.799, 0.15", "-81.3789, -27.7194, -212.731, 0.15", "-83.2684, -27.6851, -222.57, 0.15", "-85.353, -28.1651, -232.357, 0.15", "-85.8564, -29.9237, -242.208, 0.15", "-86.9023, -33.6406, -251.452, 0.15", "-87.2654, -36.1963, -261.132, 0.15", "-86.8016, -38.2326, -270.931, 0.15", "-86.3796, -40.1447, -280.756, 0.15", "-85.0115, -41.341, -290.608, 0.15", "-85.058, -41.6419, -300.622, 0.15", "-86.2323, -41.314, -310.566, 0.15", "-85.7515, -42.4382, -320.51, 0.15", "-86.4904, -44.6028, -330.264, 0.15", "-88.6101, -47.0843, -339.736, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-82.5508, -146.998, -2.82281, 0.15", "-88.3663, -157.696, -1.88104, 0.15", "-92.7636, -168.95, -0.106194, 0.15", "-96.2565, -180.606, 0.935699, 0.15", "-100.038, -191.775, 4.11421, 0.15", "-103.389, -202.973, 7.6531, 0.15", "-104.614, -214.77, 10.5658, 0.15", "-106.045, -226.891, 11.0025, 0.15", "-108.437, -238.755, 9.36755, 0.15", "-111.832, -249.966, 5.91255, 0.15", "-114.697, -260.22, -0.0695503, 0.15", "-118.404, -269.457, -7.14737, 0.15", "-122.464, -278.525, -14.2486, 0.15", "-127.929, -286.667, -21.5277, 0.15", "-133.085, -292.721, -30.7971, 0.15", "-138.156, -298.657, -40.188, 0.15", "-140.907, -305.454, -49.9547, 0.15", "-142.162, -313.158, -59.3475, 0.15", "-143.388, -320.686, -68.8852, 0.15", "-146.507, -328.06, -78.1068, 0.15", "-150.391, -334.535, -87.7059, 0.15", "-156.17, -340.619, -96.5795, 0.15", "-162.314, -346.515, -105.334, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-82.5508, -146.998, -2.82281, 0.59", "-88.2319, -157.703, -1.79215, 0.15", "-93.8537, -168.486, -1.64614, 0.15", "-100.679, -178.213, 0.946791, 0.15", "-107.107, -188.176, 3.65613, 0.15", "-114.286, -197.432, 6.92906, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-53.755, -125.535, -84.2173, 0.15", "-55.3651, -134.043, -91.101, 0.15", "-58.2123, -143.184, -96.6413, 0.15", "-60.5084, -151.592, -103.452, 0.15", "-63.4719, -161.18, -108.105, 0.15", "-66.703, -171.382, -110.907, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-53.755, -125.535, -84.2173, 0.59", "-57.2496, -132.232, -91.2853, 0.15", "-60.6168, -139.075, -98.2752, 0.15", "-63.5846, -147.64, -103.261, 0.15", "-65.9726, -157.166, -106.514, 0.15", "-66.5382, -167.247, -108.766, 0.15", "-66.2809, -177.457, -110.416, 0.15", "-64.7439, -187.559, -112.029, 0.15", "-64.6884, -197.903, -112.16, 0.15", "-62.9573, -208.039, -113.297, 0.15", "-62.7469, -218.121, -115.608, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "22.677, -165.596, 38.5452, 0.22", "22.4157, -166.112, 38.5596, 0.22", "22.0662, -166.803, 38.579, 0.22", "21.7627, -167.404, 38.5957, 0.22", "21.2213, -168.474, 38.6256, 0.22", "20.977, -168.957, 38.6391, 0.15", "20.7334, -169.439, 38.6526, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "22.677, -165.596, 38.5452, 1.18", "23.0108, -166.74, 39.0866, 1.18", "23.3774, -168.064, 39.659, 0.29", "23.6885, -169.282, 40.1731, 0.15", "23.8507, -169.977, 40.457, 0.15", "23.9965, -170.661, 40.7258, 0.29", "24.1653, -171.637, 41.104, 0.66", "24.2844, -172.652, 41.4862, 1.4", "24.3259, -174.162, 42.0102, 0.22", "24.2922, -175.214, 42.3515, 0.22", "24.2619, -175.674, 42.4921, 0.22", "24.1854, -176.656, 42.7577, 0.22", "24.1076, -177.503, 42.9627, 0.66", "23.9839, -178.562, 43.1885, 0.15", "23.8354, -179.46, 43.3607, 0.15", "23.6192, -180.556, 43.5641, 0.52", "23.3416, -181.914, 43.8265, 0.29", "23.2324, -182.454, 43.9341, 0.15", "23.1198, -183.002, 44.0546, 0.15", "22.9005, -184.004, 44.2641, 0.15", "22.7378, -184.682, 44.3957, 0.29", "22.5196, -185.609, 44.5887, 1.11", "22.3225, -186.551, 44.8009, 1.77", "22.1162, -187.859, 45.1091, 1.77", "21.9606, -189.224, 45.4491, 1.33", "21.7972, -191.119, 45.9257, 0.15", "21.7077, -192.382, 46.2612, 0.22", "21.6491, -193.289, 46.5134, 0.66", "21.5971, -194.163, 46.7665, 0.81", "21.5326, -195.787, 47.2584, 0.15", "21.5542, -196.74, 47.5673, 0.22", "21.6423, -197.54, 47.8454, 0.22", "21.7989, -198.564, 48.1956, 0.22", "21.9063, -199.162, 48.3943, 0.66", "22.1828, -200.332, 48.7828, 1.4", "22.6994, -201.971, 49.3756, 0.88", "23.0501, -202.993, 49.7603, 0.15", "23.3986, -203.972, 50.125, 0.15", "23.6621, -204.682, 50.3867, 0.22", "24.0658, -205.795, 50.8046, 0.29", "24.3461, -206.668, 51.1197, 0.15", "24.6152, -207.875, 51.5045, 0.15", "24.6669, -208.297, 51.6276, 0.15", "24.7154, -209.186, 51.8953, 0.22", "24.7023, -210.483, 52.286, 0.22", "24.6716, -211.045, 52.4533, 0.22", "24.6064, -212.228, 52.7966, 0.37", "24.5711, -213.434, 53.1652, 0.22", "24.5679, -214.245, 53.4071, 0.88", "24.632, -216.048, 53.9288, 2.06", "24.8096, -218.148, 54.4435, 0.59", "25.0105, -219.565, 54.7156, 0.22", "25.2005, -220.497, 54.8338, 0.22", "25.3892, -221.319, 54.907, 0.22", "25.6658, -222.449, 54.958, 0.59", "26.1145, -224.043, 54.9262, 0.07", "26.4364, -225.004, 54.7964, 0.15", "26.8483, -226.138, 54.5375, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.20482, -61.5921, -2.36841, 0.74", "-1.20743, -63.6197, -2.76079, 0.74", "-1.20336, -65.4254, -3.1399, 0.74", "-1.22609, -66.4465, -3.36826, 0.81", "-1.31861, -68.1299, -3.78553, 0.88", "-1.39922, -69.2115, -4.06607, 0.81", "-1.53445, -70.6077, -4.45061, 1.18", "-1.65863, -71.6454, -4.77354, 1.18", "-1.88498, -72.9158, -5.20675, 1.03", "-2.17355, -74.2633, -5.70737, 1.11", "-2.44828, -75.3163, -6.12486, 0.74", "-2.82612, -76.5, -6.60891, 1.11", "-3.18259, -77.5067, -7.01604, 0.81", "-3.61545, -78.6937, -7.47408, 0.81", "-3.75041, -79.1271, -7.61778, 0.81", "-3.96858, -80.0423, -7.86001, 0.88", "-4.1481, -81.0565, -8.04715, 0.88", "-4.3645, -82.7323, -8.23393, 1.11", "-4.45645, -83.5318, -8.26788, 1.33", "-4.716, -85.4646, -8.20451, 0.74", "-4.85432, -86.6114, -8.13489, 0.74", "-5.00514, -88.2982, -7.97478, 0.88", "-5.0765, -89.2908, -7.83742, 1.25", "-5.17051, -90.3144, -7.65615, 1.03", "-5.40793, -91.6806, -7.36071, 0.74", "-5.60942, -102.559, -7.6501, 0.74", "-7.17137, -113.306, -6.94692, 0.74", "-8.5664, -124.024, -5.66665, 0.74", "-10.3867, -134.255, -2.43286, 0.74", "-11.2258, -144.559, 0.968006, 0.74", "-13.0407, -154.53, 4.93544, 0.74", "-16.041, -164.793, 6.96295, 0.74", "-16.8379, -175.416, 9.19121, 0.74", "-17.2088, -185.955, 11.8801, 0.74", "-17.575, -196.553, 14.328, 0.74", "-17.7956, -207.178, 16.6768, 0.74", "-19.0383, -217.474, 19.9783, 0.74", "-22.645, -227.081, 23.6041, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.20482, -61.5921, -2.36841, 1.03", "-1.00491, -62.639, -1.866, 1.03", "-0.746058, -64.1881, -1.19639, 1.03", "-0.590506, -65.3836, -0.782901, 1.03", "-0.367927, -67.15, -0.289493, 1.03", "-0.160199, -68.6395, 0.0341203, 0.96", "0.0189444, -69.6935, 0.225552, 0.96", "0.197396, -70.5776, 0.330247, 0.96", "0.807959, -72.978, 0.46355, 0.88", "1.28357, -74.3949, 0.467448, 0.88", "2.11356, -76.2285, 0.411566, 0.88", "3.17269, -78.0339, 0.321472, 0.81", "4.05926, -79.2495, 0.257169, 0.81", "4.78574, -80.0707, 0.228559, 0.81", "5.90168, -81.122, 0.209711, 0.88", "7.07332, -82.2055, 0.237641, 1.03", "7.85613, -83.0106, 0.302443, 1.03", "8.82399, -84.2498, 0.441953, 0.81", "9.50221, -85.4126, 0.594137, 1.4", "9.82488, -86.1414, 0.693693, 1.92", "10.4569, -88.0889, 0.903325, 1.4", "11.0432, -90.3849, 1.02655, 0.88", "11.3944, -91.9976, 1.03666, 0.88", "11.725, -93.6784, 0.97057, 1.03", "11.9139, -94.6139, 0.894271, 1.03", "12.244, -96.136, 0.709862, 0.81", "12.5711, -97.5371, 0.455955, 1.18", "12.6586, -97.9604, 0.366475, 1.18", "12.7647, -98.7904, 0.213362, 0.74", "12.7493, -99.8744, 0.11376, 0.44", "12.6555, -100.522, 0.116638, 0.44", "12.4207, -101.476, 0.198964, 0.66", "12.0454, -102.744, 0.347647, 0.81", "11.6983, -103.891, 0.483947, 0.96", "11.1649, -105.686, 0.689107, 1.33", "10.8276, -106.872, 0.815163, 0.88", "10.5313, -108.037, 0.939939, 1.11", "10.2344, -109.401, 1.10802, 1.18", "9.98364, -110.696, 1.29076, 1.18", "9.65178, -112.505, 1.57784, 0.52", "9.34935, -114.382, 1.92196, 0.52", "9.13732, -115.783, 2.19731, 0.74", "8.95427, -117.086, 2.46462, 0.96", "8.79426, -118.306, 2.69862, 1.62", "8.64424, -119.523, 2.90178, 1.62", "8.47333, -121.043, 3.10018, 1.33", "8.35332, -122.29, 3.20113, 0.44", "8.25707, -123.03, 3.22935, 0.59", "7.99668, -124.416, 3.27917, 0.59", "7.62626, -125.905, 3.36789, 0.88", "7.26282, -127.053, 3.47034, 1.25", "6.99932, -127.752, 3.56184, 2.21", "6.33857, -129.384, 3.85255, 1.84", "5.56946, -131.227, 4.25332, 1.33", "4.87919, -132.915, 4.69927, 0.66", "4.54965, -133.802, 4.94196, 0.44", "4.2312, -134.756, 5.19881, 0.44", "3.93539, -135.775, 5.45871, 0.81", "3.65514, -137.072, 5.73504, 1.11", "3.43522, -138.517, 5.96393, 0.74", "3.24838, -140.08, 6.16177, 0.37", "3.10645, -141.284, 6.28212, 0.37", "3.0047, -142.044, 6.35449, 0.74", "2.8226, -143.196, 6.47657, 0.88", "2.52099, -144.882, 6.69965, 0.44", "2.35136, -145.664, 6.85145, 0.44", "2.15607, -146.414, 7.08697, 0.59", "1.88648, -147.243, 7.45149, 0.96", "1.63219, -147.917, 7.82709, 1.25", "1.35446, -148.62, 8.29736, 1.25", "1.05197, -149.461, 8.90821, 0.81", "0.893093, -150.13, 9.3529, 1.11", "0.790162, -151.287, 9.91268, 0.22", "0.792038, -151.818, 10.0607, 0.22", "0.826946, -152.659, 10.2138, 0.22", "0.847255, -153.419, 10.3095, 0.74", "0.848246, -154.182, 10.3906, 1.18", "0.795963, -155.924, 10.5925, 0.66", "0.693164, -157.43, 10.8208, 0.37", "0.470473, -158.753, 11.114, 0.66", "0.217352, -159.859, 11.4456, 0.66", "0.0104741, -160.702, 11.759, 1.25", "-0.173715, -161.5, 12.1168, 2.06", "-0.39449, -162.672, 12.7252, 2.21", "-0.695269, -164.866, 13.9128, 1.03", "-0.815317, -166.121, 14.5687, 0.59", "-0.895262, -167.428, 15.1656, 0.37", "-0.920557, -168.398, 15.5604, 0.66", "-0.904657, -169.573, 15.9865, 0.37", "-0.815412, -170.845, 16.4098, 0.29", "-0.71425, -171.672, 16.6498, 0.52", "-0.559109, -173.111, 17.0584, 0.22", "-0.445529, -173.844, 17.3316, 0.22", "-0.247571, -174.642, 17.7335, 0.29", "0.0273043, -175.371, 18.2377, 0.96", "0.342912, -176.075, 18.819, 1.77", "0.654349, -176.769, 19.3918, 1.77", "1.31767, -178.385, 20.5683, 0.29", "1.56001, -179.094, 20.9506, 0.29", "1.71811, -179.721, 21.1796, 0.29", "1.88613, -180.681, 21.3812, 0.29", "1.99994, -181.948, 21.5076, 0.29", "1.99026, -183.435, 21.5383, 0.29", "1.91636, -184.169, 21.5274, 0.29", "1.71732, -185.258, 21.5331, 0.29", "1.39556, -186.533, 21.6089, 0.29", "1.00587, -187.862, 21.7867, 0.29", "0.742685, -188.694, 21.9428, 1.03", "0.417338, -189.663, 22.167, 1.92", "-0.128429, -191.295, 22.5784, 3.02", "-0.718268, -193.125, 23.076, 2.36", "-1.36602, -195.23, 23.6853, 0.22", "-1.57991, -196.01, 23.9221, 0.22", "-1.82036, -197.066, 24.2504, 0.22", "-1.90586, -197.536, 24.3953, 0.52", "-2.00227, -198.305, 24.6402, 0.96", "-2.11523, -199.439, 24.9955, 0.44", "-2.24992, -200.855, 25.4195, 0.22", "-2.33469, -201.764, 25.6762, 0.37", "-2.43144, -202.833, 25.9567, 0.81", "-2.53458, -203.767, 26.1955, 0.96", "-2.72275, -205.037, 26.4951, 1.25", "-2.9312, -206.25, 26.7404, 0.66", "-3.02682, -206.82, 26.8288, 0.22", "-3.20604, -208.066, 26.978, 0.22", "-3.26256, -208.656, 27.039, 0.44", "-3.34931, -210.168, 27.1945, 0.22", "-3.34919, -211.218, 27.3232, 0.22", "-3.29978, -212.481, 27.5172, 0.29", "-3.25843, -213.522, 27.6978, 0.52", "-3.2162, -214.601, 27.8887, 0.52", "-3.19857, -215.744, 28.1012, 0.52", "-3.22316, -216.825, 28.3141, 1.18", "-3.2982, -217.824, 28.5174, 2.43", "-3.50029, -219.537, 28.88, 1.33", "-3.70316, -220.923, 29.1609, 0.59", "-3.88433, -222.055, 29.3746, 0.81", "-4.04286, -223.033, 29.5502, 0.15", "-4.15239, -223.683, 29.6621, 0.15", "-4.19547, -224.011, 29.7177, 0.15", "-4.24161, -224.421, 29.8007, 0.22", "-4.3577, -225.208, 29.987, 0.37", "-4.55951, -226.124, 30.1909, 0.37", "-4.87551, -227.103, 30.3727, 0.22", "-5.33422, -228.153, 30.5363, 0.22", "-5.66927, -228.757, 30.6091, 0.22", "-6.04702, -229.317, 30.6702, 0.74", "-6.66349, -230.125, 30.7457, 1.77", "-7.40528, -231.039, 30.8168, 2.21", "-7.95073, -231.696, 30.896, 2.21", "-9.13227, -233.11, 31.13, 0.37", "-9.85726, -234.051, 31.3235, 0.37", "-10.3962, -234.86, 31.5225, 0.22", "-10.8207, -235.621, 31.7592, 0.22", "-11.2847, -236.561, 32.1092, 0.22", "-11.5321, -237.11, 32.3524, 0.81", "-11.8717, -237.944, 32.8295, 1.25", "-12.2529, -238.89, 33.4932, 0.88", "-12.7008, -239.893, 34.2967, 0.22", "-12.9337, -240.403, 34.712, 0.22", "-13.1887, -241.022, 35.1513, 0.22", "-13.4228, -241.783, 35.6219, 0.22", "-13.5795, -242.786, 36.0726, 0.44", "-13.6413, -243.74, 36.3666, 1.47", "-13.6963, -244.782, 36.5853, 1.47", "-13.7973, -246.094, 36.7891, 0.44", "-13.9123, -247.317, 36.9286, 0.96", "-14.1466, -249.099, 37.0808, 0.22", "-14.2955, -250.043, 37.1587, 0.22", "-14.5812, -251.478, 37.3017, 0.22", "-14.86, -252.546, 37.4121, 0.22", "-15.1103, -253.328, 37.4931, 0.22", "-15.4623, -254.26, 37.5888, 0.22", "-15.9685, -255.501, 37.7423, 0.22", "-16.2641, -256.28, 37.8434, 0.81", "-16.6781, -257.484, 38.0067, 1.77", "-17.0469, -258.656, 38.1922, 1.18", "-17.6889, -260.913, 38.5887, 0.22", "-17.867, -261.666, 38.743, 0.22", "-18.1187, -262.962, 39.0622, 0.88", "-18.3487, -264.573, 39.5414, 0.15", "-18.4179, -265.516, 39.897, 0.15", "-18.3941, -266.44, 40.2839, 0.29", "-18.2617, -267.375, 40.7043, 0.74", "-18.1217, -268.088, 41.0326, 1.4", "-17.8648, -269.157, 41.5629, 0.59", "-17.5093, -270.576, 42.2713, 0.15", "-17.2505, -271.658, 42.7875, 0.15", "-17.0163, -272.637, 43.234, 0.15", "-16.782, -273.536, 43.5912, 0.29", "-16.4509, -274.662, 44.0123, 0.96", "-16.0697, -275.901, 44.4649, 0.44", "-15.7595, -276.902, 44.8355, 0.22", "-15.3747, -278.108, 45.3304, 0.22", "-14.9697, -279.263, 45.8179, 0.15", "-14.6012, -280.249, 46.2132, 0.15", "-14.358, -280.914, 46.4648, 0.15", "-14.1555, -281.578, 46.6939, 0.29", "-13.9142, -282.759, 47.0434, 0.44", "-13.7905, -283.922, 47.3329, 0.44", "-13.7362, -285.531, 47.6963, 0.44", "-13.7612, -286.863, 47.9287, 0.44", "-13.8584, -288.5, 48.1625, 0.88", "-14.0107, -289.776, 48.3174, 1.03", "-14.2452, -290.999, 48.4582, 0.37", "-14.5359, -292.02, 48.5966, 0.15", "-14.9218, -293.009, 48.7781, 0.15", "-15.3343, -293.852, 48.9728, 0.37", "-15.9517, -294.9, 49.2716, 0.22", "-16.4698, -295.645, 49.5208, 0.81", "-17.412, -296.793, 49.9623, 1.25", "-18.5818, -297.987, 50.4878, 0.88", "-19.3819, -298.688, 50.8286, 0.22", "-20.2001, -299.333, 51.1309, 0.22", "-21.029, -299.96, 51.3865, 0.74", "-22.1898, -300.872, 51.6555, 1.47", "-23.1287, -301.671, 51.7897, 0.37", "-24.5232, -302.991, 51.8252, 0.22", "-25.4636, -304.02, 51.7164, 0.29", "-26.2196, -305.026, 51.5037, 0.29", "-26.7555, -305.983, 51.2109, 0.29", "-27.1633, -307.039, 50.8239, 0.37", "-27.5155, -308.438, 50.3128, 0.22", "-27.7326, -310.011, 49.7724, 0.22", "-27.7851, -310.779, 49.5354, 0.22", "-27.8013, -311.955, 49.2628, 0.37", "-27.795, -312.843, 49.1379, 0.59", "-27.8156, -314.968, 49.0002, 0.66", "-27.8681, -316.435, 49.0101, 0.88", "-27.918, -317.423, 49.1117, 0.88", "-28.0511, -319.197, 49.39, 0.52", "-28.2239, -321.122, 49.7668, 0.22", "-28.3636, -323.055, 50.2286, 0.22", "-28.4095, -323.847, 50.4539, 0.81", "-28.5342, -325.949, 51.1087, 1.25", "-28.5776, -327.157, 51.4821, 1.03", "-28.5868, -327.936, 51.7123, 1.03", "-28.5348, -329.849, 52.29, 0.22", "-28.4576, -331.262, 52.7089, 0.22", "-28.4319, -332.214, 52.97, 0.22", "-28.4691, -333.762, 53.3433, 0.22", "-28.5559, -334.646, 53.5636, 0.22", "-28.8639, -336.274, 53.9605, 0.22", "-29.2226, -337.361, 54.2175, 0.74", "-29.675, -338.401, 54.445, 1.11", "-30.0857, -339.172, 54.5693, 1.11", "-31.0306, -340.635, 54.708, 0.74", "-31.7911, -341.687, 54.6942, 1.4", "-33.0345, -343.289, 54.4857, 0.66", "-33.9012, -344.406, 54.2453, 0.07", "-34.9639, -345.826, 53.8738, 0.07", "-35.6634, -346.79, 53.5985, 0.22", "-36.4227, -347.934, 53.2647, 0.22", "-36.9239, -348.745, 53.0524, 0.44", "-37.5109, -349.814, 52.8288, 0.44", "-38.2417, -351.258, 52.7336, 0.44", "-38.6789, -352.203, 52.8331, 0.22", "-39.2526, -353.53, 53.1387, 0.15", "-39.595, -354.273, 53.4233, 0.37", "-39.8446, -354.734, 53.681, 0.37", "-40.4899, -355.819, 54.4509, 0.15", "-41.1, -356.749, 55.2379, 0.15", "-41.3045, -357.025, 55.4988, 0.52", "-41.9081, -357.659, 56.1854, 1.03", "-42.7682, -358.437, 57.0544, 0.15", "-43.4357, -358.967, 57.6251, 0.15", "-44.1187, -359.464, 58.0894, 0.15", "-44.5769, -359.812, 58.343, 0.59", "-45.5845, -360.652, 58.8269, 0.15", "-45.9206, -360.951, 58.964, 0.15", "-46.4474, -361.484, 59.1508, 0.66", "-46.8932, -361.993, 59.3037, 0.81", "-48.1032, -363.565, 59.7119, 0.15", "-49.0407, -364.927, 60.0242, 0.15", "-49.8369, -366.215, 60.2854, 0.29", "-50.9247, -368.065, 60.6373, 0.22", "-51.8547, -369.737, 60.9369, 0.15", "-52.2316, -370.422, 61.0583, 0.66", "-52.8508, -371.477, 61.2316, 0.81", "-53.6557, -372.687, 61.4236, 0.44", "-54.1567, -373.403, 61.5356, 1.03", "-54.7121, -374.091, 61.652, 1.25", "-56.258, -375.804, 61.948, 0.52", "-57.4813, -377.019, 62.1655, 0.22", "-58.2795, -377.701, 62.2903, 0.07" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.92136, 28.8027, -0.0100416, 0.96", "8.41043, 30.1203, -0.930219, 0.96", "9.1362, 30.758, -1.37555, 1.03", "10.1049, 31.5609, -1.79912, 1.03", "10.9633, 32.2724, -2.17448, 1.62", "11.7952, 32.9619, -2.5382, 1.33", "12.9631, 33.93, -3.0489, 1.03", "13.8536, 34.667, -3.4028, 0.96", "15.5772, 36.0671, -3.99635, 1.62" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "6.92136, 28.8027, -0.0100416, 0.88", "7.42658, 30.1112, -0.257832, 0.88", "8.04142, 31.419, -0.569898, 0.81", "8.32702, 32.0323, -0.748353, 0.66", "8.59742, 32.6709, -0.948632, 1.11", "8.91216, 33.5358, -1.21489, 0.74", "9.11082, 34.1799, -1.4109, 0.52", "9.31506, 35.0901, -1.75029, 0.22", "9.33499, 35.8171, -1.961, 0.29", "9.18324, 36.3322, -2.05736, 0.29", "8.85372, 36.8773, -2.12574, 0.66", "8.61596, 37.1545, -2.15453, 0.66", "7.96225, 37.8091, -2.18686, 0.81", "7.12308, 38.6327, -2.22384, 1.18", "6.48663, 39.3224, -2.27332, 1.03", "5.83966, 40.1367, -2.37939, 0.81", "5.26886, 41.0015, -2.54091, 1.11", "4.62576, 42.1859, -2.81713, 0.88", "4.18427, 43.1755, -3.09504, 0.66", "3.8551, 44.0875, -3.36913, 0.66", "3.61299, 44.8527, -3.56325, 0.66", "3.4026, 45.547, -3.69882, 0.66", "3.14222, 46.3749, -3.84165, 0.81", "2.91778, 47.0086, -3.95708, 1.18", "2.6508, 47.7056, -4.06706, 1.18", "2.07633, 49.2466, -4.2651, 0.52", "1.74828, 50.0597, -4.35112, 0.52", "1.49953, 50.7026, -4.41698, 0.52", "1.35525, 51.1647, -4.4664, 1.03", "1.18674, 52.0, -4.59149, 1.03", "1.15107, 53.0183, -4.84486, 0.66", "-0.401297, 61.1818, -7.32378, 0.66", "-1.8701, 69.5812, -8.90164, 0.66", "-4.94082, 77.6596, -9.61318, 0.66", "-8.51385, 85.5532, -9.96247, 0.66", "-12.542, 93.1642, -10.9837, 0.66", "-17.6486, 100.17, -10.7928, 0.66", "-22.8854, 107.009, -11.792, 0.66", "-27.5654, 114.141, -13.3484, 0.66", "-32.1318, 121.507, -13.6432, 0.66", "-37.3926, 128.289, -14.8797, 0.66", "-41.6393, 135.324, -17.6499, 0.66", "-46.0978, 142.426, -19.8575, 0.66", "-50.7339, 149.402, -22.1048, 0.66", "-55.5119, 156.098, -24.848, 0.66", "-61.1857, 161.958, -27.7921, 0.66" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.54204, 30.5355, 5.89466, 0.96", "-2.21846, 30.9832, 5.86472, 0.96", "-2.87216, 31.2597, 5.87979, 0.66", "-3.80124, 31.3518, 5.97363, 0.52", "-4.17991, 31.1649, 6.06932, 0.52", "-4.68982, 30.5248, 6.28543, 0.52", "-4.94561, 30.1721, 6.40983, 0.88", "-5.48156, 29.3336, 6.7157, 1.11", "-5.97567, 28.5685, 7.00574, 1.25", "-6.40039, 27.9873, 7.22571, 1.25", "-7.30132, 26.947, 7.59955, 0.66", "-7.82872, 26.429, 7.77188, 0.96", "-8.41743, 25.9456, 7.93875, 1.33", "-9.19309, 25.4153, 8.13773, 1.33", "-10.3802, 24.7244, 8.43424, 1.33", "-11.6887, 24.0253, 8.78295, 0.88", "-12.4783, 23.6378, 8.9848, 0.88", "-13.3753, 23.1914, 9.20924, 1.4", "-13.9564, 22.8896, 9.36302, 1.55", "-14.8558, 22.3931, 9.62991, 2.06", "-15.5493, 21.9555, 9.91628, 2.06" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.54204, 30.5355, 5.89466, 0.74", "-1.80654, 29.4623, 5.51962, 0.74", "-2.20795, 28.1036, 5.06485, 0.52", "-2.59526, 26.9216, 4.69512, 0.88", "-3.06368, 25.669, 4.36794, 0.44", "-3.39853, 24.867, 4.18975, 0.44", "-3.6681, 24.2657, 4.06987, 0.37", "-4.20504, 23.197, 3.91534, 0.88", "-4.76933, 22.0754, 3.84489, 0.44", "-5.36756, 20.835, 3.82258, 0.44", "-5.74613, 19.9378, 3.83249, 0.74", "-6.01457, 19.2268, 3.86017, 1.11", "-6.55497, 17.6701, 3.97337, 0.96", "-7.02488, 16.2177, 4.15419, 1.18", "-7.42285, 14.9741, 4.37485, 1.18", "-7.8904, 13.5588, 4.67822, 0.88", "-8.29861, 12.3892, 4.97652, 0.66", "-8.662, 11.4409, 5.26479, 0.66", "-9.06574, 10.4331, 5.59986, 0.66", "-9.5423, 9.28308, 5.99981, 0.66", "-10.0689, 7.96736, 6.44768, 0.66", "-10.7543, 6.1082, 6.96332, 0.52", "-11.0732, 5.09926, 7.17254, 0.52", "-11.5231, 3.34438, 7.4223, 0.52", "-11.7619, 2.12707, 7.51169, 0.52", "-11.941, 0.876404, 7.54288, 0.52", "-12.1296, -0.746256, 7.54232, 0.96", "-12.2353, -1.56937, 7.5139, 1.11", "-12.3627, -2.41096, 7.46237, 1.11", "-12.7479, -4.4799, 7.30989, 0.44", "-12.9565, -5.45647, 7.21452, 0.44", "-13.4225, -7.19173, 7.01749, 0.66", "-13.7889, -8.36741, 6.85975, 0.52", "-13.9935, -8.97272, 6.75014, 0.88", "-14.1801, -9.50221, 6.63402, 1.33", "-14.5694, -10.6834, 6.34239, 0.96", "-15.0573, -12.3846, 5.91817, 0.59", "-15.3377, -13.6049, 5.61547, 0.59", "-15.4822, -14.4006, 5.44175, 0.96", "-15.6546, -15.5199, 5.23046, 0.52", "-15.8563, -17.041, 5.00193, 0.22", "-15.9804, -18.019, 4.89449, 0.29", "-16.1149, -18.8897, 4.80357, 0.29", "-16.256, -19.5529, 4.73075, 1.03", "-16.5192, -20.5499, 4.60159, 1.84", "-17.0084, -21.9991, 4.37162, 0.74", "-17.6383, -23.4822, 4.08935, 0.29", "-18.3756, -24.8202, 3.77086, 0.29", "-18.8392, -25.5258, 3.57731, 0.29", "-19.1707, -25.9907, 3.44006, 0.88", "-19.625, -26.6039, 3.25542, 1.47", "-20.1089, -27.2847, 3.05193, 0.88", "-21.198, -29.027, 2.58132, 0.22", "-21.5438, -29.7053, 2.42586, 0.15", "-21.9191, -30.5677, 2.26708, 0.37", "-22.249, -31.3438, 2.14098, 0.22", "-22.7726, -32.5024, 1.9576, 0.22", "-23.2625, -33.4572, 1.79252, 0.52", "-23.5829, -33.9847, 1.69099, 0.96", "-24.3298, -34.9338, 1.45407, 1.62", "-25.3609, -35.9902, 1.11889, 0.96", "-26.5304, -37.0355, 0.747735, 0.59", "-27.4577, -37.7932, 0.467532, 0.88", "-28.343, -38.5106, 0.200066, 1.55", "-29.1144, -39.1476, -0.0368301, 1.55", "-30.2546, -40.1758, -0.402388, 0.37", "-31.2021, -41.1361, -0.680154, 0.22", "-31.7446, -41.7399, -0.826095, 0.44", "-32.5066, -42.6638, -1.01904, 1.11", "-32.8587, -43.1543, -1.10764, 1.11", "-33.5854, -44.2978, -1.28135, 0.44", "-34.1624, -45.3299, -1.44206, 0.22", "-34.6226, -46.2942, -1.60563, 0.29", "-34.8785, -46.8868, -1.72904, 0.15", "-35.286, -47.8915, -1.9675, 0.29", "-35.4425, -48.2935, -2.07104, 0.96", "-35.8039, -49.2362, -2.33575, 1.62", "-36.3832, -50.8358, -2.79541, 2.06", "-36.9407, -52.4026, -3.21971, 1.4", "-37.2126, -53.1597, -3.41099, 0.59", "-37.6513, -54.3443, -3.68503, 0.22", "-37.9295, -55.1408, -3.8423, 0.22", "-38.196, -55.9459, -3.9691, 0.66", "-38.471, -56.8363, -4.08576, 0.74", "-38.7547, -57.7933, -4.18543, 0.22", "-39.0951, -58.8634, -4.28368, 0.15", "-39.399, -59.7414, -4.34154, 0.22", "-39.6114, -60.3568, -4.36357, 0.66", "-39.8894, -61.1257, -4.37538, 1.25", "-40.3015, -62.182, -4.38515, 1.47", "-40.8452, -63.4432, -4.40827, 0.88", "-41.3553, -64.5096, -4.45191, 0.22", "-41.7412, -65.2401, -4.50479, 0.22", "-42.1381, -65.9401, -4.57856, 0.22", "-42.8082, -67.0328, -4.74126, 0.37", "-43.4118, -67.9656, -4.92986, 0.37", "-44.0609, -68.9455, -5.16077, 0.52", "-44.4516, -69.5342, -5.30436, 0.22", "-44.8203, -70.1082, -5.4325, 0.37", "-45.1502, -70.6961, -5.53588, 0.74", "-45.6232, -71.756, -5.65047, 0.22", "-46.023, -72.9099, -5.71606, 0.22", "-46.2904, -73.844, -5.75476, 0.29", "-46.4853, -74.5393, -5.79186, 0.52", "-46.7633, -75.5405, -5.85702, 1.11", "-47.0059, -76.4245, -5.92542, 1.7", "-47.3455, -77.6466, -6.04481, 1.33", "-47.7156, -79.0341, -6.20435, 0.22", "-47.9803, -80.1374, -6.31601, 0.22", "-48.0674, -80.5197, -6.35201, 0.22", "-48.1657, -80.9657, -6.39089, 0.29", "-48.3159, -81.6561, -6.44618, 0.52", "-48.5028, -82.547, -6.50554, 0.22", "-48.6853, -83.2872, -6.55945, 0.22", "-48.8837, -83.8988, -6.62931, 0.22", "-49.1802, -84.5203, -6.75123, 0.81", "-49.5112, -85.0165, -6.89938, 1.47", "-49.8098, -85.3783, -7.0384, 1.47", "-50.5859, -86.2162, -7.40627, 0.22", "-51.0165, -86.6707, -7.61135, 0.22", "-51.5301, -87.2521, -7.85455, 0.37", "-52.1659, -88.0398, -8.15322, 0.44", "-52.586, -88.5978, -8.34846, 0.22", "-52.7511, -88.8436, -8.42974, 0.22", "-52.9477, -89.1667, -8.5322, 0.22", "-53.3165, -89.8065, -8.72977, 0.22", "-53.6127, -90.3218, -8.8903, 0.74", "-53.9757, -90.958, -9.08662, 1.47", "-54.5423, -91.8549, -9.37547, 1.99", "-55.1268, -92.662, -9.63961, 1.77", "-56.144, -93.8902, -10.061, 0.66", "-56.7478, -94.5359, -10.2945, 0.15", "-57.3909, -95.1759, -10.537, 0.15", "-58.0814, -95.8548, -10.7964, 0.22", "-58.6846, -96.4208, -11.0252, 0.22", "-59.2934, -97.0012, -11.2925, 0.29", "-59.7905, -97.5082, -11.548, 0.81", "-60.4276, -98.2524, -11.9338, 1.47", "-61.0917, -99.1819, -12.4264, 0.52", "-61.601, -100.154, -12.913, 0.22", "-61.9051, -100.953, -13.2796, 0.22", "-62.0923, -101.623, -13.5368, 0.22", "-62.1616, -101.971, -13.6523, 0.22", "-62.2436, -102.549, -13.8182, 0.29", "-62.3437, -103.432, -14.0542, 0.74", "-62.4154, -104.1, -14.2358, 1.03", "-62.6344, -105.504, -14.6424, 0.37", "-62.8308, -106.453, -14.9398, 0.88", "-63.049, -107.358, -15.2338, 1.18", "-63.2622, -108.177, -15.5034, 1.18", "-63.6816, -109.683, -15.9743, 0.29", "-64.0927, -110.974, -16.37, 0.29", "-64.4159, -111.853, -16.6267, 0.37", "-64.6788, -112.462, -16.7884, 0.88", "-64.9691, -113.08, -16.9292, 0.66", "-65.3578, -113.928, -17.0652, 0.22", "-65.6564, -114.622, -17.1252, 0.22", "-65.9441, -115.397, -17.1581, 0.37", "-66.1281, -115.952, -17.1625, 0.66", "-66.4093, -116.829, -17.1507, 1.11", "-66.75, -117.872, -17.1316, 0.66", "-66.9823, -118.528, -17.1279, 0.29", "-67.3239, -119.434, -17.1191, 0.22", "-67.5598, -120.05, -17.1291, 0.29", "-67.9511, -121.133, -17.1935, 0.96", "-68.2141, -121.905, -17.2782, 1.03", "-68.6211, -123.24, -17.4772, 0.81", "-68.8982, -124.318, -17.6699, 0.29", "-69.1161, -125.211, -17.8637, 0.22", "-69.3366, -126.146, -18.0942, 0.29", "-69.521, -126.962, -18.3165, 0.74", "-69.6798, -127.681, -18.5149, 0.52", "-70.0609, -129.249, -18.9577, 0.29", "-70.502, -130.695, -19.3649, 0.29", "-71.0218, -131.997, -19.7042, 0.29", "-71.3526, -132.695, -19.8799, 0.29", "-71.7051, -133.367, -20.0529, 1.03", "-72.0631, -134.014, -20.2275, 1.7", "-72.6969, -135.145, -20.5288, 1.4", "-73.6576, -136.841, -20.9667, 0.44", "-74.2331, -137.801, -21.2048, 0.15", "-74.4921, -138.221, -21.3079, 0.37", "-74.904, -138.892, -21.4817, 0.59", "-75.2881, -139.554, -21.6625, 0.59", "-75.9723, -140.804, -22.0354, 0.22", "-76.4811, -141.732, -22.3504, 0.22", "-76.8653, -142.417, -22.5903, 0.22", "-77.1661, -142.968, -22.7836, 0.88", "-77.4664, -143.525, -22.9509, 1.47", "-77.8968, -144.352, -23.1737, 1.84", "-79.1267, -146.797, -23.7593, 0.22", "-79.3091, -147.179, -23.8479, 0.22", "-79.5519, -147.69, -23.9583, 0.22", "-80.1107, -148.821, -24.2209, 0.22", "-80.4903, -149.529, -24.4087, 0.22", "-80.801, -150.069, -24.5816, 0.74", "-81.3501, -151.024, -24.9444, 1.33", "-82.042, -152.163, -25.435, 0.22", "-82.45, -152.804, -25.7421, 0.22", "-82.9074, -153.523, -26.0759, 0.22", "-83.2645, -154.111, -26.2714, 0.15", "-83.5403, -154.59, -26.3658, 0.15", "-83.9628, -155.284, -26.4192, 0.37", "-84.1772, -155.628, -26.414, 0.96", "-85.0094, -156.915, -26.3164, 2.14", "-86.0277, -158.405, -26.1541, 0.66", "-86.8015, -159.423, -26.0195, 0.15", "-87.5426, -160.274, -25.8904, 0.15", "-88.0203, -160.764, -25.8068, 0.44", "-88.4864, -161.209, -25.7285, 1.03", "-89.2642, -161.929, -25.6096, 1.55", "-90.2356, -162.817, -25.4459, 0.44", "-90.86, -163.45, -25.3603, 0.22", "-91.2927, -163.959, -25.3124, 0.22", "-91.9123, -164.764, -25.273, 0.22", "-92.4645, -165.537, -25.276, 0.29", "-93.0583, -166.431, -25.338, 0.29", "-93.7617, -167.562, -25.4896, 0.15", "-94.2696, -168.4, -25.6481, 0.22", "-94.7766, -169.263, -25.8845, 0.88", "-95.4586, -170.474, -26.3215, 0.74", "-95.8862, -171.251, -26.672, 0.88", "-96.2977, -172.052, -27.0912, 1.77", "-96.7215, -172.96, -27.6215, 2.29", "-97.2752, -174.363, -28.5084, 0.07", "-97.5421, -175.225, -29.0948, 0.15", "-97.658, -175.774, -29.4954, 0.15", "-97.6993, -176.08, -29.7217, 0.15", "-97.7231, -176.684, -30.1291, 0.15", "-97.697, -177.168, -30.3902, 0.15", "-97.6513, -178.037, -30.733, 0.15", "-97.6403, -178.361, -30.8371, 0.15", "-97.6242, -179.279, -31.0945, 0.66", "-97.6502, -180.945, -31.5372, 0.29", "-97.7163, -182.025, -31.8072, 0.22", "-97.8107, -183.012, -32.0337, 0.22", "-97.9435, -183.863, -32.2216, 0.22", "-98.0569, -184.291, -32.3274, 0.59", "-98.2317, -184.691, -32.4492, 0.74", "-98.5024, -185.07, -32.5818, 0.37", "-98.9287, -185.507, -32.7454, 0.15", "-99.8405, -186.309, -33.0478, 0.15", "-100.365, -186.722, -33.2088, 0.22", "-100.903, -187.143, -33.3712, 0.29", "-101.465, -187.593, -33.522, 0.22", "-102.189, -188.224, -33.6951, 0.22", "-102.993, -189.005, -33.8639, 0.29", "-103.553, -189.607, -33.9593, 0.29", "-104.257, -190.355, -34.0855, 0.22", "-104.84, -190.938, -34.2115, 0.37", "-105.404, -191.486, -34.361, 0.74", "-105.808, -191.879, -34.4755, 1.03", "-106.612, -192.673, -34.7047, 0.22", "-107.331, -193.423, -34.9129, 0.22", "-107.946, -194.084, -35.1082, 0.15", "-108.403, -194.611, -35.2717, 0.15", "-108.723, -195.015, -35.3889, 0.15", "-109.21, -195.735, -35.5879, 0.22", "-109.853, -196.848, -35.8824, 0.29", "-110.344, -197.849, -36.1133, 0.74", "-110.842, -198.994, -36.3244, 0.74", "-111.212, -199.898, -36.4682, 0.37", "-111.587, -200.868, -36.6032, 0.37", "-111.875, -201.614, -36.6822, 1.4", "-112.309, -202.683, -36.7787, 2.95", "-112.982, -204.172, -36.9059, 1.18", "-113.581, -205.32, -37.0166, 0.22", "-114.344, -206.639, -37.1346, 0.29", "-114.933, -207.614, -37.2106, 0.74", "-115.376, -208.336, -37.2711, 1.33", "-116.102, -209.418, -37.4072, 0.81", "-116.707, -210.302, -37.596, 1.18", "-117.65, -211.771, -37.9749, 0.66", "-118.197, -212.744, -38.2402, 0.29", "-118.391, -213.128, -38.3486, 0.44", "-119.12, -214.738, -38.7866, 0.29", "-119.618, -215.949, -39.1262, 0.81", "-120.302, -217.693, -39.6838, 0.22", "-120.628, -218.481, -40.0222, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "58.7426, -15.7916, -0.699254, 0.15", "66.1664, -20.3771, -2.33776, 0.15", "73.2157, -25.433, -4.22756, 0.15", "80.6615, -29.5903, -6.69788, 0.15", "88.0299, -34.3115, -8.19503, 0.15", "96.1616, -37.328, -10.0927, 0.15", "104.263, -40.2496, -12.2498, 0.15", "111.81, -44.3561, -14.4888, 0.15", "118.359, -49.2403, -17.9647, 0.15", "125.532, -54.154, -19.7606, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "58.7426, -15.7916, -0.699254, 0.59", "67.2162, -21.0562, 1.21435, 0.15", "75.5939, -26.5671, 2.83401, 0.15", "83.8732, -31.8226, 5.48217, 0.15", "92.0804, -36.9133, 8.62962, 0.15", "100.766, -41.872, 10.4043, 0.15", "109.216, -47.3232, 11.8408, 0.15", "116.971, -53.6761, 13.479, 0.15", "124.494, -60.4687, 14.1374, 0.15", "131.278, -68.0091, 14.687, 0.15", "136.858, -76.3294, 16.3673, 0.15", "143.416, -83.9111, 18.0046, 0.15", "150.278, -91.3866, 18.4626, 0.15", "156.884, -99.0978, 18.1762, 0.15", "164.837, -105.413, 17.9387, 0.15", "174.071, -109.404, 19.3496, 0.15", "183.191, -113.492, 21.1623, 0.15", "192.936, -116.041, 22.4755, 0.15", "202.437, -119.245, 24.1002, 0.15", "212.473, -120.748, 24.5544, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "71.8204, -34.6366, -9.13028, 0.15", "79.2345, -42.4764, -12.8496, 0.15", "85.8671, -51.2111, -16.0087, 0.15", "93.1161, -59.1002, -19.9433, 0.15", "97.9721, -69.017, -22.8316, 0.15", "101.956, -79.6199, -24.2372, 0.15", "106.148, -89.9744, -26.578, 0.15", "112.092, -99.0164, -30.2071, 0.15", "118.984, -107.943, -31.9671, 0.15", "124.332, -117.875, -33.7037, 0.15", "130.663, -127.358, -34.2084, 0.15", "136.399, -137.177, -35.1915, 0.15", "142.13, -146.704, -37.7681, 0.15", "145.969, -156.734, -41.6325, 0.15", "150.175, -167.004, -44.2993, 0.15", "155.918, -176.845, -44.962, 0.15", "161.745, -186.209, -47.8981, 0.15", "168.778, -195.029, -49.6344, 0.15", "175.043, -204.519, -50.6088, 0.15", "181.479, -213.558, -53.2801, 0.15", "187.707, -222.961, -55.0328, 0.15", "193.552, -232.105, -58.5655, 0.15", "198.576, -241.976, -61.3213, 0.15", "202.922, -252.411, -62.8991, 0.15", "207.482, -262.359, -66.1388, 0.15", "212.538, -272.207, -68.9195, 0.15", "216.039, -282.794, -71.3565, 0.15", "219.574, -293.628, -71.9674, 0.15", "224.075, -303.948, -70.0914, 0.15", "229.06, -313.518, -66.373, 0.15", "234.818, -322.218, -61.7447, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "71.8204, -34.6366, -9.13028, 0.59", "80.9382, -43.5693, -8.74035, 0.15", "91.54, -50.6282, -7.81541, 0.15", "102.269, -57.4113, -6.41473, 0.15", "111.735, -65.9173, -7.47673, 0.15", "120.425, -75.0446, -9.53972, 0.15", "130.063, -83.1756, -11.557, 0.15", "140.68, -90.036, -13.3722, 0.15", "152.084, -95.6916, -14.4022, 0.15", "163.272, -101.808, -13.6978, 0.15", "173.557, -109.237, -12.247, 0.15", "183.499, -116.339, -8.53355, 0.15", "191.684, -125.039, -4.01503, 0.15", "197.76, -134.811, 1.52329, 0.15", "200.992, -144.924, 8.61996, 0.15", "204.799, -155.297, 15.0215, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-114.286, -197.432, 6.92906, 0.15", "-119.979, -205.533, 8.17184, 0.15", "-125.466, -213.847, 7.56835, 0.15", "-131.239, -221.972, 8.06032, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-114.286, -197.432, 6.92906, 0.59", "-119.756, -206.15, 8.68488, 0.15", "-123.286, -215.713, 10.9426, 0.15", "-127.312, -224.873, 13.9267, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-66.703, -171.382, -110.907, 0.15", "-69.546, -179.391, -114.997, 0.15", "-72.7466, -187.806, -117.811, 0.15", "-75.2425, -196.08, -121.59, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-66.703, -171.382, -110.907, 0.59", "-68.4777, -178.813, -115.72, 0.15", "-68.4094, -186.448, -120.542, 0.15", "-69.5845, -194.053, -125.267, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "26.8483, -226.138, 54.5375, 0.15", "27.9332, -226.89, 55.1072, 0.15", "28.4332, -227.237, 55.3698, 0.37", "29.2715, -227.818, 55.8099, 1.18", "29.8817, -228.241, 56.1303, 0.88", "30.9536, -228.985, 56.6932, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "26.8483, -226.138, 54.5375, 0.22", "27.1294, -227.289, 54.2539, 0.22", "27.3346, -228.144, 54.0044, 0.81", "27.5079, -228.976, 53.7574, 1.18", "27.6928, -230.245, 53.3897, 0.22", "27.7475, -231.331, 53.0849, 0.22", "27.7225, -232.413, 52.7898, 0.29", "27.6183, -233.439, 52.5197, 0.66", "27.4134, -234.482, 52.2674, 0.81", "27.0977, -235.617, 52.0241, 0.22", "26.577, -237.099, 51.7644, 0.22", "26.3017, -237.83, 51.6732, 0.29", "26.0312, -238.565, 51.6084, 0.96", "25.7851, -239.286, 51.5759, 1.7", "25.326, -240.866, 51.576, 0.52", "25.0097, -242.28, 51.6513, 0.22", "24.8943, -243.022, 51.7324, 0.15", "24.7558, -244.203, 51.9215, 0.22", "24.6662, -245.237, 52.087, 0.15", "24.6001, -246.115, 52.2277, 0.15", "24.559, -246.711, 52.3181, 0.15", "24.5259, -247.378, 52.4041, 0.37", "24.4877, -248.239, 52.4625, 0.59", "24.4159, -249.826, 52.4475, 0.07", "24.3628, -250.727, 52.3712, 0.07", "24.3031, -251.706, 52.2467, 0.15", "24.2709, -252.377, 52.1488, 0.66", "24.2404, -253.205, 52.0261, 0.74", "24.2076, -254.597, 51.8475, 0.15", "24.1911, -255.49, 51.7746, 0.22", "24.1803, -256.219, 51.7248, 0.15", "24.1508, -256.853, 51.6869, 0.81", "24.0899, -257.525, 51.6526, 0.66", "23.9386, -258.661, 51.5799, 0.15", "23.7885, -259.569, 51.4957, 0.22", "23.5745, -260.7, 51.3645, 0.52", "23.3398, -261.614, 51.2521, 0.59", "22.9934, -262.813, 51.1497, 0.07", "22.7073, -263.764, 51.1003, 0.22", "22.6004, -264.107, 51.0851, 0.22", "22.3525, -264.89, 51.0598, 0.96", "21.867, -266.377, 51.0396, 0.07", "21.4603, -267.677, 51.0942, 0.07", "21.2721, -268.274, 51.1771, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-22.645, -227.081, 23.6041, 0.15", "-22.9984, -234.193, 24.8809, 0.15", "-24.0521, -241.286, 25.8375, 0.15", "-25.1272, -248.351, 26.9597, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-22.645, -227.081, 23.6041, 0.59", "-23.9272, -235.983, 24.9446, 0.15", "-25.2754, -244.951, 24.2782, 0.15", "-28.0149, -253.571, 25.2121, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "15.5772, 36.0671, -3.99635, 0.52", "16.2996, 36.977, -4.76431, 0.52", "17.0592, 37.4444, -5.70635, 0.37", "17.6155, 37.6367, -6.38309, 0.37", "17.8996, 37.7257, -6.73723, 0.52", "18.4178, 37.9323, -7.41685, 0.52", "19.1985, 38.3333, -8.50332, 0.44", "19.5572, 38.5263, -9.07125, 0.44", "19.9522, 38.7989, -9.70509, 0.66", "20.2964, 39.127, -10.1962, 0.66", "20.7355, 39.6723, -10.7216, 0.88", "21.0269, 40.114, -10.98, 1.03", "21.6571, 41.1395, -11.3423, 0.52", "22.152, 41.9352, -11.5449, 0.52", "22.592, 42.6167, -11.6811, 0.52", "23.0068, 43.2052, -11.7794, 0.52", "23.7061, 44.1411, -11.9517, 0.22", "24.3815, 45.0059, -12.1064, 0.44", "25.0545, 45.8616, -12.2515, 0.74", "25.756, 46.8229, -12.4236, 1.18", "26.2452, 47.5464, -12.5746, 0.88", "27.0171, 48.7062, -12.8684, 0.29", "33.2084, 56.6685, -15.4388, 0.29", "39.4291, 64.4107, -18.5532, 0.29", "45.4466, 72.7658, -20.0768, 0.29", "51.9742, 80.873, -20.0975, 0.29", "58.1558, 89.2436, -19.8533, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "15.5772, 36.0671, -3.99635, 0.88", "16.6815, 36.7306, -3.78707, 0.88", "17.4277, 37.1638, -3.69099, 0.81", "18.2949, 37.6833, -3.66106, 0.96", "19.1944, 38.2377, -3.71162, 1.33", "20.2352, 38.9207, -3.83093, 1.33", "20.8355, 39.3295, -3.91132, 1.33", "21.493, 39.8222, -4.02615, 1.33", "22.3064, 40.4618, -4.20634, 1.18", "23.0729, 41.0761, -4.40292, 1.03", "23.7564, 41.6053, -4.57517, 0.88", "24.6068, 42.2638, -4.76984, 1.4", "25.6476, 43.0911, -4.96835, 0.74", "26.5021, 43.777, -5.10655, 1.25", "27.4282, 44.5045, -5.24742, 1.77", "28.6323, 45.4648, -5.46246, 0.96", "29.6182, 46.2845, -5.69378, 0.59", "30.3265, 46.9194, -5.90851, 0.74", "30.8419, 47.4197, -6.09492, 0.96", "31.7244, 48.3424, -6.42958, 1.11", "32.3528, 49.0321, -6.65222, 1.4", "32.9195, 49.6668, -6.82428, 1.4", "33.8837, 50.6876, -7.06275, 0.96", "34.311, 51.106, -7.12651, 0.96", "35.2425, 51.931, -7.15469, 1.18", "36.0532, 52.5608, -7.08827, 1.18", "36.9267, 53.1586, -6.98381, 1.03", "37.5424, 53.5404, -6.92687, 0.96", "38.3785, 54.0346, -6.90362, 0.81", "39.2881, 54.5729, -6.95547, 0.74", "40.2466, 55.1579, -7.10033, 0.96", "41.2199, 55.7909, -7.30959, 1.25", "42.2766, 56.5235, -7.5847, 1.55", "43.1682, 57.2016, -7.84562, 0.88", "44.13, 58.0433, -8.17905, 0.59", "44.6885, 58.6129, -8.38249, 0.81", "45.2617, 59.3003, -8.58724, 0.96", "45.8638, 60.0706, -8.77752, 1.33", "46.7547, 61.307, -9.00921, 1.55", "47.4953, 62.4311, -9.18472, 1.7", "48.1628, 63.5602, -9.35384, 1.62", "48.8608, 64.8624, -9.55579, 1.62" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-61.1857, 161.958, -27.7921, 0.15", "-65.1089, 169.799, -29.7834, 0.15", "-67.8098, 178.071, -32.0486, 0.15", "-71.6734, 186.141, -32.9403, 0.15", "-75.1997, 194.386, -33.5881, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-61.1857, 161.958, -27.7921, 0.59", "-65.3466, 170.73, -27.5847, 0.15", "-70.1772, 179.133, -27.0021, 0.15", "-72.5415, 188.533, -26.4019, 0.15", "-74.4813, 198.02, -27.1251, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-15.5493, 21.9555, 9.91628, 0.81", "-14.5096, 22.4179, 10.6763, 0.81", "-13.9125, 22.7401, 11.0588, 0.44", "-13.0507, 23.3299, 11.6375, 0.59", "-12.3605, 23.8735, 12.1488, 0.59", "-11.794, 24.3511, 12.597, 0.88", "-11.3665, 24.7259, 12.9524, 1.11", "-10.8141, 25.2028, 13.3095, 1.11", "-10.2981, 25.7995, 13.6553, 0.29", "-10.2067, 26.1924, 13.8422, 0.29", "-10.3896, 26.5232, 14.0052, 0.29", "-10.5401, 26.698, 14.0993, 0.29", "-10.7024, 26.8936, 14.2466, 0.29", "-10.9284, 27.217, 14.5988, 0.59", "-11.048, 27.5039, 15.0071, 1.11", "-11.1585, 27.9383, 15.7282, 1.84", "-11.2124, 28.2718, 16.3774, 1.84", "-11.2517, 28.673, 17.2423, 0.96", "-11.2652, 28.9276, 17.8629, 0.74", "-11.2612, 29.2068, 18.5386, 0.74", "-11.2793, 29.5466, 19.293, 0.74", "-11.3261, 29.839, 19.8632, 1.11", "-11.3882, 30.2376, 20.4841, 1.47", "-11.4386, 30.6758, 21.0682, 1.47", "-11.48, 31.2806, 21.7962, 0.74", "-11.5131, 32.0946, 22.7145, 0.52", "-11.5194, 32.5394, 23.2061, 0.52", "-11.5319, 33.1476, 23.908, 0.37", "-11.5249, 33.5925, 24.54, 0.37", "-11.5106, 33.687, 24.8375, 0.37", "-11.4937, 33.678, 25.2305, 0.37", "-11.4827, 33.637, 25.5255, 0.37", "-11.5356, 33.5713, 26.2629, 0.37", "-11.6721, 33.5985, 26.8327, 0.37", "-11.9218, 33.8012, 27.6198, 0.37", "-12.1161, 34.0231, 28.15, 0.37", "-12.3483, 34.3101, 28.6795, 0.59", "-12.612, 34.6633, 29.2102, 0.88", "-13.0872, 35.3784, 30.055, 0.88", "-13.4969, 36.0077, 30.6846, 0.59", "-14.0052, 36.8207, 31.3816, 0.59", "-14.2874, 37.3381, 31.7799, 0.29", "-14.5361, 37.9035, 32.1725, 0.29", "-14.7596, 38.5672, 32.5913, 0.29", "-14.8813, 39.0638, 32.8795, 0.96", "-14.9633, 39.5489, 33.1715, 1.84", "-15.0483, 40.2939, 33.6184, 0.37", "-15.1245, 40.868, 33.9785, 0.81", "-15.2726, 41.5456, 34.4379, 1.55", "-15.4897, 42.2181, 34.954, 0.22", "-15.685, 42.7226, 35.3589, 0.22", "-15.8413, 43.0766, 35.6677, 0.22", "-15.9998, 43.5212, 36.0639, 0.29", "-16.0908, 43.9511, 36.4309, 0.29", "-16.1335, 44.4509, 36.8452, 0.59", "-16.1294, 45.182, 37.4654, 1.77", "-16.0977, 45.6993, 37.9076, 2.14", "-15.9692, 46.6575, 38.7353, 0.29", "-15.8781, 47.1112, 39.1237, 0.29", "-15.7848, 47.5529, 39.4931, 0.29", "-15.7247, 47.8018, 39.7053, 0.29", "-15.6423, 48.1428, 40.0253, 0.88", "-15.5421, 48.5574, 40.4557, 1.62", "-15.4542, 48.8867, 40.8478, 1.62", "-15.3095, 49.312, 41.3554, 2.21", "-14.8677, 50.3172, 42.5501, 0.22", "-14.6592, 50.7236, 43.027, 0.22", "-14.5061, 50.9935, 43.3477, 0.22", "-14.3387, 51.2655, 43.6669, 0.22", "-14.0003, 51.7708, 44.2422, 0.44", "-13.5691, 52.3253, 44.8586, 0.66", "-13.4986, 52.4179, 44.9506, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-15.5493, 21.9555, 9.91628, 0.96", "-15.199, 21.2085, 10.4711, 0.96", "-14.8157, 20.4281, 11.0362, 0.37", "-14.7298, 20.1306, 11.2082, 0.29", "-14.6454, 19.5655, 11.4644, 0.22", "-14.6393, 19.1815, 11.6233, 0.22", "-14.6813, 18.5791, 11.8616, 0.52", "-14.7958, 17.8451, 12.1394, 0.74", "-15.0931, 16.824, 12.4796, 0.52", "-15.3467, 16.0806, 12.7094, 1.11", "-15.7458, 14.9438, 13.0576, 1.62", "-16.0926, 13.9334, 13.3578, 1.33", "-16.5492, 12.5071, 13.7789, 1.11", "-17.1376, 10.5552, 14.3565, 0.44", "-17.43, 9.52315, 14.6562, 0.44", "-17.7315, 8.45205, 14.9525, 0.44", "-17.9732, 7.59474, 15.1648, 0.96", "-18.3285, 6.35613, 15.4596, 1.47", "-18.7748, 4.92273, 15.7823, 1.7", "-19.3354, 3.33547, 16.1484, 1.7", "-19.9518, 1.93618, 16.489, 1.7", "-20.6329, 0.641114, 16.8173, 0.59", "-21.3404, -0.547857, 17.1491, 0.44", "-22.0264, -1.59936, 17.4797, 0.44", "-22.4444, -2.20448, 17.7144, 0.44", "-23.0724, -3.0998, 18.17, 0.44", "-23.2707, -3.40907, 18.3761, 0.44", "-23.434, -3.8074, 18.6695, 0.44", "-23.5613, -4.43694, 19.1122, 0.44", "-23.6274, -4.85723, 19.3885, 0.88", "-23.8239, -5.85938, 19.9762, 1.4", "-24.0198, -6.55091, 20.3503, 1.4", "-24.4701, -7.66085, 20.9111, 0.66", "-24.8826, -8.47844, 21.2931, 0.22", "-25.3323, -9.2756, 21.6657, 0.22", "-25.5971, -9.73195, 21.8881, 1.03", "-26.0449, -10.5142, 22.2847, 2.36", "-26.5282, -11.4271, 22.7766, 2.65", "-27.29, -13.0537, 23.7408, 0.81", "-27.5648, -13.9682, 24.2887, 0.22", "-27.6356, -14.4165, 24.5613, 0.22", "-27.6633, -14.8453, 24.8302, 0.66", "-27.6522, -15.374, 25.1756, 0.66", "-27.6218, -15.7025, 25.4061, 0.66", "-27.4785, -16.6026, 26.1039, 0.22", "-27.4471, -17.0632, 26.4538, 0.22", "-27.4664, -17.2749, 26.6198, 0.22", "-27.5653, -17.6268, 26.9036, 0.22", "-27.772, -18.1048, 27.2739, 0.22", "-27.8902, -18.3068, 27.4181, 0.22", "-28.2385, -18.7853, 27.7222, 0.22", "-28.4517, -19.0692, 27.8629, 0.29", "-29.0009, -19.8097, 28.1555, 0.29", "-29.2618, -20.2023, 28.2869, 0.59", "-29.6904, -20.9359, 28.5064, 0.88", "-30.0555, -21.6702, 28.7276, 0.66", "-30.4053, -22.6266, 29.031, 0.22", "-30.512, -23.0853, 29.1972, 0.22", "-30.6797, -24.2164, 29.6738, 0.59", "-30.7642, -25.1653, 30.1198, 1.03", "-30.8218, -26.1045, 30.5849, 1.62", "-30.9066, -27.3641, 31.2439, 0.59", "-31.0373, -28.6538, 31.9095, 0.22", "-31.1876, -29.5488, 32.3676, 0.52", "-31.3303, -30.0762, 32.6425, 1.25", "-31.6627, -30.9355, 33.11, 2.14", "-32.0658, -31.7105, 33.5379, 1.33", "-32.7243, -32.7142, 34.1381, 0.52", "-33.1127, -33.2731, 34.4989, 0.22", "-33.5219, -33.9001, 34.9379, 0.44", "-33.823, -34.4012, 35.3288, 0.44", "-34.0691, -34.9247, 35.7438, 0.22", "-34.2546, -35.4463, 36.0876, 0.22", "-34.4573, -36.1044, 36.4654, 0.22", "-34.5911, -36.5756, 36.6818, 0.52", "-34.783, -37.2446, 36.9298, 0.74", "-35.1791, -38.3217, 37.3063, 0.81", "-35.6747, -39.2365, 37.6967, 0.22", "-36.1205, -39.7575, 37.9923, 0.22", "-36.3611, -39.9628, 38.1551, 0.22", "-36.7349, -40.2676, 38.4405, 0.66", "-37.3677, -40.782, 39.0013, 1.33", "-37.8769, -41.2355, 39.5245, 1.55", "-38.3626, -41.7787, 40.0959, 0.88", "-38.9323, -42.5364, 40.7367, 0.15", "-39.5008, -43.3347, 41.3323, 0.29", "-39.8002, -43.7813, 41.631, 0.88", "-40.1079, -44.2505, 41.8889, 1.25", "-40.4425, -44.7571, 42.1401, 1.33", "-41.3424, -46.0859, 42.7818, 0.22", "-41.7395, -46.675, 43.0631, 0.74", "-42.1159, -47.2382, 43.3344, 1.25", "-42.7039, -48.2194, 43.7926, 0.44", "-43.0135, -48.9695, 44.1467, 0.22", "-43.1187, -49.4247, 44.3541, 0.22", "-43.1647, -50.073, 44.6176, 0.96", "-43.1666, -50.489, 44.7813, 1.55", "-43.1412, -51.3338, 45.1128, 1.33", "-43.0622, -53.2585, 45.901, 0.15", "-43.0602, -53.7222, 46.0871, 0.37", "-43.1054, -54.5846, 46.4438, 0.15", "-43.2054, -55.3077, 46.7744, 0.15", "-43.3531, -55.9629, 47.1055, 0.52", "-43.5715, -56.6594, 47.4858, 1.18", "-43.9115, -57.4937, 47.9763, 2.06", "-44.3724, -58.5531, 48.63, 0.96", "-44.8676, -59.6391, 49.3233, 0.22", "-45.2384, -60.4092, 49.8125, 0.22", "-45.6924, -61.3149, 50.3997, 0.22", "-45.9878, -61.8962, 50.7811, 0.22", "-46.4325, -62.758, 51.3782, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "204.799, -155.297, 15.0215, 0.15", "211.267, -161.476, 15.2748, 0.15", "216.951, -168.387, 15.2718, 0.15", "223.04, -174.94, 15.0325, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "204.799, -155.297, 15.0215, 0.59", "212.712, -162.89, 16.1077, 0.15", "219.795, -171.11, 18.0313, 0.15", "225.694, -180.416, 17.867, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "58.1558, 89.2436, -19.8533, 0.15", "64.332, 97.65, -25.2603, 0.15", "68.1502, 107.304, -30.7617, 0.15", "69.366, 117.44, -36.5773, 0.15", "69.0993, 127.974, -41.7763, 0.15", "67.0266, 137.963, -47.6052, 0.15", "66.4049, 147.748, -54.0781, 0.15", "66.4199, 157.776, -60.2021, 0.15", "66.2854, 167.764, -66.3876, 0.15", "66.9189, 178.573, -70.95, 0.15", "66.0933, 190.101, -73.0676, 0.15", "67.6431, 201.747, -73.2102, 0.15", "70.6684, 213.097, -72.9431, 0.15", "72.6646, 224.4, -70.4335, 0.15", "75.7285, 235.357, -67.4998, 0.15", "79.6758, 246.248, -65.5355, 0.15", "81.3038, 257.796, -64.1055, 0.15", "82.4157, 269.486, -63.7313, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "58.1558, 89.2436, -19.8533, 0.59", "63.7304, 93.946, -18.3823, 0.15", "68.916, 98.8552, -16.2933, 0.15", "74.6161, 102.644, -13.3772, 0.15", "79.3789, 106.956, -9.62515, 0.15", "84.6729, 110.357, -5.65496, 0.15", "89.5807, 114.205, -1.59824, 0.15", "93.9313, 118.365, 2.77436, 0.15", "99.4796, 122.237, 5.86883, 0.15", "104.986, 126.045, 9.11522, 0.15", "109.961, 130.558, 12.3145, 0.15", "114.134, 135.778, 15.5846, 0.15", "119.355, 139.85, 18.9768, 0.15", "125.436, 142.255, 22.5252, 0.15", "131.917, 144.155, 25.646, 0.15", "138.471, 146.323, 28.4228, 0.15", "144.894, 149.668, 30.1258, 0.15", "151.727, 152.563, 30.661, 0.15", "158.229, 156.058, 31.5858, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "48.8608, 64.8624, -9.55579, 0.66", "49.706, 66.5707, -9.94794, 0.66", "50.1888, 67.4485, -10.1788, 0.66", "50.7826, 68.5003, -10.4667, 0.44", "51.2162, 69.2659, -10.6588, 0.37", "51.7851, 70.2867, -10.8775, 0.37", "52.289, 71.2022, -11.0246, 0.37", "52.5467, 71.6398, -11.0757, 0.59", "52.9935, 72.4537, -11.1388, 1.11", "53.617, 73.7904, -11.1943, 0.37", "54.0388, 74.8753, -11.1362, 0.59", "54.4799, 76.2213, -10.9606, 0.37", "54.8982, 77.556, -10.7139, 0.44", "55.1416, 78.2843, -10.5597, 0.22", "55.3976, 78.9333, -10.4111, 0.22", "56.1928, 80.6219, -10.0213, 0.22", "56.7057, 81.5011, -9.84091, 0.22", "57.0314, 81.9437, -9.77141, 0.44", "57.6178, 82.5826, -9.7151, 0.66", "58.5708, 83.4526, -9.72452, 0.22", "59.0015, 83.7966, -9.76571, 0.22", "59.5707, 84.2067, -9.85462, 0.66", "60.0583, 84.5427, -9.91946, 1.03", "61.1723, 85.3175, -10.0551, 0.22", "62.1189, 86.0103, -10.1656, 0.66", "62.6947, 86.4566, -10.2217, 0.81", "63.9938, 87.4849, -10.3319, 1.03", "64.9855, 88.2747, -10.4044, 0.74", "65.9663, 89.0482, -10.4601, 0.37", "66.6876, 89.5818, -10.4939, 0.37", "67.2994, 90.0235, -10.5227, 0.29", "67.9382, 90.4779, -10.5567, 0.29", "68.4695, 90.8546, -10.5953, 0.66", "69.253, 91.3984, -10.6386, 1.25", "70.6533, 92.3467, -10.7134, 0.29", "71.08, 92.636, -10.7414, 0.29", "71.969, 93.2744, -10.8179, 0.88", "72.8172, 93.9376, -10.9015, 0.52", "73.506, 94.5157, -10.9801, 1.11", "74.4514, 95.3571, -11.1047, 0.66", "75.3422, 96.1794, -11.2118, 0.29", "75.9899, 96.7536, -11.2852, 0.59", "77.1598, 97.7094, -11.414, 0.22", "77.7108, 98.1153, -11.4713, 0.59", "78.4798, 98.6368, -11.5531, 1.18", "79.4435, 99.229, -11.6406, 0.22", "80.0917, 99.6014, -11.6943, 0.22", "80.6368, 99.9104, -11.7399, 0.22", "81.2276, 100.267, -11.7748, 0.22", "81.6221, 100.562, -11.7964, 0.22", "82.0677, 100.992, -11.8252, 0.37", "82.7176, 101.787, -11.8681, 0.37", "83.1387, 102.383, -11.8857, 0.22", "83.6125, 103.121, -11.8862, 0.52", "84.2448, 104.138, -11.8458, 0.52", "84.6778, 104.802, -11.7979, 0.96", "85.1278, 105.42, -11.7353, 1.77", "85.6463, 106.056, -11.6572, 1.77", "86.3933, 106.923, -11.5516, 0.22", "86.9332, 107.526, -11.4883, 0.22", "87.4606, 108.065, -11.4266, 0.22", "88.0005, 108.593, -11.3774, 0.22", "88.5013, 109.07, -11.3604, 0.22", "89.0918, 109.664, -11.3719, 0.22", "89.7066, 110.323, -11.4301, 0.22", "90.0192, 110.684, -11.4699, 0.66", "90.481, 111.235, -11.5291, 0.81", "91.1622, 112.057, -11.5958, 0.22", "91.7075, 112.686, -11.6241, 0.22", "92.1674, 113.24, -11.631, 0.74", "92.7082, 113.976, -11.6271, 0.88", "93.013, 114.446, -11.6148, 1.11", "93.6856, 115.625, -11.54, 1.11", "94.2356, 116.741, -11.4422, 0.37", "94.8127, 118.005, -11.2949, 0.22", "95.1548, 118.802, -11.1749, 0.29", "95.4627, 119.53, -11.0371, 0.29", "95.7928, 120.261, -10.8677, 0.37", "96.1741, 120.909, -10.6728, 0.37", "96.5352, 121.318, -10.5006, 0.22", "97.0206, 121.687, -10.2981, 0.22", "97.7578, 122.138, -10.0143, 0.22", "98.4876, 122.526, -9.76443, 0.29", "99.5743, 123.073, -9.41204, 0.22", "100.224, 123.416, -9.2101, 1.4", "100.907, 123.832, -8.99568, 2.21", "101.378, 124.195, -8.8255, 1.7", "101.973, 124.768, -8.55004, 0.96", "102.637, 125.487, -8.15277, 0.96", "103.015, 125.903, -7.88841, 1.47", "103.423, 126.325, -7.59341, 1.47", "104.244, 127.117, -7.00318, 0.22", "104.775, 127.605, -6.64902, 0.22", "105.336, 128.129, -6.30627, 0.22", "105.895, 128.655, -6.02283, 0.22", "106.378, 129.099, -5.82079, 0.22", "106.745, 129.443, -5.71745, 0.88", "107.306, 129.974, -5.62451, 1.99", "108.104, 130.754, -5.56608, 1.55", "109.042, 131.729, -5.56456, 0.22", "109.724, 132.456, -5.58155, 0.22", "110.641, 133.393, -5.62137, 0.29", "111.212, 133.951, -5.65568, 0.59", "112.114, 134.751, -5.75903, 0.96", "113.179, 135.592, -5.93284, 0.15", "114.082, 136.242, -6.0941, 1.18", "115.248, 137.034, -6.30865, 1.18", "116.243, 137.678, -6.48883, 1.4", "117.683, 138.568, -6.74779, 0.22", "118.337, 138.973, -6.86843, 0.37", "119.028, 139.424, -6.98591, 1.03", "119.339, 139.65, -7.03089, 0.88", "119.772, 139.993, -7.06367, 0.74", "120.38, 140.489, -7.06577, 0.96", "121.21, 141.274, -6.99028, 0.22", "121.953, 142.021, -6.92684, 0.96", "122.349, 142.409, -6.91204, 0.74", "123.047, 143.047, -6.88145, 0.22", "123.743, 143.659, -6.84847, 0.29", "124.779, 144.544, -6.80406, 0.29", "125.499, 145.128, -6.79363, 0.29", "126.625, 146.021, -6.82819, 0.22", "127.185, 146.469, -6.86212, 0.66", "127.647, 146.863, -6.89804, 1.55", "127.94, 147.108, -6.92747, 1.55", "129.035, 147.982, -7.07359, 0.15", "129.889, 148.704, -7.20063, 0.15", "130.612, 149.364, -7.32726, 0.15", "131.218, 149.949, -7.47562, 0.15", "131.768, 150.513, -7.62514, 0.15", "132.194, 150.993, -7.73394, 0.88", "132.716, 151.635, -7.86146, 1.18", "133.334, 152.467, -8.00714, 1.18", "134.222, 153.674, -8.21291, 0.22", "135.169, 154.921, -8.42209, 0.22", "135.753, 155.729, -8.54795, 1.18", "136.033, 156.121, -8.60358, 1.92", "136.493, 156.778, -8.67913, 1.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "48.8608, 64.8624, -9.55579, 0.44", "49.6816, 65.1382, -9.59454, 0.44", "50.5566, 65.4399, -9.62554, 0.44", "50.9946, 65.5667, -9.6281, 0.96", "51.9793, 65.793, -9.60551, 1.7", "52.8541, 65.9731, -9.57744, 1.99", "54.1698, 66.2176, -9.54221, 1.11", "55.0571, 66.3562, -9.54162, 0.37", "55.8761, 66.4666, -9.58663, 0.37", "56.8805, 66.592, -9.6918, 0.37", "57.5098, 66.6746, -9.80919, 0.37", "58.1071, 66.7577, -9.96264, 0.44", "58.9727, 66.8744, -10.2419, 0.96", "60.0589, 67.0192, -10.6537, 1.62", "61.1416, 67.1874, -11.0596, 1.18", "62.5832, 67.4415, -11.5527, 0.29", "63.3333, 67.5724, -11.7611, 0.44", "63.8969, 67.6701, -11.8736, 0.59", "64.7799, 67.8128, -11.9891, 0.29", "65.9741, 68.0172, -12.0718, 0.29", "67.3423, 68.2916, -12.1059, 0.59", "68.2789, 68.5466, -12.1059, 1.03", "69.397, 68.9434, -12.1027, 1.7", "70.4515, 69.3878, -12.1012, 1.7", "71.7183, 69.9451, -12.0979, 0.96", "72.4804, 70.2652, -12.1135, 1.33", "73.9131, 70.851, -12.1514, 1.62", "75.0536, 71.3174, -12.2102, 0.52", "75.9346, 71.6772, -12.2684, 0.22", "76.8779, 72.0639, -12.3446, 0.22", "78.069, 72.5343, -12.4784, 0.22", "78.9742, 72.9152, -12.6163, 0.74", "79.79, 73.3105, -12.7773, 1.33", "80.5012, 73.7484, -12.9581, 1.77", "81.541, 74.5443, -13.2757, 0.44", "82.4874, 75.4181, -13.6005, 0.22", "83.2295, 76.1702, -13.8641, 0.66", "83.8148, 76.747, -14.0681, 0.29", "84.3307, 77.2189, -14.2339, 0.29", "84.6624, 77.4737, -14.3265, 0.22", "85.1226, 77.7672, -14.4244, 0.22", "85.8107, 78.132, -14.5283, 0.52", "86.6535, 78.486, -14.6348, 0.88", "87.3983, 78.74, -14.7394, 0.88", "88.2563, 79.0165, -14.8726, 0.22", "89.0218, 79.2877, -14.9877, 0.22", "89.3999, 79.4359, -15.0451, 0.52", "90.074, 79.7181, -15.1473, 1.4", "90.9809, 80.0821, -15.3001, 1.18", "92.3787, 80.6077, -15.5581, 0.22", "93.3916, 80.9791, -15.787, 0.59", "94.1409, 81.2469, -15.9649, 0.22", "94.9908, 81.577, -16.1837, 0.88", "96.0713, 82.0655, -16.484, 1.55", "96.4785, 82.2822, -16.6133, 1.55", "97.8367, 83.1233, -17.1317, 0.88", "98.4724, 83.561, -17.4079, 0.44", "99.0504, 83.9907, -17.6693, 0.22", "99.6354, 84.4146, -17.9329, 0.22", "100.251, 84.8509, -18.2046, 0.37", "100.927, 85.2967, -18.4904, 1.11", "101.806, 85.8299, -18.8352, 1.18", "102.625, 86.3137, -19.1405, 0.29", "103.758, 86.9613, -19.5383, 0.22", "104.382, 87.3106, -19.7353, 0.22", "105.021, 87.6813, -19.9072, 1.11", "105.477, 87.9694, -20.0027, 1.18", "106.4, 88.6286, -20.1306, 0.29", "107.26, 89.2495, -20.1839, 0.29", "107.804, 89.6239, -20.1849, 1.03", "108.54, 90.061, -20.1538, 1.92", "109.06, 90.3268, -20.1435, 1.92", "110.736, 91.0623, -20.177, 0.15", "111.618, 91.3816, -20.2214, 0.15", "112.141, 91.5587, -20.2517, 0.37", "112.883, 91.8134, -20.304, 1.11", "114.132, 92.2473, -20.3918, 1.47", "115.346, 92.6438, -20.479, 0.44", "116.627, 93.0299, -20.5708, 0.22", "117.645, 93.3218, -20.6393, 0.74", "118.459, 93.5135, -20.6742, 0.88", "119.862, 93.6758, -20.7044, 0.22", "120.517, 93.6522, -20.6941, 0.22", "121.16, 93.5171, -20.6822, 0.44", "121.789, 93.3034, -20.6737, 0.81", "122.554, 92.9897, -20.6661, 1.03", "123.797, 92.4859, -20.6583, 0.81", "124.808, 92.1111, -20.6399, 0.22", "125.531, 91.9072, -20.6294, 0.22", "126.136, 91.819, -20.6355, 0.22", "127.311, 91.8197, -20.6752, 0.37", "128.606, 91.9946, -20.753, 0.22", "129.08, 92.1189, -20.8027, 0.96", "129.934, 92.4243, -20.9447, 1.84", "131.553, 93.125, -21.3281, 0.22", "132.301, 93.5128, -21.5663, 0.22", "132.604, 93.715, -21.6919, 0.22", "133.143, 94.1806, -21.9566, 0.22", "133.636, 94.6881, -22.2185, 0.44", "134.304, 95.4265, -22.5563, 1.18", "134.884, 96.0492, -22.8107, 1.62", "135.477, 96.6276, -23.0223, 1.7", "136.422, 97.5362, -23.2842, 1.25", "137.653, 98.6578, -23.5398, 0.29", "138.436, 99.2743, -23.6619, 1.03", "139.139, 99.7424, -23.7629, 1.47", "140.493, 100.502, -23.9383, 0.22", "141.592, 101.026, -24.0822, 0.88", "142.427, 101.379, -24.1922, 0.44", "143.665, 101.897, -24.3699, 0.22", "144.551, 102.306, -24.5029, 0.22", "145.239, 102.663, -24.6079, 1.03", "146.052, 103.141, -24.7231, 1.47", "146.745, 103.622, -24.8258, 1.25", "147.775, 104.487, -25.0064, 0.52", "148.883, 105.553, -25.2369, 0.37", "149.459, 106.119, -25.38, 1.03", "149.793, 106.437, -25.4883, 1.4", "150.828, 107.369, -25.8861, 0.96", "151.537, 107.927, -26.2001, 0.81", "152.611, 108.669, -26.7149, 0.22", "153.277, 109.061, -27.047, 0.22", "153.85, 109.355, -27.3089, 0.74", "154.283, 109.567, -27.4849, 0.81", "155.116, 110.002, -27.7768, 0.22", "155.522, 110.254, -27.9068, 0.22", "156.116, 110.678, -28.1128, 0.88", "157.018, 111.409, -28.4342, 1.33", "157.741, 112.078, -28.7249, 1.7", "158.634, 113.009, -29.1222, 1.47", "159.583, 114.116, -29.5874, 0.22", "160.141, 114.818, -29.88, 0.22", "160.758, 115.701, -30.2469, 0.29", "161.141, 116.394, -30.5195, 0.15", "161.369, 116.934, -30.7138, 0.15", "161.619, 117.756, -30.9779, 0.59", "161.813, 118.56, -31.2159, 0.37", "162.064, 119.64, -31.5582, 0.22", "162.345, 120.781, -31.9687, 0.22", "162.505, 121.336, -32.1875, 1.11", "162.855, 122.461, -32.6826, 0.22", "163.124, 123.289, -33.0872, 0.07", "163.364, 124.079, -33.4723, 0.07", "163.506, 124.567, -33.6852, 0.88", "163.605, 124.976, -33.8281, 1.11", "163.726, 125.858, -34.0213, 0.81", "163.766, 126.818, -34.0912, 0.37", "163.756, 128.194, -34.0329, 0.15", "163.724, 129.348, -33.8734, 0.15", "163.681, 130.35, -33.6501, 0.15", "163.654, 131.287, -33.3902, 0.59", "163.618, 132.633, -32.9397, 0.29", "163.593, 133.353, -32.6535, 0.66", "163.574, 134.184, -32.278, 1.47", "163.551, 135.479, -31.6519, 0.22", "163.549, 136.407, -31.1985, 0.15", "163.59, 137.401, -30.7154, 0.15", "163.638, 138.099, -30.3794, 0.44", "163.702, 138.745, -30.0951, 0.44", "163.834, 139.727, -29.6869, 0.22", "163.894, 140.163, -29.5237, 0.15", "163.942, 141.078, -29.1982, 0.15", "163.936, 141.435, -29.0848, 0.15", "163.86, 141.972, -28.9303, 0.44", "163.762, 142.385, -28.8113, 0.44", "163.455, 143.59, -28.4358, 0.15", "163.27, 144.442, -28.1447, 0.22", "163.159, 145.02, -27.9384, 0.29", "163.096, 145.967, -27.608, 0.29", "163.152, 146.707, -27.3789, 0.74", "163.351, 147.592, -27.147, 0.66", "163.631, 148.372, -26.9834, 1.55", "163.815, 148.794, -26.9211, 1.55", "164.479, 150.096, -26.8244, 0.15", "165.013, 151.019, -26.8063, 0.22", "165.544, 151.894, -26.824, 0.22", "165.892, 152.443, -26.856, 0.22", "166.388, 153.172, -26.9214, 0.37", "167.399, 154.572, -27.0792, 0.22", "168.288, 155.808, -27.2129, 0.15", "168.69, 156.388, -27.2526, 1.18", "169.155, 157.11, -27.2749, 2.21", "169.318, 157.381, -27.2751, 2.21", "170.12, 158.957, -27.2165, 0.22", "170.59, 160.179, -27.1309, 0.22", "170.98, 161.533, -27.0381, 0.22", "171.085, 161.99, -27.0084, 0.66", "171.146, 162.327, -26.9946, 1.25", "171.32, 163.463, -26.9888, 1.62", "171.483, 164.846, -27.0429, 0.22", "171.646, 166.247, -27.2006, 0.22", "171.703, 166.789, -27.2915, 0.37", "171.8, 167.596, -27.4515, 0.88", "171.871, 168.218, -27.5831, 0.88", "171.939, 169.112, -27.8011, 0.22", "171.95, 170.135, -28.0556, 0.15", "171.908, 170.943, -28.2283, 0.15", "171.86, 171.335, -28.3645, 0.52", "171.73, 172.164, -28.7151, 0.88", "171.565, 173.118, -29.16, 0.22", "171.452, 173.778, -29.508, 0.22", "171.157, 175.376, -30.3598, 0.15", "170.739, 178.109, -31.7763, 0.22", "170.643, 178.963, -32.2047, 0.44", "170.596, 179.867, -32.6298, 0.22", "170.609, 180.833, -33.0366, 0.29", "170.661, 181.614, -33.3183, 0.22", "170.807, 182.962, -33.6874, 0.15", "170.902, 183.577, -33.7441, 0.15", "171.085, 184.665, -33.8358, 0.15", "171.201, 185.25, -33.8734, 0.29", "171.338, 185.828, -33.8821, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-13.4986, 52.4179, 44.9506, 0.07", "-13.6979, 53.0289, 44.999, 0.07", "-13.8654, 53.597, 45.076, 0.07", "-14.1225, 54.6805, 45.2997, 0.07", "-14.2942, 55.5925, 45.496, 0.29", "-14.3958, 56.3098, 45.659, 0.07", "-14.498, 57.4729, 45.9269, 0.07", "-14.5088, 58.048, 46.0749, 0.52", "-14.4803, 59.4922, 46.4735, 1.03", "-14.4199, 61.0555, 46.9476, 0.15", "-14.4001, 61.6904, 47.1438, 0.15", "-14.3949, 62.4845, 47.3775, 0.15", "-14.4073, 63.2105, 47.5584, 0.15", "-14.4615, 63.8629, 47.7178, 0.07", "-14.541, 64.3731, 47.8479, 0.07", "-14.6495, 65.0286, 48.029, 0.44", "-14.7099, 65.4034, 48.1435, 0.74", "-14.7539, 65.8182, 48.2911, 0.74", "-14.7899, 67.1674, 48.8306, 0.15", "-14.7603, 67.9832, 49.1757, 0.15", "-14.6861, 68.9816, 49.6021, 0.37", "-14.5948, 69.9125, 50.0035, 1.7", "-14.4914, 70.9407, 50.4252, 1.03", "-14.3339, 72.3242, 50.9753, 0.15", "-14.1681, 73.5317, 51.4619, 0.15", "-14.0982, 74.026, 51.6565, 0.66", "-14.0032, 74.6511, 51.9098, 1.03", "-13.8067, 75.7015, 52.3208, 0.15", "-13.531, 76.9601, 52.809, 0.15", "-13.3049, 77.8069, 53.1695, 0.15", "-13.0967, 78.4838, 53.4656, 0.29", "-12.8699, 79.1992, 53.7704, 0.29", "-12.6898, 79.8755, 54.0297, 0.74", "-12.5382, 80.6832, 54.3199, 0.81", "-12.4786, 81.243, 54.5023, 0.81", "-12.4355, 82.8007, 54.9603, 0.15", "-12.4964, 83.5982, 55.2108, 0.74", "-12.8278, 85.3339, 55.7739, 0.15", "-13.1189, 86.1778, 56.0692, 0.15", "-13.5486, 86.9207, 56.3352, 0.15", "-13.9617, 87.4432, 56.522, 0.29", "-14.7989, 88.2436, 56.8352, 0.15", "-15.0851, 88.47, 56.9255, 0.52", "-16.0826, 89.1064, 57.2293, 1.4", "-17.9419, 90.151, 57.7876, 0.15", "-18.4514, 90.3896, 57.9382, 0.15", "-18.7056, 90.4849, 58.024, 0.15", "-19.8234, 90.7876, 58.4512, 0.81", "-21.0439, 90.9809, 58.969, 0.15", "-21.4714, 90.9911, 59.1688, 0.15", "-22.0929, 90.9506, 59.4634, 1.18", "-23.8619, 90.78, 60.2849, 0.07", "-25.0191, 90.6398, 60.7933, 0.07", "-25.5563, 90.572, 61.0076, 0.59", "-26.1105, 90.5259, 61.1974, 1.77", "-27.9705, 90.4171, 61.7648, 0.07", "-28.8191, 90.3801, 62.0045, 0.07", "-29.3743, 90.3514, 62.1341, 0.37", "-29.928, 90.3295, 62.2391, 0.52", "-31.1926, 90.2634, 62.4785, 0.07", "-32.3917, 90.2025, 62.6803, 0.07", "-32.8814, 90.1651, 62.7469, 0.07", "-33.284, 90.123, 62.8003, 0.29", "-34.2024, 89.9801, 62.9328, 0.66", "-35.2755, 89.7248, 63.1106, 0.07", "-36.066, 89.4886, 63.2445, 0.29", "-36.7736, 89.266, 63.369, 0.88", "-38.2727, 88.8221, 63.6789, 0.15", "-39.0421, 88.6037, 63.8664, 0.52", "-40.658, 88.1529, 64.2893, 0.07", "-41.1808, 88.0152, 64.426, 0.59", "-41.895, 87.8293, 64.6204, 1.47", "-43.5832, 87.4141, 65.0927, 0.07", "-44.2212, 87.2615, 65.2786, 0.07", "-45.1913, 87.0312, 65.5673, 0.07", "-45.489, 86.9614, 65.6524, 0.37", "-46.1152, 86.8207, 65.8105, 0.81", "-47.2888, 86.5761, 66.0709, 0.07", "-48.2157, 86.4005, 66.2304, 0.07", "-48.689, 86.3504, 66.2944, 0.44", "-49.1827, 86.3341, 66.3548, 0.88", "-50.5433, 86.3793, 66.4819, 0.15", "-51.2688, 86.4506, 66.5239, 0.37", "-51.6682, 86.5085, 66.5293, 0.37", "-53.3048, 86.7412, 66.4868, 0.15", "-53.8406, 86.8107, 66.4654, 0.15", "-54.6474, 86.9227, 66.4189, 0.37", "-56.095, 87.1112, 66.3005, 0.07", "-57.0237, 87.2413, 66.2153, 0.29", "-57.8655, 87.369, 66.1419, 0.07", "-58.7, 87.5096, 66.0697, 0.07", "-60.4856, 87.8302, 65.9106, 0.07", "-62.855, 88.2726, 65.7024, 0.07", "-63.618, 88.4276, 65.6358, 0.07", "-64.7137, 88.6674, 65.5533, 0.07", "-65.3719, 88.8257, 65.5159, 0.59", "-66.3645, 89.0596, 65.4629, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-13.4986, 52.4179, 44.9506, 0.37", "-13.3924, 51.2087, 46.0684, 0.37", "-13.2384, 50.4237, 46.7812, 0.37", "-13.0838, 49.8994, 47.2643, 0.59", "-12.7398, 48.9905, 48.0245, 0.22", "-12.4633, 48.3064, 48.5355, 0.22", "-12.2768, 47.7818, 48.8712, 0.15", "-12.112, 47.2625, 49.2086, 0.15", "-11.8932, 46.5267, 49.6197, 0.15", "-11.7234, 45.8034, 49.9663, 0.59", "-11.6535, 45.2439, 50.1754, 0.88", "-11.6133, 43.7786, 50.6235, 0.15", "-11.6888, 42.7079, 50.9523, 0.15", "-11.7714, 42.1086, 51.1186, 0.44", "-11.8853, 41.5357, 51.2617, 0.81", "-12.0927, 40.6818, 51.4632, 0.07", "-12.3603, 39.6377, 51.676, 0.22", "-12.643, 38.543, 51.861, 0.22", "-13.0272, 37.0058, 52.0732, 0.07", "-13.3532, 35.74, 52.2207, 0.07", "-13.6522, 34.5382, 52.3488, 0.07", "-13.8026, 33.861, 52.405, 0.29", "-14.1503, 32.2146, 52.5245, 0.07", "-14.3011, 31.443, 52.5633, 0.88", "-14.4886, 30.4708, 52.6181, 1.25", "-14.5967, 29.8351, 52.6534, 1.25", "-14.9095, 27.7725, 52.7631, 0.07", "-15.1087, 26.4081, 52.826, 0.07", "-15.213, 25.6395, 52.8518, 0.07", "-15.2743, 25.1882, 52.8643, 0.52", "-15.4424, 23.9819, 52.883, 0.66", "-15.5438, 23.361, 52.8776, 0.22", "-15.6866, 22.548, 52.8484, 0.52", "-15.8177, 21.8713, 52.8, 0.29", "-16.1002, 20.6083, 52.6973, 0.07", "-16.3788, 19.5223, 52.5972, 0.07", "-16.6075, 18.7319, 52.5262, 0.22", "-16.782, 18.1871, 52.4777, 0.22", "-17.2836, 16.679, 52.3436, 0.07", "-17.4221, 16.2863, 52.3083, 0.37", "-17.5905, 15.8316, 52.2693, 0.59", "-18.0017, 14.7741, 52.1848, 0.07", "-18.3463, 13.9185, 52.1247, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-46.4325, -62.758, 51.3782, 0.15", "-47.7455, -63.1496, 51.2648, 0.15", "-49.0267, -63.5192, 51.126, 0.15", "-50.1931, -63.8512, 50.9683, 0.15", "-51.3871, -64.1887, 50.7929, 0.37", "-52.703, -64.5541, 50.5859, 0.15", "-54.0255, -64.9111, 50.3675, 0.07", "-54.6938, -65.0903, 50.2603, 0.22", "-56.6709, -65.6347, 49.8512, 0.15", "-56.8096, -65.6691, 49.8178, 0.59", "-57.6915, -65.8725, 49.6029, 1.11", "-58.0902, -65.9654, 49.5059, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-46.4325, -62.758, 51.3782, 0.59", "-46.6955, -63.6773, 51.8101, 0.59", "-46.9032, -64.3446, 52.1288, 0.96", "-47.1634, -65.3773, 52.6442, 1.47", "-47.2856, -66.0655, 52.9927, 1.47", "-47.4294, -67.2937, 53.6313, 0.22", "-47.4999, -67.7533, 53.8742, 0.15", "-47.6152, -68.1875, 54.1129, 0.15", "-47.8583, -68.9211, 54.5386, 0.15", "-48.0872, -69.5416, 54.9077, 0.37", "-48.3629, -70.1607, 55.321, 0.37", "-48.9416, -71.2338, 56.1545, 0.22", "-49.3064, -71.8335, 56.6867, 0.22", "-49.529, -72.1844, 57.0167, 0.96", "-50.0984, -73.0482, 57.8856, 2.06", "-50.6452, -73.8656, 58.7671, 1.11", "-51.3587, -74.9422, 59.9833, 0.22", "-51.8674, -75.7645, 60.9491, 0.22", "-52.0972, -76.1321, 61.3708, 0.22", "-52.2896, -76.4272, 61.698, 0.22", "-52.4705, -76.682, 61.9744, 0.22", "-52.7657, -77.0708, 62.3261, 0.22", "-53.1407, -77.5123, 62.6423, 0.22", "-53.7579, -78.2008, 63.0742, 0.22", "-54.2787, -78.8148, 63.4301, 0.22", "-54.5991, -79.2323, 63.6559, 0.66", "-55.1981, -80.1085, 64.1259, 1.11", "-56.0347, -81.4194, 64.8416, 0.29", "-56.7566, -82.5632, 65.4569, 0.22", "-57.3629, -83.5174, 65.9727, 0.22", "-57.6525, -83.9577, 66.1922, 0.29", "-58.3816, -85.0584, 66.7108, 0.22", "-58.712, -85.556, 66.9408, 0.96", "-59.2803, -86.4025, 67.3194, 1.84", "-60.2471, -87.7948, 67.9296, 0.29", "-61.0717, -88.8725, 68.4226, 0.22", "-61.6308, -89.5647, 68.7602, 0.22", "-61.9825, -89.9992, 68.9816, 0.22", "-62.294, -90.43, 69.2145, 0.37", "-62.7418, -91.1856, 69.6403, 0.52", "-63.1495, -92.1139, 70.1267, 0.29", "-63.434, -92.9468, 70.5622, 0.29", "-63.5752, -93.4479, 70.7975, 0.29", "-63.8172, -94.4426, 71.248, 0.44", "-64.0472, -95.6119, 71.7829, 0.52", "-64.2997, -97.2553, 72.5255, 0.15", "-64.4034, -98.0803, 72.8982, 0.59", "-64.6023, -99.4223, 73.5233, 1.7", "-64.9213, -101.051, 74.3208, 0.15", "-65.1164, -101.804, 74.7257, 0.44", "-65.2589, -102.312, 75.0229, 0.44", "-65.4841, -103.022, 75.4799, 0.07", "-65.7011, -103.634, 75.8814, 0.07", "-65.9088, -104.094, 76.184, 0.07", "-66.2468, -104.719, 76.5732, 0.29", "-66.8608, -105.756, 77.1773, 0.52", "-67.3121, -106.494, 77.6078, 0.22", "-67.7001, -107.114, 77.9713, 0.22", "-68.1398, -107.792, 78.3796, 0.37", "-68.5895, -108.431, 78.7964, 0.74", "-69.305, -109.322, 79.4164, 1.33", "-70.1053, -110.178, 80.0394, 0.22", "-70.7191, -110.782, 80.478, 0.15", "-71.2021, -111.231, 80.8082, 0.29", "-71.8715, -111.837, 81.2688, 0.15", "-72.4143, -112.31, 81.6188, 0.59", "-73.004, -112.775, 81.981, 0.74", "-73.8869, -113.414, 82.4596, 0.07", "-74.7208, -113.993, 82.8961, 0.15", "-75.316, -114.4, 83.2022, 0.15", "-75.803, -114.736, 83.4472, 0.15", "-76.3557, -115.12, 83.7022, 0.15", "-77.1316, -115.665, 84.0282, 0.29", "-77.766, -116.097, 84.2557, 0.74", "-78.7083, -116.747, 84.5458, 1.03", "-79.6332, -117.407, 84.8052, 0.29", "-80.9292, -118.346, 85.1838, 0.22", "-81.7243, -118.952, 85.4076, 0.88", "-82.6233, -119.619, 85.6585, 1.33", "-83.4166, -120.189, 85.8652, 1.47", "-84.9397, -121.231, 86.2442, 0.22", "-85.739, -121.746, 86.43, 0.22", "-86.6754, -122.33, 86.6579, 1.03", "-87.678, -122.938, 86.8935, 1.55", "-89.12, -123.822, 87.2409, 0.74", "-90.5323, -124.732, 87.6457, 0.22", "-91.2468, -125.247, 87.8811, 0.22", "-91.888, -125.748, 88.099, 0.22", "-92.6214, -126.367, 88.3815, 0.15", "-93.2745, -127.022, 88.6817, 0.37", "-94.0545, -127.964, 89.1399, 0.15", "-94.5561, -128.715, 89.5115, 0.15", "-95.1591, -129.75, 90.0599, 0.22", "-95.4143, -130.233, 90.3168, 0.15", "-95.7806, -130.981, 90.7324, 0.15", "-95.9815, -131.45, 91.0138, 0.74", "-96.1852, -132.019, 91.3836, 0.88", "-96.5183, -133.198, 92.2576, 0.15", "-96.6385, -133.647, 92.6051, 0.22", "-96.872, -134.165, 93.0113, 0.22", "-97.399, -134.983, 93.6625, 0.22", "-97.575, -135.207, 93.8436, 0.22", "-98.0212, -135.701, 94.238, 0.88", "-98.8094, -136.467, 94.7942, 1.84", "-100.09, -137.569, 95.517, 0.15", "-100.853, -138.219, 95.8699, 0.15", "-101.417, -138.707, 96.0656, 0.29", "-102.227, -139.451, 96.3673, 0.74", "-102.924, -140.137, 96.6629, 1.11", "-103.56, -140.825, 96.9896, 0.52", "-104.427, -141.805, 97.4884, 0.22", "-105.843, -143.264, 98.2858, 0.29", "-107.006, -144.361, 98.9593, 0.15", "-107.665, -144.938, 99.3605, 0.37", "-108.542, -145.634, 99.9135, 1.18", "-109.763, -146.533, 100.755, 0.44", "-110.869, -147.23, 101.56, 0.29", "-111.667, -147.689, 102.172, 0.15", "-112.315, -148.039, 102.64, 0.88", "-113.274, -148.547, 103.335, 1.03", "-114.616, -149.222, 104.353, 0.22", "-115.876, -149.831, 105.428, 0.22", "-116.477, -150.109, 105.973, 0.59", "-117.18, -150.415, 106.614, 0.96", "-118.173, -150.776, 107.488, 0.37", "-119.519, -151.148, 108.626, 0.15", "-120.625, -151.339, 109.499, 0.59", "-121.302, -151.409, 110.014, 1.77", "-123.027, -151.512, 111.299, 0.22", "-124.114, -151.553, 112.119, 0.22", "-124.912, -151.576, 112.69, 0.37", "-125.705, -151.624, 113.212, 0.37", "-126.328, -151.693, 113.612, 0.37", "-127.162, -151.804, 114.174, 0.81", "-127.864, -151.942, 114.722, 0.81", "-128.907, -152.318, 115.721, 0.29", "-129.476, -152.614, 116.415, 0.29", "-129.797, -152.859, 117.027, 0.29", "-129.901, -152.971, 117.373, 0.29", "-130.167, -153.332, 118.806, 0.29", "-130.235, -153.47, 119.405, 0.44", "-130.339, -153.726, 120.519, 0.44", "-130.555, -154.089, 122.05, 0.81", "-130.861, -154.398, 123.362, 0.81", "-131.199, -154.653, 124.367, 0.81", "-131.468, -154.803, 124.935, 0.22", "-132.207, -155.15, 126.223, 0.22", "-133.166, -155.559, 127.604, 0.22", "-134.107, -155.959, 128.78, 0.81", "-135.028, -156.38, 129.83, 0.52", "-136.443, -157.114, 131.288, 0.22", "-137.067, -157.476, 131.86, 0.22", "-137.544, -157.796, 132.217, 0.52", "-138.397, -158.444, 132.66, 0.15", "-138.797, -158.78, 132.769, 0.59", "-139.829, -159.723, 132.857, 0.15", "-140.535, -160.455, 132.746, 0.37", "-141.3, -161.283, 132.528, 0.15", "-141.982, -161.986, 132.241, 0.37", "-142.416, -162.369, 131.958, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "136.493, 156.778, -8.67913, 0.96", "137.43, 157.721, -8.90138, 0.96", "138.073, 158.435, -9.05212, 1.25", "138.649, 159.148, -9.18512, 0.66", "138.999, 159.616, -9.26487, 0.22", "139.418, 160.191, -9.36007, 0.15", "139.688, 160.553, -9.42192, 0.37", "140.234, 161.326, -9.54601, 0.15", "140.631, 161.858, -9.63699, 0.37", "140.937, 162.23, -9.70848, 0.88", "141.308, 162.628, -9.8209, 0.88", "142.15, 163.428, -10.1838, 0.22", "142.73, 163.938, -10.4476, 0.22", "143.322, 164.39, -10.7341, 0.22", "143.731, 164.67, -10.9453, 0.22", "144.596, 165.221, -11.4354, 1.25", "145.48, 165.755, -12.0199, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "136.493, 156.778, -8.67913, 0.29", "136.693, 158.111, -8.37142, 0.29", "136.893, 158.762, -8.28262, 0.22", "137.1, 159.297, -8.24511, 0.66", "137.431, 160.088, -8.22481, 0.22", "137.773, 160.857, -8.22754, 0.15", "138.086, 161.576, -8.24051, 0.15", "138.501, 162.483, -8.31135, 0.15", "138.948, 163.438, -8.43313, 0.22", "139.364, 164.302, -8.57991, 0.29", "139.723, 165.018, -8.72613, 0.22", "140.123, 165.739, -8.90328, 0.29", "140.765, 166.688, -9.18373, 0.22", "141.391, 167.493, -9.45035, 0.66", "141.774, 167.951, -9.60754, 1.11", "142.253, 168.51, -9.80587, 1.18", "142.917, 169.292, -10.0935, 0.37", "143.639, 170.155, -10.4098, 0.37", "144.206, 170.924, -10.658, 0.22", "144.681, 171.775, -10.8591, 0.22", "144.96, 172.424, -10.9904, 0.22", "145.149, 172.972, -11.082, 0.59", "145.266, 173.375, -11.1278, 1.03", "145.503, 174.28, -11.1916, 1.18", "145.986, 175.991, -11.227, 0.44", "146.213, 176.723, -11.2263, 0.88", "146.477, 177.548, -11.1964, 1.7", "146.792, 178.503, -11.1323, 2.29", "147.083, 179.36, -11.057, 2.29", "147.311, 179.991, -10.9747, 1.99" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "147.311, 179.991, -10.9747, 0.22", "148.472, 182.03, -11.032, 0.22", "149.018, 182.988, -11.059, 0.22", "149.595, 184.001, -11.0874, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "147.311, 179.991, -10.9747, 0.29", "148.063, 180.527, -11.1167, 0.29", "148.562, 180.882, -11.2111, 0.29", "149.066, 181.241, -11.3062, 0.29", "149.491, 181.544, -11.3866, 0.52", "149.925, 181.853, -11.4686, 0.52", "150.643, 182.364, -11.6042, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_35", "dend_0", "axon_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "axon_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_35", "dend_35", "dend_35", "dend_35", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_BTC_2d87a29e8a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_35
create dend_47
public dend_47
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_10
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_58, dend_35, dend_0, axon_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, axon_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_58(0), soma_0(0.45000018730548563)
    connect dend_35(0), soma_0(0.45000018730548563)
    connect dend_0(0), soma_0(0.45000018730548563)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_20(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.16881, -12.804, 0.0, 3.44428 ) }
    soma_0 { pt3dadd( 1.99522, -11.5105, 0.0, 5.75363 ) }
    soma_0 { pt3dadd( 1.82164, -10.2169, 0.0, 7.75663 ) }
    soma_0 { pt3dadd( 1.64805, -8.92341, 0.0, 8.89598 ) }
    soma_0 { pt3dadd( 1.47447, -7.62987, 0.0, 9.91596 ) }
    soma_0 { pt3dadd( 1.30088, -6.33633, 0.0, 10.9547 ) }
    soma_0 { pt3dadd( 1.1273, -5.04279, 0.0, 11.8384 ) }
    soma_0 { pt3dadd( 0.953711, -3.74926, 0.0, 12.6846 ) }
    soma_0 { pt3dadd( 0.780126, -2.45572, 0.0, 13.1367 ) }
    soma_0 { pt3dadd( 0.606541, -1.16218, 0.0, 13.4162 ) }
    soma_0 { pt3dadd( 0.432956, 0.13136, 0.0, 13.3909 ) }
    soma_0 { pt3dadd( 0.25937, 1.4249, 0.0, 13.2383 ) }
    soma_0 { pt3dadd( 0.085785, 2.71844, 0.0, 12.8868 ) }
    soma_0 { pt3dadd( -0.0878002, 4.01197, 0.0, 12.8103 ) }
    soma_0 { pt3dadd( -0.261385, 5.30551, 0.0, 12.9125 ) }
    soma_0 { pt3dadd( -0.434971, 6.59905, 0.0, 12.4763 ) }
    soma_0 { pt3dadd( -0.608556, 7.89259, 0.0, 11.6777 ) }
    soma_0 { pt3dadd( -0.782141, 9.18613, 0.0, 10.5994 ) }
    soma_0 { pt3dadd( -0.955726, 10.4797, 0.0, 9.19908 ) }
    soma_0 { pt3dadd( -1.12931, 11.7732, 0.0, 7.03753 ) }
    soma_0 { pt3dadd( -1.3029, 13.0667, 0.0, 4.1381 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 21/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.21969, -12.5959, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.21969, -12.5959, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.52009, -13.5915, -4.64591, 1.84 ) }
    dend_58 { pt3dadd( 4.16086, -15.7152, -4.76517, 2.14 ) }
    dend_58 { pt3dadd( 4.57103, -17.0746, -4.84151, 1.92 ) }
    dend_58 { pt3dadd( 5.09257, -18.8031, -4.93858, 2.06 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 27/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.219697, -13.0559, -1.64, 2.43 ) }
    dend_35 { pt3dadd( 0.219697, -13.0559, -1.64, 2.43 ) }
    dend_35 { pt3dadd( -0.660271, -15.1518, -1.90411, 1.92 ) }
    dend_35 { pt3dadd( -1.39252, -16.8958, -2.12389, 2.14 ) }
    dend_35 { pt3dadd( -1.84585, -17.9756, -2.25995, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.5397, 12.5441, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.5397, 12.5441, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.766, 13.3923, -0.0513586, 2.36 ) }
    dend_0 { pt3dadd( 2.06806, 14.4416, -0.107674, 2.36 ) }
    dend_0 { pt3dadd( 2.56988, 16.1271, -0.188386, 2.29 ) }
    dend_0 { pt3dadd( 2.95612, 17.3766, -0.255706, 2.21 ) }
    dend_0 { pt3dadd( 3.3521, 18.6125, -0.325437, 2.29 ) }
    dend_0 { pt3dadd( 3.69969, 19.6771, -0.387671, 2.43 ) }
    dend_0 { pt3dadd( 4.09807, 20.8547, -0.461162, 2.36 ) }
    dend_0 { pt3dadd( 4.43274, 21.7754, -0.512616, 2.51 ) }
    dend_0 { pt3dadd( 4.79186, 22.6737, -0.563319, 3.17 ) }
    dend_0 { pt3dadd( 5.02508, 23.2265, -0.586348, 3.17 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 44/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.3029, 13.0667, 0.0, 0.475778 ) }
    axon_0 { pt3dadd( -3.29794, 27.9334, 0.0, 0.475778 ) }
    axon_0 { pt3dadd( -5.29297, 42.8002, 0.0, 0.475778 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 47/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 5.09257, -18.8031, -4.93858, 0.88 ) }
    dend_62 { pt3dadd( 4.29767, -18.6126, -5.90625, 0.88 ) }
    dend_62 { pt3dadd( 3.51369, -18.5257, -6.84023, 0.81 ) }
    dend_62 { pt3dadd( 2.73077, -18.5292, -7.794, 0.81 ) }
    dend_62 { pt3dadd( 1.8262, -18.6237, -8.92724, 0.96 ) }
    dend_62 { pt3dadd( 0.972074, -18.7963, -10.041, 1.4 ) }
    dend_62 { pt3dadd( 0.162099, -19.06, -11.1827, 1.77 ) }
    dend_62 { pt3dadd( -0.544663, -19.3593, -12.2373, 0.44 ) }
    dend_62 { pt3dadd( -1.15447, -19.7312, -13.1875, 0.44 ) }
    dend_62 { pt3dadd( -1.5031, -20.036, -13.7227, 0.44 ) }
    dend_62 { pt3dadd( -1.77666, -20.4257, -14.2008, 0.66 ) }
    dend_62 { pt3dadd( -2.06726, -21.215, -14.9643, 1.03 ) }
    dend_62 { pt3dadd( -7.67575, -21.3784, -25.0877, 1.03 ) }
    dend_62 { pt3dadd( -11.6737, -21.0735, -35.9453, 1.03 ) }
    dend_62 { pt3dadd( -13.1699, -19.3579, -47.2936, 1.03 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 62/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 5.09257, -18.8031, -4.93858, 1.11 ) }
    dend_59 { pt3dadd( 6.18004, -20.2342, -4.77876, 1.11 ) }
    dend_59 { pt3dadd( 7.13361, -21.5749, -4.55943, 1.25 ) }
    dend_59 { pt3dadd( 7.49889, -22.121, -4.44271, 1.7 ) }
    dend_59 { pt3dadd( 8.13559, -23.1228, -4.21276, 1.77 ) }
    dend_59 { pt3dadd( 9.22095, -24.8385, -3.81992, 1.33 ) }
    dend_59 { pt3dadd( 10.0599, -26.1754, -3.52832, 1.03 ) }
    dend_59 { pt3dadd( 10.6866, -27.2243, -3.25816, 1.03 ) }
    dend_59 { pt3dadd( 11.3107, -28.3114, -3.00884, 1.03 ) }
    dend_59 { pt3dadd( 11.8439, -29.2727, -2.84378, 1.33 ) }
    dend_59 { pt3dadd( 12.6241, -30.7499, -2.70156, 1.33 ) }
    dend_59 { pt3dadd( 13.3469, -32.1924, -2.70479, 0.74 ) }
    dend_59 { pt3dadd( 14.0668, -33.7158, -2.85087, 0.74 ) }
    dend_59 { pt3dadd( 14.8203, -35.2756, -3.06807, 0.88 ) }
    dend_59 { pt3dadd( 15.3892, -36.4445, -3.25469, 1.33 ) }
    dend_59 { pt3dadd( 15.8359, -37.3329, -3.3568, 2.06 ) }
    dend_59 { pt3dadd( 16.7738, -39.1829, -3.48447, 0.96 ) }
    dend_59 { pt3dadd( 17.5695, -40.6643, -3.49625, 0.74 ) }
    dend_59 { pt3dadd( 18.1777, -41.7391, -3.44697, 1.18 ) }
    dend_59 { pt3dadd( 18.5969, -42.4566, -3.34913, 1.55 ) }
    dend_59 { pt3dadd( 19.6865, -44.295, -3.04315, 0.88 ) }
    dend_59 { pt3dadd( 20.3352, -45.3997, -2.8978, 0.81 ) }
    dend_59 { pt3dadd( 21.2165, -46.9327, -2.81117, 0.88 ) }
    dend_59 { pt3dadd( 21.6981, -47.8123, -2.8432, 1.4 ) }
    dend_59 { pt3dadd( 22.1022, -48.6182, -2.95707, 1.4 ) }
    dend_59 { pt3dadd( 22.6866, -49.8888, -3.24508, 0.81 ) }
    dend_59 { pt3dadd( 23.226, -51.1469, -3.63593, 0.88 ) }
    dend_59 { pt3dadd( 23.6565, -52.1508, -3.98951, 0.52 ) }
    dend_59 { pt3dadd( 23.9125, -52.7253, -4.20815, 0.96 ) }
    dend_59 { pt3dadd( 24.3847, -53.6745, -4.53825, 1.92 ) }
    dend_59 { pt3dadd( 25.0356, -54.8724, -4.88252, 0.74 ) }
    dend_59 { pt3dadd( 25.6889, -55.9937, -5.15149, 0.74 ) }
    dend_59 { pt3dadd( 26.3659, -57.0594, -5.3548, 0.96 ) }
    dend_59 { pt3dadd( 27.052, -58.031, -5.53184, 1.55 ) }
    dend_59 { pt3dadd( 28.2992, -59.6203, -5.85375, 0.81 ) }
    dend_59 { pt3dadd( 29.3772, -60.8663, -6.12568, 0.81 ) }
    dend_59 { pt3dadd( 30.4172, -61.9875, -6.38651, 1.25 ) }
    dend_59 { pt3dadd( 31.448, -63.0646, -6.64009, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_59 { pt3dadd( 32.963, -64.6667, -6.95543, 0.81 ) }
    dend_59 { pt3dadd( 34.2487, -66.1018, -7.16572, 0.81 ) }
    dend_59 { pt3dadd( 34.9754, -66.9299, -7.26342, 1.18 ) }
    dend_59 { pt3dadd( 35.8127, -67.8337, -7.34446, 1.55 ) }
    dend_59 { pt3dadd( 36.7044, -68.7964, -7.38838, 1.55 ) }
    dend_59 { pt3dadd( 37.7765, -70.0439, -7.39837, 0.59 ) }
    dend_59 { pt3dadd( 38.7935, -71.3657, -7.29709, 0.81 ) }
    dend_59 { pt3dadd( 39.4388, -72.291, -7.15024, 1.33 ) }
    dend_59 { pt3dadd( 40.3952, -73.7374, -6.875, 0.37 ) }
    dend_59 { pt3dadd( 40.9026, -74.5751, -6.67299, 0.22 ) }
    dend_59 { pt3dadd( 47.3816, -83.5537, -7.09129, 0.22 ) }
    dend_59 { pt3dadd( 55.2818, -91.0844, -9.00028, 0.22 ) }
    dend_59 { pt3dadd( 63.6552, -98.3389, -8.8341, 0.22 ) }
    dend_59 { pt3dadd( 71.3013, -106.081, -6.74237, 0.22 ) }
    dend_59 { pt3dadd( 79.7418, -112.634, -3.81267, 0.22 ) }
    dend_59 { pt3dadd( 87.3327, -120.554, -2.25623, 0.22 ) }
    dend_59 { pt3dadd( 94.6202, -128.895, -2.52884, 0.22 ) }
    dend_59 { pt3dadd( 101.786, -137.184, -4.17827, 0.22 ) }
    dend_59 { pt3dadd( 109.226, -145.394, -4.08006, 0.22 ) }
    dend_59 { pt3dadd( 116.042, -154.121, -4.46567, 0.22 ) }
    dend_59 { pt3dadd( 122.237, -163.184, -5.97039, 0.22 ) }
    dend_59 { pt3dadd( 127.873, -172.144, -9.24309, 0.22 ) }
    dend_59 { pt3dadd( 134.876, -179.844, -13.0426, 0.22 ) }
    dend_59 { pt3dadd( 140.205, -187.922, -18.4396, 0.22 ) }
    dend_59 { pt3dadd( 146.185, -196.607, -21.8429, 0.22 ) }
    dend_59 { pt3dadd( 150.982, -206.398, -23.814, 0.22 ) }
    dend_59 { pt3dadd( 156.855, -215.791, -24.0063, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_35 (entry count 27/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.84585, -17.9756, -2.25995, 0.96 ) }
    dend_47 { pt3dadd( -3.74474, -19.1458, -2.06506, 0.96 ) }
    dend_47 { pt3dadd( -4.78407, -19.8207, -1.97219, 0.96 ) }
    dend_47 { pt3dadd( -5.84826, -20.5505, -1.89109, 1.25 ) }
    dend_47 { pt3dadd( -6.41013, -20.9627, -1.85555, 1.25 ) }
    dend_47 { pt3dadd( -7.44666, -21.7559, -1.81236, 0.96 ) }
    dend_47 { pt3dadd( -8.43257, -22.5229, -1.79457, 0.96 ) }
    dend_47 { pt3dadd( -9.30524, -23.2217, -1.79899, 1.47 ) }
    dend_47 { pt3dadd( -10.4094, -24.031, -1.81419, 1.62 ) }
    dend_47 { pt3dadd( -11.7761, -24.8941, -1.81953, 0.96 ) }
    dend_47 { pt3dadd( -12.8992, -25.5075, -1.8254, 0.96 ) }
    dend_47 { pt3dadd( -14.4896, -26.2372, -1.82243, 1.11 ) }
    dend_47 { pt3dadd( -15.6331, -26.6551, -1.80782, 1.4 ) }
    dend_47 { pt3dadd( -17.6378, -27.223, -1.76929, 1.33 ) }
    dend_47 { pt3dadd( -19.298, -27.5934, -1.75243, 0.96 ) }
    dend_47 { pt3dadd( -21.0023, -27.9339, -1.75215, 1.18 ) }
    dend_47 { pt3dadd( -21.8594, -28.1011, -1.75708, 1.18 ) }
    dend_47 { pt3dadd( -24.0481, -28.5674, -1.79812, 0.88 ) }
    dend_47 { pt3dadd( -25.3026, -28.9185, -1.84863, 0.88 ) }
    dend_47 { pt3dadd( -26.1604, -29.2505, -1.92283, 1.03 ) }
    dend_47 { pt3dadd( -27.7407, -30.0738, -2.09336, 1.25 ) }
    dend_47 { pt3dadd( -28.7463, -30.7171, -2.20198, 0.88 ) }
    dend_47 { pt3dadd( -29.7103, -31.4438, -2.30381, 0.88 ) }
    dend_47 { pt3dadd( -30.5681, -32.1667, -2.38772, 1.11 ) }
    dend_47 { pt3dadd( -31.5387, -32.9627, -2.48582, 1.25 ) }
    dend_47 { pt3dadd( -32.8155, -33.947, -2.68994, 0.88 ) }
    dend_47 { pt3dadd( -33.8018, -34.6954, -2.97113, 1.03 ) }
    dend_47 { pt3dadd( -34.5212, -35.2636, -3.29278, 1.4 ) }
    dend_47 { pt3dadd( -35.4227, -35.9909, -3.86362, 1.18 ) }
    dend_47 { pt3dadd( -36.5615, -36.8636, -4.82468, 1.25 ) }
    dend_47 { pt3dadd( -37.4037, -37.5742, -6.02205, 1.4 ) }
    dend_47 { pt3dadd( -36.7391, -37.6888, -7.52108, 1.4 ) }
    dend_47 { pt3dadd( -35.7163, -37.4698, -8.34258, 1.47 ) }
    dend_47 { pt3dadd( -33.5455, -36.8532, -9.60207, 0.52 ) }
    dend_47 { pt3dadd( -32.3261, -36.4866, -10.073, 0.52 ) }
    dend_47 { pt3dadd( -31.0094, -36.0859, -10.4088, 0.59 ) }
    dend_47 { pt3dadd( -28.7346, -35.4448, -10.7184, 0.59 ) }
    dend_47 { pt3dadd( -27.3221, -35.0893, -10.7762, 0.66 ) }
    dend_47 { pt3dadd( -25.785, -34.7951, -10.7085, 0.74 ) }
    dend_47 { pt3dadd( -23.7093, -34.4881, -10.5193, 0.59 ) }
    dend_47 { pt3dadd( -22.1397, -34.3417, -10.3267, 0.88 ) }
    dend_47 { pt3dadd( -20.0137, -34.2447, -9.99126, 0.37 ) }
    dend_47 { pt3dadd( -18.8833, -34.2763, -9.78565, 0.37 ) }
    dend_47 { pt3dadd( -17.7689, -34.4034, -9.52513, 0.37 ) }
    dend_47 { pt3dadd( -27.8927, -42.7281, -12.0998, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 72/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.84585, -17.9756, -2.25995, 1.4 ) }
    dend_36 { pt3dadd( -1.65712, -19.8046, -2.00675, 1.4 ) }
    dend_36 { pt3dadd( -1.44797, -21.6858, -1.77713, 1.03 ) }
    dend_36 { pt3dadd( -1.23612, -23.5147, -1.55544, 1.33 ) }
    dend_36 { pt3dadd( -0.994736, -25.6274, -1.28782, 1.25 ) }
    dend_36 { pt3dadd( -0.76484, -27.5471, -1.01933, 1.25 ) }
    dend_36 { pt3dadd( -0.545528, -29.3771, -0.733633, 1.11 ) }
    dend_36 { pt3dadd( -0.360239, -31.1372, -0.473703, 1.84 ) }
    dend_36 { pt3dadd( -0.234432, -32.2745, -0.32338, 1.62 ) }
    dend_36 { pt3dadd( 0.0251251, -34.4455, -0.00912154, 1.18 ) }
    dend_36 { pt3dadd( 0.287621, -36.7478, 0.354493, 1.11 ) }
    dend_36 { pt3dadd( 0.539646, -39.0639, 0.735698, 1.25 ) }
    dend_36 { pt3dadd( 0.691995, -40.5952, 0.977094, 1.55 ) }
    dend_36 { pt3dadd( 0.845379, -42.2613, 1.25256, 2.06 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 86/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 5.02508, 23.2265, -0.586348, 2.88 ) }
    dend_10 { pt3dadd( 5.18197, 24.3076, -0.457955, 2.88 ) }
    dend_10 { pt3dadd( 5.37999, 25.6723, -0.295889, 2.58 ) }
    dend_10 { pt3dadd( 5.60379, 27.2146, -0.11273, 2.36 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 90/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.02508, 23.2265, -0.586348, 1.62 ) }
    dend_1 { pt3dadd( 6.52782, 22.6802, -0.614376, 1.62 ) }
    dend_1 { pt3dadd( 8.26441, 21.8631, -0.566279, 0.96 ) }
    dend_1 { pt3dadd( 9.40266, 21.2379, -0.495839, 0.96 ) }
    dend_1 { pt3dadd( 10.6464, 20.4564, -0.390417, 1.11 ) }
    dend_1 { pt3dadd( 11.3086, 20.0014, -0.320751, 1.25 ) }
    dend_1 { pt3dadd( 12.5621, 19.0515, -0.180804, 0.96 ) }
    dend_1 { pt3dadd( 14.036, 17.6976, 0.0350313, 0.81 ) }
    dend_1 { pt3dadd( 14.8497, 16.9016, 0.167904, 0.81 ) }
    dend_1 { pt3dadd( 15.562, 16.2291, 0.275988, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( 16.2471, 15.6302, 0.334294, 0.88 ) }
    dend_1 { pt3dadd( 17.4126, 14.7231, 0.374632, 0.74 ) }
    dend_1 { pt3dadd( 18.679, 13.8773, 0.369898, 0.59 ) }
    dend_1 { pt3dadd( 19.8027, 13.222, 0.355396, 0.74 ) }
    dend_1 { pt3dadd( 20.5923, 12.7919, 0.355309, 0.66 ) }
    dend_1 { pt3dadd( 21.4122, 12.3441, 0.398215, 0.66 ) }
    dend_1 { pt3dadd( 22.5711, 11.6921, 0.51969, 0.96 ) }
    dend_1 { pt3dadd( 23.749, 11.028, 0.71129, 1.11 ) }
    dend_1 { pt3dadd( 25.1847, 10.1425, 1.01055, 0.81 ) }
    dend_1 { pt3dadd( 26.3245, 9.35322, 1.28226, 0.81 ) }
    dend_1 { pt3dadd( 27.4231, 8.534, 1.54476, 0.52 ) }
    dend_1 { pt3dadd( 28.1443, 7.95383, 1.68323, 0.52 ) }
    dend_1 { pt3dadd( 28.7035, 7.46786, 1.71167, 0.52 ) }
    dend_1 { pt3dadd( 29.4558, 6.76997, 1.58205, 0.74 ) }
    dend_1 { pt3dadd( 30.3743, 5.88987, 1.22048, 0.96 ) }
    dend_1 { pt3dadd( 30.9784, 5.28418, 0.894729, 1.03 ) }
    dend_1 { pt3dadd( 31.7558, 4.49138, 0.407112, 0.81 ) }
    dend_1 { pt3dadd( 32.7275, 3.53339, -0.166405, 0.52 ) }
    dend_1 { pt3dadd( 33.5523, 2.68474, -0.681606, 0.88 ) }
    dend_1 { pt3dadd( 33.9695, 2.26098, -0.945606, 1.11 ) }
    dend_1 { pt3dadd( 34.84, 1.41658, -1.46213, 0.81 ) }
    dend_1 { pt3dadd( 35.7164, 0.649044, -1.85991, 0.22 ) }
    dend_1 { pt3dadd( 36.8549, -0.194496, -2.13058, 0.15 ) }
    dend_1 { pt3dadd( 45.3488, -6.92215, -2.17101, 0.15 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 24/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -5.29297, 42.8002, 0.0, 0.176958 ) }
    axon_1 { pt3dadd( -7.28801, 57.6669, 0.0, 0.176958 ) }
    axon_1 { pt3dadd( -9.28305, 72.5336, 0.0, 0.176958 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -13.1699, -19.3579, -47.2936, 0.15 ) }
    dend_66 { pt3dadd( -18.51, -20.0353, -54.5413, 0.15 ) }
    dend_66 { pt3dadd( -24.4476, -20.3141, -61.3363, 0.15 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 30/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -13.1699, -19.3579, -47.2936, 0.59 ) }
    dend_63 { pt3dadd( -15.6353, -19.1831, -57.2876, 0.15 ) }
    dend_63 { pt3dadd( -18.2767, -18.0206, -67.1699, 0.15 ) }
    dend_63 { pt3dadd( -23.3512, -15.9503, -75.885, 0.15 ) }
    dend_63 { pt3dadd( -29.6325, -15.2538, -84.012, 0.15 ) }
    dend_63 { pt3dadd( -34.5154, -15.0867, -93.074, 0.15 ) }
    dend_63 { pt3dadd( -39.1022, -16.8882, -102.113, 0.15 ) }
    dend_63 { pt3dadd( -44.2615, -17.9259, -110.961, 0.15 ) }
    dend_63 { pt3dadd( -48.9716, -19.7007, -119.942, 0.15 ) }
    dend_63 { pt3dadd( -53.9987, -21.6248, -128.718, 0.15 ) }
    dend_63 { pt3dadd( -60.5481, -22.1335, -136.645, 0.15 ) }
    dend_63 { pt3dadd( -66.3367, -22.3267, -145.156, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 42/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 156.855, -215.791, -24.0063, 0.15 ) }
    dend_61 { pt3dadd( 163.754, -223.153, -25.0412, 0.15 ) }
    dend_61 { pt3dadd( 169.393, -231.546, -25.813, 0.15 ) }
    dend_61 { pt3dadd( 173.973, -240.592, -25.5778, 0.15 ) }
    dend_61 { pt3dadd( 178.198, -249.783, -24.8587, 0.15 ) }
    dend_61 { pt3dadd( 183.407, -258.485, -24.8359, 0.15 ) }
    dend_61 { pt3dadd( 189.126, -266.796, -23.8077, 0.15 ) }
    dend_61 { pt3dadd( 195.708, -273.847, -20.6721, 0.15 ) }
    dend_61 { pt3dadd( 202.408, -281.44, -20.1214, 0.15 ) }
    dend_61 { pt3dadd( 208.325, -289.623, -19.1837, 0.15 ) }
    dend_61 { pt3dadd( 214.96, -297.275, -19.7055, 0.15 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 53/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 156.855, -215.791, -24.0063, 0.59 ) }
    dend_60 { pt3dadd( 162.098, -224.065, -23.7746, 0.15 ) }
    dend_60 { pt3dadd( 166.661, -232.593, -25.3486, 0.15 ) }
    dend_60 { pt3dadd( 169.804, -241.369, -28.3644, 0.15 ) }
    dend_60 { pt3dadd( 171.473, -250.781, -30.5179, 0.15 ) }
    dend_60 { pt3dadd( 174.652, -259.622, -33.3004, 0.15 ) }
    dend_60 { pt3dadd( 177.727, -268.668, -35.4738, 0.15 ) }
    dend_60 { pt3dadd( 182.589, -276.912, -37.575, 0.15 ) }
    dend_60 { pt3dadd( 187.589, -284.903, -40.2489, 0.15 ) }
    dend_60 { pt3dadd( 191.906, -293.672, -40.9423, 0.15 ) }
    dend_60 { pt3dadd( 195.287, -302.785, -42.1708, 0.15 ) }
    dend_60 { pt3dadd( 199.5, -311.524, -43.5474, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 65/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -27.8927, -42.7281, -12.0998, 0.15 ) }
    dend_53 { pt3dadd( -35.4326, -49.2485, -10.735, 0.15 ) }
    dend_53 { pt3dadd( -42.1033, -56.7336, -9.89552, 0.15 ) }
    dend_53 { pt3dadd( -46.9245, -65.335, -7.89561, 0.15 ) }
    dend_53 { pt3dadd( -52.4124, -73.7576, -7.48246, 0.15 ) }
    dend_53 { pt3dadd( -58.4331, -81.7942, -8.10938, 0.15 ) }
    dend_53 { pt3dadd( -62.3704, -91.0357, -8.67548, 0.15 ) }
    dend_53 { pt3dadd( -66.7588, -100.045, -9.57203, 0.15 ) }
    dend_53 { pt3dadd( -70.1955, -109.494, -9.2073, 0.15 ) }
    dend_53 { pt3dadd( -73.9392, -118.69, -7.57807, 0.15 ) }
    dend_53 { pt3dadd( -76.8807, -127.893, -4.76992, 0.15 ) }
    dend_53 { pt3dadd( -79.0639, -137.563, -3.05598, 0.15 ) }
    dend_53 { pt3dadd( -82.5508, -146.998, -2.82281, 0.15 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 78/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -27.8927, -42.7281, -12.0998, 0.59 ) }
    dend_48 { pt3dadd( -32.5302, -49.1616, -17.4327, 0.15 ) }
    dend_48 { pt3dadd( -36.27, -55.9279, -23.0511, 0.15 ) }
    dend_48 { pt3dadd( -40.8108, -62.0971, -28.7656, 0.15 ) }
    dend_48 { pt3dadd( -43.9114, -68.4489, -35.1981, 0.15 ) }
    dend_48 { pt3dadd( -46.1445, -74.9055, -41.8809, 0.15 ) }
    dend_48 { pt3dadd( -49.0834, -81.8528, -47.749, 0.15 ) }
    dend_48 { pt3dadd( -50.6394, -89.2447, -53.6033, 0.15 ) }
    dend_48 { pt3dadd( -52.1071, -97.1206, -58.8141, 0.15 ) }
    dend_48 { pt3dadd( -52.227, -104.418, -64.985, 0.15 ) }
    dend_48 { pt3dadd( -53.1864, -111.733, -71.0594, 0.15 ) }
    dend_48 { pt3dadd( -53.8807, -118.331, -77.9388, 0.15 ) }
    dend_48 { pt3dadd( -53.755, -125.535, -84.2173, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 91/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 0.845379, -42.2613, 1.25256, 0.44 ) }
    dend_42 { pt3dadd( -0.113956, -44.2412, 2.55262, 0.44 ) }
    dend_42 { pt3dadd( -0.553704, -45.0687, 3.18099, 0.44 ) }
    dend_42 { pt3dadd( -1.11528, -46.1797, 4.22519, 0.44 ) }
    dend_42 { pt3dadd( -1.52297, -47.1425, 5.23926, 0.66 ) }
    dend_42 { pt3dadd( -1.80134, -48.0335, 6.11298, 0.66 ) }
    dend_42 { pt3dadd( -1.93161, -48.6696, 6.65585, 0.44 ) }
    dend_42 { pt3dadd( -2.01113, -49.524, 7.37918, 0.52 ) }
    dend_42 { pt3dadd( -1.95163, -50.7685, 8.22577, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( -1.72374, -52.1339, 8.86299, 0.66 ) }
    dend_42 { pt3dadd( -1.36872, -53.7194, 9.43125, 0.88 ) }
    dend_42 { pt3dadd( -0.992496, -55.3484, 9.90386, 1.11 ) }
    dend_42 { pt3dadd( -0.673348, -56.8881, 10.2643, 0.74 ) }
    dend_42 { pt3dadd( -0.495785, -58.034, 10.4166, 0.29 ) }
    dend_42 { pt3dadd( -0.40201, -59.2088, 10.4503, 0.22 ) }
    dend_42 { pt3dadd( -0.392395, -59.907, 10.4253, 0.22 ) }
    dend_42 { pt3dadd( -0.45611, -60.8253, 10.3764, 0.22 ) }
    dend_42 { pt3dadd( -0.559077, -61.6909, 10.3111, 0.22 ) }
    dend_42 { pt3dadd( -0.78709, -63.5504, 10.1566, 0.29 ) }
    dend_42 { pt3dadd( -0.910814, -64.9906, 10.0407, 0.52 ) }
    dend_42 { pt3dadd( -0.940293, -66.0085, 9.96086, 0.52 ) }
    dend_42 { pt3dadd( -0.866915, -67.4056, 9.85746, 0.44 ) }
    dend_42 { pt3dadd( -0.600151, -69.475, 9.73629, 0.29 ) }
    dend_42 { pt3dadd( -0.415832, -70.4851, 9.7026, 0.66 ) }
    dend_42 { pt3dadd( -0.252999, -71.1933, 9.73487, 1.77 ) }
    dend_42 { pt3dadd( 0.0698003, -72.4758, 9.87576, 1.18 ) }
    dend_42 { pt3dadd( 0.434119, -74.1121, 10.1646, 0.52 ) }
    dend_42 { pt3dadd( 0.72767, -75.6361, 10.5161, 0.52 ) }
    dend_42 { pt3dadd( 0.90044, -76.6223, 10.7871, 0.81 ) }
    dend_42 { pt3dadd( 1.1945, -78.0965, 11.2043, 0.96 ) }
    dend_42 { pt3dadd( 1.49619, -79.3822, 11.5959, 0.52 ) }
    dend_42 { pt3dadd( 1.95117, -81.1215, 12.2048, 0.22 ) }
    dend_42 { pt3dadd( 2.19131, -81.9367, 12.5305, 0.29 ) }
    dend_42 { pt3dadd( 2.54614, -83.0047, 13.0134, 0.29 ) }
    dend_42 { pt3dadd( 3.04917, -84.5255, 13.7241, 0.22 ) }
    dend_42 { pt3dadd( 3.38552, -85.5211, 14.2099, 0.37 ) }
    dend_42 { pt3dadd( 3.72048, -86.5488, 14.7249, 0.74 ) }
    dend_42 { pt3dadd( 3.99148, -87.536, 15.2224, 1.03 ) }
    dend_42 { pt3dadd( 4.17564, -88.6538, 15.7577, 1.25 ) }
    dend_42 { pt3dadd( 4.30651, -90.8437, 16.7527, 0.37 ) }
    dend_42 { pt3dadd( 4.3062, -92.1186, 17.3247, 1.18 ) }
    dend_42 { pt3dadd( 4.29769, -93.2961, 17.816, 2.65 ) }
    dend_42 { pt3dadd( 4.32743, -95.2173, 18.542, 2.21 ) }
    dend_42 { pt3dadd( 4.42603, -97.0774, 19.1962, 0.96 ) }
    dend_42 { pt3dadd( 4.58027, -98.6128, 19.6965, 0.29 ) }
    dend_42 { pt3dadd( 4.73542, -99.7006, 20.0482, 0.29 ) }
    dend_42 { pt3dadd( 4.87593, -100.716, 20.3736, 0.66 ) }
    dend_42 { pt3dadd( 5.03056, -101.93, 20.8187, 0.44 ) }
    dend_42 { pt3dadd( 5.16329, -103.009, 21.2504, 0.22 ) }
    dend_42 { pt3dadd( 5.23522, -103.55, 21.4835, 0.22 ) }
    dend_42 { pt3dadd( 5.30256, -104.209, 21.7503, 0.22 ) }
    dend_42 { pt3dadd( 5.35659, -105.554, 22.2438, 0.29 ) }
    dend_42 { pt3dadd( 5.37682, -106.569, 22.5877, 0.29 ) }
    dend_42 { pt3dadd( 5.4079, -107.266, 22.7947, 0.22 ) }
    dend_42 { pt3dadd( 5.45795, -108.07, 22.9893, 0.22 ) }
    dend_42 { pt3dadd( 5.55008, -108.775, 23.1392, 0.81 ) }
    dend_42 { pt3dadd( 5.69535, -109.44, 23.2568, 1.55 ) }
    dend_42 { pt3dadd( 6.12626, -110.876, 23.501, 1.84 ) }
    dend_42 { pt3dadd( 6.86544, -113.026, 23.8481, 0.15 ) }
    dend_42 { pt3dadd( 7.08981, -113.702, 23.9743, 0.15 ) }
    dend_42 { pt3dadd( 7.27592, -114.267, 24.0856, 0.15 ) }
    dend_42 { pt3dadd( 7.4816, -114.95, 24.2255, 0.15 ) }
    dend_42 { pt3dadd( 7.76073, -115.963, 24.4315, 0.88 ) }
    dend_42 { pt3dadd( 7.98173, -116.805, 24.5938, 1.92 ) }
    dend_42 { pt3dadd( 8.44239, -118.476, 24.8577, 1.99 ) }
    dend_42 { pt3dadd( 8.56924, -118.903, 24.915, 1.99 ) }
    dend_42 { pt3dadd( 9.11248, -120.878, 25.1277, 0.15 ) }
    dend_42 { pt3dadd( 9.24572, -121.425, 25.1687, 0.15 ) }
    dend_42 { pt3dadd( 9.36244, -121.988, 25.1866, 0.37 ) }
    dend_42 { pt3dadd( 9.45239, -122.561, 25.1891, 0.37 ) }
    dend_42 { pt3dadd( 9.63294, -123.921, 25.1911, 0.15 ) }
    dend_42 { pt3dadd( 9.71717, -124.765, 25.2131, 0.15 ) }
    dend_42 { pt3dadd( 9.81556, -125.76, 25.2601, 0.22 ) }
    dend_42 { pt3dadd( 9.86097, -126.34, 25.3114, 0.22 ) }
    dend_42 { pt3dadd( 9.89177, -127.389, 25.4396, 0.15 ) }
    dend_42 { pt3dadd( 9.88192, -128.191, 25.5579, 0.15 ) }
    dend_42 { pt3dadd( 9.86199, -128.826, 25.6645, 0.59 ) }
    dend_42 { pt3dadd( 9.87533, -129.5, 25.7862, 1.03 ) }
    dend_42 { pt3dadd( 9.95931, -130.542, 25.9513, 0.22 ) }
    dend_42 { pt3dadd( 10.1048, -131.637, 26.1221, 0.07 ) }
    dend_42 { pt3dadd( 10.2301, -132.339, 26.2412, 0.07 ) }
    dend_42 { pt3dadd( 10.3291, -132.78, 26.3272, 0.66 ) }
    dend_42 { pt3dadd( 10.6477, -133.932, 26.6117, 0.96 ) }
    dend_42 { pt3dadd( 11.3426, -136.007, 27.1886, 0.22 ) }
    dend_42 { pt3dadd( 11.8043, -137.13, 27.5429, 0.22 ) }
    dend_42 { pt3dadd( 12.1583, -137.855, 27.8213, 0.44 ) }
    dend_42 { pt3dadd( 12.5901, -138.673, 28.1694, 1.25 ) }
    dend_42 { pt3dadd( 13.0003, -139.385, 28.4828, 1.92 ) }
    dend_42 { pt3dadd( 13.6052, -140.279, 28.8979, 1.11 ) }
    dend_42 { pt3dadd( 14.2662, -141.128, 29.3301, 0.22 ) }
    dend_42 { pt3dadd( 14.7872, -141.795, 29.6466, 0.22 ) }
    dend_42 { pt3dadd( 15.3547, -142.582, 29.9835, 0.52 ) }
    dend_42 { pt3dadd( 16.0183, -143.679, 30.4139, 0.22 ) }
    dend_42 { pt3dadd( 16.6109, -144.871, 30.8932, 0.22 ) }
    dend_42 { pt3dadd( 17.0139, -145.834, 31.3045, 0.22 ) }
    dend_42 { pt3dadd( 17.1854, -146.326, 31.5178, 0.81 ) }
    dend_42 { pt3dadd( 17.5464, -147.494, 32.0495, 1.77 ) }
    dend_42 { pt3dadd( 18.1643, -149.715, 33.1348, 0.37 ) }
    dend_42 { pt3dadd( 18.4777, -150.879, 33.7216, 0.15 ) }
    dend_42 { pt3dadd( 18.617, -151.415, 33.9808, 0.15 ) }
    dend_42 { pt3dadd( 18.7983, -152.08, 34.2866, 0.37 ) }
    dend_42 { pt3dadd( 19.0339, -152.892, 34.6571, 1.18 ) }
    dend_42 { pt3dadd( 19.3347, -153.85, 35.0834, 1.55 ) }
    dend_42 { pt3dadd( 19.8097, -155.321, 35.6673, 0.81 ) }
    dend_42 { pt3dadd( 20.1056, -156.356, 36.0173, 0.15 ) }
    dend_42 { pt3dadd( 20.2652, -157.022, 36.2328, 0.22 ) }
    dend_42 { pt3dadd( 20.489, -158.028, 36.5406, 0.15 ) }
    dend_42 { pt3dadd( 20.6714, -158.953, 36.8098, 0.96 ) }
    dend_42 { pt3dadd( 20.8749, -159.978, 37.1041, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_42 { pt3dadd( 21.2028, -161.556, 37.5389, 0.22 ) }
    dend_42 { pt3dadd( 21.3874, -162.297, 37.7352, 0.22 ) }
    dend_42 { pt3dadd( 21.6613, -163.228, 37.9792, 0.37 ) }
    dend_42 { pt3dadd( 21.7488, -163.486, 38.0417, 0.37 ) }
    dend_42 { pt3dadd( 22.1002, -164.424, 38.2649, 0.22 ) }
    dend_42 { pt3dadd( 22.2865, -164.856, 38.3779, 0.22 ) }
    dend_42 { pt3dadd( 22.677, -165.596, 38.5452, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 7/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.845379, -42.2613, 1.25256, 1.84 ) }
    dend_37 { pt3dadd( 0.690701, -43.3409, 0.806945, 1.84 ) }
    dend_37 { pt3dadd( 0.563807, -44.6355, 0.318463, 1.55 ) }
    dend_37 { pt3dadd( 0.480734, -46.0326, -0.158173, 1.55 ) }
    dend_37 { pt3dadd( 0.405484, -47.4931, -0.603472, 1.55 ) }
    dend_37 { pt3dadd( 0.32488, -48.9434, -0.988788, 1.47 ) }
    dend_37 { pt3dadd( 0.245095, -50.214, -1.29526, 0.96 ) }
    dend_37 { pt3dadd( 0.175671, -51.2275, -1.49311, 1.55 ) }
    dend_37 { pt3dadd( 0.019806, -53.0464, -1.74701, 1.25 ) }
    dend_37 { pt3dadd( -0.165128, -54.9261, -1.95182, 1.47 ) }
    dend_37 { pt3dadd( -0.384551, -56.8641, -2.11568, 1.03 ) }
    dend_37 { pt3dadd( -0.56859, -58.1739, -2.20818, 1.18 ) }
    dend_37 { pt3dadd( -0.879209, -60.0225, -2.30648, 1.99 ) }
    dend_37 { pt3dadd( -1.20482, -61.5921, -2.36841, 1.92 ) }
    // Section: dend_20, id: dend_20, parent: dend_10 (entry count 21/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.60379, 27.2146, -0.11273, 2.14 ) }
    dend_20 { pt3dadd( 6.92136, 28.8027, -0.0100416, 2.14 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.60379, 27.2146, -0.11273, 1.47 ) }
    dend_11 { pt3dadd( 5.2386, 28.5864, 1.10049, 1.47 ) }
    dend_11 { pt3dadd( 4.93014, 29.4098, 1.84709, 1.18 ) }
    dend_11 { pt3dadd( 4.52183, 30.1656, 2.58059, 1.18 ) }
    dend_11 { pt3dadd( 3.94145, 30.9432, 3.41858, 1.47 ) }
    dend_11 { pt3dadd( 3.3432, 31.5098, 4.11712, 1.47 ) }
    dend_11 { pt3dadd( 2.98421, 31.7223, 4.45021, 1.47 ) }
    dend_11 { pt3dadd( 2.05384, 31.8568, 5.01074, 1.47 ) }
    dend_11 { pt3dadd( 0.795985, 31.6716, 5.48984, 1.03 ) }
    dend_11 { pt3dadd( 0.0381546, 31.4132, 5.67222, 1.62 ) }
    dend_11 { pt3dadd( -0.656461, 31.0794, 5.78365, 1.77 ) }
    dend_11 { pt3dadd( -1.54204, 30.5355, 5.89466, 1.77 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 45.3488, -6.92215, -2.17101, 0.15 ) }
    dend_7 { pt3dadd( 51.864, -11.6257, -1.40152, 0.15 ) }
    dend_7 { pt3dadd( 58.7426, -15.7916, -0.699254, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 45.3488, -6.92215, -2.17101, 0.59 ) }
    dend_2 { pt3dadd( 55.7883, -14.7334, -3.71238, 0.15 ) }
    dend_2 { pt3dadd( 64.7959, -24.0493, -5.82246, 0.15 ) }
    dend_2 { pt3dadd( 71.8204, -34.6366, -9.13028, 0.15 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 42/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -24.4476, -20.3141, -61.3363, 0.15 ) }
    dend_68 { pt3dadd( -34.7857, -18.0096, -66.5669, 0.15 ) }
    dend_68 { pt3dadd( -43.3785, -13.4885, -73.2952, 0.15 ) }
    dend_68 { pt3dadd( -50.7486, -6.78976, -79.6475, 0.15 ) }
    dend_68 { pt3dadd( -59.4348, -1.43679, -85.6008, 0.15 ) }
    dend_68 { pt3dadd( -68.4969, 2.71046, -91.943, 0.15 ) }
    dend_68 { pt3dadd( -77.0215, 6.74363, -99.0572, 0.15 ) }
    dend_68 { pt3dadd( -84.5646, 12.2081, -106.323, 0.15 ) }
    dend_68 { pt3dadd( -92.4342, 18.3986, -112.591, 0.15 ) }
    dend_68 { pt3dadd( -98.8682, 23.9575, -120.791, 0.15 ) }
    dend_68 { pt3dadd( -106.681, 28.0032, -128.674, 0.15 ) }
    dend_68 { pt3dadd( -116.29, 32.241, -134.083, 0.15 ) }
    dend_68 { pt3dadd( -125.784, 36.0038, -140.02, 0.15 ) }
    dend_68 { pt3dadd( -135.057, 41.4185, -144.944, 0.15 ) }
    dend_68 { pt3dadd( -145.288, 45.6212, -149.091, 0.15 ) }
    dend_68 { pt3dadd( -156.425, 48.8528, -151.342, 0.15 ) }
    dend_68 { pt3dadd( -167.399, 53.2246, -151.378, 0.15 ) }
    dend_68 { pt3dadd( -178.282, 57.6052, -152.765, 0.15 ) }
    dend_68 { pt3dadd( -189.674, 60.696, -152.301, 0.15 ) }
    dend_68 { pt3dadd( -200.991, 64.0451, -151.792, 0.15 ) }
    dend_68 { pt3dadd( -211.836, 68.4209, -153.462, 0.15 ) }
    dend_68 { pt3dadd( -222.286, 73.739, -154.898, 0.15 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 64/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -24.4476, -20.3141, -61.3363, 0.59 ) }
    dend_67 { pt3dadd( -26.282, -22.8379, -68.5664, 0.15 ) }
    dend_67 { pt3dadd( -28.9133, -24.606, -75.7748, 0.15 ) }
    dend_67 { pt3dadd( -30.9006, -27.0864, -82.9794, 0.15 ) }
    dend_67 { pt3dadd( -32.5846, -29.5383, -90.2706, 0.15 ) }
    dend_67 { pt3dadd( -33.7783, -31.3608, -97.8379, 0.15 ) }
    dend_67 { pt3dadd( -35.4032, -33.8745, -105.121, 0.15 ) }
    dend_67 { pt3dadd( -36.1596, -36.282, -112.581, 0.15 ) }
    dend_67 { pt3dadd( -37.564, -38.4252, -120.027, 0.15 ) }
    dend_67 { pt3dadd( -37.7436, -42.2641, -126.9, 0.15 ) }
    dend_67 { pt3dadd( -36.9967, -46.4283, -133.541, 0.15 ) }
    dend_67 { pt3dadd( -36.1708, -50.741, -140.078, 0.15 ) }
    dend_67 { pt3dadd( -36.3712, -55.2027, -146.564, 0.15 ) }
    dend_67 { pt3dadd( -35.4522, -60.4187, -152.391, 0.15 ) }
    dend_67 { pt3dadd( -35.6834, -66.4725, -157.422, 0.15 ) }
    dend_67 { pt3dadd( -37.1072, -72.2209, -162.612, 0.15 ) }
    dend_67 { pt3dadd( -38.3646, -77.5956, -168.228, 0.15 ) }
    dend_67 { pt3dadd( -38.4697, -82.2067, -174.61, 0.15 ) }
    dend_67 { pt3dadd( -38.5846, -86.8189, -180.992, 0.15 ) }
    dend_67 { pt3dadd( -37.6275, -92.8691, -185.94, 0.15 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 84/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -66.3367, -22.3267, -145.156, 0.15 ) }
    dend_65 { pt3dadd( -72.4603, -22.9073, -155.137, 0.15 ) }
    dend_65 { pt3dadd( -79.5961, -23.3671, -164.428, 0.15 ) }
    dend_65 { pt3dadd( -87.8152, -23.1716, -172.786, 0.15 ) }
    dend_65 { pt3dadd( -94.2484, -21.5356, -182.45, 0.15 ) }
    dend_65 { pt3dadd( -101.007, -18.4958, -191.535, 0.15 ) }
    dend_65 { pt3dadd( -109.336, -17.7641, -199.753, 0.15 ) }
    dend_65 { pt3dadd( -118.063, -17.8725, -207.581, 0.15 ) }
    dend_65 { pt3dadd( -125.783, -19.5794, -216.237, 0.15 ) }
    dend_65 { pt3dadd( -133.483, -23.4456, -224.188, 0.15 ) }
    dend_65 { pt3dadd( -140.981, -27.6381, -232.167, 0.15 ) }
    dend_65 { pt3dadd( -148.247, -34.2029, -238.614, 0.15 ) }
    dend_65 { pt3dadd( -154.671, -40.6894, -245.969, 0.15 ) }
    dend_65 { pt3dadd( -160.717, -47.3182, -253.516, 0.15 ) }
    dend_65 { pt3dadd( -166.983, -55.265, -259.435, 0.15 ) }
    dend_65 { pt3dadd( -173.03, -64.4478, -263.504, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_65 { pt3dadd( -179.278, -73.0008, -268.53, 0.15 ) }
    dend_65 { pt3dadd( -183.981, -83.0419, -272.34, 0.15 ) }
    dend_65 { pt3dadd( -187.071, -92.9519, -277.789, 0.15 ) }
    dend_65 { pt3dadd( -188.731, -104.029, -281.254, 0.15 ) }
    dend_65 { pt3dadd( -192.618, -114.424, -285.033, 0.15 ) }
    dend_65 { pt3dadd( -197.607, -124.779, -287.343, 0.15 ) }
    dend_65 { pt3dadd( -201.43, -135.243, -290.994, 0.15 ) }
    dend_65 { pt3dadd( -206.759, -144.701, -295.423, 0.15 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 8/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -66.3367, -22.3267, -145.156, 0.59 ) }
    dend_64 { pt3dadd( -69.2661, -21.8176, -154.723, 0.15 ) }
    dend_64 { pt3dadd( -71.7426, -21.6414, -164.429, 0.15 ) }
    dend_64 { pt3dadd( -75.2031, -22.2783, -173.81, 0.15 ) }
    dend_64 { pt3dadd( -77.9167, -24.2932, -183.241, 0.15 ) }
    dend_64 { pt3dadd( -79.895, -25.3186, -193.008, 0.15 ) }
    dend_64 { pt3dadd( -80.0974, -27.4312, -202.799, 0.15 ) }
    dend_64 { pt3dadd( -81.3789, -27.7194, -212.731, 0.15 ) }
    dend_64 { pt3dadd( -83.2684, -27.6851, -222.57, 0.15 ) }
    dend_64 { pt3dadd( -85.353, -28.1651, -232.357, 0.15 ) }
    dend_64 { pt3dadd( -85.8564, -29.9237, -242.208, 0.15 ) }
    dend_64 { pt3dadd( -86.9023, -33.6406, -251.452, 0.15 ) }
    dend_64 { pt3dadd( -87.2654, -36.1963, -261.132, 0.15 ) }
    dend_64 { pt3dadd( -86.8016, -38.2326, -270.931, 0.15 ) }
    dend_64 { pt3dadd( -86.3796, -40.1447, -280.756, 0.15 ) }
    dend_64 { pt3dadd( -85.0115, -41.341, -290.608, 0.15 ) }
    dend_64 { pt3dadd( -85.058, -41.6419, -300.622, 0.15 ) }
    dend_64 { pt3dadd( -86.2323, -41.314, -310.566, 0.15 ) }
    dend_64 { pt3dadd( -85.7515, -42.4382, -320.51, 0.15 ) }
    dend_64 { pt3dadd( -86.4904, -44.6028, -330.264, 0.15 ) }
    dend_64 { pt3dadd( -88.6101, -47.0843, -339.736, 0.15 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 29/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -82.5508, -146.998, -2.82281, 0.15 ) }
    dend_57 { pt3dadd( -88.3663, -157.696, -1.88104, 0.15 ) }
    dend_57 { pt3dadd( -92.7636, -168.95, -0.106194, 0.15 ) }
    dend_57 { pt3dadd( -96.2565, -180.606, 0.935699, 0.15 ) }
    dend_57 { pt3dadd( -100.038, -191.775, 4.11421, 0.15 ) }
    dend_57 { pt3dadd( -103.389, -202.973, 7.6531, 0.15 ) }
    dend_57 { pt3dadd( -104.614, -214.77, 10.5658, 0.15 ) }
    dend_57 { pt3dadd( -106.045, -226.891, 11.0025, 0.15 ) }
    dend_57 { pt3dadd( -108.437, -238.755, 9.36755, 0.15 ) }
    dend_57 { pt3dadd( -111.832, -249.966, 5.91255, 0.15 ) }
    dend_57 { pt3dadd( -114.697, -260.22, -0.0695503, 0.15 ) }
    dend_57 { pt3dadd( -118.404, -269.457, -7.14737, 0.15 ) }
    dend_57 { pt3dadd( -122.464, -278.525, -14.2486, 0.15 ) }
    dend_57 { pt3dadd( -127.929, -286.667, -21.5277, 0.15 ) }
    dend_57 { pt3dadd( -133.085, -292.721, -30.7971, 0.15 ) }
    dend_57 { pt3dadd( -138.156, -298.657, -40.188, 0.15 ) }
    dend_57 { pt3dadd( -140.907, -305.454, -49.9547, 0.15 ) }
    dend_57 { pt3dadd( -142.162, -313.158, -59.3475, 0.15 ) }
    dend_57 { pt3dadd( -143.388, -320.686, -68.8852, 0.15 ) }
    dend_57 { pt3dadd( -146.507, -328.06, -78.1068, 0.15 ) }
    dend_57 { pt3dadd( -150.391, -334.535, -87.7059, 0.15 ) }
    dend_57 { pt3dadd( -156.17, -340.619, -96.5795, 0.15 ) }
    dend_57 { pt3dadd( -162.314, -346.515, -105.334, 0.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -82.5508, -146.998, -2.82281, 0.59 ) }
    dend_54 { pt3dadd( -88.2319, -157.703, -1.79215, 0.15 ) }
    dend_54 { pt3dadd( -93.8537, -168.486, -1.64614, 0.15 ) }
    dend_54 { pt3dadd( -100.679, -178.213, 0.946791, 0.15 ) }
    dend_54 { pt3dadd( -107.107, -188.176, 3.65613, 0.15 ) }
    dend_54 { pt3dadd( -114.286, -197.432, 6.92906, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -53.755, -125.535, -84.2173, 0.15 ) }
    dend_50 { pt3dadd( -55.3651, -134.043, -91.101, 0.15 ) }
    dend_50 { pt3dadd( -58.2123, -143.184, -96.6413, 0.15 ) }
    dend_50 { pt3dadd( -60.5084, -151.592, -103.452, 0.15 ) }
    dend_50 { pt3dadd( -63.4719, -161.18, -108.105, 0.15 ) }
    dend_50 { pt3dadd( -66.703, -171.382, -110.907, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 64/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -53.755, -125.535, -84.2173, 0.59 ) }
    dend_49 { pt3dadd( -57.2496, -132.232, -91.2853, 0.15 ) }
    dend_49 { pt3dadd( -60.6168, -139.075, -98.2752, 0.15 ) }
    dend_49 { pt3dadd( -63.5846, -147.64, -103.261, 0.15 ) }
    dend_49 { pt3dadd( -65.9726, -157.166, -106.514, 0.15 ) }
    dend_49 { pt3dadd( -66.5382, -167.247, -108.766, 0.15 ) }
    dend_49 { pt3dadd( -66.2809, -177.457, -110.416, 0.15 ) }
    dend_49 { pt3dadd( -64.7439, -187.559, -112.029, 0.15 ) }
    dend_49 { pt3dadd( -64.6884, -197.903, -112.16, 0.15 ) }
    dend_49 { pt3dadd( -62.9573, -208.039, -113.297, 0.15 ) }
    dend_49 { pt3dadd( -62.7469, -218.121, -115.608, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 75/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 22.677, -165.596, 38.5452, 0.22 ) }
    dend_46 { pt3dadd( 22.4157, -166.112, 38.5596, 0.22 ) }
    dend_46 { pt3dadd( 22.0662, -166.803, 38.579, 0.22 ) }
    dend_46 { pt3dadd( 21.7627, -167.404, 38.5957, 0.22 ) }
    dend_46 { pt3dadd( 21.2213, -168.474, 38.6256, 0.22 ) }
    dend_46 { pt3dadd( 20.977, -168.957, 38.6391, 0.15 ) }
    dend_46 { pt3dadd( 20.7334, -169.439, 38.6526, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 82/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 22.677, -165.596, 38.5452, 1.18 ) }
    dend_43 { pt3dadd( 23.0108, -166.74, 39.0866, 1.18 ) }
    dend_43 { pt3dadd( 23.3774, -168.064, 39.659, 0.29 ) }
    dend_43 { pt3dadd( 23.6885, -169.282, 40.1731, 0.15 ) }
    dend_43 { pt3dadd( 23.8507, -169.977, 40.457, 0.15 ) }
    dend_43 { pt3dadd( 23.9965, -170.661, 40.7258, 0.29 ) }
    dend_43 { pt3dadd( 24.1653, -171.637, 41.104, 0.66 ) }
    dend_43 { pt3dadd( 24.2844, -172.652, 41.4862, 1.4 ) }
    dend_43 { pt3dadd( 24.3259, -174.162, 42.0102, 0.22 ) }
    dend_43 { pt3dadd( 24.2922, -175.214, 42.3515, 0.22 ) }
    dend_43 { pt3dadd( 24.2619, -175.674, 42.4921, 0.22 ) }
    dend_43 { pt3dadd( 24.1854, -176.656, 42.7577, 0.22 ) }
    dend_43 { pt3dadd( 24.1076, -177.503, 42.9627, 0.66 ) }
    dend_43 { pt3dadd( 23.9839, -178.562, 43.1885, 0.15 ) }
    dend_43 { pt3dadd( 23.8354, -179.46, 43.3607, 0.15 ) }
    dend_43 { pt3dadd( 23.6192, -180.556, 43.5641, 0.52 ) }
    dend_43 { pt3dadd( 23.3416, -181.914, 43.8265, 0.29 ) }
    dend_43 { pt3dadd( 23.2324, -182.454, 43.9341, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( 23.1198, -183.002, 44.0546, 0.15 ) }
    dend_43 { pt3dadd( 22.9005, -184.004, 44.2641, 0.15 ) }
    dend_43 { pt3dadd( 22.7378, -184.682, 44.3957, 0.29 ) }
    dend_43 { pt3dadd( 22.5196, -185.609, 44.5887, 1.11 ) }
    dend_43 { pt3dadd( 22.3225, -186.551, 44.8009, 1.77 ) }
    dend_43 { pt3dadd( 22.1162, -187.859, 45.1091, 1.77 ) }
    dend_43 { pt3dadd( 21.9606, -189.224, 45.4491, 1.33 ) }
    dend_43 { pt3dadd( 21.7972, -191.119, 45.9257, 0.15 ) }
    dend_43 { pt3dadd( 21.7077, -192.382, 46.2612, 0.22 ) }
    dend_43 { pt3dadd( 21.6491, -193.289, 46.5134, 0.66 ) }
    dend_43 { pt3dadd( 21.5971, -194.163, 46.7665, 0.81 ) }
    dend_43 { pt3dadd( 21.5326, -195.787, 47.2584, 0.15 ) }
    dend_43 { pt3dadd( 21.5542, -196.74, 47.5673, 0.22 ) }
    dend_43 { pt3dadd( 21.6423, -197.54, 47.8454, 0.22 ) }
    dend_43 { pt3dadd( 21.7989, -198.564, 48.1956, 0.22 ) }
    dend_43 { pt3dadd( 21.9063, -199.162, 48.3943, 0.66 ) }
    dend_43 { pt3dadd( 22.1828, -200.332, 48.7828, 1.4 ) }
    dend_43 { pt3dadd( 22.6994, -201.971, 49.3756, 0.88 ) }
    dend_43 { pt3dadd( 23.0501, -202.993, 49.7603, 0.15 ) }
    dend_43 { pt3dadd( 23.3986, -203.972, 50.125, 0.15 ) }
    dend_43 { pt3dadd( 23.6621, -204.682, 50.3867, 0.22 ) }
    dend_43 { pt3dadd( 24.0658, -205.795, 50.8046, 0.29 ) }
    dend_43 { pt3dadd( 24.3461, -206.668, 51.1197, 0.15 ) }
    dend_43 { pt3dadd( 24.6152, -207.875, 51.5045, 0.15 ) }
    dend_43 { pt3dadd( 24.6669, -208.297, 51.6276, 0.15 ) }
    dend_43 { pt3dadd( 24.7154, -209.186, 51.8953, 0.22 ) }
    dend_43 { pt3dadd( 24.7023, -210.483, 52.286, 0.22 ) }
    dend_43 { pt3dadd( 24.6716, -211.045, 52.4533, 0.22 ) }
    dend_43 { pt3dadd( 24.6064, -212.228, 52.7966, 0.37 ) }
    dend_43 { pt3dadd( 24.5711, -213.434, 53.1652, 0.22 ) }
    dend_43 { pt3dadd( 24.5679, -214.245, 53.4071, 0.88 ) }
    dend_43 { pt3dadd( 24.632, -216.048, 53.9288, 2.06 ) }
    dend_43 { pt3dadd( 24.8096, -218.148, 54.4435, 0.59 ) }
    dend_43 { pt3dadd( 25.0105, -219.565, 54.7156, 0.22 ) }
    dend_43 { pt3dadd( 25.2005, -220.497, 54.8338, 0.22 ) }
    dend_43 { pt3dadd( 25.3892, -221.319, 54.907, 0.22 ) }
    dend_43 { pt3dadd( 25.6658, -222.449, 54.958, 0.59 ) }
    dend_43 { pt3dadd( 26.1145, -224.043, 54.9262, 0.07 ) }
    dend_43 { pt3dadd( 26.4364, -225.004, 54.7964, 0.15 ) }
    dend_43 { pt3dadd( 26.8483, -226.138, 54.5375, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 40/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.20482, -61.5921, -2.36841, 0.74 ) }
    dend_39 { pt3dadd( -1.20743, -63.6197, -2.76079, 0.74 ) }
    dend_39 { pt3dadd( -1.20336, -65.4254, -3.1399, 0.74 ) }
    dend_39 { pt3dadd( -1.22609, -66.4465, -3.36826, 0.81 ) }
    dend_39 { pt3dadd( -1.31861, -68.1299, -3.78553, 0.88 ) }
    dend_39 { pt3dadd( -1.39922, -69.2115, -4.06607, 0.81 ) }
    dend_39 { pt3dadd( -1.53445, -70.6077, -4.45061, 1.18 ) }
    dend_39 { pt3dadd( -1.65863, -71.6454, -4.77354, 1.18 ) }
    dend_39 { pt3dadd( -1.88498, -72.9158, -5.20675, 1.03 ) }
    dend_39 { pt3dadd( -2.17355, -74.2633, -5.70737, 1.11 ) }
    dend_39 { pt3dadd( -2.44828, -75.3163, -6.12486, 0.74 ) }
    dend_39 { pt3dadd( -2.82612, -76.5, -6.60891, 1.11 ) }
    dend_39 { pt3dadd( -3.18259, -77.5067, -7.01604, 0.81 ) }
    dend_39 { pt3dadd( -3.61545, -78.6937, -7.47408, 0.81 ) }
    dend_39 { pt3dadd( -3.75041, -79.1271, -7.61778, 0.81 ) }
    dend_39 { pt3dadd( -3.96858, -80.0423, -7.86001, 0.88 ) }
    dend_39 { pt3dadd( -4.1481, -81.0565, -8.04715, 0.88 ) }
    dend_39 { pt3dadd( -4.3645, -82.7323, -8.23393, 1.11 ) }
    dend_39 { pt3dadd( -4.45645, -83.5318, -8.26788, 1.33 ) }
    dend_39 { pt3dadd( -4.716, -85.4646, -8.20451, 0.74 ) }
    dend_39 { pt3dadd( -4.85432, -86.6114, -8.13489, 0.74 ) }
    dend_39 { pt3dadd( -5.00514, -88.2982, -7.97478, 0.88 ) }
    dend_39 { pt3dadd( -5.0765, -89.2908, -7.83742, 1.25 ) }
    dend_39 { pt3dadd( -5.17051, -90.3144, -7.65615, 1.03 ) }
    dend_39 { pt3dadd( -5.40793, -91.6806, -7.36071, 0.74 ) }
    dend_39 { pt3dadd( -5.60942, -102.559, -7.6501, 0.74 ) }
    dend_39 { pt3dadd( -7.17137, -113.306, -6.94692, 0.74 ) }
    dend_39 { pt3dadd( -8.5664, -124.024, -5.66665, 0.74 ) }
    dend_39 { pt3dadd( -10.3867, -134.255, -2.43286, 0.74 ) }
    dend_39 { pt3dadd( -11.2258, -144.559, 0.968006, 0.74 ) }
    dend_39 { pt3dadd( -13.0407, -154.53, 4.93544, 0.74 ) }
    dend_39 { pt3dadd( -16.041, -164.793, 6.96295, 0.74 ) }
    dend_39 { pt3dadd( -16.8379, -175.416, 9.19121, 0.74 ) }
    dend_39 { pt3dadd( -17.2088, -185.955, 11.8801, 0.74 ) }
    dend_39 { pt3dadd( -17.575, -196.553, 14.328, 0.74 ) }
    dend_39 { pt3dadd( -17.7956, -207.178, 16.6768, 0.74 ) }
    dend_39 { pt3dadd( -19.0383, -217.474, 19.9783, 0.74 ) }
    dend_39 { pt3dadd( -22.645, -227.081, 23.6041, 0.74 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.20482, -61.5921, -2.36841, 1.03 ) }
    dend_38 { pt3dadd( -1.00491, -62.639, -1.866, 1.03 ) }
    dend_38 { pt3dadd( -0.746058, -64.1881, -1.19639, 1.03 ) }
    dend_38 { pt3dadd( -0.590506, -65.3836, -0.782901, 1.03 ) }
    dend_38 { pt3dadd( -0.367927, -67.15, -0.289493, 1.03 ) }
    dend_38 { pt3dadd( -0.160199, -68.6395, 0.0341203, 0.96 ) }
    dend_38 { pt3dadd( 0.0189444, -69.6935, 0.225552, 0.96 ) }
    dend_38 { pt3dadd( 0.197396, -70.5776, 0.330247, 0.96 ) }
    dend_38 { pt3dadd( 0.807959, -72.978, 0.46355, 0.88 ) }
    dend_38 { pt3dadd( 1.28357, -74.3949, 0.467448, 0.88 ) }
    dend_38 { pt3dadd( 2.11356, -76.2285, 0.411566, 0.88 ) }
    dend_38 { pt3dadd( 3.17269, -78.0339, 0.321472, 0.81 ) }
    dend_38 { pt3dadd( 4.05926, -79.2495, 0.257169, 0.81 ) }
    dend_38 { pt3dadd( 4.78574, -80.0707, 0.228559, 0.81 ) }
    dend_38 { pt3dadd( 5.90168, -81.122, 0.209711, 0.88 ) }
    dend_38 { pt3dadd( 7.07332, -82.2055, 0.237641, 1.03 ) }
    dend_38 { pt3dadd( 7.85613, -83.0106, 0.302443, 1.03 ) }
    dend_38 { pt3dadd( 8.82399, -84.2498, 0.441953, 0.81 ) }
    dend_38 { pt3dadd( 9.50221, -85.4126, 0.594137, 1.4 ) }
    dend_38 { pt3dadd( 9.82488, -86.1414, 0.693693, 1.92 ) }
    dend_38 { pt3dadd( 10.4569, -88.0889, 0.903325, 1.4 ) }
    dend_38 { pt3dadd( 11.0432, -90.3849, 1.02655, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( 11.3944, -91.9976, 1.03666, 0.88 ) }
    dend_38 { pt3dadd( 11.725, -93.6784, 0.97057, 1.03 ) }
    dend_38 { pt3dadd( 11.9139, -94.6139, 0.894271, 1.03 ) }
    dend_38 { pt3dadd( 12.244, -96.136, 0.709862, 0.81 ) }
    dend_38 { pt3dadd( 12.5711, -97.5371, 0.455955, 1.18 ) }
    dend_38 { pt3dadd( 12.6586, -97.9604, 0.366475, 1.18 ) }
    dend_38 { pt3dadd( 12.7647, -98.7904, 0.213362, 0.74 ) }
    dend_38 { pt3dadd( 12.7493, -99.8744, 0.11376, 0.44 ) }
    dend_38 { pt3dadd( 12.6555, -100.522, 0.116638, 0.44 ) }
    dend_38 { pt3dadd( 12.4207, -101.476, 0.198964, 0.66 ) }
    dend_38 { pt3dadd( 12.0454, -102.744, 0.347647, 0.81 ) }
    dend_38 { pt3dadd( 11.6983, -103.891, 0.483947, 0.96 ) }
    dend_38 { pt3dadd( 11.1649, -105.686, 0.689107, 1.33 ) }
    dend_38 { pt3dadd( 10.8276, -106.872, 0.815163, 0.88 ) }
    dend_38 { pt3dadd( 10.5313, -108.037, 0.939939, 1.11 ) }
    dend_38 { pt3dadd( 10.2344, -109.401, 1.10802, 1.18 ) }
    dend_38 { pt3dadd( 9.98364, -110.696, 1.29076, 1.18 ) }
    dend_38 { pt3dadd( 9.65178, -112.505, 1.57784, 0.52 ) }
    dend_38 { pt3dadd( 9.34935, -114.382, 1.92196, 0.52 ) }
    dend_38 { pt3dadd( 9.13732, -115.783, 2.19731, 0.74 ) }
    dend_38 { pt3dadd( 8.95427, -117.086, 2.46462, 0.96 ) }
    dend_38 { pt3dadd( 8.79426, -118.306, 2.69862, 1.62 ) }
    dend_38 { pt3dadd( 8.64424, -119.523, 2.90178, 1.62 ) }
    dend_38 { pt3dadd( 8.47333, -121.043, 3.10018, 1.33 ) }
    dend_38 { pt3dadd( 8.35332, -122.29, 3.20113, 0.44 ) }
    dend_38 { pt3dadd( 8.25707, -123.03, 3.22935, 0.59 ) }
    dend_38 { pt3dadd( 7.99668, -124.416, 3.27917, 0.59 ) }
    dend_38 { pt3dadd( 7.62626, -125.905, 3.36789, 0.88 ) }
    dend_38 { pt3dadd( 7.26282, -127.053, 3.47034, 1.25 ) }
    dend_38 { pt3dadd( 6.99932, -127.752, 3.56184, 2.21 ) }
    dend_38 { pt3dadd( 6.33857, -129.384, 3.85255, 1.84 ) }
    dend_38 { pt3dadd( 5.56946, -131.227, 4.25332, 1.33 ) }
    dend_38 { pt3dadd( 4.87919, -132.915, 4.69927, 0.66 ) }
    dend_38 { pt3dadd( 4.54965, -133.802, 4.94196, 0.44 ) }
    dend_38 { pt3dadd( 4.2312, -134.756, 5.19881, 0.44 ) }
    dend_38 { pt3dadd( 3.93539, -135.775, 5.45871, 0.81 ) }
    dend_38 { pt3dadd( 3.65514, -137.072, 5.73504, 1.11 ) }
    dend_38 { pt3dadd( 3.43522, -138.517, 5.96393, 0.74 ) }
    dend_38 { pt3dadd( 3.24838, -140.08, 6.16177, 0.37 ) }
    dend_38 { pt3dadd( 3.10645, -141.284, 6.28212, 0.37 ) }
    dend_38 { pt3dadd( 3.0047, -142.044, 6.35449, 0.74 ) }
    dend_38 { pt3dadd( 2.8226, -143.196, 6.47657, 0.88 ) }
    dend_38 { pt3dadd( 2.52099, -144.882, 6.69965, 0.44 ) }
    dend_38 { pt3dadd( 2.35136, -145.664, 6.85145, 0.44 ) }
    dend_38 { pt3dadd( 2.15607, -146.414, 7.08697, 0.59 ) }
    dend_38 { pt3dadd( 1.88648, -147.243, 7.45149, 0.96 ) }
    dend_38 { pt3dadd( 1.63219, -147.917, 7.82709, 1.25 ) }
    dend_38 { pt3dadd( 1.35446, -148.62, 8.29736, 1.25 ) }
    dend_38 { pt3dadd( 1.05197, -149.461, 8.90821, 0.81 ) }
    dend_38 { pt3dadd( 0.893093, -150.13, 9.3529, 1.11 ) }
    dend_38 { pt3dadd( 0.790162, -151.287, 9.91268, 0.22 ) }
    dend_38 { pt3dadd( 0.792038, -151.818, 10.0607, 0.22 ) }
    dend_38 { pt3dadd( 0.826946, -152.659, 10.2138, 0.22 ) }
    dend_38 { pt3dadd( 0.847255, -153.419, 10.3095, 0.74 ) }
    dend_38 { pt3dadd( 0.848246, -154.182, 10.3906, 1.18 ) }
    dend_38 { pt3dadd( 0.795963, -155.924, 10.5925, 0.66 ) }
    dend_38 { pt3dadd( 0.693164, -157.43, 10.8208, 0.37 ) }
    dend_38 { pt3dadd( 0.470473, -158.753, 11.114, 0.66 ) }
    dend_38 { pt3dadd( 0.217352, -159.859, 11.4456, 0.66 ) }
    dend_38 { pt3dadd( 0.0104741, -160.702, 11.759, 1.25 ) }
    dend_38 { pt3dadd( -0.173715, -161.5, 12.1168, 2.06 ) }
    dend_38 { pt3dadd( -0.39449, -162.672, 12.7252, 2.21 ) }
    dend_38 { pt3dadd( -0.695269, -164.866, 13.9128, 1.03 ) }
    dend_38 { pt3dadd( -0.815317, -166.121, 14.5687, 0.59 ) }
    dend_38 { pt3dadd( -0.895262, -167.428, 15.1656, 0.37 ) }
    dend_38 { pt3dadd( -0.920557, -168.398, 15.5604, 0.66 ) }
    dend_38 { pt3dadd( -0.904657, -169.573, 15.9865, 0.37 ) }
    dend_38 { pt3dadd( -0.815412, -170.845, 16.4098, 0.29 ) }
    dend_38 { pt3dadd( -0.71425, -171.672, 16.6498, 0.52 ) }
    dend_38 { pt3dadd( -0.559109, -173.111, 17.0584, 0.22 ) }
    dend_38 { pt3dadd( -0.445529, -173.844, 17.3316, 0.22 ) }
    dend_38 { pt3dadd( -0.247571, -174.642, 17.7335, 0.29 ) }
    dend_38 { pt3dadd( 0.0273043, -175.371, 18.2377, 0.96 ) }
    dend_38 { pt3dadd( 0.342912, -176.075, 18.819, 1.77 ) }
    dend_38 { pt3dadd( 0.654349, -176.769, 19.3918, 1.77 ) }
    dend_38 { pt3dadd( 1.31767, -178.385, 20.5683, 0.29 ) }
    dend_38 { pt3dadd( 1.56001, -179.094, 20.9506, 0.29 ) }
    dend_38 { pt3dadd( 1.71811, -179.721, 21.1796, 0.29 ) }
    dend_38 { pt3dadd( 1.88613, -180.681, 21.3812, 0.29 ) }
    dend_38 { pt3dadd( 1.99994, -181.948, 21.5076, 0.29 ) }
    dend_38 { pt3dadd( 1.99026, -183.435, 21.5383, 0.29 ) }
    dend_38 { pt3dadd( 1.91636, -184.169, 21.5274, 0.29 ) }
    dend_38 { pt3dadd( 1.71732, -185.258, 21.5331, 0.29 ) }
    dend_38 { pt3dadd( 1.39556, -186.533, 21.6089, 0.29 ) }
    dend_38 { pt3dadd( 1.00587, -187.862, 21.7867, 0.29 ) }
    dend_38 { pt3dadd( 0.742685, -188.694, 21.9428, 1.03 ) }
    dend_38 { pt3dadd( 0.417338, -189.663, 22.167, 1.92 ) }
    dend_38 { pt3dadd( -0.128429, -191.295, 22.5784, 3.02 ) }
    dend_38 { pt3dadd( -0.718268, -193.125, 23.076, 2.36 ) }
    dend_38 { pt3dadd( -1.36602, -195.23, 23.6853, 0.22 ) }
    dend_38 { pt3dadd( -1.57991, -196.01, 23.9221, 0.22 ) }
    dend_38 { pt3dadd( -1.82036, -197.066, 24.2504, 0.22 ) }
    dend_38 { pt3dadd( -1.90586, -197.536, 24.3953, 0.52 ) }
    dend_38 { pt3dadd( -2.00227, -198.305, 24.6402, 0.96 ) }
    dend_38 { pt3dadd( -2.11523, -199.439, 24.9955, 0.44 ) }
    dend_38 { pt3dadd( -2.24992, -200.855, 25.4195, 0.22 ) }
    dend_38 { pt3dadd( -2.33469, -201.764, 25.6762, 0.37 ) }
    dend_38 { pt3dadd( -2.43144, -202.833, 25.9567, 0.81 ) }
    dend_38 { pt3dadd( -2.53458, -203.767, 26.1955, 0.96 ) }
    dend_38 { pt3dadd( -2.72275, -205.037, 26.4951, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -2.9312, -206.25, 26.7404, 0.66 ) }
    dend_38 { pt3dadd( -3.02682, -206.82, 26.8288, 0.22 ) }
    dend_38 { pt3dadd( -3.20604, -208.066, 26.978, 0.22 ) }
    dend_38 { pt3dadd( -3.26256, -208.656, 27.039, 0.44 ) }
    dend_38 { pt3dadd( -3.34931, -210.168, 27.1945, 0.22 ) }
    dend_38 { pt3dadd( -3.34919, -211.218, 27.3232, 0.22 ) }
    dend_38 { pt3dadd( -3.29978, -212.481, 27.5172, 0.29 ) }
    dend_38 { pt3dadd( -3.25843, -213.522, 27.6978, 0.52 ) }
    dend_38 { pt3dadd( -3.2162, -214.601, 27.8887, 0.52 ) }
    dend_38 { pt3dadd( -3.19857, -215.744, 28.1012, 0.52 ) }
    dend_38 { pt3dadd( -3.22316, -216.825, 28.3141, 1.18 ) }
    dend_38 { pt3dadd( -3.2982, -217.824, 28.5174, 2.43 ) }
    dend_38 { pt3dadd( -3.50029, -219.537, 28.88, 1.33 ) }
    dend_38 { pt3dadd( -3.70316, -220.923, 29.1609, 0.59 ) }
    dend_38 { pt3dadd( -3.88433, -222.055, 29.3746, 0.81 ) }
    dend_38 { pt3dadd( -4.04286, -223.033, 29.5502, 0.15 ) }
    dend_38 { pt3dadd( -4.15239, -223.683, 29.6621, 0.15 ) }
    dend_38 { pt3dadd( -4.19547, -224.011, 29.7177, 0.15 ) }
    dend_38 { pt3dadd( -4.24161, -224.421, 29.8007, 0.22 ) }
    dend_38 { pt3dadd( -4.3577, -225.208, 29.987, 0.37 ) }
    dend_38 { pt3dadd( -4.55951, -226.124, 30.1909, 0.37 ) }
    dend_38 { pt3dadd( -4.87551, -227.103, 30.3727, 0.22 ) }
    dend_38 { pt3dadd( -5.33422, -228.153, 30.5363, 0.22 ) }
    dend_38 { pt3dadd( -5.66927, -228.757, 30.6091, 0.22 ) }
    dend_38 { pt3dadd( -6.04702, -229.317, 30.6702, 0.74 ) }
    dend_38 { pt3dadd( -6.66349, -230.125, 30.7457, 1.77 ) }
    dend_38 { pt3dadd( -7.40528, -231.039, 30.8168, 2.21 ) }
    dend_38 { pt3dadd( -7.95073, -231.696, 30.896, 2.21 ) }
    dend_38 { pt3dadd( -9.13227, -233.11, 31.13, 0.37 ) }
    dend_38 { pt3dadd( -9.85726, -234.051, 31.3235, 0.37 ) }
    dend_38 { pt3dadd( -10.3962, -234.86, 31.5225, 0.22 ) }
    dend_38 { pt3dadd( -10.8207, -235.621, 31.7592, 0.22 ) }
    dend_38 { pt3dadd( -11.2847, -236.561, 32.1092, 0.22 ) }
    dend_38 { pt3dadd( -11.5321, -237.11, 32.3524, 0.81 ) }
    dend_38 { pt3dadd( -11.8717, -237.944, 32.8295, 1.25 ) }
    dend_38 { pt3dadd( -12.2529, -238.89, 33.4932, 0.88 ) }
    dend_38 { pt3dadd( -12.7008, -239.893, 34.2967, 0.22 ) }
    dend_38 { pt3dadd( -12.9337, -240.403, 34.712, 0.22 ) }
    dend_38 { pt3dadd( -13.1887, -241.022, 35.1513, 0.22 ) }
    dend_38 { pt3dadd( -13.4228, -241.783, 35.6219, 0.22 ) }
    dend_38 { pt3dadd( -13.5795, -242.786, 36.0726, 0.44 ) }
    dend_38 { pt3dadd( -13.6413, -243.74, 36.3666, 1.47 ) }
    dend_38 { pt3dadd( -13.6963, -244.782, 36.5853, 1.47 ) }
    dend_38 { pt3dadd( -13.7973, -246.094, 36.7891, 0.44 ) }
    dend_38 { pt3dadd( -13.9123, -247.317, 36.9286, 0.96 ) }
    dend_38 { pt3dadd( -14.1466, -249.099, 37.0808, 0.22 ) }
    dend_38 { pt3dadd( -14.2955, -250.043, 37.1587, 0.22 ) }
    dend_38 { pt3dadd( -14.5812, -251.478, 37.3017, 0.22 ) }
    dend_38 { pt3dadd( -14.86, -252.546, 37.4121, 0.22 ) }
    dend_38 { pt3dadd( -15.1103, -253.328, 37.4931, 0.22 ) }
    dend_38 { pt3dadd( -15.4623, -254.26, 37.5888, 0.22 ) }
    dend_38 { pt3dadd( -15.9685, -255.501, 37.7423, 0.22 ) }
    dend_38 { pt3dadd( -16.2641, -256.28, 37.8434, 0.81 ) }
    dend_38 { pt3dadd( -16.6781, -257.484, 38.0067, 1.77 ) }
    dend_38 { pt3dadd( -17.0469, -258.656, 38.1922, 1.18 ) }
    dend_38 { pt3dadd( -17.6889, -260.913, 38.5887, 0.22 ) }
    dend_38 { pt3dadd( -17.867, -261.666, 38.743, 0.22 ) }
    dend_38 { pt3dadd( -18.1187, -262.962, 39.0622, 0.88 ) }
    dend_38 { pt3dadd( -18.3487, -264.573, 39.5414, 0.15 ) }
    dend_38 { pt3dadd( -18.4179, -265.516, 39.897, 0.15 ) }
    dend_38 { pt3dadd( -18.3941, -266.44, 40.2839, 0.29 ) }
    dend_38 { pt3dadd( -18.2617, -267.375, 40.7043, 0.74 ) }
    dend_38 { pt3dadd( -18.1217, -268.088, 41.0326, 1.4 ) }
    dend_38 { pt3dadd( -17.8648, -269.157, 41.5629, 0.59 ) }
    dend_38 { pt3dadd( -17.5093, -270.576, 42.2713, 0.15 ) }
    dend_38 { pt3dadd( -17.2505, -271.658, 42.7875, 0.15 ) }
    dend_38 { pt3dadd( -17.0163, -272.637, 43.234, 0.15 ) }
    dend_38 { pt3dadd( -16.782, -273.536, 43.5912, 0.29 ) }
    dend_38 { pt3dadd( -16.4509, -274.662, 44.0123, 0.96 ) }
    dend_38 { pt3dadd( -16.0697, -275.901, 44.4649, 0.44 ) }
    dend_38 { pt3dadd( -15.7595, -276.902, 44.8355, 0.22 ) }
    dend_38 { pt3dadd( -15.3747, -278.108, 45.3304, 0.22 ) }
    dend_38 { pt3dadd( -14.9697, -279.263, 45.8179, 0.15 ) }
    dend_38 { pt3dadd( -14.6012, -280.249, 46.2132, 0.15 ) }
    dend_38 { pt3dadd( -14.358, -280.914, 46.4648, 0.15 ) }
    dend_38 { pt3dadd( -14.1555, -281.578, 46.6939, 0.29 ) }
    dend_38 { pt3dadd( -13.9142, -282.759, 47.0434, 0.44 ) }
    dend_38 { pt3dadd( -13.7905, -283.922, 47.3329, 0.44 ) }
    dend_38 { pt3dadd( -13.7362, -285.531, 47.6963, 0.44 ) }
    dend_38 { pt3dadd( -13.7612, -286.863, 47.9287, 0.44 ) }
    dend_38 { pt3dadd( -13.8584, -288.5, 48.1625, 0.88 ) }
    dend_38 { pt3dadd( -14.0107, -289.776, 48.3174, 1.03 ) }
    dend_38 { pt3dadd( -14.2452, -290.999, 48.4582, 0.37 ) }
    dend_38 { pt3dadd( -14.5359, -292.02, 48.5966, 0.15 ) }
    dend_38 { pt3dadd( -14.9218, -293.009, 48.7781, 0.15 ) }
    dend_38 { pt3dadd( -15.3343, -293.852, 48.9728, 0.37 ) }
    dend_38 { pt3dadd( -15.9517, -294.9, 49.2716, 0.22 ) }
    dend_38 { pt3dadd( -16.4698, -295.645, 49.5208, 0.81 ) }
    dend_38 { pt3dadd( -17.412, -296.793, 49.9623, 1.25 ) }
    dend_38 { pt3dadd( -18.5818, -297.987, 50.4878, 0.88 ) }
    dend_38 { pt3dadd( -19.3819, -298.688, 50.8286, 0.22 ) }
    dend_38 { pt3dadd( -20.2001, -299.333, 51.1309, 0.22 ) }
    dend_38 { pt3dadd( -21.029, -299.96, 51.3865, 0.74 ) }
    dend_38 { pt3dadd( -22.1898, -300.872, 51.6555, 1.47 ) }
    dend_38 { pt3dadd( -23.1287, -301.671, 51.7897, 0.37 ) }
    dend_38 { pt3dadd( -24.5232, -302.991, 51.8252, 0.22 ) }
    dend_38 { pt3dadd( -25.4636, -304.02, 51.7164, 0.29 ) }
    dend_38 { pt3dadd( -26.2196, -305.026, 51.5037, 0.29 ) }
    dend_38 { pt3dadd( -26.7555, -305.983, 51.2109, 0.29 ) }
    dend_38 { pt3dadd( -27.1633, -307.039, 50.8239, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_38 { pt3dadd( -27.5155, -308.438, 50.3128, 0.22 ) }
    dend_38 { pt3dadd( -27.7326, -310.011, 49.7724, 0.22 ) }
    dend_38 { pt3dadd( -27.7851, -310.779, 49.5354, 0.22 ) }
    dend_38 { pt3dadd( -27.8013, -311.955, 49.2628, 0.37 ) }
    dend_38 { pt3dadd( -27.795, -312.843, 49.1379, 0.59 ) }
    dend_38 { pt3dadd( -27.8156, -314.968, 49.0002, 0.66 ) }
    dend_38 { pt3dadd( -27.8681, -316.435, 49.0101, 0.88 ) }
    dend_38 { pt3dadd( -27.918, -317.423, 49.1117, 0.88 ) }
    dend_38 { pt3dadd( -28.0511, -319.197, 49.39, 0.52 ) }
    dend_38 { pt3dadd( -28.2239, -321.122, 49.7668, 0.22 ) }
    dend_38 { pt3dadd( -28.3636, -323.055, 50.2286, 0.22 ) }
    dend_38 { pt3dadd( -28.4095, -323.847, 50.4539, 0.81 ) }
    dend_38 { pt3dadd( -28.5342, -325.949, 51.1087, 1.25 ) }
    dend_38 { pt3dadd( -28.5776, -327.157, 51.4821, 1.03 ) }
    dend_38 { pt3dadd( -28.5868, -327.936, 51.7123, 1.03 ) }
    dend_38 { pt3dadd( -28.5348, -329.849, 52.29, 0.22 ) }
    dend_38 { pt3dadd( -28.4576, -331.262, 52.7089, 0.22 ) }
    dend_38 { pt3dadd( -28.4319, -332.214, 52.97, 0.22 ) }
    dend_38 { pt3dadd( -28.4691, -333.762, 53.3433, 0.22 ) }
    dend_38 { pt3dadd( -28.5559, -334.646, 53.5636, 0.22 ) }
    dend_38 { pt3dadd( -28.8639, -336.274, 53.9605, 0.22 ) }
    dend_38 { pt3dadd( -29.2226, -337.361, 54.2175, 0.74 ) }
    dend_38 { pt3dadd( -29.675, -338.401, 54.445, 1.11 ) }
    dend_38 { pt3dadd( -30.0857, -339.172, 54.5693, 1.11 ) }
    dend_38 { pt3dadd( -31.0306, -340.635, 54.708, 0.74 ) }
    dend_38 { pt3dadd( -31.7911, -341.687, 54.6942, 1.4 ) }
    dend_38 { pt3dadd( -33.0345, -343.289, 54.4857, 0.66 ) }
    dend_38 { pt3dadd( -33.9012, -344.406, 54.2453, 0.07 ) }
    dend_38 { pt3dadd( -34.9639, -345.826, 53.8738, 0.07 ) }
    dend_38 { pt3dadd( -35.6634, -346.79, 53.5985, 0.22 ) }
    dend_38 { pt3dadd( -36.4227, -347.934, 53.2647, 0.22 ) }
    dend_38 { pt3dadd( -36.9239, -348.745, 53.0524, 0.44 ) }
    dend_38 { pt3dadd( -37.5109, -349.814, 52.8288, 0.44 ) }
    dend_38 { pt3dadd( -38.2417, -351.258, 52.7336, 0.44 ) }
    dend_38 { pt3dadd( -38.6789, -352.203, 52.8331, 0.22 ) }
    dend_38 { pt3dadd( -39.2526, -353.53, 53.1387, 0.15 ) }
    dend_38 { pt3dadd( -39.595, -354.273, 53.4233, 0.37 ) }
    dend_38 { pt3dadd( -39.8446, -354.734, 53.681, 0.37 ) }
    dend_38 { pt3dadd( -40.4899, -355.819, 54.4509, 0.15 ) }
    dend_38 { pt3dadd( -41.1, -356.749, 55.2379, 0.15 ) }
    dend_38 { pt3dadd( -41.3045, -357.025, 55.4988, 0.52 ) }
    dend_38 { pt3dadd( -41.9081, -357.659, 56.1854, 1.03 ) }
    dend_38 { pt3dadd( -42.7682, -358.437, 57.0544, 0.15 ) }
    dend_38 { pt3dadd( -43.4357, -358.967, 57.6251, 0.15 ) }
    dend_38 { pt3dadd( -44.1187, -359.464, 58.0894, 0.15 ) }
    dend_38 { pt3dadd( -44.5769, -359.812, 58.343, 0.59 ) }
    dend_38 { pt3dadd( -45.5845, -360.652, 58.8269, 0.15 ) }
    dend_38 { pt3dadd( -45.9206, -360.951, 58.964, 0.15 ) }
    dend_38 { pt3dadd( -46.4474, -361.484, 59.1508, 0.66 ) }
    dend_38 { pt3dadd( -46.8932, -361.993, 59.3037, 0.81 ) }
    dend_38 { pt3dadd( -48.1032, -363.565, 59.7119, 0.15 ) }
    dend_38 { pt3dadd( -49.0407, -364.927, 60.0242, 0.15 ) }
    dend_38 { pt3dadd( -49.8369, -366.215, 60.2854, 0.29 ) }
    dend_38 { pt3dadd( -50.9247, -368.065, 60.6373, 0.22 ) }
    dend_38 { pt3dadd( -51.8547, -369.737, 60.9369, 0.15 ) }
    dend_38 { pt3dadd( -52.2316, -370.422, 61.0583, 0.66 ) }
    dend_38 { pt3dadd( -52.8508, -371.477, 61.2316, 0.81 ) }
    dend_38 { pt3dadd( -53.6557, -372.687, 61.4236, 0.44 ) }
    dend_38 { pt3dadd( -54.1567, -373.403, 61.5356, 1.03 ) }
    dend_38 { pt3dadd( -54.7121, -374.091, 61.652, 1.25 ) }
    dend_38 { pt3dadd( -56.258, -375.804, 61.948, 0.52 ) }
    dend_38 { pt3dadd( -57.4813, -377.019, 62.1655, 0.22 ) }
    dend_38 { pt3dadd( -58.2795, -377.701, 62.2903, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 63/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.92136, 28.8027, -0.0100416, 0.96 ) }
    dend_24 { pt3dadd( 8.41043, 30.1203, -0.930219, 0.96 ) }
    dend_24 { pt3dadd( 9.1362, 30.758, -1.37555, 1.03 ) }
    dend_24 { pt3dadd( 10.1049, 31.5609, -1.79912, 1.03 ) }
    dend_24 { pt3dadd( 10.9633, 32.2724, -2.17448, 1.62 ) }
    dend_24 { pt3dadd( 11.7952, 32.9619, -2.5382, 1.33 ) }
    dend_24 { pt3dadd( 12.9631, 33.93, -3.0489, 1.03 ) }
    dend_24 { pt3dadd( 13.8536, 34.667, -3.4028, 0.96 ) }
    dend_24 { pt3dadd( 15.5772, 36.0671, -3.99635, 1.62 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 72/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 6.92136, 28.8027, -0.0100416, 0.88 ) }
    dend_21 { pt3dadd( 7.42658, 30.1112, -0.257832, 0.88 ) }
    dend_21 { pt3dadd( 8.04142, 31.419, -0.569898, 0.81 ) }
    dend_21 { pt3dadd( 8.32702, 32.0323, -0.748353, 0.66 ) }
    dend_21 { pt3dadd( 8.59742, 32.6709, -0.948632, 1.11 ) }
    dend_21 { pt3dadd( 8.91216, 33.5358, -1.21489, 0.74 ) }
    dend_21 { pt3dadd( 9.11082, 34.1799, -1.4109, 0.52 ) }
    dend_21 { pt3dadd( 9.31506, 35.0901, -1.75029, 0.22 ) }
    dend_21 { pt3dadd( 9.33499, 35.8171, -1.961, 0.29 ) }
    dend_21 { pt3dadd( 9.18324, 36.3322, -2.05736, 0.29 ) }
    dend_21 { pt3dadd( 8.85372, 36.8773, -2.12574, 0.66 ) }
    dend_21 { pt3dadd( 8.61596, 37.1545, -2.15453, 0.66 ) }
    dend_21 { pt3dadd( 7.96225, 37.8091, -2.18686, 0.81 ) }
    dend_21 { pt3dadd( 7.12308, 38.6327, -2.22384, 1.18 ) }
    dend_21 { pt3dadd( 6.48663, 39.3224, -2.27332, 1.03 ) }
    dend_21 { pt3dadd( 5.83966, 40.1367, -2.37939, 0.81 ) }
    dend_21 { pt3dadd( 5.26886, 41.0015, -2.54091, 1.11 ) }
    dend_21 { pt3dadd( 4.62576, 42.1859, -2.81713, 0.88 ) }
    dend_21 { pt3dadd( 4.18427, 43.1755, -3.09504, 0.66 ) }
    dend_21 { pt3dadd( 3.8551, 44.0875, -3.36913, 0.66 ) }
    dend_21 { pt3dadd( 3.61299, 44.8527, -3.56325, 0.66 ) }
    dend_21 { pt3dadd( 3.4026, 45.547, -3.69882, 0.66 ) }
    dend_21 { pt3dadd( 3.14222, 46.3749, -3.84165, 0.81 ) }
    dend_21 { pt3dadd( 2.91778, 47.0086, -3.95708, 1.18 ) }
    dend_21 { pt3dadd( 2.6508, 47.7056, -4.06706, 1.18 ) }
    dend_21 { pt3dadd( 2.07633, 49.2466, -4.2651, 0.52 ) }
    dend_21 { pt3dadd( 1.74828, 50.0597, -4.35112, 0.52 ) }
    dend_21 { pt3dadd( 1.49953, 50.7026, -4.41698, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 1.35525, 51.1647, -4.4664, 1.03 ) }
    dend_21 { pt3dadd( 1.18674, 52.0, -4.59149, 1.03 ) }
    dend_21 { pt3dadd( 1.15107, 53.0183, -4.84486, 0.66 ) }
    dend_21 { pt3dadd( -0.401297, 61.1818, -7.32378, 0.66 ) }
    dend_21 { pt3dadd( -1.8701, 69.5812, -8.90164, 0.66 ) }
    dend_21 { pt3dadd( -4.94082, 77.6596, -9.61318, 0.66 ) }
    dend_21 { pt3dadd( -8.51385, 85.5532, -9.96247, 0.66 ) }
    dend_21 { pt3dadd( -12.542, 93.1642, -10.9837, 0.66 ) }
    dend_21 { pt3dadd( -17.6486, 100.17, -10.7928, 0.66 ) }
    dend_21 { pt3dadd( -22.8854, 107.009, -11.792, 0.66 ) }
    dend_21 { pt3dadd( -27.5654, 114.141, -13.3484, 0.66 ) }
    dend_21 { pt3dadd( -32.1318, 121.507, -13.6432, 0.66 ) }
    dend_21 { pt3dadd( -37.3926, 128.289, -14.8797, 0.66 ) }
    dend_21 { pt3dadd( -41.6393, 135.324, -17.6499, 0.66 ) }
    dend_21 { pt3dadd( -46.0978, 142.426, -19.8575, 0.66 ) }
    dend_21 { pt3dadd( -50.7339, 149.402, -22.1048, 0.66 ) }
    dend_21 { pt3dadd( -55.5119, 156.098, -24.848, 0.66 ) }
    dend_21 { pt3dadd( -61.1857, 161.958, -27.7921, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 18/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.54204, 30.5355, 5.89466, 0.96 ) }
    dend_13 { pt3dadd( -2.21846, 30.9832, 5.86472, 0.96 ) }
    dend_13 { pt3dadd( -2.87216, 31.2597, 5.87979, 0.66 ) }
    dend_13 { pt3dadd( -3.80124, 31.3518, 5.97363, 0.52 ) }
    dend_13 { pt3dadd( -4.17991, 31.1649, 6.06932, 0.52 ) }
    dend_13 { pt3dadd( -4.68982, 30.5248, 6.28543, 0.52 ) }
    dend_13 { pt3dadd( -4.94561, 30.1721, 6.40983, 0.88 ) }
    dend_13 { pt3dadd( -5.48156, 29.3336, 6.7157, 1.11 ) }
    dend_13 { pt3dadd( -5.97567, 28.5685, 7.00574, 1.25 ) }
    dend_13 { pt3dadd( -6.40039, 27.9873, 7.22571, 1.25 ) }
    dend_13 { pt3dadd( -7.30132, 26.947, 7.59955, 0.66 ) }
    dend_13 { pt3dadd( -7.82872, 26.429, 7.77188, 0.96 ) }
    dend_13 { pt3dadd( -8.41743, 25.9456, 7.93875, 1.33 ) }
    dend_13 { pt3dadd( -9.19309, 25.4153, 8.13773, 1.33 ) }
    dend_13 { pt3dadd( -10.3802, 24.7244, 8.43424, 1.33 ) }
    dend_13 { pt3dadd( -11.6887, 24.0253, 8.78295, 0.88 ) }
    dend_13 { pt3dadd( -12.4783, 23.6378, 8.9848, 0.88 ) }
    dend_13 { pt3dadd( -13.3753, 23.1914, 9.20924, 1.4 ) }
    dend_13 { pt3dadd( -13.9564, 22.8896, 9.36302, 1.55 ) }
    dend_13 { pt3dadd( -14.8558, 22.3931, 9.62991, 2.06 ) }
    dend_13 { pt3dadd( -15.5493, 21.9555, 9.91628, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.54204, 30.5355, 5.89466, 0.74 ) }
    dend_12 { pt3dadd( -1.80654, 29.4623, 5.51962, 0.74 ) }
    dend_12 { pt3dadd( -2.20795, 28.1036, 5.06485, 0.52 ) }
    dend_12 { pt3dadd( -2.59526, 26.9216, 4.69512, 0.88 ) }
    dend_12 { pt3dadd( -3.06368, 25.669, 4.36794, 0.44 ) }
    dend_12 { pt3dadd( -3.39853, 24.867, 4.18975, 0.44 ) }
    dend_12 { pt3dadd( -3.6681, 24.2657, 4.06987, 0.37 ) }
    dend_12 { pt3dadd( -4.20504, 23.197, 3.91534, 0.88 ) }
    dend_12 { pt3dadd( -4.76933, 22.0754, 3.84489, 0.44 ) }
    dend_12 { pt3dadd( -5.36756, 20.835, 3.82258, 0.44 ) }
    dend_12 { pt3dadd( -5.74613, 19.9378, 3.83249, 0.74 ) }
    dend_12 { pt3dadd( -6.01457, 19.2268, 3.86017, 1.11 ) }
    dend_12 { pt3dadd( -6.55497, 17.6701, 3.97337, 0.96 ) }
    dend_12 { pt3dadd( -7.02488, 16.2177, 4.15419, 1.18 ) }
    dend_12 { pt3dadd( -7.42285, 14.9741, 4.37485, 1.18 ) }
    dend_12 { pt3dadd( -7.8904, 13.5588, 4.67822, 0.88 ) }
    dend_12 { pt3dadd( -8.29861, 12.3892, 4.97652, 0.66 ) }
    dend_12 { pt3dadd( -8.662, 11.4409, 5.26479, 0.66 ) }
    dend_12 { pt3dadd( -9.06574, 10.4331, 5.59986, 0.66 ) }
    dend_12 { pt3dadd( -9.5423, 9.28308, 5.99981, 0.66 ) }
    dend_12 { pt3dadd( -10.0689, 7.96736, 6.44768, 0.66 ) }
    dend_12 { pt3dadd( -10.7543, 6.1082, 6.96332, 0.52 ) }
    dend_12 { pt3dadd( -11.0732, 5.09926, 7.17254, 0.52 ) }
    dend_12 { pt3dadd( -11.5231, 3.34438, 7.4223, 0.52 ) }
    dend_12 { pt3dadd( -11.7619, 2.12707, 7.51169, 0.52 ) }
    dend_12 { pt3dadd( -11.941, 0.876404, 7.54288, 0.52 ) }
    dend_12 { pt3dadd( -12.1296, -0.746256, 7.54232, 0.96 ) }
    dend_12 { pt3dadd( -12.2353, -1.56937, 7.5139, 1.11 ) }
    dend_12 { pt3dadd( -12.3627, -2.41096, 7.46237, 1.11 ) }
    dend_12 { pt3dadd( -12.7479, -4.4799, 7.30989, 0.44 ) }
    dend_12 { pt3dadd( -12.9565, -5.45647, 7.21452, 0.44 ) }
    dend_12 { pt3dadd( -13.4225, -7.19173, 7.01749, 0.66 ) }
    dend_12 { pt3dadd( -13.7889, -8.36741, 6.85975, 0.52 ) }
    dend_12 { pt3dadd( -13.9935, -8.97272, 6.75014, 0.88 ) }
    dend_12 { pt3dadd( -14.1801, -9.50221, 6.63402, 1.33 ) }
    dend_12 { pt3dadd( -14.5694, -10.6834, 6.34239, 0.96 ) }
    dend_12 { pt3dadd( -15.0573, -12.3846, 5.91817, 0.59 ) }
    dend_12 { pt3dadd( -15.3377, -13.6049, 5.61547, 0.59 ) }
    dend_12 { pt3dadd( -15.4822, -14.4006, 5.44175, 0.96 ) }
    dend_12 { pt3dadd( -15.6546, -15.5199, 5.23046, 0.52 ) }
    dend_12 { pt3dadd( -15.8563, -17.041, 5.00193, 0.22 ) }
    dend_12 { pt3dadd( -15.9804, -18.019, 4.89449, 0.29 ) }
    dend_12 { pt3dadd( -16.1149, -18.8897, 4.80357, 0.29 ) }
    dend_12 { pt3dadd( -16.256, -19.5529, 4.73075, 1.03 ) }
    dend_12 { pt3dadd( -16.5192, -20.5499, 4.60159, 1.84 ) }
    dend_12 { pt3dadd( -17.0084, -21.9991, 4.37162, 0.74 ) }
    dend_12 { pt3dadd( -17.6383, -23.4822, 4.08935, 0.29 ) }
    dend_12 { pt3dadd( -18.3756, -24.8202, 3.77086, 0.29 ) }
    dend_12 { pt3dadd( -18.8392, -25.5258, 3.57731, 0.29 ) }
    dend_12 { pt3dadd( -19.1707, -25.9907, 3.44006, 0.88 ) }
    dend_12 { pt3dadd( -19.625, -26.6039, 3.25542, 1.47 ) }
    dend_12 { pt3dadd( -20.1089, -27.2847, 3.05193, 0.88 ) }
    dend_12 { pt3dadd( -21.198, -29.027, 2.58132, 0.22 ) }
    dend_12 { pt3dadd( -21.5438, -29.7053, 2.42586, 0.15 ) }
    dend_12 { pt3dadd( -21.9191, -30.5677, 2.26708, 0.37 ) }
    dend_12 { pt3dadd( -22.249, -31.3438, 2.14098, 0.22 ) }
    dend_12 { pt3dadd( -22.7726, -32.5024, 1.9576, 0.22 ) }
    dend_12 { pt3dadd( -23.2625, -33.4572, 1.79252, 0.52 ) }
    dend_12 { pt3dadd( -23.5829, -33.9847, 1.69099, 0.96 ) }
    dend_12 { pt3dadd( -24.3298, -34.9338, 1.45407, 1.62 ) }
    dend_12 { pt3dadd( -25.3609, -35.9902, 1.11889, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( -26.5304, -37.0355, 0.747735, 0.59 ) }
    dend_12 { pt3dadd( -27.4577, -37.7932, 0.467532, 0.88 ) }
    dend_12 { pt3dadd( -28.343, -38.5106, 0.200066, 1.55 ) }
    dend_12 { pt3dadd( -29.1144, -39.1476, -0.0368301, 1.55 ) }
    dend_12 { pt3dadd( -30.2546, -40.1758, -0.402388, 0.37 ) }
    dend_12 { pt3dadd( -31.2021, -41.1361, -0.680154, 0.22 ) }
    dend_12 { pt3dadd( -31.7446, -41.7399, -0.826095, 0.44 ) }
    dend_12 { pt3dadd( -32.5066, -42.6638, -1.01904, 1.11 ) }
    dend_12 { pt3dadd( -32.8587, -43.1543, -1.10764, 1.11 ) }
    dend_12 { pt3dadd( -33.5854, -44.2978, -1.28135, 0.44 ) }
    dend_12 { pt3dadd( -34.1624, -45.3299, -1.44206, 0.22 ) }
    dend_12 { pt3dadd( -34.6226, -46.2942, -1.60563, 0.29 ) }
    dend_12 { pt3dadd( -34.8785, -46.8868, -1.72904, 0.15 ) }
    dend_12 { pt3dadd( -35.286, -47.8915, -1.9675, 0.29 ) }
    dend_12 { pt3dadd( -35.4425, -48.2935, -2.07104, 0.96 ) }
    dend_12 { pt3dadd( -35.8039, -49.2362, -2.33575, 1.62 ) }
    dend_12 { pt3dadd( -36.3832, -50.8358, -2.79541, 2.06 ) }
    dend_12 { pt3dadd( -36.9407, -52.4026, -3.21971, 1.4 ) }
    dend_12 { pt3dadd( -37.2126, -53.1597, -3.41099, 0.59 ) }
    dend_12 { pt3dadd( -37.6513, -54.3443, -3.68503, 0.22 ) }
    dend_12 { pt3dadd( -37.9295, -55.1408, -3.8423, 0.22 ) }
    dend_12 { pt3dadd( -38.196, -55.9459, -3.9691, 0.66 ) }
    dend_12 { pt3dadd( -38.471, -56.8363, -4.08576, 0.74 ) }
    dend_12 { pt3dadd( -38.7547, -57.7933, -4.18543, 0.22 ) }
    dend_12 { pt3dadd( -39.0951, -58.8634, -4.28368, 0.15 ) }
    dend_12 { pt3dadd( -39.399, -59.7414, -4.34154, 0.22 ) }
    dend_12 { pt3dadd( -39.6114, -60.3568, -4.36357, 0.66 ) }
    dend_12 { pt3dadd( -39.8894, -61.1257, -4.37538, 1.25 ) }
    dend_12 { pt3dadd( -40.3015, -62.182, -4.38515, 1.47 ) }
    dend_12 { pt3dadd( -40.8452, -63.4432, -4.40827, 0.88 ) }
    dend_12 { pt3dadd( -41.3553, -64.5096, -4.45191, 0.22 ) }
    dend_12 { pt3dadd( -41.7412, -65.2401, -4.50479, 0.22 ) }
    dend_12 { pt3dadd( -42.1381, -65.9401, -4.57856, 0.22 ) }
    dend_12 { pt3dadd( -42.8082, -67.0328, -4.74126, 0.37 ) }
    dend_12 { pt3dadd( -43.4118, -67.9656, -4.92986, 0.37 ) }
    dend_12 { pt3dadd( -44.0609, -68.9455, -5.16077, 0.52 ) }
    dend_12 { pt3dadd( -44.4516, -69.5342, -5.30436, 0.22 ) }
    dend_12 { pt3dadd( -44.8203, -70.1082, -5.4325, 0.37 ) }
    dend_12 { pt3dadd( -45.1502, -70.6961, -5.53588, 0.74 ) }
    dend_12 { pt3dadd( -45.6232, -71.756, -5.65047, 0.22 ) }
    dend_12 { pt3dadd( -46.023, -72.9099, -5.71606, 0.22 ) }
    dend_12 { pt3dadd( -46.2904, -73.844, -5.75476, 0.29 ) }
    dend_12 { pt3dadd( -46.4853, -74.5393, -5.79186, 0.52 ) }
    dend_12 { pt3dadd( -46.7633, -75.5405, -5.85702, 1.11 ) }
    dend_12 { pt3dadd( -47.0059, -76.4245, -5.92542, 1.7 ) }
    dend_12 { pt3dadd( -47.3455, -77.6466, -6.04481, 1.33 ) }
    dend_12 { pt3dadd( -47.7156, -79.0341, -6.20435, 0.22 ) }
    dend_12 { pt3dadd( -47.9803, -80.1374, -6.31601, 0.22 ) }
    dend_12 { pt3dadd( -48.0674, -80.5197, -6.35201, 0.22 ) }
    dend_12 { pt3dadd( -48.1657, -80.9657, -6.39089, 0.29 ) }
    dend_12 { pt3dadd( -48.3159, -81.6561, -6.44618, 0.52 ) }
    dend_12 { pt3dadd( -48.5028, -82.547, -6.50554, 0.22 ) }
    dend_12 { pt3dadd( -48.6853, -83.2872, -6.55945, 0.22 ) }
    dend_12 { pt3dadd( -48.8837, -83.8988, -6.62931, 0.22 ) }
    dend_12 { pt3dadd( -49.1802, -84.5203, -6.75123, 0.81 ) }
    dend_12 { pt3dadd( -49.5112, -85.0165, -6.89938, 1.47 ) }
    dend_12 { pt3dadd( -49.8098, -85.3783, -7.0384, 1.47 ) }
    dend_12 { pt3dadd( -50.5859, -86.2162, -7.40627, 0.22 ) }
    dend_12 { pt3dadd( -51.0165, -86.6707, -7.61135, 0.22 ) }
    dend_12 { pt3dadd( -51.5301, -87.2521, -7.85455, 0.37 ) }
    dend_12 { pt3dadd( -52.1659, -88.0398, -8.15322, 0.44 ) }
    dend_12 { pt3dadd( -52.586, -88.5978, -8.34846, 0.22 ) }
    dend_12 { pt3dadd( -52.7511, -88.8436, -8.42974, 0.22 ) }
    dend_12 { pt3dadd( -52.9477, -89.1667, -8.5322, 0.22 ) }
    dend_12 { pt3dadd( -53.3165, -89.8065, -8.72977, 0.22 ) }
    dend_12 { pt3dadd( -53.6127, -90.3218, -8.8903, 0.74 ) }
    dend_12 { pt3dadd( -53.9757, -90.958, -9.08662, 1.47 ) }
    dend_12 { pt3dadd( -54.5423, -91.8549, -9.37547, 1.99 ) }
    dend_12 { pt3dadd( -55.1268, -92.662, -9.63961, 1.77 ) }
    dend_12 { pt3dadd( -56.144, -93.8902, -10.061, 0.66 ) }
    dend_12 { pt3dadd( -56.7478, -94.5359, -10.2945, 0.15 ) }
    dend_12 { pt3dadd( -57.3909, -95.1759, -10.537, 0.15 ) }
    dend_12 { pt3dadd( -58.0814, -95.8548, -10.7964, 0.22 ) }
    dend_12 { pt3dadd( -58.6846, -96.4208, -11.0252, 0.22 ) }
    dend_12 { pt3dadd( -59.2934, -97.0012, -11.2925, 0.29 ) }
    dend_12 { pt3dadd( -59.7905, -97.5082, -11.548, 0.81 ) }
    dend_12 { pt3dadd( -60.4276, -98.2524, -11.9338, 1.47 ) }
    dend_12 { pt3dadd( -61.0917, -99.1819, -12.4264, 0.52 ) }
    dend_12 { pt3dadd( -61.601, -100.154, -12.913, 0.22 ) }
    dend_12 { pt3dadd( -61.9051, -100.953, -13.2796, 0.22 ) }
    dend_12 { pt3dadd( -62.0923, -101.623, -13.5368, 0.22 ) }
    dend_12 { pt3dadd( -62.1616, -101.971, -13.6523, 0.22 ) }
    dend_12 { pt3dadd( -62.2436, -102.549, -13.8182, 0.29 ) }
    dend_12 { pt3dadd( -62.3437, -103.432, -14.0542, 0.74 ) }
    dend_12 { pt3dadd( -62.4154, -104.1, -14.2358, 1.03 ) }
    dend_12 { pt3dadd( -62.6344, -105.504, -14.6424, 0.37 ) }
    dend_12 { pt3dadd( -62.8308, -106.453, -14.9398, 0.88 ) }
    dend_12 { pt3dadd( -63.049, -107.358, -15.2338, 1.18 ) }
    dend_12 { pt3dadd( -63.2622, -108.177, -15.5034, 1.18 ) }
    dend_12 { pt3dadd( -63.6816, -109.683, -15.9743, 0.29 ) }
    dend_12 { pt3dadd( -64.0927, -110.974, -16.37, 0.29 ) }
    dend_12 { pt3dadd( -64.4159, -111.853, -16.6267, 0.37 ) }
    dend_12 { pt3dadd( -64.6788, -112.462, -16.7884, 0.88 ) }
    dend_12 { pt3dadd( -64.9691, -113.08, -16.9292, 0.66 ) }
    dend_12 { pt3dadd( -65.3578, -113.928, -17.0652, 0.22 ) }
    dend_12 { pt3dadd( -65.6564, -114.622, -17.1252, 0.22 ) }
    dend_12 { pt3dadd( -65.9441, -115.397, -17.1581, 0.37 ) }
    dend_12 { pt3dadd( -66.1281, -115.952, -17.1625, 0.66 ) }
    dend_12 { pt3dadd( -66.4093, -116.829, -17.1507, 1.11 ) }
    dend_12 { pt3dadd( -66.75, -117.872, -17.1316, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( -66.9823, -118.528, -17.1279, 0.29 ) }
    dend_12 { pt3dadd( -67.3239, -119.434, -17.1191, 0.22 ) }
    dend_12 { pt3dadd( -67.5598, -120.05, -17.1291, 0.29 ) }
    dend_12 { pt3dadd( -67.9511, -121.133, -17.1935, 0.96 ) }
    dend_12 { pt3dadd( -68.2141, -121.905, -17.2782, 1.03 ) }
    dend_12 { pt3dadd( -68.6211, -123.24, -17.4772, 0.81 ) }
    dend_12 { pt3dadd( -68.8982, -124.318, -17.6699, 0.29 ) }
    dend_12 { pt3dadd( -69.1161, -125.211, -17.8637, 0.22 ) }
    dend_12 { pt3dadd( -69.3366, -126.146, -18.0942, 0.29 ) }
    dend_12 { pt3dadd( -69.521, -126.962, -18.3165, 0.74 ) }
    dend_12 { pt3dadd( -69.6798, -127.681, -18.5149, 0.52 ) }
    dend_12 { pt3dadd( -70.0609, -129.249, -18.9577, 0.29 ) }
    dend_12 { pt3dadd( -70.502, -130.695, -19.3649, 0.29 ) }
    dend_12 { pt3dadd( -71.0218, -131.997, -19.7042, 0.29 ) }
    dend_12 { pt3dadd( -71.3526, -132.695, -19.8799, 0.29 ) }
    dend_12 { pt3dadd( -71.7051, -133.367, -20.0529, 1.03 ) }
    dend_12 { pt3dadd( -72.0631, -134.014, -20.2275, 1.7 ) }
    dend_12 { pt3dadd( -72.6969, -135.145, -20.5288, 1.4 ) }
    dend_12 { pt3dadd( -73.6576, -136.841, -20.9667, 0.44 ) }
    dend_12 { pt3dadd( -74.2331, -137.801, -21.2048, 0.15 ) }
    dend_12 { pt3dadd( -74.4921, -138.221, -21.3079, 0.37 ) }
    dend_12 { pt3dadd( -74.904, -138.892, -21.4817, 0.59 ) }
    dend_12 { pt3dadd( -75.2881, -139.554, -21.6625, 0.59 ) }
    dend_12 { pt3dadd( -75.9723, -140.804, -22.0354, 0.22 ) }
    dend_12 { pt3dadd( -76.4811, -141.732, -22.3504, 0.22 ) }
    dend_12 { pt3dadd( -76.8653, -142.417, -22.5903, 0.22 ) }
    dend_12 { pt3dadd( -77.1661, -142.968, -22.7836, 0.88 ) }
    dend_12 { pt3dadd( -77.4664, -143.525, -22.9509, 1.47 ) }
    dend_12 { pt3dadd( -77.8968, -144.352, -23.1737, 1.84 ) }
    dend_12 { pt3dadd( -79.1267, -146.797, -23.7593, 0.22 ) }
    dend_12 { pt3dadd( -79.3091, -147.179, -23.8479, 0.22 ) }
    dend_12 { pt3dadd( -79.5519, -147.69, -23.9583, 0.22 ) }
    dend_12 { pt3dadd( -80.1107, -148.821, -24.2209, 0.22 ) }
    dend_12 { pt3dadd( -80.4903, -149.529, -24.4087, 0.22 ) }
    dend_12 { pt3dadd( -80.801, -150.069, -24.5816, 0.74 ) }
    dend_12 { pt3dadd( -81.3501, -151.024, -24.9444, 1.33 ) }
    dend_12 { pt3dadd( -82.042, -152.163, -25.435, 0.22 ) }
    dend_12 { pt3dadd( -82.45, -152.804, -25.7421, 0.22 ) }
    dend_12 { pt3dadd( -82.9074, -153.523, -26.0759, 0.22 ) }
    dend_12 { pt3dadd( -83.2645, -154.111, -26.2714, 0.15 ) }
    dend_12 { pt3dadd( -83.5403, -154.59, -26.3658, 0.15 ) }
    dend_12 { pt3dadd( -83.9628, -155.284, -26.4192, 0.37 ) }
    dend_12 { pt3dadd( -84.1772, -155.628, -26.414, 0.96 ) }
    dend_12 { pt3dadd( -85.0094, -156.915, -26.3164, 2.14 ) }
    dend_12 { pt3dadd( -86.0277, -158.405, -26.1541, 0.66 ) }
    dend_12 { pt3dadd( -86.8015, -159.423, -26.0195, 0.15 ) }
    dend_12 { pt3dadd( -87.5426, -160.274, -25.8904, 0.15 ) }
    dend_12 { pt3dadd( -88.0203, -160.764, -25.8068, 0.44 ) }
    dend_12 { pt3dadd( -88.4864, -161.209, -25.7285, 1.03 ) }
    dend_12 { pt3dadd( -89.2642, -161.929, -25.6096, 1.55 ) }
    dend_12 { pt3dadd( -90.2356, -162.817, -25.4459, 0.44 ) }
    dend_12 { pt3dadd( -90.86, -163.45, -25.3603, 0.22 ) }
    dend_12 { pt3dadd( -91.2927, -163.959, -25.3124, 0.22 ) }
    dend_12 { pt3dadd( -91.9123, -164.764, -25.273, 0.22 ) }
    dend_12 { pt3dadd( -92.4645, -165.537, -25.276, 0.29 ) }
    dend_12 { pt3dadd( -93.0583, -166.431, -25.338, 0.29 ) }
    dend_12 { pt3dadd( -93.7617, -167.562, -25.4896, 0.15 ) }
    dend_12 { pt3dadd( -94.2696, -168.4, -25.6481, 0.22 ) }
    dend_12 { pt3dadd( -94.7766, -169.263, -25.8845, 0.88 ) }
    dend_12 { pt3dadd( -95.4586, -170.474, -26.3215, 0.74 ) }
    dend_12 { pt3dadd( -95.8862, -171.251, -26.672, 0.88 ) }
    dend_12 { pt3dadd( -96.2977, -172.052, -27.0912, 1.77 ) }
    dend_12 { pt3dadd( -96.7215, -172.96, -27.6215, 2.29 ) }
    dend_12 { pt3dadd( -97.2752, -174.363, -28.5084, 0.07 ) }
    dend_12 { pt3dadd( -97.5421, -175.225, -29.0948, 0.15 ) }
    dend_12 { pt3dadd( -97.658, -175.774, -29.4954, 0.15 ) }
    dend_12 { pt3dadd( -97.6993, -176.08, -29.7217, 0.15 ) }
    dend_12 { pt3dadd( -97.7231, -176.684, -30.1291, 0.15 ) }
    dend_12 { pt3dadd( -97.697, -177.168, -30.3902, 0.15 ) }
    dend_12 { pt3dadd( -97.6513, -178.037, -30.733, 0.15 ) }
    dend_12 { pt3dadd( -97.6403, -178.361, -30.8371, 0.15 ) }
    dend_12 { pt3dadd( -97.6242, -179.279, -31.0945, 0.66 ) }
    dend_12 { pt3dadd( -97.6502, -180.945, -31.5372, 0.29 ) }
    dend_12 { pt3dadd( -97.7163, -182.025, -31.8072, 0.22 ) }
    dend_12 { pt3dadd( -97.8107, -183.012, -32.0337, 0.22 ) }
    dend_12 { pt3dadd( -97.9435, -183.863, -32.2216, 0.22 ) }
    dend_12 { pt3dadd( -98.0569, -184.291, -32.3274, 0.59 ) }
    dend_12 { pt3dadd( -98.2317, -184.691, -32.4492, 0.74 ) }
    dend_12 { pt3dadd( -98.5024, -185.07, -32.5818, 0.37 ) }
    dend_12 { pt3dadd( -98.9287, -185.507, -32.7454, 0.15 ) }
    dend_12 { pt3dadd( -99.8405, -186.309, -33.0478, 0.15 ) }
    dend_12 { pt3dadd( -100.365, -186.722, -33.2088, 0.22 ) }
    dend_12 { pt3dadd( -100.903, -187.143, -33.3712, 0.29 ) }
    dend_12 { pt3dadd( -101.465, -187.593, -33.522, 0.22 ) }
    dend_12 { pt3dadd( -102.189, -188.224, -33.6951, 0.22 ) }
    dend_12 { pt3dadd( -102.993, -189.005, -33.8639, 0.29 ) }
    dend_12 { pt3dadd( -103.553, -189.607, -33.9593, 0.29 ) }
    dend_12 { pt3dadd( -104.257, -190.355, -34.0855, 0.22 ) }
    dend_12 { pt3dadd( -104.84, -190.938, -34.2115, 0.37 ) }
    dend_12 { pt3dadd( -105.404, -191.486, -34.361, 0.74 ) }
    dend_12 { pt3dadd( -105.808, -191.879, -34.4755, 1.03 ) }
    dend_12 { pt3dadd( -106.612, -192.673, -34.7047, 0.22 ) }
    dend_12 { pt3dadd( -107.331, -193.423, -34.9129, 0.22 ) }
    dend_12 { pt3dadd( -107.946, -194.084, -35.1082, 0.15 ) }
    dend_12 { pt3dadd( -108.403, -194.611, -35.2717, 0.15 ) }
    dend_12 { pt3dadd( -108.723, -195.015, -35.3889, 0.15 ) }
    dend_12 { pt3dadd( -109.21, -195.735, -35.5879, 0.22 ) }
    dend_12 { pt3dadd( -109.853, -196.848, -35.8824, 0.29 ) }
    dend_12 { pt3dadd( -110.344, -197.849, -36.1133, 0.74 ) }
    dend_12 { pt3dadd( -110.842, -198.994, -36.3244, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_12 { pt3dadd( -111.212, -199.898, -36.4682, 0.37 ) }
    dend_12 { pt3dadd( -111.587, -200.868, -36.6032, 0.37 ) }
    dend_12 { pt3dadd( -111.875, -201.614, -36.6822, 1.4 ) }
    dend_12 { pt3dadd( -112.309, -202.683, -36.7787, 2.95 ) }
    dend_12 { pt3dadd( -112.982, -204.172, -36.9059, 1.18 ) }
    dend_12 { pt3dadd( -113.581, -205.32, -37.0166, 0.22 ) }
    dend_12 { pt3dadd( -114.344, -206.639, -37.1346, 0.29 ) }
    dend_12 { pt3dadd( -114.933, -207.614, -37.2106, 0.74 ) }
    dend_12 { pt3dadd( -115.376, -208.336, -37.2711, 1.33 ) }
    dend_12 { pt3dadd( -116.102, -209.418, -37.4072, 0.81 ) }
    dend_12 { pt3dadd( -116.707, -210.302, -37.596, 1.18 ) }
    dend_12 { pt3dadd( -117.65, -211.771, -37.9749, 0.66 ) }
    dend_12 { pt3dadd( -118.197, -212.744, -38.2402, 0.29 ) }
    dend_12 { pt3dadd( -118.391, -213.128, -38.3486, 0.44 ) }
    dend_12 { pt3dadd( -119.12, -214.738, -38.7866, 0.29 ) }
    dend_12 { pt3dadd( -119.618, -215.949, -39.1262, 0.81 ) }
    dend_12 { pt3dadd( -120.302, -217.693, -39.6838, 0.22 ) }
    dend_12 { pt3dadd( -120.628, -218.481, -40.0222, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 58.7426, -15.7916, -0.699254, 0.15 ) }
    dend_9 { pt3dadd( 66.1664, -20.3771, -2.33776, 0.15 ) }
    dend_9 { pt3dadd( 73.2157, -25.433, -4.22756, 0.15 ) }
    dend_9 { pt3dadd( 80.6615, -29.5903, -6.69788, 0.15 ) }
    dend_9 { pt3dadd( 88.0299, -34.3115, -8.19503, 0.15 ) }
    dend_9 { pt3dadd( 96.1616, -37.328, -10.0927, 0.15 ) }
    dend_9 { pt3dadd( 104.263, -40.2496, -12.2498, 0.15 ) }
    dend_9 { pt3dadd( 111.81, -44.3561, -14.4888, 0.15 ) }
    dend_9 { pt3dadd( 118.359, -49.2403, -17.9647, 0.15 ) }
    dend_9 { pt3dadd( 125.532, -54.154, -19.7606, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 28/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 58.7426, -15.7916, -0.699254, 0.59 ) }
    dend_8 { pt3dadd( 67.2162, -21.0562, 1.21435, 0.15 ) }
    dend_8 { pt3dadd( 75.5939, -26.5671, 2.83401, 0.15 ) }
    dend_8 { pt3dadd( 83.8732, -31.8226, 5.48217, 0.15 ) }
    dend_8 { pt3dadd( 92.0804, -36.9133, 8.62962, 0.15 ) }
    dend_8 { pt3dadd( 100.766, -41.872, 10.4043, 0.15 ) }
    dend_8 { pt3dadd( 109.216, -47.3232, 11.8408, 0.15 ) }
    dend_8 { pt3dadd( 116.971, -53.6761, 13.479, 0.15 ) }
    dend_8 { pt3dadd( 124.494, -60.4687, 14.1374, 0.15 ) }
    dend_8 { pt3dadd( 131.278, -68.0091, 14.687, 0.15 ) }
    dend_8 { pt3dadd( 136.858, -76.3294, 16.3673, 0.15 ) }
    dend_8 { pt3dadd( 143.416, -83.9111, 18.0046, 0.15 ) }
    dend_8 { pt3dadd( 150.278, -91.3866, 18.4626, 0.15 ) }
    dend_8 { pt3dadd( 156.884, -99.0978, 18.1762, 0.15 ) }
    dend_8 { pt3dadd( 164.837, -105.413, 17.9387, 0.15 ) }
    dend_8 { pt3dadd( 174.071, -109.404, 19.3496, 0.15 ) }
    dend_8 { pt3dadd( 183.191, -113.492, 21.1623, 0.15 ) }
    dend_8 { pt3dadd( 192.936, -116.041, 22.4755, 0.15 ) }
    dend_8 { pt3dadd( 202.437, -119.245, 24.1002, 0.15 ) }
    dend_8 { pt3dadd( 212.473, -120.748, 24.5544, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 71.8204, -34.6366, -9.13028, 0.15 ) }
    dend_6 { pt3dadd( 79.2345, -42.4764, -12.8496, 0.15 ) }
    dend_6 { pt3dadd( 85.8671, -51.2111, -16.0087, 0.15 ) }
    dend_6 { pt3dadd( 93.1161, -59.1002, -19.9433, 0.15 ) }
    dend_6 { pt3dadd( 97.9721, -69.017, -22.8316, 0.15 ) }
    dend_6 { pt3dadd( 101.956, -79.6199, -24.2372, 0.15 ) }
    dend_6 { pt3dadd( 106.148, -89.9744, -26.578, 0.15 ) }
    dend_6 { pt3dadd( 112.092, -99.0164, -30.2071, 0.15 ) }
    dend_6 { pt3dadd( 118.984, -107.943, -31.9671, 0.15 ) }
    dend_6 { pt3dadd( 124.332, -117.875, -33.7037, 0.15 ) }
    dend_6 { pt3dadd( 130.663, -127.358, -34.2084, 0.15 ) }
    dend_6 { pt3dadd( 136.399, -137.177, -35.1915, 0.15 ) }
    dend_6 { pt3dadd( 142.13, -146.704, -37.7681, 0.15 ) }
    dend_6 { pt3dadd( 145.969, -156.734, -41.6325, 0.15 ) }
    dend_6 { pt3dadd( 150.175, -167.004, -44.2993, 0.15 ) }
    dend_6 { pt3dadd( 155.918, -176.845, -44.962, 0.15 ) }
    dend_6 { pt3dadd( 161.745, -186.209, -47.8981, 0.15 ) }
    dend_6 { pt3dadd( 168.778, -195.029, -49.6344, 0.15 ) }
    dend_6 { pt3dadd( 175.043, -204.519, -50.6088, 0.15 ) }
    dend_6 { pt3dadd( 181.479, -213.558, -53.2801, 0.15 ) }
    dend_6 { pt3dadd( 187.707, -222.961, -55.0328, 0.15 ) }
    dend_6 { pt3dadd( 193.552, -232.105, -58.5655, 0.15 ) }
    dend_6 { pt3dadd( 198.576, -241.976, -61.3213, 0.15 ) }
    dend_6 { pt3dadd( 202.922, -252.411, -62.8991, 0.15 ) }
    dend_6 { pt3dadd( 207.482, -262.359, -66.1388, 0.15 ) }
    dend_6 { pt3dadd( 212.538, -272.207, -68.9195, 0.15 ) }
    dend_6 { pt3dadd( 216.039, -282.794, -71.3565, 0.15 ) }
    dend_6 { pt3dadd( 219.574, -293.628, -71.9674, 0.15 ) }
    dend_6 { pt3dadd( 224.075, -303.948, -70.0914, 0.15 ) }
    dend_6 { pt3dadd( 229.06, -313.518, -66.373, 0.15 ) }
    dend_6 { pt3dadd( 234.818, -322.218, -61.7447, 0.15 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 71.8204, -34.6366, -9.13028, 0.59 ) }
    dend_3 { pt3dadd( 80.9382, -43.5693, -8.74035, 0.15 ) }
    dend_3 { pt3dadd( 91.54, -50.6282, -7.81541, 0.15 ) }
    dend_3 { pt3dadd( 102.269, -57.4113, -6.41473, 0.15 ) }
    dend_3 { pt3dadd( 111.735, -65.9173, -7.47673, 0.15 ) }
    dend_3 { pt3dadd( 120.425, -75.0446, -9.53972, 0.15 ) }
    dend_3 { pt3dadd( 130.063, -83.1756, -11.557, 0.15 ) }
    dend_3 { pt3dadd( 140.68, -90.036, -13.3722, 0.15 ) }
    dend_3 { pt3dadd( 152.084, -95.6916, -14.4022, 0.15 ) }
    dend_3 { pt3dadd( 163.272, -101.808, -13.6978, 0.15 ) }
    dend_3 { pt3dadd( 173.557, -109.237, -12.247, 0.15 ) }
    dend_3 { pt3dadd( 183.499, -116.339, -8.53355, 0.15 ) }
    dend_3 { pt3dadd( 191.684, -125.039, -4.01503, 0.15 ) }
    dend_3 { pt3dadd( 197.76, -134.811, 1.52329, 0.15 ) }
    dend_3 { pt3dadd( 200.992, -144.924, 8.61996, 0.15 ) }
    dend_3 { pt3dadd( 204.799, -155.297, 15.0215, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 95/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -114.286, -197.432, 6.92906, 0.15 ) }
    dend_56 { pt3dadd( -119.979, -205.533, 8.17184, 0.15 ) }
    dend_56 { pt3dadd( -125.466, -213.847, 7.56835, 0.15 ) }
    dend_56 { pt3dadd( -131.239, -221.972, 8.06032, 0.15 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 99/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -114.286, -197.432, 6.92906, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_55 { pt3dadd( -119.756, -206.15, 8.68488, 0.15 ) }
    dend_55 { pt3dadd( -123.286, -215.713, 10.9426, 0.15 ) }
    dend_55 { pt3dadd( -127.312, -224.873, 13.9267, 0.15 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 3/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -66.703, -171.382, -110.907, 0.15 ) }
    dend_52 { pt3dadd( -69.546, -179.391, -114.997, 0.15 ) }
    dend_52 { pt3dadd( -72.7466, -187.806, -117.811, 0.15 ) }
    dend_52 { pt3dadd( -75.2425, -196.08, -121.59, 0.15 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 7/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -66.703, -171.382, -110.907, 0.59 ) }
    dend_51 { pt3dadd( -68.4777, -178.813, -115.72, 0.15 ) }
    dend_51 { pt3dadd( -68.4094, -186.448, -120.542, 0.15 ) }
    dend_51 { pt3dadd( -69.5845, -194.053, -125.267, 0.15 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 11/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 26.8483, -226.138, 54.5375, 0.15 ) }
    dend_45 { pt3dadd( 27.9332, -226.89, 55.1072, 0.15 ) }
    dend_45 { pt3dadd( 28.4332, -227.237, 55.3698, 0.37 ) }
    dend_45 { pt3dadd( 29.2715, -227.818, 55.8099, 1.18 ) }
    dend_45 { pt3dadd( 29.8817, -228.241, 56.1303, 0.88 ) }
    dend_45 { pt3dadd( 30.9536, -228.985, 56.6932, 0.22 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 26.8483, -226.138, 54.5375, 0.22 ) }
    dend_44 { pt3dadd( 27.1294, -227.289, 54.2539, 0.22 ) }
    dend_44 { pt3dadd( 27.3346, -228.144, 54.0044, 0.81 ) }
    dend_44 { pt3dadd( 27.5079, -228.976, 53.7574, 1.18 ) }
    dend_44 { pt3dadd( 27.6928, -230.245, 53.3897, 0.22 ) }
    dend_44 { pt3dadd( 27.7475, -231.331, 53.0849, 0.22 ) }
    dend_44 { pt3dadd( 27.7225, -232.413, 52.7898, 0.29 ) }
    dend_44 { pt3dadd( 27.6183, -233.439, 52.5197, 0.66 ) }
    dend_44 { pt3dadd( 27.4134, -234.482, 52.2674, 0.81 ) }
    dend_44 { pt3dadd( 27.0977, -235.617, 52.0241, 0.22 ) }
    dend_44 { pt3dadd( 26.577, -237.099, 51.7644, 0.22 ) }
    dend_44 { pt3dadd( 26.3017, -237.83, 51.6732, 0.29 ) }
    dend_44 { pt3dadd( 26.0312, -238.565, 51.6084, 0.96 ) }
    dend_44 { pt3dadd( 25.7851, -239.286, 51.5759, 1.7 ) }
    dend_44 { pt3dadd( 25.326, -240.866, 51.576, 0.52 ) }
    dend_44 { pt3dadd( 25.0097, -242.28, 51.6513, 0.22 ) }
    dend_44 { pt3dadd( 24.8943, -243.022, 51.7324, 0.15 ) }
    dend_44 { pt3dadd( 24.7558, -244.203, 51.9215, 0.22 ) }
    dend_44 { pt3dadd( 24.6662, -245.237, 52.087, 0.15 ) }
    dend_44 { pt3dadd( 24.6001, -246.115, 52.2277, 0.15 ) }
    dend_44 { pt3dadd( 24.559, -246.711, 52.3181, 0.15 ) }
    dend_44 { pt3dadd( 24.5259, -247.378, 52.4041, 0.37 ) }
    dend_44 { pt3dadd( 24.4877, -248.239, 52.4625, 0.59 ) }
    dend_44 { pt3dadd( 24.4159, -249.826, 52.4475, 0.07 ) }
    dend_44 { pt3dadd( 24.3628, -250.727, 52.3712, 0.07 ) }
    dend_44 { pt3dadd( 24.3031, -251.706, 52.2467, 0.15 ) }
    dend_44 { pt3dadd( 24.2709, -252.377, 52.1488, 0.66 ) }
    dend_44 { pt3dadd( 24.2404, -253.205, 52.0261, 0.74 ) }
    dend_44 { pt3dadd( 24.2076, -254.597, 51.8475, 0.15 ) }
    dend_44 { pt3dadd( 24.1911, -255.49, 51.7746, 0.22 ) }
    dend_44 { pt3dadd( 24.1803, -256.219, 51.7248, 0.15 ) }
    dend_44 { pt3dadd( 24.1508, -256.853, 51.6869, 0.81 ) }
    dend_44 { pt3dadd( 24.0899, -257.525, 51.6526, 0.66 ) }
    dend_44 { pt3dadd( 23.9386, -258.661, 51.5799, 0.15 ) }
    dend_44 { pt3dadd( 23.7885, -259.569, 51.4957, 0.22 ) }
    dend_44 { pt3dadd( 23.5745, -260.7, 51.3645, 0.52 ) }
    dend_44 { pt3dadd( 23.3398, -261.614, 51.2521, 0.59 ) }
    dend_44 { pt3dadd( 22.9934, -262.813, 51.1497, 0.07 ) }
    dend_44 { pt3dadd( 22.7073, -263.764, 51.1003, 0.22 ) }
    dend_44 { pt3dadd( 22.6004, -264.107, 51.0851, 0.22 ) }
    dend_44 { pt3dadd( 22.3525, -264.89, 51.0598, 0.96 ) }
    dend_44 { pt3dadd( 21.867, -266.377, 51.0396, 0.07 ) }
    dend_44 { pt3dadd( 21.4603, -267.677, 51.0942, 0.07 ) }
    dend_44 { pt3dadd( 21.2721, -268.274, 51.1771, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 61/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -22.645, -227.081, 23.6041, 0.15 ) }
    dend_41 { pt3dadd( -22.9984, -234.193, 24.8809, 0.15 ) }
    dend_41 { pt3dadd( -24.0521, -241.286, 25.8375, 0.15 ) }
    dend_41 { pt3dadd( -25.1272, -248.351, 26.9597, 0.15 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 65/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -22.645, -227.081, 23.6041, 0.59 ) }
    dend_40 { pt3dadd( -23.9272, -235.983, 24.9446, 0.15 ) }
    dend_40 { pt3dadd( -25.2754, -244.951, 24.2782, 0.15 ) }
    dend_40 { pt3dadd( -28.0149, -253.571, 25.2121, 0.15 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 69/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 15.5772, 36.0671, -3.99635, 0.52 ) }
    dend_32 { pt3dadd( 16.2996, 36.977, -4.76431, 0.52 ) }
    dend_32 { pt3dadd( 17.0592, 37.4444, -5.70635, 0.37 ) }
    dend_32 { pt3dadd( 17.6155, 37.6367, -6.38309, 0.37 ) }
    dend_32 { pt3dadd( 17.8996, 37.7257, -6.73723, 0.52 ) }
    dend_32 { pt3dadd( 18.4178, 37.9323, -7.41685, 0.52 ) }
    dend_32 { pt3dadd( 19.1985, 38.3333, -8.50332, 0.44 ) }
    dend_32 { pt3dadd( 19.5572, 38.5263, -9.07125, 0.44 ) }
    dend_32 { pt3dadd( 19.9522, 38.7989, -9.70509, 0.66 ) }
    dend_32 { pt3dadd( 20.2964, 39.127, -10.1962, 0.66 ) }
    dend_32 { pt3dadd( 20.7355, 39.6723, -10.7216, 0.88 ) }
    dend_32 { pt3dadd( 21.0269, 40.114, -10.98, 1.03 ) }
    dend_32 { pt3dadd( 21.6571, 41.1395, -11.3423, 0.52 ) }
    dend_32 { pt3dadd( 22.152, 41.9352, -11.5449, 0.52 ) }
    dend_32 { pt3dadd( 22.592, 42.6167, -11.6811, 0.52 ) }
    dend_32 { pt3dadd( 23.0068, 43.2052, -11.7794, 0.52 ) }
    dend_32 { pt3dadd( 23.7061, 44.1411, -11.9517, 0.22 ) }
    dend_32 { pt3dadd( 24.3815, 45.0059, -12.1064, 0.44 ) }
    dend_32 { pt3dadd( 25.0545, 45.8616, -12.2515, 0.74 ) }
    dend_32 { pt3dadd( 25.756, 46.8229, -12.4236, 1.18 ) }
    dend_32 { pt3dadd( 26.2452, 47.5464, -12.5746, 0.88 ) }
    dend_32 { pt3dadd( 27.0171, 48.7062, -12.8684, 0.29 ) }
    dend_32 { pt3dadd( 33.2084, 56.6685, -15.4388, 0.29 ) }
    dend_32 { pt3dadd( 39.4291, 64.4107, -18.5532, 0.29 ) }
    dend_32 { pt3dadd( 45.4466, 72.7658, -20.0768, 0.29 ) }
    dend_32 { pt3dadd( 51.9742, 80.873, -20.0975, 0.29 ) }
    dend_32 { pt3dadd( 58.1558, 89.2436, -19.8533, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 96/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 15.5772, 36.0671, -3.99635, 0.88 ) }
    dend_25 { pt3dadd( 16.6815, 36.7306, -3.78707, 0.88 ) }
    dend_25 { pt3dadd( 17.4277, 37.1638, -3.69099, 0.81 ) }
    dend_25 { pt3dadd( 18.2949, 37.6833, -3.66106, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_25 { pt3dadd( 19.1944, 38.2377, -3.71162, 1.33 ) }
    dend_25 { pt3dadd( 20.2352, 38.9207, -3.83093, 1.33 ) }
    dend_25 { pt3dadd( 20.8355, 39.3295, -3.91132, 1.33 ) }
    dend_25 { pt3dadd( 21.493, 39.8222, -4.02615, 1.33 ) }
    dend_25 { pt3dadd( 22.3064, 40.4618, -4.20634, 1.18 ) }
    dend_25 { pt3dadd( 23.0729, 41.0761, -4.40292, 1.03 ) }
    dend_25 { pt3dadd( 23.7564, 41.6053, -4.57517, 0.88 ) }
    dend_25 { pt3dadd( 24.6068, 42.2638, -4.76984, 1.4 ) }
    dend_25 { pt3dadd( 25.6476, 43.0911, -4.96835, 0.74 ) }
    dend_25 { pt3dadd( 26.5021, 43.777, -5.10655, 1.25 ) }
    dend_25 { pt3dadd( 27.4282, 44.5045, -5.24742, 1.77 ) }
    dend_25 { pt3dadd( 28.6323, 45.4648, -5.46246, 0.96 ) }
    dend_25 { pt3dadd( 29.6182, 46.2845, -5.69378, 0.59 ) }
    dend_25 { pt3dadd( 30.3265, 46.9194, -5.90851, 0.74 ) }
    dend_25 { pt3dadd( 30.8419, 47.4197, -6.09492, 0.96 ) }
    dend_25 { pt3dadd( 31.7244, 48.3424, -6.42958, 1.11 ) }
    dend_25 { pt3dadd( 32.3528, 49.0321, -6.65222, 1.4 ) }
    dend_25 { pt3dadd( 32.9195, 49.6668, -6.82428, 1.4 ) }
    dend_25 { pt3dadd( 33.8837, 50.6876, -7.06275, 0.96 ) }
    dend_25 { pt3dadd( 34.311, 51.106, -7.12651, 0.96 ) }
    dend_25 { pt3dadd( 35.2425, 51.931, -7.15469, 1.18 ) }
    dend_25 { pt3dadd( 36.0532, 52.5608, -7.08827, 1.18 ) }
    dend_25 { pt3dadd( 36.9267, 53.1586, -6.98381, 1.03 ) }
    dend_25 { pt3dadd( 37.5424, 53.5404, -6.92687, 0.96 ) }
    dend_25 { pt3dadd( 38.3785, 54.0346, -6.90362, 0.81 ) }
    dend_25 { pt3dadd( 39.2881, 54.5729, -6.95547, 0.74 ) }
    dend_25 { pt3dadd( 40.2466, 55.1579, -7.10033, 0.96 ) }
    dend_25 { pt3dadd( 41.2199, 55.7909, -7.30959, 1.25 ) }
    dend_25 { pt3dadd( 42.2766, 56.5235, -7.5847, 1.55 ) }
    dend_25 { pt3dadd( 43.1682, 57.2016, -7.84562, 0.88 ) }
    dend_25 { pt3dadd( 44.13, 58.0433, -8.17905, 0.59 ) }
    dend_25 { pt3dadd( 44.6885, 58.6129, -8.38249, 0.81 ) }
    dend_25 { pt3dadd( 45.2617, 59.3003, -8.58724, 0.96 ) }
    dend_25 { pt3dadd( 45.8638, 60.0706, -8.77752, 1.33 ) }
    dend_25 { pt3dadd( 46.7547, 61.307, -9.00921, 1.55 ) }
    dend_25 { pt3dadd( 47.4953, 62.4311, -9.18472, 1.7 ) }
    dend_25 { pt3dadd( 48.1628, 63.5602, -9.35384, 1.62 ) }
    dend_25 { pt3dadd( 48.8608, 64.8624, -9.55579, 1.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -61.1857, 161.958, -27.7921, 0.15 ) }
    dend_23 { pt3dadd( -65.1089, 169.799, -29.7834, 0.15 ) }
    dend_23 { pt3dadd( -67.8098, 178.071, -32.0486, 0.15 ) }
    dend_23 { pt3dadd( -71.6734, 186.141, -32.9403, 0.15 ) }
    dend_23 { pt3dadd( -75.1997, 194.386, -33.5881, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 43/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -61.1857, 161.958, -27.7921, 0.59 ) }
    dend_22 { pt3dadd( -65.3466, 170.73, -27.5847, 0.15 ) }
    dend_22 { pt3dadd( -70.1772, 179.133, -27.0021, 0.15 ) }
    dend_22 { pt3dadd( -72.5415, 188.533, -26.4019, 0.15 ) }
    dend_22 { pt3dadd( -74.4813, 198.02, -27.1251, 0.15 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 48/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -15.5493, 21.9555, 9.91628, 0.81 ) }
    dend_17 { pt3dadd( -14.5096, 22.4179, 10.6763, 0.81 ) }
    dend_17 { pt3dadd( -13.9125, 22.7401, 11.0588, 0.44 ) }
    dend_17 { pt3dadd( -13.0507, 23.3299, 11.6375, 0.59 ) }
    dend_17 { pt3dadd( -12.3605, 23.8735, 12.1488, 0.59 ) }
    dend_17 { pt3dadd( -11.794, 24.3511, 12.597, 0.88 ) }
    dend_17 { pt3dadd( -11.3665, 24.7259, 12.9524, 1.11 ) }
    dend_17 { pt3dadd( -10.8141, 25.2028, 13.3095, 1.11 ) }
    dend_17 { pt3dadd( -10.2981, 25.7995, 13.6553, 0.29 ) }
    dend_17 { pt3dadd( -10.2067, 26.1924, 13.8422, 0.29 ) }
    dend_17 { pt3dadd( -10.3896, 26.5232, 14.0052, 0.29 ) }
    dend_17 { pt3dadd( -10.5401, 26.698, 14.0993, 0.29 ) }
    dend_17 { pt3dadd( -10.7024, 26.8936, 14.2466, 0.29 ) }
    dend_17 { pt3dadd( -10.9284, 27.217, 14.5988, 0.59 ) }
    dend_17 { pt3dadd( -11.048, 27.5039, 15.0071, 1.11 ) }
    dend_17 { pt3dadd( -11.1585, 27.9383, 15.7282, 1.84 ) }
    dend_17 { pt3dadd( -11.2124, 28.2718, 16.3774, 1.84 ) }
    dend_17 { pt3dadd( -11.2517, 28.673, 17.2423, 0.96 ) }
    dend_17 { pt3dadd( -11.2652, 28.9276, 17.8629, 0.74 ) }
    dend_17 { pt3dadd( -11.2612, 29.2068, 18.5386, 0.74 ) }
    dend_17 { pt3dadd( -11.2793, 29.5466, 19.293, 0.74 ) }
    dend_17 { pt3dadd( -11.3261, 29.839, 19.8632, 1.11 ) }
    dend_17 { pt3dadd( -11.3882, 30.2376, 20.4841, 1.47 ) }
    dend_17 { pt3dadd( -11.4386, 30.6758, 21.0682, 1.47 ) }
    dend_17 { pt3dadd( -11.48, 31.2806, 21.7962, 0.74 ) }
    dend_17 { pt3dadd( -11.5131, 32.0946, 22.7145, 0.52 ) }
    dend_17 { pt3dadd( -11.5194, 32.5394, 23.2061, 0.52 ) }
    dend_17 { pt3dadd( -11.5319, 33.1476, 23.908, 0.37 ) }
    dend_17 { pt3dadd( -11.5249, 33.5925, 24.54, 0.37 ) }
    dend_17 { pt3dadd( -11.5106, 33.687, 24.8375, 0.37 ) }
    dend_17 { pt3dadd( -11.4937, 33.678, 25.2305, 0.37 ) }
    dend_17 { pt3dadd( -11.4827, 33.637, 25.5255, 0.37 ) }
    dend_17 { pt3dadd( -11.5356, 33.5713, 26.2629, 0.37 ) }
    dend_17 { pt3dadd( -11.6721, 33.5985, 26.8327, 0.37 ) }
    dend_17 { pt3dadd( -11.9218, 33.8012, 27.6198, 0.37 ) }
    dend_17 { pt3dadd( -12.1161, 34.0231, 28.15, 0.37 ) }
    dend_17 { pt3dadd( -12.3483, 34.3101, 28.6795, 0.59 ) }
    dend_17 { pt3dadd( -12.612, 34.6633, 29.2102, 0.88 ) }
    dend_17 { pt3dadd( -13.0872, 35.3784, 30.055, 0.88 ) }
    dend_17 { pt3dadd( -13.4969, 36.0077, 30.6846, 0.59 ) }
    dend_17 { pt3dadd( -14.0052, 36.8207, 31.3816, 0.59 ) }
    dend_17 { pt3dadd( -14.2874, 37.3381, 31.7799, 0.29 ) }
    dend_17 { pt3dadd( -14.5361, 37.9035, 32.1725, 0.29 ) }
    dend_17 { pt3dadd( -14.7596, 38.5672, 32.5913, 0.29 ) }
    dend_17 { pt3dadd( -14.8813, 39.0638, 32.8795, 0.96 ) }
    dend_17 { pt3dadd( -14.9633, 39.5489, 33.1715, 1.84 ) }
    dend_17 { pt3dadd( -15.0483, 40.2939, 33.6184, 0.37 ) }
    dend_17 { pt3dadd( -15.1245, 40.868, 33.9785, 0.81 ) }
    dend_17 { pt3dadd( -15.2726, 41.5456, 34.4379, 1.55 ) }
    dend_17 { pt3dadd( -15.4897, 42.2181, 34.954, 0.22 ) }
    dend_17 { pt3dadd( -15.685, 42.7226, 35.3589, 0.22 ) }
    dend_17 { pt3dadd( -15.8413, 43.0766, 35.6677, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_17 { pt3dadd( -15.9998, 43.5212, 36.0639, 0.29 ) }
    dend_17 { pt3dadd( -16.0908, 43.9511, 36.4309, 0.29 ) }
    dend_17 { pt3dadd( -16.1335, 44.4509, 36.8452, 0.59 ) }
    dend_17 { pt3dadd( -16.1294, 45.182, 37.4654, 1.77 ) }
    dend_17 { pt3dadd( -16.0977, 45.6993, 37.9076, 2.14 ) }
    dend_17 { pt3dadd( -15.9692, 46.6575, 38.7353, 0.29 ) }
    dend_17 { pt3dadd( -15.8781, 47.1112, 39.1237, 0.29 ) }
    dend_17 { pt3dadd( -15.7848, 47.5529, 39.4931, 0.29 ) }
    dend_17 { pt3dadd( -15.7247, 47.8018, 39.7053, 0.29 ) }
    dend_17 { pt3dadd( -15.6423, 48.1428, 40.0253, 0.88 ) }
    dend_17 { pt3dadd( -15.5421, 48.5574, 40.4557, 1.62 ) }
    dend_17 { pt3dadd( -15.4542, 48.8867, 40.8478, 1.62 ) }
    dend_17 { pt3dadd( -15.3095, 49.312, 41.3554, 2.21 ) }
    dend_17 { pt3dadd( -14.8677, 50.3172, 42.5501, 0.22 ) }
    dend_17 { pt3dadd( -14.6592, 50.7236, 43.027, 0.22 ) }
    dend_17 { pt3dadd( -14.5061, 50.9935, 43.3477, 0.22 ) }
    dend_17 { pt3dadd( -14.3387, 51.2655, 43.6669, 0.22 ) }
    dend_17 { pt3dadd( -14.0003, 51.7708, 44.2422, 0.44 ) }
    dend_17 { pt3dadd( -13.5691, 52.3253, 44.8586, 0.66 ) }
    dend_17 { pt3dadd( -13.4986, 52.4179, 44.9506, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -15.5493, 21.9555, 9.91628, 0.96 ) }
    dend_14 { pt3dadd( -15.199, 21.2085, 10.4711, 0.96 ) }
    dend_14 { pt3dadd( -14.8157, 20.4281, 11.0362, 0.37 ) }
    dend_14 { pt3dadd( -14.7298, 20.1306, 11.2082, 0.29 ) }
    dend_14 { pt3dadd( -14.6454, 19.5655, 11.4644, 0.22 ) }
    dend_14 { pt3dadd( -14.6393, 19.1815, 11.6233, 0.22 ) }
    dend_14 { pt3dadd( -14.6813, 18.5791, 11.8616, 0.52 ) }
    dend_14 { pt3dadd( -14.7958, 17.8451, 12.1394, 0.74 ) }
    dend_14 { pt3dadd( -15.0931, 16.824, 12.4796, 0.52 ) }
    dend_14 { pt3dadd( -15.3467, 16.0806, 12.7094, 1.11 ) }
    dend_14 { pt3dadd( -15.7458, 14.9438, 13.0576, 1.62 ) }
    dend_14 { pt3dadd( -16.0926, 13.9334, 13.3578, 1.33 ) }
    dend_14 { pt3dadd( -16.5492, 12.5071, 13.7789, 1.11 ) }
    dend_14 { pt3dadd( -17.1376, 10.5552, 14.3565, 0.44 ) }
    dend_14 { pt3dadd( -17.43, 9.52315, 14.6562, 0.44 ) }
    dend_14 { pt3dadd( -17.7315, 8.45205, 14.9525, 0.44 ) }
    dend_14 { pt3dadd( -17.9732, 7.59474, 15.1648, 0.96 ) }
    dend_14 { pt3dadd( -18.3285, 6.35613, 15.4596, 1.47 ) }
    dend_14 { pt3dadd( -18.7748, 4.92273, 15.7823, 1.7 ) }
    dend_14 { pt3dadd( -19.3354, 3.33547, 16.1484, 1.7 ) }
    dend_14 { pt3dadd( -19.9518, 1.93618, 16.489, 1.7 ) }
    dend_14 { pt3dadd( -20.6329, 0.641114, 16.8173, 0.59 ) }
    dend_14 { pt3dadd( -21.3404, -0.547857, 17.1491, 0.44 ) }
    dend_14 { pt3dadd( -22.0264, -1.59936, 17.4797, 0.44 ) }
    dend_14 { pt3dadd( -22.4444, -2.20448, 17.7144, 0.44 ) }
    dend_14 { pt3dadd( -23.0724, -3.0998, 18.17, 0.44 ) }
    dend_14 { pt3dadd( -23.2707, -3.40907, 18.3761, 0.44 ) }
    dend_14 { pt3dadd( -23.434, -3.8074, 18.6695, 0.44 ) }
    dend_14 { pt3dadd( -23.5613, -4.43694, 19.1122, 0.44 ) }
    dend_14 { pt3dadd( -23.6274, -4.85723, 19.3885, 0.88 ) }
    dend_14 { pt3dadd( -23.8239, -5.85938, 19.9762, 1.4 ) }
    dend_14 { pt3dadd( -24.0198, -6.55091, 20.3503, 1.4 ) }
    dend_14 { pt3dadd( -24.4701, -7.66085, 20.9111, 0.66 ) }
    dend_14 { pt3dadd( -24.8826, -8.47844, 21.2931, 0.22 ) }
    dend_14 { pt3dadd( -25.3323, -9.2756, 21.6657, 0.22 ) }
    dend_14 { pt3dadd( -25.5971, -9.73195, 21.8881, 1.03 ) }
    dend_14 { pt3dadd( -26.0449, -10.5142, 22.2847, 2.36 ) }
    dend_14 { pt3dadd( -26.5282, -11.4271, 22.7766, 2.65 ) }
    dend_14 { pt3dadd( -27.29, -13.0537, 23.7408, 0.81 ) }
    dend_14 { pt3dadd( -27.5648, -13.9682, 24.2887, 0.22 ) }
    dend_14 { pt3dadd( -27.6356, -14.4165, 24.5613, 0.22 ) }
    dend_14 { pt3dadd( -27.6633, -14.8453, 24.8302, 0.66 ) }
    dend_14 { pt3dadd( -27.6522, -15.374, 25.1756, 0.66 ) }
    dend_14 { pt3dadd( -27.6218, -15.7025, 25.4061, 0.66 ) }
    dend_14 { pt3dadd( -27.4785, -16.6026, 26.1039, 0.22 ) }
    dend_14 { pt3dadd( -27.4471, -17.0632, 26.4538, 0.22 ) }
    dend_14 { pt3dadd( -27.4664, -17.2749, 26.6198, 0.22 ) }
    dend_14 { pt3dadd( -27.5653, -17.6268, 26.9036, 0.22 ) }
    dend_14 { pt3dadd( -27.772, -18.1048, 27.2739, 0.22 ) }
    dend_14 { pt3dadd( -27.8902, -18.3068, 27.4181, 0.22 ) }
    dend_14 { pt3dadd( -28.2385, -18.7853, 27.7222, 0.22 ) }
    dend_14 { pt3dadd( -28.4517, -19.0692, 27.8629, 0.29 ) }
    dend_14 { pt3dadd( -29.0009, -19.8097, 28.1555, 0.29 ) }
    dend_14 { pt3dadd( -29.2618, -20.2023, 28.2869, 0.59 ) }
    dend_14 { pt3dadd( -29.6904, -20.9359, 28.5064, 0.88 ) }
    dend_14 { pt3dadd( -30.0555, -21.6702, 28.7276, 0.66 ) }
    dend_14 { pt3dadd( -30.4053, -22.6266, 29.031, 0.22 ) }
    dend_14 { pt3dadd( -30.512, -23.0853, 29.1972, 0.22 ) }
    dend_14 { pt3dadd( -30.6797, -24.2164, 29.6738, 0.59 ) }
    dend_14 { pt3dadd( -30.7642, -25.1653, 30.1198, 1.03 ) }
    dend_14 { pt3dadd( -30.8218, -26.1045, 30.5849, 1.62 ) }
    dend_14 { pt3dadd( -30.9066, -27.3641, 31.2439, 0.59 ) }
    dend_14 { pt3dadd( -31.0373, -28.6538, 31.9095, 0.22 ) }
    dend_14 { pt3dadd( -31.1876, -29.5488, 32.3676, 0.52 ) }
    dend_14 { pt3dadd( -31.3303, -30.0762, 32.6425, 1.25 ) }
    dend_14 { pt3dadd( -31.6627, -30.9355, 33.11, 2.14 ) }
    dend_14 { pt3dadd( -32.0658, -31.7105, 33.5379, 1.33 ) }
    dend_14 { pt3dadd( -32.7243, -32.7142, 34.1381, 0.52 ) }
    dend_14 { pt3dadd( -33.1127, -33.2731, 34.4989, 0.22 ) }
    dend_14 { pt3dadd( -33.5219, -33.9001, 34.9379, 0.44 ) }
    dend_14 { pt3dadd( -33.823, -34.4012, 35.3288, 0.44 ) }
    dend_14 { pt3dadd( -34.0691, -34.9247, 35.7438, 0.22 ) }
    dend_14 { pt3dadd( -34.2546, -35.4463, 36.0876, 0.22 ) }
    dend_14 { pt3dadd( -34.4573, -36.1044, 36.4654, 0.22 ) }
    dend_14 { pt3dadd( -34.5911, -36.5756, 36.6818, 0.52 ) }
    dend_14 { pt3dadd( -34.783, -37.2446, 36.9298, 0.74 ) }
    dend_14 { pt3dadd( -35.1791, -38.3217, 37.3063, 0.81 ) }
    dend_14 { pt3dadd( -35.6747, -39.2365, 37.6967, 0.22 ) }
    dend_14 { pt3dadd( -36.1205, -39.7575, 37.9923, 0.22 ) }
    dend_14 { pt3dadd( -36.3611, -39.9628, 38.1551, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( -36.7349, -40.2676, 38.4405, 0.66 ) }
    dend_14 { pt3dadd( -37.3677, -40.782, 39.0013, 1.33 ) }
    dend_14 { pt3dadd( -37.8769, -41.2355, 39.5245, 1.55 ) }
    dend_14 { pt3dadd( -38.3626, -41.7787, 40.0959, 0.88 ) }
    dend_14 { pt3dadd( -38.9323, -42.5364, 40.7367, 0.15 ) }
    dend_14 { pt3dadd( -39.5008, -43.3347, 41.3323, 0.29 ) }
    dend_14 { pt3dadd( -39.8002, -43.7813, 41.631, 0.88 ) }
    dend_14 { pt3dadd( -40.1079, -44.2505, 41.8889, 1.25 ) }
    dend_14 { pt3dadd( -40.4425, -44.7571, 42.1401, 1.33 ) }
    dend_14 { pt3dadd( -41.3424, -46.0859, 42.7818, 0.22 ) }
    dend_14 { pt3dadd( -41.7395, -46.675, 43.0631, 0.74 ) }
    dend_14 { pt3dadd( -42.1159, -47.2382, 43.3344, 1.25 ) }
    dend_14 { pt3dadd( -42.7039, -48.2194, 43.7926, 0.44 ) }
    dend_14 { pt3dadd( -43.0135, -48.9695, 44.1467, 0.22 ) }
    dend_14 { pt3dadd( -43.1187, -49.4247, 44.3541, 0.22 ) }
    dend_14 { pt3dadd( -43.1647, -50.073, 44.6176, 0.96 ) }
    dend_14 { pt3dadd( -43.1666, -50.489, 44.7813, 1.55 ) }
    dend_14 { pt3dadd( -43.1412, -51.3338, 45.1128, 1.33 ) }
    dend_14 { pt3dadd( -43.0622, -53.2585, 45.901, 0.15 ) }
    dend_14 { pt3dadd( -43.0602, -53.7222, 46.0871, 0.37 ) }
    dend_14 { pt3dadd( -43.1054, -54.5846, 46.4438, 0.15 ) }
    dend_14 { pt3dadd( -43.2054, -55.3077, 46.7744, 0.15 ) }
    dend_14 { pt3dadd( -43.3531, -55.9629, 47.1055, 0.52 ) }
    dend_14 { pt3dadd( -43.5715, -56.6594, 47.4858, 1.18 ) }
    dend_14 { pt3dadd( -43.9115, -57.4937, 47.9763, 2.06 ) }
    dend_14 { pt3dadd( -44.3724, -58.5531, 48.63, 0.96 ) }
    dend_14 { pt3dadd( -44.8676, -59.6391, 49.3233, 0.22 ) }
    dend_14 { pt3dadd( -45.2384, -60.4092, 49.8125, 0.22 ) }
    dend_14 { pt3dadd( -45.6924, -61.3149, 50.3997, 0.22 ) }
    dend_14 { pt3dadd( -45.9878, -61.8962, 50.7811, 0.22 ) }
    dend_14 { pt3dadd( -46.4325, -62.758, 51.3782, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 31/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 204.799, -155.297, 15.0215, 0.15 ) }
    dend_5 { pt3dadd( 211.267, -161.476, 15.2748, 0.15 ) }
    dend_5 { pt3dadd( 216.951, -168.387, 15.2718, 0.15 ) }
    dend_5 { pt3dadd( 223.04, -174.94, 15.0325, 0.15 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 35/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 204.799, -155.297, 15.0215, 0.59 ) }
    dend_4 { pt3dadd( 212.712, -162.89, 16.1077, 0.15 ) }
    dend_4 { pt3dadd( 219.795, -171.11, 18.0313, 0.15 ) }
    dend_4 { pt3dadd( 225.694, -180.416, 17.867, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 58.1558, 89.2436, -19.8533, 0.15 ) }
    dend_34 { pt3dadd( 64.332, 97.65, -25.2603, 0.15 ) }
    dend_34 { pt3dadd( 68.1502, 107.304, -30.7617, 0.15 ) }
    dend_34 { pt3dadd( 69.366, 117.44, -36.5773, 0.15 ) }
    dend_34 { pt3dadd( 69.0993, 127.974, -41.7763, 0.15 ) }
    dend_34 { pt3dadd( 67.0266, 137.963, -47.6052, 0.15 ) }
    dend_34 { pt3dadd( 66.4049, 147.748, -54.0781, 0.15 ) }
    dend_34 { pt3dadd( 66.4199, 157.776, -60.2021, 0.15 ) }
    dend_34 { pt3dadd( 66.2854, 167.764, -66.3876, 0.15 ) }
    dend_34 { pt3dadd( 66.9189, 178.573, -70.95, 0.15 ) }
    dend_34 { pt3dadd( 66.0933, 190.101, -73.0676, 0.15 ) }
    dend_34 { pt3dadd( 67.6431, 201.747, -73.2102, 0.15 ) }
    dend_34 { pt3dadd( 70.6684, 213.097, -72.9431, 0.15 ) }
    dend_34 { pt3dadd( 72.6646, 224.4, -70.4335, 0.15 ) }
    dend_34 { pt3dadd( 75.7285, 235.357, -67.4998, 0.15 ) }
    dend_34 { pt3dadd( 79.6758, 246.248, -65.5355, 0.15 ) }
    dend_34 { pt3dadd( 81.3038, 257.796, -64.1055, 0.15 ) }
    dend_34 { pt3dadd( 82.4157, 269.486, -63.7313, 0.15 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 57/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 58.1558, 89.2436, -19.8533, 0.59 ) }
    dend_33 { pt3dadd( 63.7304, 93.946, -18.3823, 0.15 ) }
    dend_33 { pt3dadd( 68.916, 98.8552, -16.2933, 0.15 ) }
    dend_33 { pt3dadd( 74.6161, 102.644, -13.3772, 0.15 ) }
    dend_33 { pt3dadd( 79.3789, 106.956, -9.62515, 0.15 ) }
    dend_33 { pt3dadd( 84.6729, 110.357, -5.65496, 0.15 ) }
    dend_33 { pt3dadd( 89.5807, 114.205, -1.59824, 0.15 ) }
    dend_33 { pt3dadd( 93.9313, 118.365, 2.77436, 0.15 ) }
    dend_33 { pt3dadd( 99.4796, 122.237, 5.86883, 0.15 ) }
    dend_33 { pt3dadd( 104.986, 126.045, 9.11522, 0.15 ) }
    dend_33 { pt3dadd( 109.961, 130.558, 12.3145, 0.15 ) }
    dend_33 { pt3dadd( 114.134, 135.778, 15.5846, 0.15 ) }
    dend_33 { pt3dadd( 119.355, 139.85, 18.9768, 0.15 ) }
    dend_33 { pt3dadd( 125.436, 142.255, 22.5252, 0.15 ) }
    dend_33 { pt3dadd( 131.917, 144.155, 25.646, 0.15 ) }
    dend_33 { pt3dadd( 138.471, 146.323, 28.4228, 0.15 ) }
    dend_33 { pt3dadd( 144.894, 149.668, 30.1258, 0.15 ) }
    dend_33 { pt3dadd( 151.727, 152.563, 30.661, 0.15 ) }
    dend_33 { pt3dadd( 158.229, 156.058, 31.5858, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 48.8608, 64.8624, -9.55579, 0.66 ) }
    dend_27 { pt3dadd( 49.706, 66.5707, -9.94794, 0.66 ) }
    dend_27 { pt3dadd( 50.1888, 67.4485, -10.1788, 0.66 ) }
    dend_27 { pt3dadd( 50.7826, 68.5003, -10.4667, 0.44 ) }
    dend_27 { pt3dadd( 51.2162, 69.2659, -10.6588, 0.37 ) }
    dend_27 { pt3dadd( 51.7851, 70.2867, -10.8775, 0.37 ) }
    dend_27 { pt3dadd( 52.289, 71.2022, -11.0246, 0.37 ) }
    dend_27 { pt3dadd( 52.5467, 71.6398, -11.0757, 0.59 ) }
    dend_27 { pt3dadd( 52.9935, 72.4537, -11.1388, 1.11 ) }
    dend_27 { pt3dadd( 53.617, 73.7904, -11.1943, 0.37 ) }
    dend_27 { pt3dadd( 54.0388, 74.8753, -11.1362, 0.59 ) }
    dend_27 { pt3dadd( 54.4799, 76.2213, -10.9606, 0.37 ) }
    dend_27 { pt3dadd( 54.8982, 77.556, -10.7139, 0.44 ) }
    dend_27 { pt3dadd( 55.1416, 78.2843, -10.5597, 0.22 ) }
    dend_27 { pt3dadd( 55.3976, 78.9333, -10.4111, 0.22 ) }
    dend_27 { pt3dadd( 56.1928, 80.6219, -10.0213, 0.22 ) }
    dend_27 { pt3dadd( 56.7057, 81.5011, -9.84091, 0.22 ) }
    dend_27 { pt3dadd( 57.0314, 81.9437, -9.77141, 0.44 ) }
    dend_27 { pt3dadd( 57.6178, 82.5826, -9.7151, 0.66 ) }
    dend_27 { pt3dadd( 58.5708, 83.4526, -9.72452, 0.22 ) }
    dend_27 { pt3dadd( 59.0015, 83.7966, -9.76571, 0.22 ) }
    dend_27 { pt3dadd( 59.5707, 84.2067, -9.85462, 0.66 ) }
    dend_27 { pt3dadd( 60.0583, 84.5427, -9.91946, 1.03 ) }
    dend_27 { pt3dadd( 61.1723, 85.3175, -10.0551, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_27 { pt3dadd( 62.1189, 86.0103, -10.1656, 0.66 ) }
    dend_27 { pt3dadd( 62.6947, 86.4566, -10.2217, 0.81 ) }
    dend_27 { pt3dadd( 63.9938, 87.4849, -10.3319, 1.03 ) }
    dend_27 { pt3dadd( 64.9855, 88.2747, -10.4044, 0.74 ) }
    dend_27 { pt3dadd( 65.9663, 89.0482, -10.4601, 0.37 ) }
    dend_27 { pt3dadd( 66.6876, 89.5818, -10.4939, 0.37 ) }
    dend_27 { pt3dadd( 67.2994, 90.0235, -10.5227, 0.29 ) }
    dend_27 { pt3dadd( 67.9382, 90.4779, -10.5567, 0.29 ) }
    dend_27 { pt3dadd( 68.4695, 90.8546, -10.5953, 0.66 ) }
    dend_27 { pt3dadd( 69.253, 91.3984, -10.6386, 1.25 ) }
    dend_27 { pt3dadd( 70.6533, 92.3467, -10.7134, 0.29 ) }
    dend_27 { pt3dadd( 71.08, 92.636, -10.7414, 0.29 ) }
    dend_27 { pt3dadd( 71.969, 93.2744, -10.8179, 0.88 ) }
    dend_27 { pt3dadd( 72.8172, 93.9376, -10.9015, 0.52 ) }
    dend_27 { pt3dadd( 73.506, 94.5157, -10.9801, 1.11 ) }
    dend_27 { pt3dadd( 74.4514, 95.3571, -11.1047, 0.66 ) }
    dend_27 { pt3dadd( 75.3422, 96.1794, -11.2118, 0.29 ) }
    dend_27 { pt3dadd( 75.9899, 96.7536, -11.2852, 0.59 ) }
    dend_27 { pt3dadd( 77.1598, 97.7094, -11.414, 0.22 ) }
    dend_27 { pt3dadd( 77.7108, 98.1153, -11.4713, 0.59 ) }
    dend_27 { pt3dadd( 78.4798, 98.6368, -11.5531, 1.18 ) }
    dend_27 { pt3dadd( 79.4435, 99.229, -11.6406, 0.22 ) }
    dend_27 { pt3dadd( 80.0917, 99.6014, -11.6943, 0.22 ) }
    dend_27 { pt3dadd( 80.6368, 99.9104, -11.7399, 0.22 ) }
    dend_27 { pt3dadd( 81.2276, 100.267, -11.7748, 0.22 ) }
    dend_27 { pt3dadd( 81.6221, 100.562, -11.7964, 0.22 ) }
    dend_27 { pt3dadd( 82.0677, 100.992, -11.8252, 0.37 ) }
    dend_27 { pt3dadd( 82.7176, 101.787, -11.8681, 0.37 ) }
    dend_27 { pt3dadd( 83.1387, 102.383, -11.8857, 0.22 ) }
    dend_27 { pt3dadd( 83.6125, 103.121, -11.8862, 0.52 ) }
    dend_27 { pt3dadd( 84.2448, 104.138, -11.8458, 0.52 ) }
    dend_27 { pt3dadd( 84.6778, 104.802, -11.7979, 0.96 ) }
    dend_27 { pt3dadd( 85.1278, 105.42, -11.7353, 1.77 ) }
    dend_27 { pt3dadd( 85.6463, 106.056, -11.6572, 1.77 ) }
    dend_27 { pt3dadd( 86.3933, 106.923, -11.5516, 0.22 ) }
    dend_27 { pt3dadd( 86.9332, 107.526, -11.4883, 0.22 ) }
    dend_27 { pt3dadd( 87.4606, 108.065, -11.4266, 0.22 ) }
    dend_27 { pt3dadd( 88.0005, 108.593, -11.3774, 0.22 ) }
    dend_27 { pt3dadd( 88.5013, 109.07, -11.3604, 0.22 ) }
    dend_27 { pt3dadd( 89.0918, 109.664, -11.3719, 0.22 ) }
    dend_27 { pt3dadd( 89.7066, 110.323, -11.4301, 0.22 ) }
    dend_27 { pt3dadd( 90.0192, 110.684, -11.4699, 0.66 ) }
    dend_27 { pt3dadd( 90.481, 111.235, -11.5291, 0.81 ) }
    dend_27 { pt3dadd( 91.1622, 112.057, -11.5958, 0.22 ) }
    dend_27 { pt3dadd( 91.7075, 112.686, -11.6241, 0.22 ) }
    dend_27 { pt3dadd( 92.1674, 113.24, -11.631, 0.74 ) }
    dend_27 { pt3dadd( 92.7082, 113.976, -11.6271, 0.88 ) }
    dend_27 { pt3dadd( 93.013, 114.446, -11.6148, 1.11 ) }
    dend_27 { pt3dadd( 93.6856, 115.625, -11.54, 1.11 ) }
    dend_27 { pt3dadd( 94.2356, 116.741, -11.4422, 0.37 ) }
    dend_27 { pt3dadd( 94.8127, 118.005, -11.2949, 0.22 ) }
    dend_27 { pt3dadd( 95.1548, 118.802, -11.1749, 0.29 ) }
    dend_27 { pt3dadd( 95.4627, 119.53, -11.0371, 0.29 ) }
    dend_27 { pt3dadd( 95.7928, 120.261, -10.8677, 0.37 ) }
    dend_27 { pt3dadd( 96.1741, 120.909, -10.6728, 0.37 ) }
    dend_27 { pt3dadd( 96.5352, 121.318, -10.5006, 0.22 ) }
    dend_27 { pt3dadd( 97.0206, 121.687, -10.2981, 0.22 ) }
    dend_27 { pt3dadd( 97.7578, 122.138, -10.0143, 0.22 ) }
    dend_27 { pt3dadd( 98.4876, 122.526, -9.76443, 0.29 ) }
    dend_27 { pt3dadd( 99.5743, 123.073, -9.41204, 0.22 ) }
    dend_27 { pt3dadd( 100.224, 123.416, -9.2101, 1.4 ) }
    dend_27 { pt3dadd( 100.907, 123.832, -8.99568, 2.21 ) }
    dend_27 { pt3dadd( 101.378, 124.195, -8.8255, 1.7 ) }
    dend_27 { pt3dadd( 101.973, 124.768, -8.55004, 0.96 ) }
    dend_27 { pt3dadd( 102.637, 125.487, -8.15277, 0.96 ) }
    dend_27 { pt3dadd( 103.015, 125.903, -7.88841, 1.47 ) }
    dend_27 { pt3dadd( 103.423, 126.325, -7.59341, 1.47 ) }
    dend_27 { pt3dadd( 104.244, 127.117, -7.00318, 0.22 ) }
    dend_27 { pt3dadd( 104.775, 127.605, -6.64902, 0.22 ) }
    dend_27 { pt3dadd( 105.336, 128.129, -6.30627, 0.22 ) }
    dend_27 { pt3dadd( 105.895, 128.655, -6.02283, 0.22 ) }
    dend_27 { pt3dadd( 106.378, 129.099, -5.82079, 0.22 ) }
    dend_27 { pt3dadd( 106.745, 129.443, -5.71745, 0.88 ) }
    dend_27 { pt3dadd( 107.306, 129.974, -5.62451, 1.99 ) }
    dend_27 { pt3dadd( 108.104, 130.754, -5.56608, 1.55 ) }
    dend_27 { pt3dadd( 109.042, 131.729, -5.56456, 0.22 ) }
    dend_27 { pt3dadd( 109.724, 132.456, -5.58155, 0.22 ) }
    dend_27 { pt3dadd( 110.641, 133.393, -5.62137, 0.29 ) }
    dend_27 { pt3dadd( 111.212, 133.951, -5.65568, 0.59 ) }
    dend_27 { pt3dadd( 112.114, 134.751, -5.75903, 0.96 ) }
    dend_27 { pt3dadd( 113.179, 135.592, -5.93284, 0.15 ) }
    dend_27 { pt3dadd( 114.082, 136.242, -6.0941, 1.18 ) }
    dend_27 { pt3dadd( 115.248, 137.034, -6.30865, 1.18 ) }
    dend_27 { pt3dadd( 116.243, 137.678, -6.48883, 1.4 ) }
    dend_27 { pt3dadd( 117.683, 138.568, -6.74779, 0.22 ) }
    dend_27 { pt3dadd( 118.337, 138.973, -6.86843, 0.37 ) }
    dend_27 { pt3dadd( 119.028, 139.424, -6.98591, 1.03 ) }
    dend_27 { pt3dadd( 119.339, 139.65, -7.03089, 0.88 ) }
    dend_27 { pt3dadd( 119.772, 139.993, -7.06367, 0.74 ) }
    dend_27 { pt3dadd( 120.38, 140.489, -7.06577, 0.96 ) }
    dend_27 { pt3dadd( 121.21, 141.274, -6.99028, 0.22 ) }
    dend_27 { pt3dadd( 121.953, 142.021, -6.92684, 0.96 ) }
    dend_27 { pt3dadd( 122.349, 142.409, -6.91204, 0.74 ) }
    dend_27 { pt3dadd( 123.047, 143.047, -6.88145, 0.22 ) }
    dend_27 { pt3dadd( 123.743, 143.659, -6.84847, 0.29 ) }
    dend_27 { pt3dadd( 124.779, 144.544, -6.80406, 0.29 ) }
    dend_27 { pt3dadd( 125.499, 145.128, -6.79363, 0.29 ) }
    dend_27 { pt3dadd( 126.625, 146.021, -6.82819, 0.22 ) }
    dend_27 { pt3dadd( 127.185, 146.469, -6.86212, 0.66 ) }
    dend_27 { pt3dadd( 127.647, 146.863, -6.89804, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_27 { pt3dadd( 127.94, 147.108, -6.92747, 1.55 ) }
    dend_27 { pt3dadd( 129.035, 147.982, -7.07359, 0.15 ) }
    dend_27 { pt3dadd( 129.889, 148.704, -7.20063, 0.15 ) }
    dend_27 { pt3dadd( 130.612, 149.364, -7.32726, 0.15 ) }
    dend_27 { pt3dadd( 131.218, 149.949, -7.47562, 0.15 ) }
    dend_27 { pt3dadd( 131.768, 150.513, -7.62514, 0.15 ) }
    dend_27 { pt3dadd( 132.194, 150.993, -7.73394, 0.88 ) }
    dend_27 { pt3dadd( 132.716, 151.635, -7.86146, 1.18 ) }
    dend_27 { pt3dadd( 133.334, 152.467, -8.00714, 1.18 ) }
    dend_27 { pt3dadd( 134.222, 153.674, -8.21291, 0.22 ) }
    dend_27 { pt3dadd( 135.169, 154.921, -8.42209, 0.22 ) }
    dend_27 { pt3dadd( 135.753, 155.729, -8.54795, 1.18 ) }
    dend_27 { pt3dadd( 136.033, 156.121, -8.60358, 1.92 ) }
    dend_27 { pt3dadd( 136.493, 156.778, -8.67913, 1.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 48.8608, 64.8624, -9.55579, 0.44 ) }
    dend_26 { pt3dadd( 49.6816, 65.1382, -9.59454, 0.44 ) }
    dend_26 { pt3dadd( 50.5566, 65.4399, -9.62554, 0.44 ) }
    dend_26 { pt3dadd( 50.9946, 65.5667, -9.6281, 0.96 ) }
    dend_26 { pt3dadd( 51.9793, 65.793, -9.60551, 1.7 ) }
    dend_26 { pt3dadd( 52.8541, 65.9731, -9.57744, 1.99 ) }
    dend_26 { pt3dadd( 54.1698, 66.2176, -9.54221, 1.11 ) }
    dend_26 { pt3dadd( 55.0571, 66.3562, -9.54162, 0.37 ) }
    dend_26 { pt3dadd( 55.8761, 66.4666, -9.58663, 0.37 ) }
    dend_26 { pt3dadd( 56.8805, 66.592, -9.6918, 0.37 ) }
    dend_26 { pt3dadd( 57.5098, 66.6746, -9.80919, 0.37 ) }
    dend_26 { pt3dadd( 58.1071, 66.7577, -9.96264, 0.44 ) }
    dend_26 { pt3dadd( 58.9727, 66.8744, -10.2419, 0.96 ) }
    dend_26 { pt3dadd( 60.0589, 67.0192, -10.6537, 1.62 ) }
    dend_26 { pt3dadd( 61.1416, 67.1874, -11.0596, 1.18 ) }
    dend_26 { pt3dadd( 62.5832, 67.4415, -11.5527, 0.29 ) }
    dend_26 { pt3dadd( 63.3333, 67.5724, -11.7611, 0.44 ) }
    dend_26 { pt3dadd( 63.8969, 67.6701, -11.8736, 0.59 ) }
    dend_26 { pt3dadd( 64.7799, 67.8128, -11.9891, 0.29 ) }
    dend_26 { pt3dadd( 65.9741, 68.0172, -12.0718, 0.29 ) }
    dend_26 { pt3dadd( 67.3423, 68.2916, -12.1059, 0.59 ) }
    dend_26 { pt3dadd( 68.2789, 68.5466, -12.1059, 1.03 ) }
    dend_26 { pt3dadd( 69.397, 68.9434, -12.1027, 1.7 ) }
    dend_26 { pt3dadd( 70.4515, 69.3878, -12.1012, 1.7 ) }
    dend_26 { pt3dadd( 71.7183, 69.9451, -12.0979, 0.96 ) }
    dend_26 { pt3dadd( 72.4804, 70.2652, -12.1135, 1.33 ) }
    dend_26 { pt3dadd( 73.9131, 70.851, -12.1514, 1.62 ) }
    dend_26 { pt3dadd( 75.0536, 71.3174, -12.2102, 0.52 ) }
    dend_26 { pt3dadd( 75.9346, 71.6772, -12.2684, 0.22 ) }
    dend_26 { pt3dadd( 76.8779, 72.0639, -12.3446, 0.22 ) }
    dend_26 { pt3dadd( 78.069, 72.5343, -12.4784, 0.22 ) }
    dend_26 { pt3dadd( 78.9742, 72.9152, -12.6163, 0.74 ) }
    dend_26 { pt3dadd( 79.79, 73.3105, -12.7773, 1.33 ) }
    dend_26 { pt3dadd( 80.5012, 73.7484, -12.9581, 1.77 ) }
    dend_26 { pt3dadd( 81.541, 74.5443, -13.2757, 0.44 ) }
    dend_26 { pt3dadd( 82.4874, 75.4181, -13.6005, 0.22 ) }
    dend_26 { pt3dadd( 83.2295, 76.1702, -13.8641, 0.66 ) }
    dend_26 { pt3dadd( 83.8148, 76.747, -14.0681, 0.29 ) }
    dend_26 { pt3dadd( 84.3307, 77.2189, -14.2339, 0.29 ) }
    dend_26 { pt3dadd( 84.6624, 77.4737, -14.3265, 0.22 ) }
    dend_26 { pt3dadd( 85.1226, 77.7672, -14.4244, 0.22 ) }
    dend_26 { pt3dadd( 85.8107, 78.132, -14.5283, 0.52 ) }
    dend_26 { pt3dadd( 86.6535, 78.486, -14.6348, 0.88 ) }
    dend_26 { pt3dadd( 87.3983, 78.74, -14.7394, 0.88 ) }
    dend_26 { pt3dadd( 88.2563, 79.0165, -14.8726, 0.22 ) }
    dend_26 { pt3dadd( 89.0218, 79.2877, -14.9877, 0.22 ) }
    dend_26 { pt3dadd( 89.3999, 79.4359, -15.0451, 0.52 ) }
    dend_26 { pt3dadd( 90.074, 79.7181, -15.1473, 1.4 ) }
    dend_26 { pt3dadd( 90.9809, 80.0821, -15.3001, 1.18 ) }
    dend_26 { pt3dadd( 92.3787, 80.6077, -15.5581, 0.22 ) }
    dend_26 { pt3dadd( 93.3916, 80.9791, -15.787, 0.59 ) }
    dend_26 { pt3dadd( 94.1409, 81.2469, -15.9649, 0.22 ) }
    dend_26 { pt3dadd( 94.9908, 81.577, -16.1837, 0.88 ) }
    dend_26 { pt3dadd( 96.0713, 82.0655, -16.484, 1.55 ) }
    dend_26 { pt3dadd( 96.4785, 82.2822, -16.6133, 1.55 ) }
    dend_26 { pt3dadd( 97.8367, 83.1233, -17.1317, 0.88 ) }
    dend_26 { pt3dadd( 98.4724, 83.561, -17.4079, 0.44 ) }
    dend_26 { pt3dadd( 99.0504, 83.9907, -17.6693, 0.22 ) }
    dend_26 { pt3dadd( 99.6354, 84.4146, -17.9329, 0.22 ) }
    dend_26 { pt3dadd( 100.251, 84.8509, -18.2046, 0.37 ) }
    dend_26 { pt3dadd( 100.927, 85.2967, -18.4904, 1.11 ) }
    dend_26 { pt3dadd( 101.806, 85.8299, -18.8352, 1.18 ) }
    dend_26 { pt3dadd( 102.625, 86.3137, -19.1405, 0.29 ) }
    dend_26 { pt3dadd( 103.758, 86.9613, -19.5383, 0.22 ) }
    dend_26 { pt3dadd( 104.382, 87.3106, -19.7353, 0.22 ) }
    dend_26 { pt3dadd( 105.021, 87.6813, -19.9072, 1.11 ) }
    dend_26 { pt3dadd( 105.477, 87.9694, -20.0027, 1.18 ) }
    dend_26 { pt3dadd( 106.4, 88.6286, -20.1306, 0.29 ) }
    dend_26 { pt3dadd( 107.26, 89.2495, -20.1839, 0.29 ) }
    dend_26 { pt3dadd( 107.804, 89.6239, -20.1849, 1.03 ) }
    dend_26 { pt3dadd( 108.54, 90.061, -20.1538, 1.92 ) }
    dend_26 { pt3dadd( 109.06, 90.3268, -20.1435, 1.92 ) }
    dend_26 { pt3dadd( 110.736, 91.0623, -20.177, 0.15 ) }
    dend_26 { pt3dadd( 111.618, 91.3816, -20.2214, 0.15 ) }
    dend_26 { pt3dadd( 112.141, 91.5587, -20.2517, 0.37 ) }
    dend_26 { pt3dadd( 112.883, 91.8134, -20.304, 1.11 ) }
    dend_26 { pt3dadd( 114.132, 92.2473, -20.3918, 1.47 ) }
    dend_26 { pt3dadd( 115.346, 92.6438, -20.479, 0.44 ) }
    dend_26 { pt3dadd( 116.627, 93.0299, -20.5708, 0.22 ) }
    dend_26 { pt3dadd( 117.645, 93.3218, -20.6393, 0.74 ) }
    dend_26 { pt3dadd( 118.459, 93.5135, -20.6742, 0.88 ) }
    dend_26 { pt3dadd( 119.862, 93.6758, -20.7044, 0.22 ) }
    dend_26 { pt3dadd( 120.517, 93.6522, -20.6941, 0.22 ) }
    dend_26 { pt3dadd( 121.16, 93.5171, -20.6822, 0.44 ) }
    dend_26 { pt3dadd( 121.789, 93.3034, -20.6737, 0.81 ) }
    dend_26 { pt3dadd( 122.554, 92.9897, -20.6661, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_26 { pt3dadd( 123.797, 92.4859, -20.6583, 0.81 ) }
    dend_26 { pt3dadd( 124.808, 92.1111, -20.6399, 0.22 ) }
    dend_26 { pt3dadd( 125.531, 91.9072, -20.6294, 0.22 ) }
    dend_26 { pt3dadd( 126.136, 91.819, -20.6355, 0.22 ) }
    dend_26 { pt3dadd( 127.311, 91.8197, -20.6752, 0.37 ) }
    dend_26 { pt3dadd( 128.606, 91.9946, -20.753, 0.22 ) }
    dend_26 { pt3dadd( 129.08, 92.1189, -20.8027, 0.96 ) }
    dend_26 { pt3dadd( 129.934, 92.4243, -20.9447, 1.84 ) }
    dend_26 { pt3dadd( 131.553, 93.125, -21.3281, 0.22 ) }
    dend_26 { pt3dadd( 132.301, 93.5128, -21.5663, 0.22 ) }
    dend_26 { pt3dadd( 132.604, 93.715, -21.6919, 0.22 ) }
    dend_26 { pt3dadd( 133.143, 94.1806, -21.9566, 0.22 ) }
    dend_26 { pt3dadd( 133.636, 94.6881, -22.2185, 0.44 ) }
    dend_26 { pt3dadd( 134.304, 95.4265, -22.5563, 1.18 ) }
    dend_26 { pt3dadd( 134.884, 96.0492, -22.8107, 1.62 ) }
    dend_26 { pt3dadd( 135.477, 96.6276, -23.0223, 1.7 ) }
    dend_26 { pt3dadd( 136.422, 97.5362, -23.2842, 1.25 ) }
    dend_26 { pt3dadd( 137.653, 98.6578, -23.5398, 0.29 ) }
    dend_26 { pt3dadd( 138.436, 99.2743, -23.6619, 1.03 ) }
    dend_26 { pt3dadd( 139.139, 99.7424, -23.7629, 1.47 ) }
    dend_26 { pt3dadd( 140.493, 100.502, -23.9383, 0.22 ) }
    dend_26 { pt3dadd( 141.592, 101.026, -24.0822, 0.88 ) }
    dend_26 { pt3dadd( 142.427, 101.379, -24.1922, 0.44 ) }
    dend_26 { pt3dadd( 143.665, 101.897, -24.3699, 0.22 ) }
    dend_26 { pt3dadd( 144.551, 102.306, -24.5029, 0.22 ) }
    dend_26 { pt3dadd( 145.239, 102.663, -24.6079, 1.03 ) }
    dend_26 { pt3dadd( 146.052, 103.141, -24.7231, 1.47 ) }
    dend_26 { pt3dadd( 146.745, 103.622, -24.8258, 1.25 ) }
    dend_26 { pt3dadd( 147.775, 104.487, -25.0064, 0.52 ) }
    dend_26 { pt3dadd( 148.883, 105.553, -25.2369, 0.37 ) }
    dend_26 { pt3dadd( 149.459, 106.119, -25.38, 1.03 ) }
    dend_26 { pt3dadd( 149.793, 106.437, -25.4883, 1.4 ) }
    dend_26 { pt3dadd( 150.828, 107.369, -25.8861, 0.96 ) }
    dend_26 { pt3dadd( 151.537, 107.927, -26.2001, 0.81 ) }
    dend_26 { pt3dadd( 152.611, 108.669, -26.7149, 0.22 ) }
    dend_26 { pt3dadd( 153.277, 109.061, -27.047, 0.22 ) }
    dend_26 { pt3dadd( 153.85, 109.355, -27.3089, 0.74 ) }
    dend_26 { pt3dadd( 154.283, 109.567, -27.4849, 0.81 ) }
    dend_26 { pt3dadd( 155.116, 110.002, -27.7768, 0.22 ) }
    dend_26 { pt3dadd( 155.522, 110.254, -27.9068, 0.22 ) }
    dend_26 { pt3dadd( 156.116, 110.678, -28.1128, 0.88 ) }
    dend_26 { pt3dadd( 157.018, 111.409, -28.4342, 1.33 ) }
    dend_26 { pt3dadd( 157.741, 112.078, -28.7249, 1.7 ) }
    dend_26 { pt3dadd( 158.634, 113.009, -29.1222, 1.47 ) }
    dend_26 { pt3dadd( 159.583, 114.116, -29.5874, 0.22 ) }
    dend_26 { pt3dadd( 160.141, 114.818, -29.88, 0.22 ) }
    dend_26 { pt3dadd( 160.758, 115.701, -30.2469, 0.29 ) }
    dend_26 { pt3dadd( 161.141, 116.394, -30.5195, 0.15 ) }
    dend_26 { pt3dadd( 161.369, 116.934, -30.7138, 0.15 ) }
    dend_26 { pt3dadd( 161.619, 117.756, -30.9779, 0.59 ) }
    dend_26 { pt3dadd( 161.813, 118.56, -31.2159, 0.37 ) }
    dend_26 { pt3dadd( 162.064, 119.64, -31.5582, 0.22 ) }
    dend_26 { pt3dadd( 162.345, 120.781, -31.9687, 0.22 ) }
    dend_26 { pt3dadd( 162.505, 121.336, -32.1875, 1.11 ) }
    dend_26 { pt3dadd( 162.855, 122.461, -32.6826, 0.22 ) }
    dend_26 { pt3dadd( 163.124, 123.289, -33.0872, 0.07 ) }
    dend_26 { pt3dadd( 163.364, 124.079, -33.4723, 0.07 ) }
    dend_26 { pt3dadd( 163.506, 124.567, -33.6852, 0.88 ) }
    dend_26 { pt3dadd( 163.605, 124.976, -33.8281, 1.11 ) }
    dend_26 { pt3dadd( 163.726, 125.858, -34.0213, 0.81 ) }
    dend_26 { pt3dadd( 163.766, 126.818, -34.0912, 0.37 ) }
    dend_26 { pt3dadd( 163.756, 128.194, -34.0329, 0.15 ) }
    dend_26 { pt3dadd( 163.724, 129.348, -33.8734, 0.15 ) }
    dend_26 { pt3dadd( 163.681, 130.35, -33.6501, 0.15 ) }
    dend_26 { pt3dadd( 163.654, 131.287, -33.3902, 0.59 ) }
    dend_26 { pt3dadd( 163.618, 132.633, -32.9397, 0.29 ) }
    dend_26 { pt3dadd( 163.593, 133.353, -32.6535, 0.66 ) }
    dend_26 { pt3dadd( 163.574, 134.184, -32.278, 1.47 ) }
    dend_26 { pt3dadd( 163.551, 135.479, -31.6519, 0.22 ) }
    dend_26 { pt3dadd( 163.549, 136.407, -31.1985, 0.15 ) }
    dend_26 { pt3dadd( 163.59, 137.401, -30.7154, 0.15 ) }
    dend_26 { pt3dadd( 163.638, 138.099, -30.3794, 0.44 ) }
    dend_26 { pt3dadd( 163.702, 138.745, -30.0951, 0.44 ) }
    dend_26 { pt3dadd( 163.834, 139.727, -29.6869, 0.22 ) }
    dend_26 { pt3dadd( 163.894, 140.163, -29.5237, 0.15 ) }
    dend_26 { pt3dadd( 163.942, 141.078, -29.1982, 0.15 ) }
    dend_26 { pt3dadd( 163.936, 141.435, -29.0848, 0.15 ) }
    dend_26 { pt3dadd( 163.86, 141.972, -28.9303, 0.44 ) }
    dend_26 { pt3dadd( 163.762, 142.385, -28.8113, 0.44 ) }
    dend_26 { pt3dadd( 163.455, 143.59, -28.4358, 0.15 ) }
    dend_26 { pt3dadd( 163.27, 144.442, -28.1447, 0.22 ) }
    dend_26 { pt3dadd( 163.159, 145.02, -27.9384, 0.29 ) }
    dend_26 { pt3dadd( 163.096, 145.967, -27.608, 0.29 ) }
    dend_26 { pt3dadd( 163.152, 146.707, -27.3789, 0.74 ) }
    dend_26 { pt3dadd( 163.351, 147.592, -27.147, 0.66 ) }
    dend_26 { pt3dadd( 163.631, 148.372, -26.9834, 1.55 ) }
    dend_26 { pt3dadd( 163.815, 148.794, -26.9211, 1.55 ) }
    dend_26 { pt3dadd( 164.479, 150.096, -26.8244, 0.15 ) }
    dend_26 { pt3dadd( 165.013, 151.019, -26.8063, 0.22 ) }
    dend_26 { pt3dadd( 165.544, 151.894, -26.824, 0.22 ) }
    dend_26 { pt3dadd( 165.892, 152.443, -26.856, 0.22 ) }
    dend_26 { pt3dadd( 166.388, 153.172, -26.9214, 0.37 ) }
    dend_26 { pt3dadd( 167.399, 154.572, -27.0792, 0.22 ) }
    dend_26 { pt3dadd( 168.288, 155.808, -27.2129, 0.15 ) }
    dend_26 { pt3dadd( 168.69, 156.388, -27.2526, 1.18 ) }
    dend_26 { pt3dadd( 169.155, 157.11, -27.2749, 2.21 ) }
    dend_26 { pt3dadd( 169.318, 157.381, -27.2751, 2.21 ) }
    dend_26 { pt3dadd( 170.12, 158.957, -27.2165, 0.22 ) }
    dend_26 { pt3dadd( 170.59, 160.179, -27.1309, 0.22 ) }
    dend_26 { pt3dadd( 170.98, 161.533, -27.0381, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_26 { pt3dadd( 171.085, 161.99, -27.0084, 0.66 ) }
    dend_26 { pt3dadd( 171.146, 162.327, -26.9946, 1.25 ) }
    dend_26 { pt3dadd( 171.32, 163.463, -26.9888, 1.62 ) }
    dend_26 { pt3dadd( 171.483, 164.846, -27.0429, 0.22 ) }
    dend_26 { pt3dadd( 171.646, 166.247, -27.2006, 0.22 ) }
    dend_26 { pt3dadd( 171.703, 166.789, -27.2915, 0.37 ) }
    dend_26 { pt3dadd( 171.8, 167.596, -27.4515, 0.88 ) }
    dend_26 { pt3dadd( 171.871, 168.218, -27.5831, 0.88 ) }
    dend_26 { pt3dadd( 171.939, 169.112, -27.8011, 0.22 ) }
    dend_26 { pt3dadd( 171.95, 170.135, -28.0556, 0.15 ) }
    dend_26 { pt3dadd( 171.908, 170.943, -28.2283, 0.15 ) }
    dend_26 { pt3dadd( 171.86, 171.335, -28.3645, 0.52 ) }
    dend_26 { pt3dadd( 171.73, 172.164, -28.7151, 0.88 ) }
    dend_26 { pt3dadd( 171.565, 173.118, -29.16, 0.22 ) }
    dend_26 { pt3dadd( 171.452, 173.778, -29.508, 0.22 ) }
    dend_26 { pt3dadd( 171.157, 175.376, -30.3598, 0.15 ) }
    dend_26 { pt3dadd( 170.739, 178.109, -31.7763, 0.22 ) }
    dend_26 { pt3dadd( 170.643, 178.963, -32.2047, 0.44 ) }
    dend_26 { pt3dadd( 170.596, 179.867, -32.6298, 0.22 ) }
    dend_26 { pt3dadd( 170.609, 180.833, -33.0366, 0.29 ) }
    dend_26 { pt3dadd( 170.661, 181.614, -33.3183, 0.22 ) }
    dend_26 { pt3dadd( 170.807, 182.962, -33.6874, 0.15 ) }
    dend_26 { pt3dadd( 170.902, 183.577, -33.7441, 0.15 ) }
    dend_26 { pt3dadd( 171.085, 184.665, -33.8358, 0.15 ) }
    dend_26 { pt3dadd( 171.201, 185.25, -33.8734, 0.29 ) }
    dend_26 { pt3dadd( 171.338, 185.828, -33.8821, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 26/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -13.4986, 52.4179, 44.9506, 0.07 ) }
    dend_19 { pt3dadd( -13.6979, 53.0289, 44.999, 0.07 ) }
    dend_19 { pt3dadd( -13.8654, 53.597, 45.076, 0.07 ) }
    dend_19 { pt3dadd( -14.1225, 54.6805, 45.2997, 0.07 ) }
    dend_19 { pt3dadd( -14.2942, 55.5925, 45.496, 0.29 ) }
    dend_19 { pt3dadd( -14.3958, 56.3098, 45.659, 0.07 ) }
    dend_19 { pt3dadd( -14.498, 57.4729, 45.9269, 0.07 ) }
    dend_19 { pt3dadd( -14.5088, 58.048, 46.0749, 0.52 ) }
    dend_19 { pt3dadd( -14.4803, 59.4922, 46.4735, 1.03 ) }
    dend_19 { pt3dadd( -14.4199, 61.0555, 46.9476, 0.15 ) }
    dend_19 { pt3dadd( -14.4001, 61.6904, 47.1438, 0.15 ) }
    dend_19 { pt3dadd( -14.3949, 62.4845, 47.3775, 0.15 ) }
    dend_19 { pt3dadd( -14.4073, 63.2105, 47.5584, 0.15 ) }
    dend_19 { pt3dadd( -14.4615, 63.8629, 47.7178, 0.07 ) }
    dend_19 { pt3dadd( -14.541, 64.3731, 47.8479, 0.07 ) }
    dend_19 { pt3dadd( -14.6495, 65.0286, 48.029, 0.44 ) }
    dend_19 { pt3dadd( -14.7099, 65.4034, 48.1435, 0.74 ) }
    dend_19 { pt3dadd( -14.7539, 65.8182, 48.2911, 0.74 ) }
    dend_19 { pt3dadd( -14.7899, 67.1674, 48.8306, 0.15 ) }
    dend_19 { pt3dadd( -14.7603, 67.9832, 49.1757, 0.15 ) }
    dend_19 { pt3dadd( -14.6861, 68.9816, 49.6021, 0.37 ) }
    dend_19 { pt3dadd( -14.5948, 69.9125, 50.0035, 1.7 ) }
    dend_19 { pt3dadd( -14.4914, 70.9407, 50.4252, 1.03 ) }
    dend_19 { pt3dadd( -14.3339, 72.3242, 50.9753, 0.15 ) }
    dend_19 { pt3dadd( -14.1681, 73.5317, 51.4619, 0.15 ) }
    dend_19 { pt3dadd( -14.0982, 74.026, 51.6565, 0.66 ) }
    dend_19 { pt3dadd( -14.0032, 74.6511, 51.9098, 1.03 ) }
    dend_19 { pt3dadd( -13.8067, 75.7015, 52.3208, 0.15 ) }
    dend_19 { pt3dadd( -13.531, 76.9601, 52.809, 0.15 ) }
    dend_19 { pt3dadd( -13.3049, 77.8069, 53.1695, 0.15 ) }
    dend_19 { pt3dadd( -13.0967, 78.4838, 53.4656, 0.29 ) }
    dend_19 { pt3dadd( -12.8699, 79.1992, 53.7704, 0.29 ) }
    dend_19 { pt3dadd( -12.6898, 79.8755, 54.0297, 0.74 ) }
    dend_19 { pt3dadd( -12.5382, 80.6832, 54.3199, 0.81 ) }
    dend_19 { pt3dadd( -12.4786, 81.243, 54.5023, 0.81 ) }
    dend_19 { pt3dadd( -12.4355, 82.8007, 54.9603, 0.15 ) }
    dend_19 { pt3dadd( -12.4964, 83.5982, 55.2108, 0.74 ) }
    dend_19 { pt3dadd( -12.8278, 85.3339, 55.7739, 0.15 ) }
    dend_19 { pt3dadd( -13.1189, 86.1778, 56.0692, 0.15 ) }
    dend_19 { pt3dadd( -13.5486, 86.9207, 56.3352, 0.15 ) }
    dend_19 { pt3dadd( -13.9617, 87.4432, 56.522, 0.29 ) }
    dend_19 { pt3dadd( -14.7989, 88.2436, 56.8352, 0.15 ) }
    dend_19 { pt3dadd( -15.0851, 88.47, 56.9255, 0.52 ) }
    dend_19 { pt3dadd( -16.0826, 89.1064, 57.2293, 1.4 ) }
    dend_19 { pt3dadd( -17.9419, 90.151, 57.7876, 0.15 ) }
    dend_19 { pt3dadd( -18.4514, 90.3896, 57.9382, 0.15 ) }
    dend_19 { pt3dadd( -18.7056, 90.4849, 58.024, 0.15 ) }
    dend_19 { pt3dadd( -19.8234, 90.7876, 58.4512, 0.81 ) }
    dend_19 { pt3dadd( -21.0439, 90.9809, 58.969, 0.15 ) }
    dend_19 { pt3dadd( -21.4714, 90.9911, 59.1688, 0.15 ) }
    dend_19 { pt3dadd( -22.0929, 90.9506, 59.4634, 1.18 ) }
    dend_19 { pt3dadd( -23.8619, 90.78, 60.2849, 0.07 ) }
    dend_19 { pt3dadd( -25.0191, 90.6398, 60.7933, 0.07 ) }
    dend_19 { pt3dadd( -25.5563, 90.572, 61.0076, 0.59 ) }
    dend_19 { pt3dadd( -26.1105, 90.5259, 61.1974, 1.77 ) }
    dend_19 { pt3dadd( -27.9705, 90.4171, 61.7648, 0.07 ) }
    dend_19 { pt3dadd( -28.8191, 90.3801, 62.0045, 0.07 ) }
    dend_19 { pt3dadd( -29.3743, 90.3514, 62.1341, 0.37 ) }
    dend_19 { pt3dadd( -29.928, 90.3295, 62.2391, 0.52 ) }
    dend_19 { pt3dadd( -31.1926, 90.2634, 62.4785, 0.07 ) }
    dend_19 { pt3dadd( -32.3917, 90.2025, 62.6803, 0.07 ) }
    dend_19 { pt3dadd( -32.8814, 90.1651, 62.7469, 0.07 ) }
    dend_19 { pt3dadd( -33.284, 90.123, 62.8003, 0.29 ) }
    dend_19 { pt3dadd( -34.2024, 89.9801, 62.9328, 0.66 ) }
    dend_19 { pt3dadd( -35.2755, 89.7248, 63.1106, 0.07 ) }
    dend_19 { pt3dadd( -36.066, 89.4886, 63.2445, 0.29 ) }
    dend_19 { pt3dadd( -36.7736, 89.266, 63.369, 0.88 ) }
    dend_19 { pt3dadd( -38.2727, 88.8221, 63.6789, 0.15 ) }
    dend_19 { pt3dadd( -39.0421, 88.6037, 63.8664, 0.52 ) }
    dend_19 { pt3dadd( -40.658, 88.1529, 64.2893, 0.07 ) }
    dend_19 { pt3dadd( -41.1808, 88.0152, 64.426, 0.59 ) }
    dend_19 { pt3dadd( -41.895, 87.8293, 64.6204, 1.47 ) }
    dend_19 { pt3dadd( -43.5832, 87.4141, 65.0927, 0.07 ) }
    dend_19 { pt3dadd( -44.2212, 87.2615, 65.2786, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( -45.1913, 87.0312, 65.5673, 0.07 ) }
    dend_19 { pt3dadd( -45.489, 86.9614, 65.6524, 0.37 ) }
    dend_19 { pt3dadd( -46.1152, 86.8207, 65.8105, 0.81 ) }
    dend_19 { pt3dadd( -47.2888, 86.5761, 66.0709, 0.07 ) }
    dend_19 { pt3dadd( -48.2157, 86.4005, 66.2304, 0.07 ) }
    dend_19 { pt3dadd( -48.689, 86.3504, 66.2944, 0.44 ) }
    dend_19 { pt3dadd( -49.1827, 86.3341, 66.3548, 0.88 ) }
    dend_19 { pt3dadd( -50.5433, 86.3793, 66.4819, 0.15 ) }
    dend_19 { pt3dadd( -51.2688, 86.4506, 66.5239, 0.37 ) }
    dend_19 { pt3dadd( -51.6682, 86.5085, 66.5293, 0.37 ) }
    dend_19 { pt3dadd( -53.3048, 86.7412, 66.4868, 0.15 ) }
    dend_19 { pt3dadd( -53.8406, 86.8107, 66.4654, 0.15 ) }
    dend_19 { pt3dadd( -54.6474, 86.9227, 66.4189, 0.37 ) }
    dend_19 { pt3dadd( -56.095, 87.1112, 66.3005, 0.07 ) }
    dend_19 { pt3dadd( -57.0237, 87.2413, 66.2153, 0.29 ) }
    dend_19 { pt3dadd( -57.8655, 87.369, 66.1419, 0.07 ) }
    dend_19 { pt3dadd( -58.7, 87.5096, 66.0697, 0.07 ) }
    dend_19 { pt3dadd( -60.4856, 87.8302, 65.9106, 0.07 ) }
    dend_19 { pt3dadd( -62.855, 88.2726, 65.7024, 0.07 ) }
    dend_19 { pt3dadd( -63.618, 88.4276, 65.6358, 0.07 ) }
    dend_19 { pt3dadd( -64.7137, 88.6674, 65.5533, 0.07 ) }
    dend_19 { pt3dadd( -65.3719, 88.8257, 65.5159, 0.59 ) }
    dend_19 { pt3dadd( -66.3645, 89.0596, 65.4629, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -13.4986, 52.4179, 44.9506, 0.37 ) }
    dend_18 { pt3dadd( -13.3924, 51.2087, 46.0684, 0.37 ) }
    dend_18 { pt3dadd( -13.2384, 50.4237, 46.7812, 0.37 ) }
    dend_18 { pt3dadd( -13.0838, 49.8994, 47.2643, 0.59 ) }
    dend_18 { pt3dadd( -12.7398, 48.9905, 48.0245, 0.22 ) }
    dend_18 { pt3dadd( -12.4633, 48.3064, 48.5355, 0.22 ) }
    dend_18 { pt3dadd( -12.2768, 47.7818, 48.8712, 0.15 ) }
    dend_18 { pt3dadd( -12.112, 47.2625, 49.2086, 0.15 ) }
    dend_18 { pt3dadd( -11.8932, 46.5267, 49.6197, 0.15 ) }
    dend_18 { pt3dadd( -11.7234, 45.8034, 49.9663, 0.59 ) }
    dend_18 { pt3dadd( -11.6535, 45.2439, 50.1754, 0.88 ) }
    dend_18 { pt3dadd( -11.6133, 43.7786, 50.6235, 0.15 ) }
    dend_18 { pt3dadd( -11.6888, 42.7079, 50.9523, 0.15 ) }
    dend_18 { pt3dadd( -11.7714, 42.1086, 51.1186, 0.44 ) }
    dend_18 { pt3dadd( -11.8853, 41.5357, 51.2617, 0.81 ) }
    dend_18 { pt3dadd( -12.0927, 40.6818, 51.4632, 0.07 ) }
    dend_18 { pt3dadd( -12.3603, 39.6377, 51.676, 0.22 ) }
    dend_18 { pt3dadd( -12.643, 38.543, 51.861, 0.22 ) }
    dend_18 { pt3dadd( -13.0272, 37.0058, 52.0732, 0.07 ) }
    dend_18 { pt3dadd( -13.3532, 35.74, 52.2207, 0.07 ) }
    dend_18 { pt3dadd( -13.6522, 34.5382, 52.3488, 0.07 ) }
    dend_18 { pt3dadd( -13.8026, 33.861, 52.405, 0.29 ) }
    dend_18 { pt3dadd( -14.1503, 32.2146, 52.5245, 0.07 ) }
    dend_18 { pt3dadd( -14.3011, 31.443, 52.5633, 0.88 ) }
    dend_18 { pt3dadd( -14.4886, 30.4708, 52.6181, 1.25 ) }
    dend_18 { pt3dadd( -14.5967, 29.8351, 52.6534, 1.25 ) }
    dend_18 { pt3dadd( -14.9095, 27.7725, 52.7631, 0.07 ) }
    dend_18 { pt3dadd( -15.1087, 26.4081, 52.826, 0.07 ) }
    dend_18 { pt3dadd( -15.213, 25.6395, 52.8518, 0.07 ) }
    dend_18 { pt3dadd( -15.2743, 25.1882, 52.8643, 0.52 ) }
    dend_18 { pt3dadd( -15.4424, 23.9819, 52.883, 0.66 ) }
    dend_18 { pt3dadd( -15.5438, 23.361, 52.8776, 0.22 ) }
    dend_18 { pt3dadd( -15.6866, 22.548, 52.8484, 0.52 ) }
    dend_18 { pt3dadd( -15.8177, 21.8713, 52.8, 0.29 ) }
    dend_18 { pt3dadd( -16.1002, 20.6083, 52.6973, 0.07 ) }
    dend_18 { pt3dadd( -16.3788, 19.5223, 52.5972, 0.07 ) }
    dend_18 { pt3dadd( -16.6075, 18.7319, 52.5262, 0.22 ) }
    dend_18 { pt3dadd( -16.782, 18.1871, 52.4777, 0.22 ) }
    dend_18 { pt3dadd( -17.2836, 16.679, 52.3436, 0.07 ) }
    dend_18 { pt3dadd( -17.4221, 16.2863, 52.3083, 0.37 ) }
    dend_18 { pt3dadd( -17.5905, 15.8316, 52.2693, 0.59 ) }
    dend_18 { pt3dadd( -18.0017, 14.7741, 52.1848, 0.07 ) }
    dend_18 { pt3dadd( -18.3463, 13.9185, 52.1247, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 66/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -46.4325, -62.758, 51.3782, 0.15 ) }
    dend_16 { pt3dadd( -47.7455, -63.1496, 51.2648, 0.15 ) }
    dend_16 { pt3dadd( -49.0267, -63.5192, 51.126, 0.15 ) }
    dend_16 { pt3dadd( -50.1931, -63.8512, 50.9683, 0.15 ) }
    dend_16 { pt3dadd( -51.3871, -64.1887, 50.7929, 0.37 ) }
    dend_16 { pt3dadd( -52.703, -64.5541, 50.5859, 0.15 ) }
    dend_16 { pt3dadd( -54.0255, -64.9111, 50.3675, 0.07 ) }
    dend_16 { pt3dadd( -54.6938, -65.0903, 50.2603, 0.22 ) }
    dend_16 { pt3dadd( -56.6709, -65.6347, 49.8512, 0.15 ) }
    dend_16 { pt3dadd( -56.8096, -65.6691, 49.8178, 0.59 ) }
    dend_16 { pt3dadd( -57.6915, -65.8725, 49.6029, 1.11 ) }
    dend_16 { pt3dadd( -58.0902, -65.9654, 49.5059, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -46.4325, -62.758, 51.3782, 0.59 ) }
    dend_15 { pt3dadd( -46.6955, -63.6773, 51.8101, 0.59 ) }
    dend_15 { pt3dadd( -46.9032, -64.3446, 52.1288, 0.96 ) }
    dend_15 { pt3dadd( -47.1634, -65.3773, 52.6442, 1.47 ) }
    dend_15 { pt3dadd( -47.2856, -66.0655, 52.9927, 1.47 ) }
    dend_15 { pt3dadd( -47.4294, -67.2937, 53.6313, 0.22 ) }
    dend_15 { pt3dadd( -47.4999, -67.7533, 53.8742, 0.15 ) }
    dend_15 { pt3dadd( -47.6152, -68.1875, 54.1129, 0.15 ) }
    dend_15 { pt3dadd( -47.8583, -68.9211, 54.5386, 0.15 ) }
    dend_15 { pt3dadd( -48.0872, -69.5416, 54.9077, 0.37 ) }
    dend_15 { pt3dadd( -48.3629, -70.1607, 55.321, 0.37 ) }
    dend_15 { pt3dadd( -48.9416, -71.2338, 56.1545, 0.22 ) }
    dend_15 { pt3dadd( -49.3064, -71.8335, 56.6867, 0.22 ) }
    dend_15 { pt3dadd( -49.529, -72.1844, 57.0167, 0.96 ) }
    dend_15 { pt3dadd( -50.0984, -73.0482, 57.8856, 2.06 ) }
    dend_15 { pt3dadd( -50.6452, -73.8656, 58.7671, 1.11 ) }
    dend_15 { pt3dadd( -51.3587, -74.9422, 59.9833, 0.22 ) }
    dend_15 { pt3dadd( -51.8674, -75.7645, 60.9491, 0.22 ) }
    dend_15 { pt3dadd( -52.0972, -76.1321, 61.3708, 0.22 ) }
    dend_15 { pt3dadd( -52.2896, -76.4272, 61.698, 0.22 ) }
    dend_15 { pt3dadd( -52.4705, -76.682, 61.9744, 0.22 ) }
    dend_15 { pt3dadd( -52.7657, -77.0708, 62.3261, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_15 { pt3dadd( -53.1407, -77.5123, 62.6423, 0.22 ) }
    dend_15 { pt3dadd( -53.7579, -78.2008, 63.0742, 0.22 ) }
    dend_15 { pt3dadd( -54.2787, -78.8148, 63.4301, 0.22 ) }
    dend_15 { pt3dadd( -54.5991, -79.2323, 63.6559, 0.66 ) }
    dend_15 { pt3dadd( -55.1981, -80.1085, 64.1259, 1.11 ) }
    dend_15 { pt3dadd( -56.0347, -81.4194, 64.8416, 0.29 ) }
    dend_15 { pt3dadd( -56.7566, -82.5632, 65.4569, 0.22 ) }
    dend_15 { pt3dadd( -57.3629, -83.5174, 65.9727, 0.22 ) }
    dend_15 { pt3dadd( -57.6525, -83.9577, 66.1922, 0.29 ) }
    dend_15 { pt3dadd( -58.3816, -85.0584, 66.7108, 0.22 ) }
    dend_15 { pt3dadd( -58.712, -85.556, 66.9408, 0.96 ) }
    dend_15 { pt3dadd( -59.2803, -86.4025, 67.3194, 1.84 ) }
    dend_15 { pt3dadd( -60.2471, -87.7948, 67.9296, 0.29 ) }
    dend_15 { pt3dadd( -61.0717, -88.8725, 68.4226, 0.22 ) }
    dend_15 { pt3dadd( -61.6308, -89.5647, 68.7602, 0.22 ) }
    dend_15 { pt3dadd( -61.9825, -89.9992, 68.9816, 0.22 ) }
    dend_15 { pt3dadd( -62.294, -90.43, 69.2145, 0.37 ) }
    dend_15 { pt3dadd( -62.7418, -91.1856, 69.6403, 0.52 ) }
    dend_15 { pt3dadd( -63.1495, -92.1139, 70.1267, 0.29 ) }
    dend_15 { pt3dadd( -63.434, -92.9468, 70.5622, 0.29 ) }
    dend_15 { pt3dadd( -63.5752, -93.4479, 70.7975, 0.29 ) }
    dend_15 { pt3dadd( -63.8172, -94.4426, 71.248, 0.44 ) }
    dend_15 { pt3dadd( -64.0472, -95.6119, 71.7829, 0.52 ) }
    dend_15 { pt3dadd( -64.2997, -97.2553, 72.5255, 0.15 ) }
    dend_15 { pt3dadd( -64.4034, -98.0803, 72.8982, 0.59 ) }
    dend_15 { pt3dadd( -64.6023, -99.4223, 73.5233, 1.7 ) }
    dend_15 { pt3dadd( -64.9213, -101.051, 74.3208, 0.15 ) }
    dend_15 { pt3dadd( -65.1164, -101.804, 74.7257, 0.44 ) }
    dend_15 { pt3dadd( -65.2589, -102.312, 75.0229, 0.44 ) }
    dend_15 { pt3dadd( -65.4841, -103.022, 75.4799, 0.07 ) }
    dend_15 { pt3dadd( -65.7011, -103.634, 75.8814, 0.07 ) }
    dend_15 { pt3dadd( -65.9088, -104.094, 76.184, 0.07 ) }
    dend_15 { pt3dadd( -66.2468, -104.719, 76.5732, 0.29 ) }
    dend_15 { pt3dadd( -66.8608, -105.756, 77.1773, 0.52 ) }
    dend_15 { pt3dadd( -67.3121, -106.494, 77.6078, 0.22 ) }
    dend_15 { pt3dadd( -67.7001, -107.114, 77.9713, 0.22 ) }
    dend_15 { pt3dadd( -68.1398, -107.792, 78.3796, 0.37 ) }
    dend_15 { pt3dadd( -68.5895, -108.431, 78.7964, 0.74 ) }
    dend_15 { pt3dadd( -69.305, -109.322, 79.4164, 1.33 ) }
    dend_15 { pt3dadd( -70.1053, -110.178, 80.0394, 0.22 ) }
    dend_15 { pt3dadd( -70.7191, -110.782, 80.478, 0.15 ) }
    dend_15 { pt3dadd( -71.2021, -111.231, 80.8082, 0.29 ) }
    dend_15 { pt3dadd( -71.8715, -111.837, 81.2688, 0.15 ) }
    dend_15 { pt3dadd( -72.4143, -112.31, 81.6188, 0.59 ) }
    dend_15 { pt3dadd( -73.004, -112.775, 81.981, 0.74 ) }
    dend_15 { pt3dadd( -73.8869, -113.414, 82.4596, 0.07 ) }
    dend_15 { pt3dadd( -74.7208, -113.993, 82.8961, 0.15 ) }
    dend_15 { pt3dadd( -75.316, -114.4, 83.2022, 0.15 ) }
    dend_15 { pt3dadd( -75.803, -114.736, 83.4472, 0.15 ) }
    dend_15 { pt3dadd( -76.3557, -115.12, 83.7022, 0.15 ) }
    dend_15 { pt3dadd( -77.1316, -115.665, 84.0282, 0.29 ) }
    dend_15 { pt3dadd( -77.766, -116.097, 84.2557, 0.74 ) }
    dend_15 { pt3dadd( -78.7083, -116.747, 84.5458, 1.03 ) }
    dend_15 { pt3dadd( -79.6332, -117.407, 84.8052, 0.29 ) }
    dend_15 { pt3dadd( -80.9292, -118.346, 85.1838, 0.22 ) }
    dend_15 { pt3dadd( -81.7243, -118.952, 85.4076, 0.88 ) }
    dend_15 { pt3dadd( -82.6233, -119.619, 85.6585, 1.33 ) }
    dend_15 { pt3dadd( -83.4166, -120.189, 85.8652, 1.47 ) }
    dend_15 { pt3dadd( -84.9397, -121.231, 86.2442, 0.22 ) }
    dend_15 { pt3dadd( -85.739, -121.746, 86.43, 0.22 ) }
    dend_15 { pt3dadd( -86.6754, -122.33, 86.6579, 1.03 ) }
    dend_15 { pt3dadd( -87.678, -122.938, 86.8935, 1.55 ) }
    dend_15 { pt3dadd( -89.12, -123.822, 87.2409, 0.74 ) }
    dend_15 { pt3dadd( -90.5323, -124.732, 87.6457, 0.22 ) }
    dend_15 { pt3dadd( -91.2468, -125.247, 87.8811, 0.22 ) }
    dend_15 { pt3dadd( -91.888, -125.748, 88.099, 0.22 ) }
    dend_15 { pt3dadd( -92.6214, -126.367, 88.3815, 0.15 ) }
    dend_15 { pt3dadd( -93.2745, -127.022, 88.6817, 0.37 ) }
    dend_15 { pt3dadd( -94.0545, -127.964, 89.1399, 0.15 ) }
    dend_15 { pt3dadd( -94.5561, -128.715, 89.5115, 0.15 ) }
    dend_15 { pt3dadd( -95.1591, -129.75, 90.0599, 0.22 ) }
    dend_15 { pt3dadd( -95.4143, -130.233, 90.3168, 0.15 ) }
    dend_15 { pt3dadd( -95.7806, -130.981, 90.7324, 0.15 ) }
    dend_15 { pt3dadd( -95.9815, -131.45, 91.0138, 0.74 ) }
    dend_15 { pt3dadd( -96.1852, -132.019, 91.3836, 0.88 ) }
    dend_15 { pt3dadd( -96.5183, -133.198, 92.2576, 0.15 ) }
    dend_15 { pt3dadd( -96.6385, -133.647, 92.6051, 0.22 ) }
    dend_15 { pt3dadd( -96.872, -134.165, 93.0113, 0.22 ) }
    dend_15 { pt3dadd( -97.399, -134.983, 93.6625, 0.22 ) }
    dend_15 { pt3dadd( -97.575, -135.207, 93.8436, 0.22 ) }
    dend_15 { pt3dadd( -98.0212, -135.701, 94.238, 0.88 ) }
    dend_15 { pt3dadd( -98.8094, -136.467, 94.7942, 1.84 ) }
    dend_15 { pt3dadd( -100.09, -137.569, 95.517, 0.15 ) }
    dend_15 { pt3dadd( -100.853, -138.219, 95.8699, 0.15 ) }
    dend_15 { pt3dadd( -101.417, -138.707, 96.0656, 0.29 ) }
    dend_15 { pt3dadd( -102.227, -139.451, 96.3673, 0.74 ) }
    dend_15 { pt3dadd( -102.924, -140.137, 96.6629, 1.11 ) }
    dend_15 { pt3dadd( -103.56, -140.825, 96.9896, 0.52 ) }
    dend_15 { pt3dadd( -104.427, -141.805, 97.4884, 0.22 ) }
    dend_15 { pt3dadd( -105.843, -143.264, 98.2858, 0.29 ) }
    dend_15 { pt3dadd( -107.006, -144.361, 98.9593, 0.15 ) }
    dend_15 { pt3dadd( -107.665, -144.938, 99.3605, 0.37 ) }
    dend_15 { pt3dadd( -108.542, -145.634, 99.9135, 1.18 ) }
    dend_15 { pt3dadd( -109.763, -146.533, 100.755, 0.44 ) }
    dend_15 { pt3dadd( -110.869, -147.23, 101.56, 0.29 ) }
    dend_15 { pt3dadd( -111.667, -147.689, 102.172, 0.15 ) }
    dend_15 { pt3dadd( -112.315, -148.039, 102.64, 0.88 ) }
    dend_15 { pt3dadd( -113.274, -148.547, 103.335, 1.03 ) }
    dend_15 { pt3dadd( -114.616, -149.222, 104.353, 0.22 ) }
    dend_15 { pt3dadd( -115.876, -149.831, 105.428, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -116.477, -150.109, 105.973, 0.59 ) }
    dend_15 { pt3dadd( -117.18, -150.415, 106.614, 0.96 ) }
    dend_15 { pt3dadd( -118.173, -150.776, 107.488, 0.37 ) }
    dend_15 { pt3dadd( -119.519, -151.148, 108.626, 0.15 ) }
    dend_15 { pt3dadd( -120.625, -151.339, 109.499, 0.59 ) }
    dend_15 { pt3dadd( -121.302, -151.409, 110.014, 1.77 ) }
    dend_15 { pt3dadd( -123.027, -151.512, 111.299, 0.22 ) }
    dend_15 { pt3dadd( -124.114, -151.553, 112.119, 0.22 ) }
    dend_15 { pt3dadd( -124.912, -151.576, 112.69, 0.37 ) }
    dend_15 { pt3dadd( -125.705, -151.624, 113.212, 0.37 ) }
    dend_15 { pt3dadd( -126.328, -151.693, 113.612, 0.37 ) }
    dend_15 { pt3dadd( -127.162, -151.804, 114.174, 0.81 ) }
    dend_15 { pt3dadd( -127.864, -151.942, 114.722, 0.81 ) }
    dend_15 { pt3dadd( -128.907, -152.318, 115.721, 0.29 ) }
    dend_15 { pt3dadd( -129.476, -152.614, 116.415, 0.29 ) }
    dend_15 { pt3dadd( -129.797, -152.859, 117.027, 0.29 ) }
    dend_15 { pt3dadd( -129.901, -152.971, 117.373, 0.29 ) }
    dend_15 { pt3dadd( -130.167, -153.332, 118.806, 0.29 ) }
    dend_15 { pt3dadd( -130.235, -153.47, 119.405, 0.44 ) }
    dend_15 { pt3dadd( -130.339, -153.726, 120.519, 0.44 ) }
    dend_15 { pt3dadd( -130.555, -154.089, 122.05, 0.81 ) }
    dend_15 { pt3dadd( -130.861, -154.398, 123.362, 0.81 ) }
    dend_15 { pt3dadd( -131.199, -154.653, 124.367, 0.81 ) }
    dend_15 { pt3dadd( -131.468, -154.803, 124.935, 0.22 ) }
    dend_15 { pt3dadd( -132.207, -155.15, 126.223, 0.22 ) }
    dend_15 { pt3dadd( -133.166, -155.559, 127.604, 0.22 ) }
    dend_15 { pt3dadd( -134.107, -155.959, 128.78, 0.81 ) }
    dend_15 { pt3dadd( -135.028, -156.38, 129.83, 0.52 ) }
    dend_15 { pt3dadd( -136.443, -157.114, 131.288, 0.22 ) }
    dend_15 { pt3dadd( -137.067, -157.476, 131.86, 0.22 ) }
    dend_15 { pt3dadd( -137.544, -157.796, 132.217, 0.52 ) }
    dend_15 { pt3dadd( -138.397, -158.444, 132.66, 0.15 ) }
    dend_15 { pt3dadd( -138.797, -158.78, 132.769, 0.59 ) }
    dend_15 { pt3dadd( -139.829, -159.723, 132.857, 0.15 ) }
    dend_15 { pt3dadd( -140.535, -160.455, 132.746, 0.37 ) }
    dend_15 { pt3dadd( -141.3, -161.283, 132.528, 0.15 ) }
    dend_15 { pt3dadd( -141.982, -161.986, 132.241, 0.37 ) }
    dend_15 { pt3dadd( -142.416, -162.369, 131.958, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 38/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 136.493, 156.778, -8.67913, 0.96 ) }
    dend_31 { pt3dadd( 137.43, 157.721, -8.90138, 0.96 ) }
    dend_31 { pt3dadd( 138.073, 158.435, -9.05212, 1.25 ) }
    dend_31 { pt3dadd( 138.649, 159.148, -9.18512, 0.66 ) }
    dend_31 { pt3dadd( 138.999, 159.616, -9.26487, 0.22 ) }
    dend_31 { pt3dadd( 139.418, 160.191, -9.36007, 0.15 ) }
    dend_31 { pt3dadd( 139.688, 160.553, -9.42192, 0.37 ) }
    dend_31 { pt3dadd( 140.234, 161.326, -9.54601, 0.15 ) }
    dend_31 { pt3dadd( 140.631, 161.858, -9.63699, 0.37 ) }
    dend_31 { pt3dadd( 140.937, 162.23, -9.70848, 0.88 ) }
    dend_31 { pt3dadd( 141.308, 162.628, -9.8209, 0.88 ) }
    dend_31 { pt3dadd( 142.15, 163.428, -10.1838, 0.22 ) }
    dend_31 { pt3dadd( 142.73, 163.938, -10.4476, 0.22 ) }
    dend_31 { pt3dadd( 143.322, 164.39, -10.7341, 0.22 ) }
    dend_31 { pt3dadd( 143.731, 164.67, -10.9453, 0.22 ) }
    dend_31 { pt3dadd( 144.596, 165.221, -11.4354, 1.25 ) }
    dend_31 { pt3dadd( 145.48, 165.755, -12.0199, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 136.493, 156.778, -8.67913, 0.29 ) }
    dend_28 { pt3dadd( 136.693, 158.111, -8.37142, 0.29 ) }
    dend_28 { pt3dadd( 136.893, 158.762, -8.28262, 0.22 ) }
    dend_28 { pt3dadd( 137.1, 159.297, -8.24511, 0.66 ) }
    dend_28 { pt3dadd( 137.431, 160.088, -8.22481, 0.22 ) }
    dend_28 { pt3dadd( 137.773, 160.857, -8.22754, 0.15 ) }
    dend_28 { pt3dadd( 138.086, 161.576, -8.24051, 0.15 ) }
    dend_28 { pt3dadd( 138.501, 162.483, -8.31135, 0.15 ) }
    dend_28 { pt3dadd( 138.948, 163.438, -8.43313, 0.22 ) }
    dend_28 { pt3dadd( 139.364, 164.302, -8.57991, 0.29 ) }
    dend_28 { pt3dadd( 139.723, 165.018, -8.72613, 0.22 ) }
    dend_28 { pt3dadd( 140.123, 165.739, -8.90328, 0.29 ) }
    dend_28 { pt3dadd( 140.765, 166.688, -9.18373, 0.22 ) }
    dend_28 { pt3dadd( 141.391, 167.493, -9.45035, 0.66 ) }
    dend_28 { pt3dadd( 141.774, 167.951, -9.60754, 1.11 ) }
    dend_28 { pt3dadd( 142.253, 168.51, -9.80587, 1.18 ) }
    dend_28 { pt3dadd( 142.917, 169.292, -10.0935, 0.37 ) }
    dend_28 { pt3dadd( 143.639, 170.155, -10.4098, 0.37 ) }
    dend_28 { pt3dadd( 144.206, 170.924, -10.658, 0.22 ) }
    dend_28 { pt3dadd( 144.681, 171.775, -10.8591, 0.22 ) }
    dend_28 { pt3dadd( 144.96, 172.424, -10.9904, 0.22 ) }
    dend_28 { pt3dadd( 145.149, 172.972, -11.082, 0.59 ) }
    dend_28 { pt3dadd( 145.266, 173.375, -11.1278, 1.03 ) }
    dend_28 { pt3dadd( 145.503, 174.28, -11.1916, 1.18 ) }
    dend_28 { pt3dadd( 145.986, 175.991, -11.227, 0.44 ) }
    dend_28 { pt3dadd( 146.213, 176.723, -11.2263, 0.88 ) }
    dend_28 { pt3dadd( 146.477, 177.548, -11.1964, 1.7 ) }
    dend_28 { pt3dadd( 146.792, 178.503, -11.1323, 2.29 ) }
    dend_28 { pt3dadd( 147.083, 179.36, -11.057, 2.29 ) }
    dend_28 { pt3dadd( 147.311, 179.991, -10.9747, 1.99 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 85/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 147.311, 179.991, -10.9747, 0.22 ) }
    dend_30 { pt3dadd( 148.472, 182.03, -11.032, 0.22 ) }
    dend_30 { pt3dadd( 149.018, 182.988, -11.059, 0.22 ) }
    dend_30 { pt3dadd( 149.595, 184.001, -11.0874, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 147.311, 179.991, -10.9747, 0.29 ) }
    dend_29 { pt3dadd( 148.063, 180.527, -11.1167, 0.29 ) }
    dend_29 { pt3dadd( 148.562, 180.882, -11.2111, 0.29 ) }
    dend_29 { pt3dadd( 149.066, 181.241, -11.3062, 0.29 ) }
    dend_29 { pt3dadd( 149.491, 181.544, -11.3866, 0.52 ) }
    dend_29 { pt3dadd( 149.925, 181.853, -11.4686, 0.52 ) }
    dend_29 { pt3dadd( 150.643, 182.364, -11.6042, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_58 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_58, dend_35, dend_0, axon_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, axon_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_5 = new SectionList()
    dend_58 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_14 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_62 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_47 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_63 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_61 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_60 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_53 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_48 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_42 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_68 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_67 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_65 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_64 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_57 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_54 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_49 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_3 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_32 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_25 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_33 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_27 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_26 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_58 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_11 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_66 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_16 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_46 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_31 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_28 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_45 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_29 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_30 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_41 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_40 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_51 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_56 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_55 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_5 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_4 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_62 nseg = 3
    dend_59 nseg = 13
    dend_47 nseg = 3
    dend_1 nseg = 3
    dend_63 nseg = 5
    dend_61 nseg = 5
    dend_60 nseg = 5
    dend_53 nseg = 7
    dend_48 nseg = 5
    dend_42 nseg = 7
    dend_68 nseg = 13
    dend_67 nseg = 7
    dend_65 nseg = 13
    dend_64 nseg = 11
    dend_57 nseg = 13
    dend_54 nseg = 3
    dend_50 nseg = 3
    dend_49 nseg = 5
    dend_43 nseg = 3
    dend_39 nseg = 9
    dend_38 nseg = 17
    dend_21 nseg = 7
    dend_12 nseg = 15
    dend_9 nseg = 3
    dend_8 nseg = 9
    dend_6 nseg = 17
    dend_3 nseg = 9
    dend_44 nseg = 3
    dend_32 nseg = 3
    dend_25 nseg = 3
    dend_17 nseg = 3
    dend_14 nseg = 5
    dend_34 nseg = 9
    dend_33 nseg = 7
    dend_27 nseg = 7
    dend_26 nseg = 11
    dend_19 nseg = 5
    dend_18 nseg = 3
    dend_15 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_BTC_2d87a29e8a_0_0


