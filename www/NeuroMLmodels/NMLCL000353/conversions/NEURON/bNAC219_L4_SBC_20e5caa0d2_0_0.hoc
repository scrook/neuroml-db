// Cell: bNAC219_L4_SBC_20e5caa0d2_0_0
/*
{
  "id" : "bNAC219_L4_SBC_20e5caa0d2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.57209, -7.50427, 0.0, 2.40936", "-5.8697, -6.76539, 0.0, 3.96907", "-5.16731, -6.02651, 0.0, 5.71299", "-4.46492, -5.28764, 0.0, 7.09842", "-3.76253, -4.54876, 0.0, 8.10373", "-3.06015, -3.80988, 0.0, 8.84513", "-2.35776, -3.07101, 0.0, 9.76993", "-1.65537, -2.33213, 0.0, 10.5861", "-0.952982, -1.59325, 0.0, 11.176", "-0.250594, -0.854376, 0.0, 11.6742", "0.451794, -0.1155, 0.0, 12.1309", "1.15418, 0.623377, 0.0, 12.3879", "1.85657, 1.36225, 0.0, 12.501", "2.55896, 2.10113, 0.0, 12.1055", "3.26135, 2.84001, 0.0, 11.272", "3.96373, 3.57888, 0.0, 10.0688", "4.66612, 4.31776, 0.0, 8.58257", "5.36851, 5.05664, 0.0, 6.42241", "6.0709, 5.79551, 0.0, 4.86617", "6.77329, 6.53439, 0.0, 3.54478", "7.47568, 7.27327, 0.0, 2.03369" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-5.7794, -7.58643, 0.95, 0.92", "-5.7794, -7.58643, 0.95, 0.92", "-7.25858, -8.35082, -0.713697, 0.92", "-8.3428, -8.88779, -1.92596, 0.92", "-9.20764, -9.26843, -2.76716, 0.92", "-10.5599, -9.81869, -3.99673, 0.92", "-13.1302, -10.7426, -6.15495, 0.92", "-14.8587, -11.2829, -7.4398, 0.92", "-14.8748, -11.2873, -7.45076, 0.92", "-17.3738, -11.8564, -9.08789, 0.92", "-17.6168, -11.9027, -9.23846, 0.92", "-19.6398, -12.245, -10.2401, 0.92", "-20.5121, -12.3498, -10.4426, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999662092944
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "6.3106, 8.60157, -5.68, 1.15", "6.3106, 8.60157, -5.68, 1.15", "5.37142, 9.26759, -7.41685, 1.15", "3.60882, 10.1013, -9.90797, 1.15", "1.5546, 10.9097, -12.5146, 1.15", "1.53525, 10.9163, -12.5365, 1.15", "-0.294739, 11.4069, -14.3817, 1.15", "-2.01346, 11.7138, -15.8136, 1.15", "-3.97482, 12.0216, -17.194, 1.15", "-3.99964, 12.0251, -17.2104, 1.15", "-5.14376, 12.1511, -18.0069, 1.15", "-7.1747, 12.2485, -19.4997, 0.92", "-9.24443, 12.1799, -21.1882, 0.92", "-11.4197, 11.928, -23.1255, 0.92", "-13.2097, 11.5945, -24.8065, 0.92", "-14.8506, 11.1637, -26.3764, 0.92", "-16.4264, 10.5781, -28.0141, 0.92", "-18.1273, 9.68413, -29.9894, 0.92", "-19.3086, 8.74395, -31.5205, 0.92", "-20.3084, 7.55229, -32.9569, 0.92", "-20.6761, 6.91425, -33.561, 0.69", "-21.1293, 5.83505, -34.514, 0.69", "-21.5416, 4.58279, -35.6002, 0.92", "-21.948, 3.31022, -36.6687, 0.92", "-22.5826, 1.7312, -38.1263, 0.92", "-23.5109, -0.297174, -40.0921, 0.92", "-24.5027, -2.25907, -42.0408, 0.92", "-25.4948, -4.03567, -43.829, 0.92", "-26.8655, -6.29002, -46.1109, 0.92", "-28.3605, -8.61868, -48.4198, 0.92", "-29.6349, -10.5421, -50.4031, 0.92", "-31.1505, -12.8957, -52.7933, 0.92", "-31.1704, -12.9288, -52.8233, 0.92", "-32.4105, -15.1845, -54.621, 0.92", "-33.742, -17.7717, -56.3991, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999662092944,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-0.309399, 7.08157, -3.42, 1.15", "-0.309399, 7.08157, -3.42, 1.15", "-1.81462, 8.27834, -4.43721, 1.15", "-3.35863, 9.50595, -5.48063, 1.15", "-4.28425, 10.2419, -6.10615, 1.15", "-5.20747, 10.9759, -6.73005, 1.15", "-6.31582, 11.8572, -7.47906, 1.15", "-7.48771, 12.8371, -8.19936, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999662092944
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-7.2094, -6.57943, 2.8, 0.92", "-7.2094, -6.57943, 2.8, 0.92", "-8.7881, -7.69001, 2.01154, 0.92", "-10.1079, -8.63056, 1.4138, 0.92", "-11.7216, -9.82312, 0.709512, 0.92", "-13.5147, -11.1722, -0.0324195, 0.92", "-14.4598, -11.9182, -0.44476, 0.92", "-14.4742, -11.9302, -0.450541, 0.92", "-16.0799, -13.3168, -0.992271, 0.92", "-17.1872, -14.3108, -1.38542, 0.92", "-18.1703, -15.2482, -1.77386, 0.92", "-19.8299, -16.909, -2.53069, 0.92", "-20.861, -18.0089, -2.99811, 0.92", "-21.7508, -19.0155, -3.38234, 0.92", "-22.6048, -20.0319, -3.69647, 0.92", "-23.3666, -20.942, -3.88583, 0.92", "-24.8481, -22.6274, -4.02013, 0.92", "-26.297, -24.1035, -3.86657, 0.92", "-27.7047, -25.4146, -3.54251, 0.92", "-28.9705, -26.4641, -3.14396, 0.92", "-30.4007, -27.4826, -2.55097, 0.92", "-31.986, -28.4294, -1.9116, 0.92", "-33.6391, -29.2409, -1.28279, 0.92", "-35.1177, -29.8097, -0.825542, 0.92", "-36.9589, -30.4561, -0.340059, 0.92", "-38.635, -31.0473, 0.0373734, 0.92", "-40.8971, -31.8509, 0.520933, 0.69", "-43.3696, -32.7717, 1.04308, 0.92", "-46.0647, -33.7644, 1.6226, 0.92", "-48.5314, -34.648, 2.17468, 0.92", "-50.2544, -35.2648, 2.58339, 0.92", "-52.5493, -36.1093, 3.10493, 0.92", "-54.7462, -36.9278, 3.65251, 0.92", "-56.6972, -37.6476, 4.08632, 0.92", "-57.9909, -38.1341, 4.31554, 0.92", "-58.651, -38.3781, 4.39755, 0.92", "-60.4112, -39.0867, 4.52849, 0.92", "-61.7559, -39.7109, 4.60813, 0.69", "-61.9596, -39.8105, 4.62868, 0.69", "-63.2552, -40.4413, 4.85049, 0.69", "-64.8788, -41.139, 5.22688, 0.69", "-66.3778, -41.6644, 5.61328, 0.69", "-68.5335, -42.1872, 6.11761, 0.69", "-70.1825, -42.4991, 6.45503, 0.69", "-71.7251, -42.7485, 6.76612, 0.69", "-74.503, -43.069, 7.30879, 0.69", "-76.5451, -43.2168, 7.67358, 1.15", "-79.7254, -43.3113, 8.11532, 1.15", "-83.1141, -43.2805, 8.4473, 0.69" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999662092944,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-4.2294, -8.22293, 0.650001, 1.15", "-4.2294, -8.22293, 0.650001, 1.15", "-5.1014, -9.99252, 0.816616, 1.15", "-5.85795, -11.457, 0.969658, 1.15", "-6.37686, -12.4273, 1.06993, 1.15", "-7.23018, -14.0142, 1.2063, 0.92", "-8.25993, -15.9347, 1.34918, 0.92", "-9.37712, -18.0173, 1.48404, 0.92", "-10.4645, -20.1464, 1.58349, 0.92", "-11.1416, -21.6265, 1.65798, 0.92", "-11.7886, -23.3123, 1.83659, 0.92", "-12.1143, -24.4306, 2.04236, 0.92", "-12.1174, -24.4489, 2.04687, 0.92", "-12.0926, -26.5263, 2.7793, 0.92", "-11.7284, -28.452, 3.73521, 0.92", "-11.2179, -30.2214, 4.78238, 0.92", "-10.8099, -31.4879, 5.54212, 0.92", "-10.555, -32.2702, 5.99828, 0.92", "-9.95764, -34.1896, 7.06997, 0.92", "-9.45066, -36.0396, 8.15218, 0.92", "-9.16632, -37.4913, 8.91548, 0.92", "-8.96444, -39.1844, 9.67764, 0.92", "-8.89286, -40.3774, 10.1421, 0.92", "-8.90486, -41.2934, 10.4145, 0.92", "-9.07698, -43.9804, 11.046, 0.92", "-9.17487, -45.3304, 11.3084, 0.92", "-9.23557, -46.9996, 11.6454, 0.92", "-9.24629, -49.4136, 12.1478, 0.92", "-9.17185, -51.4279, 12.4708, 0.92", "-8.90212, -53.9916, 12.771, 0.92", "-8.89685, -54.0196, 12.7729, 0.92", "-8.51556, -55.5413, 12.9241, 0.92", "-8.50981, -55.5594, 12.9265, 0.92", "-7.96816, -57.0676, 13.1697, 0.69", "-7.42072, -58.76, 13.5337, 0.69", "-7.40065, -58.8323, 13.5481, 0.69", "-7.01286, -60.7234, 13.9912, 0.69", "-7.01041, -60.7415, 13.9968, 0.69", "-6.73798, -63.158, 14.7964, 0.69", "-6.60651, -65.0599, 15.5004, 0.69", "-6.59854, -65.2194, 15.5648, 0.69", "-6.50647, -66.6535, 16.1868, 0.69", "-6.35632, -68.1546, 16.9704, 0.69", "-7.62346, -77.2159, 19.6939, 0.69", "-8.9433, -85.8816, 23.5735, 0.69" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999662092944,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.3894, -7.67193, 0.58, 1.15", "-2.3894, -7.67193, 0.58, 1.15", "-2.34927, -8.65171, 2.47971, 1.15", "-2.30421, -9.75191, 4.61292, 0.92", "-2.2575, -10.8924, 6.82428, 0.92", "-2.25209, -11.0245, 7.08045, 0.92", "-2.2241, -11.7081, 8.40576, 1.15", "-2.17346, -12.2282, 9.37001, 1.15" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999662092944
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "7.4306, 4.38357, -7.7, 1.15", "7.44986, 4.37887, -7.70215, 1.15", "7.65844, 4.31242, -7.7005, 1.15", "9.75102, 3.41534, -7.46048, 1.15", "12.1255, 2.10582, -7.01557, 1.15", "13.6927, 1.07154, -6.5801, 1.15", "15.2886, -0.150061, -6.00457, 1.15", "16.959, -1.59442, -5.30508, 1.15", "18.6355, -3.15893, -4.57698, 1.15", "20.4545, -5.04507, -3.65553, 1.15", "22.2368, -7.07334, -2.60686, 0.92", "23.9068, -9.09609, -1.57595, 0.92", "25.4452, -11.0155, -0.684593, 0.92", "27.3569, -13.3501, 0.303738, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999662092944
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "7.2106, -1.37343, 0.33, 2.52", "7.2106, -1.37343, 0.33, 2.52", "8.97299, -2.51959, 0.604713, 1.83", "10.3082, -3.38789, 0.812827, 1.83", "11.4769, -4.14796, 0.995001, 1.83", "13.367, -5.3772, 1.28962, 1.61", "14.9958, -6.4365, 1.54352, 1.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999662092944
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "7.4706, 8.15507, 0.33, 1.61", "7.4706, 8.15507, 0.33, 1.61", "9.07858, 9.52522, 0.33, 1.61", "10.6811, 10.8907, 0.33, 1.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999662092944
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.47568, 7.27327, 0.0, 0.92", "17.8104, 18.1449, 0.0, 0.92", "28.1452, 29.0166, 0.0, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-20.5121, -12.3498, -10.4426, 0.92", "-22.3908, -12.0401, -11.5034, 0.92", "-24.3842, -11.7116, -12.629, 0.92", "-26.1922, -11.4135, -13.65, 0.92", "-27.5185, -11.1949, -14.3989, 0.92" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-20.5121, -12.3498, -10.4426, 0.69", "-20.1981, -14.3102, -11.6095, 0.69", "-20.0488, -16.0835, -12.5899, 0.69", "-20.0473, -16.1088, -12.6036, 0.69", "-20.019, -17.128, -13.1385, 0.69", "-19.9965, -18.9888, -14.1019, 0.69", "-19.9678, -20.8328, -15.0219, 0.69", "-20.0612, -21.984, -15.4944, 0.69", "-20.0652, -22.0105, -15.5045, 0.69", "-20.1984, -22.837, -15.833, 0.69", "-20.2012, -22.8545, -15.8403, 0.69", "-20.3873, -24.486, -16.5117, 0.69", "-20.4126, -26.0372, -17.1192, 0.69", "-20.3452, -27.2019, -17.558, 0.69", "-20.331, -27.3356, -17.6079, 0.69", "-20.1596, -28.6804, -18.1684, 0.69", "-20.0565, -29.4307, -18.4635, 0.69", "-19.7258, -31.6261, -19.2859, 0.69", "-19.4431, -33.5828, -19.9903, 0.69", "-19.4417, -33.6008, -19.9966, 0.69", "-19.3811, -35.9147, -20.7823, 0.69", "-19.4675, -38.0842, -21.5189, 0.69", "-19.6502, -39.999, -22.1665, 0.69", "-20.0241, -42.2422, -22.9387, 0.69", "-20.5803, -44.8613, -23.8476, 0.69", "-20.5864, -44.8875, -23.8575, 0.69", "-21.102, -46.8755, -24.6236, 0.69", "-21.1071, -46.8925, -24.6311, 0.69", "-21.9229, -49.3178, -25.6937, 0.69", "-21.9468, -49.3854, -25.7213, 0.69", "-22.7815, -51.8071, -26.6042, 0.69", "-23.475, -53.9009, -27.258, 0.69", "-23.4831, -53.9276, -27.2646, 0.69", "-23.9919, -55.8418, -27.6296, 0.69", "-24.2965, -57.2893, -27.7038, 0.69", "-24.5311, -58.6281, -27.6416, 0.69", "-24.7099, -59.97, -27.4264, 0.69", "-24.8781, -61.5802, -27.1869, 0.69", "-25.0406, -62.9479, -27.0358, 0.69", "-25.4058, -65.6941, -26.8255, 0.69", "-25.4109, -65.7221, -26.8255, 0.69", "-25.8291, -67.3261, -26.9683, 0.69", "-27.1128, -70.8568, -27.7151, 0.69", "-28.2991, -73.195, -28.5862, 0.69", "-29.3524, -74.7342, -29.4926, 0.69", "-30.7334, -76.3826, -30.8025, 0.69", "-32.0145, -77.6303, -32.07, 0.69", "-33.7123, -78.9161, -33.8136, 0.69", "-35.5931, -80.0015, -35.8988, 0.69", "-37.4204, -80.8912, -38.1499, 0.69", "-37.4366, -80.8994, -38.1736, 0.69", "-38.5231, -81.6729, -40.1801, 0.69", "-38.5325, -81.6847, -40.2057, 0.69", "-38.9495, -82.6734, -42.0437, 0.69", "-39.1366, -83.7039, -43.7748, 0.69", "-39.2491, -85.3216, -46.3144, 0.69", "-39.3077, -87.2978, -49.384, 0.69", "-39.3164, -88.8829, -51.7039, 0.69", "-39.3174, -88.9117, -51.7437, 0.69", "-39.4053, -90.542, -53.8891, 0.69", "-39.4061, -90.5546, -53.904, 0.69", "-39.6215, -92.5864, -56.1489, 0.46", "-39.9021, -94.498, -58.1592, 0.46", "-40.2834, -96.4204, -60.0813, 0.46", "-40.3004, -96.4875, -60.1501, 0.46", "-41.0214, -98.8619, -62.6011, 0.46", "-41.0427, -98.9246, -62.6732, 0.46", "-41.8855, -101.194, -65.3509, 0.46", "-41.9046, -101.24, -65.4117, 0.46", "-42.9099, -103.321, -68.5183, 0.46", "-42.9289, -103.356, -68.5749, 0.46", "-43.9248, -104.68, -71.3583, 0.46" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-33.742, -17.7717, -56.3991, 0.92", "-34.009, -18.1392, -56.5192, 0.92", "-34.0266, -18.1611, -56.527, 0.92", "-35.5255, -20.0019, -57.1967, 0.92", "-35.5372, -20.016, -57.203, 0.92", "-37.1218, -21.9901, -58.2984, 0.69", "-37.2803, -22.1896, -58.4204, 0.69", "-38.5902, -23.839, -59.5861, 0.69", "-38.7369, -24.02, -59.7295, 0.69", "-40.2304, -25.7333, -61.2362, 0.69", "-42.0368, -27.829, -63.1044, 0.69", "-42.2025, -28.024, -63.2855, 0.69", "-43.3796, -29.4602, -64.588, 0.69", "-43.4444, -29.5409, -64.662, 0.69", "-44.7635, -31.1732, -66.0828, 0.69", "-45.8521, -32.5091, -67.1565, 0.69", "-45.971, -32.6545, -67.2606, 0.69", "-47.0495, -34.0951, -68.1246, 0.69", "-47.1625, -34.2689, -68.2061, 0.69", "-47.9514, -35.5758, -68.7598, 0.69", "-48.0867, -35.8113, -68.8526, 0.69", "-49.3385, -37.9094, -69.6288, 0.69", "-50.8435, -40.4023, -70.493, 0.69", "-52.4824, -43.0994, -71.3928, 0.69", "-52.4967, -43.1233, -71.4006, 0.69", "-53.7949, -45.3464, -72.1157, 0.69", "-54.8043, -47.2159, -72.6704, 0.69", "-56.0665, -49.6909, -73.3748, 0.69", "-56.1378, -49.8421, -73.4192, 0.69", "-57.2052, -52.3132, -74.1701, 0.69", "-57.2439, -52.4168, -74.2019, 0.69", "-58.5842, -56.8141, -75.5501, 0.69", "-58.6356, -57.0366, -75.6207, 0.69", "-58.9524, -58.725, -76.1754, 0.69", "-59.0089, -59.0759, -76.2871, 0.69", "-59.3766, -61.8763, -77.2009, 0.69", "-59.3871, -61.966, -77.232, 0.69", "-59.7926, -65.8059, -78.1454, 0.69", "-59.7943, -65.8248, -78.1469, 0.69", "-60.0168, -68.5687, -78.1201, 0.69", "-60.0583, -68.9555, -78.0972, 0.69", "-60.3263, -71.1577, -77.8703, 0.69", "-61.2426, -75.9849, -77.3363, 0.69", "-62.6286, -81.5557, -76.6055, 0.69", "-62.6621, -81.6747, -76.5964, 0.69", "-63.6875, -85.0311, -76.5433, 0.69", "-63.728, -85.1681, -76.5515, 0.69", "-64.7468, -88.6079, -77.0149, 0.69", "-64.7521, -88.6258, -77.0192, 0.69", "-66.3197, -93.9005, -78.3666, 0.69", "-66.8758, -95.9003, -78.8717, 0.69", "-67.7763, -99.6245, -79.8321, 0.69", "-67.7822, -99.6516, -79.8391, 0.69", "-68.3016, -102.745, -80.65, 0.69", "-68.3311, -102.908, -80.6924, 0.69", "-69.2258, -106.879, -81.6834, 0.69" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-33.742, -17.7717, -56.3991, 0.69", "-36.6981, -15.6007, -58.2827, 0.69", "-38.9381, -13.9403, -60.0715, 0.69", "-40.6766, -12.5786, -62.0402, 0.69", "-40.6856, -12.5712, -62.0562, 0.69", "-41.4172, -11.9626, -63.5658, 0.69", "-41.4245, -11.9566, -63.5834, 0.69", "-42.3835, -11.0996, -66.6536, 0.69", "-43.3699, -10.2053, -70.4756, 0.69", "-44.6446, -9.02527, -76.2957, 0.69", "-44.6506, -9.0197, -76.3245, 0.69", "-45.4666, -8.2577, -80.66, 0.69" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-7.48771, 12.8371, -8.19936, 0.92", "-9.42224, 12.2995, -9.44422, 0.92", "-11.0073, 11.8287, -10.367, 0.92", "-12.4406, 11.3839, -11.1217, 0.92", "-14.3979, 10.6974, -12.139, 0.92", "-16.875, 9.76766, -13.4346, 0.92", "-18.2718, 9.18398, -14.17, 0.92", "-19.9028, 8.34933, -15.031, 0.92", "-21.0685, 7.69501, -15.6623, 0.92", "-22.787, 6.61399, -16.606, 0.92", "-24.1023, 5.68991, -17.2888, 0.92", "-25.7934, 4.33639, -18.0737, 0.92", "-26.9984, 3.35809, -18.508, 0.92", "-28.0878, 2.52547, -18.8028, 0.92", "-29.9557, 1.17191, -19.1773, 0.92", "-32.0125, -0.164513, -19.4509, 0.92", "-34.0062, -1.31308, -19.6012, 0.92", "-37.3359, -3.01729, -19.7983, 0.92", "-39.8633, -4.20704, -19.9246, 0.92", "-39.8905, -4.21902, -19.9255, 0.92", "-42.3668, -5.21493, -20.1174, 0.92", "-44.802, -6.13688, -20.457, 0.92", "-46.8975, -6.90283, -20.9156, 0.92", "-46.9244, -6.91277, -20.9238, 0.92", "-48.0768, -7.39562, -21.362, 0.92", "-50.5077, -8.63676, -22.5051, 0.92", "-50.5293, -8.65133, -22.5192, 0.92", "-52.438, -10.1955, -24.1081, 0.92", "-52.4579, -10.2107, -24.1239, 0.92", "-52.9513, -10.5753, -24.5205, 0.92", "-54.5931, -11.7953, -25.9453, 0.92", "-55.8371, -12.7401, -27.0069, 0.92", "-55.9038, -12.7912, -27.0585, 0.92", "-57.6276, -14.0873, -28.3447, 0.92", "-58.0461, -14.3917, -28.6712, 0.92", "-59.8208, -15.5775, -30.1162, 0.92", "-59.876, -15.6115, -30.1617, 0.92", "-61.9626, -16.9648, -31.9686, 0.92", "-62.8122, -17.565, -32.7455, 0.92", "-63.7067, -18.2607, -33.625, 0.92", "-65.1018, -19.3304, -34.8864, 0.92", "-65.1412, -19.3598, -34.9194, 0.92", "-66.7425, -20.5557, -36.2355, 0.92", "-68.1353, -21.6197, -37.288, 0.92", "-68.1565, -21.636, -37.3005, 0.92", "-69.3634, -22.5295, -37.8518, 0.92", "-70.5633, -23.4386, -38.3441, 0.92", "-70.5858, -23.4555, -38.3529, 0.92", "-72.3828, -24.75, -39.0103, 0.92", "-74.633, -26.3337, -39.833, 0.92", "-76.9618, -27.9608, -40.7034, 0.92", "-78.3714, -28.9321, -41.2501, 0.69", "-78.4335, -28.9743, -41.274, 0.69", "-79.821, -29.9517, -41.8529, 0.69", "-79.8582, -29.9788, -41.8703, 0.69", "-81.032, -30.9157, -42.4421, 0.69", "-81.0603, -30.9391, -42.456, 0.69", "-82.403, -32.058, -43.0639, 0.69", "-83.9406, -33.4032, -43.7539, 0.69", "-83.9749, -33.4345, -43.7693, 0.69", "-85.4291, -34.6896, -44.3945, 0.69", "-85.4436, -34.7012, -44.4009, 0.69", "-86.8136, -35.7356, -45.0002, 0.69", "-86.8366, -35.7514, -45.0099, 0.69", "-88.4793, -36.7658, -45.7621, 0.69", "-90.6639, -38.0685, -46.8498, 0.69", "-92.4975, -39.1128, -47.8472, 0.69", "-92.5207, -39.1256, -47.8606, 0.69", "-94.4923, -40.1556, -49.0311, 0.69", "-96.7814, -41.3455, -50.3942, 0.69", "-96.8975, -41.4051, -50.4656, 0.69", "-98.5509, -42.2175, -51.4336, 0.69", "-98.6313, -42.2562, -51.4769, 0.69", "-100.607, -43.0969, -52.5449, 0.69", "-102.057, -43.6447, -53.3221, 0.69", "-102.266, -43.7081, -53.4432, 0.69", "-104.386, -44.2712, -54.8138, 0.69", "-104.433, -44.2781, -54.8502, 0.69", "-107.128, -44.4401, -57.2197, 0.69", "-107.191, -44.4348, -57.2839, 0.69", "-109.567, -43.8283, -59.9348, 0.69", "-109.61, -43.8079, -59.986, 0.69", "-111.454, -42.1351, -62.3098, 0.69", "-111.469, -42.1169, -62.3275, 0.69", "-112.25, -40.7722, -63.0598, 0.69", "-113.132, -39.1498, -63.6483, 0.69", "-114.096, -37.3977, -64.0977, 0.69", "-115.787, -34.6149, -64.7978, 0.69", "-115.838, -34.5351, -64.8171, 0.69", "-118.323, -30.8005, -65.7988, 0.69", "-119.718, -28.8216, -66.3889, 0.46", "-121.99, -25.788, -67.4703, 0.46", "-123.282, -24.1151, -68.1668, 0.46", "-124.716, -22.2763, -69.042, 0.46", "-124.755, -22.2264, -69.0674, 0.46", "-126.261, -20.264, -70.219, 0.46", "-128.048, -17.809, -71.7266, 0.46", "-129.717, -15.2754, -73.2133, 0.46", "-129.755, -15.2158, -73.2459, 0.46" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-7.48771, 12.8371, -8.19936, 0.92", "-8.46345, 13.6494, -7.04696, 0.92", "-9.09258, 14.221, -6.23561, 0.92", "-9.98224, 15.0587, -5.04416, 0.92", "-10.9128, 15.9735, -3.74149, 0.92", "-11.7734, 16.7585, -2.63757, 0.92", "-12.835, 17.6267, -1.39148, 0.92", "-13.6412, 18.1731, -0.523476, 0.92", "-13.6611, 18.1844, -0.50439, 0.92", "-15.1936, 18.9174, 0.771228, 0.92", "-17.2431, 19.669, 2.19286, 0.92", "-18.867, 20.153, 3.07273, 0.92", "-19.9, 20.4396, 3.54153, 0.92", "-21.6418, 20.9354, 4.31648, 0.69", "-21.8896, 21.0231, 4.43562, 0.69", "-23.5513, 21.8284, 5.35926, 0.92", "-24.7609, 22.7992, 6.29923, 0.92", "-25.7145, 24.15, 7.39637, 0.92", "-26.0629, 25.2228, 8.16547, 0.92", "-26.194, 26.9624, 9.26244, 0.92", "-26.1629, 28.5212, 10.2309, 0.92", "-25.9815, 29.5657, 10.8542, 0.92", "-25.5874, 30.8701, 11.6511, 0.92", "-24.7474, 32.8411, 12.6782, 0.92", "-24.1437, 34.0803, 13.2002, 0.92" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-83.1141, -43.2805, 8.4473, 0.69", "-83.1967, -44.669, 6.82389, 0.69", "-83.1969, -44.6812, 6.80857, 0.69", "-83.2155, -45.8783, 5.3068, 0.69", "-83.2365, -47.2372, 3.60213, 0.69", "-83.2554, -48.4553, 2.07393, 0.69", "-83.2559, -48.4859, 2.03563, 0.69", "-83.0185, -50.25, 0.0810734, 0.69" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-83.1141, -43.2805, 8.4473, 0.69", "-82.693, -41.3192, 7.30703, 0.69", "-82.2677, -39.3383, 6.15539, 0.69", "-81.7929, -37.127, 4.86977, 0.69", "-81.7841, -37.0861, 4.84597, 0.69", "-81.2424, -34.563, 3.37908, 0.69", "-81.2248, -34.4811, 3.33149, 0.69", "-78.9638, -26.3695, -1.35696, 0.69", "-77.6308, -17.8683, -5.61658, 0.69", "-75.0318, -9.12663, -8.5444, 0.69" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-83.1141, -43.2805, 8.4473, 0.69", "-84.214, -44.1591, 9.0171, 0.69", "-86.0356, -45.6033, 10.0184, 0.69", "-87.8523, -46.9429, 11.1396, 0.69", "-87.8675, -46.9525, 11.1477, 0.69", "-90.0087, -48.1982, 12.1948, 0.69", "-91.7961, -49.0559, 12.9662, 0.69", "-91.8222, -49.0654, 12.977, 0.69", "-94.212, -49.6281, 13.9815, 0.69", "-96.785, -50.1042, 14.94, 0.46", "-96.8039, -50.1068, 14.9462, 0.46", "-99.7884, -50.2004, 15.655, 0.46", "-99.8079, -50.1995, 15.659, 0.46", "-101.867, -50.0523, 16.0423, 0.46", "-109.769, -54.4848, 20.0167, 0.46", "-118.91, -57.5539, 22.467, 0.46", "-127.271, -61.3001, 26.2803, 0.46", "-135.852, -63.844, 30.6608, 0.46" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-2.17346, -12.2282, 9.37001, 0.92", "-3.3466, -13.6944, 8.90116, 0.92", "-4.38711, -14.9948, 8.48532, 0.92", "-5.7015, -16.6375, 7.96002, 0.92", "-6.64189, -17.8128, 7.58419, 0.92", "-7.77566, -19.2298, 7.13108, 0.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-2.17346, -12.2282, 9.37001, 0.92", "-0.964782, -13.7214, 9.50761, 0.92", "0.321604, -15.166, 9.77826, 0.92", "0.580308, -15.4152, 9.84771, 0.69", "1.72067, -16.2616, 10.2306, 0.69", "2.77704, -16.9471, 10.6147, 0.69", "2.79287, -16.9559, 10.6227, 0.69", "4.16915, -17.4846, 11.5396, 0.69", "5.16048, -17.7714, 12.2416, 0.46", "6.50844, -18.1467, 13.2797, 0.46", "6.52319, -18.1509, 13.2925, 0.46", "8.5922, -18.506, 15.1541, 0.46", "8.62797, -18.5104, 15.1887, 0.46", "15.4238, -25.026, 17.792, 0.46" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "27.3569, -13.3501, 0.303738, 0.92", "28.9416, -12.7225, 1.54718, 0.92", "31.0009, -12.0773, 2.82991, 0.92", "33.2041, -11.5784, 3.95771, 0.92", "35.1276, -11.1734, 4.82307, 0.92", "37.4212, -10.6779, 5.7698, 0.69", "39.318, -10.2334, 6.48436, 0.69", "41.811, -9.67391, 7.21369, 0.69", "43.9452, -9.27014, 7.7114, 0.69", "46.6847, -8.83935, 8.29039, 0.69", "49.7331, -8.37791, 8.93175, 0.69", "52.9566, -7.94066, 9.66418, 0.69", "56.8253, -7.47059, 10.5807, 0.69", "60.0075, -7.14818, 11.3355, 0.69", "61.8103, -7.00469, 11.7712, 0.69", "61.8396, -7.004, 11.7778, 0.69", "64.1703, -7.01411, 12.1914, 0.69", "64.1902, -7.01443, 12.1941, 0.69", "66.7418, -7.06431, 12.3922, 0.69", "66.7718, -7.06514, 12.3931, 0.69", "69.3639, -7.21106, 12.4002, 0.69", "72.0749, -7.52883, 12.52, 0.69", "72.0944, -7.53244, 12.5214, 0.69", "74.3998, -8.04293, 12.7201, 0.69", "76.5643, -8.71356, 12.9688, 0.69", "76.5916, -8.7245, 12.9736, 0.69", "78.1786, -9.77869, 13.5417, 0.69", "78.2324, -9.82536, 13.5749, 0.69", "87.9293, -9.76598, 16.0174, 0.69", "97.5255, -11.2107, 18.3839, 0.69" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "27.3569, -13.3501, 0.303738, 0.92", "27.9413, -15.0011, 2.19313, 0.92", "27.9924, -15.1453, 2.35819, 0.92" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "14.9958, -6.4365, 1.54352, 0.92", "13.6158, -7.225, 1.57352, 0.92" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "14.9958, -6.4365, 1.54352, 1.61", "16.7858, -7.50221, 2.03931, 1.61", "18.7503, -8.67188, 2.58347, 1.61" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "10.6811, 10.8907, 0.33, 1.15", "10.6516, 12.3087, 1.20645, 1.15", "10.654, 12.3336, 1.22091, 1.15", "10.9578, 14.0054, 2.12513, 1.15", "11.2814, 15.481, 2.90882, 1.15", "11.7118, 17.0418, 3.73575, 1.15", "12.2251, 18.7214, 4.62321, 1.15", "12.8903, 20.3538, 5.56962, 0.92", "13.2912, 21.1875, 6.10332, 0.92", "13.9375, 22.1995, 6.84111, 0.92", "14.8259, 23.3559, 7.75819, 0.92", "14.8432, 23.3735, 7.7743, 0.92", "16.4791, 24.7114, 9.43074, 0.92", "16.4954, 24.7245, 9.45189, 0.92", "17.1807, 25.1289, 10.4191, 0.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "10.6811, 10.8907, 0.33, 1.38", "12.8942, 12.0094, 0.542408, 1.38", "15.4728, 13.2221, 0.923091, 1.38", "17.971, 14.295, 1.32223, 1.38", "17.9894, 14.3019, 1.3251, 1.38", "20.4266, 15.1118, 1.6522, 1.38", "22.5429, 15.7322, 1.93181, 1.38", "25.0596, 16.2604, 2.31595, 1.38", "27.101, 16.5314, 2.65426, 1.38", "29.1507, 16.705, 2.94963, 1.38", "30.7103, 16.7805, 3.14908, 1.38", "32.7107, 16.7709, 3.3792, 1.38", "34.3857, 16.7081, 3.57727, 1.15", "36.444, 16.5859, 3.78512, 0.92", "38.7464, 16.3968, 4.01981, 0.92", "40.3149, 16.2573, 4.12973, 0.92", "42.9297, 15.9963, 4.2754, 0.92", "42.9595, 15.993, 4.27643, 0.92", "44.2232, 15.8582, 4.31064, 0.92", "46.4521, 15.6008, 4.33653, 0.92", "48.7364, 15.3216, 4.34533, 0.92", "50.3455, 15.1481, 4.33599, 0.92", "51.7167, 14.9953, 4.29004, 0.92", "53.5602, 14.7724, 4.18834, 0.92", "56.2226, 14.4308, 3.94835, 0.92", "58.0566, 14.1816, 3.75476, 0.92", "59.2441, 13.9954, 3.61495, 1.15", "61.6114, 13.5691, 3.23811, 1.15", "63.5828, 13.1659, 2.90831, 1.15", "65.0547, 12.8461, 2.70146, 1.15", "67.4795, 12.3067, 2.48389, 0.92", "67.7024, 12.2526, 2.48279, 0.92", "68.9728, 11.9146, 2.57359, 0.92", "70.0231, 11.5637, 2.76741, 0.92", "71.4864, 10.9252, 3.05629, 0.92", "73.3917, 9.84614, 3.3789, 0.92", "75.3412, 8.41532, 3.52197, 0.92", "76.0141, 7.84055, 3.53112, 0.92", "77.5537, 6.3349, 3.46497, 0.92", "78.8886, 4.87106, 3.37537, 0.92", "80.1129, 3.38513, 3.30489, 0.92", "81.3417, 1.82747, 3.24717, 0.92", "82.5635, 0.325131, 3.21033, 0.92", "83.6706, -1.00944, 3.22049, 0.92", "85.2102, -2.78178, 3.32918, 0.92", "86.5797, -4.30908, 3.54808, 0.69", "88.2459, -6.15622, 3.8882, 0.69", "89.5472, -7.56296, 4.23271, 0.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "28.1452, 29.0166, 0.0, 0.69", "38.48, 39.8882, 0.0, 0.69", "48.8147, 50.7599, 0.0, 0.69" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-27.5185, -11.1949, -14.3989, 0.69", "-29.4896, -12.3723, -14.3607, 0.69", "-30.8647, -13.1284, -14.3617, 0.69", "-32.7728, -14.074, -14.4049, 0.69", "-35.2754, -15.2203, -14.4724, 0.69", "-37.7289, -16.3123, -14.4859, 0.69", "-37.7743, -16.3321, -14.4853, 0.69", "-40.4952, -17.4374, -14.3961, 0.69", "-42.451, -18.2072, -14.3427, 0.69", "-44.7373, -19.0446, -14.434, 0.69", "-46.9089, -19.8416, -14.6844, 0.69", "-48.2891, -20.3616, -14.9796, 0.69", "-48.334, -20.3791, -14.9917, 0.69", "-50.4443, -21.1782, -15.7147, 0.69", "-53.0083, -22.1078, -16.7738, 0.69", "-55.5414, -22.9489, -17.9081, 0.69", "-57.608, -23.5946, -18.8292, 0.69", "-57.6346, -23.6034, -18.8396, 0.69", "-60.4591, -24.6223, -19.7297, 0.69", "-62.0862, -25.245, -20.1244, 0.69", "-64.0495, -26.0489, -20.4203, 0.69", "-65.7193, -26.7181, -20.5452, 0.69", "-68.9016, -27.9424, -20.5579, 0.69", "-71.5734, -28.9244, -20.4842, 0.69", "-71.5921, -28.9311, -20.483, 0.69", "-73.5323, -29.5464, -20.3324, 0.69", "-75.6319, -30.1084, -20.2027, 0.69", "-78.838, -30.7485, -20.1339, 0.69", "-81.6344, -31.0634, -20.2289, 0.69", "-81.6642, -31.0649, -20.2318, 0.69", "-83.508, -31.0777, -20.4965, 0.69", "-85.7026, -31.0286, -20.8956, 0.69", "-88.4376, -30.8899, -21.4329, 0.69", "-91.9127, -30.6316, -22.1188, 0.69", "-95.1877, -30.3793, -22.7329, 0.69", "-98.5007, -30.1493, -23.2758, 0.69", "-102.548, -29.8833, -23.8673, 0.46", "-106.06, -29.7112, -24.26, 0.46", "-106.289, -29.7076, -24.2814, 0.46", "-109.307, -29.7725, -24.5947, 0.46", "-112.504, -30.0214, -24.9879, 0.46", "-112.959, -30.0759, -25.0505, 0.46", "-115.288, -30.3961, -25.4517, 0.46", "-117.512, -30.8004, -25.9099, 0.46", "-119.35, -31.1571, -26.3385, 0.46", "-121.586, -31.6662, -26.9551, 0.46", "-123.645, -32.244, -27.5953, 0.46", "-126.726, -33.1837, -28.5738, 0.46", "-129.395, -34.1199, -29.4398, 0.46", "-129.412, -34.1273, -29.445, 0.46", "-131.546, -35.1681, -30.0742, 0.46", "-133.084, -35.9818, -30.604, 0.46", "-133.189, -36.0437, -30.6452, 0.46", "-134.909, -37.0985, -31.384, 0.46", "-135.029, -37.1667, -31.4382, 0.46", "-137.513, -38.4817, -32.8146, 0.46", "-139.208, -39.2853, -33.9258, 0.46", "-139.224, -39.2919, -33.9363, 0.46", "-140.726, -39.911, -35.0346, 0.46", "-140.741, -39.9165, -35.0471, 0.46", "-142.767, -40.7242, -37.0538, 0.46", "-142.826, -40.7534, -37.1538, 0.46" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-27.5185, -11.1949, -14.3989, 0.69", "-29.706, -10.0774, -14.7698, 0.69", "-31.1362, -9.38517, -15.0974, 0.69", "-33.1367, -8.41616, -15.812, 0.69", "-34.685, -7.66536, -16.4769, 0.69", "-37.7473, -6.36785, -17.86, 0.69", "-40.3869, -5.34484, -19.0877, 0.69", "-40.4736, -5.32196, -19.1313, 0.69", "-42.955, -4.89424, -20.5016, 0.69", "-42.9725, -4.89279, -20.5112, 0.69", "-45.424, -4.7426, -21.8108, 0.69", "-45.451, -4.74171, -21.8238, 0.69", "-48.0192, -4.64827, -22.9005, 0.69", "-49.2775, -4.60448, -23.4547, 0.69", "-51.1793, -4.54549, -24.3197, 0.69", "-53.3107, -4.41363, -25.4812, 0.69", "-53.5007, -4.38666, -25.6077, 0.69", "-55.6369, -3.87984, -27.2007, 0.69", "-57.0823, -3.33698, -28.3566, 0.69", "-58.6145, -2.51343, -29.5647, 0.69", "-60.3547, -1.22101, -30.8627, 0.69", "-61.9769, 0.298532, -31.8713, 0.69", "-63.6343, 2.06869, -32.6712, 0.69", "-65.2674, 4.05846, -33.2839, 0.69", "-67.0889, 6.37763, -33.8068, 0.69", "-68.9525, 8.65337, -34.1843, 0.69", "-71.0462, 11.0727, -34.472, 0.69", "-73.3343, 13.4675, -34.6957, 0.69", "-75.3399, 15.3963, -34.8684, 0.69", "-78.1156, 17.8226, -35.1248, 0.69", "-81.141, 20.2028, -35.4136, 0.69", "-81.8747, 20.6943, -35.4968, 0.69", "-84.4628, 22.2156, -35.8045, 0.69", "-84.489, 22.2289, -35.8082, 0.69", "-87.3011, 23.474, -36.2214, 0.69", "-87.3192, 23.4811, -36.2251, 0.69", "-90.1038, 24.4952, -36.7979, 0.69", "-90.1225, 24.5008, -36.8018, 0.69", "-92.017, 24.9503, -37.1989, 0.69", "-93.7613, 25.2985, -37.4224, 0.69", "-96.2957, 25.7795, -37.4805, 0.69", "-98.4329, 26.1859, -37.3796, 0.69", "-101.245, 26.6994, -37.049, 0.69", "-103.588, 27.1437, -36.7458, 0.69", "-107.013, 27.865, -36.2622, 0.46", "-110.058, 28.603, -35.8057, 0.46", "-112.899, 29.4465, -35.488, 0.46", "-116.21, 30.655, -35.3371, 0.46", "-119.804, 32.2015, -35.2794, 0.46", "-122.517, 33.527, -35.4726, 0.46", "-124.293, 34.4919, -35.806, 0.46", "-127.403, 36.312, -36.6159, 0.46", "-130.267, 38.2212, -37.5681, 0.46", "-130.282, 38.2324, -37.5746, 0.46", "-132.9, 40.3241, -38.9791, 0.46", "-133.087, 40.4691, -39.1008, 0.46" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-24.1437, 34.0803, 13.2002, 0.92", "-22.859, 33.279, 15.3798, 0.92", "-22.8494, 33.273, 15.3962, 0.92", "-21.8874, 32.6729, 17.0284, 0.92", "-21.8777, 32.6669, 17.0447, 0.92", "-20.7929, 31.9902, 18.8853, 0.92", "-19.7443, 31.3362, 20.6645, 0.92", "-16.1003, 28.0673, 29.3179, 0.92", "-13.9922, 26.2638, 38.9071, 0.92", "-13.5702, 23.5129, 48.4693, 0.92", "-13.7766, 18.528, 56.9795, 0.92", "-15.3474, 13.7063, 65.4514, 0.92", "-15.3024, 9.56185, 74.4495, 0.92", "-15.7732, 6.29203, 83.8267, 0.92", "-16.1001, 1.52765, 92.472, 0.92", "-14.5384, -2.85313, 101.207, 0.92", "-12.6183, -7.32491, 109.818, 0.92", "-11.015, -10.2192, 119.207, 0.92", "-10.4355, -11.8006, 129.05, 0.92", "-8.21596, -12.9408, 138.727, 0.92", "-5.19694, -14.0802, 148.184, 0.92", "-1.62135, -14.4213, 157.516, 0.92" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-24.1437, 34.0803, 13.2002, 0.92", "-24.0078, 36.0822, 13.8358, 0.92", "-23.9229, 38.0318, 14.3942, 0.92", "-23.9219, 40.0547, 14.8944, 0.92", "-24.0487, 42.2958, 15.3436, 0.92", "-24.2993, 44.4495, 15.7363, 0.92", "-24.6567, 46.974, 16.1708, 0.92", "-24.6624, 47.0017, 16.1753, 0.92", "-25.0859, 48.959, 16.4783, 0.92", "-25.6461, 51.7322, 16.9577, 0.92", "-26.0966, 54.1795, 17.4567, 0.92", "-26.5074, 56.8399, 18.1322, 0.69", "-26.511, 56.867, 18.141, 0.69", "-26.7347, 58.9243, 18.8753, 0.69", "-26.8089, 60.6235, 19.6227, 0.69", "-26.7272, 61.7711, 20.2878, 0.69", "-26.7237, 61.7865, 20.299, 0.69", "-28.3222, 70.5565, 23.795, 0.69", "-29.3719, 79.1983, 27.8136, 0.69", "-29.2691, 87.8323, 31.9838, 0.69", "-30.4952, 96.1461, 36.6647, 0.69", "-32.7922, 105.07, 39.2103, 0.69", "-34.7764, 113.568, 43.2181, 0.69", "-36.0353, 121.706, 48.2207, 0.69", "-38.248, 129.259, 53.8686, 0.69" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-7.77566, -19.2298, 7.13108, 0.92", "-9.07715, -20.3447, 7.7617, 0.92", "-10.3246, -21.4104, 8.4307, 0.92", "-11.3371, -22.2875, 9.00745, 0.92", "-12.7302, -23.5667, 9.73317, 0.92", "-13.8071, -24.6531, 10.26, 0.92", "-15.4687, -26.3781, 11.0211, 0.92", "-16.1517, -27.0695, 11.2734, 0.92", "-17.0089, -27.8564, 11.4846, 0.92", "-18.4655, -28.9973, 11.7601, 0.92", "-19.6768, -29.7181, 11.9356, 0.92", "-22.4363, -30.4149, 12.2716, 0.92", "-24.104, -30.1808, 12.348, 0.92", "-26.3711, -29.5984, 12.5733, 0.92", "-28.3718, -29.0733, 12.7648, 0.69", "-30.1399, -28.5778, 12.9553, 0.69", "-32.9957, -27.8151, 13.1309, 0.69", "-35.9532, -27.1437, 13.0272, 0.69", "-39.1522, -26.782, 12.5507, 0.69", "-41.8092, -26.7901, 11.8994, 0.46", "-41.8278, -26.7924, 11.8926, 0.46", "-43.8423, -27.3546, 10.8552, 0.46", "-46.0725, -28.4663, 8.90039, 0.46", "-46.9889, -29.2255, 7.4395, 0.46", "-56.8621, -30.6853, 7.04231, 0.46", "-66.7176, -31.0577, 5.39444, 0.46", "-76.6428, -32.2163, 5.34466, 0.46", "-86.5357, -33.5831, 5.59095, 0.46", "-96.5328, -33.4511, 5.78857, 0.46", "-106.513, -33.3131, 5.18341, 0.46", "-116.245, -32.3245, 3.13033, 0.46", "-125.895, -30.0731, 2.01046, 0.46", "-135.792, -29.1113, 0.991297, 0.46", "-145.66, -28.8021, -0.590121, 0.46" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-7.77566, -19.2298, 7.13108, 0.69", "-8.87739, -18.7494, 5.01009, 0.69", "-8.88641, -18.7454, 4.99273, 0.69", "-9.81735, -18.3395, 3.20056, 0.69", "-9.83088, -18.3336, 3.17451, 0.69", "-10.5061, -18.0392, 1.87459, 0.69", "-13.9564, -15.158, -7.00781, 0.69", "-17.3537, -12.9489, -16.1211, 0.69", "-19.9115, -10.5274, -25.4463, 0.69" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "15.4238, -25.026, 17.792, 0.46", "24.5968, -28.7539, 18.4696, 0.46", "34.2811, -31.1036, 18.1578, 0.46", "43.5422, -34.5894, 19.034, 0.46", "53.2733, -36.2911, 20.4821, 0.46", "62.9898, -37.5486, 22.4412, 0.46", "72.902, -38.7391, 22.8611, 0.46", "82.8901, -38.6565, 23.3414, 0.46", "92.8026, -38.5353, 22.0276, 0.46", "102.657, -37.8884, 20.4667, 0.46", "112.454, -38.1785, 18.4877, 0.46", "122.437, -38.1654, 17.9066, 0.46", "132.342, -38.2375, 19.2828, 0.46", "141.943, -39.898, 21.4634, 0.46" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "15.4238, -25.026, 17.792, 0.46", "21.1206, -31.1008, 22.955, 0.46", "24.8306, -38.8867, 27.3216, 0.46", "29.8549, -46.3032, 31.0378, 0.46", "35.8679, -52.561, 35.5601, 0.46", "42.5207, -59.2275, 38.1091, 0.46", "49.7794, -64.6362, 41.9689, 0.46", "56.6858, -69.3328, 47.2472, 0.46", "65.0122, -72.4474, 51.7107, 0.46", "73.7742, -73.9254, 56.2721, 0.46", "82.4588, -74.058, 61.2277, 0.46", "90.3631, -73.6355, 67.3371, 0.46", "97.6771, -71.8407, 73.8896, 0.46" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "27.9924, -15.1453, 2.35819, 0.69", "30.8594, -15.8795, 1.73582, 0.69", "33.2485, -16.4694, 1.18328, 0.69", "36.1823, -17.2414, 0.518147, 0.69", "38.3123, -17.8176, 0.0353521, 0.69", "41.3892, -18.7101, -0.639138, 0.69", "44.0551, -19.5112, -1.24034, 0.69", "46.9427, -20.3146, -1.86123, 0.69", "49.5151, -20.9266, -2.40467, 0.69", "49.6214, -20.9447, -2.42587, 0.69", "52.9968, -21.2585, -3.0572, 0.69", "55.6132, -21.2751, -3.57609, 0.69", "59.4554, -21.0188, -4.37158, 0.69", "62.8569, -20.5686, -5.15433, 0.69", "66.1577, -20.0151, -6.01151, 0.69", "69.4111, -19.4215, -6.91993, 0.69", "72.4684, -18.8034, -7.86325, 0.69", "72.5337, -18.7902, -7.8842, 0.69", "76.1399, -18.1508, -9.15821, 0.69", "80.1465, -17.5525, -10.6327, 0.69", "83.4886, -17.1997, -11.9426, 0.69", "86.5617, -16.961, -13.1566, 0.69", "88.4167, -16.8874, -13.8735, 0.69", "91.7965, -16.8595, -15.1783, 0.69", "91.8152, -16.8599, -15.1855, 0.69", "95.509, -17.0623, -16.6373, 0.69", "99.2682, -17.4451, -18.0419, 0.46", "102.762, -18.0108, -19.3193, 0.46", "105.125, -18.4984, -20.1806, 0.46", "105.171, -18.5089, -20.1966, 0.46", "108.486, -19.3032, -21.3066, 0.46", "111.551, -20.135, -22.2436, 0.46", "114.788, -21.0898, -23.2633, 0.23", "114.897, -21.1232, -23.2975, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "27.9924, -15.1453, 2.35819, 0.69", "26.9107, -15.8961, 0.651016, 0.69", "24.8107, -17.3536, -2.66331, 0.69", "23.8271, -18.0363, -4.21578, 0.69", "23.7872, -18.064, -4.27872, 0.69", "22.507, -18.9526, -6.2992, 0.69", "22.3914, -19.0328, -6.48167, 0.69" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "13.6158, -7.225, 1.57352, 0.69", "13.8387, -8.13316, 3.16966, 0.69", "14.2697, -9.17543, 5.09526, 0.69", "15.2393, -10.5072, 7.59685, 0.69", "15.2623, -10.53, 7.63425, 0.69", "16.5722, -11.5885, 9.3085, 0.69", "17.2123, -12.0671, 10.0516, 0.69", "18.6251, -12.9652, 11.4637, 0.69", "20.3215, -13.9215, 12.8998, 0.69", "22.3407, -14.8942, 14.3668, 0.46", "24.6713, -15.9461, 15.9627, 0.46", "24.6954, -15.9557, 15.9774, 0.46", "26.938, -16.8922, 17.48, 0.46", "34.4475, -20.6676, 22.7538, 0.46", "42.8379, -23.2321, 27.4776, 0.46", "51.5497, -25.8756, 31.5225, 0.46", "61.0316, -27.5391, 34.1733, 0.46", "70.6209, -29.619, 35.9766, 0.46", "79.8262, -32.8468, 37.9049, 0.46", "88.9077, -36.6517, 39.1236, 0.46", "97.9944, -40.3263, 40.6954, 0.46", "107.419, -42.6439, 42.9819, 0.46", "116.315, -46.4646, 45.1459, 0.46", "125.479, -49.6485, 47.3361, 0.46", "134.485, -52.1519, 50.7929, 0.46" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "13.6158, -7.225, 1.57352, 0.92", "12.1598, -8.53714, 4.09019, 0.92", "11.6711, -8.97758, 4.93494, 0.92", "11.1496, -9.44749, 5.83623, 0.69", "10.8918, -9.67984, 6.28188, 0.69", "10.0467, -10.4414, 7.74258, 0.69", "10.0376, -10.4496, 7.75822, 0.69", "5.53257, -14.3503, 15.6857, 0.69" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "18.7503, -8.67188, 2.58347, 0.92", "20.9547, -9.08253, 3.02882, 0.92", "24.0474, -9.74619, 3.6122, 0.92", "25.4839, -10.0866, 3.88134, 0.92", "27.2114, -10.537, 4.18249, 0.92", "28.9396, -11.0038, 4.52578, 0.92", "30.9473, -11.5426, 5.00139, 0.92", "31.2132, -11.6258, 5.07694, 0.92", "33.227, -12.3201, 5.70263, 0.92", "35.2032, -13.0392, 6.41322, 0.92", "37.1373, -13.7385, 7.11747, 0.92", "38.6892, -14.2995, 7.59984, 0.92", "40.5958, -15.004, 8.06832, 0.92", "40.6232, -15.0141, 8.07448, 0.92", "42.5911, -15.7717, 8.42834, 0.92", "44.8603, -16.6748, 8.66699, 0.92", "46.9315, -17.5447, 8.56881, 0.92", "48.2801, -18.1177, 8.32767, 0.92" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "18.7503, -8.67188, 2.58347, 1.38", "19.0307, -10.4031, 1.78312, 1.38", "19.3251, -12.2378, 0.94181, 1.15", "19.5456, -13.8863, 0.216555, 1.15", "19.727, -15.305, -0.351262, 0.92", "19.9326, -17.0393, -1.00664, 0.92", "20.098, -18.7827, -1.64543, 1.15", "20.1643, -19.6277, -1.92974, 1.15", "20.3152, -21.8131, -2.58193, 1.15", "20.4465, -23.7043, -3.10271, 1.15", "20.5422, -25.3827, -3.53612, 1.15", "20.6469, -27.6918, -4.13356, 1.15", "20.7563, -29.8301, -4.64841, 0.92", "20.8313, -31.3539, -4.98934, 0.92", "20.9004, -33.0451, -5.36419, 0.92", "20.9089, -34.7171, -5.729, 0.92", "20.9083, -34.7357, -5.73287, 0.92", "20.7832, -36.0623, -6.01441, 1.15", "20.4711, -37.9421, -6.29743, 1.15", "20.0614, -39.7195, -6.52097, 0.92", "19.7191, -40.9431, -6.67101, 0.92", "19.008, -43.4232, -7.06518, 0.92", "18.3848, -45.522, -7.4075, 0.92", "17.5553, -48.1486, -7.85816, 0.92", "16.9126, -50.0903, -8.20067, 0.92", "16.2481, -52.0666, -8.52734, 1.15", "15.3512, -54.8514, -9.04598, 1.15" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "17.1807, 25.1289, 10.4191, 0.92", "17.5127, 23.0115, 12.4205, 0.92", "17.8095, 21.1188, 14.2095, 0.69", "18.0857, 19.3568, 15.875, 0.69", "18.4173, 17.2423, 17.8738, 0.69", "18.4483, 17.0444, 18.0608, 0.69", "18.9029, 10.7619, 25.548, 0.69", "20.0539, 4.44418, 32.927, 0.69", "20.4905, -2.05162, 40.2109, 0.69", "19.2076, -8.30636, 47.6275, 0.69", "18.434, -15.5247, 54.0827, 0.69", "18.1038, -22.1213, 61.2711, 0.69", "18.623, -28.4761, 68.6862, 0.69", "19.6688, -35.2053, 75.6671, 0.69", "19.7615, -40.8065, 83.7435, 0.69", "18.394, -46.5423, 91.5969, 0.69", "17.7763, -52.2961, 99.5301, 0.69", "16.7356, -57.8561, 107.572, 0.69", "17.0219, -64.4555, 114.759, 0.69", "19.1597, -69.468, 122.98, 0.69" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "17.1807, 25.1289, 10.4191, 0.92", "17.6361, 26.872, 11.9587, 0.92", "18.1221, 28.7322, 13.6017, 0.69", "18.6908, 30.9088, 15.5242, 0.69", "19.0629, 32.3329, 16.782, 0.69", "19.4784, 33.9231, 18.1865, 0.69", "20.4111, 41.6579, 23.9172, 0.69", "21.984, 48.1285, 31.068, 0.69", "24.6067, 54.4932, 38.0133, 0.69", "27.3928, 60.6442, 45.1065, 0.69", "30.127, 65.447, 53.2898, 0.69", "31.2619, 71.276, 61.1041, 0.69", "31.314, 77.9375, 68.2335, 0.69", "30.2178, 83.3362, 76.3885, 0.69", "29.7928, 88.0393, 85.0666, 0.69", "28.5999, 92.4999, 93.8148, 0.69", "27.4909, 96.5837, 102.775, 0.69", "25.8166, 101.727, 111.015, 0.69" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "89.5472, -7.56296, 4.23271, 0.69", "91.1715, -8.6614, 4.81688, 0.69", "92.7933, -9.76756, 5.48832, 0.69", "94.2831, -10.7989, 6.14916, 0.69", "95.8264, -11.8449, 6.87796, 0.69", "97.4116, -12.907, 7.64876, 0.69", "97.4269, -12.9169, 7.65642, 0.69", "98.8322, -13.8014, 8.48956, 0.69", "98.9998, -13.9174, 8.59361, 0.69", "100.441, -15.1053, 9.73182, 0.69", "100.458, -15.1225, 9.74772, 0.69", "101.599, -16.3931, 10.785, 0.69", "102.756, -17.6814, 11.8397, 0.69", "103.508, -18.5136, 12.5231, 0.46", "104.652, -19.8846, 13.6317, 0.46", "111.633, -25.0111, 18.3371, 0.46", "117.342, -30.6521, 24.0069, 0.46", "122.996, -36.1175, 29.9177, 0.46", "128.612, -39.7999, 37.2272, 0.46" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "89.5472, -7.56296, 4.23271, 0.92", "91.7244, -8.24228, 3.65935, 0.92", "93.5927, -8.80945, 3.13598, 0.92", "96.7071, -9.79175, 2.20946, 0.92", "98.9935, -10.5258, 1.50913, 0.69", "100.602, -11.0635, 0.985442, 0.69", "100.629, -11.0728, 0.976593, 0.69", "102.505, -11.7912, 0.300088, 0.69", "104.703, -12.5646, -0.523398, 0.69", "104.721, -12.5707, -0.530283, 0.69", "106.398, -13.133, -1.14908, 0.69", "108.381, -13.8216, -1.91108, 0.69", "111.043, -14.7589, -2.93601, 0.69", "113.639, -15.6376, -3.94253, 0.69", "115.631, -16.31, -4.70382, 0.69", "115.833, -16.3834, -4.78104, 0.69", "117.702, -17.0561, -5.39862, 0.69", "119.189, -17.5999, -5.84915, 0.69", "121.442, -18.4118, -6.31859, 0.69", "124.944, -19.6513, -6.69725, 0.69", "127.82, -20.6111, -6.81308, 0.69", "131.198, -21.753, -6.7832, 0.69", "131.217, -21.7593, -6.78254, 0.69", "134.924, -23.0636, -6.60749, 0.69", "137.292, -23.9401, -6.4914, 0.69", "137.311, -23.9469, -6.49059, 0.69", "139.964, -25.0064, -6.53882, 0.69", "141.892, -26.0022, -6.91646, 0.69", "141.908, -26.0123, -6.92205, 0.69", "143.469, -27.2423, -7.81716, 0.69", "143.489, -27.2597, -7.83044, 0.69", "144.866, -28.5404, -8.77838, 0.69", "146.304, -29.9156, -9.78082, 0.69", "147.627, -31.1802, -10.6139, 0.69", "147.646, -31.1991, -10.6257, 0.69", "149.433, -32.9701, -11.6829, 0.69", "149.445, -32.9831, -11.6905, 0.69", "151.781, -35.4456, -13.1561, 0.69", "153.413, -37.2131, -14.1872, 0.69", "155.297, -39.2776, -15.4187, 0.69", "156.906, -41.1072, -16.4871, 0.69", "158.666, -43.1844, -17.6752, 0.69", "160.251, -45.1022, -18.7843, 0.69", "161.858, -47.1453, -19.9796, 0.69", "162.797, -48.3477, -20.728, 0.69", "164.295, -50.1964, -21.9517, 0.69", "164.306, -50.2097, -21.9609, 0.69", "165.916, -52.0659, -23.2893, 0.69", "167.199, -53.5088, -24.3199, 0.69", "168.464, -54.825, -25.2512, 0.69", "170.037, -56.3408, -26.2728, 0.69", "170.05, -56.3523, -26.2814, 0.69", "172.097, -58.0351, -27.5684, 0.69", "172.111, -58.0455, -27.5777, 0.69", "173.97, -59.366, -28.7982, 0.69", "176.082, -60.8208, -30.1978, 0.46", "178.022, -62.1219, -31.573, 0.46", "178.036, -62.1311, -31.5835, 0.46", "180.186, -63.4312, -33.4096, 0.46" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-19.9115, -10.5274, -25.4463, 0.69", "-18.0016, -9.67025, -35.2207, 0.69", "-17.1057, -8.7671, -45.135, 0.69", "-17.8043, -9.35832, -55.0911, 0.69", "-17.8656, -8.85099, -65.0767, 0.69", "-19.9089, -8.47062, -74.8575, 0.69", "-22.2391, -9.5718, -84.5129, 0.69", "-24.3505, -10.2795, -94.259, 0.69", "-24.8525, -10.9965, -104.218, 0.69", "-25.2687, -11.2732, -114.205, 0.69", "-24.5058, -12.8916, -124.029, 0.69", "-25.0098, -14.4148, -133.887, 0.69" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-19.9115, -10.5274, -25.4463, 0.69", "-24.9173, -7.72946, -33.5868, 0.69", "-30.1417, -5.87494, -41.8871, 0.69", "-35.4646, -2.46683, -49.555, 0.69", "-40.09, 1.84561, -57.1707, 0.69", "-45.482, 7.12434, -63.4993, 0.69", "-51.4487, 12.1376, -69.5451, 0.69", "-57.7161, 16.0776, -76.1419, 0.69", "-62.8897, 21.2579, -82.7374, 0.69", "-68.3893, 25.2511, -89.9545, 0.69", "-72.6759, 28.4187, -98.3513, 0.69", "-76.3071, 30.0341, -107.512, 0.69" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "48.2801, -18.1177, 8.32767, 0.92", "49.7774, -19.4649, 8.84541, 0.92", "52.1589, -21.4999, 9.44894, 0.92", "54.1233, -23.2204, 9.82969, 0.92", "56.0796, -24.9184, 10.1405, 0.69", "57.4351, -26.0743, 10.3171, 0.69", "58.7249, -27.198, 10.442, 0.69", "60.1288, -28.3687, 10.4284, 0.46", "61.7223, -29.7988, 10.143, 0.46", "62.1857, -30.261, 9.98616, 0.46", "63.2094, -31.3639, 9.4983, 0.46", "63.9066, -32.2627, 9.07596, 0.46", "63.963, -32.3545, 9.03252, 0.46", "64.9403, -34.2435, 7.84314, 0.46", "64.9923, -34.3827, 7.71728, 0.46", "71.5199, -41.3797, 5.94454, 0.46", "77.8472, -48.7298, 6.27002, 0.46", "83.6178, -56.4562, 5.52556, 0.46", "90.2523, -63.4833, 6.65135, 0.46", "96.6734, -70.7492, 6.12855, 0.46", "101.186, -79.0782, 4.46385, 0.46", "106.827, -86.9026, 3.87625, 0.46", "112.289, -94.649, 1.96071, 0.46" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "48.2801, -18.1177, 8.32767, 0.92", "50.1798, -17.2374, 8.97342, 0.92", "52.5164, -16.2129, 9.59059, 0.92", "52.5432, -16.2013, 9.59609, 0.92", "55.1007, -15.1049, 10.2791, 0.92", "57.2229, -14.1828, 11.0644, 0.92", "59.1355, -13.3518, 11.7721, 0.69", "60.8686, -12.5727, 12.3974, 0.69", "63.0471, -11.5521, 13.2416, 0.69", "65.6231, -10.3898, 14.32, 0.69", "67.9459, -9.45283, 15.5206, 0.69", "75.6376, -3.56121, 17.0623, 0.69", "83.1295, 1.75295, 20.6092, 0.69", "90.6733, 6.79346, 24.4744, 0.69" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "15.3512, -54.8514, -9.04598, 0.69", "14.8529, -56.19, -9.16267, 0.69", "14.4896, -57.2274, -9.4493, 0.69", "14.1239, -58.2956, -9.81816, 0.69", "13.6116, -59.7623, -10.407, 0.92", "13.203, -60.9646, -10.9328, 0.92", "12.4992, -63.0486, -11.8436, 0.92", "11.781, -65.3599, -12.902, 0.92", "11.7767, -65.3768, -12.91, 0.92", "11.2997, -67.3818, -13.9534, 0.92", "10.9311, -68.9747, -14.8315, 0.92", "10.7238, -70.001, -15.4132, 0.92", "10.5866, -70.9477, -15.9496, 0.92", "10.4303, -72.2477, -16.6691, 0.69", "10.2497, -75.3392, -18.4004, 0.69", "10.2498, -75.3559, -18.41, 0.69", "10.3326, -77.9045, -19.9525, 0.69", "10.4337, -79.9272, -21.2378, 0.69", "10.4346, -79.9434, -21.2483, 0.69", "10.5526, -81.7464, -22.3877, 0.69", "10.5565, -81.771, -22.4023, 0.69", "11.0308, -84.4222, -23.9359, 0.69" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "15.3512, -54.8514, -9.04598, 0.69", "16.4962, -54.7819, -10.794, 0.69", "17.5941, -54.685, -12.2608, 0.69", "20.0633, -54.4362, -15.3713, 0.69", "20.0768, -54.4352, -15.3859, 0.69", "22.5457, -54.3656, -17.6964, 0.69", "22.5607, -54.3655, -17.7096, 0.69", "23.7635, -54.2912, -18.825, 0.69", "23.8015, -54.2881, -18.8574, 0.69", "25.8496, -54.3016, -20.1333, 0.69", "28.3812, -54.3921, -21.5738, 0.69", "28.3994, -54.394, -21.5819, 0.69" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "11.0308, -84.4222, -23.9359, 0.69", "10.9257, -86.4978, -24.2551, 0.69", "10.7819, -89.3016, -24.7056, 0.69", "10.7798, -89.3486, -24.7127, 0.69", "10.7077, -92.0779, -25.1042, 0.69", "10.706, -92.1719, -25.1181, 0.69", "10.7452, -95.1532, -25.554, 0.69", "10.953, -98.2254, -26.0465, 0.69", "11.2389, -101.182, -26.5441, 0.69", "11.5034, -103.372, -26.9424, 0.69", "11.554, -103.714, -27.0105, 0.69", "11.9483, -105.949, -27.4898, 0.69", "12.5396, -108.357, -28.0492, 0.69", "12.5986, -108.553, -28.0953, 0.69", "13.2856, -110.626, -28.5803, 0.69", "13.318, -110.723, -28.6019, 0.69", "13.8198, -112.307, -28.9242, 0.69", "14.7491, -115.423, -29.5071, 0.69", "14.7574, -115.451, -29.5114, 0.69", "15.2556, -117.399, -29.7772, 0.69", "15.268, -117.454, -29.7841, 0.69", "15.5259, -119.462, -30.0482, 0.69", "15.5158, -121.72, -30.451, 0.69", "15.5123, -121.748, -30.4571, 0.69", "14.9147, -125.495, -31.3066, 0.69", "14.9006, -125.559, -31.322, 0.69", "13.9808, -128.986, -32.1753, 0.69", "13.1708, -131.152, -32.7601, 0.69", "13.1586, -131.177, -32.7681, 0.69" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "11.0308, -84.4222, -23.9359, 0.69", "12.0486, -85.9056, -26.1183, 0.69", "12.8887, -87.1119, -28.1744, 0.69", "13.7818, -88.3386, -30.5413, 0.69", "14.7399, -89.6277, -33.1702, 0.69", "14.7489, -89.6394, -33.1961, 0.69", "15.6207, -90.754, -35.7958, 0.69", "16.307, -91.6098, -38.2582, 0.69", "17.0544, -92.4154, -40.9853, 0.69", "17.0662, -92.4268, -41.0324, 0.69", "17.6581, -92.9182, -43.4466, 0.69", "17.6871, -92.9373, -43.5613, 0.69", "18.4482, -93.2258, -46.1352, 0.69", "18.4866, -93.2336, -46.2486, 0.69", "20.2868, -93.3306, -50.7139, 0.69", "20.295, -93.3306, -50.7321, 0.69", "22.3077, -93.1969, -54.2799, 0.69", "23.9342, -93.025, -56.4818, 0.69", "23.9743, -93.0195, -56.526, 0.69", "26.3136, -92.6831, -58.7227, 0.69", "26.3369, -92.6796, -58.7412, 0.69", "29.7881, -92.169, -61.3175, 0.69", "32.9641, -91.7279, -63.4127, 0.69", "33.1063, -91.7096, -63.5039, 0.69", "35.9741, -91.3525, -65.3128, 0.69", "38.5024, -91.062, -66.8533, 0.69" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_44", "dend_39", "dend_35", "dend_34", "dend_25", "dend_20", "dend_7", "dend_0", "dend_49", "dend_48", "dend_46", "dend_45", "dend_43", "dend_40", "dend_38", "dend_37", "dend_36", "dend_29", "dend_26", "dend_24", "dend_21", "dend_17", "dend_8", "dend_4", "dend_1", "dend_51", "dend_50", "dend_42", "dend_41", "dend_33", "dend_30", "dend_28", "dend_27", "dend_23", "dend_22", "dend_19", "dend_18", "dend_14", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_32", "dend_31", "dend_16", "dend_15", "dend_11", "dend_10", "dend_13", "dend_12" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_44", "dend_39", "dend_35", "dend_34", "dend_25", "dend_20", "dend_7", "dend_0", "dend_49", "dend_48", "dend_46", "dend_45", "dend_43", "dend_40", "dend_38", "dend_37", "dend_36", "dend_29", "dend_26", "dend_24", "dend_21", "dend_17", "dend_8", "dend_4", "dend_1", "dend_51", "dend_50", "dend_42", "dend_41", "dend_33", "dend_30", "dend_28", "dend_27", "dend_23", "dend_22", "dend_19", "dend_18", "dend_14", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_32", "dend_31", "dend_16", "dend_15", "dend_11", "dend_10", "dend_13", "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_17", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L4_SBC_20e5caa0d2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_35
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_7
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_8
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_44, dend_39, dend_35, dend_34, dend_25, dend_20, dend_7, dend_0, dend_49, dend_48, dend_46, dend_45, dend_43, dend_40, dend_38, dend_37, dend_36, dend_29, dend_26, dend_24, dend_21, dend_17, dend_8, dend_4, dend_1, dend_51, dend_50, dend_42, dend_41, dend_33, dend_30, dend_28, dend_27, dend_23, dend_22, dend_19, dend_18, dend_14, dend_9, dend_6, dend_5, dend_3, dend_2, dend_32, dend_31, dend_16, dend_15, dend_11, dend_10, dend_13, dend_12]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_44, dend_39, dend_35, dend_34, dend_25, dend_20, dend_7, dend_0, dend_49, dend_48, dend_46, dend_45, dend_43, dend_40, dend_38, dend_37, dend_36, dend_29, dend_26, dend_24, dend_21, dend_17, dend_8, dend_4, dend_1, dend_51, dend_50, dend_42, dend_41, dend_33, dend_30, dend_28, dend_27, dend_23, dend_22, dend_19, dend_18, dend_14, dend_9, dend_6, dend_5, dend_3, dend_2, dend_32, dend_31, dend_16, dend_15, dend_11, dend_10, dend_13, dend_12]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_19
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_17, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.4999999662092944)
    connect dend_44(0), soma_0(0.4999999662092944)
    connect dend_39(0), soma_0(0.4999999662092944)
    connect dend_35(0), soma_0(0.4999999662092944)
    connect dend_34(0), soma_0(0.4999999662092944)
    connect dend_25(0), soma_0(0.4999999662092944)
    connect dend_20(0), soma_0(0.4999999662092944)
    connect dend_7(0), soma_0(0.4999999662092944)
    connect dend_0(0), soma_0(0.4999999662092944)
    connect axon_0(0), soma_0(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_35(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.57209, -7.50427, 0.0, 2.40936 ) }
    soma_0 { pt3dadd( -5.8697, -6.76539, 0.0, 3.96907 ) }
    soma_0 { pt3dadd( -5.16731, -6.02651, 0.0, 5.71299 ) }
    soma_0 { pt3dadd( -4.46492, -5.28764, 0.0, 7.09842 ) }
    soma_0 { pt3dadd( -3.76253, -4.54876, 0.0, 8.10373 ) }
    soma_0 { pt3dadd( -3.06015, -3.80988, 0.0, 8.84513 ) }
    soma_0 { pt3dadd( -2.35776, -3.07101, 0.0, 9.76993 ) }
    soma_0 { pt3dadd( -1.65537, -2.33213, 0.0, 10.5861 ) }
    soma_0 { pt3dadd( -0.952982, -1.59325, 0.0, 11.176 ) }
    soma_0 { pt3dadd( -0.250594, -0.854376, 0.0, 11.6742 ) }
    soma_0 { pt3dadd( 0.451794, -0.1155, 0.0, 12.1309 ) }
    soma_0 { pt3dadd( 1.15418, 0.623377, 0.0, 12.3879 ) }
    soma_0 { pt3dadd( 1.85657, 1.36225, 0.0, 12.501 ) }
    soma_0 { pt3dadd( 2.55896, 2.10113, 0.0, 12.1055 ) }
    soma_0 { pt3dadd( 3.26135, 2.84001, 0.0, 11.272 ) }
    soma_0 { pt3dadd( 3.96373, 3.57888, 0.0, 10.0688 ) }
    soma_0 { pt3dadd( 4.66612, 4.31776, 0.0, 8.58257 ) }
    soma_0 { pt3dadd( 5.36851, 5.05664, 0.0, 6.42241 ) }
    soma_0 { pt3dadd( 6.0709, 5.79551, 0.0, 4.86617 ) }
    soma_0 { pt3dadd( 6.77329, 6.53439, 0.0, 3.54478 ) }
    soma_0 { pt3dadd( 7.47568, 7.27327, 0.0, 2.03369 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -5.7794, -7.58643, 0.95, 0.92 ) }
    dend_47 { pt3dadd( -5.7794, -7.58643, 0.95, 0.92 ) }
    dend_47 { pt3dadd( -7.25858, -8.35082, -0.713697, 0.92 ) }
    dend_47 { pt3dadd( -8.3428, -8.88779, -1.92596, 0.92 ) }
    dend_47 { pt3dadd( -9.20764, -9.26843, -2.76716, 0.92 ) }
    dend_47 { pt3dadd( -10.5599, -9.81869, -3.99673, 0.92 ) }
    dend_47 { pt3dadd( -13.1302, -10.7426, -6.15495, 0.92 ) }
    dend_47 { pt3dadd( -14.8587, -11.2829, -7.4398, 0.92 ) }
    dend_47 { pt3dadd( -14.8748, -11.2873, -7.45076, 0.92 ) }
    dend_47 { pt3dadd( -17.3738, -11.8564, -9.08789, 0.92 ) }
    dend_47 { pt3dadd( -17.6168, -11.9027, -9.23846, 0.92 ) }
    dend_47 { pt3dadd( -19.6398, -12.245, -10.2401, 0.92 ) }
    dend_47 { pt3dadd( -20.5121, -12.3498, -10.4426, 0.92 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 34/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 6.3106, 8.60157, -5.68, 1.15 ) }
    dend_44 { pt3dadd( 6.3106, 8.60157, -5.68, 1.15 ) }
    dend_44 { pt3dadd( 5.37142, 9.26759, -7.41685, 1.15 ) }
    dend_44 { pt3dadd( 3.60882, 10.1013, -9.90797, 1.15 ) }
    dend_44 { pt3dadd( 1.5546, 10.9097, -12.5146, 1.15 ) }
    dend_44 { pt3dadd( 1.53525, 10.9163, -12.5365, 1.15 ) }
    dend_44 { pt3dadd( -0.294739, 11.4069, -14.3817, 1.15 ) }
    dend_44 { pt3dadd( -2.01346, 11.7138, -15.8136, 1.15 ) }
    dend_44 { pt3dadd( -3.97482, 12.0216, -17.194, 1.15 ) }
    dend_44 { pt3dadd( -3.99964, 12.0251, -17.2104, 1.15 ) }
    dend_44 { pt3dadd( -5.14376, 12.1511, -18.0069, 1.15 ) }
    dend_44 { pt3dadd( -7.1747, 12.2485, -19.4997, 0.92 ) }
    dend_44 { pt3dadd( -9.24443, 12.1799, -21.1882, 0.92 ) }
    dend_44 { pt3dadd( -11.4197, 11.928, -23.1255, 0.92 ) }
    dend_44 { pt3dadd( -13.2097, 11.5945, -24.8065, 0.92 ) }
    dend_44 { pt3dadd( -14.8506, 11.1637, -26.3764, 0.92 ) }
    dend_44 { pt3dadd( -16.4264, 10.5781, -28.0141, 0.92 ) }
    dend_44 { pt3dadd( -18.1273, 9.68413, -29.9894, 0.92 ) }
    dend_44 { pt3dadd( -19.3086, 8.74395, -31.5205, 0.92 ) }
    dend_44 { pt3dadd( -20.3084, 7.55229, -32.9569, 0.92 ) }
    dend_44 { pt3dadd( -20.6761, 6.91425, -33.561, 0.69 ) }
    dend_44 { pt3dadd( -21.1293, 5.83505, -34.514, 0.69 ) }
    dend_44 { pt3dadd( -21.5416, 4.58279, -35.6002, 0.92 ) }
    dend_44 { pt3dadd( -21.948, 3.31022, -36.6687, 0.92 ) }
    dend_44 { pt3dadd( -22.5826, 1.7312, -38.1263, 0.92 ) }
    dend_44 { pt3dadd( -23.5109, -0.297174, -40.0921, 0.92 ) }
    dend_44 { pt3dadd( -24.5027, -2.25907, -42.0408, 0.92 ) }
    dend_44 { pt3dadd( -25.4948, -4.03567, -43.829, 0.92 ) }
    dend_44 { pt3dadd( -26.8655, -6.29002, -46.1109, 0.92 ) }
    dend_44 { pt3dadd( -28.3605, -8.61868, -48.4198, 0.92 ) }
    dend_44 { pt3dadd( -29.6349, -10.5421, -50.4031, 0.92 ) }
    dend_44 { pt3dadd( -31.1505, -12.8957, -52.7933, 0.92 ) }
    dend_44 { pt3dadd( -31.1704, -12.9288, -52.8233, 0.92 ) }
    dend_44 { pt3dadd( -32.4105, -15.1845, -54.621, 0.92 ) }
    dend_44 { pt3dadd( -33.742, -17.7717, -56.3991, 0.92 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 69/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -0.309399, 7.08157, -3.42, 1.15 ) }
    dend_39 { pt3dadd( -0.309399, 7.08157, -3.42, 1.15 ) }
    dend_39 { pt3dadd( -1.81462, 8.27834, -4.43721, 1.15 ) }
    dend_39 { pt3dadd( -3.35863, 9.50595, -5.48063, 1.15 ) }
    dend_39 { pt3dadd( -4.28425, 10.2419, -6.10615, 1.15 ) }
    dend_39 { pt3dadd( -5.20747, 10.9759, -6.73005, 1.15 ) }
    dend_39 { pt3dadd( -6.31582, 11.8572, -7.47906, 1.15 ) }
    dend_39 { pt3dadd( -7.48771, 12.8371, -8.19936, 1.38 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 77/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -7.2094, -6.57943, 2.8, 0.92 ) }
    dend_35 { pt3dadd( -7.2094, -6.57943, 2.8, 0.92 ) }
    dend_35 { pt3dadd( -8.7881, -7.69001, 2.01154, 0.92 ) }
    dend_35 { pt3dadd( -10.1079, -8.63056, 1.4138, 0.92 ) }
    dend_35 { pt3dadd( -11.7216, -9.82312, 0.709512, 0.92 ) }
    dend_35 { pt3dadd( -13.5147, -11.1722, -0.0324195, 0.92 ) }
    dend_35 { pt3dadd( -14.4598, -11.9182, -0.44476, 0.92 ) }
    dend_35 { pt3dadd( -14.4742, -11.9302, -0.450541, 0.92 ) }
    dend_35 { pt3dadd( -16.0799, -13.3168, -0.992271, 0.92 ) }
    dend_35 { pt3dadd( -17.1872, -14.3108, -1.38542, 0.92 ) }
    dend_35 { pt3dadd( -18.1703, -15.2482, -1.77386, 0.92 ) }
    dend_35 { pt3dadd( -19.8299, -16.909, -2.53069, 0.92 ) }
    dend_35 { pt3dadd( -20.861, -18.0089, -2.99811, 0.92 ) }
    dend_35 { pt3dadd( -21.7508, -19.0155, -3.38234, 0.92 ) }
    dend_35 { pt3dadd( -22.6048, -20.0319, -3.69647, 0.92 ) }
    dend_35 { pt3dadd( -23.3666, -20.942, -3.88583, 0.92 ) }
    dend_35 { pt3dadd( -24.8481, -22.6274, -4.02013, 0.92 ) }
    dend_35 { pt3dadd( -26.297, -24.1035, -3.86657, 0.92 ) }
    dend_35 { pt3dadd( -27.7047, -25.4146, -3.54251, 0.92 ) }
    dend_35 { pt3dadd( -28.9705, -26.4641, -3.14396, 0.92 ) }
    dend_35 { pt3dadd( -30.4007, -27.4826, -2.55097, 0.92 ) }
    dend_35 { pt3dadd( -31.986, -28.4294, -1.9116, 0.92 ) }
    dend_35 { pt3dadd( -33.6391, -29.2409, -1.28279, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_35 { pt3dadd( -35.1177, -29.8097, -0.825542, 0.92 ) }
    dend_35 { pt3dadd( -36.9589, -30.4561, -0.340059, 0.92 ) }
    dend_35 { pt3dadd( -38.635, -31.0473, 0.0373734, 0.92 ) }
    dend_35 { pt3dadd( -40.8971, -31.8509, 0.520933, 0.69 ) }
    dend_35 { pt3dadd( -43.3696, -32.7717, 1.04308, 0.92 ) }
    dend_35 { pt3dadd( -46.0647, -33.7644, 1.6226, 0.92 ) }
    dend_35 { pt3dadd( -48.5314, -34.648, 2.17468, 0.92 ) }
    dend_35 { pt3dadd( -50.2544, -35.2648, 2.58339, 0.92 ) }
    dend_35 { pt3dadd( -52.5493, -36.1093, 3.10493, 0.92 ) }
    dend_35 { pt3dadd( -54.7462, -36.9278, 3.65251, 0.92 ) }
    dend_35 { pt3dadd( -56.6972, -37.6476, 4.08632, 0.92 ) }
    dend_35 { pt3dadd( -57.9909, -38.1341, 4.31554, 0.92 ) }
    dend_35 { pt3dadd( -58.651, -38.3781, 4.39755, 0.92 ) }
    dend_35 { pt3dadd( -60.4112, -39.0867, 4.52849, 0.92 ) }
    dend_35 { pt3dadd( -61.7559, -39.7109, 4.60813, 0.69 ) }
    dend_35 { pt3dadd( -61.9596, -39.8105, 4.62868, 0.69 ) }
    dend_35 { pt3dadd( -63.2552, -40.4413, 4.85049, 0.69 ) }
    dend_35 { pt3dadd( -64.8788, -41.139, 5.22688, 0.69 ) }
    dend_35 { pt3dadd( -66.3778, -41.6644, 5.61328, 0.69 ) }
    dend_35 { pt3dadd( -68.5335, -42.1872, 6.11761, 0.69 ) }
    dend_35 { pt3dadd( -70.1825, -42.4991, 6.45503, 0.69 ) }
    dend_35 { pt3dadd( -71.7251, -42.7485, 6.76612, 0.69 ) }
    dend_35 { pt3dadd( -74.503, -43.069, 7.30879, 0.69 ) }
    dend_35 { pt3dadd( -76.5451, -43.2168, 7.67358, 1.15 ) }
    dend_35 { pt3dadd( -79.7254, -43.3113, 8.11532, 1.15 ) }
    dend_35 { pt3dadd( -83.1141, -43.2805, 8.4473, 0.69 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 26/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -4.2294, -8.22293, 0.650001, 1.15 ) }
    dend_34 { pt3dadd( -4.2294, -8.22293, 0.650001, 1.15 ) }
    dend_34 { pt3dadd( -5.1014, -9.99252, 0.816616, 1.15 ) }
    dend_34 { pt3dadd( -5.85795, -11.457, 0.969658, 1.15 ) }
    dend_34 { pt3dadd( -6.37686, -12.4273, 1.06993, 1.15 ) }
    dend_34 { pt3dadd( -7.23018, -14.0142, 1.2063, 0.92 ) }
    dend_34 { pt3dadd( -8.25993, -15.9347, 1.34918, 0.92 ) }
    dend_34 { pt3dadd( -9.37712, -18.0173, 1.48404, 0.92 ) }
    dend_34 { pt3dadd( -10.4645, -20.1464, 1.58349, 0.92 ) }
    dend_34 { pt3dadd( -11.1416, -21.6265, 1.65798, 0.92 ) }
    dend_34 { pt3dadd( -11.7886, -23.3123, 1.83659, 0.92 ) }
    dend_34 { pt3dadd( -12.1143, -24.4306, 2.04236, 0.92 ) }
    dend_34 { pt3dadd( -12.1174, -24.4489, 2.04687, 0.92 ) }
    dend_34 { pt3dadd( -12.0926, -26.5263, 2.7793, 0.92 ) }
    dend_34 { pt3dadd( -11.7284, -28.452, 3.73521, 0.92 ) }
    dend_34 { pt3dadd( -11.2179, -30.2214, 4.78238, 0.92 ) }
    dend_34 { pt3dadd( -10.8099, -31.4879, 5.54212, 0.92 ) }
    dend_34 { pt3dadd( -10.555, -32.2702, 5.99828, 0.92 ) }
    dend_34 { pt3dadd( -9.95764, -34.1896, 7.06997, 0.92 ) }
    dend_34 { pt3dadd( -9.45066, -36.0396, 8.15218, 0.92 ) }
    dend_34 { pt3dadd( -9.16632, -37.4913, 8.91548, 0.92 ) }
    dend_34 { pt3dadd( -8.96444, -39.1844, 9.67764, 0.92 ) }
    dend_34 { pt3dadd( -8.89286, -40.3774, 10.1421, 0.92 ) }
    dend_34 { pt3dadd( -8.90486, -41.2934, 10.4145, 0.92 ) }
    dend_34 { pt3dadd( -9.07698, -43.9804, 11.046, 0.92 ) }
    dend_34 { pt3dadd( -9.17487, -45.3304, 11.3084, 0.92 ) }
    dend_34 { pt3dadd( -9.23557, -46.9996, 11.6454, 0.92 ) }
    dend_34 { pt3dadd( -9.24629, -49.4136, 12.1478, 0.92 ) }
    dend_34 { pt3dadd( -9.17185, -51.4279, 12.4708, 0.92 ) }
    dend_34 { pt3dadd( -8.90212, -53.9916, 12.771, 0.92 ) }
    dend_34 { pt3dadd( -8.89685, -54.0196, 12.7729, 0.92 ) }
    dend_34 { pt3dadd( -8.51556, -55.5413, 12.9241, 0.92 ) }
    dend_34 { pt3dadd( -8.50981, -55.5594, 12.9265, 0.92 ) }
    dend_34 { pt3dadd( -7.96816, -57.0676, 13.1697, 0.69 ) }
    dend_34 { pt3dadd( -7.42072, -58.76, 13.5337, 0.69 ) }
    dend_34 { pt3dadd( -7.40065, -58.8323, 13.5481, 0.69 ) }
    dend_34 { pt3dadd( -7.01286, -60.7234, 13.9912, 0.69 ) }
    dend_34 { pt3dadd( -7.01041, -60.7415, 13.9968, 0.69 ) }
    dend_34 { pt3dadd( -6.73798, -63.158, 14.7964, 0.69 ) }
    dend_34 { pt3dadd( -6.60651, -65.0599, 15.5004, 0.69 ) }
    dend_34 { pt3dadd( -6.59854, -65.2194, 15.5648, 0.69 ) }
    dend_34 { pt3dadd( -6.50647, -66.6535, 16.1868, 0.69 ) }
    dend_34 { pt3dadd( -6.35632, -68.1546, 16.9704, 0.69 ) }
    dend_34 { pt3dadd( -7.62346, -77.2159, 19.6939, 0.69 ) }
    dend_34 { pt3dadd( -8.9433, -85.8816, 23.5735, 0.69 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 71/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.3894, -7.67193, 0.58, 1.15 ) }
    dend_25 { pt3dadd( -2.3894, -7.67193, 0.58, 1.15 ) }
    dend_25 { pt3dadd( -2.34927, -8.65171, 2.47971, 1.15 ) }
    dend_25 { pt3dadd( -2.30421, -9.75191, 4.61292, 0.92 ) }
    dend_25 { pt3dadd( -2.2575, -10.8924, 6.82428, 0.92 ) }
    dend_25 { pt3dadd( -2.25209, -11.0245, 7.08045, 0.92 ) }
    dend_25 { pt3dadd( -2.2241, -11.7081, 8.40576, 1.15 ) }
    dend_25 { pt3dadd( -2.17346, -12.2282, 9.37001, 1.15 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 79/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 7.4306, 4.38357, -7.7, 1.15 ) }
    dend_20 { pt3dadd( 7.44986, 4.37887, -7.70215, 1.15 ) }
    dend_20 { pt3dadd( 7.65844, 4.31242, -7.7005, 1.15 ) }
    dend_20 { pt3dadd( 9.75102, 3.41534, -7.46048, 1.15 ) }
    dend_20 { pt3dadd( 12.1255, 2.10582, -7.01557, 1.15 ) }
    dend_20 { pt3dadd( 13.6927, 1.07154, -6.5801, 1.15 ) }
    dend_20 { pt3dadd( 15.2886, -0.150061, -6.00457, 1.15 ) }
    dend_20 { pt3dadd( 16.959, -1.59442, -5.30508, 1.15 ) }
    dend_20 { pt3dadd( 18.6355, -3.15893, -4.57698, 1.15 ) }
    dend_20 { pt3dadd( 20.4545, -5.04507, -3.65553, 1.15 ) }
    dend_20 { pt3dadd( 22.2368, -7.07334, -2.60686, 0.92 ) }
    dend_20 { pt3dadd( 23.9068, -9.09609, -1.57595, 0.92 ) }
    dend_20 { pt3dadd( 25.4452, -11.0155, -0.684593, 0.92 ) }
    dend_20 { pt3dadd( 27.3569, -13.3501, 0.303738, 0.92 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 93/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 7.2106, -1.37343, 0.33, 2.52 ) }
    dend_7 { pt3dadd( 7.2106, -1.37343, 0.33, 2.52 ) }
    dend_7 { pt3dadd( 8.97299, -2.51959, 0.604713, 1.83 ) }
    dend_7 { pt3dadd( 10.3082, -3.38789, 0.812827, 1.83 ) }
    dend_7 { pt3dadd( 11.4769, -4.14796, 0.995001, 1.83 ) }
    dend_7 { pt3dadd( 13.367, -5.3772, 1.28962, 1.61 ) }
    dend_7 { pt3dadd( 14.9958, -6.4365, 1.54352, 1.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 0/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 7.4706, 8.15507, 0.33, 1.61 ) }
    dend_0 { pt3dadd( 7.4706, 8.15507, 0.33, 1.61 ) }
    dend_0 { pt3dadd( 9.07858, 9.52522, 0.33, 1.61 ) }
    dend_0 { pt3dadd( 10.6811, 10.8907, 0.33, 1.61 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 4/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.47568, 7.27327, 0.0, 0.92 ) }
    axon_0 { pt3dadd( 17.8104, 18.1449, 0.0, 0.92 ) }
    axon_0 { pt3dadd( 28.1452, 29.0166, 0.0, 0.92 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 7/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -20.5121, -12.3498, -10.4426, 0.92 ) }
    dend_49 { pt3dadd( -22.3908, -12.0401, -11.5034, 0.92 ) }
    dend_49 { pt3dadd( -24.3842, -11.7116, -12.629, 0.92 ) }
    dend_49 { pt3dadd( -26.1922, -11.4135, -13.65, 0.92 ) }
    dend_49 { pt3dadd( -27.5185, -11.1949, -14.3989, 0.92 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 12/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -20.5121, -12.3498, -10.4426, 0.69 ) }
    dend_48 { pt3dadd( -20.1981, -14.3102, -11.6095, 0.69 ) }
    dend_48 { pt3dadd( -20.0488, -16.0835, -12.5899, 0.69 ) }
    dend_48 { pt3dadd( -20.0473, -16.1088, -12.6036, 0.69 ) }
    dend_48 { pt3dadd( -20.019, -17.128, -13.1385, 0.69 ) }
    dend_48 { pt3dadd( -19.9965, -18.9888, -14.1019, 0.69 ) }
    dend_48 { pt3dadd( -19.9678, -20.8328, -15.0219, 0.69 ) }
    dend_48 { pt3dadd( -20.0612, -21.984, -15.4944, 0.69 ) }
    dend_48 { pt3dadd( -20.0652, -22.0105, -15.5045, 0.69 ) }
    dend_48 { pt3dadd( -20.1984, -22.837, -15.833, 0.69 ) }
    dend_48 { pt3dadd( -20.2012, -22.8545, -15.8403, 0.69 ) }
    dend_48 { pt3dadd( -20.3873, -24.486, -16.5117, 0.69 ) }
    dend_48 { pt3dadd( -20.4126, -26.0372, -17.1192, 0.69 ) }
    dend_48 { pt3dadd( -20.3452, -27.2019, -17.558, 0.69 ) }
    dend_48 { pt3dadd( -20.331, -27.3356, -17.6079, 0.69 ) }
    dend_48 { pt3dadd( -20.1596, -28.6804, -18.1684, 0.69 ) }
    dend_48 { pt3dadd( -20.0565, -29.4307, -18.4635, 0.69 ) }
    dend_48 { pt3dadd( -19.7258, -31.6261, -19.2859, 0.69 ) }
    dend_48 { pt3dadd( -19.4431, -33.5828, -19.9903, 0.69 ) }
    dend_48 { pt3dadd( -19.4417, -33.6008, -19.9966, 0.69 ) }
    dend_48 { pt3dadd( -19.3811, -35.9147, -20.7823, 0.69 ) }
    dend_48 { pt3dadd( -19.4675, -38.0842, -21.5189, 0.69 ) }
    dend_48 { pt3dadd( -19.6502, -39.999, -22.1665, 0.69 ) }
    dend_48 { pt3dadd( -20.0241, -42.2422, -22.9387, 0.69 ) }
    dend_48 { pt3dadd( -20.5803, -44.8613, -23.8476, 0.69 ) }
    dend_48 { pt3dadd( -20.5864, -44.8875, -23.8575, 0.69 ) }
    dend_48 { pt3dadd( -21.102, -46.8755, -24.6236, 0.69 ) }
    dend_48 { pt3dadd( -21.1071, -46.8925, -24.6311, 0.69 ) }
    dend_48 { pt3dadd( -21.9229, -49.3178, -25.6937, 0.69 ) }
    dend_48 { pt3dadd( -21.9468, -49.3854, -25.7213, 0.69 ) }
    dend_48 { pt3dadd( -22.7815, -51.8071, -26.6042, 0.69 ) }
    dend_48 { pt3dadd( -23.475, -53.9009, -27.258, 0.69 ) }
    dend_48 { pt3dadd( -23.4831, -53.9276, -27.2646, 0.69 ) }
    dend_48 { pt3dadd( -23.9919, -55.8418, -27.6296, 0.69 ) }
    dend_48 { pt3dadd( -24.2965, -57.2893, -27.7038, 0.69 ) }
    dend_48 { pt3dadd( -24.5311, -58.6281, -27.6416, 0.69 ) }
    dend_48 { pt3dadd( -24.7099, -59.97, -27.4264, 0.69 ) }
    dend_48 { pt3dadd( -24.8781, -61.5802, -27.1869, 0.69 ) }
    dend_48 { pt3dadd( -25.0406, -62.9479, -27.0358, 0.69 ) }
    dend_48 { pt3dadd( -25.4058, -65.6941, -26.8255, 0.69 ) }
    dend_48 { pt3dadd( -25.4109, -65.7221, -26.8255, 0.69 ) }
    dend_48 { pt3dadd( -25.8291, -67.3261, -26.9683, 0.69 ) }
    dend_48 { pt3dadd( -27.1128, -70.8568, -27.7151, 0.69 ) }
    dend_48 { pt3dadd( -28.2991, -73.195, -28.5862, 0.69 ) }
    dend_48 { pt3dadd( -29.3524, -74.7342, -29.4926, 0.69 ) }
    dend_48 { pt3dadd( -30.7334, -76.3826, -30.8025, 0.69 ) }
    dend_48 { pt3dadd( -32.0145, -77.6303, -32.07, 0.69 ) }
    dend_48 { pt3dadd( -33.7123, -78.9161, -33.8136, 0.69 ) }
    dend_48 { pt3dadd( -35.5931, -80.0015, -35.8988, 0.69 ) }
    dend_48 { pt3dadd( -37.4204, -80.8912, -38.1499, 0.69 ) }
    dend_48 { pt3dadd( -37.4366, -80.8994, -38.1736, 0.69 ) }
    dend_48 { pt3dadd( -38.5231, -81.6729, -40.1801, 0.69 ) }
    dend_48 { pt3dadd( -38.5325, -81.6847, -40.2057, 0.69 ) }
    dend_48 { pt3dadd( -38.9495, -82.6734, -42.0437, 0.69 ) }
    dend_48 { pt3dadd( -39.1366, -83.7039, -43.7748, 0.69 ) }
    dend_48 { pt3dadd( -39.2491, -85.3216, -46.3144, 0.69 ) }
    dend_48 { pt3dadd( -39.3077, -87.2978, -49.384, 0.69 ) }
    dend_48 { pt3dadd( -39.3164, -88.8829, -51.7039, 0.69 ) }
    dend_48 { pt3dadd( -39.3174, -88.9117, -51.7437, 0.69 ) }
    dend_48 { pt3dadd( -39.4053, -90.542, -53.8891, 0.69 ) }
    dend_48 { pt3dadd( -39.4061, -90.5546, -53.904, 0.69 ) }
    dend_48 { pt3dadd( -39.6215, -92.5864, -56.1489, 0.46 ) }
    dend_48 { pt3dadd( -39.9021, -94.498, -58.1592, 0.46 ) }
    dend_48 { pt3dadd( -40.2834, -96.4204, -60.0813, 0.46 ) }
    dend_48 { pt3dadd( -40.3004, -96.4875, -60.1501, 0.46 ) }
    dend_48 { pt3dadd( -41.0214, -98.8619, -62.6011, 0.46 ) }
    dend_48 { pt3dadd( -41.0427, -98.9246, -62.6732, 0.46 ) }
    dend_48 { pt3dadd( -41.8855, -101.194, -65.3509, 0.46 ) }
    dend_48 { pt3dadd( -41.9046, -101.24, -65.4117, 0.46 ) }
    dend_48 { pt3dadd( -42.9099, -103.321, -68.5183, 0.46 ) }
    dend_48 { pt3dadd( -42.9289, -103.356, -68.5749, 0.46 ) }
    dend_48 { pt3dadd( -43.9248, -104.68, -71.3583, 0.46 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 84/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -33.742, -17.7717, -56.3991, 0.92 ) }
    dend_46 { pt3dadd( -34.009, -18.1392, -56.5192, 0.92 ) }
    dend_46 { pt3dadd( -34.0266, -18.1611, -56.527, 0.92 ) }
    dend_46 { pt3dadd( -35.5255, -20.0019, -57.1967, 0.92 ) }
    dend_46 { pt3dadd( -35.5372, -20.016, -57.203, 0.92 ) }
    dend_46 { pt3dadd( -37.1218, -21.9901, -58.2984, 0.69 ) }
    dend_46 { pt3dadd( -37.2803, -22.1896, -58.4204, 0.69 ) }
    dend_46 { pt3dadd( -38.5902, -23.839, -59.5861, 0.69 ) }
    dend_46 { pt3dadd( -38.7369, -24.02, -59.7295, 0.69 ) }
    dend_46 { pt3dadd( -40.2304, -25.7333, -61.2362, 0.69 ) }
    dend_46 { pt3dadd( -42.0368, -27.829, -63.1044, 0.69 ) }
    dend_46 { pt3dadd( -42.2025, -28.024, -63.2855, 0.69 ) }
    dend_46 { pt3dadd( -43.3796, -29.4602, -64.588, 0.69 ) }
    dend_46 { pt3dadd( -43.4444, -29.5409, -64.662, 0.69 ) }
    dend_46 { pt3dadd( -44.7635, -31.1732, -66.0828, 0.69 ) }
    dend_46 { pt3dadd( -45.8521, -32.5091, -67.1565, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_46 { pt3dadd( -45.971, -32.6545, -67.2606, 0.69 ) }
    dend_46 { pt3dadd( -47.0495, -34.0951, -68.1246, 0.69 ) }
    dend_46 { pt3dadd( -47.1625, -34.2689, -68.2061, 0.69 ) }
    dend_46 { pt3dadd( -47.9514, -35.5758, -68.7598, 0.69 ) }
    dend_46 { pt3dadd( -48.0867, -35.8113, -68.8526, 0.69 ) }
    dend_46 { pt3dadd( -49.3385, -37.9094, -69.6288, 0.69 ) }
    dend_46 { pt3dadd( -50.8435, -40.4023, -70.493, 0.69 ) }
    dend_46 { pt3dadd( -52.4824, -43.0994, -71.3928, 0.69 ) }
    dend_46 { pt3dadd( -52.4967, -43.1233, -71.4006, 0.69 ) }
    dend_46 { pt3dadd( -53.7949, -45.3464, -72.1157, 0.69 ) }
    dend_46 { pt3dadd( -54.8043, -47.2159, -72.6704, 0.69 ) }
    dend_46 { pt3dadd( -56.0665, -49.6909, -73.3748, 0.69 ) }
    dend_46 { pt3dadd( -56.1378, -49.8421, -73.4192, 0.69 ) }
    dend_46 { pt3dadd( -57.2052, -52.3132, -74.1701, 0.69 ) }
    dend_46 { pt3dadd( -57.2439, -52.4168, -74.2019, 0.69 ) }
    dend_46 { pt3dadd( -58.5842, -56.8141, -75.5501, 0.69 ) }
    dend_46 { pt3dadd( -58.6356, -57.0366, -75.6207, 0.69 ) }
    dend_46 { pt3dadd( -58.9524, -58.725, -76.1754, 0.69 ) }
    dend_46 { pt3dadd( -59.0089, -59.0759, -76.2871, 0.69 ) }
    dend_46 { pt3dadd( -59.3766, -61.8763, -77.2009, 0.69 ) }
    dend_46 { pt3dadd( -59.3871, -61.966, -77.232, 0.69 ) }
    dend_46 { pt3dadd( -59.7926, -65.8059, -78.1454, 0.69 ) }
    dend_46 { pt3dadd( -59.7943, -65.8248, -78.1469, 0.69 ) }
    dend_46 { pt3dadd( -60.0168, -68.5687, -78.1201, 0.69 ) }
    dend_46 { pt3dadd( -60.0583, -68.9555, -78.0972, 0.69 ) }
    dend_46 { pt3dadd( -60.3263, -71.1577, -77.8703, 0.69 ) }
    dend_46 { pt3dadd( -61.2426, -75.9849, -77.3363, 0.69 ) }
    dend_46 { pt3dadd( -62.6286, -81.5557, -76.6055, 0.69 ) }
    dend_46 { pt3dadd( -62.6621, -81.6747, -76.5964, 0.69 ) }
    dend_46 { pt3dadd( -63.6875, -85.0311, -76.5433, 0.69 ) }
    dend_46 { pt3dadd( -63.728, -85.1681, -76.5515, 0.69 ) }
    dend_46 { pt3dadd( -64.7468, -88.6079, -77.0149, 0.69 ) }
    dend_46 { pt3dadd( -64.7521, -88.6258, -77.0192, 0.69 ) }
    dend_46 { pt3dadd( -66.3197, -93.9005, -78.3666, 0.69 ) }
    dend_46 { pt3dadd( -66.8758, -95.9003, -78.8717, 0.69 ) }
    dend_46 { pt3dadd( -67.7763, -99.6245, -79.8321, 0.69 ) }
    dend_46 { pt3dadd( -67.7822, -99.6516, -79.8391, 0.69 ) }
    dend_46 { pt3dadd( -68.3016, -102.745, -80.65, 0.69 ) }
    dend_46 { pt3dadd( -68.3311, -102.908, -80.6924, 0.69 ) }
    dend_46 { pt3dadd( -69.2258, -106.879, -81.6834, 0.69 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 40/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -33.742, -17.7717, -56.3991, 0.69 ) }
    dend_45 { pt3dadd( -36.6981, -15.6007, -58.2827, 0.69 ) }
    dend_45 { pt3dadd( -38.9381, -13.9403, -60.0715, 0.69 ) }
    dend_45 { pt3dadd( -40.6766, -12.5786, -62.0402, 0.69 ) }
    dend_45 { pt3dadd( -40.6856, -12.5712, -62.0562, 0.69 ) }
    dend_45 { pt3dadd( -41.4172, -11.9626, -63.5658, 0.69 ) }
    dend_45 { pt3dadd( -41.4245, -11.9566, -63.5834, 0.69 ) }
    dend_45 { pt3dadd( -42.3835, -11.0996, -66.6536, 0.69 ) }
    dend_45 { pt3dadd( -43.3699, -10.2053, -70.4756, 0.69 ) }
    dend_45 { pt3dadd( -44.6446, -9.02527, -76.2957, 0.69 ) }
    dend_45 { pt3dadd( -44.6506, -9.0197, -76.3245, 0.69 ) }
    dend_45 { pt3dadd( -45.4666, -8.2577, -80.66, 0.69 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 52/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -7.48771, 12.8371, -8.19936, 0.92 ) }
    dend_43 { pt3dadd( -9.42224, 12.2995, -9.44422, 0.92 ) }
    dend_43 { pt3dadd( -11.0073, 11.8287, -10.367, 0.92 ) }
    dend_43 { pt3dadd( -12.4406, 11.3839, -11.1217, 0.92 ) }
    dend_43 { pt3dadd( -14.3979, 10.6974, -12.139, 0.92 ) }
    dend_43 { pt3dadd( -16.875, 9.76766, -13.4346, 0.92 ) }
    dend_43 { pt3dadd( -18.2718, 9.18398, -14.17, 0.92 ) }
    dend_43 { pt3dadd( -19.9028, 8.34933, -15.031, 0.92 ) }
    dend_43 { pt3dadd( -21.0685, 7.69501, -15.6623, 0.92 ) }
    dend_43 { pt3dadd( -22.787, 6.61399, -16.606, 0.92 ) }
    dend_43 { pt3dadd( -24.1023, 5.68991, -17.2888, 0.92 ) }
    dend_43 { pt3dadd( -25.7934, 4.33639, -18.0737, 0.92 ) }
    dend_43 { pt3dadd( -26.9984, 3.35809, -18.508, 0.92 ) }
    dend_43 { pt3dadd( -28.0878, 2.52547, -18.8028, 0.92 ) }
    dend_43 { pt3dadd( -29.9557, 1.17191, -19.1773, 0.92 ) }
    dend_43 { pt3dadd( -32.0125, -0.164513, -19.4509, 0.92 ) }
    dend_43 { pt3dadd( -34.0062, -1.31308, -19.6012, 0.92 ) }
    dend_43 { pt3dadd( -37.3359, -3.01729, -19.7983, 0.92 ) }
    dend_43 { pt3dadd( -39.8633, -4.20704, -19.9246, 0.92 ) }
    dend_43 { pt3dadd( -39.8905, -4.21902, -19.9255, 0.92 ) }
    dend_43 { pt3dadd( -42.3668, -5.21493, -20.1174, 0.92 ) }
    dend_43 { pt3dadd( -44.802, -6.13688, -20.457, 0.92 ) }
    dend_43 { pt3dadd( -46.8975, -6.90283, -20.9156, 0.92 ) }
    dend_43 { pt3dadd( -46.9244, -6.91277, -20.9238, 0.92 ) }
    dend_43 { pt3dadd( -48.0768, -7.39562, -21.362, 0.92 ) }
    dend_43 { pt3dadd( -50.5077, -8.63676, -22.5051, 0.92 ) }
    dend_43 { pt3dadd( -50.5293, -8.65133, -22.5192, 0.92 ) }
    dend_43 { pt3dadd( -52.438, -10.1955, -24.1081, 0.92 ) }
    dend_43 { pt3dadd( -52.4579, -10.2107, -24.1239, 0.92 ) }
    dend_43 { pt3dadd( -52.9513, -10.5753, -24.5205, 0.92 ) }
    dend_43 { pt3dadd( -54.5931, -11.7953, -25.9453, 0.92 ) }
    dend_43 { pt3dadd( -55.8371, -12.7401, -27.0069, 0.92 ) }
    dend_43 { pt3dadd( -55.9038, -12.7912, -27.0585, 0.92 ) }
    dend_43 { pt3dadd( -57.6276, -14.0873, -28.3447, 0.92 ) }
    dend_43 { pt3dadd( -58.0461, -14.3917, -28.6712, 0.92 ) }
    dend_43 { pt3dadd( -59.8208, -15.5775, -30.1162, 0.92 ) }
    dend_43 { pt3dadd( -59.876, -15.6115, -30.1617, 0.92 ) }
    dend_43 { pt3dadd( -61.9626, -16.9648, -31.9686, 0.92 ) }
    dend_43 { pt3dadd( -62.8122, -17.565, -32.7455, 0.92 ) }
    dend_43 { pt3dadd( -63.7067, -18.2607, -33.625, 0.92 ) }
    dend_43 { pt3dadd( -65.1018, -19.3304, -34.8864, 0.92 ) }
    dend_43 { pt3dadd( -65.1412, -19.3598, -34.9194, 0.92 ) }
    dend_43 { pt3dadd( -66.7425, -20.5557, -36.2355, 0.92 ) }
    dend_43 { pt3dadd( -68.1353, -21.6197, -37.288, 0.92 ) }
    dend_43 { pt3dadd( -68.1565, -21.636, -37.3005, 0.92 ) }
    dend_43 { pt3dadd( -69.3634, -22.5295, -37.8518, 0.92 ) }
    dend_43 { pt3dadd( -70.5633, -23.4386, -38.3441, 0.92 ) }
    dend_43 { pt3dadd( -70.5858, -23.4555, -38.3529, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_43 { pt3dadd( -72.3828, -24.75, -39.0103, 0.92 ) }
    dend_43 { pt3dadd( -74.633, -26.3337, -39.833, 0.92 ) }
    dend_43 { pt3dadd( -76.9618, -27.9608, -40.7034, 0.92 ) }
    dend_43 { pt3dadd( -78.3714, -28.9321, -41.2501, 0.69 ) }
    dend_43 { pt3dadd( -78.4335, -28.9743, -41.274, 0.69 ) }
    dend_43 { pt3dadd( -79.821, -29.9517, -41.8529, 0.69 ) }
    dend_43 { pt3dadd( -79.8582, -29.9788, -41.8703, 0.69 ) }
    dend_43 { pt3dadd( -81.032, -30.9157, -42.4421, 0.69 ) }
    dend_43 { pt3dadd( -81.0603, -30.9391, -42.456, 0.69 ) }
    dend_43 { pt3dadd( -82.403, -32.058, -43.0639, 0.69 ) }
    dend_43 { pt3dadd( -83.9406, -33.4032, -43.7539, 0.69 ) }
    dend_43 { pt3dadd( -83.9749, -33.4345, -43.7693, 0.69 ) }
    dend_43 { pt3dadd( -85.4291, -34.6896, -44.3945, 0.69 ) }
    dend_43 { pt3dadd( -85.4436, -34.7012, -44.4009, 0.69 ) }
    dend_43 { pt3dadd( -86.8136, -35.7356, -45.0002, 0.69 ) }
    dend_43 { pt3dadd( -86.8366, -35.7514, -45.0099, 0.69 ) }
    dend_43 { pt3dadd( -88.4793, -36.7658, -45.7621, 0.69 ) }
    dend_43 { pt3dadd( -90.6639, -38.0685, -46.8498, 0.69 ) }
    dend_43 { pt3dadd( -92.4975, -39.1128, -47.8472, 0.69 ) }
    dend_43 { pt3dadd( -92.5207, -39.1256, -47.8606, 0.69 ) }
    dend_43 { pt3dadd( -94.4923, -40.1556, -49.0311, 0.69 ) }
    dend_43 { pt3dadd( -96.7814, -41.3455, -50.3942, 0.69 ) }
    dend_43 { pt3dadd( -96.8975, -41.4051, -50.4656, 0.69 ) }
    dend_43 { pt3dadd( -98.5509, -42.2175, -51.4336, 0.69 ) }
    dend_43 { pt3dadd( -98.6313, -42.2562, -51.4769, 0.69 ) }
    dend_43 { pt3dadd( -100.607, -43.0969, -52.5449, 0.69 ) }
    dend_43 { pt3dadd( -102.057, -43.6447, -53.3221, 0.69 ) }
    dend_43 { pt3dadd( -102.266, -43.7081, -53.4432, 0.69 ) }
    dend_43 { pt3dadd( -104.386, -44.2712, -54.8138, 0.69 ) }
    dend_43 { pt3dadd( -104.433, -44.2781, -54.8502, 0.69 ) }
    dend_43 { pt3dadd( -107.128, -44.4401, -57.2197, 0.69 ) }
    dend_43 { pt3dadd( -107.191, -44.4348, -57.2839, 0.69 ) }
    dend_43 { pt3dadd( -109.567, -43.8283, -59.9348, 0.69 ) }
    dend_43 { pt3dadd( -109.61, -43.8079, -59.986, 0.69 ) }
    dend_43 { pt3dadd( -111.454, -42.1351, -62.3098, 0.69 ) }
    dend_43 { pt3dadd( -111.469, -42.1169, -62.3275, 0.69 ) }
    dend_43 { pt3dadd( -112.25, -40.7722, -63.0598, 0.69 ) }
    dend_43 { pt3dadd( -113.132, -39.1498, -63.6483, 0.69 ) }
    dend_43 { pt3dadd( -114.096, -37.3977, -64.0977, 0.69 ) }
    dend_43 { pt3dadd( -115.787, -34.6149, -64.7978, 0.69 ) }
    dend_43 { pt3dadd( -115.838, -34.5351, -64.8171, 0.69 ) }
    dend_43 { pt3dadd( -118.323, -30.8005, -65.7988, 0.69 ) }
    dend_43 { pt3dadd( -119.718, -28.8216, -66.3889, 0.46 ) }
    dend_43 { pt3dadd( -121.99, -25.788, -67.4703, 0.46 ) }
    dend_43 { pt3dadd( -123.282, -24.1151, -68.1668, 0.46 ) }
    dend_43 { pt3dadd( -124.716, -22.2763, -69.042, 0.46 ) }
    dend_43 { pt3dadd( -124.755, -22.2264, -69.0674, 0.46 ) }
    dend_43 { pt3dadd( -126.261, -20.264, -70.219, 0.46 ) }
    dend_43 { pt3dadd( -128.048, -17.809, -71.7266, 0.46 ) }
    dend_43 { pt3dadd( -129.717, -15.2754, -73.2133, 0.46 ) }
    dend_43 { pt3dadd( -129.755, -15.2158, -73.2459, 0.46 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -7.48771, 12.8371, -8.19936, 0.92 ) }
    dend_40 { pt3dadd( -8.46345, 13.6494, -7.04696, 0.92 ) }
    dend_40 { pt3dadd( -9.09258, 14.221, -6.23561, 0.92 ) }
    dend_40 { pt3dadd( -9.98224, 15.0587, -5.04416, 0.92 ) }
    dend_40 { pt3dadd( -10.9128, 15.9735, -3.74149, 0.92 ) }
    dend_40 { pt3dadd( -11.7734, 16.7585, -2.63757, 0.92 ) }
    dend_40 { pt3dadd( -12.835, 17.6267, -1.39148, 0.92 ) }
    dend_40 { pt3dadd( -13.6412, 18.1731, -0.523476, 0.92 ) }
    dend_40 { pt3dadd( -13.6611, 18.1844, -0.50439, 0.92 ) }
    dend_40 { pt3dadd( -15.1936, 18.9174, 0.771228, 0.92 ) }
    dend_40 { pt3dadd( -17.2431, 19.669, 2.19286, 0.92 ) }
    dend_40 { pt3dadd( -18.867, 20.153, 3.07273, 0.92 ) }
    dend_40 { pt3dadd( -19.9, 20.4396, 3.54153, 0.92 ) }
    dend_40 { pt3dadd( -21.6418, 20.9354, 4.31648, 0.69 ) }
    dend_40 { pt3dadd( -21.8896, 21.0231, 4.43562, 0.69 ) }
    dend_40 { pt3dadd( -23.5513, 21.8284, 5.35926, 0.92 ) }
    dend_40 { pt3dadd( -24.7609, 22.7992, 6.29923, 0.92 ) }
    dend_40 { pt3dadd( -25.7145, 24.15, 7.39637, 0.92 ) }
    dend_40 { pt3dadd( -26.0629, 25.2228, 8.16547, 0.92 ) }
    dend_40 { pt3dadd( -26.194, 26.9624, 9.26244, 0.92 ) }
    dend_40 { pt3dadd( -26.1629, 28.5212, 10.2309, 0.92 ) }
    dend_40 { pt3dadd( -25.9815, 29.5657, 10.8542, 0.92 ) }
    dend_40 { pt3dadd( -25.5874, 30.8701, 11.6511, 0.92 ) }
    dend_40 { pt3dadd( -24.7474, 32.8411, 12.6782, 0.92 ) }
    dend_40 { pt3dadd( -24.1437, 34.0803, 13.2002, 0.92 ) }
    // Section: dend_38, id: dend_38, parent: dend_35 (entry count 76/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -83.1141, -43.2805, 8.4473, 0.69 ) }
    dend_38 { pt3dadd( -83.1967, -44.669, 6.82389, 0.69 ) }
    dend_38 { pt3dadd( -83.1969, -44.6812, 6.80857, 0.69 ) }
    dend_38 { pt3dadd( -83.2155, -45.8783, 5.3068, 0.69 ) }
    dend_38 { pt3dadd( -83.2365, -47.2372, 3.60213, 0.69 ) }
    dend_38 { pt3dadd( -83.2554, -48.4553, 2.07393, 0.69 ) }
    dend_38 { pt3dadd( -83.2559, -48.4859, 2.03563, 0.69 ) }
    dend_38 { pt3dadd( -83.0185, -50.25, 0.0810734, 0.69 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 84/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -83.1141, -43.2805, 8.4473, 0.69 ) }
    dend_37 { pt3dadd( -82.693, -41.3192, 7.30703, 0.69 ) }
    dend_37 { pt3dadd( -82.2677, -39.3383, 6.15539, 0.69 ) }
    dend_37 { pt3dadd( -81.7929, -37.127, 4.86977, 0.69 ) }
    dend_37 { pt3dadd( -81.7841, -37.0861, 4.84597, 0.69 ) }
    dend_37 { pt3dadd( -81.2424, -34.563, 3.37908, 0.69 ) }
    dend_37 { pt3dadd( -81.2248, -34.4811, 3.33149, 0.69 ) }
    dend_37 { pt3dadd( -78.9638, -26.3695, -1.35696, 0.69 ) }
    dend_37 { pt3dadd( -77.6308, -17.8683, -5.61658, 0.69 ) }
    dend_37 { pt3dadd( -75.0318, -9.12663, -8.5444, 0.69 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 94/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -83.1141, -43.2805, 8.4473, 0.69 ) }
    dend_36 { pt3dadd( -84.214, -44.1591, 9.0171, 0.69 ) }
    dend_36 { pt3dadd( -86.0356, -45.6033, 10.0184, 0.69 ) }
    dend_36 { pt3dadd( -87.8523, -46.9429, 11.1396, 0.69 ) }
    dend_36 { pt3dadd( -87.8675, -46.9525, 11.1477, 0.69 ) }
    dend_36 { pt3dadd( -90.0087, -48.1982, 12.1948, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_36 { pt3dadd( -91.7961, -49.0559, 12.9662, 0.69 ) }
    dend_36 { pt3dadd( -91.8222, -49.0654, 12.977, 0.69 ) }
    dend_36 { pt3dadd( -94.212, -49.6281, 13.9815, 0.69 ) }
    dend_36 { pt3dadd( -96.785, -50.1042, 14.94, 0.46 ) }
    dend_36 { pt3dadd( -96.8039, -50.1068, 14.9462, 0.46 ) }
    dend_36 { pt3dadd( -99.7884, -50.2004, 15.655, 0.46 ) }
    dend_36 { pt3dadd( -99.8079, -50.1995, 15.659, 0.46 ) }
    dend_36 { pt3dadd( -101.867, -50.0523, 16.0423, 0.46 ) }
    dend_36 { pt3dadd( -109.769, -54.4848, 20.0167, 0.46 ) }
    dend_36 { pt3dadd( -118.91, -57.5539, 22.467, 0.46 ) }
    dend_36 { pt3dadd( -127.271, -61.3001, 26.2803, 0.46 ) }
    dend_36 { pt3dadd( -135.852, -63.844, 30.6608, 0.46 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 12/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -2.17346, -12.2282, 9.37001, 0.92 ) }
    dend_29 { pt3dadd( -3.3466, -13.6944, 8.90116, 0.92 ) }
    dend_29 { pt3dadd( -4.38711, -14.9948, 8.48532, 0.92 ) }
    dend_29 { pt3dadd( -5.7015, -16.6375, 7.96002, 0.92 ) }
    dend_29 { pt3dadd( -6.64189, -17.8128, 7.58419, 0.92 ) }
    dend_29 { pt3dadd( -7.77566, -19.2298, 7.13108, 0.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 18/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -2.17346, -12.2282, 9.37001, 0.92 ) }
    dend_26 { pt3dadd( -0.964782, -13.7214, 9.50761, 0.92 ) }
    dend_26 { pt3dadd( 0.321604, -15.166, 9.77826, 0.92 ) }
    dend_26 { pt3dadd( 0.580308, -15.4152, 9.84771, 0.69 ) }
    dend_26 { pt3dadd( 1.72067, -16.2616, 10.2306, 0.69 ) }
    dend_26 { pt3dadd( 2.77704, -16.9471, 10.6147, 0.69 ) }
    dend_26 { pt3dadd( 2.79287, -16.9559, 10.6227, 0.69 ) }
    dend_26 { pt3dadd( 4.16915, -17.4846, 11.5396, 0.69 ) }
    dend_26 { pt3dadd( 5.16048, -17.7714, 12.2416, 0.46 ) }
    dend_26 { pt3dadd( 6.50844, -18.1467, 13.2797, 0.46 ) }
    dend_26 { pt3dadd( 6.52319, -18.1509, 13.2925, 0.46 ) }
    dend_26 { pt3dadd( 8.5922, -18.506, 15.1541, 0.46 ) }
    dend_26 { pt3dadd( 8.62797, -18.5104, 15.1887, 0.46 ) }
    dend_26 { pt3dadd( 15.4238, -25.026, 17.792, 0.46 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 32/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 27.3569, -13.3501, 0.303738, 0.92 ) }
    dend_24 { pt3dadd( 28.9416, -12.7225, 1.54718, 0.92 ) }
    dend_24 { pt3dadd( 31.0009, -12.0773, 2.82991, 0.92 ) }
    dend_24 { pt3dadd( 33.2041, -11.5784, 3.95771, 0.92 ) }
    dend_24 { pt3dadd( 35.1276, -11.1734, 4.82307, 0.92 ) }
    dend_24 { pt3dadd( 37.4212, -10.6779, 5.7698, 0.69 ) }
    dend_24 { pt3dadd( 39.318, -10.2334, 6.48436, 0.69 ) }
    dend_24 { pt3dadd( 41.811, -9.67391, 7.21369, 0.69 ) }
    dend_24 { pt3dadd( 43.9452, -9.27014, 7.7114, 0.69 ) }
    dend_24 { pt3dadd( 46.6847, -8.83935, 8.29039, 0.69 ) }
    dend_24 { pt3dadd( 49.7331, -8.37791, 8.93175, 0.69 ) }
    dend_24 { pt3dadd( 52.9566, -7.94066, 9.66418, 0.69 ) }
    dend_24 { pt3dadd( 56.8253, -7.47059, 10.5807, 0.69 ) }
    dend_24 { pt3dadd( 60.0075, -7.14818, 11.3355, 0.69 ) }
    dend_24 { pt3dadd( 61.8103, -7.00469, 11.7712, 0.69 ) }
    dend_24 { pt3dadd( 61.8396, -7.004, 11.7778, 0.69 ) }
    dend_24 { pt3dadd( 64.1703, -7.01411, 12.1914, 0.69 ) }
    dend_24 { pt3dadd( 64.1902, -7.01443, 12.1941, 0.69 ) }
    dend_24 { pt3dadd( 66.7418, -7.06431, 12.3922, 0.69 ) }
    dend_24 { pt3dadd( 66.7718, -7.06514, 12.3931, 0.69 ) }
    dend_24 { pt3dadd( 69.3639, -7.21106, 12.4002, 0.69 ) }
    dend_24 { pt3dadd( 72.0749, -7.52883, 12.52, 0.69 ) }
    dend_24 { pt3dadd( 72.0944, -7.53244, 12.5214, 0.69 ) }
    dend_24 { pt3dadd( 74.3998, -8.04293, 12.7201, 0.69 ) }
    dend_24 { pt3dadd( 76.5643, -8.71356, 12.9688, 0.69 ) }
    dend_24 { pt3dadd( 76.5916, -8.7245, 12.9736, 0.69 ) }
    dend_24 { pt3dadd( 78.1786, -9.77869, 13.5417, 0.69 ) }
    dend_24 { pt3dadd( 78.2324, -9.82536, 13.5749, 0.69 ) }
    dend_24 { pt3dadd( 87.9293, -9.76598, 16.0174, 0.69 ) }
    dend_24 { pt3dadd( 97.5255, -11.2107, 18.3839, 0.69 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 62/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 27.3569, -13.3501, 0.303738, 0.92 ) }
    dend_21 { pt3dadd( 27.9413, -15.0011, 2.19313, 0.92 ) }
    dend_21 { pt3dadd( 27.9924, -15.1453, 2.35819, 0.92 ) }
    // Section: dend_17, id: dend_17, parent: dend_7 (entry count 65/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 14.9958, -6.4365, 1.54352, 0.92 ) }
    dend_17 { pt3dadd( 13.6158, -7.225, 1.57352, 0.92 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 67/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 14.9958, -6.4365, 1.54352, 1.61 ) }
    dend_8 { pt3dadd( 16.7858, -7.50221, 2.03931, 1.61 ) }
    dend_8 { pt3dadd( 18.7503, -8.67188, 2.58347, 1.61 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 70/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 10.6811, 10.8907, 0.33, 1.15 ) }
    dend_4 { pt3dadd( 10.6516, 12.3087, 1.20645, 1.15 ) }
    dend_4 { pt3dadd( 10.654, 12.3336, 1.22091, 1.15 ) }
    dend_4 { pt3dadd( 10.9578, 14.0054, 2.12513, 1.15 ) }
    dend_4 { pt3dadd( 11.2814, 15.481, 2.90882, 1.15 ) }
    dend_4 { pt3dadd( 11.7118, 17.0418, 3.73575, 1.15 ) }
    dend_4 { pt3dadd( 12.2251, 18.7214, 4.62321, 1.15 ) }
    dend_4 { pt3dadd( 12.8903, 20.3538, 5.56962, 0.92 ) }
    dend_4 { pt3dadd( 13.2912, 21.1875, 6.10332, 0.92 ) }
    dend_4 { pt3dadd( 13.9375, 22.1995, 6.84111, 0.92 ) }
    dend_4 { pt3dadd( 14.8259, 23.3559, 7.75819, 0.92 ) }
    dend_4 { pt3dadd( 14.8432, 23.3735, 7.7743, 0.92 ) }
    dend_4 { pt3dadd( 16.4791, 24.7114, 9.43074, 0.92 ) }
    dend_4 { pt3dadd( 16.4954, 24.7245, 9.45189, 0.92 ) }
    dend_4 { pt3dadd( 17.1807, 25.1289, 10.4191, 0.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 85/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 10.6811, 10.8907, 0.33, 1.38 ) }
    dend_1 { pt3dadd( 12.8942, 12.0094, 0.542408, 1.38 ) }
    dend_1 { pt3dadd( 15.4728, 13.2221, 0.923091, 1.38 ) }
    dend_1 { pt3dadd( 17.971, 14.295, 1.32223, 1.38 ) }
    dend_1 { pt3dadd( 17.9894, 14.3019, 1.3251, 1.38 ) }
    dend_1 { pt3dadd( 20.4266, 15.1118, 1.6522, 1.38 ) }
    dend_1 { pt3dadd( 22.5429, 15.7322, 1.93181, 1.38 ) }
    dend_1 { pt3dadd( 25.0596, 16.2604, 2.31595, 1.38 ) }
    dend_1 { pt3dadd( 27.101, 16.5314, 2.65426, 1.38 ) }
    dend_1 { pt3dadd( 29.1507, 16.705, 2.94963, 1.38 ) }
    dend_1 { pt3dadd( 30.7103, 16.7805, 3.14908, 1.38 ) }
    dend_1 { pt3dadd( 32.7107, 16.7709, 3.3792, 1.38 ) }
    dend_1 { pt3dadd( 34.3857, 16.7081, 3.57727, 1.15 ) }
    dend_1 { pt3dadd( 36.444, 16.5859, 3.78512, 0.92 ) }
    dend_1 { pt3dadd( 38.7464, 16.3968, 4.01981, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( 40.3149, 16.2573, 4.12973, 0.92 ) }
    dend_1 { pt3dadd( 42.9297, 15.9963, 4.2754, 0.92 ) }
    dend_1 { pt3dadd( 42.9595, 15.993, 4.27643, 0.92 ) }
    dend_1 { pt3dadd( 44.2232, 15.8582, 4.31064, 0.92 ) }
    dend_1 { pt3dadd( 46.4521, 15.6008, 4.33653, 0.92 ) }
    dend_1 { pt3dadd( 48.7364, 15.3216, 4.34533, 0.92 ) }
    dend_1 { pt3dadd( 50.3455, 15.1481, 4.33599, 0.92 ) }
    dend_1 { pt3dadd( 51.7167, 14.9953, 4.29004, 0.92 ) }
    dend_1 { pt3dadd( 53.5602, 14.7724, 4.18834, 0.92 ) }
    dend_1 { pt3dadd( 56.2226, 14.4308, 3.94835, 0.92 ) }
    dend_1 { pt3dadd( 58.0566, 14.1816, 3.75476, 0.92 ) }
    dend_1 { pt3dadd( 59.2441, 13.9954, 3.61495, 1.15 ) }
    dend_1 { pt3dadd( 61.6114, 13.5691, 3.23811, 1.15 ) }
    dend_1 { pt3dadd( 63.5828, 13.1659, 2.90831, 1.15 ) }
    dend_1 { pt3dadd( 65.0547, 12.8461, 2.70146, 1.15 ) }
    dend_1 { pt3dadd( 67.4795, 12.3067, 2.48389, 0.92 ) }
    dend_1 { pt3dadd( 67.7024, 12.2526, 2.48279, 0.92 ) }
    dend_1 { pt3dadd( 68.9728, 11.9146, 2.57359, 0.92 ) }
    dend_1 { pt3dadd( 70.0231, 11.5637, 2.76741, 0.92 ) }
    dend_1 { pt3dadd( 71.4864, 10.9252, 3.05629, 0.92 ) }
    dend_1 { pt3dadd( 73.3917, 9.84614, 3.3789, 0.92 ) }
    dend_1 { pt3dadd( 75.3412, 8.41532, 3.52197, 0.92 ) }
    dend_1 { pt3dadd( 76.0141, 7.84055, 3.53112, 0.92 ) }
    dend_1 { pt3dadd( 77.5537, 6.3349, 3.46497, 0.92 ) }
    dend_1 { pt3dadd( 78.8886, 4.87106, 3.37537, 0.92 ) }
    dend_1 { pt3dadd( 80.1129, 3.38513, 3.30489, 0.92 ) }
    dend_1 { pt3dadd( 81.3417, 1.82747, 3.24717, 0.92 ) }
    dend_1 { pt3dadd( 82.5635, 0.325131, 3.21033, 0.92 ) }
    dend_1 { pt3dadd( 83.6706, -1.00944, 3.22049, 0.92 ) }
    dend_1 { pt3dadd( 85.2102, -2.78178, 3.32918, 0.92 ) }
    dend_1 { pt3dadd( 86.5797, -4.30908, 3.54808, 0.69 ) }
    dend_1 { pt3dadd( 88.2459, -6.15622, 3.8882, 0.69 ) }
    dend_1 { pt3dadd( 89.5472, -7.56296, 4.23271, 0.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 33/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 28.1452, 29.0166, 0.0, 0.69 ) }
    axon_1 { pt3dadd( 38.48, 39.8882, 0.0, 0.69 ) }
    axon_1 { pt3dadd( 48.8147, 50.7599, 0.0, 0.69 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 36/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -27.5185, -11.1949, -14.3989, 0.69 ) }
    dend_51 { pt3dadd( -29.4896, -12.3723, -14.3607, 0.69 ) }
    dend_51 { pt3dadd( -30.8647, -13.1284, -14.3617, 0.69 ) }
    dend_51 { pt3dadd( -32.7728, -14.074, -14.4049, 0.69 ) }
    dend_51 { pt3dadd( -35.2754, -15.2203, -14.4724, 0.69 ) }
    dend_51 { pt3dadd( -37.7289, -16.3123, -14.4859, 0.69 ) }
    dend_51 { pt3dadd( -37.7743, -16.3321, -14.4853, 0.69 ) }
    dend_51 { pt3dadd( -40.4952, -17.4374, -14.3961, 0.69 ) }
    dend_51 { pt3dadd( -42.451, -18.2072, -14.3427, 0.69 ) }
    dend_51 { pt3dadd( -44.7373, -19.0446, -14.434, 0.69 ) }
    dend_51 { pt3dadd( -46.9089, -19.8416, -14.6844, 0.69 ) }
    dend_51 { pt3dadd( -48.2891, -20.3616, -14.9796, 0.69 ) }
    dend_51 { pt3dadd( -48.334, -20.3791, -14.9917, 0.69 ) }
    dend_51 { pt3dadd( -50.4443, -21.1782, -15.7147, 0.69 ) }
    dend_51 { pt3dadd( -53.0083, -22.1078, -16.7738, 0.69 ) }
    dend_51 { pt3dadd( -55.5414, -22.9489, -17.9081, 0.69 ) }
    dend_51 { pt3dadd( -57.608, -23.5946, -18.8292, 0.69 ) }
    dend_51 { pt3dadd( -57.6346, -23.6034, -18.8396, 0.69 ) }
    dend_51 { pt3dadd( -60.4591, -24.6223, -19.7297, 0.69 ) }
    dend_51 { pt3dadd( -62.0862, -25.245, -20.1244, 0.69 ) }
    dend_51 { pt3dadd( -64.0495, -26.0489, -20.4203, 0.69 ) }
    dend_51 { pt3dadd( -65.7193, -26.7181, -20.5452, 0.69 ) }
    dend_51 { pt3dadd( -68.9016, -27.9424, -20.5579, 0.69 ) }
    dend_51 { pt3dadd( -71.5734, -28.9244, -20.4842, 0.69 ) }
    dend_51 { pt3dadd( -71.5921, -28.9311, -20.483, 0.69 ) }
    dend_51 { pt3dadd( -73.5323, -29.5464, -20.3324, 0.69 ) }
    dend_51 { pt3dadd( -75.6319, -30.1084, -20.2027, 0.69 ) }
    dend_51 { pt3dadd( -78.838, -30.7485, -20.1339, 0.69 ) }
    dend_51 { pt3dadd( -81.6344, -31.0634, -20.2289, 0.69 ) }
    dend_51 { pt3dadd( -81.6642, -31.0649, -20.2318, 0.69 ) }
    dend_51 { pt3dadd( -83.508, -31.0777, -20.4965, 0.69 ) }
    dend_51 { pt3dadd( -85.7026, -31.0286, -20.8956, 0.69 ) }
    dend_51 { pt3dadd( -88.4376, -30.8899, -21.4329, 0.69 ) }
    dend_51 { pt3dadd( -91.9127, -30.6316, -22.1188, 0.69 ) }
    dend_51 { pt3dadd( -95.1877, -30.3793, -22.7329, 0.69 ) }
    dend_51 { pt3dadd( -98.5007, -30.1493, -23.2758, 0.69 ) }
    dend_51 { pt3dadd( -102.548, -29.8833, -23.8673, 0.46 ) }
    dend_51 { pt3dadd( -106.06, -29.7112, -24.26, 0.46 ) }
    dend_51 { pt3dadd( -106.289, -29.7076, -24.2814, 0.46 ) }
    dend_51 { pt3dadd( -109.307, -29.7725, -24.5947, 0.46 ) }
    dend_51 { pt3dadd( -112.504, -30.0214, -24.9879, 0.46 ) }
    dend_51 { pt3dadd( -112.959, -30.0759, -25.0505, 0.46 ) }
    dend_51 { pt3dadd( -115.288, -30.3961, -25.4517, 0.46 ) }
    dend_51 { pt3dadd( -117.512, -30.8004, -25.9099, 0.46 ) }
    dend_51 { pt3dadd( -119.35, -31.1571, -26.3385, 0.46 ) }
    dend_51 { pt3dadd( -121.586, -31.6662, -26.9551, 0.46 ) }
    dend_51 { pt3dadd( -123.645, -32.244, -27.5953, 0.46 ) }
    dend_51 { pt3dadd( -126.726, -33.1837, -28.5738, 0.46 ) }
    dend_51 { pt3dadd( -129.395, -34.1199, -29.4398, 0.46 ) }
    dend_51 { pt3dadd( -129.412, -34.1273, -29.445, 0.46 ) }
    dend_51 { pt3dadd( -131.546, -35.1681, -30.0742, 0.46 ) }
    dend_51 { pt3dadd( -133.084, -35.9818, -30.604, 0.46 ) }
    dend_51 { pt3dadd( -133.189, -36.0437, -30.6452, 0.46 ) }
    dend_51 { pt3dadd( -134.909, -37.0985, -31.384, 0.46 ) }
    dend_51 { pt3dadd( -135.029, -37.1667, -31.4382, 0.46 ) }
    dend_51 { pt3dadd( -137.513, -38.4817, -32.8146, 0.46 ) }
    dend_51 { pt3dadd( -139.208, -39.2853, -33.9258, 0.46 ) }
    dend_51 { pt3dadd( -139.224, -39.2919, -33.9363, 0.46 ) }
    dend_51 { pt3dadd( -140.726, -39.911, -35.0346, 0.46 ) }
    dend_51 { pt3dadd( -140.741, -39.9165, -35.0471, 0.46 ) }
    dend_51 { pt3dadd( -142.767, -40.7242, -37.0538, 0.46 ) }
    dend_51 { pt3dadd( -142.826, -40.7534, -37.1538, 0.46 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 98/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -27.5185, -11.1949, -14.3989, 0.69 ) }
    dend_50 { pt3dadd( -29.706, -10.0774, -14.7698, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_50 { pt3dadd( -31.1362, -9.38517, -15.0974, 0.69 ) }
    dend_50 { pt3dadd( -33.1367, -8.41616, -15.812, 0.69 ) }
    dend_50 { pt3dadd( -34.685, -7.66536, -16.4769, 0.69 ) }
    dend_50 { pt3dadd( -37.7473, -6.36785, -17.86, 0.69 ) }
    dend_50 { pt3dadd( -40.3869, -5.34484, -19.0877, 0.69 ) }
    dend_50 { pt3dadd( -40.4736, -5.32196, -19.1313, 0.69 ) }
    dend_50 { pt3dadd( -42.955, -4.89424, -20.5016, 0.69 ) }
    dend_50 { pt3dadd( -42.9725, -4.89279, -20.5112, 0.69 ) }
    dend_50 { pt3dadd( -45.424, -4.7426, -21.8108, 0.69 ) }
    dend_50 { pt3dadd( -45.451, -4.74171, -21.8238, 0.69 ) }
    dend_50 { pt3dadd( -48.0192, -4.64827, -22.9005, 0.69 ) }
    dend_50 { pt3dadd( -49.2775, -4.60448, -23.4547, 0.69 ) }
    dend_50 { pt3dadd( -51.1793, -4.54549, -24.3197, 0.69 ) }
    dend_50 { pt3dadd( -53.3107, -4.41363, -25.4812, 0.69 ) }
    dend_50 { pt3dadd( -53.5007, -4.38666, -25.6077, 0.69 ) }
    dend_50 { pt3dadd( -55.6369, -3.87984, -27.2007, 0.69 ) }
    dend_50 { pt3dadd( -57.0823, -3.33698, -28.3566, 0.69 ) }
    dend_50 { pt3dadd( -58.6145, -2.51343, -29.5647, 0.69 ) }
    dend_50 { pt3dadd( -60.3547, -1.22101, -30.8627, 0.69 ) }
    dend_50 { pt3dadd( -61.9769, 0.298532, -31.8713, 0.69 ) }
    dend_50 { pt3dadd( -63.6343, 2.06869, -32.6712, 0.69 ) }
    dend_50 { pt3dadd( -65.2674, 4.05846, -33.2839, 0.69 ) }
    dend_50 { pt3dadd( -67.0889, 6.37763, -33.8068, 0.69 ) }
    dend_50 { pt3dadd( -68.9525, 8.65337, -34.1843, 0.69 ) }
    dend_50 { pt3dadd( -71.0462, 11.0727, -34.472, 0.69 ) }
    dend_50 { pt3dadd( -73.3343, 13.4675, -34.6957, 0.69 ) }
    dend_50 { pt3dadd( -75.3399, 15.3963, -34.8684, 0.69 ) }
    dend_50 { pt3dadd( -78.1156, 17.8226, -35.1248, 0.69 ) }
    dend_50 { pt3dadd( -81.141, 20.2028, -35.4136, 0.69 ) }
    dend_50 { pt3dadd( -81.8747, 20.6943, -35.4968, 0.69 ) }
    dend_50 { pt3dadd( -84.4628, 22.2156, -35.8045, 0.69 ) }
    dend_50 { pt3dadd( -84.489, 22.2289, -35.8082, 0.69 ) }
    dend_50 { pt3dadd( -87.3011, 23.474, -36.2214, 0.69 ) }
    dend_50 { pt3dadd( -87.3192, 23.4811, -36.2251, 0.69 ) }
    dend_50 { pt3dadd( -90.1038, 24.4952, -36.7979, 0.69 ) }
    dend_50 { pt3dadd( -90.1225, 24.5008, -36.8018, 0.69 ) }
    dend_50 { pt3dadd( -92.017, 24.9503, -37.1989, 0.69 ) }
    dend_50 { pt3dadd( -93.7613, 25.2985, -37.4224, 0.69 ) }
    dend_50 { pt3dadd( -96.2957, 25.7795, -37.4805, 0.69 ) }
    dend_50 { pt3dadd( -98.4329, 26.1859, -37.3796, 0.69 ) }
    dend_50 { pt3dadd( -101.245, 26.6994, -37.049, 0.69 ) }
    dend_50 { pt3dadd( -103.588, 27.1437, -36.7458, 0.69 ) }
    dend_50 { pt3dadd( -107.013, 27.865, -36.2622, 0.46 ) }
    dend_50 { pt3dadd( -110.058, 28.603, -35.8057, 0.46 ) }
    dend_50 { pt3dadd( -112.899, 29.4465, -35.488, 0.46 ) }
    dend_50 { pt3dadd( -116.21, 30.655, -35.3371, 0.46 ) }
    dend_50 { pt3dadd( -119.804, 32.2015, -35.2794, 0.46 ) }
    dend_50 { pt3dadd( -122.517, 33.527, -35.4726, 0.46 ) }
    dend_50 { pt3dadd( -124.293, 34.4919, -35.806, 0.46 ) }
    dend_50 { pt3dadd( -127.403, 36.312, -36.6159, 0.46 ) }
    dend_50 { pt3dadd( -130.267, 38.2212, -37.5681, 0.46 ) }
    dend_50 { pt3dadd( -130.282, 38.2324, -37.5746, 0.46 ) }
    dend_50 { pt3dadd( -132.9, 40.3241, -38.9791, 0.46 ) }
    dend_50 { pt3dadd( -133.087, 40.4691, -39.1008, 0.46 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 54/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -24.1437, 34.0803, 13.2002, 0.92 ) }
    dend_42 { pt3dadd( -22.859, 33.279, 15.3798, 0.92 ) }
    dend_42 { pt3dadd( -22.8494, 33.273, 15.3962, 0.92 ) }
    dend_42 { pt3dadd( -21.8874, 32.6729, 17.0284, 0.92 ) }
    dend_42 { pt3dadd( -21.8777, 32.6669, 17.0447, 0.92 ) }
    dend_42 { pt3dadd( -20.7929, 31.9902, 18.8853, 0.92 ) }
    dend_42 { pt3dadd( -19.7443, 31.3362, 20.6645, 0.92 ) }
    dend_42 { pt3dadd( -16.1003, 28.0673, 29.3179, 0.92 ) }
    dend_42 { pt3dadd( -13.9922, 26.2638, 38.9071, 0.92 ) }
    dend_42 { pt3dadd( -13.5702, 23.5129, 48.4693, 0.92 ) }
    dend_42 { pt3dadd( -13.7766, 18.528, 56.9795, 0.92 ) }
    dend_42 { pt3dadd( -15.3474, 13.7063, 65.4514, 0.92 ) }
    dend_42 { pt3dadd( -15.3024, 9.56185, 74.4495, 0.92 ) }
    dend_42 { pt3dadd( -15.7732, 6.29203, 83.8267, 0.92 ) }
    dend_42 { pt3dadd( -16.1001, 1.52765, 92.472, 0.92 ) }
    dend_42 { pt3dadd( -14.5384, -2.85313, 101.207, 0.92 ) }
    dend_42 { pt3dadd( -12.6183, -7.32491, 109.818, 0.92 ) }
    dend_42 { pt3dadd( -11.015, -10.2192, 119.207, 0.92 ) }
    dend_42 { pt3dadd( -10.4355, -11.8006, 129.05, 0.92 ) }
    dend_42 { pt3dadd( -8.21596, -12.9408, 138.727, 0.92 ) }
    dend_42 { pt3dadd( -5.19694, -14.0802, 148.184, 0.92 ) }
    dend_42 { pt3dadd( -1.62135, -14.4213, 157.516, 0.92 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 76/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -24.1437, 34.0803, 13.2002, 0.92 ) }
    dend_41 { pt3dadd( -24.0078, 36.0822, 13.8358, 0.92 ) }
    dend_41 { pt3dadd( -23.9229, 38.0318, 14.3942, 0.92 ) }
    dend_41 { pt3dadd( -23.9219, 40.0547, 14.8944, 0.92 ) }
    dend_41 { pt3dadd( -24.0487, 42.2958, 15.3436, 0.92 ) }
    dend_41 { pt3dadd( -24.2993, 44.4495, 15.7363, 0.92 ) }
    dend_41 { pt3dadd( -24.6567, 46.974, 16.1708, 0.92 ) }
    dend_41 { pt3dadd( -24.6624, 47.0017, 16.1753, 0.92 ) }
    dend_41 { pt3dadd( -25.0859, 48.959, 16.4783, 0.92 ) }
    dend_41 { pt3dadd( -25.6461, 51.7322, 16.9577, 0.92 ) }
    dend_41 { pt3dadd( -26.0966, 54.1795, 17.4567, 0.92 ) }
    dend_41 { pt3dadd( -26.5074, 56.8399, 18.1322, 0.69 ) }
    dend_41 { pt3dadd( -26.511, 56.867, 18.141, 0.69 ) }
    dend_41 { pt3dadd( -26.7347, 58.9243, 18.8753, 0.69 ) }
    dend_41 { pt3dadd( -26.8089, 60.6235, 19.6227, 0.69 ) }
    dend_41 { pt3dadd( -26.7272, 61.7711, 20.2878, 0.69 ) }
    dend_41 { pt3dadd( -26.7237, 61.7865, 20.299, 0.69 ) }
    dend_41 { pt3dadd( -28.3222, 70.5565, 23.795, 0.69 ) }
    dend_41 { pt3dadd( -29.3719, 79.1983, 27.8136, 0.69 ) }
    dend_41 { pt3dadd( -29.2691, 87.8323, 31.9838, 0.69 ) }
    dend_41 { pt3dadd( -30.4952, 96.1461, 36.6647, 0.69 ) }
    dend_41 { pt3dadd( -32.7922, 105.07, 39.2103, 0.69 ) }
    dend_41 { pt3dadd( -34.7764, 113.568, 43.2181, 0.69 ) }
    dend_41 { pt3dadd( -36.0353, 121.706, 48.2207, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_41 { pt3dadd( -38.248, 129.259, 53.8686, 0.69 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 1/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -7.77566, -19.2298, 7.13108, 0.92 ) }
    dend_33 { pt3dadd( -9.07715, -20.3447, 7.7617, 0.92 ) }
    dend_33 { pt3dadd( -10.3246, -21.4104, 8.4307, 0.92 ) }
    dend_33 { pt3dadd( -11.3371, -22.2875, 9.00745, 0.92 ) }
    dend_33 { pt3dadd( -12.7302, -23.5667, 9.73317, 0.92 ) }
    dend_33 { pt3dadd( -13.8071, -24.6531, 10.26, 0.92 ) }
    dend_33 { pt3dadd( -15.4687, -26.3781, 11.0211, 0.92 ) }
    dend_33 { pt3dadd( -16.1517, -27.0695, 11.2734, 0.92 ) }
    dend_33 { pt3dadd( -17.0089, -27.8564, 11.4846, 0.92 ) }
    dend_33 { pt3dadd( -18.4655, -28.9973, 11.7601, 0.92 ) }
    dend_33 { pt3dadd( -19.6768, -29.7181, 11.9356, 0.92 ) }
    dend_33 { pt3dadd( -22.4363, -30.4149, 12.2716, 0.92 ) }
    dend_33 { pt3dadd( -24.104, -30.1808, 12.348, 0.92 ) }
    dend_33 { pt3dadd( -26.3711, -29.5984, 12.5733, 0.92 ) }
    dend_33 { pt3dadd( -28.3718, -29.0733, 12.7648, 0.69 ) }
    dend_33 { pt3dadd( -30.1399, -28.5778, 12.9553, 0.69 ) }
    dend_33 { pt3dadd( -32.9957, -27.8151, 13.1309, 0.69 ) }
    dend_33 { pt3dadd( -35.9532, -27.1437, 13.0272, 0.69 ) }
    dend_33 { pt3dadd( -39.1522, -26.782, 12.5507, 0.69 ) }
    dend_33 { pt3dadd( -41.8092, -26.7901, 11.8994, 0.46 ) }
    dend_33 { pt3dadd( -41.8278, -26.7924, 11.8926, 0.46 ) }
    dend_33 { pt3dadd( -43.8423, -27.3546, 10.8552, 0.46 ) }
    dend_33 { pt3dadd( -46.0725, -28.4663, 8.90039, 0.46 ) }
    dend_33 { pt3dadd( -46.9889, -29.2255, 7.4395, 0.46 ) }
    dend_33 { pt3dadd( -56.8621, -30.6853, 7.04231, 0.46 ) }
    dend_33 { pt3dadd( -66.7176, -31.0577, 5.39444, 0.46 ) }
    dend_33 { pt3dadd( -76.6428, -32.2163, 5.34466, 0.46 ) }
    dend_33 { pt3dadd( -86.5357, -33.5831, 5.59095, 0.46 ) }
    dend_33 { pt3dadd( -96.5328, -33.4511, 5.78857, 0.46 ) }
    dend_33 { pt3dadd( -106.513, -33.3131, 5.18341, 0.46 ) }
    dend_33 { pt3dadd( -116.245, -32.3245, 3.13033, 0.46 ) }
    dend_33 { pt3dadd( -125.895, -30.0731, 2.01046, 0.46 ) }
    dend_33 { pt3dadd( -135.792, -29.1113, 0.991297, 0.46 ) }
    dend_33 { pt3dadd( -145.66, -28.8021, -0.590121, 0.46 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 35/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -7.77566, -19.2298, 7.13108, 0.69 ) }
    dend_30 { pt3dadd( -8.87739, -18.7494, 5.01009, 0.69 ) }
    dend_30 { pt3dadd( -8.88641, -18.7454, 4.99273, 0.69 ) }
    dend_30 { pt3dadd( -9.81735, -18.3395, 3.20056, 0.69 ) }
    dend_30 { pt3dadd( -9.83088, -18.3336, 3.17451, 0.69 ) }
    dend_30 { pt3dadd( -10.5061, -18.0392, 1.87459, 0.69 ) }
    dend_30 { pt3dadd( -13.9564, -15.158, -7.00781, 0.69 ) }
    dend_30 { pt3dadd( -17.3537, -12.9489, -16.1211, 0.69 ) }
    dend_30 { pt3dadd( -19.9115, -10.5274, -25.4463, 0.69 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 44/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 15.4238, -25.026, 17.792, 0.46 ) }
    dend_28 { pt3dadd( 24.5968, -28.7539, 18.4696, 0.46 ) }
    dend_28 { pt3dadd( 34.2811, -31.1036, 18.1578, 0.46 ) }
    dend_28 { pt3dadd( 43.5422, -34.5894, 19.034, 0.46 ) }
    dend_28 { pt3dadd( 53.2733, -36.2911, 20.4821, 0.46 ) }
    dend_28 { pt3dadd( 62.9898, -37.5486, 22.4412, 0.46 ) }
    dend_28 { pt3dadd( 72.902, -38.7391, 22.8611, 0.46 ) }
    dend_28 { pt3dadd( 82.8901, -38.6565, 23.3414, 0.46 ) }
    dend_28 { pt3dadd( 92.8026, -38.5353, 22.0276, 0.46 ) }
    dend_28 { pt3dadd( 102.657, -37.8884, 20.4667, 0.46 ) }
    dend_28 { pt3dadd( 112.454, -38.1785, 18.4877, 0.46 ) }
    dend_28 { pt3dadd( 122.437, -38.1654, 17.9066, 0.46 ) }
    dend_28 { pt3dadd( 132.342, -38.2375, 19.2828, 0.46 ) }
    dend_28 { pt3dadd( 141.943, -39.898, 21.4634, 0.46 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 58/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 15.4238, -25.026, 17.792, 0.46 ) }
    dend_27 { pt3dadd( 21.1206, -31.1008, 22.955, 0.46 ) }
    dend_27 { pt3dadd( 24.8306, -38.8867, 27.3216, 0.46 ) }
    dend_27 { pt3dadd( 29.8549, -46.3032, 31.0378, 0.46 ) }
    dend_27 { pt3dadd( 35.8679, -52.561, 35.5601, 0.46 ) }
    dend_27 { pt3dadd( 42.5207, -59.2275, 38.1091, 0.46 ) }
    dend_27 { pt3dadd( 49.7794, -64.6362, 41.9689, 0.46 ) }
    dend_27 { pt3dadd( 56.6858, -69.3328, 47.2472, 0.46 ) }
    dend_27 { pt3dadd( 65.0122, -72.4474, 51.7107, 0.46 ) }
    dend_27 { pt3dadd( 73.7742, -73.9254, 56.2721, 0.46 ) }
    dend_27 { pt3dadd( 82.4588, -74.058, 61.2277, 0.46 ) }
    dend_27 { pt3dadd( 90.3631, -73.6355, 67.3371, 0.46 ) }
    dend_27 { pt3dadd( 97.6771, -71.8407, 73.8896, 0.46 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 71/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 27.9924, -15.1453, 2.35819, 0.69 ) }
    dend_23 { pt3dadd( 30.8594, -15.8795, 1.73582, 0.69 ) }
    dend_23 { pt3dadd( 33.2485, -16.4694, 1.18328, 0.69 ) }
    dend_23 { pt3dadd( 36.1823, -17.2414, 0.518147, 0.69 ) }
    dend_23 { pt3dadd( 38.3123, -17.8176, 0.0353521, 0.69 ) }
    dend_23 { pt3dadd( 41.3892, -18.7101, -0.639138, 0.69 ) }
    dend_23 { pt3dadd( 44.0551, -19.5112, -1.24034, 0.69 ) }
    dend_23 { pt3dadd( 46.9427, -20.3146, -1.86123, 0.69 ) }
    dend_23 { pt3dadd( 49.5151, -20.9266, -2.40467, 0.69 ) }
    dend_23 { pt3dadd( 49.6214, -20.9447, -2.42587, 0.69 ) }
    dend_23 { pt3dadd( 52.9968, -21.2585, -3.0572, 0.69 ) }
    dend_23 { pt3dadd( 55.6132, -21.2751, -3.57609, 0.69 ) }
    dend_23 { pt3dadd( 59.4554, -21.0188, -4.37158, 0.69 ) }
    dend_23 { pt3dadd( 62.8569, -20.5686, -5.15433, 0.69 ) }
    dend_23 { pt3dadd( 66.1577, -20.0151, -6.01151, 0.69 ) }
    dend_23 { pt3dadd( 69.4111, -19.4215, -6.91993, 0.69 ) }
    dend_23 { pt3dadd( 72.4684, -18.8034, -7.86325, 0.69 ) }
    dend_23 { pt3dadd( 72.5337, -18.7902, -7.8842, 0.69 ) }
    dend_23 { pt3dadd( 76.1399, -18.1508, -9.15821, 0.69 ) }
    dend_23 { pt3dadd( 80.1465, -17.5525, -10.6327, 0.69 ) }
    dend_23 { pt3dadd( 83.4886, -17.1997, -11.9426, 0.69 ) }
    dend_23 { pt3dadd( 86.5617, -16.961, -13.1566, 0.69 ) }
    dend_23 { pt3dadd( 88.4167, -16.8874, -13.8735, 0.69 ) }
    dend_23 { pt3dadd( 91.7965, -16.8595, -15.1783, 0.69 ) }
    dend_23 { pt3dadd( 91.8152, -16.8599, -15.1855, 0.69 ) }
    dend_23 { pt3dadd( 95.509, -17.0623, -16.6373, 0.69 ) }
    dend_23 { pt3dadd( 99.2682, -17.4451, -18.0419, 0.46 ) }
    dend_23 { pt3dadd( 102.762, -18.0108, -19.3193, 0.46 ) }
    dend_23 { pt3dadd( 105.125, -18.4984, -20.1806, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_23 { pt3dadd( 105.171, -18.5089, -20.1966, 0.46 ) }
    dend_23 { pt3dadd( 108.486, -19.3032, -21.3066, 0.46 ) }
    dend_23 { pt3dadd( 111.551, -20.135, -22.2436, 0.46 ) }
    dend_23 { pt3dadd( 114.788, -21.0898, -23.2633, 0.23 ) }
    dend_23 { pt3dadd( 114.897, -21.1232, -23.2975, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 5/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 27.9924, -15.1453, 2.35819, 0.69 ) }
    dend_22 { pt3dadd( 26.9107, -15.8961, 0.651016, 0.69 ) }
    dend_22 { pt3dadd( 24.8107, -17.3536, -2.66331, 0.69 ) }
    dend_22 { pt3dadd( 23.8271, -18.0363, -4.21578, 0.69 ) }
    dend_22 { pt3dadd( 23.7872, -18.064, -4.27872, 0.69 ) }
    dend_22 { pt3dadd( 22.507, -18.9526, -6.2992, 0.69 ) }
    dend_22 { pt3dadd( 22.3914, -19.0328, -6.48167, 0.69 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 12/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 13.6158, -7.225, 1.57352, 0.69 ) }
    dend_19 { pt3dadd( 13.8387, -8.13316, 3.16966, 0.69 ) }
    dend_19 { pt3dadd( 14.2697, -9.17543, 5.09526, 0.69 ) }
    dend_19 { pt3dadd( 15.2393, -10.5072, 7.59685, 0.69 ) }
    dend_19 { pt3dadd( 15.2623, -10.53, 7.63425, 0.69 ) }
    dend_19 { pt3dadd( 16.5722, -11.5885, 9.3085, 0.69 ) }
    dend_19 { pt3dadd( 17.2123, -12.0671, 10.0516, 0.69 ) }
    dend_19 { pt3dadd( 18.6251, -12.9652, 11.4637, 0.69 ) }
    dend_19 { pt3dadd( 20.3215, -13.9215, 12.8998, 0.69 ) }
    dend_19 { pt3dadd( 22.3407, -14.8942, 14.3668, 0.46 ) }
    dend_19 { pt3dadd( 24.6713, -15.9461, 15.9627, 0.46 ) }
    dend_19 { pt3dadd( 24.6954, -15.9557, 15.9774, 0.46 ) }
    dend_19 { pt3dadd( 26.938, -16.8922, 17.48, 0.46 ) }
    dend_19 { pt3dadd( 34.4475, -20.6676, 22.7538, 0.46 ) }
    dend_19 { pt3dadd( 42.8379, -23.2321, 27.4776, 0.46 ) }
    dend_19 { pt3dadd( 51.5497, -25.8756, 31.5225, 0.46 ) }
    dend_19 { pt3dadd( 61.0316, -27.5391, 34.1733, 0.46 ) }
    dend_19 { pt3dadd( 70.6209, -29.619, 35.9766, 0.46 ) }
    dend_19 { pt3dadd( 79.8262, -32.8468, 37.9049, 0.46 ) }
    dend_19 { pt3dadd( 88.9077, -36.6517, 39.1236, 0.46 ) }
    dend_19 { pt3dadd( 97.9944, -40.3263, 40.6954, 0.46 ) }
    dend_19 { pt3dadd( 107.419, -42.6439, 42.9819, 0.46 ) }
    dend_19 { pt3dadd( 116.315, -46.4646, 45.1459, 0.46 ) }
    dend_19 { pt3dadd( 125.479, -49.6485, 47.3361, 0.46 ) }
    dend_19 { pt3dadd( 134.485, -52.1519, 50.7929, 0.46 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 13.6158, -7.225, 1.57352, 0.92 ) }
    dend_18 { pt3dadd( 12.1598, -8.53714, 4.09019, 0.92 ) }
    dend_18 { pt3dadd( 11.6711, -8.97758, 4.93494, 0.92 ) }
    dend_18 { pt3dadd( 11.1496, -9.44749, 5.83623, 0.69 ) }
    dend_18 { pt3dadd( 10.8918, -9.67984, 6.28188, 0.69 ) }
    dend_18 { pt3dadd( 10.0467, -10.4414, 7.74258, 0.69 ) }
    dend_18 { pt3dadd( 10.0376, -10.4496, 7.75822, 0.69 ) }
    dend_18 { pt3dadd( 5.53257, -14.3503, 15.6857, 0.69 ) }
    // Section: dend_14, id: dend_14, parent: dend_8 (entry count 45/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 18.7503, -8.67188, 2.58347, 0.92 ) }
    dend_14 { pt3dadd( 20.9547, -9.08253, 3.02882, 0.92 ) }
    dend_14 { pt3dadd( 24.0474, -9.74619, 3.6122, 0.92 ) }
    dend_14 { pt3dadd( 25.4839, -10.0866, 3.88134, 0.92 ) }
    dend_14 { pt3dadd( 27.2114, -10.537, 4.18249, 0.92 ) }
    dend_14 { pt3dadd( 28.9396, -11.0038, 4.52578, 0.92 ) }
    dend_14 { pt3dadd( 30.9473, -11.5426, 5.00139, 0.92 ) }
    dend_14 { pt3dadd( 31.2132, -11.6258, 5.07694, 0.92 ) }
    dend_14 { pt3dadd( 33.227, -12.3201, 5.70263, 0.92 ) }
    dend_14 { pt3dadd( 35.2032, -13.0392, 6.41322, 0.92 ) }
    dend_14 { pt3dadd( 37.1373, -13.7385, 7.11747, 0.92 ) }
    dend_14 { pt3dadd( 38.6892, -14.2995, 7.59984, 0.92 ) }
    dend_14 { pt3dadd( 40.5958, -15.004, 8.06832, 0.92 ) }
    dend_14 { pt3dadd( 40.6232, -15.0141, 8.07448, 0.92 ) }
    dend_14 { pt3dadd( 42.5911, -15.7717, 8.42834, 0.92 ) }
    dend_14 { pt3dadd( 44.8603, -16.6748, 8.66699, 0.92 ) }
    dend_14 { pt3dadd( 46.9315, -17.5447, 8.56881, 0.92 ) }
    dend_14 { pt3dadd( 48.2801, -18.1177, 8.32767, 0.92 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 63/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 18.7503, -8.67188, 2.58347, 1.38 ) }
    dend_9 { pt3dadd( 19.0307, -10.4031, 1.78312, 1.38 ) }
    dend_9 { pt3dadd( 19.3251, -12.2378, 0.94181, 1.15 ) }
    dend_9 { pt3dadd( 19.5456, -13.8863, 0.216555, 1.15 ) }
    dend_9 { pt3dadd( 19.727, -15.305, -0.351262, 0.92 ) }
    dend_9 { pt3dadd( 19.9326, -17.0393, -1.00664, 0.92 ) }
    dend_9 { pt3dadd( 20.098, -18.7827, -1.64543, 1.15 ) }
    dend_9 { pt3dadd( 20.1643, -19.6277, -1.92974, 1.15 ) }
    dend_9 { pt3dadd( 20.3152, -21.8131, -2.58193, 1.15 ) }
    dend_9 { pt3dadd( 20.4465, -23.7043, -3.10271, 1.15 ) }
    dend_9 { pt3dadd( 20.5422, -25.3827, -3.53612, 1.15 ) }
    dend_9 { pt3dadd( 20.6469, -27.6918, -4.13356, 1.15 ) }
    dend_9 { pt3dadd( 20.7563, -29.8301, -4.64841, 0.92 ) }
    dend_9 { pt3dadd( 20.8313, -31.3539, -4.98934, 0.92 ) }
    dend_9 { pt3dadd( 20.9004, -33.0451, -5.36419, 0.92 ) }
    dend_9 { pt3dadd( 20.9089, -34.7171, -5.729, 0.92 ) }
    dend_9 { pt3dadd( 20.9083, -34.7357, -5.73287, 0.92 ) }
    dend_9 { pt3dadd( 20.7832, -36.0623, -6.01441, 1.15 ) }
    dend_9 { pt3dadd( 20.4711, -37.9421, -6.29743, 1.15 ) }
    dend_9 { pt3dadd( 20.0614, -39.7195, -6.52097, 0.92 ) }
    dend_9 { pt3dadd( 19.7191, -40.9431, -6.67101, 0.92 ) }
    dend_9 { pt3dadd( 19.008, -43.4232, -7.06518, 0.92 ) }
    dend_9 { pt3dadd( 18.3848, -45.522, -7.4075, 0.92 ) }
    dend_9 { pt3dadd( 17.5553, -48.1486, -7.85816, 0.92 ) }
    dend_9 { pt3dadd( 16.9126, -50.0903, -8.20067, 0.92 ) }
    dend_9 { pt3dadd( 16.2481, -52.0666, -8.52734, 1.15 ) }
    dend_9 { pt3dadd( 15.3512, -54.8514, -9.04598, 1.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 90/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 17.1807, 25.1289, 10.4191, 0.92 ) }
    dend_6 { pt3dadd( 17.5127, 23.0115, 12.4205, 0.92 ) }
    dend_6 { pt3dadd( 17.8095, 21.1188, 14.2095, 0.69 ) }
    dend_6 { pt3dadd( 18.0857, 19.3568, 15.875, 0.69 ) }
    dend_6 { pt3dadd( 18.4173, 17.2423, 17.8738, 0.69 ) }
    dend_6 { pt3dadd( 18.4483, 17.0444, 18.0608, 0.69 ) }
    dend_6 { pt3dadd( 18.9029, 10.7619, 25.548, 0.69 ) }
    dend_6 { pt3dadd( 20.0539, 4.44418, 32.927, 0.69 ) }
    dend_6 { pt3dadd( 20.4905, -2.05162, 40.2109, 0.69 ) }
    dend_6 { pt3dadd( 19.2076, -8.30636, 47.6275, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_6 { pt3dadd( 18.434, -15.5247, 54.0827, 0.69 ) }
    dend_6 { pt3dadd( 18.1038, -22.1213, 61.2711, 0.69 ) }
    dend_6 { pt3dadd( 18.623, -28.4761, 68.6862, 0.69 ) }
    dend_6 { pt3dadd( 19.6688, -35.2053, 75.6671, 0.69 ) }
    dend_6 { pt3dadd( 19.7615, -40.8065, 83.7435, 0.69 ) }
    dend_6 { pt3dadd( 18.394, -46.5423, 91.5969, 0.69 ) }
    dend_6 { pt3dadd( 17.7763, -52.2961, 99.5301, 0.69 ) }
    dend_6 { pt3dadd( 16.7356, -57.8561, 107.572, 0.69 ) }
    dend_6 { pt3dadd( 17.0219, -64.4555, 114.759, 0.69 ) }
    dend_6 { pt3dadd( 19.1597, -69.468, 122.98, 0.69 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 10/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 17.1807, 25.1289, 10.4191, 0.92 ) }
    dend_5 { pt3dadd( 17.6361, 26.872, 11.9587, 0.92 ) }
    dend_5 { pt3dadd( 18.1221, 28.7322, 13.6017, 0.69 ) }
    dend_5 { pt3dadd( 18.6908, 30.9088, 15.5242, 0.69 ) }
    dend_5 { pt3dadd( 19.0629, 32.3329, 16.782, 0.69 ) }
    dend_5 { pt3dadd( 19.4784, 33.9231, 18.1865, 0.69 ) }
    dend_5 { pt3dadd( 20.4111, 41.6579, 23.9172, 0.69 ) }
    dend_5 { pt3dadd( 21.984, 48.1285, 31.068, 0.69 ) }
    dend_5 { pt3dadd( 24.6067, 54.4932, 38.0133, 0.69 ) }
    dend_5 { pt3dadd( 27.3928, 60.6442, 45.1065, 0.69 ) }
    dend_5 { pt3dadd( 30.127, 65.447, 53.2898, 0.69 ) }
    dend_5 { pt3dadd( 31.2619, 71.276, 61.1041, 0.69 ) }
    dend_5 { pt3dadd( 31.314, 77.9375, 68.2335, 0.69 ) }
    dend_5 { pt3dadd( 30.2178, 83.3362, 76.3885, 0.69 ) }
    dend_5 { pt3dadd( 29.7928, 88.0393, 85.0666, 0.69 ) }
    dend_5 { pt3dadd( 28.5999, 92.4999, 93.8148, 0.69 ) }
    dend_5 { pt3dadd( 27.4909, 96.5837, 102.775, 0.69 ) }
    dend_5 { pt3dadd( 25.8166, 101.727, 111.015, 0.69 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 28/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 89.5472, -7.56296, 4.23271, 0.69 ) }
    dend_3 { pt3dadd( 91.1715, -8.6614, 4.81688, 0.69 ) }
    dend_3 { pt3dadd( 92.7933, -9.76756, 5.48832, 0.69 ) }
    dend_3 { pt3dadd( 94.2831, -10.7989, 6.14916, 0.69 ) }
    dend_3 { pt3dadd( 95.8264, -11.8449, 6.87796, 0.69 ) }
    dend_3 { pt3dadd( 97.4116, -12.907, 7.64876, 0.69 ) }
    dend_3 { pt3dadd( 97.4269, -12.9169, 7.65642, 0.69 ) }
    dend_3 { pt3dadd( 98.8322, -13.8014, 8.48956, 0.69 ) }
    dend_3 { pt3dadd( 98.9998, -13.9174, 8.59361, 0.69 ) }
    dend_3 { pt3dadd( 100.441, -15.1053, 9.73182, 0.69 ) }
    dend_3 { pt3dadd( 100.458, -15.1225, 9.74772, 0.69 ) }
    dend_3 { pt3dadd( 101.599, -16.3931, 10.785, 0.69 ) }
    dend_3 { pt3dadd( 102.756, -17.6814, 11.8397, 0.69 ) }
    dend_3 { pt3dadd( 103.508, -18.5136, 12.5231, 0.46 ) }
    dend_3 { pt3dadd( 104.652, -19.8846, 13.6317, 0.46 ) }
    dend_3 { pt3dadd( 111.633, -25.0111, 18.3371, 0.46 ) }
    dend_3 { pt3dadd( 117.342, -30.6521, 24.0069, 0.46 ) }
    dend_3 { pt3dadd( 122.996, -36.1175, 29.9177, 0.46 ) }
    dend_3 { pt3dadd( 128.612, -39.7999, 37.2272, 0.46 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 47/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 89.5472, -7.56296, 4.23271, 0.92 ) }
    dend_2 { pt3dadd( 91.7244, -8.24228, 3.65935, 0.92 ) }
    dend_2 { pt3dadd( 93.5927, -8.80945, 3.13598, 0.92 ) }
    dend_2 { pt3dadd( 96.7071, -9.79175, 2.20946, 0.92 ) }
    dend_2 { pt3dadd( 98.9935, -10.5258, 1.50913, 0.69 ) }
    dend_2 { pt3dadd( 100.602, -11.0635, 0.985442, 0.69 ) }
    dend_2 { pt3dadd( 100.629, -11.0728, 0.976593, 0.69 ) }
    dend_2 { pt3dadd( 102.505, -11.7912, 0.300088, 0.69 ) }
    dend_2 { pt3dadd( 104.703, -12.5646, -0.523398, 0.69 ) }
    dend_2 { pt3dadd( 104.721, -12.5707, -0.530283, 0.69 ) }
    dend_2 { pt3dadd( 106.398, -13.133, -1.14908, 0.69 ) }
    dend_2 { pt3dadd( 108.381, -13.8216, -1.91108, 0.69 ) }
    dend_2 { pt3dadd( 111.043, -14.7589, -2.93601, 0.69 ) }
    dend_2 { pt3dadd( 113.639, -15.6376, -3.94253, 0.69 ) }
    dend_2 { pt3dadd( 115.631, -16.31, -4.70382, 0.69 ) }
    dend_2 { pt3dadd( 115.833, -16.3834, -4.78104, 0.69 ) }
    dend_2 { pt3dadd( 117.702, -17.0561, -5.39862, 0.69 ) }
    dend_2 { pt3dadd( 119.189, -17.5999, -5.84915, 0.69 ) }
    dend_2 { pt3dadd( 121.442, -18.4118, -6.31859, 0.69 ) }
    dend_2 { pt3dadd( 124.944, -19.6513, -6.69725, 0.69 ) }
    dend_2 { pt3dadd( 127.82, -20.6111, -6.81308, 0.69 ) }
    dend_2 { pt3dadd( 131.198, -21.753, -6.7832, 0.69 ) }
    dend_2 { pt3dadd( 131.217, -21.7593, -6.78254, 0.69 ) }
    dend_2 { pt3dadd( 134.924, -23.0636, -6.60749, 0.69 ) }
    dend_2 { pt3dadd( 137.292, -23.9401, -6.4914, 0.69 ) }
    dend_2 { pt3dadd( 137.311, -23.9469, -6.49059, 0.69 ) }
    dend_2 { pt3dadd( 139.964, -25.0064, -6.53882, 0.69 ) }
    dend_2 { pt3dadd( 141.892, -26.0022, -6.91646, 0.69 ) }
    dend_2 { pt3dadd( 141.908, -26.0123, -6.92205, 0.69 ) }
    dend_2 { pt3dadd( 143.469, -27.2423, -7.81716, 0.69 ) }
    dend_2 { pt3dadd( 143.489, -27.2597, -7.83044, 0.69 ) }
    dend_2 { pt3dadd( 144.866, -28.5404, -8.77838, 0.69 ) }
    dend_2 { pt3dadd( 146.304, -29.9156, -9.78082, 0.69 ) }
    dend_2 { pt3dadd( 147.627, -31.1802, -10.6139, 0.69 ) }
    dend_2 { pt3dadd( 147.646, -31.1991, -10.6257, 0.69 ) }
    dend_2 { pt3dadd( 149.433, -32.9701, -11.6829, 0.69 ) }
    dend_2 { pt3dadd( 149.445, -32.9831, -11.6905, 0.69 ) }
    dend_2 { pt3dadd( 151.781, -35.4456, -13.1561, 0.69 ) }
    dend_2 { pt3dadd( 153.413, -37.2131, -14.1872, 0.69 ) }
    dend_2 { pt3dadd( 155.297, -39.2776, -15.4187, 0.69 ) }
    dend_2 { pt3dadd( 156.906, -41.1072, -16.4871, 0.69 ) }
    dend_2 { pt3dadd( 158.666, -43.1844, -17.6752, 0.69 ) }
    dend_2 { pt3dadd( 160.251, -45.1022, -18.7843, 0.69 ) }
    dend_2 { pt3dadd( 161.858, -47.1453, -19.9796, 0.69 ) }
    dend_2 { pt3dadd( 162.797, -48.3477, -20.728, 0.69 ) }
    dend_2 { pt3dadd( 164.295, -50.1964, -21.9517, 0.69 ) }
    dend_2 { pt3dadd( 164.306, -50.2097, -21.9609, 0.69 ) }
    dend_2 { pt3dadd( 165.916, -52.0659, -23.2893, 0.69 ) }
    dend_2 { pt3dadd( 167.199, -53.5088, -24.3199, 0.69 ) }
    dend_2 { pt3dadd( 168.464, -54.825, -25.2512, 0.69 ) }
    dend_2 { pt3dadd( 170.037, -56.3408, -26.2728, 0.69 ) }
    dend_2 { pt3dadd( 170.05, -56.3523, -26.2814, 0.69 ) }
    dend_2 { pt3dadd( 172.097, -58.0351, -27.5684, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_2 { pt3dadd( 172.111, -58.0455, -27.5777, 0.69 ) }
    dend_2 { pt3dadd( 173.97, -59.366, -28.7982, 0.69 ) }
    dend_2 { pt3dadd( 176.082, -60.8208, -30.1978, 0.46 ) }
    dend_2 { pt3dadd( 178.022, -62.1219, -31.573, 0.46 ) }
    dend_2 { pt3dadd( 178.036, -62.1311, -31.5835, 0.46 ) }
    dend_2 { pt3dadd( 180.186, -63.4312, -33.4096, 0.46 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 6/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -19.9115, -10.5274, -25.4463, 0.69 ) }
    dend_32 { pt3dadd( -18.0016, -9.67025, -35.2207, 0.69 ) }
    dend_32 { pt3dadd( -17.1057, -8.7671, -45.135, 0.69 ) }
    dend_32 { pt3dadd( -17.8043, -9.35832, -55.0911, 0.69 ) }
    dend_32 { pt3dadd( -17.8656, -8.85099, -65.0767, 0.69 ) }
    dend_32 { pt3dadd( -19.9089, -8.47062, -74.8575, 0.69 ) }
    dend_32 { pt3dadd( -22.2391, -9.5718, -84.5129, 0.69 ) }
    dend_32 { pt3dadd( -24.3505, -10.2795, -94.259, 0.69 ) }
    dend_32 { pt3dadd( -24.8525, -10.9965, -104.218, 0.69 ) }
    dend_32 { pt3dadd( -25.2687, -11.2732, -114.205, 0.69 ) }
    dend_32 { pt3dadd( -24.5058, -12.8916, -124.029, 0.69 ) }
    dend_32 { pt3dadd( -25.0098, -14.4148, -133.887, 0.69 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 18/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -19.9115, -10.5274, -25.4463, 0.69 ) }
    dend_31 { pt3dadd( -24.9173, -7.72946, -33.5868, 0.69 ) }
    dend_31 { pt3dadd( -30.1417, -5.87494, -41.8871, 0.69 ) }
    dend_31 { pt3dadd( -35.4646, -2.46683, -49.555, 0.69 ) }
    dend_31 { pt3dadd( -40.09, 1.84561, -57.1707, 0.69 ) }
    dend_31 { pt3dadd( -45.482, 7.12434, -63.4993, 0.69 ) }
    dend_31 { pt3dadd( -51.4487, 12.1376, -69.5451, 0.69 ) }
    dend_31 { pt3dadd( -57.7161, 16.0776, -76.1419, 0.69 ) }
    dend_31 { pt3dadd( -62.8897, 21.2579, -82.7374, 0.69 ) }
    dend_31 { pt3dadd( -68.3893, 25.2511, -89.9545, 0.69 ) }
    dend_31 { pt3dadd( -72.6759, 28.4187, -98.3513, 0.69 ) }
    dend_31 { pt3dadd( -76.3071, 30.0341, -107.512, 0.69 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 30/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 48.2801, -18.1177, 8.32767, 0.92 ) }
    dend_16 { pt3dadd( 49.7774, -19.4649, 8.84541, 0.92 ) }
    dend_16 { pt3dadd( 52.1589, -21.4999, 9.44894, 0.92 ) }
    dend_16 { pt3dadd( 54.1233, -23.2204, 9.82969, 0.92 ) }
    dend_16 { pt3dadd( 56.0796, -24.9184, 10.1405, 0.69 ) }
    dend_16 { pt3dadd( 57.4351, -26.0743, 10.3171, 0.69 ) }
    dend_16 { pt3dadd( 58.7249, -27.198, 10.442, 0.69 ) }
    dend_16 { pt3dadd( 60.1288, -28.3687, 10.4284, 0.46 ) }
    dend_16 { pt3dadd( 61.7223, -29.7988, 10.143, 0.46 ) }
    dend_16 { pt3dadd( 62.1857, -30.261, 9.98616, 0.46 ) }
    dend_16 { pt3dadd( 63.2094, -31.3639, 9.4983, 0.46 ) }
    dend_16 { pt3dadd( 63.9066, -32.2627, 9.07596, 0.46 ) }
    dend_16 { pt3dadd( 63.963, -32.3545, 9.03252, 0.46 ) }
    dend_16 { pt3dadd( 64.9403, -34.2435, 7.84314, 0.46 ) }
    dend_16 { pt3dadd( 64.9923, -34.3827, 7.71728, 0.46 ) }
    dend_16 { pt3dadd( 71.5199, -41.3797, 5.94454, 0.46 ) }
    dend_16 { pt3dadd( 77.8472, -48.7298, 6.27002, 0.46 ) }
    dend_16 { pt3dadd( 83.6178, -56.4562, 5.52556, 0.46 ) }
    dend_16 { pt3dadd( 90.2523, -63.4833, 6.65135, 0.46 ) }
    dend_16 { pt3dadd( 96.6734, -70.7492, 6.12855, 0.46 ) }
    dend_16 { pt3dadd( 101.186, -79.0782, 4.46385, 0.46 ) }
    dend_16 { pt3dadd( 106.827, -86.9026, 3.87625, 0.46 ) }
    dend_16 { pt3dadd( 112.289, -94.649, 1.96071, 0.46 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 53/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 48.2801, -18.1177, 8.32767, 0.92 ) }
    dend_15 { pt3dadd( 50.1798, -17.2374, 8.97342, 0.92 ) }
    dend_15 { pt3dadd( 52.5164, -16.2129, 9.59059, 0.92 ) }
    dend_15 { pt3dadd( 52.5432, -16.2013, 9.59609, 0.92 ) }
    dend_15 { pt3dadd( 55.1007, -15.1049, 10.2791, 0.92 ) }
    dend_15 { pt3dadd( 57.2229, -14.1828, 11.0644, 0.92 ) }
    dend_15 { pt3dadd( 59.1355, -13.3518, 11.7721, 0.69 ) }
    dend_15 { pt3dadd( 60.8686, -12.5727, 12.3974, 0.69 ) }
    dend_15 { pt3dadd( 63.0471, -11.5521, 13.2416, 0.69 ) }
    dend_15 { pt3dadd( 65.6231, -10.3898, 14.32, 0.69 ) }
    dend_15 { pt3dadd( 67.9459, -9.45283, 15.5206, 0.69 ) }
    dend_15 { pt3dadd( 75.6376, -3.56121, 17.0623, 0.69 ) }
    dend_15 { pt3dadd( 83.1295, 1.75295, 20.6092, 0.69 ) }
    dend_15 { pt3dadd( 90.6733, 6.79346, 24.4744, 0.69 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 67/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 15.3512, -54.8514, -9.04598, 0.69 ) }
    dend_11 { pt3dadd( 14.8529, -56.19, -9.16267, 0.69 ) }
    dend_11 { pt3dadd( 14.4896, -57.2274, -9.4493, 0.69 ) }
    dend_11 { pt3dadd( 14.1239, -58.2956, -9.81816, 0.69 ) }
    dend_11 { pt3dadd( 13.6116, -59.7623, -10.407, 0.92 ) }
    dend_11 { pt3dadd( 13.203, -60.9646, -10.9328, 0.92 ) }
    dend_11 { pt3dadd( 12.4992, -63.0486, -11.8436, 0.92 ) }
    dend_11 { pt3dadd( 11.781, -65.3599, -12.902, 0.92 ) }
    dend_11 { pt3dadd( 11.7767, -65.3768, -12.91, 0.92 ) }
    dend_11 { pt3dadd( 11.2997, -67.3818, -13.9534, 0.92 ) }
    dend_11 { pt3dadd( 10.9311, -68.9747, -14.8315, 0.92 ) }
    dend_11 { pt3dadd( 10.7238, -70.001, -15.4132, 0.92 ) }
    dend_11 { pt3dadd( 10.5866, -70.9477, -15.9496, 0.92 ) }
    dend_11 { pt3dadd( 10.4303, -72.2477, -16.6691, 0.69 ) }
    dend_11 { pt3dadd( 10.2497, -75.3392, -18.4004, 0.69 ) }
    dend_11 { pt3dadd( 10.2498, -75.3559, -18.41, 0.69 ) }
    dend_11 { pt3dadd( 10.3326, -77.9045, -19.9525, 0.69 ) }
    dend_11 { pt3dadd( 10.4337, -79.9272, -21.2378, 0.69 ) }
    dend_11 { pt3dadd( 10.4346, -79.9434, -21.2483, 0.69 ) }
    dend_11 { pt3dadd( 10.5526, -81.7464, -22.3877, 0.69 ) }
    dend_11 { pt3dadd( 10.5565, -81.771, -22.4023, 0.69 ) }
    dend_11 { pt3dadd( 11.0308, -84.4222, -23.9359, 0.69 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 15.3512, -54.8514, -9.04598, 0.69 ) }
    dend_10 { pt3dadd( 16.4962, -54.7819, -10.794, 0.69 ) }
    dend_10 { pt3dadd( 17.5941, -54.685, -12.2608, 0.69 ) }
    dend_10 { pt3dadd( 20.0633, -54.4362, -15.3713, 0.69 ) }
    dend_10 { pt3dadd( 20.0768, -54.4352, -15.3859, 0.69 ) }
    dend_10 { pt3dadd( 22.5457, -54.3656, -17.6964, 0.69 ) }
    dend_10 { pt3dadd( 22.5607, -54.3655, -17.7096, 0.69 ) }
    dend_10 { pt3dadd( 23.7635, -54.2912, -18.825, 0.69 ) }
    dend_10 { pt3dadd( 23.8015, -54.2881, -18.8574, 0.69 ) }
    dend_10 { pt3dadd( 25.8496, -54.3016, -20.1333, 0.69 ) }
    dend_10 { pt3dadd( 28.3812, -54.3921, -21.5738, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_10 { pt3dadd( 28.3994, -54.394, -21.5819, 0.69 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 1/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 11.0308, -84.4222, -23.9359, 0.69 ) }
    dend_13 { pt3dadd( 10.9257, -86.4978, -24.2551, 0.69 ) }
    dend_13 { pt3dadd( 10.7819, -89.3016, -24.7056, 0.69 ) }
    dend_13 { pt3dadd( 10.7798, -89.3486, -24.7127, 0.69 ) }
    dend_13 { pt3dadd( 10.7077, -92.0779, -25.1042, 0.69 ) }
    dend_13 { pt3dadd( 10.706, -92.1719, -25.1181, 0.69 ) }
    dend_13 { pt3dadd( 10.7452, -95.1532, -25.554, 0.69 ) }
    dend_13 { pt3dadd( 10.953, -98.2254, -26.0465, 0.69 ) }
    dend_13 { pt3dadd( 11.2389, -101.182, -26.5441, 0.69 ) }
    dend_13 { pt3dadd( 11.5034, -103.372, -26.9424, 0.69 ) }
    dend_13 { pt3dadd( 11.554, -103.714, -27.0105, 0.69 ) }
    dend_13 { pt3dadd( 11.9483, -105.949, -27.4898, 0.69 ) }
    dend_13 { pt3dadd( 12.5396, -108.357, -28.0492, 0.69 ) }
    dend_13 { pt3dadd( 12.5986, -108.553, -28.0953, 0.69 ) }
    dend_13 { pt3dadd( 13.2856, -110.626, -28.5803, 0.69 ) }
    dend_13 { pt3dadd( 13.318, -110.723, -28.6019, 0.69 ) }
    dend_13 { pt3dadd( 13.8198, -112.307, -28.9242, 0.69 ) }
    dend_13 { pt3dadd( 14.7491, -115.423, -29.5071, 0.69 ) }
    dend_13 { pt3dadd( 14.7574, -115.451, -29.5114, 0.69 ) }
    dend_13 { pt3dadd( 15.2556, -117.399, -29.7772, 0.69 ) }
    dend_13 { pt3dadd( 15.268, -117.454, -29.7841, 0.69 ) }
    dend_13 { pt3dadd( 15.5259, -119.462, -30.0482, 0.69 ) }
    dend_13 { pt3dadd( 15.5158, -121.72, -30.451, 0.69 ) }
    dend_13 { pt3dadd( 15.5123, -121.748, -30.4571, 0.69 ) }
    dend_13 { pt3dadd( 14.9147, -125.495, -31.3066, 0.69 ) }
    dend_13 { pt3dadd( 14.9006, -125.559, -31.322, 0.69 ) }
    dend_13 { pt3dadd( 13.9808, -128.986, -32.1753, 0.69 ) }
    dend_13 { pt3dadd( 13.1708, -131.152, -32.7601, 0.69 ) }
    dend_13 { pt3dadd( 13.1586, -131.177, -32.7681, 0.69 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 30/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 11.0308, -84.4222, -23.9359, 0.69 ) }
    dend_12 { pt3dadd( 12.0486, -85.9056, -26.1183, 0.69 ) }
    dend_12 { pt3dadd( 12.8887, -87.1119, -28.1744, 0.69 ) }
    dend_12 { pt3dadd( 13.7818, -88.3386, -30.5413, 0.69 ) }
    dend_12 { pt3dadd( 14.7399, -89.6277, -33.1702, 0.69 ) }
    dend_12 { pt3dadd( 14.7489, -89.6394, -33.1961, 0.69 ) }
    dend_12 { pt3dadd( 15.6207, -90.754, -35.7958, 0.69 ) }
    dend_12 { pt3dadd( 16.307, -91.6098, -38.2582, 0.69 ) }
    dend_12 { pt3dadd( 17.0544, -92.4154, -40.9853, 0.69 ) }
    dend_12 { pt3dadd( 17.0662, -92.4268, -41.0324, 0.69 ) }
    dend_12 { pt3dadd( 17.6581, -92.9182, -43.4466, 0.69 ) }
    dend_12 { pt3dadd( 17.6871, -92.9373, -43.5613, 0.69 ) }
    dend_12 { pt3dadd( 18.4482, -93.2258, -46.1352, 0.69 ) }
    dend_12 { pt3dadd( 18.4866, -93.2336, -46.2486, 0.69 ) }
    dend_12 { pt3dadd( 20.2868, -93.3306, -50.7139, 0.69 ) }
    dend_12 { pt3dadd( 20.295, -93.3306, -50.7321, 0.69 ) }
    dend_12 { pt3dadd( 22.3077, -93.1969, -54.2799, 0.69 ) }
    dend_12 { pt3dadd( 23.9342, -93.025, -56.4818, 0.69 ) }
    dend_12 { pt3dadd( 23.9743, -93.0195, -56.526, 0.69 ) }
    dend_12 { pt3dadd( 26.3136, -92.6831, -58.7227, 0.69 ) }
    dend_12 { pt3dadd( 26.3369, -92.6796, -58.7412, 0.69 ) }
    dend_12 { pt3dadd( 29.7881, -92.169, -61.3175, 0.69 ) }
    dend_12 { pt3dadd( 32.9641, -91.7279, -63.4127, 0.69 ) }
    dend_12 { pt3dadd( 33.1063, -91.7096, -63.5039, 0.69 ) }
    dend_12 { pt3dadd( 35.9741, -91.3525, -65.3128, 0.69 ) }
    dend_12 { pt3dadd( 38.5024, -91.062, -66.8533, 0.69 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_44, dend_39, dend_35, dend_34, dend_25, dend_20, dend_7, dend_0, dend_49, dend_48, dend_46, dend_45, dend_43, dend_40, dend_38, dend_37, dend_36, dend_29, dend_26, dend_24, dend_21, dend_17, dend_8, dend_4, dend_1, dend_51, dend_50, dend_42, dend_41, dend_33, dend_30, dend_28, dend_27, dend_23, dend_22, dend_19, dend_18, dend_14, dend_9, dend_6, dend_5, dend_3, dend_2, dend_32, dend_31, dend_16, dend_15, dend_11, dend_10, dend_13, dend_12]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_44, dend_39, dend_35, dend_34, dend_25, dend_20, dend_7, dend_0, dend_49, dend_48, dend_46, dend_45, dend_43, dend_40, dend_38, dend_37, dend_36, dend_29, dend_26, dend_24, dend_21, dend_17, dend_8, dend_4, dend_1, dend_51, dend_50, dend_42, dend_41, dend_33, dend_30, dend_28, dend_27, dend_23, dend_22, dend_19, dend_18, dend_14, dend_9, dend_6, dend_5, dend_3, dend_2, dend_32, dend_31, dend_16, dend_15, dend_11, dend_10, dend_13, dend_12]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_44 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_35 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_34 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_48 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_46 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_43 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_36 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_24 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_1 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_51 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_42 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_41 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_28 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_27 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_23 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_9 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_6 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_5 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_3 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_2 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_32 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_31 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_16 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_15 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_13 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_12 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_7 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_25 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_39 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_17 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_8 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_29 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_4 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_49 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_20 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_18 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_21 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_26 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_22 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_14 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_40 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_10 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_11 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_38 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_45 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_37 OneSecGrp_SectionRef_19.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_17, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_44 nseg = 3
    dend_35 nseg = 5
    dend_34 nseg = 5
    dend_48 nseg = 7
    dend_46 nseg = 5
    dend_43 nseg = 9
    dend_36 nseg = 3
    dend_24 nseg = 3
    dend_1 nseg = 5
    dend_51 nseg = 7
    dend_50 nseg = 7
    dend_42 nseg = 7
    dend_41 nseg = 5
    dend_33 nseg = 7
    dend_28 nseg = 7
    dend_27 nseg = 5
    dend_23 nseg = 5
    dend_19 nseg = 7
    dend_9 nseg = 3
    dend_6 nseg = 7
    dend_5 nseg = 7
    dend_3 nseg = 3
    dend_2 nseg = 5
    dend_32 nseg = 5
    dend_31 nseg = 5
    dend_16 nseg = 5
    dend_15 nseg = 3
    dend_13 nseg = 3
    dend_12 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L4_SBC_20e5caa0d2_0_0


