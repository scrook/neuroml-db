// Cell: cACint209_L5_NBC_63fe8b2e25_0_0
/*
{
  "id" : "cACint209_L5_NBC_63fe8b2e25_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.02864, -8.95645, 0.0, 3.19243", "0.862269, -8.03576, 0.0, 5.44292", "0.695902, -7.11508, 0.0, 7.15224", "0.529535, -6.1944, 0.0, 9.22848", "0.363167, -5.27371, 0.0, 10.1568", "0.1968, -4.35303, 0.0, 10.228", "0.0304325, -3.43235, 0.0, 10.4278", "-0.135935, -2.51166, 0.0, 10.5372", "-0.302302, -1.59098, 0.0, 10.6261", "-0.468669, -0.670298, 0.0, 10.9078", "-0.635037, 0.250385, 0.0, 11.3454", "-0.801404, 1.17107, 0.0, 11.7831", "-0.967771, 2.09175, 0.0, 12.1088", "-1.13414, 3.01243, 0.0, 11.7546", "-1.30051, 3.93312, 0.0, 11.2789", "-1.46687, 4.8538, 0.0, 10.5376", "-1.63324, 5.77448, 0.0, 9.41766", "-1.79961, 6.69517, 0.0, 7.67825", "-1.96598, 7.61585, 0.0, 5.72147", "-2.13234, 8.53653, 0.0, 3.87406", "-2.29871, 9.45721, 0.0, 2.1959" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.55142, -9.46517, -8.14, 3.62", "-1.55142, -9.46517, -8.14, 3.62", "-1.42904, -11.2514, -8.14, 3.62", "-1.324, -12.7845, -8.14, 3.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.23859, 3.99958, -3.81, 1.24", "6.79454, 4.16659, -3.42741, 1.24", "10.9765, 4.51804, -2.30067, 1.24", "14.9235, 4.84977, -1.23723, 1.24", "18.8604, 5.18062, -0.176498, 1.24", "26.9511, 5.86058, 2.00337, 1.24", "33.1843, 6.38442, 3.68278, 1.24", "35.7971, 6.5196, 4.4773, 1.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.49141, 4.70159, -1.31, 0.68", "-8.85196, 4.62155, -1.70411, 0.68", "-11.2979, 4.57869, -2.31913, 0.68", "-15.2322, 4.91305, -3.30071, 0.68", "-18.045, 5.42314, -3.95013, 0.68", "-19.7871, 5.90003, -4.30107, 0.68", "-22.7648, 6.81851, -4.82301, 0.68", "-25.8288, 7.97091, -5.34415, 0.68", "-29.7786, 9.77379, -5.94034, 0.68", "-32.5237, 11.3038, -6.32993, 0.68", "-36.435, 13.7888, -7.01491, 0.68", "-39.9161, 16.2712, -7.8274, 0.68", "-42.1962, 18.1139, -8.51345, 0.68", "-44.3086, 20.0539, -9.25917, 0.68", "-45.7945, 21.511, -9.82019, 0.68", "-48.6073, 24.2113, -10.8961, 0.68", "-50.6592, 26.2313, -11.7804, 0.68", "-51.6089, 27.1765, -12.1731, 0.68", "-54.9822, 30.4708, -13.6235, 0.68", "-57.6462, 33.0685, -14.8446, 0.68", "-61.4434, 36.5943, -16.4867, 0.68", "-64.0554, 38.8912, -17.4356, 0.57", "-66.2967, 40.7353, -18.1866, 0.57", "-68.9711, 42.8675, -19.1661, 0.57", "-69.5588, 43.3125, -19.4749, 0.57" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.06859, -4.73641, -2.56, 1.47", "6.46207, -5.61682, -2.37117, 1.47", "10.0891, -7.90839, -1.87968, 1.47", "14.4857, -10.6862, -1.28391, 1.47", "17.2656, -12.4426, -0.907198, 2.6", "17.6913, -12.7115, -0.849517, 2.26" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.29871, 9.45721, 0.0, 2.31667", "-4.96601, 24.2182, 0.0, 2.31667", "-7.63332, 38.9791, 0.0, 2.31667" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.324, -12.7845, -8.14, 0.12", "-0.589791, -12.8884, -8.12753, 0.12", "0.415621, -13.0878, -8.11013, 0.12", "0.9401, -13.1937, -8.10096, 0.45", "1.41936, -13.2837, -8.03322, 0.45", "3.24357, -13.5989, -7.78679, 0.45", "3.50166, -13.6458, -7.75311, 1.36", "4.40514, -13.8207, -7.63327, 1.02", "5.64241, -14.0612, -7.45095, 0.45", "7.53249, -14.426, -6.93872, 0.45", "9.18505, -14.7159, -6.20005, 0.45", "9.66515, -14.7802, -5.95559, 1.7", "10.5486, -14.8796, -5.1622, 0.68", "11.7271, -15.0124, -3.79966, 0.57", "13.5272, -15.2217, -1.4692, 0.57", "14.8163, -15.368, 0.389052, 0.57", "15.8096, -15.4707, 2.03997, 0.57", "19.3686, -15.7693, 8.59124, 0.45", "19.6471, -15.7918, 9.19716, 0.45" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.324, -12.7845, -8.14, 2.26", "-1.79696, -15.5275, -8.08385, 2.26", "-2.2627, -18.2287, -8.02857, 2.26", "-2.94171, -22.1668, -7.94796, 2.94" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "35.7971, 6.5196, 4.4773, 0.45", "40.6437, 6.64744, 3.13266, 0.45", "42.9821, 6.65126, 3.27676, 0.45", "44.2074, 6.72143, 3.6302, 0.45", "45.7969, 6.95725, 4.32437, 0.45", "48.9077, 7.74999, 6.16897, 0.79", "52.4794, 8.96566, 8.5807, 0.79", "55.8588, 10.4276, 11.2322, 0.79", "58.3169, 11.7386, 13.3473, 0.79", "60.2194, 13.0156, 15.133, 0.79", "62.9062, 15.4589, 18.0994, 0.79", "65.2706, 18.3135, 21.007, 0.79", "66.3214, 19.8104, 22.2487, 0.68", "67.2241, 21.1974, 23.2032, 0.68", "69.1439, 24.1101, 24.9999, 0.68", "73.1781, 30.1719, 28.7684, 0.68", "74.4715, 32.1704, 29.9764, 0.68", "76.6455, 35.4469, 31.9395, 0.68", "77.8937, 37.1252, 32.9554, 0.68", "79.0953, 38.4611, 33.8298, 0.57", "82.3315, 41.2561, 35.7965, 0.57", "84.0417, 42.1765, 36.8458, 0.57", "86.873, 42.4679, 40.1586, 0.57", "87.8136, 41.8719, 42.4551, 0.57", "88.9991, 40.5406, 46.3631, 0.57", "89.3636, 39.9939, 47.7829, 0.57", "90.7064, 37.1549, 54.1564, 0.57", "92.0685, 33.4234, 62.1063, 0.57", "92.8614, 30.3053, 68.5579, 0.57", "93.1838, 28.6201, 72.1851, 0.57", "93.2585, 28.2, 73.2164, 0.57", "93.3891, 27.4881, 75.0539, 0.57" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "35.7971, 6.5196, 4.4773, 0.79", "37.1717, 9.85645, 2.93217, 0.79", "38.0105, 12.3416, 1.92465, 0.79", "38.4424, 13.6855, 1.44121, 0.79", "39.7958, 16.8161, 0.413983, 0.79", "41.3147, 19.6106, -0.425539, 0.79", "42.6684, 21.8729, -1.03891, 0.79", "44.787, 25.0635, -1.72817, 0.79", "46.385, 27.3419, -2.2236, 0.79", "49.5792, 31.6724, -3.40678, 0.79", "51.6885, 34.2486, -4.53559, 0.79", "54.0158, 36.4446, -6.41592, 1.02", "55.5225, 37.6724, -7.78104, 1.02", "56.9572, 38.6682, -9.33863, 1.02", "58.845, 39.8726, -12.0566, 1.02", "61.499, 41.4869, -17.6781, 1.02", "64.2975, 42.611, -24.9197, 1.02" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "17.6913, -12.7115, -0.849517, 0.68", "18.8011, -14.5932, -1.01272, 0.68", "19.2093, -15.1667, -1.00088, 0.68", "21.4931, -18.1584, -0.793732, 0.68", "25.0913, -22.7665, -0.369434, 0.68", "27.3979, -25.7874, -0.22064, 0.68", "28.8183, -27.667, -0.189428, 0.68", "33.2389, -33.0309, 0.354736, 0.68", "35.303, -35.3641, 0.766322, 0.68", "35.9516, -36.0388, 0.93432, 0.68", "39.5004, -39.4834, 2.01882, 0.68", "42.0283, -41.6647, 2.74707, 0.68", "48.5634, -47.0896, 4.53411, 0.68", "51.6511, -49.6055, 5.31247, 0.68", "53.4935, -51.0317, 5.75882, 0.68", "56.0401, -52.9413, 6.35306, 0.68", "61.9278, -57.4188, 7.63632, 0.68", "64.217, -59.3607, 7.93865, 0.68", "65.2348, -60.3479, 7.97402, 0.68", "67.8808, -63.0668, 8.01089, 0.68", "69.4871, -64.835, 8.01515, 0.68", "72.6768, -68.7566, 7.93292, 0.68", "74.6897, -71.7704, 7.92568, 0.68", "76.0638, -73.9633, 7.9, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "17.6913, -12.7115, -0.849517, 1.24", "22.8694, -14.0195, -0.850717, 1.24", "25.518, -14.6886, -0.85133, 1.24", "29.7616, -15.7606, -0.852314, 1.24", "34.0564, -16.8455, -0.853309, 1.24", "45.4433, -19.7219, -0.855947, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.63332, 38.9791, 0.0, 0.57", "-10.3006, 53.74, 0.0, 0.57", "-12.9679, 68.501, 0.0, 0.57" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "19.6471, -15.7918, 9.19716, 0.45", "21.172, -17.4137, 14.451, 0.45" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "19.6471, -15.7918, 9.19716, 0.45", "23.1411, -14.6499, 9.17645, 0.45", "24.7806, -14.1941, 9.35274, 0.45", "27.0238, -13.6358, 9.7203, 0.45", "29.4691, -13.2497, 10.2085, 0.45", "30.7467, -13.26, 10.5083, 0.45", "34.1996, -13.681, 11.3638, 0.45", "34.4802, -13.7565, 11.4639, 0.45", "34.6016, -13.8078, 11.5118, 2.6", "36.9231, -15.1319, 12.4574, 0.57", "39.7496, -17.1114, 13.6125, 0.57", "40.5751, -17.7084, 13.9138, 0.57", "40.6481, -17.758, 13.9354, 2.38", "43.1142, -19.1917, 14.6325, 0.34", "44.0637, -19.6087, 14.8829, 0.34", "46.2142, -20.1654, 15.3891, 0.45", "48.2483, -20.2875, 15.9782, 0.45", "50.3689, -20.1814, 16.8379, 0.45", "52.2842, -19.9282, 17.8817, 0.45", "54.3192, -19.5048, 19.3156, 0.45", "56.1124, -19.0656, 20.7567, 0.45", "60.0058, -18.0127, 24.1569, 0.45", "62.94, -17.2673, 26.9893, 0.45", "65.7745, -16.6624, 29.9004, 0.45", "68.4802, -16.2498, 32.7039, 0.45", "69.2864, -16.1865, 33.5255, 2.38", "70.7296, -16.1557, 34.8747, 0.45", "73.7083, -16.1691, 37.1717, 0.45", "75.0065, -16.1784, 38.0263, 0.45", "76.9707, -16.1475, 39.1655, 0.45", "81.0423, -15.971, 41.5286, 0.45", "83.947, -15.7799, 43.2199, 0.45", "86.9607, -15.6356, 44.9614, 0.45", "88.834, -15.6384, 46.0076, 0.45", "90.6526, -15.7255, 46.9909, 0.45", "94.1607, -16.0814, 48.7899, 0.45", "97.0375, -16.5331, 50.0991, 0.45", "100.708, -17.2734, 51.7178, 0.45", "104.397, -18.2127, 53.304, 0.45", "106.583, -18.8467, 54.2153, 0.45", "107.689, -19.239, 54.6589, 0.45", "108.289, -19.4868, 54.8496, 0.45" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-2.94171, -22.1668, -7.94796, 0.12", "-3.53122, -21.7381, -7.60445, 0.12", "-3.63684, -21.68, -7.50673, 0.12", "-3.93372, -21.5498, -7.19517, 0.45", "-4.34577, -21.5689, -6.40144, 0.79", "-4.81323, -21.7443, -5.13041, 0.45", "-5.06428, -21.9163, -4.31218, 0.45", "-5.47494, -22.3903, -2.59558, 0.45", "-5.52757, -22.4962, -2.32041, 0.45", "-5.89003, -23.7941, 0.615984, 0.45", "-6.00307, -24.4845, 2.01883, 0.45", "-6.06972, -25.0418, 3.08062, 0.45", "-6.08456, -25.1782, 3.35027, 0.45", "-6.19084, -25.9114, 4.8282, 0.45", "-6.48756, -27.3233, 7.71359, 0.45", "-6.62821, -27.7058, 8.46783, 0.45", "-6.75731, -27.9791, 8.99154, 0.45", "-7.04362, -28.5035, 10.017, 0.45", "-7.13761, -28.6879, 10.3918, 0.45", "-7.70371, -29.8094, 12.6912, 0.45", "-7.90845, -30.4008, 13.6955, 0.45", "-8.08295, -31.1297, 14.8757, 0.45", "-8.11051, -31.379, 15.2941, 0.45", "-8.17623, -32.5923, 17.2208, 0.45", "-8.17491, -32.7513, 17.4694, 0.45", "-8.09159, -33.6818, 19.0209, 0.45", "-8.06285, -33.9025, 19.3854, 0.45", "-7.95114, -34.9756, 21.042, 2.38", "-7.88601, -35.8579, 22.4075, 0.68", "-7.85811, -36.2207, 22.9546, 0.68", "-7.71584, -37.7486, 25.506, 0.68", "-7.65183, -38.3746, 26.6425, 0.45", "-7.63462, -38.6683, 27.1692, 0.45", "-7.64839, -39.3553, 28.5462, 0.45", "-7.66999, -39.6903, 29.3068, 0.45", "-7.88375, -40.7892, 31.8837, 0.45", "-8.06392, -41.369, 33.3704, 0.45", "-8.27537, -41.8835, 34.8442, 0.45", "-8.96456, -43.3116, 38.9925, 0.91", "-8.98138, -43.3468, 39.0888, 3.05", "-9.18537, -43.7966, 40.2492, 0.45", "-9.57664, -45.0126, 43.0171, 0.45", "-9.66647, -45.4295, 43.9326, 0.45", "-9.74545, -46.0432, 45.2505, 2.15", "-9.93892, -48.345, 49.4119, 0.57", "-9.9538, -48.6332, 49.9415, 0.57", "-9.98704, -50.1533, 52.7532, 0.57", "-10.0273, -51.1648, 54.5063, 0.57", "-10.0349, -51.287, 54.7257, 1.7", "-10.0839, -51.7872, 55.6424, 0.45", "-10.4192, -54.1691, 59.7758, 0.45", "-10.5959, -55.1745, 61.5303, 0.45", "-10.7507, -55.8819, 62.72, 0.45", "-11.0684, -57.2642, 64.973, 0.45", "-11.2502, -58.0804, 66.3005, 0.45", "-11.3914, -58.6808, 67.2812, 0.45", "-11.7741, -60.1482, 69.2344, 0.45", "-11.8301, -60.3724, 69.5403, 0.45" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.94171, -22.1668, -7.94796, 1.7", "-2.17653, -26.0804, -5.55495, 1.7", "-1.95592, -27.3775, -4.91144, 1.58", "-1.31836, -31.3592, -3.35349, 1.36", "-0.792354, -34.6443, -2.06815, 1.24", "-0.0346589, -39.3763, -0.216644, 1.24", "0.415832, -42.1897, 0.884175, 2.83", "1.04387, -46.1565, 2.06417, 3.62", "1.51815, -49.1751, 2.80467, 2.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "64.2975, 42.611, -24.9197, 0.57", "64.243, 40.5394, -25.8231, 0.57", "64.1713, 37.8145, -27.0115, 0.57", "64.1305, 36.2621, -27.6885, 0.57", "64.0742, 34.1241, -28.6209, 0.57", "64.0009, 31.3374, -29.8362, 0.57", "63.8755, 26.5711, -31.9148, 0.57" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "64.2975, 42.611, -24.9197, 1.02", "65.0758, 44.3655, -26.5756, 1.02", "66.8211, 48.2997, -30.289, 1.02", "67.8075, 50.5233, -32.3877, 0.79" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "76.0638, -73.9633, 7.9, 0.45", "79.6935, -79.579, 7.4062, 0.45", "80.4458, -80.7355, 7.33583, 0.45", "81.5837, -82.4867, 7.32292, 0.45", "84.3758, -86.6854, 7.40172, 0.45", "85.4754, -88.3291, 7.34672, 0.45", "86.495, -89.7824, 7.25401, 0.45", "88.4278, -92.2868, 7.07028, 0.45", "91.9494, -96.5651, 6.63576, 0.45", "93.9449, -98.6297, 6.3642, 0.45", "97.7863, -101.984, 5.59169, 0.45", "100.661, -103.981, 5.03073, 0.45", "101.993, -104.712, 4.95527, 0.45", "104.459, -105.901, 5.03258, 0.45", "109.626, -108.328, 5.51406, 0.45", "113.051, -110.11, 5.80957, 0.45", "118.219, -113.009, 6.27727, 0.45", "129.113, -119.809, 7.10105, 0.45", "133.936, -123.168, 7.4185, 0.45", "137.415, -125.972, 7.60398, 0.45", "143.911, -132.318, 7.79914, 0.45", "145.137, -133.756, 7.80557, 0.45", "147.409, -137.303, 7.53457, 0.45", "148.508, -139.765, 7.21442, 0.45", "150.162, -144.475, 6.81698, 0.45", "151.246, -148.197, 6.73713, 0.45", "152.583, -153.173, 6.86886, 0.45", "153.8, -158.179, 7.02096, 0.45", "154.938, -163.46, 7.18146, 0.45", "155.412, -165.732, 7.25623, 0.45", "156.183, -169.369, 7.4253, 0.45", "157.8, -176.114, 7.84247, 0.45" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "76.0638, -73.9633, 7.9, 0.57", "76.0506, -74.2125, 8.16085, 0.57", "76.1095, -75.2519, 9.9742, 0.57", "76.1691, -76.4738, 12.3509, 0.57", "76.1806, -77.0863, 13.8611, 0.57", "76.1744, -77.1915, 14.1341, 0.57", "76.0919, -77.6961, 15.5797, 0.57", "75.8941, -78.2775, 17.5894, 0.57", "75.7556, -78.488, 18.5192, 0.57", "75.512, -78.7539, 20.4604, 0.45", "75.3681, -78.89, 21.4044, 0.45", "75.1559, -79.092, 22.6686, 0.45", "74.955, -79.3182, 23.9082, 0.45", "74.713, -79.5788, 25.306, 0.45", "74.3295, -80.1387, 28.3199, 0.45", "74.2747, -80.2843, 29.0066, 0.45", "74.2357, -80.5115, 30.0302, 0.45", "74.2096, -81.1476, 32.5448, 0.45", "74.2052, -81.4107, 33.4264, 0.45", "74.1023, -82.5415, 36.4152, 0.45", "74.0651, -82.9495, 37.3295, 0.45", "74.0615, -83.0462, 37.5277, 0.45", "74.0849, -83.301, 38.0413, 0.45", "74.1845, -83.9991, 39.445, 0.45", "74.3029, -84.5677, 40.6106, 0.45", "74.619, -85.6705, 43.0392, 0.45", "74.9215, -86.3535, 44.8752, 0.45", "75.5351, -87.5247, 48.3688, 0.45", "75.8789, -88.1441, 50.3682, 0.45", "76.0266, -88.3804, 51.2542, 0.45", "76.465, -89.1649, 54.2207, 0.45", "76.6979, -89.9067, 56.8238, 0.45", "76.7574, -90.2981, 58.202, 0.45", "76.7485, -90.6928, 59.449, 0.45", "76.6995, -91.512, 61.616, 0.45", "76.6268, -92.2648, 63.3776, 0.45", "76.5057, -92.9291, 64.8168, 0.45", "76.411, -93.4053, 66.0839, 0.45", "76.1688, -94.2346, 69.1857, 0.45", "75.9057, -94.5968, 71.2016, 0.45", "75.5308, -94.7672, 72.8679, 0.45", "74.9286, -94.7989, 74.5275, 0.45", "73.1085, -94.6101, 78.1098, 0.45", "72.1507, -94.4168, 79.6279, 0.45", "70.803, -94.1311, 81.3124, 0.45", "69.8719, -93.9369, 82.3852, 0.45", "68.0598, -93.6507, 84.391, 0.45", "66.6289, -93.5396, 85.9364, 0.45", "64.5004, -93.4081, 88.6117, 0.45", "63.0943, -93.2946, 90.7916, 0.45", "62.2016, -93.2458, 92.2965, 0.45", "60.1975, -93.2027, 95.8392, 0.45", "59.5122, -93.2041, 97.1102, 0.45", "56.5545, -93.307, 102.541, 0.45", "55.7465, -93.3569, 104.022, 0.45", "53.689, -93.4538, 108.112, 0.45", "53.1035, -93.4933, 109.272, 0.45", "52.0938, -93.6273, 111.28, 0.45" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "45.4433, -19.7219, -0.855947, 0.45", "47.742, -22.8278, 0.598135, 0.45", "48.1018, -23.3241, 0.803606, 1.02", "51.8426, -28.4027, 2.69618, 0.79", "54.124, -31.5667, 3.69805, 0.79", "55.4215, -33.3582, 4.1725, 0.68", "55.6991, -33.7321, 4.25585, 0.68", "57.3572, -35.9297, 4.56142, 0.68", "58.4746, -37.4136, 4.68235, 0.68", "60.7814, -40.4072, 4.72686, 0.68", "63.0978, -43.494, 4.73636, 0.68", "65.3082, -46.4927, 4.71406, 0.68", "67.4007, -49.3061, 4.67003, 0.68", "70.0165, -52.8405, 4.59064, 0.68", "73.2465, -57.2481, 4.26847, 0.68", "75.2362, -60.0116, 3.86331, 0.68", "76.3919, -61.6422, 3.52139, 0.68", "77.8475, -63.6671, 3.01871, 0.68", "80.2881, -66.9131, 2.10485, 0.68", "83.4785, -70.9945, 0.842496, 0.68", "87.1812, -75.4779, -0.605667, 0.68", "89.1765, -77.7231, -1.30846, 0.68", "91.1704, -79.8679, -1.91907, 0.68", "92.4708, -81.2136, -2.24619, 0.68", "93.6699, -82.3592, -2.4606, 0.68", "95.3704, -84.0026, -2.5147, 0.68", "96.7281, -85.4014, -2.5251, 0.68", "98.491, -87.6344, -2.60336, 0.68", "98.962, -88.4114, -2.67917, 0.68", "100.063, -90.6474, -2.93604, 0.68", "101.272, -93.5989, -3.40232, 0.68", "102.139, -96.159, -3.87411, 0.68", "102.909, -98.7509, -4.38225, 0.68", "104.023, -102.938, -5.20323, 0.68", "104.539, -104.923, -5.56015, 0.68", "105.275, -107.6, -5.96183, 0.68", "105.935, -109.638, -6.2203, 0.68", "106.877, -112.082, -6.38173, 0.68", "107.631, -113.868, -6.47043, 0.68", "108.005, -114.676, -6.48461, 0.68", "109.165, -117.01, -6.49293, 0.45", "110.831, -120.34, -6.43844, 0.45", "112.753, -124.199, -6.39656, 0.45", "114.237, -127.312, -6.48575, 0.45", "115.254, -129.533, -6.6108, 0.45", "116.426, -132.15, -6.80612, 0.45", "118.39, -136.55, -7.26907, 0.45", "119.412, -138.896, -7.54874, 0.45", "121.125, -142.958, -8.08994, 0.45", "122.703, -146.641, -8.62031, 0.45", "123.659, -148.897, -8.99644, 0.45", "124.444, -150.715, -9.35956, 0.45" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "45.4433, -19.7219, -0.855947, 0.68", "48.0115, -17.8827, 0.951006, 0.68", "51.0816, -15.5208, 2.79597, 0.68", "53.2835, -13.8496, 3.68269, 0.68", "54.7649, -12.7567, 4.04059, 0.68", "55.7266, -12.0568, 4.08133, 0.68", "57.9823, -10.4957, 3.65081, 0.68", "59.4444, -9.53489, 2.97401, 0.68", "61.9726, -7.99086, 1.37522, 0.57", "63.9632, -6.84634, -0.0649975, 0.57", "66.8428, -5.12061, -2.27793, 0.57", "70.1507, -3.08167, -4.87881, 0.57", "71.9905, -1.89999, -6.351, 0.57", "72.8458, -1.29205, -7.08177, 0.57", "75.4947, 0.827956, -9.32698, 0.57", "78.9848, 3.80851, -12.2093, 0.57", "81.7081, 6.26664, -14.3087, 0.57", "82.7072, 7.25466, -15.0926, 0.57", "84.9366, 9.62254, -16.9868, 0.57", "86.9966, 11.8758, -18.7962, 0.57", "87.8862, 12.9078, -19.5915, 0.57" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "21.172, -17.4137, 14.451, 0.45", "18.7889, -21.5261, 18.2825, 0.45", "18.0104, -22.8716, 19.4351, 0.45", "17.0499, -24.5384, 21.1095, 0.45", "16.1145, -26.1503, 22.9892, 0.45", "15.4237, -27.3116, 24.4734, 0.45", "14.1518, -29.5054, 27.3739, 0.45", "13.7147, -30.3424, 28.4963, 0.45", "12.5075, -32.8162, 32.0455, 0.45", "11.9616, -33.9886, 34.0603, 0.45", "11.5644, -34.8167, 35.8306, 0.45", "11.3308, -35.1917, 36.7866, 0.45", "10.9941, -35.5919, 37.9595, 0.45", "10.4482, -36.0943, 39.2602, 0.45", "8.77908, -37.733, 42.3283, 0.45", "8.40488, -38.1336, 42.9279, 0.45", "7.28705, -39.5211, 44.61, 0.45", "6.5633, -40.4848, 45.2637, 0.45", "5.58712, -42.0, 45.7347, 0.45", "3.99861, -45.1004, 45.9619, 0.45", "3.09853, -47.3531, 45.7975, 0.45", "2.37575, -49.4166, 45.5245, 0.45", "0.572558, -55.7386, 44.2092, 0.45", "0.255923, -56.9857, 43.8644, 1.02", "-0.079092, -58.3053, 43.3682, 0.57", "-0.660204, -59.9311, 42.5027, 0.45" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "21.172, -17.4137, 14.451, 0.45", "22.3606, -17.945, 14.4446, 0.45", "23.5844, -18.4921, 14.4381, 0.45", "25.2855, -19.2524, 14.4289, 0.45", "26.7248, -19.8958, 14.4212, 0.45", "27.4715, -20.2296, 14.4172, 0.45" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "1.51815, -49.1751, 2.80467, 0.45", "0.73897, -51.3351, 4.84142, 0.45", "0.424177, -52.334, 5.70256, 0.79", "-2.63941, -62.0547, 14.0832, 1.24", "-3.96169, -66.2503, 17.7003, 1.24", "-5.07865, -69.7944, 20.7558, 1.24", "-6.3632, -73.8702, 24.2698, 1.24", "-6.83128, -75.3498, 25.569, 2.38" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.51815, -49.1751, 2.80467, 0.91", "3.49301, -50.9629, 3.67813, 0.91", "4.58089, -51.9477, 4.15929, 0.91", "6.46287, -53.6513, 4.99167, 0.91", "7.76307, -54.8284, 5.56673, 0.91", "9.79521, -56.668, 6.46553, 0.79", "10.2099, -57.0433, 6.64891, 0.79" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "63.8755, 26.5711, -31.9148, 0.57", "64.4622, 24.7515, -31.6879, 0.57", "65.6697, 21.0906, -30.6203, 0.57", "66.9495, 17.0998, -29.5938, 0.45", "68.7825, 11.3389, -28.2683, 0.45", "70.7678, 4.99367, -26.7398, 0.45", "71.3109, 3.25787, -26.3217, 0.45", "73.8779, -5.05631, -24.217, 0.45", "75.8231, -11.6673, -22.4253, 0.45", "76.7418, -14.7615, -21.533, 0.45", "77.8066, -18.2094, -20.5601, 0.45" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "63.8755, 26.5711, -31.9148, 0.57", "61.194, 26.4216, -33.8429, 0.57", "59.4295, 25.7625, -34.4018, 0.68", "57.9191, 24.9931, -34.895, 0.68", "56.4078, 24.2233, -35.3886, 0.68", "54.0131, 23.0034, -36.1707, 0.68", "51.7218, 21.8362, -36.919, 0.68", "49.0007, 20.6856, -37.837, 0.68", "46.2224, 19.695, -38.6652, 0.57" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "67.8075, 50.5233, -32.3877, 0.68", "68.2678, 52.1068, -31.0845, 0.68", "68.6598, 53.4557, -29.9744, 0.68", "69.3153, 55.7109, -28.1183, 0.68", "70.6392, 60.2661, -24.3694, 0.68", "71.3802, 62.8154, -22.2713, 0.68", "72.3746, 66.2368, -19.4554, 0.68" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "67.8075, 50.5233, -32.3877, 0.79", "69.8674, 51.368, -32.4153, 0.79", "73.1447, 52.7118, -32.4591, 0.79", "75.2674, 53.5823, -32.4875, 0.79", "77.6351, 54.5531, -32.5191, 0.79", "78.9793, 55.1043, -32.5371, 0.79" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "124.444, -150.715, -9.35956, 0.57", "126.082, -153.918, -8.73874, 0.57", "128.618, -158.67, -7.69681, 0.57", "129.883, -160.956, -7.19619, 0.57", "133.21, -166.803, -5.94657, 0.57", "136.471, -172.409, -4.71491, 0.57", "139.1, -176.929, -3.72188, 0.57", "140.676, -179.48, -3.05511, 0.57", "142.121, -181.745, -2.40432, 0.57", "143.505, -183.851, -1.8098, 0.57", "145.2, -186.269, -1.25902, 0.57" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "124.444, -150.715, -9.35956, 0.34", "126.953, -152.764, -8.4858, 0.34", "128.753, -154.329, -7.61793, 0.34", "129.525, -155.03, -7.22621, 0.34", "132.975, -158.385, -5.7811, 0.34", "135.721, -161.206, -4.80766, 0.57", "139.404, -165.092, -3.58231, 0.57", "141.835, -167.821, -2.77908, 0.57", "143.982, -170.306, -2.24037, 0.57", "148.228, -175.349, -1.4825, 0.57", "150.643, -178.246, -1.24123, 0.57", "153.042, -181.095, -1.26799, 0.57", "156.246, -184.757, -1.63298, 0.57", "160.891, -189.939, -2.37852, 0.57", "164.798, -194.221, -3.02554, 0.57", "167.358, -196.921, -3.3256, 0.57", "171.836, -201.467, -3.77523, 0.57", "173.142, -202.736, -3.88706, 0.57", "176.048, -205.404, -3.9945, 0.57", "178.243, -207.281, -3.8451, 0.57", "182.495, -210.549, -3.2635, 0.57", "183.841, -211.498, -2.96263, 0.57", "186.097, -212.944, -1.96428, 0.57", "187.691, -213.883, -1.14284, 0.57", "189.313, -214.75, -0.173632, 0.57", "190.428, -215.325, 0.521475, 0.57", "193.106, -216.695, 2.25154, 0.57", "198.739, -219.641, 6.23983, 0.57", "200.256, -220.446, 7.42198, 0.57", "203.164, -222.018, 9.83945, 0.57", "206.101, -223.74, 12.4042, 0.57" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "87.8862, 12.9078, -19.5915, 0.45", "89.6578, 14.5036, -23.8326, 0.45", "90.5573, 15.323, -25.9782, 0.45", "91.7603, 16.695, -29.1743, 0.45", "92.0855, 17.0805, -29.9577, 0.45", "92.2516, 17.2726, -30.3121, 0.45", "93.8776, 19.1441, -33.3468, 0.45", "94.0999, 19.3663, -33.6473, 0.45", "95.4557, 20.7489, -35.4989, 0.45", "96.5029, 21.952, -36.7578, 0.45", "97.0777, 22.6482, -37.4277, 0.45", "98.4817, 24.3048, -38.8564, 0.45", "99.8185, 25.6774, -39.7158, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "87.8862, 12.9078, -19.5915, 0.45", "89.1639, 13.2101, -19.7522, 0.45", "89.9859, 13.4046, -19.8555, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "27.4715, -20.2296, 14.4172, 0.45", "25.6639, -23.2882, 17.2253, 0.45", "23.612, -26.8672, 20.4307, 0.45", "22.4607, -28.8439, 22.2435, 0.45", "21.1815, -30.9909, 24.1606, 0.45", "19.6742, -33.5315, 26.3209, 0.45", "19.11, -34.5231, 27.0977, 0.45", "18.4054, -35.8095, 27.9548, 0.45", "16.8496, -39.0772, 29.9544, 0.45", "15.8371, -41.6802, 31.2478, 0.45", "15.0709, -44.034, 32.184, 0.45", "14.509, -45.9995, 32.8839, 0.45", "14.0874, -47.7967, 33.6086, 0.45", "13.623, -50.6356, 34.8975, 0.45", "13.5093, -52.3939, 36.0464, 0.45", "13.5338, -53.9265, 37.3646, 0.45", "13.6639, -56.0971, 39.3765, 0.45", "13.8974, -58.2927, 41.536, 0.45", "14.0938, -59.496, 42.7259, 0.45", "14.8726, -63.8316, 46.3202, 0.45", "15.4805, -66.8053, 48.4025, 0.45", "16.09, -69.572, 49.9242, 0.45", "16.5994, -72.2712, 50.8992, 0.45", "17.0773, -74.8613, 51.663, 0.45", "17.875, -79.9195, 52.9912, 0.45", "18.1487, -82.2035, 53.5177, 0.45", "18.3194, -83.8722, 54.2604, 0.45", "18.6164, -87.5903, 56.2075, 0.45", "18.7477, -90.6426, 57.9546, 0.45", "18.811, -93.9101, 60.2288, 0.45", "18.8277, -95.4898, 61.6894, 0.45", "18.6775, -101.378, 67.4201, 0.79" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "27.4715, -20.2296, 14.4172, 0.45", "29.7736, -22.0986, 15.0451, 0.45", "31.0458, -23.4694, 15.4463, 0.45", "33.044, -25.9532, 16.1053, 0.45", "34.7789, -28.3177, 16.704, 0.45", "37.2727, -31.9854, 17.5869, 0.45", "40.3561, -36.8568, 18.725, 0.45", "43.7508, -43.1094, 20.2141, 0.45", "46.1448, -48.2779, 21.0969, 0.45", "47.3786, -51.1806, 21.5608, 0.45", "49.5507, -56.7095, 22.3797, 0.45", "50.9248, -60.4304, 22.8196, 0.45", "52.2686, -64.443, 23.1806, 0.45", "54.6168, -73.2155, 23.556, 0.45" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-6.83128, -75.3498, 25.569, 0.12", "-7.13302, -75.8706, 25.1675, 0.12", "-7.54327, -77.1596, 24.3495, 0.57", "-7.8055, -78.3028, 23.7812, 0.57", "-8.02457, -79.3211, 23.4367, 0.57", "-8.74756, -82.5563, 22.2115, 0.57", "-9.22758, -84.4894, 21.2765, 0.57", "-9.49464, -85.5803, 20.6787, 0.91", "-9.72975, -86.5812, 19.8714, 0.91", "-10.052, -87.8242, 18.5562, 0.91", "-10.6721, -89.4035, 15.9661, 0.68", "-11.2192, -90.1277, 13.6309, 0.68", "-11.4989, -90.3891, 12.4352, 0.68", "-12.3768, -91.0985, 8.26972, 0.68", "-12.5736, -91.2271, 7.23963, 0.68", "-12.9907, -91.4371, 4.73524, 0.68", "-13.6385, -91.6693, 0.377031, 0.68", "-13.8538, -91.7442, -1.36271, 0.68", "-14.2064, -91.9741, -4.82286, 0.68" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-6.83128, -75.3498, 25.569, 0.79", "-6.31564, -78.8727, 25.7248, 0.79", "-5.62079, -83.6201, 25.9348, 0.79", "-5.29995, -85.8122, 26.0317, 0.79", "-5.05245, -87.5032, 26.1065, 0.79", "-4.93663, -88.2945, 26.1415, 0.79" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-6.83128, -75.3498, 25.569, 0.57", "-6.3335, -75.7308, 27.875, 0.57" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "10.2099, -57.0433, 6.64891, 1.13", "10.6744, -58.3712, 7.53074, 1.13", "11.4313, -60.4326, 8.73402, 0.91", "11.8842, -61.6864, 9.34887, 0.91", "12.6298, -63.7985, 10.2635, 0.91", "13.3968, -66.1209, 11.1653, 0.91", "14.0309, -68.2043, 11.9651, 0.91", "14.4076, -69.6418, 12.4557, 0.91", "14.9265, -72.0014, 13.2519, 0.91", "15.1079, -72.9868, 13.591, 1.92", "15.3182, -74.3074, 14.0258, 1.36", "15.5992, -76.2514, 14.7095, 1.02", "15.8982, -78.541, 15.632, 1.02", "16.1658, -80.4945, 16.48, 1.02", "16.2874, -81.2947, 16.8382, 1.02", "16.4441, -82.1945, 17.2405, 0.68", "16.7494, -83.641, 17.7973, 0.68", "16.9512, -84.4221, 18.0134, 1.02", "17.1706, -85.0945, 18.1222, 2.15", "17.6217, -86.2272, 18.1814, 1.47", "18.4315, -88.0181, 18.1976, 1.13", "18.9932, -89.2449, 18.1927, 0.79", "19.3776, -90.053, 18.1723, 0.57", "20.1566, -91.5403, 18.1321, 0.57", "20.8679, -92.787, 18.095, 0.57", "21.4877, -93.813, 18.0558, 0.57", "22.0508, -94.7845, 18.0142, 0.57", "22.399, -95.4994, 17.9715, 0.57", "22.9378, -96.8145, 17.8407, 0.57", "23.2344, -97.5828, 17.8343, 0.57", "23.655, -98.7571, 17.8866, 2.83", "24.2123, -100.285, 18.0548, 1.92", "25.037, -102.442, 18.331, 1.02", "25.4839, -103.656, 18.5255, 0.68", "26.6045, -106.663, 19.0519, 0.68", "27.0302, -107.708, 19.2317, 0.68", "27.8246, -109.449, 19.5834, 0.68", "28.3086, -110.411, 19.7892, 0.68", "28.96, -111.573, 20.0054, 0.68", "29.88, -113.121, 20.1951, 0.68", "30.9771, -114.812, 20.2767, 0.68", "32.566, -117.045, 20.3867, 0.68", "33.5778, -118.414, 20.453, 0.68", "34.8099, -120.059, 20.4941, 0.57", "35.6807, -121.238, 20.4825, 0.57", "36.4637, -122.414, 20.3691, 0.57", "37.2132, -123.672, 20.0883, 0.57", "37.9301, -125.012, 19.5706, 0.57", "38.8253, -126.774, 18.7776, 0.57", "39.1989, -127.56, 18.3691, 1.47", "40.1575, -129.594, 17.2117, 0.68", "40.742, -130.811, 16.4965, 0.68", "41.5753, -132.396, 15.5497, 0.68", "42.8305, -134.557, 14.287, 0.68", "44.0775, -136.507, 13.2591, 0.68", "44.6741, -137.365, 12.8323, 0.68", "45.0747, -137.912, 12.7129, 0.68", "45.7359, -138.951, 12.8695, 0.57", "46.0259, -139.484, 13.0839, 0.57", "46.4174, -140.284, 13.5139, 0.57", "47.0635, -141.725, 14.276, 0.57", "49.1219, -146.779, 16.6988, 0.68", "50.2651, -149.813, 17.9248, 0.68", "50.7628, -151.261, 18.3782, 0.68", "51.0715, -152.268, 18.5649, 0.68", "51.8205, -155.035, 18.4239, 0.68", "52.0368, -155.877, 18.1541, 0.68", "52.4306, -157.391, 17.2326, 2.04", "52.7996, -158.712, 16.2487, 0.79", "53.2199, -160.078, 15.2102, 0.79", "54.0659, -162.635, 13.4552, 0.79", "54.5822, -164.038, 12.693, 0.79", "55.0929, -165.344, 12.1636, 0.79", "55.6941, -166.844, 11.8206, 0.79", "56.2981, -168.216, 11.7016, 0.68", "57.1614, -170.042, 11.7996, 0.68", "57.9764, -171.683, 12.0971, 0.68", "58.7612, -173.146, 12.6761, 0.68", "59.3592, -174.203, 13.2288, 0.68", "60.003, -175.276, 13.9458, 0.68", "60.3903, -175.885, 14.3852, 1.58", "60.9838, -176.756, 14.9807, 1.58", "63.4845, -180.354, 17.2905, 0.68", "64.397, -181.615, 18.0668, 0.68", "66.0923, -183.871, 19.3766, 0.68", "67.6337, -185.909, 20.5614, 0.68", "68.9873, -187.662, 21.5374, 0.68", "70.0642, -189.034, 22.2898, 0.68", "71.2933, -190.551, 23.0127, 0.68", "72.1665, -191.541, 23.6186, 0.68", "73.8323, -193.279, 24.7831, 0.68", "74.4213, -193.838, 25.1449, 0.68", "76.0376, -195.257, 25.9332, 2.38", "76.8602, -195.964, 26.1984, 1.92", "79.2867, -197.991, 26.6825, 0.57", "80.2154, -198.774, 26.7227, 0.57", "83.4185, -201.492, 26.4517, 0.57", "85.6415, -203.397, 26.1806, 0.57", "87.0446, -204.6, 25.9383, 0.57", "88.8169, -206.115, 25.6417, 0.57", "90.504, -207.531, 25.3626, 0.57", "91.6526, -208.492, 25.3036, 0.57", "92.5738, -209.252, 25.4123, 2.15", "93.3427, -209.864, 25.5381, 1.13", "94.5247, -210.801, 25.7811, 0.57", "95.6173, -211.744, 25.8509, 0.57", "96.0836, -212.164, 25.8338, 0.57", "96.6482, -212.744, 25.7884, 0.57", "97.3606, -213.542, 25.7028, 0.57", "97.5333, -213.765, 25.6849, 2.38", "99.184, -216.119, 25.536, 0.45", "100.238, -217.722, 25.4667, 0.45", "101.398, -219.529, 25.422, 0.45", "102.203, -220.804, 25.4585, 0.45", "103.637, -223.131, 25.7289, 0.45", "104.015, -223.768, 25.8486, 0.45", "105.607, -226.642, 26.6848, 0.45", "106.695, -228.837, 27.395, 0.45", "107.561, -230.888, 28.0289, 0.45", "108.21, -232.803, 28.6702, 0.45", "108.447, -233.707, 28.9919, 0.45", "108.728, -235.169, 29.4637, 0.45", "108.965, -237.099, 29.9682, 0.45", "109.189, -239.109, 30.1523, 0.45", "109.267, -239.625, 30.1125, 1.24", "109.574, -240.916, 29.8821, 0.57", "110.125, -242.498, 29.5427, 0.57", "111.08, -244.548, 29.0586, 0.57", "112.125, -246.427, 28.6478, 1.36", "113.075, -247.919, 28.4804, 0.57", "114.223, -249.55, 28.405, 0.57", "115.805, -251.626, 28.4432, 0.57", "117.062, -253.164, 28.6664, 0.57", "118.013, -254.259, 28.944, 0.57", "120.056, -256.632, 29.6452, 0.57", "121.921, -258.941, 30.2808, 0.57", "122.672, -259.991, 30.5679, 0.57", "123.91, -262.014, 31.0116, 2.38", "124.25, -262.663, 31.1093, 1.58", "125.625, -265.656, 31.5165, 0.68", "126.341, -267.504, 31.7091, 0.68", "127.119, -269.788, 32.1104, 0.79", "127.815, -271.927, 32.5268, 0.57", "128.439, -273.986, 32.935, 0.57", "129.331, -277.054, 33.6513, 0.57", "129.978, -279.362, 34.2819, 0.57", "130.58, -281.57, 34.8476, 0.57", "130.873, -282.641, 35.0881, 0.57", "131.338, -284.372, 35.4608, 0.57", "131.998, -286.961, 35.8763, 0.57", "132.423, -288.602, 35.9598, 0.57", "132.933, -290.544, 35.8532, 0.57", "133.294, -291.901, 35.6287, 0.57", "133.53, -292.741, 35.4433, 0.57", "134.015, -294.3, 35.0834, 0.57", "134.918, -296.903, 34.4819, 0.57", "135.721, -298.939, 34.1194, 1.13", "136.237, -300.111, 33.9849, 2.38", "136.429, -300.518, 33.9567, 2.38", "137.785, -303.182, 33.9252, 0.79", "138.547, -304.686, 33.8668, 0.79", "139.406, -306.494, 33.8117, 0.57", "140.063, -307.976, 33.7215, 0.57", "140.608, -309.364, 33.5919, 0.57", "141.044, -310.59, 33.4205, 0.57", "142.088, -313.679, 32.8013, 0.57", "142.251, -314.196, 32.711, 2.94", "142.988, -316.554, 32.2954, 0.68", "143.724, -318.81, 31.9783, 0.68", "144.367, -320.578, 31.8029, 0.68", "144.941, -322.01, 31.7116, 0.68", "145.933, -324.258, 31.662, 0.68", "146.874, -326.378, 31.5798, 0.68", "147.567, -327.922, 31.4947, 0.68", "148.223, -329.385, 31.3794, 0.68", "149.463, -332.166, 31.1909, 0.68", "150.058, -333.475, 31.1183, 0.68", "150.695, -334.816, 31.0652, 0.68", "152.348, -338.374, 31.2063, 0.68", "152.716, -339.184, 31.275, 0.68", "153.905, -342.044, 31.7007, 0.57", "154.192, -342.802, 31.8533, 0.57", "154.373, -343.346, 31.98, 2.49", "155.49, -346.944, 32.9681, 0.68", "155.775, -347.965, 33.3021, 0.68", "156.799, -351.553, 34.5232, 0.68", "157.142, -352.685, 34.898, 0.68", "157.916, -354.964, 35.5994, 0.68", "158.807, -357.27, 36.2435, 0.68", "159.754, -359.355, 36.7271, 0.68", "160.687, -361.122, 37.1713, 0.68", "162.265, -363.657, 37.822, 0.68", "162.913, -364.61, 38.1079, 0.68", "163.402, -365.309, 38.3634, 2.72", "164.124, -366.384, 38.7883, 1.92", "165.391, -368.518, 39.7286, 0.91", "166.061, -369.902, 40.4588, 0.91", "166.599, -371.315, 41.3353, 0.68", "167.112, -372.87, 42.4262, 0.68", "167.602, -374.459, 43.6844, 0.68", "168.204, -376.49, 45.4156, 0.68", "168.624, -377.9, 46.7966, 0.68", "169.236, -379.822, 48.9302, 0.68", "169.779, -381.241, 50.8089, 0.68", "170.603, -383.076, 53.4895, 0.68", "171.02, -383.864, 54.8233, 0.68", "172.05, -385.582, 57.7534, 0.68", "172.727, -386.621, 59.4464, 0.68", "174.496, -389.24, 63.4399, 0.68", "175.182, -390.273, 64.8897, 0.68", "176.837, -392.791, 68.0812, 0.68", "177.998, -394.598, 70.1346, 0.68", "178.388, -395.217, 70.7128, 0.68", "178.725, -395.767, 71.1712, 0.68", "179.666, -397.491, 72.3876, 0.68", "180.04, -398.196, 72.9292, 0.68", "180.988, -400.11, 74.3269, 0.45", "181.487, -401.105, 75.3024, 0.45", "181.696, -401.543, 75.7609, 0.45", "182.013, -402.216, 76.487, 0.45" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "10.2099, -57.0433, 6.64891, 0.79", "11.3595, -55.7207, 5.04556, 0.79", "12.3634, -54.5658, 3.64551, 0.57", "12.8226, -54.0375, 3.00509, 0.34", "13.3449, -53.4366, 2.27653, 0.34", "13.5667, -53.1815, 1.96729, 0.34" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "77.8066, -18.2094, -20.5601, 0.45", "78.382, -20.1403, -20.851, 0.45", "79.137, -22.5642, -21.3758, 0.45", "80.7257, -27.6065, -22.6361, 0.45", "81.8689, -31.0093, -23.9575, 0.45", "82.899, -34.372, -25.4833, 0.45", "83.1507, -35.3407, -25.9413, 0.45", "83.9037, -38.7264, -27.6122, 0.45", "84.7603, -43.118, -29.8284, 0.45", "85.7617, -49.3898, -32.9333, 0.45", "86.2328, -53.0294, -34.7336, 0.45", "86.6543, -58.1786, -37.2333, 0.45", "86.7844, -63.071, -39.4733, 0.45", "86.6269, -66.459, -40.9016, 0.45", "85.9563, -71.124, -42.7469, 0.45", "85.2288, -73.8549, -43.6954, 0.45", "84.4441, -76.3026, -44.6148, 0.45", "83.1489, -79.1452, -45.8253, 0.45", "81.831, -81.1175, -46.7872, 0.45", "79.7121, -83.476, -48.0575, 0.45", "76.7707, -86.0196, -49.5112, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "77.8066, -18.2094, -20.5601, 0.45", "82.162, -23.9083, -17.2177, 0.45", "84.1225, -26.4736, -15.7132, 0.45", "86.8165, -29.9986, -13.6458, 0.45", "88.2255, -31.8422, -12.5645, 0.45", "91.2578, -35.81, -10.2375, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "18.6775, -101.378, 67.4201, 0.57", "16.0231, -103.073, 69.0626, 0.57", "13.9731, -104.488, 70.4349, 0.57", "12.3162, -105.692, 71.5494, 0.57", "11.3248, -106.524, 72.2335, 0.57", "9.78002, -108.025, 73.3793, 0.57", "7.80918, -110.272, 75.2007, 0.57", "6.7404, -111.738, 76.4427, 0.57", "6.05333, -112.862, 77.2851, 0.57", "4.91921, -114.747, 79.1144, 0.57", "3.35345, -117.318, 81.798, 0.57", "1.37642, -120.164, 85.2913, 0.57", "0.635397, -121.01, 86.4982, 0.57", "-1.48873, -122.618, 89.7428, 0.57", "-7.28024, -124.827, 97.669, 0.57", "-9.17985, -124.949, 99.7578, 0.57", "-11.9789, -124.532, 102.056, 0.57", "-14.788, -123.847, 103.82, 0.57", "-18.3441, -122.894, 106.035, 0.57", "-21.3159, -122.131, 107.648, 0.57", "-24.8153, -121.441, 109.34, 0.57", "-27.8406, -121.048, 111.029, 0.57", "-31.6455, -120.921, 113.325, 0.57", "-37.4583, -121.457, 117.248, 0.57", "-40.2737, -122.157, 119.689, 0.57", "-43.0437, -123.168, 122.685, 0.57", "-44.5676, -123.827, 124.732, 0.57", "-45.3937, -124.178, 126.031, 0.57", "-46.5487, -124.665, 127.887, 0.57", "-50.8218, -126.13, 134.49, 0.57", "-51.7252, -126.404, 135.853, 0.57", "-52.9946, -126.752, 137.675, 0.57", "-57.0603, -127.744, 143.378, 0.57", "-58.7939, -128.206, 145.644, 0.57", "-63.9149, -129.671, 151.777, 0.57", "-65.0168, -130.023, 153.0, 0.57", "-69.3064, -131.482, 157.577, 0.57", "-70.5145, -131.917, 158.81, 0.57", "-73.2447, -132.935, 161.355, 0.57", "-74.6411, -133.483, 162.568, 0.57", "-80.7104, -136.129, 167.372, 0.57", "-83.5436, -137.437, 169.475, 0.57", "-87.1334, -139.241, 171.686, 0.57", "-91.8856, -141.8, 174.228, 0.57", "-97.4481, -144.95, 176.816, 0.57", "-99.0071, -145.925, 177.341, 0.57", "-101.701, -147.8, 177.819, 0.57", "-106.569, -151.575, 177.211, 0.57", "-109.221, -153.826, 176.092, 0.57", "-112.139, -156.484, 174.339, 0.57", "-115.288, -159.444, 172.122, 0.57", "-117.799, -161.845, 170.176, 0.57", "-127.382, -171.386, 161.788, 0.57", "-127.544, -171.555, 161.631, 2.26", "-130.262, -174.558, 158.168, 0.68", "-131.251, -175.776, 156.45, 0.68" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "18.6775, -101.378, 67.4201, 0.57", "19.9749, -102.867, 74.5681, 0.57", "20.9085, -103.997, 79.471, 0.57", "21.1276, -104.282, 80.4318, 0.57", "21.7448, -105.151, 82.9206, 0.57", "22.9501, -106.828, 87.7394, 0.57", "25.9635, -110.816, 98.9043, 0.57", "26.6258, -111.666, 100.947, 0.57", "28.0543, -113.517, 104.854, 0.57", "28.6386, -114.266, 106.247, 0.57", "31.0728, -117.291, 111.6, 0.57", "31.918, -118.485, 113.208, 0.57", "33.1945, -120.579, 115.039, 0.57", "34.5148, -122.502, 116.878, 0.57", "36.3611, -125.121, 119.552, 0.57" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "54.6168, -73.2155, 23.556, 0.34", "53.7392, -74.7512, 23.1571, 0.34", "53.1606, -76.0018, 22.7885, 0.34", "52.5538, -77.3604, 22.4112, 0.45", "51.5301, -79.6793, 21.8216, 0.45", "50.576, -81.8576, 21.231, 0.45", "49.7214, -83.8344, 20.7103, 0.45", "48.682, -86.4518, 19.8394, 0.45", "48.2991, -87.5435, 19.4676, 0.45", "48.0425, -88.3301, 19.2018, 0.45", "47.3899, -90.4129, 18.5512, 0.45", "46.9612, -91.8191, 18.1857, 0.45", "45.8061, -95.6173, 17.3104, 0.45", "45.3163, -97.1924, 16.9426, 0.45", "45.0256, -98.1947, 16.7169, 0.45", "44.4306, -100.229, 16.3409, 0.45", "43.8088, -102.412, 15.895, 0.45", "43.4055, -103.735, 15.5196, 0.45", "42.6392, -106.029, 14.7333, 0.45", "42.2494, -107.135, 14.2855, 0.45", "41.6841, -108.672, 13.507, 0.45", "40.2732, -112.291, 11.4163, 0.45", "39.6291, -113.942, 10.2865, 0.45", "39.1487, -115.214, 9.38594, 0.45", "38.5887, -116.776, 8.29769, 0.45", "37.4958, -119.899, 6.14163, 0.23", "37.2385, -120.665, 5.61517, 0.23", "36.3375, -123.386, 3.99353, 0.23", "36.0266, -124.454, 3.39171, 0.23", "35.3514, -126.946, 1.93016, 0.45", "35.1436, -127.764, 1.42998, 0.45" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "54.6168, -73.2155, 23.556, 0.45", "56.5688, -76.9189, 24.3371, 0.45", "58.4443, -80.5869, 25.0603, 0.45", "59.9085, -83.6029, 25.6268, 0.45", "61.7445, -87.5142, 26.5457, 0.45", "64.7612, -93.9161, 28.1889, 0.45", "66.7842, -98.2091, 29.2908, 0.45", "67.9037, -100.768, 29.8978, 0.45", "69.6604, -105.117, 30.9391, 0.45", "71.3965, -109.682, 32.0283, 0.45", "72.9597, -113.676, 33.2309, 0.45" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-14.2064, -91.9741, -4.82286, 0.57", "-15.2493, -92.2369, -8.42743, 0.57", "-15.3983, -92.2744, -8.94245, 0.57", "-15.7216, -92.3559, -10.06, 0.57" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-14.2064, -91.9741, -4.82286, 0.68", "-14.6316, -93.3031, -5.51729, 0.68", "-15.4571, -95.1626, -6.90136, 0.68", "-15.9291, -96.0604, -7.60673, 0.68", "-16.3587, -96.7431, -8.14711, 0.68", "-17.4459, -98.1974, -9.51397, 0.68", "-17.9667, -98.8457, -10.1462, 0.68", "-19.6871, -100.804, -12.1822, 0.68", "-20.2782, -101.504, -12.8457, 0.68", "-21.0371, -102.392, -13.5975, 0.68", "-22.6098, -104.233, -15.025, 0.68", "-23.8439, -105.644, -15.9635, 0.68", "-25.8638, -107.982, -17.3605, 0.68", "-27.5912, -110.004, -18.4278, 0.68", "-29.462, -112.2, -19.5116, 0.68", "-30.9479, -113.974, -20.3258, 0.68", "-32.7017, -116.037, -21.1429, 0.68", "-34.3119, -117.794, -21.8515, 0.57", "-35.7689, -119.218, -22.4191, 0.57", "-37.5727, -120.921, -23.1701, 0.57" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-4.93663, -88.2945, 26.1415, 0.45", "-7.05455, -88.7672, 27.6148, 0.45", "-8.025, -88.8739, 28.3324, 0.45", "-10.2544, -88.9717, 29.8019, 0.45", "-10.8545, -88.9671, 30.2153, 0.45", "-11.6871, -88.9034, 30.7834, 0.45", "-12.2197, -88.8558, 31.3761, 0.45", "-12.7498, -88.784, 32.2221, 0.45", "-13.2148, -88.6649, 33.1394, 0.45", "-13.7227, -88.4499, 34.0596, 0.45", "-14.0819, -88.2577, 34.6916, 0.45", "-16.3004, -87.0207, 38.619, 0.45", "-16.7883, -86.7834, 39.4297, 0.45", "-17.788, -86.3729, 40.9359, 0.45", "-19.3668, -85.7956, 43.1098, 0.45", "-19.9873, -85.6441, 43.8299, 0.45", "-21.8351, -85.5547, 45.6323, 0.45", "-22.7032, -85.6833, 46.2182, 0.45", "-23.2137, -85.8638, 46.5505, 0.34", "-23.7804, -86.1848, 46.8924, 0.34", "-25.3411, -87.2325, 47.6185, 0.34", "-26.7531, -88.1975, 48.0629, 0.34", "-27.7902, -88.8805, 48.2481, 0.34", "-29.0234, -89.6319, 48.4796, 0.34", "-31.101, -90.8285, 48.9044, 0.34", "-33.8028, -92.2596, 49.4873, 0.34", "-34.7374, -92.6699, 49.6745, 0.34", "-35.3966, -92.8975, 49.8681, 0.34", "-37.2499, -93.4424, 50.5968, 0.34", "-38.4805, -93.7968, 51.2707, 0.34", "-39.4084, -94.0695, 51.977, 0.34", "-40.4104, -94.3913, 52.9348, 0.34", "-41.6741, -94.8493, 54.0892, 0.34", "-43.2346, -95.4853, 55.4846, 0.34", "-44.974, -96.2684, 56.9414, 0.34", "-46.7072, -97.1042, 58.323, 0.34", "-47.8054, -97.6925, 59.1322, 0.34", "-49.4382, -98.6921, 60.2457, 0.34", "-50.3631, -99.2862, 60.778, 0.34", "-51.0061, -99.6997, 61.0902, 0.34", "-52.9329, -100.906, 61.7603, 0.34", "-54.0727, -101.656, 62.1046, 0.34", "-55.579, -102.649, 62.5765, 0.34", "-56.1557, -103.014, 62.7845, 0.34", "-57.5684, -103.843, 63.2242, 0.34", "-58.3249, -104.271, 63.437, 0.34", "-59.789, -105.079, 63.7879, 0.34", "-60.6496, -105.542, 63.9551, 0.34", "-61.6027, -106.033, 64.0923, 0.34", "-63.3109, -106.89, 64.3032, 0.34", "-64.7257, -107.554, 64.4504, 0.34", "-66.1983, -108.163, 64.5708, 0.34", "-67.5882, -108.642, 64.672, 0.34", "-68.6498, -108.966, 64.7927, 0.34", "-69.6887, -109.251, 64.9223, 0.34", "-70.6883, -109.473, 65.067, 0.34", "-71.5154, -109.587, 65.2104, 0.34", "-73.0363, -109.64, 65.5415, 0.34", "-74.1027, -109.577, 65.8453, 0.34" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-4.93663, -88.2945, 26.1415, 2.72", "-3.70269, -92.1375, 31.4042, 2.72", "-3.09023, -93.8114, 33.6244, 1.47", "-2.55936, -95.3037, 35.3618, 1.13", "-0.853163, -100.214, 40.6661, 1.13", "-0.562433, -101.212, 41.5896, 3.39", "-0.112275, -103.248, 43.173, 1.81", "0.447461, -107.553, 45.2302, 0.68", "0.580634, -109.954, 46.0363, 0.68", "0.495194, -111.245, 46.2391, 0.68", "-0.118309, -115.067, 46.2568, 0.68", "-0.683623, -117.66, 46.2412, 0.68", "-1.31981, -119.916, 46.1507, 0.68", "-2.09833, -122.443, 45.9125, 0.68", "-3.00255, -125.365, 45.7493, 0.68", "-3.55152, -127.183, 45.6373, 0.68", "-4.20993, -129.537, 45.5451, 0.68", "-4.76122, -131.633, 45.4322, 0.68", "-5.89234, -136.166, 45.2506, 0.68", "-6.11472, -137.216, 45.2883, 3.51", "-6.5348, -139.679, 45.5281, 1.7", "-6.8588, -141.574, 45.919, 0.79", "-7.26086, -143.769, 46.5956, 0.79", "-8.00315, -147.82, 48.1682, 0.68", "-8.67301, -151.62, 49.8377, 0.79", "-8.85816, -152.763, 50.3249, 0.45", "-9.19581, -156.013, 52.4405, 0.45", "-9.23851, -157.206, 53.394, 0.45", "-9.20182, -158.084, 54.1967, 0.68", "-8.96897, -160.147, 56.3352, 0.68", "-8.79555, -161.217, 57.4673, 0.68", "-7.51708, -168.073, 64.833, 2.38", "-7.27335, -169.215, 66.1223, 1.47", "-7.14771, -169.838, 66.8269, 0.79", "-6.66226, -172.23, 69.4822, 0.79", "-6.31176, -174.012, 71.3429, 0.79", "-6.09035, -175.328, 72.4958, 2.15", "-5.54146, -179.439, 74.8951, 0.79", "-5.17108, -181.912, 76.19, 0.68", "-4.89238, -183.701, 76.9027, 0.68", "-4.61601, -185.349, 77.3328, 0.68", "-4.51857, -186.007, 77.4443, 0.68", "-4.30353, -188.016, 77.4942, 0.68", "-4.18796, -190.174, 77.2593, 0.68", "-4.30849, -193.978, 76.7715, 0.68", "-4.40972, -194.704, 76.6717, 2.6", "-4.68408, -195.937, 76.5095, 2.26", "-5.96496, -199.966, 76.0502, 0.45", "-6.49526, -201.223, 75.9399, 0.45", "-7.42351, -203.086, 75.7726, 0.45", "-8.88258, -205.762, 75.5492, 0.45", "-10.3149, -208.285, 75.4145, 0.45", "-11.9503, -211.089, 75.3712, 0.45", "-13.7265, -214.057, 75.4355, 0.45", "-15.4505, -216.951, 75.4597, 2.38", "-15.8555, -217.649, 75.4576, 3.51", "-17.8279, -221.047, 75.457, 0.57", "-18.7036, -222.554, 75.4493, 1.24" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-6.3335, -75.7308, 27.875, 0.45", "-4.94851, -75.0881, 26.2053, 0.45", "-4.03529, -74.7329, 25.3223, 0.45", "-2.65196, -74.3408, 24.1227, 0.45", "1.16661, -73.6098, 21.2523, 0.45", "4.64644, -73.0509, 18.7824, 0.45", "8.00623, -72.5109, 16.4392, 0.45", "11.5035, -71.8983, 13.5025, 0.45", "14.5894, -71.3282, 10.8655, 0.45", "16.9962, -70.8979, 8.847, 0.45", "21.5379, -70.1403, 5.15603, 0.45", "24.6696, -69.5897, 2.60777, 0.45", "30.6461, -68.261, -2.66001, 0.45", "32.6883, -67.715, -4.98042, 0.45", "32.8993, -67.6392, -5.25165, 0.45", "33.2301, -67.4969, -5.77447, 0.45", "34.5866, -66.9951, -7.96975, 0.45", "37.5805, -66.3985, -13.0167, 0.45", "39.2419, -66.2915, -15.5523, 0.45", "40.1134, -66.2926, -16.8718, 0.45", "42.1849, -66.4428, -20.0034, 0.45", "43.4956, -66.6463, -21.9354, 0.45", "46.6812, -67.2601, -26.4999, 0.45", "48.8017, -67.5848, -29.0478, 0.45", "49.6471, -67.7099, -29.9816, 0.45", "50.6118, -67.8022, -30.9577, 0.45", "51.7131, -67.7776, -31.8964, 0.45", "53.313, -67.473, -33.0633, 0.45", "56.1492, -66.4929, -34.4018, 0.45", "57.4382, -66.0232, -35.0995, 0.45", "61.1832, -64.6338, -37.2545, 0.45", "62.9271, -63.9815, -38.3511, 0.45", "64.4409, -63.464, -39.3335, 0.45", "67.3133, -62.6304, -41.1908, 0.45", "74.117, -61.1044, -45.398, 0.45", "74.9403, -60.9452, -45.9127, 0.45", "77.4845, -60.607, -47.5841, 0.45", "79.2381, -60.461, -48.8067, 0.45", "80.0411, -60.4319, -49.3868, 0.45", "82.9193, -60.4064, -51.4356, 0.45", "85.2503, -60.362, -52.008, 0.45" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-131.251, -175.776, 156.45, 0.57", "-132.524, -177.157, 156.68, 0.57", "-136.174, -180.745, 157.081, 0.57", "-139.254, -183.551, 157.273, 0.45", "-142.158, -185.793, 157.642, 0.45", "-144.453, -187.422, 157.982, 0.45", "-146.527, -188.794, 158.362, 0.45", "-148.92, -190.253, 158.791, 0.45", "-151.528, -191.568, 159.254, 0.45", "-158.638, -194.665, 160.658, 0.45", "-159.985, -195.211, 160.986, 0.45", "-162.454, -196.235, 161.753, 0.45" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-131.251, -175.776, 156.45, 0.57", "-132.433, -181.229, 159.563, 0.57", "-132.86, -183.082, 160.649, 0.57", "-133.37, -185.419, 161.988, 0.57", "-134.047, -188.585, 163.753, 0.57", "-134.507, -190.737, 165.04, 0.57", "-134.714, -191.823, 165.694, 0.57", "-134.754, -192.016, 165.829, 2.04", "-135.353, -194.822, 167.255, 0.57", "-135.628, -195.826, 167.621, 0.57", "-136.177, -197.332, 167.951, 1.92", "-137.981, -201.05, 169.06, 0.68", "-138.881, -202.66, 169.615, 0.68", "-141.432, -206.887, 171.029, 0.57", "-143.282, -209.628, 172.439, 0.57", "-145.927, -213.429, 174.972, 0.57", "-149.537, -219.048, 179.378, 0.57", "-150.018, -219.878, 180.151, 0.57", "-150.82, -221.647, 181.889, 0.45", "-153.141, -228.369, 189.445, 0.45", "-153.442, -229.468, 190.69, 0.45", "-154.275, -232.857, 194.358, 0.45", "-154.862, -235.548, 196.757, 0.45", "-155.502, -237.715, 198.864, 0.45", "-157.205, -242.022, 202.99, 0.45", "-158.145, -243.779, 204.539, 0.45", "-159.131, -245.226, 206.001, 0.45", "-159.546, -245.716, 206.575, 0.45", "-162.974, -249.254, 211.246, 0.11", "-165.002, -251.16, 214.001, 0.23", "-167.941, -254.053, 217.897, 0.23", "-169.186, -255.251, 219.706, 0.23" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "72.9597, -113.676, 33.2309, 0.34", "74.2668, -116.369, 33.7026, 0.34", "75.8401, -119.612, 34.2705, 0.34", "77.3845, -122.794, 34.8279, 0.34", "78.4945, -125.082, 35.2286, 0.34", "79.0934, -126.316, 35.4447, 0.34" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "72.9597, -113.676, 33.2309, 0.45", "75.8472, -112.544, 32.855, 0.45", "78.0191, -111.683, 32.4645, 0.45", "81.3131, -110.413, 31.8521, 0.45", "83.589, -109.5, 31.4686, 0.45", "88.1296, -107.658, 30.7507, 0.45", "91.1846, -106.487, 30.3252, 0.45", "93.5265, -105.669, 30.0929, 0.45", "96.7195, -104.635, 29.76, 0.45", "100.419, -103.454, 29.2818, 0.45", "100.876, -103.302, 29.1978, 1.58", "104.305, -102.117, 28.5301, 0.34", "107.082, -101.218, 27.8306, 0.34", "111.741, -99.7447, 26.2837, 0.34", "114.367, -98.9577, 25.1903, 0.34", "117.113, -98.4976, 23.9318, 0.34", "118.856, -98.3533, 23.0313, 0.34", "120.811, -98.4228, 22.0279, 0.34", "123.809, -99.0274, 20.5694, 0.34", "126.1, -99.7897, 19.6801, 0.34", "132.369, -102.346, 17.647, 0.34", "135.697, -103.832, 16.5567, 0.34", "139.159, -105.459, 15.4041, 0.34", "144.464, -108.117, 13.722, 0.34", "147.644, -109.871, 12.7426, 0.34", "151.049, -111.842, 11.6577, 0.34", "154.405, -113.806, 10.7549, 0.34", "157.746, -115.703, 10.0669, 0.34", "159.295, -116.475, 9.85668, 0.34", "161.154, -117.339, 9.83965, 0.34", "163.296, -118.336, 9.96997, 0.34", "164.96, -119.072, 10.182, 0.34", "166.896, -119.862, 10.522, 0.34", "173.667, -122.485, 11.6953, 0.34", "176.875, -123.629, 12.2352, 0.34", "180.108, -124.749, 12.7665, 0.34", "183.099, -125.8, 13.2405, 0.34", "188.064, -127.577, 13.9009, 0.34", "191.969, -128.962, 14.3837, 0.34", "194.426, -129.78, 14.6407, 0.34" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-74.1027, -109.577, 65.8453, 0.34", "-75.0499, -109.944, 66.3992, 0.34", "-77.0305, -110.922, 67.2545, 0.34", "-77.8248, -111.369, 67.5038, 2.04", "-78.6114, -111.841, 67.7125, 1.13", "-79.8654, -112.694, 68.0416, 0.79", "-80.7291, -113.327, 68.123, 0.57", "-82.2676, -114.481, 68.054, 0.57", "-85.5201, -116.931, 67.6063, 0.57", "-87.0121, -117.976, 67.4895, 0.57", "-89.3994, -119.546, 67.4225, 0.57", "-93.718, -122.207, 67.4973, 0.57", "-96.161, -123.561, 67.5717, 0.57", "-97.3215, -124.138, 67.6236, 0.57", "-102.096, -126.313, 67.9593, 0.57", "-103.496, -126.917, 68.1025, 0.57", "-104.791, -127.488, 68.3319, 0.57", "-106.807, -128.471, 68.8428, 0.57", "-108.838, -129.586, 69.4359, 0.57", "-110.182, -130.393, 69.8759, 0.57", "-111.805, -131.527, 70.4374, 0.57", "-115.804, -134.491, 72.0248, 0.57", "-117.882, -136.062, 72.9147, 0.57", "-120.627, -138.182, 74.1439, 0.57", "-122.766, -139.839, 75.1025, 0.57", "-124.969, -141.489, 76.0455, 0.57", "-126.463, -142.623, 76.6923, 0.57", "-127.941, -143.745, 77.2664, 0.57", "-129.777, -145.138, 77.9894, 0.57", "-130.83, -145.926, 78.3344, 0.57", "-132.027, -146.784, 78.7128, 0.57", "-134.437, -148.454, 79.4974, 0.57", "-136.713, -150.083, 80.1234, 0.57", "-138.335, -151.265, 80.4768, 0.57", "-140.367, -152.748, 80.8011, 0.57", "-142.037, -154.0, 80.9714, 0.57", "-143.17, -154.862, 81.0184, 0.57", "-145.336, -156.496, 80.7383, 0.57", "-146.973, -157.736, 80.3621, 0.57", "-148.851, -159.134, 79.5877, 0.57", "-150.465, -160.336, 78.5936, 0.57", "-152.181, -161.585, 77.2974, 0.57", "-154.913, -163.446, 74.8834, 0.57", "-155.952, -164.103, 73.9706, 0.57", "-159.599, -166.242, 70.8129, 0.57", "-162.245, -167.714, 68.5225, 0.57", "-163.122, -168.213, 67.8037, 0.57", "-165.546, -169.713, 66.1112, 0.57", "-168.249, -171.743, 65.1319, 0.57", "-169.917, -173.249, 64.9999, 0.57", "-170.5, -173.854, 65.1521, 0.57", "-171.805, -175.282, 65.6698, 0.57", "-172.556, -176.118, 65.9654, 0.57", "-174.889, -178.955, 66.7694, 0.57", "-176.397, -180.923, 66.9233, 0.57", "-177.129, -181.919, 66.7901, 0.45", "-177.786, -182.863, 66.5334, 0.45", "-178.732, -184.433, 65.7999, 0.45", "-179.728, -186.603, 64.3099, 0.45", "-180.314, -188.362, 62.7785, 0.45", "-181.04, -191.144, 60.1852, 0.45", "-181.37, -192.61, 58.8077, 0.45", "-181.778, -194.799, 56.9337, 0.45", "-182.171, -197.258, 55.0855, 0.45", "-182.551, -199.094, 53.9635, 0.45", "-182.728, -199.822, 53.6373, 0.45", "-183.125, -201.101, 53.2855, 0.45", "-184.138, -203.665, 52.8059, 0.45", "-184.965, -205.394, 52.6981, 0.45", "-186.249, -207.68, 52.7529, 0.45", "-187.54, -209.691, 53.0722, 0.45", "-188.905, -211.6, 53.5602, 0.45", "-189.855, -212.755, 54.0333, 0.45", "-190.546, -213.488, 54.5226, 0.45", "-191.285, -214.233, 55.2609, 0.45", "-193.69, -216.868, 58.116, 0.45", "-194.17, -217.417, 58.7099, 0.45", "-194.941, -218.412, 59.987, 0.45", "-196.242, -220.359, 62.4794, 0.45", "-197.272, -222.205, 64.7341, 0.45", "-198.394, -224.693, 67.4619, 0.45", "-198.911, -226.072, 68.6892, 0.45", "-201.555, -232.925, 73.981, 0.45", "-202.263, -234.76, 75.1474, 0.45", "-203.206, -237.216, 76.0638, 0.45", "-204.549, -240.728, 76.6864, 0.45", "-206.539, -246.121, 76.961, 0.45", "-208.109, -250.604, 76.6909, 0.45", "-209.474, -254.639, 75.9206, 0.45", "-212.428, -263.899, 73.8106, 0.45", "-212.84, -265.277, 73.4278, 0.45", "-213.715, -268.709, 72.3665, 0.45", "-214.125, -270.954, 71.45, 0.45", "-214.515, -274.114, 70.0771, 0.45", "-214.758, -276.539, 69.041, 0.45", "-214.933, -277.831, 68.6538, 0.45", "-215.272, -279.645, 68.1117, 0.45", "-216.938, -286.313, 66.4631, 0.45", "-217.999, -289.818, 66.1886, 0.45", "-218.48, -291.194, 66.3308, 0.45", "-220.369, -296.042, 67.3428, 0.45", "-221.346, -298.369, 68.0456, 0.45", "-223.072, -301.947, 69.3527, 0.45", "-225.223, -305.986, 71.4527, 0.45", "-226.174, -307.787, 72.231, 0.45", "-227.279, -310.355, 73.007, 0.45", "-227.541, -311.527, 73.1437, 0.45", "-227.755, -315.72, 72.9808, 0.45", "-227.472, -320.674, 72.0714, 0.45", "-226.251, -328.404, 69.7487, 0.45", "-224.797, -333.553, 68.0202, 0.45", "-223.518, -336.539, 66.9804, 0.45", "-223.213, -337.086, 66.7691, 0.45" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-74.1027, -109.577, 65.8453, 0.34", "-72.3599, -108.807, 67.1462, 0.34", "-71.1108, -108.256, 68.0786, 0.34", "-66.2709, -106.118, 71.6912, 0.34", "-64.936, -105.529, 72.6875, 0.34" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-18.7036, -222.554, 75.4493, 0.57", "-19.7078, -223.149, 76.1324, 0.57", "-21.4203, -224.272, 76.8491, 0.57", "-22.3648, -224.973, 77.1319, 0.57", "-23.6666, -226.018, 77.2364, 0.57", "-24.8955, -227.086, 77.248, 0.57", "-27.0987, -229.05, 77.2115, 0.57", "-28.3188, -230.19, 77.1033, 0.57", "-29.7056, -231.518, 76.9085, 0.57", "-32.2048, -233.926, 76.5739, 0.57", "-35.008, -236.567, 76.2176, 0.57", "-36.8808, -238.321, 76.0828, 0.57", "-37.5279, -238.918, 76.0868, 2.15", "-38.1089, -239.435, 76.1282, 1.36", "-39.3159, -240.464, 76.3909, 0.68", "-39.9567, -240.994, 76.6799, 0.68", "-40.6852, -241.569, 77.1395, 0.57", "-41.084, -241.883, 77.4644, 0.57", "-42.1171, -242.712, 78.3871, 0.57", "-43.2592, -243.61, 79.4438, 0.57", "-44.0149, -244.213, 80.1388, 0.57", "-44.9637, -245.011, 80.9007, 0.57", "-45.9134, -245.806, 81.4577, 0.57", "-46.2951, -246.134, 81.6254, 0.57", "-46.8766, -246.651, 81.7922, 0.57", "-47.676, -247.369, 81.9471, 0.57", "-50.0538, -249.481, 82.3226, 0.57", "-51.57, -250.817, 82.4541, 0.57", "-52.856, -251.949, 82.5271, 0.57", "-54.4746, -253.317, 82.6088, 0.57", "-56.5639, -255.035, 82.7805, 0.57", "-59.2778, -257.107, 83.093, 0.57", "-60.4017, -257.9, 83.211, 1.7", "-61.4183, -258.587, 83.3176, 1.7", "-62.427, -259.225, 83.3586, 0.68", "-64.2872, -260.316, 83.367, 0.68", "-65.4504, -261.004, 83.3324, 0.68", "-67.2765, -262.133, 83.2737, 0.68", "-67.7778, -262.468, 83.2466, 1.7", "-68.5749, -263.077, 83.1583, 1.7", "-69.1048, -263.538, 83.0771, 1.7", "-69.7194, -264.151, 82.9635, 0.68", "-71.1436, -265.762, 82.7268, 0.68", "-72.5003, -267.421, 82.5647, 0.68", "-73.5633, -268.823, 82.508, 0.68", "-74.0494, -269.519, 82.5099, 0.68", "-75.138, -271.2, 82.5835, 0.68", "-76.114, -272.8, 82.7309, 0.68", "-76.5689, -273.618, 82.8642, 0.68", "-77.6064, -275.605, 83.3464, 0.68", "-77.8968, -276.19, 83.5056, 0.68", "-78.2391, -276.903, 83.7111, 1.02", "-78.5832, -277.643, 83.9169, 0.45", "-79.0644, -278.809, 84.1801, 0.45", "-79.2024, -279.166, 84.228, 0.45", "-79.6168, -280.241, 84.3169, 0.45", "-80.1071, -281.51, 84.4303, 0.45", "-80.6518, -282.961, 84.5592, 0.45", "-81.2647, -284.637, 84.7016, 0.45", "-81.7985, -286.146, 84.8465, 0.45", "-82.6386, -288.496, 85.0755, 0.45", "-82.8798, -289.215, 85.1444, 0.45", "-83.1548, -290.107, 85.2271, 1.47", "-83.2476, -290.415, 85.2559, 1.47", "-83.7129, -291.903, 85.3352, 0.68", "-84.2722, -293.685, 85.3886, 0.57", "-84.7536, -295.293, 85.4585, 0.57", "-85.2064, -296.802, 85.6081, 0.57", "-85.3378, -297.231, 85.6678, 0.57", "-85.7341, -298.558, 85.9614, 0.57", "-86.1448, -300.031, 86.5146, 0.57", "-86.4296, -301.315, 87.1366, 1.7", "-86.813, -303.368, 88.2072, 0.68", "-86.9616, -304.398, 88.7582, 0.68", "-87.189, -306.315, 89.7566, 0.68", "-87.5229, -309.125, 91.1209, 0.68", "-87.8115, -311.071, 91.9268, 0.68", "-87.954, -311.806, 92.1732, 2.15", "-88.0592, -312.256, 92.2928, 2.15", "-88.4802, -313.755, 92.5448, 0.68", "-89.0715, -315.469, 92.7321, 0.68", "-89.4865, -316.564, 92.8572, 0.68", "-90.0915, -318.05, 93.1207, 0.68", "-90.7332, -319.638, 93.3952, 0.68", "-91.327, -321.199, 93.65, 0.68", "-92.1495, -323.646, 94.0165, 0.68", "-92.6056, -325.259, 94.2304, 0.68", "-92.9271, -326.493, 94.344, 0.68", "-93.3815, -328.361, 94.4219, 0.68", "-93.55, -329.108, 94.416, 0.68", "-93.9441, -331.012, 94.3023, 0.68", "-94.1806, -332.234, 94.1472, 0.68", "-94.4829, -333.766, 93.9425, 0.68", "-94.7992, -335.234, 93.8093, 0.68", "-95.0935, -336.416, 93.7795, 0.68", "-95.3106, -337.17, 93.7663, 0.68", "-95.5737, -337.995, 93.8076, 0.68", "-95.672, -338.295, 93.843, 0.68", "-96.1354, -339.691, 94.0798, 0.68", "-96.6455, -341.302, 94.4178, 0.68", "-96.9777, -342.474, 94.6802, 0.68", "-97.4027, -344.116, 95.041, 0.68", "-97.7601, -345.691, 95.4178, 0.68", "-97.8396, -346.114, 95.5452, 0.68", "-98.0059, -347.171, 95.8969, 0.57", "-98.1478, -348.123, 96.2142, 0.57", "-98.4055, -349.897, 96.8052, 0.57", "-98.604, -351.562, 97.4135, 0.57", "-98.8238, -353.386, 98.1773, 0.57", "-99.0537, -355.213, 98.9533, 0.57", "-99.3077, -356.885, 99.592, 0.57", "-99.5052, -358.056, 99.9482, 1.47", "-99.9383, -360.431, 100.519, 0.45", "-100.182, -361.583, 100.699, 0.45", "-100.694, -364.014, 100.899, 0.45", "-101.044, -366.016, 101.056, 0.45", "-101.378, -368.338, 101.189, 0.45", "-101.423, -370.234, 101.273, 0.45", "-102.074, -369.634, 100.419, 0.45", "-103.133, -367.836, 99.0837, 0.45" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-18.7036, -222.554, 75.4493, 0.57", "-19.1731, -223.467, 75.5621, 0.57", "-19.486, -224.075, 75.6361, 0.57", "-19.9118, -224.93, 75.7349, 0.57", "-20.5552, -226.222, 75.8841, 0.57", "-21.3239, -227.765, 76.0625, 0.57", "-21.8005, -228.722, 76.173, 2.15", "-22.2331, -229.562, 76.2643, 2.72", "-22.5552, -230.221, 76.3443, 2.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "79.0934, -126.316, 35.4447, 0.45", "83.9566, -128.107, 34.0136, 0.45", "85.148, -128.494, 33.761, 0.45", "87.3947, -129.051, 33.341, 0.45", "90.3863, -129.72, 32.8154, 0.45", "93.1237, -130.336, 32.3524, 0.45", "96.7124, -131.077, 31.7169, 0.45", "97.9925, -131.272, 31.5465, 0.45", "101.609, -131.686, 30.8968, 0.45", "104.417, -131.878, 30.2468, 0.45", "106.62, -131.906, 29.5842, 0.45", "109.641, -131.753, 28.2644, 0.45", "111.583, -131.537, 27.161, 0.45", "113.678, -131.222, 25.8256, 0.45", "115.758, -130.897, 24.237, 0.45", "117.999, -130.513, 22.2005, 0.45", "121.108, -129.905, 19.1387, 0.45", "122.345, -129.677, 17.8144, 0.45", "123.631, -129.469, 16.3513, 0.45", "126.715, -129.131, 12.7197, 0.45", "127.971, -129.126, 11.07, 0.45" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "79.0934, -126.316, 35.4447, 0.34", "78.6917, -128.366, 35.3291, 0.34", "78.4804, -129.154, 35.261, 0.34", "78.075, -130.468, 35.1362, 0.34", "77.2992, -132.864, 34.8979, 0.34", "76.494, -135.04, 34.5882, 0.34", "75.5676, -137.278, 34.2531, 0.34", "74.3487, -139.496, 33.9204, 0.34", "74.1596, -139.774, 33.8789, 0.34", "74.031, -139.923, 33.8509, 1.58", "72.3665, -141.518, 33.6066, 0.45", "71.5864, -142.227, 33.4597, 0.45", "69.6076, -144.042, 32.9851, 0.45", "68.9498, -144.688, 32.8103, 0.45", "67.3092, -146.462, 32.328, 0.45", "66.7604, -147.112, 32.1733, 0.45", "65.3677, -148.998, 31.8065, 0.45", "64.7589, -149.934, 31.5948, 0.45", "63.7179, -151.808, 31.2268, 0.45", "63.0924, -153.004, 31.0277, 0.45", "62.3063, -154.601, 30.8494, 0.45", "61.1448, -157.044, 30.5494, 0.45", "60.3292, -158.778, 30.3821, 0.45", "59.3049, -161.017, 30.1741, 0.45", "58.4561, -162.827, 30.058, 0.45", "57.7187, -164.399, 29.9441, 0.45", "56.8532, -166.203, 29.8027, 0.45", "56.0318, -167.828, 29.7178, 0.45", "55.4797, -168.797, 29.7074, 0.45", "54.5099, -170.34, 29.5785, 0.45", "54.1505, -170.896, 29.526, 0.45", "53.1021, -172.448, 29.361, 0.45", "52.4733, -173.358, 29.2837, 0.45", "51.5746, -174.657, 29.1447, 0.45", "49.8937, -177.134, 28.6506, 0.45", "48.9308, -178.634, 28.2692, 0.45", "48.4006, -179.51, 28.0363, 0.45", "47.9977, -180.273, 27.8488, 0.45", "47.6905, -180.911, 27.6754, 0.45", "46.4505, -183.627, 26.9847, 0.45", "45.8797, -184.884, 26.7148, 0.45", "45.5465, -185.637, 26.5315, 0.45", "44.9726, -186.967, 26.2284, 0.45", "44.0321, -189.142, 25.4974, 0.45", "43.5918, -190.169, 25.1269, 0.45", "43.2798, -190.916, 24.8877, 0.45", "42.9227, -191.763, 24.622, 0.45", "42.1953, -193.477, 24.0707, 0.45", "40.5994, -197.492, 23.2546, 0.45", "40.0244, -199.097, 23.2721, 0.45", "39.4551, -200.801, 23.5959, 0.45", "38.8261, -202.598, 24.4091, 0.45", "38.5389, -203.328, 24.9365, 0.45", "36.6965, -207.362, 29.0548, 0.45", "36.1196, -208.459, 30.4556, 0.45", "36.0051, -208.644, 30.7126, 0.45", "35.2355, -209.715, 32.1882, 0.45", "34.5865, -210.569, 33.2273, 0.45", "33.7837, -211.601, 34.1204, 0.45", "33.6021, -211.833, 34.217, 0.45", "33.0102, -212.637, 34.3984, 0.45", "32.0953, -213.984, 34.5517, 0.45", "31.4243, -215.059, 34.5826, 0.45", "30.4519, -216.713, 34.5728, 0.45", "29.4623, -218.497, 34.5345, 0.45", "27.9081, -221.617, 34.5448, 0.45", "27.4746, -222.559, 34.5652, 0.45", "27.0553, -223.508, 34.594, 0.45", "26.5825, -224.61, 34.6527, 0.45", "26.106, -225.83, 34.7991, 0.45", "25.2796, -228.363, 35.2172, 0.45", "25.1327, -228.99, 35.4184, 0.45" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-22.5552, -230.221, 76.3443, 0.45", "-24.059, -232.249, 76.2607, 0.45", "-25.2328, -233.875, 76.2127, 0.45", "-26.3076, -235.379, 76.1769, 0.45", "-27.8952, -237.73, 76.148, 0.45", "-28.8381, -239.096, 76.1492, 0.45", "-30.2776, -241.17, 76.2308, 0.45", "-31.7313, -243.397, 76.4161, 0.45", "-32.1151, -243.98, 76.4768, 1.47", "-33.549, -246.058, 76.7784, 0.45", "-34.4599, -247.382, 77.0204, 0.45", "-35.3559, -248.734, 77.3807, 0.45", "-35.9694, -249.746, 77.7073, 0.45", "-37.1876, -251.98, 78.5315, 0.45", "-38.0143, -253.584, 79.1446, 0.79", "-38.751, -255.119, 79.7331, 0.79", "-40.0252, -258.059, 80.8935, 0.45", "-40.9683, -260.295, 81.7653, 0.45", "-42.064, -263.124, 82.8963, 0.45", "-42.3939, -264.077, 83.3376, 0.45", "-42.6917, -264.996, 83.7814, 1.92", "-43.1908, -266.696, 84.7801, 1.47", "-43.5658, -268.159, 85.7031, 0.57", "-43.8735, -269.556, 86.6461, 0.57", "-44.3156, -271.926, 88.442, 0.57", "-44.6068, -273.778, 89.8355, 0.57", "-45.25, -277.841, 92.7663, 0.57", "-45.3851, -278.731, 93.3387, 0.57", "-45.6929, -280.565, 94.3482, 0.57", "-46.3471, -283.819, 95.6722, 0.57", "-46.7572, -285.668, 96.1305, 0.57", "-47.1761, -287.461, 96.2365, 0.57", "-47.7491, -289.764, 96.1861, 0.57", "-48.5923, -292.991, 96.2595, 0.57", "-49.52, -296.333, 96.4389, 0.57", "-50.3601, -299.337, 96.5948, 0.57", "-51.7834, -304.324, 96.9649, 0.57", "-52.9775, -308.029, 97.134, 0.57", "-54.2524, -311.417, 97.2061, 0.23", "-55.053, -313.356, 97.2682, 0.23", "-55.9959, -315.419, 97.3586, 0.23", "-57.233, -317.992, 97.4628, 0.23", "-58.9471, -321.373, 97.6054, 0.23", "-59.6791, -322.668, 97.3812, 0.23", "-60.735, -324.313, 96.9632, 1.7", "-62.0517, -326.084, 96.618, 0.68", "-63.3762, -327.582, 96.4371, 0.45", "-64.1696, -328.354, 96.4899, 0.45", "-67.6502, -330.99, 97.4481, 0.45", "-70.4844, -332.552, 98.3697, 0.45", "-72.4878, -333.4, 99.0389, 0.45", "-73.8141, -333.888, 99.5817, 0.45", "-75.1178, -334.415, 100.075, 0.45", "-77.2668, -335.685, 100.816, 0.45", "-77.5578, -335.917, 100.907, 0.45", "-78.2221, -336.551, 100.973, 1.92", "-79.8045, -338.348, 100.982, 0.57", "-81.5557, -340.645, 100.941, 0.57", "-83.055, -342.859, 100.725, 0.45", "-83.8261, -344.114, 100.566, 0.45", "-85.3521, -346.628, 100.266, 0.45", "-86.4432, -348.498, 100.079, 0.57", "-87.0792, -349.629, 99.9696, 0.57", "-88.6114, -352.441, 99.7346, 0.57", "-90.7007, -356.182, 99.3551, 0.57", "-91.6384, -357.88, 99.1729, 0.57", "-93.6996, -361.65, 98.7582, 0.57" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-22.5552, -230.221, 76.3443, 0.45", "-21.8809, -232.565, 76.8668, 0.45", "-21.5668, -233.585, 77.0873, 0.45", "-20.5287, -237.112, 78.1346, 0.45", "-19.6344, -240.427, 79.2319, 0.45", "-18.9363, -243.144, 80.0709, 0.45", "-18.9086, -243.244, 80.0983, 1.81", "-18.5355, -244.535, 80.4269, 1.7", "-17.6085, -247.838, 81.241, 0.68", "-17.0352, -249.725, 81.6746, 0.68", "-16.2669, -252.117, 82.3172, 0.68", "-15.3017, -254.963, 83.1118, 0.68", "-14.6584, -256.653, 83.5519, 0.68", "-13.6773, -258.916, 84.1017, 0.68", "-12.5673, -261.142, 84.5971, 0.68", "-11.1776, -263.716, 85.236, 0.68", "-9.6163, -266.444, 85.9783, 0.68", "-7.6673, -269.704, 86.8317, 0.68", "-6.35817, -271.818, 87.1808, 0.68", "-4.96719, -274.013, 87.3614, 0.68", "-3.98448, -275.568, 87.3729, 0.68", "-2.80624, -277.53, 87.254, 0.68", "-0.565433, -281.451, 86.9069, 0.68", "1.64943, -285.48, 86.5384, 0.57", "2.54977, -287.17, 86.3933, 0.57", "3.72964, -289.436, 86.2269, 0.57", "5.16357, -292.112, 85.9921, 0.57", "6.80449, -295.104, 85.7326, 0.57", "8.74239, -298.566, 85.5066, 0.57", "9.85862, -300.447, 85.5115, 0.57", "10.7179, -301.854, 85.5185, 0.57", "12.6449, -304.947, 85.7316, 0.57", "13.1295, -305.673, 85.821, 0.57", "14.1199, -307.146, 86.0964, 0.57", "15.5288, -309.358, 86.8249, 0.57", "15.9395, -310.004, 87.0843, 2.6", "17.3435, -312.266, 88.088, 2.04", "19.2155, -315.278, 89.207, 0.57", "20.0409, -316.54, 89.5148, 0.57", "21.6859, -319.282, 90.5595, 0.57", "22.7844, -321.267, 91.4415, 0.57", "24.0162, -323.625, 92.6733, 0.57", "25.8641, -327.374, 94.7421, 0.57", "27.184, -330.378, 96.5371, 0.57", "30.8626, -338.833, 100.968, 0.57", "32.9452, -343.781, 103.164, 0.57", "34.0685, -346.626, 104.338, 0.57", "35.0189, -349.087, 105.201, 0.57", "35.5695, -350.581, 105.62, 0.57", "38.0881, -357.093, 106.071, 0.57", "39.3662, -359.933, 105.618, 0.57", "39.9283, -361.177, 105.343, 0.57", "40.9458, -363.384, 104.807, 0.45", "41.4321, -364.417, 104.611, 0.45", "42.4245, -366.467, 104.533, 0.45", "43.3793, -368.599, 104.923, 0.45", "43.8358, -369.591, 105.146, 0.45", "44.3399, -370.714, 105.424, 0.45", "44.7939, -371.755, 105.679, 0.45", "45.8951, -374.252, 106.258, 0.45", "46.6336, -375.999, 106.68, 0.45", "47.4932, -378.123, 107.178, 0.45", "48.5963, -380.76, 107.782, 0.45", "49.531, -383.021, 108.255, 0.45", "49.8686, -383.89, 108.425, 0.45", "50.7352, -386.153, 108.813, 0.45", "52.1957, -390.026, 109.492, 0.45", "53.3528, -393.142, 110.052, 0.45", "54.52, -396.396, 110.663, 0.45", "55.539, -399.33, 111.261, 0.45" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "127.971, -129.126, 11.07, 0.45", "127.898, -130.315, 9.5953, 0.45", "127.894, -131.37, 8.49227, 0.45", "127.97, -132.608, 7.33479, 0.45", "127.999, -133.734, 6.30253, 0.45", "127.816, -138.958, 1.55109, 0.45", "127.602, -142.196, -1.34678, 0.45", "127.311, -144.179, -3.24838, 0.45", "127.136, -145.015, -4.04441, 0.45", "126.477, -147.857, -6.56337, 0.45", "126.053, -149.818, -8.1424, 0.45", "126.003, -150.121, -8.32452, 0.45", "125.682, -152.641, -9.68991, 0.45", "125.491, -154.426, -10.6739, 0.45", "125.44, -156.122, -11.3919, 0.45", "125.598, -157.76, -11.9262, 0.34", "125.898, -159.457, -12.401, 0.34", "126.124, -160.504, -12.6589, 0.34", "126.337, -161.29, -12.8123, 0.34", "127.126, -163.81, -13.3027, 0.34", "128.058, -167.035, -13.9306, 0.34", "128.329, -167.994, -14.049, 0.34", "128.491, -168.73, -14.2103, 0.34", "128.757, -170.21, -14.6168, 0.34", "128.884, -171.035, -14.8714, 0.34", "129.104, -172.707, -15.4544, 0.34", "129.297, -174.193, -15.8728, 0.34", "129.734, -178.19, -17.233, 0.34", "129.904, -179.925, -17.924, 0.34", "129.939, -180.37, -18.1271, 0.34" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "127.971, -129.126, 11.07, 0.45", "130.667, -130.581, 10.6815, 0.45", "132.71, -132.068, 10.2231, 0.45", "135.106, -134.051, 9.65836, 0.45", "138.02, -137.215, 8.46348, 0.45", "139.9, -139.705, 7.54682, 0.45", "142.536, -143.582, 6.21689, 0.45", "144.96, -147.974, 4.88706, 0.34", "145.928, -149.985, 4.36992, 0.34", "149.131, -157.479, 2.42338, 0.34", "151.007, -162.08, 1.18245, 0.34", "152.372, -165.343, 0.37994, 0.34", "153.672, -168.395, -0.235931, 0.34", "155.54, -172.37, -0.761545, 0.34", "157.653, -176.712, -1.09595, 0.34", "159.397, -179.966, -1.02667, 0.34", "161.073, -183.051, -0.920681, 0.34", "162.588, -185.884, -0.651174, 0.34", "163.818, -188.064, -0.210242, 0.34", "165.106, -190.241, 0.572563, 0.34", "166.498, -192.568, 1.507, 0.34", "168.246, -195.429, 2.59252, 0.34", "171.527, -200.638, 4.36592, 0.45", "174.338, -204.776, 5.70369, 0.45", "177.066, -208.466, 6.97999, 0.45", "180.415, -212.805, 8.48794, 0.45", "182.076, -214.847, 9.08287, 0.45", "184.017, -217.191, 9.62162, 0.45", "185.086, -218.514, 9.78776, 0.45", "189.622, -224.326, 10.1322, 0.45", "192.66, -228.313, 10.2997, 0.45", "195.578, -232.247, 10.6408, 0.45", "196.8, -233.945, 10.768, 0.45", "200.917, -239.555, 11.2264, 0.45", "202.831, -242.184, 11.5244, 0.45", "205.433, -245.742, 12.131, 0.45", "207.065, -247.851, 12.7206, 0.45", "208.215, -249.326, 13.2157, 0.45", "211.146, -253.066, 14.5109, 0.45", "214.132, -256.916, 15.9586, 0.45", "216.641, -260.454, 16.9698, 0.45", "219.206, -264.43, 17.7434, 0.45", "221.0, -267.515, 17.942, 0.45", "222.753, -270.91, 17.826, 0.45", "223.985, -273.571, 17.5008, 0.45", "226.333, -278.939, 16.585, 0.45", "227.596, -281.953, 16.0577, 0.45", "229.764, -287.149, 15.2829, 0.45", "231.86, -291.895, 14.7378, 0.45", "233.226, -294.808, 14.4452, 0.45", "234.457, -297.443, 14.077, 0.45", "236.136, -301.022, 13.6084, 0.45", "237.113, -303.06, 13.2363, 0.45", "237.616, -304.14, 13.0089, 0.45", "238.83, -306.774, 12.3377, 0.45", "241.991, -313.502, 10.3167, 0.45", "243.228, -316.122, 9.41925, 0.45", "244.932, -319.77, 8.04267, 0.45", "246.332, -322.75, 6.91051, 0.45", "246.855, -323.909, 6.4897, 0.79" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "246.855, -323.909, 6.4897, 0.45", "245.672, -326.153, 6.54478, 0.45", "245.03, -327.601, 6.62993, 0.45", "244.538, -328.885, 6.58014, 0.45", "244.316, -329.567, 6.41445, 0.45", "244.063, -330.71, 6.05118, 0.45", "243.921, -331.704, 5.73667, 0.45", "243.916, -333.202, 5.24141, 0.45", "244.057, -335.723, 4.38546, 0.45", "244.303, -339.017, 3.26276, 0.45", "244.408, -340.811, 2.75768, 0.45", "244.522, -343.258, 2.22359, 0.45", "244.522, -344.709, 2.01674, 0.45", "244.481, -346.617, 2.04148, 0.45", "244.381, -349.097, 2.79261, 0.45", "244.178, -351.752, 4.04197, 0.45", "243.986, -353.268, 4.97586, 0.45", "243.781, -354.697, 6.28133, 0.45", "243.421, -357.29, 9.20089, 0.45", "243.003, -360.626, 13.5201, 0.45", "242.886, -361.639, 14.8921, 0.45", "242.75, -363.159, 16.9196, 0.45", "242.454, -366.559, 21.7114, 0.45", "242.374, -367.533, 23.1166, 0.45", "242.225, -368.703, 24.6567, 0.45", "241.928, -370.627, 26.8671, 0.45", "241.815, -371.557, 27.9542, 0.45" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "246.855, -323.909, 6.4897, 0.45", "247.928, -325.21, 6.81477, 0.45", "249.961, -327.492, 7.30825, 0.45", "252.208, -329.686, 7.72318, 0.45", "254.211, -331.566, 8.09791, 0.45", "256.388, -333.611, 8.50632, 0.45", "257.543, -334.739, 8.62067, 0.45", "260.084, -337.275, 8.50363, 0.45", "262.651, -339.888, 8.0251, 0.45", "265.433, -342.846, 7.14224, 0.45", "266.349, -343.849, 6.7933, 0.45", "270.029, -347.931, 5.29534, 0.45", "272.791, -351.103, 4.18709, 0.45", "274.372, -352.897, 3.62232, 0.45", "277.853, -356.614, 2.60826, 0.45", "279.445, -358.197, 2.36261, 0.45", "282.496, -361.093, 2.35628, 0.45", "286.512, -364.691, 2.95692, 0.45", "291.066, -368.791, 4.2508, 0.45", "294.399, -371.817, 5.65819, 0.45", "298.534, -375.379, 7.86187, 0.45", "300.675, -377.144, 9.13083, 0.45", "302.135, -378.226, 10.0376, 0.45", "306.095, -380.554, 12.2223, 0.45", "309.849, -382.381, 13.9815, 0.45", "314.822, -384.41, 15.8046, 0.45", "318.263, -385.557, 16.6579, 0.45", "323.868, -387.077, 17.6406, 0.45", "331.923, -388.706, 18.673, 0.45", "334.113, -388.956, 18.8377, 0.45", "336.179, -389.037, 18.9115, 0.45", "339.625, -388.716, 19.0497, 0.45", "341.692, -388.069, 19.1609, 0.45", "344.292, -386.119, 19.3436, 0.45", "345.533, -384.565, 19.4664, 0.45", "346.649, -383.002, 19.5629, 0.45", "348.973, -379.633, 19.7224, 0.45", "350.368, -377.689, 19.7919, 0.45", "352.993, -374.591, 19.8441, 0.45", "355.322, -372.423, 20.0733, 0.45", "357.905, -370.525, 20.5739, 0.45", "359.882, -369.313, 21.0313, 0.45", "361.827, -368.444, 21.608, 0.45", "364.276, -367.757, 22.4865, 0.45", "371.022, -367.464, 26.2386, 0.45", "371.9, -367.608, 26.9743, 0.45" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "241.815, -371.557, 27.9542, 0.45", "241.468, -374.388, 28.8639, 0.45", "241.336, -376.861, 29.6334, 0.45", "241.33, -379.473, 30.4812, 0.45", "241.349, -381.851, 31.2387, 0.45", "241.517, -385.793, 32.7919, 0.45", "241.655, -387.597, 33.7198, 0.45", "241.951, -390.026, 35.3151, 0.45", "242.287, -392.306, 36.9556, 0.45", "242.898, -395.548, 39.4509, 0.45", "243.911, -400.23, 43.1201, 0.45", "245.074, -404.927, 46.6974, 0.45", "246.07, -409.085, 49.687, 0.45", "246.699, -411.628, 51.3425, 0.45", "247.712, -415.726, 53.5976, 0.45", "248.388, -418.456, 54.8353, 0.45", "249.116, -422.025, 55.9633, 0.45", "249.799, -425.499, 56.7834, 0.45", "250.505, -429.138, 57.5321, 0.45", "251.088, -432.499, 58.308, 0.45", "251.519, -436.074, 59.0257, 0.45", "251.975, -440.679, 59.9734, 0.45" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "241.815, -371.557, 27.9542, 0.45", "244.197, -370.251, 27.5559, 0.45", "245.37, -369.608, 27.3597, 0.45", "246.694, -368.882, 27.1382, 0.45" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "251.975, -440.679, 59.9734, 0.45", "250.413, -443.433, 63.2143, 0.45", "248.483, -446.892, 66.8021, 0.45", "247.35, -448.986, 68.7709, 0.45", "246.667, -450.324, 69.9217, 0.45", "246.515, -450.633, 70.165, 0.45", "244.93, -453.966, 72.6911, 0.45", "244.563, -454.863, 73.1517, 0.45", "244.234, -455.756, 73.5007, 0.45", "243.859, -456.666, 73.8891, 0.45", "243.289, -457.917, 74.3606, 0.45", "242.29, -460.122, 75.0289, 0.45", "241.409, -462.114, 75.5618, 0.45", "240.351, -464.497, 76.3704, 0.45", "239.741, -465.801, 76.951, 0.45", "238.993, -467.325, 77.6921, 0.45", "237.903, -469.47, 78.7859, 0.45", "236.958, -471.339, 80.3754, 0.45", "236.146, -472.907, 82.213, 0.45", "235.519, -474.148, 83.903, 0.45", "234.971, -475.233, 85.6174, 0.45", "234.358, -476.352, 87.5302, 0.45", "231.706, -480.961, 95.1413, 0.45", "231.029, -482.184, 96.9104, 0.45", "230.579, -483.07, 97.9733, 0.45", "229.163, -486.057, 100.921, 0.45", "228.458, -487.692, 102.268, 0.45", "227.617, -489.903, 103.45, 0.45", "226.97, -491.683, 103.825, 0.45", "226.292, -493.782, 104.141, 0.45", "225.713, -495.798, 104.244, 0.45", "225.332, -497.41, 104.051, 0.45", "225.19, -498.227, 103.954, 0.45" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "251.975, -440.679, 59.9734, 0.45", "252.084, -442.176, 60.7171, 0.45", "252.267, -445.243, 62.1292, 0.45", "252.282, -448.705, 63.6965, 0.45", "252.16, -449.986, 64.3819, 0.45", "251.84, -451.86, 65.5718, 0.45", "251.433, -453.733, 66.9273, 0.45", "251.078, -454.922, 67.9869, 0.45", "250.534, -456.486, 69.6265, 0.45", "249.142, -460.078, 74.117, 0.45", "248.233, -462.385, 77.1822, 0.45", "247.752, -463.751, 79.0234, 0.45", "247.106, -465.886, 81.9912, 0.45", "246.995, -466.427, 82.7236, 0.45", "246.975, -467.681, 84.4431, 0.45", "247.207, -469.047, 86.0701, 0.45", "247.698, -471.028, 88.198, 0.45", "247.934, -471.825, 88.9496, 0.45", "248.67, -474.294, 90.9481, 0.45", "250.002, -478.311, 94.0678, 0.45", "250.806, -480.536, 95.8212, 0.45", "252.004, -483.659, 98.3015, 0.45", "252.771, -485.751, 99.9691, 0.45", "254.329, -489.943, 103.338, 0.45", "254.82, -491.23, 104.365, 0.45", "255.893, -494.153, 106.609, 0.45", "256.267, -495.241, 107.558, 0.45", "257.205, -498.008, 110.074, 0.45", "258.008, -500.634, 112.614, 0.45", "258.341, -501.803, 114.017, 0.45", "258.694, -503.147, 115.921, 0.45", "259.261, -505.79, 119.59, 0.45", "259.474, -507.081, 121.352, 0.45", "259.68, -508.461, 123.188, 0.45", "260.474, -514.23, 130.48, 0.45", "261.079, -518.337, 135.322, 0.45", "261.628, -521.808, 139.156, 0.45", "261.805, -522.886, 140.202, 0.45", "261.979, -524.027, 141.347, 0.45", "262.21, -525.44, 142.817, 0.45", "262.498, -526.904, 144.472, 0.45", "262.8, -528.237, 146.329, 0.45", "262.924, -528.72, 147.129, 0.45", "264.062, -533.02, 154.796, 0.45", "264.568, -535.033, 158.435, 0.45", "265.519, -538.319, 164.151, 0.45", "265.673, -538.857, 165.099, 0.45", "265.851, -539.402, 166.002, 0.45", "266.195, -540.394, 167.479, 0.45", "267.076, -542.858, 170.535, 0.45", "267.91, -545.33, 173.449, 0.45", "269.927, -551.749, 180.784, 0.45", "270.747, -554.482, 183.967, 0.45", "271.15, -555.782, 185.507, 0.45", "271.588, -557.07, 187.575, 0.45", "272.218, -558.519, 190.833, 0.45", "272.965, -559.964, 195.285, 0.45", "273.253, -560.458, 197.146, 0.45", "273.432, -560.854, 198.867, 0.45", "274.616, -564.306, 213.872, 0.45", "274.89, -565.308, 217.93, 0.45", "275.16, -566.547, 222.293, 0.45", "275.274, -567.262, 224.899, 0.45", "275.475, -568.997, 230.98, 0.45", "275.512, -569.937, 233.868, 0.45", "275.513, -571.083, 236.54, 0.45", "275.486, -573.159, 241.463, 0.45", "275.854, -580.174, 259.514, 0.45" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_12", "dend_11", "dend_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_12", "dend_11", "dend_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_12", "dend_11", "dend_0", "axon_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "axon_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_NBC_63fe8b2e25_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: dend_23
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_24
create dend_44
public dend_44
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_69, id: dend_69, parent: dend_47
create dend_69
public dend_69
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_64, id: dend_64, parent: dend_48
create dend_64
public dend_64
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_29
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_29
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_49
create dend_63
public dend_63
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_62, id: dend_62, parent: dend_54
create dend_62
public dend_62
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, axon_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, axon_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_71
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_48, dend_48, dend_48, dend_48, dend_48, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.45000027720458424)
    connect dend_12(0), soma_0(0.45000027720458424)
    connect dend_11(0), soma_0(0.45000027720458424)
    connect dend_0(0), soma_0(0.45000027720458424)
    connect axon_0(0), soma_0(1.0)
    connect dend_45(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_69(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_64(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_29(1.0)
    connect dend_32(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_62(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.02864, -8.95645, 0.0, 3.19243 ) }
    soma_0 { pt3dadd( 0.862269, -8.03576, 0.0, 5.44292 ) }
    soma_0 { pt3dadd( 0.695902, -7.11508, 0.0, 7.15224 ) }
    soma_0 { pt3dadd( 0.529535, -6.1944, 0.0, 9.22848 ) }
    soma_0 { pt3dadd( 0.363167, -5.27371, 0.0, 10.1568 ) }
    soma_0 { pt3dadd( 0.1968, -4.35303, 0.0, 10.228 ) }
    soma_0 { pt3dadd( 0.0304325, -3.43235, 0.0, 10.4278 ) }
    soma_0 { pt3dadd( -0.135935, -2.51166, 0.0, 10.5372 ) }
    soma_0 { pt3dadd( -0.302302, -1.59098, 0.0, 10.6261 ) }
    soma_0 { pt3dadd( -0.468669, -0.670298, 0.0, 10.9078 ) }
    soma_0 { pt3dadd( -0.635037, 0.250385, 0.0, 11.3454 ) }
    soma_0 { pt3dadd( -0.801404, 1.17107, 0.0, 11.7831 ) }
    soma_0 { pt3dadd( -0.967771, 2.09175, 0.0, 12.1088 ) }
    soma_0 { pt3dadd( -1.13414, 3.01243, 0.0, 11.7546 ) }
    soma_0 { pt3dadd( -1.30051, 3.93312, 0.0, 11.2789 ) }
    soma_0 { pt3dadd( -1.46687, 4.8538, 0.0, 10.5376 ) }
    soma_0 { pt3dadd( -1.63324, 5.77448, 0.0, 9.41766 ) }
    soma_0 { pt3dadd( -1.79961, 6.69517, 0.0, 7.67825 ) }
    soma_0 { pt3dadd( -1.96598, 7.61585, 0.0, 5.72147 ) }
    soma_0 { pt3dadd( -2.13234, 8.53653, 0.0, 3.87406 ) }
    soma_0 { pt3dadd( -2.29871, 9.45721, 0.0, 2.1959 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.55142, -9.46517, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.55142, -9.46517, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.42904, -11.2514, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.324, -12.7845, -8.14, 3.62 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.23859, 3.99958, -3.81, 1.24 ) }
    dend_12 { pt3dadd( 6.79454, 4.16659, -3.42741, 1.24 ) }
    dend_12 { pt3dadd( 10.9765, 4.51804, -2.30067, 1.24 ) }
    dend_12 { pt3dadd( 14.9235, 4.84977, -1.23723, 1.24 ) }
    dend_12 { pt3dadd( 18.8604, 5.18062, -0.176498, 1.24 ) }
    dend_12 { pt3dadd( 26.9511, 5.86058, 2.00337, 1.24 ) }
    dend_12 { pt3dadd( 33.1843, 6.38442, 3.68278, 1.24 ) }
    dend_12 { pt3dadd( 35.7971, 6.5196, 4.4773, 1.24 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.49141, 4.70159, -1.31, 0.68 ) }
    dend_11 { pt3dadd( -8.85196, 4.62155, -1.70411, 0.68 ) }
    dend_11 { pt3dadd( -11.2979, 4.57869, -2.31913, 0.68 ) }
    dend_11 { pt3dadd( -15.2322, 4.91305, -3.30071, 0.68 ) }
    dend_11 { pt3dadd( -18.045, 5.42314, -3.95013, 0.68 ) }
    dend_11 { pt3dadd( -19.7871, 5.90003, -4.30107, 0.68 ) }
    dend_11 { pt3dadd( -22.7648, 6.81851, -4.82301, 0.68 ) }
    dend_11 { pt3dadd( -25.8288, 7.97091, -5.34415, 0.68 ) }
    dend_11 { pt3dadd( -29.7786, 9.77379, -5.94034, 0.68 ) }
    dend_11 { pt3dadd( -32.5237, 11.3038, -6.32993, 0.68 ) }
    dend_11 { pt3dadd( -36.435, 13.7888, -7.01491, 0.68 ) }
    dend_11 { pt3dadd( -39.9161, 16.2712, -7.8274, 0.68 ) }
    dend_11 { pt3dadd( -42.1962, 18.1139, -8.51345, 0.68 ) }
    dend_11 { pt3dadd( -44.3086, 20.0539, -9.25917, 0.68 ) }
    dend_11 { pt3dadd( -45.7945, 21.511, -9.82019, 0.68 ) }
    dend_11 { pt3dadd( -48.6073, 24.2113, -10.8961, 0.68 ) }
    dend_11 { pt3dadd( -50.6592, 26.2313, -11.7804, 0.68 ) }
    dend_11 { pt3dadd( -51.6089, 27.1765, -12.1731, 0.68 ) }
    dend_11 { pt3dadd( -54.9822, 30.4708, -13.6235, 0.68 ) }
    dend_11 { pt3dadd( -57.6462, 33.0685, -14.8446, 0.68 ) }
    dend_11 { pt3dadd( -61.4434, 36.5943, -16.4867, 0.68 ) }
    dend_11 { pt3dadd( -64.0554, 38.8912, -17.4356, 0.57 ) }
    dend_11 { pt3dadd( -66.2967, 40.7353, -18.1866, 0.57 ) }
    dend_11 { pt3dadd( -68.9711, 42.8675, -19.1661, 0.57 ) }
    dend_11 { pt3dadd( -69.5588, 43.3125, -19.4749, 0.57 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.06859, -4.73641, -2.56, 1.47 ) }
    dend_0 { pt3dadd( 6.46207, -5.61682, -2.37117, 1.47 ) }
    dend_0 { pt3dadd( 10.0891, -7.90839, -1.87968, 1.47 ) }
    dend_0 { pt3dadd( 14.4857, -10.6862, -1.28391, 1.47 ) }
    dend_0 { pt3dadd( 17.2656, -12.4426, -0.907198, 2.6 ) }
    dend_0 { pt3dadd( 17.6913, -12.7115, -0.849517, 2.26 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 64/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.29871, 9.45721, 0.0, 2.31667 ) }
    axon_0 { pt3dadd( -4.96601, 24.2182, 0.0, 2.31667 ) }
    axon_0 { pt3dadd( -7.63332, 38.9791, 0.0, 2.31667 ) }
    // Section: dend_45, id: dend_45, parent: dend_23 (entry count 67/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.324, -12.7845, -8.14, 0.12 ) }
    dend_45 { pt3dadd( -0.589791, -12.8884, -8.12753, 0.12 ) }
    dend_45 { pt3dadd( 0.415621, -13.0878, -8.11013, 0.12 ) }
    dend_45 { pt3dadd( 0.9401, -13.1937, -8.10096, 0.45 ) }
    dend_45 { pt3dadd( 1.41936, -13.2837, -8.03322, 0.45 ) }
    dend_45 { pt3dadd( 3.24357, -13.5989, -7.78679, 0.45 ) }
    dend_45 { pt3dadd( 3.50166, -13.6458, -7.75311, 1.36 ) }
    dend_45 { pt3dadd( 4.40514, -13.8207, -7.63327, 1.02 ) }
    dend_45 { pt3dadd( 5.64241, -14.0612, -7.45095, 0.45 ) }
    dend_45 { pt3dadd( 7.53249, -14.426, -6.93872, 0.45 ) }
    dend_45 { pt3dadd( 9.18505, -14.7159, -6.20005, 0.45 ) }
    dend_45 { pt3dadd( 9.66515, -14.7802, -5.95559, 1.7 ) }
    dend_45 { pt3dadd( 10.5486, -14.8796, -5.1622, 0.68 ) }
    dend_45 { pt3dadd( 11.7271, -15.0124, -3.79966, 0.57 ) }
    dend_45 { pt3dadd( 13.5272, -15.2217, -1.4692, 0.57 ) }
    dend_45 { pt3dadd( 14.8163, -15.368, 0.389052, 0.57 ) }
    dend_45 { pt3dadd( 15.8096, -15.4707, 2.03997, 0.57 ) }
    dend_45 { pt3dadd( 19.3686, -15.7693, 8.59124, 0.45 ) }
    dend_45 { pt3dadd( 19.6471, -15.7918, 9.19716, 0.45 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 86/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.324, -12.7845, -8.14, 2.26 ) }
    dend_24 { pt3dadd( -1.79696, -15.5275, -8.08385, 2.26 ) }
    dend_24 { pt3dadd( -2.2627, -18.2287, -8.02857, 2.26 ) }
    dend_24 { pt3dadd( -2.94171, -22.1668, -7.94796, 2.94 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 90/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 35.7971, 6.5196, 4.4773, 0.45 ) }
    dend_22 { pt3dadd( 40.6437, 6.64744, 3.13266, 0.45 ) }
    dend_22 { pt3dadd( 42.9821, 6.65126, 3.27676, 0.45 ) }
    dend_22 { pt3dadd( 44.2074, 6.72143, 3.6302, 0.45 ) }
    dend_22 { pt3dadd( 45.7969, 6.95725, 4.32437, 0.45 ) }
    dend_22 { pt3dadd( 48.9077, 7.74999, 6.16897, 0.79 ) }
    dend_22 { pt3dadd( 52.4794, 8.96566, 8.5807, 0.79 ) }
    dend_22 { pt3dadd( 55.8588, 10.4276, 11.2322, 0.79 ) }
    dend_22 { pt3dadd( 58.3169, 11.7386, 13.3473, 0.79 ) }
    dend_22 { pt3dadd( 60.2194, 13.0156, 15.133, 0.79 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( 62.9062, 15.4589, 18.0994, 0.79 ) }
    dend_22 { pt3dadd( 65.2706, 18.3135, 21.007, 0.79 ) }
    dend_22 { pt3dadd( 66.3214, 19.8104, 22.2487, 0.68 ) }
    dend_22 { pt3dadd( 67.2241, 21.1974, 23.2032, 0.68 ) }
    dend_22 { pt3dadd( 69.1439, 24.1101, 24.9999, 0.68 ) }
    dend_22 { pt3dadd( 73.1781, 30.1719, 28.7684, 0.68 ) }
    dend_22 { pt3dadd( 74.4715, 32.1704, 29.9764, 0.68 ) }
    dend_22 { pt3dadd( 76.6455, 35.4469, 31.9395, 0.68 ) }
    dend_22 { pt3dadd( 77.8937, 37.1252, 32.9554, 0.68 ) }
    dend_22 { pt3dadd( 79.0953, 38.4611, 33.8298, 0.57 ) }
    dend_22 { pt3dadd( 82.3315, 41.2561, 35.7965, 0.57 ) }
    dend_22 { pt3dadd( 84.0417, 42.1765, 36.8458, 0.57 ) }
    dend_22 { pt3dadd( 86.873, 42.4679, 40.1586, 0.57 ) }
    dend_22 { pt3dadd( 87.8136, 41.8719, 42.4551, 0.57 ) }
    dend_22 { pt3dadd( 88.9991, 40.5406, 46.3631, 0.57 ) }
    dend_22 { pt3dadd( 89.3636, 39.9939, 47.7829, 0.57 ) }
    dend_22 { pt3dadd( 90.7064, 37.1549, 54.1564, 0.57 ) }
    dend_22 { pt3dadd( 92.0685, 33.4234, 62.1063, 0.57 ) }
    dend_22 { pt3dadd( 92.8614, 30.3053, 68.5579, 0.57 ) }
    dend_22 { pt3dadd( 93.1838, 28.6201, 72.1851, 0.57 ) }
    dend_22 { pt3dadd( 93.2585, 28.2, 73.2164, 0.57 ) }
    dend_22 { pt3dadd( 93.3891, 27.4881, 75.0539, 0.57 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 22/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 35.7971, 6.5196, 4.4773, 0.79 ) }
    dend_13 { pt3dadd( 37.1717, 9.85645, 2.93217, 0.79 ) }
    dend_13 { pt3dadd( 38.0105, 12.3416, 1.92465, 0.79 ) }
    dend_13 { pt3dadd( 38.4424, 13.6855, 1.44121, 0.79 ) }
    dend_13 { pt3dadd( 39.7958, 16.8161, 0.413983, 0.79 ) }
    dend_13 { pt3dadd( 41.3147, 19.6106, -0.425539, 0.79 ) }
    dend_13 { pt3dadd( 42.6684, 21.8729, -1.03891, 0.79 ) }
    dend_13 { pt3dadd( 44.787, 25.0635, -1.72817, 0.79 ) }
    dend_13 { pt3dadd( 46.385, 27.3419, -2.2236, 0.79 ) }
    dend_13 { pt3dadd( 49.5792, 31.6724, -3.40678, 0.79 ) }
    dend_13 { pt3dadd( 51.6885, 34.2486, -4.53559, 0.79 ) }
    dend_13 { pt3dadd( 54.0158, 36.4446, -6.41592, 1.02 ) }
    dend_13 { pt3dadd( 55.5225, 37.6724, -7.78104, 1.02 ) }
    dend_13 { pt3dadd( 56.9572, 38.6682, -9.33863, 1.02 ) }
    dend_13 { pt3dadd( 58.845, 39.8726, -12.0566, 1.02 ) }
    dend_13 { pt3dadd( 61.499, 41.4869, -17.6781, 1.02 ) }
    dend_13 { pt3dadd( 64.2975, 42.611, -24.9197, 1.02 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 17.6913, -12.7115, -0.849517, 0.68 ) }
    dend_8 { pt3dadd( 18.8011, -14.5932, -1.01272, 0.68 ) }
    dend_8 { pt3dadd( 19.2093, -15.1667, -1.00088, 0.68 ) }
    dend_8 { pt3dadd( 21.4931, -18.1584, -0.793732, 0.68 ) }
    dend_8 { pt3dadd( 25.0913, -22.7665, -0.369434, 0.68 ) }
    dend_8 { pt3dadd( 27.3979, -25.7874, -0.22064, 0.68 ) }
    dend_8 { pt3dadd( 28.8183, -27.667, -0.189428, 0.68 ) }
    dend_8 { pt3dadd( 33.2389, -33.0309, 0.354736, 0.68 ) }
    dend_8 { pt3dadd( 35.303, -35.3641, 0.766322, 0.68 ) }
    dend_8 { pt3dadd( 35.9516, -36.0388, 0.93432, 0.68 ) }
    dend_8 { pt3dadd( 39.5004, -39.4834, 2.01882, 0.68 ) }
    dend_8 { pt3dadd( 42.0283, -41.6647, 2.74707, 0.68 ) }
    dend_8 { pt3dadd( 48.5634, -47.0896, 4.53411, 0.68 ) }
    dend_8 { pt3dadd( 51.6511, -49.6055, 5.31247, 0.68 ) }
    dend_8 { pt3dadd( 53.4935, -51.0317, 5.75882, 0.68 ) }
    dend_8 { pt3dadd( 56.0401, -52.9413, 6.35306, 0.68 ) }
    dend_8 { pt3dadd( 61.9278, -57.4188, 7.63632, 0.68 ) }
    dend_8 { pt3dadd( 64.217, -59.3607, 7.93865, 0.68 ) }
    dend_8 { pt3dadd( 65.2348, -60.3479, 7.97402, 0.68 ) }
    dend_8 { pt3dadd( 67.8808, -63.0668, 8.01089, 0.68 ) }
    dend_8 { pt3dadd( 69.4871, -64.835, 8.01515, 0.68 ) }
    dend_8 { pt3dadd( 72.6768, -68.7566, 7.93292, 0.68 ) }
    dend_8 { pt3dadd( 74.6897, -71.7704, 7.92568, 0.68 ) }
    dend_8 { pt3dadd( 76.0638, -73.9633, 7.9, 0.68 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 63/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 17.6913, -12.7115, -0.849517, 1.24 ) }
    dend_1 { pt3dadd( 22.8694, -14.0195, -0.850717, 1.24 ) }
    dend_1 { pt3dadd( 25.518, -14.6886, -0.85133, 1.24 ) }
    dend_1 { pt3dadd( 29.7616, -15.7606, -0.852314, 1.24 ) }
    dend_1 { pt3dadd( 34.0564, -16.8455, -0.853309, 1.24 ) }
    dend_1 { pt3dadd( 45.4433, -19.7219, -0.855947, 1.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 69/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.63332, 38.9791, 0.0, 0.57 ) }
    axon_1 { pt3dadd( -10.3006, 53.74, 0.0, 0.57 ) }
    axon_1 { pt3dadd( -12.9679, 68.501, 0.0, 0.57 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 72/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 19.6471, -15.7918, 9.19716, 0.45 ) }
    dend_47 { pt3dadd( 21.172, -17.4137, 14.451, 0.45 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 74/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 19.6471, -15.7918, 9.19716, 0.45 ) }
    dend_46 { pt3dadd( 23.1411, -14.6499, 9.17645, 0.45 ) }
    dend_46 { pt3dadd( 24.7806, -14.1941, 9.35274, 0.45 ) }
    dend_46 { pt3dadd( 27.0238, -13.6358, 9.7203, 0.45 ) }
    dend_46 { pt3dadd( 29.4691, -13.2497, 10.2085, 0.45 ) }
    dend_46 { pt3dadd( 30.7467, -13.26, 10.5083, 0.45 ) }
    dend_46 { pt3dadd( 34.1996, -13.681, 11.3638, 0.45 ) }
    dend_46 { pt3dadd( 34.4802, -13.7565, 11.4639, 0.45 ) }
    dend_46 { pt3dadd( 34.6016, -13.8078, 11.5118, 2.6 ) }
    dend_46 { pt3dadd( 36.9231, -15.1319, 12.4574, 0.57 ) }
    dend_46 { pt3dadd( 39.7496, -17.1114, 13.6125, 0.57 ) }
    dend_46 { pt3dadd( 40.5751, -17.7084, 13.9138, 0.57 ) }
    dend_46 { pt3dadd( 40.6481, -17.758, 13.9354, 2.38 ) }
    dend_46 { pt3dadd( 43.1142, -19.1917, 14.6325, 0.34 ) }
    dend_46 { pt3dadd( 44.0637, -19.6087, 14.8829, 0.34 ) }
    dend_46 { pt3dadd( 46.2142, -20.1654, 15.3891, 0.45 ) }
    dend_46 { pt3dadd( 48.2483, -20.2875, 15.9782, 0.45 ) }
    dend_46 { pt3dadd( 50.3689, -20.1814, 16.8379, 0.45 ) }
    dend_46 { pt3dadd( 52.2842, -19.9282, 17.8817, 0.45 ) }
    dend_46 { pt3dadd( 54.3192, -19.5048, 19.3156, 0.45 ) }
    dend_46 { pt3dadd( 56.1124, -19.0656, 20.7567, 0.45 ) }
    dend_46 { pt3dadd( 60.0058, -18.0127, 24.1569, 0.45 ) }
    dend_46 { pt3dadd( 62.94, -17.2673, 26.9893, 0.45 ) }
    dend_46 { pt3dadd( 65.7745, -16.6624, 29.9004, 0.45 ) }
    dend_46 { pt3dadd( 68.4802, -16.2498, 32.7039, 0.45 ) }
    dend_46 { pt3dadd( 69.2864, -16.1865, 33.5255, 2.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( 70.7296, -16.1557, 34.8747, 0.45 ) }
    dend_46 { pt3dadd( 73.7083, -16.1691, 37.1717, 0.45 ) }
    dend_46 { pt3dadd( 75.0065, -16.1784, 38.0263, 0.45 ) }
    dend_46 { pt3dadd( 76.9707, -16.1475, 39.1655, 0.45 ) }
    dend_46 { pt3dadd( 81.0423, -15.971, 41.5286, 0.45 ) }
    dend_46 { pt3dadd( 83.947, -15.7799, 43.2199, 0.45 ) }
    dend_46 { pt3dadd( 86.9607, -15.6356, 44.9614, 0.45 ) }
    dend_46 { pt3dadd( 88.834, -15.6384, 46.0076, 0.45 ) }
    dend_46 { pt3dadd( 90.6526, -15.7255, 46.9909, 0.45 ) }
    dend_46 { pt3dadd( 94.1607, -16.0814, 48.7899, 0.45 ) }
    dend_46 { pt3dadd( 97.0375, -16.5331, 50.0991, 0.45 ) }
    dend_46 { pt3dadd( 100.708, -17.2734, 51.7178, 0.45 ) }
    dend_46 { pt3dadd( 104.397, -18.2127, 53.304, 0.45 ) }
    dend_46 { pt3dadd( 106.583, -18.8467, 54.2153, 0.45 ) }
    dend_46 { pt3dadd( 107.689, -19.239, 54.6589, 0.45 ) }
    dend_46 { pt3dadd( 108.289, -19.4868, 54.8496, 0.45 ) }
    // Section: dend_44, id: dend_44, parent: dend_24 (entry count 16/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -2.94171, -22.1668, -7.94796, 0.12 ) }
    dend_44 { pt3dadd( -3.53122, -21.7381, -7.60445, 0.12 ) }
    dend_44 { pt3dadd( -3.63684, -21.68, -7.50673, 0.12 ) }
    dend_44 { pt3dadd( -3.93372, -21.5498, -7.19517, 0.45 ) }
    dend_44 { pt3dadd( -4.34577, -21.5689, -6.40144, 0.79 ) }
    dend_44 { pt3dadd( -4.81323, -21.7443, -5.13041, 0.45 ) }
    dend_44 { pt3dadd( -5.06428, -21.9163, -4.31218, 0.45 ) }
    dend_44 { pt3dadd( -5.47494, -22.3903, -2.59558, 0.45 ) }
    dend_44 { pt3dadd( -5.52757, -22.4962, -2.32041, 0.45 ) }
    dend_44 { pt3dadd( -5.89003, -23.7941, 0.615984, 0.45 ) }
    dend_44 { pt3dadd( -6.00307, -24.4845, 2.01883, 0.45 ) }
    dend_44 { pt3dadd( -6.06972, -25.0418, 3.08062, 0.45 ) }
    dend_44 { pt3dadd( -6.08456, -25.1782, 3.35027, 0.45 ) }
    dend_44 { pt3dadd( -6.19084, -25.9114, 4.8282, 0.45 ) }
    dend_44 { pt3dadd( -6.48756, -27.3233, 7.71359, 0.45 ) }
    dend_44 { pt3dadd( -6.62821, -27.7058, 8.46783, 0.45 ) }
    dend_44 { pt3dadd( -6.75731, -27.9791, 8.99154, 0.45 ) }
    dend_44 { pt3dadd( -7.04362, -28.5035, 10.017, 0.45 ) }
    dend_44 { pt3dadd( -7.13761, -28.6879, 10.3918, 0.45 ) }
    dend_44 { pt3dadd( -7.70371, -29.8094, 12.6912, 0.45 ) }
    dend_44 { pt3dadd( -7.90845, -30.4008, 13.6955, 0.45 ) }
    dend_44 { pt3dadd( -8.08295, -31.1297, 14.8757, 0.45 ) }
    dend_44 { pt3dadd( -8.11051, -31.379, 15.2941, 0.45 ) }
    dend_44 { pt3dadd( -8.17623, -32.5923, 17.2208, 0.45 ) }
    dend_44 { pt3dadd( -8.17491, -32.7513, 17.4694, 0.45 ) }
    dend_44 { pt3dadd( -8.09159, -33.6818, 19.0209, 0.45 ) }
    dend_44 { pt3dadd( -8.06285, -33.9025, 19.3854, 0.45 ) }
    dend_44 { pt3dadd( -7.95114, -34.9756, 21.042, 2.38 ) }
    dend_44 { pt3dadd( -7.88601, -35.8579, 22.4075, 0.68 ) }
    dend_44 { pt3dadd( -7.85811, -36.2207, 22.9546, 0.68 ) }
    dend_44 { pt3dadd( -7.71584, -37.7486, 25.506, 0.68 ) }
    dend_44 { pt3dadd( -7.65183, -38.3746, 26.6425, 0.45 ) }
    dend_44 { pt3dadd( -7.63462, -38.6683, 27.1692, 0.45 ) }
    dend_44 { pt3dadd( -7.64839, -39.3553, 28.5462, 0.45 ) }
    dend_44 { pt3dadd( -7.66999, -39.6903, 29.3068, 0.45 ) }
    dend_44 { pt3dadd( -7.88375, -40.7892, 31.8837, 0.45 ) }
    dend_44 { pt3dadd( -8.06392, -41.369, 33.3704, 0.45 ) }
    dend_44 { pt3dadd( -8.27537, -41.8835, 34.8442, 0.45 ) }
    dend_44 { pt3dadd( -8.96456, -43.3116, 38.9925, 0.91 ) }
    dend_44 { pt3dadd( -8.98138, -43.3468, 39.0888, 3.05 ) }
    dend_44 { pt3dadd( -9.18537, -43.7966, 40.2492, 0.45 ) }
    dend_44 { pt3dadd( -9.57664, -45.0126, 43.0171, 0.45 ) }
    dend_44 { pt3dadd( -9.66647, -45.4295, 43.9326, 0.45 ) }
    dend_44 { pt3dadd( -9.74545, -46.0432, 45.2505, 2.15 ) }
    dend_44 { pt3dadd( -9.93892, -48.345, 49.4119, 0.57 ) }
    dend_44 { pt3dadd( -9.9538, -48.6332, 49.9415, 0.57 ) }
    dend_44 { pt3dadd( -9.98704, -50.1533, 52.7532, 0.57 ) }
    dend_44 { pt3dadd( -10.0273, -51.1648, 54.5063, 0.57 ) }
    dend_44 { pt3dadd( -10.0349, -51.287, 54.7257, 1.7 ) }
    dend_44 { pt3dadd( -10.0839, -51.7872, 55.6424, 0.45 ) }
    dend_44 { pt3dadd( -10.4192, -54.1691, 59.7758, 0.45 ) }
    dend_44 { pt3dadd( -10.5959, -55.1745, 61.5303, 0.45 ) }
    dend_44 { pt3dadd( -10.7507, -55.8819, 62.72, 0.45 ) }
    dend_44 { pt3dadd( -11.0684, -57.2642, 64.973, 0.45 ) }
    dend_44 { pt3dadd( -11.2502, -58.0804, 66.3005, 0.45 ) }
    dend_44 { pt3dadd( -11.3914, -58.6808, 67.2812, 0.45 ) }
    dend_44 { pt3dadd( -11.7741, -60.1482, 69.2344, 0.45 ) }
    dend_44 { pt3dadd( -11.8301, -60.3724, 69.5403, 0.45 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 74/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.94171, -22.1668, -7.94796, 1.7 ) }
    dend_25 { pt3dadd( -2.17653, -26.0804, -5.55495, 1.7 ) }
    dend_25 { pt3dadd( -1.95592, -27.3775, -4.91144, 1.58 ) }
    dend_25 { pt3dadd( -1.31836, -31.3592, -3.35349, 1.36 ) }
    dend_25 { pt3dadd( -0.792354, -34.6443, -2.06815, 1.24 ) }
    dend_25 { pt3dadd( -0.0346589, -39.3763, -0.216644, 1.24 ) }
    dend_25 { pt3dadd( 0.415832, -42.1897, 0.884175, 2.83 ) }
    dend_25 { pt3dadd( 1.04387, -46.1565, 2.06417, 3.62 ) }
    dend_25 { pt3dadd( 1.51815, -49.1751, 2.80467, 2.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 83/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 64.2975, 42.611, -24.9197, 0.57 ) }
    dend_17 { pt3dadd( 64.243, 40.5394, -25.8231, 0.57 ) }
    dend_17 { pt3dadd( 64.1713, 37.8145, -27.0115, 0.57 ) }
    dend_17 { pt3dadd( 64.1305, 36.2621, -27.6885, 0.57 ) }
    dend_17 { pt3dadd( 64.0742, 34.1241, -28.6209, 0.57 ) }
    dend_17 { pt3dadd( 64.0009, 31.3374, -29.8362, 0.57 ) }
    dend_17 { pt3dadd( 63.8755, 26.5711, -31.9148, 0.57 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 64.2975, 42.611, -24.9197, 1.02 ) }
    dend_14 { pt3dadd( 65.0758, 44.3655, -26.5756, 1.02 ) }
    dend_14 { pt3dadd( 66.8211, 48.2997, -30.289, 1.02 ) }
    dend_14 { pt3dadd( 67.8075, 50.5233, -32.3877, 0.79 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 94/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 76.0638, -73.9633, 7.9, 0.45 ) }
    dend_10 { pt3dadd( 79.6935, -79.579, 7.4062, 0.45 ) }
    dend_10 { pt3dadd( 80.4458, -80.7355, 7.33583, 0.45 ) }
    dend_10 { pt3dadd( 81.5837, -82.4867, 7.32292, 0.45 ) }
    dend_10 { pt3dadd( 84.3758, -86.6854, 7.40172, 0.45 ) }
    dend_10 { pt3dadd( 85.4754, -88.3291, 7.34672, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_10 { pt3dadd( 86.495, -89.7824, 7.25401, 0.45 ) }
    dend_10 { pt3dadd( 88.4278, -92.2868, 7.07028, 0.45 ) }
    dend_10 { pt3dadd( 91.9494, -96.5651, 6.63576, 0.45 ) }
    dend_10 { pt3dadd( 93.9449, -98.6297, 6.3642, 0.45 ) }
    dend_10 { pt3dadd( 97.7863, -101.984, 5.59169, 0.45 ) }
    dend_10 { pt3dadd( 100.661, -103.981, 5.03073, 0.45 ) }
    dend_10 { pt3dadd( 101.993, -104.712, 4.95527, 0.45 ) }
    dend_10 { pt3dadd( 104.459, -105.901, 5.03258, 0.45 ) }
    dend_10 { pt3dadd( 109.626, -108.328, 5.51406, 0.45 ) }
    dend_10 { pt3dadd( 113.051, -110.11, 5.80957, 0.45 ) }
    dend_10 { pt3dadd( 118.219, -113.009, 6.27727, 0.45 ) }
    dend_10 { pt3dadd( 129.113, -119.809, 7.10105, 0.45 ) }
    dend_10 { pt3dadd( 133.936, -123.168, 7.4185, 0.45 ) }
    dend_10 { pt3dadd( 137.415, -125.972, 7.60398, 0.45 ) }
    dend_10 { pt3dadd( 143.911, -132.318, 7.79914, 0.45 ) }
    dend_10 { pt3dadd( 145.137, -133.756, 7.80557, 0.45 ) }
    dend_10 { pt3dadd( 147.409, -137.303, 7.53457, 0.45 ) }
    dend_10 { pt3dadd( 148.508, -139.765, 7.21442, 0.45 ) }
    dend_10 { pt3dadd( 150.162, -144.475, 6.81698, 0.45 ) }
    dend_10 { pt3dadd( 151.246, -148.197, 6.73713, 0.45 ) }
    dend_10 { pt3dadd( 152.583, -153.173, 6.86886, 0.45 ) }
    dend_10 { pt3dadd( 153.8, -158.179, 7.02096, 0.45 ) }
    dend_10 { pt3dadd( 154.938, -163.46, 7.18146, 0.45 ) }
    dend_10 { pt3dadd( 155.412, -165.732, 7.25623, 0.45 ) }
    dend_10 { pt3dadd( 156.183, -169.369, 7.4253, 0.45 ) }
    dend_10 { pt3dadd( 157.8, -176.114, 7.84247, 0.45 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 76.0638, -73.9633, 7.9, 0.57 ) }
    dend_9 { pt3dadd( 76.0506, -74.2125, 8.16085, 0.57 ) }
    dend_9 { pt3dadd( 76.1095, -75.2519, 9.9742, 0.57 ) }
    dend_9 { pt3dadd( 76.1691, -76.4738, 12.3509, 0.57 ) }
    dend_9 { pt3dadd( 76.1806, -77.0863, 13.8611, 0.57 ) }
    dend_9 { pt3dadd( 76.1744, -77.1915, 14.1341, 0.57 ) }
    dend_9 { pt3dadd( 76.0919, -77.6961, 15.5797, 0.57 ) }
    dend_9 { pt3dadd( 75.8941, -78.2775, 17.5894, 0.57 ) }
    dend_9 { pt3dadd( 75.7556, -78.488, 18.5192, 0.57 ) }
    dend_9 { pt3dadd( 75.512, -78.7539, 20.4604, 0.45 ) }
    dend_9 { pt3dadd( 75.3681, -78.89, 21.4044, 0.45 ) }
    dend_9 { pt3dadd( 75.1559, -79.092, 22.6686, 0.45 ) }
    dend_9 { pt3dadd( 74.955, -79.3182, 23.9082, 0.45 ) }
    dend_9 { pt3dadd( 74.713, -79.5788, 25.306, 0.45 ) }
    dend_9 { pt3dadd( 74.3295, -80.1387, 28.3199, 0.45 ) }
    dend_9 { pt3dadd( 74.2747, -80.2843, 29.0066, 0.45 ) }
    dend_9 { pt3dadd( 74.2357, -80.5115, 30.0302, 0.45 ) }
    dend_9 { pt3dadd( 74.2096, -81.1476, 32.5448, 0.45 ) }
    dend_9 { pt3dadd( 74.2052, -81.4107, 33.4264, 0.45 ) }
    dend_9 { pt3dadd( 74.1023, -82.5415, 36.4152, 0.45 ) }
    dend_9 { pt3dadd( 74.0651, -82.9495, 37.3295, 0.45 ) }
    dend_9 { pt3dadd( 74.0615, -83.0462, 37.5277, 0.45 ) }
    dend_9 { pt3dadd( 74.0849, -83.301, 38.0413, 0.45 ) }
    dend_9 { pt3dadd( 74.1845, -83.9991, 39.445, 0.45 ) }
    dend_9 { pt3dadd( 74.3029, -84.5677, 40.6106, 0.45 ) }
    dend_9 { pt3dadd( 74.619, -85.6705, 43.0392, 0.45 ) }
    dend_9 { pt3dadd( 74.9215, -86.3535, 44.8752, 0.45 ) }
    dend_9 { pt3dadd( 75.5351, -87.5247, 48.3688, 0.45 ) }
    dend_9 { pt3dadd( 75.8789, -88.1441, 50.3682, 0.45 ) }
    dend_9 { pt3dadd( 76.0266, -88.3804, 51.2542, 0.45 ) }
    dend_9 { pt3dadd( 76.465, -89.1649, 54.2207, 0.45 ) }
    dend_9 { pt3dadd( 76.6979, -89.9067, 56.8238, 0.45 ) }
    dend_9 { pt3dadd( 76.7574, -90.2981, 58.202, 0.45 ) }
    dend_9 { pt3dadd( 76.7485, -90.6928, 59.449, 0.45 ) }
    dend_9 { pt3dadd( 76.6995, -91.512, 61.616, 0.45 ) }
    dend_9 { pt3dadd( 76.6268, -92.2648, 63.3776, 0.45 ) }
    dend_9 { pt3dadd( 76.5057, -92.9291, 64.8168, 0.45 ) }
    dend_9 { pt3dadd( 76.411, -93.4053, 66.0839, 0.45 ) }
    dend_9 { pt3dadd( 76.1688, -94.2346, 69.1857, 0.45 ) }
    dend_9 { pt3dadd( 75.9057, -94.5968, 71.2016, 0.45 ) }
    dend_9 { pt3dadd( 75.5308, -94.7672, 72.8679, 0.45 ) }
    dend_9 { pt3dadd( 74.9286, -94.7989, 74.5275, 0.45 ) }
    dend_9 { pt3dadd( 73.1085, -94.6101, 78.1098, 0.45 ) }
    dend_9 { pt3dadd( 72.1507, -94.4168, 79.6279, 0.45 ) }
    dend_9 { pt3dadd( 70.803, -94.1311, 81.3124, 0.45 ) }
    dend_9 { pt3dadd( 69.8719, -93.9369, 82.3852, 0.45 ) }
    dend_9 { pt3dadd( 68.0598, -93.6507, 84.391, 0.45 ) }
    dend_9 { pt3dadd( 66.6289, -93.5396, 85.9364, 0.45 ) }
    dend_9 { pt3dadd( 64.5004, -93.4081, 88.6117, 0.45 ) }
    dend_9 { pt3dadd( 63.0943, -93.2946, 90.7916, 0.45 ) }
    dend_9 { pt3dadd( 62.2016, -93.2458, 92.2965, 0.45 ) }
    dend_9 { pt3dadd( 60.1975, -93.2027, 95.8392, 0.45 ) }
    dend_9 { pt3dadd( 59.5122, -93.2041, 97.1102, 0.45 ) }
    dend_9 { pt3dadd( 56.5545, -93.307, 102.541, 0.45 ) }
    dend_9 { pt3dadd( 55.7465, -93.3569, 104.022, 0.45 ) }
    dend_9 { pt3dadd( 53.689, -93.4538, 108.112, 0.45 ) }
    dend_9 { pt3dadd( 53.1035, -93.4933, 109.272, 0.45 ) }
    dend_9 { pt3dadd( 52.0938, -93.6273, 111.28, 0.45 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 45.4433, -19.7219, -0.855947, 0.45 ) }
    dend_5 { pt3dadd( 47.742, -22.8278, 0.598135, 0.45 ) }
    dend_5 { pt3dadd( 48.1018, -23.3241, 0.803606, 1.02 ) }
    dend_5 { pt3dadd( 51.8426, -28.4027, 2.69618, 0.79 ) }
    dend_5 { pt3dadd( 54.124, -31.5667, 3.69805, 0.79 ) }
    dend_5 { pt3dadd( 55.4215, -33.3582, 4.1725, 0.68 ) }
    dend_5 { pt3dadd( 55.6991, -33.7321, 4.25585, 0.68 ) }
    dend_5 { pt3dadd( 57.3572, -35.9297, 4.56142, 0.68 ) }
    dend_5 { pt3dadd( 58.4746, -37.4136, 4.68235, 0.68 ) }
    dend_5 { pt3dadd( 60.7814, -40.4072, 4.72686, 0.68 ) }
    dend_5 { pt3dadd( 63.0978, -43.494, 4.73636, 0.68 ) }
    dend_5 { pt3dadd( 65.3082, -46.4927, 4.71406, 0.68 ) }
    dend_5 { pt3dadd( 67.4007, -49.3061, 4.67003, 0.68 ) }
    dend_5 { pt3dadd( 70.0165, -52.8405, 4.59064, 0.68 ) }
    dend_5 { pt3dadd( 73.2465, -57.2481, 4.26847, 0.68 ) }
    dend_5 { pt3dadd( 75.2362, -60.0116, 3.86331, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_5 { pt3dadd( 76.3919, -61.6422, 3.52139, 0.68 ) }
    dend_5 { pt3dadd( 77.8475, -63.6671, 3.01871, 0.68 ) }
    dend_5 { pt3dadd( 80.2881, -66.9131, 2.10485, 0.68 ) }
    dend_5 { pt3dadd( 83.4785, -70.9945, 0.842496, 0.68 ) }
    dend_5 { pt3dadd( 87.1812, -75.4779, -0.605667, 0.68 ) }
    dend_5 { pt3dadd( 89.1765, -77.7231, -1.30846, 0.68 ) }
    dend_5 { pt3dadd( 91.1704, -79.8679, -1.91907, 0.68 ) }
    dend_5 { pt3dadd( 92.4708, -81.2136, -2.24619, 0.68 ) }
    dend_5 { pt3dadd( 93.6699, -82.3592, -2.4606, 0.68 ) }
    dend_5 { pt3dadd( 95.3704, -84.0026, -2.5147, 0.68 ) }
    dend_5 { pt3dadd( 96.7281, -85.4014, -2.5251, 0.68 ) }
    dend_5 { pt3dadd( 98.491, -87.6344, -2.60336, 0.68 ) }
    dend_5 { pt3dadd( 98.962, -88.4114, -2.67917, 0.68 ) }
    dend_5 { pt3dadd( 100.063, -90.6474, -2.93604, 0.68 ) }
    dend_5 { pt3dadd( 101.272, -93.5989, -3.40232, 0.68 ) }
    dend_5 { pt3dadd( 102.139, -96.159, -3.87411, 0.68 ) }
    dend_5 { pt3dadd( 102.909, -98.7509, -4.38225, 0.68 ) }
    dend_5 { pt3dadd( 104.023, -102.938, -5.20323, 0.68 ) }
    dend_5 { pt3dadd( 104.539, -104.923, -5.56015, 0.68 ) }
    dend_5 { pt3dadd( 105.275, -107.6, -5.96183, 0.68 ) }
    dend_5 { pt3dadd( 105.935, -109.638, -6.2203, 0.68 ) }
    dend_5 { pt3dadd( 106.877, -112.082, -6.38173, 0.68 ) }
    dend_5 { pt3dadd( 107.631, -113.868, -6.47043, 0.68 ) }
    dend_5 { pt3dadd( 108.005, -114.676, -6.48461, 0.68 ) }
    dend_5 { pt3dadd( 109.165, -117.01, -6.49293, 0.45 ) }
    dend_5 { pt3dadd( 110.831, -120.34, -6.43844, 0.45 ) }
    dend_5 { pt3dadd( 112.753, -124.199, -6.39656, 0.45 ) }
    dend_5 { pt3dadd( 114.237, -127.312, -6.48575, 0.45 ) }
    dend_5 { pt3dadd( 115.254, -129.533, -6.6108, 0.45 ) }
    dend_5 { pt3dadd( 116.426, -132.15, -6.80612, 0.45 ) }
    dend_5 { pt3dadd( 118.39, -136.55, -7.26907, 0.45 ) }
    dend_5 { pt3dadd( 119.412, -138.896, -7.54874, 0.45 ) }
    dend_5 { pt3dadd( 121.125, -142.958, -8.08994, 0.45 ) }
    dend_5 { pt3dadd( 122.703, -146.641, -8.62031, 0.45 ) }
    dend_5 { pt3dadd( 123.659, -148.897, -8.99644, 0.45 ) }
    dend_5 { pt3dadd( 124.444, -150.715, -9.35956, 0.45 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 36/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 45.4433, -19.7219, -0.855947, 0.68 ) }
    dend_2 { pt3dadd( 48.0115, -17.8827, 0.951006, 0.68 ) }
    dend_2 { pt3dadd( 51.0816, -15.5208, 2.79597, 0.68 ) }
    dend_2 { pt3dadd( 53.2835, -13.8496, 3.68269, 0.68 ) }
    dend_2 { pt3dadd( 54.7649, -12.7567, 4.04059, 0.68 ) }
    dend_2 { pt3dadd( 55.7266, -12.0568, 4.08133, 0.68 ) }
    dend_2 { pt3dadd( 57.9823, -10.4957, 3.65081, 0.68 ) }
    dend_2 { pt3dadd( 59.4444, -9.53489, 2.97401, 0.68 ) }
    dend_2 { pt3dadd( 61.9726, -7.99086, 1.37522, 0.57 ) }
    dend_2 { pt3dadd( 63.9632, -6.84634, -0.0649975, 0.57 ) }
    dend_2 { pt3dadd( 66.8428, -5.12061, -2.27793, 0.57 ) }
    dend_2 { pt3dadd( 70.1507, -3.08167, -4.87881, 0.57 ) }
    dend_2 { pt3dadd( 71.9905, -1.89999, -6.351, 0.57 ) }
    dend_2 { pt3dadd( 72.8458, -1.29205, -7.08177, 0.57 ) }
    dend_2 { pt3dadd( 75.4947, 0.827956, -9.32698, 0.57 ) }
    dend_2 { pt3dadd( 78.9848, 3.80851, -12.2093, 0.57 ) }
    dend_2 { pt3dadd( 81.7081, 6.26664, -14.3087, 0.57 ) }
    dend_2 { pt3dadd( 82.7072, 7.25466, -15.0926, 0.57 ) }
    dend_2 { pt3dadd( 84.9366, 9.62254, -16.9868, 0.57 ) }
    dend_2 { pt3dadd( 86.9966, 11.8758, -18.7962, 0.57 ) }
    dend_2 { pt3dadd( 87.8862, 12.9078, -19.5915, 0.57 ) }
    // Section: dend_69, id: dend_69, parent: dend_47 (entry count 57/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 21.172, -17.4137, 14.451, 0.45 ) }
    dend_69 { pt3dadd( 18.7889, -21.5261, 18.2825, 0.45 ) }
    dend_69 { pt3dadd( 18.0104, -22.8716, 19.4351, 0.45 ) }
    dend_69 { pt3dadd( 17.0499, -24.5384, 21.1095, 0.45 ) }
    dend_69 { pt3dadd( 16.1145, -26.1503, 22.9892, 0.45 ) }
    dend_69 { pt3dadd( 15.4237, -27.3116, 24.4734, 0.45 ) }
    dend_69 { pt3dadd( 14.1518, -29.5054, 27.3739, 0.45 ) }
    dend_69 { pt3dadd( 13.7147, -30.3424, 28.4963, 0.45 ) }
    dend_69 { pt3dadd( 12.5075, -32.8162, 32.0455, 0.45 ) }
    dend_69 { pt3dadd( 11.9616, -33.9886, 34.0603, 0.45 ) }
    dend_69 { pt3dadd( 11.5644, -34.8167, 35.8306, 0.45 ) }
    dend_69 { pt3dadd( 11.3308, -35.1917, 36.7866, 0.45 ) }
    dend_69 { pt3dadd( 10.9941, -35.5919, 37.9595, 0.45 ) }
    dend_69 { pt3dadd( 10.4482, -36.0943, 39.2602, 0.45 ) }
    dend_69 { pt3dadd( 8.77908, -37.733, 42.3283, 0.45 ) }
    dend_69 { pt3dadd( 8.40488, -38.1336, 42.9279, 0.45 ) }
    dend_69 { pt3dadd( 7.28705, -39.5211, 44.61, 0.45 ) }
    dend_69 { pt3dadd( 6.5633, -40.4848, 45.2637, 0.45 ) }
    dend_69 { pt3dadd( 5.58712, -42.0, 45.7347, 0.45 ) }
    dend_69 { pt3dadd( 3.99861, -45.1004, 45.9619, 0.45 ) }
    dend_69 { pt3dadd( 3.09853, -47.3531, 45.7975, 0.45 ) }
    dend_69 { pt3dadd( 2.37575, -49.4166, 45.5245, 0.45 ) }
    dend_69 { pt3dadd( 0.572558, -55.7386, 44.2092, 0.45 ) }
    dend_69 { pt3dadd( 0.255923, -56.9857, 43.8644, 1.02 ) }
    dend_69 { pt3dadd( -0.079092, -58.3053, 43.3682, 0.57 ) }
    dend_69 { pt3dadd( -0.660204, -59.9311, 42.5027, 0.45 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 83/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 21.172, -17.4137, 14.451, 0.45 ) }
    dend_48 { pt3dadd( 22.3606, -17.945, 14.4446, 0.45 ) }
    dend_48 { pt3dadd( 23.5844, -18.4921, 14.4381, 0.45 ) }
    dend_48 { pt3dadd( 25.2855, -19.2524, 14.4289, 0.45 ) }
    dend_48 { pt3dadd( 26.7248, -19.8958, 14.4212, 0.45 ) }
    dend_48 { pt3dadd( 27.4715, -20.2296, 14.4172, 0.45 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 1.51815, -49.1751, 2.80467, 0.45 ) }
    dend_29 { pt3dadd( 0.73897, -51.3351, 4.84142, 0.45 ) }
    dend_29 { pt3dadd( 0.424177, -52.334, 5.70256, 0.79 ) }
    dend_29 { pt3dadd( -2.63941, -62.0547, 14.0832, 1.24 ) }
    dend_29 { pt3dadd( -3.96169, -66.2503, 17.7003, 1.24 ) }
    dend_29 { pt3dadd( -5.07865, -69.7944, 20.7558, 1.24 ) }
    dend_29 { pt3dadd( -6.3632, -73.8702, 24.2698, 1.24 ) }
    dend_29 { pt3dadd( -6.83128, -75.3498, 25.569, 2.38 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 97/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.51815, -49.1751, 2.80467, 0.91 ) }
    dend_26 { pt3dadd( 3.49301, -50.9629, 3.67813, 0.91 ) }
    dend_26 { pt3dadd( 4.58089, -51.9477, 4.15929, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 6.46287, -53.6513, 4.99167, 0.91 ) }
    dend_26 { pt3dadd( 7.76307, -54.8284, 5.56673, 0.91 ) }
    dend_26 { pt3dadd( 9.79521, -56.668, 6.46553, 0.79 ) }
    dend_26 { pt3dadd( 10.2099, -57.0433, 6.64891, 0.79 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 4/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 63.8755, 26.5711, -31.9148, 0.57 ) }
    dend_19 { pt3dadd( 64.4622, 24.7515, -31.6879, 0.57 ) }
    dend_19 { pt3dadd( 65.6697, 21.0906, -30.6203, 0.57 ) }
    dend_19 { pt3dadd( 66.9495, 17.0998, -29.5938, 0.45 ) }
    dend_19 { pt3dadd( 68.7825, 11.3389, -28.2683, 0.45 ) }
    dend_19 { pt3dadd( 70.7678, 4.99367, -26.7398, 0.45 ) }
    dend_19 { pt3dadd( 71.3109, 3.25787, -26.3217, 0.45 ) }
    dend_19 { pt3dadd( 73.8779, -5.05631, -24.217, 0.45 ) }
    dend_19 { pt3dadd( 75.8231, -11.6673, -22.4253, 0.45 ) }
    dend_19 { pt3dadd( 76.7418, -14.7615, -21.533, 0.45 ) }
    dend_19 { pt3dadd( 77.8066, -18.2094, -20.5601, 0.45 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 15/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 63.8755, 26.5711, -31.9148, 0.57 ) }
    dend_18 { pt3dadd( 61.194, 26.4216, -33.8429, 0.57 ) }
    dend_18 { pt3dadd( 59.4295, 25.7625, -34.4018, 0.68 ) }
    dend_18 { pt3dadd( 57.9191, 24.9931, -34.895, 0.68 ) }
    dend_18 { pt3dadd( 56.4078, 24.2233, -35.3886, 0.68 ) }
    dend_18 { pt3dadd( 54.0131, 23.0034, -36.1707, 0.68 ) }
    dend_18 { pt3dadd( 51.7218, 21.8362, -36.919, 0.68 ) }
    dend_18 { pt3dadd( 49.0007, 20.6856, -37.837, 0.68 ) }
    dend_18 { pt3dadd( 46.2224, 19.695, -38.6652, 0.57 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 67.8075, 50.5233, -32.3877, 0.68 ) }
    dend_16 { pt3dadd( 68.2678, 52.1068, -31.0845, 0.68 ) }
    dend_16 { pt3dadd( 68.6598, 53.4557, -29.9744, 0.68 ) }
    dend_16 { pt3dadd( 69.3153, 55.7109, -28.1183, 0.68 ) }
    dend_16 { pt3dadd( 70.6392, 60.2661, -24.3694, 0.68 ) }
    dend_16 { pt3dadd( 71.3802, 62.8154, -22.2713, 0.68 ) }
    dend_16 { pt3dadd( 72.3746, 66.2368, -19.4554, 0.68 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 31/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 67.8075, 50.5233, -32.3877, 0.79 ) }
    dend_15 { pt3dadd( 69.8674, 51.368, -32.4153, 0.79 ) }
    dend_15 { pt3dadd( 73.1447, 52.7118, -32.4591, 0.79 ) }
    dend_15 { pt3dadd( 75.2674, 53.5823, -32.4875, 0.79 ) }
    dend_15 { pt3dadd( 77.6351, 54.5531, -32.5191, 0.79 ) }
    dend_15 { pt3dadd( 78.9793, 55.1043, -32.5371, 0.79 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 124.444, -150.715, -9.35956, 0.57 ) }
    dend_7 { pt3dadd( 126.082, -153.918, -8.73874, 0.57 ) }
    dend_7 { pt3dadd( 128.618, -158.67, -7.69681, 0.57 ) }
    dend_7 { pt3dadd( 129.883, -160.956, -7.19619, 0.57 ) }
    dend_7 { pt3dadd( 133.21, -166.803, -5.94657, 0.57 ) }
    dend_7 { pt3dadd( 136.471, -172.409, -4.71491, 0.57 ) }
    dend_7 { pt3dadd( 139.1, -176.929, -3.72188, 0.57 ) }
    dend_7 { pt3dadd( 140.676, -179.48, -3.05511, 0.57 ) }
    dend_7 { pt3dadd( 142.121, -181.745, -2.40432, 0.57 ) }
    dend_7 { pt3dadd( 143.505, -183.851, -1.8098, 0.57 ) }
    dend_7 { pt3dadd( 145.2, -186.269, -1.25902, 0.57 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 124.444, -150.715, -9.35956, 0.34 ) }
    dend_6 { pt3dadd( 126.953, -152.764, -8.4858, 0.34 ) }
    dend_6 { pt3dadd( 128.753, -154.329, -7.61793, 0.34 ) }
    dend_6 { pt3dadd( 129.525, -155.03, -7.22621, 0.34 ) }
    dend_6 { pt3dadd( 132.975, -158.385, -5.7811, 0.34 ) }
    dend_6 { pt3dadd( 135.721, -161.206, -4.80766, 0.57 ) }
    dend_6 { pt3dadd( 139.404, -165.092, -3.58231, 0.57 ) }
    dend_6 { pt3dadd( 141.835, -167.821, -2.77908, 0.57 ) }
    dend_6 { pt3dadd( 143.982, -170.306, -2.24037, 0.57 ) }
    dend_6 { pt3dadd( 148.228, -175.349, -1.4825, 0.57 ) }
    dend_6 { pt3dadd( 150.643, -178.246, -1.24123, 0.57 ) }
    dend_6 { pt3dadd( 153.042, -181.095, -1.26799, 0.57 ) }
    dend_6 { pt3dadd( 156.246, -184.757, -1.63298, 0.57 ) }
    dend_6 { pt3dadd( 160.891, -189.939, -2.37852, 0.57 ) }
    dend_6 { pt3dadd( 164.798, -194.221, -3.02554, 0.57 ) }
    dend_6 { pt3dadd( 167.358, -196.921, -3.3256, 0.57 ) }
    dend_6 { pt3dadd( 171.836, -201.467, -3.77523, 0.57 ) }
    dend_6 { pt3dadd( 173.142, -202.736, -3.88706, 0.57 ) }
    dend_6 { pt3dadd( 176.048, -205.404, -3.9945, 0.57 ) }
    dend_6 { pt3dadd( 178.243, -207.281, -3.8451, 0.57 ) }
    dend_6 { pt3dadd( 182.495, -210.549, -3.2635, 0.57 ) }
    dend_6 { pt3dadd( 183.841, -211.498, -2.96263, 0.57 ) }
    dend_6 { pt3dadd( 186.097, -212.944, -1.96428, 0.57 ) }
    dend_6 { pt3dadd( 187.691, -213.883, -1.14284, 0.57 ) }
    dend_6 { pt3dadd( 189.313, -214.75, -0.173632, 0.57 ) }
    dend_6 { pt3dadd( 190.428, -215.325, 0.521475, 0.57 ) }
    dend_6 { pt3dadd( 193.106, -216.695, 2.25154, 0.57 ) }
    dend_6 { pt3dadd( 198.739, -219.641, 6.23983, 0.57 ) }
    dend_6 { pt3dadd( 200.256, -220.446, 7.42198, 0.57 ) }
    dend_6 { pt3dadd( 203.164, -222.018, 9.83945, 0.57 ) }
    dend_6 { pt3dadd( 206.101, -223.74, 12.4042, 0.57 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 79/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 87.8862, 12.9078, -19.5915, 0.45 ) }
    dend_4 { pt3dadd( 89.6578, 14.5036, -23.8326, 0.45 ) }
    dend_4 { pt3dadd( 90.5573, 15.323, -25.9782, 0.45 ) }
    dend_4 { pt3dadd( 91.7603, 16.695, -29.1743, 0.45 ) }
    dend_4 { pt3dadd( 92.0855, 17.0805, -29.9577, 0.45 ) }
    dend_4 { pt3dadd( 92.2516, 17.2726, -30.3121, 0.45 ) }
    dend_4 { pt3dadd( 93.8776, 19.1441, -33.3468, 0.45 ) }
    dend_4 { pt3dadd( 94.0999, 19.3663, -33.6473, 0.45 ) }
    dend_4 { pt3dadd( 95.4557, 20.7489, -35.4989, 0.45 ) }
    dend_4 { pt3dadd( 96.5029, 21.952, -36.7578, 0.45 ) }
    dend_4 { pt3dadd( 97.0777, 22.6482, -37.4277, 0.45 ) }
    dend_4 { pt3dadd( 98.4817, 24.3048, -38.8564, 0.45 ) }
    dend_4 { pt3dadd( 99.8185, 25.6774, -39.7158, 0.45 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 92/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 87.8862, 12.9078, -19.5915, 0.45 ) }
    dend_3 { pt3dadd( 89.1639, 13.2101, -19.7522, 0.45 ) }
    dend_3 { pt3dadd( 89.9859, 13.4046, -19.8555, 0.45 ) }
    // Section: dend_64, id: dend_64, parent: dend_48 (entry count 95/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 27.4715, -20.2296, 14.4172, 0.45 ) }
    dend_64 { pt3dadd( 25.6639, -23.2882, 17.2253, 0.45 ) }
    dend_64 { pt3dadd( 23.612, -26.8672, 20.4307, 0.45 ) }
    dend_64 { pt3dadd( 22.4607, -28.8439, 22.2435, 0.45 ) }
    dend_64 { pt3dadd( 21.1815, -30.9909, 24.1606, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_64 { pt3dadd( 19.6742, -33.5315, 26.3209, 0.45 ) }
    dend_64 { pt3dadd( 19.11, -34.5231, 27.0977, 0.45 ) }
    dend_64 { pt3dadd( 18.4054, -35.8095, 27.9548, 0.45 ) }
    dend_64 { pt3dadd( 16.8496, -39.0772, 29.9544, 0.45 ) }
    dend_64 { pt3dadd( 15.8371, -41.6802, 31.2478, 0.45 ) }
    dend_64 { pt3dadd( 15.0709, -44.034, 32.184, 0.45 ) }
    dend_64 { pt3dadd( 14.509, -45.9995, 32.8839, 0.45 ) }
    dend_64 { pt3dadd( 14.0874, -47.7967, 33.6086, 0.45 ) }
    dend_64 { pt3dadd( 13.623, -50.6356, 34.8975, 0.45 ) }
    dend_64 { pt3dadd( 13.5093, -52.3939, 36.0464, 0.45 ) }
    dend_64 { pt3dadd( 13.5338, -53.9265, 37.3646, 0.45 ) }
    dend_64 { pt3dadd( 13.6639, -56.0971, 39.3765, 0.45 ) }
    dend_64 { pt3dadd( 13.8974, -58.2927, 41.536, 0.45 ) }
    dend_64 { pt3dadd( 14.0938, -59.496, 42.7259, 0.45 ) }
    dend_64 { pt3dadd( 14.8726, -63.8316, 46.3202, 0.45 ) }
    dend_64 { pt3dadd( 15.4805, -66.8053, 48.4025, 0.45 ) }
    dend_64 { pt3dadd( 16.09, -69.572, 49.9242, 0.45 ) }
    dend_64 { pt3dadd( 16.5994, -72.2712, 50.8992, 0.45 ) }
    dend_64 { pt3dadd( 17.0773, -74.8613, 51.663, 0.45 ) }
    dend_64 { pt3dadd( 17.875, -79.9195, 52.9912, 0.45 ) }
    dend_64 { pt3dadd( 18.1487, -82.2035, 53.5177, 0.45 ) }
    dend_64 { pt3dadd( 18.3194, -83.8722, 54.2604, 0.45 ) }
    dend_64 { pt3dadd( 18.6164, -87.5903, 56.2075, 0.45 ) }
    dend_64 { pt3dadd( 18.7477, -90.6426, 57.9546, 0.45 ) }
    dend_64 { pt3dadd( 18.811, -93.9101, 60.2288, 0.45 ) }
    dend_64 { pt3dadd( 18.8277, -95.4898, 61.6894, 0.45 ) }
    dend_64 { pt3dadd( 18.6775, -101.378, 67.4201, 0.79 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 27/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 27.4715, -20.2296, 14.4172, 0.45 ) }
    dend_49 { pt3dadd( 29.7736, -22.0986, 15.0451, 0.45 ) }
    dend_49 { pt3dadd( 31.0458, -23.4694, 15.4463, 0.45 ) }
    dend_49 { pt3dadd( 33.044, -25.9532, 16.1053, 0.45 ) }
    dend_49 { pt3dadd( 34.7789, -28.3177, 16.704, 0.45 ) }
    dend_49 { pt3dadd( 37.2727, -31.9854, 17.5869, 0.45 ) }
    dend_49 { pt3dadd( 40.3561, -36.8568, 18.725, 0.45 ) }
    dend_49 { pt3dadd( 43.7508, -43.1094, 20.2141, 0.45 ) }
    dend_49 { pt3dadd( 46.1448, -48.2779, 21.0969, 0.45 ) }
    dend_49 { pt3dadd( 47.3786, -51.1806, 21.5608, 0.45 ) }
    dend_49 { pt3dadd( 49.5507, -56.7095, 22.3797, 0.45 ) }
    dend_49 { pt3dadd( 50.9248, -60.4304, 22.8196, 0.45 ) }
    dend_49 { pt3dadd( 52.2686, -64.443, 23.1806, 0.45 ) }
    dend_49 { pt3dadd( 54.6168, -73.2155, 23.556, 0.45 ) }
    // Section: dend_41, id: dend_41, parent: dend_29 (entry count 41/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -6.83128, -75.3498, 25.569, 0.12 ) }
    dend_41 { pt3dadd( -7.13302, -75.8706, 25.1675, 0.12 ) }
    dend_41 { pt3dadd( -7.54327, -77.1596, 24.3495, 0.57 ) }
    dend_41 { pt3dadd( -7.8055, -78.3028, 23.7812, 0.57 ) }
    dend_41 { pt3dadd( -8.02457, -79.3211, 23.4367, 0.57 ) }
    dend_41 { pt3dadd( -8.74756, -82.5563, 22.2115, 0.57 ) }
    dend_41 { pt3dadd( -9.22758, -84.4894, 21.2765, 0.57 ) }
    dend_41 { pt3dadd( -9.49464, -85.5803, 20.6787, 0.91 ) }
    dend_41 { pt3dadd( -9.72975, -86.5812, 19.8714, 0.91 ) }
    dend_41 { pt3dadd( -10.052, -87.8242, 18.5562, 0.91 ) }
    dend_41 { pt3dadd( -10.6721, -89.4035, 15.9661, 0.68 ) }
    dend_41 { pt3dadd( -11.2192, -90.1277, 13.6309, 0.68 ) }
    dend_41 { pt3dadd( -11.4989, -90.3891, 12.4352, 0.68 ) }
    dend_41 { pt3dadd( -12.3768, -91.0985, 8.26972, 0.68 ) }
    dend_41 { pt3dadd( -12.5736, -91.2271, 7.23963, 0.68 ) }
    dend_41 { pt3dadd( -12.9907, -91.4371, 4.73524, 0.68 ) }
    dend_41 { pt3dadd( -13.6385, -91.6693, 0.377031, 0.68 ) }
    dend_41 { pt3dadd( -13.8538, -91.7442, -1.36271, 0.68 ) }
    dend_41 { pt3dadd( -14.2064, -91.9741, -4.82286, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_29 (entry count 60/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -6.83128, -75.3498, 25.569, 0.79 ) }
    dend_32 { pt3dadd( -6.31564, -78.8727, 25.7248, 0.79 ) }
    dend_32 { pt3dadd( -5.62079, -83.6201, 25.9348, 0.79 ) }
    dend_32 { pt3dadd( -5.29995, -85.8122, 26.0317, 0.79 ) }
    dend_32 { pt3dadd( -5.05245, -87.5032, 26.1065, 0.79 ) }
    dend_32 { pt3dadd( -4.93663, -88.2945, 26.1415, 0.79 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 66/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -6.83128, -75.3498, 25.569, 0.57 ) }
    dend_30 { pt3dadd( -6.3335, -75.7308, 27.875, 0.57 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 68/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 10.2099, -57.0433, 6.64891, 1.13 ) }
    dend_28 { pt3dadd( 10.6744, -58.3712, 7.53074, 1.13 ) }
    dend_28 { pt3dadd( 11.4313, -60.4326, 8.73402, 0.91 ) }
    dend_28 { pt3dadd( 11.8842, -61.6864, 9.34887, 0.91 ) }
    dend_28 { pt3dadd( 12.6298, -63.7985, 10.2635, 0.91 ) }
    dend_28 { pt3dadd( 13.3968, -66.1209, 11.1653, 0.91 ) }
    dend_28 { pt3dadd( 14.0309, -68.2043, 11.9651, 0.91 ) }
    dend_28 { pt3dadd( 14.4076, -69.6418, 12.4557, 0.91 ) }
    dend_28 { pt3dadd( 14.9265, -72.0014, 13.2519, 0.91 ) }
    dend_28 { pt3dadd( 15.1079, -72.9868, 13.591, 1.92 ) }
    dend_28 { pt3dadd( 15.3182, -74.3074, 14.0258, 1.36 ) }
    dend_28 { pt3dadd( 15.5992, -76.2514, 14.7095, 1.02 ) }
    dend_28 { pt3dadd( 15.8982, -78.541, 15.632, 1.02 ) }
    dend_28 { pt3dadd( 16.1658, -80.4945, 16.48, 1.02 ) }
    dend_28 { pt3dadd( 16.2874, -81.2947, 16.8382, 1.02 ) }
    dend_28 { pt3dadd( 16.4441, -82.1945, 17.2405, 0.68 ) }
    dend_28 { pt3dadd( 16.7494, -83.641, 17.7973, 0.68 ) }
    dend_28 { pt3dadd( 16.9512, -84.4221, 18.0134, 1.02 ) }
    dend_28 { pt3dadd( 17.1706, -85.0945, 18.1222, 2.15 ) }
    dend_28 { pt3dadd( 17.6217, -86.2272, 18.1814, 1.47 ) }
    dend_28 { pt3dadd( 18.4315, -88.0181, 18.1976, 1.13 ) }
    dend_28 { pt3dadd( 18.9932, -89.2449, 18.1927, 0.79 ) }
    dend_28 { pt3dadd( 19.3776, -90.053, 18.1723, 0.57 ) }
    dend_28 { pt3dadd( 20.1566, -91.5403, 18.1321, 0.57 ) }
    dend_28 { pt3dadd( 20.8679, -92.787, 18.095, 0.57 ) }
    dend_28 { pt3dadd( 21.4877, -93.813, 18.0558, 0.57 ) }
    dend_28 { pt3dadd( 22.0508, -94.7845, 18.0142, 0.57 ) }
    dend_28 { pt3dadd( 22.399, -95.4994, 17.9715, 0.57 ) }
    dend_28 { pt3dadd( 22.9378, -96.8145, 17.8407, 0.57 ) }
    dend_28 { pt3dadd( 23.2344, -97.5828, 17.8343, 0.57 ) }
    dend_28 { pt3dadd( 23.655, -98.7571, 17.8866, 2.83 ) }
    dend_28 { pt3dadd( 24.2123, -100.285, 18.0548, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_28 { pt3dadd( 25.037, -102.442, 18.331, 1.02 ) }
    dend_28 { pt3dadd( 25.4839, -103.656, 18.5255, 0.68 ) }
    dend_28 { pt3dadd( 26.6045, -106.663, 19.0519, 0.68 ) }
    dend_28 { pt3dadd( 27.0302, -107.708, 19.2317, 0.68 ) }
    dend_28 { pt3dadd( 27.8246, -109.449, 19.5834, 0.68 ) }
    dend_28 { pt3dadd( 28.3086, -110.411, 19.7892, 0.68 ) }
    dend_28 { pt3dadd( 28.96, -111.573, 20.0054, 0.68 ) }
    dend_28 { pt3dadd( 29.88, -113.121, 20.1951, 0.68 ) }
    dend_28 { pt3dadd( 30.9771, -114.812, 20.2767, 0.68 ) }
    dend_28 { pt3dadd( 32.566, -117.045, 20.3867, 0.68 ) }
    dend_28 { pt3dadd( 33.5778, -118.414, 20.453, 0.68 ) }
    dend_28 { pt3dadd( 34.8099, -120.059, 20.4941, 0.57 ) }
    dend_28 { pt3dadd( 35.6807, -121.238, 20.4825, 0.57 ) }
    dend_28 { pt3dadd( 36.4637, -122.414, 20.3691, 0.57 ) }
    dend_28 { pt3dadd( 37.2132, -123.672, 20.0883, 0.57 ) }
    dend_28 { pt3dadd( 37.9301, -125.012, 19.5706, 0.57 ) }
    dend_28 { pt3dadd( 38.8253, -126.774, 18.7776, 0.57 ) }
    dend_28 { pt3dadd( 39.1989, -127.56, 18.3691, 1.47 ) }
    dend_28 { pt3dadd( 40.1575, -129.594, 17.2117, 0.68 ) }
    dend_28 { pt3dadd( 40.742, -130.811, 16.4965, 0.68 ) }
    dend_28 { pt3dadd( 41.5753, -132.396, 15.5497, 0.68 ) }
    dend_28 { pt3dadd( 42.8305, -134.557, 14.287, 0.68 ) }
    dend_28 { pt3dadd( 44.0775, -136.507, 13.2591, 0.68 ) }
    dend_28 { pt3dadd( 44.6741, -137.365, 12.8323, 0.68 ) }
    dend_28 { pt3dadd( 45.0747, -137.912, 12.7129, 0.68 ) }
    dend_28 { pt3dadd( 45.7359, -138.951, 12.8695, 0.57 ) }
    dend_28 { pt3dadd( 46.0259, -139.484, 13.0839, 0.57 ) }
    dend_28 { pt3dadd( 46.4174, -140.284, 13.5139, 0.57 ) }
    dend_28 { pt3dadd( 47.0635, -141.725, 14.276, 0.57 ) }
    dend_28 { pt3dadd( 49.1219, -146.779, 16.6988, 0.68 ) }
    dend_28 { pt3dadd( 50.2651, -149.813, 17.9248, 0.68 ) }
    dend_28 { pt3dadd( 50.7628, -151.261, 18.3782, 0.68 ) }
    dend_28 { pt3dadd( 51.0715, -152.268, 18.5649, 0.68 ) }
    dend_28 { pt3dadd( 51.8205, -155.035, 18.4239, 0.68 ) }
    dend_28 { pt3dadd( 52.0368, -155.877, 18.1541, 0.68 ) }
    dend_28 { pt3dadd( 52.4306, -157.391, 17.2326, 2.04 ) }
    dend_28 { pt3dadd( 52.7996, -158.712, 16.2487, 0.79 ) }
    dend_28 { pt3dadd( 53.2199, -160.078, 15.2102, 0.79 ) }
    dend_28 { pt3dadd( 54.0659, -162.635, 13.4552, 0.79 ) }
    dend_28 { pt3dadd( 54.5822, -164.038, 12.693, 0.79 ) }
    dend_28 { pt3dadd( 55.0929, -165.344, 12.1636, 0.79 ) }
    dend_28 { pt3dadd( 55.6941, -166.844, 11.8206, 0.79 ) }
    dend_28 { pt3dadd( 56.2981, -168.216, 11.7016, 0.68 ) }
    dend_28 { pt3dadd( 57.1614, -170.042, 11.7996, 0.68 ) }
    dend_28 { pt3dadd( 57.9764, -171.683, 12.0971, 0.68 ) }
    dend_28 { pt3dadd( 58.7612, -173.146, 12.6761, 0.68 ) }
    dend_28 { pt3dadd( 59.3592, -174.203, 13.2288, 0.68 ) }
    dend_28 { pt3dadd( 60.003, -175.276, 13.9458, 0.68 ) }
    dend_28 { pt3dadd( 60.3903, -175.885, 14.3852, 1.58 ) }
    dend_28 { pt3dadd( 60.9838, -176.756, 14.9807, 1.58 ) }
    dend_28 { pt3dadd( 63.4845, -180.354, 17.2905, 0.68 ) }
    dend_28 { pt3dadd( 64.397, -181.615, 18.0668, 0.68 ) }
    dend_28 { pt3dadd( 66.0923, -183.871, 19.3766, 0.68 ) }
    dend_28 { pt3dadd( 67.6337, -185.909, 20.5614, 0.68 ) }
    dend_28 { pt3dadd( 68.9873, -187.662, 21.5374, 0.68 ) }
    dend_28 { pt3dadd( 70.0642, -189.034, 22.2898, 0.68 ) }
    dend_28 { pt3dadd( 71.2933, -190.551, 23.0127, 0.68 ) }
    dend_28 { pt3dadd( 72.1665, -191.541, 23.6186, 0.68 ) }
    dend_28 { pt3dadd( 73.8323, -193.279, 24.7831, 0.68 ) }
    dend_28 { pt3dadd( 74.4213, -193.838, 25.1449, 0.68 ) }
    dend_28 { pt3dadd( 76.0376, -195.257, 25.9332, 2.38 ) }
    dend_28 { pt3dadd( 76.8602, -195.964, 26.1984, 1.92 ) }
    dend_28 { pt3dadd( 79.2867, -197.991, 26.6825, 0.57 ) }
    dend_28 { pt3dadd( 80.2154, -198.774, 26.7227, 0.57 ) }
    dend_28 { pt3dadd( 83.4185, -201.492, 26.4517, 0.57 ) }
    dend_28 { pt3dadd( 85.6415, -203.397, 26.1806, 0.57 ) }
    dend_28 { pt3dadd( 87.0446, -204.6, 25.9383, 0.57 ) }
    dend_28 { pt3dadd( 88.8169, -206.115, 25.6417, 0.57 ) }
    dend_28 { pt3dadd( 90.504, -207.531, 25.3626, 0.57 ) }
    dend_28 { pt3dadd( 91.6526, -208.492, 25.3036, 0.57 ) }
    dend_28 { pt3dadd( 92.5738, -209.252, 25.4123, 2.15 ) }
    dend_28 { pt3dadd( 93.3427, -209.864, 25.5381, 1.13 ) }
    dend_28 { pt3dadd( 94.5247, -210.801, 25.7811, 0.57 ) }
    dend_28 { pt3dadd( 95.6173, -211.744, 25.8509, 0.57 ) }
    dend_28 { pt3dadd( 96.0836, -212.164, 25.8338, 0.57 ) }
    dend_28 { pt3dadd( 96.6482, -212.744, 25.7884, 0.57 ) }
    dend_28 { pt3dadd( 97.3606, -213.542, 25.7028, 0.57 ) }
    dend_28 { pt3dadd( 97.5333, -213.765, 25.6849, 2.38 ) }
    dend_28 { pt3dadd( 99.184, -216.119, 25.536, 0.45 ) }
    dend_28 { pt3dadd( 100.238, -217.722, 25.4667, 0.45 ) }
    dend_28 { pt3dadd( 101.398, -219.529, 25.422, 0.45 ) }
    dend_28 { pt3dadd( 102.203, -220.804, 25.4585, 0.45 ) }
    dend_28 { pt3dadd( 103.637, -223.131, 25.7289, 0.45 ) }
    dend_28 { pt3dadd( 104.015, -223.768, 25.8486, 0.45 ) }
    dend_28 { pt3dadd( 105.607, -226.642, 26.6848, 0.45 ) }
    dend_28 { pt3dadd( 106.695, -228.837, 27.395, 0.45 ) }
    dend_28 { pt3dadd( 107.561, -230.888, 28.0289, 0.45 ) }
    dend_28 { pt3dadd( 108.21, -232.803, 28.6702, 0.45 ) }
    dend_28 { pt3dadd( 108.447, -233.707, 28.9919, 0.45 ) }
    dend_28 { pt3dadd( 108.728, -235.169, 29.4637, 0.45 ) }
    dend_28 { pt3dadd( 108.965, -237.099, 29.9682, 0.45 ) }
    dend_28 { pt3dadd( 109.189, -239.109, 30.1523, 0.45 ) }
    dend_28 { pt3dadd( 109.267, -239.625, 30.1125, 1.24 ) }
    dend_28 { pt3dadd( 109.574, -240.916, 29.8821, 0.57 ) }
    dend_28 { pt3dadd( 110.125, -242.498, 29.5427, 0.57 ) }
    dend_28 { pt3dadd( 111.08, -244.548, 29.0586, 0.57 ) }
    dend_28 { pt3dadd( 112.125, -246.427, 28.6478, 1.36 ) }
    dend_28 { pt3dadd( 113.075, -247.919, 28.4804, 0.57 ) }
    dend_28 { pt3dadd( 114.223, -249.55, 28.405, 0.57 ) }
    dend_28 { pt3dadd( 115.805, -251.626, 28.4432, 0.57 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( 117.062, -253.164, 28.6664, 0.57 ) }
    dend_28 { pt3dadd( 118.013, -254.259, 28.944, 0.57 ) }
    dend_28 { pt3dadd( 120.056, -256.632, 29.6452, 0.57 ) }
    dend_28 { pt3dadd( 121.921, -258.941, 30.2808, 0.57 ) }
    dend_28 { pt3dadd( 122.672, -259.991, 30.5679, 0.57 ) }
    dend_28 { pt3dadd( 123.91, -262.014, 31.0116, 2.38 ) }
    dend_28 { pt3dadd( 124.25, -262.663, 31.1093, 1.58 ) }
    dend_28 { pt3dadd( 125.625, -265.656, 31.5165, 0.68 ) }
    dend_28 { pt3dadd( 126.341, -267.504, 31.7091, 0.68 ) }
    dend_28 { pt3dadd( 127.119, -269.788, 32.1104, 0.79 ) }
    dend_28 { pt3dadd( 127.815, -271.927, 32.5268, 0.57 ) }
    dend_28 { pt3dadd( 128.439, -273.986, 32.935, 0.57 ) }
    dend_28 { pt3dadd( 129.331, -277.054, 33.6513, 0.57 ) }
    dend_28 { pt3dadd( 129.978, -279.362, 34.2819, 0.57 ) }
    dend_28 { pt3dadd( 130.58, -281.57, 34.8476, 0.57 ) }
    dend_28 { pt3dadd( 130.873, -282.641, 35.0881, 0.57 ) }
    dend_28 { pt3dadd( 131.338, -284.372, 35.4608, 0.57 ) }
    dend_28 { pt3dadd( 131.998, -286.961, 35.8763, 0.57 ) }
    dend_28 { pt3dadd( 132.423, -288.602, 35.9598, 0.57 ) }
    dend_28 { pt3dadd( 132.933, -290.544, 35.8532, 0.57 ) }
    dend_28 { pt3dadd( 133.294, -291.901, 35.6287, 0.57 ) }
    dend_28 { pt3dadd( 133.53, -292.741, 35.4433, 0.57 ) }
    dend_28 { pt3dadd( 134.015, -294.3, 35.0834, 0.57 ) }
    dend_28 { pt3dadd( 134.918, -296.903, 34.4819, 0.57 ) }
    dend_28 { pt3dadd( 135.721, -298.939, 34.1194, 1.13 ) }
    dend_28 { pt3dadd( 136.237, -300.111, 33.9849, 2.38 ) }
    dend_28 { pt3dadd( 136.429, -300.518, 33.9567, 2.38 ) }
    dend_28 { pt3dadd( 137.785, -303.182, 33.9252, 0.79 ) }
    dend_28 { pt3dadd( 138.547, -304.686, 33.8668, 0.79 ) }
    dend_28 { pt3dadd( 139.406, -306.494, 33.8117, 0.57 ) }
    dend_28 { pt3dadd( 140.063, -307.976, 33.7215, 0.57 ) }
    dend_28 { pt3dadd( 140.608, -309.364, 33.5919, 0.57 ) }
    dend_28 { pt3dadd( 141.044, -310.59, 33.4205, 0.57 ) }
    dend_28 { pt3dadd( 142.088, -313.679, 32.8013, 0.57 ) }
    dend_28 { pt3dadd( 142.251, -314.196, 32.711, 2.94 ) }
    dend_28 { pt3dadd( 142.988, -316.554, 32.2954, 0.68 ) }
    dend_28 { pt3dadd( 143.724, -318.81, 31.9783, 0.68 ) }
    dend_28 { pt3dadd( 144.367, -320.578, 31.8029, 0.68 ) }
    dend_28 { pt3dadd( 144.941, -322.01, 31.7116, 0.68 ) }
    dend_28 { pt3dadd( 145.933, -324.258, 31.662, 0.68 ) }
    dend_28 { pt3dadd( 146.874, -326.378, 31.5798, 0.68 ) }
    dend_28 { pt3dadd( 147.567, -327.922, 31.4947, 0.68 ) }
    dend_28 { pt3dadd( 148.223, -329.385, 31.3794, 0.68 ) }
    dend_28 { pt3dadd( 149.463, -332.166, 31.1909, 0.68 ) }
    dend_28 { pt3dadd( 150.058, -333.475, 31.1183, 0.68 ) }
    dend_28 { pt3dadd( 150.695, -334.816, 31.0652, 0.68 ) }
    dend_28 { pt3dadd( 152.348, -338.374, 31.2063, 0.68 ) }
    dend_28 { pt3dadd( 152.716, -339.184, 31.275, 0.68 ) }
    dend_28 { pt3dadd( 153.905, -342.044, 31.7007, 0.57 ) }
    dend_28 { pt3dadd( 154.192, -342.802, 31.8533, 0.57 ) }
    dend_28 { pt3dadd( 154.373, -343.346, 31.98, 2.49 ) }
    dend_28 { pt3dadd( 155.49, -346.944, 32.9681, 0.68 ) }
    dend_28 { pt3dadd( 155.775, -347.965, 33.3021, 0.68 ) }
    dend_28 { pt3dadd( 156.799, -351.553, 34.5232, 0.68 ) }
    dend_28 { pt3dadd( 157.142, -352.685, 34.898, 0.68 ) }
    dend_28 { pt3dadd( 157.916, -354.964, 35.5994, 0.68 ) }
    dend_28 { pt3dadd( 158.807, -357.27, 36.2435, 0.68 ) }
    dend_28 { pt3dadd( 159.754, -359.355, 36.7271, 0.68 ) }
    dend_28 { pt3dadd( 160.687, -361.122, 37.1713, 0.68 ) }
    dend_28 { pt3dadd( 162.265, -363.657, 37.822, 0.68 ) }
    dend_28 { pt3dadd( 162.913, -364.61, 38.1079, 0.68 ) }
    dend_28 { pt3dadd( 163.402, -365.309, 38.3634, 2.72 ) }
    dend_28 { pt3dadd( 164.124, -366.384, 38.7883, 1.92 ) }
    dend_28 { pt3dadd( 165.391, -368.518, 39.7286, 0.91 ) }
    dend_28 { pt3dadd( 166.061, -369.902, 40.4588, 0.91 ) }
    dend_28 { pt3dadd( 166.599, -371.315, 41.3353, 0.68 ) }
    dend_28 { pt3dadd( 167.112, -372.87, 42.4262, 0.68 ) }
    dend_28 { pt3dadd( 167.602, -374.459, 43.6844, 0.68 ) }
    dend_28 { pt3dadd( 168.204, -376.49, 45.4156, 0.68 ) }
    dend_28 { pt3dadd( 168.624, -377.9, 46.7966, 0.68 ) }
    dend_28 { pt3dadd( 169.236, -379.822, 48.9302, 0.68 ) }
    dend_28 { pt3dadd( 169.779, -381.241, 50.8089, 0.68 ) }
    dend_28 { pt3dadd( 170.603, -383.076, 53.4895, 0.68 ) }
    dend_28 { pt3dadd( 171.02, -383.864, 54.8233, 0.68 ) }
    dend_28 { pt3dadd( 172.05, -385.582, 57.7534, 0.68 ) }
    dend_28 { pt3dadd( 172.727, -386.621, 59.4464, 0.68 ) }
    dend_28 { pt3dadd( 174.496, -389.24, 63.4399, 0.68 ) }
    dend_28 { pt3dadd( 175.182, -390.273, 64.8897, 0.68 ) }
    dend_28 { pt3dadd( 176.837, -392.791, 68.0812, 0.68 ) }
    dend_28 { pt3dadd( 177.998, -394.598, 70.1346, 0.68 ) }
    dend_28 { pt3dadd( 178.388, -395.217, 70.7128, 0.68 ) }
    dend_28 { pt3dadd( 178.725, -395.767, 71.1712, 0.68 ) }
    dend_28 { pt3dadd( 179.666, -397.491, 72.3876, 0.68 ) }
    dend_28 { pt3dadd( 180.04, -398.196, 72.9292, 0.68 ) }
    dend_28 { pt3dadd( 180.988, -400.11, 74.3269, 0.45 ) }
    dend_28 { pt3dadd( 181.487, -401.105, 75.3024, 0.45 ) }
    dend_28 { pt3dadd( 181.696, -401.543, 75.7609, 0.45 ) }
    dend_28 { pt3dadd( 182.013, -402.216, 76.487, 0.45 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 88/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 10.2099, -57.0433, 6.64891, 0.79 ) }
    dend_27 { pt3dadd( 11.3595, -55.7207, 5.04556, 0.79 ) }
    dend_27 { pt3dadd( 12.3634, -54.5658, 3.64551, 0.57 ) }
    dend_27 { pt3dadd( 12.8226, -54.0375, 3.00509, 0.34 ) }
    dend_27 { pt3dadd( 13.3449, -53.4366, 2.27653, 0.34 ) }
    dend_27 { pt3dadd( 13.5667, -53.1815, 1.96729, 0.34 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 94/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 77.8066, -18.2094, -20.5601, 0.45 ) }
    dend_21 { pt3dadd( 78.382, -20.1403, -20.851, 0.45 ) }
    dend_21 { pt3dadd( 79.137, -22.5642, -21.3758, 0.45 ) }
    dend_21 { pt3dadd( 80.7257, -27.6065, -22.6361, 0.45 ) }
    dend_21 { pt3dadd( 81.8689, -31.0093, -23.9575, 0.45 ) }
    dend_21 { pt3dadd( 82.899, -34.372, -25.4833, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( 83.1507, -35.3407, -25.9413, 0.45 ) }
    dend_21 { pt3dadd( 83.9037, -38.7264, -27.6122, 0.45 ) }
    dend_21 { pt3dadd( 84.7603, -43.118, -29.8284, 0.45 ) }
    dend_21 { pt3dadd( 85.7617, -49.3898, -32.9333, 0.45 ) }
    dend_21 { pt3dadd( 86.2328, -53.0294, -34.7336, 0.45 ) }
    dend_21 { pt3dadd( 86.6543, -58.1786, -37.2333, 0.45 ) }
    dend_21 { pt3dadd( 86.7844, -63.071, -39.4733, 0.45 ) }
    dend_21 { pt3dadd( 86.6269, -66.459, -40.9016, 0.45 ) }
    dend_21 { pt3dadd( 85.9563, -71.124, -42.7469, 0.45 ) }
    dend_21 { pt3dadd( 85.2288, -73.8549, -43.6954, 0.45 ) }
    dend_21 { pt3dadd( 84.4441, -76.3026, -44.6148, 0.45 ) }
    dend_21 { pt3dadd( 83.1489, -79.1452, -45.8253, 0.45 ) }
    dend_21 { pt3dadd( 81.831, -81.1175, -46.7872, 0.45 ) }
    dend_21 { pt3dadd( 79.7121, -83.476, -48.0575, 0.45 ) }
    dend_21 { pt3dadd( 76.7707, -86.0196, -49.5112, 0.45 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 15/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 77.8066, -18.2094, -20.5601, 0.45 ) }
    dend_20 { pt3dadd( 82.162, -23.9083, -17.2177, 0.45 ) }
    dend_20 { pt3dadd( 84.1225, -26.4736, -15.7132, 0.45 ) }
    dend_20 { pt3dadd( 86.8165, -29.9986, -13.6458, 0.45 ) }
    dend_20 { pt3dadd( 88.2255, -31.8422, -12.5645, 0.45 ) }
    dend_20 { pt3dadd( 91.2578, -35.81, -10.2375, 0.45 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 21/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 18.6775, -101.378, 67.4201, 0.57 ) }
    dend_66 { pt3dadd( 16.0231, -103.073, 69.0626, 0.57 ) }
    dend_66 { pt3dadd( 13.9731, -104.488, 70.4349, 0.57 ) }
    dend_66 { pt3dadd( 12.3162, -105.692, 71.5494, 0.57 ) }
    dend_66 { pt3dadd( 11.3248, -106.524, 72.2335, 0.57 ) }
    dend_66 { pt3dadd( 9.78002, -108.025, 73.3793, 0.57 ) }
    dend_66 { pt3dadd( 7.80918, -110.272, 75.2007, 0.57 ) }
    dend_66 { pt3dadd( 6.7404, -111.738, 76.4427, 0.57 ) }
    dend_66 { pt3dadd( 6.05333, -112.862, 77.2851, 0.57 ) }
    dend_66 { pt3dadd( 4.91921, -114.747, 79.1144, 0.57 ) }
    dend_66 { pt3dadd( 3.35345, -117.318, 81.798, 0.57 ) }
    dend_66 { pt3dadd( 1.37642, -120.164, 85.2913, 0.57 ) }
    dend_66 { pt3dadd( 0.635397, -121.01, 86.4982, 0.57 ) }
    dend_66 { pt3dadd( -1.48873, -122.618, 89.7428, 0.57 ) }
    dend_66 { pt3dadd( -7.28024, -124.827, 97.669, 0.57 ) }
    dend_66 { pt3dadd( -9.17985, -124.949, 99.7578, 0.57 ) }
    dend_66 { pt3dadd( -11.9789, -124.532, 102.056, 0.57 ) }
    dend_66 { pt3dadd( -14.788, -123.847, 103.82, 0.57 ) }
    dend_66 { pt3dadd( -18.3441, -122.894, 106.035, 0.57 ) }
    dend_66 { pt3dadd( -21.3159, -122.131, 107.648, 0.57 ) }
    dend_66 { pt3dadd( -24.8153, -121.441, 109.34, 0.57 ) }
    dend_66 { pt3dadd( -27.8406, -121.048, 111.029, 0.57 ) }
    dend_66 { pt3dadd( -31.6455, -120.921, 113.325, 0.57 ) }
    dend_66 { pt3dadd( -37.4583, -121.457, 117.248, 0.57 ) }
    dend_66 { pt3dadd( -40.2737, -122.157, 119.689, 0.57 ) }
    dend_66 { pt3dadd( -43.0437, -123.168, 122.685, 0.57 ) }
    dend_66 { pt3dadd( -44.5676, -123.827, 124.732, 0.57 ) }
    dend_66 { pt3dadd( -45.3937, -124.178, 126.031, 0.57 ) }
    dend_66 { pt3dadd( -46.5487, -124.665, 127.887, 0.57 ) }
    dend_66 { pt3dadd( -50.8218, -126.13, 134.49, 0.57 ) }
    dend_66 { pt3dadd( -51.7252, -126.404, 135.853, 0.57 ) }
    dend_66 { pt3dadd( -52.9946, -126.752, 137.675, 0.57 ) }
    dend_66 { pt3dadd( -57.0603, -127.744, 143.378, 0.57 ) }
    dend_66 { pt3dadd( -58.7939, -128.206, 145.644, 0.57 ) }
    dend_66 { pt3dadd( -63.9149, -129.671, 151.777, 0.57 ) }
    dend_66 { pt3dadd( -65.0168, -130.023, 153.0, 0.57 ) }
    dend_66 { pt3dadd( -69.3064, -131.482, 157.577, 0.57 ) }
    dend_66 { pt3dadd( -70.5145, -131.917, 158.81, 0.57 ) }
    dend_66 { pt3dadd( -73.2447, -132.935, 161.355, 0.57 ) }
    dend_66 { pt3dadd( -74.6411, -133.483, 162.568, 0.57 ) }
    dend_66 { pt3dadd( -80.7104, -136.129, 167.372, 0.57 ) }
    dend_66 { pt3dadd( -83.5436, -137.437, 169.475, 0.57 ) }
    dend_66 { pt3dadd( -87.1334, -139.241, 171.686, 0.57 ) }
    dend_66 { pt3dadd( -91.8856, -141.8, 174.228, 0.57 ) }
    dend_66 { pt3dadd( -97.4481, -144.95, 176.816, 0.57 ) }
    dend_66 { pt3dadd( -99.0071, -145.925, 177.341, 0.57 ) }
    dend_66 { pt3dadd( -101.701, -147.8, 177.819, 0.57 ) }
    dend_66 { pt3dadd( -106.569, -151.575, 177.211, 0.57 ) }
    dend_66 { pt3dadd( -109.221, -153.826, 176.092, 0.57 ) }
    dend_66 { pt3dadd( -112.139, -156.484, 174.339, 0.57 ) }
    dend_66 { pt3dadd( -115.288, -159.444, 172.122, 0.57 ) }
    dend_66 { pt3dadd( -117.799, -161.845, 170.176, 0.57 ) }
    dend_66 { pt3dadd( -127.382, -171.386, 161.788, 0.57 ) }
    dend_66 { pt3dadd( -127.544, -171.555, 161.631, 2.26 ) }
    dend_66 { pt3dadd( -130.262, -174.558, 158.168, 0.68 ) }
    dend_66 { pt3dadd( -131.251, -175.776, 156.45, 0.68 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 77/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 18.6775, -101.378, 67.4201, 0.57 ) }
    dend_65 { pt3dadd( 19.9749, -102.867, 74.5681, 0.57 ) }
    dend_65 { pt3dadd( 20.9085, -103.997, 79.471, 0.57 ) }
    dend_65 { pt3dadd( 21.1276, -104.282, 80.4318, 0.57 ) }
    dend_65 { pt3dadd( 21.7448, -105.151, 82.9206, 0.57 ) }
    dend_65 { pt3dadd( 22.9501, -106.828, 87.7394, 0.57 ) }
    dend_65 { pt3dadd( 25.9635, -110.816, 98.9043, 0.57 ) }
    dend_65 { pt3dadd( 26.6258, -111.666, 100.947, 0.57 ) }
    dend_65 { pt3dadd( 28.0543, -113.517, 104.854, 0.57 ) }
    dend_65 { pt3dadd( 28.6386, -114.266, 106.247, 0.57 ) }
    dend_65 { pt3dadd( 31.0728, -117.291, 111.6, 0.57 ) }
    dend_65 { pt3dadd( 31.918, -118.485, 113.208, 0.57 ) }
    dend_65 { pt3dadd( 33.1945, -120.579, 115.039, 0.57 ) }
    dend_65 { pt3dadd( 34.5148, -122.502, 116.878, 0.57 ) }
    dend_65 { pt3dadd( 36.3611, -125.121, 119.552, 0.57 ) }
    // Section: dend_63, id: dend_63, parent: dend_49 (entry count 92/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 54.6168, -73.2155, 23.556, 0.34 ) }
    dend_63 { pt3dadd( 53.7392, -74.7512, 23.1571, 0.34 ) }
    dend_63 { pt3dadd( 53.1606, -76.0018, 22.7885, 0.34 ) }
    dend_63 { pt3dadd( 52.5538, -77.3604, 22.4112, 0.45 ) }
    dend_63 { pt3dadd( 51.5301, -79.6793, 21.8216, 0.45 ) }
    dend_63 { pt3dadd( 50.576, -81.8576, 21.231, 0.45 ) }
    dend_63 { pt3dadd( 49.7214, -83.8344, 20.7103, 0.45 ) }
    dend_63 { pt3dadd( 48.682, -86.4518, 19.8394, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_63 { pt3dadd( 48.2991, -87.5435, 19.4676, 0.45 ) }
    dend_63 { pt3dadd( 48.0425, -88.3301, 19.2018, 0.45 ) }
    dend_63 { pt3dadd( 47.3899, -90.4129, 18.5512, 0.45 ) }
    dend_63 { pt3dadd( 46.9612, -91.8191, 18.1857, 0.45 ) }
    dend_63 { pt3dadd( 45.8061, -95.6173, 17.3104, 0.45 ) }
    dend_63 { pt3dadd( 45.3163, -97.1924, 16.9426, 0.45 ) }
    dend_63 { pt3dadd( 45.0256, -98.1947, 16.7169, 0.45 ) }
    dend_63 { pt3dadd( 44.4306, -100.229, 16.3409, 0.45 ) }
    dend_63 { pt3dadd( 43.8088, -102.412, 15.895, 0.45 ) }
    dend_63 { pt3dadd( 43.4055, -103.735, 15.5196, 0.45 ) }
    dend_63 { pt3dadd( 42.6392, -106.029, 14.7333, 0.45 ) }
    dend_63 { pt3dadd( 42.2494, -107.135, 14.2855, 0.45 ) }
    dend_63 { pt3dadd( 41.6841, -108.672, 13.507, 0.45 ) }
    dend_63 { pt3dadd( 40.2732, -112.291, 11.4163, 0.45 ) }
    dend_63 { pt3dadd( 39.6291, -113.942, 10.2865, 0.45 ) }
    dend_63 { pt3dadd( 39.1487, -115.214, 9.38594, 0.45 ) }
    dend_63 { pt3dadd( 38.5887, -116.776, 8.29769, 0.45 ) }
    dend_63 { pt3dadd( 37.4958, -119.899, 6.14163, 0.23 ) }
    dend_63 { pt3dadd( 37.2385, -120.665, 5.61517, 0.23 ) }
    dend_63 { pt3dadd( 36.3375, -123.386, 3.99353, 0.23 ) }
    dend_63 { pt3dadd( 36.0266, -124.454, 3.39171, 0.23 ) }
    dend_63 { pt3dadd( 35.3514, -126.946, 1.93016, 0.45 ) }
    dend_63 { pt3dadd( 35.1436, -127.764, 1.42998, 0.45 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 23/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 54.6168, -73.2155, 23.556, 0.45 ) }
    dend_50 { pt3dadd( 56.5688, -76.9189, 24.3371, 0.45 ) }
    dend_50 { pt3dadd( 58.4443, -80.5869, 25.0603, 0.45 ) }
    dend_50 { pt3dadd( 59.9085, -83.6029, 25.6268, 0.45 ) }
    dend_50 { pt3dadd( 61.7445, -87.5142, 26.5457, 0.45 ) }
    dend_50 { pt3dadd( 64.7612, -93.9161, 28.1889, 0.45 ) }
    dend_50 { pt3dadd( 66.7842, -98.2091, 29.2908, 0.45 ) }
    dend_50 { pt3dadd( 67.9037, -100.768, 29.8978, 0.45 ) }
    dend_50 { pt3dadd( 69.6604, -105.117, 30.9391, 0.45 ) }
    dend_50 { pt3dadd( 71.3965, -109.682, 32.0283, 0.45 ) }
    dend_50 { pt3dadd( 72.9597, -113.676, 33.2309, 0.45 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -14.2064, -91.9741, -4.82286, 0.57 ) }
    dend_43 { pt3dadd( -15.2493, -92.2369, -8.42743, 0.57 ) }
    dend_43 { pt3dadd( -15.3983, -92.2744, -8.94245, 0.57 ) }
    dend_43 { pt3dadd( -15.7216, -92.3559, -10.06, 0.57 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 38/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -14.2064, -91.9741, -4.82286, 0.68 ) }
    dend_42 { pt3dadd( -14.6316, -93.3031, -5.51729, 0.68 ) }
    dend_42 { pt3dadd( -15.4571, -95.1626, -6.90136, 0.68 ) }
    dend_42 { pt3dadd( -15.9291, -96.0604, -7.60673, 0.68 ) }
    dend_42 { pt3dadd( -16.3587, -96.7431, -8.14711, 0.68 ) }
    dend_42 { pt3dadd( -17.4459, -98.1974, -9.51397, 0.68 ) }
    dend_42 { pt3dadd( -17.9667, -98.8457, -10.1462, 0.68 ) }
    dend_42 { pt3dadd( -19.6871, -100.804, -12.1822, 0.68 ) }
    dend_42 { pt3dadd( -20.2782, -101.504, -12.8457, 0.68 ) }
    dend_42 { pt3dadd( -21.0371, -102.392, -13.5975, 0.68 ) }
    dend_42 { pt3dadd( -22.6098, -104.233, -15.025, 0.68 ) }
    dend_42 { pt3dadd( -23.8439, -105.644, -15.9635, 0.68 ) }
    dend_42 { pt3dadd( -25.8638, -107.982, -17.3605, 0.68 ) }
    dend_42 { pt3dadd( -27.5912, -110.004, -18.4278, 0.68 ) }
    dend_42 { pt3dadd( -29.462, -112.2, -19.5116, 0.68 ) }
    dend_42 { pt3dadd( -30.9479, -113.974, -20.3258, 0.68 ) }
    dend_42 { pt3dadd( -32.7017, -116.037, -21.1429, 0.68 ) }
    dend_42 { pt3dadd( -34.3119, -117.794, -21.8515, 0.57 ) }
    dend_42 { pt3dadd( -35.7689, -119.218, -22.4191, 0.57 ) }
    dend_42 { pt3dadd( -37.5727, -120.921, -23.1701, 0.57 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 58/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -4.93663, -88.2945, 26.1415, 0.45 ) }
    dend_38 { pt3dadd( -7.05455, -88.7672, 27.6148, 0.45 ) }
    dend_38 { pt3dadd( -8.025, -88.8739, 28.3324, 0.45 ) }
    dend_38 { pt3dadd( -10.2544, -88.9717, 29.8019, 0.45 ) }
    dend_38 { pt3dadd( -10.8545, -88.9671, 30.2153, 0.45 ) }
    dend_38 { pt3dadd( -11.6871, -88.9034, 30.7834, 0.45 ) }
    dend_38 { pt3dadd( -12.2197, -88.8558, 31.3761, 0.45 ) }
    dend_38 { pt3dadd( -12.7498, -88.784, 32.2221, 0.45 ) }
    dend_38 { pt3dadd( -13.2148, -88.6649, 33.1394, 0.45 ) }
    dend_38 { pt3dadd( -13.7227, -88.4499, 34.0596, 0.45 ) }
    dend_38 { pt3dadd( -14.0819, -88.2577, 34.6916, 0.45 ) }
    dend_38 { pt3dadd( -16.3004, -87.0207, 38.619, 0.45 ) }
    dend_38 { pt3dadd( -16.7883, -86.7834, 39.4297, 0.45 ) }
    dend_38 { pt3dadd( -17.788, -86.3729, 40.9359, 0.45 ) }
    dend_38 { pt3dadd( -19.3668, -85.7956, 43.1098, 0.45 ) }
    dend_38 { pt3dadd( -19.9873, -85.6441, 43.8299, 0.45 ) }
    dend_38 { pt3dadd( -21.8351, -85.5547, 45.6323, 0.45 ) }
    dend_38 { pt3dadd( -22.7032, -85.6833, 46.2182, 0.45 ) }
    dend_38 { pt3dadd( -23.2137, -85.8638, 46.5505, 0.34 ) }
    dend_38 { pt3dadd( -23.7804, -86.1848, 46.8924, 0.34 ) }
    dend_38 { pt3dadd( -25.3411, -87.2325, 47.6185, 0.34 ) }
    dend_38 { pt3dadd( -26.7531, -88.1975, 48.0629, 0.34 ) }
    dend_38 { pt3dadd( -27.7902, -88.8805, 48.2481, 0.34 ) }
    dend_38 { pt3dadd( -29.0234, -89.6319, 48.4796, 0.34 ) }
    dend_38 { pt3dadd( -31.101, -90.8285, 48.9044, 0.34 ) }
    dend_38 { pt3dadd( -33.8028, -92.2596, 49.4873, 0.34 ) }
    dend_38 { pt3dadd( -34.7374, -92.6699, 49.6745, 0.34 ) }
    dend_38 { pt3dadd( -35.3966, -92.8975, 49.8681, 0.34 ) }
    dend_38 { pt3dadd( -37.2499, -93.4424, 50.5968, 0.34 ) }
    dend_38 { pt3dadd( -38.4805, -93.7968, 51.2707, 0.34 ) }
    dend_38 { pt3dadd( -39.4084, -94.0695, 51.977, 0.34 ) }
    dend_38 { pt3dadd( -40.4104, -94.3913, 52.9348, 0.34 ) }
    dend_38 { pt3dadd( -41.6741, -94.8493, 54.0892, 0.34 ) }
    dend_38 { pt3dadd( -43.2346, -95.4853, 55.4846, 0.34 ) }
    dend_38 { pt3dadd( -44.974, -96.2684, 56.9414, 0.34 ) }
    dend_38 { pt3dadd( -46.7072, -97.1042, 58.323, 0.34 ) }
    dend_38 { pt3dadd( -47.8054, -97.6925, 59.1322, 0.34 ) }
    dend_38 { pt3dadd( -49.4382, -98.6921, 60.2457, 0.34 ) }
    dend_38 { pt3dadd( -50.3631, -99.2862, 60.778, 0.34 ) }
    dend_38 { pt3dadd( -51.0061, -99.6997, 61.0902, 0.34 ) }
    dend_38 { pt3dadd( -52.9329, -100.906, 61.7603, 0.34 ) }
    dend_38 { pt3dadd( -54.0727, -101.656, 62.1046, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -55.579, -102.649, 62.5765, 0.34 ) }
    dend_38 { pt3dadd( -56.1557, -103.014, 62.7845, 0.34 ) }
    dend_38 { pt3dadd( -57.5684, -103.843, 63.2242, 0.34 ) }
    dend_38 { pt3dadd( -58.3249, -104.271, 63.437, 0.34 ) }
    dend_38 { pt3dadd( -59.789, -105.079, 63.7879, 0.34 ) }
    dend_38 { pt3dadd( -60.6496, -105.542, 63.9551, 0.34 ) }
    dend_38 { pt3dadd( -61.6027, -106.033, 64.0923, 0.34 ) }
    dend_38 { pt3dadd( -63.3109, -106.89, 64.3032, 0.34 ) }
    dend_38 { pt3dadd( -64.7257, -107.554, 64.4504, 0.34 ) }
    dend_38 { pt3dadd( -66.1983, -108.163, 64.5708, 0.34 ) }
    dend_38 { pt3dadd( -67.5882, -108.642, 64.672, 0.34 ) }
    dend_38 { pt3dadd( -68.6498, -108.966, 64.7927, 0.34 ) }
    dend_38 { pt3dadd( -69.6887, -109.251, 64.9223, 0.34 ) }
    dend_38 { pt3dadd( -70.6883, -109.473, 65.067, 0.34 ) }
    dend_38 { pt3dadd( -71.5154, -109.587, 65.2104, 0.34 ) }
    dend_38 { pt3dadd( -73.0363, -109.64, 65.5415, 0.34 ) }
    dend_38 { pt3dadd( -74.1027, -109.577, 65.8453, 0.34 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 17/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -4.93663, -88.2945, 26.1415, 2.72 ) }
    dend_33 { pt3dadd( -3.70269, -92.1375, 31.4042, 2.72 ) }
    dend_33 { pt3dadd( -3.09023, -93.8114, 33.6244, 1.47 ) }
    dend_33 { pt3dadd( -2.55936, -95.3037, 35.3618, 1.13 ) }
    dend_33 { pt3dadd( -0.853163, -100.214, 40.6661, 1.13 ) }
    dend_33 { pt3dadd( -0.562433, -101.212, 41.5896, 3.39 ) }
    dend_33 { pt3dadd( -0.112275, -103.248, 43.173, 1.81 ) }
    dend_33 { pt3dadd( 0.447461, -107.553, 45.2302, 0.68 ) }
    dend_33 { pt3dadd( 0.580634, -109.954, 46.0363, 0.68 ) }
    dend_33 { pt3dadd( 0.495194, -111.245, 46.2391, 0.68 ) }
    dend_33 { pt3dadd( -0.118309, -115.067, 46.2568, 0.68 ) }
    dend_33 { pt3dadd( -0.683623, -117.66, 46.2412, 0.68 ) }
    dend_33 { pt3dadd( -1.31981, -119.916, 46.1507, 0.68 ) }
    dend_33 { pt3dadd( -2.09833, -122.443, 45.9125, 0.68 ) }
    dend_33 { pt3dadd( -3.00255, -125.365, 45.7493, 0.68 ) }
    dend_33 { pt3dadd( -3.55152, -127.183, 45.6373, 0.68 ) }
    dend_33 { pt3dadd( -4.20993, -129.537, 45.5451, 0.68 ) }
    dend_33 { pt3dadd( -4.76122, -131.633, 45.4322, 0.68 ) }
    dend_33 { pt3dadd( -5.89234, -136.166, 45.2506, 0.68 ) }
    dend_33 { pt3dadd( -6.11472, -137.216, 45.2883, 3.51 ) }
    dend_33 { pt3dadd( -6.5348, -139.679, 45.5281, 1.7 ) }
    dend_33 { pt3dadd( -6.8588, -141.574, 45.919, 0.79 ) }
    dend_33 { pt3dadd( -7.26086, -143.769, 46.5956, 0.79 ) }
    dend_33 { pt3dadd( -8.00315, -147.82, 48.1682, 0.68 ) }
    dend_33 { pt3dadd( -8.67301, -151.62, 49.8377, 0.79 ) }
    dend_33 { pt3dadd( -8.85816, -152.763, 50.3249, 0.45 ) }
    dend_33 { pt3dadd( -9.19581, -156.013, 52.4405, 0.45 ) }
    dend_33 { pt3dadd( -9.23851, -157.206, 53.394, 0.45 ) }
    dend_33 { pt3dadd( -9.20182, -158.084, 54.1967, 0.68 ) }
    dend_33 { pt3dadd( -8.96897, -160.147, 56.3352, 0.68 ) }
    dend_33 { pt3dadd( -8.79555, -161.217, 57.4673, 0.68 ) }
    dend_33 { pt3dadd( -7.51708, -168.073, 64.833, 2.38 ) }
    dend_33 { pt3dadd( -7.27335, -169.215, 66.1223, 1.47 ) }
    dend_33 { pt3dadd( -7.14771, -169.838, 66.8269, 0.79 ) }
    dend_33 { pt3dadd( -6.66226, -172.23, 69.4822, 0.79 ) }
    dend_33 { pt3dadd( -6.31176, -174.012, 71.3429, 0.79 ) }
    dend_33 { pt3dadd( -6.09035, -175.328, 72.4958, 2.15 ) }
    dend_33 { pt3dadd( -5.54146, -179.439, 74.8951, 0.79 ) }
    dend_33 { pt3dadd( -5.17108, -181.912, 76.19, 0.68 ) }
    dend_33 { pt3dadd( -4.89238, -183.701, 76.9027, 0.68 ) }
    dend_33 { pt3dadd( -4.61601, -185.349, 77.3328, 0.68 ) }
    dend_33 { pt3dadd( -4.51857, -186.007, 77.4443, 0.68 ) }
    dend_33 { pt3dadd( -4.30353, -188.016, 77.4942, 0.68 ) }
    dend_33 { pt3dadd( -4.18796, -190.174, 77.2593, 0.68 ) }
    dend_33 { pt3dadd( -4.30849, -193.978, 76.7715, 0.68 ) }
    dend_33 { pt3dadd( -4.40972, -194.704, 76.6717, 2.6 ) }
    dend_33 { pt3dadd( -4.68408, -195.937, 76.5095, 2.26 ) }
    dend_33 { pt3dadd( -5.96496, -199.966, 76.0502, 0.45 ) }
    dend_33 { pt3dadd( -6.49526, -201.223, 75.9399, 0.45 ) }
    dend_33 { pt3dadd( -7.42351, -203.086, 75.7726, 0.45 ) }
    dend_33 { pt3dadd( -8.88258, -205.762, 75.5492, 0.45 ) }
    dend_33 { pt3dadd( -10.3149, -208.285, 75.4145, 0.45 ) }
    dend_33 { pt3dadd( -11.9503, -211.089, 75.3712, 0.45 ) }
    dend_33 { pt3dadd( -13.7265, -214.057, 75.4355, 0.45 ) }
    dend_33 { pt3dadd( -15.4505, -216.951, 75.4597, 2.38 ) }
    dend_33 { pt3dadd( -15.8555, -217.649, 75.4576, 3.51 ) }
    dend_33 { pt3dadd( -17.8279, -221.047, 75.457, 0.57 ) }
    dend_33 { pt3dadd( -18.7036, -222.554, 75.4493, 1.24 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 75/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -6.3335, -75.7308, 27.875, 0.45 ) }
    dend_31 { pt3dadd( -4.94851, -75.0881, 26.2053, 0.45 ) }
    dend_31 { pt3dadd( -4.03529, -74.7329, 25.3223, 0.45 ) }
    dend_31 { pt3dadd( -2.65196, -74.3408, 24.1227, 0.45 ) }
    dend_31 { pt3dadd( 1.16661, -73.6098, 21.2523, 0.45 ) }
    dend_31 { pt3dadd( 4.64644, -73.0509, 18.7824, 0.45 ) }
    dend_31 { pt3dadd( 8.00623, -72.5109, 16.4392, 0.45 ) }
    dend_31 { pt3dadd( 11.5035, -71.8983, 13.5025, 0.45 ) }
    dend_31 { pt3dadd( 14.5894, -71.3282, 10.8655, 0.45 ) }
    dend_31 { pt3dadd( 16.9962, -70.8979, 8.847, 0.45 ) }
    dend_31 { pt3dadd( 21.5379, -70.1403, 5.15603, 0.45 ) }
    dend_31 { pt3dadd( 24.6696, -69.5897, 2.60777, 0.45 ) }
    dend_31 { pt3dadd( 30.6461, -68.261, -2.66001, 0.45 ) }
    dend_31 { pt3dadd( 32.6883, -67.715, -4.98042, 0.45 ) }
    dend_31 { pt3dadd( 32.8993, -67.6392, -5.25165, 0.45 ) }
    dend_31 { pt3dadd( 33.2301, -67.4969, -5.77447, 0.45 ) }
    dend_31 { pt3dadd( 34.5866, -66.9951, -7.96975, 0.45 ) }
    dend_31 { pt3dadd( 37.5805, -66.3985, -13.0167, 0.45 ) }
    dend_31 { pt3dadd( 39.2419, -66.2915, -15.5523, 0.45 ) }
    dend_31 { pt3dadd( 40.1134, -66.2926, -16.8718, 0.45 ) }
    dend_31 { pt3dadd( 42.1849, -66.4428, -20.0034, 0.45 ) }
    dend_31 { pt3dadd( 43.4956, -66.6463, -21.9354, 0.45 ) }
    dend_31 { pt3dadd( 46.6812, -67.2601, -26.4999, 0.45 ) }
    dend_31 { pt3dadd( 48.8017, -67.5848, -29.0478, 0.45 ) }
    dend_31 { pt3dadd( 49.6471, -67.7099, -29.9816, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( 50.6118, -67.8022, -30.9577, 0.45 ) }
    dend_31 { pt3dadd( 51.7131, -67.7776, -31.8964, 0.45 ) }
    dend_31 { pt3dadd( 53.313, -67.473, -33.0633, 0.45 ) }
    dend_31 { pt3dadd( 56.1492, -66.4929, -34.4018, 0.45 ) }
    dend_31 { pt3dadd( 57.4382, -66.0232, -35.0995, 0.45 ) }
    dend_31 { pt3dadd( 61.1832, -64.6338, -37.2545, 0.45 ) }
    dend_31 { pt3dadd( 62.9271, -63.9815, -38.3511, 0.45 ) }
    dend_31 { pt3dadd( 64.4409, -63.464, -39.3335, 0.45 ) }
    dend_31 { pt3dadd( 67.3133, -62.6304, -41.1908, 0.45 ) }
    dend_31 { pt3dadd( 74.117, -61.1044, -45.398, 0.45 ) }
    dend_31 { pt3dadd( 74.9403, -60.9452, -45.9127, 0.45 ) }
    dend_31 { pt3dadd( 77.4845, -60.607, -47.5841, 0.45 ) }
    dend_31 { pt3dadd( 79.2381, -60.461, -48.8067, 0.45 ) }
    dend_31 { pt3dadd( 80.0411, -60.4319, -49.3868, 0.45 ) }
    dend_31 { pt3dadd( 82.9193, -60.4064, -51.4356, 0.45 ) }
    dend_31 { pt3dadd( 85.2503, -60.362, -52.008, 0.45 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 16/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -131.251, -175.776, 156.45, 0.57 ) }
    dend_68 { pt3dadd( -132.524, -177.157, 156.68, 0.57 ) }
    dend_68 { pt3dadd( -136.174, -180.745, 157.081, 0.57 ) }
    dend_68 { pt3dadd( -139.254, -183.551, 157.273, 0.45 ) }
    dend_68 { pt3dadd( -142.158, -185.793, 157.642, 0.45 ) }
    dend_68 { pt3dadd( -144.453, -187.422, 157.982, 0.45 ) }
    dend_68 { pt3dadd( -146.527, -188.794, 158.362, 0.45 ) }
    dend_68 { pt3dadd( -148.92, -190.253, 158.791, 0.45 ) }
    dend_68 { pt3dadd( -151.528, -191.568, 159.254, 0.45 ) }
    dend_68 { pt3dadd( -158.638, -194.665, 160.658, 0.45 ) }
    dend_68 { pt3dadd( -159.985, -195.211, 160.986, 0.45 ) }
    dend_68 { pt3dadd( -162.454, -196.235, 161.753, 0.45 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 28/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -131.251, -175.776, 156.45, 0.57 ) }
    dend_67 { pt3dadd( -132.433, -181.229, 159.563, 0.57 ) }
    dend_67 { pt3dadd( -132.86, -183.082, 160.649, 0.57 ) }
    dend_67 { pt3dadd( -133.37, -185.419, 161.988, 0.57 ) }
    dend_67 { pt3dadd( -134.047, -188.585, 163.753, 0.57 ) }
    dend_67 { pt3dadd( -134.507, -190.737, 165.04, 0.57 ) }
    dend_67 { pt3dadd( -134.714, -191.823, 165.694, 0.57 ) }
    dend_67 { pt3dadd( -134.754, -192.016, 165.829, 2.04 ) }
    dend_67 { pt3dadd( -135.353, -194.822, 167.255, 0.57 ) }
    dend_67 { pt3dadd( -135.628, -195.826, 167.621, 0.57 ) }
    dend_67 { pt3dadd( -136.177, -197.332, 167.951, 1.92 ) }
    dend_67 { pt3dadd( -137.981, -201.05, 169.06, 0.68 ) }
    dend_67 { pt3dadd( -138.881, -202.66, 169.615, 0.68 ) }
    dend_67 { pt3dadd( -141.432, -206.887, 171.029, 0.57 ) }
    dend_67 { pt3dadd( -143.282, -209.628, 172.439, 0.57 ) }
    dend_67 { pt3dadd( -145.927, -213.429, 174.972, 0.57 ) }
    dend_67 { pt3dadd( -149.537, -219.048, 179.378, 0.57 ) }
    dend_67 { pt3dadd( -150.018, -219.878, 180.151, 0.57 ) }
    dend_67 { pt3dadd( -150.82, -221.647, 181.889, 0.45 ) }
    dend_67 { pt3dadd( -153.141, -228.369, 189.445, 0.45 ) }
    dend_67 { pt3dadd( -153.442, -229.468, 190.69, 0.45 ) }
    dend_67 { pt3dadd( -154.275, -232.857, 194.358, 0.45 ) }
    dend_67 { pt3dadd( -154.862, -235.548, 196.757, 0.45 ) }
    dend_67 { pt3dadd( -155.502, -237.715, 198.864, 0.45 ) }
    dend_67 { pt3dadd( -157.205, -242.022, 202.99, 0.45 ) }
    dend_67 { pt3dadd( -158.145, -243.779, 204.539, 0.45 ) }
    dend_67 { pt3dadd( -159.131, -245.226, 206.001, 0.45 ) }
    dend_67 { pt3dadd( -159.546, -245.716, 206.575, 0.45 ) }
    dend_67 { pt3dadd( -162.974, -249.254, 211.246, 0.11 ) }
    dend_67 { pt3dadd( -165.002, -251.16, 214.001, 0.23 ) }
    dend_67 { pt3dadd( -167.941, -254.053, 217.897, 0.23 ) }
    dend_67 { pt3dadd( -169.186, -255.251, 219.706, 0.23 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 60/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 72.9597, -113.676, 33.2309, 0.34 ) }
    dend_52 { pt3dadd( 74.2668, -116.369, 33.7026, 0.34 ) }
    dend_52 { pt3dadd( 75.8401, -119.612, 34.2705, 0.34 ) }
    dend_52 { pt3dadd( 77.3845, -122.794, 34.8279, 0.34 ) }
    dend_52 { pt3dadd( 78.4945, -125.082, 35.2286, 0.34 ) }
    dend_52 { pt3dadd( 79.0934, -126.316, 35.4447, 0.34 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 66/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 72.9597, -113.676, 33.2309, 0.45 ) }
    dend_51 { pt3dadd( 75.8472, -112.544, 32.855, 0.45 ) }
    dend_51 { pt3dadd( 78.0191, -111.683, 32.4645, 0.45 ) }
    dend_51 { pt3dadd( 81.3131, -110.413, 31.8521, 0.45 ) }
    dend_51 { pt3dadd( 83.589, -109.5, 31.4686, 0.45 ) }
    dend_51 { pt3dadd( 88.1296, -107.658, 30.7507, 0.45 ) }
    dend_51 { pt3dadd( 91.1846, -106.487, 30.3252, 0.45 ) }
    dend_51 { pt3dadd( 93.5265, -105.669, 30.0929, 0.45 ) }
    dend_51 { pt3dadd( 96.7195, -104.635, 29.76, 0.45 ) }
    dend_51 { pt3dadd( 100.419, -103.454, 29.2818, 0.45 ) }
    dend_51 { pt3dadd( 100.876, -103.302, 29.1978, 1.58 ) }
    dend_51 { pt3dadd( 104.305, -102.117, 28.5301, 0.34 ) }
    dend_51 { pt3dadd( 107.082, -101.218, 27.8306, 0.34 ) }
    dend_51 { pt3dadd( 111.741, -99.7447, 26.2837, 0.34 ) }
    dend_51 { pt3dadd( 114.367, -98.9577, 25.1903, 0.34 ) }
    dend_51 { pt3dadd( 117.113, -98.4976, 23.9318, 0.34 ) }
    dend_51 { pt3dadd( 118.856, -98.3533, 23.0313, 0.34 ) }
    dend_51 { pt3dadd( 120.811, -98.4228, 22.0279, 0.34 ) }
    dend_51 { pt3dadd( 123.809, -99.0274, 20.5694, 0.34 ) }
    dend_51 { pt3dadd( 126.1, -99.7897, 19.6801, 0.34 ) }
    dend_51 { pt3dadd( 132.369, -102.346, 17.647, 0.34 ) }
    dend_51 { pt3dadd( 135.697, -103.832, 16.5567, 0.34 ) }
    dend_51 { pt3dadd( 139.159, -105.459, 15.4041, 0.34 ) }
    dend_51 { pt3dadd( 144.464, -108.117, 13.722, 0.34 ) }
    dend_51 { pt3dadd( 147.644, -109.871, 12.7426, 0.34 ) }
    dend_51 { pt3dadd( 151.049, -111.842, 11.6577, 0.34 ) }
    dend_51 { pt3dadd( 154.405, -113.806, 10.7549, 0.34 ) }
    dend_51 { pt3dadd( 157.746, -115.703, 10.0669, 0.34 ) }
    dend_51 { pt3dadd( 159.295, -116.475, 9.85668, 0.34 ) }
    dend_51 { pt3dadd( 161.154, -117.339, 9.83965, 0.34 ) }
    dend_51 { pt3dadd( 163.296, -118.336, 9.96997, 0.34 ) }
    dend_51 { pt3dadd( 164.96, -119.072, 10.182, 0.34 ) }
    dend_51 { pt3dadd( 166.896, -119.862, 10.522, 0.34 ) }
    dend_51 { pt3dadd( 173.667, -122.485, 11.6953, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_51 { pt3dadd( 176.875, -123.629, 12.2352, 0.34 ) }
    dend_51 { pt3dadd( 180.108, -124.749, 12.7665, 0.34 ) }
    dend_51 { pt3dadd( 183.099, -125.8, 13.2405, 0.34 ) }
    dend_51 { pt3dadd( 188.064, -127.577, 13.9009, 0.34 ) }
    dend_51 { pt3dadd( 191.969, -128.962, 14.3837, 0.34 ) }
    dend_51 { pt3dadd( 194.426, -129.78, 14.6407, 0.34 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 6/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -74.1027, -109.577, 65.8453, 0.34 ) }
    dend_40 { pt3dadd( -75.0499, -109.944, 66.3992, 0.34 ) }
    dend_40 { pt3dadd( -77.0305, -110.922, 67.2545, 0.34 ) }
    dend_40 { pt3dadd( -77.8248, -111.369, 67.5038, 2.04 ) }
    dend_40 { pt3dadd( -78.6114, -111.841, 67.7125, 1.13 ) }
    dend_40 { pt3dadd( -79.8654, -112.694, 68.0416, 0.79 ) }
    dend_40 { pt3dadd( -80.7291, -113.327, 68.123, 0.57 ) }
    dend_40 { pt3dadd( -82.2676, -114.481, 68.054, 0.57 ) }
    dend_40 { pt3dadd( -85.5201, -116.931, 67.6063, 0.57 ) }
    dend_40 { pt3dadd( -87.0121, -117.976, 67.4895, 0.57 ) }
    dend_40 { pt3dadd( -89.3994, -119.546, 67.4225, 0.57 ) }
    dend_40 { pt3dadd( -93.718, -122.207, 67.4973, 0.57 ) }
    dend_40 { pt3dadd( -96.161, -123.561, 67.5717, 0.57 ) }
    dend_40 { pt3dadd( -97.3215, -124.138, 67.6236, 0.57 ) }
    dend_40 { pt3dadd( -102.096, -126.313, 67.9593, 0.57 ) }
    dend_40 { pt3dadd( -103.496, -126.917, 68.1025, 0.57 ) }
    dend_40 { pt3dadd( -104.791, -127.488, 68.3319, 0.57 ) }
    dend_40 { pt3dadd( -106.807, -128.471, 68.8428, 0.57 ) }
    dend_40 { pt3dadd( -108.838, -129.586, 69.4359, 0.57 ) }
    dend_40 { pt3dadd( -110.182, -130.393, 69.8759, 0.57 ) }
    dend_40 { pt3dadd( -111.805, -131.527, 70.4374, 0.57 ) }
    dend_40 { pt3dadd( -115.804, -134.491, 72.0248, 0.57 ) }
    dend_40 { pt3dadd( -117.882, -136.062, 72.9147, 0.57 ) }
    dend_40 { pt3dadd( -120.627, -138.182, 74.1439, 0.57 ) }
    dend_40 { pt3dadd( -122.766, -139.839, 75.1025, 0.57 ) }
    dend_40 { pt3dadd( -124.969, -141.489, 76.0455, 0.57 ) }
    dend_40 { pt3dadd( -126.463, -142.623, 76.6923, 0.57 ) }
    dend_40 { pt3dadd( -127.941, -143.745, 77.2664, 0.57 ) }
    dend_40 { pt3dadd( -129.777, -145.138, 77.9894, 0.57 ) }
    dend_40 { pt3dadd( -130.83, -145.926, 78.3344, 0.57 ) }
    dend_40 { pt3dadd( -132.027, -146.784, 78.7128, 0.57 ) }
    dend_40 { pt3dadd( -134.437, -148.454, 79.4974, 0.57 ) }
    dend_40 { pt3dadd( -136.713, -150.083, 80.1234, 0.57 ) }
    dend_40 { pt3dadd( -138.335, -151.265, 80.4768, 0.57 ) }
    dend_40 { pt3dadd( -140.367, -152.748, 80.8011, 0.57 ) }
    dend_40 { pt3dadd( -142.037, -154.0, 80.9714, 0.57 ) }
    dend_40 { pt3dadd( -143.17, -154.862, 81.0184, 0.57 ) }
    dend_40 { pt3dadd( -145.336, -156.496, 80.7383, 0.57 ) }
    dend_40 { pt3dadd( -146.973, -157.736, 80.3621, 0.57 ) }
    dend_40 { pt3dadd( -148.851, -159.134, 79.5877, 0.57 ) }
    dend_40 { pt3dadd( -150.465, -160.336, 78.5936, 0.57 ) }
    dend_40 { pt3dadd( -152.181, -161.585, 77.2974, 0.57 ) }
    dend_40 { pt3dadd( -154.913, -163.446, 74.8834, 0.57 ) }
    dend_40 { pt3dadd( -155.952, -164.103, 73.9706, 0.57 ) }
    dend_40 { pt3dadd( -159.599, -166.242, 70.8129, 0.57 ) }
    dend_40 { pt3dadd( -162.245, -167.714, 68.5225, 0.57 ) }
    dend_40 { pt3dadd( -163.122, -168.213, 67.8037, 0.57 ) }
    dend_40 { pt3dadd( -165.546, -169.713, 66.1112, 0.57 ) }
    dend_40 { pt3dadd( -168.249, -171.743, 65.1319, 0.57 ) }
    dend_40 { pt3dadd( -169.917, -173.249, 64.9999, 0.57 ) }
    dend_40 { pt3dadd( -170.5, -173.854, 65.1521, 0.57 ) }
    dend_40 { pt3dadd( -171.805, -175.282, 65.6698, 0.57 ) }
    dend_40 { pt3dadd( -172.556, -176.118, 65.9654, 0.57 ) }
    dend_40 { pt3dadd( -174.889, -178.955, 66.7694, 0.57 ) }
    dend_40 { pt3dadd( -176.397, -180.923, 66.9233, 0.57 ) }
    dend_40 { pt3dadd( -177.129, -181.919, 66.7901, 0.45 ) }
    dend_40 { pt3dadd( -177.786, -182.863, 66.5334, 0.45 ) }
    dend_40 { pt3dadd( -178.732, -184.433, 65.7999, 0.45 ) }
    dend_40 { pt3dadd( -179.728, -186.603, 64.3099, 0.45 ) }
    dend_40 { pt3dadd( -180.314, -188.362, 62.7785, 0.45 ) }
    dend_40 { pt3dadd( -181.04, -191.144, 60.1852, 0.45 ) }
    dend_40 { pt3dadd( -181.37, -192.61, 58.8077, 0.45 ) }
    dend_40 { pt3dadd( -181.778, -194.799, 56.9337, 0.45 ) }
    dend_40 { pt3dadd( -182.171, -197.258, 55.0855, 0.45 ) }
    dend_40 { pt3dadd( -182.551, -199.094, 53.9635, 0.45 ) }
    dend_40 { pt3dadd( -182.728, -199.822, 53.6373, 0.45 ) }
    dend_40 { pt3dadd( -183.125, -201.101, 53.2855, 0.45 ) }
    dend_40 { pt3dadd( -184.138, -203.665, 52.8059, 0.45 ) }
    dend_40 { pt3dadd( -184.965, -205.394, 52.6981, 0.45 ) }
    dend_40 { pt3dadd( -186.249, -207.68, 52.7529, 0.45 ) }
    dend_40 { pt3dadd( -187.54, -209.691, 53.0722, 0.45 ) }
    dend_40 { pt3dadd( -188.905, -211.6, 53.5602, 0.45 ) }
    dend_40 { pt3dadd( -189.855, -212.755, 54.0333, 0.45 ) }
    dend_40 { pt3dadd( -190.546, -213.488, 54.5226, 0.45 ) }
    dend_40 { pt3dadd( -191.285, -214.233, 55.2609, 0.45 ) }
    dend_40 { pt3dadd( -193.69, -216.868, 58.116, 0.45 ) }
    dend_40 { pt3dadd( -194.17, -217.417, 58.7099, 0.45 ) }
    dend_40 { pt3dadd( -194.941, -218.412, 59.987, 0.45 ) }
    dend_40 { pt3dadd( -196.242, -220.359, 62.4794, 0.45 ) }
    dend_40 { pt3dadd( -197.272, -222.205, 64.7341, 0.45 ) }
    dend_40 { pt3dadd( -198.394, -224.693, 67.4619, 0.45 ) }
    dend_40 { pt3dadd( -198.911, -226.072, 68.6892, 0.45 ) }
    dend_40 { pt3dadd( -201.555, -232.925, 73.981, 0.45 ) }
    dend_40 { pt3dadd( -202.263, -234.76, 75.1474, 0.45 ) }
    dend_40 { pt3dadd( -203.206, -237.216, 76.0638, 0.45 ) }
    dend_40 { pt3dadd( -204.549, -240.728, 76.6864, 0.45 ) }
    dend_40 { pt3dadd( -206.539, -246.121, 76.961, 0.45 ) }
    dend_40 { pt3dadd( -208.109, -250.604, 76.6909, 0.45 ) }
    dend_40 { pt3dadd( -209.474, -254.639, 75.9206, 0.45 ) }
    dend_40 { pt3dadd( -212.428, -263.899, 73.8106, 0.45 ) }
    dend_40 { pt3dadd( -212.84, -265.277, 73.4278, 0.45 ) }
    dend_40 { pt3dadd( -213.715, -268.709, 72.3665, 0.45 ) }
    dend_40 { pt3dadd( -214.125, -270.954, 71.45, 0.45 ) }
    dend_40 { pt3dadd( -214.515, -274.114, 70.0771, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_40 { pt3dadd( -214.758, -276.539, 69.041, 0.45 ) }
    dend_40 { pt3dadd( -214.933, -277.831, 68.6538, 0.45 ) }
    dend_40 { pt3dadd( -215.272, -279.645, 68.1117, 0.45 ) }
    dend_40 { pt3dadd( -216.938, -286.313, 66.4631, 0.45 ) }
    dend_40 { pt3dadd( -217.999, -289.818, 66.1886, 0.45 ) }
    dend_40 { pt3dadd( -218.48, -291.194, 66.3308, 0.45 ) }
    dend_40 { pt3dadd( -220.369, -296.042, 67.3428, 0.45 ) }
    dend_40 { pt3dadd( -221.346, -298.369, 68.0456, 0.45 ) }
    dend_40 { pt3dadd( -223.072, -301.947, 69.3527, 0.45 ) }
    dend_40 { pt3dadd( -225.223, -305.986, 71.4527, 0.45 ) }
    dend_40 { pt3dadd( -226.174, -307.787, 72.231, 0.45 ) }
    dend_40 { pt3dadd( -227.279, -310.355, 73.007, 0.45 ) }
    dend_40 { pt3dadd( -227.541, -311.527, 73.1437, 0.45 ) }
    dend_40 { pt3dadd( -227.755, -315.72, 72.9808, 0.45 ) }
    dend_40 { pt3dadd( -227.472, -320.674, 72.0714, 0.45 ) }
    dend_40 { pt3dadd( -226.251, -328.404, 69.7487, 0.45 ) }
    dend_40 { pt3dadd( -224.797, -333.553, 68.0202, 0.45 ) }
    dend_40 { pt3dadd( -223.518, -336.539, 66.9804, 0.45 ) }
    dend_40 { pt3dadd( -223.213, -337.086, 66.7691, 0.45 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 19/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -74.1027, -109.577, 65.8453, 0.34 ) }
    dend_39 { pt3dadd( -72.3599, -108.807, 67.1462, 0.34 ) }
    dend_39 { pt3dadd( -71.1108, -108.256, 68.0786, 0.34 ) }
    dend_39 { pt3dadd( -66.2709, -106.118, 71.6912, 0.34 ) }
    dend_39 { pt3dadd( -64.936, -105.529, 72.6875, 0.34 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 24/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -18.7036, -222.554, 75.4493, 0.57 ) }
    dend_37 { pt3dadd( -19.7078, -223.149, 76.1324, 0.57 ) }
    dend_37 { pt3dadd( -21.4203, -224.272, 76.8491, 0.57 ) }
    dend_37 { pt3dadd( -22.3648, -224.973, 77.1319, 0.57 ) }
    dend_37 { pt3dadd( -23.6666, -226.018, 77.2364, 0.57 ) }
    dend_37 { pt3dadd( -24.8955, -227.086, 77.248, 0.57 ) }
    dend_37 { pt3dadd( -27.0987, -229.05, 77.2115, 0.57 ) }
    dend_37 { pt3dadd( -28.3188, -230.19, 77.1033, 0.57 ) }
    dend_37 { pt3dadd( -29.7056, -231.518, 76.9085, 0.57 ) }
    dend_37 { pt3dadd( -32.2048, -233.926, 76.5739, 0.57 ) }
    dend_37 { pt3dadd( -35.008, -236.567, 76.2176, 0.57 ) }
    dend_37 { pt3dadd( -36.8808, -238.321, 76.0828, 0.57 ) }
    dend_37 { pt3dadd( -37.5279, -238.918, 76.0868, 2.15 ) }
    dend_37 { pt3dadd( -38.1089, -239.435, 76.1282, 1.36 ) }
    dend_37 { pt3dadd( -39.3159, -240.464, 76.3909, 0.68 ) }
    dend_37 { pt3dadd( -39.9567, -240.994, 76.6799, 0.68 ) }
    dend_37 { pt3dadd( -40.6852, -241.569, 77.1395, 0.57 ) }
    dend_37 { pt3dadd( -41.084, -241.883, 77.4644, 0.57 ) }
    dend_37 { pt3dadd( -42.1171, -242.712, 78.3871, 0.57 ) }
    dend_37 { pt3dadd( -43.2592, -243.61, 79.4438, 0.57 ) }
    dend_37 { pt3dadd( -44.0149, -244.213, 80.1388, 0.57 ) }
    dend_37 { pt3dadd( -44.9637, -245.011, 80.9007, 0.57 ) }
    dend_37 { pt3dadd( -45.9134, -245.806, 81.4577, 0.57 ) }
    dend_37 { pt3dadd( -46.2951, -246.134, 81.6254, 0.57 ) }
    dend_37 { pt3dadd( -46.8766, -246.651, 81.7922, 0.57 ) }
    dend_37 { pt3dadd( -47.676, -247.369, 81.9471, 0.57 ) }
    dend_37 { pt3dadd( -50.0538, -249.481, 82.3226, 0.57 ) }
    dend_37 { pt3dadd( -51.57, -250.817, 82.4541, 0.57 ) }
    dend_37 { pt3dadd( -52.856, -251.949, 82.5271, 0.57 ) }
    dend_37 { pt3dadd( -54.4746, -253.317, 82.6088, 0.57 ) }
    dend_37 { pt3dadd( -56.5639, -255.035, 82.7805, 0.57 ) }
    dend_37 { pt3dadd( -59.2778, -257.107, 83.093, 0.57 ) }
    dend_37 { pt3dadd( -60.4017, -257.9, 83.211, 1.7 ) }
    dend_37 { pt3dadd( -61.4183, -258.587, 83.3176, 1.7 ) }
    dend_37 { pt3dadd( -62.427, -259.225, 83.3586, 0.68 ) }
    dend_37 { pt3dadd( -64.2872, -260.316, 83.367, 0.68 ) }
    dend_37 { pt3dadd( -65.4504, -261.004, 83.3324, 0.68 ) }
    dend_37 { pt3dadd( -67.2765, -262.133, 83.2737, 0.68 ) }
    dend_37 { pt3dadd( -67.7778, -262.468, 83.2466, 1.7 ) }
    dend_37 { pt3dadd( -68.5749, -263.077, 83.1583, 1.7 ) }
    dend_37 { pt3dadd( -69.1048, -263.538, 83.0771, 1.7 ) }
    dend_37 { pt3dadd( -69.7194, -264.151, 82.9635, 0.68 ) }
    dend_37 { pt3dadd( -71.1436, -265.762, 82.7268, 0.68 ) }
    dend_37 { pt3dadd( -72.5003, -267.421, 82.5647, 0.68 ) }
    dend_37 { pt3dadd( -73.5633, -268.823, 82.508, 0.68 ) }
    dend_37 { pt3dadd( -74.0494, -269.519, 82.5099, 0.68 ) }
    dend_37 { pt3dadd( -75.138, -271.2, 82.5835, 0.68 ) }
    dend_37 { pt3dadd( -76.114, -272.8, 82.7309, 0.68 ) }
    dend_37 { pt3dadd( -76.5689, -273.618, 82.8642, 0.68 ) }
    dend_37 { pt3dadd( -77.6064, -275.605, 83.3464, 0.68 ) }
    dend_37 { pt3dadd( -77.8968, -276.19, 83.5056, 0.68 ) }
    dend_37 { pt3dadd( -78.2391, -276.903, 83.7111, 1.02 ) }
    dend_37 { pt3dadd( -78.5832, -277.643, 83.9169, 0.45 ) }
    dend_37 { pt3dadd( -79.0644, -278.809, 84.1801, 0.45 ) }
    dend_37 { pt3dadd( -79.2024, -279.166, 84.228, 0.45 ) }
    dend_37 { pt3dadd( -79.6168, -280.241, 84.3169, 0.45 ) }
    dend_37 { pt3dadd( -80.1071, -281.51, 84.4303, 0.45 ) }
    dend_37 { pt3dadd( -80.6518, -282.961, 84.5592, 0.45 ) }
    dend_37 { pt3dadd( -81.2647, -284.637, 84.7016, 0.45 ) }
    dend_37 { pt3dadd( -81.7985, -286.146, 84.8465, 0.45 ) }
    dend_37 { pt3dadd( -82.6386, -288.496, 85.0755, 0.45 ) }
    dend_37 { pt3dadd( -82.8798, -289.215, 85.1444, 0.45 ) }
    dend_37 { pt3dadd( -83.1548, -290.107, 85.2271, 1.47 ) }
    dend_37 { pt3dadd( -83.2476, -290.415, 85.2559, 1.47 ) }
    dend_37 { pt3dadd( -83.7129, -291.903, 85.3352, 0.68 ) }
    dend_37 { pt3dadd( -84.2722, -293.685, 85.3886, 0.57 ) }
    dend_37 { pt3dadd( -84.7536, -295.293, 85.4585, 0.57 ) }
    dend_37 { pt3dadd( -85.2064, -296.802, 85.6081, 0.57 ) }
    dend_37 { pt3dadd( -85.3378, -297.231, 85.6678, 0.57 ) }
    dend_37 { pt3dadd( -85.7341, -298.558, 85.9614, 0.57 ) }
    dend_37 { pt3dadd( -86.1448, -300.031, 86.5146, 0.57 ) }
    dend_37 { pt3dadd( -86.4296, -301.315, 87.1366, 1.7 ) }
    dend_37 { pt3dadd( -86.813, -303.368, 88.2072, 0.68 ) }
    dend_37 { pt3dadd( -86.9616, -304.398, 88.7582, 0.68 ) }
    dend_37 { pt3dadd( -87.189, -306.315, 89.7566, 0.68 ) }
    dend_37 { pt3dadd( -87.5229, -309.125, 91.1209, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_37 { pt3dadd( -87.8115, -311.071, 91.9268, 0.68 ) }
    dend_37 { pt3dadd( -87.954, -311.806, 92.1732, 2.15 ) }
    dend_37 { pt3dadd( -88.0592, -312.256, 92.2928, 2.15 ) }
    dend_37 { pt3dadd( -88.4802, -313.755, 92.5448, 0.68 ) }
    dend_37 { pt3dadd( -89.0715, -315.469, 92.7321, 0.68 ) }
    dend_37 { pt3dadd( -89.4865, -316.564, 92.8572, 0.68 ) }
    dend_37 { pt3dadd( -90.0915, -318.05, 93.1207, 0.68 ) }
    dend_37 { pt3dadd( -90.7332, -319.638, 93.3952, 0.68 ) }
    dend_37 { pt3dadd( -91.327, -321.199, 93.65, 0.68 ) }
    dend_37 { pt3dadd( -92.1495, -323.646, 94.0165, 0.68 ) }
    dend_37 { pt3dadd( -92.6056, -325.259, 94.2304, 0.68 ) }
    dend_37 { pt3dadd( -92.9271, -326.493, 94.344, 0.68 ) }
    dend_37 { pt3dadd( -93.3815, -328.361, 94.4219, 0.68 ) }
    dend_37 { pt3dadd( -93.55, -329.108, 94.416, 0.68 ) }
    dend_37 { pt3dadd( -93.9441, -331.012, 94.3023, 0.68 ) }
    dend_37 { pt3dadd( -94.1806, -332.234, 94.1472, 0.68 ) }
    dend_37 { pt3dadd( -94.4829, -333.766, 93.9425, 0.68 ) }
    dend_37 { pt3dadd( -94.7992, -335.234, 93.8093, 0.68 ) }
    dend_37 { pt3dadd( -95.0935, -336.416, 93.7795, 0.68 ) }
    dend_37 { pt3dadd( -95.3106, -337.17, 93.7663, 0.68 ) }
    dend_37 { pt3dadd( -95.5737, -337.995, 93.8076, 0.68 ) }
    dend_37 { pt3dadd( -95.672, -338.295, 93.843, 0.68 ) }
    dend_37 { pt3dadd( -96.1354, -339.691, 94.0798, 0.68 ) }
    dend_37 { pt3dadd( -96.6455, -341.302, 94.4178, 0.68 ) }
    dend_37 { pt3dadd( -96.9777, -342.474, 94.6802, 0.68 ) }
    dend_37 { pt3dadd( -97.4027, -344.116, 95.041, 0.68 ) }
    dend_37 { pt3dadd( -97.7601, -345.691, 95.4178, 0.68 ) }
    dend_37 { pt3dadd( -97.8396, -346.114, 95.5452, 0.68 ) }
    dend_37 { pt3dadd( -98.0059, -347.171, 95.8969, 0.57 ) }
    dend_37 { pt3dadd( -98.1478, -348.123, 96.2142, 0.57 ) }
    dend_37 { pt3dadd( -98.4055, -349.897, 96.8052, 0.57 ) }
    dend_37 { pt3dadd( -98.604, -351.562, 97.4135, 0.57 ) }
    dend_37 { pt3dadd( -98.8238, -353.386, 98.1773, 0.57 ) }
    dend_37 { pt3dadd( -99.0537, -355.213, 98.9533, 0.57 ) }
    dend_37 { pt3dadd( -99.3077, -356.885, 99.592, 0.57 ) }
    dend_37 { pt3dadd( -99.5052, -358.056, 99.9482, 1.47 ) }
    dend_37 { pt3dadd( -99.9383, -360.431, 100.519, 0.45 ) }
    dend_37 { pt3dadd( -100.182, -361.583, 100.699, 0.45 ) }
    dend_37 { pt3dadd( -100.694, -364.014, 100.899, 0.45 ) }
    dend_37 { pt3dadd( -101.044, -366.016, 101.056, 0.45 ) }
    dend_37 { pt3dadd( -101.378, -368.338, 101.189, 0.45 ) }
    dend_37 { pt3dadd( -101.423, -370.234, 101.273, 0.45 ) }
    dend_37 { pt3dadd( -102.074, -369.634, 100.419, 0.45 ) }
    dend_37 { pt3dadd( -103.133, -367.836, 99.0837, 0.45 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 44/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -18.7036, -222.554, 75.4493, 0.57 ) }
    dend_34 { pt3dadd( -19.1731, -223.467, 75.5621, 0.57 ) }
    dend_34 { pt3dadd( -19.486, -224.075, 75.6361, 0.57 ) }
    dend_34 { pt3dadd( -19.9118, -224.93, 75.7349, 0.57 ) }
    dend_34 { pt3dadd( -20.5552, -226.222, 75.8841, 0.57 ) }
    dend_34 { pt3dadd( -21.3239, -227.765, 76.0625, 0.57 ) }
    dend_34 { pt3dadd( -21.8005, -228.722, 76.173, 2.15 ) }
    dend_34 { pt3dadd( -22.2331, -229.562, 76.2643, 2.72 ) }
    dend_34 { pt3dadd( -22.5552, -230.221, 76.3443, 2.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 53/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 79.0934, -126.316, 35.4447, 0.45 ) }
    dend_54 { pt3dadd( 83.9566, -128.107, 34.0136, 0.45 ) }
    dend_54 { pt3dadd( 85.148, -128.494, 33.761, 0.45 ) }
    dend_54 { pt3dadd( 87.3947, -129.051, 33.341, 0.45 ) }
    dend_54 { pt3dadd( 90.3863, -129.72, 32.8154, 0.45 ) }
    dend_54 { pt3dadd( 93.1237, -130.336, 32.3524, 0.45 ) }
    dend_54 { pt3dadd( 96.7124, -131.077, 31.7169, 0.45 ) }
    dend_54 { pt3dadd( 97.9925, -131.272, 31.5465, 0.45 ) }
    dend_54 { pt3dadd( 101.609, -131.686, 30.8968, 0.45 ) }
    dend_54 { pt3dadd( 104.417, -131.878, 30.2468, 0.45 ) }
    dend_54 { pt3dadd( 106.62, -131.906, 29.5842, 0.45 ) }
    dend_54 { pt3dadd( 109.641, -131.753, 28.2644, 0.45 ) }
    dend_54 { pt3dadd( 111.583, -131.537, 27.161, 0.45 ) }
    dend_54 { pt3dadd( 113.678, -131.222, 25.8256, 0.45 ) }
    dend_54 { pt3dadd( 115.758, -130.897, 24.237, 0.45 ) }
    dend_54 { pt3dadd( 117.999, -130.513, 22.2005, 0.45 ) }
    dend_54 { pt3dadd( 121.108, -129.905, 19.1387, 0.45 ) }
    dend_54 { pt3dadd( 122.345, -129.677, 17.8144, 0.45 ) }
    dend_54 { pt3dadd( 123.631, -129.469, 16.3513, 0.45 ) }
    dend_54 { pt3dadd( 126.715, -129.131, 12.7197, 0.45 ) }
    dend_54 { pt3dadd( 127.971, -129.126, 11.07, 0.45 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 74/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 79.0934, -126.316, 35.4447, 0.34 ) }
    dend_53 { pt3dadd( 78.6917, -128.366, 35.3291, 0.34 ) }
    dend_53 { pt3dadd( 78.4804, -129.154, 35.261, 0.34 ) }
    dend_53 { pt3dadd( 78.075, -130.468, 35.1362, 0.34 ) }
    dend_53 { pt3dadd( 77.2992, -132.864, 34.8979, 0.34 ) }
    dend_53 { pt3dadd( 76.494, -135.04, 34.5882, 0.34 ) }
    dend_53 { pt3dadd( 75.5676, -137.278, 34.2531, 0.34 ) }
    dend_53 { pt3dadd( 74.3487, -139.496, 33.9204, 0.34 ) }
    dend_53 { pt3dadd( 74.1596, -139.774, 33.8789, 0.34 ) }
    dend_53 { pt3dadd( 74.031, -139.923, 33.8509, 1.58 ) }
    dend_53 { pt3dadd( 72.3665, -141.518, 33.6066, 0.45 ) }
    dend_53 { pt3dadd( 71.5864, -142.227, 33.4597, 0.45 ) }
    dend_53 { pt3dadd( 69.6076, -144.042, 32.9851, 0.45 ) }
    dend_53 { pt3dadd( 68.9498, -144.688, 32.8103, 0.45 ) }
    dend_53 { pt3dadd( 67.3092, -146.462, 32.328, 0.45 ) }
    dend_53 { pt3dadd( 66.7604, -147.112, 32.1733, 0.45 ) }
    dend_53 { pt3dadd( 65.3677, -148.998, 31.8065, 0.45 ) }
    dend_53 { pt3dadd( 64.7589, -149.934, 31.5948, 0.45 ) }
    dend_53 { pt3dadd( 63.7179, -151.808, 31.2268, 0.45 ) }
    dend_53 { pt3dadd( 63.0924, -153.004, 31.0277, 0.45 ) }
    dend_53 { pt3dadd( 62.3063, -154.601, 30.8494, 0.45 ) }
    dend_53 { pt3dadd( 61.1448, -157.044, 30.5494, 0.45 ) }
    dend_53 { pt3dadd( 60.3292, -158.778, 30.3821, 0.45 ) }
    dend_53 { pt3dadd( 59.3049, -161.017, 30.1741, 0.45 ) }
    dend_53 { pt3dadd( 58.4561, -162.827, 30.058, 0.45 ) }
    dend_53 { pt3dadd( 57.7187, -164.399, 29.9441, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_53 { pt3dadd( 56.8532, -166.203, 29.8027, 0.45 ) }
    dend_53 { pt3dadd( 56.0318, -167.828, 29.7178, 0.45 ) }
    dend_53 { pt3dadd( 55.4797, -168.797, 29.7074, 0.45 ) }
    dend_53 { pt3dadd( 54.5099, -170.34, 29.5785, 0.45 ) }
    dend_53 { pt3dadd( 54.1505, -170.896, 29.526, 0.45 ) }
    dend_53 { pt3dadd( 53.1021, -172.448, 29.361, 0.45 ) }
    dend_53 { pt3dadd( 52.4733, -173.358, 29.2837, 0.45 ) }
    dend_53 { pt3dadd( 51.5746, -174.657, 29.1447, 0.45 ) }
    dend_53 { pt3dadd( 49.8937, -177.134, 28.6506, 0.45 ) }
    dend_53 { pt3dadd( 48.9308, -178.634, 28.2692, 0.45 ) }
    dend_53 { pt3dadd( 48.4006, -179.51, 28.0363, 0.45 ) }
    dend_53 { pt3dadd( 47.9977, -180.273, 27.8488, 0.45 ) }
    dend_53 { pt3dadd( 47.6905, -180.911, 27.6754, 0.45 ) }
    dend_53 { pt3dadd( 46.4505, -183.627, 26.9847, 0.45 ) }
    dend_53 { pt3dadd( 45.8797, -184.884, 26.7148, 0.45 ) }
    dend_53 { pt3dadd( 45.5465, -185.637, 26.5315, 0.45 ) }
    dend_53 { pt3dadd( 44.9726, -186.967, 26.2284, 0.45 ) }
    dend_53 { pt3dadd( 44.0321, -189.142, 25.4974, 0.45 ) }
    dend_53 { pt3dadd( 43.5918, -190.169, 25.1269, 0.45 ) }
    dend_53 { pt3dadd( 43.2798, -190.916, 24.8877, 0.45 ) }
    dend_53 { pt3dadd( 42.9227, -191.763, 24.622, 0.45 ) }
    dend_53 { pt3dadd( 42.1953, -193.477, 24.0707, 0.45 ) }
    dend_53 { pt3dadd( 40.5994, -197.492, 23.2546, 0.45 ) }
    dend_53 { pt3dadd( 40.0244, -199.097, 23.2721, 0.45 ) }
    dend_53 { pt3dadd( 39.4551, -200.801, 23.5959, 0.45 ) }
    dend_53 { pt3dadd( 38.8261, -202.598, 24.4091, 0.45 ) }
    dend_53 { pt3dadd( 38.5389, -203.328, 24.9365, 0.45 ) }
    dend_53 { pt3dadd( 36.6965, -207.362, 29.0548, 0.45 ) }
    dend_53 { pt3dadd( 36.1196, -208.459, 30.4556, 0.45 ) }
    dend_53 { pt3dadd( 36.0051, -208.644, 30.7126, 0.45 ) }
    dend_53 { pt3dadd( 35.2355, -209.715, 32.1882, 0.45 ) }
    dend_53 { pt3dadd( 34.5865, -210.569, 33.2273, 0.45 ) }
    dend_53 { pt3dadd( 33.7837, -211.601, 34.1204, 0.45 ) }
    dend_53 { pt3dadd( 33.6021, -211.833, 34.217, 0.45 ) }
    dend_53 { pt3dadd( 33.0102, -212.637, 34.3984, 0.45 ) }
    dend_53 { pt3dadd( 32.0953, -213.984, 34.5517, 0.45 ) }
    dend_53 { pt3dadd( 31.4243, -215.059, 34.5826, 0.45 ) }
    dend_53 { pt3dadd( 30.4519, -216.713, 34.5728, 0.45 ) }
    dend_53 { pt3dadd( 29.4623, -218.497, 34.5345, 0.45 ) }
    dend_53 { pt3dadd( 27.9081, -221.617, 34.5448, 0.45 ) }
    dend_53 { pt3dadd( 27.4746, -222.559, 34.5652, 0.45 ) }
    dend_53 { pt3dadd( 27.0553, -223.508, 34.594, 0.45 ) }
    dend_53 { pt3dadd( 26.5825, -224.61, 34.6527, 0.45 ) }
    dend_53 { pt3dadd( 26.106, -225.83, 34.7991, 0.45 ) }
    dend_53 { pt3dadd( 25.2796, -228.363, 35.2172, 0.45 ) }
    dend_53 { pt3dadd( 25.1327, -228.99, 35.4184, 0.45 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 46/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -22.5552, -230.221, 76.3443, 0.45 ) }
    dend_36 { pt3dadd( -24.059, -232.249, 76.2607, 0.45 ) }
    dend_36 { pt3dadd( -25.2328, -233.875, 76.2127, 0.45 ) }
    dend_36 { pt3dadd( -26.3076, -235.379, 76.1769, 0.45 ) }
    dend_36 { pt3dadd( -27.8952, -237.73, 76.148, 0.45 ) }
    dend_36 { pt3dadd( -28.8381, -239.096, 76.1492, 0.45 ) }
    dend_36 { pt3dadd( -30.2776, -241.17, 76.2308, 0.45 ) }
    dend_36 { pt3dadd( -31.7313, -243.397, 76.4161, 0.45 ) }
    dend_36 { pt3dadd( -32.1151, -243.98, 76.4768, 1.47 ) }
    dend_36 { pt3dadd( -33.549, -246.058, 76.7784, 0.45 ) }
    dend_36 { pt3dadd( -34.4599, -247.382, 77.0204, 0.45 ) }
    dend_36 { pt3dadd( -35.3559, -248.734, 77.3807, 0.45 ) }
    dend_36 { pt3dadd( -35.9694, -249.746, 77.7073, 0.45 ) }
    dend_36 { pt3dadd( -37.1876, -251.98, 78.5315, 0.45 ) }
    dend_36 { pt3dadd( -38.0143, -253.584, 79.1446, 0.79 ) }
    dend_36 { pt3dadd( -38.751, -255.119, 79.7331, 0.79 ) }
    dend_36 { pt3dadd( -40.0252, -258.059, 80.8935, 0.45 ) }
    dend_36 { pt3dadd( -40.9683, -260.295, 81.7653, 0.45 ) }
    dend_36 { pt3dadd( -42.064, -263.124, 82.8963, 0.45 ) }
    dend_36 { pt3dadd( -42.3939, -264.077, 83.3376, 0.45 ) }
    dend_36 { pt3dadd( -42.6917, -264.996, 83.7814, 1.92 ) }
    dend_36 { pt3dadd( -43.1908, -266.696, 84.7801, 1.47 ) }
    dend_36 { pt3dadd( -43.5658, -268.159, 85.7031, 0.57 ) }
    dend_36 { pt3dadd( -43.8735, -269.556, 86.6461, 0.57 ) }
    dend_36 { pt3dadd( -44.3156, -271.926, 88.442, 0.57 ) }
    dend_36 { pt3dadd( -44.6068, -273.778, 89.8355, 0.57 ) }
    dend_36 { pt3dadd( -45.25, -277.841, 92.7663, 0.57 ) }
    dend_36 { pt3dadd( -45.3851, -278.731, 93.3387, 0.57 ) }
    dend_36 { pt3dadd( -45.6929, -280.565, 94.3482, 0.57 ) }
    dend_36 { pt3dadd( -46.3471, -283.819, 95.6722, 0.57 ) }
    dend_36 { pt3dadd( -46.7572, -285.668, 96.1305, 0.57 ) }
    dend_36 { pt3dadd( -47.1761, -287.461, 96.2365, 0.57 ) }
    dend_36 { pt3dadd( -47.7491, -289.764, 96.1861, 0.57 ) }
    dend_36 { pt3dadd( -48.5923, -292.991, 96.2595, 0.57 ) }
    dend_36 { pt3dadd( -49.52, -296.333, 96.4389, 0.57 ) }
    dend_36 { pt3dadd( -50.3601, -299.337, 96.5948, 0.57 ) }
    dend_36 { pt3dadd( -51.7834, -304.324, 96.9649, 0.57 ) }
    dend_36 { pt3dadd( -52.9775, -308.029, 97.134, 0.57 ) }
    dend_36 { pt3dadd( -54.2524, -311.417, 97.2061, 0.23 ) }
    dend_36 { pt3dadd( -55.053, -313.356, 97.2682, 0.23 ) }
    dend_36 { pt3dadd( -55.9959, -315.419, 97.3586, 0.23 ) }
    dend_36 { pt3dadd( -57.233, -317.992, 97.4628, 0.23 ) }
    dend_36 { pt3dadd( -58.9471, -321.373, 97.6054, 0.23 ) }
    dend_36 { pt3dadd( -59.6791, -322.668, 97.3812, 0.23 ) }
    dend_36 { pt3dadd( -60.735, -324.313, 96.9632, 1.7 ) }
    dend_36 { pt3dadd( -62.0517, -326.084, 96.618, 0.68 ) }
    dend_36 { pt3dadd( -63.3762, -327.582, 96.4371, 0.45 ) }
    dend_36 { pt3dadd( -64.1696, -328.354, 96.4899, 0.45 ) }
    dend_36 { pt3dadd( -67.6502, -330.99, 97.4481, 0.45 ) }
    dend_36 { pt3dadd( -70.4844, -332.552, 98.3697, 0.45 ) }
    dend_36 { pt3dadd( -72.4878, -333.4, 99.0389, 0.45 ) }
    dend_36 { pt3dadd( -73.8141, -333.888, 99.5817, 0.45 ) }
    dend_36 { pt3dadd( -75.1178, -334.415, 100.075, 0.45 ) }
    dend_36 { pt3dadd( -77.2668, -335.685, 100.816, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_36 { pt3dadd( -77.5578, -335.917, 100.907, 0.45 ) }
    dend_36 { pt3dadd( -78.2221, -336.551, 100.973, 1.92 ) }
    dend_36 { pt3dadd( -79.8045, -338.348, 100.982, 0.57 ) }
    dend_36 { pt3dadd( -81.5557, -340.645, 100.941, 0.57 ) }
    dend_36 { pt3dadd( -83.055, -342.859, 100.725, 0.45 ) }
    dend_36 { pt3dadd( -83.8261, -344.114, 100.566, 0.45 ) }
    dend_36 { pt3dadd( -85.3521, -346.628, 100.266, 0.45 ) }
    dend_36 { pt3dadd( -86.4432, -348.498, 100.079, 0.57 ) }
    dend_36 { pt3dadd( -87.0792, -349.629, 99.9696, 0.57 ) }
    dend_36 { pt3dadd( -88.6114, -352.441, 99.7346, 0.57 ) }
    dend_36 { pt3dadd( -90.7007, -356.182, 99.3551, 0.57 ) }
    dend_36 { pt3dadd( -91.6384, -357.88, 99.1729, 0.57 ) }
    dend_36 { pt3dadd( -93.6996, -361.65, 98.7582, 0.57 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 13/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -22.5552, -230.221, 76.3443, 0.45 ) }
    dend_35 { pt3dadd( -21.8809, -232.565, 76.8668, 0.45 ) }
    dend_35 { pt3dadd( -21.5668, -233.585, 77.0873, 0.45 ) }
    dend_35 { pt3dadd( -20.5287, -237.112, 78.1346, 0.45 ) }
    dend_35 { pt3dadd( -19.6344, -240.427, 79.2319, 0.45 ) }
    dend_35 { pt3dadd( -18.9363, -243.144, 80.0709, 0.45 ) }
    dend_35 { pt3dadd( -18.9086, -243.244, 80.0983, 1.81 ) }
    dend_35 { pt3dadd( -18.5355, -244.535, 80.4269, 1.7 ) }
    dend_35 { pt3dadd( -17.6085, -247.838, 81.241, 0.68 ) }
    dend_35 { pt3dadd( -17.0352, -249.725, 81.6746, 0.68 ) }
    dend_35 { pt3dadd( -16.2669, -252.117, 82.3172, 0.68 ) }
    dend_35 { pt3dadd( -15.3017, -254.963, 83.1118, 0.68 ) }
    dend_35 { pt3dadd( -14.6584, -256.653, 83.5519, 0.68 ) }
    dend_35 { pt3dadd( -13.6773, -258.916, 84.1017, 0.68 ) }
    dend_35 { pt3dadd( -12.5673, -261.142, 84.5971, 0.68 ) }
    dend_35 { pt3dadd( -11.1776, -263.716, 85.236, 0.68 ) }
    dend_35 { pt3dadd( -9.6163, -266.444, 85.9783, 0.68 ) }
    dend_35 { pt3dadd( -7.6673, -269.704, 86.8317, 0.68 ) }
    dend_35 { pt3dadd( -6.35817, -271.818, 87.1808, 0.68 ) }
    dend_35 { pt3dadd( -4.96719, -274.013, 87.3614, 0.68 ) }
    dend_35 { pt3dadd( -3.98448, -275.568, 87.3729, 0.68 ) }
    dend_35 { pt3dadd( -2.80624, -277.53, 87.254, 0.68 ) }
    dend_35 { pt3dadd( -0.565433, -281.451, 86.9069, 0.68 ) }
    dend_35 { pt3dadd( 1.64943, -285.48, 86.5384, 0.57 ) }
    dend_35 { pt3dadd( 2.54977, -287.17, 86.3933, 0.57 ) }
    dend_35 { pt3dadd( 3.72964, -289.436, 86.2269, 0.57 ) }
    dend_35 { pt3dadd( 5.16357, -292.112, 85.9921, 0.57 ) }
    dend_35 { pt3dadd( 6.80449, -295.104, 85.7326, 0.57 ) }
    dend_35 { pt3dadd( 8.74239, -298.566, 85.5066, 0.57 ) }
    dend_35 { pt3dadd( 9.85862, -300.447, 85.5115, 0.57 ) }
    dend_35 { pt3dadd( 10.7179, -301.854, 85.5185, 0.57 ) }
    dend_35 { pt3dadd( 12.6449, -304.947, 85.7316, 0.57 ) }
    dend_35 { pt3dadd( 13.1295, -305.673, 85.821, 0.57 ) }
    dend_35 { pt3dadd( 14.1199, -307.146, 86.0964, 0.57 ) }
    dend_35 { pt3dadd( 15.5288, -309.358, 86.8249, 0.57 ) }
    dend_35 { pt3dadd( 15.9395, -310.004, 87.0843, 2.6 ) }
    dend_35 { pt3dadd( 17.3435, -312.266, 88.088, 2.04 ) }
    dend_35 { pt3dadd( 19.2155, -315.278, 89.207, 0.57 ) }
    dend_35 { pt3dadd( 20.0409, -316.54, 89.5148, 0.57 ) }
    dend_35 { pt3dadd( 21.6859, -319.282, 90.5595, 0.57 ) }
    dend_35 { pt3dadd( 22.7844, -321.267, 91.4415, 0.57 ) }
    dend_35 { pt3dadd( 24.0162, -323.625, 92.6733, 0.57 ) }
    dend_35 { pt3dadd( 25.8641, -327.374, 94.7421, 0.57 ) }
    dend_35 { pt3dadd( 27.184, -330.378, 96.5371, 0.57 ) }
    dend_35 { pt3dadd( 30.8626, -338.833, 100.968, 0.57 ) }
    dend_35 { pt3dadd( 32.9452, -343.781, 103.164, 0.57 ) }
    dend_35 { pt3dadd( 34.0685, -346.626, 104.338, 0.57 ) }
    dend_35 { pt3dadd( 35.0189, -349.087, 105.201, 0.57 ) }
    dend_35 { pt3dadd( 35.5695, -350.581, 105.62, 0.57 ) }
    dend_35 { pt3dadd( 38.0881, -357.093, 106.071, 0.57 ) }
    dend_35 { pt3dadd( 39.3662, -359.933, 105.618, 0.57 ) }
    dend_35 { pt3dadd( 39.9283, -361.177, 105.343, 0.57 ) }
    dend_35 { pt3dadd( 40.9458, -363.384, 104.807, 0.45 ) }
    dend_35 { pt3dadd( 41.4321, -364.417, 104.611, 0.45 ) }
    dend_35 { pt3dadd( 42.4245, -366.467, 104.533, 0.45 ) }
    dend_35 { pt3dadd( 43.3793, -368.599, 104.923, 0.45 ) }
    dend_35 { pt3dadd( 43.8358, -369.591, 105.146, 0.45 ) }
    dend_35 { pt3dadd( 44.3399, -370.714, 105.424, 0.45 ) }
    dend_35 { pt3dadd( 44.7939, -371.755, 105.679, 0.45 ) }
    dend_35 { pt3dadd( 45.8951, -374.252, 106.258, 0.45 ) }
    dend_35 { pt3dadd( 46.6336, -375.999, 106.68, 0.45 ) }
    dend_35 { pt3dadd( 47.4932, -378.123, 107.178, 0.45 ) }
    dend_35 { pt3dadd( 48.5963, -380.76, 107.782, 0.45 ) }
    dend_35 { pt3dadd( 49.531, -383.021, 108.255, 0.45 ) }
    dend_35 { pt3dadd( 49.8686, -383.89, 108.425, 0.45 ) }
    dend_35 { pt3dadd( 50.7352, -386.153, 108.813, 0.45 ) }
    dend_35 { pt3dadd( 52.1957, -390.026, 109.492, 0.45 ) }
    dend_35 { pt3dadd( 53.3528, -393.142, 110.052, 0.45 ) }
    dend_35 { pt3dadd( 54.52, -396.396, 110.663, 0.45 ) }
    dend_35 { pt3dadd( 55.539, -399.33, 111.261, 0.45 ) }
    // Section: dend_62, id: dend_62, parent: dend_54 (entry count 83/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 127.971, -129.126, 11.07, 0.45 ) }
    dend_62 { pt3dadd( 127.898, -130.315, 9.5953, 0.45 ) }
    dend_62 { pt3dadd( 127.894, -131.37, 8.49227, 0.45 ) }
    dend_62 { pt3dadd( 127.97, -132.608, 7.33479, 0.45 ) }
    dend_62 { pt3dadd( 127.999, -133.734, 6.30253, 0.45 ) }
    dend_62 { pt3dadd( 127.816, -138.958, 1.55109, 0.45 ) }
    dend_62 { pt3dadd( 127.602, -142.196, -1.34678, 0.45 ) }
    dend_62 { pt3dadd( 127.311, -144.179, -3.24838, 0.45 ) }
    dend_62 { pt3dadd( 127.136, -145.015, -4.04441, 0.45 ) }
    dend_62 { pt3dadd( 126.477, -147.857, -6.56337, 0.45 ) }
    dend_62 { pt3dadd( 126.053, -149.818, -8.1424, 0.45 ) }
    dend_62 { pt3dadd( 126.003, -150.121, -8.32452, 0.45 ) }
    dend_62 { pt3dadd( 125.682, -152.641, -9.68991, 0.45 ) }
    dend_62 { pt3dadd( 125.491, -154.426, -10.6739, 0.45 ) }
    dend_62 { pt3dadd( 125.44, -156.122, -11.3919, 0.45 ) }
    dend_62 { pt3dadd( 125.598, -157.76, -11.9262, 0.34 ) }
    dend_62 { pt3dadd( 125.898, -159.457, -12.401, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_62 { pt3dadd( 126.124, -160.504, -12.6589, 0.34 ) }
    dend_62 { pt3dadd( 126.337, -161.29, -12.8123, 0.34 ) }
    dend_62 { pt3dadd( 127.126, -163.81, -13.3027, 0.34 ) }
    dend_62 { pt3dadd( 128.058, -167.035, -13.9306, 0.34 ) }
    dend_62 { pt3dadd( 128.329, -167.994, -14.049, 0.34 ) }
    dend_62 { pt3dadd( 128.491, -168.73, -14.2103, 0.34 ) }
    dend_62 { pt3dadd( 128.757, -170.21, -14.6168, 0.34 ) }
    dend_62 { pt3dadd( 128.884, -171.035, -14.8714, 0.34 ) }
    dend_62 { pt3dadd( 129.104, -172.707, -15.4544, 0.34 ) }
    dend_62 { pt3dadd( 129.297, -174.193, -15.8728, 0.34 ) }
    dend_62 { pt3dadd( 129.734, -178.19, -17.233, 0.34 ) }
    dend_62 { pt3dadd( 129.904, -179.925, -17.924, 0.34 ) }
    dend_62 { pt3dadd( 129.939, -180.37, -18.1271, 0.34 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 13/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 127.971, -129.126, 11.07, 0.45 ) }
    dend_55 { pt3dadd( 130.667, -130.581, 10.6815, 0.45 ) }
    dend_55 { pt3dadd( 132.71, -132.068, 10.2231, 0.45 ) }
    dend_55 { pt3dadd( 135.106, -134.051, 9.65836, 0.45 ) }
    dend_55 { pt3dadd( 138.02, -137.215, 8.46348, 0.45 ) }
    dend_55 { pt3dadd( 139.9, -139.705, 7.54682, 0.45 ) }
    dend_55 { pt3dadd( 142.536, -143.582, 6.21689, 0.45 ) }
    dend_55 { pt3dadd( 144.96, -147.974, 4.88706, 0.34 ) }
    dend_55 { pt3dadd( 145.928, -149.985, 4.36992, 0.34 ) }
    dend_55 { pt3dadd( 149.131, -157.479, 2.42338, 0.34 ) }
    dend_55 { pt3dadd( 151.007, -162.08, 1.18245, 0.34 ) }
    dend_55 { pt3dadd( 152.372, -165.343, 0.37994, 0.34 ) }
    dend_55 { pt3dadd( 153.672, -168.395, -0.235931, 0.34 ) }
    dend_55 { pt3dadd( 155.54, -172.37, -0.761545, 0.34 ) }
    dend_55 { pt3dadd( 157.653, -176.712, -1.09595, 0.34 ) }
    dend_55 { pt3dadd( 159.397, -179.966, -1.02667, 0.34 ) }
    dend_55 { pt3dadd( 161.073, -183.051, -0.920681, 0.34 ) }
    dend_55 { pt3dadd( 162.588, -185.884, -0.651174, 0.34 ) }
    dend_55 { pt3dadd( 163.818, -188.064, -0.210242, 0.34 ) }
    dend_55 { pt3dadd( 165.106, -190.241, 0.572563, 0.34 ) }
    dend_55 { pt3dadd( 166.498, -192.568, 1.507, 0.34 ) }
    dend_55 { pt3dadd( 168.246, -195.429, 2.59252, 0.34 ) }
    dend_55 { pt3dadd( 171.527, -200.638, 4.36592, 0.45 ) }
    dend_55 { pt3dadd( 174.338, -204.776, 5.70369, 0.45 ) }
    dend_55 { pt3dadd( 177.066, -208.466, 6.97999, 0.45 ) }
    dend_55 { pt3dadd( 180.415, -212.805, 8.48794, 0.45 ) }
    dend_55 { pt3dadd( 182.076, -214.847, 9.08287, 0.45 ) }
    dend_55 { pt3dadd( 184.017, -217.191, 9.62162, 0.45 ) }
    dend_55 { pt3dadd( 185.086, -218.514, 9.78776, 0.45 ) }
    dend_55 { pt3dadd( 189.622, -224.326, 10.1322, 0.45 ) }
    dend_55 { pt3dadd( 192.66, -228.313, 10.2997, 0.45 ) }
    dend_55 { pt3dadd( 195.578, -232.247, 10.6408, 0.45 ) }
    dend_55 { pt3dadd( 196.8, -233.945, 10.768, 0.45 ) }
    dend_55 { pt3dadd( 200.917, -239.555, 11.2264, 0.45 ) }
    dend_55 { pt3dadd( 202.831, -242.184, 11.5244, 0.45 ) }
    dend_55 { pt3dadd( 205.433, -245.742, 12.131, 0.45 ) }
    dend_55 { pt3dadd( 207.065, -247.851, 12.7206, 0.45 ) }
    dend_55 { pt3dadd( 208.215, -249.326, 13.2157, 0.45 ) }
    dend_55 { pt3dadd( 211.146, -253.066, 14.5109, 0.45 ) }
    dend_55 { pt3dadd( 214.132, -256.916, 15.9586, 0.45 ) }
    dend_55 { pt3dadd( 216.641, -260.454, 16.9698, 0.45 ) }
    dend_55 { pt3dadd( 219.206, -264.43, 17.7434, 0.45 ) }
    dend_55 { pt3dadd( 221.0, -267.515, 17.942, 0.45 ) }
    dend_55 { pt3dadd( 222.753, -270.91, 17.826, 0.45 ) }
    dend_55 { pt3dadd( 223.985, -273.571, 17.5008, 0.45 ) }
    dend_55 { pt3dadd( 226.333, -278.939, 16.585, 0.45 ) }
    dend_55 { pt3dadd( 227.596, -281.953, 16.0577, 0.45 ) }
    dend_55 { pt3dadd( 229.764, -287.149, 15.2829, 0.45 ) }
    dend_55 { pt3dadd( 231.86, -291.895, 14.7378, 0.45 ) }
    dend_55 { pt3dadd( 233.226, -294.808, 14.4452, 0.45 ) }
    dend_55 { pt3dadd( 234.457, -297.443, 14.077, 0.45 ) }
    dend_55 { pt3dadd( 236.136, -301.022, 13.6084, 0.45 ) }
    dend_55 { pt3dadd( 237.113, -303.06, 13.2363, 0.45 ) }
    dend_55 { pt3dadd( 237.616, -304.14, 13.0089, 0.45 ) }
    dend_55 { pt3dadd( 238.83, -306.774, 12.3377, 0.45 ) }
    dend_55 { pt3dadd( 241.991, -313.502, 10.3167, 0.45 ) }
    dend_55 { pt3dadd( 243.228, -316.122, 9.41925, 0.45 ) }
    dend_55 { pt3dadd( 244.932, -319.77, 8.04267, 0.45 ) }
    dend_55 { pt3dadd( 246.332, -322.75, 6.91051, 0.45 ) }
    dend_55 { pt3dadd( 246.855, -323.909, 6.4897, 0.79 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 73/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 246.855, -323.909, 6.4897, 0.45 ) }
    dend_57 { pt3dadd( 245.672, -326.153, 6.54478, 0.45 ) }
    dend_57 { pt3dadd( 245.03, -327.601, 6.62993, 0.45 ) }
    dend_57 { pt3dadd( 244.538, -328.885, 6.58014, 0.45 ) }
    dend_57 { pt3dadd( 244.316, -329.567, 6.41445, 0.45 ) }
    dend_57 { pt3dadd( 244.063, -330.71, 6.05118, 0.45 ) }
    dend_57 { pt3dadd( 243.921, -331.704, 5.73667, 0.45 ) }
    dend_57 { pt3dadd( 243.916, -333.202, 5.24141, 0.45 ) }
    dend_57 { pt3dadd( 244.057, -335.723, 4.38546, 0.45 ) }
    dend_57 { pt3dadd( 244.303, -339.017, 3.26276, 0.45 ) }
    dend_57 { pt3dadd( 244.408, -340.811, 2.75768, 0.45 ) }
    dend_57 { pt3dadd( 244.522, -343.258, 2.22359, 0.45 ) }
    dend_57 { pt3dadd( 244.522, -344.709, 2.01674, 0.45 ) }
    dend_57 { pt3dadd( 244.481, -346.617, 2.04148, 0.45 ) }
    dend_57 { pt3dadd( 244.381, -349.097, 2.79261, 0.45 ) }
    dend_57 { pt3dadd( 244.178, -351.752, 4.04197, 0.45 ) }
    dend_57 { pt3dadd( 243.986, -353.268, 4.97586, 0.45 ) }
    dend_57 { pt3dadd( 243.781, -354.697, 6.28133, 0.45 ) }
    dend_57 { pt3dadd( 243.421, -357.29, 9.20089, 0.45 ) }
    dend_57 { pt3dadd( 243.003, -360.626, 13.5201, 0.45 ) }
    dend_57 { pt3dadd( 242.886, -361.639, 14.8921, 0.45 ) }
    dend_57 { pt3dadd( 242.75, -363.159, 16.9196, 0.45 ) }
    dend_57 { pt3dadd( 242.454, -366.559, 21.7114, 0.45 ) }
    dend_57 { pt3dadd( 242.374, -367.533, 23.1166, 0.45 ) }
    dend_57 { pt3dadd( 242.225, -368.703, 24.6567, 0.45 ) }
    dend_57 { pt3dadd( 241.928, -370.627, 26.8671, 0.45 ) }
    dend_57 { pt3dadd( 241.815, -371.557, 27.9542, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 0/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 246.855, -323.909, 6.4897, 0.45 ) }
    dend_56 { pt3dadd( 247.928, -325.21, 6.81477, 0.45 ) }
    dend_56 { pt3dadd( 249.961, -327.492, 7.30825, 0.45 ) }
    dend_56 { pt3dadd( 252.208, -329.686, 7.72318, 0.45 ) }
    dend_56 { pt3dadd( 254.211, -331.566, 8.09791, 0.45 ) }
    dend_56 { pt3dadd( 256.388, -333.611, 8.50632, 0.45 ) }
    dend_56 { pt3dadd( 257.543, -334.739, 8.62067, 0.45 ) }
    dend_56 { pt3dadd( 260.084, -337.275, 8.50363, 0.45 ) }
    dend_56 { pt3dadd( 262.651, -339.888, 8.0251, 0.45 ) }
    dend_56 { pt3dadd( 265.433, -342.846, 7.14224, 0.45 ) }
    dend_56 { pt3dadd( 266.349, -343.849, 6.7933, 0.45 ) }
    dend_56 { pt3dadd( 270.029, -347.931, 5.29534, 0.45 ) }
    dend_56 { pt3dadd( 272.791, -351.103, 4.18709, 0.45 ) }
    dend_56 { pt3dadd( 274.372, -352.897, 3.62232, 0.45 ) }
    dend_56 { pt3dadd( 277.853, -356.614, 2.60826, 0.45 ) }
    dend_56 { pt3dadd( 279.445, -358.197, 2.36261, 0.45 ) }
    dend_56 { pt3dadd( 282.496, -361.093, 2.35628, 0.45 ) }
    dend_56 { pt3dadd( 286.512, -364.691, 2.95692, 0.45 ) }
    dend_56 { pt3dadd( 291.066, -368.791, 4.2508, 0.45 ) }
    dend_56 { pt3dadd( 294.399, -371.817, 5.65819, 0.45 ) }
    dend_56 { pt3dadd( 298.534, -375.379, 7.86187, 0.45 ) }
    dend_56 { pt3dadd( 300.675, -377.144, 9.13083, 0.45 ) }
    dend_56 { pt3dadd( 302.135, -378.226, 10.0376, 0.45 ) }
    dend_56 { pt3dadd( 306.095, -380.554, 12.2223, 0.45 ) }
    dend_56 { pt3dadd( 309.849, -382.381, 13.9815, 0.45 ) }
    dend_56 { pt3dadd( 314.822, -384.41, 15.8046, 0.45 ) }
    dend_56 { pt3dadd( 318.263, -385.557, 16.6579, 0.45 ) }
    dend_56 { pt3dadd( 323.868, -387.077, 17.6406, 0.45 ) }
    dend_56 { pt3dadd( 331.923, -388.706, 18.673, 0.45 ) }
    dend_56 { pt3dadd( 334.113, -388.956, 18.8377, 0.45 ) }
    dend_56 { pt3dadd( 336.179, -389.037, 18.9115, 0.45 ) }
    dend_56 { pt3dadd( 339.625, -388.716, 19.0497, 0.45 ) }
    dend_56 { pt3dadd( 341.692, -388.069, 19.1609, 0.45 ) }
    dend_56 { pt3dadd( 344.292, -386.119, 19.3436, 0.45 ) }
    dend_56 { pt3dadd( 345.533, -384.565, 19.4664, 0.45 ) }
    dend_56 { pt3dadd( 346.649, -383.002, 19.5629, 0.45 ) }
    dend_56 { pt3dadd( 348.973, -379.633, 19.7224, 0.45 ) }
    dend_56 { pt3dadd( 350.368, -377.689, 19.7919, 0.45 ) }
    dend_56 { pt3dadd( 352.993, -374.591, 19.8441, 0.45 ) }
    dend_56 { pt3dadd( 355.322, -372.423, 20.0733, 0.45 ) }
    dend_56 { pt3dadd( 357.905, -370.525, 20.5739, 0.45 ) }
    dend_56 { pt3dadd( 359.882, -369.313, 21.0313, 0.45 ) }
    dend_56 { pt3dadd( 361.827, -368.444, 21.608, 0.45 ) }
    dend_56 { pt3dadd( 364.276, -367.757, 22.4865, 0.45 ) }
    dend_56 { pt3dadd( 371.022, -367.464, 26.2386, 0.45 ) }
    dend_56 { pt3dadd( 371.9, -367.608, 26.9743, 0.45 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 46/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 241.815, -371.557, 27.9542, 0.45 ) }
    dend_59 { pt3dadd( 241.468, -374.388, 28.8639, 0.45 ) }
    dend_59 { pt3dadd( 241.336, -376.861, 29.6334, 0.45 ) }
    dend_59 { pt3dadd( 241.33, -379.473, 30.4812, 0.45 ) }
    dend_59 { pt3dadd( 241.349, -381.851, 31.2387, 0.45 ) }
    dend_59 { pt3dadd( 241.517, -385.793, 32.7919, 0.45 ) }
    dend_59 { pt3dadd( 241.655, -387.597, 33.7198, 0.45 ) }
    dend_59 { pt3dadd( 241.951, -390.026, 35.3151, 0.45 ) }
    dend_59 { pt3dadd( 242.287, -392.306, 36.9556, 0.45 ) }
    dend_59 { pt3dadd( 242.898, -395.548, 39.4509, 0.45 ) }
    dend_59 { pt3dadd( 243.911, -400.23, 43.1201, 0.45 ) }
    dend_59 { pt3dadd( 245.074, -404.927, 46.6974, 0.45 ) }
    dend_59 { pt3dadd( 246.07, -409.085, 49.687, 0.45 ) }
    dend_59 { pt3dadd( 246.699, -411.628, 51.3425, 0.45 ) }
    dend_59 { pt3dadd( 247.712, -415.726, 53.5976, 0.45 ) }
    dend_59 { pt3dadd( 248.388, -418.456, 54.8353, 0.45 ) }
    dend_59 { pt3dadd( 249.116, -422.025, 55.9633, 0.45 ) }
    dend_59 { pt3dadd( 249.799, -425.499, 56.7834, 0.45 ) }
    dend_59 { pt3dadd( 250.505, -429.138, 57.5321, 0.45 ) }
    dend_59 { pt3dadd( 251.088, -432.499, 58.308, 0.45 ) }
    dend_59 { pt3dadd( 251.519, -436.074, 59.0257, 0.45 ) }
    dend_59 { pt3dadd( 251.975, -440.679, 59.9734, 0.45 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 68/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 241.815, -371.557, 27.9542, 0.45 ) }
    dend_58 { pt3dadd( 244.197, -370.251, 27.5559, 0.45 ) }
    dend_58 { pt3dadd( 245.37, -369.608, 27.3597, 0.45 ) }
    dend_58 { pt3dadd( 246.694, -368.882, 27.1382, 0.45 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 72/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 251.975, -440.679, 59.9734, 0.45 ) }
    dend_61 { pt3dadd( 250.413, -443.433, 63.2143, 0.45 ) }
    dend_61 { pt3dadd( 248.483, -446.892, 66.8021, 0.45 ) }
    dend_61 { pt3dadd( 247.35, -448.986, 68.7709, 0.45 ) }
    dend_61 { pt3dadd( 246.667, -450.324, 69.9217, 0.45 ) }
    dend_61 { pt3dadd( 246.515, -450.633, 70.165, 0.45 ) }
    dend_61 { pt3dadd( 244.93, -453.966, 72.6911, 0.45 ) }
    dend_61 { pt3dadd( 244.563, -454.863, 73.1517, 0.45 ) }
    dend_61 { pt3dadd( 244.234, -455.756, 73.5007, 0.45 ) }
    dend_61 { pt3dadd( 243.859, -456.666, 73.8891, 0.45 ) }
    dend_61 { pt3dadd( 243.289, -457.917, 74.3606, 0.45 ) }
    dend_61 { pt3dadd( 242.29, -460.122, 75.0289, 0.45 ) }
    dend_61 { pt3dadd( 241.409, -462.114, 75.5618, 0.45 ) }
    dend_61 { pt3dadd( 240.351, -464.497, 76.3704, 0.45 ) }
    dend_61 { pt3dadd( 239.741, -465.801, 76.951, 0.45 ) }
    dend_61 { pt3dadd( 238.993, -467.325, 77.6921, 0.45 ) }
    dend_61 { pt3dadd( 237.903, -469.47, 78.7859, 0.45 ) }
    dend_61 { pt3dadd( 236.958, -471.339, 80.3754, 0.45 ) }
    dend_61 { pt3dadd( 236.146, -472.907, 82.213, 0.45 ) }
    dend_61 { pt3dadd( 235.519, -474.148, 83.903, 0.45 ) }
    dend_61 { pt3dadd( 234.971, -475.233, 85.6174, 0.45 ) }
    dend_61 { pt3dadd( 234.358, -476.352, 87.5302, 0.45 ) }
    dend_61 { pt3dadd( 231.706, -480.961, 95.1413, 0.45 ) }
    dend_61 { pt3dadd( 231.029, -482.184, 96.9104, 0.45 ) }
    dend_61 { pt3dadd( 230.579, -483.07, 97.9733, 0.45 ) }
    dend_61 { pt3dadd( 229.163, -486.057, 100.921, 0.45 ) }
    dend_61 { pt3dadd( 228.458, -487.692, 102.268, 0.45 ) }
    dend_61 { pt3dadd( 227.617, -489.903, 103.45, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_61 { pt3dadd( 226.97, -491.683, 103.825, 0.45 ) }
    dend_61 { pt3dadd( 226.292, -493.782, 104.141, 0.45 ) }
    dend_61 { pt3dadd( 225.713, -495.798, 104.244, 0.45 ) }
    dend_61 { pt3dadd( 225.332, -497.41, 104.051, 0.45 ) }
    dend_61 { pt3dadd( 225.19, -498.227, 103.954, 0.45 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 5/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 251.975, -440.679, 59.9734, 0.45 ) }
    dend_60 { pt3dadd( 252.084, -442.176, 60.7171, 0.45 ) }
    dend_60 { pt3dadd( 252.267, -445.243, 62.1292, 0.45 ) }
    dend_60 { pt3dadd( 252.282, -448.705, 63.6965, 0.45 ) }
    dend_60 { pt3dadd( 252.16, -449.986, 64.3819, 0.45 ) }
    dend_60 { pt3dadd( 251.84, -451.86, 65.5718, 0.45 ) }
    dend_60 { pt3dadd( 251.433, -453.733, 66.9273, 0.45 ) }
    dend_60 { pt3dadd( 251.078, -454.922, 67.9869, 0.45 ) }
    dend_60 { pt3dadd( 250.534, -456.486, 69.6265, 0.45 ) }
    dend_60 { pt3dadd( 249.142, -460.078, 74.117, 0.45 ) }
    dend_60 { pt3dadd( 248.233, -462.385, 77.1822, 0.45 ) }
    dend_60 { pt3dadd( 247.752, -463.751, 79.0234, 0.45 ) }
    dend_60 { pt3dadd( 247.106, -465.886, 81.9912, 0.45 ) }
    dend_60 { pt3dadd( 246.995, -466.427, 82.7236, 0.45 ) }
    dend_60 { pt3dadd( 246.975, -467.681, 84.4431, 0.45 ) }
    dend_60 { pt3dadd( 247.207, -469.047, 86.0701, 0.45 ) }
    dend_60 { pt3dadd( 247.698, -471.028, 88.198, 0.45 ) }
    dend_60 { pt3dadd( 247.934, -471.825, 88.9496, 0.45 ) }
    dend_60 { pt3dadd( 248.67, -474.294, 90.9481, 0.45 ) }
    dend_60 { pt3dadd( 250.002, -478.311, 94.0678, 0.45 ) }
    dend_60 { pt3dadd( 250.806, -480.536, 95.8212, 0.45 ) }
    dend_60 { pt3dadd( 252.004, -483.659, 98.3015, 0.45 ) }
    dend_60 { pt3dadd( 252.771, -485.751, 99.9691, 0.45 ) }
    dend_60 { pt3dadd( 254.329, -489.943, 103.338, 0.45 ) }
    dend_60 { pt3dadd( 254.82, -491.23, 104.365, 0.45 ) }
    dend_60 { pt3dadd( 255.893, -494.153, 106.609, 0.45 ) }
    dend_60 { pt3dadd( 256.267, -495.241, 107.558, 0.45 ) }
    dend_60 { pt3dadd( 257.205, -498.008, 110.074, 0.45 ) }
    dend_60 { pt3dadd( 258.008, -500.634, 112.614, 0.45 ) }
    dend_60 { pt3dadd( 258.341, -501.803, 114.017, 0.45 ) }
    dend_60 { pt3dadd( 258.694, -503.147, 115.921, 0.45 ) }
    dend_60 { pt3dadd( 259.261, -505.79, 119.59, 0.45 ) }
    dend_60 { pt3dadd( 259.474, -507.081, 121.352, 0.45 ) }
    dend_60 { pt3dadd( 259.68, -508.461, 123.188, 0.45 ) }
    dend_60 { pt3dadd( 260.474, -514.23, 130.48, 0.45 ) }
    dend_60 { pt3dadd( 261.079, -518.337, 135.322, 0.45 ) }
    dend_60 { pt3dadd( 261.628, -521.808, 139.156, 0.45 ) }
    dend_60 { pt3dadd( 261.805, -522.886, 140.202, 0.45 ) }
    dend_60 { pt3dadd( 261.979, -524.027, 141.347, 0.45 ) }
    dend_60 { pt3dadd( 262.21, -525.44, 142.817, 0.45 ) }
    dend_60 { pt3dadd( 262.498, -526.904, 144.472, 0.45 ) }
    dend_60 { pt3dadd( 262.8, -528.237, 146.329, 0.45 ) }
    dend_60 { pt3dadd( 262.924, -528.72, 147.129, 0.45 ) }
    dend_60 { pt3dadd( 264.062, -533.02, 154.796, 0.45 ) }
    dend_60 { pt3dadd( 264.568, -535.033, 158.435, 0.45 ) }
    dend_60 { pt3dadd( 265.519, -538.319, 164.151, 0.45 ) }
    dend_60 { pt3dadd( 265.673, -538.857, 165.099, 0.45 ) }
    dend_60 { pt3dadd( 265.851, -539.402, 166.002, 0.45 ) }
    dend_60 { pt3dadd( 266.195, -540.394, 167.479, 0.45 ) }
    dend_60 { pt3dadd( 267.076, -542.858, 170.535, 0.45 ) }
    dend_60 { pt3dadd( 267.91, -545.33, 173.449, 0.45 ) }
    dend_60 { pt3dadd( 269.927, -551.749, 180.784, 0.45 ) }
    dend_60 { pt3dadd( 270.747, -554.482, 183.967, 0.45 ) }
    dend_60 { pt3dadd( 271.15, -555.782, 185.507, 0.45 ) }
    dend_60 { pt3dadd( 271.588, -557.07, 187.575, 0.45 ) }
    dend_60 { pt3dadd( 272.218, -558.519, 190.833, 0.45 ) }
    dend_60 { pt3dadd( 272.965, -559.964, 195.285, 0.45 ) }
    dend_60 { pt3dadd( 273.253, -560.458, 197.146, 0.45 ) }
    dend_60 { pt3dadd( 273.432, -560.854, 198.867, 0.45 ) }
    dend_60 { pt3dadd( 274.616, -564.306, 213.872, 0.45 ) }
    dend_60 { pt3dadd( 274.89, -565.308, 217.93, 0.45 ) }
    dend_60 { pt3dadd( 275.16, -566.547, 222.293, 0.45 ) }
    dend_60 { pt3dadd( 275.274, -567.262, 224.899, 0.45 ) }
    dend_60 { pt3dadd( 275.475, -568.997, 230.98, 0.45 ) }
    dend_60 { pt3dadd( 275.512, -569.937, 233.868, 0.45 ) }
    dend_60 { pt3dadd( 275.513, -571.083, 236.54, 0.45 ) }
    dend_60 { pt3dadd( 275.486, -573.159, 241.463, 0.45 ) }
    dend_60 { pt3dadd( 275.854, -580.174, 259.514, 0.45 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, axon_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, axon_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_5 = new SectionList()
    dend_23 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_11 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_13 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_46 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_44 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_10 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_9 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_69 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_7 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_6 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_64 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_49 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_28 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_21 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_66 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_65 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_63 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_50 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_42 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_38 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_33 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_31 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_67 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_51 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_40 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_37 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_54 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_53 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_36 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_35 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_62 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_55 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_57 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_56 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_59 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_61 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_60 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_24 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_12 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_45 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_47 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_25 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_27 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_29 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_30 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_32 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_14 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_15 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_41 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_43 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_52 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_20 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_68 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_58 OneSecGrp_SectionRef_71.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_48, dend_48, dend_48, dend_48, dend_48, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_11 nseg = 3
    dend_22 nseg = 5
    dend_13 nseg = 3
    dend_8 nseg = 5
    dend_46 nseg = 5
    dend_44 nseg = 5
    dend_10 nseg = 7
    dend_9 nseg = 5
    dend_5 nseg = 7
    dend_2 nseg = 3
    dend_69 nseg = 3
    dend_19 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 5
    dend_64 nseg = 5
    dend_49 nseg = 3
    dend_28 nseg = 21
    dend_21 nseg = 3
    dend_66 nseg = 11
    dend_65 nseg = 3
    dend_63 nseg = 3
    dend_50 nseg = 3
    dend_42 nseg = 3
    dend_38 nseg = 5
    dend_33 nseg = 7
    dend_31 nseg = 7
    dend_67 nseg = 5
    dend_51 nseg = 7
    dend_40 nseg = 15
    dend_37 nseg = 9
    dend_54 nseg = 3
    dend_53 nseg = 7
    dend_36 nseg = 7
    dend_35 nseg = 9
    dend_62 nseg = 3
    dend_55 nseg = 11
    dend_57 nseg = 3
    dend_56 nseg = 9
    dend_59 nseg = 3
    dend_61 nseg = 5
    dend_60 nseg = 13
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_NBC_63fe8b2e25_0_0


