// Cell: bNAC219_L6_SBC_28362da21f_0_0
/*
{
  "id" : "bNAC219_L6_SBC_28362da21f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.71, 1.11579, -0.00859741, 2.90178", "-7.75017, 1.02312, -0.00771382, 4.8142", "-6.79033, 0.930461, -0.00683022, 6.51513", "-5.8305, 0.837797, -0.00594662, 7.8517", "-4.87066, 0.745134, -0.00506303, 9.02606", "-3.91083, 0.652471, -0.00417943, 9.72934", "-2.95099, 0.559807, -0.00329584, 10.1232", "-1.99116, 0.467144, -0.00241224, 10.5862", "-1.03132, 0.37448, -0.00152864, 11.0213", "-0.071489, 0.281817, -6.45048E-4, 11.2361", "0.888346, 0.189153, 2.38549E-4, 11.4245", "1.84818, 0.0964897, 0.00112214, 11.5484", "2.80802, 0.00382618, 0.00200574, 11.556", "3.76785, -0.0888373, 0.00288934, 11.5027", "4.72769, -0.181501, 0.00377293, 11.3177", "5.68752, -0.274164, 0.00465653, 11.0697", "6.64736, -0.366828, 0.00554013, 10.8396", "7.60719, -0.459491, 0.00642372, 10.3557", "8.56703, -0.552155, 0.00730732, 9.07032", "9.52686, -0.644818, 0.00819091, 7.06538", "10.4867, -0.737482, 0.00907451, 4.33074" ]
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "8.89711, -4.23213, -3.53401, 1.84", "9.94159, -4.86325, -3.6508, 1.84", "10.0778, -4.94551, -3.66603, 1.84", "11.645, -5.89246, -3.84126, 1.84", "13.236, -6.8538, -4.01916, 2.09", "15.0674, -7.96039, -4.22393, 2.34", "15.5155, -8.23115, -4.27404, 2.34" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997985386903
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-8.94289, -0.356133, 11.726, 1.72", "-9.25134, -0.384712, 11.9615, 1.72", "-9.90575, -0.38607, 12.3608, 1.72", "-12.2875, -0.212054, 13.5903, 1.35", "-13.2971, -0.0396619, 14.0235, 1.23", "-14.0956, 0.13681, 14.2904, 1.23", "-15.2982, 0.463992, 14.5953, 1.23", "-16.0512, 0.739309, 14.6918, 1.23", "-16.6673, 1.01808, 14.6656, 1.23", "-17.7786, 1.5897, 14.4348, 1.23", "-18.5217, 1.99885, 14.239, 1.23", "-19.3636, 2.44166, 13.9398, 1.23", "-20.3455, 2.88871, 13.5478, 1.35", "-21.2907, 3.243, 13.1657, 1.35", "-22.3665, 3.56156, 12.789, 1.35", "-23.7021, 3.82757, 12.41, 1.11", "-25.3187, 4.03829, 12.0642, 1.11", "-26.6785, 4.15278, 11.7979, 1.11", "-27.6871, 4.18875, 11.6346, 1.11", "-29.1314, 4.16566, 11.4902, 1.11", "-30.5657, 4.04488, 11.42, 1.48", "-31.0409, 3.97451, 11.4555, 1.6" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997985386903
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.57711, 5.42937, -6.53401, 1.23", "6.72842, 5.69373, -6.50486, 1.23", "7.24523, 6.59715, -6.43143, 1.11", "7.67242, 7.34391, -6.37072, 1.11", "8.19371, 8.25518, -6.29665, 1.11", "9.29103, 10.1734, -6.14073, 1.11", "9.88709, 11.2154, -6.05603, 1.23", "10.7213, 12.6963, -5.97792, 1.6" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997985386903
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "10.0471, 0.859867, -9.80401, 0.74", "10.1564, 0.881313, -9.74855, 0.74", "11.1658, 1.07736, -9.19463, 0.74", "11.2125, 1.0832, -9.18036, 0.74", "12.4585, 1.19974, -8.939, 0.74", "12.5819, 1.20863, -8.92462, 0.74", "13.3932, 1.25804, -8.86261, 0.74", "13.5334, 1.26198, -8.87186, 0.74", "15.4, 1.19437, -9.27899, 0.74", "15.439, 1.19116, -9.29481, 0.74", "16.0351, 1.11452, -9.63629, 0.74", "16.1065, 1.10209, -9.67968, 0.74", "17.0315, 0.903889, -10.281, 0.74", "17.2976, 0.846731, -10.4325, 0.74", "18.5168, 0.67539, -10.9723, 0.74", "18.7032, 0.670523, -11.0486, 0.74", "19.385, 0.739805, -11.3252, 0.74", "19.4629, 0.755233, -11.3545, 0.74", "20.482, 1.09773, -11.684, 0.74", "21.446, 1.50999, -11.989, 0.74", "22.3966, 2.03793, -12.2898, 0.74", "23.2473, 2.58208, -12.6174, 0.74", "23.3812, 2.68406, -12.6819, 0.74", "24.2303, 3.40226, -13.1685, 0.74", "24.3137, 3.4804, -13.225, 0.74", "24.941, 4.06582, -13.719, 0.74", "25.2376, 4.29526, -14.0729, 0.74", "25.5909, 4.50083, -14.6495, 0.74", "25.6284, 4.5114, -14.732, 0.74", "26.0818, 4.48586, -15.9817, 0.74", "26.2757, 4.44437, -16.553, 0.74", "27.1169, 4.08242, -19.1994, 0.74", "27.152, 4.06517, -19.3125, 0.74", "27.4395, 3.88084, -20.3343, 0.74", "27.4909, 3.84754, -20.551, 0.74", "27.5662, 3.77054, -21.0821, 0.74", "27.5827, 3.78577, -21.1989, 0.74", "27.5964, 4.12658, -21.4467, 0.74", "27.5963, 4.30663, -21.5784, 0.74", "27.6232, 4.91355, -22.1455, 0.74", "27.6421, 5.01026, -22.2783, 0.74", "27.7676, 5.37096, -22.9501, 0.74", "27.9177, 5.61849, -23.5152, 0.74", "28.0368, 5.73404, -23.8999, 0.74", "28.5777, 6.0728, -25.3553, 0.74", "28.9696, 6.22082, -26.2839, 0.74", "29.0401, 6.24166, -26.4586, 0.74", "29.2654, 6.30891, -27.0177, 0.74", "29.6881, 6.46442, -28.1974, 0.74", "29.8239, 6.55462, -28.6771, 0.74", "29.8327, 6.56524, -28.7241, 0.74", "30.0166, 6.99275, -30.4591, 0.74", "30.0598, 7.13868, -31.1287, 0.74", "30.1001, 7.29157, -31.8599, 0.74", "30.1647, 7.51671, -32.9563, 0.74", "30.1918, 7.59629, -33.3675, 0.74", "30.344, 7.93658, -35.1544, 0.74", "30.6562, 8.39155, -37.7167, 0.74", "30.9089, 8.67638, -39.4978, 0.74", "30.9248, 8.69298, -39.5931, 0.74", "31.229, 8.98095, -41.2137, 0.74", "31.2678, 9.02001, -41.4007, 0.74", "31.6234, 9.3798, -42.8889, 0.74", "31.6559, 9.41553, -43.0028, 0.74", "32.0411, 9.89859, -44.3087, 0.74", "32.0553, 9.91749, -44.3513, 0.74", "32.5043, 10.5582, -45.5547, 0.74", "32.5491, 10.623, -45.6686, 0.74", "32.758, 10.9325, -46.1582, 0.74", "32.8606, 11.0645, -46.3668, 0.74", "33.4239, 11.6735, -47.3986, 0.74", "33.496, 11.7434, -47.5258, 0.74", "34.1068, 12.2732, -48.4414, 0.74", "34.2402, 12.3918, -48.631, 0.74", "34.6373, 12.7416, -49.1439, 0.74", "35.0954, 13.1589, -49.6598, 0.74", "36.114, 14.1276, -50.625, 0.74", "36.8647, 14.8553, -51.2323, 0.74", "37.2293, 15.2173, -51.4681, 0.61", "37.8336, 15.8303, -51.7912, 0.49", "38.3993, 16.4126, -52.0214, 0.37", "38.765, 16.7966, -52.114, 0.37", "38.8263, 16.8618, -52.1213, 0.37", "39.1901, 17.2587, -52.1656, 0.25", "39.6339, 17.7413, -52.2526, 0.25", "39.8317, 17.9647, -52.312, 0.25", "40.2217, 18.4036, -52.4873, 0.25", "40.2783, 18.4665, -52.5169, 0.25", "40.8415, 19.0846, -52.8351, 0.25", "41.789, 20.0843, -53.3875, 0.25", "42.299, 20.6105, -53.6941, 0.25", "42.9381, 21.2607, -54.0752, 0.25", "43.4182, 21.7342, -54.3572, 0.25", "43.5016, 21.8074, -54.3964, 0.25", "44.0241, 22.2084, -54.5849, 0.25", "44.0919, 22.2555, -54.5987, 0.25", "44.5936, 22.5908, -54.6593, 0.25", "44.6613, 22.6396, -54.6642, 0.25", "46.2673, 23.8692, -54.7908, 0.25", "46.3377, 23.9247, -54.8018, 0.25", "47.3867, 24.7861, -55.0704, 0.25", "47.4538, 24.842, -55.0927, 0.25", "48.8558, 26.0342, -55.6472, 0.25", "48.9911, 26.1536, -55.7129, 0.25", "50.1132, 27.207, -56.3859, 0.25", "51.0415, 28.0926, -56.9872, 0.25", "51.58, 28.6098, -57.3794, 0.25", "51.6541, 28.6824, -57.4345, 0.25", "52.207, 29.2357, -57.8673, 0.25", "52.3755, 29.4108, -57.982, 0.25", "52.8007, 29.8879, -58.21, 0.25", "52.9929, 30.1049, -58.2932, 0.25", "53.7244, 30.9175, -58.5679, 0.25", "53.8906, 31.0866, -58.6266, 0.25", "54.628, 31.7819, -58.8596, 0.25", "54.713, 31.857, -58.8909, 0.25", "55.4526, 32.4621, -59.1861, 0.25", "55.6546, 32.6212, -59.2705, 0.25", "56.39, 33.1862, -59.6165, 0.25", "56.4836, 33.2543, -59.6575, 0.25", "57.3055, 33.8328, -60.0093, 0.25", "57.5721, 34.0223, -60.1218, 0.25", "57.9502, 34.2925, -60.2783, 0.25", "58.0834, 34.3913, -60.3295, 0.25", "59.2653, 35.2904, -60.7334, 0.25", "59.3391, 35.3484, -60.7559, 0.25", "60.0659, 35.9385, -60.9704, 0.25", "60.1823, 36.0367, -61.0072, 0.25", "61.0327, 36.7734, -61.2829, 0.25", "61.1173, 36.85, -61.3112, 0.25", "61.915, 37.6995, -61.5932, 0.25", "62.7038, 38.5904, -61.8535, 0.25", "62.7803, 38.6814, -61.878, 0.25", "63.1568, 39.1254, -61.9954, 0.25", "63.2652, 39.2538, -62.032, 0.25", "64.1452, 40.3073, -62.476, 0.25", "64.2133, 40.3906, -62.5205, 0.25", "65.2565, 41.6799, -63.3003, 0.25", "66.0229, 42.6008, -63.9539, 0.25", "66.1529, 42.7511, -64.0775, 0.25", "67.254, 43.9021, -65.2159, 0.25", "67.5986, 44.2187, -65.6112, 0.25", "67.7339, 44.333, -65.7815, 0.25", "68.1345, 44.6273, -66.3839, 0.25", "68.1777, 44.6546, -66.4507, 0.25", "68.6926, 44.9214, -67.1048, 0.25", "68.8363, 44.981, -67.2237, 0.25", "69.5055, 45.2663, -67.6752, 0.25", "69.7615, 45.4264, -67.8106, 0.25", "69.9544, 45.5784, -67.8854, 0.25", "70.038, 45.6575, -67.9088, 0.25", "70.8301, 46.5047, -68.0556, 0.25", "71.3608, 47.1585, -68.1337, 0.25", "72.1183, 48.1945, -68.2682, 0.25", "72.2233, 48.3451, -68.3009, 0.25", "72.9212, 49.3847, -68.6551, 0.25", "72.9812, 49.4759, -68.695, 0.25", "73.6172, 50.4759, -69.2976, 0.25", "74.2492, 51.4655, -70.0908, 0.25", "74.8425, 52.4022, -70.8531, 0.25", "75.2933, 53.1995, -71.4567, 0.25", "75.3367, 53.2843, -71.5234, 0.25", "75.7702, 54.2138, -72.2625, 0.25", "76.1139, 55.0291, -72.921, 0.25", "76.7379, 56.7865, -74.0617, 0.25", "77.0172, 57.6522, -74.4748, 0.25", "77.2742, 58.4268, -74.7358, 0.25", "77.5766, 59.2675, -74.9463, 0.25", "77.6212, 59.3732, -74.9563, 0.25", "78.1071, 60.2962, -74.9983, 0.25", "78.193, 60.4403, -75.0274, 0.25", "78.3965, 60.7451, -74.9934, 0.25", "78.4905, 60.8998, -74.9468, 0.25", "78.7732, 61.3887, -74.752, 0.25", "79.1022, 62.0164, -74.5122, 0.25", "79.5434, 62.9599, -74.1765, 0.25", "80.0691, 64.1894, -73.7129, 0.25", "80.3147, 64.8381, -73.4694, 0.25", "80.3274, 64.8745, -73.4558, 0.25", "80.5218, 65.4854, -73.2398, 0.25", "80.5452, 65.5591, -73.2131, 0.25", "80.8089, 66.3382, -72.9786, 0.25", "80.9835, 66.9797, -72.9374, 0.25", "81.0092, 67.0634, -72.9358, 0.25", "81.1213, 67.4507, -72.931, 0.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997985386903,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "10.4867, -0.737482, 0.00907451, 0.25", "25.4173, -2.1789, 0.00907451, 0.25", "40.3479, -3.62031, 0.00907451, 0.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "15.5155, -8.23115, -4.27404, 1.84", "17.103, -10.9952, -4.58227, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "15.5155, -8.23115, -4.27404, 0.37", "17.1359, -9.03758, -4.17869, 0.37", "17.247, -9.08863, -4.17316, 0.37", "18.33, -9.56131, -4.12469, 0.37", "19.0429, -9.8435, -4.09574, 0.37", "19.281, -9.92407, -4.04721, 0.37", "20.2093, -10.1966, -3.78062, 0.37", "20.5574, -10.2712, -3.64766, 0.37", "20.6713, -10.2867, -3.60243, 0.37", "21.1406, -10.3237, -3.35652, 0.49", "23.0632, -10.5804, -2.29366, 0.74", "23.5709, -10.7273, -1.9403, 0.74", "24.2373, -10.9795, -1.42219, 0.74", "25.0932, -11.3478, -0.736895, 0.49", "26.4466, -11.9931, 0.370721, 0.49", "27.7203, -12.6052, 1.34094, 0.37", "30.4343, -13.9427, 3.2472, 1.11", "30.4889, -13.9686, 3.28518, 1.11", "30.8802, -14.1437, 3.54521, 0.74", "30.939, -14.1669, 3.57859, 0.74", "32.924, -14.701, 4.28037, 0.37", "32.9927, -14.7105, 4.29887, 0.37", "33.6074, -14.7653, 4.38287, 0.37", "34.2277, -14.8651, 4.48535, 0.37", "34.9966, -15.0314, 4.62136, 0.37", "35.7921, -15.2387, 4.76703, 0.37", "37.1157, -15.6458, 5.01934, 0.37", "37.4833, -15.7464, 5.1174, 0.37", "38.6278, -16.0297, 5.48746, 0.37", "39.7993, -16.2429, 5.9098, 0.37", "40.1435, -16.2703, 6.07011, 0.37", "41.0243, -16.2628, 6.53691, 0.37", "42.8585, -16.18, 7.57309, 0.37", "43.098, -16.1661, 7.7256, 0.37", "43.7807, -16.11, 8.22436, 0.37", "45.2728, -16.1197, 9.53185, 0.37", "45.7198, -16.1928, 9.96501, 0.37", "46.2514, -16.4104, 10.5269, 0.37", "46.402, -16.5294, 10.6779, 0.37", "46.4692, -16.6024, 10.7478, 0.37", "47.2398, -17.6061, 12.1575, 0.37", "47.5259, -17.9882, 12.7378, 0.37", "47.6305, -18.1125, 12.958, 0.37", "47.8195, -18.2923, 13.3248, 0.37", "47.9803, -18.4213, 13.6124, 0.37", "50.0333, -19.9079, 17.3094, 0.37", "50.5488, -20.2034, 18.2317, 0.37", "50.6633, -20.2601, 18.4425, 0.37", "50.998, -20.4204, 19.0934, 0.37", "51.1037, -20.4679, 19.3111, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-31.0409, 3.97451, 11.4555, 0.37", "-33.3377, 3.49877, 10.5796, 0.37", "-34.3068, 3.37237, 10.2899, 0.37", "-35.5891, 3.18609, 9.91058, 0.37", "-37.852, 2.89859, 9.2707, 0.37", "-39.3151, 2.72089, 8.86607, 0.37", "-43.7205, 2.1455, 7.66323, 0.37", "-47.4813, 1.77083, 6.72582, 0.37", "-52.0743, 1.42799, 5.60401, 0.37", "-53.5698, 1.33502, 5.22772, 0.37", "-55.7395, 1.17693, 4.6706, 0.37", "-57.0543, 1.07429, 4.30339, 0.37", "-59.7032, 0.881454, 3.52164, 0.37", "-61.1622, 0.80702, 3.05441, 0.37", "-62.5671, 0.766409, 2.56449, 0.37", "-63.7933, 0.704595, 2.11431, 0.37", "-65.7007, 0.607461, 1.43267, 0.37", "-67.1473, 0.535305, 0.914027, 0.37", "-69.3142, 0.404405, 0.0939757, 0.37", "-71.2487, 0.285734, -0.701182, 0.37", "-73.3904, 0.164683, -1.64041, 0.37", "-75.0566, 0.0585275, -2.43354, 0.25", "-76.0949, -0.0446429, -2.95476, 0.25", "-77.8991, -0.278081, -3.89511, 0.25", "-81.0838, -0.743197, -5.52068, 0.25", "-83.4845, -1.13056, -6.70971, 0.25", "-85.2323, -1.44186, -7.61444, 0.25", "-87.306, -1.85036, -8.69117, 0.25", "-89.1347, -2.26085, -9.58455, 0.25", "-90.6669, -2.65347, -10.26, 0.25", "-91.5478, -2.88019, -10.5946, 0.25" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-31.0409, 3.97451, 11.4555, 0.74", "-31.852, 3.97665, 11.8044, 0.74", "-32.5844, 4.02523, 12.1326, 0.74", "-34.0113, 4.17183, 12.7314, 0.74", "-35.0298, 4.29952, 13.1277, 0.74", "-36.1096, 4.44495, 13.5198, 0.74", "-38.0612, 4.71517, 14.1898, 0.98", "-40.3432, 5.07472, 14.9766, 1.11", "-41.5201, 5.25668, 15.347, 1.11", "-42.4995, 5.39194, 15.5821, 1.11", "-43.2486, 5.47989, 15.7348, 1.11", "-43.8938, 5.53959, 15.8389, 1.11", "-45.7351, 5.62745, 16.0348, 1.11", "-47.7817, 5.64439, 16.1746, 0.86", "-50.3352, 5.5432, 16.3248, 0.86", "-51.9913, 5.39725, 16.4042, 0.86", "-52.7602, 5.28022, 16.4307, 0.86", "-54.2846, 4.9262, 16.4573, 0.86", "-55.5203, 4.50176, 16.453, 0.86", "-57.0707, 3.80243, 16.4692, 0.86", "-58.0062, 3.27214, 16.4954, 0.86", "-59.6888, 2.20083, 16.5023, 0.86", "-60.8386, 1.42443, 16.4863, 0.86", "-62.2218, 0.464675, 16.4436, 0.86", "-63.3871, -0.324147, 16.3888, 0.86", "-64.1769, -0.799893, 16.32, 0.86", "-65.6935, -1.55994, 16.0517, 0.86", "-66.3194, -1.79443, 15.8735, 0.49", "-67.017, -1.96042, 15.5755, 0.49", "-67.4828, -2.02826, 15.3021, 0.49", "-68.3463, -2.16181, 14.6911, 0.49", "-69.6744, -2.42379, 13.7299, 0.37", "-69.7675, -2.45083, 13.6659, 0.37", "-70.9511, -2.89088, 12.9032, 0.37", "-72.5629, -3.58015, 11.9868, 0.37", "-73.8316, -4.1866, 11.3184, 0.37", "-74.8721, -4.73382, 10.8454, 0.37", "-76.0168, -5.37925, 10.3764, 0.37", "-77.2447, -6.11389, 9.89068, 0.37", "-78.1964, -6.75233, 9.43567, 0.37", "-79.4373, -7.73203, 8.72277, 0.37", "-80.3093, -8.57802, 8.06688, 0.37", "-81.1556, -9.62942, 7.24133, 0.37", "-81.5997, -10.3576, 6.68946, 0.37", "-82.6072, -12.5211, 5.20651, 0.37", "-83.0354, -13.5321, 4.50435, 0.37", "-83.584, -14.6927, 3.66973, 0.37", "-84.0822, -15.5616, 2.97622, 0.37", "-84.827, -16.6017, 2.07753, 0.37", "-85.3261, -17.1827, 1.56566, 0.37", "-87.0525, -18.9536, 0.0441299, 0.37", "-88.2782, -20.1121, -1.04155, 0.37", "-89.3045, -20.986, -1.92228, 0.37", "-90.1824, -21.6722, -2.69104, 0.37", "-91.0252, -22.2823, -3.42682, 0.37", "-91.9177, -22.9405, -4.22863, 0.37", "-92.0189, -23.0287, -4.31331, 0.37" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "10.7213, 12.6963, -5.97792, 0.25", "13.3983, 13.5233, -6.22993, 0.25", "15.4764, 14.1952, -6.42055, 0.25", "18.5546, 15.2029, -6.68604, 0.25", "21.5004, 16.1428, -6.91477, 0.25", "25.0973, 17.2839, -7.16187, 0.25", "25.5763, 17.442, -7.19798, 0.25", "26.4495, 17.7612, -7.30555, 0.25", "26.9907, 17.9886, -7.41298, 0.25", "27.6875, 18.3023, -7.58509, 0.25", "28.5441, 18.6907, -7.78408, 0.25", "30.1542, 19.3885, -8.23412, 0.25", "31.5569, 20.0279, -8.672, 0.25", "32.9983, 20.7149, -9.17404, 0.25", "36.4513, 22.4173, -10.431, 0.25", "38.7002, 23.5862, -11.2492, 0.25", "40.1729, 24.3714, -11.8126, 0.25", "42.08, 25.4182, -12.6216, 0.25", "43.7415, 26.3469, -13.3757, 0.25", "44.2789, 26.6429, -13.632, 0.25", "47.1475, 28.2154, -15.1309, 0.25", "48.8016, 29.0457, -16.0137, 0.25", "50.9478, 30.0781, -17.1759, 0.25", "52.6817, 30.9231, -18.1402, 0.25", "54.377, 31.7363, -19.1155, 0.25", "57.2862, 33.0591, -20.8265, 0.25", "59.0916, 33.829, -21.9392, 0.25", "60.7638, 34.5673, -23.0445, 0.25", "62.6883, 35.4641, -24.5193, 0.25", "64.0357, 36.1712, -25.8399, 0.25", "65.5401, 36.984, -27.4124, 0.25", "66.6224, 37.5342, -28.5151, 0.25", "68.2631, 38.3489, -30.0397, 0.25", "70.6675, 39.5257, -32.1294, 0.25", "73.9671, 41.0923, -34.7921, 0.25", "76.6352, 42.3829, -36.696, 0.25", "79.4309, 43.7431, -38.4346, 0.25", "82.2064, 45.0554, -39.7954, 0.25", "83.5885, 45.6723, -40.2984, 0.25", "84.8569, 46.2437, -40.6284, 0.25", "86.4762, 46.9395, -40.939, 0.25", "88.7623, 47.9195, -41.4106, 0.25", "91.2591, 49.032, -41.9199, 0.25", "92.6953, 49.712, -42.2994, 0.25", "93.332, 50.0336, -42.5212, 0.25", "95.5559, 51.2525, -43.6169, 0.25", "96.6677, 51.8959, -44.3346, 0.25", "98.0365, 52.6721, -45.499, 0.25", "99.5738, 53.4758, -46.9644, 0.25", "101.498, 54.4721, -48.8507, 0.25", "102.772, 55.0857, -50.0716, 0.25", "104.063, 55.7057, -51.3212, 0.25", "106.915, 56.9593, -53.8095, 0.25", "108.631, 57.6181, -55.0978, 0.25", "109.847, 58.055, -55.8461, 0.25", "113.623, 59.3294, -57.8936, 0.25", "114.846, 59.6979, -58.4314, 0.25", "117.619, 60.4598, -59.4377, 0.25", "119.746, 61.0071, -60.0368, 0.25", "122.514, 61.6207, -60.7507, 0.25", "126.04, 62.2319, -61.4808, 0.25", "128.671, 62.6039, -61.8474, 0.25", "129.494, 62.6999, -61.9388, 0.25", "131.524, 62.9081, -62.1393, 0.25", "133.386, 63.1168, -62.294, 0.25", "134.546, 63.2808, -62.335, 0.25", "137.265, 63.705, -62.3286, 0.25", "138.322, 63.8944, -62.2741, 0.25", "139.83, 64.168, -62.1321, 0.25", "142.553, 64.6482, -61.7777, 0.25", "145.31, 65.1618, -61.3704, 0.25", "148.041, 65.6814, -60.9481, 0.25", "151.159, 66.276, -60.4239, 0.25", "152.768, 66.5824, -60.1463, 0.25", "154.655, 66.9346, -59.832, 0.25", "156.582, 67.3208, -59.5164, 0.25", "157.983, 67.6522, -59.3775, 0.25", "159.03, 67.9562, -59.3157, 0.25", "160.069, 68.2539, -59.314, 0.25", "162.188, 68.8833, -59.2623, 0.25", "163.805, 69.4012, -59.1798, 0.25", "167.019, 70.4284, -58.9127, 0.25", "168.478, 70.8925, -58.7145, 0.25", "169.623, 71.2605, -58.5061, 0.25", "171.04, 71.7292, -58.1823, 0.25", "172.206, 72.1356, -57.8243, 0.25", "173.462, 72.5984, -57.3758, 0.25", "176.141, 73.6653, -56.3052, 0.25", "176.88, 73.9815, -56.0141, 0.25", "178.89, 74.8812, -55.2602, 0.25", "180.475, 75.5513, -54.7096, 0.25", "181.613, 76.0179, -54.353, 0.25", "182.801, 76.5289, -54.045, 0.25", "184.291, 77.1692, -53.7491, 0.25", "185.479, 77.6531, -53.5351, 0.25", "186.586, 78.1025, -53.3637, 0.25", "188.492, 78.9163, -53.1319, 0.25", "190.797, 79.9616, -52.8634, 0.25", "191.879, 80.4735, -52.7608, 0.25", "193.105, 81.0873, -52.6358, 0.25", "194.081, 81.6228, -52.5419, 0.25", "195.514, 82.464, -52.408, 0.25", "196.682, 83.168, -52.2286, 0.25", "198.1, 84.048, -51.9266, 0.25", "200.54, 85.5405, -51.3047, 0.25", "201.518, 86.1166, -51.0266, 0.25", "203.044, 86.9499, -50.5589, 0.25", "205.51, 88.1672, -49.8776, 0.25", "207.042, 88.862, -49.4395, 0.25", "208.704, 89.5326, -48.9567, 0.25", "210.26, 90.0746, -48.5408, 0.25", "211.354, 90.3873, -48.2589, 0.25", "213.774, 90.9316, -47.775, 0.25", "216.332, 91.4117, -47.4437, 0.25", "217.977, 91.6847, -47.267, 0.25", "218.979, 91.8393, -47.1626, 0.25", "220.319, 92.0273, -47.0206, 0.25", "222.378, 92.3428, -46.7918, 0.25", "223.127, 92.4726, -46.6973, 0.25", "224.424, 92.7078, -46.609, 0.25", "224.943, 92.8158, -46.566, 0.25", "225.976, 93.0538, -46.456, 0.25", "227.099, 93.3412, -46.3047, 0.25", "228.644, 93.7409, -46.0467, 0.25", "230.72, 94.2794, -45.7022, 0.25", "232.128, 94.6516, -45.4543, 0.25", "233.062, 94.9096, -45.2854, 0.25", "234.522, 95.3457, -45.0182, 0.25", "236.457, 95.9121, -44.6552, 0.25", "238.062, 96.3655, -44.3474, 0.25", "240.347, 97.0165, -43.9072, 0.25", "241.064, 97.22, -43.7692, 0.25", "242.131, 97.5222, -43.5664, 0.25", "244.486, 98.1588, -43.0196, 0.25", "245.822, 98.4892, -42.6544, 0.25", "246.777, 98.7114, -42.3329, 0.25", "247.256, 98.8183, -42.148, 0.25", "248.76, 99.1466, -41.5095, 0.25", "250.603, 99.5157, -40.6701, 0.25", "252.034, 99.7936, -39.968, 0.25", "253.345, 100.009, -39.3174, 0.25", "254.534, 100.157, -38.7484, 0.25", "255.406, 100.248, -38.3596, 0.25", "256.662, 100.361, -37.8651, 0.25", "258.027, 100.478, -37.4562, 0.25", "258.83, 100.556, -37.2485, 0.25", "260.079, 100.75, -36.9142, 0.25", "260.87, 100.932, -36.6867, 0.25", "261.864, 101.243, -36.4268, 0.25", "263.856, 102.05, -35.963, 0.25", "265.875, 102.961, -35.6938, 0.25", "268.287, 104.123, -35.3503, 0.25", "269.249, 104.607, -35.2076, 0.25", "271.215, 105.614, -34.9086, 0.25", "272.484, 106.272, -34.7152, 0.25", "275.027, 107.604, -34.2543, 0.25", "278.195, 109.222, -33.6154, 0.25", "279.159, 109.729, -33.3509, 0.25", "279.964, 110.213, -32.9995, 0.25", "280.422, 110.552, -32.7025, 0.25", "281.171, 111.284, -32.1346, 0.25", "281.679, 111.929, -31.7193, 0.25", "282.629, 113.43, -31.1753, 0.25", "283.111, 114.335, -30.9263, 0.25", "283.432, 115.032, -30.7948, 0.25", "284.142, 116.619, -30.6183, 0.25", "284.627, 117.686, -30.5649, 0.25", "284.98, 118.48, -30.5504, 0.25", "285.452, 119.527, -30.6192, 0.25", "285.94, 120.562, -30.7382, 0.25", "286.619, 121.839, -30.9268, 0.25", "287.3, 122.931, -31.1503, 0.25", "288.18, 124.071, -31.4457, 0.25", "289.674, 125.6, -31.896, 0.25", "290.536, 126.288, -32.1099, 0.25", "291.923, 127.178, -32.4132, 0.25", "293.658, 128.092, -32.8387, 0.25", "295.127, 128.725, -33.2115, 0.25", "296.542, 129.209, -33.5526, 0.25", "298.34, 129.703, -33.9853, 0.25", "300.252, 130.174, -34.4906, 0.25", "302.205, 130.592, -35.1369, 0.25", "302.901, 130.718, -35.3944, 0.25", "304.425, 130.959, -36.0375, 0.25", "305.649, 131.121, -36.6121, 0.25", "307.469, 131.319, -37.4794, 0.25", "309.589, 131.545, -38.4744, 0.25", "311.168, 131.752, -39.1619, 0.25", "312.962, 132.072, -39.901, 0.25", "314.532, 132.439, -40.497, 0.25", "315.559, 132.751, -40.8288, 0.25", "317.503, 133.464, -41.4907, 0.25", "318.647, 133.994, -41.8783, 0.25", "320.283, 134.965, -42.4773, 0.25", "321.064, 135.519, -42.7363, 0.25", "322.335, 136.487, -43.1306, 0.25", "324.269, 137.973, -43.7561, 0.25", "325.074, 138.591, -44.0368, 0.25", "326.464, 139.659, -44.5977, 0.25", "328.0, 140.784, -45.2691, 0.25", "328.914, 141.464, -45.6185, 0.25", "330.145, 142.385, -46.0068, 0.25", "331.31, 143.256, -46.3003, 0.25", "332.745, 144.297, -46.6861, 0.25", "334.206, 145.354, -47.117, 0.25", "335.945, 146.734, -47.7256, 0.25", "337.474, 148.072, -48.185, 0.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "10.7213, 12.6963, -5.97792, 0.49", "10.1598, 14.2073, -6.56119, 0.49", "9.78849, 15.486, -7.00611, 0.61", "9.55937, 16.8585, -7.41583, 0.61", "9.48467, 18.1125, -7.70175, 0.61", "9.4999, 18.6616, -7.80406, 0.61", "9.60578, 19.6638, -7.95893, 0.61", "9.83199, 20.5023, -8.01707, 0.61", "10.3393, 21.916, -8.01589, 0.61", "10.8765, 23.2235, -7.96714, 0.61", "11.1749, 23.918, -7.91926, 0.61", "11.5455, 24.7653, -7.85647, 0.61", "12.206, 26.255, -7.73837, 0.61", "13.2248, 28.5888, -7.5486, 0.61", "13.4266, 29.0407, -7.51262, 0.61", "13.6175, 29.397, -7.48839, 0.25", "13.7687, 29.6277, -7.4713, 0.25", "13.9181, 29.7898, -7.45732, 0.25", "14.2731, 30.0258, -7.43371, 0.37", "14.9688, 30.3679, -7.40892, 0.37", "16.2443, 31.0937, -7.368, 0.37", "17.0015, 31.6568, -7.26499, 0.37", "17.1527, 31.8008, -7.23112, 0.37", "17.3503, 32.0241, -7.1727, 0.37", "17.7258, 32.5407, -6.99476, 0.37", "18.0211, 33.0137, -6.80613, 0.37", "18.7324, 34.4208, -6.17885, 0.37", "19.1782, 35.3656, -5.69668, 0.37", "19.3593, 35.7567, -5.4961, 0.37", "19.9642, 37.1069, -4.82014, 0.37", "20.1634, 37.5692, -4.5988, 0.37", "21.0965, 39.9421, -3.57505, 0.37", "21.5366, 41.1983, -3.12154, 0.37", "21.8913, 42.4082, -2.67239, 0.37", "22.0923, 43.1824, -2.39904, 0.37", "22.2404, 43.8792, -2.16363, 0.37", "22.424, 44.9246, -1.81134, 0.37", "22.5797, 45.9075, -1.50841, 0.37", "22.9114, 47.5278, -0.91355, 0.37", "23.1313, 48.4229, -0.531304, 0.37", "23.6052, 49.9394, 0.215282, 0.37", "23.8924, 50.755, 0.629141, 0.37", "24.3143, 51.8872, 1.22294, 0.37", "25.1072, 54.1348, 2.46883, 0.37", "25.4305, 55.0151, 2.94319, 0.37", "25.9405, 56.4152, 3.71044, 0.37", "26.4212, 57.7556, 4.41752, 0.37", "26.8644, 59.0566, 5.09419, 0.37", "27.5533, 61.2942, 6.23877, 0.37", "27.9089, 62.6372, 6.85781, 0.25", "28.2614, 63.986, 7.49195, 0.25", "28.5167, 64.9952, 7.94074, 0.25", "28.619, 65.3393, 8.10139, 0.25", "31.4461, 72.1254, 10.0953, 0.25", "34.8104, 78.9407, 10.4306, 0.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "40.3479, -3.62031, 0.00907451, 0.12", "55.2785, -5.06173, 0.00907451, 0.12", "70.209, -6.50315, 0.00907451, 0.12" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "17.103, -10.9952, -4.58227, 1.84", "17.0524, -11.6608, -4.54662, 1.84" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "17.103, -10.9952, -4.58227, 0.49", "19.4915, -11.3536, -6.04025, 0.49", "21.6452, -11.7157, -7.32509, 0.49", "25.783, -12.4462, -9.72936, 0.49", "29.9487, -13.2398, -11.9562, 0.49", "31.3701, -13.5201, -12.6606, 0.49", "32.391, -13.7306, -13.1527, 0.49", "33.0248, -13.8891, -13.4454, 0.49", "35.6, -14.5755, -14.444, 0.49", "38.0296, -15.1409, -15.1438, 0.49", "39.0327, -15.3207, -15.4569, 0.49", "40.8396, -15.5374, -16.1587, 0.49", "42.648, -15.6779, -16.9457, 0.49", "44.9703, -15.8024, -18.0466, 0.49", "47.962, -15.845, -19.585, 0.49", "51.0654, -15.7766, -21.4117, 0.49", "54.0698, -15.6799, -23.3516, 0.49", "55.1133, -15.6311, -24.0704, 0.49", "55.2684, -15.624, -24.1839, 0.37", "56.8359, -15.5921, -25.4143, 0.25", "59.6599, -15.6465, -27.5836, 0.25", "61.1918, -15.6382, -28.7606, 0.25", "61.2437, -15.6405, -28.8, 0.25", "62.7977, -15.7532, -30.0968, 0.25" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "17.103, -10.9952, -4.58227, 0.86", "14.6566, -10.7736, -4.81035, 0.86", "13.2033, -10.6524, -4.94214, 0.74", "12.4724, -10.5952, -4.99303, 0.74", "11.0039, -10.4965, -5.0712, 0.61", "10.7082, -10.4761, -5.08409, 0.74", "9.3609, -10.3813, -5.06102, 1.11", "8.75852, -10.3526, -4.97098, 1.11", "7.72593, -10.3263, -4.80019, 0.37", "6.85224, -10.3311, -4.66296, 0.49", "6.24786, -10.3481, -4.55871, 0.49", "4.91298, -10.4551, -4.12096, 0.49", "3.5336, -10.6353, -3.31346, 0.49", "2.84901, -10.7275, -2.81532, 0.49", "2.29569, -10.7776, -2.35559, 0.49", "1.00653, -10.8425, -1.19118, 0.49", "-0.671839, -10.8551, 0.374257, 0.49", "-2.60207, -10.7206, 2.18688, 0.49", "-3.19477, -10.603, 2.76215, 0.49", "-4.34632, -10.2511, 3.86278, 0.49", "-5.02192, -9.98253, 4.47685, 0.49", "-5.49933, -9.76803, 4.84943, 0.49", "-6.24828, -9.42041, 5.27157, 0.49", "-7.56849, -8.87785, 5.81358, 0.49", "-8.64171, -8.72394, 6.5229, 0.49", "-8.74369, -8.74012, 6.62099, 0.49", "-9.48306, -8.90645, 7.42561, 0.49", "-10.0164, -9.1062, 8.09136, 0.49", "-10.1901, -9.20241, 8.33914, 0.49", "-11.8644, -10.4084, 11.1097, 0.74", "-12.3528, -10.6949, 11.9974, 0.37", "-12.8592, -10.9019, 12.9943, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "51.1037, -20.4679, 19.3111, 0.37", "54.2568, -20.3272, 22.0266, 0.37", "55.3441, -20.2626, 22.8207, 0.37", "55.8413, -20.2292, 23.143, 0.37", "56.6297, -20.1876, 23.5679, 0.37", "56.901, -20.183, 23.6736, 0.37", "57.9056, -20.1786, 23.9518, 0.37", "58.3532, -20.19, 23.9695, 0.37", "58.5107, -20.1935, 23.9755, 0.37", "59.5661, -20.2182, 24.0187, 0.37", "61.349, -20.2686, 24.0969, 0.37", "63.1567, -20.3395, 24.179, 0.37", "73.8749, -22.3046, 29.39, 0.37", "84.0889, -22.5804, 35.8563, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-92.0189, -23.0287, -4.31331, 0.37", "-91.5326, -23.8564, -5.16455, 0.37", "-91.2484, -24.3691, -5.67032, 0.37", "-90.2759, -26.106, -7.34141, 0.37", "-88.549, -29.0701, -10.0486, 0.37", "-87.5678, -30.6922, -11.4684, 0.37", "-85.8646, -33.6209, -13.8785, 0.37", "-84.9631, -35.2658, -15.1896, 0.37", "-83.5974, -37.6957, -17.0549, 0.37", "-82.3531, -39.6651, -18.5249, 0.37", "-80.6168, -42.0566, -20.1998, 0.37", "-78.9223, -44.1894, -21.6575, 0.37", "-76.6441, -46.7852, -23.3067, 0.37", "-73.719, -50.0153, -25.3569, 0.37", "-70.8089, -53.0476, -27.2165, 0.37", "-68.5817, -55.2452, -28.5722, 0.37", "-67.3539, -56.3967, -29.2339, 0.37", "-63.0595, -60.2266, -31.4045, 0.37", "-59.9157, -63.0026, -32.8837, 0.37", "-57.1557, -65.6219, -34.1608, 0.37", "-54.4746, -68.4051, -35.4359, 0.25", "-51.7207, -71.2444, -36.7795, 0.12" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-92.0189, -23.0287, -4.31331, 0.37", "-94.1081, -25.2157, -6.05443, 0.37", "-96.6566, -27.8669, -8.29245, 0.37", "-99.3438, -30.6497, -10.6516, 0.37", "-100.572, -31.9458, -11.76, 0.37", "-101.327, -32.7351, -12.4255, 0.37", "-102.945, -34.4241, -13.8439, 0.37", "-104.077, -35.6008, -14.8709, 0.37", "-104.657, -36.1945, -15.3527, 0.37", "-106.566, -37.9888, -16.5367, 0.37", "-107.572, -38.8942, -17.028, 0.37", "-108.564, -39.7635, -17.4716, 0.25", "-109.607, -40.6772, -17.8343, 0.25", "-111.999, -42.7008, -18.5075, 0.25", "-113.282, -43.7432, -18.8142, 0.25", "-113.874, -44.188, -18.8822, 0.25" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "337.474, 148.072, -48.185, 0.25", "338.809, 148.995, -48.8554, 0.25", "340.035, 149.841, -49.4706, 0.25", "341.057, 150.547, -49.9837, 0.25", "343.259, 152.069, -51.0893, 0.25", "345.519, 153.631, -52.224, 0.25", "347.707, 155.142, -53.3222, 0.25" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "337.474, 148.072, -48.185, 0.25", "337.988, 150.044, -49.4603, 0.25", "338.314, 151.298, -50.271, 0.25", "338.526, 152.113, -50.7982, 0.25", "339.046, 154.109, -52.089, 0.25", "339.459, 155.691, -53.112, 0.25", "339.566, 156.105, -53.3796, 0.25" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "337.474, 148.072, -48.185, 0.25", "340.642, 148.093, -46.6085, 0.25", "342.487, 148.105, -45.6904, 0.25", "345.093, 148.123, -44.3936, 0.25" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "34.8104, 78.9407, 10.4306, 0.25", "36.5436, 87.8315, 11.6117, 0.25", "39.0218, 96.4518, 13.5017, 0.25" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "34.8104, 78.9407, 10.4306, 0.25", "39.9692, 87.8411, 13.4972, 0.25", "46.16, 96.3787, 15.7095, 0.25" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "17.0524, -11.6608, -4.54662, 0.86", "15.9988, -14.6273, -8.22055, 0.86", "15.4432, -16.1918, -10.1582, 0.86", "14.8037, -17.9922, -12.3881, 0.86", "14.1248, -19.9038, -14.7556, 0.86", "14.1084, -19.9499, -14.8127, 0.86" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-12.8592, -10.9019, 12.9943, 0.37", "-14.1396, -10.7362, 14.0866, 0.37", "-15.6109, -10.5459, 15.3417, 0.37", "-16.694, -10.4059, 16.2656, 0.37", "-17.4006, -10.3145, 16.8683, 0.37", "-19.2135, -10.08, 18.4148, 0.37", "-22.4746, -9.65824, 21.1968, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-12.8592, -10.9019, 12.9943, 0.37", "-14.1282, -11.1396, 12.598, 0.37", "-14.3175, -11.1811, 12.5457, 0.37", "-14.6638, -11.1556, 12.3314, 0.37", "-14.7853, -11.1361, 12.2498, 0.37", "-15.3492, -11.0278, 11.8719, 0.37", "-15.6837, -10.9601, 11.6608, 0.37", "-15.797, -10.9316, 11.5908, 0.37", "-17.9818, -10.3443, 10.3124, 0.37", "-18.4521, -10.2113, 10.0495, 0.37", "-18.6957, -10.1396, 9.92371, 0.37", "-19.2786, -9.95598, 9.6019, 0.37", "-19.5093, -9.90699, 9.444, 0.37", "-20.0138, -9.8738, 8.97179, 0.37", "-20.2112, -9.88432, 8.76837, 0.37", "-20.4981, -9.88766, 8.46285, 0.37", "-21.5456, -9.82183, 7.19795, 0.37", "-23.0115, -9.6048, 5.38243, 0.37", "-24.3674, -9.3295, 3.72449, 0.37", "-24.9804, -9.17832, 2.98062, 0.37", "-25.7425, -8.94972, 2.1001, 0.37", "-27.5126, -8.2746, 0.172116, 0.37", "-28.4075, -7.8355, -0.662396, 0.37", "-28.7961, -7.58305, -0.961557, 0.37", "-28.8877, -7.51063, -1.04972, 0.37", "-29.2676, -7.17477, -1.522, 0.37", "-29.8535, -6.65495, -2.34362, 0.49", "-30.1292, -6.41555, -2.83326, 0.74", "-30.3529, -6.258, -3.25858, 0.74", "-32.3946, -5.15095, -6.69733, 0.49", "-32.6609, -5.03666, -7.10475, 0.49", "-32.9835, -4.93346, -7.54605, 0.49", "-34.9467, -4.48271, -9.90318, 0.37", "-35.9872, -4.32431, -10.9667, 0.37", "-37.3106, -4.23056, -12.0202, 0.37", "-37.5694, -4.24036, -12.1361, 0.37", "-38.3358, -4.2856, -12.4448, 0.37", "-38.4772, -4.29496, -12.4855, 0.37", "-39.3062, -4.34901, -12.4881, 0.37", "-39.4421, -4.35762, -12.489, 0.37", "-40.5062, -4.56181, -12.5541, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "14.1084, -19.9499, -14.8127, 0.25", "13.4649, -21.6587, -14.5688, 0.25", "12.9957, -22.8941, -14.4065, 0.37", "12.4647, -24.2086, -14.2519, 0.37", "11.9281, -25.3897, -14.5217, 0.37", "11.5476, -26.1212, -14.8318, 0.37", "11.0521, -27.0046, -15.2289, 0.37", "11.0274, -27.0465, -15.2526, 0.37", "10.2017, -28.3282, -16.0774, 0.37", "7.64126, -31.9072, -18.7399, 0.37", "6.90286, -32.8532, -19.5311, 0.37", "5.87664, -34.1246, -20.6866, 0.37", "5.64577, -34.4146, -20.9663, 0.37", "5.59083, -34.4826, -21.0325, 0.37" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "14.1084, -19.9499, -14.8127, 0.61", "14.1123, -20.634, -17.2023, 0.61", "14.1666, -21.0936, -19.2598, 0.61", "14.1781, -21.2591, -20.2073, 0.61", "14.1789, -21.4642, -21.5771, 0.61", "14.0569, -21.9114, -24.7781, 0.61", "13.9848, -22.0249, -25.5202, 0.61", "13.9079, -22.0737, -26.0314, 0.61", "13.6352, -22.1606, -27.3262, 0.61", "13.5993, -22.1749, -27.4226, 0.61", "12.9629, -22.5969, -28.1794, 0.61", "12.1295, -23.413, -29.2134, 0.61", "11.9214, -23.7288, -29.763, 0.61", "11.8988, -23.7784, -29.8608, 0.61", "11.6778, -24.474, -31.2684, 0.61", "11.6272, -24.7024, -31.7437, 0.61", "11.3474, -26.4325, -35.6037, 0.61", "11.098, -28.0782, -39.4682, 0.61", "10.9555, -28.9492, -41.5659, 0.61", "10.842, -29.5645, -43.0943, 0.61", "10.6834, -30.41, -45.2553, 0.61", "10.4394, -31.8209, -48.6306, 0.61", "10.4072, -32.0124, -49.0211, 0.61", "10.3775, -32.237, -49.4367, 0.61", "10.3582, -32.5374, -49.985, 0.61", "10.3773, -33.0801, -50.9284, 0.61", "10.4422, -33.4162, -51.4116, 0.61", "10.5982, -33.9577, -52.1274, 0.61", "10.7244, -34.479, -52.9329, 0.61", "10.7111, -34.7972, -53.5405, 0.61", "10.6382, -35.0439, -54.1275, 0.61", "10.619, -35.0774, -54.2239, 0.61", "10.1322, -35.6891, -56.4299, 0.61", "10.1185, -35.7032, -56.4871, 0.61", "9.25075, -36.4216, -59.7739, 0.61", "8.66806, -36.8506, -61.9163, 0.61", "8.27176, -37.133, -63.4318, 0.61", "7.32981, -37.7314, -66.7122, 0.61", "7.27018, -37.7678, -66.9175, 0.61", "7.04528, -37.9042, -67.6997, 0.61", "6.35575, -38.2599, -70.0021, 0.61", "5.3102, -38.8235, -73.3961, 0.61", "4.85259, -39.0923, -74.9001, 0.61", "3.91122, -39.7008, -77.8861, 0.61", "3.65854, -39.8795, -78.7464, 0.61" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-22.4746, -9.65824, 21.1968, 0.37", "-21.5315, -9.15492, 21.5163, 0.37", "-21.147, -8.94974, 21.6466, 0.37", "-19.9207, -8.29526, 22.0621, 0.37", "-18.8905, -7.74541, 22.4112, 0.37", "-18.2573, -7.4075, 22.6257, 0.37", "-17.7102, -7.11552, 22.8111, 0.37", "-9.98002, -3.31472, 25.7258, 0.37", "-2.59445, 0.862679, 28.9359, 0.37", "4.36432, 5.90064, 31.6956, 0.37", "10.8701, 11.7598, 33.662, 0.37", "18.2242, 16.1524, 36.6171, 0.37", "24.9361, 21.9142, 38.1849, 0.37", "30.7289, 28.6806, 38.6261, 0.37", "36.7071, 35.2174, 39.7538, 0.37", "42.5752, 41.94, 39.4252, 0.37", "49.0924, 47.8138, 37.384, 0.37", "55.072, 54.309, 35.8599, 0.37", "62.0939, 59.2906, 33.0082, 0.37", "67.7106, 65.2179, 29.173, 0.37" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-22.4746, -9.65824, 21.1968, 0.25", "-23.1663, -9.44619, 22.4952, 0.25", "-23.8251, -9.24426, 23.7318, 0.25", "-24.11, -9.15694, 24.2666, 0.25", "-24.252, -9.11339, 24.5332, 0.37", "-26.5107, -8.42104, 28.7729, 0.37" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-40.5062, -4.56181, -12.5541, 0.25", "-41.5253, -4.3281, -12.7766, 0.25", "-42.2705, -4.14084, -12.9143, 0.25", "-43.3244, -3.93759, -13.1865, 0.25", "-43.5769, -3.89505, -13.2518, 0.25", "-44.0624, -3.81753, -13.4127, 0.25", "-44.9946, -3.67271, -13.7399, 0.25", "-45.8656, -3.54538, -14.0425, 0.61", "-48.0234, -3.26842, -14.8402, 0.25", "-49.2329, -3.15638, -15.3011, 0.49", "-51.0528, -3.00312, -16.0027, 0.12", "-51.7714, -2.94551, -16.2768, 0.12", "-52.5014, -2.88614, -16.5501, 0.12", "-52.6313, -2.88196, -16.5947, 0.12", "-53.3312, -2.86564, -16.7822, 0.12", "-53.4658, -2.86707, -16.8096, 0.12", "-54.3694, -2.93086, -16.8669, 0.12", "-54.4948, -2.94327, -16.8749, 0.12", "-55.1345, -3.00689, -16.916, 0.12", "-55.2711, -3.01682, -16.9246, 0.12", "-55.7946, -3.03556, -16.9573, 0.12", "-56.1849, -3.02236, -16.9809, 0.12", "-56.3109, -3.00919, -16.9883, 0.12", "-56.695, -2.93936, -17.01, 0.12", "-56.8167, -2.90629, -17.0165, 0.12", "-57.3123, -2.74408, -17.0931, 0.12", "-58.0814, -2.63509, -17.351, 0.12", "-58.1804, -2.65314, -17.4278, 0.12", "-58.2798, -2.67056, -17.5043, 0.12", "-58.3976, -2.68186, -17.5738, 0.12", "-59.0853, -2.73068, -17.9967, 0.12", "-60.3689, -2.82716, -18.8089, 0.49", "-62.0956, -3.0529, -19.8247, 0.61", "-63.5982, -3.26547, -20.6485, 0.61", "-65.3859, -3.50177, -21.5226, 0.25", "-66.8382, -3.6779, -22.1471, 0.25", "-66.9572, -3.69193, -22.1881, 0.25", "-68.9763, -3.90075, -22.7402, 0.25", "-69.2327, -3.93948, -22.7878, 0.37", "-70.3499, -4.19835, -23.0067, 0.61", "-70.6204, -4.27578, -23.0589, 0.61", "-72.1833, -4.69909, -23.2132, 0.12", "-72.2443, -4.71354, -23.2194, 0.61", "-73.9698, -4.99782, -23.4085, 0.61" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-40.5062, -4.56181, -12.5541, 0.25", "-39.5402, -6.72171, -12.6347, 0.25", "-39.498, -6.8159, -12.6382, 0.61", "-39.1334, -7.63116, -12.6687, 0.61", "-38.3589, -9.36275, -12.7334, 0.12" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "5.59083, -34.4826, -21.0325, 0.25", "4.73786, -36.9986, -20.8583, 0.25", "4.0825, -38.8445, -20.7307, 0.25", "3.41798, -40.6341, -20.6068, 0.25", "3.01414, -41.7076, -20.5327, 0.25", "2.50553, -43.0558, -20.44, 0.25", "2.06935, -44.3495, -20.2996, 0.25", "1.91715, -44.8298, -20.224, 0.25", "1.73043, -45.5575, -20.0666, 0.25", "1.6611, -45.9964, -19.9639, 0.25", "1.64246, -46.2222, -19.9105, 0.25", "1.63616, -48.5046, -19.3967, 0.25", "1.63334, -48.6595, -19.3659, 0.25", "1.60492, -49.1238, -19.2917, 0.25", "1.45017, -50.5198, -19.126, 0.25", "1.40302, -50.7696, -19.1066, 0.25", "1.22407, -51.4679, -19.0787, 0.25", "0.818479, -52.683, -19.0833, 0.37", "0.474761, -53.6465, -19.0696, 0.37", "0.112678, -54.6137, -19.0356, 0.37", "-0.46365, -56.0689, -18.9398, 0.37", "-0.822756, -56.9406, -18.8819, 0.37", "-0.927456, -57.1783, -18.8658, 0.37", "-1.24865, -57.8283, -18.8206, 0.37", "-1.30217, -57.9274, -18.8135, 0.37", "-1.63552, -58.4862, -18.7724, 0.37", "-1.71641, -58.6319, -18.762, 0.37", "-2.26829, -59.7434, -18.6845, 0.37", "-2.66642, -60.7398, -18.6188, 0.37", "-2.71383, -60.8982, -18.609, 0.37", "-2.95349, -61.9455, -18.4679, 0.37", "-3.13995, -62.8443, -18.3141, 0.37", "-3.16986, -62.9968, -18.2844, 0.37", "-3.31119, -63.7941, -18.1152, 0.37", "-3.62002, -65.8065, -17.6717, 0.37", "-3.9498, -68.0883, -17.1633, 0.37", "-4.07381, -68.9509, -16.9672, 0.37", "-4.09161, -69.0586, -16.9426, 0.37", "-4.27132, -69.9435, -16.7542, 0.37", "-4.43245, -70.5822, -16.6333, 0.37", "-4.58984, -71.1269, -16.5545, 0.37", "-4.75916, -71.5622, -16.526, 0.37", "-4.86813, -71.7887, -16.5103, 0.37", "-5.75179, -73.3779, -16.396, 0.37", "-6.30327, -74.1879, -16.3338, 0.37", "-6.40565, -74.3208, -16.3232, 0.37", "-7.40709, -75.5118, -16.2245, 0.37", "-8.00111, -76.2083, -16.1664, 0.37", "-8.53122, -76.8348, -16.1144, 0.37", "-9.06433, -77.4628, -16.0621, 0.37", "-9.14378, -77.5569, -16.0543, 0.37", "-9.70162, -78.2633, -15.9972, 0.37", "-10.1787, -78.9195, -15.9457, 0.37", "-10.6497, -79.6042, -15.8929, 0.37", "-11.2388, -80.4963, -15.8252, 0.37", "-11.2943, -80.594, -15.8181, 0.37", "-11.7557, -81.4671, -15.7562, 0.37", "-11.8006, -81.57, -15.7493, 0.37", "-12.1025, -82.4453, -15.6934, 0.37", "-12.1321, -82.5532, -15.6974, 0.37", "-12.3628, -83.424, -15.7844, 0.37", "-12.4096, -83.5877, -15.8073, 0.37", "-12.732, -84.6745, -15.9958, 0.37", "-13.0372, -85.6396, -16.1817, 0.37", "-13.5925, -87.2617, -16.5119, 0.37", "-13.7556, -87.682, -16.5983, 0.37", "-13.8196, -87.8254, -16.6256, 0.37", "-14.1684, -88.5557, -16.7284, 0.37", "-14.239, -88.6933, -16.7695, 0.37", "-14.5838, -89.5527, -17.1268, 0.37", "-14.6266, -89.6874, -17.1848, 0.37", "-14.8653, -90.7652, -17.6675, 0.37", "-15.0501, -91.8491, -18.1492, 0.37", "-15.4921, -94.5453, -19.3291, 0.37", "-15.9278, -96.9664, -20.4785, 0.37", "-16.0731, -97.6778, -20.8362, 0.37", "-16.5738, -99.8524, -21.9563, 0.25", "-16.8166, -100.757, -22.4206, 0.37", "-17.1519, -101.823, -22.9335, 0.37", "-17.9, -103.722, -23.6363, 0.37", "-18.253, -104.356, -23.8789, 0.37", "-18.4297, -104.62, -23.9871, 0.37", "-19.2088, -105.603, -24.3627, 0.37", "-19.3408, -105.778, -24.4236, 0.37", "-19.7912, -106.471, -24.5938, 0.37", "-20.429, -107.574, -24.7271, 0.37", "-20.5048, -107.719, -24.7511, 0.37", "-21.1112, -109.036, -24.8084, 0.37", "-21.1544, -109.139, -24.8036, 0.37", "-21.5902, -110.284, -24.6168, 0.37", "-21.6263, -110.386, -24.5868, 0.37", "-22.0577, -111.657, -23.7903, 0.37", "-22.7309, -113.609, -22.2261, 0.37", "-22.7911, -113.776, -22.0684, 0.37", "-23.012, -114.341, -21.4894, 0.37", "-23.1176, -114.592, -21.2035, 0.37", "-24.1731, -116.842, -18.4899, 0.37", "-24.3375, -117.151, -18.1024, 0.37", "-24.5561, -117.512, -17.691, 0.37", "-24.731, -117.78, -17.4224, 0.37", "-25.6973, -119.122, -16.3787, 0.37", "-25.8474, -119.303, -16.2921, 0.37", "-26.4758, -119.853, -16.2729, 0.37", "-26.576, -119.928, -16.2778, 0.37", "-27.747, -120.707, -16.4084, 0.25", "-28.7522, -121.324, -16.5735, 0.12", "-29.7033, -121.871, -16.7811, 0.12", "-30.7568, -122.486, -16.9695, 0.12", "-31.2563, -122.793, -17.0533, 0.25", "-31.3592, -122.862, -17.0721, 0.25", "-31.9643, -123.288, -17.176, 0.25", "-32.4651, -123.679, -17.1284, 0.25", "-32.559, -123.757, -17.1028, 0.25", "-33.5796, -124.61, -16.6675, 0.25", "-34.0056, -124.949, -16.4471, 0.25", "-34.842, -125.584, -15.9716, 0.37", "-36.8054, -127.021, -14.8036, 0.37", "-36.8898, -127.083, -14.7536, 0.37", "-37.5178, -127.54, -14.3746, 0.37", "-37.6295, -127.624, -14.3049, 0.37", "-38.1726, -128.054, -13.9941, 0.37", "-38.9948, -128.702, -13.5061, 0.37", "-39.5618, -129.128, -13.2144, 0.37", "-39.6526, -129.197, -13.1625, 0.37", "-40.1798, -129.591, -12.8081, 0.37", "-41.1019, -130.25, -12.0989, 0.25", "-42.1359, -130.92, -11.0942, 0.25", "-42.1754, -130.942, -11.0436, 0.25" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "5.59083, -34.4826, -21.0325, 0.37", "4.08739, -34.7206, -20.3518, 0.37", "3.47589, -34.8747, -20.0285, 0.37", "2.70249, -35.1284, -19.5488, 0.37", "2.04997, -35.371, -19.1156, 0.25", "0.712581, -35.9221, -18.2118, 0.25", "-0.351949, -36.3895, -17.4887, 0.25", "-1.04103, -36.7571, -16.9737, 0.25", "-1.79288, -37.1535, -16.5444, 0.25", "-1.93032, -37.2197, -16.4918, 0.25", "-2.59771, -37.5139, -16.3158, 0.25", "-2.75448, -37.5728, -16.2919, 0.25", "-4.0475, -37.9967, -16.1615, 0.25", "-7.32107, -38.9047, -15.899, 0.25", "-9.4806, -39.3923, -15.6732, 0.25", "-9.60187, -39.413, -15.6569, 0.25", "-10.8723, -39.5502, -15.4561, 0.25", "-10.9281, -39.5522, -15.4432, 0.25", "-12.1508, -39.4915, -15.0565, 0.25", "-14.3793, -39.173, -14.147, 0.25", "-15.4803, -39.0397, -13.6198, 0.25", "-16.1145, -39.0442, -13.2306, 0.25", "-18.0333, -39.3551, -11.8541, 0.25", "-18.1445, -39.3785, -11.7703, 0.25", "-18.952, -39.6263, -11.0982, 0.25", "-20.2935, -40.2464, -9.88989, 0.25", "-22.5097, -41.5802, -7.68877, 0.25", "-23.7944, -42.5329, -6.34246, 0.25" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "3.65854, -39.8795, -78.7464, 0.25", "5.99978, -41.0316, -81.63, 0.25", "7.18647, -41.7891, -83.4994, 0.25", "8.01513, -42.334, -84.9422, 0.37", "9.09257, -42.9147, -86.6531, 0.49", "9.80919, -43.3479, -87.8292, 0.49", "10.4753, -43.7728, -89.1735, 0.25", "12.1835, -44.9039, -92.9208, 0.61", "12.7778, -45.3149, -94.3081, 0.61", "14.0797, -46.1848, -97.2775, 0.61", "16.6798, -47.8526, -103.072, 0.37", "20.4805, -50.2087, -111.304, 0.37", "21.0398, -50.5292, -112.486, 0.37", "21.0923, -50.5615, -112.595, 0.37", "21.5901, -50.8959, -113.662, 0.37", "21.6419, -50.9302, -113.772, 0.37", "23.9721, -52.2801, -117.892, 0.37", "25.2251, -53.1467, -119.905, 0.37", "26.7014, -54.3434, -122.464, 0.37", "26.7675, -54.4035, -122.583, 0.37", "28.9019, -56.4991, -126.59, 0.37", "30.436, -58.1726, -129.442, 0.37", "32.7389, -60.851, -133.604, 0.37", "33.9191, -62.396, -135.82, 0.37", "35.2284, -64.273, -138.388, 0.37", "35.2733, -64.3422, -138.481, 0.37", "36.377, -66.3109, -140.99, 0.37", "37.9776, -69.5608, -145.192, 0.37", "39.815, -73.9509, -150.856, 0.37", "40.5866, -75.9982, -153.68, 0.37", "41.2975, -77.9695, -156.561, 0.37", "41.8016, -79.3789, -158.737, 0.37", "42.5417, -81.3225, -162.033, 0.37", "43.0809, -82.5619, -164.289, 0.37", "44.3459, -84.9644, -169.266, 0.37", "45.0334, -86.0449, -171.749, 0.37", "45.2227, -86.2751, -172.33, 0.37", "46.2574, -87.033, -174.718, 0.37", "47.6232, -87.6189, -176.869, 0.25" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "3.65854, -39.8795, -78.7464, 0.37", "1.99242, -39.5092, -79.6764, 0.37", "0.251264, -39.1832, -80.5742, 0.37", "-0.439089, -39.0701, -80.9085, 0.37", "-0.971956, -38.9819, -81.2079, 0.37", "-1.39015, -38.9143, -81.4517, 0.37", "-1.62961, -38.873, -81.5909, 0.37", "-1.84914, -38.8516, -81.7587, 0.37", "-1.94251, -38.846, -81.8337, 0.37", "-3.3077, -38.8294, -83.1142, 0.37", "-3.64571, -38.84, -83.4671, 0.37", "-3.95337, -38.8552, -83.7901, 0.37", "-5.39544, -38.9566, -85.2363, 0.37", "-5.82651, -39.0012, -85.6702, 0.37", "-5.90649, -39.015, -85.7578, 0.37", "-7.30548, -39.3511, -87.3361, 0.37", "-7.62384, -39.4341, -87.698, 0.37", "-7.97917, -39.5317, -88.0974, 0.37", "-8.39725, -39.6373, -88.6059, 0.37", "-9.87585, -39.9981, -90.591, 0.37", "-10.0209, -40.0339, -90.791, 0.37", "-10.4747, -40.1454, -91.403, 0.37", "-10.5168, -40.155, -91.4577, 0.37", "-12.1937, -40.4474, -93.4112, 0.37", "-12.3969, -40.4726, -93.5983, 0.37", "-12.8157, -40.4891, -93.8815, 0.37", "-13.6384, -40.4915, -94.391, 0.37", "-13.745, -40.4985, -94.4647, 0.37", "-14.7771, -40.6886, -95.3082, 0.37", "-15.3242, -40.835, -95.7807, 0.37", "-15.9076, -41.025, -96.479, 0.37", "-16.0215, -41.0659, -96.6368, 0.37", "-17.4018, -41.5642, -98.696, 0.37", "-18.5902, -42.0012, -100.54, 0.37", "-18.7098, -42.0422, -100.743, 0.37", "-20.1167, -42.43, -103.348, 0.37", "-20.339, -42.4735, -103.782, 0.37", "-20.6611, -42.482, -104.405, 0.37", "-20.7179, -42.4703, -104.51, 0.37", "-21.4589, -42.2101, -105.822, 0.37", "-22.0085, -41.9938, -106.808, 0.37", "-22.2725, -41.88, -107.264, 0.37", "-23.4616, -41.3814, -109.342, 0.37", "-23.6914, -41.2969, -109.713, 0.37", "-24.2752, -41.1341, -110.573, 0.37", "-24.9865, -40.99, -111.52, 0.37", "-26.7339, -40.7109, -113.642, 0.37", "-26.813, -40.7007, -113.731, 0.37", "-27.4703, -40.6715, -114.466, 0.37", "-28.9805, -40.7888, -116.214, 0.37", "-29.0575, -40.8051, -116.304, 0.37", "-29.4803, -40.9494, -116.752, 0.37", "-29.5574, -40.9849, -116.836, 0.37", "-30.8061, -41.5308, -118.273, 0.37", "-31.2301, -41.6883, -118.738, 0.37", "-31.3234, -41.7144, -118.824, 0.37", "-31.7876, -41.8061, -119.204, 0.37", "-33.662, -42.0142, -120.719, 0.37", "-33.8821, -42.0249, -120.887, 0.37", "-34.9142, -42.0013, -121.533, 0.37", "-35.1222, -41.9921, -121.65, 0.37", "-35.776, -41.9631, -121.994, 0.37", "-38.2185, -41.8594, -123.126, 0.37", "-38.3392, -41.8569, -123.174, 0.37", "-39.8228, -41.818, -123.736, 0.37", "-42.3546, -41.7298, -124.644, 0.37", "-42.4787, -41.7242, -124.682, 0.37", "-43.6357, -41.7003, -125.061, 0.37", "-43.7503, -41.7001, -125.097, 0.37", "-44.5762, -41.7237, -125.413, 0.37", "-44.8994, -41.7502, -125.591, 0.37", "-45.7925, -41.8761, -126.234, 0.37", "-47.7995, -42.216, -128.115, 0.37", "-47.8804, -42.2295, -128.202, 0.37", "-47.9597, -42.2417, -128.291, 0.37", "-48.4777, -42.3165, -128.854, 0.37", "-49.3397, -42.4103, -129.722, 0.37", "-50.4101, -42.4705, -130.613, 0.37", "-51.3115, -42.3851, -131.047, 0.37", "-51.531, -42.3554, -131.138, 0.37", "-52.6571, -42.2153, -131.651, 0.37", "-52.7749, -42.2012, -131.703, 0.37", "-53.5707, -42.113, -132.037, 0.37", "-55.2318, -41.955, -132.782, 0.37", "-55.6446, -41.9239, -132.999, 0.37", "-57.7229, -41.7417, -134.265, 0.37", "-58.1264, -41.7026, -134.538, 0.37", "-59.1241, -41.6174, -135.229, 0.37", "-60.1335, -41.5323, -135.92, 0.37", "-60.9963, -41.4773, -136.506, 0.37", "-62.1715, -41.3549, -137.112, 0.37", "-62.3951, -41.3191, -137.187, 0.37", "-63.2842, -41.1678, -137.438, 0.37", "-64.2783, -41.002, -137.696, 0.37", "-64.7892, -40.9301, -137.804, 0.37", "-66.7144, -40.7441, -138.224, 0.37", "-66.8585, -40.7375, -138.254, 0.37", "-67.638, -40.7204, -138.513, 0.37", "-68.863, -40.7896, -139.084, 0.37", "-69.9363, -40.9101, -139.676, 0.37", "-70.3682, -40.9638, -139.933, 0.37", "-71.0712, -41.0589, -140.398, 0.37", "-71.923, -41.162, -140.917, 0.37", "-73.5245, -41.3358, -141.776, 0.37", "-73.63, -41.3459, -141.832, 0.37", "-74.9801, -41.4699, -142.613, 0.37", "-75.1997, -41.482, -142.732, 0.37", "-75.7713, -41.4976, -143.05, 0.37", "-75.992, -41.4971, -143.167, 0.37", "-78.0894, -41.4158, -144.299, 0.37", "-78.1497, -41.4135, -144.334, 0.37", "-79.9943, -41.3487, -145.546, 0.37", "-81.3666, -41.3072, -146.536, 0.37", "-81.7293, -41.3004, -146.849, 0.37", "-81.9308, -41.2955, -147.038, 0.37", "-82.6189, -41.2706, -147.705, 0.37", "-83.5307, -41.2482, -148.682, 0.37", "-83.5761, -41.2492, -148.735, 0.37", "-85.1716, -41.2881, -150.446, 0.37", "-85.6036, -41.3, -150.894, 0.37", "-86.2267, -41.2953, -151.484, 0.37", "-86.8749, -41.2522, -152.069, 0.37", "-87.7179, -41.1873, -152.758, 0.37", "-88.5973, -41.1129, -153.44, 0.37", "-88.6901, -41.1053, -153.515, 0.37", "-89.3463, -41.0605, -154.091, 0.37", "-90.7627, -40.948, -155.463, 0.37", "-91.6506, -40.8551, -156.339, 0.37", "-91.7403, -40.8433, -156.432, 0.37", "-92.9599, -40.7119, -157.649, 0.37", "-93.4926, -40.66, -158.157, 0.37", "-94.2819, -40.6034, -158.823, 0.37", "-94.5695, -40.5705, -159.033, 0.37", "-94.9513, -40.5126, -159.351, 0.37", "-95.1393, -40.4895, -159.513, 0.37", "-95.517, -40.4515, -159.821, 0.37", "-96.6067, -40.4069, -160.642, 0.37", "-97.1556, -40.4088, -161.021, 0.37", "-98.5704, -40.4662, -162.141, 0.37", "-99.5383, -40.536, -162.912, 0.37", "-100.025, -40.5709, -163.276, 0.37", "-101.259, -40.6564, -164.153, 0.37", "-101.359, -40.6624, -164.217, 0.37", "-103.909, -40.7204, -165.465, 0.37", "-105.226, -40.6921, -165.908, 0.37", "-106.441, -40.5829, -166.172, 0.37", "-106.559, -40.5645, -166.184, 0.37", "-107.165, -40.4357, -166.195, 0.37", "-108.943, -39.9825, -165.995, 0.25", "-109.394, -39.8328, -165.835, 0.25", "-110.148, -39.5243, -165.516, 0.25", "-111.814, -38.8358, -164.748, 0.25" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "67.7106, 65.2179, 29.173, 0.25", "75.7323, 72.0368, 29.9415, 0.25" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "67.7106, 65.2179, 29.173, 0.25", "73.6975, 70.3399, 29.6438, 0.25", "78.1415, 76.7145, 30.2603, 0.25", "81.6436, 83.4041, 32.0666, 0.25", "84.6619, 90.2551, 34.0688, 0.25", "88.6562, 96.5187, 36.4406, 0.25", "91.6362, 103.294, 38.7575, 0.25" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-26.5107, -8.42104, 28.7729, 0.37", "-26.461, -9.28546, 29.1889, 0.37", "-26.3657, -10.9407, 29.9854, 0.37", "-26.3128, -11.8595, 30.4275, 0.37", "-26.1978, -13.8572, 31.3888, 0.37", "-26.1519, -14.6537, 31.7721, 0.37", "-26.321, -22.9257, 36.9853, 0.37", "-27.7195, -30.5804, 42.9665, 0.37", "-29.6577, -37.98, 49.1339, 0.37", "-30.5697, -44.465, 56.5667, 0.37", "-30.2322, -50.7646, 64.2351, 0.37", "-28.7628, -56.2402, 72.4412, 0.37", "-28.1421, -59.9068, 81.7391, 0.37", "-25.8964, -63.3241, 90.886, 0.37", "-23.6897, -67.3767, 99.7716, 0.37", "-21.6743, -72.6078, 108.035, 0.37", "-19.2198, -78.4827, 115.699, 0.37" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-26.5107, -8.42104, 28.7729, 0.37", "-27.4232, -8.35449, 29.3702, 0.37", "-27.5145, -8.34784, 29.43, 0.37", "-28.0592, -8.30811, 29.7865, 0.37", "-29.8021, -8.181, 30.9273, 0.37", "-36.5806, -8.40588, 36.9617, 0.37" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-73.9698, -4.99782, -23.4085, 0.25", "-75.3844, -4.94381, -24.0403, 0.25", "-76.7448, -4.88265, -24.5937, 0.25", "-76.8281, -4.88327, -24.6248, 0.25", "-78.2402, -4.9996, -25.2473, 0.25", "-80.1675, -5.22192, -26.1482, 0.25", "-82.6463, -5.56307, -27.3369, 0.25", "-83.3801, -5.67359, -27.7067, 0.49", "-84.5569, -5.8957, -28.3105, 0.49", "-86.9506, -6.46737, -29.4958, 0.12", "-87.4241, -6.62189, -29.7201, 0.12", "-87.6499, -6.71618, -29.8088, 0.12", "-89.1083, -7.46861, -30.3966, 0.12", "-89.2106, -7.52142, -30.4445, 0.12", "-89.8689, -7.79999, -30.7264, 0.12", "-90.2777, -7.96772, -30.8403, 0.12", "-90.3531, -7.99711, -30.8753, 0.12", "-90.9996, -8.22894, -31.2372, 0.12", "-91.9672, -8.55889, -31.8564, 0.12", "-92.6919, -8.78982, -32.3257, 0.12", "-93.9323, -9.17486, -33.1375, 0.12", "-95.3661, -9.71274, -34.1117, 0.12", "-96.1694, -10.1026, -34.6713, 0.12", "-96.2056, -10.1276, -34.6973, 0.12", "-96.4325, -10.3508, -34.855, 0.49", "-96.7146, -10.7331, -35.0822, 0.49", "-97.1779, -11.7254, -35.5399, 0.61", "-97.3124, -12.2036, -35.6579, 0.61", "-97.4244, -12.8798, -35.834, 0.61", "-97.4528, -13.0547, -35.8818, 0.61" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-73.9698, -4.99782, -23.4085, 0.12", "-74.3518, -2.81471, -25.6577, 0.12", "-74.3324, -1.10662, -27.723, 0.25", "-73.9389, 1.47861, -31.1619, 0.25", "-73.353, 2.63304, -33.1806, 0.25", "-72.3145, 4.67918, -36.7587, 0.25", "-71.5613, 6.16323, -39.3538, 0.25", "-71.2852, 6.35395, -39.8523, 0.25", "-71.0649, 6.39952, -40.1425, 0.25", "-68.336, 6.15718, -43.1416, 0.25" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-36.5806, -8.40588, 36.9617, 0.25", "-45.1201, -8.59859, 43.6359, 0.25", "-54.5561, -10.282, 48.6758, 0.25", "-63.7086, -11.7539, 54.2809, 0.25", "-73.0963, -12.5517, 59.6388, 0.25", "-81.1764, -14.3726, 66.6168, 0.25", "-87.8732, -16.6411, 74.8144, 0.25", "-94.2477, -17.5921, 83.5297, 0.25", "-99.8165, -18.5821, 92.7767, 0.25", "-104.987, -17.935, 102.272, 0.25", "-112.539, -17.1909, 110.002, 0.25", "-117.961, -15.2173, 119.138, 0.25", "-124.304, -13.0102, 127.598, 0.25", "-130.414, -10.208, 136.029, 0.25", "-135.68, -6.59153, 144.676, 0.25" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-36.5806, -8.40588, 36.9617, 0.25", "-42.1572, -8.77566, 40.8274, 0.25", "-47.9378, -8.91831, 44.3983, 0.25", "-53.2933, -9.13801, 48.5767, 0.25", "-58.8919, -8.67227, 52.3983, 0.25", "-65.2731, -8.66897, 54.7354, 0.25" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-97.4528, -13.0547, -35.8818, 0.12", "-99.6258, -14.6252, -36.474, 0.12", "-103.533, -17.2482, -37.4484, 0.12", "-104.816, -18.0761, -37.7532, 0.12", "-107.338, -19.6577, -38.3311, 0.12", "-110.353, -21.4518, -39.0787, 0.12", "-112.435, -22.6364, -39.6123, 0.12", "-114.825, -23.8729, -40.2233, 0.12", "-116.845, -24.7759, -40.7137, 0.12", "-118.638, -25.5001, -41.1563, 0.12", "-120.726, -26.2622, -41.6792, 0.12", "-123.161, -27.0479, -42.27, 0.12", "-124.616, -27.4691, -42.596, 0.12", "-126.621, -28.0117, -43.0025, 0.12", "-127.995, -28.371, -43.2429, 0.12", "-130.53, -29.0934, -43.6237, 0.12", "-132.334, -29.6994, -43.8607, 0.12", "-134.611, -30.5494, -44.1833, 0.12", "-136.12, -31.1441, -44.3957, 0.12", "-137.674, -31.7718, -44.6029, 0.12", "-140.626, -32.9769, -44.9662, 0.12", "-143.007, -33.9372, -45.2537, 0.12", "-145.166, -34.7489, -45.5752, 0.12", "-148.43, -35.9106, -46.1413, 0.12", "-151.582, -36.9877, -46.7529, 0.12", "-153.919, -37.7379, -47.2292, 0.12", "-155.345, -38.134, -47.5011, 0.12", "-157.936, -38.8266, -47.9796, 0.12", "-159.754, -39.3517, -48.3156, 0.12", "-162.746, -40.3248, -48.8757, 0.12", "-165.902, -41.4197, -49.4319, 0.12", "-170.325, -42.9899, -50.1204, 0.12", "-172.856, -43.9801, -50.3155, 0.12", "-176.729, -45.5527, -50.4849, 0.12", "-179.625, -46.7187, -50.5701, 0.12", "-182.36, -47.8478, -50.6048, 0.12", "-184.696, -48.9126, -50.6004, 0.12", "-189.408, -51.3544, -50.4395, 0.12" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-97.4528, -13.0547, -35.8818, 0.61", "-97.4484, -13.1278, -36.0314, 0.61", "-97.4715, -14.9049, -39.2145, 0.12", "-97.4912, -15.4562, -40.1342, 0.12", "-97.5321, -16.2765, -41.3849, 0.12", "-97.5344, -16.3576, -41.5004, 0.12", "-97.5434, -16.8861, -42.2064, 0.12", "-97.5576, -18.5775, -44.1866, 0.12", "-97.5628, -18.7756, -44.3669, 0.12", "-97.5845, -19.2386, -44.8322, 0.12", "-97.5651, -19.5577, -45.1933, 0.12", "-97.5383, -19.8184, -45.4941, 0.12", "-97.3803, -20.5503, -46.353, 0.61", "-97.3663, -20.6109, -46.3943, 0.61" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_14", "dend_9", "dend_1", "dend_0", "dend_17", "dend_15", "dend_13", "dend_10", "dend_5", "dend_2", "dend_36", "dend_35", "dend_18", "dend_16", "dend_12", "dend_11", "dend_8", "dend_7", "dend_6", "dend_4", "dend_3", "dend_37", "dend_26", "dend_19", "dend_41", "dend_38", "dend_32", "dend_27", "dend_21", "dend_20", "dend_43", "dend_42", "dend_40", "dend_39", "dend_34", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_30", "dend_29", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_14", "dend_9", "dend_1", "dend_0", "dend_17", "dend_15", "dend_13", "dend_10", "dend_5", "dend_2", "dend_36", "dend_35", "dend_18", "dend_16", "dend_12", "dend_11", "dend_8", "dend_7", "dend_6", "dend_4", "dend_3", "dend_37", "dend_26", "dend_19", "dend_41", "dend_38", "dend_32", "dend_27", "dend_21", "dend_20", "dend_43", "dend_42", "dend_40", "dend_39", "dend_34", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_30", "dend_29", "dend_25", "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_3", "dend_3", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_SBC_28362da21f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_17, id: dend_17, parent: dend_14
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_36, id: dend_36, parent: dend_17
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_17
create dend_35
public dend_35
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_5
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_26, id: dend_26, parent: dend_18
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_14, dend_9, dend_1, dend_0, dend_17, dend_15, dend_13, dend_10, dend_5, dend_2, dend_36, dend_35, dend_18, dend_16, dend_12, dend_11, dend_8, dend_7, dend_6, dend_4, dend_3, dend_37, dend_26, dend_19, dend_41, dend_38, dend_32, dend_27, dend_21, dend_20, dend_43, dend_42, dend_40, dend_39, dend_34, dend_33, dend_31, dend_28, dend_23, dend_22, dend_30, dend_29, dend_25, dend_24]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_14, dend_9, dend_1, dend_0, dend_17, dend_15, dend_13, dend_10, dend_5, dend_2, dend_36, dend_35, dend_18, dend_16, dend_12, dend_11, dend_8, dend_7, dend_6, dend_4, dend_3, dend_37, dend_26, dend_19, dend_41, dend_38, dend_32, dend_27, dend_21, dend_20, dend_43, dend_42, dend_40, dend_39, dend_34, dend_33, dend_31, dend_28, dend_23, dend_22, dend_30, dend_29, dend_25, dend_24]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_20
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_4, dend_4, dend_3, dend_3, dend_37, dend_37, dend_37, dend_37, dend_37, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_14(0), soma_0(0.4999997985386903)
    connect dend_9(0), soma_0(0.4999997985386903)
    connect dend_1(0), soma_0(0.4999997985386903)
    connect dend_0(0), soma_0(0.4999997985386903)
    connect axon_0(0), soma_0(1.0)
    connect dend_17(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_36(0), dend_17(1.0)
    connect dend_35(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_5(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_26(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.71, 1.11579, -0.00859741, 2.90178 ) }
    soma_0 { pt3dadd( -7.75017, 1.02312, -0.00771382, 4.8142 ) }
    soma_0 { pt3dadd( -6.79033, 0.930461, -0.00683022, 6.51513 ) }
    soma_0 { pt3dadd( -5.8305, 0.837797, -0.00594662, 7.8517 ) }
    soma_0 { pt3dadd( -4.87066, 0.745134, -0.00506303, 9.02606 ) }
    soma_0 { pt3dadd( -3.91083, 0.652471, -0.00417943, 9.72934 ) }
    soma_0 { pt3dadd( -2.95099, 0.559807, -0.00329584, 10.1232 ) }
    soma_0 { pt3dadd( -1.99116, 0.467144, -0.00241224, 10.5862 ) }
    soma_0 { pt3dadd( -1.03132, 0.37448, -0.00152864, 11.0213 ) }
    soma_0 { pt3dadd( -0.071489, 0.281817, -6.45048E-4, 11.2361 ) }
    soma_0 { pt3dadd( 0.888346, 0.189153, 2.38549E-4, 11.4245 ) }
    soma_0 { pt3dadd( 1.84818, 0.0964897, 0.00112214, 11.5484 ) }
    soma_0 { pt3dadd( 2.80802, 0.00382618, 0.00200574, 11.556 ) }
    soma_0 { pt3dadd( 3.76785, -0.0888373, 0.00288934, 11.5027 ) }
    soma_0 { pt3dadd( 4.72769, -0.181501, 0.00377293, 11.3177 ) }
    soma_0 { pt3dadd( 5.68752, -0.274164, 0.00465653, 11.0697 ) }
    soma_0 { pt3dadd( 6.64736, -0.366828, 0.00554013, 10.8396 ) }
    soma_0 { pt3dadd( 7.60719, -0.459491, 0.00642372, 10.3557 ) }
    soma_0 { pt3dadd( 8.56703, -0.552155, 0.00730732, 9.07032 ) }
    soma_0 { pt3dadd( 9.52686, -0.644818, 0.00819091, 7.06538 ) }
    soma_0 { pt3dadd( 10.4867, -0.737482, 0.00907451, 4.33074 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 21/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 8.89711, -4.23213, -3.53401, 1.84 ) }
    dend_14 { pt3dadd( 9.94159, -4.86325, -3.6508, 1.84 ) }
    dend_14 { pt3dadd( 10.0778, -4.94551, -3.66603, 1.84 ) }
    dend_14 { pt3dadd( 11.645, -5.89246, -3.84126, 1.84 ) }
    dend_14 { pt3dadd( 13.236, -6.8538, -4.01916, 2.09 ) }
    dend_14 { pt3dadd( 15.0674, -7.96039, -4.22393, 2.34 ) }
    dend_14 { pt3dadd( 15.5155, -8.23115, -4.27404, 2.34 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 28/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -8.94289, -0.356133, 11.726, 1.72 ) }
    dend_9 { pt3dadd( -9.25134, -0.384712, 11.9615, 1.72 ) }
    dend_9 { pt3dadd( -9.90575, -0.38607, 12.3608, 1.72 ) }
    dend_9 { pt3dadd( -12.2875, -0.212054, 13.5903, 1.35 ) }
    dend_9 { pt3dadd( -13.2971, -0.0396619, 14.0235, 1.23 ) }
    dend_9 { pt3dadd( -14.0956, 0.13681, 14.2904, 1.23 ) }
    dend_9 { pt3dadd( -15.2982, 0.463992, 14.5953, 1.23 ) }
    dend_9 { pt3dadd( -16.0512, 0.739309, 14.6918, 1.23 ) }
    dend_9 { pt3dadd( -16.6673, 1.01808, 14.6656, 1.23 ) }
    dend_9 { pt3dadd( -17.7786, 1.5897, 14.4348, 1.23 ) }
    dend_9 { pt3dadd( -18.5217, 1.99885, 14.239, 1.23 ) }
    dend_9 { pt3dadd( -19.3636, 2.44166, 13.9398, 1.23 ) }
    dend_9 { pt3dadd( -20.3455, 2.88871, 13.5478, 1.35 ) }
    dend_9 { pt3dadd( -21.2907, 3.243, 13.1657, 1.35 ) }
    dend_9 { pt3dadd( -22.3665, 3.56156, 12.789, 1.35 ) }
    dend_9 { pt3dadd( -23.7021, 3.82757, 12.41, 1.11 ) }
    dend_9 { pt3dadd( -25.3187, 4.03829, 12.0642, 1.11 ) }
    dend_9 { pt3dadd( -26.6785, 4.15278, 11.7979, 1.11 ) }
    dend_9 { pt3dadd( -27.6871, 4.18875, 11.6346, 1.11 ) }
    dend_9 { pt3dadd( -29.1314, 4.16566, 11.4902, 1.11 ) }
    dend_9 { pt3dadd( -30.5657, 4.04488, 11.42, 1.48 ) }
    dend_9 { pt3dadd( -31.0409, 3.97451, 11.4555, 1.6 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 50/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.57711, 5.42937, -6.53401, 1.23 ) }
    dend_1 { pt3dadd( 6.72842, 5.69373, -6.50486, 1.23 ) }
    dend_1 { pt3dadd( 7.24523, 6.59715, -6.43143, 1.11 ) }
    dend_1 { pt3dadd( 7.67242, 7.34391, -6.37072, 1.11 ) }
    dend_1 { pt3dadd( 8.19371, 8.25518, -6.29665, 1.11 ) }
    dend_1 { pt3dadd( 9.29103, 10.1734, -6.14073, 1.11 ) }
    dend_1 { pt3dadd( 9.88709, 11.2154, -6.05603, 1.23 ) }
    dend_1 { pt3dadd( 10.7213, 12.6963, -5.97792, 1.6 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 10.0471, 0.859867, -9.80401, 0.74 ) }
    dend_0 { pt3dadd( 10.1564, 0.881313, -9.74855, 0.74 ) }
    dend_0 { pt3dadd( 11.1658, 1.07736, -9.19463, 0.74 ) }
    dend_0 { pt3dadd( 11.2125, 1.0832, -9.18036, 0.74 ) }
    dend_0 { pt3dadd( 12.4585, 1.19974, -8.939, 0.74 ) }
    dend_0 { pt3dadd( 12.5819, 1.20863, -8.92462, 0.74 ) }
    dend_0 { pt3dadd( 13.3932, 1.25804, -8.86261, 0.74 ) }
    dend_0 { pt3dadd( 13.5334, 1.26198, -8.87186, 0.74 ) }
    dend_0 { pt3dadd( 15.4, 1.19437, -9.27899, 0.74 ) }
    dend_0 { pt3dadd( 15.439, 1.19116, -9.29481, 0.74 ) }
    dend_0 { pt3dadd( 16.0351, 1.11452, -9.63629, 0.74 ) }
    dend_0 { pt3dadd( 16.1065, 1.10209, -9.67968, 0.74 ) }
    dend_0 { pt3dadd( 17.0315, 0.903889, -10.281, 0.74 ) }
    dend_0 { pt3dadd( 17.2976, 0.846731, -10.4325, 0.74 ) }
    dend_0 { pt3dadd( 18.5168, 0.67539, -10.9723, 0.74 ) }
    dend_0 { pt3dadd( 18.7032, 0.670523, -11.0486, 0.74 ) }
    dend_0 { pt3dadd( 19.385, 0.739805, -11.3252, 0.74 ) }
    dend_0 { pt3dadd( 19.4629, 0.755233, -11.3545, 0.74 ) }
    dend_0 { pt3dadd( 20.482, 1.09773, -11.684, 0.74 ) }
    dend_0 { pt3dadd( 21.446, 1.50999, -11.989, 0.74 ) }
    dend_0 { pt3dadd( 22.3966, 2.03793, -12.2898, 0.74 ) }
    dend_0 { pt3dadd( 23.2473, 2.58208, -12.6174, 0.74 ) }
    dend_0 { pt3dadd( 23.3812, 2.68406, -12.6819, 0.74 ) }
    dend_0 { pt3dadd( 24.2303, 3.40226, -13.1685, 0.74 ) }
    dend_0 { pt3dadd( 24.3137, 3.4804, -13.225, 0.74 ) }
    dend_0 { pt3dadd( 24.941, 4.06582, -13.719, 0.74 ) }
    dend_0 { pt3dadd( 25.2376, 4.29526, -14.0729, 0.74 ) }
    dend_0 { pt3dadd( 25.5909, 4.50083, -14.6495, 0.74 ) }
    dend_0 { pt3dadd( 25.6284, 4.5114, -14.732, 0.74 ) }
    dend_0 { pt3dadd( 26.0818, 4.48586, -15.9817, 0.74 ) }
    dend_0 { pt3dadd( 26.2757, 4.44437, -16.553, 0.74 ) }
    dend_0 { pt3dadd( 27.1169, 4.08242, -19.1994, 0.74 ) }
    dend_0 { pt3dadd( 27.152, 4.06517, -19.3125, 0.74 ) }
    dend_0 { pt3dadd( 27.4395, 3.88084, -20.3343, 0.74 ) }
    dend_0 { pt3dadd( 27.4909, 3.84754, -20.551, 0.74 ) }
    dend_0 { pt3dadd( 27.5662, 3.77054, -21.0821, 0.74 ) }
    dend_0 { pt3dadd( 27.5827, 3.78577, -21.1989, 0.74 ) }
    dend_0 { pt3dadd( 27.5964, 4.12658, -21.4467, 0.74 ) }
    dend_0 { pt3dadd( 27.5963, 4.30663, -21.5784, 0.74 ) }
    dend_0 { pt3dadd( 27.6232, 4.91355, -22.1455, 0.74 ) }
    dend_0 { pt3dadd( 27.6421, 5.01026, -22.2783, 0.74 ) }
    dend_0 { pt3dadd( 27.7676, 5.37096, -22.9501, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 27.9177, 5.61849, -23.5152, 0.74 ) }
    dend_0 { pt3dadd( 28.0368, 5.73404, -23.8999, 0.74 ) }
    dend_0 { pt3dadd( 28.5777, 6.0728, -25.3553, 0.74 ) }
    dend_0 { pt3dadd( 28.9696, 6.22082, -26.2839, 0.74 ) }
    dend_0 { pt3dadd( 29.0401, 6.24166, -26.4586, 0.74 ) }
    dend_0 { pt3dadd( 29.2654, 6.30891, -27.0177, 0.74 ) }
    dend_0 { pt3dadd( 29.6881, 6.46442, -28.1974, 0.74 ) }
    dend_0 { pt3dadd( 29.8239, 6.55462, -28.6771, 0.74 ) }
    dend_0 { pt3dadd( 29.8327, 6.56524, -28.7241, 0.74 ) }
    dend_0 { pt3dadd( 30.0166, 6.99275, -30.4591, 0.74 ) }
    dend_0 { pt3dadd( 30.0598, 7.13868, -31.1287, 0.74 ) }
    dend_0 { pt3dadd( 30.1001, 7.29157, -31.8599, 0.74 ) }
    dend_0 { pt3dadd( 30.1647, 7.51671, -32.9563, 0.74 ) }
    dend_0 { pt3dadd( 30.1918, 7.59629, -33.3675, 0.74 ) }
    dend_0 { pt3dadd( 30.344, 7.93658, -35.1544, 0.74 ) }
    dend_0 { pt3dadd( 30.6562, 8.39155, -37.7167, 0.74 ) }
    dend_0 { pt3dadd( 30.9089, 8.67638, -39.4978, 0.74 ) }
    dend_0 { pt3dadd( 30.9248, 8.69298, -39.5931, 0.74 ) }
    dend_0 { pt3dadd( 31.229, 8.98095, -41.2137, 0.74 ) }
    dend_0 { pt3dadd( 31.2678, 9.02001, -41.4007, 0.74 ) }
    dend_0 { pt3dadd( 31.6234, 9.3798, -42.8889, 0.74 ) }
    dend_0 { pt3dadd( 31.6559, 9.41553, -43.0028, 0.74 ) }
    dend_0 { pt3dadd( 32.0411, 9.89859, -44.3087, 0.74 ) }
    dend_0 { pt3dadd( 32.0553, 9.91749, -44.3513, 0.74 ) }
    dend_0 { pt3dadd( 32.5043, 10.5582, -45.5547, 0.74 ) }
    dend_0 { pt3dadd( 32.5491, 10.623, -45.6686, 0.74 ) }
    dend_0 { pt3dadd( 32.758, 10.9325, -46.1582, 0.74 ) }
    dend_0 { pt3dadd( 32.8606, 11.0645, -46.3668, 0.74 ) }
    dend_0 { pt3dadd( 33.4239, 11.6735, -47.3986, 0.74 ) }
    dend_0 { pt3dadd( 33.496, 11.7434, -47.5258, 0.74 ) }
    dend_0 { pt3dadd( 34.1068, 12.2732, -48.4414, 0.74 ) }
    dend_0 { pt3dadd( 34.2402, 12.3918, -48.631, 0.74 ) }
    dend_0 { pt3dadd( 34.6373, 12.7416, -49.1439, 0.74 ) }
    dend_0 { pt3dadd( 35.0954, 13.1589, -49.6598, 0.74 ) }
    dend_0 { pt3dadd( 36.114, 14.1276, -50.625, 0.74 ) }
    dend_0 { pt3dadd( 36.8647, 14.8553, -51.2323, 0.74 ) }
    dend_0 { pt3dadd( 37.2293, 15.2173, -51.4681, 0.61 ) }
    dend_0 { pt3dadd( 37.8336, 15.8303, -51.7912, 0.49 ) }
    dend_0 { pt3dadd( 38.3993, 16.4126, -52.0214, 0.37 ) }
    dend_0 { pt3dadd( 38.765, 16.7966, -52.114, 0.37 ) }
    dend_0 { pt3dadd( 38.8263, 16.8618, -52.1213, 0.37 ) }
    dend_0 { pt3dadd( 39.1901, 17.2587, -52.1656, 0.25 ) }
    dend_0 { pt3dadd( 39.6339, 17.7413, -52.2526, 0.25 ) }
    dend_0 { pt3dadd( 39.8317, 17.9647, -52.312, 0.25 ) }
    dend_0 { pt3dadd( 40.2217, 18.4036, -52.4873, 0.25 ) }
    dend_0 { pt3dadd( 40.2783, 18.4665, -52.5169, 0.25 ) }
    dend_0 { pt3dadd( 40.8415, 19.0846, -52.8351, 0.25 ) }
    dend_0 { pt3dadd( 41.789, 20.0843, -53.3875, 0.25 ) }
    dend_0 { pt3dadd( 42.299, 20.6105, -53.6941, 0.25 ) }
    dend_0 { pt3dadd( 42.9381, 21.2607, -54.0752, 0.25 ) }
    dend_0 { pt3dadd( 43.4182, 21.7342, -54.3572, 0.25 ) }
    dend_0 { pt3dadd( 43.5016, 21.8074, -54.3964, 0.25 ) }
    dend_0 { pt3dadd( 44.0241, 22.2084, -54.5849, 0.25 ) }
    dend_0 { pt3dadd( 44.0919, 22.2555, -54.5987, 0.25 ) }
    dend_0 { pt3dadd( 44.5936, 22.5908, -54.6593, 0.25 ) }
    dend_0 { pt3dadd( 44.6613, 22.6396, -54.6642, 0.25 ) }
    dend_0 { pt3dadd( 46.2673, 23.8692, -54.7908, 0.25 ) }
    dend_0 { pt3dadd( 46.3377, 23.9247, -54.8018, 0.25 ) }
    dend_0 { pt3dadd( 47.3867, 24.7861, -55.0704, 0.25 ) }
    dend_0 { pt3dadd( 47.4538, 24.842, -55.0927, 0.25 ) }
    dend_0 { pt3dadd( 48.8558, 26.0342, -55.6472, 0.25 ) }
    dend_0 { pt3dadd( 48.9911, 26.1536, -55.7129, 0.25 ) }
    dend_0 { pt3dadd( 50.1132, 27.207, -56.3859, 0.25 ) }
    dend_0 { pt3dadd( 51.0415, 28.0926, -56.9872, 0.25 ) }
    dend_0 { pt3dadd( 51.58, 28.6098, -57.3794, 0.25 ) }
    dend_0 { pt3dadd( 51.6541, 28.6824, -57.4345, 0.25 ) }
    dend_0 { pt3dadd( 52.207, 29.2357, -57.8673, 0.25 ) }
    dend_0 { pt3dadd( 52.3755, 29.4108, -57.982, 0.25 ) }
    dend_0 { pt3dadd( 52.8007, 29.8879, -58.21, 0.25 ) }
    dend_0 { pt3dadd( 52.9929, 30.1049, -58.2932, 0.25 ) }
    dend_0 { pt3dadd( 53.7244, 30.9175, -58.5679, 0.25 ) }
    dend_0 { pt3dadd( 53.8906, 31.0866, -58.6266, 0.25 ) }
    dend_0 { pt3dadd( 54.628, 31.7819, -58.8596, 0.25 ) }
    dend_0 { pt3dadd( 54.713, 31.857, -58.8909, 0.25 ) }
    dend_0 { pt3dadd( 55.4526, 32.4621, -59.1861, 0.25 ) }
    dend_0 { pt3dadd( 55.6546, 32.6212, -59.2705, 0.25 ) }
    dend_0 { pt3dadd( 56.39, 33.1862, -59.6165, 0.25 ) }
    dend_0 { pt3dadd( 56.4836, 33.2543, -59.6575, 0.25 ) }
    dend_0 { pt3dadd( 57.3055, 33.8328, -60.0093, 0.25 ) }
    dend_0 { pt3dadd( 57.5721, 34.0223, -60.1218, 0.25 ) }
    dend_0 { pt3dadd( 57.9502, 34.2925, -60.2783, 0.25 ) }
    dend_0 { pt3dadd( 58.0834, 34.3913, -60.3295, 0.25 ) }
    dend_0 { pt3dadd( 59.2653, 35.2904, -60.7334, 0.25 ) }
    dend_0 { pt3dadd( 59.3391, 35.3484, -60.7559, 0.25 ) }
    dend_0 { pt3dadd( 60.0659, 35.9385, -60.9704, 0.25 ) }
    dend_0 { pt3dadd( 60.1823, 36.0367, -61.0072, 0.25 ) }
    dend_0 { pt3dadd( 61.0327, 36.7734, -61.2829, 0.25 ) }
    dend_0 { pt3dadd( 61.1173, 36.85, -61.3112, 0.25 ) }
    dend_0 { pt3dadd( 61.915, 37.6995, -61.5932, 0.25 ) }
    dend_0 { pt3dadd( 62.7038, 38.5904, -61.8535, 0.25 ) }
    dend_0 { pt3dadd( 62.7803, 38.6814, -61.878, 0.25 ) }
    dend_0 { pt3dadd( 63.1568, 39.1254, -61.9954, 0.25 ) }
    dend_0 { pt3dadd( 63.2652, 39.2538, -62.032, 0.25 ) }
    dend_0 { pt3dadd( 64.1452, 40.3073, -62.476, 0.25 ) }
    dend_0 { pt3dadd( 64.2133, 40.3906, -62.5205, 0.25 ) }
    dend_0 { pt3dadd( 65.2565, 41.6799, -63.3003, 0.25 ) }
    dend_0 { pt3dadd( 66.0229, 42.6008, -63.9539, 0.25 ) }
    dend_0 { pt3dadd( 66.1529, 42.7511, -64.0775, 0.25 ) }
    dend_0 { pt3dadd( 67.254, 43.9021, -65.2159, 0.25 ) }
    dend_0 { pt3dadd( 67.5986, 44.2187, -65.6112, 0.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 67.7339, 44.333, -65.7815, 0.25 ) }
    dend_0 { pt3dadd( 68.1345, 44.6273, -66.3839, 0.25 ) }
    dend_0 { pt3dadd( 68.1777, 44.6546, -66.4507, 0.25 ) }
    dend_0 { pt3dadd( 68.6926, 44.9214, -67.1048, 0.25 ) }
    dend_0 { pt3dadd( 68.8363, 44.981, -67.2237, 0.25 ) }
    dend_0 { pt3dadd( 69.5055, 45.2663, -67.6752, 0.25 ) }
    dend_0 { pt3dadd( 69.7615, 45.4264, -67.8106, 0.25 ) }
    dend_0 { pt3dadd( 69.9544, 45.5784, -67.8854, 0.25 ) }
    dend_0 { pt3dadd( 70.038, 45.6575, -67.9088, 0.25 ) }
    dend_0 { pt3dadd( 70.8301, 46.5047, -68.0556, 0.25 ) }
    dend_0 { pt3dadd( 71.3608, 47.1585, -68.1337, 0.25 ) }
    dend_0 { pt3dadd( 72.1183, 48.1945, -68.2682, 0.25 ) }
    dend_0 { pt3dadd( 72.2233, 48.3451, -68.3009, 0.25 ) }
    dend_0 { pt3dadd( 72.9212, 49.3847, -68.6551, 0.25 ) }
    dend_0 { pt3dadd( 72.9812, 49.4759, -68.695, 0.25 ) }
    dend_0 { pt3dadd( 73.6172, 50.4759, -69.2976, 0.25 ) }
    dend_0 { pt3dadd( 74.2492, 51.4655, -70.0908, 0.25 ) }
    dend_0 { pt3dadd( 74.8425, 52.4022, -70.8531, 0.25 ) }
    dend_0 { pt3dadd( 75.2933, 53.1995, -71.4567, 0.25 ) }
    dend_0 { pt3dadd( 75.3367, 53.2843, -71.5234, 0.25 ) }
    dend_0 { pt3dadd( 75.7702, 54.2138, -72.2625, 0.25 ) }
    dend_0 { pt3dadd( 76.1139, 55.0291, -72.921, 0.25 ) }
    dend_0 { pt3dadd( 76.7379, 56.7865, -74.0617, 0.25 ) }
    dend_0 { pt3dadd( 77.0172, 57.6522, -74.4748, 0.25 ) }
    dend_0 { pt3dadd( 77.2742, 58.4268, -74.7358, 0.25 ) }
    dend_0 { pt3dadd( 77.5766, 59.2675, -74.9463, 0.25 ) }
    dend_0 { pt3dadd( 77.6212, 59.3732, -74.9563, 0.25 ) }
    dend_0 { pt3dadd( 78.1071, 60.2962, -74.9983, 0.25 ) }
    dend_0 { pt3dadd( 78.193, 60.4403, -75.0274, 0.25 ) }
    dend_0 { pt3dadd( 78.3965, 60.7451, -74.9934, 0.25 ) }
    dend_0 { pt3dadd( 78.4905, 60.8998, -74.9468, 0.25 ) }
    dend_0 { pt3dadd( 78.7732, 61.3887, -74.752, 0.25 ) }
    dend_0 { pt3dadd( 79.1022, 62.0164, -74.5122, 0.25 ) }
    dend_0 { pt3dadd( 79.5434, 62.9599, -74.1765, 0.25 ) }
    dend_0 { pt3dadd( 80.0691, 64.1894, -73.7129, 0.25 ) }
    dend_0 { pt3dadd( 80.3147, 64.8381, -73.4694, 0.25 ) }
    dend_0 { pt3dadd( 80.3274, 64.8745, -73.4558, 0.25 ) }
    dend_0 { pt3dadd( 80.5218, 65.4854, -73.2398, 0.25 ) }
    dend_0 { pt3dadd( 80.5452, 65.5591, -73.2131, 0.25 ) }
    dend_0 { pt3dadd( 80.8089, 66.3382, -72.9786, 0.25 ) }
    dend_0 { pt3dadd( 80.9835, 66.9797, -72.9374, 0.25 ) }
    dend_0 { pt3dadd( 81.0092, 67.0634, -72.9358, 0.25 ) }
    dend_0 { pt3dadd( 81.1213, 67.4507, -72.931, 0.25 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 43/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 10.4867, -0.737482, 0.00907451, 0.25 ) }
    axon_0 { pt3dadd( 25.4173, -2.1789, 0.00907451, 0.25 ) }
    axon_0 { pt3dadd( 40.3479, -3.62031, 0.00907451, 0.25 ) }
    // Section: dend_17, id: dend_17, parent: dend_14 (entry count 46/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 15.5155, -8.23115, -4.27404, 1.84 ) }
    dend_17 { pt3dadd( 17.103, -10.9952, -4.58227, 1.84 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 48/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 15.5155, -8.23115, -4.27404, 0.37 ) }
    dend_15 { pt3dadd( 17.1359, -9.03758, -4.17869, 0.37 ) }
    dend_15 { pt3dadd( 17.247, -9.08863, -4.17316, 0.37 ) }
    dend_15 { pt3dadd( 18.33, -9.56131, -4.12469, 0.37 ) }
    dend_15 { pt3dadd( 19.0429, -9.8435, -4.09574, 0.37 ) }
    dend_15 { pt3dadd( 19.281, -9.92407, -4.04721, 0.37 ) }
    dend_15 { pt3dadd( 20.2093, -10.1966, -3.78062, 0.37 ) }
    dend_15 { pt3dadd( 20.5574, -10.2712, -3.64766, 0.37 ) }
    dend_15 { pt3dadd( 20.6713, -10.2867, -3.60243, 0.37 ) }
    dend_15 { pt3dadd( 21.1406, -10.3237, -3.35652, 0.49 ) }
    dend_15 { pt3dadd( 23.0632, -10.5804, -2.29366, 0.74 ) }
    dend_15 { pt3dadd( 23.5709, -10.7273, -1.9403, 0.74 ) }
    dend_15 { pt3dadd( 24.2373, -10.9795, -1.42219, 0.74 ) }
    dend_15 { pt3dadd( 25.0932, -11.3478, -0.736895, 0.49 ) }
    dend_15 { pt3dadd( 26.4466, -11.9931, 0.370721, 0.49 ) }
    dend_15 { pt3dadd( 27.7203, -12.6052, 1.34094, 0.37 ) }
    dend_15 { pt3dadd( 30.4343, -13.9427, 3.2472, 1.11 ) }
    dend_15 { pt3dadd( 30.4889, -13.9686, 3.28518, 1.11 ) }
    dend_15 { pt3dadd( 30.8802, -14.1437, 3.54521, 0.74 ) }
    dend_15 { pt3dadd( 30.939, -14.1669, 3.57859, 0.74 ) }
    dend_15 { pt3dadd( 32.924, -14.701, 4.28037, 0.37 ) }
    dend_15 { pt3dadd( 32.9927, -14.7105, 4.29887, 0.37 ) }
    dend_15 { pt3dadd( 33.6074, -14.7653, 4.38287, 0.37 ) }
    dend_15 { pt3dadd( 34.2277, -14.8651, 4.48535, 0.37 ) }
    dend_15 { pt3dadd( 34.9966, -15.0314, 4.62136, 0.37 ) }
    dend_15 { pt3dadd( 35.7921, -15.2387, 4.76703, 0.37 ) }
    dend_15 { pt3dadd( 37.1157, -15.6458, 5.01934, 0.37 ) }
    dend_15 { pt3dadd( 37.4833, -15.7464, 5.1174, 0.37 ) }
    dend_15 { pt3dadd( 38.6278, -16.0297, 5.48746, 0.37 ) }
    dend_15 { pt3dadd( 39.7993, -16.2429, 5.9098, 0.37 ) }
    dend_15 { pt3dadd( 40.1435, -16.2703, 6.07011, 0.37 ) }
    dend_15 { pt3dadd( 41.0243, -16.2628, 6.53691, 0.37 ) }
    dend_15 { pt3dadd( 42.8585, -16.18, 7.57309, 0.37 ) }
    dend_15 { pt3dadd( 43.098, -16.1661, 7.7256, 0.37 ) }
    dend_15 { pt3dadd( 43.7807, -16.11, 8.22436, 0.37 ) }
    dend_15 { pt3dadd( 45.2728, -16.1197, 9.53185, 0.37 ) }
    dend_15 { pt3dadd( 45.7198, -16.1928, 9.96501, 0.37 ) }
    dend_15 { pt3dadd( 46.2514, -16.4104, 10.5269, 0.37 ) }
    dend_15 { pt3dadd( 46.402, -16.5294, 10.6779, 0.37 ) }
    dend_15 { pt3dadd( 46.4692, -16.6024, 10.7478, 0.37 ) }
    dend_15 { pt3dadd( 47.2398, -17.6061, 12.1575, 0.37 ) }
    dend_15 { pt3dadd( 47.5259, -17.9882, 12.7378, 0.37 ) }
    dend_15 { pt3dadd( 47.6305, -18.1125, 12.958, 0.37 ) }
    dend_15 { pt3dadd( 47.8195, -18.2923, 13.3248, 0.37 ) }
    dend_15 { pt3dadd( 47.9803, -18.4213, 13.6124, 0.37 ) }
    dend_15 { pt3dadd( 50.0333, -19.9079, 17.3094, 0.37 ) }
    dend_15 { pt3dadd( 50.5488, -20.2034, 18.2317, 0.37 ) }
    dend_15 { pt3dadd( 50.6633, -20.2601, 18.4425, 0.37 ) }
    dend_15 { pt3dadd( 50.998, -20.4204, 19.0934, 0.37 ) }
    dend_15 { pt3dadd( 51.1037, -20.4679, 19.3111, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 98/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -31.0409, 3.97451, 11.4555, 0.37 ) }
    dend_13 { pt3dadd( -33.3377, 3.49877, 10.5796, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_13 { pt3dadd( -34.3068, 3.37237, 10.2899, 0.37 ) }
    dend_13 { pt3dadd( -35.5891, 3.18609, 9.91058, 0.37 ) }
    dend_13 { pt3dadd( -37.852, 2.89859, 9.2707, 0.37 ) }
    dend_13 { pt3dadd( -39.3151, 2.72089, 8.86607, 0.37 ) }
    dend_13 { pt3dadd( -43.7205, 2.1455, 7.66323, 0.37 ) }
    dend_13 { pt3dadd( -47.4813, 1.77083, 6.72582, 0.37 ) }
    dend_13 { pt3dadd( -52.0743, 1.42799, 5.60401, 0.37 ) }
    dend_13 { pt3dadd( -53.5698, 1.33502, 5.22772, 0.37 ) }
    dend_13 { pt3dadd( -55.7395, 1.17693, 4.6706, 0.37 ) }
    dend_13 { pt3dadd( -57.0543, 1.07429, 4.30339, 0.37 ) }
    dend_13 { pt3dadd( -59.7032, 0.881454, 3.52164, 0.37 ) }
    dend_13 { pt3dadd( -61.1622, 0.80702, 3.05441, 0.37 ) }
    dend_13 { pt3dadd( -62.5671, 0.766409, 2.56449, 0.37 ) }
    dend_13 { pt3dadd( -63.7933, 0.704595, 2.11431, 0.37 ) }
    dend_13 { pt3dadd( -65.7007, 0.607461, 1.43267, 0.37 ) }
    dend_13 { pt3dadd( -67.1473, 0.535305, 0.914027, 0.37 ) }
    dend_13 { pt3dadd( -69.3142, 0.404405, 0.0939757, 0.37 ) }
    dend_13 { pt3dadd( -71.2487, 0.285734, -0.701182, 0.37 ) }
    dend_13 { pt3dadd( -73.3904, 0.164683, -1.64041, 0.37 ) }
    dend_13 { pt3dadd( -75.0566, 0.0585275, -2.43354, 0.25 ) }
    dend_13 { pt3dadd( -76.0949, -0.0446429, -2.95476, 0.25 ) }
    dend_13 { pt3dadd( -77.8991, -0.278081, -3.89511, 0.25 ) }
    dend_13 { pt3dadd( -81.0838, -0.743197, -5.52068, 0.25 ) }
    dend_13 { pt3dadd( -83.4845, -1.13056, -6.70971, 0.25 ) }
    dend_13 { pt3dadd( -85.2323, -1.44186, -7.61444, 0.25 ) }
    dend_13 { pt3dadd( -87.306, -1.85036, -8.69117, 0.25 ) }
    dend_13 { pt3dadd( -89.1347, -2.26085, -9.58455, 0.25 ) }
    dend_13 { pt3dadd( -90.6669, -2.65347, -10.26, 0.25 ) }
    dend_13 { pt3dadd( -91.5478, -2.88019, -10.5946, 0.25 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 29/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -31.0409, 3.97451, 11.4555, 0.74 ) }
    dend_10 { pt3dadd( -31.852, 3.97665, 11.8044, 0.74 ) }
    dend_10 { pt3dadd( -32.5844, 4.02523, 12.1326, 0.74 ) }
    dend_10 { pt3dadd( -34.0113, 4.17183, 12.7314, 0.74 ) }
    dend_10 { pt3dadd( -35.0298, 4.29952, 13.1277, 0.74 ) }
    dend_10 { pt3dadd( -36.1096, 4.44495, 13.5198, 0.74 ) }
    dend_10 { pt3dadd( -38.0612, 4.71517, 14.1898, 0.98 ) }
    dend_10 { pt3dadd( -40.3432, 5.07472, 14.9766, 1.11 ) }
    dend_10 { pt3dadd( -41.5201, 5.25668, 15.347, 1.11 ) }
    dend_10 { pt3dadd( -42.4995, 5.39194, 15.5821, 1.11 ) }
    dend_10 { pt3dadd( -43.2486, 5.47989, 15.7348, 1.11 ) }
    dend_10 { pt3dadd( -43.8938, 5.53959, 15.8389, 1.11 ) }
    dend_10 { pt3dadd( -45.7351, 5.62745, 16.0348, 1.11 ) }
    dend_10 { pt3dadd( -47.7817, 5.64439, 16.1746, 0.86 ) }
    dend_10 { pt3dadd( -50.3352, 5.5432, 16.3248, 0.86 ) }
    dend_10 { pt3dadd( -51.9913, 5.39725, 16.4042, 0.86 ) }
    dend_10 { pt3dadd( -52.7602, 5.28022, 16.4307, 0.86 ) }
    dend_10 { pt3dadd( -54.2846, 4.9262, 16.4573, 0.86 ) }
    dend_10 { pt3dadd( -55.5203, 4.50176, 16.453, 0.86 ) }
    dend_10 { pt3dadd( -57.0707, 3.80243, 16.4692, 0.86 ) }
    dend_10 { pt3dadd( -58.0062, 3.27214, 16.4954, 0.86 ) }
    dend_10 { pt3dadd( -59.6888, 2.20083, 16.5023, 0.86 ) }
    dend_10 { pt3dadd( -60.8386, 1.42443, 16.4863, 0.86 ) }
    dend_10 { pt3dadd( -62.2218, 0.464675, 16.4436, 0.86 ) }
    dend_10 { pt3dadd( -63.3871, -0.324147, 16.3888, 0.86 ) }
    dend_10 { pt3dadd( -64.1769, -0.799893, 16.32, 0.86 ) }
    dend_10 { pt3dadd( -65.6935, -1.55994, 16.0517, 0.86 ) }
    dend_10 { pt3dadd( -66.3194, -1.79443, 15.8735, 0.49 ) }
    dend_10 { pt3dadd( -67.017, -1.96042, 15.5755, 0.49 ) }
    dend_10 { pt3dadd( -67.4828, -2.02826, 15.3021, 0.49 ) }
    dend_10 { pt3dadd( -68.3463, -2.16181, 14.6911, 0.49 ) }
    dend_10 { pt3dadd( -69.6744, -2.42379, 13.7299, 0.37 ) }
    dend_10 { pt3dadd( -69.7675, -2.45083, 13.6659, 0.37 ) }
    dend_10 { pt3dadd( -70.9511, -2.89088, 12.9032, 0.37 ) }
    dend_10 { pt3dadd( -72.5629, -3.58015, 11.9868, 0.37 ) }
    dend_10 { pt3dadd( -73.8316, -4.1866, 11.3184, 0.37 ) }
    dend_10 { pt3dadd( -74.8721, -4.73382, 10.8454, 0.37 ) }
    dend_10 { pt3dadd( -76.0168, -5.37925, 10.3764, 0.37 ) }
    dend_10 { pt3dadd( -77.2447, -6.11389, 9.89068, 0.37 ) }
    dend_10 { pt3dadd( -78.1964, -6.75233, 9.43567, 0.37 ) }
    dend_10 { pt3dadd( -79.4373, -7.73203, 8.72277, 0.37 ) }
    dend_10 { pt3dadd( -80.3093, -8.57802, 8.06688, 0.37 ) }
    dend_10 { pt3dadd( -81.1556, -9.62942, 7.24133, 0.37 ) }
    dend_10 { pt3dadd( -81.5997, -10.3576, 6.68946, 0.37 ) }
    dend_10 { pt3dadd( -82.6072, -12.5211, 5.20651, 0.37 ) }
    dend_10 { pt3dadd( -83.0354, -13.5321, 4.50435, 0.37 ) }
    dend_10 { pt3dadd( -83.584, -14.6927, 3.66973, 0.37 ) }
    dend_10 { pt3dadd( -84.0822, -15.5616, 2.97622, 0.37 ) }
    dend_10 { pt3dadd( -84.827, -16.6017, 2.07753, 0.37 ) }
    dend_10 { pt3dadd( -85.3261, -17.1827, 1.56566, 0.37 ) }
    dend_10 { pt3dadd( -87.0525, -18.9536, 0.0441299, 0.37 ) }
    dend_10 { pt3dadd( -88.2782, -20.1121, -1.04155, 0.37 ) }
    dend_10 { pt3dadd( -89.3045, -20.986, -1.92228, 0.37 ) }
    dend_10 { pt3dadd( -90.1824, -21.6722, -2.69104, 0.37 ) }
    dend_10 { pt3dadd( -91.0252, -22.2823, -3.42682, 0.37 ) }
    dend_10 { pt3dadd( -91.9177, -22.9405, -4.22863, 0.37 ) }
    dend_10 { pt3dadd( -92.0189, -23.0287, -4.31331, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 10.7213, 12.6963, -5.97792, 0.25 ) }
    dend_5 { pt3dadd( 13.3983, 13.5233, -6.22993, 0.25 ) }
    dend_5 { pt3dadd( 15.4764, 14.1952, -6.42055, 0.25 ) }
    dend_5 { pt3dadd( 18.5546, 15.2029, -6.68604, 0.25 ) }
    dend_5 { pt3dadd( 21.5004, 16.1428, -6.91477, 0.25 ) }
    dend_5 { pt3dadd( 25.0973, 17.2839, -7.16187, 0.25 ) }
    dend_5 { pt3dadd( 25.5763, 17.442, -7.19798, 0.25 ) }
    dend_5 { pt3dadd( 26.4495, 17.7612, -7.30555, 0.25 ) }
    dend_5 { pt3dadd( 26.9907, 17.9886, -7.41298, 0.25 ) }
    dend_5 { pt3dadd( 27.6875, 18.3023, -7.58509, 0.25 ) }
    dend_5 { pt3dadd( 28.5441, 18.6907, -7.78408, 0.25 ) }
    dend_5 { pt3dadd( 30.1542, 19.3885, -8.23412, 0.25 ) }
    dend_5 { pt3dadd( 31.5569, 20.0279, -8.672, 0.25 ) }
    dend_5 { pt3dadd( 32.9983, 20.7149, -9.17404, 0.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_5 { pt3dadd( 36.4513, 22.4173, -10.431, 0.25 ) }
    dend_5 { pt3dadd( 38.7002, 23.5862, -11.2492, 0.25 ) }
    dend_5 { pt3dadd( 40.1729, 24.3714, -11.8126, 0.25 ) }
    dend_5 { pt3dadd( 42.08, 25.4182, -12.6216, 0.25 ) }
    dend_5 { pt3dadd( 43.7415, 26.3469, -13.3757, 0.25 ) }
    dend_5 { pt3dadd( 44.2789, 26.6429, -13.632, 0.25 ) }
    dend_5 { pt3dadd( 47.1475, 28.2154, -15.1309, 0.25 ) }
    dend_5 { pt3dadd( 48.8016, 29.0457, -16.0137, 0.25 ) }
    dend_5 { pt3dadd( 50.9478, 30.0781, -17.1759, 0.25 ) }
    dend_5 { pt3dadd( 52.6817, 30.9231, -18.1402, 0.25 ) }
    dend_5 { pt3dadd( 54.377, 31.7363, -19.1155, 0.25 ) }
    dend_5 { pt3dadd( 57.2862, 33.0591, -20.8265, 0.25 ) }
    dend_5 { pt3dadd( 59.0916, 33.829, -21.9392, 0.25 ) }
    dend_5 { pt3dadd( 60.7638, 34.5673, -23.0445, 0.25 ) }
    dend_5 { pt3dadd( 62.6883, 35.4641, -24.5193, 0.25 ) }
    dend_5 { pt3dadd( 64.0357, 36.1712, -25.8399, 0.25 ) }
    dend_5 { pt3dadd( 65.5401, 36.984, -27.4124, 0.25 ) }
    dend_5 { pt3dadd( 66.6224, 37.5342, -28.5151, 0.25 ) }
    dend_5 { pt3dadd( 68.2631, 38.3489, -30.0397, 0.25 ) }
    dend_5 { pt3dadd( 70.6675, 39.5257, -32.1294, 0.25 ) }
    dend_5 { pt3dadd( 73.9671, 41.0923, -34.7921, 0.25 ) }
    dend_5 { pt3dadd( 76.6352, 42.3829, -36.696, 0.25 ) }
    dend_5 { pt3dadd( 79.4309, 43.7431, -38.4346, 0.25 ) }
    dend_5 { pt3dadd( 82.2064, 45.0554, -39.7954, 0.25 ) }
    dend_5 { pt3dadd( 83.5885, 45.6723, -40.2984, 0.25 ) }
    dend_5 { pt3dadd( 84.8569, 46.2437, -40.6284, 0.25 ) }
    dend_5 { pt3dadd( 86.4762, 46.9395, -40.939, 0.25 ) }
    dend_5 { pt3dadd( 88.7623, 47.9195, -41.4106, 0.25 ) }
    dend_5 { pt3dadd( 91.2591, 49.032, -41.9199, 0.25 ) }
    dend_5 { pt3dadd( 92.6953, 49.712, -42.2994, 0.25 ) }
    dend_5 { pt3dadd( 93.332, 50.0336, -42.5212, 0.25 ) }
    dend_5 { pt3dadd( 95.5559, 51.2525, -43.6169, 0.25 ) }
    dend_5 { pt3dadd( 96.6677, 51.8959, -44.3346, 0.25 ) }
    dend_5 { pt3dadd( 98.0365, 52.6721, -45.499, 0.25 ) }
    dend_5 { pt3dadd( 99.5738, 53.4758, -46.9644, 0.25 ) }
    dend_5 { pt3dadd( 101.498, 54.4721, -48.8507, 0.25 ) }
    dend_5 { pt3dadd( 102.772, 55.0857, -50.0716, 0.25 ) }
    dend_5 { pt3dadd( 104.063, 55.7057, -51.3212, 0.25 ) }
    dend_5 { pt3dadd( 106.915, 56.9593, -53.8095, 0.25 ) }
    dend_5 { pt3dadd( 108.631, 57.6181, -55.0978, 0.25 ) }
    dend_5 { pt3dadd( 109.847, 58.055, -55.8461, 0.25 ) }
    dend_5 { pt3dadd( 113.623, 59.3294, -57.8936, 0.25 ) }
    dend_5 { pt3dadd( 114.846, 59.6979, -58.4314, 0.25 ) }
    dend_5 { pt3dadd( 117.619, 60.4598, -59.4377, 0.25 ) }
    dend_5 { pt3dadd( 119.746, 61.0071, -60.0368, 0.25 ) }
    dend_5 { pt3dadd( 122.514, 61.6207, -60.7507, 0.25 ) }
    dend_5 { pt3dadd( 126.04, 62.2319, -61.4808, 0.25 ) }
    dend_5 { pt3dadd( 128.671, 62.6039, -61.8474, 0.25 ) }
    dend_5 { pt3dadd( 129.494, 62.6999, -61.9388, 0.25 ) }
    dend_5 { pt3dadd( 131.524, 62.9081, -62.1393, 0.25 ) }
    dend_5 { pt3dadd( 133.386, 63.1168, -62.294, 0.25 ) }
    dend_5 { pt3dadd( 134.546, 63.2808, -62.335, 0.25 ) }
    dend_5 { pt3dadd( 137.265, 63.705, -62.3286, 0.25 ) }
    dend_5 { pt3dadd( 138.322, 63.8944, -62.2741, 0.25 ) }
    dend_5 { pt3dadd( 139.83, 64.168, -62.1321, 0.25 ) }
    dend_5 { pt3dadd( 142.553, 64.6482, -61.7777, 0.25 ) }
    dend_5 { pt3dadd( 145.31, 65.1618, -61.3704, 0.25 ) }
    dend_5 { pt3dadd( 148.041, 65.6814, -60.9481, 0.25 ) }
    dend_5 { pt3dadd( 151.159, 66.276, -60.4239, 0.25 ) }
    dend_5 { pt3dadd( 152.768, 66.5824, -60.1463, 0.25 ) }
    dend_5 { pt3dadd( 154.655, 66.9346, -59.832, 0.25 ) }
    dend_5 { pt3dadd( 156.582, 67.3208, -59.5164, 0.25 ) }
    dend_5 { pt3dadd( 157.983, 67.6522, -59.3775, 0.25 ) }
    dend_5 { pt3dadd( 159.03, 67.9562, -59.3157, 0.25 ) }
    dend_5 { pt3dadd( 160.069, 68.2539, -59.314, 0.25 ) }
    dend_5 { pt3dadd( 162.188, 68.8833, -59.2623, 0.25 ) }
    dend_5 { pt3dadd( 163.805, 69.4012, -59.1798, 0.25 ) }
    dend_5 { pt3dadd( 167.019, 70.4284, -58.9127, 0.25 ) }
    dend_5 { pt3dadd( 168.478, 70.8925, -58.7145, 0.25 ) }
    dend_5 { pt3dadd( 169.623, 71.2605, -58.5061, 0.25 ) }
    dend_5 { pt3dadd( 171.04, 71.7292, -58.1823, 0.25 ) }
    dend_5 { pt3dadd( 172.206, 72.1356, -57.8243, 0.25 ) }
    dend_5 { pt3dadd( 173.462, 72.5984, -57.3758, 0.25 ) }
    dend_5 { pt3dadd( 176.141, 73.6653, -56.3052, 0.25 ) }
    dend_5 { pt3dadd( 176.88, 73.9815, -56.0141, 0.25 ) }
    dend_5 { pt3dadd( 178.89, 74.8812, -55.2602, 0.25 ) }
    dend_5 { pt3dadd( 180.475, 75.5513, -54.7096, 0.25 ) }
    dend_5 { pt3dadd( 181.613, 76.0179, -54.353, 0.25 ) }
    dend_5 { pt3dadd( 182.801, 76.5289, -54.045, 0.25 ) }
    dend_5 { pt3dadd( 184.291, 77.1692, -53.7491, 0.25 ) }
    dend_5 { pt3dadd( 185.479, 77.6531, -53.5351, 0.25 ) }
    dend_5 { pt3dadd( 186.586, 78.1025, -53.3637, 0.25 ) }
    dend_5 { pt3dadd( 188.492, 78.9163, -53.1319, 0.25 ) }
    dend_5 { pt3dadd( 190.797, 79.9616, -52.8634, 0.25 ) }
    dend_5 { pt3dadd( 191.879, 80.4735, -52.7608, 0.25 ) }
    dend_5 { pt3dadd( 193.105, 81.0873, -52.6358, 0.25 ) }
    dend_5 { pt3dadd( 194.081, 81.6228, -52.5419, 0.25 ) }
    dend_5 { pt3dadd( 195.514, 82.464, -52.408, 0.25 ) }
    dend_5 { pt3dadd( 196.682, 83.168, -52.2286, 0.25 ) }
    dend_5 { pt3dadd( 198.1, 84.048, -51.9266, 0.25 ) }
    dend_5 { pt3dadd( 200.54, 85.5405, -51.3047, 0.25 ) }
    dend_5 { pt3dadd( 201.518, 86.1166, -51.0266, 0.25 ) }
    dend_5 { pt3dadd( 203.044, 86.9499, -50.5589, 0.25 ) }
    dend_5 { pt3dadd( 205.51, 88.1672, -49.8776, 0.25 ) }
    dend_5 { pt3dadd( 207.042, 88.862, -49.4395, 0.25 ) }
    dend_5 { pt3dadd( 208.704, 89.5326, -48.9567, 0.25 ) }
    dend_5 { pt3dadd( 210.26, 90.0746, -48.5408, 0.25 ) }
    dend_5 { pt3dadd( 211.354, 90.3873, -48.2589, 0.25 ) }
    dend_5 { pt3dadd( 213.774, 90.9316, -47.775, 0.25 ) }
    dend_5 { pt3dadd( 216.332, 91.4117, -47.4437, 0.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_5 { pt3dadd( 217.977, 91.6847, -47.267, 0.25 ) }
    dend_5 { pt3dadd( 218.979, 91.8393, -47.1626, 0.25 ) }
    dend_5 { pt3dadd( 220.319, 92.0273, -47.0206, 0.25 ) }
    dend_5 { pt3dadd( 222.378, 92.3428, -46.7918, 0.25 ) }
    dend_5 { pt3dadd( 223.127, 92.4726, -46.6973, 0.25 ) }
    dend_5 { pt3dadd( 224.424, 92.7078, -46.609, 0.25 ) }
    dend_5 { pt3dadd( 224.943, 92.8158, -46.566, 0.25 ) }
    dend_5 { pt3dadd( 225.976, 93.0538, -46.456, 0.25 ) }
    dend_5 { pt3dadd( 227.099, 93.3412, -46.3047, 0.25 ) }
    dend_5 { pt3dadd( 228.644, 93.7409, -46.0467, 0.25 ) }
    dend_5 { pt3dadd( 230.72, 94.2794, -45.7022, 0.25 ) }
    dend_5 { pt3dadd( 232.128, 94.6516, -45.4543, 0.25 ) }
    dend_5 { pt3dadd( 233.062, 94.9096, -45.2854, 0.25 ) }
    dend_5 { pt3dadd( 234.522, 95.3457, -45.0182, 0.25 ) }
    dend_5 { pt3dadd( 236.457, 95.9121, -44.6552, 0.25 ) }
    dend_5 { pt3dadd( 238.062, 96.3655, -44.3474, 0.25 ) }
    dend_5 { pt3dadd( 240.347, 97.0165, -43.9072, 0.25 ) }
    dend_5 { pt3dadd( 241.064, 97.22, -43.7692, 0.25 ) }
    dend_5 { pt3dadd( 242.131, 97.5222, -43.5664, 0.25 ) }
    dend_5 { pt3dadd( 244.486, 98.1588, -43.0196, 0.25 ) }
    dend_5 { pt3dadd( 245.822, 98.4892, -42.6544, 0.25 ) }
    dend_5 { pt3dadd( 246.777, 98.7114, -42.3329, 0.25 ) }
    dend_5 { pt3dadd( 247.256, 98.8183, -42.148, 0.25 ) }
    dend_5 { pt3dadd( 248.76, 99.1466, -41.5095, 0.25 ) }
    dend_5 { pt3dadd( 250.603, 99.5157, -40.6701, 0.25 ) }
    dend_5 { pt3dadd( 252.034, 99.7936, -39.968, 0.25 ) }
    dend_5 { pt3dadd( 253.345, 100.009, -39.3174, 0.25 ) }
    dend_5 { pt3dadd( 254.534, 100.157, -38.7484, 0.25 ) }
    dend_5 { pt3dadd( 255.406, 100.248, -38.3596, 0.25 ) }
    dend_5 { pt3dadd( 256.662, 100.361, -37.8651, 0.25 ) }
    dend_5 { pt3dadd( 258.027, 100.478, -37.4562, 0.25 ) }
    dend_5 { pt3dadd( 258.83, 100.556, -37.2485, 0.25 ) }
    dend_5 { pt3dadd( 260.079, 100.75, -36.9142, 0.25 ) }
    dend_5 { pt3dadd( 260.87, 100.932, -36.6867, 0.25 ) }
    dend_5 { pt3dadd( 261.864, 101.243, -36.4268, 0.25 ) }
    dend_5 { pt3dadd( 263.856, 102.05, -35.963, 0.25 ) }
    dend_5 { pt3dadd( 265.875, 102.961, -35.6938, 0.25 ) }
    dend_5 { pt3dadd( 268.287, 104.123, -35.3503, 0.25 ) }
    dend_5 { pt3dadd( 269.249, 104.607, -35.2076, 0.25 ) }
    dend_5 { pt3dadd( 271.215, 105.614, -34.9086, 0.25 ) }
    dend_5 { pt3dadd( 272.484, 106.272, -34.7152, 0.25 ) }
    dend_5 { pt3dadd( 275.027, 107.604, -34.2543, 0.25 ) }
    dend_5 { pt3dadd( 278.195, 109.222, -33.6154, 0.25 ) }
    dend_5 { pt3dadd( 279.159, 109.729, -33.3509, 0.25 ) }
    dend_5 { pt3dadd( 279.964, 110.213, -32.9995, 0.25 ) }
    dend_5 { pt3dadd( 280.422, 110.552, -32.7025, 0.25 ) }
    dend_5 { pt3dadd( 281.171, 111.284, -32.1346, 0.25 ) }
    dend_5 { pt3dadd( 281.679, 111.929, -31.7193, 0.25 ) }
    dend_5 { pt3dadd( 282.629, 113.43, -31.1753, 0.25 ) }
    dend_5 { pt3dadd( 283.111, 114.335, -30.9263, 0.25 ) }
    dend_5 { pt3dadd( 283.432, 115.032, -30.7948, 0.25 ) }
    dend_5 { pt3dadd( 284.142, 116.619, -30.6183, 0.25 ) }
    dend_5 { pt3dadd( 284.627, 117.686, -30.5649, 0.25 ) }
    dend_5 { pt3dadd( 284.98, 118.48, -30.5504, 0.25 ) }
    dend_5 { pt3dadd( 285.452, 119.527, -30.6192, 0.25 ) }
    dend_5 { pt3dadd( 285.94, 120.562, -30.7382, 0.25 ) }
    dend_5 { pt3dadd( 286.619, 121.839, -30.9268, 0.25 ) }
    dend_5 { pt3dadd( 287.3, 122.931, -31.1503, 0.25 ) }
    dend_5 { pt3dadd( 288.18, 124.071, -31.4457, 0.25 ) }
    dend_5 { pt3dadd( 289.674, 125.6, -31.896, 0.25 ) }
    dend_5 { pt3dadd( 290.536, 126.288, -32.1099, 0.25 ) }
    dend_5 { pt3dadd( 291.923, 127.178, -32.4132, 0.25 ) }
    dend_5 { pt3dadd( 293.658, 128.092, -32.8387, 0.25 ) }
    dend_5 { pt3dadd( 295.127, 128.725, -33.2115, 0.25 ) }
    dend_5 { pt3dadd( 296.542, 129.209, -33.5526, 0.25 ) }
    dend_5 { pt3dadd( 298.34, 129.703, -33.9853, 0.25 ) }
    dend_5 { pt3dadd( 300.252, 130.174, -34.4906, 0.25 ) }
    dend_5 { pt3dadd( 302.205, 130.592, -35.1369, 0.25 ) }
    dend_5 { pt3dadd( 302.901, 130.718, -35.3944, 0.25 ) }
    dend_5 { pt3dadd( 304.425, 130.959, -36.0375, 0.25 ) }
    dend_5 { pt3dadd( 305.649, 131.121, -36.6121, 0.25 ) }
    dend_5 { pt3dadd( 307.469, 131.319, -37.4794, 0.25 ) }
    dend_5 { pt3dadd( 309.589, 131.545, -38.4744, 0.25 ) }
    dend_5 { pt3dadd( 311.168, 131.752, -39.1619, 0.25 ) }
    dend_5 { pt3dadd( 312.962, 132.072, -39.901, 0.25 ) }
    dend_5 { pt3dadd( 314.532, 132.439, -40.497, 0.25 ) }
    dend_5 { pt3dadd( 315.559, 132.751, -40.8288, 0.25 ) }
    dend_5 { pt3dadd( 317.503, 133.464, -41.4907, 0.25 ) }
    dend_5 { pt3dadd( 318.647, 133.994, -41.8783, 0.25 ) }
    dend_5 { pt3dadd( 320.283, 134.965, -42.4773, 0.25 ) }
    dend_5 { pt3dadd( 321.064, 135.519, -42.7363, 0.25 ) }
    dend_5 { pt3dadd( 322.335, 136.487, -43.1306, 0.25 ) }
    dend_5 { pt3dadd( 324.269, 137.973, -43.7561, 0.25 ) }
    dend_5 { pt3dadd( 325.074, 138.591, -44.0368, 0.25 ) }
    dend_5 { pt3dadd( 326.464, 139.659, -44.5977, 0.25 ) }
    dend_5 { pt3dadd( 328.0, 140.784, -45.2691, 0.25 ) }
    dend_5 { pt3dadd( 328.914, 141.464, -45.6185, 0.25 ) }
    dend_5 { pt3dadd( 330.145, 142.385, -46.0068, 0.25 ) }
    dend_5 { pt3dadd( 331.31, 143.256, -46.3003, 0.25 ) }
    dend_5 { pt3dadd( 332.745, 144.297, -46.6861, 0.25 ) }
    dend_5 { pt3dadd( 334.206, 145.354, -47.117, 0.25 ) }
    dend_5 { pt3dadd( 335.945, 146.734, -47.7256, 0.25 ) }
    dend_5 { pt3dadd( 337.474, 148.072, -48.185, 0.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 93/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 10.7213, 12.6963, -5.97792, 0.49 ) }
    dend_2 { pt3dadd( 10.1598, 14.2073, -6.56119, 0.49 ) }
    dend_2 { pt3dadd( 9.78849, 15.486, -7.00611, 0.61 ) }
    dend_2 { pt3dadd( 9.55937, 16.8585, -7.41583, 0.61 ) }
    dend_2 { pt3dadd( 9.48467, 18.1125, -7.70175, 0.61 ) }
    dend_2 { pt3dadd( 9.4999, 18.6616, -7.80406, 0.61 ) }
    dend_2 { pt3dadd( 9.60578, 19.6638, -7.95893, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 9.83199, 20.5023, -8.01707, 0.61 ) }
    dend_2 { pt3dadd( 10.3393, 21.916, -8.01589, 0.61 ) }
    dend_2 { pt3dadd( 10.8765, 23.2235, -7.96714, 0.61 ) }
    dend_2 { pt3dadd( 11.1749, 23.918, -7.91926, 0.61 ) }
    dend_2 { pt3dadd( 11.5455, 24.7653, -7.85647, 0.61 ) }
    dend_2 { pt3dadd( 12.206, 26.255, -7.73837, 0.61 ) }
    dend_2 { pt3dadd( 13.2248, 28.5888, -7.5486, 0.61 ) }
    dend_2 { pt3dadd( 13.4266, 29.0407, -7.51262, 0.61 ) }
    dend_2 { pt3dadd( 13.6175, 29.397, -7.48839, 0.25 ) }
    dend_2 { pt3dadd( 13.7687, 29.6277, -7.4713, 0.25 ) }
    dend_2 { pt3dadd( 13.9181, 29.7898, -7.45732, 0.25 ) }
    dend_2 { pt3dadd( 14.2731, 30.0258, -7.43371, 0.37 ) }
    dend_2 { pt3dadd( 14.9688, 30.3679, -7.40892, 0.37 ) }
    dend_2 { pt3dadd( 16.2443, 31.0937, -7.368, 0.37 ) }
    dend_2 { pt3dadd( 17.0015, 31.6568, -7.26499, 0.37 ) }
    dend_2 { pt3dadd( 17.1527, 31.8008, -7.23112, 0.37 ) }
    dend_2 { pt3dadd( 17.3503, 32.0241, -7.1727, 0.37 ) }
    dend_2 { pt3dadd( 17.7258, 32.5407, -6.99476, 0.37 ) }
    dend_2 { pt3dadd( 18.0211, 33.0137, -6.80613, 0.37 ) }
    dend_2 { pt3dadd( 18.7324, 34.4208, -6.17885, 0.37 ) }
    dend_2 { pt3dadd( 19.1782, 35.3656, -5.69668, 0.37 ) }
    dend_2 { pt3dadd( 19.3593, 35.7567, -5.4961, 0.37 ) }
    dend_2 { pt3dadd( 19.9642, 37.1069, -4.82014, 0.37 ) }
    dend_2 { pt3dadd( 20.1634, 37.5692, -4.5988, 0.37 ) }
    dend_2 { pt3dadd( 21.0965, 39.9421, -3.57505, 0.37 ) }
    dend_2 { pt3dadd( 21.5366, 41.1983, -3.12154, 0.37 ) }
    dend_2 { pt3dadd( 21.8913, 42.4082, -2.67239, 0.37 ) }
    dend_2 { pt3dadd( 22.0923, 43.1824, -2.39904, 0.37 ) }
    dend_2 { pt3dadd( 22.2404, 43.8792, -2.16363, 0.37 ) }
    dend_2 { pt3dadd( 22.424, 44.9246, -1.81134, 0.37 ) }
    dend_2 { pt3dadd( 22.5797, 45.9075, -1.50841, 0.37 ) }
    dend_2 { pt3dadd( 22.9114, 47.5278, -0.91355, 0.37 ) }
    dend_2 { pt3dadd( 23.1313, 48.4229, -0.531304, 0.37 ) }
    dend_2 { pt3dadd( 23.6052, 49.9394, 0.215282, 0.37 ) }
    dend_2 { pt3dadd( 23.8924, 50.755, 0.629141, 0.37 ) }
    dend_2 { pt3dadd( 24.3143, 51.8872, 1.22294, 0.37 ) }
    dend_2 { pt3dadd( 25.1072, 54.1348, 2.46883, 0.37 ) }
    dend_2 { pt3dadd( 25.4305, 55.0151, 2.94319, 0.37 ) }
    dend_2 { pt3dadd( 25.9405, 56.4152, 3.71044, 0.37 ) }
    dend_2 { pt3dadd( 26.4212, 57.7556, 4.41752, 0.37 ) }
    dend_2 { pt3dadd( 26.8644, 59.0566, 5.09419, 0.37 ) }
    dend_2 { pt3dadd( 27.5533, 61.2942, 6.23877, 0.37 ) }
    dend_2 { pt3dadd( 27.9089, 62.6372, 6.85781, 0.25 ) }
    dend_2 { pt3dadd( 28.2614, 63.986, 7.49195, 0.25 ) }
    dend_2 { pt3dadd( 28.5167, 64.9952, 7.94074, 0.25 ) }
    dend_2 { pt3dadd( 28.619, 65.3393, 8.10139, 0.25 ) }
    dend_2 { pt3dadd( 31.4461, 72.1254, 10.0953, 0.25 ) }
    dend_2 { pt3dadd( 34.8104, 78.9407, 10.4306, 0.25 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 48/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 40.3479, -3.62031, 0.00907451, 0.12 ) }
    axon_1 { pt3dadd( 55.2785, -5.06173, 0.00907451, 0.12 ) }
    axon_1 { pt3dadd( 70.209, -6.50315, 0.00907451, 0.12 ) }
    // Section: dend_36, id: dend_36, parent: dend_17 (entry count 51/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 17.103, -10.9952, -4.58227, 1.84 ) }
    dend_36 { pt3dadd( 17.0524, -11.6608, -4.54662, 1.84 ) }
    // Section: dend_35, id: dend_35, parent: dend_17 (entry count 53/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 17.103, -10.9952, -4.58227, 0.49 ) }
    dend_35 { pt3dadd( 19.4915, -11.3536, -6.04025, 0.49 ) }
    dend_35 { pt3dadd( 21.6452, -11.7157, -7.32509, 0.49 ) }
    dend_35 { pt3dadd( 25.783, -12.4462, -9.72936, 0.49 ) }
    dend_35 { pt3dadd( 29.9487, -13.2398, -11.9562, 0.49 ) }
    dend_35 { pt3dadd( 31.3701, -13.5201, -12.6606, 0.49 ) }
    dend_35 { pt3dadd( 32.391, -13.7306, -13.1527, 0.49 ) }
    dend_35 { pt3dadd( 33.0248, -13.8891, -13.4454, 0.49 ) }
    dend_35 { pt3dadd( 35.6, -14.5755, -14.444, 0.49 ) }
    dend_35 { pt3dadd( 38.0296, -15.1409, -15.1438, 0.49 ) }
    dend_35 { pt3dadd( 39.0327, -15.3207, -15.4569, 0.49 ) }
    dend_35 { pt3dadd( 40.8396, -15.5374, -16.1587, 0.49 ) }
    dend_35 { pt3dadd( 42.648, -15.6779, -16.9457, 0.49 ) }
    dend_35 { pt3dadd( 44.9703, -15.8024, -18.0466, 0.49 ) }
    dend_35 { pt3dadd( 47.962, -15.845, -19.585, 0.49 ) }
    dend_35 { pt3dadd( 51.0654, -15.7766, -21.4117, 0.49 ) }
    dend_35 { pt3dadd( 54.0698, -15.6799, -23.3516, 0.49 ) }
    dend_35 { pt3dadd( 55.1133, -15.6311, -24.0704, 0.49 ) }
    dend_35 { pt3dadd( 55.2684, -15.624, -24.1839, 0.37 ) }
    dend_35 { pt3dadd( 56.8359, -15.5921, -25.4143, 0.25 ) }
    dend_35 { pt3dadd( 59.6599, -15.6465, -27.5836, 0.25 ) }
    dend_35 { pt3dadd( 61.1918, -15.6382, -28.7606, 0.25 ) }
    dend_35 { pt3dadd( 61.2437, -15.6405, -28.8, 0.25 ) }
    dend_35 { pt3dadd( 62.7977, -15.7532, -30.0968, 0.25 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 77/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 17.103, -10.9952, -4.58227, 0.86 ) }
    dend_18 { pt3dadd( 14.6566, -10.7736, -4.81035, 0.86 ) }
    dend_18 { pt3dadd( 13.2033, -10.6524, -4.94214, 0.74 ) }
    dend_18 { pt3dadd( 12.4724, -10.5952, -4.99303, 0.74 ) }
    dend_18 { pt3dadd( 11.0039, -10.4965, -5.0712, 0.61 ) }
    dend_18 { pt3dadd( 10.7082, -10.4761, -5.08409, 0.74 ) }
    dend_18 { pt3dadd( 9.3609, -10.3813, -5.06102, 1.11 ) }
    dend_18 { pt3dadd( 8.75852, -10.3526, -4.97098, 1.11 ) }
    dend_18 { pt3dadd( 7.72593, -10.3263, -4.80019, 0.37 ) }
    dend_18 { pt3dadd( 6.85224, -10.3311, -4.66296, 0.49 ) }
    dend_18 { pt3dadd( 6.24786, -10.3481, -4.55871, 0.49 ) }
    dend_18 { pt3dadd( 4.91298, -10.4551, -4.12096, 0.49 ) }
    dend_18 { pt3dadd( 3.5336, -10.6353, -3.31346, 0.49 ) }
    dend_18 { pt3dadd( 2.84901, -10.7275, -2.81532, 0.49 ) }
    dend_18 { pt3dadd( 2.29569, -10.7776, -2.35559, 0.49 ) }
    dend_18 { pt3dadd( 1.00653, -10.8425, -1.19118, 0.49 ) }
    dend_18 { pt3dadd( -0.671839, -10.8551, 0.374257, 0.49 ) }
    dend_18 { pt3dadd( -2.60207, -10.7206, 2.18688, 0.49 ) }
    dend_18 { pt3dadd( -3.19477, -10.603, 2.76215, 0.49 ) }
    dend_18 { pt3dadd( -4.34632, -10.2511, 3.86278, 0.49 ) }
    dend_18 { pt3dadd( -5.02192, -9.98253, 4.47685, 0.49 ) }
    dend_18 { pt3dadd( -5.49933, -9.76803, 4.84943, 0.49 ) }
    dend_18 { pt3dadd( -6.24828, -9.42041, 5.27157, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( -7.56849, -8.87785, 5.81358, 0.49 ) }
    dend_18 { pt3dadd( -8.64171, -8.72394, 6.5229, 0.49 ) }
    dend_18 { pt3dadd( -8.74369, -8.74012, 6.62099, 0.49 ) }
    dend_18 { pt3dadd( -9.48306, -8.90645, 7.42561, 0.49 ) }
    dend_18 { pt3dadd( -10.0164, -9.1062, 8.09136, 0.49 ) }
    dend_18 { pt3dadd( -10.1901, -9.20241, 8.33914, 0.49 ) }
    dend_18 { pt3dadd( -11.8644, -10.4084, 11.1097, 0.74 ) }
    dend_18 { pt3dadd( -12.3528, -10.6949, 11.9974, 0.37 ) }
    dend_18 { pt3dadd( -12.8592, -10.9019, 12.9943, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 51.1037, -20.4679, 19.3111, 0.37 ) }
    dend_16 { pt3dadd( 54.2568, -20.3272, 22.0266, 0.37 ) }
    dend_16 { pt3dadd( 55.3441, -20.2626, 22.8207, 0.37 ) }
    dend_16 { pt3dadd( 55.8413, -20.2292, 23.143, 0.37 ) }
    dend_16 { pt3dadd( 56.6297, -20.1876, 23.5679, 0.37 ) }
    dend_16 { pt3dadd( 56.901, -20.183, 23.6736, 0.37 ) }
    dend_16 { pt3dadd( 57.9056, -20.1786, 23.9518, 0.37 ) }
    dend_16 { pt3dadd( 58.3532, -20.19, 23.9695, 0.37 ) }
    dend_16 { pt3dadd( 58.5107, -20.1935, 23.9755, 0.37 ) }
    dend_16 { pt3dadd( 59.5661, -20.2182, 24.0187, 0.37 ) }
    dend_16 { pt3dadd( 61.349, -20.2686, 24.0969, 0.37 ) }
    dend_16 { pt3dadd( 63.1567, -20.3395, 24.179, 0.37 ) }
    dend_16 { pt3dadd( 73.8749, -22.3046, 29.39, 0.37 ) }
    dend_16 { pt3dadd( 84.0889, -22.5804, 35.8563, 0.37 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 23/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -92.0189, -23.0287, -4.31331, 0.37 ) }
    dend_12 { pt3dadd( -91.5326, -23.8564, -5.16455, 0.37 ) }
    dend_12 { pt3dadd( -91.2484, -24.3691, -5.67032, 0.37 ) }
    dend_12 { pt3dadd( -90.2759, -26.106, -7.34141, 0.37 ) }
    dend_12 { pt3dadd( -88.549, -29.0701, -10.0486, 0.37 ) }
    dend_12 { pt3dadd( -87.5678, -30.6922, -11.4684, 0.37 ) }
    dend_12 { pt3dadd( -85.8646, -33.6209, -13.8785, 0.37 ) }
    dend_12 { pt3dadd( -84.9631, -35.2658, -15.1896, 0.37 ) }
    dend_12 { pt3dadd( -83.5974, -37.6957, -17.0549, 0.37 ) }
    dend_12 { pt3dadd( -82.3531, -39.6651, -18.5249, 0.37 ) }
    dend_12 { pt3dadd( -80.6168, -42.0566, -20.1998, 0.37 ) }
    dend_12 { pt3dadd( -78.9223, -44.1894, -21.6575, 0.37 ) }
    dend_12 { pt3dadd( -76.6441, -46.7852, -23.3067, 0.37 ) }
    dend_12 { pt3dadd( -73.719, -50.0153, -25.3569, 0.37 ) }
    dend_12 { pt3dadd( -70.8089, -53.0476, -27.2165, 0.37 ) }
    dend_12 { pt3dadd( -68.5817, -55.2452, -28.5722, 0.37 ) }
    dend_12 { pt3dadd( -67.3539, -56.3967, -29.2339, 0.37 ) }
    dend_12 { pt3dadd( -63.0595, -60.2266, -31.4045, 0.37 ) }
    dend_12 { pt3dadd( -59.9157, -63.0026, -32.8837, 0.37 ) }
    dend_12 { pt3dadd( -57.1557, -65.6219, -34.1608, 0.37 ) }
    dend_12 { pt3dadd( -54.4746, -68.4051, -35.4359, 0.25 ) }
    dend_12 { pt3dadd( -51.7207, -71.2444, -36.7795, 0.12 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 45/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -92.0189, -23.0287, -4.31331, 0.37 ) }
    dend_11 { pt3dadd( -94.1081, -25.2157, -6.05443, 0.37 ) }
    dend_11 { pt3dadd( -96.6566, -27.8669, -8.29245, 0.37 ) }
    dend_11 { pt3dadd( -99.3438, -30.6497, -10.6516, 0.37 ) }
    dend_11 { pt3dadd( -100.572, -31.9458, -11.76, 0.37 ) }
    dend_11 { pt3dadd( -101.327, -32.7351, -12.4255, 0.37 ) }
    dend_11 { pt3dadd( -102.945, -34.4241, -13.8439, 0.37 ) }
    dend_11 { pt3dadd( -104.077, -35.6008, -14.8709, 0.37 ) }
    dend_11 { pt3dadd( -104.657, -36.1945, -15.3527, 0.37 ) }
    dend_11 { pt3dadd( -106.566, -37.9888, -16.5367, 0.37 ) }
    dend_11 { pt3dadd( -107.572, -38.8942, -17.028, 0.37 ) }
    dend_11 { pt3dadd( -108.564, -39.7635, -17.4716, 0.25 ) }
    dend_11 { pt3dadd( -109.607, -40.6772, -17.8343, 0.25 ) }
    dend_11 { pt3dadd( -111.999, -42.7008, -18.5075, 0.25 ) }
    dend_11 { pt3dadd( -113.282, -43.7432, -18.8142, 0.25 ) }
    dend_11 { pt3dadd( -113.874, -44.188, -18.8822, 0.25 ) }
    // Section: dend_8, id: dend_8, parent: dend_5 (entry count 61/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 337.474, 148.072, -48.185, 0.25 ) }
    dend_8 { pt3dadd( 338.809, 148.995, -48.8554, 0.25 ) }
    dend_8 { pt3dadd( 340.035, 149.841, -49.4706, 0.25 ) }
    dend_8 { pt3dadd( 341.057, 150.547, -49.9837, 0.25 ) }
    dend_8 { pt3dadd( 343.259, 152.069, -51.0893, 0.25 ) }
    dend_8 { pt3dadd( 345.519, 153.631, -52.224, 0.25 ) }
    dend_8 { pt3dadd( 347.707, 155.142, -53.3222, 0.25 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 68/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 337.474, 148.072, -48.185, 0.25 ) }
    dend_7 { pt3dadd( 337.988, 150.044, -49.4603, 0.25 ) }
    dend_7 { pt3dadd( 338.314, 151.298, -50.271, 0.25 ) }
    dend_7 { pt3dadd( 338.526, 152.113, -50.7982, 0.25 ) }
    dend_7 { pt3dadd( 339.046, 154.109, -52.089, 0.25 ) }
    dend_7 { pt3dadd( 339.459, 155.691, -53.112, 0.25 ) }
    dend_7 { pt3dadd( 339.566, 156.105, -53.3796, 0.25 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 75/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 337.474, 148.072, -48.185, 0.25 ) }
    dend_6 { pt3dadd( 340.642, 148.093, -46.6085, 0.25 ) }
    dend_6 { pt3dadd( 342.487, 148.105, -45.6904, 0.25 ) }
    dend_6 { pt3dadd( 345.093, 148.123, -44.3936, 0.25 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 79/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 34.8104, 78.9407, 10.4306, 0.25 ) }
    dend_4 { pt3dadd( 36.5436, 87.8315, 11.6117, 0.25 ) }
    dend_4 { pt3dadd( 39.0218, 96.4518, 13.5017, 0.25 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 82/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 34.8104, 78.9407, 10.4306, 0.25 ) }
    dend_3 { pt3dadd( 39.9692, 87.8411, 13.4972, 0.25 ) }
    dend_3 { pt3dadd( 46.16, 96.3787, 15.7095, 0.25 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 85/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 17.0524, -11.6608, -4.54662, 0.86 ) }
    dend_37 { pt3dadd( 15.9988, -14.6273, -8.22055, 0.86 ) }
    dend_37 { pt3dadd( 15.4432, -16.1918, -10.1582, 0.86 ) }
    dend_37 { pt3dadd( 14.8037, -17.9922, -12.3881, 0.86 ) }
    dend_37 { pt3dadd( 14.1248, -19.9038, -14.7556, 0.86 ) }
    dend_37 { pt3dadd( 14.1084, -19.9499, -14.8127, 0.86 ) }
    // Section: dend_26, id: dend_26, parent: dend_18 (entry count 91/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -12.8592, -10.9019, 12.9943, 0.37 ) }
    dend_26 { pt3dadd( -14.1396, -10.7362, 14.0866, 0.37 ) }
    dend_26 { pt3dadd( -15.6109, -10.5459, 15.3417, 0.37 ) }
    dend_26 { pt3dadd( -16.694, -10.4059, 16.2656, 0.37 ) }
    dend_26 { pt3dadd( -17.4006, -10.3145, 16.8683, 0.37 ) }
    dend_26 { pt3dadd( -19.2135, -10.08, 18.4148, 0.37 ) }
    dend_26 { pt3dadd( -22.4746, -9.65824, 21.1968, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 98/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -12.8592, -10.9019, 12.9943, 0.37 ) }
    dend_19 { pt3dadd( -14.1282, -11.1396, 12.598, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_19 { pt3dadd( -14.3175, -11.1811, 12.5457, 0.37 ) }
    dend_19 { pt3dadd( -14.6638, -11.1556, 12.3314, 0.37 ) }
    dend_19 { pt3dadd( -14.7853, -11.1361, 12.2498, 0.37 ) }
    dend_19 { pt3dadd( -15.3492, -11.0278, 11.8719, 0.37 ) }
    dend_19 { pt3dadd( -15.6837, -10.9601, 11.6608, 0.37 ) }
    dend_19 { pt3dadd( -15.797, -10.9316, 11.5908, 0.37 ) }
    dend_19 { pt3dadd( -17.9818, -10.3443, 10.3124, 0.37 ) }
    dend_19 { pt3dadd( -18.4521, -10.2113, 10.0495, 0.37 ) }
    dend_19 { pt3dadd( -18.6957, -10.1396, 9.92371, 0.37 ) }
    dend_19 { pt3dadd( -19.2786, -9.95598, 9.6019, 0.37 ) }
    dend_19 { pt3dadd( -19.5093, -9.90699, 9.444, 0.37 ) }
    dend_19 { pt3dadd( -20.0138, -9.8738, 8.97179, 0.37 ) }
    dend_19 { pt3dadd( -20.2112, -9.88432, 8.76837, 0.37 ) }
    dend_19 { pt3dadd( -20.4981, -9.88766, 8.46285, 0.37 ) }
    dend_19 { pt3dadd( -21.5456, -9.82183, 7.19795, 0.37 ) }
    dend_19 { pt3dadd( -23.0115, -9.6048, 5.38243, 0.37 ) }
    dend_19 { pt3dadd( -24.3674, -9.3295, 3.72449, 0.37 ) }
    dend_19 { pt3dadd( -24.9804, -9.17832, 2.98062, 0.37 ) }
    dend_19 { pt3dadd( -25.7425, -8.94972, 2.1001, 0.37 ) }
    dend_19 { pt3dadd( -27.5126, -8.2746, 0.172116, 0.37 ) }
    dend_19 { pt3dadd( -28.4075, -7.8355, -0.662396, 0.37 ) }
    dend_19 { pt3dadd( -28.7961, -7.58305, -0.961557, 0.37 ) }
    dend_19 { pt3dadd( -28.8877, -7.51063, -1.04972, 0.37 ) }
    dend_19 { pt3dadd( -29.2676, -7.17477, -1.522, 0.37 ) }
    dend_19 { pt3dadd( -29.8535, -6.65495, -2.34362, 0.49 ) }
    dend_19 { pt3dadd( -30.1292, -6.41555, -2.83326, 0.74 ) }
    dend_19 { pt3dadd( -30.3529, -6.258, -3.25858, 0.74 ) }
    dend_19 { pt3dadd( -32.3946, -5.15095, -6.69733, 0.49 ) }
    dend_19 { pt3dadd( -32.6609, -5.03666, -7.10475, 0.49 ) }
    dend_19 { pt3dadd( -32.9835, -4.93346, -7.54605, 0.49 ) }
    dend_19 { pt3dadd( -34.9467, -4.48271, -9.90318, 0.37 ) }
    dend_19 { pt3dadd( -35.9872, -4.32431, -10.9667, 0.37 ) }
    dend_19 { pt3dadd( -37.3106, -4.23056, -12.0202, 0.37 ) }
    dend_19 { pt3dadd( -37.5694, -4.24036, -12.1361, 0.37 ) }
    dend_19 { pt3dadd( -38.3358, -4.2856, -12.4448, 0.37 ) }
    dend_19 { pt3dadd( -38.4772, -4.29496, -12.4855, 0.37 ) }
    dend_19 { pt3dadd( -39.3062, -4.34901, -12.4881, 0.37 ) }
    dend_19 { pt3dadd( -39.4421, -4.35762, -12.489, 0.37 ) }
    dend_19 { pt3dadd( -40.5062, -4.56181, -12.5541, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 39/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 14.1084, -19.9499, -14.8127, 0.25 ) }
    dend_41 { pt3dadd( 13.4649, -21.6587, -14.5688, 0.25 ) }
    dend_41 { pt3dadd( 12.9957, -22.8941, -14.4065, 0.37 ) }
    dend_41 { pt3dadd( 12.4647, -24.2086, -14.2519, 0.37 ) }
    dend_41 { pt3dadd( 11.9281, -25.3897, -14.5217, 0.37 ) }
    dend_41 { pt3dadd( 11.5476, -26.1212, -14.8318, 0.37 ) }
    dend_41 { pt3dadd( 11.0521, -27.0046, -15.2289, 0.37 ) }
    dend_41 { pt3dadd( 11.0274, -27.0465, -15.2526, 0.37 ) }
    dend_41 { pt3dadd( 10.2017, -28.3282, -16.0774, 0.37 ) }
    dend_41 { pt3dadd( 7.64126, -31.9072, -18.7399, 0.37 ) }
    dend_41 { pt3dadd( 6.90286, -32.8532, -19.5311, 0.37 ) }
    dend_41 { pt3dadd( 5.87664, -34.1246, -20.6866, 0.37 ) }
    dend_41 { pt3dadd( 5.64577, -34.4146, -20.9663, 0.37 ) }
    dend_41 { pt3dadd( 5.59083, -34.4826, -21.0325, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 53/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 14.1084, -19.9499, -14.8127, 0.61 ) }
    dend_38 { pt3dadd( 14.1123, -20.634, -17.2023, 0.61 ) }
    dend_38 { pt3dadd( 14.1666, -21.0936, -19.2598, 0.61 ) }
    dend_38 { pt3dadd( 14.1781, -21.2591, -20.2073, 0.61 ) }
    dend_38 { pt3dadd( 14.1789, -21.4642, -21.5771, 0.61 ) }
    dend_38 { pt3dadd( 14.0569, -21.9114, -24.7781, 0.61 ) }
    dend_38 { pt3dadd( 13.9848, -22.0249, -25.5202, 0.61 ) }
    dend_38 { pt3dadd( 13.9079, -22.0737, -26.0314, 0.61 ) }
    dend_38 { pt3dadd( 13.6352, -22.1606, -27.3262, 0.61 ) }
    dend_38 { pt3dadd( 13.5993, -22.1749, -27.4226, 0.61 ) }
    dend_38 { pt3dadd( 12.9629, -22.5969, -28.1794, 0.61 ) }
    dend_38 { pt3dadd( 12.1295, -23.413, -29.2134, 0.61 ) }
    dend_38 { pt3dadd( 11.9214, -23.7288, -29.763, 0.61 ) }
    dend_38 { pt3dadd( 11.8988, -23.7784, -29.8608, 0.61 ) }
    dend_38 { pt3dadd( 11.6778, -24.474, -31.2684, 0.61 ) }
    dend_38 { pt3dadd( 11.6272, -24.7024, -31.7437, 0.61 ) }
    dend_38 { pt3dadd( 11.3474, -26.4325, -35.6037, 0.61 ) }
    dend_38 { pt3dadd( 11.098, -28.0782, -39.4682, 0.61 ) }
    dend_38 { pt3dadd( 10.9555, -28.9492, -41.5659, 0.61 ) }
    dend_38 { pt3dadd( 10.842, -29.5645, -43.0943, 0.61 ) }
    dend_38 { pt3dadd( 10.6834, -30.41, -45.2553, 0.61 ) }
    dend_38 { pt3dadd( 10.4394, -31.8209, -48.6306, 0.61 ) }
    dend_38 { pt3dadd( 10.4072, -32.0124, -49.0211, 0.61 ) }
    dend_38 { pt3dadd( 10.3775, -32.237, -49.4367, 0.61 ) }
    dend_38 { pt3dadd( 10.3582, -32.5374, -49.985, 0.61 ) }
    dend_38 { pt3dadd( 10.3773, -33.0801, -50.9284, 0.61 ) }
    dend_38 { pt3dadd( 10.4422, -33.4162, -51.4116, 0.61 ) }
    dend_38 { pt3dadd( 10.5982, -33.9577, -52.1274, 0.61 ) }
    dend_38 { pt3dadd( 10.7244, -34.479, -52.9329, 0.61 ) }
    dend_38 { pt3dadd( 10.7111, -34.7972, -53.5405, 0.61 ) }
    dend_38 { pt3dadd( 10.6382, -35.0439, -54.1275, 0.61 ) }
    dend_38 { pt3dadd( 10.619, -35.0774, -54.2239, 0.61 ) }
    dend_38 { pt3dadd( 10.1322, -35.6891, -56.4299, 0.61 ) }
    dend_38 { pt3dadd( 10.1185, -35.7032, -56.4871, 0.61 ) }
    dend_38 { pt3dadd( 9.25075, -36.4216, -59.7739, 0.61 ) }
    dend_38 { pt3dadd( 8.66806, -36.8506, -61.9163, 0.61 ) }
    dend_38 { pt3dadd( 8.27176, -37.133, -63.4318, 0.61 ) }
    dend_38 { pt3dadd( 7.32981, -37.7314, -66.7122, 0.61 ) }
    dend_38 { pt3dadd( 7.27018, -37.7678, -66.9175, 0.61 ) }
    dend_38 { pt3dadd( 7.04528, -37.9042, -67.6997, 0.61 ) }
    dend_38 { pt3dadd( 6.35575, -38.2599, -70.0021, 0.61 ) }
    dend_38 { pt3dadd( 5.3102, -38.8235, -73.3961, 0.61 ) }
    dend_38 { pt3dadd( 4.85259, -39.0923, -74.9001, 0.61 ) }
    dend_38 { pt3dadd( 3.91122, -39.7008, -77.8861, 0.61 ) }
    dend_38 { pt3dadd( 3.65854, -39.8795, -78.7464, 0.61 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 98/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -22.4746, -9.65824, 21.1968, 0.37 ) }
    dend_32 { pt3dadd( -21.5315, -9.15492, 21.5163, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_32 { pt3dadd( -21.147, -8.94974, 21.6466, 0.37 ) }
    dend_32 { pt3dadd( -19.9207, -8.29526, 22.0621, 0.37 ) }
    dend_32 { pt3dadd( -18.8905, -7.74541, 22.4112, 0.37 ) }
    dend_32 { pt3dadd( -18.2573, -7.4075, 22.6257, 0.37 ) }
    dend_32 { pt3dadd( -17.7102, -7.11552, 22.8111, 0.37 ) }
    dend_32 { pt3dadd( -9.98002, -3.31472, 25.7258, 0.37 ) }
    dend_32 { pt3dadd( -2.59445, 0.862679, 28.9359, 0.37 ) }
    dend_32 { pt3dadd( 4.36432, 5.90064, 31.6956, 0.37 ) }
    dend_32 { pt3dadd( 10.8701, 11.7598, 33.662, 0.37 ) }
    dend_32 { pt3dadd( 18.2242, 16.1524, 36.6171, 0.37 ) }
    dend_32 { pt3dadd( 24.9361, 21.9142, 38.1849, 0.37 ) }
    dend_32 { pt3dadd( 30.7289, 28.6806, 38.6261, 0.37 ) }
    dend_32 { pt3dadd( 36.7071, 35.2174, 39.7538, 0.37 ) }
    dend_32 { pt3dadd( 42.5752, 41.94, 39.4252, 0.37 ) }
    dend_32 { pt3dadd( 49.0924, 47.8138, 37.384, 0.37 ) }
    dend_32 { pt3dadd( 55.072, 54.309, 35.8599, 0.37 ) }
    dend_32 { pt3dadd( 62.0939, 59.2906, 33.0082, 0.37 ) }
    dend_32 { pt3dadd( 67.7106, 65.2179, 29.173, 0.37 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 18/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -22.4746, -9.65824, 21.1968, 0.25 ) }
    dend_27 { pt3dadd( -23.1663, -9.44619, 22.4952, 0.25 ) }
    dend_27 { pt3dadd( -23.8251, -9.24426, 23.7318, 0.25 ) }
    dend_27 { pt3dadd( -24.11, -9.15694, 24.2666, 0.25 ) }
    dend_27 { pt3dadd( -24.252, -9.11339, 24.5332, 0.37 ) }
    dend_27 { pt3dadd( -26.5107, -8.42104, 28.7729, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 24/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -40.5062, -4.56181, -12.5541, 0.25 ) }
    dend_21 { pt3dadd( -41.5253, -4.3281, -12.7766, 0.25 ) }
    dend_21 { pt3dadd( -42.2705, -4.14084, -12.9143, 0.25 ) }
    dend_21 { pt3dadd( -43.3244, -3.93759, -13.1865, 0.25 ) }
    dend_21 { pt3dadd( -43.5769, -3.89505, -13.2518, 0.25 ) }
    dend_21 { pt3dadd( -44.0624, -3.81753, -13.4127, 0.25 ) }
    dend_21 { pt3dadd( -44.9946, -3.67271, -13.7399, 0.25 ) }
    dend_21 { pt3dadd( -45.8656, -3.54538, -14.0425, 0.61 ) }
    dend_21 { pt3dadd( -48.0234, -3.26842, -14.8402, 0.25 ) }
    dend_21 { pt3dadd( -49.2329, -3.15638, -15.3011, 0.49 ) }
    dend_21 { pt3dadd( -51.0528, -3.00312, -16.0027, 0.12 ) }
    dend_21 { pt3dadd( -51.7714, -2.94551, -16.2768, 0.12 ) }
    dend_21 { pt3dadd( -52.5014, -2.88614, -16.5501, 0.12 ) }
    dend_21 { pt3dadd( -52.6313, -2.88196, -16.5947, 0.12 ) }
    dend_21 { pt3dadd( -53.3312, -2.86564, -16.7822, 0.12 ) }
    dend_21 { pt3dadd( -53.4658, -2.86707, -16.8096, 0.12 ) }
    dend_21 { pt3dadd( -54.3694, -2.93086, -16.8669, 0.12 ) }
    dend_21 { pt3dadd( -54.4948, -2.94327, -16.8749, 0.12 ) }
    dend_21 { pt3dadd( -55.1345, -3.00689, -16.916, 0.12 ) }
    dend_21 { pt3dadd( -55.2711, -3.01682, -16.9246, 0.12 ) }
    dend_21 { pt3dadd( -55.7946, -3.03556, -16.9573, 0.12 ) }
    dend_21 { pt3dadd( -56.1849, -3.02236, -16.9809, 0.12 ) }
    dend_21 { pt3dadd( -56.3109, -3.00919, -16.9883, 0.12 ) }
    dend_21 { pt3dadd( -56.695, -2.93936, -17.01, 0.12 ) }
    dend_21 { pt3dadd( -56.8167, -2.90629, -17.0165, 0.12 ) }
    dend_21 { pt3dadd( -57.3123, -2.74408, -17.0931, 0.12 ) }
    dend_21 { pt3dadd( -58.0814, -2.63509, -17.351, 0.12 ) }
    dend_21 { pt3dadd( -58.1804, -2.65314, -17.4278, 0.12 ) }
    dend_21 { pt3dadd( -58.2798, -2.67056, -17.5043, 0.12 ) }
    dend_21 { pt3dadd( -58.3976, -2.68186, -17.5738, 0.12 ) }
    dend_21 { pt3dadd( -59.0853, -2.73068, -17.9967, 0.12 ) }
    dend_21 { pt3dadd( -60.3689, -2.82716, -18.8089, 0.49 ) }
    dend_21 { pt3dadd( -62.0956, -3.0529, -19.8247, 0.61 ) }
    dend_21 { pt3dadd( -63.5982, -3.26547, -20.6485, 0.61 ) }
    dend_21 { pt3dadd( -65.3859, -3.50177, -21.5226, 0.25 ) }
    dend_21 { pt3dadd( -66.8382, -3.6779, -22.1471, 0.25 ) }
    dend_21 { pt3dadd( -66.9572, -3.69193, -22.1881, 0.25 ) }
    dend_21 { pt3dadd( -68.9763, -3.90075, -22.7402, 0.25 ) }
    dend_21 { pt3dadd( -69.2327, -3.93948, -22.7878, 0.37 ) }
    dend_21 { pt3dadd( -70.3499, -4.19835, -23.0067, 0.61 ) }
    dend_21 { pt3dadd( -70.6204, -4.27578, -23.0589, 0.61 ) }
    dend_21 { pt3dadd( -72.1833, -4.69909, -23.2132, 0.12 ) }
    dend_21 { pt3dadd( -72.2443, -4.71354, -23.2194, 0.61 ) }
    dend_21 { pt3dadd( -73.9698, -4.99782, -23.4085, 0.61 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 68/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -40.5062, -4.56181, -12.5541, 0.25 ) }
    dend_20 { pt3dadd( -39.5402, -6.72171, -12.6347, 0.25 ) }
    dend_20 { pt3dadd( -39.498, -6.8159, -12.6382, 0.61 ) }
    dend_20 { pt3dadd( -39.1334, -7.63116, -12.6687, 0.61 ) }
    dend_20 { pt3dadd( -38.3589, -9.36275, -12.7334, 0.12 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 73/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 5.59083, -34.4826, -21.0325, 0.25 ) }
    dend_43 { pt3dadd( 4.73786, -36.9986, -20.8583, 0.25 ) }
    dend_43 { pt3dadd( 4.0825, -38.8445, -20.7307, 0.25 ) }
    dend_43 { pt3dadd( 3.41798, -40.6341, -20.6068, 0.25 ) }
    dend_43 { pt3dadd( 3.01414, -41.7076, -20.5327, 0.25 ) }
    dend_43 { pt3dadd( 2.50553, -43.0558, -20.44, 0.25 ) }
    dend_43 { pt3dadd( 2.06935, -44.3495, -20.2996, 0.25 ) }
    dend_43 { pt3dadd( 1.91715, -44.8298, -20.224, 0.25 ) }
    dend_43 { pt3dadd( 1.73043, -45.5575, -20.0666, 0.25 ) }
    dend_43 { pt3dadd( 1.6611, -45.9964, -19.9639, 0.25 ) }
    dend_43 { pt3dadd( 1.64246, -46.2222, -19.9105, 0.25 ) }
    dend_43 { pt3dadd( 1.63616, -48.5046, -19.3967, 0.25 ) }
    dend_43 { pt3dadd( 1.63334, -48.6595, -19.3659, 0.25 ) }
    dend_43 { pt3dadd( 1.60492, -49.1238, -19.2917, 0.25 ) }
    dend_43 { pt3dadd( 1.45017, -50.5198, -19.126, 0.25 ) }
    dend_43 { pt3dadd( 1.40302, -50.7696, -19.1066, 0.25 ) }
    dend_43 { pt3dadd( 1.22407, -51.4679, -19.0787, 0.25 ) }
    dend_43 { pt3dadd( 0.818479, -52.683, -19.0833, 0.37 ) }
    dend_43 { pt3dadd( 0.474761, -53.6465, -19.0696, 0.37 ) }
    dend_43 { pt3dadd( 0.112678, -54.6137, -19.0356, 0.37 ) }
    dend_43 { pt3dadd( -0.46365, -56.0689, -18.9398, 0.37 ) }
    dend_43 { pt3dadd( -0.822756, -56.9406, -18.8819, 0.37 ) }
    dend_43 { pt3dadd( -0.927456, -57.1783, -18.8658, 0.37 ) }
    dend_43 { pt3dadd( -1.24865, -57.8283, -18.8206, 0.37 ) }
    dend_43 { pt3dadd( -1.30217, -57.9274, -18.8135, 0.37 ) }
    dend_43 { pt3dadd( -1.63552, -58.4862, -18.7724, 0.37 ) }
    dend_43 { pt3dadd( -1.71641, -58.6319, -18.762, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_43 { pt3dadd( -2.26829, -59.7434, -18.6845, 0.37 ) }
    dend_43 { pt3dadd( -2.66642, -60.7398, -18.6188, 0.37 ) }
    dend_43 { pt3dadd( -2.71383, -60.8982, -18.609, 0.37 ) }
    dend_43 { pt3dadd( -2.95349, -61.9455, -18.4679, 0.37 ) }
    dend_43 { pt3dadd( -3.13995, -62.8443, -18.3141, 0.37 ) }
    dend_43 { pt3dadd( -3.16986, -62.9968, -18.2844, 0.37 ) }
    dend_43 { pt3dadd( -3.31119, -63.7941, -18.1152, 0.37 ) }
    dend_43 { pt3dadd( -3.62002, -65.8065, -17.6717, 0.37 ) }
    dend_43 { pt3dadd( -3.9498, -68.0883, -17.1633, 0.37 ) }
    dend_43 { pt3dadd( -4.07381, -68.9509, -16.9672, 0.37 ) }
    dend_43 { pt3dadd( -4.09161, -69.0586, -16.9426, 0.37 ) }
    dend_43 { pt3dadd( -4.27132, -69.9435, -16.7542, 0.37 ) }
    dend_43 { pt3dadd( -4.43245, -70.5822, -16.6333, 0.37 ) }
    dend_43 { pt3dadd( -4.58984, -71.1269, -16.5545, 0.37 ) }
    dend_43 { pt3dadd( -4.75916, -71.5622, -16.526, 0.37 ) }
    dend_43 { pt3dadd( -4.86813, -71.7887, -16.5103, 0.37 ) }
    dend_43 { pt3dadd( -5.75179, -73.3779, -16.396, 0.37 ) }
    dend_43 { pt3dadd( -6.30327, -74.1879, -16.3338, 0.37 ) }
    dend_43 { pt3dadd( -6.40565, -74.3208, -16.3232, 0.37 ) }
    dend_43 { pt3dadd( -7.40709, -75.5118, -16.2245, 0.37 ) }
    dend_43 { pt3dadd( -8.00111, -76.2083, -16.1664, 0.37 ) }
    dend_43 { pt3dadd( -8.53122, -76.8348, -16.1144, 0.37 ) }
    dend_43 { pt3dadd( -9.06433, -77.4628, -16.0621, 0.37 ) }
    dend_43 { pt3dadd( -9.14378, -77.5569, -16.0543, 0.37 ) }
    dend_43 { pt3dadd( -9.70162, -78.2633, -15.9972, 0.37 ) }
    dend_43 { pt3dadd( -10.1787, -78.9195, -15.9457, 0.37 ) }
    dend_43 { pt3dadd( -10.6497, -79.6042, -15.8929, 0.37 ) }
    dend_43 { pt3dadd( -11.2388, -80.4963, -15.8252, 0.37 ) }
    dend_43 { pt3dadd( -11.2943, -80.594, -15.8181, 0.37 ) }
    dend_43 { pt3dadd( -11.7557, -81.4671, -15.7562, 0.37 ) }
    dend_43 { pt3dadd( -11.8006, -81.57, -15.7493, 0.37 ) }
    dend_43 { pt3dadd( -12.1025, -82.4453, -15.6934, 0.37 ) }
    dend_43 { pt3dadd( -12.1321, -82.5532, -15.6974, 0.37 ) }
    dend_43 { pt3dadd( -12.3628, -83.424, -15.7844, 0.37 ) }
    dend_43 { pt3dadd( -12.4096, -83.5877, -15.8073, 0.37 ) }
    dend_43 { pt3dadd( -12.732, -84.6745, -15.9958, 0.37 ) }
    dend_43 { pt3dadd( -13.0372, -85.6396, -16.1817, 0.37 ) }
    dend_43 { pt3dadd( -13.5925, -87.2617, -16.5119, 0.37 ) }
    dend_43 { pt3dadd( -13.7556, -87.682, -16.5983, 0.37 ) }
    dend_43 { pt3dadd( -13.8196, -87.8254, -16.6256, 0.37 ) }
    dend_43 { pt3dadd( -14.1684, -88.5557, -16.7284, 0.37 ) }
    dend_43 { pt3dadd( -14.239, -88.6933, -16.7695, 0.37 ) }
    dend_43 { pt3dadd( -14.5838, -89.5527, -17.1268, 0.37 ) }
    dend_43 { pt3dadd( -14.6266, -89.6874, -17.1848, 0.37 ) }
    dend_43 { pt3dadd( -14.8653, -90.7652, -17.6675, 0.37 ) }
    dend_43 { pt3dadd( -15.0501, -91.8491, -18.1492, 0.37 ) }
    dend_43 { pt3dadd( -15.4921, -94.5453, -19.3291, 0.37 ) }
    dend_43 { pt3dadd( -15.9278, -96.9664, -20.4785, 0.37 ) }
    dend_43 { pt3dadd( -16.0731, -97.6778, -20.8362, 0.37 ) }
    dend_43 { pt3dadd( -16.5738, -99.8524, -21.9563, 0.25 ) }
    dend_43 { pt3dadd( -16.8166, -100.757, -22.4206, 0.37 ) }
    dend_43 { pt3dadd( -17.1519, -101.823, -22.9335, 0.37 ) }
    dend_43 { pt3dadd( -17.9, -103.722, -23.6363, 0.37 ) }
    dend_43 { pt3dadd( -18.253, -104.356, -23.8789, 0.37 ) }
    dend_43 { pt3dadd( -18.4297, -104.62, -23.9871, 0.37 ) }
    dend_43 { pt3dadd( -19.2088, -105.603, -24.3627, 0.37 ) }
    dend_43 { pt3dadd( -19.3408, -105.778, -24.4236, 0.37 ) }
    dend_43 { pt3dadd( -19.7912, -106.471, -24.5938, 0.37 ) }
    dend_43 { pt3dadd( -20.429, -107.574, -24.7271, 0.37 ) }
    dend_43 { pt3dadd( -20.5048, -107.719, -24.7511, 0.37 ) }
    dend_43 { pt3dadd( -21.1112, -109.036, -24.8084, 0.37 ) }
    dend_43 { pt3dadd( -21.1544, -109.139, -24.8036, 0.37 ) }
    dend_43 { pt3dadd( -21.5902, -110.284, -24.6168, 0.37 ) }
    dend_43 { pt3dadd( -21.6263, -110.386, -24.5868, 0.37 ) }
    dend_43 { pt3dadd( -22.0577, -111.657, -23.7903, 0.37 ) }
    dend_43 { pt3dadd( -22.7309, -113.609, -22.2261, 0.37 ) }
    dend_43 { pt3dadd( -22.7911, -113.776, -22.0684, 0.37 ) }
    dend_43 { pt3dadd( -23.012, -114.341, -21.4894, 0.37 ) }
    dend_43 { pt3dadd( -23.1176, -114.592, -21.2035, 0.37 ) }
    dend_43 { pt3dadd( -24.1731, -116.842, -18.4899, 0.37 ) }
    dend_43 { pt3dadd( -24.3375, -117.151, -18.1024, 0.37 ) }
    dend_43 { pt3dadd( -24.5561, -117.512, -17.691, 0.37 ) }
    dend_43 { pt3dadd( -24.731, -117.78, -17.4224, 0.37 ) }
    dend_43 { pt3dadd( -25.6973, -119.122, -16.3787, 0.37 ) }
    dend_43 { pt3dadd( -25.8474, -119.303, -16.2921, 0.37 ) }
    dend_43 { pt3dadd( -26.4758, -119.853, -16.2729, 0.37 ) }
    dend_43 { pt3dadd( -26.576, -119.928, -16.2778, 0.37 ) }
    dend_43 { pt3dadd( -27.747, -120.707, -16.4084, 0.25 ) }
    dend_43 { pt3dadd( -28.7522, -121.324, -16.5735, 0.12 ) }
    dend_43 { pt3dadd( -29.7033, -121.871, -16.7811, 0.12 ) }
    dend_43 { pt3dadd( -30.7568, -122.486, -16.9695, 0.12 ) }
    dend_43 { pt3dadd( -31.2563, -122.793, -17.0533, 0.25 ) }
    dend_43 { pt3dadd( -31.3592, -122.862, -17.0721, 0.25 ) }
    dend_43 { pt3dadd( -31.9643, -123.288, -17.176, 0.25 ) }
    dend_43 { pt3dadd( -32.4651, -123.679, -17.1284, 0.25 ) }
    dend_43 { pt3dadd( -32.559, -123.757, -17.1028, 0.25 ) }
    dend_43 { pt3dadd( -33.5796, -124.61, -16.6675, 0.25 ) }
    dend_43 { pt3dadd( -34.0056, -124.949, -16.4471, 0.25 ) }
    dend_43 { pt3dadd( -34.842, -125.584, -15.9716, 0.37 ) }
    dend_43 { pt3dadd( -36.8054, -127.021, -14.8036, 0.37 ) }
    dend_43 { pt3dadd( -36.8898, -127.083, -14.7536, 0.37 ) }
    dend_43 { pt3dadd( -37.5178, -127.54, -14.3746, 0.37 ) }
    dend_43 { pt3dadd( -37.6295, -127.624, -14.3049, 0.37 ) }
    dend_43 { pt3dadd( -38.1726, -128.054, -13.9941, 0.37 ) }
    dend_43 { pt3dadd( -38.9948, -128.702, -13.5061, 0.37 ) }
    dend_43 { pt3dadd( -39.5618, -129.128, -13.2144, 0.37 ) }
    dend_43 { pt3dadd( -39.6526, -129.197, -13.1625, 0.37 ) }
    dend_43 { pt3dadd( -40.1798, -129.591, -12.8081, 0.37 ) }
    dend_43 { pt3dadd( -41.1019, -130.25, -12.0989, 0.25 ) }
    dend_43 { pt3dadd( -42.1359, -130.92, -11.0942, 0.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_43 { pt3dadd( -42.1754, -130.942, -11.0436, 0.25 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 5.59083, -34.4826, -21.0325, 0.37 ) }
    dend_42 { pt3dadd( 4.08739, -34.7206, -20.3518, 0.37 ) }
    dend_42 { pt3dadd( 3.47589, -34.8747, -20.0285, 0.37 ) }
    dend_42 { pt3dadd( 2.70249, -35.1284, -19.5488, 0.37 ) }
    dend_42 { pt3dadd( 2.04997, -35.371, -19.1156, 0.25 ) }
    dend_42 { pt3dadd( 0.712581, -35.9221, -18.2118, 0.25 ) }
    dend_42 { pt3dadd( -0.351949, -36.3895, -17.4887, 0.25 ) }
    dend_42 { pt3dadd( -1.04103, -36.7571, -16.9737, 0.25 ) }
    dend_42 { pt3dadd( -1.79288, -37.1535, -16.5444, 0.25 ) }
    dend_42 { pt3dadd( -1.93032, -37.2197, -16.4918, 0.25 ) }
    dend_42 { pt3dadd( -2.59771, -37.5139, -16.3158, 0.25 ) }
    dend_42 { pt3dadd( -2.75448, -37.5728, -16.2919, 0.25 ) }
    dend_42 { pt3dadd( -4.0475, -37.9967, -16.1615, 0.25 ) }
    dend_42 { pt3dadd( -7.32107, -38.9047, -15.899, 0.25 ) }
    dend_42 { pt3dadd( -9.4806, -39.3923, -15.6732, 0.25 ) }
    dend_42 { pt3dadd( -9.60187, -39.413, -15.6569, 0.25 ) }
    dend_42 { pt3dadd( -10.8723, -39.5502, -15.4561, 0.25 ) }
    dend_42 { pt3dadd( -10.9281, -39.5522, -15.4432, 0.25 ) }
    dend_42 { pt3dadd( -12.1508, -39.4915, -15.0565, 0.25 ) }
    dend_42 { pt3dadd( -14.3793, -39.173, -14.147, 0.25 ) }
    dend_42 { pt3dadd( -15.4803, -39.0397, -13.6198, 0.25 ) }
    dend_42 { pt3dadd( -16.1145, -39.0442, -13.2306, 0.25 ) }
    dend_42 { pt3dadd( -18.0333, -39.3551, -11.8541, 0.25 ) }
    dend_42 { pt3dadd( -18.1445, -39.3785, -11.7703, 0.25 ) }
    dend_42 { pt3dadd( -18.952, -39.6263, -11.0982, 0.25 ) }
    dend_42 { pt3dadd( -20.2935, -40.2464, -9.88989, 0.25 ) }
    dend_42 { pt3dadd( -22.5097, -41.5802, -7.68877, 0.25 ) }
    dend_42 { pt3dadd( -23.7944, -42.5329, -6.34246, 0.25 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 29/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 3.65854, -39.8795, -78.7464, 0.25 ) }
    dend_40 { pt3dadd( 5.99978, -41.0316, -81.63, 0.25 ) }
    dend_40 { pt3dadd( 7.18647, -41.7891, -83.4994, 0.25 ) }
    dend_40 { pt3dadd( 8.01513, -42.334, -84.9422, 0.37 ) }
    dend_40 { pt3dadd( 9.09257, -42.9147, -86.6531, 0.49 ) }
    dend_40 { pt3dadd( 9.80919, -43.3479, -87.8292, 0.49 ) }
    dend_40 { pt3dadd( 10.4753, -43.7728, -89.1735, 0.25 ) }
    dend_40 { pt3dadd( 12.1835, -44.9039, -92.9208, 0.61 ) }
    dend_40 { pt3dadd( 12.7778, -45.3149, -94.3081, 0.61 ) }
    dend_40 { pt3dadd( 14.0797, -46.1848, -97.2775, 0.61 ) }
    dend_40 { pt3dadd( 16.6798, -47.8526, -103.072, 0.37 ) }
    dend_40 { pt3dadd( 20.4805, -50.2087, -111.304, 0.37 ) }
    dend_40 { pt3dadd( 21.0398, -50.5292, -112.486, 0.37 ) }
    dend_40 { pt3dadd( 21.0923, -50.5615, -112.595, 0.37 ) }
    dend_40 { pt3dadd( 21.5901, -50.8959, -113.662, 0.37 ) }
    dend_40 { pt3dadd( 21.6419, -50.9302, -113.772, 0.37 ) }
    dend_40 { pt3dadd( 23.9721, -52.2801, -117.892, 0.37 ) }
    dend_40 { pt3dadd( 25.2251, -53.1467, -119.905, 0.37 ) }
    dend_40 { pt3dadd( 26.7014, -54.3434, -122.464, 0.37 ) }
    dend_40 { pt3dadd( 26.7675, -54.4035, -122.583, 0.37 ) }
    dend_40 { pt3dadd( 28.9019, -56.4991, -126.59, 0.37 ) }
    dend_40 { pt3dadd( 30.436, -58.1726, -129.442, 0.37 ) }
    dend_40 { pt3dadd( 32.7389, -60.851, -133.604, 0.37 ) }
    dend_40 { pt3dadd( 33.9191, -62.396, -135.82, 0.37 ) }
    dend_40 { pt3dadd( 35.2284, -64.273, -138.388, 0.37 ) }
    dend_40 { pt3dadd( 35.2733, -64.3422, -138.481, 0.37 ) }
    dend_40 { pt3dadd( 36.377, -66.3109, -140.99, 0.37 ) }
    dend_40 { pt3dadd( 37.9776, -69.5608, -145.192, 0.37 ) }
    dend_40 { pt3dadd( 39.815, -73.9509, -150.856, 0.37 ) }
    dend_40 { pt3dadd( 40.5866, -75.9982, -153.68, 0.37 ) }
    dend_40 { pt3dadd( 41.2975, -77.9695, -156.561, 0.37 ) }
    dend_40 { pt3dadd( 41.8016, -79.3789, -158.737, 0.37 ) }
    dend_40 { pt3dadd( 42.5417, -81.3225, -162.033, 0.37 ) }
    dend_40 { pt3dadd( 43.0809, -82.5619, -164.289, 0.37 ) }
    dend_40 { pt3dadd( 44.3459, -84.9644, -169.266, 0.37 ) }
    dend_40 { pt3dadd( 45.0334, -86.0449, -171.749, 0.37 ) }
    dend_40 { pt3dadd( 45.2227, -86.2751, -172.33, 0.37 ) }
    dend_40 { pt3dadd( 46.2574, -87.033, -174.718, 0.37 ) }
    dend_40 { pt3dadd( 47.6232, -87.6189, -176.869, 0.25 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 68/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 3.65854, -39.8795, -78.7464, 0.37 ) }
    dend_39 { pt3dadd( 1.99242, -39.5092, -79.6764, 0.37 ) }
    dend_39 { pt3dadd( 0.251264, -39.1832, -80.5742, 0.37 ) }
    dend_39 { pt3dadd( -0.439089, -39.0701, -80.9085, 0.37 ) }
    dend_39 { pt3dadd( -0.971956, -38.9819, -81.2079, 0.37 ) }
    dend_39 { pt3dadd( -1.39015, -38.9143, -81.4517, 0.37 ) }
    dend_39 { pt3dadd( -1.62961, -38.873, -81.5909, 0.37 ) }
    dend_39 { pt3dadd( -1.84914, -38.8516, -81.7587, 0.37 ) }
    dend_39 { pt3dadd( -1.94251, -38.846, -81.8337, 0.37 ) }
    dend_39 { pt3dadd( -3.3077, -38.8294, -83.1142, 0.37 ) }
    dend_39 { pt3dadd( -3.64571, -38.84, -83.4671, 0.37 ) }
    dend_39 { pt3dadd( -3.95337, -38.8552, -83.7901, 0.37 ) }
    dend_39 { pt3dadd( -5.39544, -38.9566, -85.2363, 0.37 ) }
    dend_39 { pt3dadd( -5.82651, -39.0012, -85.6702, 0.37 ) }
    dend_39 { pt3dadd( -5.90649, -39.015, -85.7578, 0.37 ) }
    dend_39 { pt3dadd( -7.30548, -39.3511, -87.3361, 0.37 ) }
    dend_39 { pt3dadd( -7.62384, -39.4341, -87.698, 0.37 ) }
    dend_39 { pt3dadd( -7.97917, -39.5317, -88.0974, 0.37 ) }
    dend_39 { pt3dadd( -8.39725, -39.6373, -88.6059, 0.37 ) }
    dend_39 { pt3dadd( -9.87585, -39.9981, -90.591, 0.37 ) }
    dend_39 { pt3dadd( -10.0209, -40.0339, -90.791, 0.37 ) }
    dend_39 { pt3dadd( -10.4747, -40.1454, -91.403, 0.37 ) }
    dend_39 { pt3dadd( -10.5168, -40.155, -91.4577, 0.37 ) }
    dend_39 { pt3dadd( -12.1937, -40.4474, -93.4112, 0.37 ) }
    dend_39 { pt3dadd( -12.3969, -40.4726, -93.5983, 0.37 ) }
    dend_39 { pt3dadd( -12.8157, -40.4891, -93.8815, 0.37 ) }
    dend_39 { pt3dadd( -13.6384, -40.4915, -94.391, 0.37 ) }
    dend_39 { pt3dadd( -13.745, -40.4985, -94.4647, 0.37 ) }
    dend_39 { pt3dadd( -14.7771, -40.6886, -95.3082, 0.37 ) }
    dend_39 { pt3dadd( -15.3242, -40.835, -95.7807, 0.37 ) }
    dend_39 { pt3dadd( -15.9076, -41.025, -96.479, 0.37 ) }
    dend_39 { pt3dadd( -16.0215, -41.0659, -96.6368, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_39 { pt3dadd( -17.4018, -41.5642, -98.696, 0.37 ) }
    dend_39 { pt3dadd( -18.5902, -42.0012, -100.54, 0.37 ) }
    dend_39 { pt3dadd( -18.7098, -42.0422, -100.743, 0.37 ) }
    dend_39 { pt3dadd( -20.1167, -42.43, -103.348, 0.37 ) }
    dend_39 { pt3dadd( -20.339, -42.4735, -103.782, 0.37 ) }
    dend_39 { pt3dadd( -20.6611, -42.482, -104.405, 0.37 ) }
    dend_39 { pt3dadd( -20.7179, -42.4703, -104.51, 0.37 ) }
    dend_39 { pt3dadd( -21.4589, -42.2101, -105.822, 0.37 ) }
    dend_39 { pt3dadd( -22.0085, -41.9938, -106.808, 0.37 ) }
    dend_39 { pt3dadd( -22.2725, -41.88, -107.264, 0.37 ) }
    dend_39 { pt3dadd( -23.4616, -41.3814, -109.342, 0.37 ) }
    dend_39 { pt3dadd( -23.6914, -41.2969, -109.713, 0.37 ) }
    dend_39 { pt3dadd( -24.2752, -41.1341, -110.573, 0.37 ) }
    dend_39 { pt3dadd( -24.9865, -40.99, -111.52, 0.37 ) }
    dend_39 { pt3dadd( -26.7339, -40.7109, -113.642, 0.37 ) }
    dend_39 { pt3dadd( -26.813, -40.7007, -113.731, 0.37 ) }
    dend_39 { pt3dadd( -27.4703, -40.6715, -114.466, 0.37 ) }
    dend_39 { pt3dadd( -28.9805, -40.7888, -116.214, 0.37 ) }
    dend_39 { pt3dadd( -29.0575, -40.8051, -116.304, 0.37 ) }
    dend_39 { pt3dadd( -29.4803, -40.9494, -116.752, 0.37 ) }
    dend_39 { pt3dadd( -29.5574, -40.9849, -116.836, 0.37 ) }
    dend_39 { pt3dadd( -30.8061, -41.5308, -118.273, 0.37 ) }
    dend_39 { pt3dadd( -31.2301, -41.6883, -118.738, 0.37 ) }
    dend_39 { pt3dadd( -31.3234, -41.7144, -118.824, 0.37 ) }
    dend_39 { pt3dadd( -31.7876, -41.8061, -119.204, 0.37 ) }
    dend_39 { pt3dadd( -33.662, -42.0142, -120.719, 0.37 ) }
    dend_39 { pt3dadd( -33.8821, -42.0249, -120.887, 0.37 ) }
    dend_39 { pt3dadd( -34.9142, -42.0013, -121.533, 0.37 ) }
    dend_39 { pt3dadd( -35.1222, -41.9921, -121.65, 0.37 ) }
    dend_39 { pt3dadd( -35.776, -41.9631, -121.994, 0.37 ) }
    dend_39 { pt3dadd( -38.2185, -41.8594, -123.126, 0.37 ) }
    dend_39 { pt3dadd( -38.3392, -41.8569, -123.174, 0.37 ) }
    dend_39 { pt3dadd( -39.8228, -41.818, -123.736, 0.37 ) }
    dend_39 { pt3dadd( -42.3546, -41.7298, -124.644, 0.37 ) }
    dend_39 { pt3dadd( -42.4787, -41.7242, -124.682, 0.37 ) }
    dend_39 { pt3dadd( -43.6357, -41.7003, -125.061, 0.37 ) }
    dend_39 { pt3dadd( -43.7503, -41.7001, -125.097, 0.37 ) }
    dend_39 { pt3dadd( -44.5762, -41.7237, -125.413, 0.37 ) }
    dend_39 { pt3dadd( -44.8994, -41.7502, -125.591, 0.37 ) }
    dend_39 { pt3dadd( -45.7925, -41.8761, -126.234, 0.37 ) }
    dend_39 { pt3dadd( -47.7995, -42.216, -128.115, 0.37 ) }
    dend_39 { pt3dadd( -47.8804, -42.2295, -128.202, 0.37 ) }
    dend_39 { pt3dadd( -47.9597, -42.2417, -128.291, 0.37 ) }
    dend_39 { pt3dadd( -48.4777, -42.3165, -128.854, 0.37 ) }
    dend_39 { pt3dadd( -49.3397, -42.4103, -129.722, 0.37 ) }
    dend_39 { pt3dadd( -50.4101, -42.4705, -130.613, 0.37 ) }
    dend_39 { pt3dadd( -51.3115, -42.3851, -131.047, 0.37 ) }
    dend_39 { pt3dadd( -51.531, -42.3554, -131.138, 0.37 ) }
    dend_39 { pt3dadd( -52.6571, -42.2153, -131.651, 0.37 ) }
    dend_39 { pt3dadd( -52.7749, -42.2012, -131.703, 0.37 ) }
    dend_39 { pt3dadd( -53.5707, -42.113, -132.037, 0.37 ) }
    dend_39 { pt3dadd( -55.2318, -41.955, -132.782, 0.37 ) }
    dend_39 { pt3dadd( -55.6446, -41.9239, -132.999, 0.37 ) }
    dend_39 { pt3dadd( -57.7229, -41.7417, -134.265, 0.37 ) }
    dend_39 { pt3dadd( -58.1264, -41.7026, -134.538, 0.37 ) }
    dend_39 { pt3dadd( -59.1241, -41.6174, -135.229, 0.37 ) }
    dend_39 { pt3dadd( -60.1335, -41.5323, -135.92, 0.37 ) }
    dend_39 { pt3dadd( -60.9963, -41.4773, -136.506, 0.37 ) }
    dend_39 { pt3dadd( -62.1715, -41.3549, -137.112, 0.37 ) }
    dend_39 { pt3dadd( -62.3951, -41.3191, -137.187, 0.37 ) }
    dend_39 { pt3dadd( -63.2842, -41.1678, -137.438, 0.37 ) }
    dend_39 { pt3dadd( -64.2783, -41.002, -137.696, 0.37 ) }
    dend_39 { pt3dadd( -64.7892, -40.9301, -137.804, 0.37 ) }
    dend_39 { pt3dadd( -66.7144, -40.7441, -138.224, 0.37 ) }
    dend_39 { pt3dadd( -66.8585, -40.7375, -138.254, 0.37 ) }
    dend_39 { pt3dadd( -67.638, -40.7204, -138.513, 0.37 ) }
    dend_39 { pt3dadd( -68.863, -40.7896, -139.084, 0.37 ) }
    dend_39 { pt3dadd( -69.9363, -40.9101, -139.676, 0.37 ) }
    dend_39 { pt3dadd( -70.3682, -40.9638, -139.933, 0.37 ) }
    dend_39 { pt3dadd( -71.0712, -41.0589, -140.398, 0.37 ) }
    dend_39 { pt3dadd( -71.923, -41.162, -140.917, 0.37 ) }
    dend_39 { pt3dadd( -73.5245, -41.3358, -141.776, 0.37 ) }
    dend_39 { pt3dadd( -73.63, -41.3459, -141.832, 0.37 ) }
    dend_39 { pt3dadd( -74.9801, -41.4699, -142.613, 0.37 ) }
    dend_39 { pt3dadd( -75.1997, -41.482, -142.732, 0.37 ) }
    dend_39 { pt3dadd( -75.7713, -41.4976, -143.05, 0.37 ) }
    dend_39 { pt3dadd( -75.992, -41.4971, -143.167, 0.37 ) }
    dend_39 { pt3dadd( -78.0894, -41.4158, -144.299, 0.37 ) }
    dend_39 { pt3dadd( -78.1497, -41.4135, -144.334, 0.37 ) }
    dend_39 { pt3dadd( -79.9943, -41.3487, -145.546, 0.37 ) }
    dend_39 { pt3dadd( -81.3666, -41.3072, -146.536, 0.37 ) }
    dend_39 { pt3dadd( -81.7293, -41.3004, -146.849, 0.37 ) }
    dend_39 { pt3dadd( -81.9308, -41.2955, -147.038, 0.37 ) }
    dend_39 { pt3dadd( -82.6189, -41.2706, -147.705, 0.37 ) }
    dend_39 { pt3dadd( -83.5307, -41.2482, -148.682, 0.37 ) }
    dend_39 { pt3dadd( -83.5761, -41.2492, -148.735, 0.37 ) }
    dend_39 { pt3dadd( -85.1716, -41.2881, -150.446, 0.37 ) }
    dend_39 { pt3dadd( -85.6036, -41.3, -150.894, 0.37 ) }
    dend_39 { pt3dadd( -86.2267, -41.2953, -151.484, 0.37 ) }
    dend_39 { pt3dadd( -86.8749, -41.2522, -152.069, 0.37 ) }
    dend_39 { pt3dadd( -87.7179, -41.1873, -152.758, 0.37 ) }
    dend_39 { pt3dadd( -88.5973, -41.1129, -153.44, 0.37 ) }
    dend_39 { pt3dadd( -88.6901, -41.1053, -153.515, 0.37 ) }
    dend_39 { pt3dadd( -89.3463, -41.0605, -154.091, 0.37 ) }
    dend_39 { pt3dadd( -90.7627, -40.948, -155.463, 0.37 ) }
    dend_39 { pt3dadd( -91.6506, -40.8551, -156.339, 0.37 ) }
    dend_39 { pt3dadd( -91.7403, -40.8433, -156.432, 0.37 ) }
    dend_39 { pt3dadd( -92.9599, -40.7119, -157.649, 0.37 ) }
    dend_39 { pt3dadd( -93.4926, -40.66, -158.157, 0.37 ) }
    dend_39 { pt3dadd( -94.2819, -40.6034, -158.823, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_39 { pt3dadd( -94.5695, -40.5705, -159.033, 0.37 ) }
    dend_39 { pt3dadd( -94.9513, -40.5126, -159.351, 0.37 ) }
    dend_39 { pt3dadd( -95.1393, -40.4895, -159.513, 0.37 ) }
    dend_39 { pt3dadd( -95.517, -40.4515, -159.821, 0.37 ) }
    dend_39 { pt3dadd( -96.6067, -40.4069, -160.642, 0.37 ) }
    dend_39 { pt3dadd( -97.1556, -40.4088, -161.021, 0.37 ) }
    dend_39 { pt3dadd( -98.5704, -40.4662, -162.141, 0.37 ) }
    dend_39 { pt3dadd( -99.5383, -40.536, -162.912, 0.37 ) }
    dend_39 { pt3dadd( -100.025, -40.5709, -163.276, 0.37 ) }
    dend_39 { pt3dadd( -101.259, -40.6564, -164.153, 0.37 ) }
    dend_39 { pt3dadd( -101.359, -40.6624, -164.217, 0.37 ) }
    dend_39 { pt3dadd( -103.909, -40.7204, -165.465, 0.37 ) }
    dend_39 { pt3dadd( -105.226, -40.6921, -165.908, 0.37 ) }
    dend_39 { pt3dadd( -106.441, -40.5829, -166.172, 0.37 ) }
    dend_39 { pt3dadd( -106.559, -40.5645, -166.184, 0.37 ) }
    dend_39 { pt3dadd( -107.165, -40.4357, -166.195, 0.37 ) }
    dend_39 { pt3dadd( -108.943, -39.9825, -165.995, 0.25 ) }
    dend_39 { pt3dadd( -109.394, -39.8328, -165.835, 0.25 ) }
    dend_39 { pt3dadd( -110.148, -39.5243, -165.516, 0.25 ) }
    dend_39 { pt3dadd( -111.814, -38.8358, -164.748, 0.25 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 20/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 67.7106, 65.2179, 29.173, 0.25 ) }
    dend_34 { pt3dadd( 75.7323, 72.0368, 29.9415, 0.25 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 22/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 67.7106, 65.2179, 29.173, 0.25 ) }
    dend_33 { pt3dadd( 73.6975, 70.3399, 29.6438, 0.25 ) }
    dend_33 { pt3dadd( 78.1415, 76.7145, 30.2603, 0.25 ) }
    dend_33 { pt3dadd( 81.6436, 83.4041, 32.0666, 0.25 ) }
    dend_33 { pt3dadd( 84.6619, 90.2551, 34.0688, 0.25 ) }
    dend_33 { pt3dadd( 88.6562, 96.5187, 36.4406, 0.25 ) }
    dend_33 { pt3dadd( 91.6362, 103.294, 38.7575, 0.25 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 29/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -26.5107, -8.42104, 28.7729, 0.37 ) }
    dend_31 { pt3dadd( -26.461, -9.28546, 29.1889, 0.37 ) }
    dend_31 { pt3dadd( -26.3657, -10.9407, 29.9854, 0.37 ) }
    dend_31 { pt3dadd( -26.3128, -11.8595, 30.4275, 0.37 ) }
    dend_31 { pt3dadd( -26.1978, -13.8572, 31.3888, 0.37 ) }
    dend_31 { pt3dadd( -26.1519, -14.6537, 31.7721, 0.37 ) }
    dend_31 { pt3dadd( -26.321, -22.9257, 36.9853, 0.37 ) }
    dend_31 { pt3dadd( -27.7195, -30.5804, 42.9665, 0.37 ) }
    dend_31 { pt3dadd( -29.6577, -37.98, 49.1339, 0.37 ) }
    dend_31 { pt3dadd( -30.5697, -44.465, 56.5667, 0.37 ) }
    dend_31 { pt3dadd( -30.2322, -50.7646, 64.2351, 0.37 ) }
    dend_31 { pt3dadd( -28.7628, -56.2402, 72.4412, 0.37 ) }
    dend_31 { pt3dadd( -28.1421, -59.9068, 81.7391, 0.37 ) }
    dend_31 { pt3dadd( -25.8964, -63.3241, 90.886, 0.37 ) }
    dend_31 { pt3dadd( -23.6897, -67.3767, 99.7716, 0.37 ) }
    dend_31 { pt3dadd( -21.6743, -72.6078, 108.035, 0.37 ) }
    dend_31 { pt3dadd( -19.2198, -78.4827, 115.699, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 46/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -26.5107, -8.42104, 28.7729, 0.37 ) }
    dend_28 { pt3dadd( -27.4232, -8.35449, 29.3702, 0.37 ) }
    dend_28 { pt3dadd( -27.5145, -8.34784, 29.43, 0.37 ) }
    dend_28 { pt3dadd( -28.0592, -8.30811, 29.7865, 0.37 ) }
    dend_28 { pt3dadd( -29.8021, -8.181, 30.9273, 0.37 ) }
    dend_28 { pt3dadd( -36.5806, -8.40588, 36.9617, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 52/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -73.9698, -4.99782, -23.4085, 0.25 ) }
    dend_23 { pt3dadd( -75.3844, -4.94381, -24.0403, 0.25 ) }
    dend_23 { pt3dadd( -76.7448, -4.88265, -24.5937, 0.25 ) }
    dend_23 { pt3dadd( -76.8281, -4.88327, -24.6248, 0.25 ) }
    dend_23 { pt3dadd( -78.2402, -4.9996, -25.2473, 0.25 ) }
    dend_23 { pt3dadd( -80.1675, -5.22192, -26.1482, 0.25 ) }
    dend_23 { pt3dadd( -82.6463, -5.56307, -27.3369, 0.25 ) }
    dend_23 { pt3dadd( -83.3801, -5.67359, -27.7067, 0.49 ) }
    dend_23 { pt3dadd( -84.5569, -5.8957, -28.3105, 0.49 ) }
    dend_23 { pt3dadd( -86.9506, -6.46737, -29.4958, 0.12 ) }
    dend_23 { pt3dadd( -87.4241, -6.62189, -29.7201, 0.12 ) }
    dend_23 { pt3dadd( -87.6499, -6.71618, -29.8088, 0.12 ) }
    dend_23 { pt3dadd( -89.1083, -7.46861, -30.3966, 0.12 ) }
    dend_23 { pt3dadd( -89.2106, -7.52142, -30.4445, 0.12 ) }
    dend_23 { pt3dadd( -89.8689, -7.79999, -30.7264, 0.12 ) }
    dend_23 { pt3dadd( -90.2777, -7.96772, -30.8403, 0.12 ) }
    dend_23 { pt3dadd( -90.3531, -7.99711, -30.8753, 0.12 ) }
    dend_23 { pt3dadd( -90.9996, -8.22894, -31.2372, 0.12 ) }
    dend_23 { pt3dadd( -91.9672, -8.55889, -31.8564, 0.12 ) }
    dend_23 { pt3dadd( -92.6919, -8.78982, -32.3257, 0.12 ) }
    dend_23 { pt3dadd( -93.9323, -9.17486, -33.1375, 0.12 ) }
    dend_23 { pt3dadd( -95.3661, -9.71274, -34.1117, 0.12 ) }
    dend_23 { pt3dadd( -96.1694, -10.1026, -34.6713, 0.12 ) }
    dend_23 { pt3dadd( -96.2056, -10.1276, -34.6973, 0.12 ) }
    dend_23 { pt3dadd( -96.4325, -10.3508, -34.855, 0.49 ) }
    dend_23 { pt3dadd( -96.7146, -10.7331, -35.0822, 0.49 ) }
    dend_23 { pt3dadd( -97.1779, -11.7254, -35.5399, 0.61 ) }
    dend_23 { pt3dadd( -97.3124, -12.2036, -35.6579, 0.61 ) }
    dend_23 { pt3dadd( -97.4244, -12.8798, -35.834, 0.61 ) }
    dend_23 { pt3dadd( -97.4528, -13.0547, -35.8818, 0.61 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 82/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -73.9698, -4.99782, -23.4085, 0.12 ) }
    dend_22 { pt3dadd( -74.3518, -2.81471, -25.6577, 0.12 ) }
    dend_22 { pt3dadd( -74.3324, -1.10662, -27.723, 0.25 ) }
    dend_22 { pt3dadd( -73.9389, 1.47861, -31.1619, 0.25 ) }
    dend_22 { pt3dadd( -73.353, 2.63304, -33.1806, 0.25 ) }
    dend_22 { pt3dadd( -72.3145, 4.67918, -36.7587, 0.25 ) }
    dend_22 { pt3dadd( -71.5613, 6.16323, -39.3538, 0.25 ) }
    dend_22 { pt3dadd( -71.2852, 6.35395, -39.8523, 0.25 ) }
    dend_22 { pt3dadd( -71.0649, 6.39952, -40.1425, 0.25 ) }
    dend_22 { pt3dadd( -68.336, 6.15718, -43.1416, 0.25 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 92/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -36.5806, -8.40588, 36.9617, 0.25 ) }
    dend_30 { pt3dadd( -45.1201, -8.59859, 43.6359, 0.25 ) }
    dend_30 { pt3dadd( -54.5561, -10.282, 48.6758, 0.25 ) }
    dend_30 { pt3dadd( -63.7086, -11.7539, 54.2809, 0.25 ) }
    dend_30 { pt3dadd( -73.0963, -12.5517, 59.6388, 0.25 ) }
    dend_30 { pt3dadd( -81.1764, -14.3726, 66.6168, 0.25 ) }
    dend_30 { pt3dadd( -87.8732, -16.6411, 74.8144, 0.25 ) }
    dend_30 { pt3dadd( -94.2477, -17.5921, 83.5297, 0.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_30 { pt3dadd( -99.8165, -18.5821, 92.7767, 0.25 ) }
    dend_30 { pt3dadd( -104.987, -17.935, 102.272, 0.25 ) }
    dend_30 { pt3dadd( -112.539, -17.1909, 110.002, 0.25 ) }
    dend_30 { pt3dadd( -117.961, -15.2173, 119.138, 0.25 ) }
    dend_30 { pt3dadd( -124.304, -13.0102, 127.598, 0.25 ) }
    dend_30 { pt3dadd( -130.414, -10.208, 136.029, 0.25 ) }
    dend_30 { pt3dadd( -135.68, -6.59153, 144.676, 0.25 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 7/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -36.5806, -8.40588, 36.9617, 0.25 ) }
    dend_29 { pt3dadd( -42.1572, -8.77566, 40.8274, 0.25 ) }
    dend_29 { pt3dadd( -47.9378, -8.91831, 44.3983, 0.25 ) }
    dend_29 { pt3dadd( -53.2933, -9.13801, 48.5767, 0.25 ) }
    dend_29 { pt3dadd( -58.8919, -8.67227, 52.3983, 0.25 ) }
    dend_29 { pt3dadd( -65.2731, -8.66897, 54.7354, 0.25 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 13/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -97.4528, -13.0547, -35.8818, 0.12 ) }
    dend_25 { pt3dadd( -99.6258, -14.6252, -36.474, 0.12 ) }
    dend_25 { pt3dadd( -103.533, -17.2482, -37.4484, 0.12 ) }
    dend_25 { pt3dadd( -104.816, -18.0761, -37.7532, 0.12 ) }
    dend_25 { pt3dadd( -107.338, -19.6577, -38.3311, 0.12 ) }
    dend_25 { pt3dadd( -110.353, -21.4518, -39.0787, 0.12 ) }
    dend_25 { pt3dadd( -112.435, -22.6364, -39.6123, 0.12 ) }
    dend_25 { pt3dadd( -114.825, -23.8729, -40.2233, 0.12 ) }
    dend_25 { pt3dadd( -116.845, -24.7759, -40.7137, 0.12 ) }
    dend_25 { pt3dadd( -118.638, -25.5001, -41.1563, 0.12 ) }
    dend_25 { pt3dadd( -120.726, -26.2622, -41.6792, 0.12 ) }
    dend_25 { pt3dadd( -123.161, -27.0479, -42.27, 0.12 ) }
    dend_25 { pt3dadd( -124.616, -27.4691, -42.596, 0.12 ) }
    dend_25 { pt3dadd( -126.621, -28.0117, -43.0025, 0.12 ) }
    dend_25 { pt3dadd( -127.995, -28.371, -43.2429, 0.12 ) }
    dend_25 { pt3dadd( -130.53, -29.0934, -43.6237, 0.12 ) }
    dend_25 { pt3dadd( -132.334, -29.6994, -43.8607, 0.12 ) }
    dend_25 { pt3dadd( -134.611, -30.5494, -44.1833, 0.12 ) }
    dend_25 { pt3dadd( -136.12, -31.1441, -44.3957, 0.12 ) }
    dend_25 { pt3dadd( -137.674, -31.7718, -44.6029, 0.12 ) }
    dend_25 { pt3dadd( -140.626, -32.9769, -44.9662, 0.12 ) }
    dend_25 { pt3dadd( -143.007, -33.9372, -45.2537, 0.12 ) }
    dend_25 { pt3dadd( -145.166, -34.7489, -45.5752, 0.12 ) }
    dend_25 { pt3dadd( -148.43, -35.9106, -46.1413, 0.12 ) }
    dend_25 { pt3dadd( -151.582, -36.9877, -46.7529, 0.12 ) }
    dend_25 { pt3dadd( -153.919, -37.7379, -47.2292, 0.12 ) }
    dend_25 { pt3dadd( -155.345, -38.134, -47.5011, 0.12 ) }
    dend_25 { pt3dadd( -157.936, -38.8266, -47.9796, 0.12 ) }
    dend_25 { pt3dadd( -159.754, -39.3517, -48.3156, 0.12 ) }
    dend_25 { pt3dadd( -162.746, -40.3248, -48.8757, 0.12 ) }
    dend_25 { pt3dadd( -165.902, -41.4197, -49.4319, 0.12 ) }
    dend_25 { pt3dadd( -170.325, -42.9899, -50.1204, 0.12 ) }
    dend_25 { pt3dadd( -172.856, -43.9801, -50.3155, 0.12 ) }
    dend_25 { pt3dadd( -176.729, -45.5527, -50.4849, 0.12 ) }
    dend_25 { pt3dadd( -179.625, -46.7187, -50.5701, 0.12 ) }
    dend_25 { pt3dadd( -182.36, -47.8478, -50.6048, 0.12 ) }
    dend_25 { pt3dadd( -184.696, -48.9126, -50.6004, 0.12 ) }
    dend_25 { pt3dadd( -189.408, -51.3544, -50.4395, 0.12 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -97.4528, -13.0547, -35.8818, 0.61 ) }
    dend_24 { pt3dadd( -97.4484, -13.1278, -36.0314, 0.61 ) }
    dend_24 { pt3dadd( -97.4715, -14.9049, -39.2145, 0.12 ) }
    dend_24 { pt3dadd( -97.4912, -15.4562, -40.1342, 0.12 ) }
    dend_24 { pt3dadd( -97.5321, -16.2765, -41.3849, 0.12 ) }
    dend_24 { pt3dadd( -97.5344, -16.3576, -41.5004, 0.12 ) }
    dend_24 { pt3dadd( -97.5434, -16.8861, -42.2064, 0.12 ) }
    dend_24 { pt3dadd( -97.5576, -18.5775, -44.1866, 0.12 ) }
    dend_24 { pt3dadd( -97.5628, -18.7756, -44.3669, 0.12 ) }
    dend_24 { pt3dadd( -97.5845, -19.2386, -44.8322, 0.12 ) }
    dend_24 { pt3dadd( -97.5651, -19.5577, -45.1933, 0.12 ) }
    dend_24 { pt3dadd( -97.5383, -19.8184, -45.4941, 0.12 ) }
    dend_24 { pt3dadd( -97.3803, -20.5503, -46.353, 0.61 ) }
    dend_24 { pt3dadd( -97.3663, -20.6109, -46.3943, 0.61 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_14, dend_9, dend_1, dend_0, dend_17, dend_15, dend_13, dend_10, dend_5, dend_2, dend_36, dend_35, dend_18, dend_16, dend_12, dend_11, dend_8, dend_7, dend_6, dend_4, dend_3, dend_37, dend_26, dend_19, dend_41, dend_38, dend_32, dend_27, dend_21, dend_20, dend_43, dend_42, dend_40, dend_39, dend_34, dend_33, dend_31, dend_28, dend_23, dend_22, dend_30, dend_29, dend_25, dend_24]}
    ModelViewParmSubset_2 = new SectionList()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_14, dend_9, dend_1, dend_0, dend_17, dend_15, dend_13, dend_10, dend_5, dend_2, dend_36, dend_35, dend_18, dend_16, dend_12, dend_11, dend_8, dend_7, dend_6, dend_4, dend_3, dend_37, dend_26, dend_19, dend_41, dend_38, dend_32, dend_27, dend_21, dend_20, dend_43, dend_42, dend_40, dend_39, dend_34, dend_33, dend_31, dend_28, dend_23, dend_22, dend_30, dend_29, dend_25, dend_24]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_15 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_13 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_5 OneSecGrp_SectionRef_11.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_35 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_38 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_32 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_40 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_39 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_33 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_31 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_30 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_25 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_14 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_17 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_36 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_9 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_37 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_41 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_18 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_26 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_42 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_28 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_19 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_16 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_20 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_4 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_3 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_29 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_21 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_11 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_22 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_23 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_24 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_34 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_6 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_7 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_8 OneSecGrp_SectionRef_20.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_4, dend_4, dend_3, dend_3, dend_37, dend_37, dend_37, dend_37, dend_37, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_15 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_5 nseg = 19
    dend_2 nseg = 3
    dend_35 nseg = 3
    dend_12 nseg = 3
    dend_38 nseg = 3
    dend_32 nseg = 7
    dend_43 nseg = 5
    dend_40 nseg = 5
    dend_39 nseg = 7
    dend_33 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 7
    dend_25 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_SBC_28362da21f_0_0


