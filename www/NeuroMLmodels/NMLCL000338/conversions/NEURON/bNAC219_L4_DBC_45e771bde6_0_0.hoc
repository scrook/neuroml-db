// Cell: bNAC219_L4_DBC_45e771bde6_0_0
/*
{
  "id" : "bNAC219_L4_DBC_45e771bde6_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.7707, 14.3445, 1.63673, 2.6356", "1.65855, 13.0663, 1.48326, 4.68599", "1.5464, 11.788, 1.32978, 5.81905", "1.43425, 10.5097, 1.1763, 6.95808", "1.32209, 9.23142, 1.02283, 8.17562", "1.20994, 7.95314, 0.869351, 9.23498", "1.09779, 6.67486, 0.715875, 9.66374", "0.985636, 5.39658, 0.562399, 9.75915", "0.873483, 4.1183, 0.408922, 9.85456", "0.76133, 2.84002, 0.255446, 9.99274", "0.649178, 1.56175, 0.101969, 10.3671", "0.537025, 0.283466, -0.051507, 11.1059", "0.424873, -0.994813, -0.204983, 11.9164", "0.31272, -2.27309, -0.35846, 12.7207", "0.200568, -3.55137, -0.511936, 12.9931", "0.0884149, -4.82965, -0.665413, 12.8706", "-0.0237377, -6.10793, -0.818889, 12.7481", "-0.13589, -7.38621, -0.972365, 11.5655", "-0.248043, -8.66449, -1.12584, 9.82802", "-0.360195, -9.94277, -1.27932, 4.98087", "-0.472348, -11.221, -1.43279, 2.92263" ]
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.24391, 15.5458, 5.96094, 3.33", "0.959454, 22.3672, 7.04706, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.08609, -3.14072, 6.39094, 1.33", "-10.3703, -3.33175, 6.80456, 0.67", "-12.1711, -3.75213, 6.96903, 0.67", "-14.1775, -4.2345, 7.11913, 0.67", "-17.9485, -4.80336, 7.3627, 0.67", "-20.3663, -5.02735, 7.50155, 0.67", "-24.9123, -5.17986, 7.73386, 0.67", "-30.919, -5.12117, 7.97282, 0.67", "-32.991, -5.10541, 8.08341, 0.67", "-36.3436, -5.13842, 8.30359, 0.67", "-38.0529, -5.27957, 8.27398, 0.67", "-40.4318, -5.55527, 7.85335, 0.67", "-42.0686, -5.67584, 7.35388, 0.67", "-44.4372, -5.72969, 6.55558, 0.67", "-47.224, -5.9285, 5.63717, 0.67", "-54.0465, -6.34824, 3.76939, 0.67", "-57.3496, -6.33659, 3.13788, 0.67", "-60.803, -6.00029, 2.85884, 0.67", "-63.8074, -5.49583, 2.94796, 0.67", "-65.5176, -5.10447, 3.12304, 0.67", "-69.8114, -3.83554, 3.8748, 0.67", "-74.8049, -2.16569, 5.07597, 0.67", "-80.1494, -0.235009, 6.33196, 0.67", "-84.1242, 1.34848, 7.21886, 0.33", "-85.2947, 1.8799, 7.46436, 0.67", "-88.1071, 3.17785, 7.98312, 1.33", "-94.6226, 6.15414, 8.908, 0.67", "-95.9759, 6.77599, 8.97368, 0.67", "-99.5403, 8.3482, 8.73807, 1.33", "-102.745, 9.73892, 8.34587, 0.67", "-107.554, 11.6766, 7.65158, 0.67", "-111.576, 13.029, 6.98693, 0.67", "-116.512, 14.4268, 5.94598, 0.67", "-118.386, 14.8912, 5.53095, 1.33", "-121.613, 15.5499, 4.76598, 0.33", "-123.656, 15.9321, 4.31217, 1.33", "-128.302, 16.9485, 3.25632, 0.67", "-132.421, 17.4681, 2.57534, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.04391, -8.90719, 0.670944, 2.67", "6.59172, -11.3712, 2.41782, 2.0", "9.39067, -15.8268, 5.57677, 2.0", "11.9663, -19.9269, 8.48372, 2.0", "13.0, -21.5725, 9.65039, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.472348, -11.221, -1.43279, 0.67", "-1.78337, -26.1636, -1.43279, 0.67", "-3.0944, -41.1062, -1.43279, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "0.959454, 22.3672, 7.04706, 2.67", "0.334329, 23.8858, 8.27441, 2.67" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.959454, 22.3672, 7.04706, 1.33", "0.00248599, 21.424, -7.11676, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-132.421, 17.4681, 2.57534, 0.67", "-135.083, 18.734, 2.74183, 0.67", "-138.361, 19.9464, 2.21686, 0.67", "-140.113, 20.3897, 1.71763, 0.33", "-140.803, 20.5572, 1.50081, 0.67", "-141.815, 20.7721, 1.08885, 0.67", "-143.314, 21.0655, 0.433302, 0.67", "-147.016, 21.6237, -1.50998, 0.67", "-149.348, 22.019, -2.8717, 0.67", "-150.69, 22.2919, -3.67345, 0.67", "-153.407, 22.9802, -5.21268, 2.0", "-154.675, 23.3796, -5.91916, 0.33", "-155.885, 23.8554, -6.54333, 0.67", "-156.758, 24.2422, -6.88598, 1.33", "-158.64, 25.2507, -7.74489, 0.33", "-159.514, 25.7272, -8.1233, 2.0" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-132.421, 17.4681, 2.57534, 0.33", "-132.235, 16.5377, 1.81169, 0.33", "-132.087, 15.7988, 1.20523, 0.67" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "13.0, -21.5725, 9.65039, 1.33", "16.7956, -26.2478, -0.363986, 1.33", "18.2647, -28.0572, -4.23989, 0.67", "19.224, -29.2389, -6.77111, 0.67", "19.9674, -30.1546, -8.73243, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "13.0, -21.5725, 9.65039, 0.67", "12.7441, -27.1084, 9.6185, 0.67", "12.8668, -31.1055, 10.0074, 0.67", "13.1018, -36.6445, 10.7503, 0.67", "13.5802, -43.144, 11.6882, 1.33", "14.0149, -48.7595, 12.4879, 1.33", "15.0107, -58.734, 13.8396, 1.33", "15.7204, -62.5594, 14.3738, 1.33", "16.7827, -67.4167, 15.0848, 1.33", "17.5798, -71.1804, 15.5852, 1.33", "18.399, -75.273, 16.1727, 1.33", "19.1914, -79.8991, 16.6523, 1.33", "20.5123, -88.2464, 16.8174, 0.67", "21.0612, -92.0864, 16.8864, 1.33", "21.4695, -94.7706, 16.9288, 1.33", "22.3572, -102.108, 17.3959, 1.33", "22.7467, -106.237, 17.6379, 1.33", "22.9325, -111.488, 17.9446, 0.67", "22.8851, -117.861, 18.3844, 1.33", "22.8198, -121.918, 18.5953, 0.67", "22.4685, -133.567, 19.0, 1.33", "22.2328, -139.121, 19.2052, 1.33", "22.2136, -143.092, 19.3062, 1.33", "22.2835, -146.886, 19.351, 1.33", "22.5221, -152.175, 19.5428, 1.33", "22.749, -155.02, 19.6912, 1.33", "23.8746, -162.668, 19.9819, 2.0", "24.9388, -168.045, 20.5085, 1.33", "25.5148, -170.341, 20.7614, 2.0", "27.3114, -177.121, 21.73, 2.0", "27.9986, -179.703, 22.3676, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-3.0944, -41.1062, -1.43279, 0.33", "-4.40542, -56.0488, -1.43279, 0.33", "-5.71644, -70.9914, -1.43279, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "0.334329, 23.8858, 8.27441, 0.67", "0.638738, 25.4255, 9.4798, 0.67", "1.1591, 28.0574, 11.5403, 0.67", "2.39361, 34.3014, 16.4287, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "0.334329, 23.8858, 8.27441, 2.67", "2.88239, 29.4603, 2.98594, 2.67", "4.59429, 33.2055, -0.567066, 2.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.00248599, 21.424, -7.11676, 1.33", "-0.491701, 24.3074, -12.4371, 1.33", "-0.78795, 26.0359, -15.6264, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.00248599, 21.424, -7.11676, 0.67", "2.38652, 18.2845, -7.20252, 0.67", "5.11151, 15.1266, -6.89732, 0.33", "6.90616, 13.2996, -6.60947, 0.67", "8.39634, 11.9025, -6.36539, 0.67", "9.86591, 10.5101, -6.11874, 0.33", "10.8133, 9.65086, -5.97339, 0.67", "14.2514, 7.0667, -5.83746, 0.33", "15.4567, 6.24508, -5.83093, 0.67", "17.9121, 4.5474, -5.98843, 0.33", "19.2664, 3.67073, -6.20646, 0.67", "20.7309, 2.78704, -6.60634, 0.33", "22.8763, 1.68659, -7.4069, 0.67", "24.5858, 0.907514, -8.34123, 0.33", "25.9129, 0.321442, -9.07807, 0.67", "26.7786, 0.0273522, -9.55988, 0.33", "28.0335, -0.328868, -10.2302, 1.33", "31.4529, -1.30609, -11.9277, 0.33", "33.501, -1.76323, -12.7328, 0.67" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-159.514, 25.7272, -8.1233, 0.33", "-160.665, 23.7201, -7.23652, 0.33", "-161.547, 22.1826, -6.55724, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-159.514, 25.7272, -8.1233, 0.33", "-162.591, 26.4914, -7.02578, 0.33", "-163.617, 26.7462, -6.65984, 0.67", "-166.595, 27.4859, -5.59762, 0.33", "-169.175, 28.1267, -4.67729, 0.67", "-171.018, 28.5845, -4.01984, 0.33", "-172.146, 28.8645, -3.61772, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "19.9674, -30.1546, -8.73243, 0.67", "21.1826, -31.365, -11.1921, 0.67", "22.1539, -32.2253, -12.7834, 0.67", "24.4386, -33.7059, -16.0039, 1.33", "25.248, -33.978, -16.9848, 0.67", "27.2672, -34.2723, -19.1098, 0.67", "28.4138, -34.3454, -20.0841, 1.33", "29.9338, -34.3353, -21.2721, 0.67", "31.7965, -34.1154, -22.3531, 0.67", "34.6437, -33.2878, -23.6243, 0.67", "35.8164, -32.813, -24.0987, 0.67", "38.0362, -31.7227, -24.8378, 0.67", "41.1421, -29.8504, -25.8905, 1.33", "42.7156, -28.7896, -26.4663, 0.67", "44.4855, -27.4475, -27.189, 1.33", "45.2471, -26.7903, -27.6943, 0.67", "45.7149, -26.3382, -28.1463, 1.33", "46.2725, -25.686, -28.8778, 0.67", "47.1906, -24.5692, -30.2332, 0.67", "48.2487, -23.4062, -31.8478, 1.33", "50.2767, -21.5712, -34.6796, 0.67", "51.3348, -20.6817, -36.0802, 0.33", "52.2641, -19.9284, -37.3941, 0.33", "52.9756, -19.4471, -38.5211, 0.67", "53.7869, -18.9628, -40.0358, 0.67", "54.6083, -18.5566, -41.5759, 0.67", "54.9807, -18.3712, -42.2623, 0.67", "56.8617, -17.4415, -45.8357, 2.0", "58.6793, -16.6582, -49.3993, 0.33", "59.7459, -16.2213, -51.6913, 0.67", "60.1183, -16.0959, -52.5556, 0.33", "60.4722, -15.9725, -53.4526, 0.67", "60.8125, -15.8599, -54.3319, 0.33", "61.9299, -15.4302, -56.6615, 1.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "19.9674, -30.1546, -8.73243, 0.67", "21.3289, -35.6931, -10.0648, 0.67", "22.4882, -40.2058, -11.3051, 0.67", "23.0253, -42.1122, -11.8347, 0.67", "24.7993, -48.4536, -13.4231, 1.33", "25.4087, -50.594, -13.8943, 2.0", "26.4625, -54.2784, -14.6163, 0.67", "27.138, -56.9018, -15.1797, 1.33", "27.759, -59.6884, -15.6538, 0.67", "28.7418, -64.0706, -16.128, 0.67", "29.5145, -67.3588, -16.1738, 1.33", "30.0048, -69.5839, -16.2415, 0.33", "30.4003, -71.6108, -16.31, 0.33", "30.7841, -74.2172, -16.364, 0.67", "30.972, -75.8416, -16.4502, 1.33", "31.3599, -79.0562, -16.7111, 0.67", "31.9296, -83.0781, -16.8235, 0.67", "32.647, -87.5474, -16.7182, 1.33", "33.358, -91.6754, -16.4167, 0.67", "33.705, -93.9303, -16.1296, 2.67", "34.0935, -96.4149, -15.4762, 0.67", "34.7822, -101.761, -13.7303, 0.67", "34.9592, -103.657, -12.9857, 0.33", "35.1429, -105.834, -12.1093, 0.67", "35.2652, -107.378, -11.5361, 0.33", "35.6156, -113.077, -9.74965, 2.0", "35.9385, -119.417, -8.43046, 0.67", "36.0072, -120.856, -8.28113, 0.67", "36.2391, -123.165, -8.10329, 0.67", "36.6108, -126.038, -7.95593, 1.33", "36.9483, -128.608, -7.88654, 0.67", "37.4475, -132.563, -8.00878, 0.67", "37.7284, -134.58, -7.98204, 1.33", "38.1187, -137.531, -7.99342, 0.67", "38.6105, -142.054, -8.209, 0.67", "38.7995, -143.659, -8.25276, 0.67", "39.1276, -146.114, -8.24806, 0.67", "39.4049, -148.45, -8.1715, 0.67", "39.5259, -149.73, -8.1814, 1.33", "39.6653, -153.021, -8.28171, 0.67", "40.0189, -157.692, -8.51994, 2.0", "40.441, -161.59, -8.50313, 0.67", "40.6026, -162.945, -8.41801, 0.67", "41.1846, -168.085, -7.82617, 1.33", "41.4581, -170.206, -7.50907, 0.67", "41.9139, -173.541, -6.85896, 0.67", "42.4089, -177.561, -5.99235, 1.33", "43.0188, -181.557, -4.86987, 0.67", "43.4782, -184.438, -3.95099, 0.67", "43.9284, -187.332, -3.03436, 0.67", "44.2369, -189.78, -2.48166, 0.67", "44.4971, -192.661, -2.07878, 2.0", "44.9253, -196.959, -1.87173, 0.67", "45.3886, -201.314, -1.86718, 0.67", "45.8527, -205.032, -1.85183, 2.0", "46.5667, -209.931, -1.74411, 0.67", "47.1563, -212.845, -1.66957, 1.33", "47.8845, -215.932, -1.50583, 0.67", "48.2094, -217.329, -1.35592, 0.67", "49.5296, -221.937, -0.626909, 2.0", "50.4121, -224.813, -0.0190148, 0.67", "51.1484, -227.107, 0.473679, 0.67", "53.1243, -233.558, 1.68837, 0.67", "53.6157, -235.349, 1.9583, 0.67", "54.3799, -238.442, 2.28984, 0.67", "54.9078, -240.982, 2.28382, 0.67", "55.4143, -243.912, 2.29372, 2.0", "55.7378, -246.152, 2.28639, 0.67", "56.3601, -249.984, 2.2032, 1.33", "56.6991, -252.234, 2.13616, 0.67", "57.1242, -256.797, 1.97456, 0.67", "57.4405, -261.005, 1.76287, 1.33", "57.6043, -264.022, 1.55628, 2.0" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "27.9986, -179.703, 22.3676, 1.33", "26.643, -180.835, 22.4148, 1.33", "25.6083, -181.699, 22.4508, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "27.9986, -179.703, 22.3676, 0.67", "28.065, -183.416, 21.2924, 0.67", "28.1336, -187.251, 20.1819, 2.0" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "2.39361, 34.3014, 16.4287, 0.33", "3.72168, 35.7745, 17.961, 0.33", "4.3935, 36.4409, 18.6882, 0.67", "6.58871, 38.2459, 20.9139, 0.67", "7.6185, 39.0927, 21.9579, 0.33", "8.30709, 39.6588, 22.6561, 0.33", "10.0545, 41.0956, 24.4277, 0.67", "10.7454, 41.7124, 25.2847, 0.33", "12.1257, 42.7633, 26.9301, 0.33" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "2.39361, 34.3014, 16.4287, 0.67", "2.83309, 37.7564, 19.8224, 0.67", "3.19206, 40.5785, 22.5944, 0.33", "3.45469, 42.6432, 24.6224, 0.67", "4.1866, 48.3972, 30.2743, 0.33" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "4.59429, 33.2055, -0.567066, 0.67", "9.22987, 35.9341, -4.31955, 0.67", "10.9778, 36.963, -5.73452, 0.67", "14.8377, 39.2351, -8.85908, 0.67", "16.2867, 40.088, -10.0321, 1.33" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "4.59429, 33.2055, -0.567066, 2.0", "3.13816, 38.7716, -1.29099, 2.0" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-0.78795, 26.0359, -15.6264, 0.67", "1.25368, 32.4143, -12.5091, 0.67", "2.09665, 34.4648, -11.5145, 0.67", "5.23491, 40.689, -8.63938, 0.33", "6.08679, 42.2184, -7.97209, 0.33", "7.70104, 45.0383, -6.80826, 1.33", "8.67636, 46.6851, -6.23389, 0.67", "10.4007, 49.8573, -5.11515, 0.33", "11.9836, 52.213, -4.61209, 1.33", "13.1626, 53.611, -4.54273, 0.33", "14.0055, 54.5372, -4.51138, 0.67", "16.0431, 56.6785, -4.71626, 0.33", "17.7534, 58.5096, -5.06587, 0.67", "20.0896, 61.0475, -5.73216, 1.33", "21.8894, 63.1727, -6.1076, 0.33", "22.9674, 64.4694, -6.23884, 0.67", "26.8454, 69.3025, -6.39338, 0.33", "28.1385, 71.0804, -6.32254, 0.33", "29.3452, 72.9751, -6.20419, 0.67", "31.924, 77.7536, -5.8021, 0.33", "32.8489, 79.6075, -5.6061, 0.33", "33.4906, 81.0281, -5.39058, 0.67", "34.3781, 83.2897, -4.88759, 2.0", "35.2143, 85.6145, -4.52836, 0.33", "35.7402, 87.1762, -4.37393, 0.33", "36.1793, 88.2696, -4.23344, 0.67", "36.9246, 89.984, -3.9899, 0.33", "37.293, 90.7663, -3.85558, 0.67", "38.6062, 93.2776, -3.31235, 0.33", "39.6021, 95.0654, -2.83198, 0.33", "42.5581, 100.309, -1.1527, 0.33", "44.0592, 102.961, -0.141301, 1.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-0.78795, 26.0359, -15.6264, 0.67", "-1.57859, 27.4987, -18.9498, 0.67", "-1.99719, 28.2731, -20.7094, 0.67", "-3.48949, 31.0341, -26.9822, 2.0" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "61.9299, -15.4302, -56.6615, 0.33", "61.8892, -14.4087, -59.0573, 0.33", "61.8779, -14.1236, -59.726, 0.67", "61.7862, -11.8233, -65.1212, 0.33", "61.7434, -10.749, -67.641, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "61.9299, -15.4302, -56.6615, 0.33", "63.6739, -15.9409, -56.4672, 0.33", "63.9593, -16.0254, -56.4412, 0.67", "65.967, -16.6403, -56.8442, 0.33", "67.408, -17.1517, -57.3716, 1.33", "69.8285, -18.1774, -58.3086, 0.33", "70.7414, -18.6327, -58.6744, 0.33", "72.6349, -19.9202, -59.5898, 1.33", "76.4205, -23.304, -62.106, 0.33", "77.0601, -24.2645, -62.7411, 0.33", "77.924, -26.0611, -63.8804, 0.67", "78.3582, -27.2634, -64.5726, 0.67", "78.9092, -29.0948, -65.3685, 0.33", "79.4554, -31.3621, -66.1683, 0.67", "80.4997, -35.9695, -67.2375, 0.33", "80.5625, -36.2385, -67.3116, 0.67", "81.2558, -38.9776, -68.2573, 0.33", "81.7262, -40.8145, -68.8649, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "57.6043, -264.022, 1.55628, 0.33", "59.8078, -264.568, 2.19808, 0.33", "60.5769, -264.793, 2.44912, 0.67", "61.2709, -265.122, 2.77727, 0.67", "62.4496, -265.716, 3.34415, 0.33", "64.283, -266.651, 4.13638, 2.0", "66.7943, -267.864, 5.34884, 0.33", "67.4885, -268.231, 5.74316, 1.33", "72.5111, -271.066, 8.86396, 0.67", "73.5622, -271.71, 9.56312, 0.33", "74.7938, -272.508, 10.4378, 1.33", "78.2091, -274.815, 12.9728, 0.67", "79.283, -275.432, 13.967, 0.67", "79.8491, -275.654, 14.6097, 1.33", "80.6212, -275.785, 15.7815, 0.33", "81.5083, -276.033, 17.431, 0.33", "82.1929, -276.418, 19.0465, 0.33", "84.2751, -277.622, 24.018, 0.67", "84.6738, -277.81, 24.9255, 0.67", "85.3244, -278.128, 26.4729, 0.67", "86.0714, -278.622, 28.4586, 0.33", "86.8728, -279.667, 31.0568, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "57.6043, -264.022, 1.55628, 0.67", "57.6022, -266.24, 1.19556, 0.67", "57.5995, -269.266, 0.703329, 0.67", "57.5957, -273.394, 0.0318702, 0.33", "57.5936, -275.625, -0.330942, 2.0", "57.5905, -279.032, -0.885146, 0.33", "57.589, -280.637, -1.14615, 0.33" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "28.1336, -187.251, 20.1819, 0.33", "24.4209, -189.635, 22.377, 0.33", "23.2991, -190.461, 22.9003, 0.33", "21.3439, -192.115, 23.6038, 0.33", "20.5165, -192.918, 23.853, 0.33", "18.6962, -194.686, 24.0821, 0.67", "17.5606, -195.798, 24.139, 0.67", "16.1784, -197.206, 23.9777, 1.33", "14.7463, -198.761, 23.7816, 0.33", "13.7834, -199.898, 23.5809, 0.33", "11.1583, -203.102, 22.9234, 0.33", "10.3065, -204.245, 22.5502, 1.33", "9.24127, -205.804, 21.9969, 0.33", "8.31102, -207.294, 21.414, 0.33", "6.6565, -210.148, 20.1724, 0.67", "5.67397, -212.065, 19.2714, 1.33", "4.29638, -216.158, 17.2635, 0.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "28.1336, -187.251, 20.1819, 0.67", "28.3634, -190.843, 20.5476, 0.67", "28.5054, -193.068, 20.8832, 1.33", "28.9481, -200.584, 22.1897, 0.67", "29.1067, -202.256, 22.4802, 0.67", "29.2473, -203.86, 22.6995, 0.67", "29.4822, -207.439, 23.0115, 0.67", "29.5882, -209.363, 23.1834, 1.33", "29.7546, -212.208, 23.4181, 0.67", "30.0709, -216.34, 23.6346, 0.67", "30.2528, -219.457, 23.619, 0.67", "30.3886, -222.106, 23.3192, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "16.2867, 40.088, -10.0321, 1.33", "18.3959, 41.6063, -7.74305, 0.33", "19.1271, 42.1326, -6.9495, 1.33", "21.4012, 43.7696, -4.48143, 0.33", "22.9864, 44.9107, -2.76108, 0.67" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "16.2867, 40.088, -10.0321, 1.33", "16.8146, 40.479, -11.9942, 1.33", "18.2694, 41.4293, -15.8318, 0.67", "20.2334, 42.6842, -20.3167, 1.33", "21.0705, 43.1103, -22.1256, 1.33", "23.8751, 44.4136, -27.6718, 0.67", "24.9279, 44.8205, -29.5545, 1.33", "28.0372, 45.9378, -34.6089, 0.67", "28.6332, 46.1427, -35.3951, 1.33", "31.3299, 46.8495, -38.3704, 0.67", "32.7689, 47.0816, -39.7668, 1.33", "36.9212, 47.3262, -43.3626, 0.67", "37.6177, 47.319, -43.9047, 1.33", "39.2373, 47.2257, -44.8102, 0.67", "40.3634, 47.1307, -45.2983, 1.33", "43.0467, 46.8284, -45.7806, 0.33", "43.9786, 46.6582, -45.8228, 0.67", "45.1674, 46.4873, -45.6654, 0.33", "45.6319, 46.4357, -45.6008, 0.33", "47.7666, 46.1916, -45.3151, 2.0", "50.1039, 46.0389, -44.9932, 0.67", "52.7994, 46.0935, -44.661, 0.33", "54.9114, 46.2628, -44.4376, 1.33", "56.2057, 46.4536, -44.3082, 1.33", "58.1215, 46.823, -44.1286, 0.33", "59.1368, 47.1014, -44.087, 1.33", "61.8343, 48.0488, -44.1033, 0.33", "62.3267, 48.2448, -44.0737, 1.33", "63.4847, 48.7399, -43.9759, 0.33", "63.9443, 48.9823, -43.9279, 0.67", "66.0724, 50.2869, -43.6745, 0.33", "66.4979, 50.5686, -43.5966, 0.67", "68.713, 52.0937, -43.0119, 0.33", "69.479, 52.6203, -42.778, 1.33", "70.4859, 53.2954, -42.4302, 0.33", "70.684, 53.4188, -42.3821, 0.67", "72.6117, 54.5295, -42.1818, 0.33", "73.2564, 54.8892, -42.1394, 1.33", "75.0658, 55.7217, -42.0587, 0.33", "75.8615, 55.9979, -41.9301, 0.67", "79.3386, 56.6671, -40.9514, 0.67", "80.8325, 56.609, -40.2828, 0.33", "84.4231, 56.0466, -38.3993, 2.0", "86.7784, 55.4678, -36.8732, 0.33", "88.1312, 54.9715, -35.7518, 0.33", "89.065, 54.5637, -34.7979, 0.67", "91.0619, 53.5684, -32.2682, 0.33" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "3.13816, 38.7716, -1.29099, 2.0", "5.77022, 42.2959, -5.01987, 2.0" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "3.13816, 38.7716, -1.29099, 0.67", "3.22891, 43.2786, -0.395489, 0.67", "3.37713, 46.6309, 0.203237, 0.67", "3.46336, 49.6861, 0.680062, 0.67", "3.58703, 53.2883, 1.10536, 0.67", "3.71924, 58.0886, 1.52065, 0.67", "3.83403, 61.1267, 1.73766, 1.33", "4.09567, 68.8316, 2.1409, 0.67", "4.21941, 71.8621, 2.07682, 0.67", "4.49959, 76.6121, 1.89662, 0.67", "4.74047, 79.0939, 1.81143, 0.67", "5.01918, 80.9894, 1.73074, 1.33", "5.50355, 83.9866, 1.84751, 0.67", "6.38588, 89.9471, 2.81192, 0.67", "7.21468, 94.6153, 3.9731, 0.67", "7.70159, 97.3833, 5.06251, 1.33", "8.01507, 99.112, 5.9672, 0.67", "8.37577, 101.836, 7.82854, 0.67", "8.5231, 103.114, 9.18271, 0.67" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "44.0592, 102.961, -0.141301, 0.33", "45.4736, 102.953, -0.617078, 0.33", "47.5717, 102.94, -1.32279, 0.67", "48.9756, 102.932, -1.79502, 0.33", "49.764, 102.927, -2.0602, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "44.0592, 102.961, -0.141301, 1.33", "44.6091, 104.289, -0.922346, 1.33", "45.5431, 106.392, -2.40548, 0.33", "45.7104, 106.724, -2.68596, 0.67", "46.5841, 108.384, -4.29078, 0.33", "46.9242, 109.036, -4.81315, 0.67", "49.176, 113.278, -7.6433, 0.33", "49.4858, 113.781, -7.92694, 0.67", "50.9838, 115.949, -8.9827, 0.33", "52.387, 118.129, -9.71634, 0.67", "55.697, 123.687, -10.838, 0.33", "56.0442, 124.313, -10.8847, 0.67", "57.9732, 127.694, -10.3247, 0.33", "61.0284, 133.124, -9.59705, 1.33", "61.8399, 134.62, -9.38319, 0.33", "62.1274, 135.164, -9.56293, 0.67", "63.463, 137.758, -11.1872, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-3.48949, 31.0341, -26.9822, 0.33", "-3.23982, 33.6511, -29.7934, 0.33", "-3.16599, 35.9178, -31.9473, 0.33", "-3.18691, 39.1029, -34.6146, 0.67", "-3.10734, 40.5264, -35.8377, 0.33", "-3.01417, 43.0188, -37.9461, 1.33", "-3.03909, 47.9388, -42.2515, 0.33", "-3.14777, 50.7946, -44.622, 1.33", "-3.40131, 52.7841, -46.235, 0.33", "-4.48853, 58.3752, -50.3919, 0.33", "-5.11913, 60.894, -52.1466, 0.33", "-6.39247, 64.8784, -54.5422, 1.33", "-7.54842, 67.9421, -56.1345, 0.33", "-8.48815, 70.2558, -57.3452, 0.33", "-8.91849, 71.2222, -57.7965, 1.33", "-10.2239, 73.844, -58.7804, 0.33", "-11.0482, 75.7249, -59.4899, 2.0", "-13.3967, 81.6256, -61.6426, 0.33", "-13.7811, 82.5511, -61.8631, 0.67", "-14.7821, 84.9599, -62.0845, 0.33", "-15.0981, 85.7001, -62.0173, 0.67", "-16.0633, 87.9537, -61.5123, 0.33", "-16.6545, 89.2854, -61.1612, 0.67", "-20.6122, 97.757, -58.3325, 0.33", "-21.4327, 99.7393, -57.8572, 2.67", "-23.9271, 106.412, -56.7305, 0.33", "-24.2878, 107.49, -56.6336, 0.67", "-25.5918, 111.77, -56.6146, 0.33", "-26.0593, 113.582, -56.8233, 0.67", "-27.2956, 119.642, -58.4111, 0.33", "-27.6265, 121.356, -58.9032, 0.67", "-27.9688, 123.244, -59.5233, 2.0", "-28.3732, 125.657, -60.2953, 0.33", "-28.5852, 127.438, -60.7851, 2.0", "-28.8652, 130.206, -61.5755, 0.33" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-3.48949, 31.0341, -26.9822, 0.67", "-4.04562, 31.685, -29.0045, 0.67", "-4.9888, 32.4138, -30.7351, 0.33", "-8.08501, 34.2794, -34.5415, 0.67", "-9.51253, 34.9696, -35.9049, 0.67", "-10.4282, 35.3257, -36.6304, 0.33", "-11.5601, 35.7084, -37.4311, 0.33", "-14.3144, 36.5734, -39.043, 0.33", "-16.248, 37.059, -39.9685, 1.33", "-18.1608, 37.2857, -40.6537, 0.33", "-20.3624, 37.3703, -41.4419, 0.67", "-21.4873, 37.3639, -41.8384, 0.33", "-23.4144, 37.3329, -42.4977, 0.33", "-24.2498, 37.3668, -42.8718, 0.67", "-25.8212, 37.5074, -43.8006, 0.33", "-26.5449, 37.6194, -44.3483, 0.33", "-27.2396, 37.7263, -45.1281, 1.33", "-28.3226, 37.8288, -46.742, 1.33", "-30.3425, 37.6847, -50.7667, 0.33", "-31.0466, 37.6287, -52.3087, 0.33", "-31.2848, 37.587, -52.917, 0.67", "-32.5484, 37.0889, -56.5008, 0.33", "-32.831, 36.8862, -57.4268, 1.33", "-33.8848, 35.5597, -61.3, 1.33" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "61.7434, -10.749, -67.641, 0.33", "62.9044, -9.89449, -67.5756, 0.33", "63.7254, -9.29019, -67.5294, 0.67", "64.7411, -8.54269, -67.4722, 0.33", "65.6128, -7.90103, -67.4231, 0.67", "67.1405, -6.77668, -67.3371, 0.33", "67.1405, -6.77668, -67.3371, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "61.7434, -10.749, -67.641, 0.33", "61.5265, -10.2259, -68.4899, 0.33", "61.3562, -9.82219, -69.1189, 1.33", "59.8065, -6.05825, -74.4129, 0.33", "59.5385, -5.53463, -75.2232, 2.0", "58.2451, -3.1292, -78.9422, 0.33", "57.7421, -2.19379, -80.3884, 1.33", "56.735, -0.443148, -83.2006, 0.33", "56.0321, 0.695425, -85.04, 1.33", "53.5477, 4.32223, -90.3128, 0.33", "52.9586, 5.05876, -91.531, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "57.589, -280.637, -1.14615, 0.33", "58.6762, -279.456, 1.63359, 0.33", "60.6479, -277.315, 6.67522, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "57.589, -280.637, -1.14615, 0.33", "58.6419, -282.798, -0.934896, 0.33", "59.5259, -284.696, -0.687061, 0.67", "60.9782, -287.957, -0.234725, 0.33", "62.5207, -291.718, 0.344981, 1.33", "63.0575, -293.255, 0.618984, 1.33", "63.9185, -296.024, 1.12042, 0.67", "64.3095, -297.431, 1.481, 0.67", "64.6822, -298.992, 1.9519, 0.33", "64.8879, -300.097, 2.32738, 0.67", "65.1031, -302.49, 3.06551, 0.33", "65.2142, -305.053, 3.93971, 0.67", "65.3042, -307.396, 4.89497, 0.33", "65.2698, -309.283, 5.55107, 1.33", "65.21, -311.487, 6.32703, 1.33", "65.1473, -313.688, 7.0872, 0.67", "65.0127, -316.761, 8.13064, 0.67", "64.5706, -321.822, 9.8205, 0.67", "63.9878, -326.889, 11.2541, 2.0" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "4.29638, -216.158, 17.2635, 0.33", "9.75179, -215.142, 19.372, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "4.29638, -216.158, 17.2635, 0.33", "3.45244, -218.663, 18.3359, 0.33", "2.63666, -220.9, 19.2667, 1.33", "0.911076, -224.927, 20.9122, 0.33", "-2.63425, -232.728, 23.9505, 0.33", "-3.53287, -234.648, 24.7327, 2.0", "-4.93248, -237.918, 26.3279, 0.33", "-5.10161, -238.281, 26.5326, 0.67", "-5.95006, -240.089, 27.723, 0.33", "-6.65772, -241.439, 28.746, 0.33", "-7.64405, -243.483, 29.892, 1.33", "-9.842, -249.432, 34.1139, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "30.3886, -222.106, 23.3192, 0.33", "29.2851, -221.212, 23.8815, 0.33", "28.1972, -220.329, 24.4359, 0.33", "26.6112, -219.043, 25.2442, 0.33", "26.0076, -218.553, 25.5518, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "30.3886, -222.106, 23.3192, 0.67", "30.9499, -223.895, 27.5102, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "22.9864, 44.9107, -2.76108, 0.67", "23.3385, 47.5951, -5.86034, 0.67" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "22.9864, 44.9107, -2.76108, 0.67", "24.4933, 44.0356, -1.06176, 0.67", "26.7518, 42.9559, 1.4507, 0.33", "27.9778, 42.571, 2.91628, 0.67", "29.4668, 42.3299, 4.65906, 0.33", "32.8036, 42.1285, 8.15614, 1.33", "34.351, 42.181, 9.86118, 0.33", "35.7316, 42.3442, 11.3408, 0.67", "38.0583, 42.877, 13.7082, 0.33", "39.4317, 43.3052, 15.1621, 1.33", "41.6401, 44.1698, 17.4233, 0.33", "45.0535, 45.7285, 20.6504, 1.33", "47.2847, 46.8192, 22.7719, 0.67", "48.0741, 47.2249, 23.485, 0.67", "50.5237, 48.591, 25.8058, 0.33", "51.6691, 49.334, 26.9835, 0.33", "52.7506, 50.1074, 28.0908, 0.33", "54.0678, 50.9546, 29.2317, 0.33", "54.9438, 51.5526, 29.9737, 1.33", "57.8258, 53.54, 32.3712, 0.33", "59.2175, 54.5438, 33.447, 0.67", "60.9501, 55.6869, 34.8715, 0.67", "62.7199, 56.6612, 36.4125, 0.33", "65.0169, 57.8191, 38.4202, 1.33", "67.5521, 59.0232, 40.5945, 0.67", "69.631, 59.9589, 42.254, 0.67", "72.1227, 61.0934, 44.528, 0.67", "74.5037, 62.3188, 47.1292, 0.67" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "5.77022, 42.2959, -5.01987, 0.67", "8.71086, 46.3877, -6.64788, 0.67", "9.66786, 47.558, -7.16283, 0.67", "13.0488, 51.3245, -8.46243, 1.33", "15.6853, 54.2617, -9.47589, 1.33", "17.0705, 55.8049, -10.0084, 0.67", "18.689, 57.6079, -10.6305, 1.33", "20.6241, 59.532, -11.3211, 0.33", "23.8551, 62.2558, -12.111, 1.33" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "5.77022, 42.2959, -5.01987, 1.33", "3.3257, 44.3703, -4.96295, 1.33", "-2.09736, 48.9721, -4.83668, 0.67", "-3.85747, 50.4656, -4.7957, 0.67", "-7.53498, 53.5862, -4.71007, 1.33" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "63.463, 137.758, -11.1872, 0.33", "62.5622, 138.859, -11.4706, 0.33", "62.3791, 139.083, -11.5282, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "63.463, 137.758, -11.1872, 0.33", "64.1549, 139.929, -11.5337, 0.33", "64.5356, 140.736, -11.8948, 0.67", "65.516, 142.792, -12.9516, 0.33", "66.0078, 143.778, -13.498, 0.67", "66.7667, 145.179, -14.2912, 0.33", "68.2078, 147.575, -15.6687, 0.67", "69.9505, 150.081, -17.3702, 0.33", "70.9326, 151.38, -18.2989, 0.33", "71.3217, 151.838, -18.6426, 0.67", "72.13, 152.879, -19.456, 0.33", "72.7134, 153.788, -20.1299, 0.67", "73.8757, 156.194, -21.5666, 0.33", "74.2414, 157.225, -22.0985, 0.67", "74.4418, 157.803, -22.4131, 0.67", "75.5219, 161.479, -24.4091, 0.33", "75.6839, 162.223, -24.8233, 0.33", "76.0117, 164.401, -26.0343, 0.67", "76.0988, 165.238, -26.5007, 0.33", "76.2807, 167.173, -27.6122, 1.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-28.8652, 130.206, -61.5755, 0.33", "-28.8671, 131.283, -62.0003, 0.33", "-28.8685, 132.102, -62.3233, 0.67", "-28.8725, 134.427, -63.2398, 0.33", "-28.8751, 135.965, -63.8461, 1.33", "-28.8785, 137.932, -64.6216, 0.33", "-28.8815, 139.738, -65.3337, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-28.8652, 130.206, -61.5755, 0.33", "-29.3106, 132.975, -60.1333, 0.33", "-30.0877, 137.391, -58.6622, 0.67", "-30.3564, 139.087, -58.2558, 0.33", "-30.5911, 140.387, -58.265, 0.67", "-30.9465, 142.099, -58.4609, 0.33", "-31.3259, 143.864, -58.7553, 1.33", "-32.5324, 149.57, -60.2718, 0.33", "-33.2454, 152.855, -61.3886, 0.67", "-34.7986, 160.034, -63.9344, 0.33", "-34.98, 160.841, -64.222, 0.67", "-35.5103, 163.313, -65.1122, 0.33", "-35.7526, 164.603, -65.5936, 0.67", "-36.2932, 167.702, -66.7881, 0.33", "-36.5205, 169.183, -67.1584, 0.67", "-36.9253, 172.101, -67.3647, 0.33", "-37.1307, 173.333, -67.4515, 0.33", "-37.3651, 174.541, -67.5501, 0.67", "-37.7727, 176.395, -67.7018, 0.33", "-38.3876, 179.06, -67.9171, 0.67", "-39.109, 181.518, -68.0919, 0.33", "-39.4205, 182.481, -68.1388, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-33.8848, 35.5597, -61.3, 0.33", "-36.0956, 38.1396, -64.2338, 0.33", "-36.5463, 38.631, -64.8548, 2.0", "-38.4575, 40.6961, -67.5223, 0.33", "-38.6953, 40.9469, -67.8235, 0.67", "-39.0892, 41.3633, -68.2896, 0.33", "-40.4667, 42.9275, -69.8665, 1.33", "-41.1247, 43.6369, -70.5659, 0.33", "-41.5216, 44.1236, -70.9433, 0.67", "-42.784, 46.0582, -72.0073, 0.33", "-43.3312, 46.9812, -72.4478, 1.33", "-44.18, 48.649, -73.1271, 0.33", "-44.7995, 50.0157, -73.59, 0.33", "-45.4177, 51.5214, -74.1004, 0.67", "-46.163, 53.5232, -74.7945, 0.33", "-46.4728, 54.498, -75.1379, 1.33", "-47.0387, 56.4038, -75.8131, 0.33", "-47.1682, 56.83, -76.0, 0.67", "-47.3806, 57.5581, -76.3829, 0.33", "-47.5568, 58.1496, -76.7518, 0.67", "-47.7568, 58.709, -77.1637, 0.33", "-47.947, 59.1804, -77.5507, 0.67", "-48.8599, 61.1382, -79.4039, 0.33", "-48.8599, 61.1382, -79.4039, 0.67", "-49.1932, 61.8386, -80.1746, 0.33", "-49.3227, 62.0864, -80.4631, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-33.8848, 35.5597, -61.3, 0.33", "-35.1815, 35.317, -64.0567, 0.33", "-36.8366, 35.1427, -66.9259, 0.67", "-39.2396, 34.9135, -70.7937, 0.33", "-39.7195, 34.8599, -71.4788, 0.67", "-43.1422, 34.4039, -76.0269, 0.33", "-47.2064, 33.6476, -80.9624, 2.67", "-50.9729, 32.6246, -85.648, 0.33", "-51.3213, 32.4933, -86.0463, 0.67", "-53.3119, 31.4621, -88.3517, 0.33", "-53.8496, 31.1077, -88.8862, 1.33", "-56.1973, 29.2541, -90.6033, 0.33", "-59.2666, 26.4803, -92.3532, 2.0", "-60.9566, 24.4945, -93.6055, 0.33", "-61.2742, 24.1488, -93.8454, 0.67", "-62.9479, 22.4773, -95.1141, 0.33", "-63.3251, 22.2021, -95.3498, 0.67", "-65.1821, 21.2565, -96.2824, 0.33", "-67.2001, 20.6082, -96.9967, 0.67", "-70.6501, 19.9076, -98.2011, 0.33", "-71.8008, 19.7599, -98.4879, 0.67", "-75.1273, 19.4732, -99.265, 0.33", "-75.8703, 19.4127, -99.4163, 0.67", "-79.9761, 19.1812, -100.02, 0.33", "-81.1731, 19.1516, -100.094, 0.67", "-85.4986, 19.4524, -100.142, 0.67" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "63.9878, -326.889, 11.2541, 0.33", "63.8052, -330.204, 17.6658, 0.33", "63.5103, -331.9, 20.4446, 0.67", "63.3032, -332.65, 21.5413, 0.33", "62.8263, -333.637, 22.563, 0.33", "61.9302, -335.267, 23.6746, 0.33", "61.4103, -336.108, 23.9912, 0.67", "60.0041, -338.039, 24.0708, 0.33", "58.9525, -339.567, 24.0106, 0.67", "55.3104, -345.092, 22.9739, 0.33", "54.1363, -347.051, 22.4189, 0.67", "52.217, -350.476, 21.2063, 0.33", "51.6884, -351.452, 20.8167, 0.67", "49.9322, -354.897, 19.2586, 0.33", "48.0747, -359.07, 17.3196, 0.67", "47.5489, -360.77, 16.6882, 0.33", "47.3356, -361.411, 16.3998, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "63.9878, -326.889, 11.2541, 0.67", "64.7363, -329.178, 12.1085, 0.67", "65.3886, -331.323, 12.7989, 0.67", "65.8394, -332.814, 13.1927, 0.33", "67.1552, -337.479, 14.1993, 2.67", "68.2016, -341.552, 14.735, 0.67", "68.9726, -344.606, 14.9928, 0.33", "69.144, -345.336, 15.0185, 0.67", "69.7176, -348.135, 15.0153, 0.33", "70.4743, -352.764, 14.7935, 0.33", "70.8686, -356.121, 14.4618, 0.67", "71.1686, -358.949, 14.2002, 0.33", "71.6451, -362.826, 13.8874, 0.33", "71.9516, -365.84, 13.6738, 0.33", "72.0668, -367.584, 13.5861, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "30.9499, -223.895, 27.5102, 0.33", "29.6826, -225.844, 28.1954, 0.33", "28.6966, -227.361, 28.7285, 0.33", "27.6089, -229.033, 29.3166, 0.33", "26.9092, -230.109, 29.6949, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "30.9499, -223.895, 27.5102, 0.67", "32.6022, -227.235, 28.4679, 0.67", "35.235, -232.556, 29.9939, 1.33", "36.7406, -235.599, 30.8666, 0.67", "39.5106, -241.197, 32.4721, 1.33", "41.1334, -244.477, 33.4127, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "74.5037, 62.3188, 47.1292, 0.33", "76.3503, 61.3411, 48.7771, 0.33", "78.5423, 60.1805, 50.7332, 0.33", "82.477, 58.0971, 54.2445, 0.33", "84.3483, 57.1063, 55.9145, 0.33", "85.4018, 56.5485, 56.8546, 0.33", "86.7781, 55.8198, 58.0828, 0.67" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "74.5037, 62.3188, 47.1292, 0.67", "76.3989, 63.0925, 49.1928, 0.67", "78.5784, 63.9822, 51.566, 0.67", "79.9134, 64.5272, 53.0197, 0.67", "81.0988, 65.0111, 54.3104, 0.67", "86.2738, 67.1236, 59.9454, 0.67" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "23.8551, 62.2558, -12.111, 0.33", "26.356, 64.0722, -10.9081, 0.33", "27.4387, 65.0194, -10.3328, 0.33", "27.6926, 65.5128, -9.12254, 0.33", "27.9823, 66.0677, -7.5551, 0.33", "28.3271, 66.7823, -5.68213, 1.33", "28.6847, 67.529, -3.87762, 0.33", "28.9519, 68.1224, -2.45309, 0.67", "30.5033, 72.2987, 6.81438, 0.33", "30.7484, 72.9957, 8.23192, 0.67", "31.002, 73.6934, 9.61254, 0.33", "31.2511, 74.2427, 10.5586, 0.67", "31.834, 75.2303, 11.9567, 0.33", "32.152, 75.6888, 12.3716, 0.67", "32.8808, 76.6501, 12.721, 0.33", "33.2733, 77.1862, 12.8991, 0.67", "35.1855, 79.705, 13.7086, 0.33", "36.5492, 81.5769, 14.2469, 0.33", "36.9616, 82.1017, 14.3973, 0.67", "39.101, 84.4979, 15.1278, 0.33", "39.7755, 85.1133, 15.3858, 1.33", "41.3006, 86.2195, 15.9832, 0.33", "42.3396, 86.7883, 16.3899, 1.33", "44.9336, 87.9764, 17.809, 0.67", "46.5296, 88.5083, 18.8631, 0.67", "49.6096, 89.1637, 21.1309, 0.67", "50.6963, 89.373, 21.976, 1.33", "51.5764, 89.5262, 22.682, 0.33", "54.8591, 90.1289, 25.3432, 1.33", "57.7298, 90.8185, 27.7178, 0.33", "59.9088, 91.5168, 29.4145, 0.67", "60.9952, 91.9636, 30.1708, 0.33", "61.5493, 92.2217, 30.5232, 0.67", "62.4424, 92.7289, 30.9707, 0.33", "63.1274, 93.2277, 31.1811, 1.33", "64.4251, 94.6484, 31.5619, 0.33", "65.4273, 95.9249, 31.8425, 0.33", "65.8159, 96.3932, 31.9217, 0.67", "66.934, 97.6948, 32.0827, 0.33", "67.5299, 98.3883, 32.1373, 0.67", "68.1658, 99.1168, 32.1765, 0.33", "69.0871, 100.125, 32.1976, 0.33", "70.2101, 101.201, 32.2151, 0.67", "71.3018, 102.272, 32.1792, 0.33", "71.526, 102.476, 32.156, 0.67" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "23.8551, 62.2558, -12.111, 0.33", "27.371, 62.5595, -8.69689, 0.33", "28.7257, 62.7372, -7.44835, 0.67", "32.6717, 63.4712, -3.54409, 0.33", "33.6868, 63.6945, -2.57955, 1.33", "34.9407, 64.0037, -1.41626, 0.33", "35.7216, 64.2268, -0.698319, 0.67", "36.5791, 64.6066, 0.0995479, 0.33", "39.7347, 66.2639, 2.101, 1.33", "41.2342, 67.3164, 2.47517, 0.33", "41.5108, 67.5177, 2.46993, 0.67", "42.4697, 68.2308, 2.31132, 0.33", "43.7922, 69.2042, 1.97987, 0.67", "47.6721, 72.1032, 0.561793, 0.33", "49.661, 73.6048, -0.428148, 0.67", "52.2508, 75.5534, -1.73294, 0.33", "54.448, 77.1098, -2.8397, 1.33" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-7.53498, 53.5862, -4.71007, 0.33", "-10.0595, 54.4569, -4.86237, 0.33", "-13.7394, 55.5627, -4.93797, 0.33", "-14.4769, 55.7823, -4.94523, 0.67", "-20.7667, 57.4754, -5.09668, 0.33", "-23.0208, 58.078, -5.19354, 0.67", "-25.623, 58.782, -5.32575, 0.33", "-26.0019, 58.8722, -5.35781, 0.67", "-27.8906, 59.167, -5.46775, 0.33", "-30.9654, 59.5082, -5.59274, 0.33", "-33.8797, 59.839, -5.68934, 0.33", "-34.7937, 59.9406, -5.75611, 1.33", "-39.3388, 60.4843, -6.24345, 0.33", "-42.206, 60.7852, -6.50481, 0.33", "-44.1118, 60.873, -6.60194, 1.33" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-7.53498, 53.5862, -4.71007, 0.67", "-7.92406, 56.9981, -5.03604, 0.67", "-8.34311, 61.3418, -5.54587, 0.67", "-8.47001, 64.1911, -5.95259, 0.67", "-8.50188, 68.8873, -6.65325, 0.67", "-8.47794, 71.2971, -7.02151, 0.67", "-8.25523, 74.3536, -7.60316, 0.67", "-7.97681, 76.2018, -8.04532, 1.33", "-7.3836, 78.8367, -8.75287, 0.67", "-6.79527, 81.5301, -9.34482, 2.0", "-6.35503, 83.4083, -9.79473, 1.33", "-5.1487, 88.2667, -10.8915, 1.33", "-4.65885, 90.444, -11.3505, 0.67", "-3.95536, 94.1758, -12.11, 0.67", "-3.28483, 99.8088, -13.1419, 1.33", "-2.98598, 103.77, -13.8349, 1.33" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-28.8815, 139.738, -65.3337, 0.33", "-22.2829, 143.378, -67.8293, 0.33", "-21.9335, 143.571, -67.9614, 0.67", "-20.9763, 144.099, -68.3234, 0.33", "-20.3788, 144.428, -68.5493, 0.67", "-17.6097, 145.956, -69.5965, 0.33", "-15.0022, 147.394, -70.5827, 2.0" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-28.8815, 139.738, -65.3337, 0.33", "-29.7803, 140.448, -66.017, 0.33", "-29.9639, 140.593, -66.1567, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "54.448, 77.1098, -2.8397, 0.33", "55.1728, 75.5413, -0.982476, 0.33", "55.299, 75.2683, -0.65928, 0.67", "55.8498, 74.0764, 0.75207, 0.33", "55.976, 73.8034, 1.07526, 0.67", "57.2038, 71.1466, 4.22117, 0.33", "58.3428, 68.6821, 7.13939, 0.67" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "54.448, 77.1098, -2.8397, 0.67", "56.8196, 83.75, -10.5341, 0.67", "57.501, 85.3086, -12.0581, 1.33", "58.5174, 87.1408, -13.5534, 0.33", "59.0436, 87.9705, -14.1555, 0.67", "59.9945, 89.455, -15.0891, 0.67", "62.432, 92.9598, -16.9845, 0.67", "64.4821, 95.117, -17.4766, 0.33", "66.1475, 96.7311, -17.8735, 0.33", "67.0837, 97.576, -18.0371, 0.67", "68.2326, 98.681, -18.2713, 0.67", "70.0555, 100.501, -18.6285, 0.33", "71.7387, 102.259, -18.9946, 1.33", "73.7697, 104.777, -19.7338, 0.33", "74.3846, 105.675, -19.9829, 0.67", "76.304, 108.578, -20.5985, 0.33", "76.6708, 109.177, -20.687, 0.67", "78.6013, 112.986, -20.885, 0.33", "78.8237, 113.414, -20.7656, 0.67", "79.5876, 114.722, -19.7513, 0.33", "80.8993, 116.559, -17.4813, 0.67", "81.6209, 117.502, -16.1158, 0.33", "81.9556, 117.938, -15.4822, 0.67", "84.1381, 120.866, -11.2827, 0.67", "85.2063, 122.41, -9.46485, 0.33", "87.0701, 125.249, -6.77412, 0.33", "87.8822, 126.57, -5.81768, 0.67", "89.4471, 129.137, -4.15528, 0.33", "90.3622, 130.732, -3.35755, 0.67", "91.8278, 133.453, -2.63149, 0.67", "92.8601, 135.147, -2.32712, 0.33", "93.0996, 135.544, -2.33649, 0.67" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-44.1118, 60.873, -6.60194, 0.67", "-48.7398, 60.0641, -4.68971, 0.67", "-49.7699, 59.8589, -4.26937, 0.67", "-51.5977, 59.4435, -3.50713, 0.33", "-53.5617, 58.9675, -2.70702, 0.67", "-55.0722, 58.5606, -2.09107, 0.33", "-55.7185, 58.3898, -1.76276, 0.67", "-57.4104, 57.9993, -0.708989, 0.33", "-58.0955, 57.8114, -0.257459, 0.67", "-59.5485, 57.3375, 0.899629, 0.33", "-60.0647, 57.1352, 1.3908, 0.67", "-63.0486, 55.9965, 4.39193, 0.33", "-64.3258, 55.5279, 5.71943, 0.67", "-66.7425, 54.6319, 8.38587, 0.67", "-69.1937, 53.7302, 11.1237, 0.67", "-70.9516, 53.0106, 13.2519, 0.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-44.1118, 60.873, -6.60194, 1.33", "-45.6236, 59.8226, -7.01116, 1.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-2.98598, 103.77, -13.8349, 0.67", "-3.14262, 105.231, -13.1165, 0.67", "-3.36569, 107.313, -12.0934, 0.67" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-2.98598, 103.77, -13.8349, 0.67", "-3.85115, 104.933, -14.6859, 0.67", "-4.55944, 106.093, -15.5188, 0.33", "-5.15876, 107.307, -16.1703, 0.67", "-5.80641, 108.744, -16.8413, 0.33", "-7.30647, 112.241, -18.3343, 0.67", "-8.4444, 115.03, -19.4274, 0.33", "-9.01647, 117.047, -20.1438, 0.67", "-9.68141, 120.597, -21.2786, 0.33", "-9.73227, 120.989, -21.3929, 0.67", "-9.86179, 122.385, -21.7767, 0.33", "-10.058, 124.525, -22.2483, 2.0", "-10.6881, 129.506, -23.0961, 0.67", "-11.2852, 133.736, -23.7046, 1.33", "-11.4981, 135.767, -24.1206, 0.33", "-11.5284, 136.161, -24.2081, 0.67", "-11.918, 139.503, -24.8599, 0.33", "-12.0498, 140.13, -24.9647, 0.67", "-12.7185, 142.07, -25.1677, 0.33", "-14.7245, 147.42, -25.673, 0.67", "-15.1719, 148.626, -25.814, 0.33", "-16.6329, 152.597, -26.5214, 0.67", "-17.603, 155.307, -27.3755, 0.67", "-18.2173, 156.622, -27.7193, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-45.6236, 59.8226, -7.01116, 0.67", "-49.0033, 58.7601, 0.777186, 0.67", "-49.3996, 58.6355, 1.69036, 0.67", "-50.9374, 58.152, 5.2342, 0.67" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-45.6236, 59.8226, -7.01116, 0.33", "-46.4448, 58.9084, -5.2556, 0.33", "-47.5143, 57.2647, -2.58103, 0.33", "-48.8502, 54.7014, 0.933551, 0.67", "-49.8373, 52.7661, 3.41495, 0.33", "-51.5291, 49.6741, 7.33247, 0.33", "-52.3207, 48.2272, 9.16561, 0.33", "-53.9923, 45.7222, 12.4473, 0.67", "-55.2831, 44.1055, 14.4813, 0.67", "-56.3508, 42.6117, 15.9864, 0.67", "-56.7438, 41.8272, 16.7763, 0.67" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-3.36569, 107.313, -12.0934, 0.33", "-4.41726, 108.689, -12.5775, 0.33", "-4.70983, 109.072, -12.7121, 0.67", "-6.19533, 111.015, -13.3959, 0.33", "-7.2685, 112.419, -13.89, 0.67" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-3.36569, 107.313, -12.0934, 0.67", "-3.85329, 108.382, -10.6794, 0.67", "-6.01593, 112.458, -5.29139, 0.67", "-7.16351, 114.573, -2.23676, 0.33", "-7.7904, 115.756, -0.561603, 0.67", "-8.97569, 117.965, 2.51844, 0.33", "-9.78148, 119.466, 4.61231, 0.33", "-10.9645, 121.38, 7.29853, 0.67", "-11.896, 122.736, 9.42195, 0.33", "-12.6094, 123.779, 10.8626, 0.33", "-12.998, 124.39, 11.8466, 0.33" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-18.2173, 156.622, -27.7193, 0.67", "-16.0397, 160.218, -30.4079, 0.67" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-18.2173, 156.622, -27.7193, 0.67", "-17.7219, 157.256, -29.5547, 0.67", "-17.3139, 157.777, -31.0661, 0.67", "-16.6202, 158.664, -33.6361, 0.33", "-15.7488, 159.778, -36.8639, 1.33", "-13.6829, 162.42, -44.5171, 0.33", "-13.5419, 162.6, -45.0397, 0.67" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-13.5419, 162.6, -45.0397, 0.33", "-11.9288, 162.639, -47.9334, 0.33", "-11.6727, 162.654, -48.4084, 0.67", "-9.99369, 162.747, -51.5226, 0.33", "-9.06374, 162.798, -53.2475, 0.67", "-6.44098, 162.944, -58.1121, 0.67", "-4.00573, 163.079, -62.629, 0.33", "-3.8152, 163.099, -62.9593, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-13.5419, 162.6, -45.0397, 0.67", "-18.8373, 167.571, -46.0191, 0.67", "-22.0887, 170.623, -46.6204, 0.33", "-22.7114, 171.207, -46.7355, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_25", "dend_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_30", "dend_25", "dend_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_80", "dend_80", "dend_80", "dend_49", "dend_49", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_2", "dend_2", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_73", "dend_73", "dend_73", "dend_73", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_79", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L4_DBC_45e771bde6_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_30
create dend_48
public dend_48
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_80, id: dend_80, parent: dend_48
create dend_80
public dend_80
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_12
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_73, id: dend_73, parent: dend_49
create dend_73
public dend_73
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_33
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_79, id: dend_79, parent: dend_75
create dend_79
public dend_79
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_68, id: dend_68, parent: dend_52
create dend_68
public dend_68
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_63, id: dend_63, parent: dend_53
create dend_63
public dend_63
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_54
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_80, dend_80, dend_80, dend_49, dend_49, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_2, dend_2, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_73, dend_73, dend_73, dend_73, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_30(0), soma_0(0.49999999788066063)
    connect dend_25(0), soma_0(0.49999999788066063)
    connect dend_0(0), soma_0(0.49999999788066063)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_80(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_73(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_79(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_68(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_63(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.7707, 14.3445, 1.63673, 2.6356 ) }
    soma_0 { pt3dadd( 1.65855, 13.0663, 1.48326, 4.68599 ) }
    soma_0 { pt3dadd( 1.5464, 11.788, 1.32978, 5.81905 ) }
    soma_0 { pt3dadd( 1.43425, 10.5097, 1.1763, 6.95808 ) }
    soma_0 { pt3dadd( 1.32209, 9.23142, 1.02283, 8.17562 ) }
    soma_0 { pt3dadd( 1.20994, 7.95314, 0.869351, 9.23498 ) }
    soma_0 { pt3dadd( 1.09779, 6.67486, 0.715875, 9.66374 ) }
    soma_0 { pt3dadd( 0.985636, 5.39658, 0.562399, 9.75915 ) }
    soma_0 { pt3dadd( 0.873483, 4.1183, 0.408922, 9.85456 ) }
    soma_0 { pt3dadd( 0.76133, 2.84002, 0.255446, 9.99274 ) }
    soma_0 { pt3dadd( 0.649178, 1.56175, 0.101969, 10.3671 ) }
    soma_0 { pt3dadd( 0.537025, 0.283466, -0.051507, 11.1059 ) }
    soma_0 { pt3dadd( 0.424873, -0.994813, -0.204983, 11.9164 ) }
    soma_0 { pt3dadd( 0.31272, -2.27309, -0.35846, 12.7207 ) }
    soma_0 { pt3dadd( 0.200568, -3.55137, -0.511936, 12.9931 ) }
    soma_0 { pt3dadd( 0.0884149, -4.82965, -0.665413, 12.8706 ) }
    soma_0 { pt3dadd( -0.0237377, -6.10793, -0.818889, 12.7481 ) }
    soma_0 { pt3dadd( -0.13589, -7.38621, -0.972365, 11.5655 ) }
    soma_0 { pt3dadd( -0.248043, -8.66449, -1.12584, 9.82802 ) }
    soma_0 { pt3dadd( -0.360195, -9.94277, -1.27932, 4.98087 ) }
    soma_0 { pt3dadd( -0.472348, -11.221, -1.43279, 2.92263 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.24391, 15.5458, 5.96094, 3.33 ) }
    dend_30 { pt3dadd( 0.959454, 22.3672, 7.04706, 3.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.08609, -3.14072, 6.39094, 1.33 ) }
    dend_25 { pt3dadd( -10.3703, -3.33175, 6.80456, 0.67 ) }
    dend_25 { pt3dadd( -12.1711, -3.75213, 6.96903, 0.67 ) }
    dend_25 { pt3dadd( -14.1775, -4.2345, 7.11913, 0.67 ) }
    dend_25 { pt3dadd( -17.9485, -4.80336, 7.3627, 0.67 ) }
    dend_25 { pt3dadd( -20.3663, -5.02735, 7.50155, 0.67 ) }
    dend_25 { pt3dadd( -24.9123, -5.17986, 7.73386, 0.67 ) }
    dend_25 { pt3dadd( -30.919, -5.12117, 7.97282, 0.67 ) }
    dend_25 { pt3dadd( -32.991, -5.10541, 8.08341, 0.67 ) }
    dend_25 { pt3dadd( -36.3436, -5.13842, 8.30359, 0.67 ) }
    dend_25 { pt3dadd( -38.0529, -5.27957, 8.27398, 0.67 ) }
    dend_25 { pt3dadd( -40.4318, -5.55527, 7.85335, 0.67 ) }
    dend_25 { pt3dadd( -42.0686, -5.67584, 7.35388, 0.67 ) }
    dend_25 { pt3dadd( -44.4372, -5.72969, 6.55558, 0.67 ) }
    dend_25 { pt3dadd( -47.224, -5.9285, 5.63717, 0.67 ) }
    dend_25 { pt3dadd( -54.0465, -6.34824, 3.76939, 0.67 ) }
    dend_25 { pt3dadd( -57.3496, -6.33659, 3.13788, 0.67 ) }
    dend_25 { pt3dadd( -60.803, -6.00029, 2.85884, 0.67 ) }
    dend_25 { pt3dadd( -63.8074, -5.49583, 2.94796, 0.67 ) }
    dend_25 { pt3dadd( -65.5176, -5.10447, 3.12304, 0.67 ) }
    dend_25 { pt3dadd( -69.8114, -3.83554, 3.8748, 0.67 ) }
    dend_25 { pt3dadd( -74.8049, -2.16569, 5.07597, 0.67 ) }
    dend_25 { pt3dadd( -80.1494, -0.235009, 6.33196, 0.67 ) }
    dend_25 { pt3dadd( -84.1242, 1.34848, 7.21886, 0.33 ) }
    dend_25 { pt3dadd( -85.2947, 1.8799, 7.46436, 0.67 ) }
    dend_25 { pt3dadd( -88.1071, 3.17785, 7.98312, 1.33 ) }
    dend_25 { pt3dadd( -94.6226, 6.15414, 8.908, 0.67 ) }
    dend_25 { pt3dadd( -95.9759, 6.77599, 8.97368, 0.67 ) }
    dend_25 { pt3dadd( -99.5403, 8.3482, 8.73807, 1.33 ) }
    dend_25 { pt3dadd( -102.745, 9.73892, 8.34587, 0.67 ) }
    dend_25 { pt3dadd( -107.554, 11.6766, 7.65158, 0.67 ) }
    dend_25 { pt3dadd( -111.576, 13.029, 6.98693, 0.67 ) }
    dend_25 { pt3dadd( -116.512, 14.4268, 5.94598, 0.67 ) }
    dend_25 { pt3dadd( -118.386, 14.8912, 5.53095, 1.33 ) }
    dend_25 { pt3dadd( -121.613, 15.5499, 4.76598, 0.33 ) }
    dend_25 { pt3dadd( -123.656, 15.9321, 4.31217, 1.33 ) }
    dend_25 { pt3dadd( -128.302, 16.9485, 3.25632, 0.67 ) }
    dend_25 { pt3dadd( -132.421, 17.4681, 2.57534, 0.67 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.04391, -8.90719, 0.670944, 2.67 ) }
    dend_0 { pt3dadd( 6.59172, -11.3712, 2.41782, 2.0 ) }
    dend_0 { pt3dadd( 9.39067, -15.8268, 5.57677, 2.0 ) }
    dend_0 { pt3dadd( 11.9663, -19.9269, 8.48372, 2.0 ) }
    dend_0 { pt3dadd( 13.0, -21.5725, 9.65039, 2.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 66/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.472348, -11.221, -1.43279, 0.67 ) }
    axon_0 { pt3dadd( -1.78337, -26.1636, -1.43279, 0.67 ) }
    axon_0 { pt3dadd( -3.0944, -41.1062, -1.43279, 0.67 ) }
    // Section: dend_48, id: dend_48, parent: dend_30 (entry count 69/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 0.959454, 22.3672, 7.04706, 2.67 ) }
    dend_48 { pt3dadd( 0.334329, 23.8858, 8.27441, 2.67 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 71/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.959454, 22.3672, 7.04706, 1.33 ) }
    dend_31 { pt3dadd( 0.00248599, 21.424, -7.11676, 1.33 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 73/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -132.421, 17.4681, 2.57534, 0.67 ) }
    dend_27 { pt3dadd( -135.083, 18.734, 2.74183, 0.67 ) }
    dend_27 { pt3dadd( -138.361, 19.9464, 2.21686, 0.67 ) }
    dend_27 { pt3dadd( -140.113, 20.3897, 1.71763, 0.33 ) }
    dend_27 { pt3dadd( -140.803, 20.5572, 1.50081, 0.67 ) }
    dend_27 { pt3dadd( -141.815, 20.7721, 1.08885, 0.67 ) }
    dend_27 { pt3dadd( -143.314, 21.0655, 0.433302, 0.67 ) }
    dend_27 { pt3dadd( -147.016, 21.6237, -1.50998, 0.67 ) }
    dend_27 { pt3dadd( -149.348, 22.019, -2.8717, 0.67 ) }
    dend_27 { pt3dadd( -150.69, 22.2919, -3.67345, 0.67 ) }
    dend_27 { pt3dadd( -153.407, 22.9802, -5.21268, 2.0 ) }
    dend_27 { pt3dadd( -154.675, 23.3796, -5.91916, 0.33 ) }
    dend_27 { pt3dadd( -155.885, 23.8554, -6.54333, 0.67 ) }
    dend_27 { pt3dadd( -156.758, 24.2422, -6.88598, 1.33 ) }
    dend_27 { pt3dadd( -158.64, 25.2507, -7.74489, 0.33 ) }
    dend_27 { pt3dadd( -159.514, 25.7272, -8.1233, 2.0 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 89/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -132.421, 17.4681, 2.57534, 0.33 ) }
    dend_26 { pt3dadd( -132.235, 16.5377, 1.81169, 0.33 ) }
    dend_26 { pt3dadd( -132.087, 15.7988, 1.20523, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 92/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 13.0, -21.5725, 9.65039, 1.33 ) }
    dend_12 { pt3dadd( 16.7956, -26.2478, -0.363986, 1.33 ) }
    dend_12 { pt3dadd( 18.2647, -28.0572, -4.23989, 0.67 ) }
    dend_12 { pt3dadd( 19.224, -29.2389, -6.77111, 0.67 ) }
    dend_12 { pt3dadd( 19.9674, -30.1546, -8.73243, 2.0 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 97/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 13.0, -21.5725, 9.65039, 0.67 ) }
    dend_1 { pt3dadd( 12.7441, -27.1084, 9.6185, 0.67 ) }
    dend_1 { pt3dadd( 12.8668, -31.1055, 10.0074, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 13.1018, -36.6445, 10.7503, 0.67 ) }
    dend_1 { pt3dadd( 13.5802, -43.144, 11.6882, 1.33 ) }
    dend_1 { pt3dadd( 14.0149, -48.7595, 12.4879, 1.33 ) }
    dend_1 { pt3dadd( 15.0107, -58.734, 13.8396, 1.33 ) }
    dend_1 { pt3dadd( 15.7204, -62.5594, 14.3738, 1.33 ) }
    dend_1 { pt3dadd( 16.7827, -67.4167, 15.0848, 1.33 ) }
    dend_1 { pt3dadd( 17.5798, -71.1804, 15.5852, 1.33 ) }
    dend_1 { pt3dadd( 18.399, -75.273, 16.1727, 1.33 ) }
    dend_1 { pt3dadd( 19.1914, -79.8991, 16.6523, 1.33 ) }
    dend_1 { pt3dadd( 20.5123, -88.2464, 16.8174, 0.67 ) }
    dend_1 { pt3dadd( 21.0612, -92.0864, 16.8864, 1.33 ) }
    dend_1 { pt3dadd( 21.4695, -94.7706, 16.9288, 1.33 ) }
    dend_1 { pt3dadd( 22.3572, -102.108, 17.3959, 1.33 ) }
    dend_1 { pt3dadd( 22.7467, -106.237, 17.6379, 1.33 ) }
    dend_1 { pt3dadd( 22.9325, -111.488, 17.9446, 0.67 ) }
    dend_1 { pt3dadd( 22.8851, -117.861, 18.3844, 1.33 ) }
    dend_1 { pt3dadd( 22.8198, -121.918, 18.5953, 0.67 ) }
    dend_1 { pt3dadd( 22.4685, -133.567, 19.0, 1.33 ) }
    dend_1 { pt3dadd( 22.2328, -139.121, 19.2052, 1.33 ) }
    dend_1 { pt3dadd( 22.2136, -143.092, 19.3062, 1.33 ) }
    dend_1 { pt3dadd( 22.2835, -146.886, 19.351, 1.33 ) }
    dend_1 { pt3dadd( 22.5221, -152.175, 19.5428, 1.33 ) }
    dend_1 { pt3dadd( 22.749, -155.02, 19.6912, 1.33 ) }
    dend_1 { pt3dadd( 23.8746, -162.668, 19.9819, 2.0 ) }
    dend_1 { pt3dadd( 24.9388, -168.045, 20.5085, 1.33 ) }
    dend_1 { pt3dadd( 25.5148, -170.341, 20.7614, 2.0 ) }
    dend_1 { pt3dadd( 27.3114, -177.121, 21.73, 2.0 ) }
    dend_1 { pt3dadd( 27.9986, -179.703, 22.3676, 2.0 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 28/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -3.0944, -41.1062, -1.43279, 0.33 ) }
    axon_1 { pt3dadd( -4.40542, -56.0488, -1.43279, 0.33 ) }
    axon_1 { pt3dadd( -5.71644, -70.9914, -1.43279, 0.33 ) }
    // Section: dend_80, id: dend_80, parent: dend_48 (entry count 31/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 0.334329, 23.8858, 8.27441, 0.67 ) }
    dend_80 { pt3dadd( 0.638738, 25.4255, 9.4798, 0.67 ) }
    dend_80 { pt3dadd( 1.1591, 28.0574, 11.5403, 0.67 ) }
    dend_80 { pt3dadd( 2.39361, 34.3014, 16.4287, 0.67 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 35/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 0.334329, 23.8858, 8.27441, 2.67 ) }
    dend_49 { pt3dadd( 2.88239, 29.4603, 2.98594, 2.67 ) }
    dend_49 { pt3dadd( 4.59429, 33.2055, -0.567066, 2.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 38/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.00248599, 21.424, -7.11676, 1.33 ) }
    dend_33 { pt3dadd( -0.491701, 24.3074, -12.4371, 1.33 ) }
    dend_33 { pt3dadd( -0.78795, 26.0359, -15.6264, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.00248599, 21.424, -7.11676, 0.67 ) }
    dend_32 { pt3dadd( 2.38652, 18.2845, -7.20252, 0.67 ) }
    dend_32 { pt3dadd( 5.11151, 15.1266, -6.89732, 0.33 ) }
    dend_32 { pt3dadd( 6.90616, 13.2996, -6.60947, 0.67 ) }
    dend_32 { pt3dadd( 8.39634, 11.9025, -6.36539, 0.67 ) }
    dend_32 { pt3dadd( 9.86591, 10.5101, -6.11874, 0.33 ) }
    dend_32 { pt3dadd( 10.8133, 9.65086, -5.97339, 0.67 ) }
    dend_32 { pt3dadd( 14.2514, 7.0667, -5.83746, 0.33 ) }
    dend_32 { pt3dadd( 15.4567, 6.24508, -5.83093, 0.67 ) }
    dend_32 { pt3dadd( 17.9121, 4.5474, -5.98843, 0.33 ) }
    dend_32 { pt3dadd( 19.2664, 3.67073, -6.20646, 0.67 ) }
    dend_32 { pt3dadd( 20.7309, 2.78704, -6.60634, 0.33 ) }
    dend_32 { pt3dadd( 22.8763, 1.68659, -7.4069, 0.67 ) }
    dend_32 { pt3dadd( 24.5858, 0.907514, -8.34123, 0.33 ) }
    dend_32 { pt3dadd( 25.9129, 0.321442, -9.07807, 0.67 ) }
    dend_32 { pt3dadd( 26.7786, 0.0273522, -9.55988, 0.33 ) }
    dend_32 { pt3dadd( 28.0335, -0.328868, -10.2302, 1.33 ) }
    dend_32 { pt3dadd( 31.4529, -1.30609, -11.9277, 0.33 ) }
    dend_32 { pt3dadd( 33.501, -1.76323, -12.7328, 0.67 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -159.514, 25.7272, -8.1233, 0.33 ) }
    dend_29 { pt3dadd( -160.665, 23.7201, -7.23652, 0.33 ) }
    dend_29 { pt3dadd( -161.547, 22.1826, -6.55724, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 63/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -159.514, 25.7272, -8.1233, 0.33 ) }
    dend_28 { pt3dadd( -162.591, 26.4914, -7.02578, 0.33 ) }
    dend_28 { pt3dadd( -163.617, 26.7462, -6.65984, 0.67 ) }
    dend_28 { pt3dadd( -166.595, 27.4859, -5.59762, 0.33 ) }
    dend_28 { pt3dadd( -169.175, 28.1267, -4.67729, 0.67 ) }
    dend_28 { pt3dadd( -171.018, 28.5845, -4.01984, 0.33 ) }
    dend_28 { pt3dadd( -172.146, 28.8645, -3.61772, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: dend_12 (entry count 70/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 19.9674, -30.1546, -8.73243, 0.67 ) }
    dend_20 { pt3dadd( 21.1826, -31.365, -11.1921, 0.67 ) }
    dend_20 { pt3dadd( 22.1539, -32.2253, -12.7834, 0.67 ) }
    dend_20 { pt3dadd( 24.4386, -33.7059, -16.0039, 1.33 ) }
    dend_20 { pt3dadd( 25.248, -33.978, -16.9848, 0.67 ) }
    dend_20 { pt3dadd( 27.2672, -34.2723, -19.1098, 0.67 ) }
    dend_20 { pt3dadd( 28.4138, -34.3454, -20.0841, 1.33 ) }
    dend_20 { pt3dadd( 29.9338, -34.3353, -21.2721, 0.67 ) }
    dend_20 { pt3dadd( 31.7965, -34.1154, -22.3531, 0.67 ) }
    dend_20 { pt3dadd( 34.6437, -33.2878, -23.6243, 0.67 ) }
    dend_20 { pt3dadd( 35.8164, -32.813, -24.0987, 0.67 ) }
    dend_20 { pt3dadd( 38.0362, -31.7227, -24.8378, 0.67 ) }
    dend_20 { pt3dadd( 41.1421, -29.8504, -25.8905, 1.33 ) }
    dend_20 { pt3dadd( 42.7156, -28.7896, -26.4663, 0.67 ) }
    dend_20 { pt3dadd( 44.4855, -27.4475, -27.189, 1.33 ) }
    dend_20 { pt3dadd( 45.2471, -26.7903, -27.6943, 0.67 ) }
    dend_20 { pt3dadd( 45.7149, -26.3382, -28.1463, 1.33 ) }
    dend_20 { pt3dadd( 46.2725, -25.686, -28.8778, 0.67 ) }
    dend_20 { pt3dadd( 47.1906, -24.5692, -30.2332, 0.67 ) }
    dend_20 { pt3dadd( 48.2487, -23.4062, -31.8478, 1.33 ) }
    dend_20 { pt3dadd( 50.2767, -21.5712, -34.6796, 0.67 ) }
    dend_20 { pt3dadd( 51.3348, -20.6817, -36.0802, 0.33 ) }
    dend_20 { pt3dadd( 52.2641, -19.9284, -37.3941, 0.33 ) }
    dend_20 { pt3dadd( 52.9756, -19.4471, -38.5211, 0.67 ) }
    dend_20 { pt3dadd( 53.7869, -18.9628, -40.0358, 0.67 ) }
    dend_20 { pt3dadd( 54.6083, -18.5566, -41.5759, 0.67 ) }
    dend_20 { pt3dadd( 54.9807, -18.3712, -42.2623, 0.67 ) }
    dend_20 { pt3dadd( 56.8617, -17.4415, -45.8357, 2.0 ) }
    dend_20 { pt3dadd( 58.6793, -16.6582, -49.3993, 0.33 ) }
    dend_20 { pt3dadd( 59.7459, -16.2213, -51.6913, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_20 { pt3dadd( 60.1183, -16.0959, -52.5556, 0.33 ) }
    dend_20 { pt3dadd( 60.4722, -15.9725, -53.4526, 0.67 ) }
    dend_20 { pt3dadd( 60.8125, -15.8599, -54.3319, 0.33 ) }
    dend_20 { pt3dadd( 61.9299, -15.4302, -56.6615, 1.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 4/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 19.9674, -30.1546, -8.73243, 0.67 ) }
    dend_13 { pt3dadd( 21.3289, -35.6931, -10.0648, 0.67 ) }
    dend_13 { pt3dadd( 22.4882, -40.2058, -11.3051, 0.67 ) }
    dend_13 { pt3dadd( 23.0253, -42.1122, -11.8347, 0.67 ) }
    dend_13 { pt3dadd( 24.7993, -48.4536, -13.4231, 1.33 ) }
    dend_13 { pt3dadd( 25.4087, -50.594, -13.8943, 2.0 ) }
    dend_13 { pt3dadd( 26.4625, -54.2784, -14.6163, 0.67 ) }
    dend_13 { pt3dadd( 27.138, -56.9018, -15.1797, 1.33 ) }
    dend_13 { pt3dadd( 27.759, -59.6884, -15.6538, 0.67 ) }
    dend_13 { pt3dadd( 28.7418, -64.0706, -16.128, 0.67 ) }
    dend_13 { pt3dadd( 29.5145, -67.3588, -16.1738, 1.33 ) }
    dend_13 { pt3dadd( 30.0048, -69.5839, -16.2415, 0.33 ) }
    dend_13 { pt3dadd( 30.4003, -71.6108, -16.31, 0.33 ) }
    dend_13 { pt3dadd( 30.7841, -74.2172, -16.364, 0.67 ) }
    dend_13 { pt3dadd( 30.972, -75.8416, -16.4502, 1.33 ) }
    dend_13 { pt3dadd( 31.3599, -79.0562, -16.7111, 0.67 ) }
    dend_13 { pt3dadd( 31.9296, -83.0781, -16.8235, 0.67 ) }
    dend_13 { pt3dadd( 32.647, -87.5474, -16.7182, 1.33 ) }
    dend_13 { pt3dadd( 33.358, -91.6754, -16.4167, 0.67 ) }
    dend_13 { pt3dadd( 33.705, -93.9303, -16.1296, 2.67 ) }
    dend_13 { pt3dadd( 34.0935, -96.4149, -15.4762, 0.67 ) }
    dend_13 { pt3dadd( 34.7822, -101.761, -13.7303, 0.67 ) }
    dend_13 { pt3dadd( 34.9592, -103.657, -12.9857, 0.33 ) }
    dend_13 { pt3dadd( 35.1429, -105.834, -12.1093, 0.67 ) }
    dend_13 { pt3dadd( 35.2652, -107.378, -11.5361, 0.33 ) }
    dend_13 { pt3dadd( 35.6156, -113.077, -9.74965, 2.0 ) }
    dend_13 { pt3dadd( 35.9385, -119.417, -8.43046, 0.67 ) }
    dend_13 { pt3dadd( 36.0072, -120.856, -8.28113, 0.67 ) }
    dend_13 { pt3dadd( 36.2391, -123.165, -8.10329, 0.67 ) }
    dend_13 { pt3dadd( 36.6108, -126.038, -7.95593, 1.33 ) }
    dend_13 { pt3dadd( 36.9483, -128.608, -7.88654, 0.67 ) }
    dend_13 { pt3dadd( 37.4475, -132.563, -8.00878, 0.67 ) }
    dend_13 { pt3dadd( 37.7284, -134.58, -7.98204, 1.33 ) }
    dend_13 { pt3dadd( 38.1187, -137.531, -7.99342, 0.67 ) }
    dend_13 { pt3dadd( 38.6105, -142.054, -8.209, 0.67 ) }
    dend_13 { pt3dadd( 38.7995, -143.659, -8.25276, 0.67 ) }
    dend_13 { pt3dadd( 39.1276, -146.114, -8.24806, 0.67 ) }
    dend_13 { pt3dadd( 39.4049, -148.45, -8.1715, 0.67 ) }
    dend_13 { pt3dadd( 39.5259, -149.73, -8.1814, 1.33 ) }
    dend_13 { pt3dadd( 39.6653, -153.021, -8.28171, 0.67 ) }
    dend_13 { pt3dadd( 40.0189, -157.692, -8.51994, 2.0 ) }
    dend_13 { pt3dadd( 40.441, -161.59, -8.50313, 0.67 ) }
    dend_13 { pt3dadd( 40.6026, -162.945, -8.41801, 0.67 ) }
    dend_13 { pt3dadd( 41.1846, -168.085, -7.82617, 1.33 ) }
    dend_13 { pt3dadd( 41.4581, -170.206, -7.50907, 0.67 ) }
    dend_13 { pt3dadd( 41.9139, -173.541, -6.85896, 0.67 ) }
    dend_13 { pt3dadd( 42.4089, -177.561, -5.99235, 1.33 ) }
    dend_13 { pt3dadd( 43.0188, -181.557, -4.86987, 0.67 ) }
    dend_13 { pt3dadd( 43.4782, -184.438, -3.95099, 0.67 ) }
    dend_13 { pt3dadd( 43.9284, -187.332, -3.03436, 0.67 ) }
    dend_13 { pt3dadd( 44.2369, -189.78, -2.48166, 0.67 ) }
    dend_13 { pt3dadd( 44.4971, -192.661, -2.07878, 2.0 ) }
    dend_13 { pt3dadd( 44.9253, -196.959, -1.87173, 0.67 ) }
    dend_13 { pt3dadd( 45.3886, -201.314, -1.86718, 0.67 ) }
    dend_13 { pt3dadd( 45.8527, -205.032, -1.85183, 2.0 ) }
    dend_13 { pt3dadd( 46.5667, -209.931, -1.74411, 0.67 ) }
    dend_13 { pt3dadd( 47.1563, -212.845, -1.66957, 1.33 ) }
    dend_13 { pt3dadd( 47.8845, -215.932, -1.50583, 0.67 ) }
    dend_13 { pt3dadd( 48.2094, -217.329, -1.35592, 0.67 ) }
    dend_13 { pt3dadd( 49.5296, -221.937, -0.626909, 2.0 ) }
    dend_13 { pt3dadd( 50.4121, -224.813, -0.0190148, 0.67 ) }
    dend_13 { pt3dadd( 51.1484, -227.107, 0.473679, 0.67 ) }
    dend_13 { pt3dadd( 53.1243, -233.558, 1.68837, 0.67 ) }
    dend_13 { pt3dadd( 53.6157, -235.349, 1.9583, 0.67 ) }
    dend_13 { pt3dadd( 54.3799, -238.442, 2.28984, 0.67 ) }
    dend_13 { pt3dadd( 54.9078, -240.982, 2.28382, 0.67 ) }
    dend_13 { pt3dadd( 55.4143, -243.912, 2.29372, 2.0 ) }
    dend_13 { pt3dadd( 55.7378, -246.152, 2.28639, 0.67 ) }
    dend_13 { pt3dadd( 56.3601, -249.984, 2.2032, 1.33 ) }
    dend_13 { pt3dadd( 56.6991, -252.234, 2.13616, 0.67 ) }
    dend_13 { pt3dadd( 57.1242, -256.797, 1.97456, 0.67 ) }
    dend_13 { pt3dadd( 57.4405, -261.005, 1.76287, 1.33 ) }
    dend_13 { pt3dadd( 57.6043, -264.022, 1.55628, 2.0 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 77/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 27.9986, -179.703, 22.3676, 1.33 ) }
    dend_11 { pt3dadd( 26.643, -180.835, 22.4148, 1.33 ) }
    dend_11 { pt3dadd( 25.6083, -181.699, 22.4508, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 27.9986, -179.703, 22.3676, 0.67 ) }
    dend_2 { pt3dadd( 28.065, -183.416, 21.2924, 0.67 ) }
    dend_2 { pt3dadd( 28.1336, -187.251, 20.1819, 2.0 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 83/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 2.39361, 34.3014, 16.4287, 0.33 ) }
    dend_82 { pt3dadd( 3.72168, 35.7745, 17.961, 0.33 ) }
    dend_82 { pt3dadd( 4.3935, 36.4409, 18.6882, 0.67 ) }
    dend_82 { pt3dadd( 6.58871, 38.2459, 20.9139, 0.67 ) }
    dend_82 { pt3dadd( 7.6185, 39.0927, 21.9579, 0.33 ) }
    dend_82 { pt3dadd( 8.30709, 39.6588, 22.6561, 0.33 ) }
    dend_82 { pt3dadd( 10.0545, 41.0956, 24.4277, 0.67 ) }
    dend_82 { pt3dadd( 10.7454, 41.7124, 25.2847, 0.33 ) }
    dend_82 { pt3dadd( 12.1257, 42.7633, 26.9301, 0.33 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 2.39361, 34.3014, 16.4287, 0.67 ) }
    dend_81 { pt3dadd( 2.83309, 37.7564, 19.8224, 0.67 ) }
    dend_81 { pt3dadd( 3.19206, 40.5785, 22.5944, 0.33 ) }
    dend_81 { pt3dadd( 3.45469, 42.6432, 24.6224, 0.67 ) }
    dend_81 { pt3dadd( 4.1866, 48.3972, 30.2743, 0.33 ) }
    // Section: dend_73, id: dend_73, parent: dend_49 (entry count 97/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 4.59429, 33.2055, -0.567066, 0.67 ) }
    dend_73 { pt3dadd( 9.22987, 35.9341, -4.31955, 0.67 ) }
    dend_73 { pt3dadd( 10.9778, 36.963, -5.73452, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_73 { pt3dadd( 14.8377, 39.2351, -8.85908, 0.67 ) }
    dend_73 { pt3dadd( 16.2867, 40.088, -10.0321, 1.33 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 2/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 4.59429, 33.2055, -0.567066, 2.0 ) }
    dend_50 { pt3dadd( 3.13816, 38.7716, -1.29099, 2.0 ) }
    // Section: dend_43, id: dend_43, parent: dend_33 (entry count 4/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -0.78795, 26.0359, -15.6264, 0.67 ) }
    dend_43 { pt3dadd( 1.25368, 32.4143, -12.5091, 0.67 ) }
    dend_43 { pt3dadd( 2.09665, 34.4648, -11.5145, 0.67 ) }
    dend_43 { pt3dadd( 5.23491, 40.689, -8.63938, 0.33 ) }
    dend_43 { pt3dadd( 6.08679, 42.2184, -7.97209, 0.33 ) }
    dend_43 { pt3dadd( 7.70104, 45.0383, -6.80826, 1.33 ) }
    dend_43 { pt3dadd( 8.67636, 46.6851, -6.23389, 0.67 ) }
    dend_43 { pt3dadd( 10.4007, 49.8573, -5.11515, 0.33 ) }
    dend_43 { pt3dadd( 11.9836, 52.213, -4.61209, 1.33 ) }
    dend_43 { pt3dadd( 13.1626, 53.611, -4.54273, 0.33 ) }
    dend_43 { pt3dadd( 14.0055, 54.5372, -4.51138, 0.67 ) }
    dend_43 { pt3dadd( 16.0431, 56.6785, -4.71626, 0.33 ) }
    dend_43 { pt3dadd( 17.7534, 58.5096, -5.06587, 0.67 ) }
    dend_43 { pt3dadd( 20.0896, 61.0475, -5.73216, 1.33 ) }
    dend_43 { pt3dadd( 21.8894, 63.1727, -6.1076, 0.33 ) }
    dend_43 { pt3dadd( 22.9674, 64.4694, -6.23884, 0.67 ) }
    dend_43 { pt3dadd( 26.8454, 69.3025, -6.39338, 0.33 ) }
    dend_43 { pt3dadd( 28.1385, 71.0804, -6.32254, 0.33 ) }
    dend_43 { pt3dadd( 29.3452, 72.9751, -6.20419, 0.67 ) }
    dend_43 { pt3dadd( 31.924, 77.7536, -5.8021, 0.33 ) }
    dend_43 { pt3dadd( 32.8489, 79.6075, -5.6061, 0.33 ) }
    dend_43 { pt3dadd( 33.4906, 81.0281, -5.39058, 0.67 ) }
    dend_43 { pt3dadd( 34.3781, 83.2897, -4.88759, 2.0 ) }
    dend_43 { pt3dadd( 35.2143, 85.6145, -4.52836, 0.33 ) }
    dend_43 { pt3dadd( 35.7402, 87.1762, -4.37393, 0.33 ) }
    dend_43 { pt3dadd( 36.1793, 88.2696, -4.23344, 0.67 ) }
    dend_43 { pt3dadd( 36.9246, 89.984, -3.9899, 0.33 ) }
    dend_43 { pt3dadd( 37.293, 90.7663, -3.85558, 0.67 ) }
    dend_43 { pt3dadd( 38.6062, 93.2776, -3.31235, 0.33 ) }
    dend_43 { pt3dadd( 39.6021, 95.0654, -2.83198, 0.33 ) }
    dend_43 { pt3dadd( 42.5581, 100.309, -1.1527, 0.33 ) }
    dend_43 { pt3dadd( 44.0592, 102.961, -0.141301, 1.33 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -0.78795, 26.0359, -15.6264, 0.67 ) }
    dend_34 { pt3dadd( -1.57859, 27.4987, -18.9498, 0.67 ) }
    dend_34 { pt3dadd( -1.99719, 28.2731, -20.7094, 0.67 ) }
    dend_34 { pt3dadd( -3.48949, 31.0341, -26.9822, 2.0 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 40/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 61.9299, -15.4302, -56.6615, 0.33 ) }
    dend_22 { pt3dadd( 61.8892, -14.4087, -59.0573, 0.33 ) }
    dend_22 { pt3dadd( 61.8779, -14.1236, -59.726, 0.67 ) }
    dend_22 { pt3dadd( 61.7862, -11.8233, -65.1212, 0.33 ) }
    dend_22 { pt3dadd( 61.7434, -10.749, -67.641, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 61.9299, -15.4302, -56.6615, 0.33 ) }
    dend_21 { pt3dadd( 63.6739, -15.9409, -56.4672, 0.33 ) }
    dend_21 { pt3dadd( 63.9593, -16.0254, -56.4412, 0.67 ) }
    dend_21 { pt3dadd( 65.967, -16.6403, -56.8442, 0.33 ) }
    dend_21 { pt3dadd( 67.408, -17.1517, -57.3716, 1.33 ) }
    dend_21 { pt3dadd( 69.8285, -18.1774, -58.3086, 0.33 ) }
    dend_21 { pt3dadd( 70.7414, -18.6327, -58.6744, 0.33 ) }
    dend_21 { pt3dadd( 72.6349, -19.9202, -59.5898, 1.33 ) }
    dend_21 { pt3dadd( 76.4205, -23.304, -62.106, 0.33 ) }
    dend_21 { pt3dadd( 77.0601, -24.2645, -62.7411, 0.33 ) }
    dend_21 { pt3dadd( 77.924, -26.0611, -63.8804, 0.67 ) }
    dend_21 { pt3dadd( 78.3582, -27.2634, -64.5726, 0.67 ) }
    dend_21 { pt3dadd( 78.9092, -29.0948, -65.3685, 0.33 ) }
    dend_21 { pt3dadd( 79.4554, -31.3621, -66.1683, 0.67 ) }
    dend_21 { pt3dadd( 80.4997, -35.9695, -67.2375, 0.33 ) }
    dend_21 { pt3dadd( 80.5625, -36.2385, -67.3116, 0.67 ) }
    dend_21 { pt3dadd( 81.2558, -38.9776, -68.2573, 0.33 ) }
    dend_21 { pt3dadd( 81.7262, -40.8145, -68.8649, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 63/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 57.6043, -264.022, 1.55628, 0.33 ) }
    dend_19 { pt3dadd( 59.8078, -264.568, 2.19808, 0.33 ) }
    dend_19 { pt3dadd( 60.5769, -264.793, 2.44912, 0.67 ) }
    dend_19 { pt3dadd( 61.2709, -265.122, 2.77727, 0.67 ) }
    dend_19 { pt3dadd( 62.4496, -265.716, 3.34415, 0.33 ) }
    dend_19 { pt3dadd( 64.283, -266.651, 4.13638, 2.0 ) }
    dend_19 { pt3dadd( 66.7943, -267.864, 5.34884, 0.33 ) }
    dend_19 { pt3dadd( 67.4885, -268.231, 5.74316, 1.33 ) }
    dend_19 { pt3dadd( 72.5111, -271.066, 8.86396, 0.67 ) }
    dend_19 { pt3dadd( 73.5622, -271.71, 9.56312, 0.33 ) }
    dend_19 { pt3dadd( 74.7938, -272.508, 10.4378, 1.33 ) }
    dend_19 { pt3dadd( 78.2091, -274.815, 12.9728, 0.67 ) }
    dend_19 { pt3dadd( 79.283, -275.432, 13.967, 0.67 ) }
    dend_19 { pt3dadd( 79.8491, -275.654, 14.6097, 1.33 ) }
    dend_19 { pt3dadd( 80.6212, -275.785, 15.7815, 0.33 ) }
    dend_19 { pt3dadd( 81.5083, -276.033, 17.431, 0.33 ) }
    dend_19 { pt3dadd( 82.1929, -276.418, 19.0465, 0.33 ) }
    dend_19 { pt3dadd( 84.2751, -277.622, 24.018, 0.67 ) }
    dend_19 { pt3dadd( 84.6738, -277.81, 24.9255, 0.67 ) }
    dend_19 { pt3dadd( 85.3244, -278.128, 26.4729, 0.67 ) }
    dend_19 { pt3dadd( 86.0714, -278.622, 28.4586, 0.33 ) }
    dend_19 { pt3dadd( 86.8728, -279.667, 31.0568, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 57.6043, -264.022, 1.55628, 0.67 ) }
    dend_14 { pt3dadd( 57.6022, -266.24, 1.19556, 0.67 ) }
    dend_14 { pt3dadd( 57.5995, -269.266, 0.703329, 0.67 ) }
    dend_14 { pt3dadd( 57.5957, -273.394, 0.0318702, 0.33 ) }
    dend_14 { pt3dadd( 57.5936, -275.625, -0.330942, 2.0 ) }
    dend_14 { pt3dadd( 57.5905, -279.032, -0.885146, 0.33 ) }
    dend_14 { pt3dadd( 57.589, -280.637, -1.14615, 0.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 92/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 28.1336, -187.251, 20.1819, 0.33 ) }
    dend_8 { pt3dadd( 24.4209, -189.635, 22.377, 0.33 ) }
    dend_8 { pt3dadd( 23.2991, -190.461, 22.9003, 0.33 ) }
    dend_8 { pt3dadd( 21.3439, -192.115, 23.6038, 0.33 ) }
    dend_8 { pt3dadd( 20.5165, -192.918, 23.853, 0.33 ) }
    dend_8 { pt3dadd( 18.6962, -194.686, 24.0821, 0.67 ) }
    dend_8 { pt3dadd( 17.5606, -195.798, 24.139, 0.67 ) }
    dend_8 { pt3dadd( 16.1784, -197.206, 23.9777, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 14.7463, -198.761, 23.7816, 0.33 ) }
    dend_8 { pt3dadd( 13.7834, -199.898, 23.5809, 0.33 ) }
    dend_8 { pt3dadd( 11.1583, -203.102, 22.9234, 0.33 ) }
    dend_8 { pt3dadd( 10.3065, -204.245, 22.5502, 1.33 ) }
    dend_8 { pt3dadd( 9.24127, -205.804, 21.9969, 0.33 ) }
    dend_8 { pt3dadd( 8.31102, -207.294, 21.414, 0.33 ) }
    dend_8 { pt3dadd( 6.6565, -210.148, 20.1724, 0.67 ) }
    dend_8 { pt3dadd( 5.67397, -212.065, 19.2714, 1.33 ) }
    dend_8 { pt3dadd( 4.29638, -216.158, 17.2635, 0.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 9/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 28.1336, -187.251, 20.1819, 0.67 ) }
    dend_3 { pt3dadd( 28.3634, -190.843, 20.5476, 0.67 ) }
    dend_3 { pt3dadd( 28.5054, -193.068, 20.8832, 1.33 ) }
    dend_3 { pt3dadd( 28.9481, -200.584, 22.1897, 0.67 ) }
    dend_3 { pt3dadd( 29.1067, -202.256, 22.4802, 0.67 ) }
    dend_3 { pt3dadd( 29.2473, -203.86, 22.6995, 0.67 ) }
    dend_3 { pt3dadd( 29.4822, -207.439, 23.0115, 0.67 ) }
    dend_3 { pt3dadd( 29.5882, -209.363, 23.1834, 1.33 ) }
    dend_3 { pt3dadd( 29.7546, -212.208, 23.4181, 0.67 ) }
    dend_3 { pt3dadd( 30.0709, -216.34, 23.6346, 0.67 ) }
    dend_3 { pt3dadd( 30.2528, -219.457, 23.619, 0.67 ) }
    dend_3 { pt3dadd( 30.3886, -222.106, 23.3192, 1.33 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 16.2867, 40.088, -10.0321, 1.33 ) }
    dend_75 { pt3dadd( 18.3959, 41.6063, -7.74305, 0.33 ) }
    dend_75 { pt3dadd( 19.1271, 42.1326, -6.9495, 1.33 ) }
    dend_75 { pt3dadd( 21.4012, 43.7696, -4.48143, 0.33 ) }
    dend_75 { pt3dadd( 22.9864, 44.9107, -2.76108, 0.67 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 16.2867, 40.088, -10.0321, 1.33 ) }
    dend_74 { pt3dadd( 16.8146, 40.479, -11.9942, 1.33 ) }
    dend_74 { pt3dadd( 18.2694, 41.4293, -15.8318, 0.67 ) }
    dend_74 { pt3dadd( 20.2334, 42.6842, -20.3167, 1.33 ) }
    dend_74 { pt3dadd( 21.0705, 43.1103, -22.1256, 1.33 ) }
    dend_74 { pt3dadd( 23.8751, 44.4136, -27.6718, 0.67 ) }
    dend_74 { pt3dadd( 24.9279, 44.8205, -29.5545, 1.33 ) }
    dend_74 { pt3dadd( 28.0372, 45.9378, -34.6089, 0.67 ) }
    dend_74 { pt3dadd( 28.6332, 46.1427, -35.3951, 1.33 ) }
    dend_74 { pt3dadd( 31.3299, 46.8495, -38.3704, 0.67 ) }
    dend_74 { pt3dadd( 32.7689, 47.0816, -39.7668, 1.33 ) }
    dend_74 { pt3dadd( 36.9212, 47.3262, -43.3626, 0.67 ) }
    dend_74 { pt3dadd( 37.6177, 47.319, -43.9047, 1.33 ) }
    dend_74 { pt3dadd( 39.2373, 47.2257, -44.8102, 0.67 ) }
    dend_74 { pt3dadd( 40.3634, 47.1307, -45.2983, 1.33 ) }
    dend_74 { pt3dadd( 43.0467, 46.8284, -45.7806, 0.33 ) }
    dend_74 { pt3dadd( 43.9786, 46.6582, -45.8228, 0.67 ) }
    dend_74 { pt3dadd( 45.1674, 46.4873, -45.6654, 0.33 ) }
    dend_74 { pt3dadd( 45.6319, 46.4357, -45.6008, 0.33 ) }
    dend_74 { pt3dadd( 47.7666, 46.1916, -45.3151, 2.0 ) }
    dend_74 { pt3dadd( 50.1039, 46.0389, -44.9932, 0.67 ) }
    dend_74 { pt3dadd( 52.7994, 46.0935, -44.661, 0.33 ) }
    dend_74 { pt3dadd( 54.9114, 46.2628, -44.4376, 1.33 ) }
    dend_74 { pt3dadd( 56.2057, 46.4536, -44.3082, 1.33 ) }
    dend_74 { pt3dadd( 58.1215, 46.823, -44.1286, 0.33 ) }
    dend_74 { pt3dadd( 59.1368, 47.1014, -44.087, 1.33 ) }
    dend_74 { pt3dadd( 61.8343, 48.0488, -44.1033, 0.33 ) }
    dend_74 { pt3dadd( 62.3267, 48.2448, -44.0737, 1.33 ) }
    dend_74 { pt3dadd( 63.4847, 48.7399, -43.9759, 0.33 ) }
    dend_74 { pt3dadd( 63.9443, 48.9823, -43.9279, 0.67 ) }
    dend_74 { pt3dadd( 66.0724, 50.2869, -43.6745, 0.33 ) }
    dend_74 { pt3dadd( 66.4979, 50.5686, -43.5966, 0.67 ) }
    dend_74 { pt3dadd( 68.713, 52.0937, -43.0119, 0.33 ) }
    dend_74 { pt3dadd( 69.479, 52.6203, -42.778, 1.33 ) }
    dend_74 { pt3dadd( 70.4859, 53.2954, -42.4302, 0.33 ) }
    dend_74 { pt3dadd( 70.684, 53.4188, -42.3821, 0.67 ) }
    dend_74 { pt3dadd( 72.6117, 54.5295, -42.1818, 0.33 ) }
    dend_74 { pt3dadd( 73.2564, 54.8892, -42.1394, 1.33 ) }
    dend_74 { pt3dadd( 75.0658, 55.7217, -42.0587, 0.33 ) }
    dend_74 { pt3dadd( 75.8615, 55.9979, -41.9301, 0.67 ) }
    dend_74 { pt3dadd( 79.3386, 56.6671, -40.9514, 0.67 ) }
    dend_74 { pt3dadd( 80.8325, 56.609, -40.2828, 0.33 ) }
    dend_74 { pt3dadd( 84.4231, 56.0466, -38.3993, 2.0 ) }
    dend_74 { pt3dadd( 86.7784, 55.4678, -36.8732, 0.33 ) }
    dend_74 { pt3dadd( 88.1312, 54.9715, -35.7518, 0.33 ) }
    dend_74 { pt3dadd( 89.065, 54.5637, -34.7979, 0.67 ) }
    dend_74 { pt3dadd( 91.0619, 53.5684, -32.2682, 0.33 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 73/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 3.13816, 38.7716, -1.29099, 2.0 ) }
    dend_52 { pt3dadd( 5.77022, 42.2959, -5.01987, 2.0 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 75/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 3.13816, 38.7716, -1.29099, 0.67 ) }
    dend_51 { pt3dadd( 3.22891, 43.2786, -0.395489, 0.67 ) }
    dend_51 { pt3dadd( 3.37713, 46.6309, 0.203237, 0.67 ) }
    dend_51 { pt3dadd( 3.46336, 49.6861, 0.680062, 0.67 ) }
    dend_51 { pt3dadd( 3.58703, 53.2883, 1.10536, 0.67 ) }
    dend_51 { pt3dadd( 3.71924, 58.0886, 1.52065, 0.67 ) }
    dend_51 { pt3dadd( 3.83403, 61.1267, 1.73766, 1.33 ) }
    dend_51 { pt3dadd( 4.09567, 68.8316, 2.1409, 0.67 ) }
    dend_51 { pt3dadd( 4.21941, 71.8621, 2.07682, 0.67 ) }
    dend_51 { pt3dadd( 4.49959, 76.6121, 1.89662, 0.67 ) }
    dend_51 { pt3dadd( 4.74047, 79.0939, 1.81143, 0.67 ) }
    dend_51 { pt3dadd( 5.01918, 80.9894, 1.73074, 1.33 ) }
    dend_51 { pt3dadd( 5.50355, 83.9866, 1.84751, 0.67 ) }
    dend_51 { pt3dadd( 6.38588, 89.9471, 2.81192, 0.67 ) }
    dend_51 { pt3dadd( 7.21468, 94.6153, 3.9731, 0.67 ) }
    dend_51 { pt3dadd( 7.70159, 97.3833, 5.06251, 1.33 ) }
    dend_51 { pt3dadd( 8.01507, 99.112, 5.9672, 0.67 ) }
    dend_51 { pt3dadd( 8.37577, 101.836, 7.82854, 0.67 ) }
    dend_51 { pt3dadd( 8.5231, 103.114, 9.18271, 0.67 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 94/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 44.0592, 102.961, -0.141301, 0.33 ) }
    dend_47 { pt3dadd( 45.4736, 102.953, -0.617078, 0.33 ) }
    dend_47 { pt3dadd( 47.5717, 102.94, -1.32279, 0.67 ) }
    dend_47 { pt3dadd( 48.9756, 102.932, -1.79502, 0.33 ) }
    dend_47 { pt3dadd( 49.764, 102.927, -2.0602, 0.67 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 99/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 44.0592, 102.961, -0.141301, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_44 { pt3dadd( 44.6091, 104.289, -0.922346, 1.33 ) }
    dend_44 { pt3dadd( 45.5431, 106.392, -2.40548, 0.33 ) }
    dend_44 { pt3dadd( 45.7104, 106.724, -2.68596, 0.67 ) }
    dend_44 { pt3dadd( 46.5841, 108.384, -4.29078, 0.33 ) }
    dend_44 { pt3dadd( 46.9242, 109.036, -4.81315, 0.67 ) }
    dend_44 { pt3dadd( 49.176, 113.278, -7.6433, 0.33 ) }
    dend_44 { pt3dadd( 49.4858, 113.781, -7.92694, 0.67 ) }
    dend_44 { pt3dadd( 50.9838, 115.949, -8.9827, 0.33 ) }
    dend_44 { pt3dadd( 52.387, 118.129, -9.71634, 0.67 ) }
    dend_44 { pt3dadd( 55.697, 123.687, -10.838, 0.33 ) }
    dend_44 { pt3dadd( 56.0442, 124.313, -10.8847, 0.67 ) }
    dend_44 { pt3dadd( 57.9732, 127.694, -10.3247, 0.33 ) }
    dend_44 { pt3dadd( 61.0284, 133.124, -9.59705, 1.33 ) }
    dend_44 { pt3dadd( 61.8399, 134.62, -9.38319, 0.33 ) }
    dend_44 { pt3dadd( 62.1274, 135.164, -9.56293, 0.67 ) }
    dend_44 { pt3dadd( 63.463, 137.758, -11.1872, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 16/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -3.48949, 31.0341, -26.9822, 0.33 ) }
    dend_38 { pt3dadd( -3.23982, 33.6511, -29.7934, 0.33 ) }
    dend_38 { pt3dadd( -3.16599, 35.9178, -31.9473, 0.33 ) }
    dend_38 { pt3dadd( -3.18691, 39.1029, -34.6146, 0.67 ) }
    dend_38 { pt3dadd( -3.10734, 40.5264, -35.8377, 0.33 ) }
    dend_38 { pt3dadd( -3.01417, 43.0188, -37.9461, 1.33 ) }
    dend_38 { pt3dadd( -3.03909, 47.9388, -42.2515, 0.33 ) }
    dend_38 { pt3dadd( -3.14777, 50.7946, -44.622, 1.33 ) }
    dend_38 { pt3dadd( -3.40131, 52.7841, -46.235, 0.33 ) }
    dend_38 { pt3dadd( -4.48853, 58.3752, -50.3919, 0.33 ) }
    dend_38 { pt3dadd( -5.11913, 60.894, -52.1466, 0.33 ) }
    dend_38 { pt3dadd( -6.39247, 64.8784, -54.5422, 1.33 ) }
    dend_38 { pt3dadd( -7.54842, 67.9421, -56.1345, 0.33 ) }
    dend_38 { pt3dadd( -8.48815, 70.2558, -57.3452, 0.33 ) }
    dend_38 { pt3dadd( -8.91849, 71.2222, -57.7965, 1.33 ) }
    dend_38 { pt3dadd( -10.2239, 73.844, -58.7804, 0.33 ) }
    dend_38 { pt3dadd( -11.0482, 75.7249, -59.4899, 2.0 ) }
    dend_38 { pt3dadd( -13.3967, 81.6256, -61.6426, 0.33 ) }
    dend_38 { pt3dadd( -13.7811, 82.5511, -61.8631, 0.67 ) }
    dend_38 { pt3dadd( -14.7821, 84.9599, -62.0845, 0.33 ) }
    dend_38 { pt3dadd( -15.0981, 85.7001, -62.0173, 0.67 ) }
    dend_38 { pt3dadd( -16.0633, 87.9537, -61.5123, 0.33 ) }
    dend_38 { pt3dadd( -16.6545, 89.2854, -61.1612, 0.67 ) }
    dend_38 { pt3dadd( -20.6122, 97.757, -58.3325, 0.33 ) }
    dend_38 { pt3dadd( -21.4327, 99.7393, -57.8572, 2.67 ) }
    dend_38 { pt3dadd( -23.9271, 106.412, -56.7305, 0.33 ) }
    dend_38 { pt3dadd( -24.2878, 107.49, -56.6336, 0.67 ) }
    dend_38 { pt3dadd( -25.5918, 111.77, -56.6146, 0.33 ) }
    dend_38 { pt3dadd( -26.0593, 113.582, -56.8233, 0.67 ) }
    dend_38 { pt3dadd( -27.2956, 119.642, -58.4111, 0.33 ) }
    dend_38 { pt3dadd( -27.6265, 121.356, -58.9032, 0.67 ) }
    dend_38 { pt3dadd( -27.9688, 123.244, -59.5233, 2.0 ) }
    dend_38 { pt3dadd( -28.3732, 125.657, -60.2953, 0.33 ) }
    dend_38 { pt3dadd( -28.5852, 127.438, -60.7851, 2.0 ) }
    dend_38 { pt3dadd( -28.8652, 130.206, -61.5755, 0.33 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 51/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -3.48949, 31.0341, -26.9822, 0.67 ) }
    dend_35 { pt3dadd( -4.04562, 31.685, -29.0045, 0.67 ) }
    dend_35 { pt3dadd( -4.9888, 32.4138, -30.7351, 0.33 ) }
    dend_35 { pt3dadd( -8.08501, 34.2794, -34.5415, 0.67 ) }
    dend_35 { pt3dadd( -9.51253, 34.9696, -35.9049, 0.67 ) }
    dend_35 { pt3dadd( -10.4282, 35.3257, -36.6304, 0.33 ) }
    dend_35 { pt3dadd( -11.5601, 35.7084, -37.4311, 0.33 ) }
    dend_35 { pt3dadd( -14.3144, 36.5734, -39.043, 0.33 ) }
    dend_35 { pt3dadd( -16.248, 37.059, -39.9685, 1.33 ) }
    dend_35 { pt3dadd( -18.1608, 37.2857, -40.6537, 0.33 ) }
    dend_35 { pt3dadd( -20.3624, 37.3703, -41.4419, 0.67 ) }
    dend_35 { pt3dadd( -21.4873, 37.3639, -41.8384, 0.33 ) }
    dend_35 { pt3dadd( -23.4144, 37.3329, -42.4977, 0.33 ) }
    dend_35 { pt3dadd( -24.2498, 37.3668, -42.8718, 0.67 ) }
    dend_35 { pt3dadd( -25.8212, 37.5074, -43.8006, 0.33 ) }
    dend_35 { pt3dadd( -26.5449, 37.6194, -44.3483, 0.33 ) }
    dend_35 { pt3dadd( -27.2396, 37.7263, -45.1281, 1.33 ) }
    dend_35 { pt3dadd( -28.3226, 37.8288, -46.742, 1.33 ) }
    dend_35 { pt3dadd( -30.3425, 37.6847, -50.7667, 0.33 ) }
    dend_35 { pt3dadd( -31.0466, 37.6287, -52.3087, 0.33 ) }
    dend_35 { pt3dadd( -31.2848, 37.587, -52.917, 0.67 ) }
    dend_35 { pt3dadd( -32.5484, 37.0889, -56.5008, 0.33 ) }
    dend_35 { pt3dadd( -32.831, 36.8862, -57.4268, 1.33 ) }
    dend_35 { pt3dadd( -33.8848, 35.5597, -61.3, 1.33 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 75/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 61.7434, -10.749, -67.641, 0.33 ) }
    dend_24 { pt3dadd( 62.9044, -9.89449, -67.5756, 0.33 ) }
    dend_24 { pt3dadd( 63.7254, -9.29019, -67.5294, 0.67 ) }
    dend_24 { pt3dadd( 64.7411, -8.54269, -67.4722, 0.33 ) }
    dend_24 { pt3dadd( 65.6128, -7.90103, -67.4231, 0.67 ) }
    dend_24 { pt3dadd( 67.1405, -6.77668, -67.3371, 0.33 ) }
    dend_24 { pt3dadd( 67.1405, -6.77668, -67.3371, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 82/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 61.7434, -10.749, -67.641, 0.33 ) }
    dend_23 { pt3dadd( 61.5265, -10.2259, -68.4899, 0.33 ) }
    dend_23 { pt3dadd( 61.3562, -9.82219, -69.1189, 1.33 ) }
    dend_23 { pt3dadd( 59.8065, -6.05825, -74.4129, 0.33 ) }
    dend_23 { pt3dadd( 59.5385, -5.53463, -75.2232, 2.0 ) }
    dend_23 { pt3dadd( 58.2451, -3.1292, -78.9422, 0.33 ) }
    dend_23 { pt3dadd( 57.7421, -2.19379, -80.3884, 1.33 ) }
    dend_23 { pt3dadd( 56.735, -0.443148, -83.2006, 0.33 ) }
    dend_23 { pt3dadd( 56.0321, 0.695425, -85.04, 1.33 ) }
    dend_23 { pt3dadd( 53.5477, 4.32223, -90.3128, 0.33 ) }
    dend_23 { pt3dadd( 52.9586, 5.05876, -91.531, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 93/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 57.589, -280.637, -1.14615, 0.33 ) }
    dend_18 { pt3dadd( 58.6762, -279.456, 1.63359, 0.33 ) }
    dend_18 { pt3dadd( 60.6479, -277.315, 6.67522, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 96/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 57.589, -280.637, -1.14615, 0.33 ) }
    dend_15 { pt3dadd( 58.6419, -282.798, -0.934896, 0.33 ) }
    dend_15 { pt3dadd( 59.5259, -284.696, -0.687061, 0.67 ) }
    dend_15 { pt3dadd( 60.9782, -287.957, -0.234725, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( 62.5207, -291.718, 0.344981, 1.33 ) }
    dend_15 { pt3dadd( 63.0575, -293.255, 0.618984, 1.33 ) }
    dend_15 { pt3dadd( 63.9185, -296.024, 1.12042, 0.67 ) }
    dend_15 { pt3dadd( 64.3095, -297.431, 1.481, 0.67 ) }
    dend_15 { pt3dadd( 64.6822, -298.992, 1.9519, 0.33 ) }
    dend_15 { pt3dadd( 64.8879, -300.097, 2.32738, 0.67 ) }
    dend_15 { pt3dadd( 65.1031, -302.49, 3.06551, 0.33 ) }
    dend_15 { pt3dadd( 65.2142, -305.053, 3.93971, 0.67 ) }
    dend_15 { pt3dadd( 65.3042, -307.396, 4.89497, 0.33 ) }
    dend_15 { pt3dadd( 65.2698, -309.283, 5.55107, 1.33 ) }
    dend_15 { pt3dadd( 65.21, -311.487, 6.32703, 1.33 ) }
    dend_15 { pt3dadd( 65.1473, -313.688, 7.0872, 0.67 ) }
    dend_15 { pt3dadd( 65.0127, -316.761, 8.13064, 0.67 ) }
    dend_15 { pt3dadd( 64.5706, -321.822, 9.8205, 0.67 ) }
    dend_15 { pt3dadd( 63.9878, -326.889, 11.2541, 2.0 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 15/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 4.29638, -216.158, 17.2635, 0.33 ) }
    dend_10 { pt3dadd( 9.75179, -215.142, 19.372, 0.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 17/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 4.29638, -216.158, 17.2635, 0.33 ) }
    dend_9 { pt3dadd( 3.45244, -218.663, 18.3359, 0.33 ) }
    dend_9 { pt3dadd( 2.63666, -220.9, 19.2667, 1.33 ) }
    dend_9 { pt3dadd( 0.911076, -224.927, 20.9122, 0.33 ) }
    dend_9 { pt3dadd( -2.63425, -232.728, 23.9505, 0.33 ) }
    dend_9 { pt3dadd( -3.53287, -234.648, 24.7327, 2.0 ) }
    dend_9 { pt3dadd( -4.93248, -237.918, 26.3279, 0.33 ) }
    dend_9 { pt3dadd( -5.10161, -238.281, 26.5326, 0.67 ) }
    dend_9 { pt3dadd( -5.95006, -240.089, 27.723, 0.33 ) }
    dend_9 { pt3dadd( -6.65772, -241.439, 28.746, 0.33 ) }
    dend_9 { pt3dadd( -7.64405, -243.483, 29.892, 1.33 ) }
    dend_9 { pt3dadd( -9.842, -249.432, 34.1139, 0.33 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 29/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 30.3886, -222.106, 23.3192, 0.33 ) }
    dend_7 { pt3dadd( 29.2851, -221.212, 23.8815, 0.33 ) }
    dend_7 { pt3dadd( 28.1972, -220.329, 24.4359, 0.33 ) }
    dend_7 { pt3dadd( 26.6112, -219.043, 25.2442, 0.33 ) }
    dend_7 { pt3dadd( 26.0076, -218.553, 25.5518, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 34/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 30.3886, -222.106, 23.3192, 0.67 ) }
    dend_4 { pt3dadd( 30.9499, -223.895, 27.5102, 0.67 ) }
    // Section: dend_79, id: dend_79, parent: dend_75 (entry count 36/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 22.9864, 44.9107, -2.76108, 0.67 ) }
    dend_79 { pt3dadd( 23.3385, 47.5951, -5.86034, 0.67 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 38/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 22.9864, 44.9107, -2.76108, 0.67 ) }
    dend_76 { pt3dadd( 24.4933, 44.0356, -1.06176, 0.67 ) }
    dend_76 { pt3dadd( 26.7518, 42.9559, 1.4507, 0.33 ) }
    dend_76 { pt3dadd( 27.9778, 42.571, 2.91628, 0.67 ) }
    dend_76 { pt3dadd( 29.4668, 42.3299, 4.65906, 0.33 ) }
    dend_76 { pt3dadd( 32.8036, 42.1285, 8.15614, 1.33 ) }
    dend_76 { pt3dadd( 34.351, 42.181, 9.86118, 0.33 ) }
    dend_76 { pt3dadd( 35.7316, 42.3442, 11.3408, 0.67 ) }
    dend_76 { pt3dadd( 38.0583, 42.877, 13.7082, 0.33 ) }
    dend_76 { pt3dadd( 39.4317, 43.3052, 15.1621, 1.33 ) }
    dend_76 { pt3dadd( 41.6401, 44.1698, 17.4233, 0.33 ) }
    dend_76 { pt3dadd( 45.0535, 45.7285, 20.6504, 1.33 ) }
    dend_76 { pt3dadd( 47.2847, 46.8192, 22.7719, 0.67 ) }
    dend_76 { pt3dadd( 48.0741, 47.2249, 23.485, 0.67 ) }
    dend_76 { pt3dadd( 50.5237, 48.591, 25.8058, 0.33 ) }
    dend_76 { pt3dadd( 51.6691, 49.334, 26.9835, 0.33 ) }
    dend_76 { pt3dadd( 52.7506, 50.1074, 28.0908, 0.33 ) }
    dend_76 { pt3dadd( 54.0678, 50.9546, 29.2317, 0.33 ) }
    dend_76 { pt3dadd( 54.9438, 51.5526, 29.9737, 1.33 ) }
    dend_76 { pt3dadd( 57.8258, 53.54, 32.3712, 0.33 ) }
    dend_76 { pt3dadd( 59.2175, 54.5438, 33.447, 0.67 ) }
    dend_76 { pt3dadd( 60.9501, 55.6869, 34.8715, 0.67 ) }
    dend_76 { pt3dadd( 62.7199, 56.6612, 36.4125, 0.33 ) }
    dend_76 { pt3dadd( 65.0169, 57.8191, 38.4202, 1.33 ) }
    dend_76 { pt3dadd( 67.5521, 59.0232, 40.5945, 0.67 ) }
    dend_76 { pt3dadd( 69.631, 59.9589, 42.254, 0.67 ) }
    dend_76 { pt3dadd( 72.1227, 61.0934, 44.528, 0.67 ) }
    dend_76 { pt3dadd( 74.5037, 62.3188, 47.1292, 0.67 ) }
    // Section: dend_68, id: dend_68, parent: dend_52 (entry count 66/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 5.77022, 42.2959, -5.01987, 0.67 ) }
    dend_68 { pt3dadd( 8.71086, 46.3877, -6.64788, 0.67 ) }
    dend_68 { pt3dadd( 9.66786, 47.558, -7.16283, 0.67 ) }
    dend_68 { pt3dadd( 13.0488, 51.3245, -8.46243, 1.33 ) }
    dend_68 { pt3dadd( 15.6853, 54.2617, -9.47589, 1.33 ) }
    dend_68 { pt3dadd( 17.0705, 55.8049, -10.0084, 0.67 ) }
    dend_68 { pt3dadd( 18.689, 57.6079, -10.6305, 1.33 ) }
    dend_68 { pt3dadd( 20.6241, 59.532, -11.3211, 0.33 ) }
    dend_68 { pt3dadd( 23.8551, 62.2558, -12.111, 1.33 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 75/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 5.77022, 42.2959, -5.01987, 1.33 ) }
    dend_53 { pt3dadd( 3.3257, 44.3703, -4.96295, 1.33 ) }
    dend_53 { pt3dadd( -2.09736, 48.9721, -4.83668, 0.67 ) }
    dend_53 { pt3dadd( -3.85747, 50.4656, -4.7957, 0.67 ) }
    dend_53 { pt3dadd( -7.53498, 53.5862, -4.71007, 1.33 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 80/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 63.463, 137.758, -11.1872, 0.33 ) }
    dend_46 { pt3dadd( 62.5622, 138.859, -11.4706, 0.33 ) }
    dend_46 { pt3dadd( 62.3791, 139.083, -11.5282, 0.67 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 63.463, 137.758, -11.1872, 0.33 ) }
    dend_45 { pt3dadd( 64.1549, 139.929, -11.5337, 0.33 ) }
    dend_45 { pt3dadd( 64.5356, 140.736, -11.8948, 0.67 ) }
    dend_45 { pt3dadd( 65.516, 142.792, -12.9516, 0.33 ) }
    dend_45 { pt3dadd( 66.0078, 143.778, -13.498, 0.67 ) }
    dend_45 { pt3dadd( 66.7667, 145.179, -14.2912, 0.33 ) }
    dend_45 { pt3dadd( 68.2078, 147.575, -15.6687, 0.67 ) }
    dend_45 { pt3dadd( 69.9505, 150.081, -17.3702, 0.33 ) }
    dend_45 { pt3dadd( 70.9326, 151.38, -18.2989, 0.33 ) }
    dend_45 { pt3dadd( 71.3217, 151.838, -18.6426, 0.67 ) }
    dend_45 { pt3dadd( 72.13, 152.879, -19.456, 0.33 ) }
    dend_45 { pt3dadd( 72.7134, 153.788, -20.1299, 0.67 ) }
    dend_45 { pt3dadd( 73.8757, 156.194, -21.5666, 0.33 ) }
    dend_45 { pt3dadd( 74.2414, 157.225, -22.0985, 0.67 ) }
    dend_45 { pt3dadd( 74.4418, 157.803, -22.4131, 0.67 ) }
    dend_45 { pt3dadd( 75.5219, 161.479, -24.4091, 0.33 ) }
    dend_45 { pt3dadd( 75.6839, 162.223, -24.8233, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( 76.0117, 164.401, -26.0343, 0.67 ) }
    dend_45 { pt3dadd( 76.0988, 165.238, -26.5007, 0.33 ) }
    dend_45 { pt3dadd( 76.2807, 167.173, -27.6122, 1.33 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 3/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -28.8652, 130.206, -61.5755, 0.33 ) }
    dend_40 { pt3dadd( -28.8671, 131.283, -62.0003, 0.33 ) }
    dend_40 { pt3dadd( -28.8685, 132.102, -62.3233, 0.67 ) }
    dend_40 { pt3dadd( -28.8725, 134.427, -63.2398, 0.33 ) }
    dend_40 { pt3dadd( -28.8751, 135.965, -63.8461, 1.33 ) }
    dend_40 { pt3dadd( -28.8785, 137.932, -64.6216, 0.33 ) }
    dend_40 { pt3dadd( -28.8815, 139.738, -65.3337, 0.67 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -28.8652, 130.206, -61.5755, 0.33 ) }
    dend_39 { pt3dadd( -29.3106, 132.975, -60.1333, 0.33 ) }
    dend_39 { pt3dadd( -30.0877, 137.391, -58.6622, 0.67 ) }
    dend_39 { pt3dadd( -30.3564, 139.087, -58.2558, 0.33 ) }
    dend_39 { pt3dadd( -30.5911, 140.387, -58.265, 0.67 ) }
    dend_39 { pt3dadd( -30.9465, 142.099, -58.4609, 0.33 ) }
    dend_39 { pt3dadd( -31.3259, 143.864, -58.7553, 1.33 ) }
    dend_39 { pt3dadd( -32.5324, 149.57, -60.2718, 0.33 ) }
    dend_39 { pt3dadd( -33.2454, 152.855, -61.3886, 0.67 ) }
    dend_39 { pt3dadd( -34.7986, 160.034, -63.9344, 0.33 ) }
    dend_39 { pt3dadd( -34.98, 160.841, -64.222, 0.67 ) }
    dend_39 { pt3dadd( -35.5103, 163.313, -65.1122, 0.33 ) }
    dend_39 { pt3dadd( -35.7526, 164.603, -65.5936, 0.67 ) }
    dend_39 { pt3dadd( -36.2932, 167.702, -66.7881, 0.33 ) }
    dend_39 { pt3dadd( -36.5205, 169.183, -67.1584, 0.67 ) }
    dend_39 { pt3dadd( -36.9253, 172.101, -67.3647, 0.33 ) }
    dend_39 { pt3dadd( -37.1307, 173.333, -67.4515, 0.33 ) }
    dend_39 { pt3dadd( -37.3651, 174.541, -67.5501, 0.67 ) }
    dend_39 { pt3dadd( -37.7727, 176.395, -67.7018, 0.33 ) }
    dend_39 { pt3dadd( -38.3876, 179.06, -67.9171, 0.67 ) }
    dend_39 { pt3dadd( -39.109, 181.518, -68.0919, 0.33 ) }
    dend_39 { pt3dadd( -39.4205, 182.481, -68.1388, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 32/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -33.8848, 35.5597, -61.3, 0.33 ) }
    dend_37 { pt3dadd( -36.0956, 38.1396, -64.2338, 0.33 ) }
    dend_37 { pt3dadd( -36.5463, 38.631, -64.8548, 2.0 ) }
    dend_37 { pt3dadd( -38.4575, 40.6961, -67.5223, 0.33 ) }
    dend_37 { pt3dadd( -38.6953, 40.9469, -67.8235, 0.67 ) }
    dend_37 { pt3dadd( -39.0892, 41.3633, -68.2896, 0.33 ) }
    dend_37 { pt3dadd( -40.4667, 42.9275, -69.8665, 1.33 ) }
    dend_37 { pt3dadd( -41.1247, 43.6369, -70.5659, 0.33 ) }
    dend_37 { pt3dadd( -41.5216, 44.1236, -70.9433, 0.67 ) }
    dend_37 { pt3dadd( -42.784, 46.0582, -72.0073, 0.33 ) }
    dend_37 { pt3dadd( -43.3312, 46.9812, -72.4478, 1.33 ) }
    dend_37 { pt3dadd( -44.18, 48.649, -73.1271, 0.33 ) }
    dend_37 { pt3dadd( -44.7995, 50.0157, -73.59, 0.33 ) }
    dend_37 { pt3dadd( -45.4177, 51.5214, -74.1004, 0.67 ) }
    dend_37 { pt3dadd( -46.163, 53.5232, -74.7945, 0.33 ) }
    dend_37 { pt3dadd( -46.4728, 54.498, -75.1379, 1.33 ) }
    dend_37 { pt3dadd( -47.0387, 56.4038, -75.8131, 0.33 ) }
    dend_37 { pt3dadd( -47.1682, 56.83, -76.0, 0.67 ) }
    dend_37 { pt3dadd( -47.3806, 57.5581, -76.3829, 0.33 ) }
    dend_37 { pt3dadd( -47.5568, 58.1496, -76.7518, 0.67 ) }
    dend_37 { pt3dadd( -47.7568, 58.709, -77.1637, 0.33 ) }
    dend_37 { pt3dadd( -47.947, 59.1804, -77.5507, 0.67 ) }
    dend_37 { pt3dadd( -48.8599, 61.1382, -79.4039, 0.33 ) }
    dend_37 { pt3dadd( -48.8599, 61.1382, -79.4039, 0.67 ) }
    dend_37 { pt3dadd( -49.1932, 61.8386, -80.1746, 0.33 ) }
    dend_37 { pt3dadd( -49.3227, 62.0864, -80.4631, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -33.8848, 35.5597, -61.3, 0.33 ) }
    dend_36 { pt3dadd( -35.1815, 35.317, -64.0567, 0.33 ) }
    dend_36 { pt3dadd( -36.8366, 35.1427, -66.9259, 0.67 ) }
    dend_36 { pt3dadd( -39.2396, 34.9135, -70.7937, 0.33 ) }
    dend_36 { pt3dadd( -39.7195, 34.8599, -71.4788, 0.67 ) }
    dend_36 { pt3dadd( -43.1422, 34.4039, -76.0269, 0.33 ) }
    dend_36 { pt3dadd( -47.2064, 33.6476, -80.9624, 2.67 ) }
    dend_36 { pt3dadd( -50.9729, 32.6246, -85.648, 0.33 ) }
    dend_36 { pt3dadd( -51.3213, 32.4933, -86.0463, 0.67 ) }
    dend_36 { pt3dadd( -53.3119, 31.4621, -88.3517, 0.33 ) }
    dend_36 { pt3dadd( -53.8496, 31.1077, -88.8862, 1.33 ) }
    dend_36 { pt3dadd( -56.1973, 29.2541, -90.6033, 0.33 ) }
    dend_36 { pt3dadd( -59.2666, 26.4803, -92.3532, 2.0 ) }
    dend_36 { pt3dadd( -60.9566, 24.4945, -93.6055, 0.33 ) }
    dend_36 { pt3dadd( -61.2742, 24.1488, -93.8454, 0.67 ) }
    dend_36 { pt3dadd( -62.9479, 22.4773, -95.1141, 0.33 ) }
    dend_36 { pt3dadd( -63.3251, 22.2021, -95.3498, 0.67 ) }
    dend_36 { pt3dadd( -65.1821, 21.2565, -96.2824, 0.33 ) }
    dend_36 { pt3dadd( -67.2001, 20.6082, -96.9967, 0.67 ) }
    dend_36 { pt3dadd( -70.6501, 19.9076, -98.2011, 0.33 ) }
    dend_36 { pt3dadd( -71.8008, 19.7599, -98.4879, 0.67 ) }
    dend_36 { pt3dadd( -75.1273, 19.4732, -99.265, 0.33 ) }
    dend_36 { pt3dadd( -75.8703, 19.4127, -99.4163, 0.67 ) }
    dend_36 { pt3dadd( -79.9761, 19.1812, -100.02, 0.33 ) }
    dend_36 { pt3dadd( -81.1731, 19.1516, -100.094, 0.67 ) }
    dend_36 { pt3dadd( -85.4986, 19.4524, -100.142, 0.67 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 84/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 63.9878, -326.889, 11.2541, 0.33 ) }
    dend_17 { pt3dadd( 63.8052, -330.204, 17.6658, 0.33 ) }
    dend_17 { pt3dadd( 63.5103, -331.9, 20.4446, 0.67 ) }
    dend_17 { pt3dadd( 63.3032, -332.65, 21.5413, 0.33 ) }
    dend_17 { pt3dadd( 62.8263, -333.637, 22.563, 0.33 ) }
    dend_17 { pt3dadd( 61.9302, -335.267, 23.6746, 0.33 ) }
    dend_17 { pt3dadd( 61.4103, -336.108, 23.9912, 0.67 ) }
    dend_17 { pt3dadd( 60.0041, -338.039, 24.0708, 0.33 ) }
    dend_17 { pt3dadd( 58.9525, -339.567, 24.0106, 0.67 ) }
    dend_17 { pt3dadd( 55.3104, -345.092, 22.9739, 0.33 ) }
    dend_17 { pt3dadd( 54.1363, -347.051, 22.4189, 0.67 ) }
    dend_17 { pt3dadd( 52.217, -350.476, 21.2063, 0.33 ) }
    dend_17 { pt3dadd( 51.6884, -351.452, 20.8167, 0.67 ) }
    dend_17 { pt3dadd( 49.9322, -354.897, 19.2586, 0.33 ) }
    dend_17 { pt3dadd( 48.0747, -359.07, 17.3196, 0.67 ) }
    dend_17 { pt3dadd( 47.5489, -360.77, 16.6882, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( 47.3356, -361.411, 16.3998, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 1/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 63.9878, -326.889, 11.2541, 0.67 ) }
    dend_16 { pt3dadd( 64.7363, -329.178, 12.1085, 0.67 ) }
    dend_16 { pt3dadd( 65.3886, -331.323, 12.7989, 0.67 ) }
    dend_16 { pt3dadd( 65.8394, -332.814, 13.1927, 0.33 ) }
    dend_16 { pt3dadd( 67.1552, -337.479, 14.1993, 2.67 ) }
    dend_16 { pt3dadd( 68.2016, -341.552, 14.735, 0.67 ) }
    dend_16 { pt3dadd( 68.9726, -344.606, 14.9928, 0.33 ) }
    dend_16 { pt3dadd( 69.144, -345.336, 15.0185, 0.67 ) }
    dend_16 { pt3dadd( 69.7176, -348.135, 15.0153, 0.33 ) }
    dend_16 { pt3dadd( 70.4743, -352.764, 14.7935, 0.33 ) }
    dend_16 { pt3dadd( 70.8686, -356.121, 14.4618, 0.67 ) }
    dend_16 { pt3dadd( 71.1686, -358.949, 14.2002, 0.33 ) }
    dend_16 { pt3dadd( 71.6451, -362.826, 13.8874, 0.33 ) }
    dend_16 { pt3dadd( 71.9516, -365.84, 13.6738, 0.33 ) }
    dend_16 { pt3dadd( 72.0668, -367.584, 13.5861, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 16/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 30.9499, -223.895, 27.5102, 0.33 ) }
    dend_6 { pt3dadd( 29.6826, -225.844, 28.1954, 0.33 ) }
    dend_6 { pt3dadd( 28.6966, -227.361, 28.7285, 0.33 ) }
    dend_6 { pt3dadd( 27.6089, -229.033, 29.3166, 0.33 ) }
    dend_6 { pt3dadd( 26.9092, -230.109, 29.6949, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 30.9499, -223.895, 27.5102, 0.67 ) }
    dend_5 { pt3dadd( 32.6022, -227.235, 28.4679, 0.67 ) }
    dend_5 { pt3dadd( 35.235, -232.556, 29.9939, 1.33 ) }
    dend_5 { pt3dadd( 36.7406, -235.599, 30.8666, 0.67 ) }
    dend_5 { pt3dadd( 39.5106, -241.197, 32.4721, 1.33 ) }
    dend_5 { pt3dadd( 41.1334, -244.477, 33.4127, 0.67 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 27/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 74.5037, 62.3188, 47.1292, 0.33 ) }
    dend_78 { pt3dadd( 76.3503, 61.3411, 48.7771, 0.33 ) }
    dend_78 { pt3dadd( 78.5423, 60.1805, 50.7332, 0.33 ) }
    dend_78 { pt3dadd( 82.477, 58.0971, 54.2445, 0.33 ) }
    dend_78 { pt3dadd( 84.3483, 57.1063, 55.9145, 0.33 ) }
    dend_78 { pt3dadd( 85.4018, 56.5485, 56.8546, 0.33 ) }
    dend_78 { pt3dadd( 86.7781, 55.8198, 58.0828, 0.67 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 34/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 74.5037, 62.3188, 47.1292, 0.67 ) }
    dend_77 { pt3dadd( 76.3989, 63.0925, 49.1928, 0.67 ) }
    dend_77 { pt3dadd( 78.5784, 63.9822, 51.566, 0.67 ) }
    dend_77 { pt3dadd( 79.9134, 64.5272, 53.0197, 0.67 ) }
    dend_77 { pt3dadd( 81.0988, 65.0111, 54.3104, 0.67 ) }
    dend_77 { pt3dadd( 86.2738, 67.1236, 59.9454, 0.67 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 40/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 23.8551, 62.2558, -12.111, 0.33 ) }
    dend_72 { pt3dadd( 26.356, 64.0722, -10.9081, 0.33 ) }
    dend_72 { pt3dadd( 27.4387, 65.0194, -10.3328, 0.33 ) }
    dend_72 { pt3dadd( 27.6926, 65.5128, -9.12254, 0.33 ) }
    dend_72 { pt3dadd( 27.9823, 66.0677, -7.5551, 0.33 ) }
    dend_72 { pt3dadd( 28.3271, 66.7823, -5.68213, 1.33 ) }
    dend_72 { pt3dadd( 28.6847, 67.529, -3.87762, 0.33 ) }
    dend_72 { pt3dadd( 28.9519, 68.1224, -2.45309, 0.67 ) }
    dend_72 { pt3dadd( 30.5033, 72.2987, 6.81438, 0.33 ) }
    dend_72 { pt3dadd( 30.7484, 72.9957, 8.23192, 0.67 ) }
    dend_72 { pt3dadd( 31.002, 73.6934, 9.61254, 0.33 ) }
    dend_72 { pt3dadd( 31.2511, 74.2427, 10.5586, 0.67 ) }
    dend_72 { pt3dadd( 31.834, 75.2303, 11.9567, 0.33 ) }
    dend_72 { pt3dadd( 32.152, 75.6888, 12.3716, 0.67 ) }
    dend_72 { pt3dadd( 32.8808, 76.6501, 12.721, 0.33 ) }
    dend_72 { pt3dadd( 33.2733, 77.1862, 12.8991, 0.67 ) }
    dend_72 { pt3dadd( 35.1855, 79.705, 13.7086, 0.33 ) }
    dend_72 { pt3dadd( 36.5492, 81.5769, 14.2469, 0.33 ) }
    dend_72 { pt3dadd( 36.9616, 82.1017, 14.3973, 0.67 ) }
    dend_72 { pt3dadd( 39.101, 84.4979, 15.1278, 0.33 ) }
    dend_72 { pt3dadd( 39.7755, 85.1133, 15.3858, 1.33 ) }
    dend_72 { pt3dadd( 41.3006, 86.2195, 15.9832, 0.33 ) }
    dend_72 { pt3dadd( 42.3396, 86.7883, 16.3899, 1.33 ) }
    dend_72 { pt3dadd( 44.9336, 87.9764, 17.809, 0.67 ) }
    dend_72 { pt3dadd( 46.5296, 88.5083, 18.8631, 0.67 ) }
    dend_72 { pt3dadd( 49.6096, 89.1637, 21.1309, 0.67 ) }
    dend_72 { pt3dadd( 50.6963, 89.373, 21.976, 1.33 ) }
    dend_72 { pt3dadd( 51.5764, 89.5262, 22.682, 0.33 ) }
    dend_72 { pt3dadd( 54.8591, 90.1289, 25.3432, 1.33 ) }
    dend_72 { pt3dadd( 57.7298, 90.8185, 27.7178, 0.33 ) }
    dend_72 { pt3dadd( 59.9088, 91.5168, 29.4145, 0.67 ) }
    dend_72 { pt3dadd( 60.9952, 91.9636, 30.1708, 0.33 ) }
    dend_72 { pt3dadd( 61.5493, 92.2217, 30.5232, 0.67 ) }
    dend_72 { pt3dadd( 62.4424, 92.7289, 30.9707, 0.33 ) }
    dend_72 { pt3dadd( 63.1274, 93.2277, 31.1811, 1.33 ) }
    dend_72 { pt3dadd( 64.4251, 94.6484, 31.5619, 0.33 ) }
    dend_72 { pt3dadd( 65.4273, 95.9249, 31.8425, 0.33 ) }
    dend_72 { pt3dadd( 65.8159, 96.3932, 31.9217, 0.67 ) }
    dend_72 { pt3dadd( 66.934, 97.6948, 32.0827, 0.33 ) }
    dend_72 { pt3dadd( 67.5299, 98.3883, 32.1373, 0.67 ) }
    dend_72 { pt3dadd( 68.1658, 99.1168, 32.1765, 0.33 ) }
    dend_72 { pt3dadd( 69.0871, 100.125, 32.1976, 0.33 ) }
    dend_72 { pt3dadd( 70.2101, 101.201, 32.2151, 0.67 ) }
    dend_72 { pt3dadd( 71.3018, 102.272, 32.1792, 0.33 ) }
    dend_72 { pt3dadd( 71.526, 102.476, 32.156, 0.67 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 85/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 23.8551, 62.2558, -12.111, 0.33 ) }
    dend_69 { pt3dadd( 27.371, 62.5595, -8.69689, 0.33 ) }
    dend_69 { pt3dadd( 28.7257, 62.7372, -7.44835, 0.67 ) }
    dend_69 { pt3dadd( 32.6717, 63.4712, -3.54409, 0.33 ) }
    dend_69 { pt3dadd( 33.6868, 63.6945, -2.57955, 1.33 ) }
    dend_69 { pt3dadd( 34.9407, 64.0037, -1.41626, 0.33 ) }
    dend_69 { pt3dadd( 35.7216, 64.2268, -0.698319, 0.67 ) }
    dend_69 { pt3dadd( 36.5791, 64.6066, 0.0995479, 0.33 ) }
    dend_69 { pt3dadd( 39.7347, 66.2639, 2.101, 1.33 ) }
    dend_69 { pt3dadd( 41.2342, 67.3164, 2.47517, 0.33 ) }
    dend_69 { pt3dadd( 41.5108, 67.5177, 2.46993, 0.67 ) }
    dend_69 { pt3dadd( 42.4697, 68.2308, 2.31132, 0.33 ) }
    dend_69 { pt3dadd( 43.7922, 69.2042, 1.97987, 0.67 ) }
    dend_69 { pt3dadd( 47.6721, 72.1032, 0.561793, 0.33 ) }
    dend_69 { pt3dadd( 49.661, 73.6048, -0.428148, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_69 { pt3dadd( 52.2508, 75.5534, -1.73294, 0.33 ) }
    dend_69 { pt3dadd( 54.448, 77.1098, -2.8397, 1.33 ) }
    // Section: dend_63, id: dend_63, parent: dend_53 (entry count 2/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -7.53498, 53.5862, -4.71007, 0.33 ) }
    dend_63 { pt3dadd( -10.0595, 54.4569, -4.86237, 0.33 ) }
    dend_63 { pt3dadd( -13.7394, 55.5627, -4.93797, 0.33 ) }
    dend_63 { pt3dadd( -14.4769, 55.7823, -4.94523, 0.67 ) }
    dend_63 { pt3dadd( -20.7667, 57.4754, -5.09668, 0.33 ) }
    dend_63 { pt3dadd( -23.0208, 58.078, -5.19354, 0.67 ) }
    dend_63 { pt3dadd( -25.623, 58.782, -5.32575, 0.33 ) }
    dend_63 { pt3dadd( -26.0019, 58.8722, -5.35781, 0.67 ) }
    dend_63 { pt3dadd( -27.8906, 59.167, -5.46775, 0.33 ) }
    dend_63 { pt3dadd( -30.9654, 59.5082, -5.59274, 0.33 ) }
    dend_63 { pt3dadd( -33.8797, 59.839, -5.68934, 0.33 ) }
    dend_63 { pt3dadd( -34.7937, 59.9406, -5.75611, 1.33 ) }
    dend_63 { pt3dadd( -39.3388, 60.4843, -6.24345, 0.33 ) }
    dend_63 { pt3dadd( -42.206, 60.7852, -6.50481, 0.33 ) }
    dend_63 { pt3dadd( -44.1118, 60.873, -6.60194, 1.33 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 17/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -7.53498, 53.5862, -4.71007, 0.67 ) }
    dend_54 { pt3dadd( -7.92406, 56.9981, -5.03604, 0.67 ) }
    dend_54 { pt3dadd( -8.34311, 61.3418, -5.54587, 0.67 ) }
    dend_54 { pt3dadd( -8.47001, 64.1911, -5.95259, 0.67 ) }
    dend_54 { pt3dadd( -8.50188, 68.8873, -6.65325, 0.67 ) }
    dend_54 { pt3dadd( -8.47794, 71.2971, -7.02151, 0.67 ) }
    dend_54 { pt3dadd( -8.25523, 74.3536, -7.60316, 0.67 ) }
    dend_54 { pt3dadd( -7.97681, 76.2018, -8.04532, 1.33 ) }
    dend_54 { pt3dadd( -7.3836, 78.8367, -8.75287, 0.67 ) }
    dend_54 { pt3dadd( -6.79527, 81.5301, -9.34482, 2.0 ) }
    dend_54 { pt3dadd( -6.35503, 83.4083, -9.79473, 1.33 ) }
    dend_54 { pt3dadd( -5.1487, 88.2667, -10.8915, 1.33 ) }
    dend_54 { pt3dadd( -4.65885, 90.444, -11.3505, 0.67 ) }
    dend_54 { pt3dadd( -3.95536, 94.1758, -12.11, 0.67 ) }
    dend_54 { pt3dadd( -3.28483, 99.8088, -13.1419, 1.33 ) }
    dend_54 { pt3dadd( -2.98598, 103.77, -13.8349, 1.33 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 33/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -28.8815, 139.738, -65.3337, 0.33 ) }
    dend_42 { pt3dadd( -22.2829, 143.378, -67.8293, 0.33 ) }
    dend_42 { pt3dadd( -21.9335, 143.571, -67.9614, 0.67 ) }
    dend_42 { pt3dadd( -20.9763, 144.099, -68.3234, 0.33 ) }
    dend_42 { pt3dadd( -20.3788, 144.428, -68.5493, 0.67 ) }
    dend_42 { pt3dadd( -17.6097, 145.956, -69.5965, 0.33 ) }
    dend_42 { pt3dadd( -15.0022, 147.394, -70.5827, 2.0 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 40/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -28.8815, 139.738, -65.3337, 0.33 ) }
    dend_41 { pt3dadd( -29.7803, 140.448, -66.017, 0.33 ) }
    dend_41 { pt3dadd( -29.9639, 140.593, -66.1567, 0.67 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 43/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 54.448, 77.1098, -2.8397, 0.33 ) }
    dend_71 { pt3dadd( 55.1728, 75.5413, -0.982476, 0.33 ) }
    dend_71 { pt3dadd( 55.299, 75.2683, -0.65928, 0.67 ) }
    dend_71 { pt3dadd( 55.8498, 74.0764, 0.75207, 0.33 ) }
    dend_71 { pt3dadd( 55.976, 73.8034, 1.07526, 0.67 ) }
    dend_71 { pt3dadd( 57.2038, 71.1466, 4.22117, 0.33 ) }
    dend_71 { pt3dadd( 58.3428, 68.6821, 7.13939, 0.67 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 50/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 54.448, 77.1098, -2.8397, 0.67 ) }
    dend_70 { pt3dadd( 56.8196, 83.75, -10.5341, 0.67 ) }
    dend_70 { pt3dadd( 57.501, 85.3086, -12.0581, 1.33 ) }
    dend_70 { pt3dadd( 58.5174, 87.1408, -13.5534, 0.33 ) }
    dend_70 { pt3dadd( 59.0436, 87.9705, -14.1555, 0.67 ) }
    dend_70 { pt3dadd( 59.9945, 89.455, -15.0891, 0.67 ) }
    dend_70 { pt3dadd( 62.432, 92.9598, -16.9845, 0.67 ) }
    dend_70 { pt3dadd( 64.4821, 95.117, -17.4766, 0.33 ) }
    dend_70 { pt3dadd( 66.1475, 96.7311, -17.8735, 0.33 ) }
    dend_70 { pt3dadd( 67.0837, 97.576, -18.0371, 0.67 ) }
    dend_70 { pt3dadd( 68.2326, 98.681, -18.2713, 0.67 ) }
    dend_70 { pt3dadd( 70.0555, 100.501, -18.6285, 0.33 ) }
    dend_70 { pt3dadd( 71.7387, 102.259, -18.9946, 1.33 ) }
    dend_70 { pt3dadd( 73.7697, 104.777, -19.7338, 0.33 ) }
    dend_70 { pt3dadd( 74.3846, 105.675, -19.9829, 0.67 ) }
    dend_70 { pt3dadd( 76.304, 108.578, -20.5985, 0.33 ) }
    dend_70 { pt3dadd( 76.6708, 109.177, -20.687, 0.67 ) }
    dend_70 { pt3dadd( 78.6013, 112.986, -20.885, 0.33 ) }
    dend_70 { pt3dadd( 78.8237, 113.414, -20.7656, 0.67 ) }
    dend_70 { pt3dadd( 79.5876, 114.722, -19.7513, 0.33 ) }
    dend_70 { pt3dadd( 80.8993, 116.559, -17.4813, 0.67 ) }
    dend_70 { pt3dadd( 81.6209, 117.502, -16.1158, 0.33 ) }
    dend_70 { pt3dadd( 81.9556, 117.938, -15.4822, 0.67 ) }
    dend_70 { pt3dadd( 84.1381, 120.866, -11.2827, 0.67 ) }
    dend_70 { pt3dadd( 85.2063, 122.41, -9.46485, 0.33 ) }
    dend_70 { pt3dadd( 87.0701, 125.249, -6.77412, 0.33 ) }
    dend_70 { pt3dadd( 87.8822, 126.57, -5.81768, 0.67 ) }
    dend_70 { pt3dadd( 89.4471, 129.137, -4.15528, 0.33 ) }
    dend_70 { pt3dadd( 90.3622, 130.732, -3.35755, 0.67 ) }
    dend_70 { pt3dadd( 91.8278, 133.453, -2.63149, 0.67 ) }
    dend_70 { pt3dadd( 92.8601, 135.147, -2.32712, 0.33 ) }
    dend_70 { pt3dadd( 93.0996, 135.544, -2.33649, 0.67 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 82/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -44.1118, 60.873, -6.60194, 0.67 ) }
    dend_67 { pt3dadd( -48.7398, 60.0641, -4.68971, 0.67 ) }
    dend_67 { pt3dadd( -49.7699, 59.8589, -4.26937, 0.67 ) }
    dend_67 { pt3dadd( -51.5977, 59.4435, -3.50713, 0.33 ) }
    dend_67 { pt3dadd( -53.5617, 58.9675, -2.70702, 0.67 ) }
    dend_67 { pt3dadd( -55.0722, 58.5606, -2.09107, 0.33 ) }
    dend_67 { pt3dadd( -55.7185, 58.3898, -1.76276, 0.67 ) }
    dend_67 { pt3dadd( -57.4104, 57.9993, -0.708989, 0.33 ) }
    dend_67 { pt3dadd( -58.0955, 57.8114, -0.257459, 0.67 ) }
    dend_67 { pt3dadd( -59.5485, 57.3375, 0.899629, 0.33 ) }
    dend_67 { pt3dadd( -60.0647, 57.1352, 1.3908, 0.67 ) }
    dend_67 { pt3dadd( -63.0486, 55.9965, 4.39193, 0.33 ) }
    dend_67 { pt3dadd( -64.3258, 55.5279, 5.71943, 0.67 ) }
    dend_67 { pt3dadd( -66.7425, 54.6319, 8.38587, 0.67 ) }
    dend_67 { pt3dadd( -69.1937, 53.7302, 11.1237, 0.67 ) }
    dend_67 { pt3dadd( -70.9516, 53.0106, 13.2519, 0.33 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 98/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -44.1118, 60.873, -6.60194, 1.33 ) }
    dend_64 { pt3dadd( -45.6236, 59.8226, -7.01116, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    // Section: dend_60, id: dend_60, parent: dend_54 (entry count 0/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -2.98598, 103.77, -13.8349, 0.67 ) }
    dend_60 { pt3dadd( -3.14262, 105.231, -13.1165, 0.67 ) }
    dend_60 { pt3dadd( -3.36569, 107.313, -12.0934, 0.67 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 3/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -2.98598, 103.77, -13.8349, 0.67 ) }
    dend_55 { pt3dadd( -3.85115, 104.933, -14.6859, 0.67 ) }
    dend_55 { pt3dadd( -4.55944, 106.093, -15.5188, 0.33 ) }
    dend_55 { pt3dadd( -5.15876, 107.307, -16.1703, 0.67 ) }
    dend_55 { pt3dadd( -5.80641, 108.744, -16.8413, 0.33 ) }
    dend_55 { pt3dadd( -7.30647, 112.241, -18.3343, 0.67 ) }
    dend_55 { pt3dadd( -8.4444, 115.03, -19.4274, 0.33 ) }
    dend_55 { pt3dadd( -9.01647, 117.047, -20.1438, 0.67 ) }
    dend_55 { pt3dadd( -9.68141, 120.597, -21.2786, 0.33 ) }
    dend_55 { pt3dadd( -9.73227, 120.989, -21.3929, 0.67 ) }
    dend_55 { pt3dadd( -9.86179, 122.385, -21.7767, 0.33 ) }
    dend_55 { pt3dadd( -10.058, 124.525, -22.2483, 2.0 ) }
    dend_55 { pt3dadd( -10.6881, 129.506, -23.0961, 0.67 ) }
    dend_55 { pt3dadd( -11.2852, 133.736, -23.7046, 1.33 ) }
    dend_55 { pt3dadd( -11.4981, 135.767, -24.1206, 0.33 ) }
    dend_55 { pt3dadd( -11.5284, 136.161, -24.2081, 0.67 ) }
    dend_55 { pt3dadd( -11.918, 139.503, -24.8599, 0.33 ) }
    dend_55 { pt3dadd( -12.0498, 140.13, -24.9647, 0.67 ) }
    dend_55 { pt3dadd( -12.7185, 142.07, -25.1677, 0.33 ) }
    dend_55 { pt3dadd( -14.7245, 147.42, -25.673, 0.67 ) }
    dend_55 { pt3dadd( -15.1719, 148.626, -25.814, 0.33 ) }
    dend_55 { pt3dadd( -16.6329, 152.597, -26.5214, 0.67 ) }
    dend_55 { pt3dadd( -17.603, 155.307, -27.3755, 0.67 ) }
    dend_55 { pt3dadd( -18.2173, 156.622, -27.7193, 1.33 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -45.6236, 59.8226, -7.01116, 0.67 ) }
    dend_66 { pt3dadd( -49.0033, 58.7601, 0.777186, 0.67 ) }
    dend_66 { pt3dadd( -49.3996, 58.6355, 1.69036, 0.67 ) }
    dend_66 { pt3dadd( -50.9374, 58.152, 5.2342, 0.67 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 31/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -45.6236, 59.8226, -7.01116, 0.33 ) }
    dend_65 { pt3dadd( -46.4448, 58.9084, -5.2556, 0.33 ) }
    dend_65 { pt3dadd( -47.5143, 57.2647, -2.58103, 0.33 ) }
    dend_65 { pt3dadd( -48.8502, 54.7014, 0.933551, 0.67 ) }
    dend_65 { pt3dadd( -49.8373, 52.7661, 3.41495, 0.33 ) }
    dend_65 { pt3dadd( -51.5291, 49.6741, 7.33247, 0.33 ) }
    dend_65 { pt3dadd( -52.3207, 48.2272, 9.16561, 0.33 ) }
    dend_65 { pt3dadd( -53.9923, 45.7222, 12.4473, 0.67 ) }
    dend_65 { pt3dadd( -55.2831, 44.1055, 14.4813, 0.67 ) }
    dend_65 { pt3dadd( -56.3508, 42.6117, 15.9864, 0.67 ) }
    dend_65 { pt3dadd( -56.7438, 41.8272, 16.7763, 0.67 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 42/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -3.36569, 107.313, -12.0934, 0.33 ) }
    dend_62 { pt3dadd( -4.41726, 108.689, -12.5775, 0.33 ) }
    dend_62 { pt3dadd( -4.70983, 109.072, -12.7121, 0.67 ) }
    dend_62 { pt3dadd( -6.19533, 111.015, -13.3959, 0.33 ) }
    dend_62 { pt3dadd( -7.2685, 112.419, -13.89, 0.67 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 47/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -3.36569, 107.313, -12.0934, 0.67 ) }
    dend_61 { pt3dadd( -3.85329, 108.382, -10.6794, 0.67 ) }
    dend_61 { pt3dadd( -6.01593, 112.458, -5.29139, 0.67 ) }
    dend_61 { pt3dadd( -7.16351, 114.573, -2.23676, 0.33 ) }
    dend_61 { pt3dadd( -7.7904, 115.756, -0.561603, 0.67 ) }
    dend_61 { pt3dadd( -8.97569, 117.965, 2.51844, 0.33 ) }
    dend_61 { pt3dadd( -9.78148, 119.466, 4.61231, 0.33 ) }
    dend_61 { pt3dadd( -10.9645, 121.38, 7.29853, 0.67 ) }
    dend_61 { pt3dadd( -11.896, 122.736, 9.42195, 0.33 ) }
    dend_61 { pt3dadd( -12.6094, 123.779, 10.8626, 0.33 ) }
    dend_61 { pt3dadd( -12.998, 124.39, 11.8466, 0.33 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 58/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -18.2173, 156.622, -27.7193, 0.67 ) }
    dend_59 { pt3dadd( -16.0397, 160.218, -30.4079, 0.67 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 60/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -18.2173, 156.622, -27.7193, 0.67 ) }
    dend_56 { pt3dadd( -17.7219, 157.256, -29.5547, 0.67 ) }
    dend_56 { pt3dadd( -17.3139, 157.777, -31.0661, 0.67 ) }
    dend_56 { pt3dadd( -16.6202, 158.664, -33.6361, 0.33 ) }
    dend_56 { pt3dadd( -15.7488, 159.778, -36.8639, 1.33 ) }
    dend_56 { pt3dadd( -13.6829, 162.42, -44.5171, 0.33 ) }
    dend_56 { pt3dadd( -13.5419, 162.6, -45.0397, 0.67 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 67/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -13.5419, 162.6, -45.0397, 0.33 ) }
    dend_58 { pt3dadd( -11.9288, 162.639, -47.9334, 0.33 ) }
    dend_58 { pt3dadd( -11.6727, 162.654, -48.4084, 0.67 ) }
    dend_58 { pt3dadd( -9.99369, 162.747, -51.5226, 0.33 ) }
    dend_58 { pt3dadd( -9.06374, 162.798, -53.2475, 0.67 ) }
    dend_58 { pt3dadd( -6.44098, 162.944, -58.1121, 0.67 ) }
    dend_58 { pt3dadd( -4.00573, 163.079, -62.629, 0.33 ) }
    dend_58 { pt3dadd( -3.8152, 163.099, -62.9593, 0.67 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 75/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -13.5419, 162.6, -45.0397, 0.67 ) }
    dend_57 { pt3dadd( -18.8373, 167.571, -46.0191, 0.67 ) }
    dend_57 { pt3dadd( -22.0887, 170.623, -46.6204, 0.33 ) }
    dend_57 { pt3dadd( -22.7114, 171.207, -46.7355, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_2 = new SectionList()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_32 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_43 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_19 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_74 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_51 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_35 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_15 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_9 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_76 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_39 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_36 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_17 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_72 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_69 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_54 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_70 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_55 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_30 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_31 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_80 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_52 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_12 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_82 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_73 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_81 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_75 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_53 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_79 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_68 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_63 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_64 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_66 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_60 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_62 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_71 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_22 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_65 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_67 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_24 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_47 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_37 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_61 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_78 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_77 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_21 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_23 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_59 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_29 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_46 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_40 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_41 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_28 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_56 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_11 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_42 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_57 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_58 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_45 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_4 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_7 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_6 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_5 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_14 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_18 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_80, dend_80, dend_80, dend_49, dend_49, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_2, dend_2, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_73, dend_73, dend_73, dend_73, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_79 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 7
    dend_1 nseg = 9
    dend_32 nseg = 3
    dend_20 nseg = 3
    dend_13 nseg = 13
    dend_43 nseg = 5
    dend_19 nseg = 3
    dend_8 nseg = 3
    dend_74 nseg = 5
    dend_51 nseg = 3
    dend_44 nseg = 3
    dend_38 nseg = 5
    dend_35 nseg = 3
    dend_15 nseg = 3
    dend_9 nseg = 3
    dend_76 nseg = 3
    dend_39 nseg = 3
    dend_36 nseg = 3
    dend_17 nseg = 3
    dend_16 nseg = 3
    dend_72 nseg = 5
    dend_69 nseg = 3
    dend_54 nseg = 3
    dend_70 nseg = 5
    dend_55 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L4_DBC_45e771bde6_0_0


