// Cell: Cell_472306616
/*
{
  "id" : "Cell_472306616",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "364.261, 350.064, 38.64, 13.9332", "371.228, 350.064, 38.64, 13.9332", "378.195, 350.064, 38.64, 13.9332" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "371.228, 350.064, 38.64, 1.0", "377.069, 363.88, 38.64, 1.0", "382.911, 377.696, 38.64, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "373.336, 345.252, 33.483, 0.3108", "374.198, 344.638, 32.9977, 0.3436", "375.223, 344.161, 32.7807, 0.393", "376.235, 343.652, 32.629, 0.541", "377.327, 343.53, 32.5674, 0.5412", "378.435, 343.719, 32.4652, 0.501", "379.555, 343.639, 32.3176, 0.3926", "380.441, 342.953, 32.1644, 0.3564", "381.127, 342.042, 31.9446, 0.4058", "381.983, 341.311, 31.6072, 0.3886", "382.953, 340.83, 31.1114, 0.4264", "383.926, 340.415, 30.4814, 0.3872", "384.967, 340.08, 29.7928, 0.3884", "385.986, 339.606, 29.1147, 0.4898", "386.818, 338.853, 28.4726, 0.425", "387.347, 337.874, 27.8618, 0.3868", "387.87, 336.974, 27.2121, 0.3776", "388.684, 336.357, 26.5364, 0.5174", "389.714, 335.875, 26.0478, 0.4726", "390.4, 334.964, 25.7079, 0.4938", "390.689, 333.886, 25.3748, 0.4832", "391.092, 332.815, 25.1394, 0.4782", "392.089, 332.268, 25.0077, 0.3974", "393.193, 331.989, 24.8417, 0.3664" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "370.761, 344.322, 39.0594, 0.2822", "370.522, 343.448, 37.4259, 0.2884", "370.289, 342.669, 36.6366, 0.3014", "369.933, 341.697, 35.88, 0.319", "369.539, 340.625, 35.2822, 0.3824", "369.773, 339.591, 34.7407, 0.3504", "370.476, 338.709, 34.2986, 0.3316", "371.139, 337.779, 33.9867, 0.328", "371.403, 336.695, 33.6865, 0.399", "371.127, 335.613, 33.3561, 0.3824", "370.766, 334.57, 32.9574, 0.3842", "370.317, 333.704, 32.4285, 0.4592", "369.613, 332.84, 31.9547, 0.4784", "368.918, 331.981, 31.7229, 0.6392", "368.121, 331.163, 31.5974, 0.5572", "367.34, 330.354, 31.4709, 0.421", "367.018, 329.346, 31.561, 0.32", "366.817, 328.226, 31.6786, 0.3128", "366.312, 327.208, 31.768, 0.3398", "365.938, 326.153, 31.6711, 0.4222", "365.405, 325.171, 31.4381, 0.4186", "364.629, 324.331, 31.2007, 0.4846" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "374.563, 355.607, 41.6119, 0.3986", "375.142, 356.434, 43.1799, 0.3818", "375.779, 356.979, 43.9401, 0.3832", "376.844, 357.224, 44.7042, 0.4562", "377.817, 357.823, 45.3412, 0.4786", "378.497, 358.717, 45.9024, 0.61", "379.009, 359.71, 46.3809, 0.6472", "379.564, 360.69, 46.7457, 0.5748", "380.151, 361.67, 46.9703, 0.4388", "380.798, 362.612, 47.0705, 0.4256", "381.669, 363.326, 47.0212, 0.3844", "382.721, 363.768, 46.8863, 0.389", "383.763, 364.188, 46.8006, 0.462", "384.649, 364.898, 46.7219, 0.5132" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "372.428, 355.63, 40.6042, 0.2808", "372.645, 356.75, 40.4519, 0.286", "373.093, 357.802, 40.3917, 0.2958", "373.789, 358.692, 40.248, 0.3138", "374.524, 359.552, 40.0425, 0.3482", "375.321, 360.369, 39.8289, 0.4062", "376.112, 361.192, 39.6063, 0.5428", "376.63, 362.201, 39.3551, 0.6546", "376.871, 363.318, 39.1392, 0.8618", "376.634, 364.342, 39.0928, 0.7888", "376.732, 365.47, 38.9273, 0.5842" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "367.509, 345.718, 38.1335, 0.3594", "366.728, 344.903, 37.9117, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "367.345, 353.729, 43.1077, 0.2746", "366.623, 354.617, 42.7776, 0.2748", "365.737, 355.338, 42.6493, 0.275" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "382.911, 377.696, 38.64, 1.0", "388.752, 391.512, 38.64, 1.0", "394.593, 405.328, 38.64, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "393.193, 331.989, 24.8417, 0.3664", "393.535, 332.116, 24.6287, 0.418", "394.585, 332.524, 24.337, 0.442", "395.495, 333.163, 23.9725, 0.3766", "396.356, 333.876, 23.5547, 0.3318", "397.413, 334.244, 23.1215, 0.3354", "398.526, 334.46, 22.7235, 0.378", "399.584, 334.88, 22.3779, 0.5122", "400.519, 335.526, 22.0788, 0.4926", "401.3, 336.346, 21.8079, 0.3858", "402.195, 337.056, 21.6272, 0.3022", "403.212, 337.578, 21.486, 0.2784", "404.069, 338.335, 21.376, 0.2818", "404.983, 339.005, 21.2263, 0.288", "405.978, 339.557, 21.062, 0.3004", "406.979, 340.098, 20.8845, 0.3172", "407.716, 340.967, 20.7667, 0.3792", "408.337, 341.919, 20.6392, 0.3448", "409.207, 342.594, 20.4704, 0.3198", "410.267, 343.022, 20.405, 0.3136", "411.387, 343.25, 20.4275, 0.3362", "412.518, 343.087, 20.5001, 0.4406", "413.501, 343.297, 20.7965, 0.3304", "414.471, 343.886, 21.56, 0.2288" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "393.193, 331.989, 24.8417, 0.3664", "394.04, 331.616, 24.3581, 0.2288", "394.616, 330.744, 23.7077, 0.4058", "395.118, 329.728, 23.4679, 0.3884", "395.708, 328.749, 23.2495, 0.4278", "395.913, 327.642, 23.0063, 0.3824", "395.753, 326.527, 22.7013, 0.4152", "396.033, 325.467, 22.3132, 0.3654", "396.842, 324.725, 21.8604, 0.353", "397.824, 324.143, 21.4517, 0.3994", "398.413, 323.185, 21.03, 0.3766", "398.48, 322.123, 20.5328, 0.4048", "398.796, 321.08, 20.0284, 0.3446", "399.587, 320.256, 19.64, 0.322", "400.493, 319.564, 19.3394, 0.305", "400.988, 318.541, 19.0932, 0.3814", "401.315, 317.46, 19.04, 0.2288" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "364.629, 324.331, 31.2007, 0.4846", "364.252, 323.204, 30.7852, 0.6244", "363.666, 322.33, 30.2705, 0.6452", "363.026, 321.398, 29.839, 0.709", "362.288, 320.525, 29.5148, 0.705", "361.491, 319.707, 29.2757, 0.6058", "360.816, 318.793, 29.0805, 0.6384", "360.394, 317.737, 28.9862, 0.7912", "360.087, 316.641, 28.9736, 0.8544", "359.709, 315.563, 28.982, 0.6684", "359.528, 314.447, 29.0245, 0.65", "359.326, 313.323, 29.0122, 0.6336", "359.074, 312.234, 28.8655, 0.5176", "358.866, 311.119, 28.639, 0.4882", "358.772, 309.979, 28.4127, 0.449", "358.674, 308.859, 28.1168, 0.5296", "358.165, 307.918, 27.718, 0.6216", "357.641, 306.942, 27.3171, 0.6144", "356.994, 306.002, 27.0112, 0.5478", "356.139, 305.243, 26.8005, 0.6822", "355.244, 304.553, 26.7345, 0.5954", "354.495, 303.71, 26.784, 0.6932", "353.884, 302.817, 26.9639, 0.5328", "353.428, 301.801, 26.9851, 0.5212", "352.977, 300.785, 26.8598, 0.4868", "352.726, 299.693, 26.6352, 0.4848", "352.418, 298.597, 26.3853, 0.4092", "351.779, 297.653, 26.1412, 0.3894", "351.399, 296.601, 26.0461, 0.4556" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "364.629, 324.331, 31.2007, 0.4846", "364.475, 324.241, 33.9769, 0.2288", "364.297, 324.136, 37.9235, 0.2766", "364.119, 324.031, 39.6239, 0.2782", "364.108, 323.443, 41.5778, 0.2812", "364.108, 322.888, 43.6881, 0.2868", "364.108, 322.353, 45.8606, 0.2982", "364.091, 321.758, 47.9912, 0.3132", "363.803, 320.949, 49.9246, 0.3716", "363.237, 320.036, 51.5948, 0.3304", "362.883, 319.095, 53.0958, 0.2938", "362.749, 318.136, 54.4645, 0.2628", "362.72, 317.045, 55.6147, 0.2542", "362.544, 315.989, 56.6124, 0.2288", "362.276, 315.451, 59.0313, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "384.649, 364.898, 46.7219, 0.5132", "385.899, 364.392, 46.4097, 0.4232", "387.021, 364.197, 46.0947, 0.334", "388.151, 364.071, 45.7568, 0.2906", "389.264, 363.845, 45.3958, 0.3038", "390.331, 363.573, 44.9772, 0.3312", "391.38, 363.398, 44.4811, 0.3686", "392.479, 363.388, 44.0168, 0.5012", "393.616, 363.488, 43.6397, 0.4416", "394.747, 363.456, 43.3888, 0.4404", "395.872, 363.45, 43.241, 0.365", "396.953, 363.616, 43.0489, 0.3526", "398.019, 363.621, 42.7806, 0.3974", "399.128, 363.4, 42.574, 0.379", "400.22, 363.31, 42.3867, 0.3794", "401.289, 363.296, 42.0913, 0.4432", "402.373, 363.191, 41.7984, 0.4834", "403.498, 363.26, 41.6528, 0.4786", "404.589, 363.543, 41.6304, 0.3982", "405.69, 363.745, 41.6273, 0.3678", "406.795, 363.583, 41.5862, 0.4206", "407.888, 363.278, 41.5369, 0.447", "409.017, 363.146, 41.5041, 0.3856", "410.151, 363.112, 41.5226, 0.3498", "411.281, 363.008, 41.594, 0.3624", "412.398, 362.782, 41.676, 0.4586", "413.507, 362.548, 41.7802, 0.5132", "414.634, 362.423, 41.881, 0.5286", "415.77, 362.352, 41.8972, 0.516", "416.89, 362.191, 41.8317, 0.4634", "417.987, 361.875, 41.7382, 0.509", "419.085, 361.599, 41.6097, 0.5836", "420.172, 361.709, 41.4529, 0.5418", "421.236, 362.124, 41.3249, 0.4246", "422.3, 362.543, 41.2434, 0.3994", "423.31, 363.06, 41.1933, 0.3348", "424.221, 363.737, 41.2076, 0.3018", "425.194, 364.27, 41.3342, 0.278", "426.276, 364.458, 41.5828, 0.281", "427.394, 364.443, 41.8799, 0.2866", "428.534, 364.419, 42.1319, 0.2968", "429.674, 364.413, 42.3548, 0.3154", "430.77, 364.188, 42.5802, 0.352", "431.773, 363.664, 42.7818, 0.4098", "432.741, 363.058, 42.9248, 0.5656", "433.771, 362.571, 43.031, 0.6184", "434.874, 362.352, 43.1595, 0.4896", "435.999, 362.392, 43.3233, 0.4356", "437.121, 362.555, 43.4918, 0.3546", "438.242, 362.761, 43.6517, 0.3396", "439.351, 363.026, 43.7693, 0.3428", "440.425, 363.299, 43.7682, 0.4264", "441.506, 363.403, 43.6492, 0.4338", "442.606, 363.235, 43.5674, 0.4764", "443.577, 362.924, 43.699, 0.6452", "444.522, 362.578, 44.0163, 0.7498", "445.572, 362.224, 44.3162, 0.8112", "446.661, 362.123, 44.4422, 0.6542", "447.77, 362.042, 44.4206, 0.5332", "448.816, 361.625, 44.3243, 0.3988", "449.849, 361.165, 44.2562, 0.3988", "450.903, 360.726, 44.1834, 0.334", "451.938, 360.247, 44.1176, 0.3", "452.852, 359.582, 44.1448, 0.2746", "453.786, 358.922, 44.1806, 0.2748", "454.859, 358.541, 44.1834, 0.2748", "455.983, 358.336, 44.1731, 0.2752", "457.061, 357.958, 44.1454, 0.2756", "458.068, 357.417, 44.1062, 0.2766", "459.158, 357.077, 44.0686, 0.2782", "460.291, 356.964, 43.9874, 0.2814", "461.409, 356.925, 43.8295, 0.287", "462.548, 356.833, 43.6876, 0.2988", "463.625, 356.456, 43.5879, 0.3142", "464.554, 355.79, 43.5081, 0.3738", "465.522, 355.181, 43.4678, 0.3344", "466.611, 354.841, 43.4286, 0.301", "467.729, 354.602, 43.4179, 0.2766", "468.817, 354.249, 43.3826, 0.2782", "469.901, 353.891, 43.3541, 0.2814", "471.029, 353.71, 43.3353, 0.2872", "472.162, 353.554, 43.2928, 0.299", "473.285, 353.385, 43.1833, 0.3146", "474.391, 353.248, 42.9778, 0.3744", "475.526, 353.352, 42.7728, 0.3358", "476.6, 353.744, 42.6149, 0.3036", "477.673, 354.139, 42.4872, 0.2814", "478.75, 354.51, 42.3531, 0.287", "479.807, 354.94, 42.2318, 0.2986", "480.863, 355.371, 42.124, 0.314", "481.899, 355.854, 42.0305, 0.3734", "482.941, 356.325, 41.967, 0.3338", "483.991, 356.778, 41.9434, 0.2998", "485.006, 357.287, 41.9994, 0.274", "486.035, 357.78, 42.0885, 0.2736", "487.153, 358.021, 42.1697, 0.2728", "488.288, 358.073, 42.2064, 0.2712", "489.234, 358.707, 42.2218, 0.2684", "490.275, 359.181, 42.2537, 0.2628", "491.387, 359.389, 42.3634, 0.2542", "492.503, 359.563, 42.5354, 0.2288", "493.293, 360.36, 43.12, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "384.649, 364.898, 46.7219, 0.5132", "385.384, 365.771, 47.6221, 0.4576" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "376.732, 365.47, 38.9273, 0.5842", "376.485, 366.08, 38.5706, 0.5418", "376.23, 367.129, 38.0719, 0.429", "376.013, 368.196, 37.4721, 0.3862", "375.463, 369.112, 36.815, 0.414", "374.881, 369.988, 36.1004, 0.4036", "374.713, 371.001, 35.3847, 0.4554", "374.645, 372.124, 34.8384, 0.4354", "374.422, 373.233, 34.4938, 0.5044", "373.968, 374.276, 34.2278, 0.5754", "373.335, 375.226, 34.0189, 0.5254", "372.802, 376.234, 33.8212, 0.3996", "372.391, 377.285, 33.5616, 0.327", "371.929, 378.296, 33.2013, 0.327", "371.41, 379.289, 32.7902, 0.361", "371.021, 380.351, 32.3884, 0.4862", "370.608, 381.333, 31.9222, 0.4186", "369.712, 381.899, 31.4384, 0.3736", "368.703, 382.268, 31.2197, 0.3596", "367.995, 383.118, 31.1724, 0.4522", "367.407, 384.099, 31.1312, 0.5076", "366.904, 385.11, 31.0176, 0.488", "366.634, 386.179, 30.7882, 0.5866", "366.647, 387.322, 30.5704, 0.5732", "366.447, 388.44, 30.3722, 0.5862", "366.134, 389.503, 30.0544, 0.4254", "365.763, 390.5, 29.6162, 0.338", "365.174, 391.431, 29.1427, 0.299", "364.291, 392.152, 28.7924, 0.3144", "363.678, 393.116, 28.4735, 0.374" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "376.732, 365.47, 38.9273, 0.5842", "377.151, 365.721, 40.0117, 0.4576", "378.162, 366.25, 39.7704, 0.4046", "379.068, 366.841, 39.5956, 0.4094", "379.651, 367.78, 39.3585, 0.3534", "379.94, 368.884, 39.1686, 0.337", "380.269, 369.97, 39.1087, 0.3388", "380.952, 370.885, 39.1289, 0.4142" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "366.728, 344.903, 37.9117, 0.4576", "365.279, 344.567, 37.6225, 0.3038" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "366.728, 344.903, 37.9117, 0.4576", "366.846, 343.973, 41.1762, 0.4702", "366.718, 342.977, 41.811, 0.5276", "367.184, 341.932, 42.0353, 0.5898", "367.326, 340.798, 42.2041, 0.691" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "365.737, 355.338, 42.6493, 0.275", "365.037, 355.434, 42.441, 0.2754", "363.909, 355.429, 42.1722, 0.2762", "362.793, 355.24, 41.8734, 0.2776", "361.669, 355.082, 41.5724, 0.2802", "360.544, 354.873, 41.3193, 0.2852", "359.44, 354.698, 41.0407, 0.294", "358.298, 354.638, 40.8374, 0.3116", "357.159, 354.592, 40.7218, 0.3378", "356.043, 354.341, 40.6412, 0.4184", "355.06, 353.757, 40.5672, 0.4116", "354.217, 353.001, 40.4522, 0.4714", "353.343, 352.309, 40.2917, 0.459", "352.444, 351.663, 40.1005, 0.5784", "351.662, 350.837, 39.9784, 0.5644", "350.964, 349.934, 40.0207, 0.5388", "350.347, 349.02, 40.2956, 0.4884", "349.563, 348.274, 40.7781, 0.4102", "348.716, 347.625, 41.4204, 0.4196", "347.696, 347.412, 42.1747, 0.3734", "346.734, 347.746, 42.9867, 0.3678", "345.737, 348.3, 43.6433, 0.4266", "344.803, 348.96, 44.1294, 0.4282", "343.78, 349.469, 44.4956, 0.4958", "342.705, 349.284, 44.8725, 0.5364", "341.62, 349.645, 45.1542, 0.566", "340.596, 350.157, 45.365, 0.6124", "339.599, 350.715, 45.5501, 0.5106", "338.701, 351.423, 45.7293, 0.5482" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "365.737, 355.338, 42.6493, 0.275", "365.424, 356.669, 43.0682, 0.5484", "364.824, 357.641, 42.5449, 0.549", "364.417, 358.654, 42.2624, 0.5426", "364.57, 359.788, 41.9899, 0.567", "365.05, 360.824, 41.7175, 0.4368", "365.533, 361.837, 41.389, 0.3602", "365.87, 362.919, 41.1597, 0.3336" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "351.399, 296.601, 26.0461, 0.4556", "351.423, 295.286, 25.8664, 0.429", "351.303, 294.157, 25.777, 0.3444", "351.163, 293.026, 25.7897, 0.3108", "350.899, 291.92, 25.8418, 0.3364", "350.437, 290.879, 25.9181, 0.4158", "349.794, 289.957, 26.0598, 0.4084", "349.026, 289.141, 26.2858, 0.4582", "348.311, 288.267, 26.5089, 0.4702", "347.738, 287.284, 26.6833, 0.4244", "347.258, 286.252, 26.8145, 0.4412", "346.751, 285.231, 26.8926, 0.4378", "346.161, 284.273, 26.8372, 0.3688", "345.579, 283.385, 26.5807, 0.3172", "345.035, 282.427, 26.2485, 0.3078", "344.545, 281.397, 25.947, 0.3306", "344.007, 280.392, 25.6694, 0.405", "343.543, 279.352, 25.471, 0.387", "343.206, 278.262, 25.3541, 0.425", "342.81, 277.199, 25.2382, 0.3772", "342.352, 276.172, 25.0681, 0.4058", "341.806, 275.173, 24.9051, 0.3466", "341.18, 274.228, 24.8044, 0.3244", "340.539, 273.284, 24.7071, 0.3148", "339.95, 272.311, 24.5569, 0.3746", "339.452, 271.321, 24.3096, 0.336", "338.961, 270.363, 23.9534, 0.304", "338.306, 269.451, 23.5995, 0.282", "337.481, 268.663, 23.3107, 0.288", "336.672, 267.857, 23.0809, 0.3008", "336.0, 266.941, 22.9634, 0.3178", "335.497, 265.918, 22.9295, 0.3802", "335.113, 264.843, 22.9016, 0.3464", "334.739, 263.763, 22.8596, 0.3242", "334.376, 262.677, 22.8, 0.3142", "333.979, 261.61, 22.6984, 0.3736", "333.619, 260.525, 22.5783, 0.3342", "333.35, 259.413, 22.4595, 0.3006", "333.039, 258.313, 22.3457, 0.2758", "332.585, 257.265, 22.2289, 0.2768", "331.947, 256.32, 22.0754, 0.2786", "331.092, 255.607, 21.8242, 0.282", "330.164, 255.019, 21.4728, 0.2882", "329.29, 254.305, 21.1091, 0.3008", "328.427, 253.573, 20.7543, 0.3182", "327.468, 252.969, 20.4362, 0.3808", "326.415, 252.53, 20.1921, 0.3474", "325.307, 252.262, 20.0665, 0.3262", "324.26, 251.813, 20.0273, 0.318", "323.427, 251.035, 20.0024, 0.3808", "322.591, 250.253, 19.9664, 0.3474", "321.624, 249.647, 19.9254, 0.326", "320.644, 249.058, 19.8408, 0.3176", "319.773, 248.333, 19.6646, 0.38", "319.278, 247.365, 19.3583, 0.346", "319.033, 246.279, 18.9983, 0.3224", "318.559, 245.25, 18.658, 0.3168", "317.824, 244.376, 18.3908, 0.3488", "317.109, 243.482, 18.2236, 0.4324", "316.484, 242.526, 18.1214, 0.4698", "315.84, 241.582, 18.0716, 0.4238", "315.077, 240.73, 18.0778, 0.4398", "314.236, 239.956, 18.1294, 0.4354", "313.438, 239.148, 18.2299, 0.3644", "312.732, 238.262, 18.3697, 0.3092", "312.053, 237.341, 18.4605, 0.2918", "311.236, 236.543, 18.5091, 0.3062", "310.551, 235.626, 18.5382, 0.3352", "309.826, 234.744, 18.512, 0.3776", "309.005, 233.948, 18.4711, 0.5116", "308.163, 233.177, 18.3957, 0.4916", "307.181, 232.613, 18.275, 0.3838", "306.331, 231.853, 18.2141, 0.2982", "305.583, 230.988, 18.1826, 0.2712", "304.893, 230.079, 18.1342, 0.2684", "304.383, 229.056, 18.0757, 0.2628", "303.804, 228.07, 18.0354, 0.2542", "303.07, 227.193, 18.0087, 0.2288", "302.755, 226.093, 17.9682, 0.2288" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "351.399, 296.601, 26.0461, 0.4556", "351.841, 296.106, 25.6539, 0.4576", "352.637, 295.34, 24.97, 0.369", "353.402, 294.524, 24.7032, 0.3178", "353.783, 293.529, 24.3292, 0.3086", "353.775, 292.422, 23.8996, 0.3326", "353.74, 291.293, 23.5249, 0.4074", "353.846, 290.16, 23.2288, 0.3976", "354.081, 289.13, 22.8619, 0.4148", "354.329, 288.128, 22.3976, 0.5032", "354.684, 287.079, 21.9795, 0.6214", "355.245, 286.089, 21.6626, 0.6062", "355.789, 285.101, 21.4822, 0.5706", "356.149, 284.048, 21.438, 0.5418", "356.372, 282.935, 21.4196, 0.5354", "356.584, 281.824, 21.3288, 0.5238", "356.835, 280.746, 21.1126, 0.5014", "357.042, 279.653, 20.8022, 0.465", "357.151, 278.53, 20.4655, 0.3718", "357.124, 277.397, 20.1469, 0.3242", "356.896, 276.285, 19.8902, 0.314", "356.539, 275.199, 19.7334, 0.3734", "356.303, 274.083, 19.6801, 0.3338", "356.268, 272.944, 19.7124, 0.2998", "356.452, 271.818, 19.8109, 0.274", "357.076, 270.887, 19.9675, 0.2736", "357.953, 270.203, 20.2377, 0.2728", "358.808, 270.368, 20.732, 0.2712", "359.02, 271.482, 21.1983, 0.2684", "359.574, 272.483, 21.5742, 0.2628", "360.32, 273.35, 21.8562, 0.2542", "361.218, 274.059, 22.051, 0.2288", "362.025, 274.837, 22.4602, 0.2288" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "385.384, 365.771, 47.6221, 0.4576", "385.668, 366.237, 47.1923, 0.4592", "385.989, 367.286, 46.9991, 0.3614", "385.701, 368.355, 46.7684, 0.3038", "385.677, 369.474, 46.5399, 0.2816", "385.876, 370.599, 46.3462, 0.2872", "386.169, 371.702, 46.2185, 0.2992", "386.515, 372.787, 46.1616, 0.315", "386.796, 373.891, 46.0972, 0.375", "387.012, 375.005, 45.9962, 0.3368", "387.191, 376.131, 45.8791, 0.3052", "387.356, 377.253, 45.7377, 0.2844", "387.703, 378.335, 45.6, 0.2926", "388.187, 379.361, 45.5532, 0.3092", "388.539, 380.437, 45.5941, 0.3334", "388.878, 381.526, 45.6767, 0.4102", "389.39, 382.544, 45.7694, 0.3978", "389.983, 383.523, 45.8447, 0.4388", "390.611, 384.473, 45.8562, 0.4334", "391.218, 385.434, 45.8052, 0.3604", "391.746, 386.447, 45.7363, 0.302", "392.207, 387.492, 45.7005, 0.2782", "392.582, 388.568, 45.7223, 0.2814", "392.951, 389.646, 45.7895, 0.287", "393.412, 390.689, 45.8814, 0.2988", "393.938, 391.703, 45.9634, 0.314", "394.461, 392.719, 46.016, 0.3734", "395.032, 393.711, 46.011, 0.3338", "395.64, 394.675, 45.9287, 0.3", "396.109, 395.706, 45.773, 0.2746", "396.385, 396.796, 45.5529, 0.2746", "396.701, 397.889, 45.3286, 0.2746", "397.119, 398.953, 45.1469, 0.2746", "397.574, 400.003, 45.0164, 0.2746", "398.038, 401.049, 44.931, 0.2746", "398.525, 402.083, 44.8792, 0.2748", "399.025, 403.112, 44.8462, 0.2748", "399.469, 404.166, 44.8146, 0.2752", "399.811, 405.257, 44.7706, 0.2756", "400.146, 406.351, 44.709, 0.2766", "400.705, 407.345, 44.6289, 0.2782", "401.38, 408.27, 44.5306, 0.2814", "401.887, 409.275, 44.354, 0.287", "402.288, 410.274, 44.0521, 0.2988", "402.681, 411.339, 43.7671, 0.314", "402.92, 412.457, 43.549, 0.3734", "403.101, 413.586, 43.3955, 0.3338", "403.316, 414.709, 43.3009, 0.3", "403.667, 415.797, 43.2586, 0.2746", "404.166, 416.826, 43.258, 0.2746", "404.634, 417.868, 43.2869, 0.2746", "404.843, 418.987, 43.2746, 0.2746", "404.978, 420.121, 43.2575, 0.2746", "405.268, 421.228, 43.2519, 0.2746", "405.651, 422.305, 43.2603, 0.2746", "406.18, 423.32, 43.2877, 0.2746", "406.497, 424.417, 43.3395, 0.2746", "406.571, 425.559, 43.4221, 0.2746", "406.578, 426.703, 43.5313, 0.2746", "406.578, 427.843, 43.6968, 0.2746", "406.578, 428.947, 43.9849, 0.2744", "406.578, 430.079, 44.3187, 0.2744", "406.574, 431.222, 44.6368, 0.2742", "406.415, 432.353, 44.9565, 0.274", "405.921, 433.378, 45.2956, 0.2736", "405.164, 434.213, 45.6725, 0.2728", "404.199, 434.741, 46.1157, 0.2712", "403.354, 435.311, 46.6752, 0.2684", "402.333, 435.75, 47.215, 0.2628", "401.227, 436.039, 47.6241, 0.2542", "400.228, 436.596, 47.9041, 0.2288", "399.485, 437.466, 48.16, 0.2288" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "385.384, 365.771, 47.6221, 0.4576", "386.146, 366.817, 47.9662, 0.3222", "386.798, 367.728, 48.809, 0.3884", "387.497, 368.612, 49.1683, 0.3626", "388.411, 369.275, 49.574, 0.348", "389.474, 369.632, 50.038, 0.389", "390.479, 370.075, 50.5772, 0.3638", "391.363, 370.724, 51.1568, 0.35", "392.338, 371.253, 51.7292, 0.393", "393.434, 371.352, 52.285, 0.37", "394.464, 370.972, 52.8178, 0.3688", "395.376, 370.294, 53.2454, 0.3928", "396.279, 369.601, 53.515, 0.5392", "397.244, 368.994, 53.6791, 0.5438", "398.234, 368.422, 53.8098, 0.4764", "399.181, 367.781, 53.9599, 0.491", "400.122, 367.162, 54.2058, 0.5258", "401.125, 366.697, 54.5759, 0.5542", "402.185, 366.337, 55.0292, 0.5522", "403.285, 366.08, 55.5106, 0.5858", "404.368, 365.788, 56.0227, 0.4668", "405.442, 365.428, 56.5236, 0.4404", "406.477, 364.95, 56.985, 0.3638", "407.281, 364.18, 57.475, 0.356", "407.941, 363.318, 58.0308, 0.375", "408.663, 362.465, 58.5967, 0.477", "409.371, 361.585, 59.1483, 0.5718", "410.103, 360.707, 59.6333, 0.5188", "411.044, 360.069, 60.1059, 0.3872", "411.897, 359.491, 60.688, 0.3046", "412.664, 358.774, 61.3449, 0.2828", "413.318, 357.855, 61.9486, 0.291", "414.114, 357.08, 62.5282, 0.2994", "414.964, 356.316, 62.9588, 0.3474", "415.841, 355.602, 63.208, 0.2796", "416.759, 355.441, 64.12, 0.2288" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "363.678, 393.116, 28.4735, 0.374", "363.307, 394.219, 28.1361, 0.302", "362.928, 395.274, 27.7938, 0.2782", "362.467, 396.302, 27.4774, 0.2814", "361.984, 397.336, 27.2091, 0.287", "361.851, 398.424, 26.9357, 0.2988", "362.068, 399.532, 26.6634, 0.3142", "362.319, 400.645, 26.4564, 0.3738", "362.498, 401.771, 26.2949, 0.3344", "362.56, 402.9, 26.1107, 0.301", "362.535, 404.034, 25.9118, 0.2766", "362.558, 405.176, 25.7443, 0.2782", "362.681, 406.311, 25.6029, 0.2814", "362.881, 407.433, 25.4512, 0.2872", "363.07, 408.556, 25.2852, 0.2978", "363.167, 409.689, 25.1545, 0.319", "363.217, 410.831, 25.0676, 0.3512", "363.275, 411.962, 24.9556, 0.4444", "363.352, 413.083, 24.7927, 0.4558", "363.453, 414.213, 24.6303, 0.5728", "363.583, 415.346, 24.5304, 0.5524", "363.743, 416.469, 24.5245, 0.5232", "363.96, 417.584, 24.5755, 0.4284", "364.194, 418.699, 24.6191, 0.4486", "364.303, 419.832, 24.6496, 0.4514", "364.216, 420.963, 24.703, 0.3952", "363.987, 422.064, 24.8005, 0.361", "363.878, 423.181, 24.9044, 0.414", "364.038, 424.305, 24.9667, 0.4052", "364.242, 425.42, 24.9259, 0.4522", "364.437, 426.535, 24.7655, 0.4594", "364.58, 427.657, 24.5087, 0.4034", "364.57, 428.772, 24.1573, 0.4072", "364.776, 429.869, 23.7893, 0.3492", "365.316, 430.826, 23.385, 0.3296", "365.533, 431.879, 22.9536, 0.3242", "365.417, 433.004, 22.6504, 0.392", "365.224, 434.129, 22.4611, 0.3682", "365.07, 435.252, 22.2815, 0.3654", "365.071, 436.389, 22.106, 0.3864", "365.409, 437.475, 21.9598, 0.5276", "365.689, 438.581, 21.867, 0.5224", "365.836, 439.714, 21.7634, 0.4358", "365.901, 440.829, 21.5726, 0.42", "366.069, 441.953, 21.3636, 0.3738", "366.183, 443.091, 21.1745, 0.37", "366.007, 444.219, 20.985, 0.4244", "365.617, 445.292, 20.8112, 0.455", "365.084, 446.301, 20.6081, 0.3954", "364.525, 447.293, 20.3677, 0.3926", "364.234, 448.385, 20.0829, 0.322", "364.643, 449.4, 19.721, 0.2796", "365.685, 449.845, 19.3978, 0.2288", "366.423, 450.622, 18.48, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "363.678, 393.116, 28.4735, 0.374", "363.094, 392.527, 27.2156, 0.2288", "362.238, 391.82, 26.2493, 0.3", "361.22, 391.317, 25.9194, 0.3238", "360.294, 390.652, 25.4899, 0.3554", "359.27, 390.248, 24.8777, 0.4754", "358.303, 389.931, 24.0084, 0.3992", "357.444, 389.3, 23.0087, 0.3362", "356.803, 388.73, 21.8248, 0.2966", "356.075, 388.465, 20.5109, 0.305", "355.384, 389.046, 19.2212, 0.3814", "354.64, 389.761, 16.8, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "380.952, 370.885, 39.1289, 0.4142", "381.744, 371.926, 39.3134, 0.3634", "382.531, 372.738, 39.5475, 0.3074", "383.383, 373.484, 39.7107, 0.2884", "384.239, 374.19, 39.7566, 0.3002", "385.128, 374.875, 39.7886, 0.323", "385.942, 375.607, 39.9627, 0.36", "386.656, 376.426, 40.2651, 0.4546", "387.475, 377.208, 40.5972, 0.504", "388.34, 377.95, 40.896, 0.5192", "389.105, 378.773, 41.216, 0.462", "389.703, 379.659, 41.6534, 0.5422", "390.216, 380.58, 42.1716, 0.4714", "390.756, 381.568, 42.674, 0.4916", "391.369, 382.525, 43.1287, 0.4792", "392.105, 383.397, 43.5117, 0.4706", "392.934, 384.175, 43.8547, 0.3834", "393.769, 384.939, 44.2089, 0.3396", "394.608, 385.689, 44.5945, 0.3734", "395.468, 386.26, 45.101, 0.3338", "396.064, 386.942, 45.7579, 0.3", "396.513, 387.95, 46.3411, 0.2746", "397.086, 388.938, 46.7852, 0.2746", "397.745, 389.873, 47.1052, 0.2746", "398.61, 390.607, 47.3292, 0.2746", "399.623, 391.121, 47.5017, 0.2746", "400.676, 391.557, 47.6596, 0.2746", "401.665, 392.12, 47.831, 0.2746", "402.629, 392.727, 48.0256, 0.2748", "403.554, 393.395, 48.221, 0.2748", "404.532, 393.986, 48.3972, 0.2752", "405.523, 394.559, 48.5573, 0.2756", "406.488, 395.171, 48.7225, 0.2766", "407.354, 395.887, 48.9586, 0.2782", "408.186, 396.65, 49.2481, 0.2814", "409.181, 397.194, 49.5452, 0.2872", "410.25, 397.569, 49.8714, 0.299", "411.354, 397.807, 50.2211, 0.3146", "412.427, 398.178, 50.561, 0.3744", "413.325, 398.865, 50.8894, 0.3356", "414.268, 399.51, 51.1834, 0.303", "415.199, 400.169, 51.4665, 0.2802", "415.937, 400.991, 51.8064, 0.285", "416.827, 401.695, 52.1304, 0.2938", "417.79, 402.305, 52.437, 0.3112", "418.741, 402.935, 52.7271, 0.3384", "419.686, 403.58, 52.9852, 0.4132", "420.542, 404.335, 53.2356, 0.4332", "421.353, 405.127, 53.5139, 0.36", "422.284, 405.772, 53.8516, 0.3014", "423.112, 406.542, 54.2363, 0.2768", "423.831, 407.423, 54.6297, 0.2796", "424.913, 407.774, 54.9864, 0.2796", "426.029, 408.003, 55.3288, 0.305", "426.786, 408.25, 56.712, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "380.952, 370.885, 39.1289, 0.4142", "380.997, 371.206, 38.5837, 0.4576", "381.034, 372.28, 37.7569, 0.4952", "381.063, 373.402, 37.4058, 0.4224", "381.134, 374.532, 37.0835, 0.4434", "381.104, 375.664, 36.7671, 0.4124", "380.907, 376.772, 36.3684, 0.4658", "380.244, 377.597, 35.9111, 0.4844", "379.485, 378.276, 35.3167, 0.4506", "379.332, 379.163, 34.4747, 0.4916", "379.568, 380.155, 33.4841, 0.521", "379.961, 381.137, 32.4218, 0.5738", "380.18, 382.115, 31.2948, 0.4506", "380.172, 383.167, 30.1655, 0.3794", "380.45, 384.145, 29.0528, 0.4012", "380.927, 385.037, 27.9436, 0.3802", "381.116, 386.065, 26.8812, 0.4114", "381.35, 386.955, 25.7884, 0.3582", "381.58, 387.967, 24.7671, 0.3396", "382.065, 388.97, 23.9, 0.3738", "382.812, 389.75, 23.1272, 0.3344", "382.695, 390.843, 22.5117, 0.301", "382.363, 391.926, 22.0254, 0.2766", "382.08, 393.019, 21.6299, 0.2782", "381.959, 394.156, 21.3594, 0.2814", "382.124, 395.286, 21.1869, 0.287", "382.583, 396.322, 21.0039, 0.2988", "382.788, 397.438, 20.8042, 0.3142", "382.779, 398.572, 20.6893, 0.3736", "382.892, 399.709, 20.5576, 0.3342", "383.016, 400.771, 20.2773, 0.3006", "382.739, 401.88, 20.031, 0.2758", "382.772, 403.023, 19.808, 0.2768", "383.012, 404.139, 19.6463, 0.2788", "383.168, 405.248, 19.4184, 0.2824", "382.94, 406.356, 19.1803, 0.2882", "383.042, 407.492, 18.976, 0.305", "383.345, 408.591, 18.7888, 0.305", "383.714, 409.674, 18.5296, 0.4576" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "365.279, 344.567, 37.6225, 0.3038", "364.809, 344.373, 37.9551, 0.3234", "363.763, 344.029, 38.666, 0.3904", "362.707, 344.02, 39.013, 0.3664", "361.61, 344.067, 39.3789, 0.3548", "360.482, 343.9, 39.6382, 0.403", "359.438, 343.531, 39.6833, 0.3834", "358.411, 343.284, 39.5063, 0.417", "357.318, 343.491, 39.2412, 0.3688", "356.254, 343.907, 39.0488, 0.3592", "355.206, 344.359, 38.9231, 0.411", "354.075, 344.527, 38.9021, 0.398", "352.964, 344.51, 39.081, 0.4456", "351.992, 344.809, 39.4839, 0.4148", "351.028, 344.933, 40.0425, 0.4778", "349.908, 344.798, 40.3959, 0.4692", "348.843, 344.573, 40.521, 0.605" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "367.326, 340.798, 42.2041, 0.691", "366.943, 340.075, 42.2677, 0.7184", "366.445, 339.056, 42.2565, 0.6316", "365.815, 338.11, 42.2187, 0.6808", "364.909, 337.434, 42.2184, 0.8968", "364.126, 336.671, 42.378, 0.9202", "363.348, 335.844, 42.5978, 0.734", "362.494, 335.086, 42.8123, 0.5878", "361.672, 334.294, 43.0447, 0.4958", "360.732, 333.655, 43.2958, 0.5994", "359.719, 333.167, 43.5868, 0.6052", "358.685, 332.681, 43.8323, 0.6042", "357.722, 332.096, 43.9852, 0.6594", "356.923, 331.365, 44.2697, 0.4844", "356.232, 330.586, 44.6835, 0.3628", "355.598, 329.649, 45.0719, 0.2966", "354.888, 328.754, 45.3575, 0.3166", "354.184, 327.853, 45.5582, 0.3472", "353.542, 326.913, 45.7472, 0.4356", "352.752, 326.087, 45.892, 0.4458", "352.262, 325.055, 46.0135, 0.5234", "351.64, 324.094, 46.1348, 0.6114", "350.932, 323.224, 46.1812, 0.588", "350.262, 322.344, 46.3506, 0.5358", "349.481, 321.567, 46.6057, 0.4818", "348.691, 321.006, 47.0165, 0.4024" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "367.326, 340.798, 42.2041, 0.691", "367.91, 339.539, 43.68, 0.624" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "338.701, 351.423, 45.7293, 0.5482", "337.86, 351.938, 45.9144, 0.4344", "336.76, 352.164, 46.1376, 0.4274", "335.741, 352.56, 46.457, 0.3394", "334.827, 353.233, 46.7477, 0.3104", "333.828, 353.763, 47.0347, 0.2938", "332.946, 354.457, 47.3228, 0.3112", "332.083, 355.199, 47.5499, 0.3372", "331.134, 355.823, 47.6367, 0.416", "330.267, 356.554, 47.6126, 0.4148", "329.407, 357.215, 47.6896, 0.4412", "328.376, 357.705, 47.6949, 0.5782", "327.423, 358.237, 47.5334, 0.6354", "326.413, 358.764, 47.3424, 0.552", "325.465, 359.378, 47.2228, 0.4014", "324.504, 359.991, 47.1041, 0.332", "323.513, 360.54, 46.8835, 0.3284", "322.447, 360.907, 46.5909, 0.401", "321.378, 361.14, 46.1922, 0.3798", "320.354, 361.488, 45.694, 0.4108", "319.272, 361.83, 45.2178, 0.3562", "318.15, 361.999, 44.7852, 0.3408", "317.042, 362.157, 44.373, 0.3522", "315.936, 362.292, 43.9928, 0.4092", "314.801, 362.235, 43.7444, 0.5704", "313.725, 361.895, 43.6251, 0.5978", "312.718, 361.354, 43.5173, 0.5954", "311.724, 360.796, 43.3994, 0.6196", "310.709, 360.271, 43.2891, 0.5254", "309.689, 359.78, 43.122, 0.569", "308.664, 359.296, 42.9184, 0.5038", "307.739, 358.626, 42.7263, 0.4064", "306.799, 357.985, 42.5228, 0.341", "305.793, 357.455, 42.3209, 0.3466", "304.781, 356.984, 42.0748, 0.4282", "303.778, 356.524, 41.8116, 0.462", "302.897, 355.854, 41.6167, 0.4084", "301.87, 355.473, 41.5985, 0.4166", "300.825, 355.071, 41.6217, 0.3678", "299.85, 354.492, 41.5884, 0.3574", "298.856, 353.957, 41.5696, 0.4076", "297.993, 353.287, 41.5951, 0.3918", "297.33, 352.368, 41.5366, 0.4342", "296.631, 351.575, 41.2944, 0.3942", "295.798, 350.941, 40.9494, 0.4368", "294.905, 350.245, 40.6924, 0.4064", "294.083, 349.461, 40.5026, 0.4246", "293.276, 348.664, 40.2996, 0.5526", "292.562, 347.79, 40.087, 0.5622", "291.896, 346.872, 39.9328, 0.5412", "291.249, 345.943, 39.8118, 0.463", "290.733, 344.95, 39.6102, 0.507", "290.284, 343.921, 39.3907, 0.5862", "289.695, 342.957, 39.2414, 0.5166", "288.949, 342.106, 39.0858, 0.522", "288.232, 341.268, 38.8231, 0.5674", "287.626, 340.348, 38.4877, 0.4794", "287.059, 339.366, 38.2066, 0.4644", "286.432, 338.419, 37.9784, 0.4042", "285.676, 337.615, 37.6916, 0.4506", "284.753, 337.046, 37.3386, 0.4552", "283.758, 336.52, 37.0168, 0.402", "283.02, 335.706, 36.7934, 0.375", "282.569, 334.666, 36.5994, 0.4336", "282.002, 333.69, 36.3877, 0.472", "281.411, 332.714, 36.1869, 0.428", "280.863, 331.719, 35.9559, 0.4476", "280.203, 330.842, 35.623, 0.4496", "279.405, 330.07, 35.2229, 0.3916", "278.502, 329.385, 34.8401, 0.3542", "277.467, 328.926, 34.4994, 0.4018", "276.413, 328.503, 34.1866, 0.3814", "275.481, 327.904, 33.871, 0.4136", "274.695, 327.116, 33.572, 0.361", "274.041, 326.19, 33.3533, 0.351", "273.45, 325.224, 33.2814, 0.365", "272.788, 324.297, 33.3049, 0.4632", "272.032, 323.44, 33.3931, 0.5218", "271.172, 322.69, 33.5443, 0.5444", "270.265, 321.992, 33.7364, 0.5464", "269.481, 321.186, 34.0021, 0.5146", "268.986, 320.195, 34.3454, 0.6292", "268.626, 319.119, 34.7077, 0.6838", "268.222, 318.06, 35.0904, 0.6376", "267.781, 317.034, 35.5194, 0.5812", "267.235, 316.048, 35.9531, 0.5624", "266.625, 315.087, 36.3524, 0.5686", "266.05, 314.112, 36.7382, 0.6098", "265.55, 313.104, 37.1412, 0.543", "265.055, 312.082, 37.5393, 0.427", "264.373, 311.17, 37.8935, 0.4038", "263.455, 310.524, 38.1738, 0.343", "262.445, 310.045, 38.5426, 0.3168", "261.675, 309.602, 39.1653, 0.3068", "260.743, 309.175, 39.895, 0.3286", "259.755, 308.651, 40.591, 0.4016", "258.776, 308.254, 41.3101, 0.3808", "257.679, 308.464, 41.9297, 0.4126", "256.537, 308.446, 42.3371, 0.359", "255.401, 308.452, 42.6328, 0.3486", "254.305, 308.778, 42.8005, 0.3544", "253.481, 309.569, 42.9064, 0.4736", "252.362, 309.804, 42.9842, 0.3954", "251.236, 309.962, 43.0055, 0.3304", "250.094, 310.022, 43.0601, 0.2796", "248.957, 310.024, 43.162, 0.305", "247.905, 310.367, 43.68, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "338.701, 351.423, 45.7293, 0.5482", "338.344, 351.662, 45.7321, 0.4576", "337.4, 352.139, 47.2749, 0.484", "336.414, 352.246, 47.9612, 0.4068", "335.44, 351.979, 48.7796, 0.3898", "334.548, 351.402, 49.6446, 0.4324", "333.698, 350.689, 50.4658, 0.6088", "332.887, 349.899, 51.1885, 0.6926", "332.146, 349.063, 51.8445, 0.656", "331.393, 348.267, 52.4824, 0.604", "330.681, 347.433, 53.1107, 0.6592", "330.015, 346.54, 53.718, 0.484", "329.276, 345.682, 54.2769, 0.3622", "328.457, 344.891, 54.7879, 0.2954", "327.599, 344.16, 55.2927, 0.314", "326.693, 343.512, 55.8205, 0.3434", "325.773, 342.928, 56.397, 0.4226", "324.877, 342.341, 57.029, 0.4508", "323.949, 341.748, 57.6615, 0.3926", "323.044, 341.085, 58.2369, 0.3622", "322.226, 340.29, 58.7199, 0.3868", "321.347, 339.567, 59.113, 0.4984", "320.362, 338.993, 59.4658, 0.6124", "319.36, 338.475, 59.8402, 0.5898", "318.351, 338.025, 60.2848, 0.539", "317.357, 337.573, 60.8079, 0.4872", "316.39, 337.043, 61.3749, 0.4152", "315.379, 336.543, 61.9172, 0.393", "314.307, 336.15, 62.3963, 0.4994", "313.225, 335.788, 62.8306, 0.438", "312.139, 335.493, 63.2724, 0.434", "311.044, 335.341, 63.7731, 0.3522", "309.963, 335.203, 64.3482, 0.3334", "308.886, 335.049, 64.9849, 0.3384", "307.774, 334.943, 65.6177, 0.3834", "306.653, 334.81, 66.206, 0.5224", "305.578, 334.562, 66.7892, 0.5112", "304.526, 334.306, 67.3758, 0.4214", "303.425, 334.252, 67.9171, 0.3624", "302.309, 334.44, 68.3698, 0.417", "301.192, 334.66, 68.7277, 0.4102", "300.064, 334.625, 69.0178, 0.4628", "298.982, 334.276, 69.2462, 0.4726", "297.956, 333.789, 69.3932, 0.4586", "296.926, 333.333, 69.5279, 0.3602", "295.928, 332.933, 69.8096, 0.3018", "295.008, 332.486, 70.2705, 0.2778", "294.081, 331.909, 70.7683, 0.2806", "293.149, 331.269, 71.1682, 0.2858", "292.134, 330.794, 71.4736, 0.295", "291.068, 330.456, 71.8018, 0.3134", "290.078, 330.224, 72.308, 0.3424", "289.082, 330.03, 72.9537, 0.4206", "288.02, 329.833, 73.6812, 0.4468", "287.012, 329.665, 74.5251, 0.3854", "285.96, 329.434, 75.3567, 0.349", "284.865, 329.18, 76.0922, 0.3624", "283.76, 328.99, 76.7337, 0.4526", "282.661, 328.958, 77.3228, 0.5316", "281.558, 328.886, 77.8677, 0.4186", "280.567, 328.366, 78.2785, 0.3254", "279.589, 327.782, 78.6388, 0.2746", "278.604, 327.21, 78.9824, 0.2746", "277.548, 326.783, 79.2994, 0.2746", "276.454, 326.56, 79.6664, 0.2748", "275.403, 326.308, 80.131, 0.275", "274.375, 325.921, 80.6523, 0.2752", "273.354, 325.436, 81.1471, 0.276", "272.341, 324.911, 81.5811, 0.2772", "271.316, 324.404, 81.9669, 0.2792", "270.292, 323.897, 82.3136, 0.2834", "269.251, 323.441, 82.6731, 0.2906", "268.233, 322.96, 83.0914, 0.3056", "267.323, 322.317, 83.5904, 0.3266", "266.473, 321.633, 84.1943, 0.3978", "265.592, 320.994, 84.8792, 0.3738", "264.607, 320.474, 85.5812, 0.3994", "263.577, 319.994, 86.2291, 0.335", "262.601, 319.595, 86.9333, 0.302", "261.804, 319.77, 87.7822, 0.2782", "261.018, 320.488, 88.5724, 0.2814", "260.12, 321.191, 89.1825, 0.287", "259.266, 321.947, 89.6546, 0.2986", "258.549, 322.828, 89.9388, 0.314", "258.098, 323.874, 90.1365, 0.3732", "257.607, 324.905, 90.288, 0.3334", "256.819, 325.731, 90.419, 0.299", "256.175, 326.658, 90.6114, 0.2728", "256.013, 327.777, 90.8516, 0.2712", "255.677, 328.868, 91.0521, 0.2684", "254.927, 329.728, 91.243, 0.2628", "254.116, 330.523, 91.4455, 0.2542", "253.157, 331.146, 91.5894, 0.2288", "252.938, 332.218, 92.12, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "365.87, 362.919, 41.1597, 0.3336", "366.175, 364.088, 40.8117, 0.4016", "366.337, 365.188, 40.4368, 0.4224", "366.312, 366.325, 40.1016, 0.517", "366.069, 367.43, 39.7911, 0.648", "365.684, 368.475, 39.4657, 0.6502", "365.297, 369.531, 39.167, 0.6786", "364.933, 370.61, 39.0043, 0.6118", "364.629, 371.694, 38.9718, 0.6118", "364.497, 372.82, 38.9631, 0.4678", "364.572, 373.952, 38.9155, 0.4422", "364.688, 375.084, 38.8732, 0.367", "364.706, 376.222, 38.8702, 0.3626", "364.826, 377.347, 38.8556, 0.3856", "365.147, 378.426, 38.7548, 0.5038", "365.654, 379.425, 38.5893, 0.5866", "366.275, 380.38, 38.4219, 0.7158", "366.846, 381.365, 38.2878, 0.6158", "367.153, 382.444, 38.2085, 0.4766", "367.115, 383.576, 38.1937, 0.451", "366.877, 384.668, 38.1836, 0.42", "366.424, 385.685, 38.0671, 0.5104", "366.004, 386.727, 37.8899, 0.418", "365.706, 387.827, 37.7154, 0.3662", "365.53, 388.955, 37.5553, 0.3756", "365.358, 390.086, 37.4326, 0.338", "365.214, 391.216, 37.3416, 0.3076", "365.101, 392.343, 37.2646, 0.2886", "364.817, 393.434, 37.2148, 0.3016", "364.604, 394.539, 37.2366, 0.3194", "364.543, 395.675, 37.2358, 0.3834", "364.766, 396.771, 37.2019, 0.352", "365.225, 397.817, 37.1706, 0.3348", "365.497, 398.915, 37.1479, 0.3336", "365.533, 400.055, 37.133, 0.4102", "365.426, 401.187, 37.0866, 0.398", "365.193, 402.306, 37.0418, 0.4392", "365.096, 403.433, 37.0096, 0.4344", "365.229, 404.566, 36.9499, 0.3622", "365.415, 405.688, 36.8466, 0.3054", "365.684, 406.788, 36.7293, 0.2844", "365.961, 407.89, 36.6433, 0.293", "366.052, 409.023, 36.5781, 0.3084", "366.15, 410.145, 36.5313, 0.3394", "366.317, 411.261, 36.44, 0.3852", "366.388, 412.397, 36.3686, 0.5256", "366.467, 413.529, 36.314, 0.5172", "366.469, 414.663, 36.2208, 0.4334", "366.427, 415.806, 36.1256, 0.3798", "366.365, 416.932, 36.0707, 0.4736", "366.224, 418.046, 36.0769, 0.3956", "366.149, 419.151, 36.0007, 0.33", "366.185, 420.251, 35.8476, 0.283", "366.225, 421.391, 35.7372, 0.2902", "366.22, 422.524, 35.6714, 0.3046", "366.101, 423.653, 35.6574, 0.325", "366.159, 424.785, 35.6961, 0.3936", "366.294, 425.92, 35.7479, 0.3712", "366.321, 427.06, 35.8117, 0.37", "366.132, 428.177, 35.8711, 0.401", "365.658, 429.201, 35.8954, 0.5248", "365.007, 430.127, 35.8422, 0.6622", "364.453, 431.103, 35.7322, 0.6776", "364.163, 432.192, 35.6205, 0.7244", "364.157, 433.32, 35.5704, 0.7222", "364.243, 434.447, 35.6367, 0.6926", "364.254, 435.584, 35.7622, 0.5336", "364.189, 436.724, 35.9108, 0.5138", "364.14, 437.86, 36.1099, 0.5148", "364.169, 438.971, 36.3958, 0.5624", "364.142, 440.07, 36.7517, 0.4288", "364.146, 441.197, 37.0815, 0.344", "364.293, 442.33, 37.3537, 0.3102", "364.365, 443.465, 37.578, 0.335", "364.263, 444.602, 37.763, 0.4132", "364.189, 445.734, 37.954, 0.402", "364.278, 446.861, 38.1746, 0.454", "364.393, 447.987, 38.425, 0.4256", "364.39, 449.12, 38.6901, 0.5222", "364.377, 450.258, 38.9396, 0.4334", "364.466, 451.381, 39.188, 0.4254", "364.6, 452.504, 39.4128, 0.3358", "364.656, 453.61, 39.4954, 0.3036", "364.551, 454.719, 39.4671, 0.2814", "364.442, 455.814, 39.517, 0.287", "364.458, 456.947, 39.5592, 0.2988", "364.444, 458.09, 39.5727, 0.3142", "364.386, 459.229, 39.5391, 0.3736", "364.28, 460.367, 39.4934, 0.3342", "364.062, 461.487, 39.4226, 0.3004", "363.818, 462.575, 39.2599, 0.2754", "363.71, 463.706, 39.1054, 0.2762", "363.556, 464.828, 39.0569, 0.2776", "363.276, 465.933, 39.0656, 0.2802", "362.904, 467.013, 39.0827, 0.285", "362.403, 468.039, 39.1364, 0.2938", "361.938, 469.074, 39.2406, 0.3112", "361.439, 470.098, 39.3459, 0.3382", "360.81, 471.052, 39.4047, 0.413", "360.222, 472.033, 39.4083, 0.4328", "359.812, 473.095, 39.3254, 0.3594", "359.924, 474.214, 39.2339, 0.3", "360.297, 475.294, 39.0793, 0.2746", "360.392, 476.341, 38.724, 0.2746", "360.288, 477.422, 38.2628, 0.2746", "360.09, 478.527, 37.786, 0.2748", "359.955, 479.644, 37.3192, 0.275", "359.714, 480.761, 36.9412, 0.2752", "359.002, 481.65, 36.6344, 0.2758", "358.217, 482.477, 36.3947, 0.277", "357.621, 483.437, 36.1732, 0.2792", "357.127, 484.466, 35.999, 0.2828", "356.549, 485.446, 35.9349, 0.291", "356.291, 486.551, 35.8579, 0.2994", "356.024, 487.661, 35.7935, 0.3474", "355.841, 488.787, 35.7454, 0.2796", "355.784, 489.861, 36.12, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "365.87, 362.919, 41.1597, 0.3336", "366.707, 364.071, 41.5044, 0.5972", "367.12, 365.043, 43.1698, 0.4876", "367.0, 366.007, 43.8987, 0.4798", "366.546, 366.845, 44.816, 0.4324", "365.793, 367.409, 45.8492, 0.5036", "364.787, 367.703, 46.8678, 0.5502", "363.673, 367.798, 47.759, 0.5942", "362.551, 367.881, 48.5162, 0.6522", "361.531, 368.248, 49.1974, 0.6458", "360.629, 368.857, 49.8268, 0.501", "359.754, 369.573, 50.3376, 0.4202", "359.007, 370.424, 50.7903, 0.5024", "358.169, 371.196, 51.182, 0.4438", "357.169, 371.737, 51.5385, 0.4448", "356.187, 372.212, 51.9688, 0.3728", "355.355, 372.923, 52.4544, 0.3678", "354.61, 373.741, 52.9796, 0.4208", "353.867, 374.582, 53.4946, 0.447", "353.034, 375.344, 53.9762, 0.3868", "352.058, 375.924, 54.3886, 0.3458", "351.064, 376.469, 54.7515, 0.385", "350.289, 377.293, 55.0589, 0.3554", "349.564, 378.178, 55.2994, 0.3406", "348.73, 378.952, 55.5299, 0.3458", "347.81, 379.617, 55.7698, 0.427", "347.013, 380.433, 55.9762, 0.4586", "346.525, 381.445, 56.2066, 0.4078", "346.041, 382.44, 56.4889, 0.3868", "345.259, 383.266, 56.6913, 0.4506", "344.518, 384.138, 56.8252, 0.5282", "343.859, 385.07, 56.9212, 0.4124", "343.096, 385.863, 56.8652, 0.3136", "342.269, 386.537, 56.9419, 0.2542", "341.384, 387.148, 57.1192, 0.2288", "340.798, 387.93, 56.84, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "348.843, 344.573, 40.521, 0.605", "348.27, 344.67, 40.6249, 0.578", "347.164, 344.957, 40.6756, 0.7354", "346.067, 345.267, 40.6599, 0.7086", "344.939, 345.438, 40.6969, 0.603", "343.799, 345.47, 40.8206, 0.4508", "342.659, 345.393, 40.9584, 0.4132", "341.546, 345.173, 41.1592, 0.53", "340.47, 344.905, 41.4529, 0.5268", "339.364, 344.783, 41.8015, 0.444", "338.268, 345.029, 42.1501, 0.4352", "337.224, 345.494, 42.4052, 0.403", "336.14, 345.848, 42.5432, 0.4186", "335.009, 346.004, 42.637, 0.5414", "333.892, 346.224, 42.7048, 0.5418", "332.822, 346.626, 42.7213, 0.5024", "331.767, 347.055, 42.6642, 0.3952", "330.662, 347.28, 42.5351, 0.361", "329.525, 347.341, 42.3881, 0.4144", "328.389, 347.471, 42.2635, 0.404", "327.254, 347.615, 42.1753, 0.4576", "326.116, 347.496, 42.1313, 0.4322", "325.029, 347.14, 42.1313, 0.5346", "323.966, 346.717, 42.168, 0.4564", "322.899, 346.306, 42.2285, 0.4676", "321.815, 345.94, 42.3147, 0.4162", "320.738, 345.594, 42.4648, 0.443", "319.675, 345.212, 42.6625, 0.5858", "318.593, 344.845, 42.8436, 0.6274", "317.451, 344.78, 42.9864, 0.645", "316.335, 345.035, 43.0926, 0.737", "315.243, 345.376, 43.167, 0.6188", "314.163, 345.75, 43.2135, 0.6586", "313.09, 346.146, 43.2673, 0.6192", "311.97, 346.384, 43.3339, 0.6376", "310.829, 346.463, 43.4196, 0.6862", "309.715, 346.718, 43.5434, 0.7046", "308.64, 347.024, 43.7629, 0.6292", "307.531, 347.278, 44.0096, 0.5648", "306.388, 347.321, 44.2201, 0.5374", "305.244, 347.347, 44.401, 0.4962", "304.153, 347.462, 44.6748, 0.6018", "303.049, 347.723, 44.9543, 0.6012", "301.907, 347.766, 45.164, 0.639", "300.785, 347.715, 45.2777, 0.5188", "299.662, 347.501, 45.4157, 0.5336", "298.609, 347.255, 45.7024, 0.5526", "297.566, 346.935, 46.0793, 0.6282", "296.661, 346.252, 46.4607, 0.571", "295.731, 345.646, 46.8818, 0.5092", "294.599, 345.488, 47.2287, 0.4078", "293.455, 345.478, 47.4709, 0.3856", "292.319, 345.409, 47.6487, 0.4546", "291.253, 345.068, 47.8234, 0.5044", "290.227, 344.58, 47.8652, 0.5186", "289.212, 344.097, 47.7744, 0.4668", "288.156, 343.659, 47.6638, 0.5216", "287.064, 343.319, 47.5457, 0.5768", "285.926, 343.205, 47.4216, 0.6756", "284.782, 343.2, 47.2881, 0.6484", "283.663, 343.2, 47.0946, 0.7038", "282.531, 343.201, 46.8773, 0.5204", "281.387, 343.206, 46.7026, 0.4254", "280.253, 343.243, 46.5998, 0.4328", "279.139, 343.497, 46.4702, 0.4708", "278.106, 343.951, 46.4131, 0.4244" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "348.843, 344.573, 40.521, 0.605", "348.131, 343.74, 37.5936, 0.595", "347.378, 343.002, 36.6318, 0.6236", "346.633, 342.134, 36.2908, 0.7382", "345.837, 341.397, 35.8478, 0.652", "345.029, 340.753, 35.2428, 0.5696", "344.342, 339.928, 34.5895, 0.498", "343.703, 338.984, 34.0018, 0.4288", "342.968, 338.126, 33.4435, 0.4492", "342.21, 337.328, 32.8146, 0.4526", "341.553, 336.427, 32.172, 0.3972", "340.914, 335.483, 31.5381, 0.3648", "340.385, 334.691, 30.7244, 0.4214", "340.133, 333.891, 29.6898, 0.4172", "340.2, 332.953, 28.5617, 0.4818", "340.075, 331.987, 27.4144, 0.478", "339.227, 331.342, 26.4005, 0.6148", "338.156, 330.97, 25.5596, 0.6276", "337.153, 330.76, 24.7537, 0.6764", "336.182, 330.48, 23.9702, 0.645", "335.134, 330.159, 23.28, 0.4918", "334.03, 329.877, 22.7796, 0.4394", "332.912, 329.677, 22.4666, 0.3628", "331.83, 329.401, 22.175, 0.3484", "330.951, 328.744, 21.8816, 0.39", "330.005, 328.113, 21.6448, 0.3644", "328.917, 327.787, 21.5111, 0.3576", "327.827, 327.807, 21.5105, 0.3768", "326.692, 327.805, 21.5223, 0.4864", "325.576, 327.778, 21.3982, 0.5592", "324.456, 327.732, 21.1496, 0.6406", "323.325, 327.606, 20.8153, 0.5938", "322.387, 326.984, 20.3779, 0.5524", "321.803, 326.051, 19.8138, 0.4834", "320.987, 325.25, 19.2924, 0.548", "320.064, 324.964, 18.6244, 0.6468", "319.024, 324.766, 17.9299, 0.7034", "318.144, 324.159, 17.2501, 0.5084", "317.002, 324.095, 16.24, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "348.691, 321.006, 47.0165, 0.4024", "348.28, 319.952, 47.2214, 0.4126", "348.125, 318.865, 47.2497, 0.6082", "347.771, 317.783, 47.2349, 0.5158", "347.441, 316.7, 47.1092, 0.4948", "346.945, 315.681, 46.9428, 0.412", "346.277, 314.762, 46.7639, 0.4722", "345.674, 313.815, 46.604, 0.4616", "345.227, 312.773, 46.5489, 0.5774", "344.925, 311.678, 46.5662, 0.5918", "344.641, 310.571, 46.5959, 0.4458", "344.291, 309.486, 46.6323, 0.3286", "343.905, 308.417, 46.7124, 0.2806", "343.628, 307.326, 46.7611, 0.2856", "343.375, 306.254, 46.7239, 0.295", "342.862, 305.233, 46.699, 0.3124", "342.344, 304.227, 46.7275, 0.3456", "341.789, 303.263, 46.8588, 0.4026", "341.306, 302.242, 47.01, 0.529", "340.838, 301.202, 47.1201, 0.6638", "340.302, 300.191, 47.21, 0.7102", "339.83, 299.151, 47.2584, 0.6406", "339.484, 298.07, 47.234, 0.5808", "339.296, 296.96, 47.1229, 0.5902", "339.246, 295.832, 46.9764, 0.4824", "339.254, 294.699, 46.8443, 0.4328", "339.143, 293.568, 46.7992, 0.5258", "338.932, 292.459, 46.8748, 0.488", "338.74, 291.36, 47.0691, 0.5236", "338.577, 290.246, 47.3161, 0.5326", "338.503, 289.109, 47.5107, 0.5968", "338.424, 287.978, 47.6319, 0.4868", "338.249, 286.852, 47.7372, 0.4794", "338.046, 285.732, 47.8792, 0.4254", "337.734, 284.641, 48.0631, 0.522", "337.331, 283.601, 48.3305, 0.433", "336.983, 282.576, 48.7012, 0.4246", "336.784, 281.495, 49.0781, 0.3344", "336.715, 280.357, 49.3268, 0.3012", "336.599, 279.23, 49.4732, 0.2766", "336.215, 278.161, 49.5678, 0.2784", "335.834, 277.102, 49.6126, 0.2818", "335.679, 275.968, 49.6154, 0.2876", "335.399, 274.871, 49.5818, 0.2998", "335.034, 273.799, 49.5379, 0.3162", "334.952, 272.679, 49.5205, 0.3774", "335.11, 271.555, 49.4659, 0.3412", "335.078, 270.447, 49.3595, 0.3136", "334.724, 269.368, 49.2789, 0.2994", "334.4, 268.283, 49.2506, 0.3216", "334.18, 267.161, 49.2358, 0.3576", "333.822, 266.081, 49.2229, 0.4496", "333.268, 265.086, 49.2103, 0.4964", "332.593, 264.167, 49.1996, 0.4978", "331.872, 263.28, 49.217, 0.4582", "331.145, 262.404, 49.2918, 0.3594", "330.354, 261.589, 49.4124, 0.3", "329.674, 260.7, 49.5407, 0.2746", "329.262, 259.64, 49.6849, 0.2746", "328.843, 258.586, 49.868, 0.2746", "328.295, 257.59, 50.0682, 0.2748", "327.786, 256.572, 50.2676, 0.2748", "327.489, 255.478, 50.4728, 0.2752", "327.356, 254.344, 50.671, 0.2756", "327.215, 253.21, 50.8558, 0.2766", "326.962, 252.099, 51.0541, 0.2782", "326.625, 251.012, 51.2918, 0.2814", "326.296, 249.928, 51.5836, 0.287", "325.959, 248.853, 51.933, 0.299", "325.55, 247.798, 52.3149, 0.3144", "325.175, 246.73, 52.7153, 0.374", "324.909, 245.636, 53.1395, 0.335", "324.683, 244.535, 53.5819, 0.302", "324.484, 243.419, 54.0098, 0.2784", "324.138, 242.355, 54.43, 0.2818", "323.54, 241.422, 54.8736, 0.2878", "322.879, 240.521, 55.3204, 0.3", "322.225, 239.598, 55.7334, 0.3166", "321.52, 238.709, 56.1008, 0.378", "320.781, 237.844, 56.4234, 0.3424", "320.082, 236.944, 56.6916, 0.3154", "319.47, 235.98, 56.8938, 0.3044", "318.908, 234.984, 57.0559, 0.3246", "318.325, 234.002, 57.2113, 0.3928", "317.744, 233.018, 57.3636, 0.3704", "317.227, 232.002, 57.5364, 0.3638", "316.761, 230.969, 57.7587, 0.413", "316.369, 229.903, 58.004, 0.4328", "316.079, 228.799, 58.2478, 0.3594", "315.809, 227.694, 58.5119, 0.3", "315.487, 226.605, 58.8034, 0.2746", "315.123, 225.527, 59.1086, 0.2746", "314.74, 224.457, 59.425, 0.2748", "314.269, 223.43, 59.7646, 0.2748", "313.543, 222.596, 60.1364, 0.2752", "312.561, 222.066, 60.517, 0.2756", "311.471, 221.743, 60.874, 0.2766", "310.345, 221.555, 61.2021, 0.2782", "309.207, 221.447, 61.5143, 0.2814", "308.087, 221.253, 61.8478, 0.2872", "307.081, 220.79, 62.2574, 0.299", "306.338, 220.001, 62.7682, 0.3148", "305.903, 219.013, 63.3816, 0.3746", "305.752, 217.918, 64.0382, 0.336", "305.836, 216.794, 64.6856, 0.304", "305.935, 215.715, 65.3778, 0.282", "305.863, 214.688, 66.1357, 0.2882", "305.369, 213.826, 66.9351, 0.301", "304.669, 212.967, 67.6528, 0.3182", "304.251, 211.918, 68.2245, 0.3812", "303.973, 210.82, 68.7324, 0.348", "303.376, 209.861, 69.13, 0.3274", "302.504, 209.131, 69.4884, 0.32", "301.697, 208.456, 69.9633, 0.3844", "300.927, 207.859, 70.5922, 0.3542", "300.336, 206.93, 71.206, 0.3386", "299.919, 205.874, 71.7262, 0.3408", "299.31, 204.921, 72.1624, 0.4238", "298.807, 203.912, 72.5043, 0.423", "298.458, 202.826, 72.6516, 0.4864", "298.002, 201.776, 72.6673, 0.5176", "297.447, 200.795, 72.6463, 0.5376", "297.018, 199.743, 72.487, 0.5282", "296.69, 198.754, 72.1109, 0.5084", "296.148, 198.021, 71.5173, 0.483", "295.168, 197.717, 70.8686, 0.3814", "294.122, 197.912, 70.28, 0.4576" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "348.691, 321.006, 47.0165, 0.4024", "348.233, 320.919, 47.8248, 0.2288", "347.122, 320.869, 47.8092, 0.3872", "346.004, 321.044, 47.852, 0.5352", "344.891, 321.273, 47.9682, 0.5068" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "367.91, 339.539, 43.68, 0.624", "368.299, 338.169, 44.2266, 0.6324", "368.406, 337.062, 44.4506, 0.4682", "368.075, 336.007, 44.7432, 0.3968", "368.184, 334.904, 45.0568, 0.5062", "368.668, 333.874, 45.3412, 0.4506", "369.208, 332.876, 45.5896, 0.4586", "369.59, 331.807, 45.7369, 0.3924", "369.964, 330.767, 45.7495, 0.4336", "370.642, 329.896, 45.7551, 0.4002", "371.387, 329.111, 45.9007, 0.4136", "372.054, 328.211, 46.0603, 0.531", "372.697, 327.296, 46.1367, 0.5272", "373.24, 326.326, 46.2244, 0.451", "373.703, 325.314, 46.44, 0.418", "374.261, 324.397, 46.7832, 0.5168", "374.804, 323.457, 47.1772, 0.6102", "375.279, 322.423, 47.5429, 0.7618", "375.642, 321.352, 47.871, 0.6892", "375.805, 320.223, 48.1174, 0.6702", "375.849, 319.082, 48.267, 0.531", "375.716, 317.952, 48.3344, 0.5498", "375.487, 316.836, 48.3552, 0.612", "375.424, 315.721, 48.3986, 0.595", "375.455, 314.599, 48.4142, 0.5202", "375.456, 313.471, 48.3053, 0.5918", "375.594, 312.367, 48.0673, 0.6186", "375.82, 311.269, 47.7476, 0.4962", "376.018, 310.158, 47.3869, 0.4178", "376.164, 309.052, 46.9868, 0.4668", "376.376, 307.95, 46.6155, 0.5294", "376.752, 306.875, 46.3294, 0.5534", "377.118, 305.799, 46.1359, 0.588", "377.384, 304.692, 46.0107, 0.4706", "377.618, 303.576, 45.9231, 0.4484", "377.812, 302.451, 45.8777, 0.3734", "377.957, 301.34, 45.7789, 0.399", "377.957, 300.262, 45.556, 0.334", "377.968, 299.182, 45.3729, 0.3002", "378.225, 298.094, 45.2813, 0.275", "378.751, 297.091, 45.2024, 0.2752", "379.373, 296.134, 45.1548, 0.2758", "379.764, 295.078, 45.1492, 0.277", "379.9, 293.948, 45.173, 0.279", "379.959, 292.808, 45.1755, 0.2826", "380.129, 291.68, 45.1388, 0.2894", "380.412, 290.574, 45.0808, 0.303", "380.704, 289.49, 44.9198, 0.3222", "381.121, 288.472, 44.625, 0.3882", "381.653, 287.486, 44.2593, 0.3622", "382.141, 286.463, 43.8754, 0.3474", "382.573, 285.412, 43.4963, 0.3878", "383.041, 284.375, 43.1357, 0.3618", "383.598, 283.386, 42.8002, 0.3464", "384.223, 282.449, 42.4665, 0.3858", "384.937, 281.574, 42.1386, 0.358", "385.658, 280.691, 41.8491, 0.3396", "386.35, 279.781, 41.596, 0.3736", "387.162, 278.992, 41.354, 0.334", "388.076, 278.312, 41.1247, 0.3004", "388.953, 277.586, 40.9049, 0.2752", "389.724, 276.76, 40.6678, 0.2756", "390.436, 275.875, 40.4295, 0.2766", "391.195, 275.023, 40.2181, 0.2784", "392.014, 274.227, 40.0459, 0.2816", "392.798, 273.398, 39.8952, 0.2876", "393.499, 272.499, 39.7642, 0.2996", "394.107, 271.531, 39.6721, 0.3158", "394.622, 270.51, 39.6194, 0.3766", "395.122, 269.483, 39.5794, 0.3398", "395.608, 268.452, 39.5366, 0.311", "396.07, 267.408, 39.524, 0.295", "396.482, 266.345, 39.5766, 0.3132", "396.848, 265.27, 39.6998, 0.3422", "397.314, 264.232, 39.8608, 0.4202", "397.922, 263.266, 40.0268, 0.4458", "398.536, 262.308, 40.2097, 0.3846", "399.12, 261.331, 40.4043, 0.3416", "399.803, 260.431, 40.6036, 0.3774", "400.53, 259.556, 40.7837, 0.3412", "401.273, 258.688, 40.906, 0.3136", "402.068, 257.868, 40.9503, 0.2996", "402.9, 257.084, 40.9444, 0.322", "403.722, 256.301, 40.8666, 0.358", "404.557, 255.524, 40.7526, 0.4506", "405.429, 254.785, 40.658, 0.4982", "406.3, 254.044, 40.5843, 0.501", "407.222, 253.37, 40.4975, 0.4644", "408.195, 252.774, 40.3922, 0.3708", "409.195, 252.221, 40.2721, 0.321", "410.217, 251.71, 40.1534, 0.3148", "411.193, 251.116, 40.0086, 0.3434", "412.151, 250.495, 39.828, 0.4298", "413.19, 250.022, 39.6323, 0.428", "414.271, 249.675, 39.3809, 0.5254", "415.34, 249.407, 39.0214, 0.445", "416.426, 249.151, 38.6092, 0.4184", "417.527, 248.993, 38.1676, 0.4622", "418.623, 248.976, 37.7082, 0.5492", "419.731, 248.884, 37.2817, 0.4524", "420.833, 248.621, 37.0191, 0.3828", "421.812, 248.064, 36.923, 0.4074", "422.672, 247.336, 36.9438, 0.3918", "423.401, 246.48, 37.0314, 0.4326", "424.179, 245.644, 37.0734, 0.3982", "424.958, 244.815, 36.9944, 0.41", "425.773, 244.046, 36.7492, 0.524", "426.709, 243.504, 36.3266, 0.5156", "427.776, 243.314, 35.7837, 0.4232", "428.895, 243.448, 35.226, 0.397", "430.03, 243.333, 34.727, 0.3304", "431.081, 242.892, 34.2773, 0.2938", "432.165, 242.599, 33.8159, 0.2628", "433.058, 242.505, 33.1831, 0.2542", "433.963, 243.101, 32.5634, 0.2288", "435.063, 242.871, 31.36, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "367.91, 339.539, 43.68, 0.624", "368.707, 338.517, 44.1151, 0.5304", "369.788, 338.595, 45.1752, 0.3538", "370.884, 338.805, 45.6134, 0.2802", "371.879, 339.244, 46.1026, 0.285", "372.32, 340.132, 46.683, 0.2938", "372.688, 341.074, 47.3519, 0.3112", "373.406, 341.852, 48.0304, 0.3384", "374.421, 342.158, 48.5766, 0.4134", "375.553, 342.072, 48.9488, 0.4334", "376.661, 342.081, 49.2727, 0.3606", "377.719, 342.422, 49.5617, 0.3022", "378.687, 342.992, 49.7336, 0.2788", "379.601, 343.659, 49.8873, 0.2824", "380.528, 344.27, 50.1494, 0.2888", "381.525, 344.751, 50.5053, 0.302", "382.612, 345.046, 50.8788, 0.32", "383.712, 345.089, 51.3027, 0.3844", "384.807, 344.977, 51.7768, 0.3542", "385.917, 344.851, 52.1175, 0.3386", "387.054, 344.814, 52.3692, 0.342", "388.159, 344.754, 52.6537, 0.4198", "389.238, 344.593, 52.9836, 0.4452", "390.327, 344.432, 53.319, 0.3836", "391.458, 344.365, 53.5721, 0.3396", "392.565, 344.283, 53.6346, 0.3736", "393.654, 344.188, 53.51, 0.3344", "394.786, 344.086, 53.3568, 0.301", "395.898, 343.865, 53.1815, 0.2764", "396.946, 343.687, 52.934, 0.278", "398.074, 343.563, 52.8251, 0.2808", "399.124, 343.231, 52.9715, 0.2862", "400.167, 342.843, 53.307, 0.2958", "401.226, 342.539, 53.7886, 0.3148", "402.301, 342.249, 54.3623, 0.345", "403.403, 342.042, 54.9774, 0.4254", "404.514, 342.098, 55.603, 0.457", "405.566, 342.396, 56.2372, 0.3988", "406.611, 342.717, 56.8714, 0.3988", "407.735, 342.689, 57.4431, 0.3338", "408.744, 342.261, 58.0079, 0.3", "409.819, 341.88, 58.4828, 0.2746", "410.753, 341.223, 58.8347, 0.2746", "411.457, 340.323, 59.1293, 0.2748", "412.131, 339.408, 59.4188, 0.275", "412.825, 338.562, 59.7845, 0.2752", "413.423, 337.615, 60.1622, 0.2758", "414.105, 336.709, 60.5175, 0.2768", "415.049, 336.063, 60.7827, 0.2796", "415.955, 335.571, 61.145, 0.2796", "417.049, 335.247, 61.3536, 0.305", "418.132, 335.535, 61.32, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "278.106, 343.951, 46.4131, 0.4244", "276.992, 344.043, 46.2039, 0.4188", "275.877, 344.007, 45.9172, 0.4788", "274.744, 343.882, 45.6333, 0.5034", "273.604, 343.849, 45.369, 0.5104", "272.485, 344.034, 45.0873, 0.4826", "271.377, 344.247, 44.7516, 0.3994", "270.259, 344.247, 44.3817, 0.4", "269.145, 344.071, 43.9748, 0.3358", "268.051, 343.812, 43.5294, 0.3036", "266.976, 343.505, 43.0525, 0.2814", "265.88, 343.31, 42.5687, 0.2872", "264.765, 343.31, 42.0997, 0.299", "263.639, 343.325, 41.6668, 0.3146", "262.517, 343.162, 41.3031, 0.3744", "261.417, 342.859, 41.0351, 0.3356", "260.319, 342.534, 40.84, 0.303", "259.233, 342.186, 40.6664, 0.2802", "258.157, 341.815, 40.4863, 0.285", "257.077, 341.452, 40.2982, 0.2938", "255.999, 341.086, 40.0949, 0.3112", "254.931, 340.682, 39.8868, 0.3384", "253.854, 340.301, 39.6953, 0.4132", "252.747, 340.015, 39.5212, 0.4332", "251.646, 339.712, 39.3434, 0.36", "250.632, 339.209, 39.1303, 0.3014", "249.7, 338.574, 38.8634, 0.2772", "248.704, 338.057, 38.5482, 0.2792", "247.614, 337.795, 38.2091, 0.2834", "246.482, 337.716, 37.8846, 0.2906", "245.339, 337.677, 37.6065, 0.3056", "244.203, 337.557, 37.378, 0.3266", "243.097, 337.274, 37.1806, 0.3978", "242.034, 336.861, 36.979, 0.3736", "241.009, 336.394, 36.7256, 0.3992", "240.026, 335.878, 36.402, 0.3346", "239.057, 335.316, 36.05, 0.3014", "238.041, 334.803, 35.733, 0.2772", "236.973, 334.398, 35.483, 0.2794", "235.912, 333.971, 35.3007, 0.2836", "234.894, 333.45, 35.1725, 0.291", "233.858, 332.967, 35.0762, 0.3062", "232.774, 332.608, 34.9779, 0.3276", "231.7, 332.237, 34.8415, 0.3996", "230.675, 331.758, 34.6662, 0.377", "229.677, 331.205, 34.491, 0.4056", "228.714, 330.59, 34.3482, 0.3464", "227.815, 329.884, 34.2443, 0.3242", "226.986, 329.097, 34.176, 0.3142", "226.223, 328.246, 34.1356, 0.3734", "225.545, 327.325, 34.111, 0.334", "224.926, 326.363, 34.0886, 0.3002", "224.264, 325.431, 34.0595, 0.2748", "223.524, 324.56, 34.0189, 0.275", "222.808, 323.668, 33.9646, 0.2754", "222.244, 322.676, 33.8904, 0.2762", "221.894, 321.594, 33.7772, 0.2774", "221.68, 320.486, 33.6056, 0.28", "221.569, 319.359, 33.4057, 0.2846", "221.565, 318.22, 33.2242, 0.2928", "221.562, 317.079, 33.0761, 0.3096", "221.412, 315.948, 32.9857, 0.3342", "221.051, 314.867, 32.9795, 0.4118", "220.593, 313.826, 33.0672, 0.3994", "220.226, 312.76, 33.2416, 0.448", "219.962, 311.655, 33.4513, 0.4206", "219.694, 310.544, 33.6426, 0.4818", "219.413, 309.445, 33.7607, 0.509", "219.129, 308.344, 33.8349, 0.522", "218.891, 307.23, 33.957, 0.4978", "218.855, 306.142, 34.2152, 0.4586", "218.927, 305.038, 34.5668, 0.36", "219.172, 303.927, 34.9174, 0.3012", "219.711, 302.922, 35.2419, 0.2768", "220.376, 302.006, 35.5799, 0.2786", "221.049, 301.094, 35.9134, 0.282", "221.745, 300.187, 36.2054, 0.2886", "222.493, 299.325, 36.4994, 0.3002", "223.318, 298.534, 36.7956, 0.3242", "223.874, 297.545, 37.1406, 0.3562", "224.036, 296.453, 37.5861, 0.477", "224.251, 295.405, 38.1556, 0.4018", "224.754, 294.396, 38.7646, 0.3412", "224.766, 293.268, 39.3789, 0.305", "224.266, 292.277, 40.0148, 0.3248", "223.876, 291.241, 40.6434, 0.3982", "223.494, 290.188, 41.2224, 0.356", "223.309, 289.318, 42.84, 0.4576" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "278.106, 343.951, 46.4131, 0.4244", "276.865, 344.561, 46.8476, 0.5734", "275.826, 345.001, 47.4547, 0.4502", "274.737, 345.048, 47.742, 0.3784", "273.609, 345.03, 48.0701, 0.3996", "272.479, 345.149, 48.4014, 0.3772", "271.351, 345.272, 48.7432, 0.4058", "270.241, 345.509, 49.016, 0.3464", "269.123, 345.718, 49.2806, 0.3242", "268.004, 345.674, 49.6009, 0.3142", "266.872, 345.672, 49.9635, 0.3736", "265.746, 345.799, 50.3639, 0.3344", "264.613, 345.791, 50.7993, 0.3008", "263.575, 345.411, 51.3128, 0.2762", "262.641, 344.822, 51.8854, 0.2776", "261.586, 344.47, 52.4796, 0.2802", "260.498, 344.283, 53.1014, 0.285", "259.451, 344.017, 53.762, 0.2938", "258.37, 344.021, 54.4345, 0.3112", "257.241, 344.145, 55.0057, 0.3384", "256.1, 344.206, 55.4758, 0.413", "254.987, 344.284, 55.932, 0.433", "253.902, 344.512, 56.3811, 0.3596", "252.831, 344.877, 56.779, 0.3006", "251.704, 345.053, 57.1161, 0.2756", "250.562, 345.012, 57.3978, 0.2766", "249.424, 345.105, 57.6442, 0.2782", "248.295, 345.279, 57.8665, 0.2814", "247.159, 345.162, 58.0672, 0.287", "246.074, 344.855, 58.3271, 0.2988", "244.951, 344.668, 58.609, 0.314", "243.853, 344.929, 58.9355, 0.3734", "242.852, 345.447, 59.3006, 0.3338", "241.766, 345.805, 59.6358, 0.3", "240.671, 346.112, 59.9838, 0.2746", "239.635, 346.56, 60.3635, 0.2746", "238.681, 347.132, 60.8026, 0.2746", "237.556, 347.325, 61.2195, 0.2746", "236.426, 347.482, 61.6314, 0.2746", "235.373, 347.817, 62.1214, 0.2746", "234.319, 348.171, 62.6545, 0.2744", "233.255, 348.405, 63.247, 0.2744", "232.137, 348.508, 63.8313, 0.2742", "231.033, 348.796, 64.3639, 0.274", "230.069, 349.375, 64.8903, 0.2736", "229.208, 350.002, 65.476, 0.2728", "228.176, 350.411, 66.0593, 0.2712", "227.039, 350.521, 66.5521, 0.2684", "225.967, 350.867, 67.0169, 0.2628", "224.926, 351.298, 67.4506, 0.2542", "223.835, 351.491, 67.8689, 0.2288", "222.737, 351.78, 68.6, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "344.891, 321.273, 47.9682, 0.5068", "344.271, 320.665, 48.1592, 0.5518", "343.533, 319.793, 48.3249, 0.617", "342.909, 318.845, 48.4674, 0.5982", "342.287, 317.921, 48.7099, 0.5556", "341.696, 316.942, 48.9451, 0.513", "341.128, 315.952, 49.1834, 0.4878", "340.62, 314.941, 49.4768, 0.4088", "339.958, 314.023, 49.8134, 0.4174", "339.172, 313.221, 50.1844, 0.3678", "338.414, 312.487, 50.652, 0.3648", "337.734, 311.663, 51.1585, 0.3854", "336.991, 310.805, 51.5452, 0.526", "336.084, 310.118, 51.7882, 0.5182", "335.225, 309.386, 51.9313, 0.4338", "334.531, 308.477, 52.0318, 0.388", "333.772, 307.64, 52.1511, 0.4526", "332.957, 306.91, 52.3944, 0.5318", "332.175, 306.144, 52.7117, 0.4188", "331.332, 305.376, 52.9676, 0.3258", "330.431, 304.723, 53.2372, 0.2754", "329.469, 304.238, 53.5783, 0.2762", "328.432, 303.845, 53.8969, 0.2774", "327.354, 303.479, 54.0848, 0.28", "326.28, 303.137, 54.1288, 0.2846", "325.232, 302.721, 54.1033, 0.293", "324.235, 302.229, 54.0126, 0.3096", "323.206, 301.873, 53.8563, 0.3344", "322.189, 301.465, 53.8194, 0.411", "321.374, 300.943, 54.0834, 0.4044", "320.647, 300.318, 54.5843, 0.4258", "319.749, 299.723, 55.137, 0.5312", "318.779, 299.153, 55.592, 0.6378", "317.842, 298.502, 55.9121, 0.8088", "316.91, 297.841, 56.1156, 0.7966", "315.985, 297.211, 56.264, 0.7704", "315.003, 296.715, 56.3142, 0.5114", "314.117, 296.125, 56.1904, 0.3658", "313.315, 295.372, 55.9952, 0.3022", "312.446, 294.647, 55.8715, 0.3266", "311.513, 294.01, 55.8508, 0.3668", "310.487, 293.538, 55.8958, 0.4664", "309.447, 293.082, 55.9992, 0.5288", "308.504, 292.454, 56.133, 0.5524", "307.572, 291.806, 56.2089, 0.5848", "306.594, 291.329, 56.14, 0.4708", "305.606, 290.846, 56.0706, 0.4192", "304.646, 290.283, 56.1232, 0.4636", "303.693, 289.687, 56.182, 0.552", "302.783, 289.003, 56.2355, 0.4572", "301.82, 288.412, 56.3584, 0.3928", "300.794, 287.927, 56.5354, 0.4198", "299.757, 287.503, 56.7554, 0.4456", "298.701, 287.13, 56.996, 0.3828", "297.629, 286.768, 57.1542, 0.3444", "296.564, 286.443, 57.1679, 0.3528", "295.476, 286.125, 57.1379, 0.4398", "294.401, 285.771, 57.1516, 0.483", "293.319, 285.417, 57.1738, 0.4496", "292.26, 284.989, 57.1855, 0.4822", "291.307, 284.365, 57.199, 0.5396", "290.4, 283.67, 57.1875, 0.4332", "289.469, 283.036, 57.08, 0.3536", "288.609, 282.323, 56.8733, 0.3216", "287.937, 281.414, 56.6605, 0.3874", "287.325, 280.46, 56.5216, 0.3594", "286.454, 279.74, 56.4052, 0.3482", "285.374, 279.4, 56.3052, 0.3598", "284.251, 279.218, 56.1543, 0.4536", "283.204, 278.878, 55.8779, 0.504", "282.179, 278.438, 55.5164, 0.5112", "281.124, 278.035, 55.1183, 0.4844", "280.065, 277.66, 54.703, 0.4028", "279.056, 277.161, 54.2979, 0.406", "278.05, 276.62, 53.9759, 0.347", "276.989, 276.196, 53.7295, 0.3256", "275.951, 275.715, 53.536, 0.3166", "274.973, 275.127, 53.3582, 0.3782", "273.94, 274.639, 53.2028, 0.3428", "272.847, 274.346, 53.0166, 0.3162", "271.79, 274.267, 52.7156, 0.3058", "270.651, 274.22, 52.4849, 0.3272", "269.537, 274.406, 52.3886, 0.3986", "268.42, 274.649, 52.3566, 0.3754", "267.288, 274.798, 52.3776, 0.4026", "266.147, 274.876, 52.4026, 0.3408", "265.011, 274.998, 52.4115, 0.3124", "263.914, 275.32, 52.4138, 0.2988", "262.888, 275.823, 52.4168, 0.314", "261.921, 276.435, 52.4073, 0.3734", "261.085, 277.213, 52.3768, 0.3338", "260.342, 278.083, 52.3384, 0.3", "259.551, 278.907, 52.2889, 0.2744", "258.709, 279.679, 52.2609, 0.2742", "257.81, 280.384, 52.2385, 0.274", "256.857, 281.016, 52.1847, 0.2736", "255.802, 281.456, 52.0954, 0.2728", "254.69, 281.715, 51.9613, 0.2712", "253.603, 282.028, 51.7591, 0.2684", "252.586, 282.526, 51.5152, 0.2628", "251.61, 283.118, 51.2854, 0.2542", "250.562, 283.504, 51.0199, 0.2288", "249.506, 283.941, 50.68, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "344.891, 321.273, 47.9682, 0.5068", "344.396, 321.199, 49.0025, 0.2288", "343.486, 321.086, 50.885, 0.2794", "342.484, 321.004, 51.6905, 0.2838", "341.455, 320.804, 52.5767, 0.2914", "340.488, 320.311, 53.466, 0.3068", "339.584, 319.653, 54.2982, 0.3288", "338.673, 319.002, 55.062, 0.4018", "337.702, 318.467, 55.7614, 0.3812", "336.631, 318.167, 56.4234, 0.4134", "335.519, 318.142, 57.0676, 0.3608", "334.469, 318.39, 57.7506, 0.3504", "333.497, 318.812, 58.4844, 0.365", "332.506, 319.282, 59.2066, 0.4572", "331.538, 319.838, 59.883, 0.5406", "330.583, 320.415, 60.5144, 0.4348", "329.564, 320.897, 61.0775, 0.3566", "328.508, 321.313, 61.567, 0.327", "327.484, 321.787, 62.025, 0.3986", "326.448, 322.215, 62.4658, 0.3752", "325.33, 322.331, 62.8891, 0.4022", "324.213, 322.168, 63.3086, 0.3402", "323.132, 321.868, 63.7428, 0.3116", "322.06, 321.569, 64.1964, 0.296", "320.947, 321.494, 64.6419, 0.315", "319.819, 321.625, 65.0485, 0.3456", "318.684, 321.648, 65.3985, 0.4262", "317.57, 321.421, 65.7112, 0.4582", "316.472, 321.146, 66.0302, 0.4014", "315.342, 321.035, 66.3533, 0.4036", "314.207, 321.008, 66.6938, 0.3428", "313.082, 320.956, 67.0712, 0.3162", "311.977, 320.841, 67.506, 0.3058", "310.867, 320.724, 67.9538, 0.3268", "309.729, 320.647, 68.3522, 0.3982", "308.603, 320.556, 68.7467, 0.3744", "307.481, 320.448, 69.1362, 0.4008", "306.354, 320.286, 69.4845, 0.3376", "305.28, 319.929, 69.8104, 0.3068", "304.358, 319.3, 70.1355, 0.287", "303.513, 318.638, 70.4822, 0.2988", "302.453, 318.485, 70.8831, 0.3142", "301.323, 318.542, 71.2337, 0.3734", "300.181, 318.588, 71.4966, 0.334", "299.04, 318.609, 71.6988, 0.3002", "297.9, 318.518, 71.832, 0.2748", "296.925, 318.393, 72.0202, 0.2752", "296.048, 318.302, 72.2837, 0.2756", "295.07, 318.249, 72.2705, 0.2766", "294.129, 318.122, 72.0493, 0.2784", "293.033, 317.807, 71.8558, 0.2816", "291.977, 317.419, 71.6531, 0.2874", "290.933, 317.021, 71.4193, 0.2996", "289.851, 316.689, 71.2614, 0.3158", "288.79, 316.422, 71.3297, 0.3764", "287.718, 316.29, 71.5837, 0.3396", "286.596, 316.374, 71.86, 0.3106", "285.457, 316.461, 72.1235, 0.2938", "284.315, 316.454, 72.3481, 0.3112", "283.172, 316.45, 72.5354, 0.3384", "282.065, 316.559, 72.7664, 0.4132", "281.036, 316.831, 73.1066, 0.433", "279.965, 317.102, 73.488, 0.36", "278.872, 317.215, 73.7324, 0.3012", "277.783, 317.401, 73.8461, 0.2768", "276.806, 317.91, 74.0194, 0.2786", "275.769, 318.242, 74.3044, 0.282", "274.639, 318.207, 74.5912, 0.2884", "273.528, 318.011, 74.947, 0.2996", "272.431, 317.806, 75.3959, 0.3232", "271.329, 317.578, 75.8845, 0.3542", "270.236, 317.283, 76.3605, 0.4732", "269.211, 316.848, 76.8597, 0.3948", "268.177, 316.429, 77.3786, 0.3284", "267.106, 316.111, 77.8935, 0.2802", "266.039, 315.736, 78.3681, 0.285", "264.978, 315.361, 78.8108, 0.2938", "263.932, 315.045, 79.2624, 0.3112", "262.815, 314.996, 79.6536, 0.3382", "261.698, 315.207, 79.9375, 0.413", "260.608, 315.548, 80.0923, 0.4328", "259.514, 315.88, 80.1206, 0.3594", "258.45, 316.298, 80.0164, 0.3", "257.365, 316.648, 79.7885, 0.2748", "256.278, 316.927, 79.3391, 0.275", "255.309, 317.077, 78.5781, 0.2752", "254.363, 317.099, 77.5673, 0.2758", "253.508, 317.394, 76.375, 0.2768", "252.942, 317.636, 74.9879, 0.2788", "252.07, 317.712, 73.6058, 0.2824", "250.974, 317.621, 72.4564, 0.2882", "250.01, 317.01, 71.6386, 0.305", "249.027, 316.428, 71.0744, 0.305", "248.591, 315.401, 70.28, 0.4576" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_35", "dend_30", "dend_23", "dend_7", "dend_0", "dend_42", "dend_41", "dend_37", "dend_36", "dend_34", "dend_31", "dend_27", "dend_24", "dend_17", "dend_8", "dend_4", "dend_1", "dend_39", "dend_38", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25", "dend_18", "dend_12", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_20", "dend_19", "dend_16", "dend_13", "dend_11", "dend_10", "dend_22", "dend_21", "dend_15", "dend_14" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24825",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_7", "dend_0", "dend_0", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.8634359"
  }, {
    "group" : "axon",
    "value" : "1.8634359"
  }, {
    "group" : "dend",
    "value" : "1.8634359"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "64.64866"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "5.3688756E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.050411243",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.3232698E-7",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.01599168",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.0404564",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.058745127",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0024842038",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.9013386E-6",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "3.6310218E-4",
    "erev" : "-86.78281"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "8.2260347E-4",
    "erev" : "-86.78281"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "7.991632E-7",
    "erev" : "-86.78281"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "5.918445E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.007806752",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_472306616",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472306616

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_7
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_40, dend_35, dend_30, dend_23, dend_7, dend_0, dend_42, dend_41, dend_37, dend_36, dend_34, dend_31, dend_27, dend_24, dend_17, dend_8, dend_4, dend_1, dend_39, dend_38, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_18, dend_12, dend_9, dend_6, dend_5, dend_3, dend_2, dend_20, dend_19, dend_16, dend_13, dend_11, dend_10, dend_22, dend_21, dend_15, dend_14]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_24825, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_24825
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_7, dend_0, dend_0, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_472306616
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_40(0), soma_0(0.5)
    connect dend_35(0), soma_0(0.5)
    connect dend_30(0), soma_0(0.5)
    connect dend_23(0), soma_0(0.5)
    connect dend_7(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_17(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 364.261, 350.064, 38.64, 13.9332 ) }
    soma_0 { pt3dadd( 371.228, 350.064, 38.64, 13.9332 ) }
    soma_0 { pt3dadd( 378.195, 350.064, 38.64, 13.9332 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 371.228, 350.064, 38.64, 1.0 ) }
    axon_0 { pt3dadd( 377.069, 363.88, 38.64, 1.0 ) }
    axon_0 { pt3dadd( 382.911, 377.696, 38.64, 1.0 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 6/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 373.336, 345.252, 33.483, 0.3108 ) }
    dend_40 { pt3dadd( 374.198, 344.638, 32.9977, 0.3436 ) }
    dend_40 { pt3dadd( 375.223, 344.161, 32.7807, 0.393 ) }
    dend_40 { pt3dadd( 376.235, 343.652, 32.629, 0.541 ) }
    dend_40 { pt3dadd( 377.327, 343.53, 32.5674, 0.5412 ) }
    dend_40 { pt3dadd( 378.435, 343.719, 32.4652, 0.501 ) }
    dend_40 { pt3dadd( 379.555, 343.639, 32.3176, 0.3926 ) }
    dend_40 { pt3dadd( 380.441, 342.953, 32.1644, 0.3564 ) }
    dend_40 { pt3dadd( 381.127, 342.042, 31.9446, 0.4058 ) }
    dend_40 { pt3dadd( 381.983, 341.311, 31.6072, 0.3886 ) }
    dend_40 { pt3dadd( 382.953, 340.83, 31.1114, 0.4264 ) }
    dend_40 { pt3dadd( 383.926, 340.415, 30.4814, 0.3872 ) }
    dend_40 { pt3dadd( 384.967, 340.08, 29.7928, 0.3884 ) }
    dend_40 { pt3dadd( 385.986, 339.606, 29.1147, 0.4898 ) }
    dend_40 { pt3dadd( 386.818, 338.853, 28.4726, 0.425 ) }
    dend_40 { pt3dadd( 387.347, 337.874, 27.8618, 0.3868 ) }
    dend_40 { pt3dadd( 387.87, 336.974, 27.2121, 0.3776 ) }
    dend_40 { pt3dadd( 388.684, 336.357, 26.5364, 0.5174 ) }
    dend_40 { pt3dadd( 389.714, 335.875, 26.0478, 0.4726 ) }
    dend_40 { pt3dadd( 390.4, 334.964, 25.7079, 0.4938 ) }
    dend_40 { pt3dadd( 390.689, 333.886, 25.3748, 0.4832 ) }
    dend_40 { pt3dadd( 391.092, 332.815, 25.1394, 0.4782 ) }
    dend_40 { pt3dadd( 392.089, 332.268, 25.0077, 0.3974 ) }
    dend_40 { pt3dadd( 393.193, 331.989, 24.8417, 0.3664 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 30/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 370.761, 344.322, 39.0594, 0.2822 ) }
    dend_35 { pt3dadd( 370.522, 343.448, 37.4259, 0.2884 ) }
    dend_35 { pt3dadd( 370.289, 342.669, 36.6366, 0.3014 ) }
    dend_35 { pt3dadd( 369.933, 341.697, 35.88, 0.319 ) }
    dend_35 { pt3dadd( 369.539, 340.625, 35.2822, 0.3824 ) }
    dend_35 { pt3dadd( 369.773, 339.591, 34.7407, 0.3504 ) }
    dend_35 { pt3dadd( 370.476, 338.709, 34.2986, 0.3316 ) }
    dend_35 { pt3dadd( 371.139, 337.779, 33.9867, 0.328 ) }
    dend_35 { pt3dadd( 371.403, 336.695, 33.6865, 0.399 ) }
    dend_35 { pt3dadd( 371.127, 335.613, 33.3561, 0.3824 ) }
    dend_35 { pt3dadd( 370.766, 334.57, 32.9574, 0.3842 ) }
    dend_35 { pt3dadd( 370.317, 333.704, 32.4285, 0.4592 ) }
    dend_35 { pt3dadd( 369.613, 332.84, 31.9547, 0.4784 ) }
    dend_35 { pt3dadd( 368.918, 331.981, 31.7229, 0.6392 ) }
    dend_35 { pt3dadd( 368.121, 331.163, 31.5974, 0.5572 ) }
    dend_35 { pt3dadd( 367.34, 330.354, 31.4709, 0.421 ) }
    dend_35 { pt3dadd( 367.018, 329.346, 31.561, 0.32 ) }
    dend_35 { pt3dadd( 366.817, 328.226, 31.6786, 0.3128 ) }
    dend_35 { pt3dadd( 366.312, 327.208, 31.768, 0.3398 ) }
    dend_35 { pt3dadd( 365.938, 326.153, 31.6711, 0.4222 ) }
    dend_35 { pt3dadd( 365.405, 325.171, 31.4381, 0.4186 ) }
    dend_35 { pt3dadd( 364.629, 324.331, 31.2007, 0.4846 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 52/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 374.563, 355.607, 41.6119, 0.3986 ) }
    dend_30 { pt3dadd( 375.142, 356.434, 43.1799, 0.3818 ) }
    dend_30 { pt3dadd( 375.779, 356.979, 43.9401, 0.3832 ) }
    dend_30 { pt3dadd( 376.844, 357.224, 44.7042, 0.4562 ) }
    dend_30 { pt3dadd( 377.817, 357.823, 45.3412, 0.4786 ) }
    dend_30 { pt3dadd( 378.497, 358.717, 45.9024, 0.61 ) }
    dend_30 { pt3dadd( 379.009, 359.71, 46.3809, 0.6472 ) }
    dend_30 { pt3dadd( 379.564, 360.69, 46.7457, 0.5748 ) }
    dend_30 { pt3dadd( 380.151, 361.67, 46.9703, 0.4388 ) }
    dend_30 { pt3dadd( 380.798, 362.612, 47.0705, 0.4256 ) }
    dend_30 { pt3dadd( 381.669, 363.326, 47.0212, 0.3844 ) }
    dend_30 { pt3dadd( 382.721, 363.768, 46.8863, 0.389 ) }
    dend_30 { pt3dadd( 383.763, 364.188, 46.8006, 0.462 ) }
    dend_30 { pt3dadd( 384.649, 364.898, 46.7219, 0.5132 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 66/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 372.428, 355.63, 40.6042, 0.2808 ) }
    dend_23 { pt3dadd( 372.645, 356.75, 40.4519, 0.286 ) }
    dend_23 { pt3dadd( 373.093, 357.802, 40.3917, 0.2958 ) }
    dend_23 { pt3dadd( 373.789, 358.692, 40.248, 0.3138 ) }
    dend_23 { pt3dadd( 374.524, 359.552, 40.0425, 0.3482 ) }
    dend_23 { pt3dadd( 375.321, 360.369, 39.8289, 0.4062 ) }
    dend_23 { pt3dadd( 376.112, 361.192, 39.6063, 0.5428 ) }
    dend_23 { pt3dadd( 376.63, 362.201, 39.3551, 0.6546 ) }
    dend_23 { pt3dadd( 376.871, 363.318, 39.1392, 0.8618 ) }
    dend_23 { pt3dadd( 376.634, 364.342, 39.0928, 0.7888 ) }
    dend_23 { pt3dadd( 376.732, 365.47, 38.9273, 0.5842 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 77/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 367.509, 345.718, 38.1335, 0.3594 ) }
    dend_7 { pt3dadd( 366.728, 344.903, 37.9117, 0.4576 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 79/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 367.345, 353.729, 43.1077, 0.2746 ) }
    dend_0 { pt3dadd( 366.623, 354.617, 42.7776, 0.2748 ) }
    dend_0 { pt3dadd( 365.737, 355.338, 42.6493, 0.275 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 82/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 382.911, 377.696, 38.64, 1.0 ) }
    axon_1 { pt3dadd( 388.752, 391.512, 38.64, 1.0 ) }
    axon_1 { pt3dadd( 394.593, 405.328, 38.64, 1.0 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 85/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 393.193, 331.989, 24.8417, 0.3664 ) }
    dend_42 { pt3dadd( 393.535, 332.116, 24.6287, 0.418 ) }
    dend_42 { pt3dadd( 394.585, 332.524, 24.337, 0.442 ) }
    dend_42 { pt3dadd( 395.495, 333.163, 23.9725, 0.3766 ) }
    dend_42 { pt3dadd( 396.356, 333.876, 23.5547, 0.3318 ) }
    dend_42 { pt3dadd( 397.413, 334.244, 23.1215, 0.3354 ) }
    dend_42 { pt3dadd( 398.526, 334.46, 22.7235, 0.378 ) }
    dend_42 { pt3dadd( 399.584, 334.88, 22.3779, 0.5122 ) }
    dend_42 { pt3dadd( 400.519, 335.526, 22.0788, 0.4926 ) }
    dend_42 { pt3dadd( 401.3, 336.346, 21.8079, 0.3858 ) }
    dend_42 { pt3dadd( 402.195, 337.056, 21.6272, 0.3022 ) }
    dend_42 { pt3dadd( 403.212, 337.578, 21.486, 0.2784 ) }
    dend_42 { pt3dadd( 404.069, 338.335, 21.376, 0.2818 ) }
    dend_42 { pt3dadd( 404.983, 339.005, 21.2263, 0.288 ) }
    dend_42 { pt3dadd( 405.978, 339.557, 21.062, 0.3004 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( 406.979, 340.098, 20.8845, 0.3172 ) }
    dend_42 { pt3dadd( 407.716, 340.967, 20.7667, 0.3792 ) }
    dend_42 { pt3dadd( 408.337, 341.919, 20.6392, 0.3448 ) }
    dend_42 { pt3dadd( 409.207, 342.594, 20.4704, 0.3198 ) }
    dend_42 { pt3dadd( 410.267, 343.022, 20.405, 0.3136 ) }
    dend_42 { pt3dadd( 411.387, 343.25, 20.4275, 0.3362 ) }
    dend_42 { pt3dadd( 412.518, 343.087, 20.5001, 0.4406 ) }
    dend_42 { pt3dadd( 413.501, 343.297, 20.7965, 0.3304 ) }
    dend_42 { pt3dadd( 414.471, 343.886, 21.56, 0.2288 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 9/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 393.193, 331.989, 24.8417, 0.3664 ) }
    dend_41 { pt3dadd( 394.04, 331.616, 24.3581, 0.2288 ) }
    dend_41 { pt3dadd( 394.616, 330.744, 23.7077, 0.4058 ) }
    dend_41 { pt3dadd( 395.118, 329.728, 23.4679, 0.3884 ) }
    dend_41 { pt3dadd( 395.708, 328.749, 23.2495, 0.4278 ) }
    dend_41 { pt3dadd( 395.913, 327.642, 23.0063, 0.3824 ) }
    dend_41 { pt3dadd( 395.753, 326.527, 22.7013, 0.4152 ) }
    dend_41 { pt3dadd( 396.033, 325.467, 22.3132, 0.3654 ) }
    dend_41 { pt3dadd( 396.842, 324.725, 21.8604, 0.353 ) }
    dend_41 { pt3dadd( 397.824, 324.143, 21.4517, 0.3994 ) }
    dend_41 { pt3dadd( 398.413, 323.185, 21.03, 0.3766 ) }
    dend_41 { pt3dadd( 398.48, 322.123, 20.5328, 0.4048 ) }
    dend_41 { pt3dadd( 398.796, 321.08, 20.0284, 0.3446 ) }
    dend_41 { pt3dadd( 399.587, 320.256, 19.64, 0.322 ) }
    dend_41 { pt3dadd( 400.493, 319.564, 19.3394, 0.305 ) }
    dend_41 { pt3dadd( 400.988, 318.541, 19.0932, 0.3814 ) }
    dend_41 { pt3dadd( 401.315, 317.46, 19.04, 0.2288 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 26/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 364.629, 324.331, 31.2007, 0.4846 ) }
    dend_37 { pt3dadd( 364.252, 323.204, 30.7852, 0.6244 ) }
    dend_37 { pt3dadd( 363.666, 322.33, 30.2705, 0.6452 ) }
    dend_37 { pt3dadd( 363.026, 321.398, 29.839, 0.709 ) }
    dend_37 { pt3dadd( 362.288, 320.525, 29.5148, 0.705 ) }
    dend_37 { pt3dadd( 361.491, 319.707, 29.2757, 0.6058 ) }
    dend_37 { pt3dadd( 360.816, 318.793, 29.0805, 0.6384 ) }
    dend_37 { pt3dadd( 360.394, 317.737, 28.9862, 0.7912 ) }
    dend_37 { pt3dadd( 360.087, 316.641, 28.9736, 0.8544 ) }
    dend_37 { pt3dadd( 359.709, 315.563, 28.982, 0.6684 ) }
    dend_37 { pt3dadd( 359.528, 314.447, 29.0245, 0.65 ) }
    dend_37 { pt3dadd( 359.326, 313.323, 29.0122, 0.6336 ) }
    dend_37 { pt3dadd( 359.074, 312.234, 28.8655, 0.5176 ) }
    dend_37 { pt3dadd( 358.866, 311.119, 28.639, 0.4882 ) }
    dend_37 { pt3dadd( 358.772, 309.979, 28.4127, 0.449 ) }
    dend_37 { pt3dadd( 358.674, 308.859, 28.1168, 0.5296 ) }
    dend_37 { pt3dadd( 358.165, 307.918, 27.718, 0.6216 ) }
    dend_37 { pt3dadd( 357.641, 306.942, 27.3171, 0.6144 ) }
    dend_37 { pt3dadd( 356.994, 306.002, 27.0112, 0.5478 ) }
    dend_37 { pt3dadd( 356.139, 305.243, 26.8005, 0.6822 ) }
    dend_37 { pt3dadd( 355.244, 304.553, 26.7345, 0.5954 ) }
    dend_37 { pt3dadd( 354.495, 303.71, 26.784, 0.6932 ) }
    dend_37 { pt3dadd( 353.884, 302.817, 26.9639, 0.5328 ) }
    dend_37 { pt3dadd( 353.428, 301.801, 26.9851, 0.5212 ) }
    dend_37 { pt3dadd( 352.977, 300.785, 26.8598, 0.4868 ) }
    dend_37 { pt3dadd( 352.726, 299.693, 26.6352, 0.4848 ) }
    dend_37 { pt3dadd( 352.418, 298.597, 26.3853, 0.4092 ) }
    dend_37 { pt3dadd( 351.779, 297.653, 26.1412, 0.3894 ) }
    dend_37 { pt3dadd( 351.399, 296.601, 26.0461, 0.4556 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 55/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 364.629, 324.331, 31.2007, 0.4846 ) }
    dend_36 { pt3dadd( 364.475, 324.241, 33.9769, 0.2288 ) }
    dend_36 { pt3dadd( 364.297, 324.136, 37.9235, 0.2766 ) }
    dend_36 { pt3dadd( 364.119, 324.031, 39.6239, 0.2782 ) }
    dend_36 { pt3dadd( 364.108, 323.443, 41.5778, 0.2812 ) }
    dend_36 { pt3dadd( 364.108, 322.888, 43.6881, 0.2868 ) }
    dend_36 { pt3dadd( 364.108, 322.353, 45.8606, 0.2982 ) }
    dend_36 { pt3dadd( 364.091, 321.758, 47.9912, 0.3132 ) }
    dend_36 { pt3dadd( 363.803, 320.949, 49.9246, 0.3716 ) }
    dend_36 { pt3dadd( 363.237, 320.036, 51.5948, 0.3304 ) }
    dend_36 { pt3dadd( 362.883, 319.095, 53.0958, 0.2938 ) }
    dend_36 { pt3dadd( 362.749, 318.136, 54.4645, 0.2628 ) }
    dend_36 { pt3dadd( 362.72, 317.045, 55.6147, 0.2542 ) }
    dend_36 { pt3dadd( 362.544, 315.989, 56.6124, 0.2288 ) }
    dend_36 { pt3dadd( 362.276, 315.451, 59.0313, 0.2288 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 70/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 384.649, 364.898, 46.7219, 0.5132 ) }
    dend_34 { pt3dadd( 385.899, 364.392, 46.4097, 0.4232 ) }
    dend_34 { pt3dadd( 387.021, 364.197, 46.0947, 0.334 ) }
    dend_34 { pt3dadd( 388.151, 364.071, 45.7568, 0.2906 ) }
    dend_34 { pt3dadd( 389.264, 363.845, 45.3958, 0.3038 ) }
    dend_34 { pt3dadd( 390.331, 363.573, 44.9772, 0.3312 ) }
    dend_34 { pt3dadd( 391.38, 363.398, 44.4811, 0.3686 ) }
    dend_34 { pt3dadd( 392.479, 363.388, 44.0168, 0.5012 ) }
    dend_34 { pt3dadd( 393.616, 363.488, 43.6397, 0.4416 ) }
    dend_34 { pt3dadd( 394.747, 363.456, 43.3888, 0.4404 ) }
    dend_34 { pt3dadd( 395.872, 363.45, 43.241, 0.365 ) }
    dend_34 { pt3dadd( 396.953, 363.616, 43.0489, 0.3526 ) }
    dend_34 { pt3dadd( 398.019, 363.621, 42.7806, 0.3974 ) }
    dend_34 { pt3dadd( 399.128, 363.4, 42.574, 0.379 ) }
    dend_34 { pt3dadd( 400.22, 363.31, 42.3867, 0.3794 ) }
    dend_34 { pt3dadd( 401.289, 363.296, 42.0913, 0.4432 ) }
    dend_34 { pt3dadd( 402.373, 363.191, 41.7984, 0.4834 ) }
    dend_34 { pt3dadd( 403.498, 363.26, 41.6528, 0.4786 ) }
    dend_34 { pt3dadd( 404.589, 363.543, 41.6304, 0.3982 ) }
    dend_34 { pt3dadd( 405.69, 363.745, 41.6273, 0.3678 ) }
    dend_34 { pt3dadd( 406.795, 363.583, 41.5862, 0.4206 ) }
    dend_34 { pt3dadd( 407.888, 363.278, 41.5369, 0.447 ) }
    dend_34 { pt3dadd( 409.017, 363.146, 41.5041, 0.3856 ) }
    dend_34 { pt3dadd( 410.151, 363.112, 41.5226, 0.3498 ) }
    dend_34 { pt3dadd( 411.281, 363.008, 41.594, 0.3624 ) }
    dend_34 { pt3dadd( 412.398, 362.782, 41.676, 0.4586 ) }
    dend_34 { pt3dadd( 413.507, 362.548, 41.7802, 0.5132 ) }
    dend_34 { pt3dadd( 414.634, 362.423, 41.881, 0.5286 ) }
    dend_34 { pt3dadd( 415.77, 362.352, 41.8972, 0.516 ) }
    dend_34 { pt3dadd( 416.89, 362.191, 41.8317, 0.4634 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_34 { pt3dadd( 417.987, 361.875, 41.7382, 0.509 ) }
    dend_34 { pt3dadd( 419.085, 361.599, 41.6097, 0.5836 ) }
    dend_34 { pt3dadd( 420.172, 361.709, 41.4529, 0.5418 ) }
    dend_34 { pt3dadd( 421.236, 362.124, 41.3249, 0.4246 ) }
    dend_34 { pt3dadd( 422.3, 362.543, 41.2434, 0.3994 ) }
    dend_34 { pt3dadd( 423.31, 363.06, 41.1933, 0.3348 ) }
    dend_34 { pt3dadd( 424.221, 363.737, 41.2076, 0.3018 ) }
    dend_34 { pt3dadd( 425.194, 364.27, 41.3342, 0.278 ) }
    dend_34 { pt3dadd( 426.276, 364.458, 41.5828, 0.281 ) }
    dend_34 { pt3dadd( 427.394, 364.443, 41.8799, 0.2866 ) }
    dend_34 { pt3dadd( 428.534, 364.419, 42.1319, 0.2968 ) }
    dend_34 { pt3dadd( 429.674, 364.413, 42.3548, 0.3154 ) }
    dend_34 { pt3dadd( 430.77, 364.188, 42.5802, 0.352 ) }
    dend_34 { pt3dadd( 431.773, 363.664, 42.7818, 0.4098 ) }
    dend_34 { pt3dadd( 432.741, 363.058, 42.9248, 0.5656 ) }
    dend_34 { pt3dadd( 433.771, 362.571, 43.031, 0.6184 ) }
    dend_34 { pt3dadd( 434.874, 362.352, 43.1595, 0.4896 ) }
    dend_34 { pt3dadd( 435.999, 362.392, 43.3233, 0.4356 ) }
    dend_34 { pt3dadd( 437.121, 362.555, 43.4918, 0.3546 ) }
    dend_34 { pt3dadd( 438.242, 362.761, 43.6517, 0.3396 ) }
    dend_34 { pt3dadd( 439.351, 363.026, 43.7693, 0.3428 ) }
    dend_34 { pt3dadd( 440.425, 363.299, 43.7682, 0.4264 ) }
    dend_34 { pt3dadd( 441.506, 363.403, 43.6492, 0.4338 ) }
    dend_34 { pt3dadd( 442.606, 363.235, 43.5674, 0.4764 ) }
    dend_34 { pt3dadd( 443.577, 362.924, 43.699, 0.6452 ) }
    dend_34 { pt3dadd( 444.522, 362.578, 44.0163, 0.7498 ) }
    dend_34 { pt3dadd( 445.572, 362.224, 44.3162, 0.8112 ) }
    dend_34 { pt3dadd( 446.661, 362.123, 44.4422, 0.6542 ) }
    dend_34 { pt3dadd( 447.77, 362.042, 44.4206, 0.5332 ) }
    dend_34 { pt3dadd( 448.816, 361.625, 44.3243, 0.3988 ) }
    dend_34 { pt3dadd( 449.849, 361.165, 44.2562, 0.3988 ) }
    dend_34 { pt3dadd( 450.903, 360.726, 44.1834, 0.334 ) }
    dend_34 { pt3dadd( 451.938, 360.247, 44.1176, 0.3 ) }
    dend_34 { pt3dadd( 452.852, 359.582, 44.1448, 0.2746 ) }
    dend_34 { pt3dadd( 453.786, 358.922, 44.1806, 0.2748 ) }
    dend_34 { pt3dadd( 454.859, 358.541, 44.1834, 0.2748 ) }
    dend_34 { pt3dadd( 455.983, 358.336, 44.1731, 0.2752 ) }
    dend_34 { pt3dadd( 457.061, 357.958, 44.1454, 0.2756 ) }
    dend_34 { pt3dadd( 458.068, 357.417, 44.1062, 0.2766 ) }
    dend_34 { pt3dadd( 459.158, 357.077, 44.0686, 0.2782 ) }
    dend_34 { pt3dadd( 460.291, 356.964, 43.9874, 0.2814 ) }
    dend_34 { pt3dadd( 461.409, 356.925, 43.8295, 0.287 ) }
    dend_34 { pt3dadd( 462.548, 356.833, 43.6876, 0.2988 ) }
    dend_34 { pt3dadd( 463.625, 356.456, 43.5879, 0.3142 ) }
    dend_34 { pt3dadd( 464.554, 355.79, 43.5081, 0.3738 ) }
    dend_34 { pt3dadd( 465.522, 355.181, 43.4678, 0.3344 ) }
    dend_34 { pt3dadd( 466.611, 354.841, 43.4286, 0.301 ) }
    dend_34 { pt3dadd( 467.729, 354.602, 43.4179, 0.2766 ) }
    dend_34 { pt3dadd( 468.817, 354.249, 43.3826, 0.2782 ) }
    dend_34 { pt3dadd( 469.901, 353.891, 43.3541, 0.2814 ) }
    dend_34 { pt3dadd( 471.029, 353.71, 43.3353, 0.2872 ) }
    dend_34 { pt3dadd( 472.162, 353.554, 43.2928, 0.299 ) }
    dend_34 { pt3dadd( 473.285, 353.385, 43.1833, 0.3146 ) }
    dend_34 { pt3dadd( 474.391, 353.248, 42.9778, 0.3744 ) }
    dend_34 { pt3dadd( 475.526, 353.352, 42.7728, 0.3358 ) }
    dend_34 { pt3dadd( 476.6, 353.744, 42.6149, 0.3036 ) }
    dend_34 { pt3dadd( 477.673, 354.139, 42.4872, 0.2814 ) }
    dend_34 { pt3dadd( 478.75, 354.51, 42.3531, 0.287 ) }
    dend_34 { pt3dadd( 479.807, 354.94, 42.2318, 0.2986 ) }
    dend_34 { pt3dadd( 480.863, 355.371, 42.124, 0.314 ) }
    dend_34 { pt3dadd( 481.899, 355.854, 42.0305, 0.3734 ) }
    dend_34 { pt3dadd( 482.941, 356.325, 41.967, 0.3338 ) }
    dend_34 { pt3dadd( 483.991, 356.778, 41.9434, 0.2998 ) }
    dend_34 { pt3dadd( 485.006, 357.287, 41.9994, 0.274 ) }
    dend_34 { pt3dadd( 486.035, 357.78, 42.0885, 0.2736 ) }
    dend_34 { pt3dadd( 487.153, 358.021, 42.1697, 0.2728 ) }
    dend_34 { pt3dadd( 488.288, 358.073, 42.2064, 0.2712 ) }
    dend_34 { pt3dadd( 489.234, 358.707, 42.2218, 0.2684 ) }
    dend_34 { pt3dadd( 490.275, 359.181, 42.2537, 0.2628 ) }
    dend_34 { pt3dadd( 491.387, 359.389, 42.3634, 0.2542 ) }
    dend_34 { pt3dadd( 492.503, 359.563, 42.5354, 0.2288 ) }
    dend_34 { pt3dadd( 493.293, 360.36, 43.12, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 72/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 384.649, 364.898, 46.7219, 0.5132 ) }
    dend_31 { pt3dadd( 385.384, 365.771, 47.6221, 0.4576 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 74/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 376.732, 365.47, 38.9273, 0.5842 ) }
    dend_27 { pt3dadd( 376.485, 366.08, 38.5706, 0.5418 ) }
    dend_27 { pt3dadd( 376.23, 367.129, 38.0719, 0.429 ) }
    dend_27 { pt3dadd( 376.013, 368.196, 37.4721, 0.3862 ) }
    dend_27 { pt3dadd( 375.463, 369.112, 36.815, 0.414 ) }
    dend_27 { pt3dadd( 374.881, 369.988, 36.1004, 0.4036 ) }
    dend_27 { pt3dadd( 374.713, 371.001, 35.3847, 0.4554 ) }
    dend_27 { pt3dadd( 374.645, 372.124, 34.8384, 0.4354 ) }
    dend_27 { pt3dadd( 374.422, 373.233, 34.4938, 0.5044 ) }
    dend_27 { pt3dadd( 373.968, 374.276, 34.2278, 0.5754 ) }
    dend_27 { pt3dadd( 373.335, 375.226, 34.0189, 0.5254 ) }
    dend_27 { pt3dadd( 372.802, 376.234, 33.8212, 0.3996 ) }
    dend_27 { pt3dadd( 372.391, 377.285, 33.5616, 0.327 ) }
    dend_27 { pt3dadd( 371.929, 378.296, 33.2013, 0.327 ) }
    dend_27 { pt3dadd( 371.41, 379.289, 32.7902, 0.361 ) }
    dend_27 { pt3dadd( 371.021, 380.351, 32.3884, 0.4862 ) }
    dend_27 { pt3dadd( 370.608, 381.333, 31.9222, 0.4186 ) }
    dend_27 { pt3dadd( 369.712, 381.899, 31.4384, 0.3736 ) }
    dend_27 { pt3dadd( 368.703, 382.268, 31.2197, 0.3596 ) }
    dend_27 { pt3dadd( 367.995, 383.118, 31.1724, 0.4522 ) }
    dend_27 { pt3dadd( 367.407, 384.099, 31.1312, 0.5076 ) }
    dend_27 { pt3dadd( 366.904, 385.11, 31.0176, 0.488 ) }
    dend_27 { pt3dadd( 366.634, 386.179, 30.7882, 0.5866 ) }
    dend_27 { pt3dadd( 366.647, 387.322, 30.5704, 0.5732 ) }
    dend_27 { pt3dadd( 366.447, 388.44, 30.3722, 0.5862 ) }
    dend_27 { pt3dadd( 366.134, 389.503, 30.0544, 0.4254 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_27 { pt3dadd( 365.763, 390.5, 29.6162, 0.338 ) }
    dend_27 { pt3dadd( 365.174, 391.431, 29.1427, 0.299 ) }
    dend_27 { pt3dadd( 364.291, 392.152, 28.7924, 0.3144 ) }
    dend_27 { pt3dadd( 363.678, 393.116, 28.4735, 0.374 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 4/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 376.732, 365.47, 38.9273, 0.5842 ) }
    dend_24 { pt3dadd( 377.151, 365.721, 40.0117, 0.4576 ) }
    dend_24 { pt3dadd( 378.162, 366.25, 39.7704, 0.4046 ) }
    dend_24 { pt3dadd( 379.068, 366.841, 39.5956, 0.4094 ) }
    dend_24 { pt3dadd( 379.651, 367.78, 39.3585, 0.3534 ) }
    dend_24 { pt3dadd( 379.94, 368.884, 39.1686, 0.337 ) }
    dend_24 { pt3dadd( 380.269, 369.97, 39.1087, 0.3388 ) }
    dend_24 { pt3dadd( 380.952, 370.885, 39.1289, 0.4142 ) }
    // Section: dend_17, id: dend_17, parent: dend_7 (entry count 12/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 366.728, 344.903, 37.9117, 0.4576 ) }
    dend_17 { pt3dadd( 365.279, 344.567, 37.6225, 0.3038 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 14/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 366.728, 344.903, 37.9117, 0.4576 ) }
    dend_8 { pt3dadd( 366.846, 343.973, 41.1762, 0.4702 ) }
    dend_8 { pt3dadd( 366.718, 342.977, 41.811, 0.5276 ) }
    dend_8 { pt3dadd( 367.184, 341.932, 42.0353, 0.5898 ) }
    dend_8 { pt3dadd( 367.326, 340.798, 42.2041, 0.691 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 19/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 365.737, 355.338, 42.6493, 0.275 ) }
    dend_4 { pt3dadd( 365.037, 355.434, 42.441, 0.2754 ) }
    dend_4 { pt3dadd( 363.909, 355.429, 42.1722, 0.2762 ) }
    dend_4 { pt3dadd( 362.793, 355.24, 41.8734, 0.2776 ) }
    dend_4 { pt3dadd( 361.669, 355.082, 41.5724, 0.2802 ) }
    dend_4 { pt3dadd( 360.544, 354.873, 41.3193, 0.2852 ) }
    dend_4 { pt3dadd( 359.44, 354.698, 41.0407, 0.294 ) }
    dend_4 { pt3dadd( 358.298, 354.638, 40.8374, 0.3116 ) }
    dend_4 { pt3dadd( 357.159, 354.592, 40.7218, 0.3378 ) }
    dend_4 { pt3dadd( 356.043, 354.341, 40.6412, 0.4184 ) }
    dend_4 { pt3dadd( 355.06, 353.757, 40.5672, 0.4116 ) }
    dend_4 { pt3dadd( 354.217, 353.001, 40.4522, 0.4714 ) }
    dend_4 { pt3dadd( 353.343, 352.309, 40.2917, 0.459 ) }
    dend_4 { pt3dadd( 352.444, 351.663, 40.1005, 0.5784 ) }
    dend_4 { pt3dadd( 351.662, 350.837, 39.9784, 0.5644 ) }
    dend_4 { pt3dadd( 350.964, 349.934, 40.0207, 0.5388 ) }
    dend_4 { pt3dadd( 350.347, 349.02, 40.2956, 0.4884 ) }
    dend_4 { pt3dadd( 349.563, 348.274, 40.7781, 0.4102 ) }
    dend_4 { pt3dadd( 348.716, 347.625, 41.4204, 0.4196 ) }
    dend_4 { pt3dadd( 347.696, 347.412, 42.1747, 0.3734 ) }
    dend_4 { pt3dadd( 346.734, 347.746, 42.9867, 0.3678 ) }
    dend_4 { pt3dadd( 345.737, 348.3, 43.6433, 0.4266 ) }
    dend_4 { pt3dadd( 344.803, 348.96, 44.1294, 0.4282 ) }
    dend_4 { pt3dadd( 343.78, 349.469, 44.4956, 0.4958 ) }
    dend_4 { pt3dadd( 342.705, 349.284, 44.8725, 0.5364 ) }
    dend_4 { pt3dadd( 341.62, 349.645, 45.1542, 0.566 ) }
    dend_4 { pt3dadd( 340.596, 350.157, 45.365, 0.6124 ) }
    dend_4 { pt3dadd( 339.599, 350.715, 45.5501, 0.5106 ) }
    dend_4 { pt3dadd( 338.701, 351.423, 45.7293, 0.5482 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 48/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 365.737, 355.338, 42.6493, 0.275 ) }
    dend_1 { pt3dadd( 365.424, 356.669, 43.0682, 0.5484 ) }
    dend_1 { pt3dadd( 364.824, 357.641, 42.5449, 0.549 ) }
    dend_1 { pt3dadd( 364.417, 358.654, 42.2624, 0.5426 ) }
    dend_1 { pt3dadd( 364.57, 359.788, 41.9899, 0.567 ) }
    dend_1 { pt3dadd( 365.05, 360.824, 41.7175, 0.4368 ) }
    dend_1 { pt3dadd( 365.533, 361.837, 41.389, 0.3602 ) }
    dend_1 { pt3dadd( 365.87, 362.919, 41.1597, 0.3336 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 56/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 351.399, 296.601, 26.0461, 0.4556 ) }
    dend_39 { pt3dadd( 351.423, 295.286, 25.8664, 0.429 ) }
    dend_39 { pt3dadd( 351.303, 294.157, 25.777, 0.3444 ) }
    dend_39 { pt3dadd( 351.163, 293.026, 25.7897, 0.3108 ) }
    dend_39 { pt3dadd( 350.899, 291.92, 25.8418, 0.3364 ) }
    dend_39 { pt3dadd( 350.437, 290.879, 25.9181, 0.4158 ) }
    dend_39 { pt3dadd( 349.794, 289.957, 26.0598, 0.4084 ) }
    dend_39 { pt3dadd( 349.026, 289.141, 26.2858, 0.4582 ) }
    dend_39 { pt3dadd( 348.311, 288.267, 26.5089, 0.4702 ) }
    dend_39 { pt3dadd( 347.738, 287.284, 26.6833, 0.4244 ) }
    dend_39 { pt3dadd( 347.258, 286.252, 26.8145, 0.4412 ) }
    dend_39 { pt3dadd( 346.751, 285.231, 26.8926, 0.4378 ) }
    dend_39 { pt3dadd( 346.161, 284.273, 26.8372, 0.3688 ) }
    dend_39 { pt3dadd( 345.579, 283.385, 26.5807, 0.3172 ) }
    dend_39 { pt3dadd( 345.035, 282.427, 26.2485, 0.3078 ) }
    dend_39 { pt3dadd( 344.545, 281.397, 25.947, 0.3306 ) }
    dend_39 { pt3dadd( 344.007, 280.392, 25.6694, 0.405 ) }
    dend_39 { pt3dadd( 343.543, 279.352, 25.471, 0.387 ) }
    dend_39 { pt3dadd( 343.206, 278.262, 25.3541, 0.425 ) }
    dend_39 { pt3dadd( 342.81, 277.199, 25.2382, 0.3772 ) }
    dend_39 { pt3dadd( 342.352, 276.172, 25.0681, 0.4058 ) }
    dend_39 { pt3dadd( 341.806, 275.173, 24.9051, 0.3466 ) }
    dend_39 { pt3dadd( 341.18, 274.228, 24.8044, 0.3244 ) }
    dend_39 { pt3dadd( 340.539, 273.284, 24.7071, 0.3148 ) }
    dend_39 { pt3dadd( 339.95, 272.311, 24.5569, 0.3746 ) }
    dend_39 { pt3dadd( 339.452, 271.321, 24.3096, 0.336 ) }
    dend_39 { pt3dadd( 338.961, 270.363, 23.9534, 0.304 ) }
    dend_39 { pt3dadd( 338.306, 269.451, 23.5995, 0.282 ) }
    dend_39 { pt3dadd( 337.481, 268.663, 23.3107, 0.288 ) }
    dend_39 { pt3dadd( 336.672, 267.857, 23.0809, 0.3008 ) }
    dend_39 { pt3dadd( 336.0, 266.941, 22.9634, 0.3178 ) }
    dend_39 { pt3dadd( 335.497, 265.918, 22.9295, 0.3802 ) }
    dend_39 { pt3dadd( 335.113, 264.843, 22.9016, 0.3464 ) }
    dend_39 { pt3dadd( 334.739, 263.763, 22.8596, 0.3242 ) }
    dend_39 { pt3dadd( 334.376, 262.677, 22.8, 0.3142 ) }
    dend_39 { pt3dadd( 333.979, 261.61, 22.6984, 0.3736 ) }
    dend_39 { pt3dadd( 333.619, 260.525, 22.5783, 0.3342 ) }
    dend_39 { pt3dadd( 333.35, 259.413, 22.4595, 0.3006 ) }
    dend_39 { pt3dadd( 333.039, 258.313, 22.3457, 0.2758 ) }
    dend_39 { pt3dadd( 332.585, 257.265, 22.2289, 0.2768 ) }
    dend_39 { pt3dadd( 331.947, 256.32, 22.0754, 0.2786 ) }
    dend_39 { pt3dadd( 331.092, 255.607, 21.8242, 0.282 ) }
    dend_39 { pt3dadd( 330.164, 255.019, 21.4728, 0.2882 ) }
    dend_39 { pt3dadd( 329.29, 254.305, 21.1091, 0.3008 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_39 { pt3dadd( 328.427, 253.573, 20.7543, 0.3182 ) }
    dend_39 { pt3dadd( 327.468, 252.969, 20.4362, 0.3808 ) }
    dend_39 { pt3dadd( 326.415, 252.53, 20.1921, 0.3474 ) }
    dend_39 { pt3dadd( 325.307, 252.262, 20.0665, 0.3262 ) }
    dend_39 { pt3dadd( 324.26, 251.813, 20.0273, 0.318 ) }
    dend_39 { pt3dadd( 323.427, 251.035, 20.0024, 0.3808 ) }
    dend_39 { pt3dadd( 322.591, 250.253, 19.9664, 0.3474 ) }
    dend_39 { pt3dadd( 321.624, 249.647, 19.9254, 0.326 ) }
    dend_39 { pt3dadd( 320.644, 249.058, 19.8408, 0.3176 ) }
    dend_39 { pt3dadd( 319.773, 248.333, 19.6646, 0.38 ) }
    dend_39 { pt3dadd( 319.278, 247.365, 19.3583, 0.346 ) }
    dend_39 { pt3dadd( 319.033, 246.279, 18.9983, 0.3224 ) }
    dend_39 { pt3dadd( 318.559, 245.25, 18.658, 0.3168 ) }
    dend_39 { pt3dadd( 317.824, 244.376, 18.3908, 0.3488 ) }
    dend_39 { pt3dadd( 317.109, 243.482, 18.2236, 0.4324 ) }
    dend_39 { pt3dadd( 316.484, 242.526, 18.1214, 0.4698 ) }
    dend_39 { pt3dadd( 315.84, 241.582, 18.0716, 0.4238 ) }
    dend_39 { pt3dadd( 315.077, 240.73, 18.0778, 0.4398 ) }
    dend_39 { pt3dadd( 314.236, 239.956, 18.1294, 0.4354 ) }
    dend_39 { pt3dadd( 313.438, 239.148, 18.2299, 0.3644 ) }
    dend_39 { pt3dadd( 312.732, 238.262, 18.3697, 0.3092 ) }
    dend_39 { pt3dadd( 312.053, 237.341, 18.4605, 0.2918 ) }
    dend_39 { pt3dadd( 311.236, 236.543, 18.5091, 0.3062 ) }
    dend_39 { pt3dadd( 310.551, 235.626, 18.5382, 0.3352 ) }
    dend_39 { pt3dadd( 309.826, 234.744, 18.512, 0.3776 ) }
    dend_39 { pt3dadd( 309.005, 233.948, 18.4711, 0.5116 ) }
    dend_39 { pt3dadd( 308.163, 233.177, 18.3957, 0.4916 ) }
    dend_39 { pt3dadd( 307.181, 232.613, 18.275, 0.3838 ) }
    dend_39 { pt3dadd( 306.331, 231.853, 18.2141, 0.2982 ) }
    dend_39 { pt3dadd( 305.583, 230.988, 18.1826, 0.2712 ) }
    dend_39 { pt3dadd( 304.893, 230.079, 18.1342, 0.2684 ) }
    dend_39 { pt3dadd( 304.383, 229.056, 18.0757, 0.2628 ) }
    dend_39 { pt3dadd( 303.804, 228.07, 18.0354, 0.2542 ) }
    dend_39 { pt3dadd( 303.07, 227.193, 18.0087, 0.2288 ) }
    dend_39 { pt3dadd( 302.755, 226.093, 17.9682, 0.2288 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 35/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 351.399, 296.601, 26.0461, 0.4556 ) }
    dend_38 { pt3dadd( 351.841, 296.106, 25.6539, 0.4576 ) }
    dend_38 { pt3dadd( 352.637, 295.34, 24.97, 0.369 ) }
    dend_38 { pt3dadd( 353.402, 294.524, 24.7032, 0.3178 ) }
    dend_38 { pt3dadd( 353.783, 293.529, 24.3292, 0.3086 ) }
    dend_38 { pt3dadd( 353.775, 292.422, 23.8996, 0.3326 ) }
    dend_38 { pt3dadd( 353.74, 291.293, 23.5249, 0.4074 ) }
    dend_38 { pt3dadd( 353.846, 290.16, 23.2288, 0.3976 ) }
    dend_38 { pt3dadd( 354.081, 289.13, 22.8619, 0.4148 ) }
    dend_38 { pt3dadd( 354.329, 288.128, 22.3976, 0.5032 ) }
    dend_38 { pt3dadd( 354.684, 287.079, 21.9795, 0.6214 ) }
    dend_38 { pt3dadd( 355.245, 286.089, 21.6626, 0.6062 ) }
    dend_38 { pt3dadd( 355.789, 285.101, 21.4822, 0.5706 ) }
    dend_38 { pt3dadd( 356.149, 284.048, 21.438, 0.5418 ) }
    dend_38 { pt3dadd( 356.372, 282.935, 21.4196, 0.5354 ) }
    dend_38 { pt3dadd( 356.584, 281.824, 21.3288, 0.5238 ) }
    dend_38 { pt3dadd( 356.835, 280.746, 21.1126, 0.5014 ) }
    dend_38 { pt3dadd( 357.042, 279.653, 20.8022, 0.465 ) }
    dend_38 { pt3dadd( 357.151, 278.53, 20.4655, 0.3718 ) }
    dend_38 { pt3dadd( 357.124, 277.397, 20.1469, 0.3242 ) }
    dend_38 { pt3dadd( 356.896, 276.285, 19.8902, 0.314 ) }
    dend_38 { pt3dadd( 356.539, 275.199, 19.7334, 0.3734 ) }
    dend_38 { pt3dadd( 356.303, 274.083, 19.6801, 0.3338 ) }
    dend_38 { pt3dadd( 356.268, 272.944, 19.7124, 0.2998 ) }
    dend_38 { pt3dadd( 356.452, 271.818, 19.8109, 0.274 ) }
    dend_38 { pt3dadd( 357.076, 270.887, 19.9675, 0.2736 ) }
    dend_38 { pt3dadd( 357.953, 270.203, 20.2377, 0.2728 ) }
    dend_38 { pt3dadd( 358.808, 270.368, 20.732, 0.2712 ) }
    dend_38 { pt3dadd( 359.02, 271.482, 21.1983, 0.2684 ) }
    dend_38 { pt3dadd( 359.574, 272.483, 21.5742, 0.2628 ) }
    dend_38 { pt3dadd( 360.32, 273.35, 21.8562, 0.2542 ) }
    dend_38 { pt3dadd( 361.218, 274.059, 22.051, 0.2288 ) }
    dend_38 { pt3dadd( 362.025, 274.837, 22.4602, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 68/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 385.384, 365.771, 47.6221, 0.4576 ) }
    dend_33 { pt3dadd( 385.668, 366.237, 47.1923, 0.4592 ) }
    dend_33 { pt3dadd( 385.989, 367.286, 46.9991, 0.3614 ) }
    dend_33 { pt3dadd( 385.701, 368.355, 46.7684, 0.3038 ) }
    dend_33 { pt3dadd( 385.677, 369.474, 46.5399, 0.2816 ) }
    dend_33 { pt3dadd( 385.876, 370.599, 46.3462, 0.2872 ) }
    dend_33 { pt3dadd( 386.169, 371.702, 46.2185, 0.2992 ) }
    dend_33 { pt3dadd( 386.515, 372.787, 46.1616, 0.315 ) }
    dend_33 { pt3dadd( 386.796, 373.891, 46.0972, 0.375 ) }
    dend_33 { pt3dadd( 387.012, 375.005, 45.9962, 0.3368 ) }
    dend_33 { pt3dadd( 387.191, 376.131, 45.8791, 0.3052 ) }
    dend_33 { pt3dadd( 387.356, 377.253, 45.7377, 0.2844 ) }
    dend_33 { pt3dadd( 387.703, 378.335, 45.6, 0.2926 ) }
    dend_33 { pt3dadd( 388.187, 379.361, 45.5532, 0.3092 ) }
    dend_33 { pt3dadd( 388.539, 380.437, 45.5941, 0.3334 ) }
    dend_33 { pt3dadd( 388.878, 381.526, 45.6767, 0.4102 ) }
    dend_33 { pt3dadd( 389.39, 382.544, 45.7694, 0.3978 ) }
    dend_33 { pt3dadd( 389.983, 383.523, 45.8447, 0.4388 ) }
    dend_33 { pt3dadd( 390.611, 384.473, 45.8562, 0.4334 ) }
    dend_33 { pt3dadd( 391.218, 385.434, 45.8052, 0.3604 ) }
    dend_33 { pt3dadd( 391.746, 386.447, 45.7363, 0.302 ) }
    dend_33 { pt3dadd( 392.207, 387.492, 45.7005, 0.2782 ) }
    dend_33 { pt3dadd( 392.582, 388.568, 45.7223, 0.2814 ) }
    dend_33 { pt3dadd( 392.951, 389.646, 45.7895, 0.287 ) }
    dend_33 { pt3dadd( 393.412, 390.689, 45.8814, 0.2988 ) }
    dend_33 { pt3dadd( 393.938, 391.703, 45.9634, 0.314 ) }
    dend_33 { pt3dadd( 394.461, 392.719, 46.016, 0.3734 ) }
    dend_33 { pt3dadd( 395.032, 393.711, 46.011, 0.3338 ) }
    dend_33 { pt3dadd( 395.64, 394.675, 45.9287, 0.3 ) }
    dend_33 { pt3dadd( 396.109, 395.706, 45.773, 0.2746 ) }
    dend_33 { pt3dadd( 396.385, 396.796, 45.5529, 0.2746 ) }
    dend_33 { pt3dadd( 396.701, 397.889, 45.3286, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_33 { pt3dadd( 397.119, 398.953, 45.1469, 0.2746 ) }
    dend_33 { pt3dadd( 397.574, 400.003, 45.0164, 0.2746 ) }
    dend_33 { pt3dadd( 398.038, 401.049, 44.931, 0.2746 ) }
    dend_33 { pt3dadd( 398.525, 402.083, 44.8792, 0.2748 ) }
    dend_33 { pt3dadd( 399.025, 403.112, 44.8462, 0.2748 ) }
    dend_33 { pt3dadd( 399.469, 404.166, 44.8146, 0.2752 ) }
    dend_33 { pt3dadd( 399.811, 405.257, 44.7706, 0.2756 ) }
    dend_33 { pt3dadd( 400.146, 406.351, 44.709, 0.2766 ) }
    dend_33 { pt3dadd( 400.705, 407.345, 44.6289, 0.2782 ) }
    dend_33 { pt3dadd( 401.38, 408.27, 44.5306, 0.2814 ) }
    dend_33 { pt3dadd( 401.887, 409.275, 44.354, 0.287 ) }
    dend_33 { pt3dadd( 402.288, 410.274, 44.0521, 0.2988 ) }
    dend_33 { pt3dadd( 402.681, 411.339, 43.7671, 0.314 ) }
    dend_33 { pt3dadd( 402.92, 412.457, 43.549, 0.3734 ) }
    dend_33 { pt3dadd( 403.101, 413.586, 43.3955, 0.3338 ) }
    dend_33 { pt3dadd( 403.316, 414.709, 43.3009, 0.3 ) }
    dend_33 { pt3dadd( 403.667, 415.797, 43.2586, 0.2746 ) }
    dend_33 { pt3dadd( 404.166, 416.826, 43.258, 0.2746 ) }
    dend_33 { pt3dadd( 404.634, 417.868, 43.2869, 0.2746 ) }
    dend_33 { pt3dadd( 404.843, 418.987, 43.2746, 0.2746 ) }
    dend_33 { pt3dadd( 404.978, 420.121, 43.2575, 0.2746 ) }
    dend_33 { pt3dadd( 405.268, 421.228, 43.2519, 0.2746 ) }
    dend_33 { pt3dadd( 405.651, 422.305, 43.2603, 0.2746 ) }
    dend_33 { pt3dadd( 406.18, 423.32, 43.2877, 0.2746 ) }
    dend_33 { pt3dadd( 406.497, 424.417, 43.3395, 0.2746 ) }
    dend_33 { pt3dadd( 406.571, 425.559, 43.4221, 0.2746 ) }
    dend_33 { pt3dadd( 406.578, 426.703, 43.5313, 0.2746 ) }
    dend_33 { pt3dadd( 406.578, 427.843, 43.6968, 0.2746 ) }
    dend_33 { pt3dadd( 406.578, 428.947, 43.9849, 0.2744 ) }
    dend_33 { pt3dadd( 406.578, 430.079, 44.3187, 0.2744 ) }
    dend_33 { pt3dadd( 406.574, 431.222, 44.6368, 0.2742 ) }
    dend_33 { pt3dadd( 406.415, 432.353, 44.9565, 0.274 ) }
    dend_33 { pt3dadd( 405.921, 433.378, 45.2956, 0.2736 ) }
    dend_33 { pt3dadd( 405.164, 434.213, 45.6725, 0.2728 ) }
    dend_33 { pt3dadd( 404.199, 434.741, 46.1157, 0.2712 ) }
    dend_33 { pt3dadd( 403.354, 435.311, 46.6752, 0.2684 ) }
    dend_33 { pt3dadd( 402.333, 435.75, 47.215, 0.2628 ) }
    dend_33 { pt3dadd( 401.227, 436.039, 47.6241, 0.2542 ) }
    dend_33 { pt3dadd( 400.228, 436.596, 47.9041, 0.2288 ) }
    dend_33 { pt3dadd( 399.485, 437.466, 48.16, 0.2288 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 40/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 385.384, 365.771, 47.6221, 0.4576 ) }
    dend_32 { pt3dadd( 386.146, 366.817, 47.9662, 0.3222 ) }
    dend_32 { pt3dadd( 386.798, 367.728, 48.809, 0.3884 ) }
    dend_32 { pt3dadd( 387.497, 368.612, 49.1683, 0.3626 ) }
    dend_32 { pt3dadd( 388.411, 369.275, 49.574, 0.348 ) }
    dend_32 { pt3dadd( 389.474, 369.632, 50.038, 0.389 ) }
    dend_32 { pt3dadd( 390.479, 370.075, 50.5772, 0.3638 ) }
    dend_32 { pt3dadd( 391.363, 370.724, 51.1568, 0.35 ) }
    dend_32 { pt3dadd( 392.338, 371.253, 51.7292, 0.393 ) }
    dend_32 { pt3dadd( 393.434, 371.352, 52.285, 0.37 ) }
    dend_32 { pt3dadd( 394.464, 370.972, 52.8178, 0.3688 ) }
    dend_32 { pt3dadd( 395.376, 370.294, 53.2454, 0.3928 ) }
    dend_32 { pt3dadd( 396.279, 369.601, 53.515, 0.5392 ) }
    dend_32 { pt3dadd( 397.244, 368.994, 53.6791, 0.5438 ) }
    dend_32 { pt3dadd( 398.234, 368.422, 53.8098, 0.4764 ) }
    dend_32 { pt3dadd( 399.181, 367.781, 53.9599, 0.491 ) }
    dend_32 { pt3dadd( 400.122, 367.162, 54.2058, 0.5258 ) }
    dend_32 { pt3dadd( 401.125, 366.697, 54.5759, 0.5542 ) }
    dend_32 { pt3dadd( 402.185, 366.337, 55.0292, 0.5522 ) }
    dend_32 { pt3dadd( 403.285, 366.08, 55.5106, 0.5858 ) }
    dend_32 { pt3dadd( 404.368, 365.788, 56.0227, 0.4668 ) }
    dend_32 { pt3dadd( 405.442, 365.428, 56.5236, 0.4404 ) }
    dend_32 { pt3dadd( 406.477, 364.95, 56.985, 0.3638 ) }
    dend_32 { pt3dadd( 407.281, 364.18, 57.475, 0.356 ) }
    dend_32 { pt3dadd( 407.941, 363.318, 58.0308, 0.375 ) }
    dend_32 { pt3dadd( 408.663, 362.465, 58.5967, 0.477 ) }
    dend_32 { pt3dadd( 409.371, 361.585, 59.1483, 0.5718 ) }
    dend_32 { pt3dadd( 410.103, 360.707, 59.6333, 0.5188 ) }
    dend_32 { pt3dadd( 411.044, 360.069, 60.1059, 0.3872 ) }
    dend_32 { pt3dadd( 411.897, 359.491, 60.688, 0.3046 ) }
    dend_32 { pt3dadd( 412.664, 358.774, 61.3449, 0.2828 ) }
    dend_32 { pt3dadd( 413.318, 357.855, 61.9486, 0.291 ) }
    dend_32 { pt3dadd( 414.114, 357.08, 62.5282, 0.2994 ) }
    dend_32 { pt3dadd( 414.964, 356.316, 62.9588, 0.3474 ) }
    dend_32 { pt3dadd( 415.841, 355.602, 63.208, 0.2796 ) }
    dend_32 { pt3dadd( 416.759, 355.441, 64.12, 0.2288 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 76/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 363.678, 393.116, 28.4735, 0.374 ) }
    dend_29 { pt3dadd( 363.307, 394.219, 28.1361, 0.302 ) }
    dend_29 { pt3dadd( 362.928, 395.274, 27.7938, 0.2782 ) }
    dend_29 { pt3dadd( 362.467, 396.302, 27.4774, 0.2814 ) }
    dend_29 { pt3dadd( 361.984, 397.336, 27.2091, 0.287 ) }
    dend_29 { pt3dadd( 361.851, 398.424, 26.9357, 0.2988 ) }
    dend_29 { pt3dadd( 362.068, 399.532, 26.6634, 0.3142 ) }
    dend_29 { pt3dadd( 362.319, 400.645, 26.4564, 0.3738 ) }
    dend_29 { pt3dadd( 362.498, 401.771, 26.2949, 0.3344 ) }
    dend_29 { pt3dadd( 362.56, 402.9, 26.1107, 0.301 ) }
    dend_29 { pt3dadd( 362.535, 404.034, 25.9118, 0.2766 ) }
    dend_29 { pt3dadd( 362.558, 405.176, 25.7443, 0.2782 ) }
    dend_29 { pt3dadd( 362.681, 406.311, 25.6029, 0.2814 ) }
    dend_29 { pt3dadd( 362.881, 407.433, 25.4512, 0.2872 ) }
    dend_29 { pt3dadd( 363.07, 408.556, 25.2852, 0.2978 ) }
    dend_29 { pt3dadd( 363.167, 409.689, 25.1545, 0.319 ) }
    dend_29 { pt3dadd( 363.217, 410.831, 25.0676, 0.3512 ) }
    dend_29 { pt3dadd( 363.275, 411.962, 24.9556, 0.4444 ) }
    dend_29 { pt3dadd( 363.352, 413.083, 24.7927, 0.4558 ) }
    dend_29 { pt3dadd( 363.453, 414.213, 24.6303, 0.5728 ) }
    dend_29 { pt3dadd( 363.583, 415.346, 24.5304, 0.5524 ) }
    dend_29 { pt3dadd( 363.743, 416.469, 24.5245, 0.5232 ) }
    dend_29 { pt3dadd( 363.96, 417.584, 24.5755, 0.4284 ) }
    dend_29 { pt3dadd( 364.194, 418.699, 24.6191, 0.4486 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_29 { pt3dadd( 364.303, 419.832, 24.6496, 0.4514 ) }
    dend_29 { pt3dadd( 364.216, 420.963, 24.703, 0.3952 ) }
    dend_29 { pt3dadd( 363.987, 422.064, 24.8005, 0.361 ) }
    dend_29 { pt3dadd( 363.878, 423.181, 24.9044, 0.414 ) }
    dend_29 { pt3dadd( 364.038, 424.305, 24.9667, 0.4052 ) }
    dend_29 { pt3dadd( 364.242, 425.42, 24.9259, 0.4522 ) }
    dend_29 { pt3dadd( 364.437, 426.535, 24.7655, 0.4594 ) }
    dend_29 { pt3dadd( 364.58, 427.657, 24.5087, 0.4034 ) }
    dend_29 { pt3dadd( 364.57, 428.772, 24.1573, 0.4072 ) }
    dend_29 { pt3dadd( 364.776, 429.869, 23.7893, 0.3492 ) }
    dend_29 { pt3dadd( 365.316, 430.826, 23.385, 0.3296 ) }
    dend_29 { pt3dadd( 365.533, 431.879, 22.9536, 0.3242 ) }
    dend_29 { pt3dadd( 365.417, 433.004, 22.6504, 0.392 ) }
    dend_29 { pt3dadd( 365.224, 434.129, 22.4611, 0.3682 ) }
    dend_29 { pt3dadd( 365.07, 435.252, 22.2815, 0.3654 ) }
    dend_29 { pt3dadd( 365.071, 436.389, 22.106, 0.3864 ) }
    dend_29 { pt3dadd( 365.409, 437.475, 21.9598, 0.5276 ) }
    dend_29 { pt3dadd( 365.689, 438.581, 21.867, 0.5224 ) }
    dend_29 { pt3dadd( 365.836, 439.714, 21.7634, 0.4358 ) }
    dend_29 { pt3dadd( 365.901, 440.829, 21.5726, 0.42 ) }
    dend_29 { pt3dadd( 366.069, 441.953, 21.3636, 0.3738 ) }
    dend_29 { pt3dadd( 366.183, 443.091, 21.1745, 0.37 ) }
    dend_29 { pt3dadd( 366.007, 444.219, 20.985, 0.4244 ) }
    dend_29 { pt3dadd( 365.617, 445.292, 20.8112, 0.455 ) }
    dend_29 { pt3dadd( 365.084, 446.301, 20.6081, 0.3954 ) }
    dend_29 { pt3dadd( 364.525, 447.293, 20.3677, 0.3926 ) }
    dend_29 { pt3dadd( 364.234, 448.385, 20.0829, 0.322 ) }
    dend_29 { pt3dadd( 364.643, 449.4, 19.721, 0.2796 ) }
    dend_29 { pt3dadd( 365.685, 449.845, 19.3978, 0.2288 ) }
    dend_29 { pt3dadd( 366.423, 450.622, 18.48, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 30/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 363.678, 393.116, 28.4735, 0.374 ) }
    dend_28 { pt3dadd( 363.094, 392.527, 27.2156, 0.2288 ) }
    dend_28 { pt3dadd( 362.238, 391.82, 26.2493, 0.3 ) }
    dend_28 { pt3dadd( 361.22, 391.317, 25.9194, 0.3238 ) }
    dend_28 { pt3dadd( 360.294, 390.652, 25.4899, 0.3554 ) }
    dend_28 { pt3dadd( 359.27, 390.248, 24.8777, 0.4754 ) }
    dend_28 { pt3dadd( 358.303, 389.931, 24.0084, 0.3992 ) }
    dend_28 { pt3dadd( 357.444, 389.3, 23.0087, 0.3362 ) }
    dend_28 { pt3dadd( 356.803, 388.73, 21.8248, 0.2966 ) }
    dend_28 { pt3dadd( 356.075, 388.465, 20.5109, 0.305 ) }
    dend_28 { pt3dadd( 355.384, 389.046, 19.2212, 0.3814 ) }
    dend_28 { pt3dadd( 354.64, 389.761, 16.8, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 42/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 380.952, 370.885, 39.1289, 0.4142 ) }
    dend_26 { pt3dadd( 381.744, 371.926, 39.3134, 0.3634 ) }
    dend_26 { pt3dadd( 382.531, 372.738, 39.5475, 0.3074 ) }
    dend_26 { pt3dadd( 383.383, 373.484, 39.7107, 0.2884 ) }
    dend_26 { pt3dadd( 384.239, 374.19, 39.7566, 0.3002 ) }
    dend_26 { pt3dadd( 385.128, 374.875, 39.7886, 0.323 ) }
    dend_26 { pt3dadd( 385.942, 375.607, 39.9627, 0.36 ) }
    dend_26 { pt3dadd( 386.656, 376.426, 40.2651, 0.4546 ) }
    dend_26 { pt3dadd( 387.475, 377.208, 40.5972, 0.504 ) }
    dend_26 { pt3dadd( 388.34, 377.95, 40.896, 0.5192 ) }
    dend_26 { pt3dadd( 389.105, 378.773, 41.216, 0.462 ) }
    dend_26 { pt3dadd( 389.703, 379.659, 41.6534, 0.5422 ) }
    dend_26 { pt3dadd( 390.216, 380.58, 42.1716, 0.4714 ) }
    dend_26 { pt3dadd( 390.756, 381.568, 42.674, 0.4916 ) }
    dend_26 { pt3dadd( 391.369, 382.525, 43.1287, 0.4792 ) }
    dend_26 { pt3dadd( 392.105, 383.397, 43.5117, 0.4706 ) }
    dend_26 { pt3dadd( 392.934, 384.175, 43.8547, 0.3834 ) }
    dend_26 { pt3dadd( 393.769, 384.939, 44.2089, 0.3396 ) }
    dend_26 { pt3dadd( 394.608, 385.689, 44.5945, 0.3734 ) }
    dend_26 { pt3dadd( 395.468, 386.26, 45.101, 0.3338 ) }
    dend_26 { pt3dadd( 396.064, 386.942, 45.7579, 0.3 ) }
    dend_26 { pt3dadd( 396.513, 387.95, 46.3411, 0.2746 ) }
    dend_26 { pt3dadd( 397.086, 388.938, 46.7852, 0.2746 ) }
    dend_26 { pt3dadd( 397.745, 389.873, 47.1052, 0.2746 ) }
    dend_26 { pt3dadd( 398.61, 390.607, 47.3292, 0.2746 ) }
    dend_26 { pt3dadd( 399.623, 391.121, 47.5017, 0.2746 ) }
    dend_26 { pt3dadd( 400.676, 391.557, 47.6596, 0.2746 ) }
    dend_26 { pt3dadd( 401.665, 392.12, 47.831, 0.2746 ) }
    dend_26 { pt3dadd( 402.629, 392.727, 48.0256, 0.2748 ) }
    dend_26 { pt3dadd( 403.554, 393.395, 48.221, 0.2748 ) }
    dend_26 { pt3dadd( 404.532, 393.986, 48.3972, 0.2752 ) }
    dend_26 { pt3dadd( 405.523, 394.559, 48.5573, 0.2756 ) }
    dend_26 { pt3dadd( 406.488, 395.171, 48.7225, 0.2766 ) }
    dend_26 { pt3dadd( 407.354, 395.887, 48.9586, 0.2782 ) }
    dend_26 { pt3dadd( 408.186, 396.65, 49.2481, 0.2814 ) }
    dend_26 { pt3dadd( 409.181, 397.194, 49.5452, 0.2872 ) }
    dend_26 { pt3dadd( 410.25, 397.569, 49.8714, 0.299 ) }
    dend_26 { pt3dadd( 411.354, 397.807, 50.2211, 0.3146 ) }
    dend_26 { pt3dadd( 412.427, 398.178, 50.561, 0.3744 ) }
    dend_26 { pt3dadd( 413.325, 398.865, 50.8894, 0.3356 ) }
    dend_26 { pt3dadd( 414.268, 399.51, 51.1834, 0.303 ) }
    dend_26 { pt3dadd( 415.199, 400.169, 51.4665, 0.2802 ) }
    dend_26 { pt3dadd( 415.937, 400.991, 51.8064, 0.285 ) }
    dend_26 { pt3dadd( 416.827, 401.695, 52.1304, 0.2938 ) }
    dend_26 { pt3dadd( 417.79, 402.305, 52.437, 0.3112 ) }
    dend_26 { pt3dadd( 418.741, 402.935, 52.7271, 0.3384 ) }
    dend_26 { pt3dadd( 419.686, 403.58, 52.9852, 0.4132 ) }
    dend_26 { pt3dadd( 420.542, 404.335, 53.2356, 0.4332 ) }
    dend_26 { pt3dadd( 421.353, 405.127, 53.5139, 0.36 ) }
    dend_26 { pt3dadd( 422.284, 405.772, 53.8516, 0.3014 ) }
    dend_26 { pt3dadd( 423.112, 406.542, 54.2363, 0.2768 ) }
    dend_26 { pt3dadd( 423.831, 407.423, 54.6297, 0.2796 ) }
    dend_26 { pt3dadd( 424.913, 407.774, 54.9864, 0.2796 ) }
    dend_26 { pt3dadd( 426.029, 408.003, 55.3288, 0.305 ) }
    dend_26 { pt3dadd( 426.786, 408.25, 56.712, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 97/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 380.952, 370.885, 39.1289, 0.4142 ) }
    dend_25 { pt3dadd( 380.997, 371.206, 38.5837, 0.4576 ) }
    dend_25 { pt3dadd( 381.034, 372.28, 37.7569, 0.4952 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_25 { pt3dadd( 381.063, 373.402, 37.4058, 0.4224 ) }
    dend_25 { pt3dadd( 381.134, 374.532, 37.0835, 0.4434 ) }
    dend_25 { pt3dadd( 381.104, 375.664, 36.7671, 0.4124 ) }
    dend_25 { pt3dadd( 380.907, 376.772, 36.3684, 0.4658 ) }
    dend_25 { pt3dadd( 380.244, 377.597, 35.9111, 0.4844 ) }
    dend_25 { pt3dadd( 379.485, 378.276, 35.3167, 0.4506 ) }
    dend_25 { pt3dadd( 379.332, 379.163, 34.4747, 0.4916 ) }
    dend_25 { pt3dadd( 379.568, 380.155, 33.4841, 0.521 ) }
    dend_25 { pt3dadd( 379.961, 381.137, 32.4218, 0.5738 ) }
    dend_25 { pt3dadd( 380.18, 382.115, 31.2948, 0.4506 ) }
    dend_25 { pt3dadd( 380.172, 383.167, 30.1655, 0.3794 ) }
    dend_25 { pt3dadd( 380.45, 384.145, 29.0528, 0.4012 ) }
    dend_25 { pt3dadd( 380.927, 385.037, 27.9436, 0.3802 ) }
    dend_25 { pt3dadd( 381.116, 386.065, 26.8812, 0.4114 ) }
    dend_25 { pt3dadd( 381.35, 386.955, 25.7884, 0.3582 ) }
    dend_25 { pt3dadd( 381.58, 387.967, 24.7671, 0.3396 ) }
    dend_25 { pt3dadd( 382.065, 388.97, 23.9, 0.3738 ) }
    dend_25 { pt3dadd( 382.812, 389.75, 23.1272, 0.3344 ) }
    dend_25 { pt3dadd( 382.695, 390.843, 22.5117, 0.301 ) }
    dend_25 { pt3dadd( 382.363, 391.926, 22.0254, 0.2766 ) }
    dend_25 { pt3dadd( 382.08, 393.019, 21.6299, 0.2782 ) }
    dend_25 { pt3dadd( 381.959, 394.156, 21.3594, 0.2814 ) }
    dend_25 { pt3dadd( 382.124, 395.286, 21.1869, 0.287 ) }
    dend_25 { pt3dadd( 382.583, 396.322, 21.0039, 0.2988 ) }
    dend_25 { pt3dadd( 382.788, 397.438, 20.8042, 0.3142 ) }
    dend_25 { pt3dadd( 382.779, 398.572, 20.6893, 0.3736 ) }
    dend_25 { pt3dadd( 382.892, 399.709, 20.5576, 0.3342 ) }
    dend_25 { pt3dadd( 383.016, 400.771, 20.2773, 0.3006 ) }
    dend_25 { pt3dadd( 382.739, 401.88, 20.031, 0.2758 ) }
    dend_25 { pt3dadd( 382.772, 403.023, 19.808, 0.2768 ) }
    dend_25 { pt3dadd( 383.012, 404.139, 19.6463, 0.2788 ) }
    dend_25 { pt3dadd( 383.168, 405.248, 19.4184, 0.2824 ) }
    dend_25 { pt3dadd( 382.94, 406.356, 19.1803, 0.2882 ) }
    dend_25 { pt3dadd( 383.042, 407.492, 18.976, 0.305 ) }
    dend_25 { pt3dadd( 383.345, 408.591, 18.7888, 0.305 ) }
    dend_25 { pt3dadd( 383.714, 409.674, 18.5296, 0.4576 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 36/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 365.279, 344.567, 37.6225, 0.3038 ) }
    dend_18 { pt3dadd( 364.809, 344.373, 37.9551, 0.3234 ) }
    dend_18 { pt3dadd( 363.763, 344.029, 38.666, 0.3904 ) }
    dend_18 { pt3dadd( 362.707, 344.02, 39.013, 0.3664 ) }
    dend_18 { pt3dadd( 361.61, 344.067, 39.3789, 0.3548 ) }
    dend_18 { pt3dadd( 360.482, 343.9, 39.6382, 0.403 ) }
    dend_18 { pt3dadd( 359.438, 343.531, 39.6833, 0.3834 ) }
    dend_18 { pt3dadd( 358.411, 343.284, 39.5063, 0.417 ) }
    dend_18 { pt3dadd( 357.318, 343.491, 39.2412, 0.3688 ) }
    dend_18 { pt3dadd( 356.254, 343.907, 39.0488, 0.3592 ) }
    dend_18 { pt3dadd( 355.206, 344.359, 38.9231, 0.411 ) }
    dend_18 { pt3dadd( 354.075, 344.527, 38.9021, 0.398 ) }
    dend_18 { pt3dadd( 352.964, 344.51, 39.081, 0.4456 ) }
    dend_18 { pt3dadd( 351.992, 344.809, 39.4839, 0.4148 ) }
    dend_18 { pt3dadd( 351.028, 344.933, 40.0425, 0.4778 ) }
    dend_18 { pt3dadd( 349.908, 344.798, 40.3959, 0.4692 ) }
    dend_18 { pt3dadd( 348.843, 344.573, 40.521, 0.605 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 53/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 367.326, 340.798, 42.2041, 0.691 ) }
    dend_12 { pt3dadd( 366.943, 340.075, 42.2677, 0.7184 ) }
    dend_12 { pt3dadd( 366.445, 339.056, 42.2565, 0.6316 ) }
    dend_12 { pt3dadd( 365.815, 338.11, 42.2187, 0.6808 ) }
    dend_12 { pt3dadd( 364.909, 337.434, 42.2184, 0.8968 ) }
    dend_12 { pt3dadd( 364.126, 336.671, 42.378, 0.9202 ) }
    dend_12 { pt3dadd( 363.348, 335.844, 42.5978, 0.734 ) }
    dend_12 { pt3dadd( 362.494, 335.086, 42.8123, 0.5878 ) }
    dend_12 { pt3dadd( 361.672, 334.294, 43.0447, 0.4958 ) }
    dend_12 { pt3dadd( 360.732, 333.655, 43.2958, 0.5994 ) }
    dend_12 { pt3dadd( 359.719, 333.167, 43.5868, 0.6052 ) }
    dend_12 { pt3dadd( 358.685, 332.681, 43.8323, 0.6042 ) }
    dend_12 { pt3dadd( 357.722, 332.096, 43.9852, 0.6594 ) }
    dend_12 { pt3dadd( 356.923, 331.365, 44.2697, 0.4844 ) }
    dend_12 { pt3dadd( 356.232, 330.586, 44.6835, 0.3628 ) }
    dend_12 { pt3dadd( 355.598, 329.649, 45.0719, 0.2966 ) }
    dend_12 { pt3dadd( 354.888, 328.754, 45.3575, 0.3166 ) }
    dend_12 { pt3dadd( 354.184, 327.853, 45.5582, 0.3472 ) }
    dend_12 { pt3dadd( 353.542, 326.913, 45.7472, 0.4356 ) }
    dend_12 { pt3dadd( 352.752, 326.087, 45.892, 0.4458 ) }
    dend_12 { pt3dadd( 352.262, 325.055, 46.0135, 0.5234 ) }
    dend_12 { pt3dadd( 351.64, 324.094, 46.1348, 0.6114 ) }
    dend_12 { pt3dadd( 350.932, 323.224, 46.1812, 0.588 ) }
    dend_12 { pt3dadd( 350.262, 322.344, 46.3506, 0.5358 ) }
    dend_12 { pt3dadd( 349.481, 321.567, 46.6057, 0.4818 ) }
    dend_12 { pt3dadd( 348.691, 321.006, 47.0165, 0.4024 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 367.326, 340.798, 42.2041, 0.691 ) }
    dend_9 { pt3dadd( 367.91, 339.539, 43.68, 0.624 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 81/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 338.701, 351.423, 45.7293, 0.5482 ) }
    dend_6 { pt3dadd( 337.86, 351.938, 45.9144, 0.4344 ) }
    dend_6 { pt3dadd( 336.76, 352.164, 46.1376, 0.4274 ) }
    dend_6 { pt3dadd( 335.741, 352.56, 46.457, 0.3394 ) }
    dend_6 { pt3dadd( 334.827, 353.233, 46.7477, 0.3104 ) }
    dend_6 { pt3dadd( 333.828, 353.763, 47.0347, 0.2938 ) }
    dend_6 { pt3dadd( 332.946, 354.457, 47.3228, 0.3112 ) }
    dend_6 { pt3dadd( 332.083, 355.199, 47.5499, 0.3372 ) }
    dend_6 { pt3dadd( 331.134, 355.823, 47.6367, 0.416 ) }
    dend_6 { pt3dadd( 330.267, 356.554, 47.6126, 0.4148 ) }
    dend_6 { pt3dadd( 329.407, 357.215, 47.6896, 0.4412 ) }
    dend_6 { pt3dadd( 328.376, 357.705, 47.6949, 0.5782 ) }
    dend_6 { pt3dadd( 327.423, 358.237, 47.5334, 0.6354 ) }
    dend_6 { pt3dadd( 326.413, 358.764, 47.3424, 0.552 ) }
    dend_6 { pt3dadd( 325.465, 359.378, 47.2228, 0.4014 ) }
    dend_6 { pt3dadd( 324.504, 359.991, 47.1041, 0.332 ) }
    dend_6 { pt3dadd( 323.513, 360.54, 46.8835, 0.3284 ) }
    dend_6 { pt3dadd( 322.447, 360.907, 46.5909, 0.401 ) }
    dend_6 { pt3dadd( 321.378, 361.14, 46.1922, 0.3798 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_6 { pt3dadd( 320.354, 361.488, 45.694, 0.4108 ) }
    dend_6 { pt3dadd( 319.272, 361.83, 45.2178, 0.3562 ) }
    dend_6 { pt3dadd( 318.15, 361.999, 44.7852, 0.3408 ) }
    dend_6 { pt3dadd( 317.042, 362.157, 44.373, 0.3522 ) }
    dend_6 { pt3dadd( 315.936, 362.292, 43.9928, 0.4092 ) }
    dend_6 { pt3dadd( 314.801, 362.235, 43.7444, 0.5704 ) }
    dend_6 { pt3dadd( 313.725, 361.895, 43.6251, 0.5978 ) }
    dend_6 { pt3dadd( 312.718, 361.354, 43.5173, 0.5954 ) }
    dend_6 { pt3dadd( 311.724, 360.796, 43.3994, 0.6196 ) }
    dend_6 { pt3dadd( 310.709, 360.271, 43.2891, 0.5254 ) }
    dend_6 { pt3dadd( 309.689, 359.78, 43.122, 0.569 ) }
    dend_6 { pt3dadd( 308.664, 359.296, 42.9184, 0.5038 ) }
    dend_6 { pt3dadd( 307.739, 358.626, 42.7263, 0.4064 ) }
    dend_6 { pt3dadd( 306.799, 357.985, 42.5228, 0.341 ) }
    dend_6 { pt3dadd( 305.793, 357.455, 42.3209, 0.3466 ) }
    dend_6 { pt3dadd( 304.781, 356.984, 42.0748, 0.4282 ) }
    dend_6 { pt3dadd( 303.778, 356.524, 41.8116, 0.462 ) }
    dend_6 { pt3dadd( 302.897, 355.854, 41.6167, 0.4084 ) }
    dend_6 { pt3dadd( 301.87, 355.473, 41.5985, 0.4166 ) }
    dend_6 { pt3dadd( 300.825, 355.071, 41.6217, 0.3678 ) }
    dend_6 { pt3dadd( 299.85, 354.492, 41.5884, 0.3574 ) }
    dend_6 { pt3dadd( 298.856, 353.957, 41.5696, 0.4076 ) }
    dend_6 { pt3dadd( 297.993, 353.287, 41.5951, 0.3918 ) }
    dend_6 { pt3dadd( 297.33, 352.368, 41.5366, 0.4342 ) }
    dend_6 { pt3dadd( 296.631, 351.575, 41.2944, 0.3942 ) }
    dend_6 { pt3dadd( 295.798, 350.941, 40.9494, 0.4368 ) }
    dend_6 { pt3dadd( 294.905, 350.245, 40.6924, 0.4064 ) }
    dend_6 { pt3dadd( 294.083, 349.461, 40.5026, 0.4246 ) }
    dend_6 { pt3dadd( 293.276, 348.664, 40.2996, 0.5526 ) }
    dend_6 { pt3dadd( 292.562, 347.79, 40.087, 0.5622 ) }
    dend_6 { pt3dadd( 291.896, 346.872, 39.9328, 0.5412 ) }
    dend_6 { pt3dadd( 291.249, 345.943, 39.8118, 0.463 ) }
    dend_6 { pt3dadd( 290.733, 344.95, 39.6102, 0.507 ) }
    dend_6 { pt3dadd( 290.284, 343.921, 39.3907, 0.5862 ) }
    dend_6 { pt3dadd( 289.695, 342.957, 39.2414, 0.5166 ) }
    dend_6 { pt3dadd( 288.949, 342.106, 39.0858, 0.522 ) }
    dend_6 { pt3dadd( 288.232, 341.268, 38.8231, 0.5674 ) }
    dend_6 { pt3dadd( 287.626, 340.348, 38.4877, 0.4794 ) }
    dend_6 { pt3dadd( 287.059, 339.366, 38.2066, 0.4644 ) }
    dend_6 { pt3dadd( 286.432, 338.419, 37.9784, 0.4042 ) }
    dend_6 { pt3dadd( 285.676, 337.615, 37.6916, 0.4506 ) }
    dend_6 { pt3dadd( 284.753, 337.046, 37.3386, 0.4552 ) }
    dend_6 { pt3dadd( 283.758, 336.52, 37.0168, 0.402 ) }
    dend_6 { pt3dadd( 283.02, 335.706, 36.7934, 0.375 ) }
    dend_6 { pt3dadd( 282.569, 334.666, 36.5994, 0.4336 ) }
    dend_6 { pt3dadd( 282.002, 333.69, 36.3877, 0.472 ) }
    dend_6 { pt3dadd( 281.411, 332.714, 36.1869, 0.428 ) }
    dend_6 { pt3dadd( 280.863, 331.719, 35.9559, 0.4476 ) }
    dend_6 { pt3dadd( 280.203, 330.842, 35.623, 0.4496 ) }
    dend_6 { pt3dadd( 279.405, 330.07, 35.2229, 0.3916 ) }
    dend_6 { pt3dadd( 278.502, 329.385, 34.8401, 0.3542 ) }
    dend_6 { pt3dadd( 277.467, 328.926, 34.4994, 0.4018 ) }
    dend_6 { pt3dadd( 276.413, 328.503, 34.1866, 0.3814 ) }
    dend_6 { pt3dadd( 275.481, 327.904, 33.871, 0.4136 ) }
    dend_6 { pt3dadd( 274.695, 327.116, 33.572, 0.361 ) }
    dend_6 { pt3dadd( 274.041, 326.19, 33.3533, 0.351 ) }
    dend_6 { pt3dadd( 273.45, 325.224, 33.2814, 0.365 ) }
    dend_6 { pt3dadd( 272.788, 324.297, 33.3049, 0.4632 ) }
    dend_6 { pt3dadd( 272.032, 323.44, 33.3931, 0.5218 ) }
    dend_6 { pt3dadd( 271.172, 322.69, 33.5443, 0.5444 ) }
    dend_6 { pt3dadd( 270.265, 321.992, 33.7364, 0.5464 ) }
    dend_6 { pt3dadd( 269.481, 321.186, 34.0021, 0.5146 ) }
    dend_6 { pt3dadd( 268.986, 320.195, 34.3454, 0.6292 ) }
    dend_6 { pt3dadd( 268.626, 319.119, 34.7077, 0.6838 ) }
    dend_6 { pt3dadd( 268.222, 318.06, 35.0904, 0.6376 ) }
    dend_6 { pt3dadd( 267.781, 317.034, 35.5194, 0.5812 ) }
    dend_6 { pt3dadd( 267.235, 316.048, 35.9531, 0.5624 ) }
    dend_6 { pt3dadd( 266.625, 315.087, 36.3524, 0.5686 ) }
    dend_6 { pt3dadd( 266.05, 314.112, 36.7382, 0.6098 ) }
    dend_6 { pt3dadd( 265.55, 313.104, 37.1412, 0.543 ) }
    dend_6 { pt3dadd( 265.055, 312.082, 37.5393, 0.427 ) }
    dend_6 { pt3dadd( 264.373, 311.17, 37.8935, 0.4038 ) }
    dend_6 { pt3dadd( 263.455, 310.524, 38.1738, 0.343 ) }
    dend_6 { pt3dadd( 262.445, 310.045, 38.5426, 0.3168 ) }
    dend_6 { pt3dadd( 261.675, 309.602, 39.1653, 0.3068 ) }
    dend_6 { pt3dadd( 260.743, 309.175, 39.895, 0.3286 ) }
    dend_6 { pt3dadd( 259.755, 308.651, 40.591, 0.4016 ) }
    dend_6 { pt3dadd( 258.776, 308.254, 41.3101, 0.3808 ) }
    dend_6 { pt3dadd( 257.679, 308.464, 41.9297, 0.4126 ) }
    dend_6 { pt3dadd( 256.537, 308.446, 42.3371, 0.359 ) }
    dend_6 { pt3dadd( 255.401, 308.452, 42.6328, 0.3486 ) }
    dend_6 { pt3dadd( 254.305, 308.778, 42.8005, 0.3544 ) }
    dend_6 { pt3dadd( 253.481, 309.569, 42.9064, 0.4736 ) }
    dend_6 { pt3dadd( 252.362, 309.804, 42.9842, 0.3954 ) }
    dend_6 { pt3dadd( 251.236, 309.962, 43.0055, 0.3304 ) }
    dend_6 { pt3dadd( 250.094, 310.022, 43.0601, 0.2796 ) }
    dend_6 { pt3dadd( 248.957, 310.024, 43.162, 0.305 ) }
    dend_6 { pt3dadd( 247.905, 310.367, 43.68, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 88/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 338.701, 351.423, 45.7293, 0.5482 ) }
    dend_5 { pt3dadd( 338.344, 351.662, 45.7321, 0.4576 ) }
    dend_5 { pt3dadd( 337.4, 352.139, 47.2749, 0.484 ) }
    dend_5 { pt3dadd( 336.414, 352.246, 47.9612, 0.4068 ) }
    dend_5 { pt3dadd( 335.44, 351.979, 48.7796, 0.3898 ) }
    dend_5 { pt3dadd( 334.548, 351.402, 49.6446, 0.4324 ) }
    dend_5 { pt3dadd( 333.698, 350.689, 50.4658, 0.6088 ) }
    dend_5 { pt3dadd( 332.887, 349.899, 51.1885, 0.6926 ) }
    dend_5 { pt3dadd( 332.146, 349.063, 51.8445, 0.656 ) }
    dend_5 { pt3dadd( 331.393, 348.267, 52.4824, 0.604 ) }
    dend_5 { pt3dadd( 330.681, 347.433, 53.1107, 0.6592 ) }
    dend_5 { pt3dadd( 330.015, 346.54, 53.718, 0.484 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_5 { pt3dadd( 329.276, 345.682, 54.2769, 0.3622 ) }
    dend_5 { pt3dadd( 328.457, 344.891, 54.7879, 0.2954 ) }
    dend_5 { pt3dadd( 327.599, 344.16, 55.2927, 0.314 ) }
    dend_5 { pt3dadd( 326.693, 343.512, 55.8205, 0.3434 ) }
    dend_5 { pt3dadd( 325.773, 342.928, 56.397, 0.4226 ) }
    dend_5 { pt3dadd( 324.877, 342.341, 57.029, 0.4508 ) }
    dend_5 { pt3dadd( 323.949, 341.748, 57.6615, 0.3926 ) }
    dend_5 { pt3dadd( 323.044, 341.085, 58.2369, 0.3622 ) }
    dend_5 { pt3dadd( 322.226, 340.29, 58.7199, 0.3868 ) }
    dend_5 { pt3dadd( 321.347, 339.567, 59.113, 0.4984 ) }
    dend_5 { pt3dadd( 320.362, 338.993, 59.4658, 0.6124 ) }
    dend_5 { pt3dadd( 319.36, 338.475, 59.8402, 0.5898 ) }
    dend_5 { pt3dadd( 318.351, 338.025, 60.2848, 0.539 ) }
    dend_5 { pt3dadd( 317.357, 337.573, 60.8079, 0.4872 ) }
    dend_5 { pt3dadd( 316.39, 337.043, 61.3749, 0.4152 ) }
    dend_5 { pt3dadd( 315.379, 336.543, 61.9172, 0.393 ) }
    dend_5 { pt3dadd( 314.307, 336.15, 62.3963, 0.4994 ) }
    dend_5 { pt3dadd( 313.225, 335.788, 62.8306, 0.438 ) }
    dend_5 { pt3dadd( 312.139, 335.493, 63.2724, 0.434 ) }
    dend_5 { pt3dadd( 311.044, 335.341, 63.7731, 0.3522 ) }
    dend_5 { pt3dadd( 309.963, 335.203, 64.3482, 0.3334 ) }
    dend_5 { pt3dadd( 308.886, 335.049, 64.9849, 0.3384 ) }
    dend_5 { pt3dadd( 307.774, 334.943, 65.6177, 0.3834 ) }
    dend_5 { pt3dadd( 306.653, 334.81, 66.206, 0.5224 ) }
    dend_5 { pt3dadd( 305.578, 334.562, 66.7892, 0.5112 ) }
    dend_5 { pt3dadd( 304.526, 334.306, 67.3758, 0.4214 ) }
    dend_5 { pt3dadd( 303.425, 334.252, 67.9171, 0.3624 ) }
    dend_5 { pt3dadd( 302.309, 334.44, 68.3698, 0.417 ) }
    dend_5 { pt3dadd( 301.192, 334.66, 68.7277, 0.4102 ) }
    dend_5 { pt3dadd( 300.064, 334.625, 69.0178, 0.4628 ) }
    dend_5 { pt3dadd( 298.982, 334.276, 69.2462, 0.4726 ) }
    dend_5 { pt3dadd( 297.956, 333.789, 69.3932, 0.4586 ) }
    dend_5 { pt3dadd( 296.926, 333.333, 69.5279, 0.3602 ) }
    dend_5 { pt3dadd( 295.928, 332.933, 69.8096, 0.3018 ) }
    dend_5 { pt3dadd( 295.008, 332.486, 70.2705, 0.2778 ) }
    dend_5 { pt3dadd( 294.081, 331.909, 70.7683, 0.2806 ) }
    dend_5 { pt3dadd( 293.149, 331.269, 71.1682, 0.2858 ) }
    dend_5 { pt3dadd( 292.134, 330.794, 71.4736, 0.295 ) }
    dend_5 { pt3dadd( 291.068, 330.456, 71.8018, 0.3134 ) }
    dend_5 { pt3dadd( 290.078, 330.224, 72.308, 0.3424 ) }
    dend_5 { pt3dadd( 289.082, 330.03, 72.9537, 0.4206 ) }
    dend_5 { pt3dadd( 288.02, 329.833, 73.6812, 0.4468 ) }
    dend_5 { pt3dadd( 287.012, 329.665, 74.5251, 0.3854 ) }
    dend_5 { pt3dadd( 285.96, 329.434, 75.3567, 0.349 ) }
    dend_5 { pt3dadd( 284.865, 329.18, 76.0922, 0.3624 ) }
    dend_5 { pt3dadd( 283.76, 328.99, 76.7337, 0.4526 ) }
    dend_5 { pt3dadd( 282.661, 328.958, 77.3228, 0.5316 ) }
    dend_5 { pt3dadd( 281.558, 328.886, 77.8677, 0.4186 ) }
    dend_5 { pt3dadd( 280.567, 328.366, 78.2785, 0.3254 ) }
    dend_5 { pt3dadd( 279.589, 327.782, 78.6388, 0.2746 ) }
    dend_5 { pt3dadd( 278.604, 327.21, 78.9824, 0.2746 ) }
    dend_5 { pt3dadd( 277.548, 326.783, 79.2994, 0.2746 ) }
    dend_5 { pt3dadd( 276.454, 326.56, 79.6664, 0.2748 ) }
    dend_5 { pt3dadd( 275.403, 326.308, 80.131, 0.275 ) }
    dend_5 { pt3dadd( 274.375, 325.921, 80.6523, 0.2752 ) }
    dend_5 { pt3dadd( 273.354, 325.436, 81.1471, 0.276 ) }
    dend_5 { pt3dadd( 272.341, 324.911, 81.5811, 0.2772 ) }
    dend_5 { pt3dadd( 271.316, 324.404, 81.9669, 0.2792 ) }
    dend_5 { pt3dadd( 270.292, 323.897, 82.3136, 0.2834 ) }
    dend_5 { pt3dadd( 269.251, 323.441, 82.6731, 0.2906 ) }
    dend_5 { pt3dadd( 268.233, 322.96, 83.0914, 0.3056 ) }
    dend_5 { pt3dadd( 267.323, 322.317, 83.5904, 0.3266 ) }
    dend_5 { pt3dadd( 266.473, 321.633, 84.1943, 0.3978 ) }
    dend_5 { pt3dadd( 265.592, 320.994, 84.8792, 0.3738 ) }
    dend_5 { pt3dadd( 264.607, 320.474, 85.5812, 0.3994 ) }
    dend_5 { pt3dadd( 263.577, 319.994, 86.2291, 0.335 ) }
    dend_5 { pt3dadd( 262.601, 319.595, 86.9333, 0.302 ) }
    dend_5 { pt3dadd( 261.804, 319.77, 87.7822, 0.2782 ) }
    dend_5 { pt3dadd( 261.018, 320.488, 88.5724, 0.2814 ) }
    dend_5 { pt3dadd( 260.12, 321.191, 89.1825, 0.287 ) }
    dend_5 { pt3dadd( 259.266, 321.947, 89.6546, 0.2986 ) }
    dend_5 { pt3dadd( 258.549, 322.828, 89.9388, 0.314 ) }
    dend_5 { pt3dadd( 258.098, 323.874, 90.1365, 0.3732 ) }
    dend_5 { pt3dadd( 257.607, 324.905, 90.288, 0.3334 ) }
    dend_5 { pt3dadd( 256.819, 325.731, 90.419, 0.299 ) }
    dend_5 { pt3dadd( 256.175, 326.658, 90.6114, 0.2728 ) }
    dend_5 { pt3dadd( 256.013, 327.777, 90.8516, 0.2712 ) }
    dend_5 { pt3dadd( 255.677, 328.868, 91.0521, 0.2684 ) }
    dend_5 { pt3dadd( 254.927, 329.728, 91.243, 0.2628 ) }
    dend_5 { pt3dadd( 254.116, 330.523, 91.4455, 0.2542 ) }
    dend_5 { pt3dadd( 253.157, 331.146, 91.5894, 0.2288 ) }
    dend_5 { pt3dadd( 252.938, 332.218, 92.12, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 82/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 365.87, 362.919, 41.1597, 0.3336 ) }
    dend_3 { pt3dadd( 366.175, 364.088, 40.8117, 0.4016 ) }
    dend_3 { pt3dadd( 366.337, 365.188, 40.4368, 0.4224 ) }
    dend_3 { pt3dadd( 366.312, 366.325, 40.1016, 0.517 ) }
    dend_3 { pt3dadd( 366.069, 367.43, 39.7911, 0.648 ) }
    dend_3 { pt3dadd( 365.684, 368.475, 39.4657, 0.6502 ) }
    dend_3 { pt3dadd( 365.297, 369.531, 39.167, 0.6786 ) }
    dend_3 { pt3dadd( 364.933, 370.61, 39.0043, 0.6118 ) }
    dend_3 { pt3dadd( 364.629, 371.694, 38.9718, 0.6118 ) }
    dend_3 { pt3dadd( 364.497, 372.82, 38.9631, 0.4678 ) }
    dend_3 { pt3dadd( 364.572, 373.952, 38.9155, 0.4422 ) }
    dend_3 { pt3dadd( 364.688, 375.084, 38.8732, 0.367 ) }
    dend_3 { pt3dadd( 364.706, 376.222, 38.8702, 0.3626 ) }
    dend_3 { pt3dadd( 364.826, 377.347, 38.8556, 0.3856 ) }
    dend_3 { pt3dadd( 365.147, 378.426, 38.7548, 0.5038 ) }
    dend_3 { pt3dadd( 365.654, 379.425, 38.5893, 0.5866 ) }
    dend_3 { pt3dadd( 366.275, 380.38, 38.4219, 0.7158 ) }
    dend_3 { pt3dadd( 366.846, 381.365, 38.2878, 0.6158 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_3 { pt3dadd( 367.153, 382.444, 38.2085, 0.4766 ) }
    dend_3 { pt3dadd( 367.115, 383.576, 38.1937, 0.451 ) }
    dend_3 { pt3dadd( 366.877, 384.668, 38.1836, 0.42 ) }
    dend_3 { pt3dadd( 366.424, 385.685, 38.0671, 0.5104 ) }
    dend_3 { pt3dadd( 366.004, 386.727, 37.8899, 0.418 ) }
    dend_3 { pt3dadd( 365.706, 387.827, 37.7154, 0.3662 ) }
    dend_3 { pt3dadd( 365.53, 388.955, 37.5553, 0.3756 ) }
    dend_3 { pt3dadd( 365.358, 390.086, 37.4326, 0.338 ) }
    dend_3 { pt3dadd( 365.214, 391.216, 37.3416, 0.3076 ) }
    dend_3 { pt3dadd( 365.101, 392.343, 37.2646, 0.2886 ) }
    dend_3 { pt3dadd( 364.817, 393.434, 37.2148, 0.3016 ) }
    dend_3 { pt3dadd( 364.604, 394.539, 37.2366, 0.3194 ) }
    dend_3 { pt3dadd( 364.543, 395.675, 37.2358, 0.3834 ) }
    dend_3 { pt3dadd( 364.766, 396.771, 37.2019, 0.352 ) }
    dend_3 { pt3dadd( 365.225, 397.817, 37.1706, 0.3348 ) }
    dend_3 { pt3dadd( 365.497, 398.915, 37.1479, 0.3336 ) }
    dend_3 { pt3dadd( 365.533, 400.055, 37.133, 0.4102 ) }
    dend_3 { pt3dadd( 365.426, 401.187, 37.0866, 0.398 ) }
    dend_3 { pt3dadd( 365.193, 402.306, 37.0418, 0.4392 ) }
    dend_3 { pt3dadd( 365.096, 403.433, 37.0096, 0.4344 ) }
    dend_3 { pt3dadd( 365.229, 404.566, 36.9499, 0.3622 ) }
    dend_3 { pt3dadd( 365.415, 405.688, 36.8466, 0.3054 ) }
    dend_3 { pt3dadd( 365.684, 406.788, 36.7293, 0.2844 ) }
    dend_3 { pt3dadd( 365.961, 407.89, 36.6433, 0.293 ) }
    dend_3 { pt3dadd( 366.052, 409.023, 36.5781, 0.3084 ) }
    dend_3 { pt3dadd( 366.15, 410.145, 36.5313, 0.3394 ) }
    dend_3 { pt3dadd( 366.317, 411.261, 36.44, 0.3852 ) }
    dend_3 { pt3dadd( 366.388, 412.397, 36.3686, 0.5256 ) }
    dend_3 { pt3dadd( 366.467, 413.529, 36.314, 0.5172 ) }
    dend_3 { pt3dadd( 366.469, 414.663, 36.2208, 0.4334 ) }
    dend_3 { pt3dadd( 366.427, 415.806, 36.1256, 0.3798 ) }
    dend_3 { pt3dadd( 366.365, 416.932, 36.0707, 0.4736 ) }
    dend_3 { pt3dadd( 366.224, 418.046, 36.0769, 0.3956 ) }
    dend_3 { pt3dadd( 366.149, 419.151, 36.0007, 0.33 ) }
    dend_3 { pt3dadd( 366.185, 420.251, 35.8476, 0.283 ) }
    dend_3 { pt3dadd( 366.225, 421.391, 35.7372, 0.2902 ) }
    dend_3 { pt3dadd( 366.22, 422.524, 35.6714, 0.3046 ) }
    dend_3 { pt3dadd( 366.101, 423.653, 35.6574, 0.325 ) }
    dend_3 { pt3dadd( 366.159, 424.785, 35.6961, 0.3936 ) }
    dend_3 { pt3dadd( 366.294, 425.92, 35.7479, 0.3712 ) }
    dend_3 { pt3dadd( 366.321, 427.06, 35.8117, 0.37 ) }
    dend_3 { pt3dadd( 366.132, 428.177, 35.8711, 0.401 ) }
    dend_3 { pt3dadd( 365.658, 429.201, 35.8954, 0.5248 ) }
    dend_3 { pt3dadd( 365.007, 430.127, 35.8422, 0.6622 ) }
    dend_3 { pt3dadd( 364.453, 431.103, 35.7322, 0.6776 ) }
    dend_3 { pt3dadd( 364.163, 432.192, 35.6205, 0.7244 ) }
    dend_3 { pt3dadd( 364.157, 433.32, 35.5704, 0.7222 ) }
    dend_3 { pt3dadd( 364.243, 434.447, 35.6367, 0.6926 ) }
    dend_3 { pt3dadd( 364.254, 435.584, 35.7622, 0.5336 ) }
    dend_3 { pt3dadd( 364.189, 436.724, 35.9108, 0.5138 ) }
    dend_3 { pt3dadd( 364.14, 437.86, 36.1099, 0.5148 ) }
    dend_3 { pt3dadd( 364.169, 438.971, 36.3958, 0.5624 ) }
    dend_3 { pt3dadd( 364.142, 440.07, 36.7517, 0.4288 ) }
    dend_3 { pt3dadd( 364.146, 441.197, 37.0815, 0.344 ) }
    dend_3 { pt3dadd( 364.293, 442.33, 37.3537, 0.3102 ) }
    dend_3 { pt3dadd( 364.365, 443.465, 37.578, 0.335 ) }
    dend_3 { pt3dadd( 364.263, 444.602, 37.763, 0.4132 ) }
    dend_3 { pt3dadd( 364.189, 445.734, 37.954, 0.402 ) }
    dend_3 { pt3dadd( 364.278, 446.861, 38.1746, 0.454 ) }
    dend_3 { pt3dadd( 364.393, 447.987, 38.425, 0.4256 ) }
    dend_3 { pt3dadd( 364.39, 449.12, 38.6901, 0.5222 ) }
    dend_3 { pt3dadd( 364.377, 450.258, 38.9396, 0.4334 ) }
    dend_3 { pt3dadd( 364.466, 451.381, 39.188, 0.4254 ) }
    dend_3 { pt3dadd( 364.6, 452.504, 39.4128, 0.3358 ) }
    dend_3 { pt3dadd( 364.656, 453.61, 39.4954, 0.3036 ) }
    dend_3 { pt3dadd( 364.551, 454.719, 39.4671, 0.2814 ) }
    dend_3 { pt3dadd( 364.442, 455.814, 39.517, 0.287 ) }
    dend_3 { pt3dadd( 364.458, 456.947, 39.5592, 0.2988 ) }
    dend_3 { pt3dadd( 364.444, 458.09, 39.5727, 0.3142 ) }
    dend_3 { pt3dadd( 364.386, 459.229, 39.5391, 0.3736 ) }
    dend_3 { pt3dadd( 364.28, 460.367, 39.4934, 0.3342 ) }
    dend_3 { pt3dadd( 364.062, 461.487, 39.4226, 0.3004 ) }
    dend_3 { pt3dadd( 363.818, 462.575, 39.2599, 0.2754 ) }
    dend_3 { pt3dadd( 363.71, 463.706, 39.1054, 0.2762 ) }
    dend_3 { pt3dadd( 363.556, 464.828, 39.0569, 0.2776 ) }
    dend_3 { pt3dadd( 363.276, 465.933, 39.0656, 0.2802 ) }
    dend_3 { pt3dadd( 362.904, 467.013, 39.0827, 0.285 ) }
    dend_3 { pt3dadd( 362.403, 468.039, 39.1364, 0.2938 ) }
    dend_3 { pt3dadd( 361.938, 469.074, 39.2406, 0.3112 ) }
    dend_3 { pt3dadd( 361.439, 470.098, 39.3459, 0.3382 ) }
    dend_3 { pt3dadd( 360.81, 471.052, 39.4047, 0.413 ) }
    dend_3 { pt3dadd( 360.222, 472.033, 39.4083, 0.4328 ) }
    dend_3 { pt3dadd( 359.812, 473.095, 39.3254, 0.3594 ) }
    dend_3 { pt3dadd( 359.924, 474.214, 39.2339, 0.3 ) }
    dend_3 { pt3dadd( 360.297, 475.294, 39.0793, 0.2746 ) }
    dend_3 { pt3dadd( 360.392, 476.341, 38.724, 0.2746 ) }
    dend_3 { pt3dadd( 360.288, 477.422, 38.2628, 0.2746 ) }
    dend_3 { pt3dadd( 360.09, 478.527, 37.786, 0.2748 ) }
    dend_3 { pt3dadd( 359.955, 479.644, 37.3192, 0.275 ) }
    dend_3 { pt3dadd( 359.714, 480.761, 36.9412, 0.2752 ) }
    dend_3 { pt3dadd( 359.002, 481.65, 36.6344, 0.2758 ) }
    dend_3 { pt3dadd( 358.217, 482.477, 36.3947, 0.277 ) }
    dend_3 { pt3dadd( 357.621, 483.437, 36.1732, 0.2792 ) }
    dend_3 { pt3dadd( 357.127, 484.466, 35.999, 0.2828 ) }
    dend_3 { pt3dadd( 356.549, 485.446, 35.9349, 0.291 ) }
    dend_3 { pt3dadd( 356.291, 486.551, 35.8579, 0.2994 ) }
    dend_3 { pt3dadd( 356.024, 487.661, 35.7935, 0.3474 ) }
    dend_3 { pt3dadd( 355.841, 488.787, 35.7454, 0.2796 ) }
    dend_3 { pt3dadd( 355.784, 489.861, 36.12, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 99/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 365.87, 362.919, 41.1597, 0.3336 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_2 { pt3dadd( 366.707, 364.071, 41.5044, 0.5972 ) }
    dend_2 { pt3dadd( 367.12, 365.043, 43.1698, 0.4876 ) }
    dend_2 { pt3dadd( 367.0, 366.007, 43.8987, 0.4798 ) }
    dend_2 { pt3dadd( 366.546, 366.845, 44.816, 0.4324 ) }
    dend_2 { pt3dadd( 365.793, 367.409, 45.8492, 0.5036 ) }
    dend_2 { pt3dadd( 364.787, 367.703, 46.8678, 0.5502 ) }
    dend_2 { pt3dadd( 363.673, 367.798, 47.759, 0.5942 ) }
    dend_2 { pt3dadd( 362.551, 367.881, 48.5162, 0.6522 ) }
    dend_2 { pt3dadd( 361.531, 368.248, 49.1974, 0.6458 ) }
    dend_2 { pt3dadd( 360.629, 368.857, 49.8268, 0.501 ) }
    dend_2 { pt3dadd( 359.754, 369.573, 50.3376, 0.4202 ) }
    dend_2 { pt3dadd( 359.007, 370.424, 50.7903, 0.5024 ) }
    dend_2 { pt3dadd( 358.169, 371.196, 51.182, 0.4438 ) }
    dend_2 { pt3dadd( 357.169, 371.737, 51.5385, 0.4448 ) }
    dend_2 { pt3dadd( 356.187, 372.212, 51.9688, 0.3728 ) }
    dend_2 { pt3dadd( 355.355, 372.923, 52.4544, 0.3678 ) }
    dend_2 { pt3dadd( 354.61, 373.741, 52.9796, 0.4208 ) }
    dend_2 { pt3dadd( 353.867, 374.582, 53.4946, 0.447 ) }
    dend_2 { pt3dadd( 353.034, 375.344, 53.9762, 0.3868 ) }
    dend_2 { pt3dadd( 352.058, 375.924, 54.3886, 0.3458 ) }
    dend_2 { pt3dadd( 351.064, 376.469, 54.7515, 0.385 ) }
    dend_2 { pt3dadd( 350.289, 377.293, 55.0589, 0.3554 ) }
    dend_2 { pt3dadd( 349.564, 378.178, 55.2994, 0.3406 ) }
    dend_2 { pt3dadd( 348.73, 378.952, 55.5299, 0.3458 ) }
    dend_2 { pt3dadd( 347.81, 379.617, 55.7698, 0.427 ) }
    dend_2 { pt3dadd( 347.013, 380.433, 55.9762, 0.4586 ) }
    dend_2 { pt3dadd( 346.525, 381.445, 56.2066, 0.4078 ) }
    dend_2 { pt3dadd( 346.041, 382.44, 56.4889, 0.3868 ) }
    dend_2 { pt3dadd( 345.259, 383.266, 56.6913, 0.4506 ) }
    dend_2 { pt3dadd( 344.518, 384.138, 56.8252, 0.5282 ) }
    dend_2 { pt3dadd( 343.859, 385.07, 56.9212, 0.4124 ) }
    dend_2 { pt3dadd( 343.096, 385.863, 56.8652, 0.3136 ) }
    dend_2 { pt3dadd( 342.269, 386.537, 56.9419, 0.2542 ) }
    dend_2 { pt3dadd( 341.384, 387.148, 57.1192, 0.2288 ) }
    dend_2 { pt3dadd( 340.798, 387.93, 56.84, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 35/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 348.843, 344.573, 40.521, 0.605 ) }
    dend_20 { pt3dadd( 348.27, 344.67, 40.6249, 0.578 ) }
    dend_20 { pt3dadd( 347.164, 344.957, 40.6756, 0.7354 ) }
    dend_20 { pt3dadd( 346.067, 345.267, 40.6599, 0.7086 ) }
    dend_20 { pt3dadd( 344.939, 345.438, 40.6969, 0.603 ) }
    dend_20 { pt3dadd( 343.799, 345.47, 40.8206, 0.4508 ) }
    dend_20 { pt3dadd( 342.659, 345.393, 40.9584, 0.4132 ) }
    dend_20 { pt3dadd( 341.546, 345.173, 41.1592, 0.53 ) }
    dend_20 { pt3dadd( 340.47, 344.905, 41.4529, 0.5268 ) }
    dend_20 { pt3dadd( 339.364, 344.783, 41.8015, 0.444 ) }
    dend_20 { pt3dadd( 338.268, 345.029, 42.1501, 0.4352 ) }
    dend_20 { pt3dadd( 337.224, 345.494, 42.4052, 0.403 ) }
    dend_20 { pt3dadd( 336.14, 345.848, 42.5432, 0.4186 ) }
    dend_20 { pt3dadd( 335.009, 346.004, 42.637, 0.5414 ) }
    dend_20 { pt3dadd( 333.892, 346.224, 42.7048, 0.5418 ) }
    dend_20 { pt3dadd( 332.822, 346.626, 42.7213, 0.5024 ) }
    dend_20 { pt3dadd( 331.767, 347.055, 42.6642, 0.3952 ) }
    dend_20 { pt3dadd( 330.662, 347.28, 42.5351, 0.361 ) }
    dend_20 { pt3dadd( 329.525, 347.341, 42.3881, 0.4144 ) }
    dend_20 { pt3dadd( 328.389, 347.471, 42.2635, 0.404 ) }
    dend_20 { pt3dadd( 327.254, 347.615, 42.1753, 0.4576 ) }
    dend_20 { pt3dadd( 326.116, 347.496, 42.1313, 0.4322 ) }
    dend_20 { pt3dadd( 325.029, 347.14, 42.1313, 0.5346 ) }
    dend_20 { pt3dadd( 323.966, 346.717, 42.168, 0.4564 ) }
    dend_20 { pt3dadd( 322.899, 346.306, 42.2285, 0.4676 ) }
    dend_20 { pt3dadd( 321.815, 345.94, 42.3147, 0.4162 ) }
    dend_20 { pt3dadd( 320.738, 345.594, 42.4648, 0.443 ) }
    dend_20 { pt3dadd( 319.675, 345.212, 42.6625, 0.5858 ) }
    dend_20 { pt3dadd( 318.593, 344.845, 42.8436, 0.6274 ) }
    dend_20 { pt3dadd( 317.451, 344.78, 42.9864, 0.645 ) }
    dend_20 { pt3dadd( 316.335, 345.035, 43.0926, 0.737 ) }
    dend_20 { pt3dadd( 315.243, 345.376, 43.167, 0.6188 ) }
    dend_20 { pt3dadd( 314.163, 345.75, 43.2135, 0.6586 ) }
    dend_20 { pt3dadd( 313.09, 346.146, 43.2673, 0.6192 ) }
    dend_20 { pt3dadd( 311.97, 346.384, 43.3339, 0.6376 ) }
    dend_20 { pt3dadd( 310.829, 346.463, 43.4196, 0.6862 ) }
    dend_20 { pt3dadd( 309.715, 346.718, 43.5434, 0.7046 ) }
    dend_20 { pt3dadd( 308.64, 347.024, 43.7629, 0.6292 ) }
    dend_20 { pt3dadd( 307.531, 347.278, 44.0096, 0.5648 ) }
    dend_20 { pt3dadd( 306.388, 347.321, 44.2201, 0.5374 ) }
    dend_20 { pt3dadd( 305.244, 347.347, 44.401, 0.4962 ) }
    dend_20 { pt3dadd( 304.153, 347.462, 44.6748, 0.6018 ) }
    dend_20 { pt3dadd( 303.049, 347.723, 44.9543, 0.6012 ) }
    dend_20 { pt3dadd( 301.907, 347.766, 45.164, 0.639 ) }
    dend_20 { pt3dadd( 300.785, 347.715, 45.2777, 0.5188 ) }
    dend_20 { pt3dadd( 299.662, 347.501, 45.4157, 0.5336 ) }
    dend_20 { pt3dadd( 298.609, 347.255, 45.7024, 0.5526 ) }
    dend_20 { pt3dadd( 297.566, 346.935, 46.0793, 0.6282 ) }
    dend_20 { pt3dadd( 296.661, 346.252, 46.4607, 0.571 ) }
    dend_20 { pt3dadd( 295.731, 345.646, 46.8818, 0.5092 ) }
    dend_20 { pt3dadd( 294.599, 345.488, 47.2287, 0.4078 ) }
    dend_20 { pt3dadd( 293.455, 345.478, 47.4709, 0.3856 ) }
    dend_20 { pt3dadd( 292.319, 345.409, 47.6487, 0.4546 ) }
    dend_20 { pt3dadd( 291.253, 345.068, 47.8234, 0.5044 ) }
    dend_20 { pt3dadd( 290.227, 344.58, 47.8652, 0.5186 ) }
    dend_20 { pt3dadd( 289.212, 344.097, 47.7744, 0.4668 ) }
    dend_20 { pt3dadd( 288.156, 343.659, 47.6638, 0.5216 ) }
    dend_20 { pt3dadd( 287.064, 343.319, 47.5457, 0.5768 ) }
    dend_20 { pt3dadd( 285.926, 343.205, 47.4216, 0.6756 ) }
    dend_20 { pt3dadd( 284.782, 343.2, 47.2881, 0.6484 ) }
    dend_20 { pt3dadd( 283.663, 343.2, 47.0946, 0.7038 ) }
    dend_20 { pt3dadd( 282.531, 343.201, 46.8773, 0.5204 ) }
    dend_20 { pt3dadd( 281.387, 343.206, 46.7026, 0.4254 ) }
    dend_20 { pt3dadd( 280.253, 343.243, 46.5998, 0.4328 ) }
    dend_20 { pt3dadd( 279.139, 343.497, 46.4702, 0.4708 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_20 { pt3dadd( 278.106, 343.951, 46.4131, 0.4244 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 1/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 348.843, 344.573, 40.521, 0.605 ) }
    dend_19 { pt3dadd( 348.131, 343.74, 37.5936, 0.595 ) }
    dend_19 { pt3dadd( 347.378, 343.002, 36.6318, 0.6236 ) }
    dend_19 { pt3dadd( 346.633, 342.134, 36.2908, 0.7382 ) }
    dend_19 { pt3dadd( 345.837, 341.397, 35.8478, 0.652 ) }
    dend_19 { pt3dadd( 345.029, 340.753, 35.2428, 0.5696 ) }
    dend_19 { pt3dadd( 344.342, 339.928, 34.5895, 0.498 ) }
    dend_19 { pt3dadd( 343.703, 338.984, 34.0018, 0.4288 ) }
    dend_19 { pt3dadd( 342.968, 338.126, 33.4435, 0.4492 ) }
    dend_19 { pt3dadd( 342.21, 337.328, 32.8146, 0.4526 ) }
    dend_19 { pt3dadd( 341.553, 336.427, 32.172, 0.3972 ) }
    dend_19 { pt3dadd( 340.914, 335.483, 31.5381, 0.3648 ) }
    dend_19 { pt3dadd( 340.385, 334.691, 30.7244, 0.4214 ) }
    dend_19 { pt3dadd( 340.133, 333.891, 29.6898, 0.4172 ) }
    dend_19 { pt3dadd( 340.2, 332.953, 28.5617, 0.4818 ) }
    dend_19 { pt3dadd( 340.075, 331.987, 27.4144, 0.478 ) }
    dend_19 { pt3dadd( 339.227, 331.342, 26.4005, 0.6148 ) }
    dend_19 { pt3dadd( 338.156, 330.97, 25.5596, 0.6276 ) }
    dend_19 { pt3dadd( 337.153, 330.76, 24.7537, 0.6764 ) }
    dend_19 { pt3dadd( 336.182, 330.48, 23.9702, 0.645 ) }
    dend_19 { pt3dadd( 335.134, 330.159, 23.28, 0.4918 ) }
    dend_19 { pt3dadd( 334.03, 329.877, 22.7796, 0.4394 ) }
    dend_19 { pt3dadd( 332.912, 329.677, 22.4666, 0.3628 ) }
    dend_19 { pt3dadd( 331.83, 329.401, 22.175, 0.3484 ) }
    dend_19 { pt3dadd( 330.951, 328.744, 21.8816, 0.39 ) }
    dend_19 { pt3dadd( 330.005, 328.113, 21.6448, 0.3644 ) }
    dend_19 { pt3dadd( 328.917, 327.787, 21.5111, 0.3576 ) }
    dend_19 { pt3dadd( 327.827, 327.807, 21.5105, 0.3768 ) }
    dend_19 { pt3dadd( 326.692, 327.805, 21.5223, 0.4864 ) }
    dend_19 { pt3dadd( 325.576, 327.778, 21.3982, 0.5592 ) }
    dend_19 { pt3dadd( 324.456, 327.732, 21.1496, 0.6406 ) }
    dend_19 { pt3dadd( 323.325, 327.606, 20.8153, 0.5938 ) }
    dend_19 { pt3dadd( 322.387, 326.984, 20.3779, 0.5524 ) }
    dend_19 { pt3dadd( 321.803, 326.051, 19.8138, 0.4834 ) }
    dend_19 { pt3dadd( 320.987, 325.25, 19.2924, 0.548 ) }
    dend_19 { pt3dadd( 320.064, 324.964, 18.6244, 0.6468 ) }
    dend_19 { pt3dadd( 319.024, 324.766, 17.9299, 0.7034 ) }
    dend_19 { pt3dadd( 318.144, 324.159, 17.2501, 0.5084 ) }
    dend_19 { pt3dadd( 317.002, 324.095, 16.24, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 40/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 348.691, 321.006, 47.0165, 0.4024 ) }
    dend_16 { pt3dadd( 348.28, 319.952, 47.2214, 0.4126 ) }
    dend_16 { pt3dadd( 348.125, 318.865, 47.2497, 0.6082 ) }
    dend_16 { pt3dadd( 347.771, 317.783, 47.2349, 0.5158 ) }
    dend_16 { pt3dadd( 347.441, 316.7, 47.1092, 0.4948 ) }
    dend_16 { pt3dadd( 346.945, 315.681, 46.9428, 0.412 ) }
    dend_16 { pt3dadd( 346.277, 314.762, 46.7639, 0.4722 ) }
    dend_16 { pt3dadd( 345.674, 313.815, 46.604, 0.4616 ) }
    dend_16 { pt3dadd( 345.227, 312.773, 46.5489, 0.5774 ) }
    dend_16 { pt3dadd( 344.925, 311.678, 46.5662, 0.5918 ) }
    dend_16 { pt3dadd( 344.641, 310.571, 46.5959, 0.4458 ) }
    dend_16 { pt3dadd( 344.291, 309.486, 46.6323, 0.3286 ) }
    dend_16 { pt3dadd( 343.905, 308.417, 46.7124, 0.2806 ) }
    dend_16 { pt3dadd( 343.628, 307.326, 46.7611, 0.2856 ) }
    dend_16 { pt3dadd( 343.375, 306.254, 46.7239, 0.295 ) }
    dend_16 { pt3dadd( 342.862, 305.233, 46.699, 0.3124 ) }
    dend_16 { pt3dadd( 342.344, 304.227, 46.7275, 0.3456 ) }
    dend_16 { pt3dadd( 341.789, 303.263, 46.8588, 0.4026 ) }
    dend_16 { pt3dadd( 341.306, 302.242, 47.01, 0.529 ) }
    dend_16 { pt3dadd( 340.838, 301.202, 47.1201, 0.6638 ) }
    dend_16 { pt3dadd( 340.302, 300.191, 47.21, 0.7102 ) }
    dend_16 { pt3dadd( 339.83, 299.151, 47.2584, 0.6406 ) }
    dend_16 { pt3dadd( 339.484, 298.07, 47.234, 0.5808 ) }
    dend_16 { pt3dadd( 339.296, 296.96, 47.1229, 0.5902 ) }
    dend_16 { pt3dadd( 339.246, 295.832, 46.9764, 0.4824 ) }
    dend_16 { pt3dadd( 339.254, 294.699, 46.8443, 0.4328 ) }
    dend_16 { pt3dadd( 339.143, 293.568, 46.7992, 0.5258 ) }
    dend_16 { pt3dadd( 338.932, 292.459, 46.8748, 0.488 ) }
    dend_16 { pt3dadd( 338.74, 291.36, 47.0691, 0.5236 ) }
    dend_16 { pt3dadd( 338.577, 290.246, 47.3161, 0.5326 ) }
    dend_16 { pt3dadd( 338.503, 289.109, 47.5107, 0.5968 ) }
    dend_16 { pt3dadd( 338.424, 287.978, 47.6319, 0.4868 ) }
    dend_16 { pt3dadd( 338.249, 286.852, 47.7372, 0.4794 ) }
    dend_16 { pt3dadd( 338.046, 285.732, 47.8792, 0.4254 ) }
    dend_16 { pt3dadd( 337.734, 284.641, 48.0631, 0.522 ) }
    dend_16 { pt3dadd( 337.331, 283.601, 48.3305, 0.433 ) }
    dend_16 { pt3dadd( 336.983, 282.576, 48.7012, 0.4246 ) }
    dend_16 { pt3dadd( 336.784, 281.495, 49.0781, 0.3344 ) }
    dend_16 { pt3dadd( 336.715, 280.357, 49.3268, 0.3012 ) }
    dend_16 { pt3dadd( 336.599, 279.23, 49.4732, 0.2766 ) }
    dend_16 { pt3dadd( 336.215, 278.161, 49.5678, 0.2784 ) }
    dend_16 { pt3dadd( 335.834, 277.102, 49.6126, 0.2818 ) }
    dend_16 { pt3dadd( 335.679, 275.968, 49.6154, 0.2876 ) }
    dend_16 { pt3dadd( 335.399, 274.871, 49.5818, 0.2998 ) }
    dend_16 { pt3dadd( 335.034, 273.799, 49.5379, 0.3162 ) }
    dend_16 { pt3dadd( 334.952, 272.679, 49.5205, 0.3774 ) }
    dend_16 { pt3dadd( 335.11, 271.555, 49.4659, 0.3412 ) }
    dend_16 { pt3dadd( 335.078, 270.447, 49.3595, 0.3136 ) }
    dend_16 { pt3dadd( 334.724, 269.368, 49.2789, 0.2994 ) }
    dend_16 { pt3dadd( 334.4, 268.283, 49.2506, 0.3216 ) }
    dend_16 { pt3dadd( 334.18, 267.161, 49.2358, 0.3576 ) }
    dend_16 { pt3dadd( 333.822, 266.081, 49.2229, 0.4496 ) }
    dend_16 { pt3dadd( 333.268, 265.086, 49.2103, 0.4964 ) }
    dend_16 { pt3dadd( 332.593, 264.167, 49.1996, 0.4978 ) }
    dend_16 { pt3dadd( 331.872, 263.28, 49.217, 0.4582 ) }
    dend_16 { pt3dadd( 331.145, 262.404, 49.2918, 0.3594 ) }
    dend_16 { pt3dadd( 330.354, 261.589, 49.4124, 0.3 ) }
    dend_16 { pt3dadd( 329.674, 260.7, 49.5407, 0.2746 ) }
    dend_16 { pt3dadd( 329.262, 259.64, 49.6849, 0.2746 ) }
    dend_16 { pt3dadd( 328.843, 258.586, 49.868, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 328.295, 257.59, 50.0682, 0.2748 ) }
    dend_16 { pt3dadd( 327.786, 256.572, 50.2676, 0.2748 ) }
    dend_16 { pt3dadd( 327.489, 255.478, 50.4728, 0.2752 ) }
    dend_16 { pt3dadd( 327.356, 254.344, 50.671, 0.2756 ) }
    dend_16 { pt3dadd( 327.215, 253.21, 50.8558, 0.2766 ) }
    dend_16 { pt3dadd( 326.962, 252.099, 51.0541, 0.2782 ) }
    dend_16 { pt3dadd( 326.625, 251.012, 51.2918, 0.2814 ) }
    dend_16 { pt3dadd( 326.296, 249.928, 51.5836, 0.287 ) }
    dend_16 { pt3dadd( 325.959, 248.853, 51.933, 0.299 ) }
    dend_16 { pt3dadd( 325.55, 247.798, 52.3149, 0.3144 ) }
    dend_16 { pt3dadd( 325.175, 246.73, 52.7153, 0.374 ) }
    dend_16 { pt3dadd( 324.909, 245.636, 53.1395, 0.335 ) }
    dend_16 { pt3dadd( 324.683, 244.535, 53.5819, 0.302 ) }
    dend_16 { pt3dadd( 324.484, 243.419, 54.0098, 0.2784 ) }
    dend_16 { pt3dadd( 324.138, 242.355, 54.43, 0.2818 ) }
    dend_16 { pt3dadd( 323.54, 241.422, 54.8736, 0.2878 ) }
    dend_16 { pt3dadd( 322.879, 240.521, 55.3204, 0.3 ) }
    dend_16 { pt3dadd( 322.225, 239.598, 55.7334, 0.3166 ) }
    dend_16 { pt3dadd( 321.52, 238.709, 56.1008, 0.378 ) }
    dend_16 { pt3dadd( 320.781, 237.844, 56.4234, 0.3424 ) }
    dend_16 { pt3dadd( 320.082, 236.944, 56.6916, 0.3154 ) }
    dend_16 { pt3dadd( 319.47, 235.98, 56.8938, 0.3044 ) }
    dend_16 { pt3dadd( 318.908, 234.984, 57.0559, 0.3246 ) }
    dend_16 { pt3dadd( 318.325, 234.002, 57.2113, 0.3928 ) }
    dend_16 { pt3dadd( 317.744, 233.018, 57.3636, 0.3704 ) }
    dend_16 { pt3dadd( 317.227, 232.002, 57.5364, 0.3638 ) }
    dend_16 { pt3dadd( 316.761, 230.969, 57.7587, 0.413 ) }
    dend_16 { pt3dadd( 316.369, 229.903, 58.004, 0.4328 ) }
    dend_16 { pt3dadd( 316.079, 228.799, 58.2478, 0.3594 ) }
    dend_16 { pt3dadd( 315.809, 227.694, 58.5119, 0.3 ) }
    dend_16 { pt3dadd( 315.487, 226.605, 58.8034, 0.2746 ) }
    dend_16 { pt3dadd( 315.123, 225.527, 59.1086, 0.2746 ) }
    dend_16 { pt3dadd( 314.74, 224.457, 59.425, 0.2748 ) }
    dend_16 { pt3dadd( 314.269, 223.43, 59.7646, 0.2748 ) }
    dend_16 { pt3dadd( 313.543, 222.596, 60.1364, 0.2752 ) }
    dend_16 { pt3dadd( 312.561, 222.066, 60.517, 0.2756 ) }
    dend_16 { pt3dadd( 311.471, 221.743, 60.874, 0.2766 ) }
    dend_16 { pt3dadd( 310.345, 221.555, 61.2021, 0.2782 ) }
    dend_16 { pt3dadd( 309.207, 221.447, 61.5143, 0.2814 ) }
    dend_16 { pt3dadd( 308.087, 221.253, 61.8478, 0.2872 ) }
    dend_16 { pt3dadd( 307.081, 220.79, 62.2574, 0.299 ) }
    dend_16 { pt3dadd( 306.338, 220.001, 62.7682, 0.3148 ) }
    dend_16 { pt3dadd( 305.903, 219.013, 63.3816, 0.3746 ) }
    dend_16 { pt3dadd( 305.752, 217.918, 64.0382, 0.336 ) }
    dend_16 { pt3dadd( 305.836, 216.794, 64.6856, 0.304 ) }
    dend_16 { pt3dadd( 305.935, 215.715, 65.3778, 0.282 ) }
    dend_16 { pt3dadd( 305.863, 214.688, 66.1357, 0.2882 ) }
    dend_16 { pt3dadd( 305.369, 213.826, 66.9351, 0.301 ) }
    dend_16 { pt3dadd( 304.669, 212.967, 67.6528, 0.3182 ) }
    dend_16 { pt3dadd( 304.251, 211.918, 68.2245, 0.3812 ) }
    dend_16 { pt3dadd( 303.973, 210.82, 68.7324, 0.348 ) }
    dend_16 { pt3dadd( 303.376, 209.861, 69.13, 0.3274 ) }
    dend_16 { pt3dadd( 302.504, 209.131, 69.4884, 0.32 ) }
    dend_16 { pt3dadd( 301.697, 208.456, 69.9633, 0.3844 ) }
    dend_16 { pt3dadd( 300.927, 207.859, 70.5922, 0.3542 ) }
    dend_16 { pt3dadd( 300.336, 206.93, 71.206, 0.3386 ) }
    dend_16 { pt3dadd( 299.919, 205.874, 71.7262, 0.3408 ) }
    dend_16 { pt3dadd( 299.31, 204.921, 72.1624, 0.4238 ) }
    dend_16 { pt3dadd( 298.807, 203.912, 72.5043, 0.423 ) }
    dend_16 { pt3dadd( 298.458, 202.826, 72.6516, 0.4864 ) }
    dend_16 { pt3dadd( 298.002, 201.776, 72.6673, 0.5176 ) }
    dend_16 { pt3dadd( 297.447, 200.795, 72.6463, 0.5376 ) }
    dend_16 { pt3dadd( 297.018, 199.743, 72.487, 0.5282 ) }
    dend_16 { pt3dadd( 296.69, 198.754, 72.1109, 0.5084 ) }
    dend_16 { pt3dadd( 296.148, 198.021, 71.5173, 0.483 ) }
    dend_16 { pt3dadd( 295.168, 197.717, 70.8686, 0.3814 ) }
    dend_16 { pt3dadd( 294.122, 197.912, 70.28, 0.4576 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 67/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 348.691, 321.006, 47.0165, 0.4024 ) }
    dend_13 { pt3dadd( 348.233, 320.919, 47.8248, 0.2288 ) }
    dend_13 { pt3dadd( 347.122, 320.869, 47.8092, 0.3872 ) }
    dend_13 { pt3dadd( 346.004, 321.044, 47.852, 0.5352 ) }
    dend_13 { pt3dadd( 344.891, 321.273, 47.9682, 0.5068 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 72/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 367.91, 339.539, 43.68, 0.624 ) }
    dend_11 { pt3dadd( 368.299, 338.169, 44.2266, 0.6324 ) }
    dend_11 { pt3dadd( 368.406, 337.062, 44.4506, 0.4682 ) }
    dend_11 { pt3dadd( 368.075, 336.007, 44.7432, 0.3968 ) }
    dend_11 { pt3dadd( 368.184, 334.904, 45.0568, 0.5062 ) }
    dend_11 { pt3dadd( 368.668, 333.874, 45.3412, 0.4506 ) }
    dend_11 { pt3dadd( 369.208, 332.876, 45.5896, 0.4586 ) }
    dend_11 { pt3dadd( 369.59, 331.807, 45.7369, 0.3924 ) }
    dend_11 { pt3dadd( 369.964, 330.767, 45.7495, 0.4336 ) }
    dend_11 { pt3dadd( 370.642, 329.896, 45.7551, 0.4002 ) }
    dend_11 { pt3dadd( 371.387, 329.111, 45.9007, 0.4136 ) }
    dend_11 { pt3dadd( 372.054, 328.211, 46.0603, 0.531 ) }
    dend_11 { pt3dadd( 372.697, 327.296, 46.1367, 0.5272 ) }
    dend_11 { pt3dadd( 373.24, 326.326, 46.2244, 0.451 ) }
    dend_11 { pt3dadd( 373.703, 325.314, 46.44, 0.418 ) }
    dend_11 { pt3dadd( 374.261, 324.397, 46.7832, 0.5168 ) }
    dend_11 { pt3dadd( 374.804, 323.457, 47.1772, 0.6102 ) }
    dend_11 { pt3dadd( 375.279, 322.423, 47.5429, 0.7618 ) }
    dend_11 { pt3dadd( 375.642, 321.352, 47.871, 0.6892 ) }
    dend_11 { pt3dadd( 375.805, 320.223, 48.1174, 0.6702 ) }
    dend_11 { pt3dadd( 375.849, 319.082, 48.267, 0.531 ) }
    dend_11 { pt3dadd( 375.716, 317.952, 48.3344, 0.5498 ) }
    dend_11 { pt3dadd( 375.487, 316.836, 48.3552, 0.612 ) }
    dend_11 { pt3dadd( 375.424, 315.721, 48.3986, 0.595 ) }
    dend_11 { pt3dadd( 375.455, 314.599, 48.4142, 0.5202 ) }
    dend_11 { pt3dadd( 375.456, 313.471, 48.3053, 0.5918 ) }
    dend_11 { pt3dadd( 375.594, 312.367, 48.0673, 0.6186 ) }
    dend_11 { pt3dadd( 375.82, 311.269, 47.7476, 0.4962 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 376.018, 310.158, 47.3869, 0.4178 ) }
    dend_11 { pt3dadd( 376.164, 309.052, 46.9868, 0.4668 ) }
    dend_11 { pt3dadd( 376.376, 307.95, 46.6155, 0.5294 ) }
    dend_11 { pt3dadd( 376.752, 306.875, 46.3294, 0.5534 ) }
    dend_11 { pt3dadd( 377.118, 305.799, 46.1359, 0.588 ) }
    dend_11 { pt3dadd( 377.384, 304.692, 46.0107, 0.4706 ) }
    dend_11 { pt3dadd( 377.618, 303.576, 45.9231, 0.4484 ) }
    dend_11 { pt3dadd( 377.812, 302.451, 45.8777, 0.3734 ) }
    dend_11 { pt3dadd( 377.957, 301.34, 45.7789, 0.399 ) }
    dend_11 { pt3dadd( 377.957, 300.262, 45.556, 0.334 ) }
    dend_11 { pt3dadd( 377.968, 299.182, 45.3729, 0.3002 ) }
    dend_11 { pt3dadd( 378.225, 298.094, 45.2813, 0.275 ) }
    dend_11 { pt3dadd( 378.751, 297.091, 45.2024, 0.2752 ) }
    dend_11 { pt3dadd( 379.373, 296.134, 45.1548, 0.2758 ) }
    dend_11 { pt3dadd( 379.764, 295.078, 45.1492, 0.277 ) }
    dend_11 { pt3dadd( 379.9, 293.948, 45.173, 0.279 ) }
    dend_11 { pt3dadd( 379.959, 292.808, 45.1755, 0.2826 ) }
    dend_11 { pt3dadd( 380.129, 291.68, 45.1388, 0.2894 ) }
    dend_11 { pt3dadd( 380.412, 290.574, 45.0808, 0.303 ) }
    dend_11 { pt3dadd( 380.704, 289.49, 44.9198, 0.3222 ) }
    dend_11 { pt3dadd( 381.121, 288.472, 44.625, 0.3882 ) }
    dend_11 { pt3dadd( 381.653, 287.486, 44.2593, 0.3622 ) }
    dend_11 { pt3dadd( 382.141, 286.463, 43.8754, 0.3474 ) }
    dend_11 { pt3dadd( 382.573, 285.412, 43.4963, 0.3878 ) }
    dend_11 { pt3dadd( 383.041, 284.375, 43.1357, 0.3618 ) }
    dend_11 { pt3dadd( 383.598, 283.386, 42.8002, 0.3464 ) }
    dend_11 { pt3dadd( 384.223, 282.449, 42.4665, 0.3858 ) }
    dend_11 { pt3dadd( 384.937, 281.574, 42.1386, 0.358 ) }
    dend_11 { pt3dadd( 385.658, 280.691, 41.8491, 0.3396 ) }
    dend_11 { pt3dadd( 386.35, 279.781, 41.596, 0.3736 ) }
    dend_11 { pt3dadd( 387.162, 278.992, 41.354, 0.334 ) }
    dend_11 { pt3dadd( 388.076, 278.312, 41.1247, 0.3004 ) }
    dend_11 { pt3dadd( 388.953, 277.586, 40.9049, 0.2752 ) }
    dend_11 { pt3dadd( 389.724, 276.76, 40.6678, 0.2756 ) }
    dend_11 { pt3dadd( 390.436, 275.875, 40.4295, 0.2766 ) }
    dend_11 { pt3dadd( 391.195, 275.023, 40.2181, 0.2784 ) }
    dend_11 { pt3dadd( 392.014, 274.227, 40.0459, 0.2816 ) }
    dend_11 { pt3dadd( 392.798, 273.398, 39.8952, 0.2876 ) }
    dend_11 { pt3dadd( 393.499, 272.499, 39.7642, 0.2996 ) }
    dend_11 { pt3dadd( 394.107, 271.531, 39.6721, 0.3158 ) }
    dend_11 { pt3dadd( 394.622, 270.51, 39.6194, 0.3766 ) }
    dend_11 { pt3dadd( 395.122, 269.483, 39.5794, 0.3398 ) }
    dend_11 { pt3dadd( 395.608, 268.452, 39.5366, 0.311 ) }
    dend_11 { pt3dadd( 396.07, 267.408, 39.524, 0.295 ) }
    dend_11 { pt3dadd( 396.482, 266.345, 39.5766, 0.3132 ) }
    dend_11 { pt3dadd( 396.848, 265.27, 39.6998, 0.3422 ) }
    dend_11 { pt3dadd( 397.314, 264.232, 39.8608, 0.4202 ) }
    dend_11 { pt3dadd( 397.922, 263.266, 40.0268, 0.4458 ) }
    dend_11 { pt3dadd( 398.536, 262.308, 40.2097, 0.3846 ) }
    dend_11 { pt3dadd( 399.12, 261.331, 40.4043, 0.3416 ) }
    dend_11 { pt3dadd( 399.803, 260.431, 40.6036, 0.3774 ) }
    dend_11 { pt3dadd( 400.53, 259.556, 40.7837, 0.3412 ) }
    dend_11 { pt3dadd( 401.273, 258.688, 40.906, 0.3136 ) }
    dend_11 { pt3dadd( 402.068, 257.868, 40.9503, 0.2996 ) }
    dend_11 { pt3dadd( 402.9, 257.084, 40.9444, 0.322 ) }
    dend_11 { pt3dadd( 403.722, 256.301, 40.8666, 0.358 ) }
    dend_11 { pt3dadd( 404.557, 255.524, 40.7526, 0.4506 ) }
    dend_11 { pt3dadd( 405.429, 254.785, 40.658, 0.4982 ) }
    dend_11 { pt3dadd( 406.3, 254.044, 40.5843, 0.501 ) }
    dend_11 { pt3dadd( 407.222, 253.37, 40.4975, 0.4644 ) }
    dend_11 { pt3dadd( 408.195, 252.774, 40.3922, 0.3708 ) }
    dend_11 { pt3dadd( 409.195, 252.221, 40.2721, 0.321 ) }
    dend_11 { pt3dadd( 410.217, 251.71, 40.1534, 0.3148 ) }
    dend_11 { pt3dadd( 411.193, 251.116, 40.0086, 0.3434 ) }
    dend_11 { pt3dadd( 412.151, 250.495, 39.828, 0.4298 ) }
    dend_11 { pt3dadd( 413.19, 250.022, 39.6323, 0.428 ) }
    dend_11 { pt3dadd( 414.271, 249.675, 39.3809, 0.5254 ) }
    dend_11 { pt3dadd( 415.34, 249.407, 39.0214, 0.445 ) }
    dend_11 { pt3dadd( 416.426, 249.151, 38.6092, 0.4184 ) }
    dend_11 { pt3dadd( 417.527, 248.993, 38.1676, 0.4622 ) }
    dend_11 { pt3dadd( 418.623, 248.976, 37.7082, 0.5492 ) }
    dend_11 { pt3dadd( 419.731, 248.884, 37.2817, 0.4524 ) }
    dend_11 { pt3dadd( 420.833, 248.621, 37.0191, 0.3828 ) }
    dend_11 { pt3dadd( 421.812, 248.064, 36.923, 0.4074 ) }
    dend_11 { pt3dadd( 422.672, 247.336, 36.9438, 0.3918 ) }
    dend_11 { pt3dadd( 423.401, 246.48, 37.0314, 0.4326 ) }
    dend_11 { pt3dadd( 424.179, 245.644, 37.0734, 0.3982 ) }
    dend_11 { pt3dadd( 424.958, 244.815, 36.9944, 0.41 ) }
    dend_11 { pt3dadd( 425.773, 244.046, 36.7492, 0.524 ) }
    dend_11 { pt3dadd( 426.709, 243.504, 36.3266, 0.5156 ) }
    dend_11 { pt3dadd( 427.776, 243.314, 35.7837, 0.4232 ) }
    dend_11 { pt3dadd( 428.895, 243.448, 35.226, 0.397 ) }
    dend_11 { pt3dadd( 430.03, 243.333, 34.727, 0.3304 ) }
    dend_11 { pt3dadd( 431.081, 242.892, 34.2773, 0.2938 ) }
    dend_11 { pt3dadd( 432.165, 242.599, 33.8159, 0.2628 ) }
    dend_11 { pt3dadd( 433.058, 242.505, 33.1831, 0.2542 ) }
    dend_11 { pt3dadd( 433.963, 243.101, 32.5634, 0.2288 ) }
    dend_11 { pt3dadd( 435.063, 242.871, 31.36, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 88/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 367.91, 339.539, 43.68, 0.624 ) }
    dend_10 { pt3dadd( 368.707, 338.517, 44.1151, 0.5304 ) }
    dend_10 { pt3dadd( 369.788, 338.595, 45.1752, 0.3538 ) }
    dend_10 { pt3dadd( 370.884, 338.805, 45.6134, 0.2802 ) }
    dend_10 { pt3dadd( 371.879, 339.244, 46.1026, 0.285 ) }
    dend_10 { pt3dadd( 372.32, 340.132, 46.683, 0.2938 ) }
    dend_10 { pt3dadd( 372.688, 341.074, 47.3519, 0.3112 ) }
    dend_10 { pt3dadd( 373.406, 341.852, 48.0304, 0.3384 ) }
    dend_10 { pt3dadd( 374.421, 342.158, 48.5766, 0.4134 ) }
    dend_10 { pt3dadd( 375.553, 342.072, 48.9488, 0.4334 ) }
    dend_10 { pt3dadd( 376.661, 342.081, 49.2727, 0.3606 ) }
    dend_10 { pt3dadd( 377.719, 342.422, 49.5617, 0.3022 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_10 { pt3dadd( 378.687, 342.992, 49.7336, 0.2788 ) }
    dend_10 { pt3dadd( 379.601, 343.659, 49.8873, 0.2824 ) }
    dend_10 { pt3dadd( 380.528, 344.27, 50.1494, 0.2888 ) }
    dend_10 { pt3dadd( 381.525, 344.751, 50.5053, 0.302 ) }
    dend_10 { pt3dadd( 382.612, 345.046, 50.8788, 0.32 ) }
    dend_10 { pt3dadd( 383.712, 345.089, 51.3027, 0.3844 ) }
    dend_10 { pt3dadd( 384.807, 344.977, 51.7768, 0.3542 ) }
    dend_10 { pt3dadd( 385.917, 344.851, 52.1175, 0.3386 ) }
    dend_10 { pt3dadd( 387.054, 344.814, 52.3692, 0.342 ) }
    dend_10 { pt3dadd( 388.159, 344.754, 52.6537, 0.4198 ) }
    dend_10 { pt3dadd( 389.238, 344.593, 52.9836, 0.4452 ) }
    dend_10 { pt3dadd( 390.327, 344.432, 53.319, 0.3836 ) }
    dend_10 { pt3dadd( 391.458, 344.365, 53.5721, 0.3396 ) }
    dend_10 { pt3dadd( 392.565, 344.283, 53.6346, 0.3736 ) }
    dend_10 { pt3dadd( 393.654, 344.188, 53.51, 0.3344 ) }
    dend_10 { pt3dadd( 394.786, 344.086, 53.3568, 0.301 ) }
    dend_10 { pt3dadd( 395.898, 343.865, 53.1815, 0.2764 ) }
    dend_10 { pt3dadd( 396.946, 343.687, 52.934, 0.278 ) }
    dend_10 { pt3dadd( 398.074, 343.563, 52.8251, 0.2808 ) }
    dend_10 { pt3dadd( 399.124, 343.231, 52.9715, 0.2862 ) }
    dend_10 { pt3dadd( 400.167, 342.843, 53.307, 0.2958 ) }
    dend_10 { pt3dadd( 401.226, 342.539, 53.7886, 0.3148 ) }
    dend_10 { pt3dadd( 402.301, 342.249, 54.3623, 0.345 ) }
    dend_10 { pt3dadd( 403.403, 342.042, 54.9774, 0.4254 ) }
    dend_10 { pt3dadd( 404.514, 342.098, 55.603, 0.457 ) }
    dend_10 { pt3dadd( 405.566, 342.396, 56.2372, 0.3988 ) }
    dend_10 { pt3dadd( 406.611, 342.717, 56.8714, 0.3988 ) }
    dend_10 { pt3dadd( 407.735, 342.689, 57.4431, 0.3338 ) }
    dend_10 { pt3dadd( 408.744, 342.261, 58.0079, 0.3 ) }
    dend_10 { pt3dadd( 409.819, 341.88, 58.4828, 0.2746 ) }
    dend_10 { pt3dadd( 410.753, 341.223, 58.8347, 0.2746 ) }
    dend_10 { pt3dadd( 411.457, 340.323, 59.1293, 0.2748 ) }
    dend_10 { pt3dadd( 412.131, 339.408, 59.4188, 0.275 ) }
    dend_10 { pt3dadd( 412.825, 338.562, 59.7845, 0.2752 ) }
    dend_10 { pt3dadd( 413.423, 337.615, 60.1622, 0.2758 ) }
    dend_10 { pt3dadd( 414.105, 336.709, 60.5175, 0.2768 ) }
    dend_10 { pt3dadd( 415.049, 336.063, 60.7827, 0.2796 ) }
    dend_10 { pt3dadd( 415.955, 335.571, 61.145, 0.2796 ) }
    dend_10 { pt3dadd( 417.049, 335.247, 61.3536, 0.305 ) }
    dend_10 { pt3dadd( 418.132, 335.535, 61.32, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 40/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 278.106, 343.951, 46.4131, 0.4244 ) }
    dend_22 { pt3dadd( 276.992, 344.043, 46.2039, 0.4188 ) }
    dend_22 { pt3dadd( 275.877, 344.007, 45.9172, 0.4788 ) }
    dend_22 { pt3dadd( 274.744, 343.882, 45.6333, 0.5034 ) }
    dend_22 { pt3dadd( 273.604, 343.849, 45.369, 0.5104 ) }
    dend_22 { pt3dadd( 272.485, 344.034, 45.0873, 0.4826 ) }
    dend_22 { pt3dadd( 271.377, 344.247, 44.7516, 0.3994 ) }
    dend_22 { pt3dadd( 270.259, 344.247, 44.3817, 0.4 ) }
    dend_22 { pt3dadd( 269.145, 344.071, 43.9748, 0.3358 ) }
    dend_22 { pt3dadd( 268.051, 343.812, 43.5294, 0.3036 ) }
    dend_22 { pt3dadd( 266.976, 343.505, 43.0525, 0.2814 ) }
    dend_22 { pt3dadd( 265.88, 343.31, 42.5687, 0.2872 ) }
    dend_22 { pt3dadd( 264.765, 343.31, 42.0997, 0.299 ) }
    dend_22 { pt3dadd( 263.639, 343.325, 41.6668, 0.3146 ) }
    dend_22 { pt3dadd( 262.517, 343.162, 41.3031, 0.3744 ) }
    dend_22 { pt3dadd( 261.417, 342.859, 41.0351, 0.3356 ) }
    dend_22 { pt3dadd( 260.319, 342.534, 40.84, 0.303 ) }
    dend_22 { pt3dadd( 259.233, 342.186, 40.6664, 0.2802 ) }
    dend_22 { pt3dadd( 258.157, 341.815, 40.4863, 0.285 ) }
    dend_22 { pt3dadd( 257.077, 341.452, 40.2982, 0.2938 ) }
    dend_22 { pt3dadd( 255.999, 341.086, 40.0949, 0.3112 ) }
    dend_22 { pt3dadd( 254.931, 340.682, 39.8868, 0.3384 ) }
    dend_22 { pt3dadd( 253.854, 340.301, 39.6953, 0.4132 ) }
    dend_22 { pt3dadd( 252.747, 340.015, 39.5212, 0.4332 ) }
    dend_22 { pt3dadd( 251.646, 339.712, 39.3434, 0.36 ) }
    dend_22 { pt3dadd( 250.632, 339.209, 39.1303, 0.3014 ) }
    dend_22 { pt3dadd( 249.7, 338.574, 38.8634, 0.2772 ) }
    dend_22 { pt3dadd( 248.704, 338.057, 38.5482, 0.2792 ) }
    dend_22 { pt3dadd( 247.614, 337.795, 38.2091, 0.2834 ) }
    dend_22 { pt3dadd( 246.482, 337.716, 37.8846, 0.2906 ) }
    dend_22 { pt3dadd( 245.339, 337.677, 37.6065, 0.3056 ) }
    dend_22 { pt3dadd( 244.203, 337.557, 37.378, 0.3266 ) }
    dend_22 { pt3dadd( 243.097, 337.274, 37.1806, 0.3978 ) }
    dend_22 { pt3dadd( 242.034, 336.861, 36.979, 0.3736 ) }
    dend_22 { pt3dadd( 241.009, 336.394, 36.7256, 0.3992 ) }
    dend_22 { pt3dadd( 240.026, 335.878, 36.402, 0.3346 ) }
    dend_22 { pt3dadd( 239.057, 335.316, 36.05, 0.3014 ) }
    dend_22 { pt3dadd( 238.041, 334.803, 35.733, 0.2772 ) }
    dend_22 { pt3dadd( 236.973, 334.398, 35.483, 0.2794 ) }
    dend_22 { pt3dadd( 235.912, 333.971, 35.3007, 0.2836 ) }
    dend_22 { pt3dadd( 234.894, 333.45, 35.1725, 0.291 ) }
    dend_22 { pt3dadd( 233.858, 332.967, 35.0762, 0.3062 ) }
    dend_22 { pt3dadd( 232.774, 332.608, 34.9779, 0.3276 ) }
    dend_22 { pt3dadd( 231.7, 332.237, 34.8415, 0.3996 ) }
    dend_22 { pt3dadd( 230.675, 331.758, 34.6662, 0.377 ) }
    dend_22 { pt3dadd( 229.677, 331.205, 34.491, 0.4056 ) }
    dend_22 { pt3dadd( 228.714, 330.59, 34.3482, 0.3464 ) }
    dend_22 { pt3dadd( 227.815, 329.884, 34.2443, 0.3242 ) }
    dend_22 { pt3dadd( 226.986, 329.097, 34.176, 0.3142 ) }
    dend_22 { pt3dadd( 226.223, 328.246, 34.1356, 0.3734 ) }
    dend_22 { pt3dadd( 225.545, 327.325, 34.111, 0.334 ) }
    dend_22 { pt3dadd( 224.926, 326.363, 34.0886, 0.3002 ) }
    dend_22 { pt3dadd( 224.264, 325.431, 34.0595, 0.2748 ) }
    dend_22 { pt3dadd( 223.524, 324.56, 34.0189, 0.275 ) }
    dend_22 { pt3dadd( 222.808, 323.668, 33.9646, 0.2754 ) }
    dend_22 { pt3dadd( 222.244, 322.676, 33.8904, 0.2762 ) }
    dend_22 { pt3dadd( 221.894, 321.594, 33.7772, 0.2774 ) }
    dend_22 { pt3dadd( 221.68, 320.486, 33.6056, 0.28 ) }
    dend_22 { pt3dadd( 221.569, 319.359, 33.4057, 0.2846 ) }
    dend_22 { pt3dadd( 221.565, 318.22, 33.2242, 0.2928 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_22 { pt3dadd( 221.562, 317.079, 33.0761, 0.3096 ) }
    dend_22 { pt3dadd( 221.412, 315.948, 32.9857, 0.3342 ) }
    dend_22 { pt3dadd( 221.051, 314.867, 32.9795, 0.4118 ) }
    dend_22 { pt3dadd( 220.593, 313.826, 33.0672, 0.3994 ) }
    dend_22 { pt3dadd( 220.226, 312.76, 33.2416, 0.448 ) }
    dend_22 { pt3dadd( 219.962, 311.655, 33.4513, 0.4206 ) }
    dend_22 { pt3dadd( 219.694, 310.544, 33.6426, 0.4818 ) }
    dend_22 { pt3dadd( 219.413, 309.445, 33.7607, 0.509 ) }
    dend_22 { pt3dadd( 219.129, 308.344, 33.8349, 0.522 ) }
    dend_22 { pt3dadd( 218.891, 307.23, 33.957, 0.4978 ) }
    dend_22 { pt3dadd( 218.855, 306.142, 34.2152, 0.4586 ) }
    dend_22 { pt3dadd( 218.927, 305.038, 34.5668, 0.36 ) }
    dend_22 { pt3dadd( 219.172, 303.927, 34.9174, 0.3012 ) }
    dend_22 { pt3dadd( 219.711, 302.922, 35.2419, 0.2768 ) }
    dend_22 { pt3dadd( 220.376, 302.006, 35.5799, 0.2786 ) }
    dend_22 { pt3dadd( 221.049, 301.094, 35.9134, 0.282 ) }
    dend_22 { pt3dadd( 221.745, 300.187, 36.2054, 0.2886 ) }
    dend_22 { pt3dadd( 222.493, 299.325, 36.4994, 0.3002 ) }
    dend_22 { pt3dadd( 223.318, 298.534, 36.7956, 0.3242 ) }
    dend_22 { pt3dadd( 223.874, 297.545, 37.1406, 0.3562 ) }
    dend_22 { pt3dadd( 224.036, 296.453, 37.5861, 0.477 ) }
    dend_22 { pt3dadd( 224.251, 295.405, 38.1556, 0.4018 ) }
    dend_22 { pt3dadd( 224.754, 294.396, 38.7646, 0.3412 ) }
    dend_22 { pt3dadd( 224.766, 293.268, 39.3789, 0.305 ) }
    dend_22 { pt3dadd( 224.266, 292.277, 40.0148, 0.3248 ) }
    dend_22 { pt3dadd( 223.876, 291.241, 40.6434, 0.3982 ) }
    dend_22 { pt3dadd( 223.494, 290.188, 41.2224, 0.356 ) }
    dend_22 { pt3dadd( 223.309, 289.318, 42.84, 0.4576 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 28/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 278.106, 343.951, 46.4131, 0.4244 ) }
    dend_21 { pt3dadd( 276.865, 344.561, 46.8476, 0.5734 ) }
    dend_21 { pt3dadd( 275.826, 345.001, 47.4547, 0.4502 ) }
    dend_21 { pt3dadd( 274.737, 345.048, 47.742, 0.3784 ) }
    dend_21 { pt3dadd( 273.609, 345.03, 48.0701, 0.3996 ) }
    dend_21 { pt3dadd( 272.479, 345.149, 48.4014, 0.3772 ) }
    dend_21 { pt3dadd( 271.351, 345.272, 48.7432, 0.4058 ) }
    dend_21 { pt3dadd( 270.241, 345.509, 49.016, 0.3464 ) }
    dend_21 { pt3dadd( 269.123, 345.718, 49.2806, 0.3242 ) }
    dend_21 { pt3dadd( 268.004, 345.674, 49.6009, 0.3142 ) }
    dend_21 { pt3dadd( 266.872, 345.672, 49.9635, 0.3736 ) }
    dend_21 { pt3dadd( 265.746, 345.799, 50.3639, 0.3344 ) }
    dend_21 { pt3dadd( 264.613, 345.791, 50.7993, 0.3008 ) }
    dend_21 { pt3dadd( 263.575, 345.411, 51.3128, 0.2762 ) }
    dend_21 { pt3dadd( 262.641, 344.822, 51.8854, 0.2776 ) }
    dend_21 { pt3dadd( 261.586, 344.47, 52.4796, 0.2802 ) }
    dend_21 { pt3dadd( 260.498, 344.283, 53.1014, 0.285 ) }
    dend_21 { pt3dadd( 259.451, 344.017, 53.762, 0.2938 ) }
    dend_21 { pt3dadd( 258.37, 344.021, 54.4345, 0.3112 ) }
    dend_21 { pt3dadd( 257.241, 344.145, 55.0057, 0.3384 ) }
    dend_21 { pt3dadd( 256.1, 344.206, 55.4758, 0.413 ) }
    dend_21 { pt3dadd( 254.987, 344.284, 55.932, 0.433 ) }
    dend_21 { pt3dadd( 253.902, 344.512, 56.3811, 0.3596 ) }
    dend_21 { pt3dadd( 252.831, 344.877, 56.779, 0.3006 ) }
    dend_21 { pt3dadd( 251.704, 345.053, 57.1161, 0.2756 ) }
    dend_21 { pt3dadd( 250.562, 345.012, 57.3978, 0.2766 ) }
    dend_21 { pt3dadd( 249.424, 345.105, 57.6442, 0.2782 ) }
    dend_21 { pt3dadd( 248.295, 345.279, 57.8665, 0.2814 ) }
    dend_21 { pt3dadd( 247.159, 345.162, 58.0672, 0.287 ) }
    dend_21 { pt3dadd( 246.074, 344.855, 58.3271, 0.2988 ) }
    dend_21 { pt3dadd( 244.951, 344.668, 58.609, 0.314 ) }
    dend_21 { pt3dadd( 243.853, 344.929, 58.9355, 0.3734 ) }
    dend_21 { pt3dadd( 242.852, 345.447, 59.3006, 0.3338 ) }
    dend_21 { pt3dadd( 241.766, 345.805, 59.6358, 0.3 ) }
    dend_21 { pt3dadd( 240.671, 346.112, 59.9838, 0.2746 ) }
    dend_21 { pt3dadd( 239.635, 346.56, 60.3635, 0.2746 ) }
    dend_21 { pt3dadd( 238.681, 347.132, 60.8026, 0.2746 ) }
    dend_21 { pt3dadd( 237.556, 347.325, 61.2195, 0.2746 ) }
    dend_21 { pt3dadd( 236.426, 347.482, 61.6314, 0.2746 ) }
    dend_21 { pt3dadd( 235.373, 347.817, 62.1214, 0.2746 ) }
    dend_21 { pt3dadd( 234.319, 348.171, 62.6545, 0.2744 ) }
    dend_21 { pt3dadd( 233.255, 348.405, 63.247, 0.2744 ) }
    dend_21 { pt3dadd( 232.137, 348.508, 63.8313, 0.2742 ) }
    dend_21 { pt3dadd( 231.033, 348.796, 64.3639, 0.274 ) }
    dend_21 { pt3dadd( 230.069, 349.375, 64.8903, 0.2736 ) }
    dend_21 { pt3dadd( 229.208, 350.002, 65.476, 0.2728 ) }
    dend_21 { pt3dadd( 228.176, 350.411, 66.0593, 0.2712 ) }
    dend_21 { pt3dadd( 227.039, 350.521, 66.5521, 0.2684 ) }
    dend_21 { pt3dadd( 225.967, 350.867, 67.0169, 0.2628 ) }
    dend_21 { pt3dadd( 224.926, 351.298, 67.4506, 0.2542 ) }
    dend_21 { pt3dadd( 223.835, 351.491, 67.8689, 0.2288 ) }
    dend_21 { pt3dadd( 222.737, 351.78, 68.6, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 80/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 344.891, 321.273, 47.9682, 0.5068 ) }
    dend_15 { pt3dadd( 344.271, 320.665, 48.1592, 0.5518 ) }
    dend_15 { pt3dadd( 343.533, 319.793, 48.3249, 0.617 ) }
    dend_15 { pt3dadd( 342.909, 318.845, 48.4674, 0.5982 ) }
    dend_15 { pt3dadd( 342.287, 317.921, 48.7099, 0.5556 ) }
    dend_15 { pt3dadd( 341.696, 316.942, 48.9451, 0.513 ) }
    dend_15 { pt3dadd( 341.128, 315.952, 49.1834, 0.4878 ) }
    dend_15 { pt3dadd( 340.62, 314.941, 49.4768, 0.4088 ) }
    dend_15 { pt3dadd( 339.958, 314.023, 49.8134, 0.4174 ) }
    dend_15 { pt3dadd( 339.172, 313.221, 50.1844, 0.3678 ) }
    dend_15 { pt3dadd( 338.414, 312.487, 50.652, 0.3648 ) }
    dend_15 { pt3dadd( 337.734, 311.663, 51.1585, 0.3854 ) }
    dend_15 { pt3dadd( 336.991, 310.805, 51.5452, 0.526 ) }
    dend_15 { pt3dadd( 336.084, 310.118, 51.7882, 0.5182 ) }
    dend_15 { pt3dadd( 335.225, 309.386, 51.9313, 0.4338 ) }
    dend_15 { pt3dadd( 334.531, 308.477, 52.0318, 0.388 ) }
    dend_15 { pt3dadd( 333.772, 307.64, 52.1511, 0.4526 ) }
    dend_15 { pt3dadd( 332.957, 306.91, 52.3944, 0.5318 ) }
    dend_15 { pt3dadd( 332.175, 306.144, 52.7117, 0.4188 ) }
    dend_15 { pt3dadd( 331.332, 305.376, 52.9676, 0.3258 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_15 { pt3dadd( 330.431, 304.723, 53.2372, 0.2754 ) }
    dend_15 { pt3dadd( 329.469, 304.238, 53.5783, 0.2762 ) }
    dend_15 { pt3dadd( 328.432, 303.845, 53.8969, 0.2774 ) }
    dend_15 { pt3dadd( 327.354, 303.479, 54.0848, 0.28 ) }
    dend_15 { pt3dadd( 326.28, 303.137, 54.1288, 0.2846 ) }
    dend_15 { pt3dadd( 325.232, 302.721, 54.1033, 0.293 ) }
    dend_15 { pt3dadd( 324.235, 302.229, 54.0126, 0.3096 ) }
    dend_15 { pt3dadd( 323.206, 301.873, 53.8563, 0.3344 ) }
    dend_15 { pt3dadd( 322.189, 301.465, 53.8194, 0.411 ) }
    dend_15 { pt3dadd( 321.374, 300.943, 54.0834, 0.4044 ) }
    dend_15 { pt3dadd( 320.647, 300.318, 54.5843, 0.4258 ) }
    dend_15 { pt3dadd( 319.749, 299.723, 55.137, 0.5312 ) }
    dend_15 { pt3dadd( 318.779, 299.153, 55.592, 0.6378 ) }
    dend_15 { pt3dadd( 317.842, 298.502, 55.9121, 0.8088 ) }
    dend_15 { pt3dadd( 316.91, 297.841, 56.1156, 0.7966 ) }
    dend_15 { pt3dadd( 315.985, 297.211, 56.264, 0.7704 ) }
    dend_15 { pt3dadd( 315.003, 296.715, 56.3142, 0.5114 ) }
    dend_15 { pt3dadd( 314.117, 296.125, 56.1904, 0.3658 ) }
    dend_15 { pt3dadd( 313.315, 295.372, 55.9952, 0.3022 ) }
    dend_15 { pt3dadd( 312.446, 294.647, 55.8715, 0.3266 ) }
    dend_15 { pt3dadd( 311.513, 294.01, 55.8508, 0.3668 ) }
    dend_15 { pt3dadd( 310.487, 293.538, 55.8958, 0.4664 ) }
    dend_15 { pt3dadd( 309.447, 293.082, 55.9992, 0.5288 ) }
    dend_15 { pt3dadd( 308.504, 292.454, 56.133, 0.5524 ) }
    dend_15 { pt3dadd( 307.572, 291.806, 56.2089, 0.5848 ) }
    dend_15 { pt3dadd( 306.594, 291.329, 56.14, 0.4708 ) }
    dend_15 { pt3dadd( 305.606, 290.846, 56.0706, 0.4192 ) }
    dend_15 { pt3dadd( 304.646, 290.283, 56.1232, 0.4636 ) }
    dend_15 { pt3dadd( 303.693, 289.687, 56.182, 0.552 ) }
    dend_15 { pt3dadd( 302.783, 289.003, 56.2355, 0.4572 ) }
    dend_15 { pt3dadd( 301.82, 288.412, 56.3584, 0.3928 ) }
    dend_15 { pt3dadd( 300.794, 287.927, 56.5354, 0.4198 ) }
    dend_15 { pt3dadd( 299.757, 287.503, 56.7554, 0.4456 ) }
    dend_15 { pt3dadd( 298.701, 287.13, 56.996, 0.3828 ) }
    dend_15 { pt3dadd( 297.629, 286.768, 57.1542, 0.3444 ) }
    dend_15 { pt3dadd( 296.564, 286.443, 57.1679, 0.3528 ) }
    dend_15 { pt3dadd( 295.476, 286.125, 57.1379, 0.4398 ) }
    dend_15 { pt3dadd( 294.401, 285.771, 57.1516, 0.483 ) }
    dend_15 { pt3dadd( 293.319, 285.417, 57.1738, 0.4496 ) }
    dend_15 { pt3dadd( 292.26, 284.989, 57.1855, 0.4822 ) }
    dend_15 { pt3dadd( 291.307, 284.365, 57.199, 0.5396 ) }
    dend_15 { pt3dadd( 290.4, 283.67, 57.1875, 0.4332 ) }
    dend_15 { pt3dadd( 289.469, 283.036, 57.08, 0.3536 ) }
    dend_15 { pt3dadd( 288.609, 282.323, 56.8733, 0.3216 ) }
    dend_15 { pt3dadd( 287.937, 281.414, 56.6605, 0.3874 ) }
    dend_15 { pt3dadd( 287.325, 280.46, 56.5216, 0.3594 ) }
    dend_15 { pt3dadd( 286.454, 279.74, 56.4052, 0.3482 ) }
    dend_15 { pt3dadd( 285.374, 279.4, 56.3052, 0.3598 ) }
    dend_15 { pt3dadd( 284.251, 279.218, 56.1543, 0.4536 ) }
    dend_15 { pt3dadd( 283.204, 278.878, 55.8779, 0.504 ) }
    dend_15 { pt3dadd( 282.179, 278.438, 55.5164, 0.5112 ) }
    dend_15 { pt3dadd( 281.124, 278.035, 55.1183, 0.4844 ) }
    dend_15 { pt3dadd( 280.065, 277.66, 54.703, 0.4028 ) }
    dend_15 { pt3dadd( 279.056, 277.161, 54.2979, 0.406 ) }
    dend_15 { pt3dadd( 278.05, 276.62, 53.9759, 0.347 ) }
    dend_15 { pt3dadd( 276.989, 276.196, 53.7295, 0.3256 ) }
    dend_15 { pt3dadd( 275.951, 275.715, 53.536, 0.3166 ) }
    dend_15 { pt3dadd( 274.973, 275.127, 53.3582, 0.3782 ) }
    dend_15 { pt3dadd( 273.94, 274.639, 53.2028, 0.3428 ) }
    dend_15 { pt3dadd( 272.847, 274.346, 53.0166, 0.3162 ) }
    dend_15 { pt3dadd( 271.79, 274.267, 52.7156, 0.3058 ) }
    dend_15 { pt3dadd( 270.651, 274.22, 52.4849, 0.3272 ) }
    dend_15 { pt3dadd( 269.537, 274.406, 52.3886, 0.3986 ) }
    dend_15 { pt3dadd( 268.42, 274.649, 52.3566, 0.3754 ) }
    dend_15 { pt3dadd( 267.288, 274.798, 52.3776, 0.4026 ) }
    dend_15 { pt3dadd( 266.147, 274.876, 52.4026, 0.3408 ) }
    dend_15 { pt3dadd( 265.011, 274.998, 52.4115, 0.3124 ) }
    dend_15 { pt3dadd( 263.914, 275.32, 52.4138, 0.2988 ) }
    dend_15 { pt3dadd( 262.888, 275.823, 52.4168, 0.314 ) }
    dend_15 { pt3dadd( 261.921, 276.435, 52.4073, 0.3734 ) }
    dend_15 { pt3dadd( 261.085, 277.213, 52.3768, 0.3338 ) }
    dend_15 { pt3dadd( 260.342, 278.083, 52.3384, 0.3 ) }
    dend_15 { pt3dadd( 259.551, 278.907, 52.2889, 0.2744 ) }
    dend_15 { pt3dadd( 258.709, 279.679, 52.2609, 0.2742 ) }
    dend_15 { pt3dadd( 257.81, 280.384, 52.2385, 0.274 ) }
    dend_15 { pt3dadd( 256.857, 281.016, 52.1847, 0.2736 ) }
    dend_15 { pt3dadd( 255.802, 281.456, 52.0954, 0.2728 ) }
    dend_15 { pt3dadd( 254.69, 281.715, 51.9613, 0.2712 ) }
    dend_15 { pt3dadd( 253.603, 282.028, 51.7591, 0.2684 ) }
    dend_15 { pt3dadd( 252.586, 282.526, 51.5152, 0.2628 ) }
    dend_15 { pt3dadd( 251.61, 283.118, 51.2854, 0.2542 ) }
    dend_15 { pt3dadd( 250.562, 283.504, 51.0199, 0.2288 ) }
    dend_15 { pt3dadd( 249.506, 283.941, 50.68, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 83/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 344.891, 321.273, 47.9682, 0.5068 ) }
    dend_14 { pt3dadd( 344.396, 321.199, 49.0025, 0.2288 ) }
    dend_14 { pt3dadd( 343.486, 321.086, 50.885, 0.2794 ) }
    dend_14 { pt3dadd( 342.484, 321.004, 51.6905, 0.2838 ) }
    dend_14 { pt3dadd( 341.455, 320.804, 52.5767, 0.2914 ) }
    dend_14 { pt3dadd( 340.488, 320.311, 53.466, 0.3068 ) }
    dend_14 { pt3dadd( 339.584, 319.653, 54.2982, 0.3288 ) }
    dend_14 { pt3dadd( 338.673, 319.002, 55.062, 0.4018 ) }
    dend_14 { pt3dadd( 337.702, 318.467, 55.7614, 0.3812 ) }
    dend_14 { pt3dadd( 336.631, 318.167, 56.4234, 0.4134 ) }
    dend_14 { pt3dadd( 335.519, 318.142, 57.0676, 0.3608 ) }
    dend_14 { pt3dadd( 334.469, 318.39, 57.7506, 0.3504 ) }
    dend_14 { pt3dadd( 333.497, 318.812, 58.4844, 0.365 ) }
    dend_14 { pt3dadd( 332.506, 319.282, 59.2066, 0.4572 ) }
    dend_14 { pt3dadd( 331.538, 319.838, 59.883, 0.5406 ) }
    dend_14 { pt3dadd( 330.583, 320.415, 60.5144, 0.4348 ) }
    dend_14 { pt3dadd( 329.564, 320.897, 61.0775, 0.3566 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_14 { pt3dadd( 328.508, 321.313, 61.567, 0.327 ) }
    dend_14 { pt3dadd( 327.484, 321.787, 62.025, 0.3986 ) }
    dend_14 { pt3dadd( 326.448, 322.215, 62.4658, 0.3752 ) }
    dend_14 { pt3dadd( 325.33, 322.331, 62.8891, 0.4022 ) }
    dend_14 { pt3dadd( 324.213, 322.168, 63.3086, 0.3402 ) }
    dend_14 { pt3dadd( 323.132, 321.868, 63.7428, 0.3116 ) }
    dend_14 { pt3dadd( 322.06, 321.569, 64.1964, 0.296 ) }
    dend_14 { pt3dadd( 320.947, 321.494, 64.6419, 0.315 ) }
    dend_14 { pt3dadd( 319.819, 321.625, 65.0485, 0.3456 ) }
    dend_14 { pt3dadd( 318.684, 321.648, 65.3985, 0.4262 ) }
    dend_14 { pt3dadd( 317.57, 321.421, 65.7112, 0.4582 ) }
    dend_14 { pt3dadd( 316.472, 321.146, 66.0302, 0.4014 ) }
    dend_14 { pt3dadd( 315.342, 321.035, 66.3533, 0.4036 ) }
    dend_14 { pt3dadd( 314.207, 321.008, 66.6938, 0.3428 ) }
    dend_14 { pt3dadd( 313.082, 320.956, 67.0712, 0.3162 ) }
    dend_14 { pt3dadd( 311.977, 320.841, 67.506, 0.3058 ) }
    dend_14 { pt3dadd( 310.867, 320.724, 67.9538, 0.3268 ) }
    dend_14 { pt3dadd( 309.729, 320.647, 68.3522, 0.3982 ) }
    dend_14 { pt3dadd( 308.603, 320.556, 68.7467, 0.3744 ) }
    dend_14 { pt3dadd( 307.481, 320.448, 69.1362, 0.4008 ) }
    dend_14 { pt3dadd( 306.354, 320.286, 69.4845, 0.3376 ) }
    dend_14 { pt3dadd( 305.28, 319.929, 69.8104, 0.3068 ) }
    dend_14 { pt3dadd( 304.358, 319.3, 70.1355, 0.287 ) }
    dend_14 { pt3dadd( 303.513, 318.638, 70.4822, 0.2988 ) }
    dend_14 { pt3dadd( 302.453, 318.485, 70.8831, 0.3142 ) }
    dend_14 { pt3dadd( 301.323, 318.542, 71.2337, 0.3734 ) }
    dend_14 { pt3dadd( 300.181, 318.588, 71.4966, 0.334 ) }
    dend_14 { pt3dadd( 299.04, 318.609, 71.6988, 0.3002 ) }
    dend_14 { pt3dadd( 297.9, 318.518, 71.832, 0.2748 ) }
    dend_14 { pt3dadd( 296.925, 318.393, 72.0202, 0.2752 ) }
    dend_14 { pt3dadd( 296.048, 318.302, 72.2837, 0.2756 ) }
    dend_14 { pt3dadd( 295.07, 318.249, 72.2705, 0.2766 ) }
    dend_14 { pt3dadd( 294.129, 318.122, 72.0493, 0.2784 ) }
    dend_14 { pt3dadd( 293.033, 317.807, 71.8558, 0.2816 ) }
    dend_14 { pt3dadd( 291.977, 317.419, 71.6531, 0.2874 ) }
    dend_14 { pt3dadd( 290.933, 317.021, 71.4193, 0.2996 ) }
    dend_14 { pt3dadd( 289.851, 316.689, 71.2614, 0.3158 ) }
    dend_14 { pt3dadd( 288.79, 316.422, 71.3297, 0.3764 ) }
    dend_14 { pt3dadd( 287.718, 316.29, 71.5837, 0.3396 ) }
    dend_14 { pt3dadd( 286.596, 316.374, 71.86, 0.3106 ) }
    dend_14 { pt3dadd( 285.457, 316.461, 72.1235, 0.2938 ) }
    dend_14 { pt3dadd( 284.315, 316.454, 72.3481, 0.3112 ) }
    dend_14 { pt3dadd( 283.172, 316.45, 72.5354, 0.3384 ) }
    dend_14 { pt3dadd( 282.065, 316.559, 72.7664, 0.4132 ) }
    dend_14 { pt3dadd( 281.036, 316.831, 73.1066, 0.433 ) }
    dend_14 { pt3dadd( 279.965, 317.102, 73.488, 0.36 ) }
    dend_14 { pt3dadd( 278.872, 317.215, 73.7324, 0.3012 ) }
    dend_14 { pt3dadd( 277.783, 317.401, 73.8461, 0.2768 ) }
    dend_14 { pt3dadd( 276.806, 317.91, 74.0194, 0.2786 ) }
    dend_14 { pt3dadd( 275.769, 318.242, 74.3044, 0.282 ) }
    dend_14 { pt3dadd( 274.639, 318.207, 74.5912, 0.2884 ) }
    dend_14 { pt3dadd( 273.528, 318.011, 74.947, 0.2996 ) }
    dend_14 { pt3dadd( 272.431, 317.806, 75.3959, 0.3232 ) }
    dend_14 { pt3dadd( 271.329, 317.578, 75.8845, 0.3542 ) }
    dend_14 { pt3dadd( 270.236, 317.283, 76.3605, 0.4732 ) }
    dend_14 { pt3dadd( 269.211, 316.848, 76.8597, 0.3948 ) }
    dend_14 { pt3dadd( 268.177, 316.429, 77.3786, 0.3284 ) }
    dend_14 { pt3dadd( 267.106, 316.111, 77.8935, 0.2802 ) }
    dend_14 { pt3dadd( 266.039, 315.736, 78.3681, 0.285 ) }
    dend_14 { pt3dadd( 264.978, 315.361, 78.8108, 0.2938 ) }
    dend_14 { pt3dadd( 263.932, 315.045, 79.2624, 0.3112 ) }
    dend_14 { pt3dadd( 262.815, 314.996, 79.6536, 0.3382 ) }
    dend_14 { pt3dadd( 261.698, 315.207, 79.9375, 0.413 ) }
    dend_14 { pt3dadd( 260.608, 315.548, 80.0923, 0.4328 ) }
    dend_14 { pt3dadd( 259.514, 315.88, 80.1206, 0.3594 ) }
    dend_14 { pt3dadd( 258.45, 316.298, 80.0164, 0.3 ) }
    dend_14 { pt3dadd( 257.365, 316.648, 79.7885, 0.2748 ) }
    dend_14 { pt3dadd( 256.278, 316.927, 79.3391, 0.275 ) }
    dend_14 { pt3dadd( 255.309, 317.077, 78.5781, 0.2752 ) }
    dend_14 { pt3dadd( 254.363, 317.099, 77.5673, 0.2758 ) }
    dend_14 { pt3dadd( 253.508, 317.394, 76.375, 0.2768 ) }
    dend_14 { pt3dadd( 252.942, 317.636, 74.9879, 0.2788 ) }
    dend_14 { pt3dadd( 252.07, 317.712, 73.6058, 0.2824 ) }
    dend_14 { pt3dadd( 250.974, 317.621, 72.4564, 0.2882 ) }
    dend_14 { pt3dadd( 250.01, 317.01, 71.6386, 0.305 ) }
    dend_14 { pt3dadd( 249.027, 316.428, 71.0744, 0.305 ) }
    dend_14 { pt3dadd( 248.591, 315.401, 70.28, 0.4576 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_40, dend_35, dend_30, dend_23, dend_7, dend_0, dend_42, dend_41, dend_37, dend_36, dend_34, dend_31, dend_27, dend_24, dend_17, dend_8, dend_4, dend_1, dend_39, dend_38, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_18, dend_12, dend_9, dend_6, dend_5, dend_3, dend_2, dend_20, dend_19, dend_16, dend_13, dend_11, dend_10, dend_22, dend_21, dend_15, dend_14]}
    dend = new SectionList()
    dend_40 dend.append()
    dend_35 dend.append()
    dend_30 dend.append()
    dend_23 dend.append()
    dend_7 dend.append()
    dend_0 dend.append()
    dend_42 dend.append()
    dend_41 dend.append()
    dend_37 dend.append()
    dend_36 dend.append()
    dend_34 dend.append()
    dend_31 dend.append()
    dend_27 dend.append()
    dend_24 dend.append()
    dend_17 dend.append()
    dend_8 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_39 dend.append()
    dend_38 dend.append()
    dend_33 dend.append()
    dend_32 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_18 dend.append()
    dend_12 dend.append()
    dend_9 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_16 dend.append()
    dend_13 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_24825, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_24825 = new SectionList()
    soma_0 OneSecGrp_SectionRef_24825.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_7, dend_0, dend_0, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.8634359  // units: uF/cm2
    forsec axon cm = 1.8634359  // units: uF/cm2
    forsec dend cm = 1.8634359  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 64.64866  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 5.3688756E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.050411243  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 2.3232698E-7  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.01599168  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 1.0404564  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.058745127  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.0024842038  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 1.9013386E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 3.6310218E-4  // units: S cm-2
        e_pas_nml2 = -86.78281  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 8.2260347E-4  // units: S cm-2
        e_pas_nml2 = -86.78281  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 7.991632E-7  // units: S cm-2
        e_pas_nml2 = -86.78281  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 5.918445E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.007806752  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_472306616
    forsec soma {
        insert CaDynamics_472306616
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_34 nseg = 5
    dend_39 nseg = 5
    dend_33 nseg = 5
    dend_32 nseg = 3
    dend_29 nseg = 3
    dend_26 nseg = 3
    dend_25 nseg = 3
    dend_6 nseg = 7
    dend_5 nseg = 5
    dend_3 nseg = 7
    dend_2 nseg = 3
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_16 nseg = 7
    dend_11 nseg = 7
    dend_10 nseg = 3
    dend_22 nseg = 5
    dend_21 nseg = 3
    dend_15 nseg = 5
    dend_14 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472306616


