// Cell: cACint209_L5_MC_bf2b2fbcbf_0_0
/*
{
  "id" : "cACint209_L5_MC_bf2b2fbcbf_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.83638, 12.3318, -1.26703, 2.94939", "-2.55054, 11.1277, -1.1402, 4.81305", "-2.2647, 9.92366, -1.01338, 6.57471", "-1.97886, 8.71959, -0.886552, 7.67573", "-1.69302, 7.51553, -0.759726, 8.48432", "-1.40719, 6.31146, -0.6329, 9.36598", "-1.12135, 5.10739, -0.506075, 10.0986", "-0.835506, 3.90333, -0.379249, 10.7023", "-0.549666, 2.69926, -0.252424, 11.2902", "-0.263826, 1.4952, -0.125598, 11.5615", "0.0220138, 0.291133, 0.00122739, 11.5342", "0.307854, -0.912932, 0.128053, 11.2102", "0.593693, -2.117, 0.254879, 11.0503", "0.879533, -3.32106, 0.381704, 10.841", "1.16537, -4.52513, 0.50853, 10.1133", "1.45121, -5.72919, 0.635355, 8.61794", "1.73705, -6.93326, 0.762181, 6.75639", "2.02289, -8.13732, 0.889006, 5.11821", "2.30873, -9.34139, 1.01583, 4.09257", "2.59457, -10.5455, 1.14266, 3.47113", "2.88041, -11.7495, 1.26948, 2.10111" ]
  }, {
    "name" : "dend_155",
    "id" : "dend_155",
    "points3d" : [ "4.37091, -8.6706, 3.20881, 1.03", "4.93809, -9.51991, 3.95198, 1.03", "5.42628, -10.1967, 4.65593, 1.03", "5.78649, -10.6495, 5.15013, 1.11", "6.313, -11.2581, 5.91289, 0.88", "6.60265, -11.5754, 6.33178, 0.88", "7.76993, -12.7648, 7.93186, 0.44", "8.14754, -13.1001, 8.48485, 0.44", "8.42055, -13.2949, 8.87376, 0.44", "9.03227, -13.6519, 9.59259, 0.44", "9.29421, -13.7956, 9.80437, 0.44", "9.77137, -14.0407, 10.0485, 0.44", "10.2239, -14.2692, 10.1792, 0.96", "10.4114, -14.3743, 10.2361, 1.55", "11.2199, -14.8805, 10.4625, 1.55", "11.9537, -15.3736, 10.6321, 0.74", "12.5383, -15.7984, 10.777, 0.74", "13.3714, -16.4661, 10.9944, 0.44", "13.4841, -16.5591, 11.0343, 0.44", "14.0886, -17.0735, 11.2887, 0.44", "14.4637, -17.4253, 11.4734, 0.81", "14.8546, -17.8407, 11.7238, 0.81", "15.0446, -18.1222, 11.9659, 1.03", "15.4737, -18.9786, 12.8008, 0.44", "15.5828, -19.3758, 13.2815, 0.44", "15.6497, -20.0044, 14.1462, 0.44", "15.6377, -20.5135, 14.8592, 0.66", "15.45, -22.0516, 17.0642, 0.59", "15.4058, -22.2681, 17.3728, 1.33", "15.0423, -23.5126, 19.0866, 0.29", "15.028, -23.5536, 19.1443, 0.29", "14.8581, -24.0209, 19.7755, 0.29", "14.8417, -24.076, 19.8305, 0.29", "14.8251, -24.2246, 19.8983, 0.44", "14.8345, -24.3656, 19.9421, 0.44", "14.9627, -24.953, 20.0259, 0.44", "15.1253, -25.6323, 20.1418, 0.44", "15.1977, -25.9039, 20.1953, 0.44", "15.3697, -26.5159, 20.438, 0.37", "15.5623, -27.163, 20.8065, 0.74", "15.7203, -27.6447, 21.1528, 1.25", "15.8377, -27.9747, 21.4522, 1.33", "15.8554, -28.0228, 21.4997, 1.33", "16.354, -29.3401, 22.8621, 1.33", "16.3722, -29.3887, 22.9088, 1.33", "16.4919, -29.779, 23.3812, 1.55", "16.5836, -30.171, 23.8893, 1.77", "16.6464, -30.5895, 24.4748, 1.77", "16.69, -31.1324, 25.273, 1.11", "16.7006, -31.6809, 26.0836, 0.66", "16.6939, -33.5579, 29.2738, 0.44", "16.6899, -33.8095, 29.7393, 0.88", "16.6464, -34.8382, 31.7433, 0.52", "16.608, -35.3611, 32.8313, 1.11", "16.5873, -35.4848, 33.1075, 1.62", "16.2133, -36.8152, 36.2382, 0.44", "16.1501, -37.0099, 36.655, 1.03", "16.0862, -37.1817, 37.0175, 1.03", "16.0361, -37.2944, 37.2364, 1.03", "15.5568, -38.2902, 38.868, 0.37", "15.4541, -38.5425, 39.2436, 1.18", "15.2843, -38.9793, 39.7992, 1.62", "15.2271, -39.1704, 40.0406, 1.77", "15.2021, -39.3008, 40.2033, 1.77", "15.0092, -40.9399, 42.1654, 0.22", "14.948, -41.9684, 43.3155, 0.22", "14.9452, -42.0122, 43.3701, 0.22", "14.9282, -42.2685, 43.7537, 0.22", "14.9048, -42.7859, 44.6123, 0.66", "14.8985, -42.8971, 44.7934, 1.03", "14.8784, -43.3049, 45.4162, 1.33", "14.786, -44.7908, 47.5227, 0.15", "14.7518, -46.0752, 49.2641, 1.4", "14.7421, -46.7823, 50.2415, 0.29", "14.753, -47.431, 51.1281, 0.29", "14.7782, -47.9469, 51.8333, 0.29", "14.798, -48.1614, 52.1185, 1.03", "14.8079, -48.4606, 52.3662, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500005799210318,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "3.12091, -11.8978, 0.388809, 1.99", "3.12091, -11.8978, 0.388809, 1.99", "3.07096, -13.5453, 0.388809, 1.99", "3.05945, -14.8421, 0.388809, 2.14", "3.062, -16.1222, 0.467243, 2.36", "3.09612, -17.7831, 0.617163, 2.65", "3.12569, -18.7986, 0.719251, 2.87", "3.15783, -19.5843, 0.80972, 2.87", "3.2323, -20.8234, 0.970066, 2.65", "3.38993, -22.8971, 1.26257, 2.14", "3.52683, -24.5469, 1.48471, 2.14", "3.67575, -26.399, 1.72158, 2.06", "3.67984, -26.4694, 1.72931, 2.06", "3.71375, -27.8147, 1.77927, 2.06", "3.71241, -27.8828, 1.77575, 2.06", "3.61803, -29.7255, 1.48194, 2.21", "3.61284, -29.8026, 1.46752, 2.21", "3.56, -30.7916, 1.25248, 2.21", "3.50842, -32.5272, 0.840376, 2.21", "3.50066, -33.304, 0.68885, 2.28", "3.5111, -34.5393, 0.486548, 2.14", "3.55008, -35.8411, 0.318559, 2.21", "3.62415, -37.4165, 0.176565, 2.21", "3.73434, -39.2853, 0.164513, 2.21", "3.86247, -41.2695, 0.311515, 2.21", "3.86762, -41.3378, 0.319231, 2.21", "3.97011, -42.6172, 0.510543, 2.21", "4.07361, -44.2739, 0.817874, 2.21", "4.13281, -46.071, 1.2751, 2.36", "4.13522, -46.5362, 1.41231, 2.5", "4.06207, -48.1063, 1.84964, 1.47", "3.96301, -49.0239, 2.11103, 1.47", "3.79254, -49.7985, 2.33274, 1.47", "3.39116, -50.9637, 2.64177, 1.47", "3.35916, -51.0347, 2.65526, 1.47", "2.85699, -51.9617, 2.82987, 1.77", "2.34708, -52.7527, 2.97737, 1.92", "1.75089, -53.6918, 3.15246, 1.92", "1.71943, -53.7551, 3.16209, 1.92", "1.27033, -54.8925, 3.27876, 1.92", "1.24353, -54.98, 3.28973, 1.92", "1.23348, -55.0495, 3.30037, 1.92", "1.21963, -56.0086, 3.46901, 1.69", "1.42206, -57.1517, 3.69829, 1.03", "1.45044, -57.2249, 3.71743, 1.03", "1.76762, -57.7601, 3.874, 1.47", "2.24561, -58.4539, 4.07823, 1.47", "2.3751, -58.6256, 4.12516, 1.47", "3.09, -59.5123, 4.3416, 1.47", "4.16694, -60.8249, 4.66419, 1.47", "4.72899, -61.5466, 4.81625, 1.47", "4.85924, -61.7321, 4.84708, 1.47", "5.42725, -62.6764, 4.96731, 1.77", "5.76489, -63.2588, 5.0288, 1.77", "5.80998, -63.3456, 5.03396, 1.77", "6.42484, -64.7548, 5.03396, 1.77", "6.91209, -65.9808, 5.03396, 1.77", "7.16103, -66.6323, 5.03396, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500005799210318,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.47909, 11.7849, -1.92119, 3.46", "-1.47909, 11.7849, -1.92119, 3.46", "-1.77333, 13.1665, -2.09788, 3.46", "-2.15236, 15.1318, -2.30879, 3.46", "-2.16369, 15.1989, -2.31493, 3.46", "-2.44316, 16.9648, -2.46459, 3.46", "-2.67377, 18.6246, -2.60811, 3.46", "-2.91435, 20.9059, -2.80408, 3.46", "-3.02732, 23.0044, -2.9785, 3.46", "-3.0308, 24.7363, -3.1039, 3.46", "-3.02854, 24.8051, -3.10775, 3.46", "-2.95013, 25.8582, -3.14033, 2.8", "-2.79156, 27.2066, -3.18826, 2.8", "-2.55334, 28.6009, -3.24563, 2.8", "-2.31252, 29.7964, -3.29902, 2.8", "-2.02589, 31.1652, -3.35738, 3.02", "-1.76026, 32.5258, -3.40299, 3.02" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500005799210318
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.88041, -11.7495, 1.26948, 0.578448", "6.34505, -26.3439, 1.26948, 0.578448", "9.80969, -40.9383, 1.26948, 0.578448" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_127",
    "id" : "dend_127",
    "points3d" : [ "7.16103, -66.6323, 5.03396, 1.25", "7.96986, -66.9714, 5.0802, 1.25", "8.92442, -67.3918, 5.12688, 1.25", "9.16136, -67.5087, 5.13681, 1.25", "10.3243, -68.1727, 5.17952, 0.96", "10.4145, -68.2307, 5.18236, 0.96", "11.56, -69.057, 5.21423, 0.96", "11.6147, -69.1006, 5.21423, 0.96", "12.1801, -69.6163, 5.21423, 0.81", "12.6769, -70.1476, 5.20649, 0.81", "13.2299, -70.8461, 5.18824, 0.81", "13.5793, -71.3495, 5.17053, 1.18", "13.9338, -72.0115, 5.14155, 0.66", "14.2051, -72.5983, 5.11307, 0.88", "14.4026, -73.183, 5.08139, 0.74", "14.4194, -73.2616, 5.07678, 0.74", "14.4455, -73.9242, 5.03959, 0.74", "14.3992, -74.5631, 5.00791, 0.52", "14.3561, -74.7867, 4.99919, 0.52", "14.2442, -75.2222, 4.98873, 0.74", "14.2162, -75.2959, 4.98873, 0.74", "13.989, -75.8339, 5.09103, 0.59", "13.9345, -75.9635, 5.13852, 0.59", "13.8503, -76.2562, 5.32101, 0.59", "13.8424, -76.3136, 5.36308, 0.59", "13.8309, -76.9521, 5.88081, 0.59", "13.9515, -78.0802, 6.79446, 0.44", "14.0542, -78.4761, 7.10608, 0.44", "14.3369, -79.2713, 7.69773, 0.59", "14.5413, -79.6759, 7.97076, 0.74", "14.5746, -79.7284, 8.00219, 0.74", "14.9774, -80.1765, 8.28679, 0.74", "15.4426, -80.5991, 8.52824, 0.37", "15.5025, -80.6453, 8.55945, 0.37", "16.1143, -81.0353, 8.85318, 0.37", "16.1774, -81.0674, 8.89106, 0.37", "17.3499, -81.5974, 9.64282, 0.44", "17.5154, -81.6537, 9.77918, 0.44", "17.6175, -81.688, 9.88747, 0.44", "17.7587, -81.7437, 10.0511, 0.96", "18.3559, -82.0038, 10.7701, 0.96", "18.8268, -82.2642, 11.3807, 1.11", "19.838, -82.9734, 12.7203, 1.11", "20.6403, -83.6395, 13.821, 1.33", "20.9455, -83.9311, 14.2446, 1.33", "21.2009, -84.2132, 14.5919, 1.33", "21.9265, -85.2539, 15.5242, 1.18", "22.2683, -85.8761, 15.9448, 0.88", "22.43, -86.2528, 16.0925, 0.81", "22.5623, -86.6124, 16.1835, 0.81", "22.7471, -87.1918, 16.3147, 0.66", "23.1262, -88.5058, 16.5623, 0.66", "23.1555, -88.6101, 16.5759, 0.66", "23.4197, -89.5716, 16.7567, 0.88", "23.5821, -90.1718, 16.891, 1.18", "23.8053, -91.0596, 17.1168, 1.11", "23.902, -91.4927, 17.2443, 1.25", "23.9294, -91.6203, 17.287, 1.25", "24.1421, -92.658, 17.7112, 1.25", "24.2632, -93.3008, 18.0262, 1.25", "24.2751, -93.3605, 18.0594, 1.25", "24.4452, -94.0894, 18.4694, 1.03", "24.4605, -94.1482, 18.503, 1.03", "24.8728, -95.1156, 19.2625, 0.74", "24.9013, -95.1616, 19.3101, 0.74", "25.1438, -95.4406, 19.6637, 0.74", "25.6351, -95.8078, 20.31, 0.59", "25.6792, -95.8315, 20.3626, 0.59", "26.974, -96.4229, 21.7787, 0.59", "27.0218, -96.4408, 21.8264, 0.59", "27.3818, -96.566, 22.1759, 0.59", "28.9982, -97.0654, 23.7202, 0.59", "29.271, -97.1456, 23.9757, 1.03", "29.6035, -97.2647, 24.2775, 1.25", "29.8197, -97.3682, 24.4438, 1.25", "30.0485, -97.5197, 24.6159, 1.25", "30.1005, -97.5701, 24.6536, 1.25", "30.2105, -97.7279, 24.7185, 1.25", "30.8287, -98.7387, 25.1063, 0.88", "31.1951, -99.4053, 25.3297, 0.59", "31.6044, -100.196, 25.5681, 0.59", "31.8495, -100.699, 25.6937, 0.59", "32.0337, -101.115, 25.7572, 0.81", "32.0711, -101.208, 25.7531, 0.81", "32.3232, -101.91, 25.5771, 0.81", "32.3568, -101.997, 25.5462, 0.81", "32.7194, -102.787, 25.1807, 1.03", "33.0358, -103.291, 24.8629, 0.81", "33.6969, -104.122, 24.2101, 0.44", "33.7529, -104.174, 24.1605, 0.44", "34.3572, -104.542, 23.7042, 0.44", "34.4145, -104.563, 23.6692, 0.44", "35.5306, -104.755, 23.1095, 0.59", "35.7233, -104.761, 23.021, 0.59", "36.4102, -104.755, 22.743, 0.59", "37.0149, -104.766, 22.4769, 1.11", "37.4638, -104.778, 22.2652, 1.11", "37.5997, -104.791, 22.2022, 1.11", "38.9538, -105.068, 21.5992, 0.44", "39.9717, -105.471, 21.0901, 0.44", "40.8567, -105.896, 20.6086, 0.44", "40.9204, -105.933, 20.5724, 0.44", "41.469, -106.301, 20.2597, 0.74", "42.058, -106.752, 19.9512, 1.4", "42.8629, -107.676, 19.626, 1.84" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "7.16103, -66.6323, 5.03396, 1.47", "6.57294, -68.0883, 5.08701, 1.47", "6.30436, -68.7512, 5.09306, 1.62", "5.87484, -69.8355, 5.05641, 1.62", "5.62406, -70.4912, 5.02065, 1.62", "5.28377, -71.4589, 4.95687, 1.62", "4.94629, -72.4823, 4.88614, 1.62", "4.92596, -72.5479, 4.87845, 1.62", "4.61697, -73.6871, 4.75642, 1.47", "4.58301, -73.8352, 4.74329, 1.47", "4.42011, -74.8258, 4.69852, 1.69", "4.32315, -76.1884, 4.68984, 1.69", "4.32586, -76.2593, 4.69174, 1.69", "4.52837, -78.1712, 4.77137, 1.69", "4.75439, -79.4308, 4.89448, 1.69", "5.01167, -80.4484, 5.03092, 1.69", "5.46412, -81.7751, 5.2594, 1.47", "6.05, -83.1069, 5.52805, 1.18", "6.07857, -83.1686, 5.54099, 1.18", "6.56752, -84.1821, 5.75868, 1.62", "6.91444, -85.0701, 5.92453, 1.84", "6.94141, -85.2068, 5.93504, 1.84", "6.97271, -86.5211, 5.93023, 1.84", "6.88618, -87.7987, 5.85721, 1.84", "6.7793, -88.7713, 5.76387, 1.99", "6.60464, -89.7639, 5.62849, 1.99", "6.20984, -91.3901, 5.401, 1.99", "5.80985, -92.8161, 5.205, 1.99", "5.78633, -92.8907, 5.19495, 1.99", "5.33765, -94.3159, 5.02215, 1.99", "5.09707, -95.0838, 4.93918, 1.69", "4.9104, -95.684, 4.89249, 1.47", "4.63227, -96.56, 4.89249, 1.47", "4.40639, -97.232, 4.89249, 1.92", "4.14087, -98.048, 4.89249, 2.28" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-1.76026, 32.5258, -3.40299, 0.29", "-3.54827, 32.9022, 0.0112177, 0.29", "-3.59469, 32.9185, 0.0749893, 0.29", "-4.12212, 33.137, 0.6915, 0.29", "-4.46734, 33.3069, 1.1573, 0.29", "-4.9189, 33.5665, 1.78452, 0.29", "-5.21592, 33.774, 2.22778, 0.29", "-5.62333, 34.1996, 2.68885, 0.29", "-5.64719, 34.2358, 2.72948, 0.29", "-5.76592, 35.2663, 4.13707, 0.29", "-5.68317, 35.5579, 4.57099, 0.29", "-5.47526, 35.9028, 5.11639, 0.22", "-5.36076, 36.0662, 5.35887, 0.22", "-5.16389, 36.3374, 6.00453, 0.22", "-4.81458, 36.9436, 7.4899, 0.22", "-4.80195, 36.9691, 7.55359, 0.22", "-4.60159, 37.4522, 8.738, 1.11", "-4.52417, 37.7003, 9.33675, 1.11", "-4.00042, 39.7674, 14.1428, 0.52", "-3.94463, 40.1432, 14.9595, 0.52", "-3.9429, 40.1748, 15.0223, 0.52", "-3.93592, 40.547, 15.7484, 0.52", "-3.94104, 40.6127, 15.8727, 0.52", "-4.08785, 41.2973, 17.1442, 0.52", "-4.26364, 41.6841, 17.7258, 0.52", "-4.47066, 42.0422, 18.4116, 0.81", "-4.4979, 42.0848, 18.4997, 0.81", "-4.70855, 42.3664, 19.1474, 0.96", "-5.19626, 43.0265, 20.4904, 0.96", "-5.5818, 43.6171, 21.5072, 0.96", "-5.60024, 43.6564, 21.5613, 0.96", "-5.70294, 43.9488, 21.88, 0.81", "-5.71908, 43.9978, 21.927, 0.81", "-5.95039, 44.8055, 22.5884, 0.81", "-6.25191, 45.7517, 23.2483, 0.29", "-6.50018, 46.4002, 23.6921, 0.29", "-6.52284, 46.455, 23.7324, 0.29", "-6.8566, 47.1312, 24.3867, 0.29", "-6.88477, 47.1824, 24.4437, 0.29", "-7.23839, 47.7542, 25.1826, 0.96", "-7.39821, 47.9915, 25.4745, 1.11", "-7.51121, 48.1621, 25.6941, 1.18", "-8.16239, 49.1993, 26.9478, 0.29", "-8.36089, 49.558, 27.3343, 0.29", "-8.42102, 49.6694, 27.4463, 0.29", "-8.68159, 50.21, 27.9103, 0.29", "-9.0306, 51.0219, 28.551, 0.81", "-9.11399, 51.2642, 28.6983, 0.96", "-9.20468, 51.6646, 28.8409, 0.59", "-9.21793, 51.7285, 28.8614, 0.59", "-9.3439, 52.2085, 29.1461, 0.44", "-9.38222, 52.327, 29.2549, 0.29", "-9.57551, 52.7604, 29.7345, 0.29", "-9.59861, 52.8022, 29.7847, 0.29", "-9.79196, 53.137, 30.1868, 0.29", "-10.3836, 54.4218, 31.7794, 0.29", "-10.3987, 54.4578, 31.8242, 0.29", "-10.5205, 54.7911, 32.2181, 0.29", "-10.8262, 55.7294, 33.2828, 2.65", "-10.8903, 55.9601, 33.5259, 2.65", "-11.2375, 57.5301, 35.1544, 0.44", "-11.2947, 57.8334, 35.4331, 0.44", "-11.3469, 58.1474, 35.7285, 0.59", "-11.4023, 58.4513, 36.0852, 0.88", "-11.4126, 58.4915, 36.1408, 0.88", "-11.726, 59.2882, 37.2203, 0.88", "-11.892, 59.6117, 37.6412, 0.74", "-12.0544, 59.9068, 38.0398, 0.74", "-12.7902, 61.361, 40.0106, 0.29", "-12.9162, 61.6627, 40.391, 0.29", "-13.22, 62.5303, 41.3858, 0.29", "-13.2519, 62.6335, 41.4916, 0.29", "-13.5168, 63.4946, 42.4493, 0.29", "-13.7782, 64.274, 43.3509, 1.11", "-13.9235, 64.7472, 43.864, 0.37", "-14.0041, 64.9502, 44.1598, 0.29", "-14.0778, 65.0833, 44.4161, 0.29", "-14.5458, 65.7438, 45.7409, 0.22", "-14.7608, 65.9671, 46.2107, 0.22", "-14.8505, 66.053, 46.3839, 0.22", "-15.4399, 66.6779, 47.5764, 0.59", "-15.5467, 66.8624, 47.9716, 0.74", "-15.6047, 67.0474, 48.3594, 0.81", "-15.6146, 67.1097, 48.4739, 0.81", "-15.6898, 67.5822, 49.3157, 0.81", "-15.6963, 67.6182, 49.3756, 0.81", "-16.1117, 69.3594, 52.0917, 0.44", "-16.1284, 69.4014, 52.16, 0.44", "-16.2914, 69.7162, 52.6056, 0.44", "-16.6483, 70.3268, 53.3723, 1.55", "-16.8779, 70.6794, 53.7782, 2.14", "-17.0281, 70.9064, 53.9982, 2.14", "-17.9694, 72.3408, 55.0216, 0.37", "-18.7113, 73.4666, 55.7935, 0.37", "-19.1723, 74.2082, 56.2903, 0.81", "-19.2134, 74.2768, 56.3334, 0.81", "-19.2826, 74.3884, 56.4042, 1.25", "-19.5054, 74.7612, 56.6292, 1.25", "-19.8227, 75.3395, 56.9219, 0.29", "-20.4532, 76.4916, 57.5771, 0.29", "-20.5193, 76.613, 57.6422, 0.29", "-21.0542, 77.6138, 58.197, 0.29", "-21.0833, 77.6681, 58.2293, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.76026, 32.5258, -3.40299, 3.02", "-1.7993, 32.8158, -3.40299, 3.02", "-2.05726, 34.7321, -3.40299, 3.32", "-2.23714, 36.0684, -3.40299, 3.32", "-2.43895, 37.5675, -3.40299, 3.68", "-2.52373, 38.1973, -3.40299, 3.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.80969, -40.9383, 1.26948, 0.578448", "13.2743, -55.5327, 1.26948, 0.578448", "16.739, -70.1271, 1.26948, 0.578448" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_129",
    "id" : "dend_129",
    "points3d" : [ "42.8629, -107.676, 19.626, 1.62", "43.3536, -108.82, 19.6747, 1.62", "43.5222, -109.197, 19.6946, 1.62", "43.7022, -109.549, 19.7511, 1.62", "44.2249, -110.519, 19.9441, 0.81", "44.6481, -111.255, 20.103, 0.74", "44.6831, -111.313, 20.1179, 0.74", "45.4508, -112.529, 20.5569, 0.74", "46.2513, -113.66, 21.0028, 0.52", "46.2927, -113.711, 21.0242, 0.52", "46.685, -114.109, 21.1931, 0.52", "47.164, -114.524, 21.3881, 0.88", "47.2267, -114.572, 21.4085, 0.88", "47.7694, -114.92, 21.5387, 0.88", "48.2552, -115.21, 21.6067, 1.33", "48.9711, -115.615, 21.6881, 0.74", "49.0347, -115.649, 21.6937, 0.74", "50.3143, -116.314, 21.6393, 0.74", "50.5772, -116.449, 21.5959, 1.25", "50.6557, -116.493, 21.5792, 1.25", "51.3317, -116.911, 21.4165, 1.25", "51.3793, -116.946, 21.408, 1.25", "52.4375, -117.792, 21.2915, 0.74", "53.1171, -118.409, 21.2527, 0.52", "54.1938, -119.516, 21.2477, 0.52", "54.5037, -119.874, 21.2651, 1.03", "55.4049, -121.025, 21.3886, 0.96", "55.849, -121.621, 21.503, 1.33", "56.2114, -122.136, 21.6554, 1.62", "56.5446, -122.627, 21.8132, 1.62", "56.8636, -123.076, 21.9317, 1.62", "56.9528, -123.196, 21.959, 1.62", "57.5354, -123.832, 22.0457, 0.96", "58.2661, -124.56, 22.1306, 0.88", "58.3385, -124.627, 22.1369, 0.88", "59.3547, -125.523, 22.2005, 0.88", "59.4292, -125.588, 22.2035, 0.88", "61.8656, -127.737, 22.2424, 0.88", "61.9179, -127.783, 22.2421, 0.88", "62.4992, -128.292, 22.2374, 1.18", "62.673, -128.443, 22.2359, 1.18", "63.5228, -129.184, 22.2263, 1.18", "64.5095, -130.057, 22.2128, 1.18", "65.2091, -130.75, 22.1954, 1.03" ],
    "parent" : "dend_127",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_128",
    "id" : "dend_128",
    "points3d" : [ "42.8629, -107.676, 19.626, 0.44", "41.6469, -108.741, 18.5156, 0.44", "41.6045, -108.78, 18.4768, 0.44", "40.8882, -109.441, 17.8896, 0.37", "40.4969, -109.801, 17.5848, 0.74", "40.0262, -110.228, 17.2403, 0.74", "39.0822, -111.062, 16.5989, 0.29", "39.028, -111.115, 16.5689, 0.29", "38.3966, -111.699, 16.2403, 0.29", "38.283, -111.796, 16.1837, 0.74", "38.0012, -112.007, 16.0765, 0.96", "37.6659, -112.23, 15.9619, 1.11", "36.9821, -112.65, 15.7797, 0.37", "36.5185, -112.916, 15.6312, 0.37", "36.4578, -112.949, 15.6095, 0.37", "35.7075, -113.356, 15.3361, 0.22", "35.2377, -113.606, 15.1599, 0.52", "34.9791, -113.744, 15.0708, 0.52", "33.8614, -114.323, 14.731, 0.15", "33.6429, -114.442, 14.6541, 0.37", "33.5178, -114.511, 14.6081, 0.37", "33.4416, -114.555, 14.5795, 0.37", "32.5047, -115.091, 14.2599, 0.22", "32.4384, -115.13, 14.2373, 0.22", "31.8087, -115.538, 14.0481, 0.37", "31.4262, -115.772, 13.9187, 0.37" ],
    "parent" : "dend_127",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_114",
    "id" : "dend_114",
    "points3d" : [ "4.14087, -98.048, 4.89249, 0.74", "3.35469, -99.3774, 5.46798, 0.74", "2.80201, -100.355, 5.88301, 0.66", "2.77146, -100.413, 5.90595, 0.66", "2.23244, -101.468, 6.30683, 0.66", "1.72791, -102.388, 6.62952, 0.66", "1.44938, -102.871, 6.79011, 0.52", "1.4056, -102.935, 6.80512, 0.52", "1.00299, -103.399, 6.98044, 0.52", "0.95615, -103.447, 7.00179, 0.52", "0.163945, -104.169, 7.36415, 0.52", "0.0819935, -104.243, 7.39939, 0.52", "-0.840338, -105.102, 7.82854, 0.52", "-1.89878, -106.253, 8.36308, 0.52", "-2.26981, -106.75, 8.57442, 1.11", "-2.50296, -107.161, 8.72907, 1.03", "-2.54732, -107.298, 8.76956, 1.03", "-2.62859, -107.882, 8.88114, 1.03", "-2.61759, -108.755, 8.96996, 1.03", "-2.56667, -109.349, 8.96996, 0.81", "-2.55889, -109.427, 8.96996, 0.81", "-2.50001, -110.383, 8.96996, 0.81", "-2.47918, -111.379, 8.95212, 0.74", "-2.48473, -111.448, 8.94985, 0.74", "-2.66632, -112.485, 8.90399, 0.59", "-2.92027, -113.451, 8.85452, 0.44", "-3.23071, -114.4, 8.80618, 0.37", "-3.39059, -114.767, 8.78763, 0.74", "-4.07558, -115.988, 8.73157, 0.74", "-4.54907, -116.728, 8.7014, 0.74", "-4.83522, -117.105, 8.6883, 1.03", "-5.33599, -117.704, 8.67397, 1.03", "-6.03209, -118.51, 8.6684, 1.03", "-6.88014, -119.476, 8.68297, 1.18", "-6.92563, -119.528, 8.68145, 1.18", "-7.29303, -119.967, 8.65152, 1.55", "-7.54031, -120.31, 8.60225, 1.55", "-7.89614, -120.869, 8.48951, 0.96", "-8.26419, -121.598, 8.31687, 0.81", "-8.58407, -122.426, 8.10231, 0.59", "-8.80399, -123.103, 7.92204, 0.59", "-9.16022, -124.489, 7.54071, 0.59", "-9.17549, -124.566, 7.52324, 0.59", "-9.23304, -125.065, 7.44915, 0.88", "-9.25224, -125.537, 7.43239, 1.11", "-9.25374, -125.674, 7.44559, 1.11", "-9.25503, -125.947, 7.49572, 1.11", "-9.33672, -126.929, 7.77957, 0.44", "-9.57584, -127.771, 8.03078, 0.44", "-9.8394, -128.254, 8.17538, 0.88", "-10.1547, -128.64, 8.27768, 0.96", "-10.4854, -128.956, 8.34276, 0.96", "-11.1403, -129.458, 8.41339, 0.96", "-12.0361, -130.04, 8.43931, 0.96", "-12.4377, -130.26, 8.44826, 0.96", "-13.0269, -130.562, 8.45606, 0.59", "-13.525, -130.827, 8.46357, 0.44", "-13.8744, -131.058, 8.47011, 0.96", "-14.2968, -131.417, 8.48183, 1.25" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "4.14087, -98.048, 4.89249, 1.99", "4.21336, -98.5549, 4.89249, 1.99", "4.29188, -99.6685, 4.89249, 1.99", "4.24837, -101.07, 4.89249, 1.99", "4.23741, -101.14, 4.89249, 1.99", "4.13057, -101.789, 4.86904, 1.84", "3.96738, -102.779, 4.81787, 1.62", "3.84976, -103.556, 4.76755, 1.25", "3.77885, -104.773, 4.67861, 1.03", "3.88682, -106.159, 4.57689, 1.03", "4.23067, -107.834, 4.46272, 1.03", "4.25209, -107.902, 4.45846, 1.03", "4.83988, -109.413, 4.37549, 1.18", "5.65033, -111.283, 4.20785, 1.33", "6.29442, -112.765, 4.04406, 1.62", "6.74747, -113.892, 3.88218, 1.25", "7.05653, -114.817, 3.72913, 1.33", "7.40687, -116.195, 3.4614, 1.33", "7.64698, -117.805, 3.08643, 1.33", "7.70755, -119.421, 2.65896, 1.33", "7.65125, -120.666, 2.30242, 1.33", "7.64431, -120.734, 2.28283, 1.33", "7.54552, -121.5, 2.06965, 1.62", "7.51849, -121.778, 2.00759, 1.62", "7.48076, -122.692, 1.91124, 1.62", "7.48851, -122.763, 1.90709, 1.62", "7.69756, -123.536, 1.90709, 1.62", "7.73756, -123.634, 1.91214, 1.62", "8.24974, -124.717, 2.00088, 1.62", "8.28031, -124.779, 2.00693, 1.62", "8.79613, -125.817, 2.1205, 1.62", "9.31792, -126.972, 2.25038, 1.62", "9.80888, -128.286, 2.39699, 1.62", "10.063, -129.248, 2.4966, 2.5", "10.1135, -129.755, 2.54111, 3.09", "10.1032, -130.152, 2.56592, 3.09", "10.0369, -130.945, 2.59785, 2.36", "9.92365, -132.077, 2.63749, 1.84", "9.83916, -133.011, 2.6607, 1.55", "9.73283, -134.696, 2.7167, 1.55", "9.6363, -136.642, 2.78642, 1.55", "9.59694, -138.269, 2.85001, 1.55", "9.60824, -139.389, 2.89962, 1.55", "9.67667, -140.614, 2.96324, 1.92", "9.68319, -140.672, 2.96685, 1.92" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-21.0833, 77.6681, 58.2293, 0.22", "-22.8161, 77.765, 61.1099, 0.22", "-23.2246, 77.7783, 61.6804, 1.62", "-23.2658, 77.7785, 61.7378, 1.62", "-23.7583, 77.8123, 62.3806, 1.92", "-25.2626, 77.9694, 64.2023, 0.29", "-25.743, 78.0264, 64.7487, 0.29", "-26.2338, 78.1033, 65.1843, 0.29", "-27.2796, 78.3282, 66.0637, 0.29", "-28.131, 78.523, 66.7251, 0.29", "-28.5385, 78.6243, 67.0045, 0.29", "-28.8362, 78.7096, 67.1365, 1.03", "-29.1051, 78.7985, 67.256, 1.4", "-29.6943, 79.0298, 67.4615, 1.4", "-29.769, 79.0572, 67.4654, 1.4", "-30.009, 79.0956, 67.4749, 1.4" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-21.0833, 77.6681, 58.2293, 0.22", "-21.4459, 78.6318, 58.593, 0.22", "-21.7233, 79.3692, 58.8714, 0.22", "-21.8606, 79.7339, 59.009, 0.66", "-21.8874, 79.8053, 59.0359, 0.66", "-22.0308, 80.1864, 59.1798, 0.74" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-2.52373, 38.1973, -3.40299, 1.25", "-3.23214, 38.5558, -3.78434, 1.25", "-4.30957, 39.1346, -4.88157, 1.25", "-4.35752, 39.1653, -4.94083, 1.25", "-4.95025, 39.6923, -5.95641, 0.96", "-5.21764, 39.972, -6.48814, 0.96", "-5.68437, 40.589, -7.65152, 1.25", "-6.19569, 41.5085, -9.50821, 1.25", "-6.28675, 41.7822, -10.0325, 1.4", "-6.51584, 42.8576, -11.8872, 1.4", "-6.51929, 42.9028, -11.9553, 1.4", "-6.59775, 44.1144, -13.5108, 1.4", "-6.60159, 44.1625, -13.5613, 1.4", "-6.72134, 44.9552, -14.2972, 1.4", "-6.74663, 45.0597, -14.3926, 1.4", "-7.2387, 46.3628, -15.4147, 1.4", "-7.75243, 47.4193, -16.1665, 1.4", "-7.81731, 47.5318, -16.2399, 1.4", "-8.6086, 48.9722, -17.0821, 1.4", "-8.63722, 49.0283, -17.1099, 1.4", "-9.16463, 50.1627, -17.59, 1.4", "-9.45849, 50.888, -17.8295, 1.4", "-10.0409, 52.7133, -18.3268, 1.18", "-10.5464, 54.5828, -18.7333, 1.18", "-10.8605, 56.1102, -18.9529, 1.18", "-10.8725, 56.1777, -18.9611, 1.18", "-11.023, 57.2557, -19.0653, 1.69", "-11.2515, 58.738, -19.1574, 1.69", "-11.2784, 58.8822, -19.1584, 1.69", "-11.7133, 60.4367, -19.217, 0.81", "-12.073, 61.378, -19.2818, 0.81", "-12.1813, 61.6118, -19.303, 0.81", "-12.7067, 62.5728, -19.4397, 0.81", "-12.7423, 62.6305, -19.4507, 0.81", "-13.4738, 63.8369, -19.7007, 0.81", "-13.9898, 64.6351, -19.8964, 0.81", "-14.4014, 65.3111, -20.0743, 1.25", "-14.7648, 65.9555, -20.2456, 1.69", "-14.7984, 66.0266, -20.2642, 1.69", "-15.3585, 67.3184, -20.5697, 1.69" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.52373, 38.1973, -3.40299, 2.58", "-1.64174, 39.7031, -3.85518, 2.58", "-1.22438, 40.5383, -4.08432, 2.28", "-0.760827, 41.6028, -4.34767, 2.06", "-0.370606, 42.6747, -4.57889, 1.84", "-0.0232486, 43.6823, -4.81552, 1.84", "0.247032, 44.4397, -5.10297, 1.69", "0.565528, 45.3881, -5.59419, 1.69", "0.782858, 46.0435, -5.97301, 1.69", "1.13218, 47.0162, -6.55155, 1.69", "1.51011, 47.9751, -7.14759, 1.47", "2.52306, 50.342, -8.70237, 1.47", "2.87845, 51.12, -9.26337, 1.47", "3.313, 52.0372, -9.93406, 1.47", "3.71985, 52.8976, -10.5414, 1.92", "3.96319, 53.4149, -10.8726, 1.92", "4.45016, 54.5392, -11.4757, 1.77", "4.94872, 55.6496, -11.9381, 1.25", "5.38348, 56.4763, -12.4807, 1.25", "5.57358, 56.7714, -12.7635, 1.11", "5.89207, 57.1692, -13.2301, 1.11", "6.35376, 57.6148, -13.8346, 1.4", "7.18114, 58.2562, -14.8129, 1.4", "9.16032, 59.5226, -16.9581, 0.96", "10.0371, 60.0134, -17.8817, 0.96", "10.6927, 60.3605, -18.5663, 0.96", "11.4897, 60.7776, -19.4174, 0.96", "11.6331, 60.8533, -19.568, 0.96", "12.1641, 61.1666, -20.1374, 1.62", "12.2116, 61.2015, -20.1794, 1.62", "13.1508, 62.0233, -20.9967, 1.62", "14.0394, 62.8944, -21.7729, 1.84", "14.0809, 62.9386, -21.808, 1.84", "15.1729, 64.1378, -22.6526, 1.84", "16.0055, 65.0731, -23.2361, 1.84", "16.7734, 65.8995, -23.6318, 2.28", "17.2263, 66.3652, -23.7748, 2.65", "17.2832, 66.4223, -23.786, 2.65", "17.826, 66.9451, -23.8643, 2.65", "17.9066, 67.0154, -23.8648, 2.65", "19.2217, 68.0012, -23.8772, 2.65", "19.3035, 68.0582, -23.8783, 2.65" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_131",
    "id" : "dend_131",
    "points3d" : [ "65.2091, -130.75, 22.1954, 0.96", "64.8128, -132.173, 21.4169, 0.96", "64.6482, -132.833, 21.1118, 1.25", "64.5444, -133.357, 20.8996, 1.25", "64.4632, -134.413, 20.4873, 1.4", "64.45, -135.503, 20.0707, 1.11", "64.5276, -136.514, 19.6997, 0.81", "64.6159, -136.95, 19.5859, 0.81", "64.8341, -137.497, 19.4613, 0.81", "65.5814, -138.69, 19.2029, 0.81", "65.6307, -138.742, 19.1935, 0.81", "66.3843, -139.317, 19.0675, 1.25", "66.5027, -139.391, 19.0501, 1.25", "67.0968, -139.736, 18.9729, 1.55", "67.1909, -139.787, 18.9632, 1.55", "67.9087, -140.185, 18.9244, 1.55", "68.0084, -140.238, 18.9191, 1.55", "68.5295, -140.538, 18.8927, 1.55", "68.5897, -140.572, 18.8904, 1.55", "68.9686, -140.793, 18.8796, 1.55", "69.1158, -140.878, 18.8765, 1.55", "69.7732, -141.259, 18.8674, 1.03", "70.5011, -141.753, 18.8588, 0.74", "71.1593, -142.33, 18.8368, 0.66", "71.2228, -142.406, 18.8333, 0.66", "71.8108, -143.317, 18.7875, 0.59", "71.8427, -143.378, 18.784, 0.59", "72.1805, -144.309, 18.7265, 0.59", "72.418, -145.256, 18.664, 1.25", "72.5824, -146.166, 18.558, 1.77", "72.6438, -146.516, 18.4862, 1.77", "72.6584, -146.589, 18.4605, 1.77", "72.7983, -147.018, 18.2437, 1.77", "72.8226, -147.075, 18.2076, 1.77", "73.375, -148.061, 17.5151, 1.33", "73.8837, -148.871, 16.9124, 0.59", "74.6321, -149.998, 16.0727, 0.59", "75.3743, -151.072, 15.3014, 0.59", "75.4096, -151.121, 15.2673, 0.59", "76.6454, -152.74, 14.3023, 0.59", "76.693, -152.798, 14.2768, 0.59", "76.9844, -153.141, 14.1813, 1.33", "77.455, -153.687, 14.1258, 1.33", "77.5, -153.741, 14.1272, 1.33", "78.8802, -155.401, 14.2552, 1.33", "79.3362, -155.979, 14.3176, 1.33", "79.378, -156.034, 14.3162, 1.33", "79.7519, -156.549, 14.2466, 0.44", "80.1515, -157.104, 14.0539, 0.44", "80.6779, -157.795, 13.7117, 0.44", "81.0544, -158.259, 13.3835, 1.4", "81.9622, -159.329, 12.5294, 1.62", "82.232, -159.631, 12.285, 1.62", "83.2389, -160.718, 11.3773, 0.81", "84.2079, -161.738, 10.5617, 0.81", "85.0296, -162.564, 9.93546, 1.03", "85.143, -162.676, 9.86355, 1.03", "85.9395, -163.494, 9.45782, 1.03", "85.985, -163.547, 9.43897, 1.03", "86.7014, -164.535, 9.3024, 1.03", "86.7358, -164.594, 9.30056, 1.03", "87.0329, -165.227, 9.34762, 1.4", "87.2839, -165.773, 9.3965, 1.47", "87.6391, -166.619, 9.40511, 0.88", "87.8925, -167.219, 9.37317, 0.66", "88.0328, -167.543, 9.33359, 0.66", "88.4016, -168.32, 8.94629, 0.44", "88.7042, -168.835, 8.50627, 0.37", "89.3174, -169.688, 7.51503, 0.44", "89.3927, -169.773, 7.39314, 1.11", "89.8241, -170.169, 6.74757, 1.33", "91.6082, -171.539, 4.32447, 0.37", "92.022, -171.81, 3.83735, 0.37", "92.4564, -172.078, 3.37485, 0.96", "93.2581, -172.524, 2.59704, 1.33", "94.3504, -173.102, 1.59564, 1.69", "95.4467, -173.641, 0.706611, 1.92", "96.5109, -174.156, 0.107733, 1.92", "96.574, -174.188, 0.0704686, 1.92" ],
    "parent" : "dend_129",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_130",
    "id" : "dend_130",
    "points3d" : [ "65.2091, -130.75, 22.1954, 0.29", "65.7441, -129.751, 21.8644, 0.29", "66.1173, -129.055, 21.6336, 0.29", "66.1444, -129.005, 21.6169, 0.29", "66.5289, -128.287, 21.3791, 0.29", "66.5603, -128.228, 21.3596, 0.29", "66.932, -127.535, 21.1297, 0.29" ],
    "parent" : "dend_129",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_116",
    "id" : "dend_116",
    "points3d" : [ "-14.2968, -131.417, 8.48183, 0.59", "-15.0255, -131.911, 8.36633, 0.59", "-15.4779, -132.218, 8.29463, 0.44", "-16.3008, -132.776, 8.1642, 0.44", "-16.3664, -132.82, 8.1538, 0.44", "-17.5111, -133.597, 7.97237, 0.44" ],
    "parent" : "dend_114",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_115",
    "id" : "dend_115",
    "points3d" : [ "-14.2968, -131.417, 8.48183, 0.29", "-12.6884, -132.007, 8.28053, 0.29", "-11.3211, -132.586, 8.12846, 0.22", "-11.1731, -132.653, 8.11333, 0.22", "-10.3788, -132.954, 8.37089, 0.22", "-10.2601, -132.994, 8.43324, 0.22", "-9.8105, -133.13, 8.53628, 0.37", "-9.38693, -133.249, 8.57513, 0.37", "-9.31214, -133.269, 8.54716, 0.37", "-6.65775, -133.843, 6.83242, 0.37", "-6.59641, -133.854, 6.78146, 0.37", "-3.73962, -134.43, 3.87382, 0.15", "-3.35336, -134.511, 3.39335, 0.15", "-2.87718, -134.625, 2.67009, 0.44", "-2.84422, -134.634, 2.60821, 0.44", "-2.71816, -134.675, 2.28682, 0.44", "-2.69293, -134.684, 2.22219, 0.44", "-2.61649, -134.754, 2.11096, 0.44", "-2.58713, -134.774, 2.04999, 0.44", "-2.46034, -134.886, 2.04999, 0.66" ],
    "parent" : "dend_114",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "9.68319, -140.672, 2.96685, 0.81", "9.50254, -141.505, 3.29839, 0.81", "9.20224, -143.138, 3.93992, 0.81", "9.18837, -143.23, 3.97457, 0.81", "8.99251, -144.665, 4.4868, 0.81", "8.78586, -146.287, 5.02263, 0.66", "8.6662, -147.291, 5.32626, 0.66", "8.65748, -147.434, 5.36363, 0.66", "8.655, -147.9, 5.44244, 0.88", "8.65748, -148.544, 5.51804, 0.59", "8.664, -149.252, 5.56165, 0.74", "8.66763, -149.975, 5.56165, 0.74", "8.63012, -151.496, 5.56165, 0.59", "8.54746, -153.029, 5.59975, 0.59", "8.49821, -153.644, 5.6269, 0.96", "8.42888, -154.283, 5.66708, 0.96", "8.28575, -155.117, 5.80619, 0.88", "8.06675, -155.957, 6.04733, 0.66", "7.76793, -156.688, 6.36493, 0.66", "7.73665, -156.745, 6.39615, 0.66", "7.24707, -157.521, 6.86781, 0.66", "6.25979, -158.973, 7.77699, 0.66", "5.95489, -159.404, 8.05119, 1.25", "5.62736, -159.918, 8.32152, 1.47", "5.34776, -160.41, 8.44682, 1.25", "5.15255, -160.778, 8.47771, 1.03", "4.77635, -161.535, 8.40341, 0.81", "4.74779, -161.597, 8.38787, 0.81", "4.17415, -162.915, 7.92622, 0.81", "3.55813, -164.42, 7.30065, 0.81", "3.53025, -164.489, 7.26941, 0.81", "3.37554, -164.872, 7.08477, 1.25", "3.14661, -165.437, 6.80983, 1.55", "2.56793, -166.826, 6.18465, 1.55", "2.54164, -166.886, 6.16136, 1.55", "2.19217, -167.739, 6.00337, 1.11", "2.16648, -167.805, 5.99756, 1.11", "1.83254, -168.712, 5.99567, 1.11", "1.65091, -169.277, 6.04954, 1.47", "1.44269, -169.972, 6.18736, 1.47", "1.17123, -171.078, 6.40004, 1.33", "1.06965, -171.693, 6.50725, 1.18", "1.05878, -171.771, 6.52578, 1.18", "0.912541, -172.749, 6.80428, 1.03", "0.890905, -172.878, 6.8443, 1.03", "0.698491, -173.832, 7.17781, 0.74", "0.39304, -174.987, 7.59048, 0.74", "-0.100318, -176.434, 8.14364, 0.74", "-0.42466, -177.236, 8.44582, 0.74", "-0.452594, -177.295, 8.46757, 0.74", "-0.812856, -178.039, 8.71458, 0.96", "-1.16913, -178.765, 8.95268, 1.03", "-1.55884, -179.581, 9.18434, 1.03", "-1.9119, -180.439, 9.36391, 1.18", "-2.20632, -181.226, 9.54886, 1.18", "-2.4764, -181.975, 9.72882, 1.33", "-2.89499, -183.11, 10.0043, 1.33", "-3.21439, -183.96, 10.2373, 1.47", "-3.46623, -184.594, 10.4479, 1.25", "-3.87144, -185.52, 10.7927, 0.74", "-4.27003, -186.325, 11.1018, 0.74", "-4.75883, -187.198, 11.4282, 0.74", "-4.78817, -187.246, 11.4447, 0.74", "-5.33176, -188.165, 11.7457, 0.59", "-5.78757, -188.935, 11.9634, 0.44", "-6.24063, -189.73, 12.1356, 0.44", "-6.39961, -190.049, 12.1934, 0.81", "-6.64846, -190.645, 12.2715, 1.03", "-6.88764, -191.304, 12.3635, 1.03", "-7.09814, -192.067, 12.4612, 1.03", "-7.11542, -192.21, 12.4868, 1.03", "-7.01787, -193.017, 12.6669, 1.03", "-6.99818, -193.083, 12.684, 1.03", "-6.51784, -194.163, 13.1518, 0.29", "-6.3341, -194.492, 13.346, 0.29", "-5.84245, -195.224, 13.8594, 0.29", "-5.31372, -196.017, 14.4511, 0.29", "-5.28034, -196.067, 14.491, 0.29", "-4.57627, -197.263, 15.3281, 0.29", "-4.5317, -197.354, 15.3814, 0.29", "-4.45794, -197.666, 15.5354, 0.81", "-4.44354, -198.214, 15.736, 0.81", "-4.44766, -198.282, 15.7534, 0.81", "-4.49617, -199.298, 15.8966, 0.81", "-4.52167, -199.645, 15.9073, 0.59", "-4.59029, -200.282, 15.9198, 0.74", "-4.69263, -200.989, 15.9268, 0.88", "-4.76914, -201.407, 15.927, 0.59", "-4.92594, -202.113, 15.9209, 0.52", "-5.1697, -202.93, 15.9046, 0.52", "-5.26284, -203.2, 15.8967, 0.96", "-5.46971, -203.736, 15.8814, 1.18", "-5.70391, -204.298, 15.866, 1.18", "-5.89951, -204.77, 15.8548, 1.18", "-6.16401, -205.424, 15.8426, 0.59", "-6.42415, -206.18, 15.8347, 0.59", "-6.58441, -206.726, 15.8347, 1.18", "-6.6022, -206.794, 15.8347, 1.18", "-6.74963, -207.493, 15.8347, 1.33", "-6.77352, -207.628, 15.8333, 1.33", "-6.86441, -208.266, 15.8206, 1.33", "-7.00227, -209.039, 15.7984, 1.4", "-7.05546, -209.264, 15.8099, 1.4", "-7.08215, -209.34, 15.8199, 1.4", "-7.44532, -210.094, 16.0335, 0.29", "-7.4822, -210.162, 16.0592, 0.29", "-7.70638, -210.529, 16.2382, 0.29", "-8.16067, -211.279, 16.6372, 0.52", "-8.44185, -211.791, 17.034, 0.52", "-8.66452, -212.296, 17.4719, 0.74", "-8.81223, -212.703, 17.8571, 0.74", "-8.83776, -212.806, 17.9507, 0.74", "-8.89063, -213.248, 18.3195, 0.74", "-8.97193, -214.905, 19.4568, 0.52", "-9.01256, -215.589, 19.8199, 0.52", "-9.02305, -215.666, 19.839, 0.52", "-9.13768, -216.155, 19.847, 0.66", "-9.34137, -216.798, 19.7367, 0.66", "-9.63907, -217.534, 19.482, 0.66", "-10.1759, -218.613, 18.861, 0.66", "-10.8797, -219.685, 18.1708, 0.66", "-11.1333, -220.008, 17.9605, 0.66", "-11.1756, -220.056, 17.9318, 0.66", "-11.6115, -220.511, 17.673, 1.03", "-12.4929, -221.414, 17.2251, 0.81", "-13.5553, -222.526, 16.8157, 0.81", "-14.2037, -223.221, 16.6305, 0.81", "-15.121, -224.283, 16.3877, 0.81", "-15.1642, -224.337, 16.3778, 0.81", "-15.4882, -224.779, 16.3492, 1.18", "-15.8007, -225.361, 16.4162, 1.18", "-15.8219, -225.426, 16.4279, 1.18", "-15.9106, -226.127, 16.5844, 1.18", "-15.9123, -226.205, 16.6016, 1.18", "-15.8794, -227.209, 16.798, 0.88", "-15.7731, -228.695, 17.0599, 0.74", "-15.7594, -228.841, 17.0825, 0.74", "-15.5644, -230.565, 17.3035, 0.74", "-15.4001, -231.912, 17.4706, 0.74", "-15.2848, -232.821, 17.5725, 1.03", "-15.1989, -233.479, 17.6289, 1.03", "-15.1175, -234.143, 17.6879, 1.25", "-14.9692, -235.318, 17.7898, 1.25", "-14.8286, -236.734, 17.9072, 0.81", "-14.8248, -236.803, 17.9128, 0.81", "-14.8504, -238.456, 18.0357, 0.74", "-14.9668, -240.289, 18.1557, 0.74", "-15.0181, -240.805, 18.1823, 0.74", "-15.156, -241.683, 18.2101, 0.74", "-15.4048, -242.766, 18.18, 0.59", "-15.7738, -243.844, 18.1171, 0.59", "-15.8079, -243.903, 18.1065, 0.59", "-16.3604, -244.577, 17.8902, 1.11", "-16.6993, -244.932, 17.7394, 1.33", "-17.4172, -245.641, 17.3605, 1.03", "-17.9915, -246.219, 16.9932, 0.81", "-18.7524, -247.015, 16.4565, 0.74", "-18.7939, -247.065, 16.4262, 0.74", "-19.1303, -247.532, 16.1718, 0.74", "-19.4102, -248.149, 15.9139, 0.74", "-19.583, -249.01, 15.6755, 0.74", "-19.5911, -249.224, 15.6324, 0.74", "-19.5122, -249.997, 15.5494, 0.59", "-19.4836, -250.143, 15.5356, 0.59", "-19.2473, -250.859, 15.4804, 0.59", "-19.0232, -251.389, 15.4561, 0.88", "-18.9928, -251.453, 15.4561, 0.88", "-18.6345, -252.183, 15.4561, 0.88", "-18.5563, -252.363, 15.4561, 0.88", "-18.4506, -252.674, 15.4561, 0.59", "-18.396, -253.163, 15.4952, 0.52", "-18.4721, -253.591, 15.5605, 0.74", "-18.4944, -253.644, 15.5765, 0.74", "-18.8868, -254.302, 15.8429, 0.74", "-18.924, -254.359, 15.8669, 0.74", "-19.5239, -255.206, 16.2447, 0.66", "-20.0685, -255.952, 16.5836, 0.66", "-20.7472, -256.873, 17.0049, 0.66", "-20.8225, -256.983, 17.0514, 0.66", "-21.3834, -257.859, 17.3977, 0.88", "-21.4522, -257.983, 17.4365, 0.88", "-21.7514, -258.669, 17.5743, 1.18", "-21.773, -258.734, 17.5824, 1.18", "-22.0105, -259.48, 17.6065, 1.18", "-22.0372, -259.556, 17.6083, 1.18", "-22.2929, -260.227, 17.6186, 0.96", "-22.3191, -260.293, 17.6192, 0.96", "-22.6204, -261.114, 17.6192, 0.96", "-22.9185, -261.969, 17.593, 0.66", "-23.2019, -262.845, 17.5448, 0.59", "-23.4621, -263.766, 17.4809, 0.59", "-23.4874, -263.869, 17.4726, 0.59", "-23.7045, -264.875, 17.3869, 0.59", "-23.8069, -265.433, 17.3357, 0.96", "-23.9331, -266.341, 17.187, 1.11", "-24.0595, -267.369, 16.9274, 1.11", "-24.0695, -267.435, 16.9071, 1.11", "-24.3471, -268.699, 16.4959, 1.11", "-24.3677, -268.771, 16.4718, 1.11", "-24.8303, -270.022, 16.0687, 0.74", "-25.1187, -270.668, 15.8613, 0.44", "-25.6797, -271.744, 15.5456, 0.44", "-26.2821, -272.773, 15.3004, 0.44", "-26.5125, -273.126, 15.2438, 1.11", "-27.0339, -273.897, 15.1862, 1.11", "-27.5453, -274.631, 15.2042, 1.25", "-28.0809, -275.432, 15.2536, 1.25", "-28.71, -276.472, 15.3271, 1.25", "-29.033, -277.072, 15.3735, 0.81", "-29.3998, -277.883, 15.4185, 0.81", "-29.6522, -278.641, 15.4422, 0.81", "-29.8657, -279.546, 15.4462, 0.66", "-29.9232, -280.293, 15.4206, 0.52", "-29.9163, -280.363, 15.4149, 0.52", "-29.7624, -281.043, 15.2858, 1.03", "-29.5632, -281.65, 15.1376, 1.33", "-29.5288, -281.739, 15.1141, 1.33", "-29.2759, -282.419, 14.867, 1.33", "-29.0543, -283.224, 14.5474, 1.33", "-28.8384, -284.222, 14.1506, 0.59", "-28.6811, -285.326, 13.73, 0.59", "-28.6249, -285.981, 13.4751, 0.59", "-28.5967, -287.401, 12.9484, 0.59", "-28.6459, -288.341, 12.6102, 0.59", "-28.7094, -288.866, 12.4501, 1.03", "-28.8552, -289.696, 12.2725, 1.03", "-28.8841, -289.829, 12.2498, 1.03", "-29.0647, -290.734, 12.1679, 1.03", "-29.0749, -290.802, 12.1679, 1.03", "-29.1131, -292.014, 12.2221, 1.03", "-29.0659, -292.674, 12.278, 0.52", "-29.0528, -292.751, 12.2871, 0.52", "-28.7404, -294.014, 12.6813, 0.52", "-28.7101, -294.105, 12.7278, 0.52", "-28.3178, -295.27, 13.5432, 0.52", "-28.1339, -295.786, 14.0232, 0.52", "-28.1199, -295.834, 14.0746, 0.52", "-27.7748, -297.432, 15.9524, 0.52", "-27.768, -297.503, 16.0471, 0.52", "-27.7564, -298.158, 16.7649, 0.52", "-27.7612, -298.23, 16.8328, 0.52", "-27.7877, -298.796, 17.2654, 0.52", "-27.7871, -298.855, 17.3001, 0.52", "-27.6479, -300.277, 17.7929, 0.52", "-27.3652, -301.836, 18.236, 0.52", "-27.341, -301.934, 18.2613, 0.52", "-27.1974, -302.443, 18.3868, 0.88", "-27.1758, -302.506, 18.4013, 0.88", "-26.8996, -303.275, 18.5344, 1.03", "-26.5264, -304.155, 18.5344, 1.03" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "9.68319, -140.672, 2.96685, 1.25", "10.1999, -141.489, 2.96578, 1.25", "10.5387, -142.255, 2.9638, 1.25", "10.8158, -143.021, 2.96531, 1.03", "11.119, -144.098, 2.89867, 0.59", "11.1318, -144.165, 2.89177, 0.59", "11.2514, -145.21, 2.76182, 0.59", "11.2263, -146.17, 2.61793, 0.59", "11.2195, -146.227, 2.60777, 0.59", "11.0762, -147.202, 2.42286, 0.59", "10.9617, -147.922, 2.2817, 0.59", "10.9325, -148.602, 2.16084, 0.88", "11.0023, -149.166, 2.07429, 1.03", "11.0575, -149.374, 2.05095, 1.03", "11.3876, -150.229, 1.99464, 1.03", "11.453, -150.353, 1.99464, 1.03", "12.0854, -151.275, 1.99464, 1.03", "12.5382, -151.84, 1.99464, 1.11", "12.5769, -151.885, 1.99464, 1.11", "13.0065, -152.343, 1.99464, 1.11", "13.0673, -152.402, 1.99464, 1.11", "13.584, -152.865, 1.99464, 1.25", "13.9789, -153.198, 1.99464, 1.25", "14.207, -153.4, 1.9932, 1.03", "14.5891, -153.8, 1.9884, 0.81", "14.8768, -154.163, 1.98252, 0.59", "15.2439, -154.804, 1.91749, 0.59", "15.2638, -154.881, 1.90231, 0.59", "15.2894, -155.29, 1.79361, 0.59", "15.2574, -156.041, 1.58567, 0.59", "15.2528, -156.108, 1.56868, 0.59", "15.1829, -157.16, 1.34106, 0.59", "15.1661, -157.834, 1.23197, 0.59", "15.177, -158.148, 1.21777, 1.03", "15.254, -159.048, 1.3053, 1.33", "15.3857, -159.99, 1.47414, 1.33", "15.5543, -160.956, 1.70164, 1.33", "15.9236, -162.534, 2.22036, 1.33", "16.4902, -164.525, 2.98792, 1.33", "17.0027, -166.043, 3.69888, 0.74", "17.273, -166.725, 4.06659, 0.74", "17.3498, -166.903, 4.17042, 0.74", "17.8957, -168.091, 4.84312, 0.74", "18.1504, -168.615, 5.12446, 0.74", "18.5519, -169.469, 5.47995, 1.18", "19.023, -170.666, 5.77777, 1.18", "19.3529, -171.679, 5.94682, 1.18", "19.8137, -173.372, 6.10076, 1.18", "19.8282, -173.439, 6.10087, 1.18", "20.068, -174.704, 6.04735, 1.18", "20.2733, -175.937, 5.92151, 0.81", "20.3541, -176.469, 5.85871, 0.74", "20.3964, -176.759, 5.82236, 0.74", "20.5422, -177.719, 5.70689, 0.74", "20.5566, -177.796, 5.69923, 0.74", "20.7116, -178.384, 5.68687, 1.47", "20.9901, -179.166, 5.78639, 1.47", "21.245, -179.79, 5.9052, 1.47", "21.6978, -180.941, 6.15462, 1.47", "21.854, -181.419, 6.25785, 1.69", "22.1751, -182.54, 6.49653, 1.84", "22.3909, -183.448, 6.67679, 0.88", "22.5081, -184.114, 6.79655, 0.66", "22.7048, -185.722, 7.05627, 0.66", "22.7811, -187.283, 7.22703, 0.66", "22.7808, -187.354, 7.23017, 0.66", "22.7091, -188.873, 7.18546, 0.66", "22.6861, -189.685, 7.11825, 0.96", "22.6878, -189.753, 7.11616, 0.96", "22.8122, -190.635, 7.17778, 0.74", "23.0669, -191.597, 7.35283, 0.74", "23.0877, -191.654, 7.38593, 0.74", "23.524, -192.629, 8.28201, 0.74", "24.0612, -193.709, 9.45838, 1.03", "24.3787, -194.318, 10.1384, 1.62", "24.6374, -194.795, 10.6719, 1.62", "25.8096, -197.056, 13.0452, 0.66", "26.044, -197.562, 13.4937, 0.66", "26.1954, -197.932, 13.7196, 0.66", "26.6121, -199.047, 14.115, 0.66", "26.918, -199.868, 14.2817, 1.11", "27.2512, -200.744, 14.3713, 1.4", "27.6673, -201.854, 14.432, 1.11", "28.4249, -203.94, 14.6644, 1.11", "28.4478, -204.004, 14.6749, 1.11", "29.3088, -206.368, 15.1995, 0.96", "29.3326, -206.43, 15.2208, 0.96", "29.8949, -207.859, 15.9409, 0.81", "30.0209, -208.202, 16.1786, 0.81", "30.152, -208.564, 16.4992, 1.11", "30.2131, -208.732, 16.6576, 1.11", "30.7387, -209.938, 17.8429, 1.11", "31.0737, -210.577, 18.3781, 0.59", "31.108, -210.628, 18.4107, 0.59", "31.6921, -211.42, 18.8564, 0.59", "31.7516, -211.5, 18.894, 0.59", "32.588, -212.685, 19.258, 0.59", "32.7575, -212.939, 19.277, 0.59", "33.3576, -213.878, 19.2731, 0.59", "33.4317, -214.007, 19.2699, 0.59", "33.5601, -214.28, 19.2568, 1.03", "33.8484, -215.211, 19.1941, 1.03", "33.9387, -216.075, 19.112, 1.47", "33.9375, -216.146, 19.1059, 1.47", "33.8843, -216.507, 19.0768, 1.47", "33.8317, -216.83, 19.0608, 1.47", "33.663, -217.808, 19.0474, 0.74", "33.6498, -217.875, 19.0489, 0.74", "33.5484, -218.486, 19.0772, 0.96", "33.5308, -218.622, 19.0829, 0.96", "33.4584, -219.442, 19.1109, 0.96", "33.4452, -220.5, 19.1375, 0.96", "33.4795, -221.029, 19.1399, 1.47", "33.5697, -221.895, 19.1305, 1.47", "33.5817, -221.972, 19.1287, 1.47", "33.7932, -223.105, 19.097, 1.47", "34.0671, -224.242, 19.0608, 1.47", "34.3355, -225.14, 19.0252, 1.18", "34.6144, -225.939, 18.9904, 1.47", "34.9701, -226.861, 18.987, 1.69", "35.0116, -226.964, 18.9892, 1.69", "35.2571, -227.547, 19.0759, 1.69", "35.6249, -228.42, 19.3044, 0.88", "36.0161, -229.354, 19.6377, 0.74", "36.914, -231.455, 20.5454, 0.74", "36.9556, -231.543, 20.5887, 0.74", "37.7635, -233.221, 21.6413, 0.74", "37.874, -233.45, 21.8174, 0.74", "38.0194, -233.775, 22.1102, 0.74", "38.0585, -233.87, 22.2068, 0.74", "38.2681, -234.777, 23.0388, 0.74", "38.4703, -236.744, 24.4864, 0.74", "38.4667, -236.824, 24.5278, 0.74", "38.3081, -237.931, 25.024, 0.74", "38.2934, -237.996, 25.0482, 0.74", "37.7314, -239.906, 25.5916, 0.74", "37.7112, -239.963, 25.6013, 0.74", "37.3785, -240.917, 25.6388, 0.74", "37.2345, -241.392, 25.6512, 1.18", "37.0723, -242.165, 25.6393, 1.18", "36.9982, -242.67, 25.6239, 0.81", "37.038, -244.304, 25.4867, 0.81", "37.0458, -244.372, 25.4786, 0.81", "37.3885, -245.647, 25.2801, 0.81", "37.9359, -247.052, 25.0212, 0.74", "37.9744, -247.12, 25.0073, 0.74", "39.2373, -248.841, 24.6177, 0.74", "39.2854, -248.894, 24.6102, 0.74", "40.1997, -249.846, 24.5734, 0.74", "40.2488, -249.895, 24.5771, 0.74", "41.2546, -250.963, 24.7891, 0.74", "41.3035, -251.023, 24.8081, 0.74", "42.3345, -252.586, 25.4729, 0.74", "42.6327, -253.131, 25.7504, 1.03", "43.0298, -254.055, 26.2625, 1.03", "43.0512, -254.113, 26.2931, 1.03", "43.3664, -255.168, 26.8264, 1.25", "43.6052, -256.057, 27.2051, 1.47", "43.9573, -257.57, 27.6531, 1.47", "44.1239, -258.313, 27.7712, 0.96", "44.4856, -260.018, 27.8221, 0.74", "44.5062, -260.119, 27.8142, 0.74", "44.8031, -261.797, 27.4747, 0.74", "45.0071, -263.138, 27.1183, 0.88", "45.2373, -264.758, 26.5935, 1.11", "45.3762, -265.822, 26.2402, 1.11", "45.5208, -267.014, 25.8484, 0.66", "45.7293, -268.57, 25.3474, 0.66", "45.9525, -269.96, 24.9339, 0.66", "45.9649, -270.027, 24.9181, 0.66", "46.0879, -270.579, 24.7954, 1.33", "46.3233, -271.378, 24.5744, 1.33", "46.7199, -272.45, 24.2255, 0.74", "47.1546, -273.533, 23.8754, 0.74", "47.1778, -273.599, 23.8595, 0.74", "47.5294, -274.758, 23.7307, 0.59", "47.8064, -275.791, 23.7143, 0.59", "47.8427, -275.935, 23.7256, 0.59", "48.2255, -277.661, 24.0161, 0.59", "48.5828, -279.49, 24.4774, 0.59", "48.8083, -280.701, 24.8558, 0.59", "48.8191, -280.765, 24.8799, 0.59", "48.9098, -281.338, 25.1066, 0.59", "49.0781, -282.283, 25.477, 0.74", "49.3679, -283.706, 26.0407, 0.74", "49.3788, -283.762, 26.0574, 0.74", "49.4728, -284.397, 26.2301, 1.33", "49.4796, -284.473, 26.2513, 1.33", "49.4959, -285.12, 26.3456, 1.55", "49.4772, -285.336, 26.3405, 1.55", "49.3035, -286.16, 26.1553, 1.11", "49.066, -287.044, 25.897, 0.88", "48.8105, -287.879, 25.6081, 0.88", "48.2988, -289.546, 24.8519, 0.52", "48.0361, -290.658, 24.2485, 0.52", "47.947, -291.634, 23.6644, 0.52", "47.9502, -291.702, 23.6194, 0.52", "48.0612, -292.209, 23.2861, 0.52", "48.5866, -293.219, 22.7958, 0.81", "49.4453, -294.281, 22.5651, 0.81", "50.3332, -295.193, 22.5462, 0.81", "50.3819, -295.243, 22.5542, 0.81", "51.0824, -296.057, 22.7598, 1.25", "51.5792, -296.811, 22.9939, 1.4", "51.7928, -297.242, 23.1456, 1.4", "52.1086, -298.277, 23.4636, 0.88", "52.2219, -298.865, 23.6119, 0.59", "52.3877, -300.139, 23.8523, 0.59", "52.4899, -301.492, 24.012, 0.59", "52.4919, -301.629, 24.0254, 0.59", "52.512, -302.669, 24.0893, 0.59", "52.5321, -303.047, 24.1184, 0.81", "52.6198, -303.677, 24.211, 0.88", "52.7434, -304.179, 24.3223, 0.44", "52.7671, -304.242, 24.34, 0.44", "53.3145, -305.473, 24.8259, 0.44", "53.8687, -306.536, 25.3584, 0.81", "54.1692, -307.125, 25.6811, 0.96", "54.3659, -307.544, 25.9137, 0.96", "54.3904, -307.612, 25.95, 0.96", "54.6594, -308.711, 26.497, 0.66", "54.671, -309.138, 26.6808, 0.44", "54.563, -309.854, 26.8496, 0.44", "54.3412, -310.709, 26.9723, 0.44", "54.1773, -311.261, 27.0009, 0.44", "54.162, -311.328, 26.988, 0.44", "54.1319, -311.527, 26.9065, 0.74", "54.1246, -311.619, 26.8664, 0.74", "54.1317, -312.608, 26.4399, 0.74", "54.1344, -312.673, 26.4173, 0.74", "54.1512, -313.99, 26.0698, 0.88", "54.1437, -314.437, 25.9871, 0.88", "54.1363, -315.013, 25.9182, 1.18", "54.1355, -315.081, 25.9132, 1.18", "54.1689, -316.288, 25.8074, 1.18", "54.2518, -317.28, 25.7222, 1.18", "54.3832, -318.083, 25.6707, 0.52", "54.6558, -319.133, 25.5644, 0.52", "54.6924, -319.226, 25.5514, 0.52", "55.3486, -320.458, 25.2842, 0.52", "55.7194, -320.976, 25.1193, 0.88", "56.2267, -321.575, 24.8769, 1.18", "56.2858, -321.641, 24.8499, 1.18", "56.8518, -322.294, 24.6082, 1.18", "57.2858, -322.931, 24.4145, 0.66", "57.3535, -323.061, 24.3828, 0.66", "57.5855, -323.671, 24.2365, 0.66", "57.8567, -324.673, 23.9307, 0.66", "57.9008, -324.875, 23.8633, 0.66", "58.1806, -326.513, 23.2841, 0.66", "58.265, -327.109, 23.0748, 1.18", "58.3652, -327.913, 22.7735, 1.47", "58.4827, -329.405, 22.1241, 1.77", "58.5082, -329.758, 21.9571, 2.06", "58.5153, -329.841, 21.9172, 2.06", "58.5808, -330.228, 21.7152, 2.06", "58.596, -330.287, 21.6832, 2.06", "59.0905, -331.526, 21.0296, 0.37", "59.4923, -332.318, 20.676, 0.37", "59.5278, -332.386, 20.6476, 0.37", "60.1751, -333.607, 20.2517, 0.37", "60.2053, -333.668, 20.2384, 0.37", "60.5491, -334.463, 20.1532, 0.37", "60.7186, -334.941, 20.1625, 0.88", "60.8378, -335.49, 20.2744, 0.81", "60.9666, -336.456, 20.5907, 0.52", "61.0192, -337.3, 20.9543, 0.52", "61.0701, -337.823, 21.192, 0.88", "61.1375, -338.4, 21.4748, 0.88", "61.4581, -340.02, 22.348, 0.52", "61.6923, -340.812, 22.7774, 0.52", "61.7377, -340.938, 22.8416, 0.52", "62.1566, -341.96, 23.3288, 0.52", "62.189, -342.038, 23.3603, 0.52", "62.721, -343.34, 23.7829, 0.52", "63.0525, -344.224, 23.9175, 0.52", "63.2185, -344.771, 23.9637, 0.96", "63.3955, -345.567, 23.984, 1.18", "63.5055, -346.558, 23.9474, 1.18", "63.5097, -346.65, 23.937, 1.18", "63.3956, -347.809, 23.6436, 0.44", "63.1923, -348.684, 23.3702, 0.44", "63.1143, -348.898, 23.2947, 0.44", "62.8344, -349.398, 23.1217, 0.44", "62.7657, -349.506, 23.0938, 0.44", "62.3758, -350.161, 23.0001, 0.44", "62.3263, -350.255, 22.9971, 0.44", "62.155, -350.656, 22.9751, 0.74", "61.9734, -351.36, 22.9294, 0.74", "61.874, -352.064, 22.8819, 0.74", "61.8649, -352.211, 22.8716, 0.74", "61.8705, -352.845, 22.8262, 0.88", "61.8741, -352.915, 22.8111, 0.88", "61.9699, -353.643, 22.5769, 1.11", "62.0853, -354.243, 22.3454, 1.11", "62.1375, -354.476, 22.2513, 1.11", "62.261, -354.933, 22.0739, 1.11", "62.7181, -356.448, 21.5513, 0.44", "63.089, -357.618, 21.1714, 0.44", "63.142, -357.794, 21.0959, 0.74", "63.3027, -358.351, 20.8202, 0.74", "63.4674, -359.063, 20.4488, 0.37", "63.6313, -360.099, 19.9041, 0.37", "63.6303, -360.169, 19.8655, 0.37", "63.3025, -361.678, 18.5826, 0.37", "63.2816, -361.741, 18.5195, 0.37", "63.1019, -362.111, 18.1155, 0.96", "62.8948, -362.429, 17.7208, 0.96", "62.3526, -363.157, 16.8055, 0.96", "61.6226, -364.149, 15.688, 0.52", "61.5913, -364.192, 15.6435, 0.52", "61.1747, -364.774, 15.0357, 0.52", "60.1138, -366.319, 13.436, 0.52", "59.7893, -366.824, 12.9205, 0.52", "59.5364, -367.268, 12.5233, 1.18", "59.1456, -368.094, 11.9003, 1.18", "59.1281, -368.141, 11.8676, 1.18", "59.0383, -368.522, 11.6256, 1.18", "59.012, -369.505, 11.1867, 0.59", "59.0765, -370.371, 10.828, 0.59", "59.1795, -371.142, 10.5738, 0.59", "59.2107, -371.34, 10.5362, 0.59", "59.2968, -371.983, 10.4645, 0.59", "59.4451, -373.389, 10.4063, 0.59", "59.4564, -373.536, 10.4115, 0.59", "59.4862, -374.784, 10.4949, 0.59", "59.4489, -375.922, 10.6022, 0.59", "59.3795, -376.663, 10.6115, 0.59", "59.2995, -377.077, 10.5837, 1.25", "59.0709, -377.814, 10.4512, 1.25", "58.7969, -378.705, 10.2085, 1.25", "58.7764, -378.769, 10.1837, 1.25", "58.2904, -380.637, 9.20413, 0.44", "58.1225, -381.536, 8.67223, 0.44", "58.1161, -381.595, 8.63566, 0.44", "58.1147, -382.808, 7.87629, 0.44", "58.1249, -382.872, 7.83196, 0.44", "58.3825, -383.686, 7.30747, 0.44", "58.4104, -383.741, 7.27635, 0.44", "58.5605, -383.965, 7.13597, 1.18", "58.9472, -384.525, 6.80304, 1.77", "59.7434, -385.617, 6.16161, 1.99", "60.1207, -386.168, 5.90024, 1.99", "60.1767, -386.263, 5.86849, 1.99", "60.5952, -387.05, 5.65434, 0.74", "60.9652, -387.95, 5.4197, 0.74", "61.0106, -388.108, 5.38454, 0.74", "61.0503, -388.867, 5.26899, 0.52", "60.8929, -389.774, 5.08847, 0.52", "60.873, -389.839, 5.06916, 0.52", "60.3809, -390.904, 4.65113, 0.52", "60.3259, -391.02, 4.59834, 0.52", "59.7731, -392.272, 3.9947, 0.52", "59.7527, -392.331, 3.96424, 0.52", "59.6933, -393.388, 3.44871, 0.52", "59.7202, -393.457, 3.42309, 0.52", "60.3032, -394.261, 3.21939, 0.52", "60.3498, -394.312, 3.20938, 0.52", "60.8597, -394.795, 3.18686, 0.81", "61.3049, -395.23, 3.22951, 1.18", "61.7435, -395.678, 3.34663, 1.4", "62.019, -395.981, 3.43901, 1.18", "62.4298, -396.601, 3.64079, 0.59", "62.7271, -397.487, 3.88738, 0.44", "62.7525, -397.695, 3.93886, 0.44", "62.7388, -398.39, 4.08665, 0.44", "62.7126, -398.594, 4.12016, 0.44", "62.4728, -399.878, 4.27179, 0.44", "62.2224, -401.026, 4.33641, 0.44", "62.1703, -401.297, 4.33641, 0.44", "62.1122, -401.646, 4.33641, 0.81", "61.9909, -402.501, 4.33641, 0.81", "61.9827, -402.591, 4.33641, 0.81", "61.981, -403.889, 4.33641, 0.81", "62.0052, -404.459, 4.33641, 1.25", "62.0163, -404.849, 4.33641, 1.62", "62.0211, -404.928, 4.33641, 1.62" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-15.3585, 67.3184, -20.5697, 1.03", "-15.4944, 67.4867, -20.8913, 1.03", "-15.7863, 67.7874, -21.4406, 1.03", "-16.3957, 68.3692, -22.4833, 0.96", "-17.4351, 69.2749, -24.0711, 0.96", "-17.9337, 69.6505, -24.7311, 0.96", "-18.7157, 70.1112, -25.57, 0.96", "-19.5392, 70.4235, -26.1826, 0.81", "-19.6002, 70.437, -26.2157, 0.81", "-20.091, 70.5068, -26.3911, 0.81", "-20.8589, 70.5998, -26.5873, 0.81", "-22.1299, 70.7536, -26.9946, 0.81", "-23.5857, 70.9934, -27.5287, 0.81", "-24.586, 71.2529, -27.907, 0.52", "-25.1104, 71.4538, -28.1564, 0.52", "-25.7495, 71.8037, -28.522, 0.52", "-26.6091, 72.4422, -29.1044, 0.52", "-27.0193, 72.8045, -29.3881, 0.81", "-27.5069, 73.2573, -29.7009, 1.03", "-28.2496, 73.8357, -30.0216, 1.55", "-28.8974, 74.2159, -30.2892, 1.55", "-28.9654, 74.2443, -30.3214, 1.55", "-30.1838, 74.6228, -30.9141, 1.55", "-30.2445, 74.6377, -30.9469, 1.55", "-31.3297, 74.8506, -31.5656, 1.55", "-33.0072, 75.1263, -32.5526, 1.55", "-34.4106, 75.3557, -33.528, 0.88", "-34.6937, 75.4077, -33.7521, 0.81", "-35.0738, 75.4817, -34.1018, 0.52", "-35.4328, 75.5511, -34.4701, 0.52", "-35.4863, 75.5618, -34.5295, 0.52", "-36.3144, 75.7838, -35.3116, 0.52", "-36.4274, 75.8195, -35.401, 1.18", "-36.8702, 75.9596, -35.7973, 1.18", "-38.0544, 76.2802, -36.8086, 0.74", "-38.6146, 76.4185, -37.267, 1.4", "-39.1223, 76.5366, -37.6222, 1.4", "-39.3638, 76.5822, -37.7809, 1.4", "-40.7548, 76.7855, -38.8572, 1.4", "-41.5515, 76.8634, -39.6279, 0.37", "-41.5993, 76.8666, -39.6799, 0.37", "-42.3117, 76.907, -40.5387, 0.37", "-43.0415, 76.9954, -41.4353, 0.37", "-43.9509, 77.1687, -42.5484, 0.37", "-44.6584, 77.3963, -43.3629, 0.37", "-44.987, 77.5568, -43.756, 0.37", "-45.4977, 77.8375, -44.2994, 0.37", "-46.2422, 78.2773, -45.0498, 0.37", "-46.2927, 78.31, -45.0901, 0.37", "-46.8398, 78.6842, -45.5231, 0.37", "-47.5649, 79.181, -46.392, 0.37", "-47.8817, 79.3836, -46.9536, 0.37", "-48.1627, 79.6513, -47.7971, 0.37", "-48.1804, 79.682, -47.8898, 0.37", "-48.3387, 80.1526, -49.0967, 0.81", "-48.4536, 80.7799, -50.5522, 0.74", "-48.4566, 80.8175, -50.623, 0.74", "-48.5639, 81.9614, -52.4077, 0.52", "-48.7015, 82.915, -53.7214, 1.77", "-48.7683, 83.252, -54.1542, 1.77", "-48.7956, 83.3513, -54.265, 1.77", "-48.9988, 83.9145, -54.7674, 2.06", "-49.2603, 84.5348, -55.2714, 2.06", "-49.923, 85.7533, -56.1708, 2.06", "-49.972, 85.8293, -56.2275, 2.06", "-50.2418, 86.2129, -56.5465, 2.06", "-50.9687, 87.1362, -57.4148, 0.52", "-51.4146, 87.6245, -57.9502, 0.52", "-51.7546, 87.9331, -58.3125, 0.44", "-52.2254, 88.2574, -58.7172, 0.44", "-52.2734, 88.2851, -58.7607, 0.44", "-52.7263, 88.5071, -59.1783, 0.37", "-52.7647, 88.5289, -59.2324, 0.37", "-53.0605, 88.7594, -59.7047, 0.37", "-53.6537, 89.3687, -60.7171, 0.37", "-53.7049, 89.4385, -60.8402, 0.37", "-53.884, 89.7181, -61.3266, 1.03", "-54.842, 91.3829, -64.1888, 1.69", "-55.0233, 91.6803, -64.7102, 2.5", "-55.2664, 92.0432, -65.3607, 2.73", "-56.5597, 93.7043, -68.5737, 0.52", "-56.7931, 93.9683, -69.0932, 0.52", "-56.8169, 93.9926, -69.1434, 0.52", "-57.2792, 94.4274, -70.0089, 0.52", "-57.658, 94.7306, -70.6441, 0.52", "-58.7942, 95.5178, -72.3086, 1.18", "-59.4135, 95.9081, -73.0192, 1.4", "-60.3914, 96.5371, -74.167, 1.25", "-61.1881, 97.0863, -75.1225, 0.37", "-61.7628, 97.564, -75.9365, 0.37", "-61.8364, 97.6348, -76.047, 0.37", "-62.1175, 97.9178, -76.4544, 0.37", "-62.2879, 98.0871, -76.7528, 0.74", "-62.3183, 98.1208, -76.819, 0.74", "-61.9766, 97.7978, -75.1486, 0.74", "-61.8689, 97.6902, -74.4398, 0.29", "-61.6393, 97.4882, -72.6286, 0.29", "-61.4952, 97.3973, -71.1987, 0.29", "-61.3975, 97.3729, -70.006, 0.29", "-60.7532, 97.6029, -60.3068, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-15.3585, 67.3184, -20.5697, 0.88", "-15.1072, 68.9035, -19.9467, 0.88", "-15.0707, 69.7323, -19.669, 0.88", "-15.0805, 69.8859, -19.6245, 0.88", "-15.1736, 70.3681, -19.5093, 1.11", "-15.2565, 70.6817, -19.4447, 1.11", "-15.2838, 70.7609, -19.4377, 1.11", "-15.6486, 71.3803, -19.5585, 1.11", "-15.8142, 71.6416, -19.6256, 1.11", "-16.1018, 72.1238, -19.7613, 1.11", "-16.1619, 72.255, -19.7957, 1.11", "-16.4754, 73.1683, -20.0194, 1.03", "-16.521, 73.366, -20.0618, 1.03", "-16.632, 74.2344, -20.2274, 1.03", "-16.6377, 74.3773, -20.2603, 1.03", "-16.6047, 75.562, -20.556, 1.03", "-16.6006, 75.6197, -20.5696, 1.03", "-16.5223, 76.3129, -20.7151, 1.03", "-16.5089, 76.4561, -20.7488, 1.03", "-16.4655, 77.5532, -21.0228, 1.03", "-16.4775, 77.7639, -21.0723, 1.03", "-16.6599, 78.7271, -21.2165, 0.88", "-16.6843, 78.8038, -21.2202, 0.88", "-16.8988, 79.3224, -21.2002, 1.18", "-17.2918, 80.1646, -21.1086, 1.18", "-17.5725, 80.7974, -20.9954, 1.18", "-17.9211, 81.6898, -20.8637, 0.74", "-18.1862, 82.4407, -20.7684, 0.74", "-18.3503, 83.0946, -20.75, 0.74", "-18.3609, 83.1625, -20.7553, 0.74", "-18.4555, 84.2933, -20.9553, 0.74", "-18.5067, 85.0668, -21.1513, 0.74", "-18.5126, 85.132, -21.1733, 0.74", "-18.6547, 86.2516, -21.5823, 1.11", "-18.8335, 87.1221, -21.8942, 1.11", "-18.8893, 87.3083, -21.9553, 1.11", "-19.2354, 88.127, -22.1837, 1.11", "-19.576, 88.8468, -22.3297, 1.47", "-19.6111, 88.9171, -22.339, 1.47", "-19.9999, 89.6788, -22.3802, 1.77", "-20.2776, 90.2291, -22.4004, 2.06", "-20.697, 91.0548, -22.4145, 2.14", "-20.9911, 91.6462, -22.4119, 2.14", "-21.404, 92.4918, -22.3901, 1.99", "-21.65, 93.0266, -22.3775, 1.77", "-21.9174, 93.6433, -22.3638, 1.11", "-22.2491, 94.4841, -22.3476, 1.03", "-22.5909, 95.4529, -22.3328, 1.03", "-22.6356, 95.5938, -22.3315, 1.03", "-23.0025, 96.8118, -22.3605, 1.03", "-23.0559, 96.9666, -22.3674, 1.03", "-23.1912, 97.3309, -22.3911, 1.03", "-23.3683, 97.725, -22.4274, 0.59", "-23.8703, 98.5472, -22.5293, 0.59", "-24.311, 99.1077, -22.609, 0.44", "-24.9686, 99.773, -22.7134, 0.44", "-25.1596, 99.9563, -22.7403, 0.44", "-25.4314, 100.227, -22.7733, 0.44", "-25.8148, 100.666, -22.8097, 0.81", "-26.1777, 101.223, -22.8304, 0.96", "-26.462, 101.845, -22.8304, 1.18", "-26.48, 101.912, -22.8307, 1.18", "-26.6134, 102.701, -22.8374, 1.33", "-26.6704, 103.372, -22.8257, 1.47", "-26.6747, 103.878, -22.8051, 1.77", "-26.6732, 103.957, -22.8006, 1.77", "-26.6608, 104.586, -22.7565, 1.47", "-26.6774, 105.19, -22.6933, 1.4", "-26.7305, 105.749, -22.6193, 1.03", "-26.8428, 106.376, -22.5274, 0.59", "-27.1015, 107.389, -22.3772, 0.59", "-27.1213, 107.454, -22.3635, 0.59", "-27.4404, 108.355, -22.129, 0.59", "-27.655, 108.957, -21.953, 1.03", "-27.8421, 109.495, -21.7547, 1.33", "-28.0008, 109.982, -21.5305, 1.33", "-28.2374, 110.857, -21.0557, 1.25", "-28.3698, 111.421, -20.7405, 0.74", "-28.4522, 111.791, -20.5309, 0.66", "-28.6459, 112.57, -20.0942, 0.66", "-28.7352, 112.876, -19.9319, 0.66", "-28.7641, 112.946, -19.9014, 0.66", "-29.0928, 113.505, -19.7434, 0.44", "-29.5423, 114.052, -19.6265, 0.44", "-29.8714, 114.371, -19.5943, 0.74", "-29.9244, 114.417, -19.5943, 0.74", "-30.2538, 114.681, -19.5943, 0.88", "-30.4208, 114.811, -19.5943, 0.88", "-30.9997, 115.285, -19.5943, 1.18", "-31.7863, 115.981, -19.5943, 1.4", "-32.2813, 116.455, -19.5943, 1.4", "-32.3295, 116.506, -19.5943, 1.4", "-32.7311, 116.987, -19.6046, 1.4", "-33.1903, 117.652, -19.6334, 1.4", "-33.551, 118.275, -19.671, 1.4", "-33.6114, 118.402, -19.6798, 1.4", "-33.839, 118.93, -19.719, 1.4", "-34.1174, 119.598, -19.7943, 0.88", "-34.5805, 120.682, -19.9532, 0.88", "-34.6093, 120.746, -19.9645, 0.88", "-35.1017, 121.668, -20.1463, 0.88", "-35.1489, 121.733, -20.1599, 0.88", "-35.6795, 122.227, -20.3376, 0.88", "-36.2905, 122.628, -20.5551, 1.18", "-36.3534, 122.656, -20.5782, 1.18", "-37.2921, 122.958, -20.9094, 1.33", "-38.182, 123.132, -21.1963, 1.55", "-39.4142, 123.294, -21.595, 1.55", "-39.4815, 123.3, -21.6156, 1.55", "-40.2626, 123.344, -21.8664, 1.11", "-40.7602, 123.384, -22.0235, 0.81", "-41.5571, 123.476, -22.2724, 0.59", "-42.517, 123.673, -22.5236, 0.52", "-43.092, 123.842, -22.6267, 0.52", "-43.1561, 123.867, -22.642, 0.52", "-43.7852, 124.202, -22.8353, 0.52", "-43.9973, 124.344, -22.9118, 0.52", "-44.6757, 124.91, -23.1854, 0.52", "-44.7739, 125.005, -23.2241, 0.52", "-45.4751, 125.704, -23.5363, 0.81", "-45.5958, 125.82, -23.5889, 0.81", "-45.652, 125.87, -23.613, 0.81", "-45.8453, 126.028, -23.6824, 1.03", "-46.0493, 126.179, -23.7379, 1.03", "-46.3541, 126.375, -23.7804, 1.03", "-46.8534, 126.617, -23.7804, 1.03", "-47.1279, 126.716, -23.7804, 1.03", "-47.5146, 126.827, -23.7804, 1.03", "-47.5765, 126.839, -23.7804, 1.03", "-48.0325, 126.9, -23.7804, 0.88", "-48.6338, 126.943, -23.8855, 0.59", "-49.2704, 126.999, -24.0902, 0.59", "-49.4541, 127.03, -24.1687, 0.59", "-49.9383, 127.148, -24.41, 0.59", "-50.1288, 127.209, -24.5091, 0.59", "-51.5496, 127.773, -25.3232, 0.59", "-52.125, 128.031, -25.6698, 0.96", "-52.5643, 128.253, -25.9276, 1.33", "-53.0831, 128.536, -26.2392, 1.77", "-53.5886, 128.846, -26.5258, 1.77", "-54.312, 129.317, -26.891, 0.88", "-54.6179, 129.527, -27.0142, 0.74", "-55.1244, 129.891, -27.235, 0.52", "-55.7176, 130.379, -27.5364, 0.52", "-56.3293, 130.982, -27.8959, 0.52", "-56.4213, 131.088, -27.9525, 0.88", "-56.4627, 131.139, -27.9753, 0.88", "-56.8672, 131.645, -28.1816, 0.88", "-57.551, 132.412, -28.4624, 1.18", "-57.5989, 132.461, -28.4765, 1.18", "-58.1054, 132.899, -28.5967, 1.33", "-58.5765, 133.261, -28.6845, 1.33", "-58.6836, 133.334, -28.6983, 1.33", "-59.3262, 133.717, -28.7941, 1.33", "-59.4054, 133.762, -28.8055, 1.33", "-60.2867, 134.259, -28.9667, 1.33", "-60.3559, 134.297, -28.9812, 1.33", "-60.966, 134.635, -29.1204, 1.33", "-61.8368, 135.138, -29.3248, 0.37", "-62.3814, 135.462, -29.4593, 0.37", "-62.439, 135.498, -29.4773, 0.37", "-63.2305, 136.034, -29.7824, 0.37", "-63.3478, 136.12, -29.8325, 0.37", "-63.6443, 136.39, -29.9841, 0.37", "-63.6869, 136.442, -30.0089, 0.37", "-63.9833, 137.204, -30.4553, 0.37", "-63.9924, 137.381, -30.5679, 0.59", "-63.9718, 137.457, -30.6132, 0.59", "-63.7968, 137.943, -30.9226, 0.59", "-63.7415, 138.084, -31.0082, 0.59", "-63.515, 138.754, -31.3607, 0.59", "-63.4991, 138.816, -31.3869, 0.59", "-63.3877, 139.475, -31.6388, 0.59", "-63.314, 140.33, -31.9202, 0.59", "-63.3069, 140.821, -32.061, 0.96", "-63.3344, 141.38, -32.1912, 1.18", "-63.4075, 142.024, -32.3043, 1.4", "-63.4697, 142.431, -32.3596, 1.4", "-63.5965, 143.002, -32.4029, 1.18", "-63.6139, 143.069, -32.4029, 1.18", "-63.7774, 143.589, -32.4029, 1.18", "-63.807, 143.664, -32.3961, 1.18", "-64.1227, 144.248, -32.2919, 1.18", "-64.5043, 144.849, -32.1504, 1.18", "-64.5432, 144.907, -32.1353, 1.18", "-64.9235, 145.489, -31.9908, 1.18", "-65.4334, 146.299, -31.8036, 1.18", "-65.7807, 146.893, -31.6901, 1.55", "-66.0342, 147.346, -31.6168, 1.77", "-66.3752, 148.063, -31.5182, 1.77", "-66.6633, 148.845, -31.4389, 1.92", "-66.8528, 149.557, -31.3931, 1.92", "-67.1124, 150.717, -31.3615, 1.92", "-67.1953, 151.168, -31.3478, 1.77", "-67.3445, 152.082, -31.3165, 1.69", "-67.5084, 153.438, -31.2624, 1.69", "-67.5596, 154.304, -31.2221, 1.69" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "19.3035, 68.0582, -23.8783, 0.37", "19.7367, 70.7672, -19.7757, 0.37", "20.0578, 71.7141, -18.4366, 0.37", "20.3094, 72.2216, -17.7598, 0.37", "20.373, 72.3175, -17.64, 0.37", "20.7776, 72.7695, -17.1433, 0.37", "20.9536, 72.9353, -16.9799, 0.37", "22.1545, 73.5314, -16.898, 0.37", "22.221, 73.5535, -16.8902, 0.37", "22.5119, 73.6566, -16.8418, 0.66", "23.194, 74.0165, -16.6877, 0.66", "23.2446, 74.0583, -16.6631, 0.66", "23.9724, 74.9273, -16.0813, 0.66", "23.9944, 74.9726, -16.0503, 0.66", "24.1819, 75.4745, -15.6995, 0.88", "24.3523, 76.1341, -15.2657, 0.88", "24.5231, 77.2616, -14.4768, 0.88", "24.5406, 77.3844, -14.3905, 0.88", "24.6575, 78.1713, -13.8359, 0.88", "24.6885, 78.3084, -13.7356, 0.88", "24.9765, 79.2062, -13.0355, 0.88", "25.4001, 80.0941, -12.2911, 0.37", "25.6446, 80.4893, -12.0004, 0.29", "25.9003, 80.8436, -11.7265, 0.29", "26.0971, 81.0776, -11.5345, 0.29", "26.1352, 81.1271, -11.5034, 0.29", "26.617, 81.7229, -11.0549, 0.59", "27.0101, 82.1956, -10.6854, 0.88", "27.6432, 82.915, -10.0826, 1.33", "27.6875, 82.9633, -10.037, 1.33", "28.6873, 83.9868, -8.99495, 1.33", "30.0777, 85.2923, -7.6932, 0.96", "30.653, 85.7771, -7.26191, 1.55", "31.2184, 86.2148, -6.89347, 1.92", "32.3997, 87.0628, -6.24652, 1.4", "33.5883, 87.8764, -5.68456, 0.74", "34.992, 88.7856, -5.16589, 0.74", "36.3779, 89.7084, -4.86082, 0.66", "36.4354, 89.7476, -4.85139, 0.66", "36.9105, 90.0774, -4.80315, 0.66", "37.6254, 90.5102, -4.77415, 1.03", "38.2246, 90.805, -4.71798, 1.11", "38.2884, 90.8288, -4.69973, 1.11", "38.7121, 90.9532, -4.50427, 1.33", "38.7747, 90.9675, -4.47488, 1.33", "40.0755, 91.2006, -3.83123, 1.62", "40.4783, 91.2633, -3.64096, 1.92", "40.5493, 91.277, -3.60692, 1.92", "40.8043, 91.3634, -3.50042, 1.92", "40.999, 91.4704, -3.4362, 1.92", "41.2395, 91.6868, -3.37784, 1.62", "41.5695, 92.1631, -3.34667, 1.03", "41.7501, 92.5428, -3.3208, 0.81", "41.9925, 93.2305, -3.27333, 0.81", "42.1198, 93.6569, -3.24199, 0.52", "42.2769, 94.2424, -3.1969, 0.52", "42.2994, 94.3076, -3.1918, 0.52", "42.6079, 94.8717, -3.1084, 0.52", "42.7121, 94.9813, -3.08374, 0.52", "43.2861, 95.3952, -2.96041, 0.74", "43.358, 95.4325, -2.94725, 0.74", "44.1111, 95.7396, -2.40608, 0.74", "44.8894, 96.0694, -1.6333, 0.74", "45.3588, 96.2771, -1.12669, 0.96", "45.4456, 96.3184, -1.02339, 0.96", "45.8593, 96.5421, -0.476917, 0.96", "48.2635, 98.0481, 2.9027, 0.52", "48.6636, 98.3553, 3.5264, 0.52", "49.0536, 98.7307, 4.13252, 0.74", "49.0837, 98.7629, 4.17259, 0.74", "49.4359, 99.1574, 4.5054, 1.11", "49.7927, 99.5694, 4.65859, 1.55", "50.1717, 100.004, 4.6326, 1.62", "50.7623, 100.649, 4.62096, 1.62", "51.3561, 101.302, 4.70022, 0.74", "51.6553, 101.637, 4.76345, 0.74", "51.9757, 102.037, 4.86467, 0.59", "52.4234, 102.679, 5.10797, 0.59", "52.454, 102.724, 5.12991, 0.59", "53.0732, 103.664, 5.66404, 0.59", "53.1105, 103.714, 5.69596, 0.59", "53.6985, 104.397, 6.16877, 0.59", "54.433, 105.058, 6.66051, 0.59", "55.0558, 105.456, 6.92062, 0.59", "55.4187, 105.637, 7.00259, 1.03", "56.1738, 105.923, 7.03042, 1.03", "56.2525, 105.947, 7.02813, 1.03", "57.0346, 106.134, 6.95204, 1.03", "58.0489, 106.398, 6.7745, 1.03", "58.1146, 106.418, 6.7624, 1.03", "58.9488, 106.715, 6.622, 1.03", "59.1603, 106.798, 6.57972, 1.03", "59.8149, 107.063, 6.44216, 1.03", "60.2438, 107.241, 6.35507, 1.25", "60.3435, 107.279, 6.33921, 1.25", "61.2177, 107.571, 6.23039, 1.25", "62.2493, 107.916, 6.20266, 0.96", "62.3149, 107.939, 6.20557, 0.96", "62.9907, 108.195, 6.27273, 0.52", "64.1287, 108.687, 6.43641, 0.52", "65.0373, 109.176, 6.68664, 0.81", "66.0474, 109.874, 7.12552, 0.81", "66.512, 110.281, 7.39717, 1.03", "66.8234, 110.623, 7.61235, 1.03", "67.2239, 111.197, 7.95217, 1.03", "67.9476, 112.584, 8.75885, 0.37", "68.2536, 113.303, 9.14492, 0.37", "68.4915, 113.964, 9.47184, 0.37", "68.6752, 114.554, 9.76723, 0.37", "68.7554, 114.817, 9.91312, 0.88", "69.1194, 115.87, 10.5345, 1.18", "69.3537, 116.397, 10.8283, 1.18", "69.5572, 116.695, 11.0161, 1.18", "69.6083, 116.744, 11.0515, 1.18", "70.7251, 117.463, 11.6246, 1.55", "71.2249, 117.706, 11.8649, 1.55", "71.8532, 117.954, 12.1324, 1.55", "72.832, 118.301, 12.5451, 0.59", "73.4726, 118.536, 12.7985, 0.59", "74.1782, 118.834, 13.0494, 0.59", "75.3818, 119.447, 13.3872, 0.59", "75.7456, 119.69, 13.5175, 1.18", "75.8477, 119.78, 13.5599, 1.18", "76.3585, 120.387, 13.7714, 1.18", "76.8504, 121.056, 13.9627, 1.33", "77.3495, 121.808, 14.1297, 1.33", "77.9532, 122.758, 14.2777, 0.44", "78.4161, 123.497, 14.3934, 0.44", "79.308, 124.932, 14.6337, 0.44", "79.308, 124.932, 14.6337, 0.88", "79.7237, 125.594, 14.7502, 0.88", "79.9993, 126.025, 14.8156, 0.88", "80.0508, 126.1, 14.8229, 0.88", "80.5734, 126.729, 14.9031, 0.88", "80.6249, 126.778, 14.9111, 0.88", "81.2577, 127.299, 14.9969, 0.88", "81.7586, 127.632, 15.0549, 1.47", "81.8178, 127.668, 15.0686, 1.47", "82.5556, 128.095, 15.2955, 1.47", "82.6126, 128.129, 15.3159, 1.47", "82.804, 128.253, 15.3964, 1.47", "82.8555, 128.291, 15.4237, 1.47", "83.9108, 129.252, 16.1233, 1.33", "83.956, 129.3, 16.151, 1.33", "84.5216, 129.949, 16.5596, 1.18", "84.5638, 129.998, 16.5913, 1.18", "85.1301, 130.646, 17.0049, 1.18", "85.9863, 131.605, 17.5939, 1.18", "87.2789, 132.957, 18.3764, 1.18", "88.2653, 133.891, 18.9267, 1.25", "88.3172, 133.932, 18.9498, 1.25", "88.9588, 134.366, 19.1657, 1.25", "89.2914, 134.543, 19.2325, 1.69", "90.0565, 134.859, 19.3045, 1.69", "90.7215, 135.067, 19.3, 1.69", "92.1303, 135.488, 19.1222, 0.59", "92.207, 135.51, 19.1116, 0.59", "92.831, 135.664, 19.0101, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "19.3035, 68.0582, -23.8783, 1.47", "21.0817, 69.2009, -26.5204, 1.47", "21.6441, 69.641, -27.4543, 1.03", "22.1262, 70.1494, -28.4471, 1.03", "22.3771, 70.5234, -29.0847, 1.03", "22.7153, 71.3663, -30.3452, 1.03", "22.7279, 71.4139, -30.4082, 1.03", "22.6883, 72.3243, -31.3099, 1.03", "22.5236, 73.2765, -32.124, 1.4", "22.3573, 74.075, -32.6981, 1.69", "22.107, 75.4323, -33.5936, 1.69", "22.0017, 76.1155, -33.9711, 1.69", "21.8953, 77.1955, -34.5009, 1.69", "21.8627, 78.1666, -34.967, 1.69", "21.883, 79.3368, -35.5353, 1.69", "21.9599, 80.6855, -36.2189, 2.28", "22.0545, 81.7681, -36.7591, 2.36", "22.107, 82.2538, -37.0455, 2.36", "22.3186, 83.7299, -38.0228, 1.77", "22.327, 83.7767, -38.0632, 1.77", "22.3801, 84.0315, -38.3351, 1.77", "22.3961, 84.0841, -38.3953, 1.77", "22.8508, 85.172, -39.7815, 0.74", "22.8708, 85.215, -39.8359, 0.74", "23.2809, 86.003, -40.7933, 1.03", "23.3062, 86.0501, -40.8552, 1.03", "23.5636, 86.5413, -41.5498, 1.03", "23.9354, 87.2843, -42.6524, 1.33", "23.9525, 87.3221, -42.7081, 1.33", "24.2797, 88.1994, -43.8992, 1.69", "24.6137, 89.3205, -45.2589, 1.99", "24.9228, 90.5297, -46.631, 1.99", "25.1618, 91.6005, -47.7579, 1.99", "25.3931, 92.6533, -48.7099, 1.4", "25.6243, 93.7532, -49.571, 1.4", "25.8288, 94.7318, -50.1574, 1.84", "25.844, 94.7942, -50.1815, 1.84", "26.0599, 95.4183, -50.29, 2.36", "26.4637, 96.2448, -50.299, 2.14", "26.5274, 96.333, -50.2916, 2.14", "27.0013, 96.8216, -50.2464, 1.92", "27.4175, 97.2057, -50.2166, 1.77", "28.0521, 97.8123, -50.2143, 1.77", "28.1515, 97.9216, -50.22, 1.77", "28.78, 98.7564, -50.3399, 1.47", "28.8166, 98.8169, -50.3506, 1.47", "29.4063, 100.066, -50.6773, 1.33", "29.7077, 100.876, -50.957, 1.11", "30.0536, 102.051, -51.4043, 1.11", "30.2906, 102.964, -51.8353, 1.11", "30.5078, 103.893, -52.3627, 1.4", "30.7792, 105.149, -53.1296, 1.4", "31.0005, 106.228, -53.8096, 2.06", "31.2038, 107.247, -54.4352, 2.43", "31.6143, 109.24, -55.6578, 1.84", "31.8791, 110.573, -56.5121, 1.62", "32.0022, 111.174, -56.9042, 1.4", "32.2283, 112.29, -57.5943, 0.88", "32.3849, 113.096, -58.0903, 0.88", "32.4, 113.186, -58.1459, 0.88", "32.5609, 115.06, -58.9635, 0.88" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_132",
    "id" : "dend_132",
    "points3d" : [ "96.574, -174.188, 0.0704686, 1.55", "97.453, -175.258, -0.520116, 1.55", "98.0213, -175.994, -0.831447, 1.55", "98.1098, -176.111, -0.87569, 1.55", "99.1147, -177.421, -1.29557, 1.4", "99.6352, -178.096, -1.4956, 1.4", "100.188, -178.814, -1.70821, 1.55", "100.957, -179.833, -1.93061, 1.77", "100.998, -179.888, -1.94163, 1.77", "101.823, -180.989, -2.10235, 1.92", "101.864, -181.045, -2.10158, 1.92" ],
    "parent" : "dend_131",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_118",
    "id" : "dend_118",
    "points3d" : [ "-17.5111, -133.597, 7.97237, 0.66", "-17.6108, -134.463, 7.19215, 0.66", "-17.6788, -135.053, 6.66026, 0.66", "-17.7099, -135.323, 6.41698, 1.33", "-17.8365, -136.423, 5.42648, 0.52" ],
    "parent" : "dend_116",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_117",
    "id" : "dend_117",
    "points3d" : [ "-17.5111, -133.597, 7.97237, 0.22", "-17.6348, -133.51, 8.00194, 0.22", "-18.6184, -132.611, 8.18226, 0.22", "-18.9157, -132.28, 8.29298, 0.81", "-18.9855, -132.198, 8.32288, 0.81", "-19.3098, -131.813, 8.46926, 0.81", "-19.7752, -131.268, 8.67775, 0.22", "-20.4584, -130.503, 9.23762, 0.22", "-21.4969, -129.263, 10.2327, 0.22", "-21.4969, -129.263, 10.2327, 0.52", "-21.5383, -129.214, 10.2796, 0.52", "-21.7575, -128.959, 10.5866, 0.52", "-23.2635, -127.514, 13.289, 0.66" ],
    "parent" : "dend_116",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "-26.5264, -304.155, 18.5344, 0.59", "-26.4018, -305.219, 18.4977, 0.59", "-26.3484, -306.059, 18.4365, 0.59", "-26.3452, -306.127, 18.4304, 0.59", "-26.274, -307.659, 18.2949, 0.59", "-26.1941, -309.376, 18.143, 0.59", "-26.149, -310.346, 18.0572, 0.59", "-26.0833, -311.315, 17.9166, 0.59", "-26.0802, -311.395, 17.9035, 0.59" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-26.5264, -304.155, 18.5344, 0.44", "-25.7701, -305.19, 18.2472, 0.44", "-25.3047, -305.84, 18.0793, 0.44", "-24.9342, -306.344, 17.9625, 0.88", "-24.8944, -306.4, 17.9527, 0.88", "-24.5437, -306.901, 17.8772, 0.88", "-24.1638, -307.447, 17.7395, 1.03", "-24.1181, -307.511, 17.72, 1.03", "-23.8207, -307.915, 17.3949, 0.66", "-23.233, -308.688, 16.526, 0.59", "-23.207, -308.714, 16.466, 0.59", "-22.7003, -309.204, 14.9183, 0.59", "-22.4473, -309.443, 14.029, 0.88", "-21.5983, -310.348, 10.5398, 1.62", "-21.583, -310.367, 10.463, 1.62", "-20.8287, -311.394, 5.8915, 0.44", "-20.5159, -311.925, 3.58421, 0.44", "-20.5082, -311.943, 3.50419, 0.44", "-20.4587, -312.17, 2.57198, 0.44", "-20.463, -312.381, 1.97611, 0.81", "-20.4701, -312.417, 1.90489, 0.81", "-20.6171, -312.789, 1.57079, 0.81", "-20.6343, -312.834, 1.53653, 0.81", "-20.7372, -313.267, 1.21572, 0.81", "-20.8743, -314.586, 0.259988, 0.44", "-20.8029, -315.379, -0.209844, 0.44", "-20.6019, -316.063, -0.502431, 0.88", "-20.503, -316.308, -0.586347, 0.88", "-20.0913, -317.214, -0.844012, 0.88", "-20.0176, -317.357, -0.875748, 0.88", "-19.2322, -318.787, -1.08274, 0.74", "-18.2926, -320.41, -1.29693, 0.74", "-18.253, -320.478, -1.30436, 0.74", "-17.6511, -321.496, -1.4187, 0.74", "-17.3146, -322.066, -1.48503, 1.33", "-17.2638, -322.148, -1.49888, 1.33", "-16.6183, -323.164, -1.7337, 1.33", "-16.4769, -323.372, -1.78783, 1.33", "-15.8817, -324.184, -1.99425, 1.33", "-15.6708, -324.432, -2.05387, 1.33", "-15.0094, -325.177, -2.27509, 0.88", "-14.9563, -325.235, -2.29581, 0.88" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "62.0211, -404.928, 4.33641, 1.4", "62.4229, -405.503, 4.74252, 1.4", "62.8014, -406.042, 5.15573, 1.62", "63.3235, -406.816, 5.70227, 1.62", "63.3926, -406.918, 5.77132, 1.62", "64.3285, -408.228, 6.57147, 1.33", "65.0843, -409.247, 7.12828, 0.66", "65.1298, -409.305, 7.15779, 0.66", "65.8512, -410.189, 7.48539, 0.66", "65.9921, -410.361, 7.49096, 0.66", "66.7997, -411.417, 7.16031, 0.66", "67.2384, -412.052, 6.77547, 0.66", "67.2751, -412.11, 6.73198, 0.66", "67.9973, -413.378, 5.73195, 0.66", "68.7466, -414.882, 4.43865, 0.88", "68.9338, -415.357, 4.03301, 1.11", "69.0653, -415.865, 3.61419, 1.11", "69.0754, -415.92, 3.57321, 1.11", "69.1331, -416.364, 3.35014, 1.11", "69.1379, -416.441, 3.33546, 1.11", "69.221, -416.998, 3.33546, 1.11", "69.406, -417.791, 3.33546, 0.59", "69.4281, -417.847, 3.33546, 0.59", "69.9902, -418.932, 3.33546, 0.59", "70.0765, -419.055, 3.33546, 0.59", "70.8998, -420.039, 3.33546, 0.59", "71.0023, -420.147, 3.32668, 0.59", "71.8953, -421.017, 3.19922, 0.59", "71.9464, -421.067, 3.18951, 0.59", "72.7659, -421.857, 2.99563, 0.59", "72.8112, -421.907, 2.98216, 0.59", "73.6198, -423.038, 2.64424, 0.52", "73.6493, -423.097, 2.62251, 0.52", "73.78, -423.556, 2.42389, 1.11", "73.9155, -424.203, 2.13017, 1.4", "74.0442, -424.842, 1.85308, 1.4", "74.0606, -424.907, 1.82768, 1.4", "74.393, -425.983, 1.48086, 0.88", "74.4177, -426.044, 1.45812, 0.88", "74.7503, -426.686, 1.19919, 0.88", "75.4049, -427.734, 0.766347, 0.29", "75.4451, -427.789, 0.744968, 0.29", "75.7299, -428.158, 0.617935, 0.96", "76.3566, -428.922, 0.419952, 1.47", "76.7144, -429.357, 0.3121, 1.77", "76.7511, -429.413, 0.295959, 1.77", "76.9879, -429.85, 0.16295, 1.77", "77.0112, -429.913, 0.147218, 1.77", "77.1841, -430.6, 0.0310193, 0.81", "77.3369, -431.458, -0.0588566, 0.59", "77.5755, -433.109, -0.197599, 0.59", "77.5852, -433.177, -0.20205, 0.59", "77.7943, -434.938, -0.308253, 0.59", "77.8801, -435.795, -0.351689, 0.59", "77.9019, -436.153, -0.362728, 1.77", "77.9183, -436.791, -0.353902, 2.5", "77.9766, -437.502, -0.26028, 2.5" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "62.0211, -404.928, 4.33641, 0.22", "60.9963, -405.379, 4.29035, 0.22", "60.0659, -405.706, 4.25378, 0.22", "59.9997, -405.73, 4.25173, 0.22", "59.1761, -406.034, 4.22967, 0.22", "58.8114, -406.167, 4.22205, 0.22", "58.1569, -406.414, 4.20985, 0.22", "57.9472, -406.489, 4.2075, 0.22", "56.8365, -406.815, 4.2075, 0.22", "56.678, -406.861, 4.2075, 0.22", "55.5691, -407.196, 4.2075, 0.22", "55.3347, -407.283, 4.2075, 1.03", "55.2613, -407.315, 4.2075, 1.03", "54.0927, -407.766, 4.2075, 1.03" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-60.7532, 97.6029, -60.3068, 1.11", "-61.7896, 99.452, -67.9233, 1.11", "-62.0571, 99.9165, -69.4595, 1.47", "-62.1335, 100.047, -69.8419, 1.47", "-62.5054, 100.691, -71.5341, 0.88", "-62.6851, 101.006, -72.3022, 0.88", "-63.1657, 101.883, -74.2748, 0.66", "-63.4983, 102.52, -75.0096, 0.52", "-63.5358, 102.592, -75.0877, 0.52", "-63.6932, 102.881, -75.3961, 0.52", "-63.7215, 102.928, -75.4396, 0.52", "-63.9517, 103.266, -75.8531, 0.52", "-64.8923, 104.341, -77.2281, 0.52", "-64.9238, 104.375, -77.281, 0.52", "-65.2865, 104.755, -77.907, 1.25", "-65.6699, 105.135, -78.5382, 1.62", "-66.8023, 106.211, -80.5858, 0.37", "-67.5086, 106.858, -81.8836, 0.37", "-68.7349, 107.966, -83.9999, 0.37", "-68.7667, 107.994, -84.0563, 0.81", "-69.1216, 108.296, -84.6954, 0.81", "-70.444, 109.331, -87.3608, 0.81", "-70.724, 109.533, -87.9017, 0.22", "-71.2769, 109.911, -88.9911, 0.22", "-72.2058, 110.488, -90.6515, 1.33", "-72.4491, 110.644, -91.0952, 1.92", "-74.4863, 111.989, -94.8948, 0.29", "-75.1222, 112.415, -96.0083, 0.29", "-75.2038, 112.471, -96.1587, 0.29", "-75.41, 112.613, -96.5513, 0.59", "-76.467, 113.353, -98.3732, 0.59", "-76.5021, 113.378, -98.4278, 0.59", "-76.8412, 113.658, -98.7507, 0.59", "-76.8899, 113.697, -98.8008, 0.59", "-77.1396, 113.879, -99.0204, 0.29", "-77.1875, 113.914, -99.0582, 0.29", "-77.6363, 114.255, -99.2769, 0.29", "-77.6814, 114.291, -99.3005, 0.29", "-78.2158, 114.761, -99.6609, 0.29", "-78.2628, 114.802, -99.6933, 0.29", "-79.1285, 115.553, -100.303, 0.29", "-79.9675, 116.328, -101.049, 0.29", "-80.0065, 116.367, -101.091, 0.29", "-80.6918, 117.095, -101.872, 1.18", "-81.1642, 117.615, -102.392, 1.77", "-81.2031, 117.659, -102.434, 1.77", "-82.44, 119.042, -103.828, 1.84", "-83.2352, 119.946, -104.797, 0.52", "-83.7849, 120.508, -105.397, 0.52", "-84.4759, 121.141, -106.053, 0.52", "-84.5232, 121.179, -106.093, 0.52", "-85.5773, 121.861, -106.825, 0.22", "-85.6452, 121.893, -106.859, 0.22", "-86.9985, 122.387, -107.448, 0.22", "-87.4066, 122.51, -107.622, 0.52", "-88.0438, 122.694, -107.963, 0.52", "-89.0522, 123.017, -108.508, 0.66", "-89.6947, 123.239, -108.849, 0.66", "-90.0602, 123.375, -109.056, 1.25", "-90.3587, 123.499, -109.244, 1.25", "-92.0602, 124.239, -110.293, 0.29", "-93.2084, 124.769, -110.966, 0.22", "-93.2677, 124.798, -110.996, 0.22", "-93.8844, 125.126, -111.286, 0.22", "-93.9958, 125.2, -111.348, 0.52", "-94.4085, 125.524, -111.587, 0.52", "-94.6526, 125.753, -111.717, 0.15", "-94.6928, 125.796, -111.755, 0.15", "-95.2671, 126.441, -112.414, 0.15", "-96.1724, 127.567, -113.883, 0.96", "-96.4152, 127.911, -114.316, 1.77", "-96.5859, 128.176, -114.647, 2.06", "-97.2985, 129.41, -116.129, 1.47", "-97.3206, 129.454, -116.179, 1.47", "-97.9308, 130.97, -117.69, 0.22", "-98.3915, 132.372, -118.823, 0.22", "-98.4049, 132.418, -118.859, 0.22", "-98.52, 132.829, -119.136, 0.22", "-98.6518, 133.332, -119.448, 1.11", "-98.8434, 134.067, -119.926, 1.4", "-98.8693, 134.175, -119.996, 1.4", "-99.2139, 135.705, -121.179, 0.22", "-99.4255, 136.783, -122.121, 0.22", "-99.524, 137.909, -123.232, 0.66", "-99.5244, 138.006, -123.335, 0.66", "-99.4927, 138.402, -123.744, 0.66", "-99.4849, 138.453, -123.794, 0.66", "-99.0946, 140.027, -125.18, 0.29", "-98.6522, 141.656, -126.654, 0.22", "-98.6221, 141.811, -126.794, 0.52", "-98.5416, 142.411, -127.421, 0.52", "-98.5385, 142.459, -127.475, 0.52", "-98.5498, 142.774, -127.876, 0.52", "-98.7667, 144.211, -129.916, 0.29", "-99.0847, 145.242, -131.49, 0.29", "-99.517, 146.333, -133.196, 1.18", "-99.6803, 146.671, -133.734, 1.18", "-100.34, 147.842, -135.638, 0.15", "-100.364, 147.877, -135.697, 0.15", "-100.876, 148.509, -136.628, 0.15", "-101.107, 148.81, -136.992, 0.52", "-101.333, 149.111, -137.287, 0.52", "-101.863, 149.92, -137.992, 0.22", "-101.889, 149.968, -138.035, 0.22", "-102.355, 150.987, -139.072, 0.22", "-102.702, 151.824, -140.033, 0.96", "-102.726, 151.874, -140.093, 0.96", "-102.91, 152.221, -140.562, 0.96", "-103.643, 153.529, -142.396, 0.29", "-103.824, 153.841, -142.846, 0.29", "-103.895, 153.958, -143.036, 0.29", "-104.151, 154.399, -143.67, 0.29", "-104.699, 155.435, -145.213, 0.29", "-104.719, 155.478, -145.268, 0.29", "-105.003, 156.115, -145.986, 0.29", "-105.367, 156.985, -147.083, 0.88", "-105.561, 157.457, -147.679, 1.11", "-106.153, 158.823, -149.386, 0.29", "-106.617, 159.806, -150.598, 0.29", "-106.641, 159.853, -150.659, 0.29", "-107.572, 161.598, -153.068, 1.11", "-107.804, 162.005, -153.623, 1.84", "-108.013, 162.351, -154.141, 1.84" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-60.7532, 97.6029, -60.3068, 0.29", "-60.9666, 97.6597, -60.4466, 0.29", "-61.4717, 97.8073, -60.744, 0.66", "-61.5316, 97.8267, -60.7759, 0.66", "-61.9927, 97.9726, -60.9843, 0.66", "-63.5226, 98.4606, -61.7163, 0.37", "-64.4733, 98.7732, -62.1805, 0.37", "-64.8773, 98.9015, -62.3741, 0.59", "-65.3074, 99.0355, -62.554, 0.59", "-66.1772, 99.3024, -62.8644, 0.22", "-67.1349, 99.5511, -63.1093, 0.81", "-67.3297, 99.5888, -63.149, 0.81", "-68.1878, 99.703, -63.3656, 0.81", "-69.0806, 99.7592, -63.6048, 0.22", "-69.1597, 99.7596, -63.6204, 0.22", "-70.2713, 99.6836, -63.7388, 0.22", "-71.6736, 99.5143, -63.783, 1.18", "-72.2768, 99.4178, -63.7517, 1.55", "-72.6966, 99.3409, -63.6961, 1.55", "-73.8985, 99.1038, -63.3811, 0.22", "-75.1679, 98.9375, -62.9827, 0.22", "-75.2672, 98.9294, -62.9457, 0.22", "-76.3912, 98.8942, -62.5188, 0.74", "-77.093, 98.9026, -62.285, 0.74", "-78.1966, 98.995, -62.0205, 0.22", "-80.351, 99.2847, -61.6758, 0.22", "-80.6455, 99.3342, -61.6417, 0.22", "-81.9499, 99.5663, -61.5948, 0.22", "-82.0984, 99.5937, -61.6021, 0.22", "-84.351, 100.016, -61.8119, 0.22", "-84.4996, 100.044, -61.834, 0.22", "-85.5123, 100.215, -61.9937, 0.22", "-86.4618, 100.353, -62.2103, 1.11", "-87.0272, 100.413, -62.3725, 1.18", "-87.1039, 100.418, -62.3968, 1.18", "-87.6809, 100.43, -62.6007, 1.18", "-87.8253, 100.436, -62.6505, 1.18", "-88.8432, 100.497, -62.986, 0.15", "-91.3997, 100.724, -63.701, 0.15", "-91.5604, 100.742, -63.7451, 0.44", "-91.9853, 100.8, -63.8542, 0.44", "-93.2613, 101.015, -64.2266, 0.22", "-93.3371, 101.03, -64.2497, 0.22", "-94.1844, 101.223, -64.4969, 0.22", "-94.3956, 101.28, -64.5776, 0.81", "-94.8789, 101.411, -64.7621, 0.96", "-95.9764, 101.699, -65.202, 0.22", "-96.0313, 101.713, -65.2234, 0.22", "-97.2357, 102.037, -65.6986, 0.22", "-97.2909, 102.052, -65.7193, 0.22", "-97.7978, 102.194, -65.9279, 0.52", "-97.9585, 102.239, -65.9944, 0.52", "-98.6547, 102.432, -66.2372, 0.52", "-98.7256, 102.453, -66.2691, 0.52", "-99.4075, 102.665, -66.646, 0.52", "-100.418, 102.981, -67.2025, 0.52", "-100.612, 103.048, -67.3313, 0.22", "-101.351, 103.323, -67.8725, 0.22", "-101.964, 103.561, -68.4062, 0.44", "-102.02, 103.584, -68.4599, 0.44", "-102.531, 103.829, -68.9426, 0.44", "-103.802, 104.406, -70.0125, 0.44", "-103.859, 104.426, -70.0497, 0.44", "-104.433, 104.565, -70.3162, 0.66", "-104.491, 104.573, -70.3295, 0.66", "-106.601, 104.761, -70.6039, 1.84", "-108.045, 104.781, -70.6558, 0.37", "-109.623, 104.807, -70.5729, 0.37", "-110.058, 104.83, -70.5541, 0.37", "-110.936, 104.898, -70.5223, 0.37", "-111.159, 104.92, -70.526, 0.37", "-111.534, 104.966, -70.574, 1.47", "-112.452, 105.176, -70.6389, 0.37", "-113.221, 105.413, -70.7386, 0.37", "-113.5, 105.513, -70.7849, 0.74", "-113.761, 105.621, -70.8584, 0.74", "-114.321, 105.915, -71.0386, 0.29", "-115.15, 106.486, -71.3131, 0.29", "-115.593, 106.832, -71.4654, 1.11", "-115.96, 107.177, -71.5856, 1.11", "-116.814, 108.058, -71.7993, 0.22", "-118.222, 109.597, -72.048, 0.22", "-119.224, 110.759, -72.1521, 0.22", "-119.347, 110.912, -72.1612, 0.22", "-120.348, 112.158, -72.1748, 0.22", "-120.909, 112.885, -72.1416, 0.66", "-121.29, 113.41, -72.0513, 1.03", "-121.432, 113.61, -71.998, 1.03" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-67.5596, 154.304, -31.2221, 0.52", "-67.9191, 155.204, -31.0958, 0.52", "-68.2624, 156.262, -30.9079, 0.52", "-68.6424, 157.46, -30.6941, 0.52", "-68.6603, 157.515, -30.6845, 0.52", "-68.9824, 158.471, -30.5237, 0.52", "-69.2245, 159.205, -30.4094, 0.52", "-69.4181, 159.941, -30.2861, 0.88", "-69.6338, 160.874, -30.1539, 1.11", "-69.779, 161.579, -30.078, 1.11", "-69.8447, 161.921, -30.0561, 1.11", "-69.9929, 162.799, -30.047, 0.37", "-70.1533, 164.072, -29.9162, 0.37", "-70.1725, 164.427, -29.8487, 1.03", "-70.17, 164.492, -29.8278, 1.03", "-70.1313, 165.219, -29.5371, 1.03", "-70.1053, 165.744, -29.2918, 1.03", "-70.0943, 167.252, -28.5025, 0.52", "-70.1268, 168.085, -28.065, 0.52", "-70.2005, 169.133, -27.5429, 0.44", "-70.2894, 169.92, -27.1959, 0.44", "-70.3033, 170.01, -27.1624, 0.44", "-70.4585, 170.833, -26.9499, 0.44", "-70.6828, 171.809, -26.8502, 0.44", "-70.7001, 171.876, -26.8467, 0.44", "-70.9442, 172.713, -26.8467, 0.74", "-71.0828, 173.187, -26.8253, 0.96", "-71.3145, 173.92, -26.7672, 1.11", "-71.5836, 174.799, -26.675, 1.25", "-71.8198, 175.597, -26.5789, 0.81", "-72.0479, 176.418, -26.473, 0.52", "-72.2698, 177.213, -26.3449, 0.44", "-72.443, 177.804, -26.2372, 0.37", "-72.8861, 179.218, -26.0101, 0.37", "-73.0732, 179.767, -25.9386, 0.37", "-73.0992, 179.83, -25.933, 0.37", "-73.4206, 180.47, -25.9149, 0.88", "-73.8253, 181.126, -25.9498, 0.88", "-74.482, 181.909, -26.016, 1.4", "-74.8745, 182.255, -26.0601, 1.69", "-75.2864, 182.583, -26.1087, 1.69", "-75.6204, 182.853, -26.1538, 1.69", "-75.6743, 182.896, -26.1629, 1.69", "-76.2387, 183.339, -26.2248, 1.11", "-76.7291, 183.72, -26.2357, 0.74", "-76.7764, 183.756, -26.2367, 0.74", "-77.1659, 184.057, -26.2441, 0.59", "-77.2217, 184.1, -26.245, 0.59", "-77.9355, 184.688, -26.2541, 0.59", "-78.3661, 185.089, -26.2754, 0.59", "-79.0478, 185.853, -26.3303, 0.59", "-79.0885, 185.911, -26.335, 0.59", "-79.5227, 186.709, -26.3972, 0.59", "-79.8374, 187.429, -26.4522, 0.59", "-80.1114, 188.195, -26.5081, 0.88", "-80.4096, 189.082, -26.5698, 0.88", "-80.7802, 190.135, -26.6848, 0.88", "-80.9623, 190.596, -26.7487, 0.44", "-81.2711, 191.238, -26.8582, 0.44", "-81.731, 191.969, -27.003, 0.44", "-81.9982, 192.317, -27.0768, 0.81", "-82.7219, 193.077, -27.3491, 1.11", "-82.7639, 193.116, -27.368, 1.11", "-83.3367, 193.625, -27.6603, 1.33", "-83.6676, 193.928, -27.8462, 1.55", "-84.0775, 194.328, -28.0936, 1.55", "-84.8276, 195.15, -28.5208, 0.96", "-85.0486, 195.415, -28.6302, 0.44", "-85.097, 195.478, -28.6491, 0.44", "-85.5021, 196.065, -28.7688, 0.44", "-85.5347, 196.115, -28.7715, 0.44", "-85.9519, 196.824, -28.7026, 0.44", "-85.9833, 196.893, -28.6794, 0.44", "-86.2805, 197.653, -28.3675, 0.44", "-86.3002, 197.717, -28.341, 0.44", "-86.5414, 198.444, -28.0054, 0.44", "-86.6177, 198.639, -27.9093, 0.88", "-87.1026, 199.706, -27.4538, 1.33", "-87.1983, 199.878, -27.4005, 1.69", "-87.7904, 200.825, -27.1945, 2.28", "-88.4788, 201.834, -27.0201, 0.66", "-88.9878, 202.507, -26.9392, 0.66", "-89.7325, 203.435, -26.8848, 0.66", "-90.5945, 204.467, -26.7836, 0.66", "-90.6316, 204.512, -26.7753, 0.66", "-91.1037, 205.093, -26.6244, 1.25", "-91.5566, 205.699, -26.4327, 1.55", "-91.8283, 206.069, -26.2736, 1.55", "-92.9425, 207.48, -25.4282, 0.52", "-93.4068, 208.028, -25.0434, 0.52", "-93.9479, 208.587, -24.6355, 0.52", "-93.9942, 208.628, -24.6025, 0.52", "-94.3505, 208.903, -24.3414, 0.52", "-95.1418, 209.404, -23.8168, 0.52", "-95.1995, 209.432, -23.7876, 0.52", "-95.629, 209.602, -23.5392, 0.52", "-96.1536, 209.798, -23.1334, 0.96", "-96.71, 210.017, -22.6342, 1.18", "-96.8934, 210.097, -22.4214, 1.18", "-97.1928, 210.251, -22.0316, 1.18", "-97.2353, 210.274, -21.9803, 1.18", "-98.2586, 210.853, -20.9268, 0.59", "-98.3009, 210.877, -20.8907, 0.59", "-99.2057, 211.403, -20.2536, 0.74", "-99.7698, 211.762, -19.9108, 0.96", "-100.367, 212.167, -19.605, 1.18", "-101.153, 212.726, -19.3082, 1.25", "-101.465, 212.962, -19.2441, 1.18", "-101.945, 213.35, -19.1429, 0.59", "-102.595, 213.919, -19.0231, 0.59", "-102.711, 214.028, -18.9947, 0.59", "-103.171, 214.497, -18.854, 0.59", "-103.687, 215.049, -18.6676, 0.96", "-104.425, 215.797, -18.4025, 1.33", "-104.735, 216.111, -18.2861, 1.55", "-105.212, 216.58, -18.1031, 1.55", "-105.251, 216.62, -18.0831, 1.55", "-105.903, 217.367, -17.6801, 1.77", "-106.326, 217.89, -17.3948, 1.77", "-106.601, 218.272, -17.22, 2.14", "-106.642, 218.334, -17.1936, 2.14", "-107.53, 219.71, -16.6751, 0.74", "-108.067, 220.54, -16.408, 0.74", "-108.124, 220.631, -16.3839, 0.74", "-108.802, 221.698, -16.1184, 0.74", "-109.21, 222.292, -15.9849, 0.96", "-109.725, 222.982, -15.8625, 1.11", "-110.126, 223.462, -15.8159, 1.4", "-110.602, 223.932, -15.662, 1.4", "-111.326, 224.479, -15.3361, 1.18", "-111.447, 224.535, -15.2628, 1.18", "-112.244, 224.744, -14.7187, 1.18", "-113.241, 224.86, -14.0171, 0.74", "-115.461, 224.896, -12.4478, 0.74", "-116.342, 224.839, -11.8594, 0.74", "-117.432, 224.713, -11.1367, 0.74", "-117.946, 224.656, -10.8091, 0.96", "-118.504, 224.615, -10.4638, 0.96", "-118.574, 224.615, -10.4239, 0.96", "-119.394, 224.779, -9.98939, 0.96", "-120.832, 225.305, -9.08114, 0.81", "-121.607, 225.734, -8.52413, 0.66", "-122.314, 226.275, -7.88826, 0.66", "-122.387, 226.346, -7.80913, 0.66", "-123.149, 227.31, -6.83909, 0.66", "-123.176, 227.357, -6.79635, 0.66", "-123.446, 228.022, -6.28465, 0.66", "-123.71, 228.706, -5.66559, 0.52", "-123.729, 228.739, -5.62008, 0.52", "-123.989, 228.989, -5.14299, 0.52", "-124.145, 229.067, -4.89734, 0.96", "-124.187, 229.078, -4.84172, 0.96", "-125.278, 229.043, -3.75634, 0.96", "-126.875, 228.746, -2.65422, 0.96", "-127.668, 228.549, -2.272, 1.47", "-128.079, 228.424, -2.1397, 1.69", "-129.252, 228.04, -1.90668, 0.66", "-131.052, 227.381, -1.86808, 0.29", "-132.541, 226.734, -2.0971, 0.29", "-133.638, 226.194, -2.39904, 0.88", "-134.216, 225.882, -2.58313, 0.88", "-134.274, 225.849, -2.60478, 0.88", "-135.49, 225.051, -3.16421, 0.29", "-136.08, 224.636, -3.50086, 0.29", "-136.586, 224.214, -3.81435, 0.29", "-136.655, 224.152, -3.8488, 0.29", "-137.069, 223.754, -4.07744, 0.29", "-137.263, 223.564, -4.18162, 0.96" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-67.5596, 154.304, -31.2221, 0.74", "-67.1811, 155.354, -30.9167, 0.74", "-66.872, 156.029, -30.8562, 0.74", "-66.8137, 156.153, -30.8409, 0.74", "-66.5561, 156.753, -30.7613, 0.74", "-66.5265, 156.826, -30.7514, 0.74", "-66.3903, 157.198, -30.7001, 0.22", "-65.9397, 158.817, -30.5989, 0.22", "-65.8131, 159.501, -30.5443, 0.22", "-65.7734, 159.814, -30.5158, 0.52", "-65.7705, 159.885, -30.5084, 0.52", "-65.7932, 160.259, -30.4686, 0.74", "-65.8961, 160.969, -30.389, 1.03", "-66.0182, 161.434, -30.3567, 1.03", "-66.0423, 161.57, -30.3542, 1.03", "-66.0777, 161.967, -30.3468, 1.18", "-66.0925, 162.43, -30.3385, 1.33", "-66.0709, 163.211, -30.3248, 0.96", "-66.0588, 163.428, -30.3106, 0.74", "-65.9884, 164.15, -30.2417, 0.74", "-65.8861, 164.926, -30.1316, 1.18", "-65.771, 165.627, -29.9912, 1.33", "-65.7221, 165.9, -29.9262, 1.33", "-65.5649, 166.758, -29.7055, 0.44", "-65.3687, 167.922, -29.4006, 0.44", "-65.28, 168.521, -29.2448, 0.44", "-65.1652, 169.379, -29.0332, 0.66", "-65.0977, 170.082, -28.8796, 0.66", "-65.069, 170.849, -28.7451, 0.66", "-65.0981, 171.49, -28.6796, 0.88", "-65.2065, 172.214, -28.658, 1.11", "-65.3199, 172.711, -28.6833, 1.11", "-65.507, 173.294, -28.7522, 1.11", "-65.746, 173.905, -28.8439, 1.11", "-66.0489, 174.621, -29.0076, 0.52", "-66.2219, 175.123, -29.1488, 0.44", "-66.2457, 175.216, -29.1766, 0.44", "-66.3259, 175.692, -29.3178, 0.44", "-66.3687, 176.322, -29.4912, 0.44", "-66.3677, 177.173, -29.7407, 0.74", "-66.3731, 178.164, -30.0128, 0.74", "-66.4086, 179.089, -30.3254, 0.59", "-66.4139, 179.164, -30.3549, 0.59", "-66.4704, 179.742, -30.6047, 0.59", "-66.5797, 180.577, -30.978, 0.59", "-66.747, 181.583, -31.429, 1.84", "-66.9605, 182.737, -31.9775, 1.84", "-67.0199, 183.261, -32.2184, 1.18", "-67.042, 183.722, -32.4081, 0.88", "-67.0181, 184.329, -32.6402, 0.88", "-67.0077, 184.395, -32.6596, 0.88", "-66.8659, 185.033, -32.8137, 0.88", "-66.7398, 185.802, -32.9379, 0.88", "-66.7261, 185.948, -32.9644, 0.88", "-66.7461, 186.863, -33.1408, 0.88", "-66.8356, 187.486, -33.2654, 0.59", "-67.0546, 188.285, -33.4177, 0.52", "-67.3284, 188.925, -33.5252, 0.52", "-67.3949, 189.047, -33.542, 0.52", "-67.6313, 189.516, -33.5791, 0.52", "-67.6606, 189.578, -33.5791, 0.52", "-67.804, 190.061, -33.6377, 0.52", "-67.8328, 190.792, -33.8042, 0.52", "-67.8239, 190.869, -33.826, 0.52", "-67.6082, 191.817, -34.1168, 0.52", "-67.5785, 191.914, -34.1482, 0.52", "-67.1488, 193.115, -34.5371, 1.11", "-66.9397, 193.624, -34.7004, 1.4", "-66.9138, 193.685, -34.719, 1.4", "-66.7102, 194.264, -34.8609, 1.55", "-66.6467, 194.512, -34.9379, 1.55", "-66.5379, 195.125, -35.139, 0.88", "-66.5263, 195.531, -35.2656, 0.74", "-66.5582, 195.864, -35.3859, 0.52", "-66.7311, 196.681, -35.755, 0.52", "-67.0643, 197.835, -36.3374, 0.52", "-67.0837, 197.897, -36.3681, 0.52", "-67.3336, 198.585, -36.6686, 0.52", "-67.5152, 199.061, -36.9228, 0.96", "-67.8328, 199.892, -37.4057, 1.18", "-68.0236, 200.413, -37.7603, 1.18", "-68.2607, 201.12, -38.2638, 1.03", "-68.5739, 202.194, -39.1142, 1.03", "-68.9474, 203.777, -40.5188, 0.74", "-68.9566, 203.827, -40.5661, 0.74", "-69.0678, 204.649, -41.4084, 1.03", "-69.0716, 204.695, -41.4611, 1.03", "-69.0582, 205.03, -41.8042, 1.03", "-69.0502, 205.092, -41.8348, 1.03", "-69.0179, 205.61, -41.9303, 1.03", "-69.0199, 205.688, -41.9416, 1.03", "-69.0769, 206.248, -41.9983, 0.37", "-69.3058, 207.692, -42.1549, 0.37", "-69.5483, 208.845, -42.2837, 0.37", "-69.7244, 209.575, -42.3631, 1.33", "-69.8977, 210.206, -42.4302, 1.92", "-70.0612, 210.744, -42.4836, 2.36", "-70.1835, 211.092, -42.5362, 2.06", "-70.4455, 211.713, -42.6614, 1.47", "-70.7683, 212.468, -42.8279, 0.88", "-70.9028, 212.816, -42.9016, 0.81", "-71.1143, 213.438, -43.0473, 0.74", "-71.428, 214.44, -43.2983, 0.59", "-71.6549, 215.303, -43.5116, 0.59", "-71.7731, 215.856, -43.6483, 0.59", "-71.8021, 216.146, -43.7069, 0.96", "-71.7962, 216.632, -43.7856, 1.25", "-71.7714, 216.852, -43.8317, 1.4", "-71.6117, 217.683, -44.0103, 0.59", "-71.5942, 217.75, -44.0272, 0.59", "-71.2665, 218.958, -44.3437, 0.59", "-71.0081, 220.031, -44.6213, 0.59", "-70.7409, 221.322, -44.9474, 1.03", "-70.6089, 222.187, -45.1553, 1.4", "-70.5359, 223.015, -45.371, 1.62", "-70.5291, 223.916, -45.6074, 1.33", "-70.6077, 224.759, -45.8218, 1.47", "-70.6978, 225.306, -45.9383, 1.77", "-70.8893, 226.035, -46.0534, 1.77", "-71.2178, 226.886, -46.2188, 1.77", "-71.5165, 227.474, -46.3606, 1.92", "-71.8373, 228.023, -46.5333, 1.92" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "92.831, 135.664, 19.0101, 1.03", "93.6732, 136.74, 19.5701, 1.03", "94.2157, 137.389, 20.0092, 1.03", "94.7304, 137.982, 20.4544, 1.4", "95.2517, 138.556, 20.8961, 1.62", "95.9062, 139.258, 21.4483, 1.62", "96.684, 140.068, 22.0496, 0.66", "97.6042, 140.988, 22.6713, 0.66", "97.671, 141.05, 22.7133, 0.66", "98.3546, 141.644, 23.1272, 0.66", "98.4025, 141.686, 23.154, 0.66", "99.4744, 142.696, 23.6516, 0.66", "99.5203, 142.745, 23.6767, 0.66", "100.312, 143.722, 24.1463, 0.66", "100.859, 144.469, 24.5432, 0.66", "101.11, 144.846, 24.8128, 1.11", "101.328, 145.193, 25.1109, 1.11", "101.854, 146.15, 26.0823, 0.52", "101.874, 146.188, 26.1226, 0.52", "102.126, 146.654, 26.6223, 0.52", "102.844, 147.79, 27.695, 0.52", "102.875, 147.83, 27.7269, 0.52", "103.18, 148.161, 27.9221, 0.52", "103.585, 148.538, 28.0595, 1.55", "104.112, 148.977, 28.17, 2.21", "104.672, 149.413, 28.2499, 2.5", "105.385, 149.984, 28.3026, 2.5", "106.278, 150.73, 28.3431, 1.03", "106.801, 151.175, 28.3569, 0.66", "107.695, 151.969, 28.3625, 0.66", "108.402, 152.605, 28.3555, 0.44", "109.051, 153.201, 28.338, 0.44", "109.646, 153.792, 28.3076, 0.44", "109.713, 153.863, 28.302, 0.44", "110.279, 154.45, 28.2378, 0.44", "110.675, 154.775, 28.1863, 0.88", "110.738, 154.81, 28.1771, 0.88", "111.229, 155.019, 28.1292, 1.11", "111.748, 155.215, 28.1004, 1.11", "111.964, 155.296, 28.0865, 1.11", "112.973, 155.631, 28.0172, 1.11", "113.487, 155.789, 27.9847, 1.25", "114.181, 155.96, 27.947, 1.69", "114.26, 155.975, 27.9432, 1.69", "114.506, 156.018, 27.9336, 1.69", "115.47, 156.203, 27.9084, 1.69", "116.532, 156.435, 27.9324, 1.25", "117.333, 156.621, 27.9761, 0.74", "117.402, 156.635, 27.9802, 0.74", "118.374, 156.769, 28.0375, 0.66", "119.711, 156.917, 28.1646, 0.66", "120.929, 157.022, 28.3107, 0.44", "122.135, 157.109, 28.5097, 0.44", "123.456, 157.186, 28.7651, 0.44", "124.992, 157.272, 29.1338, 0.44", "126.384, 157.353, 29.5265, 0.44", "127.087, 157.393, 29.7273, 1.11", "128.298, 157.492, 30.0689, 1.11", "128.922, 157.57, 30.2226, 1.33", "130.203, 157.827, 30.4647, 0.29", "131.051, 158.051, 30.5498, 0.29", "132.219, 158.377, 30.5294, 0.29", "132.296, 158.401, 30.5298, 0.29", "133.775, 158.896, 30.5476, 0.29", "134.418, 159.132, 30.6161, 0.81", "135.05, 159.374, 30.7255, 1.11", "135.638, 159.625, 30.8855, 1.11", "137.234, 160.376, 31.4614, 0.74", "138.328, 160.912, 31.9156, 0.44", "139.443, 161.503, 32.4718, 0.44", "139.744, 161.667, 32.6184, 0.81", "140.328, 161.997, 32.8804, 0.81", "140.564, 162.142, 32.9695, 0.81", "141.092, 162.516, 33.0823, 0.37", "141.152, 162.567, 33.0918, 0.37", "142.008, 163.409, 33.1694, 0.37", "142.338, 163.733, 33.1953, 0.66", "142.557, 163.952, 33.1991, 1.03", "143.276, 164.681, 33.1814, 1.03", "144.075, 165.509, 33.1336, 1.03", "144.859, 166.343, 33.0757, 0.29", "145.962, 167.567, 32.9781, 0.29", "146.579, 168.286, 32.932, 0.29", "146.978, 168.752, 32.9221, 0.66", "147.538, 169.394, 32.9354, 0.66", "147.979, 169.874, 32.9699, 1.03", "148.42, 170.336, 33.0289, 1.4", "149.073, 171.033, 33.1704, 0.29", "149.791, 171.761, 33.3711, 0.29", "150.365, 172.32, 33.5254, 0.29", "150.992, 172.917, 33.6506, 0.29", "151.099, 173.023, 33.6638, 0.29", "151.657, 173.599, 33.6827, 0.29", "151.748, 173.707, 33.6756, 0.52", "152.371, 174.525, 33.5439, 0.52", "152.962, 175.312, 33.3965, 0.52", "153.365, 175.842, 33.3426, 1.25", "153.759, 176.313, 33.3294, 1.69", "154.313, 176.915, 33.4026, 1.69", "155.232, 177.824, 33.6297, 0.59", "155.944, 178.48, 33.9259, 0.59", "157.028, 179.425, 34.524, 0.59", "157.681, 179.959, 34.9327, 0.96", "158.685, 180.756, 35.6262, 0.44", "159.338, 181.24, 36.1032, 0.44", "160.067, 181.715, 36.6572, 1.11", "160.151, 181.764, 36.7157, 1.11", "160.686, 181.986, 37.0102, 1.11", "161.244, 182.159, 37.3097, 1.55", "161.822, 182.294, 37.5915, 1.55", "163.357, 182.64, 38.2985, 0.29", "163.421, 182.654, 38.3253, 0.29", "165.214, 183.093, 39.0307, 0.29", "165.897, 183.26, 39.2851, 0.22", "165.962, 183.276, 39.3077, 0.22", "167.226, 183.605, 39.6888, 0.22", "167.294, 183.626, 39.7037, 0.22", "168.765, 184.092, 39.945, 0.22", "169.391, 184.328, 39.9914, 0.22", "169.46, 184.353, 39.9943, 0.22", "170.06, 184.55, 40.0214, 0.59", "170.293, 184.611, 40.0335, 0.96", "171.026, 184.802, 40.0719, 0.96", "171.721, 184.966, 40.1092, 0.96" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "92.831, 135.664, 19.0101, 0.29", "93.3038, 135.068, 19.3551, 0.29", "93.8016, 134.473, 19.694, 0.29", "93.8427, 134.424, 19.7219, 0.29", "95.7387, 132.16, 21.0125, 0.15", "95.8698, 132.003, 21.1017, 0.15", "96.1534, 131.665, 21.2948, 0.74", "96.3391, 131.462, 21.4303, 0.74" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "32.5609, 115.06, -58.9635, 0.22", "28.4959, 114.865, -48.3569, 0.22", "28.4672, 114.864, -48.2822, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "32.5609, 115.06, -58.9635, 0.88", "32.7858, 115.76, -59.4036, 0.88", "33.2065, 117.07, -60.2266, 1.99", "33.53, 118.077, -60.8596, 2.43", "33.6312, 118.392, -61.0575, 2.43" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_144",
    "id" : "dend_144",
    "points3d" : [ "101.864, -181.045, -2.10158, 0.74", "102.561, -181.042, -1.45644, 0.74", "103.41, -181.039, -0.70592, 0.74", "105.341, -181.036, 0.951366, 0.88", "105.881, -181.043, 1.39459, 0.88", "105.96, -181.046, 1.45645, 0.88", "106.93, -181.123, 2.1503, 0.29", "107.199, -181.166, 2.32624, 0.66", "107.261, -181.185, 2.35122, 0.66", "107.6, -181.398, 2.28535, 0.96", "107.823, -181.58, 2.20435, 0.96", "108.609, -182.303, 1.83954, 0.81", "109.117, -182.821, 1.53981, 0.59", "109.189, -182.893, 1.50851, 0.59", "109.874, -183.552, 1.3418, 0.44", "109.933, -183.606, 1.3391, 0.44", "110.5, -184.083, 1.3603, 0.44", "110.557, -184.128, 1.36699, 0.44", "111.605, -185.009, 1.52077, 0.44", "112.147, -185.486, 1.60743, 1.18", "112.869, -186.145, 1.73772, 2.06", "113.578, -186.787, 1.84289, 2.21", "114.089, -187.211, 1.89578, 2.21", "115.074, -187.968, 1.94823, 0.37", "115.556, -188.273, 1.95292, 0.29", "115.646, -188.314, 1.96037, 0.29", "116.152, -188.436, 2.05529, 0.29", "117.134, -188.474, 2.34924, 0.29", "117.236, -188.458, 2.38235, 0.29", "118.249, -188.158, 2.72324, 0.29", "118.323, -188.137, 2.74962, 0.29", "118.75, -188.056, 2.91025, 0.29", "118.837, -188.058, 2.9434, 0.29", "119.128, -188.194, 3.03381, 0.96", "119.244, -188.268, 3.06012, 0.96", "119.744, -188.717, 3.11063, 1.18", "119.793, -188.765, 3.11498, 1.18", "120.126, -189.12, 3.1335, 1.18", "120.407, -189.427, 3.14088, 1.18" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_133",
    "id" : "dend_133",
    "points3d" : [ "101.864, -181.045, -2.10158, 1.03", "101.679, -182.225, -1.85335, 1.03", "101.573, -182.9, -1.71124, 1.03", "101.48, -183.494, -1.58644, 1.03" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_120",
    "id" : "dend_120",
    "points3d" : [ "-17.8365, -136.423, 5.42648, 0.52", "-18.0293, -137.016, 5.56986, 0.52", "-18.4746, -138.46, 6.07785, 0.52", "-18.6651, -139.136, 6.3256, 0.96", "-18.8575, -139.861, 6.5734, 1.18", "-18.9779, -140.334, 6.72525, 1.47", "-19.0657, -140.666, 6.82128, 1.47", "-19.4448, -141.852, 7.11641, 0.81", "-19.8175, -142.896, 7.42111, 0.52", "-20.1755, -143.786, 7.69033, 0.52", "-20.3535, -144.164, 7.81241, 1.11", "-20.8955, -145.208, 8.08215, 1.11", "-21.3721, -146.049, 8.24366, 1.11", "-22.0763, -147.197, 8.34756, 0.81", "-22.1145, -147.255, 8.3479, 0.81", "-22.689, -148.114, 8.27726, 0.81", "-23.3929, -149.313, 8.06423, 0.81", "-23.4184, -149.373, 8.04476, 0.81", "-23.6486, -150.236, 7.69021, 0.81", "-23.8001, -151.048, 7.29655, 0.52", "-23.8074, -151.14, 7.25506, 0.52", "-23.7966, -152.162, 6.84252, 0.52", "-23.7374, -153.156, 6.52479, 0.52", "-23.7113, -153.574, 6.39076, 1.11", "-23.7068, -153.64, 6.37, 1.11", "-23.6752, -154.471, 6.15277, 1.4", "-23.6907, -155.214, 5.93539, 1.11", "-23.6959, -155.28, 5.91507, 1.11", "-23.874, -156.808, 5.45625, 0.96", "-23.8987, -156.963, 5.41004, 0.88", "-24.1244, -158.125, 5.06827, 0.88", "-24.3897, -159.118, 4.82754, 0.66", "-24.5675, -159.726, 4.71332, 0.66", "-24.5926, -159.79, 4.70649, 0.66", "-25.0266, -160.579, 4.82305, 0.66", "-25.0689, -160.643, 4.84322, 0.66", "-25.7675, -161.51, 5.27887, 0.66", "-25.8142, -161.567, 5.31291, 0.66", "-26.2941, -162.168, 5.67638, 0.66", "-27.1479, -163.339, 6.34106, 0.66", "-27.5535, -163.995, 6.66807, 0.81", "-27.5841, -164.053, 6.69178, 0.81", "-27.9281, -164.886, 6.94416, 0.81", "-27.9521, -164.959, 6.96195, 0.81", "-28.0691, -165.504, 7.04446, 1.18", "-28.1952, -166.355, 7.05458, 1.33", "-28.2022, -166.492, 7.05654, 1.33", "-28.2042, -166.912, 7.06303, 1.33", "-28.1975, -166.971, 7.06395, 1.33", "-28.1003, -167.465, 7.07951, 1.03", "-27.9365, -168.089, 7.10664, 0.74", "-27.6143, -169.034, 7.15577, 0.74", "-27.591, -169.099, 7.15929, 0.74", "-27.2309, -170.05, 7.21159, 0.74", "-27.0746, -170.474, 7.23315, 0.88", "-26.9641, -170.822, 7.2511, 0.88", "-26.8882, -171.27, 7.2728, 0.88", "-26.9296, -171.761, 7.29172, 0.29", "-27.0124, -172.019, 7.29807, 0.66", "-27.369, -172.707, 7.2817, 0.66", "-27.728, -173.324, 7.24307, 0.66", "-28.1368, -174.033, 7.18991, 0.96", "-28.5262, -174.704, 7.1345, 1.11", "-28.9345, -175.474, 7.06817, 1.11", "-29.2369, -176.098, 7.01238, 0.59", "-29.6059, -176.943, 6.88235, 0.59", "-29.9886, -177.996, 6.66488, 0.59", "-30.0296, -178.124, 6.63377, 0.59", "-30.2933, -178.906, 6.43622, 0.59", "-30.3184, -178.971, 6.41975, 0.59", "-30.8356, -180.122, 6.20241, 1.18", "-31.0922, -180.647, 6.13037, 1.4", "-31.6184, -181.676, 6.03412, 1.62", "-32.205, -182.816, 5.97326, 1.99", "-32.4042, -183.189, 5.96989, 1.99", "-33.0455, -184.402, 6.01708, 1.03", "-33.4579, -185.239, 6.06213, 0.81", "-33.7701, -185.903, 6.06953, 0.81", "-33.7924, -185.957, 6.06302, 0.81", "-34.0207, -186.616, 5.88428, 0.66", "-34.253, -187.442, 5.49586, 0.66", "-34.4581, -188.348, 4.92209, 1.18", "-34.4696, -188.407, 4.88416, 1.18", "-34.686, -189.619, 4.15233, 0.74", "-34.8314, -190.43, 3.7049, 0.59", "-35.029, -191.585, 3.11675, 0.59", "-35.1954, -192.368, 2.76568, 0.59", "-35.5426, -193.552, 2.31532, 0.59", "-35.7211, -194.048, 2.14231, 0.74", "-36.0012, -194.641, 1.98061, 1.03", "-36.0779, -194.772, 1.9457, 1.03", "-36.4935, -195.347, 1.8237, 1.25", "-37.1166, -196.068, 1.66676, 1.55", "-37.1709, -196.127, 1.65553, 1.55", "-37.6874, -196.749, 1.58081, 1.55", "-37.7297, -196.805, 1.57673, 1.55", "-38.0846, -197.363, 1.5614, 1.55", "-38.4859, -198.166, 1.57214, 0.66", "-38.9133, -199.14, 1.62265, 0.66", "-39.3017, -200.186, 1.64473, 0.66", "-39.3247, -200.261, 1.64434, 0.66", "-39.612, -201.387, 1.61249, 0.66", "-39.7373, -202.167, 1.56894, 0.96", "-39.7442, -202.245, 1.56599, 0.96", "-39.817, -203.145, 1.64657, 0.88", "-39.8601, -203.568, 1.72915, 0.66", "-39.8747, -203.645, 1.7502, 0.66", "-40.2886, -204.989, 2.09899, 0.52", "-40.71, -206.09, 2.36343, 0.52", "-41.3066, -207.453, 2.65972, 0.52", "-41.3387, -207.516, 2.6721, 0.52", "-41.8824, -208.506, 2.80595, 0.44", "-42.7232, -209.94, 2.89854, 0.44", "-42.7651, -210.006, 2.8855, 0.44", "-42.9467, -210.316, 2.73893, 0.81", "-43.245, -210.896, 2.38155, 0.81", "-43.487, -211.418, 2.06103, 0.81", "-43.51, -211.475, 2.02752, 0.81", "-44.1316, -213.071, 1.28818, 0.88", "-44.2824, -213.449, 1.13574, 0.52", "-44.5271, -214.023, 0.937401, 0.52", "-44.8009, -214.589, 0.782629, 0.44", "-45.1116, -215.187, 0.662453, 0.44", "-45.6895, -216.273, 0.564024, 1.25", "-46.0841, -216.999, 0.576593, 2.21", "-46.4785, -217.734, 0.599679, 2.43", "-46.9895, -218.746, 0.688222, 2.43", "-47.1393, -219.067, 0.733848, 2.43", "-47.5993, -220.204, 0.949151, 0.81", "-47.6199, -220.268, 0.963773, 0.81", "-47.7828, -220.95, 1.13449, 0.81", "-47.9456, -221.988, 1.38216, 0.59", "-47.9601, -222.131, 1.414, 0.59", "-48.0798, -223.325, 1.61396, 0.59", "-48.1722, -224.253, 1.70696, 0.59", "-48.1823, -224.331, 1.70659, 0.59", "-48.3779, -225.375, 1.60331, 0.59", "-48.4126, -225.517, 1.57613, 0.59", "-48.6845, -226.363, 1.38191, 0.59", "-48.9761, -227.051, 1.18196, 0.59", "-49.632, -228.186, 0.805453, 0.59", "-49.9633, -228.642, 0.6411, 0.88", "-50.0106, -228.692, 0.620563, 0.88", "-50.5076, -229.177, 0.441867, 0.88", "-50.594, -229.251, 0.418223, 0.88", "-51.2614, -229.91, 0.290268, 0.88", "-51.4678, -230.229, 0.340306, 0.44", "-51.4939, -230.291, 0.357593, 0.44", "-51.771, -231.284, 0.870947, 0.44", "-51.7824, -231.343, 0.909868, 0.44", "-51.9896, -232.474, 1.76731, 0.44", "-52.2173, -233.962, 3.03037, 0.44", "-52.2243, -234.005, 3.07, 0.44", "-52.4899, -235.416, 4.3841, 0.44", "-52.5102, -235.516, 4.48194, 0.44", "-52.6045, -235.979, 4.87509, 0.44", "-52.6184, -236.044, 4.92202, 0.44", "-52.8091, -237.049, 5.4334, 0.81", "-52.9047, -237.768, 5.74344, 1.11", "-52.9337, -238.155, 5.86313, 0.29", "-52.9766, -239.322, 6.22538, 0.29", "-52.9754, -239.415, 6.25478, 0.29", "-52.9541, -240.335, 6.54847, 0.74", "-52.951, -240.401, 6.56966, 0.74", "-52.9113, -241.008, 6.81835, 1.03", "-52.9078, -241.445, 7.03381, 1.25" ],
    "parent" : "dend_118",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_119",
    "id" : "dend_119",
    "points3d" : [ "-17.8365, -136.423, 5.42648, 0.52", "-19.3246, -135.123, 9.44591, 0.52", "-19.5229, -134.942, 9.92311, 0.44", "-19.5706, -134.899, 10.0169, 0.44", "-20.0271, -134.509, 10.6912, 0.44", "-20.0623, -134.481, 10.7303, 0.44", "-20.9455, -133.827, 11.5351, 0.44", "-21.0088, -133.783, 11.562, 0.44", "-21.6263, -133.365, 11.8029, 0.44", "-22.429, -132.845, 12.1541, 0.37", "-23.0356, -132.464, 12.4339, 0.29", "-24.1363, -131.772, 12.9539, 0.22", "-24.2183, -131.721, 13.0008, 0.22", "-25.4731, -130.851, 14.008, 0.22", "-26.2012, -130.331, 14.8715, 0.22", "-26.3073, -130.253, 15.0321, 0.22", "-26.6275, -130.033, 15.5606, 0.22", "-27.6016, -129.4, 17.2658, 0.22", "-28.3107, -128.959, 18.5733, 0.22", "-29.1925, -128.407, 20.2849, 0.22", "-29.2625, -128.363, 20.4098, 0.22", "-29.8125, -128.024, 21.3172, 0.22", "-29.8501, -128.002, 21.3726, 0.22", "-30.5138, -127.633, 22.0935, 0.22", "-31.2207, -127.253, 22.6669, 0.22", "-31.2831, -127.217, 22.7067, 0.22", "-32.035, -126.809, 23.2206, 0.22", "-32.1108, -126.77, 23.2757, 0.22", "-32.6159, -126.518, 23.6139, 0.22", "-32.7582, -126.452, 23.7009, 0.22", "-33.4437, -126.14, 24.1019, 0.22", "-34.7153, -125.521, 24.8132, 0.22", "-34.79, -125.482, 24.8517, 0.22", "-35.493, -125.079, 25.1912, 0.22", "-35.5561, -125.039, 25.2198, 0.22", "-36.0926, -124.665, 25.4374, 0.22", "-36.19, -124.589, 25.4721, 0.22", "-36.6538, -124.175, 25.588, 0.22", "-37.4405, -123.51, 25.911, 0.22", "-37.4971, -123.461, 25.9394, 0.22", "-37.8252, -123.172, 26.1169, 0.44", "-37.9024, -123.102, 26.1616, 0.44", "-38.5355, -122.539, 26.5355, 0.44", "-39.6925, -121.544, 27.18, 0.22", "-40.7309, -120.714, 27.7381, 0.22", "-40.7832, -120.674, 27.7619, 0.22", "-41.6178, -120.058, 28.0895, 0.22", "-41.6899, -120.007, 28.1202, 0.22", "-42.6831, -119.33, 28.5621, 0.22", "-42.7367, -119.295, 28.5912, 0.22", "-43.6514, -118.763, 29.261, 0.22", "-43.6954, -118.737, 29.2974, 0.22", "-44.9105, -118.001, 30.4377, 0.22", "-45.0349, -117.928, 30.56, 0.22", "-46.1473, -117.288, 31.7599, 0.22", "-46.2486, -117.234, 31.8604, 0.22", "-46.9698, -116.889, 32.5209, 0.22", "-47.0338, -116.862, 32.5611, 0.22", "-47.6789, -116.611, 32.7635, 0.22", "-47.7508, -116.577, 32.776, 0.22", "-48.5909, -116.122, 32.7991, 0.22", "-48.7877, -116.002, 32.8029, 0.22", "-49.6488, -115.438, 32.8118, 0.22", "-49.7305, -115.382, 32.8123, 0.22", "-50.686, -114.618, 32.7893, 0.22", "-50.848, -114.479, 32.7828, 0.22", "-51.6587, -113.706, 32.7384, 0.22", "-51.8167, -113.554, 32.7286, 0.22", "-52.5013, -112.897, 32.6822, 0.22", "-53.4291, -112.05, 32.6187, 0.22", "-53.5583, -111.936, 32.6086, 0.22", "-54.1961, -111.343, 32.5541, 0.22", "-54.5863, -110.991, 32.5208, 0.22", "-55.0674, -110.565, 32.483, 0.22", "-55.1864, -110.467, 32.4567, 0.22", "-55.9578, -109.926, 32.2203, 0.22", "-56.0784, -109.849, 32.1758, 0.22", "-56.9912, -109.255, 31.7255, 0.22", "-57.0437, -109.219, 31.6952, 0.22", "-58.5069, -108.258, 30.681, 0.22", "-58.6228, -108.183, 30.5935, 0.22", "-59.2284, -107.794, 30.121, 0.22", "-60.0584, -107.227, 29.4591, 0.22", "-60.4708, -106.902, 29.1337, 0.22", "-61.4065, -106.128, 28.4773, 0.22", "-61.5735, -105.982, 28.3861, 0.22", "-62.2081, -105.417, 28.0757, 0.22", "-62.3311, -105.32, 28.0321, 0.22", "-63.3885, -104.612, 27.8211, 0.22", "-63.6165, -104.475, 27.797, 0.22", "-64.3646, -104.064, 27.7865, 0.22", "-64.4273, -104.032, 27.7857, 0.22", "-65.7589, -103.481, 27.8087, 0.22", "-65.9791, -103.411, 27.8207, 0.22", "-66.5598, -103.285, 27.871, 0.22", "-66.8148, -103.234, 27.8978, 0.22", "-67.3702, -103.113, 27.9651, 0.22", "-67.955, -102.969, 28.0448, 0.22", "-68.9326, -102.666, 28.2116, 0.22", "-69.01, -102.642, 28.2256, 0.22", "-69.6434, -102.451, 28.3475, 0.66", "-70.2411, -102.292, 28.4584, 0.66" ],
    "parent" : "dend_118",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "-26.0802, -311.395, 17.9035, 1.11", "-26.5424, -312.175, 17.4838, 1.11", "-26.7182, -312.533, 17.3283, 1.11", "-27.2974, -313.843, 16.817, 0.37", "-27.7686, -315.131, 16.2999, 0.37", "-27.9844, -315.819, 16.0296, 0.37", "-28.3295, -316.92, 15.5199, 0.37", "-28.4859, -317.469, 15.2718, 0.37", "-28.5025, -317.527, 15.2382, 0.37", "-28.752, -318.369, 14.626, 0.37", "-28.8964, -318.844, 14.2017, 0.37", "-29.2268, -319.835, 13.2333, 0.66", "-29.3748, -320.266, 12.7671, 0.66", "-29.71, -321.277, 11.6128, 0.44", "-29.9196, -322.026, 10.7891, 0.37", "-30.0857, -322.72, 10.0573, 0.37", "-30.1019, -322.829, 9.94667, 0.37", "-30.1239, -324.122, 8.77002, 0.37", "-30.0569, -324.718, 8.18767, 1.11", "-29.913, -325.294, 7.68211, 1.62", "-29.881, -325.404, 7.58684, 1.62", "-29.8256, -325.595, 7.42061, 1.62", "-29.6393, -326.4, 6.77453, 1.62", "-29.3592, -327.918, 5.66454, 0.59", "-29.2089, -329.077, 4.88198, 0.59", "-29.1122, -330.466, 3.98628, 0.59", "-29.1113, -330.536, 3.94558, 0.59", "-29.1535, -331.311, 3.55304, 0.52", "-29.1633, -331.377, 3.5292, 0.52", "-29.3728, -332.168, 3.33899, 0.52", "-29.5642, -332.698, 3.22322, 0.74", "-29.7236, -333.101, 3.1758, 1.03", "-29.7475, -333.165, 3.16698, 1.03", "-29.9553, -333.825, 3.04872, 1.25", "-30.2514, -334.852, 2.82881, 1.25" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "-26.0802, -311.395, 17.9035, 0.52", "-25.2602, -312.136, 19.0378, 0.52", "-24.9281, -312.436, 19.4972, 0.52", "-24.6239, -312.711, 19.9179, 0.52", "-24.5926, -312.739, 19.9613, 0.52", "-23.861, -313.401, 20.9733, 0.52", "-23.589, -313.647, 21.3496, 0.81" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-14.9563, -325.235, -2.29581, 0.66", "-14.9051, -325.825, -2.1959, 0.66", "-14.8816, -326.422, -2.08969, 0.66", "-14.8767, -326.525, -2.07198, 0.66", "-14.8257, -327.548, -1.92546, 0.66", "-14.783, -328.495, -1.82, 0.37", "-14.7477, -329.493, -1.73672, 0.37", "-14.749, -329.593, -1.72937, 0.37", "-14.7862, -330.207, -1.7374, 0.37", "-14.8186, -330.669, -1.78074, 0.81", "-14.8574, -331.447, -1.92212, 0.81", "-14.8372, -332.139, -2.10049, 1.03", "-14.7956, -332.6, -2.27607, 1.03", "-14.69, -333.419, -2.63019, 1.55", "-14.5481, -334.002, -2.8979, 1.84", "-14.4367, -334.356, -3.04728, 1.84", "-14.3349, -334.611, -3.15919, 1.84", "-13.7368, -335.829, -3.73319, 0.29", "-13.4184, -336.375, -3.98231, 0.29", "-12.8466, -337.269, -4.36539, 0.29", "-12.2728, -338.169, -4.81219, 0.29", "-12.2343, -338.231, -4.842, 0.29", "-11.5422, -339.404, -5.35276, 0.29", "-11.1115, -340.19, -5.63614, 0.29", "-11.0827, -340.249, -5.65863, 0.29", "-10.6022, -341.524, -6.2556, 0.29", "-10.3789, -342.15, -6.60226, 0.74", "-10.2836, -342.525, -6.80539, 0.96", "-10.2372, -342.974, -7.03533, 0.96", "-10.2329, -343.037, -7.06351, 0.96", "-10.1293, -344.176, -7.48796, 0.29", "-10.117, -344.238, -7.51339, 0.29", "-9.91545, -344.905, -7.85086, 0.29", "-9.86726, -345.02, -7.91115, 0.29", "-9.24041, -346.175, -8.46685, 0.29", "-9.17037, -346.287, -8.51528, 0.29", "-8.26719, -347.577, -8.94967, 0.29", "-8.05865, -347.85, -9.07529, 1.4", "-7.82069, -348.119, -9.36803, 1.55", "-7.35198, -348.632, -10.1253, 0.29", "-7.32464, -348.658, -10.1847, 0.29", "-6.9549, -349.013, -11.0521, 0.29", "-6.41043, -349.548, -12.4431, 0.52", "-5.19438, -350.764, -15.7622, 0.52", "-5.05142, -350.905, -16.1808, 1.84", "-3.98587, -351.929, -19.5443, 0.29", "-3.77688, -352.125, -20.217, 0.29", "-3.61062, -352.267, -20.7738, 0.29" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-14.9563, -325.235, -2.29581, 0.29", "-14.4258, -324.918, -2.29581, 0.29", "-14.2856, -324.858, -2.29581, 0.29", "-13.1324, -324.575, -2.27864, 0.29", "-12.195, -324.407, -2.25886, 0.29", "-11.9046, -324.361, -2.25198, 0.59", "-11.2284, -324.219, -2.23619, 0.59", "-10.4362, -324.093, -2.21604, 0.59", "-9.54288, -323.994, -2.19161, 0.22", "-8.64491, -323.962, -2.16381, 0.22", "-8.57446, -323.956, -2.16128, 0.22", "-7.01649, -323.77, -2.10172, 0.22" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "77.9766, -437.502, -0.26028, 0.37", "79.549, -437.106, -1.04151, 0.37", "80.2209, -436.9, -1.40352, 0.37", "80.4091, -436.839, -1.5069, 0.37", "81.049, -436.644, -1.84455, 0.37", "81.1219, -436.628, -1.87903, 0.37", "81.9789, -436.484, -2.23908, 0.37", "82.9188, -436.414, -2.46429, 0.52", "82.9899, -436.42, -2.47921, 0.52", "83.4161, -436.523, -2.57365, 0.74", "84.192, -436.856, -2.73838, 1.47", "84.6266, -437.084, -2.85193, 1.47", "85.2511, -437.462, -3.02919, 1.11", "86.1636, -438.035, -3.28371, 0.74", "87.4263, -438.841, -3.67033, 0.74", "88.4457, -439.482, -4.14869, 0.74", "89.3434, -440.032, -4.70616, 1.03", "89.3966, -440.063, -4.74462, 1.03", "89.7705, -440.253, -5.04221, 1.33", "89.8859, -440.3, -5.15211, 1.33", "91.6809, -440.89, -6.92478, 1.55", "91.7857, -440.92, -7.02944, 1.55", "92.4878, -441.111, -7.77197, 1.62", "92.884, -441.212, -8.21008, 1.77", "94.7302, -441.597, -10.2427, 0.66", "95.7741, -441.773, -11.3575, 0.66", "95.8336, -441.781, -11.4141, 0.66", "97.5624, -441.915, -13.0498, 0.52", "97.6122, -441.917, -13.0989, 0.52", "98.3613, -441.912, -13.7973, 0.52", "98.4263, -441.908, -13.845, 0.52", "99.4786, -441.863, -14.5381, 0.52", "99.5429, -441.866, -14.5721, 0.52", "100.735, -442.039, -14.9707, 0.74", "101.187, -442.145, -15.1465, 0.96", "101.686, -442.317, -15.3685, 0.96", "101.749, -442.34, -15.395, 0.96", "102.336, -442.562, -15.6296, 0.96", "102.607, -442.647, -15.7114, 0.96", "103.297, -442.822, -15.8481, 0.44", "103.641, -442.904, -15.9314, 0.44", "104.633, -443.149, -16.1823, 0.44", "104.842, -443.207, -16.2319, 0.44", "105.471, -443.391, -16.3703, 0.44", "105.528, -443.408, -16.3826, 0.44", "106.173, -443.598, -16.5045, 1.03", "107.138, -443.889, -16.7036, 1.55", "107.82, -444.115, -16.8493, 1.77", "108.026, -444.189, -16.8912, 1.77", "108.942, -444.538, -17.0582, 0.37", "109.575, -444.765, -17.1533, 0.37", "109.635, -444.785, -17.1598, 0.37", "110.289, -445.003, -17.2288, 0.37", "110.512, -445.081, -17.2484, 0.37", "111.246, -445.346, -17.2888, 0.37", "111.592, -445.464, -17.2785, 0.81", "111.659, -445.485, -17.2745, 0.81", "112.184, -445.561, -17.2364, 1.11", "112.334, -445.554, -17.2233, 1.11", "112.764, -445.442, -17.1836, 1.11", "113.568, -445.04, -17.1, 0.29", "113.623, -445.001, -17.0833, 0.29", "114.513, -444.289, -16.4723, 0.29", "114.559, -444.262, -16.4274, 0.29", "114.982, -444.082, -15.9377, 0.74", "115.02, -444.068, -15.8928, 0.74", "115.983, -443.819, -14.6857, 0.66", "117.361, -443.55, -12.9669, 0.29", "119.112, -443.318, -10.7844, 0.29", "120.174, -443.204, -9.48992, 1.03", "120.597, -443.171, -8.98695, 1.03", "122.431, -443.049, -6.87314, 0.29", "122.652, -443.04, -6.63321, 0.52", "122.757, -443.036, -6.52257, 0.52", "124.367, -442.864, -4.96845, 0.22", "124.496, -442.848, -4.84858, 0.74", "124.587, -442.833, -4.7662, 0.74", "124.83, -442.777, -4.56362, 0.74", "124.904, -442.754, -4.50085, 0.74", "125.236, -442.609, -4.17752, 0.74", "126.699, -441.804, -2.71206, 0.22", "127.472, -441.395, -1.92651, 0.22", "127.645, -441.303, -1.75231, 0.66", "128.179, -441.023, -1.21691, 0.66", "130.059, -440.046, 0.599113, 0.22", "130.557, -439.79, 1.06488, 0.44", "131.887, -439.086, 2.45842, 0.15", "132.115, -438.982, 2.72521, 0.81", "132.166, -438.961, 2.78665, 0.81", "132.492, -438.848, 3.18517, 0.81", "132.536, -438.832, 3.23787, 0.81", "134.417, -438.157, 5.54981, 0.22", "134.766, -438.006, 6.02195, 0.22", "134.806, -437.988, 6.07676, 0.22", "135.422, -437.708, 6.87446, 0.22", "135.834, -437.522, 7.36297, 0.22", "135.882, -437.494, 7.42013, 0.22", "136.696, -436.831, 8.2568, 0.66", "136.737, -436.785, 8.31069, 0.66", "137.021, -436.391, 8.7615, 0.88", "137.095, -436.25, 8.91539, 0.88", "137.589, -434.973, 10.2924, 0.22", "137.813, -434.265, 11.0075, 0.22", "137.835, -434.193, 11.0628, 0.59", "137.851, -434.138, 11.1014, 0.59", "137.933, -433.835, 11.2872, 0.59", "138.319, -432.619, 11.9949, 0.15", "138.352, -432.537, 12.0374, 0.15", "139.021, -431.092, 12.8354, 0.15", "139.111, -430.912, 12.9344, 0.37", "139.278, -430.624, 13.132, 0.37", "140.127, -429.329, 14.1462, 0.15", "140.363, -429.013, 14.3989, 0.88", "140.518, -428.812, 14.6036, 0.88", "140.564, -428.754, 14.6731, 0.88", "141.579, -427.322, 16.4739, 0.22", "141.621, -427.255, 16.5553, 0.22", "142.049, -426.494, 17.4507, 0.22", "142.739, -425.204, 18.9596, 0.44", "142.966, -424.753, 19.4802, 0.44", "143.656, -423.293, 21.1131, 0.44", "143.894, -422.719, 21.707, 0.29", "143.989, -422.473, 21.9678, 0.59", "144.26, -421.638, 22.9021, 0.81" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "77.9766, -437.502, -0.26028, 1.11", "77.665, -438.087, -0.342078, 1.11", "77.2136, -438.843, -0.448078, 0.88", "76.7385, -439.588, -0.54679, 0.66", "76.2933, -440.263, -0.588479, 0.37", "75.839, -440.965, -0.598615, 0.37", "75.7542, -441.095, -0.597344, 0.37", "75.0986, -442.024, -0.561218, 0.37", "74.7065, -442.548, -0.519093, 0.66", "74.193, -443.237, -0.42906, 0.29", "73.6227, -443.984, -0.292093, 0.29", "73.5349, -444.102, -0.270681, 0.29", "73.2232, -444.518, -0.207912, 0.29", "73.133, -444.638, -0.196117, 0.29", "72.4939, -445.425, -0.259809, 0.29", "72.2785, -445.672, -0.31152, 0.88", "71.9748, -446.005, -0.39878, 0.88", "71.3621, -446.711, -0.648561, 0.29", "70.525, -447.75, -1.07895, 0.29", "69.707, -448.785, -1.56541, 0.44", "69.3593, -449.24, -1.80681, 0.44", "69.3186, -449.3, -1.83915, 0.44", "68.8121, -450.182, -2.32447, 0.29", "68.5277, -450.819, -2.69445, 0.29", "68.5105, -450.877, -2.7288, 0.29", "68.4631, -451.217, -2.87201, 0.59", "68.4262, -451.805, -3.11066, 0.59", "68.421, -451.873, -3.13224, 0.59" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "77.9766, -437.502, -0.26028, 2.73", "77.9866, -437.531, -0.285512, 2.73", "78.6323, -439.739, -1.9428, 0.52", "78.825, -440.43, -2.44445, 0.52", "78.8925, -440.717, -2.66864, 0.52", "79.1297, -441.844, -3.55487, 0.52", "79.1404, -441.899, -3.59736, 0.52", "79.5736, -444.178, -5.50627, 0.52", "79.5823, -444.223, -5.54401, 0.52", "79.8539, -445.448, -6.66809, 1.11", "79.9496, -445.872, -7.07456, 1.47", "79.9601, -445.922, -7.1252, 1.47", "80.3812, -447.725, -8.93768, 0.52", "80.7002, -448.825, -10.0646, 0.52", "80.8193, -449.188, -10.4273, 0.88", "80.904, -449.403, -10.6254, 0.88", "80.9272, -449.459, -10.6769, 0.88", "81.0285, -449.678, -10.8548, 0.88", "81.409, -450.34, -11.174, 0.37", "81.4755, -450.423, -11.2097, 0.37", "81.8546, -450.838, -11.3722, 0.37", "81.9656, -450.955, -11.4078, 0.37", "82.4421, -451.5, -11.5222, 0.37", "82.5353, -451.615, -11.5341, 0.37", "82.8787, -452.055, -11.5341, 0.59", "82.9371, -452.134, -11.5341, 0.59", "83.1889, -452.58, -11.5341, 0.74", "83.3003, -452.843, -11.571, 0.74", "83.4764, -453.425, -11.707, 0.74", "83.496, -453.558, -11.7456, 0.74", "83.5034, -454.086, -11.9215, 0.44", "83.4341, -455.188, -12.2873, 0.44", "83.3054, -456.31, -12.6439, 0.29", "83.2959, -456.376, -12.6626, 0.29", "83.1332, -457.456, -12.9061, 0.29", "83.1152, -457.602, -12.9316, 0.29", "83.0547, -458.495, -13.0258, 0.29", "83.0729, -458.84, -13.1013, 0.74", "83.1773, -459.46, -13.2746, 1.11", "83.4372, -460.188, -13.7841, 1.11", "83.4645, -460.243, -13.8376, 1.11", "83.6983, -460.666, -14.2978, 1.11", "84.5369, -462.048, -15.9165, 0.29", "85.0175, -462.812, -16.839, 0.29", "86.2452, -464.634, -19.1373, 0.29", "86.3163, -464.746, -19.2853, 0.96", "86.6189, -465.273, -19.9364, 1.25", "86.8352, -465.682, -20.4297, 1.4", "86.9261, -465.86, -20.6108, 1.4", "86.974, -465.953, -20.7065, 1.4", "87.6905, -467.46, -22.0738, 0.44", "88.0557, -468.194, -22.7643, 0.44", "88.7373, -469.507, -24.0525, 0.66", "89.1882, -470.31, -24.9321, 0.66", "89.8428, -471.294, -25.9758, 0.66", "90.1041, -471.633, -26.3213, 1.47", "90.3076, -471.857, -26.5366, 1.77", "90.3705, -471.92, -26.5962, 1.77", "91.9585, -473.432, -27.8462, 0.22", "93.5021, -474.791, -28.9183, 0.22", "93.817, -475.054, -29.0932, 0.81", "93.8892, -475.112, -29.1286, 0.81", "94.4792, -475.615, -29.4164, 0.81", "94.8168, -475.925, -29.5583, 0.15", "95.3895, -476.493, -29.7182, 0.15", "95.5702, -476.687, -29.7869, 1.18", "95.9024, -477.06, -29.9214, 1.55", "96.7721, -478.063, -30.2605, 0.22", "97.5667, -479.017, -30.5545, 0.22", "97.6603, -479.131, -30.5862, 0.22", "98.2115, -479.762, -30.7358, 0.22", "98.3151, -479.868, -30.7674, 0.22", "99.1707, -480.657, -31.0145, 0.22", "99.6984, -481.106, -31.1476, 0.22", "99.8265, -481.216, -31.1857, 0.22", "100.685, -481.977, -31.5697, 0.22", "101.802, -483.104, -32.2149, 0.22", "102.57, -484.055, -32.8158, 0.22", "102.717, -484.274, -32.963, 1.11", "102.84, -484.498, -33.1113, 1.11", "103.474, -485.933, -34.102, 0.22", "103.948, -487.388, -35.1066, 0.22", "104.341, -489.026, -36.1895, 0.22", "104.374, -489.218, -36.3178, 0.88", "104.428, -489.622, -36.6033, 0.88", "104.55, -490.65, -37.3151, 0.22", "104.622, -491.412, -37.8017, 0.22", "104.654, -491.649, -37.9754, 0.81", "104.751, -492.068, -38.2668, 0.81", "105.101, -493.178, -38.9733, 0.15", "105.447, -494.073, -39.4647, 0.15", "105.506, -494.204, -39.5168, 0.15", "105.943, -494.991, -39.7998, 0.15", "106.053, -495.16, -39.8514, 0.15", "106.401, -495.605, -39.9267, 0.15", "106.609, -495.847, -39.8939, 0.81", "106.656, -495.898, -39.8832, 0.81", "106.858, -496.132, -39.823, 0.81" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-108.013, 162.351, -154.141, 0.29", "-108.547, 162.327, -154.829, 0.29", "-108.593, 162.321, -154.883, 0.29", "-109.441, 162.201, -155.832, 0.29", "-109.547, 162.186, -155.942, 0.29", "-110.069, 162.115, -156.452, 0.29", "-111.144, 161.969, -157.534, 0.66", "-111.666, 161.911, -158.016, 0.66", "-111.728, 161.904, -158.067, 0.66", "-112.082, 161.861, -158.315, 0.66", "-112.144, 161.859, -158.353, 0.66", "-112.999, 161.906, -158.807, 0.29", "-113.812, 162.025, -159.151, 0.29", "-114.213, 162.107, -159.336, 0.66", "-114.276, 162.122, -159.365, 0.66", "-114.78, 162.23, -159.577, 0.66", "-114.847, 162.238, -159.597, 0.66", "-115.526, 162.275, -159.89, 0.29", "-116.169, 162.277, -160.26, 0.29", "-116.229, 162.276, -160.297, 0.29", "-116.9, 162.245, -160.691, 0.96", "-118.04, 162.165, -161.341, 0.96", "-119.901, 162.085, -162.237, 0.29", "-119.976, 162.083, -162.272, 0.29", "-120.504, 162.084, -162.535, 0.29", "-121.369, 162.11, -162.951, 0.29", "-121.505, 162.119, -163.014, 0.29", "-122.967, 162.243, -163.55, 0.29", "-123.96, 162.281, -163.804, 0.81", "-124.12, 162.281, -163.849, 0.81", "-124.776, 162.237, -164.028, 0.81", "-124.871, 162.226, -164.053, 0.81", "-126.065, 162.021, -164.328, 0.81", "-126.947, 161.815, -164.497, 0.29", "-127.018, 161.799, -164.505, 0.29", "-128.683, 161.419, -164.687, 0.29", "-128.751, 161.403, -164.693, 0.29", "-129.094, 161.325, -164.719, 0.66", "-129.162, 161.311, -164.722, 0.66", "-130.516, 161.051, -164.722, 0.66", "-130.617, 161.034, -164.722, 0.66", "-131.202, 160.944, -164.722, 1.03", "-131.423, 160.911, -164.733, 1.03", "-132.242, 160.816, -164.865, 1.03", "-132.312, 160.809, -164.883, 1.03", "-133.215, 160.786, -165.208, 1.25", "-133.29, 160.787, -165.237, 1.25", "-133.991, 160.844, -165.618, 0.74", "-134.818, 160.959, -166.139, 0.37", "-134.883, 160.971, -166.185, 0.37", "-136.116, 161.206, -167.059, 0.37", "-136.175, 161.215, -167.102, 0.37", "-137.622, 161.4, -168.107, 0.37", "-137.884, 161.417, -168.256, 0.88", "-137.948, 161.417, -168.286, 0.88", "-138.679, 161.38, -168.571, 0.88", "-139.698, 161.282, -168.889, 0.29", "-139.767, 161.277, -168.903, 0.29", "-141.209, 161.183, -169.064, 0.29", "-141.289, 161.178, -169.07, 0.29", "-143.087, 161.074, -169.177, 0.29", "-143.391, 161.061, -169.188, 0.29", "-144.881, 160.985, -169.2, 0.29", "-145.031, 160.975, -169.201, 0.29", "-147.506, 160.77, -169.216, 0.29", "-147.585, 160.762, -169.216, 0.29", "-148.635, 160.608, -169.242, 1.11", "-149.346, 160.477, -169.276, 1.77", "-149.413, 160.46, -169.281, 1.77", "-149.926, 160.327, -169.335, 1.77", "-150.037, 160.305, -169.349, 1.77", "-151.029, 160.147, -169.47, 0.52", "-151.098, 160.135, -169.478, 0.52", "-151.925, 159.956, -169.565, 0.29", "-152.086, 159.914, -169.574, 0.29", "-154.082, 159.133, -169.571, 0.29", "-154.3, 159.024, -169.559, 0.66", "-154.903, 158.619, -169.677, 0.66", "-155.532, 158.154, -170.011, 0.66", "-155.918, 157.835, -170.344, 0.22", "-156.694, 157.147, -171.379, 0.22", "-156.732, 157.108, -171.44, 0.74", "-158.559, 155.364, -174.406, 0.44", "-159.095, 154.891, -175.344, 0.44", "-159.128, 154.865, -175.403, 0.44", "-160.116, 154.192, -177.26, 0.29", "-160.927, 153.816, -178.5, 0.29", "-160.969, 153.801, -178.555, 0.29", "-161.751, 153.579, -179.436, 0.74", "-162.079, 153.497, -179.812, 0.74", "-163.877, 153.21, -181.861, 0.15", "-165.551, 153.107, -183.889, 0.15", "-166.252, 153.043, -185.434, 0.81", "-166.276, 153.039, -185.503, 0.81", "-166.379, 153.015, -185.879, 0.81", "-166.861, 152.802, -188.232, 0.15", "-167.122, 152.58, -190.164, 0.96", "-167.728, 151.478, -198.381, 0.44", "-167.74, 151.439, -198.623, 0.44", "-167.742, 151.426, -198.695, 0.44", "-167.729, 151.214, -199.79, 0.44", "-167.712, 151.161, -200.02, 0.44", "-167.643, 150.997, -200.636, 0.74", "-167.396, 150.484, -200.511, 0.74", "-167.332, 150.344, -200.474, 0.74" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-108.013, 162.351, -154.141, 0.29", "-108.712, 163.929, -155.679, 0.29", "-109.025, 164.564, -156.693, 0.29", "-109.043, 164.598, -156.752, 0.29", "-109.207, 164.889, -157.372, 0.66", "-109.365, 165.163, -157.958, 0.66", "-109.833, 166.026, -159.991, 0.66", "-110.423, 167.081, -162.763, 0.66", "-110.436, 167.105, -162.828, 0.66", "-110.893, 168.025, -165.374, 0.96", "-111.005, 168.274, -166.083, 0.96", "-111.393, 169.214, -168.808, 0.22", "-111.403, 169.239, -168.873, 0.22", "-111.551, 169.64, -169.789, 0.22", "-111.562, 169.669, -169.854, 0.22", "-111.73, 170.139, -170.809, 0.59", "-111.741, 170.172, -170.87, 0.59", "-111.887, 170.599, -171.523, 0.59", "-112.342, 171.809, -173.346, 0.59", "-112.736, 172.797, -174.857, 0.22", "-112.77, 172.887, -174.988, 0.22", "-113.026, 173.771, -176.116, 0.22", "-113.035, 173.815, -176.17, 0.22", "-113.093, 174.304, -176.714, 0.22", "-113.096, 174.35, -176.766, 0.22", "-113.102, 175.314, -177.88, 0.37", "-113.089, 175.935, -178.653, 0.37", "-113.048, 176.79, -179.74, 0.88", "-113.016, 177.267, -180.331, 0.88", "-112.808, 179.459, -183.536, 0.22", "-112.79, 180.067, -184.455, 0.22", "-112.807, 180.531, -185.166, 0.96", "-112.845, 180.926, -185.786, 1.4", "-112.851, 180.968, -185.854, 1.4", "-113.388, 183.636, -190.263, 0.22", "-113.612, 184.414, -191.566, 0.22", "-113.695, 184.641, -191.972, 0.59", "-113.762, 184.799, -192.247, 0.59", "-114.181, 185.63, -193.855, 0.22", "-114.201, 185.663, -193.917, 0.22", "-114.565, 186.153, -194.807, 0.81", "-114.614, 186.215, -194.935, 0.81", "-114.859, 186.512, -195.568, 0.81", "-116.276, 188.105, -198.995, 0.22", "-116.647, 188.476, -199.769, 0.22", "-116.796, 188.613, -200.069, 0.59", "-116.854, 188.665, -200.216, 0.59", "-116.935, 188.736, -200.456, 0.59", "-116.975, 188.773, -200.588, 0.59", "-117.145, 188.944, -201.209, 0.59", "-117.613, 189.474, -203.122, 0.96", "-118.368, 190.372, -206.159, 0.15", "-118.383, 190.389, -206.218, 0.15", "-118.627, 190.669, -207.13, 0.15", "-118.654, 190.7, -207.222, 0.74", "-118.73, 190.792, -207.454, 0.74", "-118.934, 191.013, -207.772, 0.74", "-119.853, 191.921, -208.434, 0.15", "-119.9, 191.965, -208.463, 0.15", "-120.373, 192.386, -208.716, 0.15", "-120.518, 192.517, -208.802, 0.15", "-121.205, 193.125, -209.192, 0.15", "-121.291, 193.203, -209.302, 0.15", "-121.608, 193.497, -209.852, 0.15", "-121.638, 193.526, -209.909, 0.15", "-122.1, 193.991, -210.962, 0.88", "-122.478, 194.37, -211.9, 1.25", "-123.741, 195.618, -215.198, 0.22", "-123.776, 195.651, -215.294, 0.22", "-124.187, 196.021, -216.42, 0.22", "-124.605, 196.382, -217.473, 0.66", "-124.667, 196.434, -217.619, 0.66", "-124.852, 196.587, -218.04, 0.66", "-126.593, 198.006, -221.155, 0.22", "-126.662, 198.064, -221.278, 0.22", "-126.951, 198.318, -221.902, 0.22", "-127.402, 198.753, -222.948, 0.96", "-127.436, 198.793, -223.032, 0.96", "-127.776, 199.258, -223.911, 0.96", "-127.796, 199.294, -223.967, 0.96", "-128.766, 201.28, -226.837, 0.29", "-128.781, 201.314, -226.888, 0.29", "-129.129, 202.238, -228.133, 0.29", "-129.144, 202.279, -228.187, 0.29", "-129.479, 203.219, -229.312, 1.03", "-129.678, 203.79, -229.897, 1.03", "-130.112, 205.071, -230.839, 0.22", "-130.348, 205.722, -231.564, 0.22", "-130.365, 205.767, -231.618, 0.22", "-130.604, 206.348, -232.3, 0.22", "-130.774, 206.74, -232.772, 1.03", "-130.991, 207.22, -233.354, 1.03", "-132.21, 209.845, -236.378, 0.22", "-132.915, 211.288, -238.218, 0.22", "-132.94, 211.335, -238.278, 0.22", "-133.427, 212.172, -239.371, 1.55", "-133.681, 212.574, -239.855, 2.06", "-133.918, 212.902, -240.228, 2.06", "-135.415, 214.682, -241.899, 0.44", "-136.022, 215.248, -242.632, 0.22", "-136.09, 215.305, -242.713, 0.22", "-136.795, 215.778, -243.463, 0.22", "-137.325, 216.075, -244.024, 0.22", "-137.382, 216.103, -244.126, 0.22", "-138.141, 216.533, -246.02, 1.03", "-138.16, 216.55, -246.085, 1.03", "-138.328, 216.766, -246.761, 1.03", "-138.341, 216.79, -246.826, 1.03", "-139.217, 219.0, -251.58, 0.29", "-139.36, 219.452, -252.392, 0.29", "-139.521, 220.099, -253.351, 0.22", "-139.625, 220.553, -253.97, 0.22", "-139.679, 220.824, -254.294, 0.22", "-139.9, 221.849, -255.349, 0.22", "-140.185, 223.041, -256.06, 1.03", "-140.302, 223.457, -256.365, 1.47", "-140.32, 223.508, -256.41, 1.47", "-140.523, 224.06, -256.979, 1.69" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-137.263, 223.564, -4.18162, 0.29", "-138.101, 222.901, -4.89051, 0.29", "-138.647, 222.469, -5.35265, 0.29", "-138.844, 222.313, -5.51865, 0.66", "-139.613, 221.705, -6.16912, 0.74" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-137.263, 223.564, -4.18162, 0.22", "-137.967, 224.444, -4.41183, 0.22", "-138.279, 224.843, -4.50491, 0.22", "-138.363, 224.951, -4.53007, 0.22", "-138.731, 225.421, -4.63968, 0.22", "-138.978, 225.737, -4.71333, 0.66", "-139.165, 225.977, -4.7692, 0.66", "-139.214, 226.039, -4.7692, 0.66" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-71.8373, 228.023, -46.5333, 0.74", "-72.056, 229.516, -47.749, 0.74", "-72.0611, 229.569, -47.7941, 0.74", "-72.1239, 230.804, -48.7902, 0.74", "-72.1782, 231.422, -49.2175, 1.03", "-72.21, 231.67, -49.3379, 1.03", "-72.2214, 231.767, -49.379, 1.03", "-72.3404, 232.891, -49.7446, 0.81", "-72.3783, 233.574, -49.9339, 0.52", "-72.4011, 234.86, -50.2282, 0.52", "-72.3481, 237.2, -50.8072, 0.52", "-72.2515, 238.523, -51.1373, 0.52", "-72.2461, 238.59, -51.1529, 0.52", "-72.0935, 240.048, -51.4409, 0.52", "-72.0807, 240.124, -51.4582, 0.52", "-71.7526, 241.055, -51.7283, 0.96", "-71.3428, 241.639, -51.9756, 0.96" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-71.8373, 228.023, -46.5333, 0.66", "-71.7921, 228.657, -46.5239, 0.66", "-71.751, 229.36, -46.5163, 0.66", "-71.6992, 230.351, -46.5077, 0.66", "-71.6439, 231.668, -46.4987, 0.59", "-71.5959, 232.868, -46.4917, 0.59", "-71.5931, 232.936, -46.4914, 0.59", "-71.5739, 233.365, -46.4973, 0.59", "-71.5712, 233.434, -46.4983, 0.59", "-71.5478, 233.964, -46.4842, 0.88", "-71.5334, 234.068, -46.4752, 0.88", "-71.427, 234.479, -46.3773, 0.88", "-71.3959, 234.562, -46.3518, 0.88", "-71.2029, 235.262, -46.1512, 0.88", "-71.0714, 235.837, -46.0236, 0.88", "-71.0559, 235.906, -46.013, 0.88", "-70.893, 236.696, -45.9234, 0.29", "-70.7234, 237.652, -45.8508, 0.29", "-70.4422, 239.398, -45.7791, 0.29", "-70.1837, 241.164, -45.7638, 0.29", "-70.0803, 241.852, -45.7816, 0.88", "-70.0343, 242.16, -45.7954, 0.96", "-69.9071, 243.107, -45.863, 0.37", "-69.7569, 244.176, -45.901, 0.37", "-69.7433, 244.244, -45.9005, 0.37", "-69.6166, 244.911, -45.8566, 1.03", "-69.4527, 245.732, -45.7618, 1.4", "-69.2655, 246.514, -45.6587, 1.4", "-69.0501, 247.343, -45.5367, 0.88", "-69.0139, 247.486, -45.5221, 0.88", "-68.9575, 247.695, -45.5127, 0.88", "-68.7043, 248.595, -45.5561, 0.52", "-68.5844, 248.99, -45.6055, 0.74", "-68.4112, 249.544, -45.7097, 0.74", "-68.1295, 250.506, -45.9371, 0.29", "-67.8518, 251.549, -46.2028, 0.29", "-67.6606, 252.465, -46.4356, 0.96", "-67.6495, 252.541, -46.4532, 0.96", "-67.5677, 253.322, -46.595, 1.25", "-67.5418, 253.638, -46.6387, 1.25", "-67.5158, 254.315, -46.6951, 0.29", "-67.5239, 255.515, -46.7615, 0.29", "-67.5747, 256.868, -46.788, 0.29", "-67.6302, 257.668, -46.8026, 1.18", "-67.6441, 257.807, -46.8044, 1.18", "-67.6947, 258.224, -46.8062, 1.18", "-67.7198, 258.382, -46.804, 1.18", "-67.7934, 258.725, -46.8304, 1.18", "-67.9241, 259.335, -46.942, 0.44", "-67.933, 259.4, -46.9624, 0.44", "-67.982, 260.468, -47.3294, 0.44", "-67.9803, 260.542, -47.3566, 0.44", "-67.8875, 261.424, -47.664, 1.18", "-67.7475, 262.441, -47.9775, 1.55", "-67.6102, 263.286, -48.2166, 0.22", "-67.4802, 264.11, -48.4277, 0.22", "-67.4693, 264.179, -48.44, 0.22", "-67.316, 265.406, -48.5422, 0.22", "-67.2094, 266.55, -48.5508, 0.22", "-67.2048, 266.619, -48.5491, 0.22", "-67.1833, 267.028, -48.5249, 1.03", "-67.1443, 268.286, -48.456, 0.29", "-67.1253, 269.388, -48.4042, 0.29", "-67.1141, 270.418, -48.3636, 0.29", "-67.1113, 270.499, -48.3613, 0.29", "-67.0888, 270.947, -48.3662, 0.81", "-67.0263, 271.777, -48.4157, 0.81", "-66.9611, 272.471, -48.5125, 0.81", "-66.9169, 272.905, -48.5787, 0.81", "-66.9102, 272.966, -48.586, 0.81", "-66.8382, 273.58, -48.6454, 0.88", "-66.8177, 273.718, -48.656, 0.88", "-66.7563, 274.078, -48.6795, 0.88", "-66.6201, 274.9, -48.7218, 1.03", "-66.3681, 276.521, -48.7791, 0.29", "-66.1607, 277.938, -48.7228, 0.29", "-65.9969, 279.084, -48.6493, 0.29", "-65.9866, 279.154, -48.6443, 0.29", "-65.9061, 279.677, -48.5996, 1.11", "-65.7137, 280.792, -48.4719, 1.33", "-65.4772, 282.301, -48.1915, 1.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "171.721, 184.966, 40.1092, 0.44", "172.822, 185.743, 39.9131, 0.44", "173.68, 186.388, 39.7633, 0.52", "173.736, 186.433, 39.7611, 0.52", "174.199, 186.849, 39.8455, 0.96", "174.655, 187.278, 39.9883, 0.29", "175.23, 187.82, 40.2181, 0.29", "175.275, 187.867, 40.2451, 0.29", "175.903, 188.564, 40.723, 0.59", "176.532, 189.245, 41.1909, 0.59", "176.568, 189.284, 41.2182, 0.59", "176.93, 189.609, 41.4494, 0.96", "177.431, 189.944, 41.6485, 0.96", "178.125, 190.34, 41.8142, 0.81", "178.685, 190.62, 41.8936, 0.29", "178.752, 190.649, 41.9006, 0.29", "179.74, 191.054, 42.0097, 0.29", "180.95, 191.493, 42.1459, 0.29", "181.018, 191.514, 42.1602, 0.29", "181.795, 191.716, 42.3738, 1.03", "182.442, 191.854, 42.6302, 1.33", "182.532, 191.866, 42.6736, 1.33", "182.862, 191.875, 42.8628, 1.33", "184.382, 191.806, 43.8157, 0.44", "185.269, 191.729, 44.3529, 0.44", "186.439, 191.601, 45.0157, 0.44", "187.298, 191.502, 45.5035, 0.44", "187.768, 191.453, 45.7478, 0.44", "187.897, 191.442, 45.8062, 0.44", "188.371, 191.428, 45.9217, 0.81", "189.07, 191.585, 45.9979, 0.81", "189.211, 191.64, 45.9984, 0.81", "189.793, 191.878, 45.9984, 0.81", "189.887, 191.912, 45.9984, 0.81", "190.906, 192.228, 45.9984, 0.29", "191.836, 192.441, 45.9984, 0.29", "191.935, 192.457, 45.9984, 0.29", "192.896, 192.571, 45.9984, 0.29", "193.331, 192.591, 45.9984, 0.66", "193.402, 192.588, 45.9984, 0.66", "193.949, 192.472, 45.9984, 0.88", "194.148, 192.399, 45.9984, 0.88", "194.364, 192.313, 45.9984, 0.88", "194.841, 192.106, 45.9984, 0.29", "194.897, 192.083, 46.0002, 0.29", "195.759, 191.751, 46.042, 0.29", "195.913, 191.697, 46.0511, 0.29", "196.633, 191.528, 46.0997, 0.29", "196.693, 191.515, 46.1041, 0.29", "198.036, 191.267, 46.2134, 0.29", "198.106, 191.258, 46.2195, 0.29", "198.972, 191.215, 46.3069, 0.29", "200.112, 191.207, 46.4288, 2.14" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "171.721, 184.966, 40.1092, 0.22", "172.319, 184.598, 40.1224, 0.22", "173.208, 184.057, 40.1424, 0.22", "174.715, 183.15, 40.176, 0.22", "175.737, 182.537, 40.1987, 0.22", "177.249, 181.631, 40.2323, 0.22", "177.394, 181.543, 40.2356, 0.44", "177.527, 181.472, 40.2421, 0.44", "177.941, 181.276, 40.2608, 0.44", "178.003, 181.244, 40.2618, 0.44" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "33.6312, 118.392, -61.0575, 0.66", "34.4197, 119.263, -61.054, 0.66", "35.2225, 120.119, -61.0474, 0.66", "36.0441, 120.959, -61.1091, 0.52", "36.5827, 121.505, -61.1706, 0.52", "37.0472, 121.991, -61.2356, 1.11", "37.0991, 122.051, -61.2439, 1.11", "37.6514, 122.675, -61.3494, 1.11", "38.2991, 123.556, -61.51, 0.96", "38.3364, 123.625, -61.5221, 0.96", "38.5854, 124.204, -61.6088, 0.96", "38.9502, 125.13, -61.7244, 0.96", "39.0001, 125.258, -61.7367, 0.96", "39.3511, 126.219, -61.7872, 0.96", "39.3984, 126.35, -61.7872, 0.96", "39.7392, 127.194, -61.7872, 1.4", "39.9642, 127.655, -61.7872, 1.69", "40.029, 127.778, -61.7872, 1.69", "40.3651, 128.407, -61.7872, 1.69", "40.4615, 128.602, -61.7909, 1.69", "40.8063, 129.364, -61.8156, 1.69", "41.1795, 130.393, -61.8604, 0.88", "41.4195, 131.227, -61.9022, 0.88", "41.4342, 131.296, -61.9058, 0.88", "41.5456, 132.096, -61.9497, 0.66", "41.5508, 132.165, -61.9535, 0.66", "41.5512, 133.13, -62.0047, 0.66", "41.551, 133.423, -62.0185, 0.66", "41.5613, 134.237, -62.0478, 0.66", "41.5833, 134.743, -62.0509, 1.03", "41.5865, 134.812, -62.049, 1.03", "41.5835, 135.589, -61.9343, 1.03", "41.5558, 136.348, -61.7467, 1.03", "41.5131, 136.933, -61.5733, 1.33", "41.4428, 137.577, -61.3714, 0.88", "41.3218, 138.455, -61.0967, 0.88", "41.0874, 139.923, -60.6454, 0.59", "41.0761, 139.988, -60.6263, 0.59", "40.8682, 141.169, -60.302, 0.59", "40.7479, 142.094, -60.0814, 0.59", "40.7189, 142.392, -60.0344, 0.88", "40.7155, 142.599, -60.023, 0.88", "40.7543, 143.457, -60.047, 0.88", "40.7593, 143.525, -60.0488, 0.88", "40.8496, 144.289, -60.0693, 0.88", "40.9722, 145.185, -60.0915, 0.66", "41.2042, 146.808, -60.1259, 0.66", "41.3143, 147.612, -60.14, 1.33", "41.4175, 148.467, -60.1346, 1.69", "41.4895, 149.204, -60.1166, 1.92", "41.5564, 149.883, -60.0854, 2.21", "41.6605, 150.862, -59.9943, 2.28", "41.7779, 151.873, -59.8697, 2.28", "41.9435, 152.978, -59.7093, 1.25", "42.0701, 153.619, -59.6019, 0.81", "42.2668, 154.417, -59.4654, 0.59", "42.5612, 155.357, -59.3177, 0.59", "42.6148, 155.494, -59.2987, 0.59", "42.9521, 156.192, -59.2255, 0.88", "43.3284, 156.892, -59.1771, 0.88", "44.0448, 158.202, -59.1168, 0.59", "44.6838, 159.428, -59.0901, 0.59", "45.0451, 160.157, -59.093, 0.59", "45.5446, 161.187, -59.0994, 0.52", "45.6045, 161.314, -59.1006, 0.52", "46.3048, 162.768, -59.1146, 0.52", "46.5888, 163.354, -59.1201, 1.03", "46.8556, 163.942, -59.1247, 1.03", "46.8928, 164.032, -59.1259, 1.03", "47.2748, 164.959, -59.141, 1.03", "47.3443, 165.113, -59.1447, 1.03", "47.574, 165.576, -59.16, 1.03", "47.6125, 165.647, -59.1626, 1.03", "48.1275, 166.549, -59.1963, 0.29", "48.2781, 166.791, -59.2042, 0.59", "48.6942, 167.396, -59.2195, 0.88", "49.2422, 168.173, -59.2348, 0.81", "49.3184, 168.302, -59.2363, 0.81", "49.6591, 168.96, -59.2399, 0.81", "50.245, 170.162, -59.2399, 0.37", "50.9414, 171.646, -59.2399, 0.37", "51.0046, 171.782, -59.2399, 0.37", "51.9965, 173.981, -59.2399, 0.37", "52.4156, 174.935, -59.2399, 0.37", "52.6958, 175.584, -59.2399, 0.37", "52.7828, 175.79, -59.2399, 0.37", "53.0497, 176.379, -59.2399, 0.81", "53.4095, 177.068, -59.2399, 1.4", "53.873, 177.85, -59.2431, 1.69", "53.9989, 178.076, -59.2446, 1.69", "54.4615, 178.959, -59.252, 1.18", "54.9618, 179.959, -59.2615, 0.81", "55.4426, 180.977, -59.2722, 0.66", "55.8443, 181.86, -59.2824, 0.52", "56.229, 182.761, -59.2934, 0.52", "56.255, 182.826, -59.2942, 0.52", "56.3909, 183.234, -59.2992, 0.81", "56.5605, 183.789, -59.3051, 0.81", "56.5842, 183.866, -59.3056, 0.81", "56.7101, 184.257, -59.3056, 0.29", "56.731, 184.335, -59.3056, 0.29", "56.9583, 185.586, -59.3056, 0.29", "57.0135, 186.396, -59.3056, 0.29", "57.0064, 186.851, -59.3056, 0.52", "56.9663, 187.768, -59.3056, 0.52", "56.8995, 188.547, -59.3056, 0.52", "56.7932, 189.399, -59.3056, 0.59", "56.6167, 190.202, -59.3056, 0.59", "56.5907, 190.268, -59.3056, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "33.6312, 118.392, -61.0575, 1.11", "36.6119, 120.684, -65.0805, 1.11", "37.0749, 121.04, -65.7054, 1.11", "37.883, 121.661, -66.796, 1.99", "38.3113, 121.99, -67.3741, 2.28", "38.782, 122.352, -68.0094, 2.28", "39.5311, 122.928, -69.0205, 0.81" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_146",
    "id" : "dend_146",
    "points3d" : [ "120.407, -189.427, 3.14088, 0.37", "120.81, -190.331, 3.30854, 0.37", "121.108, -190.978, 3.42016, 0.37", "121.235, -191.221, 3.46058, 0.59", "121.344, -191.401, 3.51922, 0.59", "121.809, -192.054, 3.90781, 0.59", "122.268, -192.612, 4.38629, 0.59", "122.303, -192.653, 4.42991, 0.59", "122.579, -193.021, 4.84558, 0.88", "123.117, -193.86, 5.78364, 1.18", "123.606, -194.716, 6.7455, 0.52", "123.925, -195.355, 7.49052, 0.52", "124.171, -195.947, 8.15033, 0.44", "124.415, -196.645, 8.85613, 0.37", "124.583, -197.243, 9.39963, 0.37", "124.612, -197.375, 9.49338, 0.37", "124.656, -197.603, 9.61923, 0.81", "124.779, -198.15, 9.89172, 0.81", "124.805, -198.213, 9.93381, 0.81", "125.163, -198.844, 10.4672, 0.59", "125.195, -198.884, 10.515, 0.59", "125.574, -199.291, 11.0962, 0.59", "125.649, -199.354, 11.1965, 0.59", "126.395, -199.852, 12.1097, 0.52", "126.455, -199.885, 12.1903, 0.52", "127.422, -200.291, 13.3951, 0.52", "127.461, -200.306, 13.4393, 0.52", "128.159, -200.523, 14.1764, 0.52", "128.207, -200.54, 14.2243, 0.52", "129.243, -200.942, 15.1469, 1.25", "129.98, -201.281, 15.7369, 1.92", "130.498, -201.562, 16.1014, 1.92", "130.575, -201.605, 16.153, 1.92", "131.717, -202.284, 16.8605, 0.52", "131.78, -202.321, 16.892, 0.52", "132.628, -202.819, 17.1825, 0.37", "132.687, -202.851, 17.1994, 0.37", "132.937, -202.977, 17.2394, 0.81", "133.395, -203.203, 17.262, 1.11", "133.791, -203.393, 17.2948, 1.11", "133.986, -203.492, 17.3267, 1.11", "134.751, -203.902, 17.5023, 0.29", "135.853, -204.532, 17.7954, 0.29", "136.678, -205.045, 18.1866, 0.29", "137.784, -205.78, 18.9295, 0.81", "138.098, -205.999, 19.1976, 0.81", "138.184, -206.063, 19.289, 0.81", "138.637, -206.398, 19.8851, 0.81", "139.755, -207.205, 21.5932, 0.81", "139.794, -207.229, 21.6466, 0.81", "140.114, -207.388, 21.9203, 0.81", "140.172, -207.412, 21.9542, 0.81", "140.734, -207.618, 22.2221, 0.52", "141.08, -207.728, 22.3104, 0.52", "141.806, -207.948, 22.3104, 0.52", "142.52, -208.171, 22.3104, 1.18", "143.127, -208.37, 22.3104, 1.47" ],
    "parent" : "dend_144",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_145",
    "id" : "dend_145",
    "points3d" : [ "120.407, -189.427, 3.14088, 0.22", "121.956, -189.266, 4.15439, 0.22", "122.319, -189.229, 4.39203, 0.59", "122.622, -189.197, 4.59028, 0.88", "122.824, -189.176, 4.723, 0.88", "123.208, -189.136, 4.97397, 0.88" ],
    "parent" : "dend_144",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_141",
    "id" : "dend_141",
    "points3d" : [ "101.48, -183.494, -1.58644, 0.29", "101.438, -185.498, -4.08444, 0.29", "101.494, -186.644, -5.20132, 0.29", "101.5, -186.7, -5.24142, 0.29", "101.643, -187.74, -5.87094, 0.29", "101.783, -188.59, -6.3593, 0.88", "101.858, -189.045, -6.59923, 1.25", "101.927, -189.398, -6.69239, 1.47", "102.067, -190.381, -6.91074, 1.33", "102.075, -190.523, -6.95111, 1.33", "102.053, -191.454, -7.31896, 1.11", "102.015, -192.163, -7.64795, 0.37", "101.974, -192.845, -8.0112, 0.37", "101.938, -193.473, -8.36983, 0.37", "101.88, -194.397, -8.93336, 0.37", "101.86, -195.365, -9.42725, 0.37", "101.863, -195.566, -9.51229, 0.66", "101.878, -195.701, -9.57182, 0.66", "101.997, -196.279, -9.81538, 0.66", "102.015, -196.341, -9.83868, 0.66", "102.435, -197.927, -10.2633, 0.66", "102.451, -197.992, -10.2776, 0.66", "102.643, -198.893, -10.568, 0.52", "102.716, -199.248, -10.7025, 0.52", "102.729, -199.319, -10.7333, 0.52", "102.783, -199.579, -10.8704, 0.81", "102.957, -200.3, -11.3422, 0.81", "103.349, -201.708, -12.2845, 0.44", "103.477, -202.124, -12.5592, 0.74", "103.5, -202.187, -12.6014, 0.74", "103.903, -203.046, -13.1768, 0.59", "104.347, -203.752, -13.7104, 0.29", "104.596, -204.04, -13.9457, 0.29", "104.842, -204.261, -14.1149, 0.74", "105.163, -204.535, -14.3526, 0.96", "105.67, -204.961, -14.7181, 1.25", "106.347, -205.564, -15.2132, 0.96", "106.722, -205.978, -15.616, 0.96", "106.934, -206.302, -15.9602, 0.74", "107.265, -207.218, -16.9384, 0.37", "107.304, -207.636, -17.3977, 0.37", "107.21, -208.162, -18.0028, 0.37", "106.877, -209.239, -19.1829, 0.37", "106.789, -209.492, -19.4488, 0.88", "106.524, -210.417, -20.335, 0.74", "106.308, -211.345, -21.1386, 0.29", "106.173, -212.292, -21.9559, 0.29", "106.133, -213.364, -22.8311, 0.29", "106.14, -214.069, -23.3491, 0.29", "106.157, -215.138, -24.0817, 0.29", "106.155, -215.199, -24.118, 0.29", "106.132, -215.902, -24.4849, 0.74", "106.115, -216.512, -24.7654, 0.81", "105.999, -217.471, -25.1705, 0.74", "105.867, -218.426, -25.4885, 0.74", "105.755, -219.351, -25.7142, 1.47", "105.682, -220.394, -25.8876, 0.52", "105.648, -221.7, -26.018, 0.52", "105.664, -222.335, -26.0556, 0.52", "105.791, -224.507, -26.0824, 0.52", "105.835, -225.276, -26.084, 1.33", "105.854, -226.068, -26.073, 1.92", "105.827, -226.438, -26.0636, 2.06", "105.707, -227.293, -26.0644, 0.96", "105.516, -228.2, -26.0929, 0.59", "105.241, -229.08, -26.1503, 0.52", "104.891, -230.104, -26.296, 0.52", "104.392, -231.504, -26.567, 0.52", "104.344, -231.648, -26.6008, 0.74", "104.188, -232.22, -26.7926, 0.74", "104.031, -232.927, -27.0855, 0.29", "103.871, -234.086, -27.6941, 0.29", "103.866, -234.155, -27.7359, 0.29", "103.834, -234.719, -28.0798, 0.29", "103.744, -235.922, -28.7973, 0.29", "103.615, -237.108, -29.4712, 0.29", "103.464, -238.353, -30.085, 1.18", "103.364, -239.007, -30.3626, 1.84", "103.24, -239.735, -30.642, 1.69", "102.92, -241.22, -31.1452, 0.37", "102.756, -241.906, -31.3373, 0.37", "102.41, -243.318, -31.6974, 0.37", "102.391, -243.393, -31.7128, 0.37", "102.125, -244.426, -31.9229, 0.37", "101.948, -245.11, -32.0723, 0.37", "101.872, -245.368, -32.1374, 0.81", "101.854, -245.422, -32.1603, 0.81", "101.669, -245.806, -32.4854, 0.29", "101.516, -246.127, -32.7791, 0.29", "101.235, -246.707, -33.3416, 0.52", "100.986, -247.246, -33.8335, 0.74", "100.757, -247.707, -34.22, 0.74", "100.088, -248.985, -35.2047, 0.44", "99.6367, -249.878, -35.7629, 0.44", "99.5275, -250.119, -35.9093, 0.66", "99.3691, -250.535, -36.1318, 0.81", "99.2432, -250.991, -36.3481, 0.81", "99.171, -251.315, -36.4869, 0.52", "98.9165, -252.599, -36.9208, 0.52", "98.6251, -254.149, -37.4437, 0.81", "98.5375, -254.553, -37.5813, 1.18", "98.3882, -255.161, -37.7898, 1.47", "98.1951, -255.925, -38.0526, 1.47", "97.9611, -256.688, -38.3061, 0.88", "97.6834, -257.398, -38.5071, 0.66", "97.3791, -258.082, -38.5815, 0.66", "97.3439, -258.151, -38.5906, 0.66" ],
    "parent" : "dend_133",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_134",
    "id" : "dend_134",
    "points3d" : [ "101.48, -183.494, -1.58644, 0.74", "101.506, -183.569, -1.57778, 0.74", "101.792, -184.394, -1.38154, 0.74", "101.906, -184.754, -1.28544, 1.03", "102.066, -185.327, -1.13334, 1.18", "102.083, -185.394, -1.11577, 1.18", "102.324, -186.421, -0.859211, 0.52", "102.475, -187.117, -0.69007, 0.74", "102.578, -187.668, -0.554824, 0.88", "102.661, -188.151, -0.44232, 1.11", "102.673, -188.22, -0.428274, 1.11", "102.788, -188.789, -0.33322, 0.66", "102.964, -189.442, -0.319355, 0.37", "103.305, -190.306, -0.402683, 0.37", "103.406, -190.503, -0.434786, 0.37", "103.801, -191.096, -0.562875, 1.03", "103.893, -191.218, -0.594008, 1.03", "104.797, -192.185, -0.837086, 0.29", "105.323, -192.66, -0.940096, 0.29", "105.378, -192.703, -0.948129, 0.29", "106.294, -193.405, -1.01768, 0.29", "106.416, -193.492, -1.01789, 0.29", "107.215, -194.066, -0.952353, 0.81", "107.878, -194.56, -0.767287, 1.25", "107.959, -194.624, -0.73852, 1.25", "108.451, -195.036, -0.538994, 1.25", "108.499, -195.082, -0.518284, 1.25", "108.736, -195.351, -0.42707, 1.25", "109.42, -196.245, -0.221049, 0.59", "109.459, -196.302, -0.210849, 0.59", "109.728, -196.683, -0.118466, 0.37", "110.185, -197.392, 0.0718805, 0.37", "110.47, -197.866, 0.198832, 0.37", "110.69, -198.235, 0.296796, 0.81", "111.0, -198.761, 0.421628, 0.59", "111.481, -199.546, 0.639687, 0.29", "111.789, -200.015, 0.790565, 0.29", "112.08, -200.388, 0.948784, 0.52", "112.578, -200.962, 1.21241, 0.29", "112.901, -201.289, 1.40048, 0.37", "112.982, -201.355, 1.44462, 0.37", "113.505, -201.722, 1.7028, 0.37", "114.429, -202.26, 2.18089, 0.37", "114.486, -202.288, 2.21112, 0.37", "115.446, -202.708, 2.72584, 0.74", "115.823, -202.856, 2.91834, 1.03", "115.882, -202.879, 2.94854, 1.25", "115.942, -202.904, 2.97647, 1.25", "116.249, -203.084, 3.08748, 1.25", "116.649, -203.378, 3.23304, 0.74", "117.015, -203.699, 3.35452, 0.52", "117.767, -204.423, 3.61346, 0.52", "118.492, -205.136, 3.84615, 0.52", "119.258, -205.933, 4.09061, 0.52", "119.804, -206.542, 4.25873, 0.74", "120.321, -207.146, 4.41743, 0.52", "120.75, -207.669, 4.54126, 0.52", "121.443, -208.517, 4.69682, 0.52", "121.82, -208.947, 4.78221, 1.4", "122.436, -209.616, 4.90606, 1.69" ],
    "parent" : "dend_133",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_126",
    "id" : "dend_126",
    "points3d" : [ "-52.9078, -241.445, 7.03381, 0.29", "-54.1212, -241.664, 7.17133, 0.29", "-54.1903, -241.676, 7.17916, 0.29", "-55.8837, -241.982, 7.37109, 0.29", "-55.9549, -241.995, 7.37916, 0.29" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_121",
    "id" : "dend_121",
    "points3d" : [ "-52.9078, -241.445, 7.03381, 0.81", "-53.1548, -241.841, 6.97585, 0.81", "-53.4326, -242.151, 6.92415, 0.81", "-53.8809, -242.535, 6.85714, 0.44", "-54.7411, -243.185, 6.74126, 0.44", "-55.5888, -243.789, 6.70709, 0.44", "-56.3209, -244.32, 6.72264, 0.44", "-56.9379, -244.722, 6.76236, 0.81", "-57.5775, -245.146, 6.83366, 0.81", "-57.6346, -245.184, 6.84303, 0.81", "-58.4656, -245.891, 7.05355, 0.29", "-58.9402, -246.537, 7.2457, 0.29", "-58.9669, -246.599, 7.26025, 0.29", "-59.1831, -247.551, 7.41951, 0.29", "-59.1924, -247.628, 7.42903, 0.29", "-59.2767, -248.648, 7.49222, 0.29", "-59.2988, -249.012, 7.49475, 0.66", "-59.3331, -249.67, 7.50103, 0.88", "-59.3956, -250.557, 7.45195, 0.66", "-59.4058, -250.653, 7.4366, 0.66", "-59.6111, -252.108, 7.07612, 0.66", "-59.7308, -252.671, 6.87844, 0.81", "-59.8233, -253.0, 6.73253, 1.11", "-60.2527, -254.001, 6.15629, 0.81", "-60.6753, -254.603, 5.63062, 0.37", "-60.7216, -254.644, 5.58022, 0.37", "-61.0385, -254.794, 5.27359, 0.37", "-61.1439, -254.831, 5.18709, 0.37", "-61.6283, -254.964, 4.86647, 0.37", "-62.6238, -255.202, 4.43356, 0.37", "-63.2052, -255.371, 4.24592, 0.37", "-63.2771, -255.399, 4.2242, 0.37", "-63.6685, -255.605, 4.12228, 0.96", "-63.7272, -255.641, 4.10923, 0.96", "-64.1899, -255.978, 3.99596, 1.18", "-64.7306, -256.418, 3.82586, 1.18", "-65.3364, -256.926, 3.57414, 0.96", "-65.985, -257.515, 3.26666, 0.74", "-66.0375, -257.569, 3.23937, 0.74", "-66.7001, -258.41, 2.84248, 0.59", "-67.246, -259.317, 2.49169, 0.52", "-67.27, -259.37, 2.47877, 0.52", "-67.5504, -260.107, 2.38113, 0.52", "-67.8207, -260.941, 2.33849, 0.52", "-68.2064, -262.29, 2.46407, 0.52", "-68.429, -263.15, 2.65489, 0.52", "-68.7585, -264.418, 3.00265, 0.66", "-68.9463, -265.077, 3.19107, 1.03", "-69.1064, -265.595, 3.34966, 1.25", "-69.5997, -267.033, 3.81757, 0.74", "-69.8912, -267.745, 4.05776, 0.66", "-70.4527, -268.879, 4.28963, 0.66", "-70.7298, -269.319, 4.3122, 0.96", "-70.7778, -269.382, 4.30652, 0.96", "-71.0915, -269.699, 4.21705, 0.96", "-71.4729, -270.011, 4.04103, 0.74", "-72.4896, -270.771, 3.53362, 0.44", "-73.0615, -271.237, 3.24861, 0.44", "-73.0985, -271.29, 3.22199, 0.44", "-73.3048, -271.72, 3.04149, 0.44", "-73.4802, -272.188, 2.94646, 0.44", "-73.7102, -272.924, 2.90676, 0.44", "-74.0424, -273.947, 3.07414, 0.44", "-74.4661, -275.101, 3.37865, 0.44", "-74.7094, -275.63, 3.58851, 0.44", "-75.3944, -276.91, 4.23264, 0.44", "-75.4334, -276.969, 4.26991, 0.44", "-76.0376, -277.739, 4.86736, 0.37", "-76.3337, -278.08, 5.1997, 0.37", "-76.7512, -278.595, 5.739, 0.37", "-76.8675, -278.785, 5.90971, 0.96", "-77.0736, -279.242, 6.20803, 1.33", "-77.2084, -279.591, 6.41346, 1.33", "-77.4361, -280.276, 6.76064, 1.18", "-77.6232, -280.799, 7.02493, 0.59", "-77.8485, -281.377, 7.30287, 0.44", "-78.13, -281.981, 7.61156, 0.44", "-78.4203, -282.515, 7.89816, 0.44", "-78.5379, -282.722, 7.99624, 0.44", "-78.7904, -283.154, 8.15465, 0.44", "-78.8302, -283.241, 8.17766, 0.44", "-78.9251, -283.523, 8.22678, 0.44", "-79.0561, -284.134, 8.27747, 0.37", "-79.1663, -284.985, 8.2873, 0.37", "-79.1738, -285.065, 8.28646, 0.37", "-79.2858, -286.53, 8.24948, 0.37", "-79.2956, -286.64, 8.24492, 0.37", "-79.3555, -287.218, 8.21128, 0.37", "-79.4254, -287.729, 8.16706, 1.03", "-79.5761, -288.492, 8.0465, 1.25", "-79.7142, -289.033, 7.93238, 1.55", "-79.7962, -289.281, 7.8674, 1.55", "-79.9139, -289.615, 7.7756, 1.55", "-80.0811, -290.004, 7.6669, 1.4", "-80.5725, -290.955, 7.38599, 0.37", "-80.8613, -291.448, 7.23878, 0.37", "-81.1728, -291.923, 7.11361, 0.37", "-81.2174, -291.987, 7.09965, 0.37", "-81.6943, -292.635, 6.99459, 0.37", "-82.0467, -293.139, 6.93009, 0.74", "-82.1995, -293.415, 6.91114, 0.96", "-82.4306, -294.025, 6.83502, 0.96", "-82.4548, -294.159, 6.81252, 0.96", "-82.4779, -294.586, 6.73031, 0.96", "-82.4641, -295.503, 6.54208, 0.52", "-82.476, -296.3, 6.3852, 0.52", "-82.5119, -296.72, 6.30575, 0.52", "-82.6569, -297.398, 6.21227, 0.52", "-82.8293, -297.866, 6.17555, 0.88", "-83.2373, -298.588, 6.16531, 1.18", "-83.7598, -299.287, 6.1981, 1.62", "-84.0519, -299.62, 6.20232, 1.62", "-84.753, -300.349, 6.19345, 0.81", "-85.106, -300.689, 6.17506, 0.59", "-85.7432, -301.282, 6.11982, 0.59", "-85.8159, -301.348, 6.11122, 0.59", "-86.4698, -301.94, 6.00419, 0.59", "-86.9475, -302.39, 5.89546, 1.69", "-87.3545, -302.762, 5.75511, 1.99", "-87.9821, -303.319, 5.52013, 1.99" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_113",
    "id" : "dend_113",
    "points3d" : [ "-30.2514, -334.852, 2.82881, 0.74", "-31.2485, -335.55, 2.86162, 0.74", "-32.3135, -336.354, 2.67143, 0.74", "-32.98, -336.86, 2.49249, 0.66", "-33.2614, -337.074, 2.40386, 0.66", "-33.8285, -337.499, 2.21171, 0.22", "-34.6245, -338.074, 1.93527, 0.22", "-35.757, -338.757, 1.57603, 0.22", "-35.839, -338.804, 1.53655, 0.22", "-36.0052, -338.878, 1.44946, 0.81", "-36.1377, -338.915, 1.38901, 0.81", "-36.4192, -338.924, 1.30384, 0.81", "-36.7756, -338.882, 1.22461, 0.96", "-37.3748, -338.813, 1.14895, 0.44", "-38.1777, -338.756, 1.0369, 0.44", "-38.2479, -338.752, 1.02916, 0.44", "-39.2377, -338.708, 0.992381, 0.44", "-39.7028, -338.695, 0.998964, 0.81", "-40.3958, -338.687, 1.04617, 1.03", "-40.8194, -338.673, 1.09911, 1.03", "-42.2793, -338.578, 1.34213, 0.52", "-43.0758, -338.49, 1.49327, 0.52", "-43.1846, -338.476, 1.53015, 0.52", "-43.8156, -338.37, 1.79646, 0.52", "-44.1933, -338.293, 1.97544, 1.18", "-44.7789, -338.171, 2.3266, 1.62", "-45.4294, -338.039, 2.78812, 1.62", "-46.9901, -337.845, 3.89647, 0.29", "-47.5987, -337.838, 4.3212, 0.29", "-47.7241, -337.846, 4.40548, 0.29", "-49.0129, -338.024, 5.21159, 0.29", "-49.083, -338.038, 5.25247, 0.29", "-50.2404, -338.321, 5.80724, 0.29", "-51.1005, -338.555, 6.05906, 0.29", "-51.9026, -338.777, 6.23669, 0.29", "-52.2905, -338.88, 6.2587, 0.44", "-52.4357, -338.918, 6.24072, 0.44", "-53.0406, -339.06, 6.13208, 0.44", "-53.3421, -339.12, 6.05971, 0.44", "-53.9938, -339.276, 5.89412, 0.44", "-55.011, -339.604, 5.62344, 0.81", "-55.5371, -339.782, 5.48277, 0.81", "-55.5951, -339.804, 5.46964, 0.81", "-56.4875, -340.138, 5.29551, 0.81", "-57.1122, -340.352, 5.20852, 0.29", "-57.7626, -340.56, 5.15225, 0.29", "-57.8988, -340.597, 5.1487, 0.29", "-59.3422, -340.941, 5.11152, 0.29", "-59.4813, -340.974, 5.10819, 0.29", "-60.7383, -341.256, 5.07975, 0.29", "-60.8663, -341.286, 5.07731, 0.29", "-61.5842, -341.465, 5.07731, 0.29", "-61.6539, -341.485, 5.07987, 0.29", "-62.4783, -341.762, 5.14766, 0.29", "-62.5435, -341.788, 5.15577, 0.29", "-62.9204, -341.961, 5.22304, 0.52", "-63.3365, -342.152, 5.30735, 0.52", "-63.9504, -342.419, 5.44508, 0.29", "-64.0903, -342.471, 5.47709, 0.29", "-64.8065, -342.658, 5.63928, 0.29", "-65.1386, -342.715, 5.70485, 0.74", "-65.2103, -342.72, 5.71673, 0.74", "-65.5801, -342.694, 5.7606, 0.74", "-65.6587, -342.677, 5.75642, 0.74", "-66.1268, -342.526, 5.6846, 0.74", "-66.4867, -342.378, 5.60718, 0.74", "-66.5818, -342.338, 5.57624, 0.74", "-66.9615, -342.196, 5.43468, 0.52", "-67.7531, -341.959, 5.12649, 0.37", "-68.2279, -341.859, 4.94671, 0.37", "-69.2658, -341.72, 4.55988, 0.37", "-70.0292, -341.702, 4.3048, 1.11", "-70.4636, -341.757, 4.16389, 1.11", "-71.0863, -341.911, 3.9714, 0.59", "-71.6195, -342.099, 3.82688, 0.29", "-71.7591, -342.16, 3.78762, 0.29", "-72.4941, -342.527, 3.60243, 0.29", "-73.6595, -343.094, 3.37221, 0.29", "-73.7287, -343.126, 3.34843, 0.29", "-73.9068, -343.198, 3.27061, 0.96", "-73.9691, -343.221, 3.24086, 0.96", "-74.9885, -343.558, 2.79005, 0.96", "-75.0614, -343.578, 2.76238, 0.96", "-76.7017, -343.961, 2.2485, 0.29", "-77.7411, -344.199, 1.95099, 0.29", "-78.5661, -344.38, 1.73316, 0.29", "-79.2424, -344.526, 1.57716, 0.44", "-80.165, -344.698, 1.28909, 0.44", "-80.2311, -344.708, 1.26648, 0.44", "-81.2028, -344.913, 1.0175, 0.44", "-81.332, -344.947, 0.966833, 0.44", "-82.3844, -345.265, 0.458148, 0.44", "-84.1266, -345.845, -0.46317, 0.44", "-84.1854, -345.867, -0.495607, 0.44", "-85.8358, -346.474, -1.4345, 0.44", "-87.3336, -347.048, -2.38518, 0.44", "-87.3896, -347.07, -2.42197, 0.44", "-88.1887, -347.399, -2.96217, 0.44", "-88.8714, -347.688, -3.38693, 0.44", "-89.9877, -348.132, -4.12085, 0.29", "-90.7756, -348.435, -4.82382, 1.25", "-91.2085, -348.63, -5.24323, 1.47", "-91.2546, -348.654, -5.29115, 1.47", "-91.7278, -348.924, -5.86062, 1.47", "-91.7736, -348.953, -5.91934, 1.47", "-93.3233, -349.933, -7.84283, 0.29", "-93.4098, -349.984, -7.94188, 0.29", "-94.2441, -350.423, -8.77343, 0.29", "-94.7648, -350.673, -9.28085, 0.81", "-94.8136, -350.694, -9.32692, 0.81", "-95.3792, -350.934, -9.78234, 0.81", "-95.6285, -351.027, -9.9476, 0.81", "-96.5854, -351.377, -10.6548, 0.81", "-97.9812, -351.848, -11.7829, 0.59", "-98.0616, -351.873, -11.8506, 0.59", "-98.4573, -351.976, -12.2526, 0.59", "-99.068, -352.086, -12.9869, 0.22", "-99.1112, -352.089, -13.0419, 0.22", "-99.3282, -352.064, -13.3465, 0.22", "-99.7321, -351.968, -13.8465, 0.74", "-100.431, -351.815, -14.6401, 0.74", "-100.637, -351.771, -14.86, 0.74", "-100.972, -351.739, -15.1334, 0.74", "-101.765, -351.715, -15.6753, 0.22", "-101.828, -351.717, -15.709, 0.22", "-102.794, -351.89, -16.0256, 0.22", "-102.881, -351.915, -16.0432, 0.22", "-103.86, -352.272, -16.1893, 0.22", "-103.926, -352.3, -16.1958, 0.22", "-104.13, -352.386, -16.2026, 0.66", "-105.325, -352.88, -16.2436, 0.29", "-105.487, -352.937, -16.249, 0.29", "-106.399, -353.222, -16.2762, 0.29", "-106.547, -353.26, -16.28, 0.29", "-107.434, -353.428, -16.2972, 0.29", "-107.504, -353.437, -16.298, 0.29", "-108.527, -353.464, -16.298, 0.29", "-108.643, -353.463, -16.298, 0.29", "-109.144, -353.447, -16.4053, 0.81", "-109.623, -353.483, -16.6045, 1.03", "-109.795, -353.511, -16.7227, 1.03", "-110.069, -353.573, -16.9395, 1.03", "-110.121, -353.587, -16.9842, 1.03", "-111.807, -354.104, -18.3601, 0.44", "-112.638, -354.386, -19.026, 0.44", "-113.318, -354.619, -19.5456, 1.11", "-113.814, -354.788, -19.899, 0.81", "-114.188, -354.917, -20.1465, 1.11", "-114.963, -355.115, -20.5446, 1.69", "-115.025, -355.128, -20.5749, 1.69", "-115.268, -355.184, -20.7313, 1.69", "-115.323, -355.201, -20.7725, 1.69", "-116.071, -355.541, -21.4301, 1.4", "-116.915, -356.174, -22.1079, 1.11", "-118.167, -357.314, -23.042, 1.25", "-118.589, -357.742, -23.3286, 0.29", "-118.64, -357.798, -23.3589, 0.29", "-119.439, -358.654, -23.7138, 0.29", "-121.054, -360.405, -24.196, 0.29", "-121.166, -360.525, -24.2182, 0.66", "-121.278, -360.624, -24.2239, 0.66", "-121.689, -360.94, -24.2423, 0.66", "-122.891, -361.758, -24.1737, 0.22", "-123.112, -361.895, -24.111, 0.37", "-123.232, -361.965, -24.0542, 0.37", "-124.649, -362.813, -23.2942, 0.22", "-124.705, -362.845, -23.2626, 0.22", "-125.958, -363.58, -22.5078, 0.52", "-127.403, -364.445, -21.5838, 0.22", "-128.555, -365.109, -20.8588, 0.22", "-128.666, -365.169, -20.7926, 0.22", "-129.469, -365.568, -20.3369, 0.22", "-129.554, -365.606, -20.302, 0.22", "-129.952, -365.753, -20.2387, 0.81", "-130.031, -365.772, -20.2387, 0.81", "-130.71, -365.932, -20.2387, 0.81", "-130.777, -365.949, -20.2367, 0.81", "-131.385, -366.121, -20.1996, 0.96", "-131.452, -366.141, -20.1941, 0.96", "-131.743, -366.236, -20.1644, 0.96", "-131.82, -366.259, -20.1561, 0.96", "-132.332, -366.42, -20.0953, 0.37", "-132.441, -366.451, -20.0828, 0.37", "-132.991, -366.595, -20.0223, 0.22", "-133.06, -366.611, -20.0159, 0.22", "-133.628, -366.736, -19.9446, 0.22", "-133.793, -366.779, -19.9245, 0.52", "-133.93, -366.816, -19.9088, 0.52", "-134.211, -366.898, -19.8786, 0.52", "-134.37, -366.947, -19.8617, 0.52", "-135.197, -367.211, -19.7787, 0.29", "-136.42, -367.63, -19.6593, 0.29", "-136.488, -367.653, -19.6534, 0.29", "-137.704, -368.071, -19.5624, 0.29", "-137.847, -368.123, -19.5526, 0.29", "-138.142, -368.233, -19.5362, 0.59", "-138.219, -368.264, -19.5343, 0.59", "-139.023, -368.611, -19.5049, 0.59", "-139.164, -368.668, -19.4993, 0.59", "-139.594, -368.816, -19.4816, 0.29", "-139.664, -368.837, -19.479, 0.29", "-140.363, -369.019, -19.4554, 0.29", "-140.432, -369.033, -19.4534, 0.29", "-141.472, -369.04, -19.4352, 0.22", "-142.055, -368.979, -19.4301, 0.22", "-142.134, -368.964, -19.4301, 0.22", "-142.226, -368.941, -19.4301, 0.44", "-142.471, -368.86, -19.4301, 0.22", "-144.048, -368.266, -19.4301, 0.22", "-144.113, -368.234, -19.4301, 0.22", "-144.113, -368.234, -19.4301, 0.44" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "-30.2514, -334.852, 2.82881, 0.81", "-29.9765, -335.364, 2.82214, 0.81", "-29.9047, -335.494, 2.82052, 0.81", "-29.6014, -336.035, 2.81462, 0.59", "-28.9026, -337.415, 2.80103, 0.59", "-28.8481, -337.541, 2.79989, 0.59", "-28.6444, -338.072, 2.79538, 0.37", "-28.618, -338.174, 2.78876, 0.37", "-28.5295, -339.036, 2.68656, 0.29", "-28.6185, -339.537, 2.59333, 0.52", "-28.8153, -339.988, 2.47707, 0.81", "-28.8471, -340.047, 2.45651, 0.81", "-29.3474, -340.821, 2.11902, 0.52", "-29.6657, -341.284, 1.89036, 0.52", "-30.0567, -341.809, 1.59256, 0.52", "-30.1028, -341.879, 1.55193, 0.52", "-30.4924, -342.534, 1.17501, 0.81", "-30.5233, -342.597, 1.13421, 0.81", "-30.5871, -342.831, 0.998764, 0.81", "-30.6054, -342.95, 0.927678, 0.81", "-30.6204, -343.21, 0.780196, 0.81", "-30.6215, -343.274, 0.749712, 0.81", "-30.612, -344.412, 0.351967, 0.29", "-30.5975, -345.509, 0.0275374, 0.29", "-30.5957, -345.575, 0.0102321, 0.29", "-30.5718, -345.882, -0.0563944, 0.59", "-30.4661, -346.5, -0.209281, 0.96", "-30.2171, -347.293, -0.434681, 1.03", "-30.0105, -347.754, -0.566583, 1.25", "-29.9445, -347.891, -0.600458, 1.25", "-29.6744, -348.444, -0.720921, 1.25", "-29.0664, -349.737, -0.978245, 0.88", "-28.5274, -350.921, -1.1982, 0.29", "-28.2734, -351.566, -1.29938, 0.29", "-27.9139, -352.849, -1.43687, 0.29", "-27.9001, -352.945, -1.43961, 0.52", "-27.9367, -353.447, -1.38943, 0.52", "-28.0646, -353.983, -1.24565, 0.52", "-28.2279, -354.497, -1.10456, 0.29", "-28.2388, -354.557, -1.09589, 0.29", "-28.2297, -355.14, -1.09589, 0.29", "-28.224, -355.209, -1.09589, 0.29", "-28.0955, -356.196, -1.03066, 0.29", "-28.0581, -356.445, -1.00068, 0.74", "-28.0185, -356.876, -0.925881, 0.81", "-28.024, -356.975, -0.90645, 0.81", "-28.0944, -357.347, -0.835075, 0.81", "-28.2599, -358.054, -0.703623, 0.29", "-28.2753, -358.12, -0.692979, 0.29", "-28.3515, -358.545, -0.639106, 0.44", "-28.493, -359.531, -0.538467, 0.44", "-28.5958, -360.451, -0.466613, 0.44", "-28.6025, -360.556, -0.46168, 0.44", "-28.5968, -361.675, -0.451139, 0.44", "-28.5759, -362.194, -0.445243, 0.44", "-28.5687, -362.273, -0.441366, 0.44", "-28.5335, -362.702, -0.404495, 0.81", "-28.5001, -363.333, -0.332684, 0.81", "-28.5614, -364.201, -0.223296, 0.37", "-28.573, -364.261, -0.214899, 0.37", "-28.8829, -365.237, -0.0824756, 0.29", "-29.2943, -366.166, 0.102321, 0.29", "-29.3304, -366.224, 0.116447, 0.29", "-30.0887, -367.186, 0.381457, 0.29", "-30.2521, -367.37, 0.434945, 1.03", "-30.7737, -367.923, 0.597331, 1.4", "-31.6634, -368.755, 0.846538, 1.4", "-32.4325, -369.459, 1.10052, 1.4", "-32.7793, -369.77, 1.22642, 1.4" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "-3.61062, -352.267, -20.7738, 0.88", "-4.78242, -352.759, -22.6413, 0.88", "-5.26281, -352.933, -23.1766, 0.88", "-5.37203, -352.968, -23.2587, 0.88", "-7.10334, -353.467, -24.2111, 0.29", "-8.23242, -353.793, -24.8323, 0.29", "-9.00253, -354.015, -25.2559, 0.74", "-11.4295, -354.671, -25.8072, 0.15", "-12.4604, -354.944, -25.9167, 0.15", "-12.7334, -355.0, -25.8619, 0.37" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-3.61062, -352.267, -20.7738, 0.29", "-3.51087, -352.435, -21.6031, 0.29", "-3.50127, -352.452, -21.6805, 0.29", "-2.79706, -353.882, -27.3802, 0.29", "-2.78161, -353.911, -27.4809, 0.29", "-2.70753, -354.048, -27.9052, 0.88", "-2.6312, -354.198, -28.3147, 0.88", "-2.6156, -354.24, -28.4123, 0.88", "-2.40048, -354.986, -29.6294, 0.22", "-2.26022, -355.8, -30.2166, 0.22", "-2.20002, -356.209, -30.4977, 0.59", "-2.12784, -356.87, -30.9148, 0.74", "-2.04502, -357.775, -31.4929, 0.74", "-1.99516, -358.763, -32.063, 1.03", "-1.99076, -359.266, -32.3489, 1.03", "-2.00692, -359.809, -32.6796, 1.25", "-2.00744, -360.342, -33.0499, 0.74", "-2.02824, -361.446, -33.8739, 0.29", "-2.1239, -362.187, -34.4201, 0.29", "-2.3095, -362.941, -34.9419, 0.81", "-2.46179, -363.346, -35.2333, 0.81", "-3.04535, -364.499, -36.0589, 0.29", "-3.65351, -365.494, -36.7031, 0.29", "-4.4638, -366.663, -37.29, 0.29", "-4.50277, -366.715, -37.3153, 0.29", "-4.86833, -367.183, -37.5007, 0.29", "-5.05296, -367.414, -37.6055, 1.11", "-5.53929, -367.984, -37.8144, 1.33", "-5.93777, -368.477, -37.9977, 1.33", "-6.54072, -369.26, -38.2599, 0.29", "-7.18823, -370.1, -38.5358, 0.29", "-7.87577, -370.982, -38.8146, 1.18", "-8.80431, -372.078, -39.166, 1.62", "-9.39503, -372.686, -39.3541, 1.92", "-9.87496, -373.131, -39.4493, 1.92" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-140.523, 224.06, -256.979, 0.88", "-141.402, 225.455, -259.8, 0.88", "-142.177, 226.803, -261.72, 0.88", "-142.323, 227.065, -262.024, 1.55", "-142.539, 227.457, -262.401, 1.77", "-142.651, 227.664, -262.567, 1.77", "-142.871, 228.087, -262.89, 0.22", "-143.483, 229.559, -263.413, 0.22", "-143.505, 229.622, -263.43, 0.22", "-143.704, 230.233, -263.593, 0.88", "-143.906, 230.881, -263.765, 0.88", "-144.318, 232.234, -264.12, 0.22", "-144.799, 233.839, -264.519, 0.22", "-144.871, 234.078, -264.574, 0.22", "-145.485, 235.81, -264.896, 0.22", "-145.621, 236.144, -264.941, 0.22", "-145.714, 236.34, -264.956, 0.66", "-146.216, 237.276, -264.945, 0.66", "-146.346, 237.491, -264.947, 0.22", "-147.125, 238.81, -264.983, 0.22", "-147.207, 238.945, -264.99, 0.66", "-147.508, 239.448, -265.022, 0.88", "-147.755, 239.888, -265.053, 0.88", "-148.143, 240.618, -265.158, 0.22", "-148.231, 240.799, -265.191, 0.22", "-148.613, 241.678, -265.379, 0.22", "-148.64, 241.742, -265.394, 0.22", "-149.4, 243.476, -265.802, 0.22", "-149.884, 244.527, -266.058, 1.11", "-150.154, 245.12, -266.203, 1.92", "-150.185, 245.192, -266.222, 1.92", "-150.354, 245.647, -266.359, 1.92" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-140.523, 224.06, -256.979, 0.22", "-138.448, 225.198, -260.064, 0.22", "-137.865, 225.518, -260.932, 0.74", "-137.594, 225.666, -261.334, 0.74" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-71.3428, 241.639, -51.9756, 0.52", "-70.8822, 241.487, -51.5035, 0.52", "-69.6217, 241.09, -50.1992, 0.52", "-68.8821, 240.889, -49.4813, 0.52", "-68.278, 240.74, -48.92, 0.81", "-67.2662, 240.525, -47.9596, 0.81", "-66.7394, 240.442, -47.5753, 0.81", "-66.6776, 240.435, -47.5374, 0.81", "-65.9955, 240.406, -47.2057, 0.37", "-65.9201, 240.405, -47.1724, 0.37", "-64.5304, 240.35, -46.61, 0.22", "-61.7524, 240.173, -45.6052, 0.22", "-61.4557, 240.137, -45.5094, 0.81", "-61.3886, 240.126, -45.4898, 0.81", "-61.1785, 240.084, -45.4399, 0.81", "-59.9762, 239.807, -45.1548, 0.22", "-59.9096, 239.789, -45.1402, 0.22", "-57.008, 238.892, -44.4276, 0.22", "-56.8164, 238.832, -44.3822, 0.22", "-55.12, 238.313, -43.9996, 0.22", "-54.1, 238.014, -43.7926, 0.74", "-53.878, 237.951, -43.7596, 0.74" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-71.3428, 241.639, -51.9756, 0.29", "-71.7287, 242.531, -52.0632, 0.29", "-72.3241, 244.078, -52.1101, 0.29", "-72.5334, 244.768, -52.108, 0.96", "-72.6989, 245.37, -52.0994, 1.55", "-72.8434, 245.912, -52.0887, 1.55", "-73.1261, 246.975, -52.1124, 0.29", "-73.4946, 248.458, -52.1845, 0.29", "-73.9476, 250.443, -52.319, 0.29", "-73.9624, 250.51, -52.3235, 0.29", "-74.2889, 252.041, -52.4446, 0.29", "-74.5297, 253.217, -52.5557, 0.44", "-74.7149, 254.135, -52.6624, 0.44", "-74.9019, 255.107, -52.8024, 0.44", "-75.0415, 255.799, -52.8889, 0.88", "-75.1096, 256.149, -52.9167, 1.55", "-75.1869, 256.577, -52.9245, 1.92", "-75.2917, 257.212, -52.8954, 2.06", "-75.3635, 257.737, -52.8778, 2.06", "-75.4744, 258.598, -52.863, 1.18", "-75.5867, 259.495, -52.8838, 1.03", "-75.6598, 260.123, -52.908, 0.88", "-75.7351, 260.779, -52.9416, 0.74", "-75.8033, 261.548, -52.9894, 0.59", "-75.8297, 262.25, -53.0396, 0.59", "-75.812, 263.262, -53.1197, 0.29", "-75.8091, 263.332, -53.1253, 0.29", "-75.7701, 264.219, -53.1907, 0.22", "-75.7574, 264.663, -53.2191, 0.22", "-75.7083, 265.787, -53.2742, 0.22", "-75.69, 266.083, -53.2848, 0.22", "-75.6165, 267.122, -53.2982, 0.22", "-75.5756, 267.696, -53.3055, 1.03", "-75.5254, 268.417, -53.3142, 1.33", "-75.4883, 269.283, -53.3222, 1.33" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-65.4772, 282.301, -48.1915, 0.29", "-64.4648, 284.174, -49.8892, 0.29", "-64.4319, 284.24, -49.9463, 0.29", "-64.0574, 285.031, -50.5624, 0.29", "-64.0387, 285.075, -50.5981, 0.29", "-63.8273, 285.515, -50.9378, 0.66", "-63.6197, 285.922, -51.2343, 0.66", "-63.5905, 285.976, -51.2673, 0.66", "-63.2158, 286.65, -51.6444, 0.96", "-62.7615, 287.453, -52.0427, 0.15", "-62.077, 288.546, -52.5725, 0.15", "-61.9085, 288.78, -52.6907, 0.74", "-61.8274, 288.882, -52.74, 0.74", "-61.6496, 289.103, -52.8391, 0.74", "-61.4707, 289.306, -52.9073, 0.74", "-61.416, 289.364, -52.9073, 0.74" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-65.4772, 282.301, -48.1915, 0.44", "-65.7031, 282.991, -48.1915, 0.44", "-65.7355, 283.083, -48.1915, 0.44", "-66.3004, 284.331, -48.1915, 0.44", "-66.3327, 284.392, -48.1993, 0.44", "-66.8796, 285.271, -48.3746, 0.44", "-66.9383, 285.355, -48.3943, 0.44", "-67.6746, 286.286, -48.6462, 0.44", "-68.2636, 286.934, -48.8423, 0.44", "-69.2071, 287.827, -49.1356, 0.44", "-69.9312, 288.458, -49.4374, 0.81", "-70.4086, 288.84, -49.6705, 0.96", "-71.1325, 289.367, -49.9709, 0.96", "-71.3527, 289.512, -50.0332, 0.96", "-72.2602, 290.098, -50.1623, 0.96", "-74.1386, 291.288, -50.0736, 0.96", "-74.1897, 291.319, -50.0663, 0.96", "-75.8019, 292.276, -49.6678, 0.22", "-76.8596, 292.883, -49.2882, 0.22", "-76.9247, 292.919, -49.2578, 0.22", "-77.6922, 293.325, -48.7911, 0.22", "-77.852, 293.407, -48.6618, 0.22", "-78.2465, 293.601, -48.3376, 0.59", "-78.4983, 293.73, -48.1813, 0.96", "-78.5575, 293.757, -48.1499, 0.96", "-79.1235, 294.039, -47.8404, 0.96", "-80.2081, 294.591, -47.1977, 0.96", "-81.3005, 295.318, -46.5907, 0.52", "-82.4196, 296.247, -46.0227, 0.29", "-82.4681, 296.297, -46.0048, 0.29", "-82.8452, 296.822, -45.9378, 0.29", "-82.9231, 296.963, -45.9417, 0.29", "-83.3027, 297.782, -46.0522, 0.29", "-83.3471, 297.89, -46.0656, 0.29", "-83.643, 298.607, -46.0656, 0.29", "-83.9959, 299.448, -46.0656, 0.29", "-84.0536, 299.582, -46.0717, 0.66", "-84.2143, 299.97, -46.1024, 0.81", "-84.3981, 300.443, -46.1463, 0.81", "-84.6528, 301.127, -46.218, 0.15", "-84.9704, 302.047, -46.3354, 0.15", "-85.191, 302.634, -46.4282, 0.59", "-85.3507, 303.047, -46.5014, 0.74" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "200.112, 191.207, 46.4288, 0.88", "200.772, 190.798, 46.3964, 0.88", "201.52, 190.35, 46.3025, 0.59", "202.601, 189.74, 46.1267, 0.59", "203.233, 189.395, 46.0119, 0.29", "204.228, 188.871, 45.8221, 0.29", "204.289, 188.84, 45.81, 0.29", "205.24, 188.352, 45.6288, 0.29", "205.683, 188.125, 45.5472, 0.52", "205.754, 188.086, 45.5359, 0.52", "205.944, 187.996, 45.5188, 0.52", "206.009, 187.969, 45.5201, 0.52", "207.356, 187.496, 45.6569, 0.22", "207.498, 187.45, 45.6798, 0.22", "207.808, 187.378, 45.7234, 0.66", "208.496, 187.245, 45.77, 0.81", "209.155, 187.134, 45.7838, 0.15", "210.397, 186.915, 45.7544, 0.15", "210.652, 186.872, 45.7358, 0.44", "211.583, 186.687, 45.6494, 0.44", "212.742, 186.442, 45.5154, 0.15", "212.88, 186.411, 45.4956, 0.15", "213.674, 186.196, 45.3548, 0.15", "214.422, 185.919, 45.2617, 0.15", "214.775, 185.782, 45.2474, 0.37", "214.966, 185.709, 45.2669, 0.37", "215.337, 185.585, 45.3446, 0.37", "215.405, 185.564, 45.3611, 0.37", "216.443, 185.238, 45.6527, 0.22", "217.591, 184.842, 46.0091, 0.22", "218.55, 184.494, 46.4074, 0.37", "219.017, 184.357, 46.6227, 0.66", "219.099, 184.339, 46.6641, 0.66", "219.398, 184.32, 46.8167, 0.66", "219.46, 184.331, 46.8484, 0.66", "220.942, 184.964, 47.5754, 0.22", "221.936, 185.574, 47.9879, 0.22", "221.987, 185.618, 48.0122, 0.22", "222.808, 186.48, 48.3913, 0.22", "223.104, 186.889, 48.527, 0.96", "223.42, 187.443, 48.6647, 0.96", "223.538, 187.71, 48.7068, 0.96", "224.144, 189.379, 49.0074, 0.22", "224.297, 189.844, 49.0994, 0.59", "224.509, 190.687, 49.3003, 0.15", "224.524, 190.763, 49.3201, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "200.112, 191.207, 46.4288, 0.52", "200.899, 191.419, 46.2245, 0.52", "201.992, 191.715, 46.0026, 0.52", "202.929, 191.952, 45.8635, 0.52", "202.997, 191.969, 45.8595, 0.52", "203.829, 192.101, 45.8585, 0.66", "203.888, 192.107, 45.8602, 0.66", "205.226, 192.141, 46.0423, 0.66", "206.498, 192.105, 46.3236, 0.22", "207.372, 192.047, 46.5761, 0.44", "208.809, 191.917, 47.0328, 0.44", "209.292, 191.881, 47.2119, 0.44", "210.272, 191.852, 47.6136, 0.81", "210.489, 191.853, 47.7162, 1.11", "210.699, 191.858, 47.8163, 1.11", "210.829, 191.865, 47.8723, 1.11", "212.737, 192.065, 48.6762, 0.22", "213.299, 192.12, 48.8952, 0.22", "214.968, 192.275, 49.3967, 0.22", "215.787, 192.341, 49.596, 0.22", "216.076, 192.36, 49.6509, 0.22", "216.761, 192.384, 49.7323, 0.22", "216.864, 192.383, 49.7297, 0.22", "217.811, 192.45, 49.6369, 1.03", "218.468, 192.579, 49.5207, 1.25", "218.536, 192.596, 49.5107, 1.25", "218.77, 192.651, 49.4842, 1.33", "219.58, 192.849, 49.4197, 0.59", "221.213, 193.248, 49.3458, 0.44", "221.282, 193.265, 49.3458, 0.44", "222.2, 193.473, 49.2124, 0.44", "222.844, 193.619, 49.1552, 0.44", "223.301, 193.726, 49.1297, 0.81", "223.38, 193.747, 49.1276, 0.81", "223.801, 193.872, 49.1286, 0.81", "226.182, 194.668, 49.1994, 1.03", "228.548, 195.481, 49.3281, 0.66", "229.058, 195.646, 49.3656, 0.22", "229.898, 195.902, 49.443, 0.22", "229.968, 195.919, 49.4551, 0.22", "230.852, 196.1, 49.7664, 0.22", "231.809, 196.24, 50.2967, 0.81", "232.008, 196.247, 50.3986, 1.25", "232.127, 196.243, 50.4744, 1.25", "233.73, 196.066, 51.3401, 0.22", "234.999, 195.882, 51.8779, 0.96", "235.146, 195.854, 51.9129, 0.96", "235.724, 195.727, 51.6072, 0.96", "235.758, 195.721, 51.5575, 0.96", "237.458, 195.271, 48.7212, 0.22", "237.493, 195.263, 48.6611, 0.22", "237.607, 195.234, 48.4615, 0.66", "237.683, 195.216, 48.3327, 0.66", "239.074, 195.001, 45.9653, 0.66", "239.669, 194.935, 44.9835, 0.22", "240.593, 194.9, 43.6053, 0.81", "240.657, 194.901, 43.5108, 0.81", "240.871, 194.912, 43.2054, 0.81", "241.803, 195.001, 41.9273, 0.22", "242.659, 195.166, 40.9136, 0.22", "242.998, 195.287, 40.4671, 0.22", "243.077, 195.318, 40.352, 0.22", "243.329, 195.427, 39.968, 1.11" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "200.112, 191.207, 46.4288, 0.29", "199.997, 192.345, 46.7324, 0.29", "199.974, 192.465, 46.769, 0.29", "199.852, 193.101, 46.9642, 0.81", "199.662, 194.099, 47.2704, 0.22", "199.649, 194.164, 47.2904, 0.22", "199.509, 194.899, 47.5158, 0.22", "199.207, 196.131, 47.7951, 0.22" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "56.5907, 190.268, -59.3056, 0.44", "57.1664, 191.251, -58.9866, 0.44", "57.6819, 192.116, -58.7857, 0.44", "57.9614, 192.616, -58.7119, 0.88", "58.217, 193.147, -58.6636, 1.11", "58.2755, 193.282, -58.6554, 1.11", "58.6489, 194.159, -58.6192, 1.11", "58.8937, 194.724, -58.6014, 1.11", "59.3481, 195.795, -58.5498, 1.11", "59.8237, 196.989, -58.4843, 1.11", "60.1683, 197.931, -58.4178, 1.33", "60.6001, 199.198, -58.3196, 1.33", "60.876, 200.12, -58.24, 0.88", "61.0577, 200.741, -58.1816, 0.74", "61.3688, 201.847, -58.0815, 0.66", "61.5987, 202.685, -58.018, 0.66", "61.7422, 203.253, -57.9872, 1.03", "61.8983, 203.909, -58.0011, 1.4", "62.1527, 204.843, -58.106, 1.4", "62.2159, 205.049, -58.1355, 1.4", "62.5577, 206.08, -58.3024, 1.4", "62.5807, 206.146, -58.3115, 1.4", "62.9278, 207.142, -58.422, 0.96", "63.441, 208.614, -58.5624, 0.88", "63.8455, 209.831, -58.6545, 0.88", "64.1124, 210.587, -58.6919, 1.33", "64.3932, 211.404, -58.7131, 0.81", "64.5542, 211.944, -58.7112, 0.81", "64.5709, 212.011, -58.7076, 0.81", "64.7038, 212.586, -58.6741, 0.59", "64.9604, 213.677, -58.6273, 0.52", "65.1299, 214.514, -58.614, 0.37", "65.2558, 215.277, -58.6222, 0.37", "65.278, 215.423, -58.623, 0.37", "65.391, 216.165, -58.6238, 0.37", "65.5742, 217.3, -58.5786, 1.84", "65.7515, 218.3, -58.5082, 2.14", "65.7669, 218.367, -58.5022, 2.14", "66.0395, 219.408, -58.4053, 1.84", "66.5821, 221.249, -58.23, 1.62", "66.9375, 222.275, -58.1543, 0.88", "67.3147, 223.125, -58.1055, 0.66", "67.8433, 224.095, -58.074, 0.66", "68.2728, 224.836, -58.0736, 1.18", "68.6784, 225.483, -58.0957, 1.18", "69.2268, 226.306, -58.1561, 0.66", "69.749, 227.112, -58.2564, 0.66", "70.7279, 228.708, -58.4737, 0.44", "71.352, 229.856, -58.6269, 0.44", "71.8632, 230.968, -58.7291, 0.44", "71.8864, 231.033, -58.7322, 0.44", "72.0865, 231.738, -58.7328, 1.55", "72.2451, 232.35, -58.7235, 1.55", "72.4648, 233.111, -58.6931, 0.96", "72.8155, 234.083, -58.6362, 0.29", "73.1499, 234.94, -58.5777, 0.29", "73.1853, 235.031, -58.5714, 0.29", "73.4819, 235.773, -58.5122, 0.29", "73.5058, 235.84, -58.5091, 0.29", "73.6494, 236.373, -58.5086, 0.29", "73.7682, 237.142, -58.5825, 0.96", "73.8402, 238.092, -58.7006, 0.96", "73.8444, 238.229, -58.7189, 0.96", "73.843, 239.12, -58.8375, 0.96", "73.8616, 240.053, -58.9971, 1.33", "73.8673, 240.889, -59.1576, 1.55", "73.8635, 241.301, -59.2665, 1.55", "73.8604, 241.918, -59.46, 1.03", "73.8545, 242.741, -59.7347, 0.74", "73.848, 243.866, -60.1379, 0.59", "73.8444, 244.689, -60.4313, 0.59", "73.8238, 245.651, -60.7428, 0.44", "73.7867, 246.334, -60.965, 0.44", "73.7158, 246.942, -61.1656, 0.44", "73.7025, 247.007, -61.1846, 0.44", "73.5549, 247.623, -61.3182, 0.96", "73.4571, 248.108, -61.4023, 0.96", "73.4445, 248.177, -61.4112, 0.96", "73.1702, 249.52, -61.5907, 0.37", "72.9486, 250.516, -61.7184, 0.37", "72.8436, 250.996, -61.7756, 0.37", "72.6461, 251.968, -61.8827, 0.37", "72.5089, 252.777, -61.9594, 0.37", "72.4934, 252.881, -61.9666, 0.37", "72.3995, 253.806, -61.9897, 0.37", "72.3672, 254.161, -61.9969, 1.55", "72.3194, 254.479, -62.0024, 1.69", "72.2891, 254.786, -61.9938, 1.69", "72.259, 255.491, -61.9565, 1.4", "72.257, 256.418, -61.8979, 1.69", "72.2903, 257.54, -61.819, 1.77", "72.4362, 259.904, -61.6458, 0.44", "72.5639, 261.449, -61.5318, 0.44", "72.6961, 262.643, -61.4419, 0.44", "72.7249, 262.858, -61.4258, 0.44", "72.8225, 263.65, -61.3693, 0.88", "72.9286, 264.474, -61.3165, 1.18", "72.9998, 265.427, -61.2752, 1.18", "72.9943, 265.498, -61.2741, 1.18", "72.8306, 266.527, -61.24, 1.18", "72.6494, 267.479, -61.197, 1.47", "72.6352, 267.557, -61.1926, 1.47", "72.5409, 268.246, -61.1273, 1.47", "72.494, 268.867, -61.0498, 0.96", "72.48, 269.535, -60.9418, 0.66", "72.5383, 270.502, -60.7517, 0.52", "72.6198, 271.092, -60.6235, 0.37", "72.7992, 272.093, -60.408, 0.29", "72.9388, 272.672, -60.284, 0.29", "73.0337, 273.025, -60.2136, 0.52", "73.1827, 273.565, -60.1097, 0.74", "73.2073, 273.672, -60.0927, 0.74", "73.3628, 274.589, -59.997, 0.74", "73.4009, 274.827, -59.9925, 1.03", "73.4307, 274.982, -59.9936, 1.03", "73.506, 275.346, -60.0062, 1.03", "73.6582, 276.06, -60.0304, 0.29", "73.6732, 276.13, -60.0324, 0.29", "73.9237, 277.251, -60.061, 0.29", "73.9413, 277.327, -60.0625, 0.29", "74.0764, 277.821, -60.0675, 0.29", "74.1863, 278.16, -60.0695, 0.29", "74.4587, 278.819, -60.0695, 0.29", "74.4903, 278.88, -60.0695, 0.29", "74.7148, 279.255, -60.0871, 0.74", "75.1033, 279.846, -60.132, 0.81", "75.1639, 279.933, -60.1402, 0.81", "75.7158, 280.682, -60.2195, 0.81", "76.3807, 281.595, -60.319, 0.81", "76.7246, 282.091, -60.3925, 1.11", "77.2141, 282.806, -60.5207, 0.37", "77.6564, 283.48, -60.6582, 0.37", "77.6939, 283.54, -60.6711, 0.37", "78.1599, 284.339, -60.8592, 0.37", "78.5031, 284.984, -61.0172, 0.88", "78.7772, 285.519, -61.1363, 0.88", "78.8057, 285.579, -61.153, 0.88", "79.0529, 286.067, -61.32, 0.88" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "56.5907, 190.268, -59.3056, 0.22", "56.1738, 190.518, -59.0796, 0.22", "54.8546, 191.309, -58.3648, 0.22", "54.7376, 191.379, -58.3014, 0.74", "54.3446, 191.614, -58.0884, 0.74", "53.5292, 192.103, -57.6466, 0.44", "53.1681, 192.32, -57.4509, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "39.5311, 122.928, -69.0205, 0.74", "39.6431, 123.013, -69.4915, 0.74", "40.83, 123.758, -74.0592, 1.03", "40.9548, 123.845, -74.6009, 1.03", "40.9688, 123.857, -74.6692, 1.03", "41.4335, 124.349, -77.2298, 0.66", "41.4443, 124.365, -77.2979, 0.66", "41.6724, 124.986, -79.5085, 0.66", "41.7883, 125.699, -81.4493, 0.66", "41.8193, 125.894, -81.9394, 0.88", "41.8698, 126.119, -82.4596, 0.88", "41.9841, 126.557, -83.3677, 0.88", "42.6209, 128.246, -86.767, 0.52", "42.8943, 128.812, -87.83, 0.66", "43.249, 129.317, -88.8167, 0.66", "43.7216, 129.822, -89.8824, 0.44", "43.7814, 129.875, -90.01, 0.44", "44.0098, 130.076, -90.5416, 0.44", "44.4058, 130.504, -91.6537, 1.18", "44.4283, 130.539, -91.7583, 1.18", "44.5357, 130.798, -92.4843, 1.18", "44.7001, 131.515, -94.4587, 1.18", "44.8049, 132.377, -96.9265, 0.66", "44.81, 133.004, -98.85, 1.47", "44.7449, 133.852, -101.561, 1.47", "44.7296, 133.944, -101.857, 1.47", "44.6162, 134.388, -103.277, 0.74", "44.4434, 135.047, -105.235, 1.03", "44.2507, 135.662, -106.892, 0.59", "44.1781, 135.855, -107.385, 0.59", "44.1188, 136.028, -107.795, 0.59", "43.9061, 136.871, -109.731, 0.59", "43.8853, 137.169, -110.306, 0.59", "43.898, 137.424, -110.642, 0.59" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "39.5311, 122.928, -69.0205, 0.37", "39.4898, 124.052, -69.5618, 0.37", "39.478, 124.93, -70.195, 0.37", "39.5431, 126.096, -71.2145, 0.37", "39.5477, 126.149, -71.2597, 0.37", "39.5869, 126.486, -71.5298, 0.37", "39.6552, 126.993, -71.9226, 1.11", "39.9113, 128.388, -73.1916, 0.52", "40.122, 129.284, -74.0342, 0.81", "40.2963, 129.947, -74.5869, 1.25", "40.4487, 130.496, -75.0482, 1.25", "40.4641, 130.548, -75.0921, 1.25", "40.9084, 132.032, -76.1958, 0.52", "40.9447, 132.171, -76.2967, 0.52", "41.1012, 132.998, -76.9684, 0.52", "41.1733, 133.762, -77.613, 0.74", "41.177, 133.865, -77.7095, 0.74", "41.1778, 134.908, -78.7151, 0.74", "41.1439, 136.531, -80.2547, 0.74", "41.119, 137.484, -81.1873, 1.84", "41.0954, 138.276, -81.9929, 1.84", "41.0433, 140.12, -83.851, 0.52", "41.0435, 140.176, -83.9073, 0.52", "41.0691, 140.742, -84.4721, 0.52", "41.225, 141.862, -85.4112, 0.52", "41.4249, 142.639, -86.0497, 0.52", "41.4472, 142.701, -86.0964, 0.52", "41.7122, 143.384, -86.4503, 0.52", "41.7673, 143.517, -86.517, 0.52", "42.0488, 144.143, -86.8172, 0.88", "42.3998, 144.883, -87.1109, 1.11", "42.7459, 145.705, -87.3917, 1.11", "43.0666, 146.639, -87.7261, 1.4", "43.2951, 147.461, -88.0289, 1.4", "43.3146, 147.535, -88.0544, 1.4", "43.5943, 148.638, -88.3795, 0.52", "43.869, 149.646, -88.6766, 0.52", "44.1279, 150.572, -88.9639, 0.81", "44.1464, 150.635, -88.9825, 0.81", "44.5044, 151.845, -89.3488, 0.81", "44.8619, 153.115, -89.7421, 0.81", "45.1783, 154.245, -90.1013, 0.37", "45.4402, 155.172, -90.3907, 0.37", "45.7366, 156.251, -90.7337, 0.37", "46.0016, 157.295, -91.0709, 1.11", "46.277, 158.504, -91.4743, 1.47", "46.2914, 158.568, -91.4945, 1.47", "46.4702, 159.382, -91.7281, 1.47", "46.7684, 160.783, -92.1089, 1.47", "46.9974, 162.012, -92.4543, 1.18", "47.0068, 162.069, -92.4693, 1.18", "47.1446, 162.972, -92.7139, 0.66", "47.2905, 164.068, -92.9926, 0.29", "47.5223, 166.263, -93.5898, 0.29", "47.6826, 168.167, -94.0944, 0.52", "47.7326, 168.902, -94.326, 0.96", "47.7657, 169.441, -94.5056, 1.18", "47.8295, 170.656, -94.9269, 1.18", "47.9037, 172.118, -95.4444, 0.96", "47.9742, 173.375, -95.9515, 0.59", "48.1056, 175.109, -96.6549, 0.59", "48.1944, 176.157, -97.1234, 0.96" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_148",
    "id" : "dend_148",
    "points3d" : [ "143.127, -208.37, 22.3104, 1.33", "143.856, -209.088, 23.3947, 1.33", "144.257, -209.477, 23.9635, 0.66", "144.893, -210.102, 24.9011, 0.29", "146.312, -211.642, 26.9533, 0.52", "146.687, -212.062, 27.4753, 0.52", "146.941, -212.364, 27.8132, 0.66", "146.976, -212.409, 27.8543, 0.66", "147.538, -213.177, 28.4931, 0.81", "148.146, -214.055, 28.9718, 0.52", "148.304, -214.295, 29.0176, 0.88", "148.711, -214.936, 29.1095, 1.03", "149.247, -215.779, 29.1992, 1.62", "149.286, -215.839, 29.2018, 1.62", "149.913, -216.738, 29.1242, 1.92", "150.229, -217.143, 29.0827, 2.14", "150.484, -217.469, 29.05, 2.14" ],
    "parent" : "dend_146",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_147",
    "id" : "dend_147",
    "points3d" : [ "143.127, -208.37, 22.3104, 0.29", "142.841, -207.123, 22.6435, 0.29", "142.731, -206.646, 22.771, 0.29", "142.716, -206.581, 22.7883, 0.29", "142.502, -205.649, 23.0372, 0.29", "142.487, -205.582, 23.0552, 0.29", "142.43, -205.334, 23.1215, 0.74" ],
    "parent" : "dend_146",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_143",
    "id" : "dend_143",
    "points3d" : [ "97.3439, -258.151, -38.5906, 0.22", "96.7574, -259.81, -37.3471, 0.22", "96.5172, -260.405, -36.9963, 0.22", "96.3608, -260.803, -36.8094, 0.37", "96.2159, -261.174, -36.6704, 0.37", "96.1901, -261.245, -36.6417, 0.37", "95.8468, -262.257, -36.2449, 0.37", "95.716, -262.578, -36.1604, 0.81", "95.5342, -263.034, -36.0239, 1.03", "95.3288, -263.569, -35.8581, 1.03", "94.9011, -264.653, -35.5375, 0.81", "94.6618, -265.23, -35.371, 0.81", "94.4927, -265.617, -35.2717, 0.52", "94.4639, -265.679, -35.2592, 0.52", "94.1313, -266.403, -35.1448, 0.52", "93.7296, -267.362, -35.0506, 0.52", "93.7035, -267.428, -35.0486, 0.52", "93.3272, -268.516, -35.0156, 0.52", "93.1168, -269.138, -34.9988, 1.11", "92.9805, -269.494, -34.9904, 1.11", "92.7282, -270.1, -34.978, 0.29", "92.68, -270.195, -34.9766, 0.29", "92.3865, -270.69, -34.969, 0.29", "91.7573, -271.681, -34.9597, 0.29", "91.388, -272.235, -34.9553, 0.22", "91.3494, -272.293, -34.9547, 0.22", "90.9112, -272.978, -34.9464, 0.22", "90.4657, -273.74, -34.9364, 0.22", "90.0088, -274.568, -34.9244, 0.29", "89.7724, -275.082, -34.9162, 0.29", "89.5079, -275.751, -34.9052, 0.29", "89.399, -276.054, -34.9004, 0.37", "89.3587, -276.196, -34.8982, 0.37" ],
    "parent" : "dend_141",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_142",
    "id" : "dend_142",
    "points3d" : [ "97.3439, -258.151, -38.5906, 0.37", "95.9522, -259.617, -39.468, 0.37", "95.693, -259.932, -39.6177, 0.37", "95.1252, -260.708, -39.9959, 0.37", "94.5218, -261.587, -40.429, 0.37", "94.4868, -261.641, -40.455, 0.37", "93.934, -262.568, -40.8746, 0.37", "93.6383, -263.192, -41.0818, 1.33", "93.2317, -264.2, -41.4032, 1.33", "93.2192, -264.257, -41.4174, 1.33", "93.1669, -264.799, -41.5433, 0.37", "93.1527, -265.292, -41.6635, 0.37", "93.2213, -266.059, -41.858, 0.37", "93.2365, -266.124, -41.8729, 0.37", "93.7609, -267.631, -42.2649, 0.37", "94.0558, -268.339, -42.5031, 0.22", "94.1181, -268.462, -42.5541, 0.22", "94.388, -268.925, -42.7782, 0.22", "94.7791, -269.544, -43.161, 0.22", "95.2246, -270.362, -43.6854, 0.81", "95.3549, -270.719, -43.8916, 1.11", "95.4351, -271.067, -44.0541, 1.11", "95.4446, -271.141, -44.0786, 1.11", "95.5105, -272.303, -44.363, 0.29", "95.5395, -273.296, -44.5122, 0.29", "95.5759, -274.588, -44.5888, 0.29", "95.5784, -274.68, -44.591, 0.29", "95.589, -276.083, -44.5712, 0.29", "95.5871, -276.173, -44.5606, 0.29", "95.5334, -277.073, -44.3516, 0.29", "95.5099, -277.363, -44.2701, 0.74", "95.4297, -278.127, -44.0419, 0.74", "95.3159, -278.952, -43.8066, 0.59", "95.0771, -280.219, -43.4745, 0.59", "94.9983, -280.604, -43.3834, 0.74", "94.8932, -281.108, -43.2537, 0.37", "94.697, -282.124, -42.9899, 0.29", "94.6064, -282.748, -42.8045, 0.29", "94.5665, -283.085, -42.7036, 1.33", "94.4864, -283.916, -42.48, 1.69", "94.3976, -284.906, -42.1818, 1.69", "94.3921, -284.962, -42.1632, 1.69", "94.2892, -286.153, -41.7191, 0.22", "94.2324, -286.931, -41.4273, 0.22", "94.2093, -287.279, -41.298, 0.22", "94.1872, -287.612, -41.1834, 0.59", "94.1578, -288.034, -41.0814, 0.59", "94.1242, -288.668, -40.958, 0.15", "94.1276, -289.242, -40.8949, 0.15", "94.1424, -289.389, -40.8714, 0.15", "94.1786, -289.666, -40.8194, 0.15", "94.3286, -290.72, -40.612, 0.15", "94.3388, -290.789, -40.5986, 0.15", "94.4641, -291.662, -40.439, 0.15", "94.5601, -292.373, -40.2945, 0.59", "94.6017, -292.724, -40.2186, 0.96", "94.658, -293.212, -40.1001, 1.25", "94.7215, -293.52, -40.0046, 1.25" ],
    "parent" : "dend_141",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_140",
    "id" : "dend_140",
    "points3d" : [ "122.436, -209.616, 4.90606, 0.44", "120.93, -210.635, 2.71095, 0.44", "119.995, -211.267, 1.34921, 0.44", "119.623, -211.518, 0.806942, 0.74" ],
    "parent" : "dend_134",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_135",
    "id" : "dend_135",
    "points3d" : [ "122.436, -209.616, 4.90606, 0.81", "123.355, -210.088, 4.98717, 0.81", "124.192, -210.517, 5.05515, 0.59", "125.658, -211.34, 5.21061, 0.59", "125.904, -211.508, 5.22958, 0.59", "126.274, -211.815, 5.23919, 1.03", "126.885, -212.379, 5.23517, 1.4", "126.923, -212.426, 5.23167, 1.4", "127.355, -213.071, 5.15838, 0.37", "128.074, -214.353, 4.99439, 0.37", "128.526, -215.125, 4.89095, 0.37", "128.565, -215.193, 4.88129, 0.37", "129.201, -216.371, 4.71507, 0.37", "129.549, -217.012, 4.63842, 0.37", "129.587, -217.081, 4.6312, 0.37", "129.991, -217.767, 4.65382, 1.25", "130.245, -218.181, 4.69645, 1.25", "130.549, -218.674, 4.75722, 0.44", "131.396, -219.969, 5.03261, 0.44", "131.438, -220.034, 5.04936, 0.44", "132.148, -221.128, 5.34784, 0.44", "132.46, -221.625, 5.4977, 0.74", "132.761, -222.045, 5.61399, 0.74", "133.474, -222.933, 5.8661, 0.29", "133.571, -223.042, 5.8967, 0.29", "134.369, -223.89, 6.15979, 0.29", "134.929, -224.441, 6.32374, 0.29", "135.758, -225.168, 6.64528, 0.29", "136.388, -225.683, 6.91358, 0.59", "136.892, -226.079, 7.12323, 0.74", "137.916, -226.829, 7.58121, 0.44", "139.185, -227.666, 8.2167, 0.44", "140.586, -228.597, 8.99299, 0.44", "140.653, -228.646, 9.03692, 0.44" ],
    "parent" : "dend_134",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_125",
    "id" : "dend_125",
    "points3d" : [ "-87.9821, -303.319, 5.52013, 0.59", "-89.1226, -303.062, 2.92847, 0.59", "-89.4313, -303.014, 2.3312, 0.59", "-89.4663, -303.009, 2.26992, 0.59", "-89.9131, -302.958, 1.54985, 0.59", "-90.4811, -302.897, 0.687288, 0.81", "-91.0765, -302.896, -0.191394, 0.29", "-91.3283, -302.923, -0.501313, 0.74", "-91.4169, -302.935, -0.625427, 0.74", "-91.5429, -302.939, -0.796086, 0.74", "-91.5849, -302.935, -0.852788, 0.74", "-92.515, -302.788, -1.96762, 0.22", "-93.2713, -302.612, -2.87303, 0.22", "-93.3181, -302.6, -2.92739, 0.22", "-93.9527, -302.462, -3.5977, 0.22", "-94.8169, -302.304, -4.38422, 0.22", "-95.2801, -302.199, -4.83849, 0.22", "-95.3293, -302.183, -4.88959, 0.22", "-95.5342, -302.126, -5.12036, 0.59", "-95.911, -302.019, -5.62122, 0.59", "-96.1568, -301.949, -5.99618, 0.59", "-97.2102, -301.576, -7.77555, 0.29", "-97.7672, -301.335, -8.85191, 0.29", "-97.797, -301.319, -8.91402, 0.29", "-98.0752, -301.129, -9.56367, 0.59", "-98.1486, -301.062, -9.76136, 0.88" ],
    "parent" : "dend_121",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_122",
    "id" : "dend_122",
    "points3d" : [ "-87.9821, -303.319, 5.52013, 0.52", "-89.0513, -304.56, 5.64003, 0.52", "-89.9518, -305.672, 5.73367, 0.52", "-90.3198, -306.155, 5.76618, 0.74", "-90.5691, -306.511, 5.78627, 0.74", "-90.8567, -306.942, 5.80755, 0.59", "-91.2986, -307.623, 5.83853, 0.59", "-91.7855, -308.455, 5.89017, 0.52", "-92.4178, -309.619, 5.90067, 0.52", "-92.7616, -310.259, 5.90512, 0.52", "-93.0177, -310.727, 5.89881, 0.52", "-93.0521, -310.789, 5.89337, 0.52", "-93.4685, -311.488, 5.77652, 0.52", "-93.7991, -311.991, 5.64631, 0.52", "-94.0125, -312.277, 5.55288, 1.03", "-94.4266, -312.77, 5.34838, 0.52", "-95.0209, -313.461, 5.03894, 0.74", "-95.51, -314.013, 4.77941, 0.74", "-95.7989, -314.339, 4.62994, 0.74", "-96.5503, -315.216, 4.30244, 0.74", "-97.0751, -315.885, 4.127, 0.81", "-97.4647, -316.424, 4.0427, 0.81", "-97.7111, -316.772, 4.02495, 0.37", "-98.3035, -317.651, 3.99288, 0.37", "-98.749, -318.361, 3.90633, 0.37", "-99.0996, -318.984, 3.77523, 0.37", "-99.1618, -319.104, 3.73865, 0.37", "-99.8514, -320.488, 3.17103, 0.37", "-100.229, -321.271, 2.78964, 0.37", "-100.877, -322.63, 1.99799, 0.59", "-101.193, -323.298, 1.57468, 0.74", "-101.674, -324.253, 0.957597, 0.74", "-101.734, -324.362, 0.888315, 0.74", "-102.042, -324.818, 0.608674, 0.74", "-102.088, -324.868, 0.585527, 0.74", "-102.871, -325.536, 0.43533, 0.74", "-103.496, -326.031, 0.37425, 0.74", "-104.059, -326.484, 0.284791, 0.66", "-104.815, -327.187, 0.0979308, 0.66", "-105.118, -327.518, -0.0109527, 1.03", "-105.864, -328.472, -0.339651, 1.03", "-106.322, -329.143, -0.575493, 1.03", "-107.072, -330.433, -1.00628, 0.81", "-107.488, -331.265, -1.26527, 0.59", "-107.932, -332.196, -1.53006, 0.59", "-108.401, -333.109, -1.75861, 0.59", "-108.759, -333.752, -1.89515, 0.88", "-109.164, -334.398, -1.98992, 1.47", "-109.495, -334.858, -2.0139, 1.47", "-110.262, -335.818, -2.04654, 1.03", "-110.911, -336.63, -2.0545, 0.88", "-110.954, -336.686, -2.06037, 0.88", "-111.383, -337.299, -2.15844, 1.4", "-111.65, -337.731, -2.24095, 1.55", "-112.002, -338.374, -2.37658, 0.96", "-112.625, -339.751, -2.6845, 0.96", "-113.304, -341.405, -3.12325, 0.59", "-113.847, -342.724, -3.55145, 0.59", "-114.041, -343.183, -3.72041, 0.88", "-114.27, -343.673, -3.91421, 1.25", "-114.482, -344.067, -4.10255, 1.25", "-115.276, -345.375, -4.80934, 1.18", "-115.979, -346.425, -5.39278, 1.18", "-116.459, -347.053, -5.77358, 1.18", "-116.997, -347.707, -6.14022, 1.18", "-117.857, -348.721, -6.66605, 0.29", "-118.302, -349.237, -6.89604, 0.29", "-118.408, -349.363, -6.93757, 0.29", "-118.884, -349.966, -7.07813, 0.29", "-119.9, -351.33, -7.33391, 0.29", "-119.94, -351.386, -7.33976, 0.29", "-120.209, -351.78, -7.33195, 0.88", "-120.251, -351.839, -7.33032, 0.88", "-120.562, -352.279, -7.31342, 0.96", "-120.604, -352.346, -7.31038, 0.96", "-120.834, -352.85, -7.28538, 0.96", "-121.198, -353.747, -7.2388, 0.52", "-121.41, -354.323, -7.20787, 0.52", "-121.439, -354.41, -7.20449, 0.52", "-121.73, -355.438, -7.17882, 0.52", "-122.048, -356.637, -7.16212, 0.52", "-122.132, -356.945, -7.16212, 0.66", "-122.153, -357.021, -7.16264, 0.66", "-122.408, -357.794, -7.17095, 0.66", "-122.671, -358.423, -7.17787, 0.52", "-122.742, -358.554, -7.17819, 0.52", "-123.368, -359.519, -7.11203, 0.52", "-123.588, -359.847, -7.06849, 0.74", "-123.875, -360.271, -6.98263, 0.96", "-124.053, -360.522, -6.90705, 0.96", "-124.079, -360.571, -6.88728, 0.96", "-124.386, -361.223, -6.60594, 0.59", "-124.47, -361.415, -6.52683, 0.44", "-124.657, -361.845, -6.36783, 0.37", "-124.682, -361.907, -6.34895, 0.37", "-125.075, -363.022, -6.00693, 0.15", "-125.295, -363.806, -5.55842, 0.15", "-125.538, -364.599, -4.97362, 0.15", "-125.556, -364.649, -4.92893, 0.15", "-125.876, -365.425, -4.13873, 0.15", "-126.237, -366.192, -3.25631, 0.15", "-127.301, -368.023, -0.73047, 0.15", "-127.594, -368.477, -0.0186239, 0.15", "-127.754, -368.684, 0.349477, 0.88", "-127.967, -368.926, 0.759626, 0.88", "-128.007, -368.963, 0.818793, 0.88", "-128.452, -369.357, 1.25208, 0.22", "-128.823, -369.752, 1.4861, 0.22", "-128.895, -369.853, 1.54979, 0.22", "-129.404, -370.662, 2.08474, 0.22", "-129.895, -371.475, 2.74826, 0.22", "-130.294, -372.094, 3.31321, 1.03", "-130.33, -372.145, 3.364, 1.03", "-130.667, -372.531, 3.80339, 1.33", "-130.706, -372.57, 3.8502, 1.33", "-131.636, -373.328, 4.83803, 0.59", "-131.961, -373.6, 5.13054, 0.52", "-132.193, -373.822, 5.32068, 0.44", "-132.613, -374.298, 5.66621, 0.22", "-132.647, -374.351, 5.69536, 0.22", "-132.751, -374.596, 5.80872, 0.52", "-132.864, -374.994, 5.95269, 0.88", "-132.973, -375.512, 6.1518, 0.88", "-133.091, -376.138, 6.39939, 0.29", "-133.248, -376.898, 6.74096, 0.29", "-133.484, -377.763, 7.17956, 0.29", "-133.587, -378.061, 7.34307, 0.29", "-133.613, -378.118, 7.37444, 0.29", "-133.773, -378.461, 7.53856, 0.52", "-134.045, -379.105, 7.76799, 0.74", "-134.268, -379.659, 7.91724, 0.88", "-134.434, -380.147, 7.98282, 0.29", "-134.63, -380.768, 8.01014, 0.29", "-134.96, -381.818, 7.98638, 0.29", "-135.199, -382.547, 7.88398, 0.29", "-135.221, -382.61, 7.86863, 0.29", "-135.605, -383.613, 7.57025, 0.29", "-135.954, -384.447, 7.28468, 0.88", "-136.145, -384.873, 7.12523, 1.55", "-136.613, -385.862, 6.69784, 0.81", "-136.792, -386.291, 6.48867, 0.59", "-136.971, -386.83, 6.21354, 0.52", "-136.982, -386.891, 6.18217, 0.52", "-136.996, -387.473, 5.90018, 0.52", "-136.911, -388.21, 5.56368, 0.52", "-136.691, -389.088, 5.20786, 0.44", "-136.668, -389.158, 5.17941, 0.44", "-136.45, -389.788, 4.92058, 0.44", "-136.373, -390.016, 4.82585, 0.29", "-136.22, -390.478, 4.63669, 0.29", "-135.884, -391.471, 4.33496, 0.29", "-135.81, -391.679, 4.28631, 0.96", "-135.448, -392.655, 4.09688, 0.29", "-135.259, -393.164, 4.0236, 0.66", "-135.231, -393.237, 4.01878, 0.66", "-134.842, -394.185, 4.05316, 0.22", "-134.814, -394.248, 4.06469, 0.22", "-134.508, -394.919, 4.21896, 0.22", "-134.415, -395.118, 4.27754, 0.44", "-134.271, -395.571, 4.37632, 0.44", "-134.257, -395.638, 4.37955, 0.44", "-134.175, -396.161, 4.33889, 0.22", "-134.099, -396.653, 4.283, 0.44", "-133.995, -397.132, 4.21182, 0.44", "-133.746, -398.02, 4.05436, 0.22", "-133.483, -398.768, 3.90726, 0.88", "-133.255, -399.431, 3.77252, 1.33", "-133.226, -399.522, 3.75242, 1.33", "-132.911, -400.391, 3.5418, 0.59", "-132.778, -400.485, 3.51913, 0.59", "-133.11, -400.523, 3.48835, 0.59", "-134.224, -400.749, 3.35559, 0.59", "-134.737, -400.876, 3.28726, 0.74", "-136.237, -401.344, 2.99294, 0.66", "-136.936, -401.592, 2.82074, 0.37", "-136.997, -401.621, 2.80119, 0.37", "-136.713, -402.263, 2.39584, 0.37", "-136.684, -402.316, 2.36084, 0.37", "-136.225, -403.077, 1.87097, 0.37", "-136.185, -403.135, 1.83475, 0.37", "-135.772, -403.729, 1.45253, 0.37", "-135.734, -403.789, 1.41255, 0.37", "-135.307, -404.672, 0.785354, 0.37" ],
    "parent" : "dend_121",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "-32.7793, -369.77, 1.22642, 0.52", "-32.8047, -370.913, 1.35855, 0.52", "-32.835, -371.842, 1.28779, 0.52", "-32.8833, -373.135, 1.1028, 0.52", "-32.8922, -373.296, 1.07444, 0.52", "-32.9986, -374.923, 0.767777, 0.52", "-33.004, -374.992, 0.75423, 0.52", "-33.1335, -377.017, 0.194762, 0.52", "-33.1382, -377.072, 0.177403, 0.52", "-33.2775, -378.155, -0.19974, 0.52", "-33.2921, -378.241, -0.228628, 0.52", "-33.3322, -378.415, -0.287458, 0.88", "-33.3433, -378.471, -0.299682, 0.88", "-33.422, -378.974, -0.293979, 1.11", "-33.4282, -379.032, -0.294047, 1.11", "-33.4598, -379.746, -0.296158, 1.11", "-33.4626, -379.844, -0.296873, 1.11", "-33.4682, -380.634, -0.301311, 0.81", "-33.4681, -380.731, -0.301577, 0.81", "-33.4523, -381.533, -0.311828, 0.81", "-33.4508, -381.604, -0.312572, 0.81" ],
    "parent" : "dend_104",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "-32.7793, -369.77, 1.22642, 0.22", "-33.3104, -370.001, 1.489, 0.22", "-33.8181, -370.225, 1.83923, 0.22", "-33.9705, -370.298, 1.95594, 0.22", "-35.0443, -370.854, 2.80055, 0.22", "-35.8848, -371.328, 3.47308, 0.22", "-35.9456, -371.366, 3.52232, 0.22", "-36.7706, -371.939, 4.44475, 0.29", "-36.9987, -372.125, 4.79657, 0.29", "-37.1234, -372.28, 5.10365, 0.44", "-37.1343, -372.409, 5.3625, 0.44", "-37.1101, -372.555, 5.62182, 0.44", "-37.0982, -373.501, 7.04471, 0.22", "-37.0999, -373.543, 7.10074, 0.22", "-37.1554, -374.148, 7.81463, 0.22", "-37.1721, -374.249, 7.91265, 0.22", "-37.469, -375.456, 8.92669, 0.22", "-37.8175, -376.55, 9.66033, 0.22", "-37.8694, -376.678, 9.71902, 0.22", "-38.2639, -377.409, 9.95809, 0.22", "-38.7586, -378.061, 10.0273, 0.22", "-38.8597, -378.164, 9.98742, 0.59", "-39.629, -378.657, 9.29915, 0.59", "-40.3988, -378.997, 8.46537, 0.22", "-40.9802, -379.168, 7.82386, 0.22", "-41.0269, -379.172, 7.77101, 0.22", "-41.2243, -379.167, 7.53907, 0.66", "-41.5377, -379.172, 7.20869, 0.66" ],
    "parent" : "dend_104",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "-9.87496, -373.131, -39.4493, 0.88", "-11.0838, -374.778, -43.0071, 0.88", "-11.2455, -375.067, -43.4896, 0.88", "-11.271, -375.126, -43.5757, 0.88", "-11.4858, -375.704, -44.3545, 0.29", "-11.641, -376.198, -44.9347, 0.29", "-11.6559, -376.252, -44.9908, 0.29", "-11.7913, -377.263, -45.3912, 0.29", "-11.8838, -377.926, -45.7334, 0.52", "-11.898, -378.005, -45.779, 0.52", "-12.0541, -378.617, -46.1556, 0.52", "-12.1737, -378.951, -46.3962, 0.52", "-12.4928, -379.513, -46.8777, 0.29", "-13.3265, -380.532, -47.8435, 0.66", "-13.6041, -380.835, -48.1128, 0.66", "-13.8627, -381.113, -48.406, 0.66", "-13.9046, -381.155, -48.4586, 0.66", "-14.4321, -381.771, -49.2323, 0.15", "-14.6675, -382.161, -49.691, 0.44", "-14.7751, -382.467, -50.0174, 0.44", "-14.9607, -383.381, -50.9861, 0.29", "-14.9652, -383.428, -51.037, 0.29", "-14.987, -384.029, -51.6804, 0.29", "-14.9402, -385.114, -52.7741, 0.29", "-14.8688, -385.798, -53.4167, 0.59", "-14.8159, -386.189, -53.7436, 0.59", "-14.6451, -387.68, -54.7924, 0.59", "-14.639, -387.74, -54.8307, 0.59", "-14.5762, -388.464, -55.2431, 0.59", "-14.4655, -389.295, -55.6035, 0.59", "-14.3344, -390.251, -55.9247, 0.59", "-14.257, -390.799, -56.0935, 1.18", "-14.1975, -391.281, -56.1984, 1.55", "-14.1894, -391.347, -56.2117, 1.55", "-14.1301, -391.853, -56.321, 1.55", "-14.1204, -391.946, -56.3445, 1.55", "-14.027, -393.104, -56.6407, 0.52", "-13.9348, -394.375, -56.9811, 0.52", "-13.8594, -395.98, -57.4054, 0.52", "-13.8541, -396.634, -57.5711, 1.03", "-13.8794, -397.533, -57.7888, 1.03", "-13.9321, -398.572, -58.0204, 1.03", "-13.9369, -398.64, -58.0315, 1.03", "-14.0004, -399.561, -58.1495, 1.4", "-14.0288, -400.103, -58.1816, 1.4", "-14.0266, -400.321, -58.1774, 1.4", "-14.0034, -400.546, -58.1629, 1.4", "-13.8299, -401.574, -58.097, 0.88", "-13.6397, -402.495, -58.0108, 0.88", "-13.4764, -403.153, -57.9343, 0.88", "-13.3144, -403.702, -57.8637, 0.44", "-12.9178, -404.976, -57.6905, 0.44", "-12.8965, -405.041, -57.6792, 0.44", "-12.6572, -405.742, -57.5358, 1.03", "-12.4969, -406.25, -57.4189, 1.33", "-12.3605, -406.736, -57.3113, 1.33", "-12.3448, -406.802, -57.2987, 1.33", "-12.1595, -407.774, -57.1373, 0.44", "-12.0182, -408.858, -56.9906, 0.29", "-11.9381, -409.915, -56.8154, 0.15", "-11.9048, -410.934, -56.6067, 0.15", "-11.9052, -412.017, -56.3602, 0.15", "-11.9035, -412.173, -56.3228, 0.81", "-11.8931, -412.77, -56.1738, 0.81", "-11.848, -414.086, -55.773, 0.22", "-11.7854, -415.317, -55.3503, 0.22", "-11.7811, -415.383, -55.3245, 0.22", "-11.6623, -416.579, -54.8342, 0.22", "-11.6457, -416.688, -54.7932, 0.52", "-11.628, -416.764, -54.7709, 0.52", "-11.4736, -417.398, -54.735, 0.52" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "-9.87496, -373.131, -39.4493, 0.29", "-11.5985, -373.315, -43.2977, 0.29", "-11.7594, -373.332, -43.657, 0.59", "-11.9998, -373.358, -44.1936, 0.59", "-12.128, -373.371, -44.4799, 0.88" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-75.4883, 269.283, -53.3222, 0.37", "-75.6023, 270.029, -53.1963, 0.37", "-75.7353, 270.92, -53.0081, 0.37", "-75.7463, 270.998, -52.9908, 0.37", "-75.9166, 272.486, -52.6549, 0.37", "-76.083, 274.131, -52.2956, 0.37", "-76.1661, 275.18, -52.0772, 0.74", "-76.1812, 275.47, -52.02, 1.03", "-76.2142, 276.187, -51.8763, 1.18", "-76.2148, 276.582, -51.807, 1.33", "-76.1552, 277.341, -51.6985, 0.81", "-76.0824, 277.927, -51.7012, 0.29", "-76.0729, 277.995, -51.7088, 0.29", "-75.9983, 278.508, -51.7793, 0.29", "-75.8235, 279.693, -51.9665, 0.29", "-75.7645, 280.108, -52.0344, 0.66", "-75.5503, 281.479, -52.2799, 0.15", "-75.4853, 281.903, -52.361, 1.11", "-75.3508, 282.727, -52.5264, 1.11", "-75.3389, 282.796, -52.5415, 1.11", "-75.1964, 283.696, -52.7643, 1.33" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-75.4883, 269.283, -53.3222, 0.22", "-75.4158, 269.282, -53.329, 0.22", "-74.125, 269.005, -53.4908, 0.22", "-74.0147, 268.975, -53.5124, 0.52", "-73.9486, 268.955, -53.5269, 0.52", "-73.4156, 268.785, -53.7112, 0.52", "-72.9872, 268.68, -53.8742, 0.22", "-71.3802, 268.336, -54.5405, 0.22", "-70.9754, 268.254, -54.7248, 0.74", "-70.5915, 268.184, -54.8988, 0.74", "-69.5092, 268.013, -55.3867, 0.15", "-67.8174, 267.813, -56.2007, 0.15", "-67.4879, 267.792, -56.3563, 0.59", "-67.351, 267.795, -56.4244, 0.59", "-67.2864, 267.796, -56.453, 0.59", "-67.2118, 267.797, -56.4838, 0.15", "-65.6981, 267.773, -56.9938, 0.15", "-65.43, 267.749, -57.1276, 0.81", "-65.3591, 267.743, -57.1655, 0.81", "-65.1017, 267.723, -57.3066, 0.81", "-65.0312, 267.717, -57.3454, 0.81" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "79.0529, 286.067, -61.32, 0.52", "79.6583, 286.559, -61.7643, 0.52", "80.3636, 287.126, -62.1913, 0.37", "80.8085, 287.483, -62.4607, 0.37", "81.4262, 287.979, -62.8347, 0.96", "81.9382, 288.391, -63.1448, 1.33", "81.9942, 288.436, -63.1787, 1.33", "82.7443, 289.051, -63.5453, 1.62" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "79.0529, 286.067, -61.32, 0.22", "78.883, 287.672, -61.001, 0.22", "78.8706, 287.767, -60.9859, 0.22", "78.5878, 289.37, -60.7855, 0.22", "78.5415, 289.583, -60.7643, 0.74", "78.4932, 289.783, -60.7469, 0.74", "78.2768, 290.585, -60.6852, 0.88", "78.0983, 291.205, -60.6852, 0.88", "77.8101, 291.972, -60.6852, 0.44", "77.4379, 292.656, -60.7475, 0.29", "77.359, 292.782, -60.7699, 0.29", "77.12, 293.123, -60.8574, 0.29", "77.063, 293.199, -60.8821, 0.66", "76.6938, 293.704, -61.0847, 0.88", "76.0439, 294.635, -61.4933, 0.96", "75.7135, 295.116, -61.6971, 0.52", "75.2454, 295.807, -61.9625, 0.44", "74.8847, 296.351, -62.1534, 0.44", "74.4686, 296.956, -62.3881, 0.44", "74.2148, 297.316, -62.5317, 1.18", "73.7149, 297.995, -62.7746, 1.47", "73.415, 298.395, -62.9288, 1.47", "73.3657, 298.453, -62.9523, 1.47", "72.4865, 299.346, -63.2942, 0.29", "72.4442, 299.385, -63.3075, 0.29", "71.829, 299.927, -63.4666, 0.29", "70.9354, 300.698, -63.6572, 0.29", "70.3787, 301.169, -63.7389, 0.29", "69.7565, 301.712, -63.7873, 0.29", "69.7055, 301.76, -63.7871, 0.29", "68.7717, 302.659, -63.7871, 0.29", "68.7227, 302.708, -63.7871, 0.29", "68.1041, 303.37, -63.8301, 0.74", "67.5804, 304.022, -63.9016, 1.11", "67.2247, 304.477, -63.9692, 1.4", "67.1824, 304.53, -63.9788, 1.4", "66.7647, 305.106, -64.0935, 1.4", "66.1547, 305.95, -64.2665, 0.29", "66.115, 306.008, -64.281, 0.29", "65.5619, 306.803, -64.5057, 0.29", "65.5165, 306.868, -64.524, 0.29", "64.874, 307.819, -64.784, 0.29", "64.8119, 307.917, -64.8087, 0.29", "64.4271, 308.588, -64.9302, 0.29", "64.3101, 308.819, -64.9761, 0.59", "64.1377, 309.289, -65.0881, 1.03" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "43.898, 137.424, -110.642, 0.66", "42.3231, 135.912, -113.542, 0.66", "41.8826, 135.486, -114.307, 0.66", "40.435, 134.137, -116.572, 0.37", "39.6095, 133.443, -117.692, 0.37", "39.0758, 133.021, -118.356, 0.66", "38.658, 132.69, -118.885, 0.66", "38.6131, 132.656, -118.927, 0.66", "38.125, 132.352, -119.519, 0.66", "37.549, 132.112, -120.338, 0.37", "37.5184, 132.099, -120.4, 0.37", "36.7106, 131.677, -122.169, 0.37", "36.6733, 131.654, -122.259, 0.37", "35.7457, 130.925, -124.782, 0.37", "35.7224, 130.901, -124.855, 0.37", "35.1627, 130.186, -126.737, 0.37", "34.8852, 129.853, -127.605, 0.37", "34.8604, 129.825, -127.676, 0.37", "34.3969, 129.306, -128.841, 0.88", "34.193, 129.058, -129.333, 1.33", "33.5249, 128.337, -131.016, 0.88", "32.7433, 127.621, -132.886, 0.29", "32.7116, 127.594, -132.954, 0.29", "32.1265, 127.129, -134.135, 0.29", "31.6043, 126.718, -135.208, 0.96", "30.4852, 125.877, -137.729, 0.59", "30.1716, 125.648, -138.454, 0.59", "29.7637, 125.343, -139.422, 0.59", "29.1644, 124.897, -140.922, 1.11", "28.2856, 124.258, -143.323, 1.69", "27.302, 123.609, -145.929, 1.69", "26.5917, 123.16, -147.951, 1.69" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "43.898, 137.424, -110.642, 0.44", "44.5708, 138.462, -111.416, 0.44", "44.5973, 138.509, -111.459, 0.44", "45.1083, 139.47, -112.347, 0.44", "45.4604, 140.143, -112.935, 0.44", "45.6372, 140.492, -113.199, 0.44", "46.1267, 141.497, -113.984, 0.44", "46.8607, 143.063, -115.078, 0.29", "46.8926, 143.135, -115.127, 0.29", "47.1604, 143.804, -115.57, 0.29", "47.5529, 144.741, -116.331, 0.29", "48.063, 145.97, -117.483, 1.11", "48.2409, 146.411, -117.938, 1.47", "48.2587, 146.461, -117.986, 1.47", "48.3364, 146.713, -118.23, 1.47", "48.8126, 148.511, -120.042, 0.37", "48.9493, 149.117, -120.659, 0.37", "48.9607, 149.169, -120.703, 0.37", "49.0831, 149.839, -121.297, 1.11", "49.127, 150.012, -121.425, 1.11", "49.289, 150.453, -121.644, 1.77", "49.3126, 150.509, -121.659, 1.77", "49.5862, 151.117, -121.8, 1.77", "50.2152, 152.485, -122.12, 2.06", "50.9526, 153.968, -122.521, 0.37", "51.722, 155.511, -122.911, 0.37", "51.8731, 155.796, -122.982, 1.33", "52.3767, 156.709, -123.196, 1.33", "52.4098, 156.768, -123.208, 1.33", "52.8836, 157.639, -123.316, 0.29", "53.4923, 158.846, -123.539, 0.29", "53.8757, 159.693, -123.751, 0.29", "53.9034, 159.756, -123.769, 0.29", "54.4555, 161.069, -124.129, 0.29", "55.0508, 162.604, -124.61, 0.29", "55.3717, 163.507, -124.901, 1.18", "55.7875, 164.72, -125.315, 1.55", "56.1192, 165.739, -125.648, 1.92", "56.3943, 166.613, -125.909, 1.92", "56.9167, 168.205, -126.344, 0.88", "57.3973, 169.602, -126.701, 0.88", "57.5437, 170.024, -126.792, 0.88", "58.2687, 172.049, -127.173, 0.22", "58.9951, 174.115, -127.535, 0.22", "59.4132, 175.301, -127.711, 0.22", "59.6704, 176.021, -127.784, 0.88", "60.0243, 177.017, -127.88, 1.18", "60.3821, 178.075, -127.97, 1.33", "60.4034, 178.141, -127.974, 1.33", "60.6319, 178.888, -128.01, 1.33", "60.8073, 179.605, -128.02, 0.37", "60.9952, 180.369, -128.024, 0.37", "61.2005, 181.18, -128.05, 0.37", "61.2005, 181.18, -128.05, 0.74", "61.2259, 181.256, -128.057, 0.74", "61.5406, 182.143, -128.158, 0.74", "62.0089, 183.396, -128.326, 0.22", "62.0343, 183.46, -128.335, 0.22", "62.5755, 184.734, -128.513, 0.22", "62.9162, 185.535, -128.629, 1.11", "63.1539, 186.13, -128.712, 1.84", "63.1886, 186.222, -128.715, 1.84", "63.3912, 186.781, -128.68, 1.84", "63.4168, 186.845, -128.673, 1.84", "63.8717, 187.898, -128.516, 1.33", "64.3637, 188.992, -128.359, 0.81", "65.009, 190.41, -128.154, 0.29", "65.4295, 191.345, -128.017, 0.29", "65.8363, 192.261, -127.886, 0.29", "66.3687, 193.539, -127.718, 0.29", "67.1374, 195.482, -127.485, 0.29", "67.2277, 195.721, -127.467, 0.88", "67.2498, 195.787, -127.465, 0.88", "67.5067, 196.622, -127.45, 0.88", "67.9111, 198.074, -127.424, 0.29", "67.9677, 198.273, -127.423, 0.29", "68.3817, 199.602, -127.442, 0.29", "68.4977, 199.948, -127.454, 0.88", "68.6546, 200.396, -127.47, 0.88", "68.9857, 201.287, -127.509, 0.88", "69.2209, 201.869, -127.539, 0.29", "69.8284, 203.36, -127.616, 0.29", "69.8547, 203.423, -127.619, 0.29", "70.2482, 204.332, -127.66, 0.29", "70.2806, 204.404, -127.666, 1.11", "70.3325, 204.502, -127.677, 1.11", "70.7488, 205.201, -127.761, 1.11", "71.1771, 205.831, -127.851, 0.66", "71.5198, 206.302, -127.922, 0.37", "72.5013, 207.507, -128.112, 0.29", "73.6312, 208.794, -128.312, 0.29", "73.9063, 209.084, -128.356, 0.81", "74.307, 209.476, -128.412, 1.18", "74.3728, 209.538, -128.423, 1.18", "75.0099, 210.146, -128.538, 1.18", "75.389, 210.506, -128.603, 1.11", "75.738, 210.85, -128.68, 0.88", "76.3766, 211.51, -128.835, 0.52", "77.2954, 212.518, -129.073, 0.29", "77.9124, 213.25, -129.315, 0.29", "77.9531, 213.303, -129.336, 0.29", "78.2551, 213.722, -129.516, 0.96", "78.3385, 213.844, -129.566, 0.96", "78.6743, 214.352, -129.786, 0.96", "79.8041, 216.114, -130.483, 0.29", "79.8458, 216.18, -130.507, 0.29", "80.2594, 216.821, -130.723, 0.29", "81.0692, 218.085, -131.099, 0.29", "81.5726, 218.856, -131.302, 0.59", "82.1857, 219.771, -131.513, 0.59", "82.7839, 220.649, -131.655, 0.74", "83.2271, 221.298, -131.762, 0.88", "83.6065, 221.863, -131.847, 0.88", "83.643, 221.922, -131.854, 0.88", "84.0367, 222.598, -131.898, 0.29", "84.5345, 223.564, -131.953, 0.29", "84.5681, 223.635, -131.956, 0.29", "84.9666, 224.454, -131.986, 1.11", "85.3781, 225.217, -131.948, 1.92", "86.008, 226.254, -131.826, 0.29", "86.4838, 226.967, -131.694, 0.29", "86.5236, 227.022, -131.682, 0.29", "87.111, 227.789, -131.507, 0.29", "88.1146, 228.983, -131.134, 0.29", "88.6089, 229.537, -130.922, 0.29", "88.748, 229.693, -130.837, 1.03", "89.2881, 230.324, -130.483, 1.25", "89.5939, 230.699, -130.283, 1.25", "90.4687, 231.831, -129.709, 0.29", "90.9174, 232.422, -129.429, 0.88", "92.0232, 233.905, -128.712, 0.29", "93.2343, 235.512, -127.964, 0.29", "93.7967, 236.241, -127.642, 0.29", "94.0606, 236.586, -127.51, 0.81", "94.1507, 236.706, -127.475, 0.81", "94.95, 237.734, -127.234, 0.81", "95.7373, 238.714, -127.097, 0.81", "96.1183, 239.181, -127.028, 0.59", "96.6415, 239.835, -126.941, 0.29", "97.0661, 240.372, -126.89, 0.29", "97.4775, 240.896, -126.861, 1.11", "97.5179, 240.953, -126.861, 1.11", "97.8573, 241.462, -126.867, 1.55", "98.4874, 242.397, -126.879, 0.29", "98.9129, 242.916, -126.894, 0.22", "99.0152, 243.025, -126.899, 0.22", "100.629, 244.547, -126.973, 0.22", "100.788, 244.677, -126.995, 0.88", "101.196, 244.977, -127.078, 0.88", "102.911, 246.152, -127.41, 0.29", "103.16, 246.311, -127.453, 0.74", "104.034, 246.829, -127.591, 0.74", "105.448, 247.575, -127.792, 0.22", "106.383, 248.097, -127.907, 0.22", "107.418, 248.739, -128.116, 1.03", "107.872, 249.047, -128.241, 1.33", "108.499, 249.474, -128.436, 1.55", "108.93, 249.759, -128.539, 1.55", "108.988, 249.797, -128.548, 1.55", "110.675, 250.817, -128.862, 0.29", "111.798, 251.511, -129.091, 0.29", "111.92, 251.593, -129.109, 0.29", "113.148, 252.464, -129.221, 0.29", "113.227, 252.523, -129.222, 0.29", "113.885, 253.025, -129.124, 0.29", "114.673, 253.633, -128.879, 0.29", "115.192, 254.062, -128.685, 0.29", "115.259, 254.121, -128.66, 0.29", "116.619, 255.372, -128.177, 0.29", "117.471, 256.181, -127.87, 0.59", "118.209, 256.906, -127.59, 0.59", "119.693, 258.394, -127.021, 0.15", "120.89, 259.619, -126.578, 0.15", "120.938, 259.67, -126.563, 0.15", "121.5, 260.289, -126.418, 0.22", "121.5, 260.289, -126.418, 1.11", "121.845, 260.708, -126.381, 1.11", "122.145, 261.083, -126.38, 1.11", "123.444, 262.751, -126.401, 0.15", "123.75, 263.155, -126.412, 0.66", "124.464, 264.106, -126.449, 0.66", "124.87, 264.655, -126.475, 0.96", "125.238, 265.157, -126.503, 0.81", "125.286, 265.223, -126.508, 0.81", "125.729, 265.859, -126.559, 0.22", "125.792, 265.943, -126.565, 0.22", "127.027, 267.587, -126.66, 0.22", "127.213, 267.827, -126.668, 0.59", "127.263, 267.889, -126.668, 0.59", "127.609, 268.325, -126.668, 0.59", "127.655, 268.38, -126.668, 0.59", "128.091, 268.854, -126.724, 1.4", "128.806, 269.662, -126.859, 1.77", "129.419, 270.362, -126.984, 2.21", "129.836, 270.843, -127.074, 2.21", "130.741, 271.891, -127.274, 0.66", "132.553, 273.996, -127.685, 0.22", "134.181, 275.844, -128.062, 0.22", "134.227, 275.898, -128.073, 0.22", "134.554, 276.25, -128.157, 0.74", "134.979, 276.683, -128.254, 1.11", "135.028, 276.731, -128.265, 1.11", "135.506, 277.166, -128.361, 1.11", "135.614, 277.256, -128.384, 1.11", "137.833, 279.065, -128.866, 0.22", "140.392, 281.074, -129.13, 0.22", "141.091, 281.613, -129.138, 1.4", "141.382, 281.836, -129.112, 1.4", "141.87, 282.205, -129.021, 1.4", "141.927, 282.246, -129.005, 1.4", "144.781, 284.233, -127.758, 0.22", "146.375, 285.269, -126.942, 0.22", "147.245, 285.824, -126.481, 0.81", "147.685, 286.107, -126.271, 1.11", "148.422, 286.59, -125.949, 1.11", "148.472, 286.623, -125.931, 1.11", "149.437, 287.24, -125.741, 0.22", "149.502, 287.283, -125.725, 0.22", "151.107, 288.398, -125.327, 0.22", "151.493, 288.671, -125.181, 0.88", "151.548, 288.711, -125.155, 0.88", "151.99, 289.063, -124.887, 0.88", "153.312, 290.159, -123.98, 0.22", "154.303, 290.982, -123.285, 0.22", "155.175, 291.718, -122.665, 0.96", "155.82, 292.252, -122.249, 0.96", "157.654, 293.734, -121.2, 0.22", "158.404, 294.332, -120.822, 0.66", "158.983, 294.782, -120.587, 0.66", "159.696, 295.311, -120.351, 0.66", "160.243, 295.674, -120.247, 0.96", "161.151, 296.208, -120.141, 0.96", "161.767, 296.535, -120.132, 0.22", "161.828, 296.567, -120.131, 0.22", "162.776, 297.064, -120.106, 0.22", "164.322, 297.888, -120.2, 0.22", "164.752, 298.146, -120.255, 0.59", "165.161, 298.432, -120.327, 0.88", "165.329, 298.559, -120.362, 0.88", "165.995, 299.103, -120.55, 0.88", "167.567, 300.499, -121.1, 0.22", "168.839, 301.688, -121.624, 0.22", "170.198, 302.989, -122.218, 0.22", "170.244, 303.036, -122.239, 0.22", "171.021, 303.853, -122.609, 0.96", "171.626, 304.556, -122.889, 0.96", "172.321, 305.446, -123.179, 0.22", "172.545, 305.749, -123.273, 0.81", "172.796, 306.095, -123.371, 1.11", "174.389, 308.338, -123.894, 0.22", "175.549, 310.012, -124.188, 0.22", "175.786, 310.371, -124.269, 0.96", "176.193, 310.997, -124.435, 1.18", "176.358, 311.234, -124.507, 1.18", "176.691, 311.707, -124.651, 1.18", "176.73, 311.762, -124.673, 1.18", "177.689, 313.071, -125.334, 0.22", "177.734, 313.131, -125.365, 0.22", "179.411, 315.307, -126.536, 0.22", "180.557, 316.757, -127.284, 0.22", "181.465, 317.874, -127.805, 1.25", "181.507, 317.926, -127.825, 1.25", "181.95, 318.481, -128.003, 1.4", "181.992, 318.534, -128.02, 1.4", "182.512, 319.193, -128.24, 1.4", "184.827, 322.011, -129.068, 0.22", "185.589, 322.942, -129.274, 0.22", "185.653, 323.019, -129.289, 0.22", "185.92, 323.333, -129.342, 0.74", "185.965, 323.385, -129.349, 0.74", "186.467, 323.932, -129.399, 0.74", "186.695, 324.15, -129.408, 0.15", "188.601, 325.912, -129.559, 0.15", "188.788, 326.086, -129.579, 0.88", "188.912, 326.202, -129.595, 0.88", "189.402, 326.661, -129.665, 0.88", "190.205, 327.388, -129.826, 0.22", "191.005, 328.108, -130.063, 0.22", "191.056, 328.152, -130.084, 0.22", "191.288, 328.359, -130.185, 0.66", "191.638, 328.678, -130.377, 0.66", "192.61, 329.722, -131.094, 0.15", "192.999, 330.182, -131.427, 0.74", "193.037, 330.231, -131.464, 0.74", "193.378, 330.69, -131.903, 0.74", "194.152, 331.803, -132.931, 0.22", "195.025, 333.176, -134.147, 0.22", "195.084, 333.275, -134.229, 0.22", "195.243, 333.535, -134.428, 0.88", "196.506, 335.535, -135.807, 0.22", "198.023, 337.819, -137.133, 0.22", "198.242, 338.127, -137.246, 1.11", "198.64, 338.65, -137.339, 1.4", "198.944, 339.037, -137.357, 0.22", "199.835, 340.112, -137.237, 0.22", "200.445, 340.806, -137.01, 0.22", "201.83, 342.271, -136.407, 0.22", "202.385, 342.835, -136.159, 0.66", "202.531, 342.983, -136.091, 0.66", "202.95, 343.406, -135.906, 0.66", "203.052, 343.506, -135.863, 0.66", "203.715, 344.058, -135.698, 0.66", "204.108, 344.318, -135.654, 0.22", "204.16, 344.348, -135.653, 0.22", "205.273, 344.948, -135.618, 0.22", "205.338, 344.981, -135.615, 0.22", "206.765, 345.649, -135.557, 0.22", "207.279, 345.9, -135.562, 1.03", "208.472, 346.523, -135.605, 1.03", "209.927, 347.323, -135.673, 0.22", "210.771, 347.816, -135.764, 0.22", "210.837, 347.86, -135.774, 0.22", "213.673, 350.1, -136.384, 0.22", "214.218, 350.59, -136.527, 0.96", "214.82, 351.203, -136.704, 1.18", "215.73, 352.392, -136.98, 0.15", "216.536, 353.737, -137.081, 0.15", "216.695, 354.093, -137.053, 0.37", "216.787, 354.499, -136.916, 0.37", "216.869, 355.79, -136.333, 0.22", "216.722, 358.241, -134.967, 0.22", "216.544, 359.525, -134.134, 1.47", "216.453, 359.918, -133.87, 1.47", "216.135, 360.955, -133.199, 0.22", "215.391, 362.886, -132.104, 0.22", "215.056, 363.595, -131.784, 1.03", "215.015, 363.659, -131.76, 1.03", "214.575, 364.316, -131.608, 1.03", "214.395, 364.591, -131.568, 0.22", "213.639, 365.828, -131.528, 0.22", "213.508, 366.052, -131.531, 0.22", "212.715, 367.431, -131.55, 0.22", "212.677, 367.5, -131.548, 0.22", "212.42, 367.978, -131.516, 0.52", "212.29, 368.233, -131.492, 0.74", "211.947, 368.923, -131.414, 0.74", "211.599, 369.677, -131.33, 0.22", "210.99, 371.095, -131.178, 0.22", "210.869, 371.37, -131.152, 0.66", "210.681, 371.788, -131.116, 0.66", "210.425, 372.346, -131.08, 0.15", "209.883, 373.546, -131.039, 0.15", "209.619, 374.154, -131.047, 0.96", "209.374, 374.711, -131.026, 1.25", "209.264, 374.954, -131.004, 1.25", "209.041, 375.448, -130.936, 1.25", "208.976, 375.597, -130.9, 1.25", "208.791, 376.014, -130.771, 1.25", "208.457, 376.787, -130.498, 1.25", "208.286, 377.182, -130.344, 0.22", "207.633, 378.665, -129.729, 0.22", "207.332, 379.327, -129.44, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "48.1944, 176.157, -97.1234, 0.22", "47.3338, 176.873, -97.254, 0.22", "46.9553, 177.335, -97.5146, 0.22", "46.7101, 177.635, -97.6835, 0.37", "46.6561, 177.701, -97.7207, 0.37", "46.2998, 178.137, -97.9661, 0.37", "45.4818, 179.137, -98.5294, 0.37", "44.8452, 180.25, -99.1282, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "48.1944, 176.157, -97.1234, 0.74", "47.6765, 177.966, -97.8751, 0.74", "47.5668, 178.669, -98.2833, 0.74", "47.5641, 178.738, -98.3188, 0.74", "47.5615, 179.582, -98.7256, 0.88", "47.5651, 179.645, -98.7521, 0.88", "47.6278, 180.373, -99.0361, 0.88", "47.9069, 182.176, -99.6382, 0.37", "48.263, 183.946, -100.208, 0.37", "48.2777, 184.01, -100.228, 0.37", "48.6783, 185.574, -100.668, 0.37", "48.8655, 186.255, -100.851, 1.11", "48.8852, 186.322, -100.867, 1.11", "49.242, 187.443, -101.051, 1.4", "49.4282, 187.966, -101.156, 1.4", "49.4511, 188.03, -101.17, 1.4", "49.8882, 189.318, -101.436, 1.4", "49.933, 189.459, -101.457, 1.4", "50.163, 190.29, -101.554, 1.4", "50.1976, 190.44, -101.567, 1.4", "50.3253, 191.07, -101.597, 1.4", "50.4519, 191.939, -101.599, 0.29", "50.5054, 192.747, -101.555, 0.29", "50.5165, 193.269, -101.531, 0.29", "50.5156, 193.484, -101.533, 0.66", "50.515, 193.552, -101.537, 0.66", "50.5201, 194.176, -101.613, 0.66", "50.5511, 194.921, -101.75, 0.44", "50.5567, 194.988, -101.765, 0.44", "50.694, 195.877, -101.998, 0.96", "50.7062, 195.935, -102.013, 0.96", "50.9149, 196.974, -102.251, 0.96", "50.9426, 197.122, -102.278, 0.96", "51.024, 197.63, -102.34, 0.96", "51.142, 198.489, -102.411, 0.59", "51.2376, 199.415, -102.447, 0.52", "51.3568, 200.633, -102.476, 0.52", "51.4785, 201.975, -102.521, 0.52", "51.5472, 202.818, -102.551, 1.18", "51.5518, 202.897, -102.553, 1.18", "51.6067, 203.988, -102.564, 1.69", "51.663, 205.057, -102.573, 1.69", "51.7481, 206.3, -102.582, 0.59", "51.874, 207.826, -102.555, 0.44", "52.0585, 209.671, -102.489, 0.44", "52.1475, 210.467, -102.443, 1.33", "52.2902, 211.601, -102.352, 1.69", "52.4195, 212.726, -102.234, 1.69", "52.5373, 213.969, -102.067, 0.96", "52.6405, 215.586, -101.857, 0.96", "52.6462, 215.803, -101.833, 0.96", "52.6426, 216.018, -101.813, 1.11", "52.5758, 217.147, -101.724, 0.81", "52.4156, 218.75, -101.632, 0.66", "52.1393, 220.76, -101.579, 0.59", "52.0354, 221.448, -101.595, 0.88", "52.0269, 221.516, -101.599, 0.88", "51.9456, 222.472, -101.724, 0.88", "51.9423, 222.598, -101.748, 0.88", "51.9847, 224.352, -102.203, 0.88", "52.0597, 225.647, -102.629, 0.52", "52.1574, 226.929, -103.089, 0.52", "52.2324, 227.896, -103.45, 0.88", "52.2725, 228.689, -103.745, 1.25", "52.2941, 229.449, -104.002, 1.47", "52.3004, 230.894, -104.409, 0.52", "52.2979, 230.964, -104.423, 0.52", "52.2379, 231.773, -104.546, 0.52", "52.1148, 233.127, -104.735, 0.66", "52.0332, 234.052, -104.868, 1.47", "51.9567, 235.128, -105.058, 2.14", "51.9534, 235.198, -105.071, 2.14", "51.9123, 236.044, -105.259, 2.14", "51.8439, 237.576, -105.697, 0.44", "51.7901, 238.733, -106.087, 0.44", "51.6921, 240.146, -106.616, 0.44", "51.6875, 240.21, -106.64, 0.44", "51.5853, 241.325, -107.102, 0.44", "51.4918, 242.257, -107.548, 1.18", "51.4048, 243.118, -107.987, 1.4", "51.3947, 243.239, -108.054, 1.4", "51.3533, 244.2, -108.56, 1.4", "51.3793, 246.05, -109.634, 0.52", "51.4663, 247.231, -110.377, 0.52", "51.4776, 247.359, -110.456, 0.52", "51.5416, 248.042, -110.875, 0.96", "51.6149, 248.955, -111.422, 0.96", "51.7287, 250.605, -112.438, 0.44", "51.7326, 250.709, -112.495, 0.44", "51.7057, 251.445, -112.878, 0.44", "51.636, 252.269, -113.356, 0.29", "51.4797, 253.558, -114.15, 0.29", "51.3018, 254.716, -114.87, 0.81", "51.1503, 255.667, -115.421, 0.81", "51.0707, 256.539, -115.985, 1.03", "51.07, 257.938, -117.027, 0.66", "51.1166, 258.452, -117.425, 0.66", "51.1477, 258.616, -117.552, 0.66", "51.2774, 259.094, -117.927, 0.66", "51.8165, 260.482, -118.99, 0.52", "52.2009, 261.346, -119.592, 0.37", "52.8354, 262.723, -120.421, 0.37", "53.4249, 263.977, -121.15, 0.37", "53.4913, 264.112, -121.229, 0.37", "54.1994, 265.491, -122.052, 0.37", "54.9038, 266.872, -122.795, 0.37", "55.1553, 267.311, -123.029, 1.47", "55.1962, 267.372, -123.064, 1.47", "55.9777, 268.482, -123.704, 1.84", "57.0945, 270.089, -124.756, 1.84" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_150",
    "id" : "dend_150",
    "points3d" : [ "150.484, -217.469, 29.05, 1.18", "151.341, -218.362, 28.9209, 1.18", "151.86, -218.875, 28.8539, 0.66", "152.411, -219.47, 28.8408, 0.59", "153.103, -220.366, 28.9018, 0.59", "153.155, -220.449, 28.9122, 0.59", "153.602, -221.282, 29.0422, 0.59", "153.627, -221.355, 29.0628, 0.59", "153.869, -222.613, 29.4628, 0.37", "153.947, -223.429, 29.733, 0.37", "153.967, -224.04, 29.9396, 0.52", "153.969, -224.107, 29.9626, 0.52", "153.986, -224.566, 30.1117, 0.66", "154.005, -224.708, 30.1522, 0.66", "154.368, -226.01, 30.4833, 0.66", "154.525, -226.459, 30.6124, 1.11", "154.841, -227.152, 30.8098, 1.4", "155.053, -227.552, 30.9217, 1.4", "155.438, -228.163, 31.1443, 0.59", "156.259, -229.297, 31.6355, 0.59", "156.302, -229.348, 31.6613, 0.59", "157.283, -230.414, 32.2268, 0.52", "157.339, -230.468, 32.2786, 0.52", "158.16, -231.266, 33.3846, 0.52", "158.186, -231.293, 33.431, 0.52", "158.311, -231.435, 33.7023, 1.11", "158.511, -231.706, 34.2156, 1.33", "159.426, -233.25, 37.0893, 0.88", "159.69, -233.745, 37.9291, 0.37", "159.712, -233.788, 37.9926, 0.37", "159.995, -234.312, 38.7105, 0.37", "160.018, -234.353, 38.7626, 0.37", "160.259, -234.68, 39.0862, 0.37", "160.368, -234.781, 39.0979, 0.37", "160.972, -235.115, 39.1627, 0.74", "161.427, -235.292, 39.2326, 1.4", "161.505, -235.314, 39.2465, 1.4", "162.489, -235.588, 39.4299, 1.4", "162.619, -235.636, 39.4558, 1.4", "163.629, -236.14, 39.7326, 0.88", "164.153, -236.487, 39.9094, 0.66", "164.231, -236.554, 39.9393, 0.66", "164.879, -237.298, 40.2683, 0.52", "165.631, -238.498, 40.7682, 0.52", "166.014, -239.309, 41.0592, 1.11", "166.269, -240.008, 41.2788, 1.11", "166.447, -240.566, 41.4525, 1.11", "166.746, -241.587, 41.7704, 0.81", "166.921, -242.194, 41.984, 0.29", "167.337, -243.456, 42.4615, 0.29", "167.393, -243.585, 42.5093, 0.29", "167.563, -243.896, 42.6363, 0.29", "167.607, -243.957, 42.6625, 0.29", "168.402, -244.804, 43.1078, 0.29", "168.457, -244.852, 43.1448, 0.29", "168.743, -245.057, 43.3566, 0.66", "169.257, -245.43, 43.8038, 0.66", "169.33, -245.482, 43.8635, 0.66", "170.009, -245.936, 44.3863, 0.96", "170.059, -245.969, 44.4229, 0.96", "170.507, -246.241, 44.7381, 0.96", "171.668, -246.888, 45.4876, 0.37", "172.585, -247.371, 46.0242, 0.37", "172.643, -247.404, 46.052, 0.37", "172.807, -247.507, 46.1055, 0.81", "172.983, -247.63, 46.1535, 0.81", "173.566, -248.101, 46.265, 0.81", "173.64, -248.17, 46.2695, 0.81", "174.352, -248.926, 46.3134, 0.81", "175.091, -249.733, 46.3532, 0.81", "175.137, -249.785, 46.3554, 0.81", "175.576, -250.284, 46.3708, 0.74", "175.819, -250.557, 46.3956, 1.25", "175.994, -250.745, 46.4217, 1.25", "176.292, -251.097, 46.4934, 1.25", "176.415, -251.274, 46.5565, 1.25", "176.893, -252.058, 46.9025, 1.25", "177.276, -252.752, 47.2806, 1.25", "177.601, -253.391, 47.6731, 0.29", "178.004, -254.196, 48.2288, 0.29", "178.413, -255.047, 48.8771, 0.74", "178.443, -255.104, 48.9241, 0.74", "178.825, -255.789, 49.4885, 0.74", "178.86, -255.837, 49.5232, 0.74", "179.583, -256.429, 49.6995, 0.74", "179.633, -256.457, 49.6837, 0.74", "180.125, -256.701, 49.4432, 0.74", "180.931, -257.062, 49.0311, 1.25", "181.312, -257.22, 48.8182, 1.4", "182.797, -257.834, 48.0087, 0.96", "183.787, -258.239, 47.4962, 0.37", "183.858, -258.267, 47.4645, 0.37", "185.176, -258.744, 46.9883, 0.37", "185.242, -258.767, 46.9769, 0.37", "185.708, -258.927, 46.9638, 1.11", "186.464, -259.211, 47.135, 1.84", "186.552, -259.249, 47.1612, 1.84", "186.995, -259.466, 47.3056, 2.14", "188.01, -260.018, 47.6679, 0.81", "188.075, -260.057, 47.6931, 0.81", "189.264, -260.815, 48.16, 0.59", "190.462, -261.653, 48.7388, 0.59", "190.505, -261.688, 48.7614, 0.59", "190.92, -262.089, 49.0322, 0.96", "191.412, -262.663, 49.4742, 1.18", "191.721, -263.104, 49.8428, 1.4", "192.253, -264.098, 50.7745, 0.37", "192.678, -265.039, 51.7169, 0.37", "192.967, -265.709, 52.3953, 0.81", "193.348, -266.687, 53.3755, 0.29", "193.366, -266.735, 53.4229, 0.29", "193.595, -267.441, 54.1081, 0.29", "193.809, -268.069, 54.6479, 0.29", "193.83, -268.123, 54.6856, 0.29", "194.038, -268.623, 54.903, 0.66", "194.375, -269.421, 55.1309, 0.88", "194.397, -269.476, 55.1468, 0.88", "194.65, -270.184, 55.3177, 0.88", "195.051, -271.266, 55.6009, 1.4", "195.469, -272.266, 55.9477, 1.4", "195.489, -272.314, 55.9746, 1.4", "195.857, -273.179, 56.4809, 0.66", "196.257, -274.117, 57.0891, 0.52", "196.725, -275.19, 57.911, 0.52", "197.179, -276.164, 58.7897, 0.52", "197.905, -277.651, 60.1452, 1.33" ],
    "parent" : "dend_148",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_149",
    "id" : "dend_149",
    "points3d" : [ "150.484, -217.469, 29.05, 0.37", "152.908, -217.239, 27.7376, 0.37", "153.793, -217.155, 27.2586, 0.37", "153.857, -217.149, 27.224, 0.37", "154.703, -217.069, 26.766, 0.37", "155.344, -217.008, 26.4189, 1.25", "155.956, -216.95, 26.0874, 1.4" ],
    "parent" : "dend_148",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_137",
    "id" : "dend_137",
    "points3d" : [ "140.653, -228.646, 9.03692, 0.59", "140.531, -229.068, 9.04392, 0.59", "140.342, -229.619, 9.1299, 0.52", "139.998, -230.473, 9.32851, 0.52", "139.636, -231.292, 9.55439, 0.44", "139.04, -232.498, 9.92109, 0.44", "138.664, -233.189, 10.1823, 0.44", "137.942, -234.268, 10.7756, 0.81", "137.68, -234.58, 11.0177, 0.81", "137.639, -234.619, 11.0575, 0.81", "137.347, -234.855, 11.3691, 0.29", "136.608, -235.419, 12.159, 0.29", "135.91, -235.996, 12.8751, 1.03", "135.471, -236.404, 13.2814, 1.11", "135.034, -236.82, 13.6959, 1.11", "134.194, -237.64, 14.4904, 0.29", "133.559, -238.283, 15.0813, 0.29", "132.99, -238.857, 15.5364, 1.11", "132.498, -239.387, 15.8863, 1.84" ],
    "parent" : "dend_135",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_136",
    "id" : "dend_136",
    "points3d" : [ "140.653, -228.646, 9.03692, 0.15", "140.705, -228.261, 9.06527, 0.15", "140.724, -228.188, 9.08857, 0.15", "141.015, -227.511, 9.37754, 0.15", "141.075, -227.398, 9.43189, 0.15", "141.386, -226.809, 9.71454, 0.15", "141.416, -226.753, 9.74171, 0.15", "142.025, -225.793, 10.2439, 1.4", "142.347, -225.37, 10.508, 1.4", "142.39, -225.328, 10.5431, 1.4" ],
    "parent" : "dend_135",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_124",
    "id" : "dend_124",
    "points3d" : [ "-135.307, -404.672, 0.785354, 0.22", "-134.164, -405.637, -0.977054, 0.22", "-133.888, -405.926, -1.45439, 0.22", "-133.825, -406.007, -1.5649, 0.22", "-133.638, -406.267, -1.90395, 0.22", "-133.441, -406.566, -2.32484, 0.74", "-133.32, -406.766, -2.60522, 0.88", "-132.875, -407.657, -3.7106, 0.22", "-132.55, -408.363, -4.63742, 0.22", "-132.529, -408.409, -4.69999, 0.22", "-132.17, -409.248, -5.9378, 0.96", "-132.094, -409.444, -6.23888, 1.25", "-132.066, -409.523, -6.36606, 1.25" ],
    "parent" : "dend_122",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_123",
    "id" : "dend_123",
    "points3d" : [ "-135.307, -404.672, 0.785354, 0.52", "-135.514, -405.59, 1.20139, 0.52", "-135.581, -405.852, 1.31821, 0.74", "-135.682, -406.372, 1.51814, 0.74", "-135.714, -406.567, 1.58657, 0.74", "-135.85, -407.692, 1.94857, 0.96", "-135.894, -408.236, 2.11043, 0.66", "-135.923, -408.859, 2.27089, 0.22", "-135.936, -409.645, 2.41443, 0.22", "-135.931, -409.764, 2.42544, 0.66", "-135.903, -410.116, 2.4247, 0.88", "-135.869, -410.426, 2.38428, 0.88", "-135.723, -411.335, 2.25744, 0.22", "-135.709, -411.402, 2.24805, 0.22", "-135.626, -411.802, 2.20712, 0.22", "-135.613, -411.87, 2.20223, 0.22", "-135.501, -412.662, 2.16781, 0.22", "-135.48, -412.856, 2.16479, 0.22", "-135.442, -413.436, 2.17442, 0.22", "-135.423, -414.598, 2.1929, 0.22", "-135.426, -414.726, 2.19483, 0.22", "-135.475, -415.598, 2.20676, 0.22", "-135.482, -415.676, 2.20773, 0.22", "-135.631, -416.872, 2.25913, 0.22", "-135.64, -416.94, 2.26386, 0.22", "-135.683, -417.39, 2.30438, 0.66", "-135.703, -417.812, 2.34686, 0.66", "-135.702, -417.881, 2.35459, 0.66", "-135.682, -418.723, 2.45817, 0.29", "-135.633, -419.661, 2.59185, 0.29", "-135.609, -420.095, 2.65529, 0.66", "-135.578, -420.608, 2.7332, 0.96", "-135.559, -420.858, 2.76988, 0.96" ],
    "parent" : "dend_122",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "-33.4508, -381.604, -0.312572, 0.29", "-33.579, -382.062, -0.358506, 0.29", "-33.6707, -382.631, -0.404429, 0.29", "-33.6712, -382.699, -0.415132, 0.29", "-33.5174, -383.603, -0.591915, 0.29", "-33.4946, -383.736, -0.618072, 0.29", "-33.3183, -384.772, -0.820748, 0.29", "-33.276, -384.933, -0.847502, 0.29", "-32.9437, -385.712, -1.01154, 2.06", "-32.5941, -386.31, -1.1615, 2.73" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "-33.4508, -381.604, -0.312572, 0.52", "-34.3575, -381.497, -0.694379, 0.52", "-34.9702, -381.425, -0.921938, 0.52", "-35.5342, -381.359, -1.13144, 0.81", "-35.882, -381.319, -1.26063, 1.11", "-36.0903, -381.294, -1.33801, 1.11", "-36.5748, -381.238, -1.51797, 1.11", "-36.6441, -381.229, -1.52859, 1.11" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-75.1964, 283.696, -52.7643, 0.29", "-74.8149, 285.19, -52.5181, 0.29", "-74.6972, 285.679, -52.5025, 0.29", "-74.2963, 287.49, -52.5842, 0.29", "-74.0288, 288.681, -52.6823, 0.29", "-74.0134, 288.747, -52.6892, 0.29", "-73.8272, 289.572, -52.7815, 0.29", "-73.5285, 290.929, -53.0507, 0.88", "-73.3516, 291.753, -53.2269, 1.18", "-73.3012, 292.005, -53.2852, 0.29", "-73.1263, 293.051, -53.5142, 0.29", "-73.0105, 293.752, -53.6489, 0.29", "-72.9621, 294.04, -53.6874, 0.66", "-72.9508, 294.118, -53.6889, 0.66", "-72.8923, 294.569, -53.6844, 0.66", "-72.8803, 294.729, -53.6783, 0.66", "-72.8685, 294.969, -53.6622, 0.22", "-72.8609, 295.598, -53.6397, 0.22", "-72.9216, 296.5, -53.6402, 0.22", "-72.9696, 296.979, -53.6305, 0.59", "-73.0372, 297.553, -53.6092, 0.59", "-73.0483, 297.63, -53.6055, 0.59", "-73.1935, 298.451, -53.5588, 0.22", "-73.5051, 299.884, -53.4852, 0.22", "-73.7232, 300.739, -53.451, 0.22", "-73.7369, 300.796, -53.4497, 0.88", "-73.8659, 301.352, -53.4292, 1.18", "-73.9672, 301.797, -53.4068, 1.18", "-73.9796, 301.858, -53.4022, 1.18", "-74.0381, 302.119, -53.3603, 1.18", "-74.2074, 302.807, -53.2141, 0.29", "-74.2248, 302.874, -53.1961, 0.29", "-74.537, 304.156, -52.7806, 0.29", "-74.5537, 304.231, -52.7537, 0.29", "-74.7992, 305.34, -52.3139, 0.29", "-74.8125, 305.403, -52.2868, 0.29", "-74.8656, 305.675, -52.1681, 0.22", "-74.9683, 306.267, -51.9249, 0.22", "-74.9883, 306.398, -51.8584, 0.22", "-75.1132, 307.267, -51.4148, 0.29", "-75.1213, 307.33, -51.3863, 0.29", "-75.2173, 308.022, -51.0081, 0.44", "-75.2274, 308.089, -50.9634, 0.44", "-75.3616, 308.873, -50.3844, 0.44", "-75.3724, 308.924, -50.3583, 0.44", "-75.4663, 309.318, -50.2428, 0.44", "-75.5478, 309.63, -50.1787, 0.22", "-75.5655, 309.696, -50.1705, 0.22", "-75.7524, 310.522, -50.004, 0.22", "-76.024, 311.913, -49.7092, 0.22", "-76.1694, 312.772, -49.5006, 0.22", "-76.181, 312.848, -49.481, 0.22", "-76.2683, 313.496, -49.3144, 1.18", "-76.4189, 315.151, -48.8837, 1.69", "-76.4412, 315.64, -48.749, 1.69", "-76.4389, 316.123, -48.6244, 1.4", "-76.4368, 316.819, -48.4844, 1.18", "-76.4549, 317.741, -48.3594, 0.29", "-76.4732, 318.489, -48.3093, 0.29", "-76.4753, 318.557, -48.3101, 0.29", "-76.5018, 319.796, -48.3362, 0.29", "-76.5101, 321.065, -48.3714, 0.29", "-76.4944, 322.105, -48.4057, 0.29", "-76.4579, 323.307, -48.4506, 0.22", "-76.4264, 323.745, -48.4675, 0.88", "-76.3374, 324.453, -48.4948, 1.25", "-76.2531, 324.88, -48.5119, 1.25", "-76.0694, 325.571, -48.5375, 0.52", "-75.9188, 326.051, -48.5426, 0.52", "-75.4648, 327.231, -48.5167, 0.22", "-75.2629, 327.699, -48.4925, 0.81", "-75.2302, 327.77, -48.488, 0.81", "-74.8857, 328.498, -48.4356, 0.81", "-74.6694, 328.927, -48.399, 0.22", "-74.1215, 329.95, -48.2954, 0.22", "-73.9012, 330.325, -48.2474, 0.81", "-73.6236, 330.756, -48.1881, 0.81" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-75.1964, 283.696, -52.7643, 0.29", "-74.5924, 283.792, -53.3892, 0.29", "-73.6749, 283.81, -54.1567, 0.29", "-72.7476, 283.797, -54.8905, 0.29", "-72.6617, 283.795, -54.9532, 0.29", "-72.2835, 283.785, -55.2172, 0.29", "-70.9545, 283.73, -56.1722, 0.29", "-69.6, 283.571, -57.1708, 0.22", "-69.5418, 283.562, -57.2136, 0.22", "-68.7161, 283.473, -57.7438, 0.22", "-68.6563, 283.471, -57.7853, 0.22", "-67.8585, 283.501, -58.3721, 1.03", "-67.7994, 283.504, -58.4108, 1.03", "-67.4638, 283.533, -58.6847, 1.03", "-67.1206, 283.555, -58.9537, 1.03", "-65.9593, 283.612, -60.2081, 0.22", "-65.913, 283.615, -60.2605, 0.22", "-64.9998, 283.693, -61.3132, 0.22", "-64.0293, 283.769, -62.4331, 0.81", "-63.5953, 283.799, -62.9451, 0.81", "-61.8366, 283.821, -65.6222, 0.22", "-61.3134, 283.782, -66.4991, 0.22", "-61.2321, 283.773, -66.6491, 0.96", "-60.9733, 283.737, -67.1784, 0.96", "-60.9352, 283.731, -67.2553, 0.96", "-58.9403, 283.457, -71.2555, 0.22", "-58.4424, 283.395, -72.1444, 0.22", "-58.3988, 283.39, -72.2142, 0.22", "-58.0437, 283.347, -72.6746, 0.22", "-57.7907, 283.326, -72.9266, 1.03", "-57.253, 283.302, -73.3214, 1.25", "-55.9308, 283.284, -73.9226, 0.22", "-54.4595, 283.26, -74.7722, 0.22", "-53.5797, 283.233, -75.3187, 0.22", "-52.3312, 283.229, -76.2525, 0.22", "-52.2029, 283.231, -76.3584, 0.96", "-52.0386, 283.239, -76.5076, 0.96", "-50.8464, 283.343, -77.8037, 0.22", "-50.1067, 283.415, -78.7841, 0.22", "-48.6021, 283.535, -80.9941, 0.22", "-48.6021, 283.535, -80.9941, 0.96", "-48.0293, 283.517, -81.9132, 0.52", "-47.1639, 283.47, -83.3297, 0.81", "-46.8211, 283.427, -83.8892, 0.66", "-46.7917, 283.416, -83.9548, 0.66", "-46.634, 283.182, -84.436, 0.66" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "82.7443, 289.051, -63.5453, 0.29", "82.8899, 290.098, -63.8544, 0.29", "83.0772, 290.833, -64.0548, 0.29", "83.1013, 290.905, -64.0739, 0.29", "83.2666, 291.292, -64.1658, 0.29", "83.3097, 291.383, -64.1991, 0.29", "83.4914, 291.743, -64.3515, 0.59", "83.6635, 292.0, -64.4678, 0.88", "83.702, 292.054, -64.4957, 0.88", "83.927, 292.365, -64.6831, 0.88", "84.5148, 293.28, -65.2346, 1.25", "84.5439, 293.337, -65.2631, 1.25", "84.6808, 293.705, -65.4426, 1.47", "84.774, 294.031, -65.5825, 1.69", "84.9811, 294.895, -65.9182, 1.69", "85.1285, 295.586, -66.171, 1.25", "85.3179, 296.578, -66.4888, 0.88", "85.5092, 297.715, -66.8527, 0.29", "85.664, 298.855, -67.2181, 0.29", "85.6707, 298.932, -67.2414, 0.29" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "82.7443, 289.051, -63.5453, 0.22", "84.2516, 288.763, -64.423, 0.22", "84.3181, 288.752, -64.4704, 0.22", "84.9812, 288.656, -64.9731, 0.59", "85.0402, 288.649, -65.015, 0.59", "85.4286, 288.598, -65.3199, 0.81", "85.811, 288.565, -65.682, 0.88", "86.6866, 288.542, -66.6516, 0.37", "86.7511, 288.539, -66.7267, 0.37", "87.2213, 288.536, -67.3131, 0.37", "87.9628, 288.56, -68.2702, 0.44", "88.6235, 288.643, -69.1577, 1.03", "88.7131, 288.663, -69.2777, 1.03", "89.2836, 288.878, -69.8704, 0.29", "89.6342, 289.046, -70.2052, 0.29", "89.7866, 289.141, -70.3371, 0.29", "90.205, 289.405, -70.5804, 0.29", "90.2603, 289.438, -70.6075, 0.29", "90.8278, 289.784, -70.8986, 0.29", "91.8725, 290.321, -71.4764, 0.66", "91.9335, 290.339, -71.5068, 0.66", "92.3684, 290.447, -71.691, 0.66", "92.4324, 290.461, -71.7154, 0.66", "92.8592, 290.544, -71.893, 0.66", "94.1311, 290.775, -72.4246, 0.29", "94.9676, 290.919, -72.7444, 0.29", "96.0257, 291.078, -73.158, 0.29", "96.0927, 291.087, -73.1851, 0.29", "97.5497, 291.227, -73.9017, 0.29", "97.9209, 291.252, -74.1188, 0.96", "98.3565, 291.274, -74.4055, 1.33", "98.6467, 291.28, -74.6312, 1.33", "98.7099, 291.275, -74.681, 1.33", "100.128, 291.142, -75.7944, 0.29", "100.2, 291.134, -75.8505, 0.29", "100.784, 291.063, -76.3443, 0.29", "101.425, 290.999, -76.9287, 0.66", "102.044, 290.949, -77.4969, 1.03" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "64.1377, 309.289, -65.0881, 0.22", "63.8201, 310.569, -66.1207, 0.22", "63.6837, 311.33, -66.6186, 0.22", "63.6763, 311.399, -66.6567, 0.22", "63.6624, 311.72, -66.8041, 0.22", "63.6627, 311.921, -66.8863, 0.44", "63.6726, 312.05, -66.9349, 0.44", "63.7487, 312.465, -66.9881, 0.44", "63.8003, 312.665, -67.0192, 0.44", "63.8667, 312.941, -67.0644, 0.44", "63.8814, 313.01, -67.0758, 0.44", "64.0264, 313.942, -67.2719, 0.29", "64.0632, 314.588, -67.4197, 0.29", "64.053, 315.06, -67.5334, 0.29", "64.044, 315.126, -67.5491, 0.52", "63.9634, 315.47, -67.6672, 0.52", "63.7853, 316.062, -67.9765, 0.52", "63.545, 316.721, -68.4898, 0.52", "63.5176, 316.788, -68.5616, 0.52", "63.3403, 317.203, -69.0822, 0.52", "63.0344, 317.953, -70.1003, 0.81", "62.8245, 318.706, -71.039, 1.18", "62.7213, 319.371, -71.8361, 0.74", "62.68, 320.131, -72.7239, 0.74", "62.6804, 320.18, -72.7743, 0.74", "62.6986, 320.392, -72.9728, 0.29", "62.9104, 321.951, -74.141, 0.29", "63.0185, 322.608, -74.5329, 0.66", "63.0386, 322.73, -74.5926, 0.66", "63.125, 323.287, -74.8437, 0.66", "63.2884, 324.729, -75.4778, 0.66", "63.3289, 325.046, -75.631, 1.33", "63.4488, 325.833, -75.9869, 1.77", "63.5228, 326.264, -76.1624, 1.77", "63.6811, 327.119, -76.4925, 0.44", "63.8782, 328.122, -76.86, 0.44", "64.3918, 331.17, -77.9712, 0.29", "64.6121, 332.838, -78.6102, 0.29", "64.6267, 332.967, -78.6614, 0.29", "64.6627, 333.373, -78.8284, 0.29", "64.6652, 333.437, -78.8563, 0.29", "64.647, 335.963, -80.0646, 0.29", "64.5748, 336.861, -80.5029, 0.29", "64.5688, 336.931, -80.5398, 0.29", "64.5224, 337.889, -81.0397, 1.18", "64.5386, 338.536, -81.3268, 0.22", "64.6408, 339.702, -81.7517, 0.22", "64.719, 340.142, -81.861, 0.96", "64.7755, 340.416, -81.9193, 0.96", "64.8684, 340.865, -81.9937, 0.22", "65.3064, 342.958, -82.1776, 0.22", "65.3458, 343.155, -82.1876, 0.81", "65.3953, 343.437, -82.2027, 0.81", "65.4732, 343.907, -82.2271, 0.15", "65.4957, 344.043, -82.2338, 0.15", "65.748, 345.602, -82.302, 0.15", "65.8385, 346.096, -82.3273, 0.59", "65.8522, 346.164, -82.3304, 0.59", "65.8971, 346.376, -82.3372, 0.59", "65.9124, 346.443, -82.3372, 0.59" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "64.1377, 309.289, -65.0881, 0.29", "62.7304, 309.095, -65.9266, 0.29", "61.8362, 309.003, -66.4413, 0.52", "61.4054, 308.969, -66.6792, 0.66", "61.3438, 308.965, -66.7122, 0.66", "60.6913, 308.942, -67.0567, 0.66", "60.1035, 308.927, -67.3587, 0.66", "57.2656, 308.9, -68.7022, 0.22", "56.9277, 308.913, -68.8687, 0.59", "56.6575, 308.939, -69.0102, 0.59", "56.5871, 308.949, -69.048, 0.59", "56.2645, 309.023, -69.2138, 0.59", "56.1526, 309.056, -69.2741, 0.59", "53.6969, 309.936, -70.5619, 0.22", "53.1451, 310.136, -70.861, 0.22", "52.9271, 310.217, -70.9943, 0.44", "51.6636, 310.71, -71.8302, 0.22", "50.7597, 311.127, -72.398, 0.74", "50.4229, 311.304, -72.6005, 0.88", "50.3616, 311.342, -72.6348, 0.88", "49.2648, 312.054, -73.1291, 0.22", "49.19, 312.103, -73.156, 0.22", "47.0972, 313.589, -73.6685, 0.22", "46.312, 314.207, -73.6502, 1.18", "45.9574, 314.5, -73.6074, 1.47", "44.7354, 315.521, -73.3945, 0.22", "44.683, 315.564, -73.3833, 0.22", "43.868, 316.251, -73.1857, 0.22", "40.3138, 319.281, -72.2209, 0.22", "40.2622, 319.325, -72.2051, 0.22", "37.7812, 321.404, -71.4403, 0.22", "36.7427, 322.28, -71.131, 0.22", "36.0893, 322.831, -70.9271, 0.88", "35.7703, 323.097, -70.8216, 1.11", "34.7353, 323.935, -70.4683, 1.11", "33.978, 324.563, -70.1695, 0.22", "33.7359, 324.79, -70.0137, 0.52", "33.6072, 324.92, -69.9193, 0.74", "33.3739, 325.166, -69.7788, 0.74" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "26.5917, 123.16, -147.951, 0.29", "26.0359, 123.525, -147.734, 0.29", "26.0052, 123.538, -147.672, 0.29", "24.9836, 123.935, -145.5, 0.29", "24.8323, 123.993, -145.186, 0.81", "24.1842, 124.239, -143.872, 0.22", "23.1418, 124.648, -141.883, 0.22", "17.8592, 126.708, -131.855, 0.22", "17.7546, 126.747, -131.652, 0.66", "17.3839, 126.879, -130.893, 0.66", "17.2588, 126.921, -130.632, 0.22", "16.5893, 127.133, -129.211, 0.22", "16.3901, 127.188, -128.715, 0.59", "16.2603, 127.265, -128.697, 0.59", "15.7654, 127.569, -128.617, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "26.5917, 123.16, -147.951, 0.66", "25.3956, 122.113, -148.391, 0.66", "24.618, 121.486, -148.626, 0.44", "24.0221, 121.048, -148.768, 0.44", "23.3644, 120.6, -148.917, 0.22", "23.2396, 120.518, -148.945, 0.22", "22.4702, 119.991, -149.075, 0.22", "22.2246, 119.836, -149.087, 0.52", "21.5705, 119.408, -149.093, 0.52", "20.9058, 118.924, -149.089, 0.22", "20.8509, 118.882, -149.088, 0.22", "19.356, 117.721, -149.047, 0.22", "19.2993, 117.676, -149.045, 0.22", "18.1794, 116.781, -148.925, 0.22", "17.5425, 116.266, -148.815, 0.88", "17.0271, 115.852, -148.7, 0.88", "16.6404, 115.551, -148.609, 0.88", "16.5751, 115.505, -148.594, 0.88", "15.6896, 114.875, -148.372, 0.22", "14.4056, 113.851, -147.6, 0.22", "14.1862, 113.658, -147.405, 0.88", "14.1455, 113.609, -147.357, 0.88", "13.8241, 113.124, -146.902, 0.88", "13.7703, 113.022, -146.804, 0.88", "12.811, 110.568, -144.49, 0.22", "12.7952, 110.515, -144.431, 0.22", "12.4637, 109.317, -143.029, 0.22", "12.4382, 109.208, -142.904, 0.22", "12.2624, 108.272, -141.835, 0.66", "12.1785, 107.782, -141.299, 0.66", "11.8964, 105.876, -139.404, 0.15", "11.8909, 105.831, -139.352, 0.15", "11.84, 105.32, -138.666, 0.29", "11.8392, 105.272, -138.602, 0.29", "11.8575, 105.05, -138.356, 0.59", "11.865, 105.0, -138.309, 0.59", "12.1381, 103.265, -137.142, 0.59", "12.1906, 102.811, -136.888, 0.59", "12.2534, 102.116, -136.549, 0.22", "12.35, 100.616, -135.933, 0.22", "12.3788, 100.035, -135.75, 1.03", "12.4136, 99.1276, -135.541, 1.4", "12.4492, 97.9238, -135.398, 1.4", "12.4606, 97.6214, -135.36, 1.4", "12.4909, 96.5639, -135.236, 0.29", "12.5008, 95.1575, -135.033, 0.29", "12.5006, 95.0894, -135.022, 0.29", "12.5007, 93.8496, -134.797, 0.29", "12.4883, 92.9923, -134.625, 0.96", "12.4733, 92.3402, -134.427, 1.18", "12.4581, 91.7439, -134.178, 1.18", "12.4581, 91.6916, -134.151, 1.18", "12.4619, 91.2991, -133.866, 1.18", "12.4628, 91.2532, -133.824, 1.18", "12.4135, 89.9787, -132.44, 0.29", "12.3794, 89.4006, -131.746, 0.29", "12.3273, 88.758, -130.965, 0.29", "12.154, 87.3133, -129.277, 0.29", "12.1425, 87.2417, -129.199, 0.29", "11.802, 85.4308, -127.253, 0.29", "11.7886, 85.3747, -127.195, 0.29", "11.6465, 84.8985, -126.666, 1.18", "11.4721, 84.4272, -126.143, 1.69", "11.2852, 83.8661, -125.717, 2.21" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "57.0945, 270.089, -124.756, 0.52", "58.0738, 270.331, -124.876, 0.52", "59.3012, 270.66, -125.146, 0.52", "59.367, 270.678, -125.163, 0.52", "61.0511, 271.237, -125.647, 0.52", "61.2086, 271.294, -125.694, 0.52", "62.0229, 271.624, -125.947, 1.03", "63.0352, 272.099, -126.385, 1.03", "63.0973, 272.138, -126.417, 1.03", "63.7672, 272.631, -126.779, 0.81", "63.8149, 272.674, -126.807, 0.81", "64.2933, 273.109, -127.11, 1.03", "65.0646, 273.845, -127.62, 1.03", "65.7565, 274.51, -128.141, 0.22", "66.5542, 275.283, -128.82, 0.22", "66.5963, 275.324, -128.859, 0.22", "67.0532, 275.748, -129.264, 0.44", "67.5199, 276.168, -129.686, 0.44", "68.4832, 277.034, -130.62, 0.44", "69.168, 277.686, -131.394, 0.15", "69.2473, 277.771, -131.489, 0.15", "69.8274, 278.458, -132.244, 0.15", "70.3405, 279.124, -132.945, 0.15", "70.917, 280.003, -133.888, 0.44", "71.2866, 280.678, -134.617, 0.44", "71.6381, 281.42, -135.472, 0.44", "72.0662, 282.353, -136.595, 1.25", "72.1295, 282.49, -136.771, 1.25", "72.486, 283.224, -137.728, 1.92", "73.0744, 284.313, -139.167, 0.44", "73.58, 285.129, -140.304, 0.29", "74.1296, 285.878, -141.398, 0.29", "74.5693, 286.394, -142.137, 0.59", "74.6035, 286.429, -142.188, 0.59", "74.8982, 286.688, -142.54, 0.88", "74.9398, 286.723, -142.584, 0.88", "75.3239, 287.066, -142.925, 0.88", "75.3668, 287.106, -142.961, 0.88", "76.3228, 288.037, -143.772, 0.29", "76.781, 288.481, -144.153, 0.29", "77.4596, 289.138, -144.68, 0.29", "78.2493, 289.895, -145.25, 0.15", "78.9476, 290.56, -145.728, 1.18", "79.0008, 290.61, -145.761, 1.18", "79.4908, 291.074, -146.034, 1.62", "80.0994, 291.655, -146.62, 1.62", "81.0087, 292.52, -147.698, 1.03", "81.6833, 293.189, -148.594, 0.52", "82.151, 293.665, -149.25, 1.25", "82.6549, 294.187, -150.026, 1.69", "84.9531, 296.577, -153.846, 0.22", "85.3387, 296.972, -154.55, 0.22", "85.9264, 297.563, -155.698, 0.22", "85.9549, 297.592, -155.756, 0.22", "86.4517, 298.097, -156.756, 0.66", "86.7726, 298.433, -157.33, 0.66", "87.4926, 299.292, -158.254, 0.22", "87.5227, 299.332, -158.302, 0.22", "87.7057, 299.581, -158.699, 0.44", "87.9199, 299.89, -159.168, 0.44", "88.3221, 300.479, -159.989, 1.25", "88.5082, 300.756, -160.373, 1.25", "88.5359, 300.795, -160.424, 1.25", "89.7223, 302.328, -162.497, 0.22", "90.1406, 302.804, -163.191, 0.22", "90.3932, 303.073, -163.639, 0.22", "90.4264, 303.107, -163.693, 0.22", "90.7759, 303.471, -164.327, 0.66", "90.9668, 303.674, -164.673, 1.03", "91.6644, 304.43, -165.934, 1.33", "92.6952, 305.551, -167.997, 0.22", "93.0906, 305.997, -168.853, 0.22", "93.8905, 306.917, -170.655, 1.11" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "57.0945, 270.089, -124.756, 0.22", "56.8205, 271.398, -124.846, 0.22", "56.5148, 273.295, -125.187, 0.22", "56.5007, 273.874, -125.312, 0.59", "56.5219, 274.588, -125.475, 0.81", "56.5317, 274.789, -125.532, 0.81", "56.5821, 275.638, -125.803, 0.81", "56.7588, 277.199, -126.376, 0.22", "57.0438, 279.104, -127.299, 0.22", "57.0517, 279.164, -127.334, 0.22", "57.1878, 280.335, -128.114, 0.52", "57.1989, 280.458, -128.198, 0.52", "57.2364, 281.256, -128.767, 0.52", "57.2123, 282.426, -129.589, 0.52", "57.1375, 283.246, -130.206, 0.29", "57.1336, 283.305, -130.244, 0.29", "57.0908, 284.431, -130.853, 0.29", "57.0654, 285.253, -131.257, 0.96", "57.0641, 285.326, -131.287, 0.96", "57.0603, 285.536, -131.348, 0.96", "57.0096, 286.649, -131.668, 0.29", "57.0056, 286.714, -131.689, 0.29", "56.8792, 287.912, -132.093, 0.29", "56.8697, 287.977, -132.113, 0.29", "56.7155, 288.95, -132.428, 0.96", "56.5013, 290.132, -132.826, 1.4", "56.4577, 290.332, -132.897, 1.4", "56.2691, 291.141, -133.174, 1.4", "56.1046, 291.747, -133.36, 1.4" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_154",
    "id" : "dend_154",
    "points3d" : [ "197.905, -277.651, 60.1452, 0.22", "197.227, -280.505, 66.3296, 0.22", "197.178, -280.675, 66.667, 0.52", "197.067, -280.988, 67.2183, 0.52", "197.05, -281.031, 67.2863, 0.52", "196.838, -281.455, 67.8732, 0.22", "196.531, -281.892, 68.3724, 0.22", "196.346, -282.026, 68.3724, 0.22", "195.634, -282.276, 68.353, 0.22", "195.565, -282.289, 68.3503, 0.22", "194.415, -282.348, 68.2995, 0.22", "192.877, -282.255, 68.2243, 0.22", "192.673, -282.2, 68.2097, 0.22", "189.919, -281.021, 67.962, 0.22", "189.727, -280.891, 67.9518, 0.22", "189.027, -280.203, 67.9644, 0.22", "188.899, -280.022, 67.9782, 0.22", "187.711, -277.626, 68.2655, 0.22", "187.688, -277.563, 68.2755, 0.22", "187.324, -275.777, 68.6334, 0.22", "187.155, -274.755, 68.855, 0.22", "187.124, -274.508, 68.9161, 0.22", "187.047, -273.792, 69.123, 0.22", "187.045, -273.695, 69.1635, 0.22", "187.031, -272.872, 69.4647, 0.22", "187.032, -272.726, 69.4839, 0.22" ],
    "parent" : "dend_150",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_151",
    "id" : "dend_151",
    "points3d" : [ "197.905, -277.651, 60.1452, 0.44", "199.71, -279.594, 64.1309, 0.44", "200.264, -280.108, 65.1349, 0.44", "200.374, -280.194, 65.2931, 1.03", "200.409, -280.219, 65.3365, 1.03", "200.964, -280.569, 65.9247, 1.4", "201.014, -280.601, 65.9783, 1.4", "202.106, -281.065, 66.3321, 1.4", "202.837, -281.308, 66.6107, 0.74", "202.901, -281.327, 66.6353, 0.74", "203.558, -281.498, 66.9005, 0.74" ],
    "parent" : "dend_150",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_139",
    "id" : "dend_139",
    "points3d" : [ "132.498, -239.387, 15.8863, 1.25", "132.114, -239.787, 16.188, 1.25", "131.24, -240.586, 16.7984, 0.44", "130.795, -240.943, 17.0676, 0.37", "130.481, -241.196, 17.2577, 0.37", "129.801, -241.742, 17.6691, 0.37", "129.274, -242.165, 17.9877, 0.22", "129.035, -242.333, 18.1256, 0.44", "128.577, -242.584, 18.3133, 0.44" ],
    "parent" : "dend_137",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_138",
    "id" : "dend_138",
    "points3d" : [ "132.498, -239.387, 15.8863, 0.37", "133.565, -239.63, 15.8863, 0.37", "134.0, -239.725, 15.8863, 0.37", "134.792, -239.847, 15.8863, 0.22", "135.317, -239.807, 15.8863, 0.22", "135.317, -239.807, 15.8863, 0.44", "135.383, -239.734, 15.8863, 0.66", "135.411, -239.64, 15.8863, 0.66", "135.505, -238.996, 15.8863, 0.22", "135.593, -237.34, 15.8863, 0.22", "135.598, -236.825, 15.8863, 0.22" ],
    "parent" : "dend_137",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_112",
    "id" : "dend_112",
    "points3d" : [ "-32.5941, -386.31, -1.1615, 0.52", "-30.8913, -386.219, -1.82953, 0.52", "-29.413, -386.155, -2.42355, 0.22", "-28.085, -386.111, -2.96142, 0.22", "-28.0285, -386.111, -2.98399, 0.22", "-26.4866, -386.141, -3.58039, 0.22", "-25.7187, -386.165, -3.86798, 0.22", "-25.507, -386.174, -3.96238, 0.52", "-25.4066, -386.173, -3.99728, 0.52", "-24.9195, -386.208, -4.18166, 0.52", "-24.6617, -386.237, -4.26419, 0.22", "-24.4627, -386.285, -4.28582, 0.22", "-23.5631, -386.399, -4.45504, 0.22", "-22.9303, -386.409, -4.60094, 0.52", "-22.8626, -386.403, -4.62075, 0.52" ],
    "parent" : "dend_108",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_109",
    "id" : "dend_109",
    "points3d" : [ "-32.5941, -386.31, -1.1615, 0.29", "-32.4633, -387.814, -0.973891, 0.29", "-32.2845, -388.859, -0.74813, 0.29", "-32.2199, -389.12, -0.677796, 0.29", "-31.9709, -390.027, -0.416886, 0.29", "-31.9413, -390.131, -0.390474, 0.29", "-31.6229, -391.246, -0.12821, 0.29", "-31.567, -391.385, -0.103219, 0.29", "-31.1241, -392.411, -0.0101152, 0.29", "-31.042, -392.612, -0.00737784, 0.29", "-30.642, -393.615, -0.0675814, 0.29", "-30.6163, -393.681, -0.0748556, 0.29", "-30.1491, -394.919, -0.274469, 0.29", "-29.8848, -395.584, -0.372356, 0.59", "-29.7767, -395.834, -0.422827, 0.59", "-29.3964, -396.709, -0.622662, 0.59", "-29.1255, -397.334, -0.77618, 0.81", "-28.8573, -398.064, -0.973719, 0.81", "-28.5965, -398.934, -1.22388, 0.81", "-28.3419, -400.116, -1.5903, 0.29", "-28.2191, -400.869, -1.8365, 0.29", "-28.2096, -400.943, -1.86223, 0.29", "-28.0428, -402.371, -2.37735, 0.29", "-28.021, -402.517, -2.42526, 0.29", "-27.8091, -403.393, -2.67092, 0.29", "-27.754, -403.518, -2.69303, 0.29", "-27.4043, -404.141, -2.82123, 0.29", "-27.3664, -404.198, -2.83368, 0.29", "-26.627, -405.095, -3.03054, 0.29", "-26.2041, -405.613, -3.16155, 1.25", "-25.8677, -406.133, -3.3403, 1.4", "-25.6622, -407.102, -3.68983, 0.59", "-25.6711, -407.163, -3.72238, 0.59", "-25.7408, -407.363, -4.03759, 0.29", "-25.7549, -407.394, -4.09873, 0.29", "-26.0354, -407.884, -5.10767, 0.29", "-26.3149, -408.328, -6.00335, 0.29", "-26.7217, -408.97, -7.315, 1.4", "-28.1946, -411.105, -12.152, 0.22", "-28.2112, -411.128, -12.2188, 0.22", "-28.4645, -411.549, -13.494, 0.22", "-28.6317, -411.856, -14.4813, 0.22", "-28.6426, -411.877, -14.5471, 0.22", "-29.1428, -412.832, -17.3666, 1.4", "-30.1052, -414.697, -22.1407, 0.22", "-30.3543, -415.205, -23.4137, 0.22", "-30.4234, -415.363, -23.8066, 0.22", "-30.6286, -415.854, -24.9193, 0.22", "-30.6759, -415.967, -25.1141, 0.22", "-30.9896, -416.705, -25.8363, 0.22", "-31.0167, -416.761, -25.8717, 0.22", "-31.2211, -417.253, -26.2649, 0.22", "-31.4532, -418.107, -27.0303, 1.03", "-31.5244, -418.696, -27.6685, 1.4", "-31.5974, -420.098, -29.3236, 0.22", "-31.5918, -420.188, -29.4409, 0.22", "-31.4596, -421.143, -30.7368, 0.22", "-31.2866, -421.93, -31.8443, 1.33", "-30.8905, -423.11, -33.6994, 0.29", "-30.8668, -423.157, -33.7838, 0.29", "-30.329, -423.941, -35.2715, 0.29", "-30.241, -424.05, -35.4908, 0.88", "-30.1824, -424.106, -35.6184, 0.88", "-29.17, -424.971, -37.5372, 0.29", "-28.9458, -425.199, -37.9265, 0.29", "-28.8394, -425.358, -38.1579, 0.29", "-28.7004, -425.947, -38.7837, 0.29", "-28.6956, -426.005, -38.838, 0.29", "-28.7076, -426.772, -39.4669, 1.11", "-28.7802, -427.295, -39.8449, 1.47", "-29.0196, -428.449, -40.7325, 0.22", "-29.3906, -429.918, -41.9051, 0.22", "-29.4062, -429.97, -41.9485, 0.44", "-29.4227, -430.021, -41.9918, 0.44", "-29.8012, -431.051, -42.8783, 0.22", "-29.8831, -431.275, -43.0683, 0.66", "-29.9926, -431.61, -43.315, 0.66", "-30.0041, -431.674, -43.3608, 0.66", "-30.0629, -432.529, -43.9326, 0.22", "-30.0597, -432.602, -43.9748, 0.22", "-29.9419, -433.246, -44.2622, 0.22", "-29.9126, -433.372, -44.3128, 0.22", "-29.5713, -434.465, -44.8192, 0.22", "-29.5087, -434.604, -44.8804, 0.22", "-29.238, -435.091, -45.0801, 0.96", "-28.9963, -435.478, -45.2265, 1.25", "-28.9578, -435.535, -45.2475, 1.25", "-28.1258, -436.742, -45.5198, 0.22", "-27.3021, -437.935, -45.6487, 0.22", "-27.2456, -438.016, -45.6517, 0.22", "-26.3554, -439.275, -45.5941, 0.22", "-26.3113, -439.341, -45.5851, 0.22", "-25.4237, -440.741, -45.2409, 0.22", "-25.3477, -440.872, -45.1876, 0.81", "-25.3129, -440.939, -45.163, 0.81", "-25.074, -441.422, -45.0718, 0.81", "-24.9851, -441.612, -45.0631, 0.81", "-24.5783, -442.372, -45.1098, 0.81", "-24.3186, -442.829, -45.1868, 0.81", "-23.973, -443.439, -45.2799, 0.22", "-23.1302, -444.934, -45.5662, 0.22", "-23.0967, -444.994, -45.5795, 0.22", "-22.6181, -445.833, -45.786, 0.22", "-22.557, -445.953, -45.8174, 0.22", "-22.0908, -446.978, -46.0802, 0.22", "-21.8442, -447.615, -46.2031, 1.18", "-21.811, -447.712, -46.2239, 1.18", "-21.6544, -448.074, -46.286, 1.18", "-21.3829, -448.679, -46.3699, 0.22", "-21.3509, -448.738, -46.388, 0.22", "-20.5453, -450.015, -46.9229, 0.22", "-20.5096, -450.069, -46.9479, 0.22", "-19.748, -451.186, -47.5446, 0.22", "-19.668, -451.295, -47.6117, 0.22", "-18.5066, -452.696, -48.6002, 0.22", "-18.4628, -452.747, -48.6432, 0.22", "-18.3871, -452.829, -48.7466, 1.03", "-18.1762, -453.076, -49.1002, 1.4", "-18.1241, -453.172, -49.2811, 1.4" ],
    "parent" : "dend_108",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "85.6707, 298.932, -67.2414, 0.29", "86.2375, 299.89, -67.7275, 0.29", "86.3093, 300.003, -67.7979, 0.29", "86.9245, 300.944, -68.4271, 0.29", "87.3587, 301.608, -68.8512, 0.66", "87.6623, 302.068, -69.137, 0.66", "87.7109, 302.14, -69.1828, 0.66", "88.3873, 303.1, -69.7627, 0.29", "88.461, 303.201, -69.8251, 0.29", "88.9248, 303.824, -70.1863, 0.29", "88.9799, 303.9, -70.2247, 0.29", "90.2915, 305.768, -71.08, 0.29", "90.5959, 306.203, -71.2872, 0.29", "90.6686, 306.31, -71.3357, 0.29", "91.8244, 308.0, -72.1344, 0.29", "92.0103, 308.273, -72.264, 0.66", "92.3498, 308.772, -72.5052, 0.66", "93.084, 309.849, -73.0068, 0.29", "93.618, 310.633, -73.3862, 0.29", "93.9559, 311.122, -73.6222, 1.18", "94.3643, 311.704, -73.9035, 1.62", "95.0816, 312.689, -74.332, 0.22", "95.504, 313.262, -74.5427, 0.22", "95.5467, 313.316, -74.5557, 0.22", "95.9816, 313.801, -74.687, 0.22", "96.0963, 313.92, -74.7179, 0.22", "96.7743, 314.538, -74.8737, 0.22", "96.8551, 314.605, -74.8948, 0.22", "97.6226, 315.209, -75.1544, 0.22", "98.2345, 315.675, -75.3778, 0.66", "98.7029, 316.021, -75.5625, 1.03", "98.9377, 316.199, -75.6547, 1.03", "99.9365, 316.971, -76.0549, 0.22", "99.9876, 317.015, -76.074, 0.22", "100.756, 317.752, -76.3069, 0.22", "100.803, 317.802, -76.3151, 0.22", "101.442, 318.594, -76.3584, 0.22", "101.486, 318.662, -76.3554, 0.22", "101.973, 319.472, -76.293, 0.22", "102.254, 319.908, -76.3065, 1.11", "102.693, 320.594, -76.3791, 1.84", "103.028, 321.098, -76.5135, 0.22", "103.779, 322.254, -76.9638, 0.22", "104.607, 323.502, -77.6348, 0.22", "105.324, 324.535, -78.3358, 1.33", "105.603, 324.938, -78.6453, 1.47", "106.455, 326.128, -79.6652, 0.44", "106.768, 326.554, -80.067, 0.29", "107.383, 327.417, -80.909, 0.29", "107.506, 327.639, -81.0865, 0.59", "107.783, 328.214, -81.4262, 0.59", "107.864, 328.378, -81.505, 0.29", "107.898, 328.446, -81.5256, 0.29", "108.317, 329.249, -81.7329, 0.22", "108.977, 330.511, -82.0994, 0.22", "109.083, 330.708, -82.1779, 0.44", "109.157, 330.844, -82.2423, 0.44", "109.373, 331.254, -82.4495, 0.44", "109.407, 331.318, -82.4831, 0.44", "109.998, 332.422, -83.1196, 0.29", "110.031, 332.479, -83.1474, 0.29", "110.612, 333.49, -83.5638, 0.29", "110.736, 333.698, -83.629, 0.29", "110.935, 334.028, -83.7035, 0.29", "111.007, 334.144, -83.7304, 0.29", "111.644, 335.151, -83.9937, 0.29", "111.7, 335.234, -84.0248, 0.29", "112.188, 335.887, -84.3526, 0.29", "112.227, 335.938, -84.3797, 0.29", "113.112, 337.002, -84.9175, 0.88", "113.654, 337.623, -85.2176, 1.18", "113.955, 337.958, -85.3757, 1.18", "114.001, 338.007, -85.3958, 1.18", "114.505, 338.525, -85.5718, 0.22", "115.586, 339.593, -85.7972, 0.22", "115.753, 339.752, -85.7993, 0.59", "115.846, 339.857, -85.7937, 0.59", "116.116, 340.233, -85.7796, 0.59", "116.154, 340.29, -85.7781, 0.59", "116.443, 340.827, -85.7781, 0.81", "116.54, 341.098, -85.7781, 0.81", "116.932, 342.314, -85.7781, 0.29", "117.019, 342.633, -85.7781, 0.66" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "85.6707, 298.932, -67.2414, 0.29", "85.3172, 299.575, -66.4482, 0.29", "85.105, 300.65, -65.5697, 0.29", "85.003, 301.459, -65.0729, 0.29", "84.9327, 302.179, -64.7598, 0.29", "84.8246, 302.868, -64.4956, 0.29", "84.7598, 303.273, -64.3664, 0.22", "84.7011, 303.862, -64.2621, 0.22", "84.683, 304.271, -64.2436, 0.22", "84.6976, 305.018, -64.2441, 0.22", "84.7262, 305.496, -64.2921, 1.03", "84.8182, 306.136, -64.4164, 1.03", "84.8547, 306.267, -64.4529, 1.03", "85.0055, 306.66, -64.5823, 1.03", "85.3457, 307.401, -64.8391, 0.22", "85.824, 308.35, -65.1424, 0.22", "85.824, 308.35, -65.1424, 0.66", "85.9528, 308.601, -65.2037, 0.52", "86.2908, 309.306, -65.3479, 0.22", "86.343, 309.436, -65.3569, 0.22", "86.6661, 310.504, -65.2614, 0.22", "86.8175, 311.13, -65.1472, 1.03", "86.9378, 311.618, -65.0526, 1.11", "86.9546, 311.685, -65.0384, 1.11", "87.2312, 312.765, -64.8311, 1.11", "87.5288, 313.715, -64.6855, 0.29", "87.5508, 313.779, -64.6771, 0.29", "87.9974, 314.995, -64.5471, 0.29", "88.0234, 315.058, -64.5419, 0.29", "88.723, 316.634, -64.4634, 0.29", "89.4757, 318.131, -64.4634, 0.29", "89.5394, 318.256, -64.4634, 0.29", "89.6067, 318.396, -64.4623, 1.18", "89.6402, 318.467, -64.4613, 1.18", "89.8427, 318.945, -64.4537, 1.18", "90.2729, 320.02, -64.4309, 0.29", "91.0123, 322.042, -64.3826, 0.29", "91.5108, 323.478, -64.3476, 0.22", "91.5319, 323.544, -64.3459, 0.22", "92.141, 325.676, -64.1897, 0.22", "92.1976, 325.919, -64.1597, 0.88", "92.3122, 326.53, -64.0417, 1.33", "92.4075, 327.176, -63.8693, 1.33", "92.4574, 327.567, -63.7478, 1.33", "92.66, 329.049, -63.2293, 0.22", "92.8793, 330.64, -62.6009, 0.22", "93.0489, 331.639, -62.1929, 0.22", "93.4183, 333.428, -61.4251, 0.22", "93.4476, 333.541, -61.3755, 0.22", "93.7852, 334.609, -60.9258, 0.22", "93.8054, 334.661, -60.9064, 0.22", "94.2232, 335.458, -60.4869, 0.88", "94.2539, 335.501, -60.46, 0.88", "94.5021, 335.76, -60.2628, 0.88", "94.7126, 335.943, -60.0947, 0.88", "94.767, 335.983, -60.0514, 0.88", "95.8678, 336.718, -59.1735, 0.22", "96.4617, 337.078, -58.6375, 0.22", "96.5102, 337.106, -58.5915, 0.22", "97.4563, 337.603, -57.7831, 0.96", "97.6431, 337.694, -57.6371, 1.18", "97.7639, 337.746, -57.5628, 1.18", "99.4512, 338.458, -56.8066, 0.22", "99.521, 338.489, -56.7819, 0.22", "101.002, 339.191, -56.3807, 0.22", "101.091, 339.234, -56.3647, 0.22", "102.484, 339.884, -56.176, 0.22", "103.574, 340.389, -56.0918, 0.22", "104.576, 340.841, -56.1027, 0.22", "104.967, 341.019, -56.107, 0.66", "105.623, 341.33, -56.1144, 1.03", "105.687, 341.36, -56.115, 1.03", "106.109, 341.57, -56.115, 1.03", "106.186, 341.594, -56.115, 1.03" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "102.044, 290.949, -77.4969, 0.88", "104.197, 290.421, -78.0752, 0.88", "105.142, 290.214, -78.4193, 0.29", "105.658, 290.121, -78.66, 0.29", "106.132, 290.047, -78.8903, 0.29", "106.936, 289.93, -79.2568, 0.29", "107.0, 289.921, -79.285, 0.29", "107.808, 289.806, -79.6595, 0.29", "108.4, 289.727, -79.9915, 1.03", "108.774, 289.685, -80.2067, 1.25", "109.44, 289.614, -80.5444, 1.25", "109.502, 289.607, -80.5764, 1.25", "111.234, 289.392, -81.4075, 0.22", "112.658, 289.194, -82.0123, 0.22", "112.797, 289.173, -82.0692, 0.22", "114.221, 288.964, -82.6761, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "102.044, 290.949, -77.4969, 0.29", "101.964, 291.689, -77.5514, 0.29", "101.803, 293.168, -77.6603, 0.29", "101.737, 293.775, -77.705, 0.22", "101.721, 293.923, -77.7159, 0.22", "101.606, 294.983, -77.794, 0.22", "101.528, 295.701, -77.8469, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "93.8905, 306.917, -170.655, 0.22", "93.9395, 307.342, -171.163, 0.22", "94.0498, 308.415, -172.548, 0.22", "94.0892, 309.027, -173.266, 1.03", "94.1196, 309.673, -173.98, 1.03", "94.1595, 311.171, -175.427, 0.81", "94.1743, 312.122, -176.324, 0.15", "94.1742, 312.173, -176.371, 0.15", "94.1442, 313.187, -177.402, 0.15", "94.143, 313.285, -177.504, 0.15", "94.1555, 314.218, -178.571, 0.15", "94.1987, 315.087, -179.567, 0.66", "94.2239, 315.414, -179.953, 0.66", "94.3224, 317.101, -182.365, 0.22", "94.3397, 317.974, -183.786, 0.22", "94.3172, 318.74, -185.141, 1.18", "94.3141, 318.774, -185.205, 1.18", "94.254, 319.153, -185.894, 1.47", "93.9149, 320.539, -188.55, 0.15", "93.7684, 320.935, -189.313, 0.15", "93.5341, 321.363, -190.144, 0.52", "93.4092, 321.561, -190.476, 0.66", "93.2353, 321.833, -190.895, 0.66", "92.8333, 322.448, -191.744, 0.15", "92.8073, 322.497, -191.787, 0.15", "92.4365, 323.169, -192.415, 0.15", "92.1504, 323.665, -192.853, 0.15", "91.7388, 324.436, -193.492, 0.88", "91.7043, 324.505, -193.544, 0.88", "91.5395, 324.85, -193.726, 0.88", "91.1049, 325.673, -194.241, 0.22", "91.0645, 325.746, -194.293, 0.22", "90.6653, 326.394, -194.859, 0.22", "90.567, 326.538, -194.993, 0.22", "89.8631, 327.505, -195.951, 0.22", "89.0611, 328.552, -197.043, 0.22", "89.0022, 328.626, -197.13, 0.22", "88.38, 329.36, -198.224, 0.22", "88.2803, 329.465, -198.404, 0.22", "87.9772, 329.744, -199.007, 0.22", "87.9494, 329.767, -199.07, 0.22", "87.0786, 330.372, -200.847, 0.22", "86.3373, 330.806, -202.25, 1.18", "85.9627, 330.993, -202.917, 1.62", "84.9135, 331.464, -204.737, 1.62", "84.3034, 331.721, -205.751, 0.22", "83.655, 332.005, -206.775, 0.22", "83.1672, 332.217, -207.467, 0.88", "83.0755, 332.266, -207.585, 0.88", "82.9004, 332.4, -207.807, 0.88", "82.5064, 332.849, -208.218, 0.29", "81.9621, 333.641, -208.769, 0.29", "81.9333, 333.699, -208.815, 0.29", "81.6827, 334.267, -209.274, 0.29", "81.3911, 334.931, -209.837, 0.29", "81.2788, 335.19, -210.069, 0.81", "81.1891, 335.412, -210.265, 0.81", "80.741, 336.701, -211.317, 0.29", "80.6082, 337.142, -211.669, 0.29", "80.5485, 337.41, -211.906, 0.29", "80.5352, 337.526, -212.001, 0.29", "80.5019, 338.105, -212.442, 0.29", "80.4855, 339.151, -213.157, 1.33", "80.4913, 339.484, -213.406, 1.62", "80.5637, 340.799, -214.481, 0.15", "80.5955, 341.832, -215.327, 0.15", "80.5948, 342.127, -215.56, 0.96", "80.5896, 342.39, -215.764, 1.33", "80.5073, 344.319, -217.058, 0.22", "80.4444, 345.186, -217.562, 0.22", "80.3273, 346.019, -217.939, 0.22", "80.214, 346.552, -218.14, 0.22", "80.1968, 346.626, -218.161, 0.22", "79.9279, 347.669, -218.333, 0.22", "79.8031, 348.086, -218.335, 1.03", "79.6326, 348.573, -218.335, 0.15", "79.1913, 349.806, -218.329, 0.15", "79.0889, 350.111, -218.326, 0.96", "78.9211, 350.646, -218.318, 0.96", "78.7831, 351.106, -218.31, 0.15", "78.5547, 351.939, -218.292, 0.15", "78.5366, 352.018, -218.291, 0.15", "78.1622, 353.84, -218.291, 0.15", "78.0813, 354.29, -218.296, 0.15", "78.0677, 354.381, -218.299, 0.44", "78.0124, 354.802, -218.316, 0.44", "77.9832, 355.031, -218.327, 0.15", "77.8072, 356.037, -218.442, 0.15", "77.7903, 356.105, -218.456, 0.15", "77.6487, 356.746, -218.657, 0.15", "77.6086, 357.073, -218.782, 0.81", "77.5925, 357.21, -218.842, 0.81", "77.5074, 357.992, -219.211, 0.22", "77.4996, 358.122, -219.281, 0.22", "77.5316, 359.121, -219.711, 0.22", "77.614, 359.869, -219.99, 1.55", "77.7536, 360.691, -220.223, 0.15", "77.8322, 361.028, -220.317, 0.15", "77.8716, 361.179, -220.354, 0.15", "78.309, 362.849, -220.762, 0.15", "78.3794, 363.177, -220.835, 0.44", "78.4993, 363.876, -220.992, 0.44", "78.6873, 365.149, -221.287, 1.03", "78.7533, 365.858, -221.457, 1.25", "78.7566, 366.146, -221.527, 0.15", "78.6173, 367.234, -221.784, 0.15", "78.5989, 367.326, -221.811, 0.15", "78.2857, 368.404, -222.141, 0.15", "78.2669, 368.467, -222.162, 0.15", "78.1734, 368.811, -222.294, 1.11", "78.0169, 369.466, -222.552, 1.47", "77.749, 370.788, -223.055, 0.15", "77.4141, 372.573, -223.703, 0.15", "77.047, 374.701, -224.507, 0.15", "77.002, 374.966, -224.609, 0.59", "76.9116, 375.501, -224.808, 0.59", "76.7117, 376.72, -225.304, 0.15", "76.6984, 376.792, -225.333, 0.15", "76.5145, 377.511, -225.815, 0.44", "76.4439, 377.703, -225.985, 0.44", "76.1479, 378.373, -226.678, 0.15", "75.7128, 379.23, -227.652, 0.66", "75.5651, 379.493, -227.953, 0.66", "74.8038, 380.851, -229.475, 0.22", "74.7742, 380.902, -229.531, 0.22", "74.6474, 381.124, -229.777, 0.52", "74.4328, 381.483, -230.184, 0.74", "74.0864, 382.064, -230.659, 0.74" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "93.8905, 306.917, -170.655, 0.74", "94.5455, 307.025, -170.868, 0.74", "95.796, 307.258, -171.338, 0.22", "95.8716, 307.275, -171.366, 0.22", "96.8781, 307.521, -171.733, 0.22", "96.9428, 307.54, -171.753, 0.22", "98.0429, 307.899, -172.076, 1.11", "98.1052, 307.928, -172.091, 1.11", "98.8676, 308.359, -172.247, 1.33", "98.9281, 308.392, -172.26, 1.33", "99.8901, 308.906, -172.481, 0.15", "99.952, 308.937, -172.494, 0.15", "101.288, 309.572, -172.724, 0.15", "101.834, 309.814, -172.827, 1.03", "102.777, 310.232, -173.064, 1.77", "103.044, 310.35, -173.143, 1.77", "103.475, 310.545, -173.341, 1.77", "103.545, 310.58, -173.376, 1.77", "104.008, 310.832, -173.645, 1.77", "104.904, 311.361, -174.114, 1.47", "104.958, 311.396, -174.143, 1.47", "106.189, 312.273, -174.809, 0.59", "107.208, 312.978, -175.336, 0.15", "107.296, 313.037, -175.376, 0.15", "108.255, 313.665, -175.763, 0.15", "108.95, 314.091, -176.016, 0.88", "109.659, 314.512, -176.256, 1.18", "110.941, 315.25, -176.636, 0.22", "112.154, 315.952, -177.024, 0.22", "112.243, 316.005, -177.052, 0.22", "113.052, 316.519, -177.282, 1.03", "113.401, 316.748, -177.373, 1.33", "113.457, 316.787, -177.388, 1.33", "114.012, 317.265, -177.532, 1.33", "114.69, 317.962, -177.699, 0.29", "115.302, 318.666, -177.834, 0.29", "115.754, 319.231, -177.912, 0.59", "116.241, 319.857, -177.994, 0.59", "116.846, 320.625, -178.081, 0.29", "117.69, 321.697, -178.185, 0.29", "117.733, 321.751, -178.189, 0.29", "118.245, 322.381, -178.202, 0.29", "118.338, 322.497, -178.197, 0.29", "119.411, 323.899, -178.11, 0.29", "119.452, 323.955, -178.108, 0.29", "120.361, 325.31, -178.091, 0.37", "120.672, 325.848, -178.011, 1.33", "121.071, 326.608, -177.885, 1.33", "121.659, 327.839, -177.657, 0.88", "121.941, 328.554, -177.496, 1.18", "122.297, 329.54, -177.245, 1.18", "122.991, 332.09, -176.415, 1.18" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "56.1046, 291.747, -133.36, 0.22", "56.9794, 293.657, -136.201, 0.22", "57.3958, 294.703, -137.456, 0.22", "57.6009, 295.274, -138.065, 0.22", "57.6147, 295.324, -138.111, 0.22", "57.8038, 296.317, -138.881, 0.22", "57.8124, 296.375, -138.922, 0.22", "57.8457, 297.968, -139.579, 0.22", "57.836, 298.108, -139.622, 0.22", "57.6726, 299.778, -140.178, 0.22", "57.5852, 300.686, -140.524, 0.22", "57.5814, 300.741, -140.545, 0.22", "57.5652, 301.267, -140.78, 1.33", "57.5644, 302.218, -141.266, 1.33", "57.581, 303.638, -141.983, 0.44", "57.6034, 304.91, -142.673, 0.22", "57.6542, 306.107, -143.359, 0.22", "57.7021, 307.077, -143.929, 0.22", "57.7078, 307.166, -143.983, 0.22", "57.779, 308.315, -144.697, 0.22", "57.774, 309.406, -145.245, 1.03" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "56.1046, 291.747, -133.36, 0.29", "55.1251, 292.95, -133.504, 0.29", "54.7638, 293.379, -133.54, 0.29", "54.0449, 294.217, -133.597, 0.29", "53.3608, 295.032, -133.642, 0.29", "52.3029, 296.29, -133.652, 0.29", "52.2429, 296.361, -133.65, 0.29", "51.2328, 297.566, -133.528, 0.29", "51.1883, 297.62, -133.522, 0.29", "50.4893, 298.458, -133.357, 0.29", "49.9243, 299.131, -133.202, 0.74", "49.484, 299.692, -133.073, 1.18", "49.0753, 300.265, -132.979, 1.18", "49.0314, 300.33, -132.968, 1.18", "48.4503, 301.207, -132.847, 1.18", "47.7016, 302.36, -132.731, 0.22", "47.0183, 303.496, -132.697, 0.22", "46.4658, 304.465, -132.691, 0.22" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_153",
    "id" : "dend_153",
    "points3d" : [ "203.558, -281.498, 66.9005, 0.37", "204.643, -280.785, 67.1134, 0.37", "204.712, -280.745, 67.1235, 0.37", "205.512, -280.386, 67.2068, 0.29", "206.38, -280.05, 67.2819, 0.29", "206.943, -279.861, 67.3239, 0.81", "208.091, -279.499, 67.3991, 0.22", "208.594, -279.356, 67.3813, 0.22", "209.612, -279.085, 67.3261, 0.22", "209.681, -279.07, 67.321, 0.22", "210.043, -279.003, 67.287, 0.22", "210.55, -278.923, 67.2318, 0.22", "211.635, -278.729, 67.0911, 0.22", "211.702, -278.71, 67.0825, 0.22", "212.399, -278.45, 66.9969, 0.22", "212.463, -278.422, 66.9902, 0.22", "212.801, -278.266, 66.9573, 0.22", "212.865, -278.238, 66.9527, 0.22", "213.681, -277.871, 66.9527, 0.22", "213.805, -277.805, 66.9527, 0.22", "214.373, -277.389, 66.9527, 0.22" ],
    "parent" : "dend_151",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_152",
    "id" : "dend_152",
    "points3d" : [ "203.558, -281.498, 66.9005, 0.37", "203.868, -282.193, 67.1078, 0.37", "204.295, -283.146, 67.392, 0.37", "204.322, -283.207, 67.4102, 0.37", "204.89, -284.477, 67.789, 0.37", "205.187, -285.142, 67.9874, 0.37", "205.542, -285.935, 68.2241, 0.37" ],
    "parent" : "dend_151",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_111",
    "id" : "dend_111",
    "points3d" : [ "-18.1241, -453.172, -49.2811, 0.29", "-18.4862, -455.633, -51.5875, 0.29", "-18.5866, -456.315, -52.227, 0.29", "-18.822, -457.915, -53.7264, 0.29", "-18.8305, -457.973, -53.7805, 0.29", "-19.1441, -460.104, -55.7775, 0.22", "-19.1719, -460.293, -55.9546, 0.52" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_110",
    "id" : "dend_110",
    "points3d" : [ "-18.1241, -453.172, -49.2811, 0.22", "-19.5486, -453.536, -52.6954, 0.22", "-19.7565, -453.589, -53.1938, 0.44" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "117.019, 342.633, -85.7781, 0.22", "117.496, 343.245, -85.805, 0.22", "117.547, 343.308, -85.8076, 0.22", "118.377, 344.353, -85.8464, 0.22", "118.427, 344.416, -85.8486, 0.22", "119.767, 346.104, -85.9708, 0.22", "120.05, 346.47, -86.0063, 0.52", "120.409, 346.975, -86.0932, 0.52", "120.811, 347.566, -86.2344, 0.52", "120.847, 347.623, -86.2511, 0.52", "121.163, 348.153, -86.4213, 0.88", "121.464, 348.7, -86.6035, 0.44", "122.456, 350.46, -87.223, 0.22", "122.533, 350.594, -87.2717, 0.22", "123.192, 351.715, -87.6714, 0.22", "123.226, 351.772, -87.6929, 0.22", "123.922, 352.917, -88.1301, 0.22", "124.246, 353.442, -88.3482, 0.59", "124.28, 353.498, -88.3723, 0.59", "124.472, 353.845, -88.5331, 0.59", "124.969, 354.851, -89.0578, 0.22", "124.998, 354.917, -89.0898, 0.22", "125.29, 355.733, -89.4456, 0.22", "125.318, 355.804, -89.467, 0.22", "125.425, 356.054, -89.5272, 0.44", "125.471, 356.131, -89.5424, 0.44", "125.844, 356.656, -89.6037, 0.44", "125.954, 356.787, -89.6237, 0.44", "126.42, 357.255, -89.7145, 0.44", "126.488, 357.326, -89.727, 0.44", "127.346, 358.174, -89.8591, 0.22", "127.453, 358.277, -89.874, 0.22", "127.918, 358.68, -89.9255, 0.22", "127.97, 358.725, -89.9303, 0.22", "128.921, 359.56, -89.9969, 0.22", "130.073, 360.585, -90.0513, 0.22", "130.127, 360.632, -90.0521, 0.22", "131.216, 361.538, -90.0676, 0.22", "131.389, 361.675, -90.0699, 0.22", "132.122, 362.268, -90.0782, 0.22", "132.175, 362.313, -90.0731, 0.22", "132.578, 362.886, -89.9505, 0.22", "132.613, 362.955, -89.9346, 0.22", "132.635, 363.021, -89.9193, 0.59", "132.951, 364.096, -89.6692, 0.59", "133.249, 365.258, -89.3511, 0.22", "133.766, 367.285, -88.8284, 0.22", "133.939, 368.028, -88.6422, 0.96", "134.076, 368.607, -88.5008, 1.18", "134.111, 368.747, -88.4685, 1.18", "134.319, 369.551, -88.3005, 0.22", "135.067, 372.25, -87.8677, 0.22", "135.191, 372.641, -87.7833, 0.66", "135.218, 372.715, -87.7658, 0.66", "135.45, 373.306, -87.6223, 0.66", "135.613, 373.699, -87.5314, 0.66", "135.741, 373.982, -87.4727, 0.66", "136.473, 375.266, -86.8928, 0.22", "136.63, 375.559, -86.7326, 0.66", "136.657, 375.615, -86.6976, 0.66", "136.851, 376.16, -86.3347, 0.66", "136.871, 376.24, -86.2804, 0.66", "136.984, 377.739, -85.3669, 0.22", "136.913, 378.49, -84.9454, 0.22", "136.892, 378.627, -84.8762, 0.22", "136.753, 379.509, -84.4692, 0.22", "136.741, 379.583, -84.4386, 0.22", "136.63, 380.478, -84.1382, 0.22", "136.551, 381.685, -83.8702, 1.03", "136.55, 382.407, -83.7131, 1.33", "136.563, 383.028, -83.604, 0.22", "136.575, 383.311, -83.5557, 0.22", "136.614, 384.172, -83.4184, 0.22", "136.686, 385.377, -83.2397, 0.22", "136.694, 385.474, -83.2278, 0.22", "136.888, 387.634, -82.9136, 0.22", "137.009, 388.976, -82.6922, 0.22", "137.015, 389.045, -82.6762, 0.22", "137.076, 389.633, -82.5064, 0.88", "137.138, 390.206, -82.311, 1.25", "137.205, 390.834, -82.084, 1.25", "137.217, 390.943, -82.0424, 1.25", "137.332, 392.193, -81.5065, 0.22", "137.455, 393.561, -80.9117, 0.22", "137.623, 395.583, -80.0282, 0.22", "137.65, 395.934, -79.8685, 0.74", "137.688, 396.386, -79.6603, 1.11", "137.834, 398.105, -78.8598, 0.22", "137.984, 399.759, -78.0752, 0.22", "137.991, 399.819, -78.0411, 0.22", "138.182, 401.059, -77.2504, 0.22", "138.191, 401.108, -77.2189, 0.22", "138.246, 401.385, -77.0444, 0.66", "138.315, 401.693, -76.8745, 0.66", "138.531, 402.798, -76.2735, 1.03", "138.553, 402.931, -76.2161, 1.03", "138.683, 403.744, -75.9572, 1.03", "138.717, 403.985, -75.8986, 1.03", "138.768, 404.347, -75.8375, 0.22", "138.935, 405.655, -75.704, 0.22", "138.982, 406.085, -75.6636, 0.37", "138.994, 406.165, -75.6597, 0.37", "139.193, 407.212, -75.6333, 0.37", "139.382, 408.059, -75.6311, 0.66", "139.399, 408.126, -75.6349, 0.66", "139.712, 409.251, -75.7728, 0.22", "140.315, 411.515, -76.191, 0.22", "140.329, 411.578, -76.2141, 0.59", "140.338, 411.63, -76.242, 0.59", "140.424, 412.263, -76.6325, 0.59", "140.457, 412.562, -76.8304, 0.59", "140.467, 412.676, -76.9215, 0.59", "140.549, 413.912, -78.1907, 0.22", "140.575, 414.735, -79.1066, 0.22", "140.583, 415.434, -79.9339, 0.22", "140.582, 415.469, -79.9826, 0.22", "140.475, 416.408, -81.5409, 0.59", "140.295, 417.446, -83.46, 0.88", "140.195, 417.785, -84.3038, 1.11", "140.153, 417.884, -84.5936, 1.11", "139.781, 418.591, -86.9142, 1.11", "139.769, 418.611, -86.9809, 1.11", "139.673, 418.744, -87.4592, 1.11", "138.932, 419.78, -91.0442, 0.37", "138.808, 419.985, -91.7942, 0.37" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "117.019, 342.633, -85.7781, 0.22", "116.606, 343.134, -85.7781, 0.22", "115.976, 343.897, -85.7781, 0.22", "115.908, 343.979, -85.7781, 0.44", "115.645, 344.298, -85.7781, 0.44", "115.537, 344.428, -85.7781, 0.44", "115.486, 344.49, -85.7781, 0.44" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "114.221, 288.964, -82.6761, 0.22", "115.058, 289.0, -82.9468, 0.22", "116.269, 289.045, -83.3099, 0.22", "116.336, 289.047, -83.3296, 0.22", "117.876, 289.038, -83.7418, 0.22", "117.972, 289.035, -83.7662, 0.22", "119.565, 288.975, -84.1524, 0.22", "119.633, 288.97, -84.1714, 0.22", "120.153, 288.894, -84.3259, 1.03", "120.955, 288.737, -84.5442, 1.33", "121.021, 288.72, -84.5597, 1.33", "121.308, 288.645, -84.6161, 1.33", "122.494, 288.305, -84.8233, 0.37", "123.533, 288.022, -84.9573, 0.37", "124.045, 287.915, -85.0828, 0.37", "124.187, 287.9, -85.1308, 0.37", "125.163, 287.851, -85.5039, 0.29", "125.511, 287.865, -85.6627, 0.88", "125.958, 287.923, -85.8941, 1.03", "127.998, 288.465, -87.1161, 0.22", "128.815, 288.771, -87.6652, 0.22", "128.891, 288.807, -87.7253, 0.22", "129.554, 289.166, -88.3723, 0.22", "129.601, 289.194, -88.4202, 0.22", "130.335, 289.626, -89.2383, 0.22", "130.663, 289.807, -89.7664, 0.96", "131.586, 290.329, -91.4105, 0.22", "132.071, 290.61, -92.3294, 0.22", "132.283, 290.733, -92.7261, 1.03", "132.788, 291.025, -93.6738, 1.03", "134.846, 292.211, -97.6542, 0.22", "135.544, 292.634, -99.0012, 0.22", "136.073, 292.979, -100.128, 0.66", "136.631, 293.331, -101.184, 0.22", "136.66, 293.349, -101.234, 0.22", "137.5, 293.86, -102.524, 1.33", "137.54, 293.883, -102.58, 1.33", "139.594, 294.977, -105.514, 0.22", "141.032, 295.717, -107.498, 0.22", "141.398, 295.897, -107.985, 0.96", "143.2, 296.832, -109.989, 0.22", "143.255, 296.861, -110.043, 0.22", "143.638, 297.076, -110.379, 0.59", "143.698, 297.111, -110.423, 0.59", "146.188, 298.541, -112.267, 0.22", "148.208, 299.674, -113.665, 0.22", "149.218, 300.233, -114.259, 0.22", "149.771, 300.541, -114.586, 0.22", "150.339, 300.867, -114.926, 0.88", "150.395, 300.9, -114.958, 0.88" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "114.221, 288.964, -82.6761, 0.22", "114.574, 289.851, -82.294, 0.22", "114.643, 290.04, -82.2105, 0.59", "114.67, 290.113, -82.1781, 0.59", "115.014, 291.041, -81.7669, 0.22", "115.173, 291.47, -81.5767, 0.59", "115.333, 291.902, -81.3855, 0.59", "115.349, 291.969, -81.3457, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "122.991, 332.09, -176.415, 0.59", "123.728, 335.413, -179.755, 0.59", "124.444, 339.428, -183.447, 0.22", "124.702, 341.192, -184.996, 0.88", "124.924, 343.011, -186.525, 1.18", "124.984, 343.616, -187.042, 1.18", "125.053, 344.569, -187.872, 0.22", "125.059, 346.66, -189.492, 0.22", "124.986, 347.285, -190.048, 0.66", "124.917, 347.715, -190.377, 0.88", "124.684, 348.989, -191.335, 0.88", "124.456, 350.139, -192.342, 0.15", "124.41, 350.362, -192.573, 0.15", "124.402, 350.449, -192.695, 0.15", "124.416, 350.882, -193.361, 0.15", "124.533, 351.427, -194.121, 0.88", "124.577, 351.539, -194.225, 0.88", "124.604, 351.593, -194.265, 0.88", "125.869, 353.957, -195.853, 0.22", "125.899, 354.013, -195.886, 0.22", "126.679, 355.419, -196.579, 0.22", "127.913, 357.646, -197.489, 0.22", "128.128, 358.04, -197.628, 0.88", "128.16, 358.098, -197.648, 0.88", "128.531, 358.859, -197.851, 0.88", "128.558, 358.919, -197.873, 0.88", "128.9, 359.937, -198.426, 1.62", "128.942, 360.11, -198.553, 1.62", "129.216, 361.424, -199.58, 0.22", "129.424, 362.504, -200.47, 0.22", "129.447, 362.645, -200.597, 0.59", "129.489, 363.011, -200.915, 0.59" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "122.991, 332.09, -176.415, 0.22", "124.304, 332.806, -176.015, 0.22", "126.382, 333.811, -175.201, 0.22", "126.591, 333.902, -175.112, 0.59", "126.684, 333.938, -175.072, 0.59", "128.883, 334.72, -174.168, 0.22", "128.946, 334.741, -174.143, 0.22", "129.855, 334.952, -173.755, 1.18", "130.165, 335.002, -173.55, 1.62", "130.644, 335.066, -173.19, 1.62", "131.657, 335.118, -172.311, 0.22", "131.7, 335.117, -172.268, 0.22", "132.424, 335.095, -171.387, 0.22", "134.187, 334.949, -168.727, 1.03", "134.6, 334.897, -168.02, 1.69", "135.547, 334.724, -166.327, 1.69", "135.604, 334.711, -166.222, 1.69", "137.053, 334.373, -163.814, 1.03", "137.967, 334.156, -162.434, 0.15", "138.018, 334.145, -162.373, 0.15", "138.8, 334.001, -161.4, 0.15", "138.898, 333.987, -161.284, 0.15", "139.884, 333.944, -160.152, 0.15", "139.934, 333.947, -160.099, 0.15", "141.122, 334.18, -158.837, 0.96", "142.443, 334.466, -157.355, 0.96", "142.48, 334.476, -157.308, 0.96", "143.14, 334.742, -156.127, 0.66", "143.329, 334.855, -155.644, 0.66", "143.347, 334.875, -155.568, 0.66", "143.528, 335.144, -154.574, 0.66", "143.539, 335.164, -154.507, 0.66", "144.128, 336.25, -150.899, 1.55", "144.136, 336.267, -150.842, 1.55", "144.754, 337.599, -146.305, 1.55", "144.763, 337.62, -146.24, 1.55", "144.926, 338.033, -145.076, 0.52", "145.282, 338.736, -143.26, 0.52", "145.314, 338.783, -143.155, 0.52", "145.576, 339.143, -142.434, 1.4", "146.368, 340.113, -140.908, 0.15", "146.392, 340.142, -140.862, 0.15", "146.9, 340.751, -139.903, 0.15", "147.062, 340.938, -139.702, 1.03", "147.101, 340.981, -139.663, 1.03", "147.2, 341.08, -139.605, 1.03" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "57.774, 309.406, -145.245, 0.22", "57.924, 309.927, -145.426, 0.22", "57.9464, 310.0, -145.451, 0.22", "58.3681, 311.414, -146.023, 0.22", "58.3856, 311.476, -146.048, 0.22", "58.5602, 312.335, -146.374, 0.22", "58.5702, 312.399, -146.399, 0.22", "58.5991, 312.95, -146.588, 0.22", "58.5866, 313.615, -146.807, 0.88", "58.5566, 314.159, -146.999, 1.11", "58.5079, 314.982, -147.271, 1.11", "58.4817, 315.516, -147.433, 0.22", "58.4695, 316.75, -147.78, 0.22", "58.4757, 318.328, -148.265, 0.22", "58.4843, 319.611, -148.66, 0.88", "58.4875, 320.352, -148.906, 1.25", "58.4978, 321.256, -149.214, 1.69", "58.5051, 322.394, -149.658, 1.69", "58.5233, 323.478, -150.137, 0.15", "58.5163, 324.422, -150.612, 0.15", "58.4684, 326.016, -151.488, 0.15", "58.4612, 326.152, -151.569, 0.74", "58.3604, 327.476, -152.433, 0.22", "58.3102, 328.266, -152.954, 0.22", "58.2922, 329.028, -153.415, 0.88", "58.2904, 329.147, -153.485, 0.88", "58.2745, 329.618, -153.763, 0.88", "58.2191, 330.134, -153.998, 0.22", "58.0704, 331.008, -154.246, 0.22", "58.0276, 331.205, -154.289, 0.44", "57.8382, 332.049, -154.515, 0.44", "57.6796, 332.734, -154.736, 0.15", "57.3236, 334.425, -155.314, 0.15", "57.203, 335.081, -155.525, 0.88", "57.0919, 335.747, -155.738, 0.88", "56.8544, 337.518, -156.27, 0.66", "56.8268, 337.789, -156.36, 0.15", "56.7483, 339.087, -156.779, 0.15", "56.7186, 340.461, -157.236, 0.15", "56.7169, 340.678, -157.305, 0.74", "56.7223, 341.385, -157.499, 0.74", "56.7368, 342.87, -157.802, 0.15", "56.7375, 344.377, -158.21, 0.15", "56.7205, 345.378, -158.536, 0.15", "56.7157, 345.581, -158.618, 0.59", "56.7141, 345.635, -158.641, 0.59", "56.6854, 346.306, -158.941, 0.59", "56.5975, 347.556, -159.505, 0.15", "56.4199, 349.302, -160.433, 0.15", "56.3298, 350.171, -160.88, 0.52", "56.277, 350.707, -161.115, 0.52", "56.25, 350.998, -161.216, 0.66", "56.1931, 351.527, -161.377, 0.15", "56.1823, 351.623, -161.397, 0.15", "56.0105, 353.05, -161.683, 0.15", "55.939, 353.691, -161.772, 0.88", "55.9209, 354.216, -161.856, 1.11", "55.9671, 355.293, -162.038, 1.03", "55.9767, 355.36, -162.049, 1.03", "56.0345, 355.653, -162.128, 0.15", "56.0557, 355.724, -162.155, 0.15", "56.3983, 356.849, -162.61, 0.15", "56.4124, 356.905, -162.627, 0.15", "56.521, 357.481, -162.729, 0.15", "56.6035, 358.185, -162.869, 0.44", "56.643, 358.82, -162.994, 0.44", "56.6486, 358.972, -163.023, 0.44", "56.6397, 360.074, -163.312, 0.44", "56.6181, 361.301, -163.669, 0.15", "56.6016, 361.917, -163.858, 0.88", "56.5784, 362.732, -164.103, 1.25", "56.5637, 363.146, -164.24, 1.25", "56.5349, 364.613, -164.744, 0.15", "56.5267, 365.208, -164.968, 0.15", "56.5234, 365.284, -164.996, 0.15", "56.4907, 365.867, -165.171, 0.15", "56.4866, 365.944, -165.188, 0.15", "56.4645, 366.787, -165.288, 0.15", "56.4624, 366.866, -165.288, 0.15", "56.4116, 367.597, -165.37, 0.15", "56.4061, 367.664, -165.383, 0.15", "56.286, 368.971, -165.742, 0.15", "56.2393, 369.44, -165.895, 0.81", "56.1804, 370.063, -166.122, 0.96", "56.062, 371.355, -166.665, 0.96", "56.0157, 372.012, -166.948, 0.15", "55.9561, 372.791, -167.263, 1.4", "55.9509, 372.855, -167.288, 1.4", "55.9199, 373.409, -167.469, 1.77", "55.8928, 374.626, -167.771, 0.22", "55.8658, 375.969, -167.95, 0.22", "55.8449, 376.392, -168.002, 0.59", "55.8364, 376.553, -168.017, 0.22", "55.8139, 376.994, -168.05, 0.22", "55.8086, 377.109, -168.075, 0.22", "55.8216, 377.743, -168.271, 0.22", "55.8486, 378.202, -168.444, 1.11", "55.9068, 378.858, -168.721, 1.55", "55.9635, 379.39, -168.956, 1.55", "56.187, 381.103, -169.706, 0.15", "56.4046, 382.596, -170.355, 0.15", "56.5857, 383.692, -170.833, 0.15", "56.6521, 384.142, -171.005, 0.44", "56.6599, 384.21, -171.027, 0.44", "56.7403, 385.192, -171.236, 0.44", "56.7444, 385.302, -171.247, 0.15", "56.7418, 385.411, -171.262, 0.15", "56.674, 387.034, -171.485, 0.15", "56.6687, 387.42, -171.528, 0.59", "56.6752, 388.126, -171.642, 0.66", "56.6963, 388.806, -171.77, 0.15", "56.7019, 388.923, -171.794, 0.15", "56.7889, 390.256, -172.067, 0.15", "56.9556, 391.855, -172.382, 0.15", "57.0761, 392.843, -172.59, 1.03", "57.1598, 393.477, -172.721, 1.33", "57.2298, 393.969, -172.852, 0.81", "57.2892, 394.379, -172.993, 0.15", "57.545, 395.81, -173.584, 0.15", "57.7023, 396.573, -173.932, 0.96", "57.8833, 397.367, -174.393, 1.18", "58.2001, 398.696, -175.329, 0.15", "58.2118, 398.742, -175.365, 0.15", "58.625, 400.325, -176.723, 0.15", "58.6383, 400.374, -176.771, 0.15", "59.0728, 401.935, -178.308, 0.15", "59.0953, 402.011, -178.388, 0.15" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "57.774, 309.406, -145.245, 0.15", "57.426, 309.846, -145.169, 0.15", "57.0643, 310.303, -145.091, 0.15", "56.4603, 311.067, -144.96, 0.52" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "46.4658, 304.465, -132.691, 0.22", "45.2805, 306.617, -137.304, 0.22", "45.0662, 307.006, -138.138, 0.22", "45.0502, 307.035, -138.2, 0.22", "44.6946, 307.681, -139.584, 0.22" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "46.4658, 304.465, -132.691, 1.4", "45.9741, 304.851, -132.773, 1.4", "45.5817, 305.145, -132.817, 1.62", "45.1268, 305.489, -132.864, 1.62", "44.8326, 305.715, -132.887, 1.55", "44.7597, 305.773, -132.892, 1.55", "43.8188, 306.537, -132.95, 0.22", "41.9996, 308.03, -133.026, 0.22", "41.8691, 308.133, -133.03, 0.22", "39.993, 309.543, -133.052, 0.22", "38.6043, 310.535, -133.043, 0.22", "37.9928, 310.948, -133.03, 0.22", "37.8704, 311.025, -133.027, 0.22", "36.5167, 311.889, -132.975, 0.22", "36.1468, 312.13, -132.949, 0.74", "35.5335, 312.564, -132.879, 0.74", "35.4701, 312.615, -132.871, 0.74", "35.19, 312.898, -132.83, 0.22", "33.731, 314.694, -132.638, 0.22", "33.2969, 315.359, -132.582, 0.74", "32.8924, 316.022, -132.539, 0.74", "32.6724, 316.396, -132.489, 0.15", "32.1021, 317.298, -132.299, 0.15", "31.8731, 317.63, -132.2, 0.44", "31.7731, 317.749, -132.154, 0.44", "31.387, 318.151, -131.95, 0.44", "30.1579, 319.158, -131.247, 0.15", "29.6898, 319.481, -130.969, 0.15", "29.2506, 319.74, -130.724, 1.11", "28.6088, 320.095, -130.376, 1.33", "27.4379, 320.717, -129.763, 0.15", "26.6197, 321.135, -129.372, 0.15", "26.4886, 321.204, -129.304, 0.15", "25.4701, 321.911, -128.681, 0.15", "25.2058, 322.161, -128.454, 0.81", "25.1223, 322.267, -128.362, 0.81", "24.7575, 322.855, -127.93, 0.81", "24.0051, 324.363, -126.94, 0.22", "23.5589, 325.4, -126.332, 0.22", "23.156, 326.507, -125.752, 0.88", "22.9726, 327.028, -125.507, 0.88", "22.6869, 327.857, -125.151, 0.15", "22.3368, 328.86, -124.795, 0.22", "22.0703, 329.521, -124.656, 0.22", "21.8829, 329.894, -124.592, 1.03", "21.4807, 330.601, -124.512, 1.33", "21.4266, 330.69, -124.499, 1.33", "21.0678, 331.208, -124.383, 1.33", "20.88, 331.442, -124.335, 0.22", "19.9809, 332.496, -124.136, 0.22", "19.8461, 332.649, -124.113, 0.52", "19.527, 333.018, -124.072, 0.52", "18.5907, 334.125, -123.968, 0.22", "17.7419, 335.129, -123.885, 0.22", "17.651, 335.237, -123.877, 0.22", "16.8598, 336.157, -123.808, 0.22", "16.1849, 336.949, -123.811, 0.22", "15.2385, 338.02, -123.913, 0.22", "14.8026, 338.494, -124.01, 1.11", "14.3014, 338.999, -124.147, 1.47", "13.9994, 339.274, -124.26, 1.47", "12.8161, 340.253, -124.826, 0.22", "11.8355, 340.979, -125.426, 0.22", "11.7799, 341.021, -125.466, 0.22", "10.9569, 341.683, -126.14, 0.22", "10.2308, 342.32, -126.762, 0.96", "9.89176, 342.662, -127.06, 0.96", "9.40243, 343.244, -127.442, 0.22", "8.99203, 343.852, -127.821, 0.22", "8.8123, 344.148, -127.971, 0.52", "8.4917, 344.738, -128.208, 0.52", "8.38949, 344.925, -128.261, 0.22", "8.00275, 345.593, -128.43, 0.22", "7.9595, 345.664, -128.443, 0.22", "7.36445, 346.548, -128.617, 0.22", "6.72782, 347.427, -128.777, 0.22", "6.67871, 347.491, -128.79, 0.22", "6.6277, 347.551, -128.809, 0.66", "6.49192, 347.711, -128.873, 0.66", "6.13798, 348.127, -129.056, 0.66", "6.04553, 348.234, -129.104, 0.66", "5.83059, 348.482, -129.224, 0.66", "5.1902, 349.209, -129.584, 0.22", "4.52297, 349.911, -130.083, 0.22", "4.41817, 350.004, -130.165, 0.22", "3.95169, 350.402, -130.561, 0.22", "3.51949, 350.806, -130.95, 0.88", "3.12223, 351.209, -131.29, 1.18", "2.16715, 352.287, -132.009, 0.22", "1.58727, 353.006, -132.443, 0.22", "1.29828, 353.432, -132.597, 0.37", "0.766382, 354.378, -132.617, 0.15", "0.340456, 355.21, -132.415, 1.11", "0.0663538, 355.836, -132.203, 1.11", "0.0374295, 355.907, -132.179, 1.11", "-0.383585, 357.044, -131.835, 0.15", "-0.84931, 358.267, -131.505, 0.15", "-0.998843, 358.655, -131.421, 0.22", "-1.70426, 360.573, -131.114, 0.22", "-2.07237, 361.699, -130.93, 0.22", "-2.34083, 362.645, -130.758, 1.11", "-2.51885, 363.44, -130.621, 1.33", "-2.58879, 364.039, -130.492, 0.81", "-2.5921, 364.12, -130.473, 0.81", "-2.47514, 365.214, -130.14, 0.81", "-2.28779, 365.95, -129.835, 1.18", "-2.22992, 366.134, -129.759, 1.18", "-1.83928, 367.258, -129.298, 0.52", "-1.69585, 367.659, -129.143, 1.11", "-1.37945, 368.589, -128.833, 1.92", "-0.863213, 370.171, -128.356, 0.29", "-0.661428, 370.958, -128.059, 0.29", "-0.575622, 371.415, -127.854, 0.59", "-0.568035, 371.478, -127.821, 0.59", "-0.525003, 372.25, -127.418, 0.59", "-0.53348, 372.747, -127.143, 0.29", "-0.603927, 374.203, -126.472, 0.29", "-0.641786, 374.981, -126.114, 0.29", "-0.679412, 375.582, -125.852, 0.88", "-0.714192, 376.103, -125.636, 0.88", "-0.85251, 377.758, -125.016, 0.22", "-1.00674, 379.658, -124.493, 0.22", "-1.01437, 379.723, -124.47, 0.52", "-1.0962, 380.139, -124.277, 0.37", "-1.31383, 380.821, -123.824, 0.22", "-1.62584, 381.455, -123.192, 0.22", "-2.01944, 381.985, -122.471, 0.88", "-3.35333, 383.431, -119.902, 0.15", "-3.50271, 383.582, -119.603, 0.15", "-4.10517, 384.117, -118.343, 0.15", "-4.64857, 384.507, -117.172, 1.18", "-4.95223, 384.689, -116.464, 1.18" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "59.0953, 402.011, -178.388, 0.22", "58.264, 402.626, -179.824, 0.22", "57.8181, 402.934, -180.472, 0.88", "57.4705, 403.168, -180.937, 0.88", "55.9072, 404.221, -183.027, 0.29", "55.5914, 404.433, -183.449, 1.03", "55.5511, 404.46, -183.503, 1.03", "54.8951, 404.778, -184.3, 1.25", "54.8513, 404.796, -184.352, 1.25" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "59.0953, 402.011, -178.388, 0.15", "59.6399, 402.658, -178.388, 0.15", "59.6848, 402.711, -178.388, 0.15", "59.8804, 402.943, -178.388, 1.03", "60.1632, 403.279, -178.388, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "44.6946, 307.681, -139.584, 1.03", "44.5579, 308.099, -139.88, 1.03", "44.3467, 308.711, -140.312, 1.03", "43.835, 310.0, -141.142, 0.22", "43.2279, 311.445, -142.004, 0.22", "42.9111, 312.17, -142.417, 0.22", "42.5283, 313.005, -142.866, 0.22", "42.4404, 313.17, -142.949, 0.22", "41.7796, 314.248, -143.505, 0.22", "41.5622, 314.55, -143.642, 0.44", "41.5202, 314.599, -143.666, 0.44", "41.071, 315.054, -143.901, 0.44", "40.1134, 315.94, -144.303, 0.22", "39.4382, 316.5, -144.55, 0.29", "38.9342, 316.864, -144.729, 0.29", "38.4496, 317.168, -144.876, 0.22", "37.7026, 317.596, -145.069, 0.22", "37.2372, 317.824, -145.159, 0.74", "36.406, 318.183, -145.251, 0.74", "35.4986, 318.567, -145.31, 0.29", "34.6168, 318.936, -145.379, 0.29", "34.544, 318.968, -145.387, 0.29", "33.9055, 319.298, -145.491, 0.29", "33.6804, 319.423, -145.534, 0.29", "32.9634, 319.866, -145.667, 0.29", "32.9061, 319.909, -145.675, 0.29", "32.3881, 320.361, -145.786, 0.29", "31.8152, 320.944, -145.914, 1.11", "31.2658, 321.632, -146.038, 1.25", "30.9331, 322.094, -146.09, 0.22", "30.3104, 323.046, -146.123, 0.22", "29.9165, 323.675, -146.108, 0.22", "29.2755, 324.565, -146.03, 0.22", "28.515, 325.521, -145.92, 0.22", "28.0101, 326.13, -145.837, 0.88", "27.6004, 326.581, -145.764, 1.11", "27.5207, 326.66, -145.752, 0.22", "25.297, 328.853, -145.48, 0.22", "24.705, 329.453, -145.451, 0.81", "24.705, 329.453, -145.451, 0.81", "24.4868, 329.745, -145.475, 0.81", "24.1352, 330.355, -145.581, 0.22", "23.6756, 331.587, -145.919, 0.22", "23.5425, 332.485, -146.235, 0.22", "23.5343, 332.55, -146.257, 0.22", "23.3916, 333.618, -146.596, 0.22", "23.2479, 334.67, -146.914, 1.33", "23.0995, 335.72, -147.206, 1.47", "22.9006, 336.948, -147.547, 0.22", "22.644, 338.595, -147.966, 0.22", "22.5565, 339.192, -148.096, 0.22", "22.5386, 339.339, -148.118, 0.22", "22.4846, 339.91, -148.173, 0.22", "22.4764, 340.213, -148.203, 0.52", "22.4939, 340.781, -148.334, 0.52", "22.4986, 340.846, -148.356, 0.52", "22.5839, 341.779, -148.711, 0.52", "22.6694, 342.689, -149.065, 0.22", "22.836, 344.457, -149.858, 0.22", "22.9101, 345.273, -150.257, 0.44", "22.9134, 345.337, -150.288, 0.44", "22.9322, 346.183, -150.679, 0.44", "22.9018, 346.649, -150.856, 0.44", "22.79, 347.398, -151.115, 0.15", "22.7729, 347.461, -151.138, 0.15", "22.3426, 348.784, -151.578, 0.15", "22.318, 348.845, -151.599, 0.15", "21.6033, 350.274, -152.065, 0.15", "21.1422, 351.087, -152.441, 0.59", "20.7012, 351.753, -152.805, 0.59", "20.6622, 351.801, -152.837, 0.59", "20.2171, 352.234, -153.232, 0.59", "19.7506, 352.625, -153.634, 0.59", "18.2676, 353.649, -154.859, 0.15", "17.4572, 354.169, -155.47, 0.15", "16.7241, 354.611, -156.026, 0.15", "16.0361, 355.053, -156.504, 0.81", "15.4613, 355.458, -156.85, 1.18", "15.1376, 355.711, -156.996, 1.18", "15.0816, 355.767, -157.007, 1.18", "14.8528, 356.042, -157.042, 0.22", "14.1011, 357.142, -157.101, 0.22", "13.6788, 357.846, -157.12, 0.22", "13.6357, 357.928, -157.123, 0.22", "12.9399, 359.366, -157.2, 0.22", "12.8762, 359.501, -157.211, 0.22", "12.3441, 360.625, -157.317, 0.22", "12.069, 361.225, -157.385, 1.03", "11.7505, 361.926, -157.467, 1.47", "11.6067, 362.246, -157.505, 1.47", "11.3614, 362.791, -157.57, 0.15", "10.8851, 363.791, -157.678, 0.15", "10.7878, 363.979, -157.696, 0.15", "10.246, 364.93, -157.786, 0.15", "10.1412, 365.108, -157.809, 0.66", "10.0644, 365.235, -157.827, 0.66", "9.74589, 365.767, -157.909, 0.66", "9.71096, 365.825, -157.924, 0.66", "9.37716, 366.364, -158.101, 0.15", "8.94231, 367.043, -158.38, 0.15", "8.86394, 367.165, -158.446, 0.15", "8.61909, 367.611, -158.693, 0.15", "8.4107, 368.051, -158.953, 0.29", "8.38245, 368.117, -158.991, 0.29", "8.3353, 368.248, -159.059, 0.29", "8.02723, 369.246, -159.571, 0.15", "7.77421, 370.186, -159.938, 0.15", "7.58957, 370.93, -160.171, 0.15", "7.50806, 371.273, -160.254, 0.88", "7.36691, 371.89, -160.38, 0.88", "7.21845, 372.531, -160.478, 0.15", "6.76008, 374.541, -160.651, 0.15", "6.67808, 374.852, -160.681, 0.44", "6.56519, 375.21, -160.717, 0.59", "6.54039, 375.274, -160.725, 0.59", "6.32812, 375.733, -160.799, 0.59", "6.29222, 375.802, -160.812, 0.59", "5.8897, 376.509, -160.952, 0.15", "5.16367, 377.805, -161.166, 0.15", "4.9804, 378.17, -161.202, 0.44", "4.95206, 378.233, -161.204, 0.44", "4.6673, 378.952, -161.195, 0.44", "4.48535, 379.434, -161.191, 0.15", "4.4611, 379.498, -161.197, 0.15", "3.99723, 380.71, -161.487, 0.15", "3.97447, 380.774, -161.502, 0.15", "3.50004, 382.108, -161.794, 0.15", "3.24916, 382.799, -161.947, 0.88", "2.71927, 384.261, -162.237, 1.4", "2.62118, 384.535, -162.281, 1.4", "2.17051, 385.805, -162.445, 0.22", "1.66496, 387.278, -162.576, 0.22", "1.6403, 387.355, -162.579, 0.22", "1.17323, 388.869, -162.692, 0.22", "1.00392, 389.434, -162.758, 0.96", "0.815579, 390.137, -162.93, 1.25", "0.667951, 390.732, -163.129, 1.25", "0.654226, 390.796, -163.15, 1.25", "0.233456, 392.909, -163.845, 0.15", "0.220917, 392.976, -163.867, 0.15", "-0.561344, 397.113, -165.235, 0.15", "-0.587575, 397.252, -165.278, 0.15", "-0.984122, 399.355, -165.858, 0.15", "-1.15074, 400.205, -166.068, 0.96", "-1.16548, 400.271, -166.079, 0.96", "-1.24168, 400.564, -166.143, 1.25", "-1.27734, 400.683, -166.177, 1.25", "-1.38201, 401.021, -166.271, 1.25", "-1.66805, 401.92, -166.507, 0.15", "-2.75207, 405.48, -167.288, 0.15", "-3.2809, 407.271, -167.654, 0.15", "-3.32211, 407.413, -167.681, 0.74", "-3.50984, 408.06, -167.792, 0.74", "-3.64903, 408.538, -167.862, 0.74", "-4.16531, 410.322, -168.03, 0.15", "-4.2774, 410.696, -168.053, 0.74", "-4.33415, 410.875, -168.052, 0.74", "-4.57977, 411.512, -168.036, 0.74", "-4.70825, 411.806, -168.023, 0.74", "-4.99677, 412.444, -167.99, 0.74", "-5.27145, 413.021, -167.956, 0.15", "-5.29886, 413.084, -167.952, 0.15", "-6.04821, 414.975, -167.896, 0.15", "-6.10175, 415.117, -167.89, 0.15", "-6.73028, 416.888, -167.805, 0.15", "-6.97422, 417.622, -167.769, 0.74", "-7.1891, 418.31, -167.738, 0.74", "-7.30935, 418.72, -167.717, 0.74", "-7.51558, 419.47, -167.668, 0.15", "-8.11007, 421.619, -167.519, 0.15", "-8.23994, 422.065, -167.484, 0.74", "-8.40466, 422.628, -167.443, 0.74", "-8.54735, 423.13, -167.425, 0.74", "-8.72068, 423.816, -167.422, 0.15", "-8.92342, 424.804, -167.477, 0.15", "-8.95129, 424.964, -167.489, 0.15", "-9.18787, 426.117, -167.57, 0.15", "-9.3722, 426.904, -167.624, 1.18", "-9.51996, 427.46, -167.66, 1.62", "-9.71982, 428.142, -167.7, 1.62", "-10.0778, 429.138, -167.743, 0.15", "-10.6722, 430.56, -167.73, 0.15", "-10.8511, 430.926, -167.709, 0.15", "-11.0746, 431.344, -167.671, 0.15", "-11.1503, 431.478, -167.652, 0.15", "-11.9391, 432.851, -167.406, 0.15", "-12.8877, 434.482, -167.065, 0.15", "-13.6619, 435.821, -166.691, 0.15", "-13.6941, 435.88, -166.673, 0.15", "-14.1583, 436.77, -166.374, 0.15", "-14.4778, 437.473, -166.155, 1.69", "-14.821, 438.346, -165.897, 1.69", "-15.1512, 439.332, -165.651, 0.15", "-15.5946, 440.804, -165.333, 0.15", "-15.6125, 440.87, -165.322, 0.15", "-16.2256, 443.659, -164.876, 0.15", "-16.3072, 444.11, -164.803, 0.15", "-16.4156, 444.854, -164.695, 0.15", "-16.4837, 445.409, -164.628, 1.18", "-16.5696, 446.247, -164.513, 1.18", "-16.7638, 448.356, -164.199, 0.15", "-16.8788, 449.679, -163.923, 0.15", "-16.9295, 450.191, -163.803, 1.18", "-16.9616, 450.395, -163.756, 1.18", "-17.1346, 451.152, -163.562, 1.18", "-17.1682, 451.257, -163.533, 1.18", "-17.72, 452.633, -163.101, 0.15", "-17.7468, 452.693, -163.079, 0.15", "-18.7896, 454.892, -162.185, 0.15", "-19.1953, 455.712, -161.847, 0.52", "-19.4874, 456.254, -161.617, 0.52", "-19.8797, 456.938, -161.331, 0.52", "-20.1412, 457.342, -161.175, 0.96", "-20.4531, 457.79, -161.017, 0.96", "-20.5293, 457.903, -160.992, 0.96", "-20.7959, 458.346, -160.973, 0.96", "-20.8294, 458.407, -160.975, 0.96", "-21.1316, 458.991, -161.023, 0.15", "-21.8129, 460.374, -161.145, 0.15", "-22.5937, 462.022, -161.285, 0.15", "-22.8886, 462.673, -161.357, 1.11", "-23.1534, 463.28, -161.435, 1.47", "-23.4239, 463.898, -161.525, 1.47", "-23.5819, 464.273, -161.586, 0.15", "-24.209, 465.788, -161.839, 0.15", "-24.438, 466.361, -161.928, 0.52", "-24.4611, 466.425, -161.935, 0.52", "-24.6152, 466.924, -161.985, 0.52", "-24.7909, 467.62, -162.076, 0.15", "-25.0695, 468.993, -162.28, 0.15", "-25.0764, 469.061, -162.289, 0.15", "-25.1128, 469.712, -162.341, 0.88", "-25.1414, 470.601, -162.4, 1.25", "-25.1609, 471.571, -162.456, 0.15", "-25.1621, 471.642, -162.46, 0.15", "-25.2978, 474.644, -162.603, 0.15", "-25.4031, 476.158, -162.663, 0.15", "-25.4501, 476.697, -162.679, 0.74", "-25.5176, 477.332, -162.686, 0.74", "-25.565, 477.692, -162.681, 0.15", "-26.058, 480.631, -162.576, 0.15", "-26.0744, 480.698, -162.572, 0.15", "-26.1053, 480.798, -162.564, 0.44", "-26.1442, 480.917, -162.55, 0.15", "-26.1758, 481.008, -162.53, 0.15", "-26.6238, 482.198, -162.142, 0.15", "-26.6824, 482.338, -162.08, 0.15", "-27.3287, 483.88, -161.398, 0.15", "-27.35, 483.93, -161.376, 0.15", "-27.737, 484.832, -160.991, 0.59", "-27.9198, 485.243, -160.82, 0.74" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "44.6946, 307.681, -139.584, 0.22", "45.9397, 307.389, -139.698, 0.22", "46.0879, 307.355, -139.712, 0.22", "46.9423, 307.155, -139.79, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-4.95223, 384.689, -116.464, 0.15", "-6.27255, 385.604, -113.5, 0.15", "-7.16161, 386.233, -111.594, 0.15", "-7.18731, 386.253, -111.544, 0.15", "-7.88605, 386.819, -110.226, 0.74", "-8.09992, 387.003, -109.833, 0.74", "-8.82682, 387.656, -108.569, 0.44", "-9.00653, 387.839, -108.329, 0.22", "-9.5006, 388.378, -107.758, 0.22", "-9.95328, 388.887, -107.282, 1.03", "-10.2742, 389.242, -107.059, 0.88", "-10.7149, 389.723, -106.825, 0.88", "-11.0115, 390.04, -106.718, 0.22", "-11.5086, 390.546, -106.567, 0.22", "-11.5776, 390.614, -106.548, 0.22", "-13.3608, 392.356, -106.189, 0.22", "-13.495, 392.488, -106.165, 0.44", "-13.5527, 392.544, -106.155, 0.44", "-14.0391, 393.022, -106.084, 0.44", "-14.6349, 393.602, -106.015, 0.22", "-15.4042, 394.302, -105.936, 0.22", "-15.5995, 394.47, -105.909, 0.22", "-16.6306, 395.31, -105.754, 0.22", "-16.7482, 395.397, -105.736, 0.22", "-17.4257, 395.855, -105.641, 0.22", "-18.6247, 396.592, -105.399, 0.22", "-19.3109, 396.999, -105.208, 0.74", "-19.7583, 397.279, -105.06, 1.18", "-20.4774, 397.793, -104.726, 1.18", "-20.5588, 397.858, -104.681, 1.18", "-21.5244, 398.839, -104.096, 0.22", "-21.9282, 399.365, -103.815, 0.22", "-22.4546, 400.151, -103.447, 0.22", "-23.3116, 401.588, -102.756, 0.22", "-23.3567, 401.675, -102.714, 0.22", "-24.2977, 403.631, -101.818, 0.22", "-24.7587, 404.684, -101.387, 1.11", "-24.9899, 405.253, -101.157, 1.62", "-25.4088, 406.367, -100.728, 1.62", "-25.736, 407.323, -100.401, 0.44", "-26.0037, 408.18, -100.127, 0.44", "-26.2018, 408.928, -99.8759, 0.22", "-26.3334, 409.488, -99.7052, 0.59", "-26.3997, 409.794, -99.6196, 0.59", "-26.5139, 410.363, -99.4324, 0.15", "-26.7586, 411.593, -98.9596, 0.15", "-26.9691, 412.666, -98.5058, 0.22", "-27.069, 413.152, -98.2828, 1.33", "-27.2255, 413.877, -97.9442, 1.69", "-27.5818, 415.46, -97.195, 0.22", "-27.8669, 416.641, -96.5909, 0.22", "-28.0671, 417.485, -96.1608, 0.22", "-28.2241, 418.196, -95.8186, 0.74", "-28.3849, 419.028, -95.4295, 0.74", "-28.4011, 419.135, -95.3831, 0.74", "-28.5879, 420.717, -94.6651, 0.22", "-28.7099, 421.697, -93.9297, 0.22", "-28.7722, 422.097, -93.5276, 0.88", "-28.8488, 422.472, -93.0862, 0.96", "-28.9553, 422.887, -92.4924, 0.96", "-29.285, 423.946, -90.7394, 0.22", "-29.8353, 425.367, -88.0343, 0.15", "-29.9898, 425.741, -87.3083, 0.52", "-30.0733, 425.938, -86.9334, 0.52", "-30.3077, 426.477, -85.9027, 0.88", "-30.3254, 426.512, -85.8306, 0.88", "-30.2566, 428.015, -86.2069, 0.22", "-30.1171, 429.71, -87.1174, 0.22", "-30.1112, 429.776, -87.1587, 0.22", "-30.0971, 429.912, -87.2498, 0.52", "-30.016, 430.738, -87.8586, 0.22", "-29.9217, 431.86, -88.6299, 0.22", "-29.8934, 432.528, -89.0088, 0.81", "-29.9283, 432.907, -89.3371, 0.81" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-4.95223, 384.689, -116.464, 0.15", "-5.58409, 383.322, -118.646, 0.15", "-5.76404, 382.933, -119.268, 0.81" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_155", "dend_84", "dend_0", "dend_127", "dend_85", "dend_81", "dend_1", "dend_129", "dend_128", "dend_114", "dend_86", "dend_83", "dend_82", "dend_58", "dend_2", "dend_131", "dend_130", "dend_116", "dend_115", "dend_93", "dend_87", "dend_74", "dend_59", "dend_50", "dend_3", "dend_132", "dend_118", "dend_117", "dend_101", "dend_94", "dend_89", "dend_88", "dend_76", "dend_75", "dend_71", "dend_60", "dend_52", "dend_51", "dend_49", "dend_4", "dend_144", "dend_133", "dend_120", "dend_119", "dend_103", "dend_102", "dend_96", "dend_95", "dend_92", "dend_91", "dend_90", "dend_80", "dend_77", "dend_73", "dend_72", "dend_64", "dend_61", "dend_54", "dend_53", "dend_32", "dend_5", "dend_146", "dend_145", "dend_141", "dend_134", "dend_126", "dend_121", "dend_113", "dend_104", "dend_100", "dend_97", "dend_79", "dend_78", "dend_70", "dend_65", "dend_63", "dend_62", "dend_57", "dend_56", "dend_55", "dend_34", "dend_33", "dend_27", "dend_6", "dend_148", "dend_147", "dend_143", "dend_142", "dend_140", "dend_135", "dend_125", "dend_122", "dend_106", "dend_105", "dend_99", "dend_98", "dend_67", "dend_66", "dend_38", "dend_35", "dend_29", "dend_28", "dend_26", "dend_7", "dend_150", "dend_149", "dend_137", "dend_136", "dend_124", "dend_123", "dend_108", "dend_107", "dend_69", "dend_68", "dend_44", "dend_39", "dend_37", "dend_36", "dend_31", "dend_30", "dend_21", "dend_8", "dend_154", "dend_151", "dend_139", "dend_138", "dend_112", "dend_109", "dend_46", "dend_45", "dend_41", "dend_40", "dend_25", "dend_22", "dend_16", "dend_9", "dend_153", "dend_152", "dend_111", "dend_110", "dend_48", "dend_47", "dend_43", "dend_42", "dend_24", "dend_23", "dend_18", "dend_17", "dend_13", "dend_10", "dend_20", "dend_19", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_155", "dend_84", "dend_0", "dend_127", "dend_85", "dend_81", "dend_1", "dend_129", "dend_128", "dend_114", "dend_86", "dend_83", "dend_82", "dend_58", "dend_2", "dend_131", "dend_130", "dend_116", "dend_115", "dend_93", "dend_87", "dend_74", "dend_59", "dend_50", "dend_3", "dend_132", "dend_118", "dend_117", "dend_101", "dend_94", "dend_89", "dend_88", "dend_76", "dend_75", "dend_71", "dend_60", "dend_52", "dend_51", "dend_49", "dend_4", "dend_144", "dend_133", "dend_120", "dend_119", "dend_103", "dend_102", "dend_96", "dend_95", "dend_92", "dend_91", "dend_90", "dend_80", "dend_77", "dend_73", "dend_72", "dend_64", "dend_61", "dend_54", "dend_53", "dend_32", "dend_5", "dend_146", "dend_145", "dend_141", "dend_134", "dend_126", "dend_121", "dend_113", "dend_104", "dend_100", "dend_97", "dend_79", "dend_78", "dend_70", "dend_65", "dend_63", "dend_62", "dend_57", "dend_56", "dend_55", "dend_34", "dend_33", "dend_27", "dend_6", "dend_148", "dend_147", "dend_143", "dend_142", "dend_140", "dend_135", "dend_125", "dend_122", "dend_106", "dend_105", "dend_99", "dend_98", "dend_67", "dend_66", "dend_38", "dend_35", "dend_29", "dend_28", "dend_26", "dend_7", "dend_150", "dend_149", "dend_137", "dend_136", "dend_124", "dend_123", "dend_108", "dend_107", "dend_69", "dend_68", "dend_44", "dend_39", "dend_37", "dend_36", "dend_31", "dend_30", "dend_21", "dend_8", "dend_154", "dend_151", "dend_139", "dend_138", "dend_112", "dend_109", "dend_46", "dend_45", "dend_41", "dend_40", "dend_25", "dend_22", "dend_16", "dend_9", "dend_153", "dend_152", "dend_111", "dend_110", "dend_48", "dend_47", "dend_43", "dend_42", "dend_24", "dend_23", "dend_18", "dend_17", "dend_13", "dend_10", "dend_20", "dend_19", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_155", "dend_84", "dend_0", "axon_0", "dend_127", "dend_85", "dend_81", "dend_1", "axon_1", "dend_129", "dend_128", "dend_114", "dend_86", "dend_83", "dend_82", "dend_58", "dend_2", "dend_131", "dend_130", "dend_116", "dend_115", "dend_93", "dend_87", "dend_74", "dend_59", "dend_50", "dend_3", "dend_132", "dend_118", "dend_117", "dend_101", "dend_94", "dend_89", "dend_88", "dend_76", "dend_75", "dend_71", "dend_60", "dend_52", "dend_51", "dend_49", "dend_4", "dend_144", "dend_133", "dend_120", "dend_119", "dend_103", "dend_102", "dend_96", "dend_95", "dend_92", "dend_91", "dend_90", "dend_80", "dend_77", "dend_73", "dend_72", "dend_64", "dend_61", "dend_54", "dend_53", "dend_32", "dend_5", "dend_146", "dend_145", "dend_141", "dend_134", "dend_126", "dend_121", "dend_113", "dend_104", "dend_100", "dend_97", "dend_79", "dend_78", "dend_70", "dend_65", "dend_63", "dend_62", "dend_57", "dend_56", "dend_55", "dend_34", "dend_33", "dend_27", "dend_6", "dend_148", "dend_147", "dend_143", "dend_142", "dend_140", "dend_135", "dend_125", "dend_122", "dend_106", "dend_105", "dend_99", "dend_98", "dend_67", "dend_66", "dend_38", "dend_35", "dend_29", "dend_28", "dend_26", "dend_7", "dend_150", "dend_149", "dend_137", "dend_136", "dend_124", "dend_123", "dend_108", "dend_107", "dend_69", "dend_68", "dend_44", "dend_39", "dend_37", "dend_36", "dend_31", "dend_30", "dend_21", "dend_8", "dend_154", "dend_151", "dend_139", "dend_138", "dend_112", "dend_109", "dend_46", "dend_45", "dend_41", "dend_40", "dend_25", "dend_22", "dend_16", "dend_9", "dend_153", "dend_152", "dend_111", "dend_110", "dend_48", "dend_47", "dend_43", "dend_42", "dend_24", "dend_23", "dend_18", "dend_17", "dend_13", "dend_10", "dend_20", "dend_19", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_155" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_127" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_114" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_131" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_120" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_119" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_141" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_121" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_113" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_122" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_150" ]
  }, {
    "name" : "OneSecGrp_SectionRef_116",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_117",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_120",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_123",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_124",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_131",
    "groups" : [ ],
    "sections" : [ "dend_109" ]
  }, {
    "name" : "OneSecGrp_SectionRef_132",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_133",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_136",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_137",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_144",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_146",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_148",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_149",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_150",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_153",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_156",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_158",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_116" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_118" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_128" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_117" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_115" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_129" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_130" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_132" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_133" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_144" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_145" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_126" ]
  }, {
    "name" : "OneSecGrp_SectionRef_122",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_134" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_140" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_146" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_147" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_135" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_136" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_148" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_137" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_149" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_128",
    "groups" : [ ],
    "sections" : [ "dend_139" ]
  }, {
    "name" : "OneSecGrp_SectionRef_129",
    "groups" : [ ],
    "sections" : [ "dend_138" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_118",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_125",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_143" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_119",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_135",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_139",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_125" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_138",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_142" ]
  }, {
    "name" : "OneSecGrp_SectionRef_134",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_152",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_151",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_157",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_147",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_121",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_145",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_127",
    "groups" : [ ],
    "sections" : [ "dend_151" ]
  }, {
    "name" : "OneSecGrp_SectionRef_115",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_114",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_141",
    "groups" : [ ],
    "sections" : [ "dend_152" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_140",
    "groups" : [ ],
    "sections" : [ "dend_153" ]
  }, {
    "name" : "OneSecGrp_SectionRef_130",
    "groups" : [ ],
    "sections" : [ "dend_112" ]
  }, {
    "name" : "OneSecGrp_SectionRef_126",
    "groups" : [ ],
    "sections" : [ "dend_154" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_155",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_154",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_159",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_124" ]
  }, {
    "name" : "OneSecGrp_SectionRef_113",
    "groups" : [ ],
    "sections" : [ "dend_123" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_143",
    "groups" : [ ],
    "sections" : [ "dend_110" ]
  }, {
    "name" : "OneSecGrp_SectionRef_142",
    "groups" : [ ],
    "sections" : [ "dend_111" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108", "dend_109", "dend_110", "dend_111", "dend_112", "dend_113", "dend_114", "dend_115", "dend_116", "dend_117", "dend_118", "dend_119", "dend_120", "dend_121", "dend_122", "dend_123", "dend_124", "dend_125", "dend_126", "dend_127", "dend_128", "dend_129", "dend_130", "dend_131", "dend_132", "dend_133", "dend_134", "dend_135", "dend_136", "dend_137", "dend_138", "dend_139", "dend_140", "dend_141", "dend_142", "dend_143", "dend_144", "dend_145", "dend_146", "dend_147", "dend_148", "dend_149", "dend_150", "dend_151", "dend_152", "dend_153", "dend_154", "dend_155" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_130", "dend_130", "dend_130", "dend_130", "dend_130", "dend_130", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_118", "dend_118", "dend_118", "dend_118", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_4", "dend_4", "dend_4", "dend_4", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_133", "dend_133", "dend_133", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_145", "dend_145", "dend_145", "dend_145", "dend_145", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_126", "dend_126", "dend_126", "dend_126", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_140", "dend_140", "dend_140", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_98", "dend_98", "dend_98", "dend_98", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_110", "dend_110", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_MC_bf2b2fbcbf_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_155, id: dend_155, parent: soma_0
create dend_155
public dend_155
// Section: dend_84, id: dend_84, parent: soma_0
create dend_84
public dend_84
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_127, id: dend_127, parent: dend_84
create dend_127
public dend_127
// Section: dend_85, id: dend_85, parent: dend_84
create dend_85
public dend_85
// Section: dend_81, id: dend_81, parent: dend_0
create dend_81
public dend_81
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_129, id: dend_129, parent: dend_127
create dend_129
public dend_129
// Section: dend_128, id: dend_128, parent: dend_127
create dend_128
public dend_128
// Section: dend_114, id: dend_114, parent: dend_85
create dend_114
public dend_114
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_58, id: dend_58, parent: dend_1
create dend_58
public dend_58
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_131, id: dend_131, parent: dend_129
create dend_131
public dend_131
// Section: dend_130, id: dend_130, parent: dend_129
create dend_130
public dend_130
// Section: dend_116, id: dend_116, parent: dend_114
create dend_116
public dend_116
// Section: dend_115, id: dend_115, parent: dend_114
create dend_115
public dend_115
// Section: dend_93, id: dend_93, parent: dend_86
create dend_93
public dend_93
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_74, id: dend_74, parent: dend_58
create dend_74
public dend_74
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_50, id: dend_50, parent: dend_2
create dend_50
public dend_50
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_132, id: dend_132, parent: dend_131
create dend_132
public dend_132
// Section: dend_118, id: dend_118, parent: dend_116
create dend_118
public dend_118
// Section: dend_117, id: dend_117, parent: dend_116
create dend_117
public dend_117
// Section: dend_101, id: dend_101, parent: dend_93
create dend_101
public dend_101
// Section: dend_94, id: dend_94, parent: dend_93
create dend_94
public dend_94
// Section: dend_89, id: dend_89, parent: dend_87
create dend_89
public dend_89
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_71, id: dend_71, parent: dend_59
create dend_71
public dend_71
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_3
create dend_49
public dend_49
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_144, id: dend_144, parent: dend_132
create dend_144
public dend_144
// Section: dend_133, id: dend_133, parent: dend_132
create dend_133
public dend_133
// Section: dend_120, id: dend_120, parent: dend_118
create dend_120
public dend_120
// Section: dend_119, id: dend_119, parent: dend_118
create dend_119
public dend_119
// Section: dend_103, id: dend_103, parent: dend_101
create dend_103
public dend_103
// Section: dend_102, id: dend_102, parent: dend_101
create dend_102
public dend_102
// Section: dend_96, id: dend_96, parent: dend_94
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_92, id: dend_92, parent: dend_89
create dend_92
public dend_92
// Section: dend_91, id: dend_91, parent: dend_89
create dend_91
public dend_91
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_80, id: dend_80, parent: dend_76
create dend_80
public dend_80
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_64, id: dend_64, parent: dend_60
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_32, id: dend_32, parent: dend_4
create dend_32
public dend_32
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_146, id: dend_146, parent: dend_144
create dend_146
public dend_146
// Section: dend_145, id: dend_145, parent: dend_144
create dend_145
public dend_145
// Section: dend_141, id: dend_141, parent: dend_133
create dend_141
public dend_141
// Section: dend_134, id: dend_134, parent: dend_133
create dend_134
public dend_134
// Section: dend_126, id: dend_126, parent: dend_120
create dend_126
public dend_126
// Section: dend_121, id: dend_121, parent: dend_120
create dend_121
public dend_121
// Section: dend_113, id: dend_113, parent: dend_103
create dend_113
public dend_113
// Section: dend_104, id: dend_104, parent: dend_103
create dend_104
public dend_104
// Section: dend_100, id: dend_100, parent: dend_96
create dend_100
public dend_100
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_70, id: dend_70, parent: dend_64
create dend_70
public dend_70
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_54
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_5
create dend_27
public dend_27
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_148, id: dend_148, parent: dend_146
create dend_148
public dend_148
// Section: dend_147, id: dend_147, parent: dend_146
create dend_147
public dend_147
// Section: dend_143, id: dend_143, parent: dend_141
create dend_143
public dend_143
// Section: dend_142, id: dend_142, parent: dend_141
create dend_142
public dend_142
// Section: dend_140, id: dend_140, parent: dend_134
create dend_140
public dend_140
// Section: dend_135, id: dend_135, parent: dend_134
create dend_135
public dend_135
// Section: dend_125, id: dend_125, parent: dend_121
create dend_125
public dend_125
// Section: dend_122, id: dend_122, parent: dend_121
create dend_122
public dend_122
// Section: dend_106, id: dend_106, parent: dend_104
create dend_106
public dend_106
// Section: dend_105, id: dend_105, parent: dend_104
create dend_105
public dend_105
// Section: dend_99, id: dend_99, parent: dend_97
create dend_99
public dend_99
// Section: dend_98, id: dend_98, parent: dend_97
create dend_98
public dend_98
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_6
create dend_26
public dend_26
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_150, id: dend_150, parent: dend_148
create dend_150
public dend_150
// Section: dend_149, id: dend_149, parent: dend_148
create dend_149
public dend_149
// Section: dend_137, id: dend_137, parent: dend_135
create dend_137
public dend_137
// Section: dend_136, id: dend_136, parent: dend_135
create dend_136
public dend_136
// Section: dend_124, id: dend_124, parent: dend_122
create dend_124
public dend_124
// Section: dend_123, id: dend_123, parent: dend_122
create dend_123
public dend_123
// Section: dend_108, id: dend_108, parent: dend_106
create dend_108
public dend_108
// Section: dend_107, id: dend_107, parent: dend_106
create dend_107
public dend_107
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_44, id: dend_44, parent: dend_38
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_21, id: dend_21, parent: dend_7
create dend_21
public dend_21
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_154, id: dend_154, parent: dend_150
create dend_154
public dend_154
// Section: dend_151, id: dend_151, parent: dend_150
create dend_151
public dend_151
// Section: dend_139, id: dend_139, parent: dend_137
create dend_139
public dend_139
// Section: dend_138, id: dend_138, parent: dend_137
create dend_138
public dend_138
// Section: dend_112, id: dend_112, parent: dend_108
create dend_112
public dend_112
// Section: dend_109, id: dend_109, parent: dend_108
create dend_109
public dend_109
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_153, id: dend_153, parent: dend_151
create dend_153
public dend_153
// Section: dend_152, id: dend_152, parent: dend_151
create dend_152
public dend_152
// Section: dend_111, id: dend_111, parent: dend_109
create dend_111
public dend_111
// Section: dend_110, id: dend_110, parent: dend_109
create dend_110
public dend_110
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_155, dend_84, dend_0, dend_127, dend_85, dend_81, dend_1, dend_129, dend_128, dend_114, dend_86, dend_83, dend_82, dend_58, dend_2, dend_131, dend_130, dend_116, dend_115, dend_93, dend_87, dend_74, dend_59, dend_50, dend_3, dend_132, dend_118, dend_117, dend_101, dend_94, dend_89, dend_88, dend_76, dend_75, dend_71, dend_60, dend_52, dend_51, dend_49, dend_4, dend_144, dend_133, dend_120, dend_119, dend_103, dend_102, dend_96, dend_95, dend_92, dend_91, dend_90, dend_80, dend_77, dend_73, dend_72, dend_64, dend_61, dend_54, dend_53, dend_32, dend_5, dend_146, dend_145, dend_141, dend_134, dend_126, dend_121, dend_113, dend_104, dend_100, dend_97, dend_79, dend_78, dend_70, dend_65, dend_63, dend_62, dend_57, dend_56, dend_55, dend_34, dend_33, dend_27, dend_6, dend_148, dend_147, dend_143, dend_142, dend_140, dend_135, dend_125, dend_122, dend_106, dend_105, dend_99, dend_98, dend_67, dend_66, dend_38, dend_35, dend_29, dend_28, dend_26, dend_7, dend_150, dend_149, dend_137, dend_136, dend_124, dend_123, dend_108, dend_107, dend_69, dend_68, dend_44, dend_39, dend_37, dend_36, dend_31, dend_30, dend_21, dend_8, dend_154, dend_151, dend_139, dend_138, dend_112, dend_109, dend_46, dend_45, dend_41, dend_40, dend_25, dend_22, dend_16, dend_9, dend_153, dend_152, dend_111, dend_110, dend_48, dend_47, dend_43, dend_42, dend_24, dend_23, dend_18, dend_17, dend_13, dend_10, dend_20, dend_19, dend_15, dend_14, dend_12, dend_11]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_155, dend_84, dend_0, dend_127, dend_85, dend_81, dend_1, dend_129, dend_128, dend_114, dend_86, dend_83, dend_82, dend_58, dend_2, dend_131, dend_130, dend_116, dend_115, dend_93, dend_87, dend_74, dend_59, dend_50, dend_3, dend_132, dend_118, dend_117, dend_101, dend_94, dend_89, dend_88, dend_76, dend_75, dend_71, dend_60, dend_52, dend_51, dend_49, dend_4, dend_144, dend_133, dend_120, dend_119, dend_103, dend_102, dend_96, dend_95, dend_92, dend_91, dend_90, dend_80, dend_77, dend_73, dend_72, dend_64, dend_61, dend_54, dend_53, dend_32, dend_5, dend_146, dend_145, dend_141, dend_134, dend_126, dend_121, dend_113, dend_104, dend_100, dend_97, dend_79, dend_78, dend_70, dend_65, dend_63, dend_62, dend_57, dend_56, dend_55, dend_34, dend_33, dend_27, dend_6, dend_148, dend_147, dend_143, dend_142, dend_140, dend_135, dend_125, dend_122, dend_106, dend_105, dend_99, dend_98, dend_67, dend_66, dend_38, dend_35, dend_29, dend_28, dend_26, dend_7, dend_150, dend_149, dend_137, dend_136, dend_124, dend_123, dend_108, dend_107, dend_69, dend_68, dend_44, dend_39, dend_37, dend_36, dend_31, dend_30, dend_21, dend_8, dend_154, dend_151, dend_139, dend_138, dend_112, dend_109, dend_46, dend_45, dend_41, dend_40, dend_25, dend_22, dend_16, dend_9, dend_153, dend_152, dend_111, dend_110, dend_48, dend_47, dend_43, dend_42, dend_24, dend_23, dend_18, dend_17, dend_13, dend_10, dend_20, dend_19, dend_15, dend_14, dend_12, dend_11]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_155, dend_84, dend_0, axon_0, dend_127, dend_85, dend_81, dend_1, axon_1, dend_129, dend_128, dend_114, dend_86, dend_83, dend_82, dend_58, dend_2, dend_131, dend_130, dend_116, dend_115, dend_93, dend_87, dend_74, dend_59, dend_50, dend_3, dend_132, dend_118, dend_117, dend_101, dend_94, dend_89, dend_88, dend_76, dend_75, dend_71, dend_60, dend_52, dend_51, dend_49, dend_4, dend_144, dend_133, dend_120, dend_119, dend_103, dend_102, dend_96, dend_95, dend_92, dend_91, dend_90, dend_80, dend_77, dend_73, dend_72, dend_64, dend_61, dend_54, dend_53, dend_32, dend_5, dend_146, dend_145, dend_141, dend_134, dend_126, dend_121, dend_113, dend_104, dend_100, dend_97, dend_79, dend_78, dend_70, dend_65, dend_63, dend_62, dend_57, dend_56, dend_55, dend_34, dend_33, dend_27, dend_6, dend_148, dend_147, dend_143, dend_142, dend_140, dend_135, dend_125, dend_122, dend_106, dend_105, dend_99, dend_98, dend_67, dend_66, dend_38, dend_35, dend_29, dend_28, dend_26, dend_7, dend_150, dend_149, dend_137, dend_136, dend_124, dend_123, dend_108, dend_107, dend_69, dend_68, dend_44, dend_39, dend_37, dend_36, dend_31, dend_30, dend_21, dend_8, dend_154, dend_151, dend_139, dend_138, dend_112, dend_109, dend_46, dend_45, dend_41, dend_40, dend_25, dend_22, dend_16, dend_9, dend_153, dend_152, dend_111, dend_110, dend_48, dend_47, dend_43, dend_42, dend_24, dend_23, dend_18, dend_17, dend_13, dend_10, dend_20, dend_19, dend_15, dend_14, dend_12, dend_11]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_155]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_127]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_114]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_131]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_120]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_119]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_141]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_121]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_113]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_122]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_150]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_116
// Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_117
// Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_120
// Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_123
// Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_124
// Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_109]}
objref OneSecGrp_SectionRef_131
// Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_132
// Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_133
// Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_136
// Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_137
// Group: {name=OneSecGrp_SectionRef_144, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_144
// Group: {name=OneSecGrp_SectionRef_146, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_146
// Group: {name=OneSecGrp_SectionRef_148, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_148
// Group: {name=OneSecGrp_SectionRef_149, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_149
// Group: {name=OneSecGrp_SectionRef_150, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_150
// Group: {name=OneSecGrp_SectionRef_153, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_153
// Group: {name=OneSecGrp_SectionRef_156, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_156
// Group: {name=OneSecGrp_SectionRef_158, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_158
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_116]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_118]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_128]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_117]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_115]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_129]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_130]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_132]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_133]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_144]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_145]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_126]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_122
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_134]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_140]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_146]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_147]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_135]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_136]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_148]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_137]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_149]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_139]}
objref OneSecGrp_SectionRef_128
// Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_138]}
objref OneSecGrp_SectionRef_129
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_118
// Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_125
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_143]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_119
// Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_135
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_139, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_139
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_125]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_138
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_142]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_134
// Group: {name=OneSecGrp_SectionRef_152, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_152
// Group: {name=OneSecGrp_SectionRef_151, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_151
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_157, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_157
// Group: {name=OneSecGrp_SectionRef_147, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_147
// Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_121
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_145, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_145
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_151]}
objref OneSecGrp_SectionRef_127
// Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_115
// Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_114
// Group: {name=OneSecGrp_SectionRef_141, groups=[], sections=[dend_152]}
objref OneSecGrp_SectionRef_141
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_140, groups=[], sections=[dend_153]}
objref OneSecGrp_SectionRef_140
// Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_112]}
objref OneSecGrp_SectionRef_130
// Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_154]}
objref OneSecGrp_SectionRef_126
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_155, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_155
// Group: {name=OneSecGrp_SectionRef_154, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_154
// Group: {name=OneSecGrp_SectionRef_159, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_159
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_124]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_123]}
objref OneSecGrp_SectionRef_113
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_143, groups=[], sections=[dend_110]}
objref OneSecGrp_SectionRef_143
// Group: {name=OneSecGrp_SectionRef_142, groups=[], sections=[dend_111]}
objref OneSecGrp_SectionRef_142
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134, dend_135, dend_136, dend_137, dend_138, dend_139, dend_140, dend_141, dend_142, dend_143, dend_144, dend_145, dend_146, dend_147, dend_148, dend_149, dend_150, dend_151, dend_152, dend_153, dend_154, dend_155], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_116, dend_116, dend_116, dend_116, dend_116, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_118, dend_118, dend_118, dend_118, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_4, dend_4, dend_4, dend_4, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_133, dend_133, dend_133, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_145, dend_145, dend_145, dend_145, dend_145, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_126, dend_126, dend_126, dend_126, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_140, dend_140, dend_140, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_110, dend_110, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_155(0), soma_0(0.4500005799210318)
    connect dend_84(0), soma_0(0.4500005799210318)
    connect dend_0(0), soma_0(0.4500005799210318)
    connect axon_0(0), soma_0(1.0)
    connect dend_127(0), dend_84(1.0)
    connect dend_85(0), dend_84(1.0)
    connect dend_81(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_129(0), dend_127(1.0)
    connect dend_128(0), dend_127(1.0)
    connect dend_114(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_58(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_131(0), dend_129(1.0)
    connect dend_130(0), dend_129(1.0)
    connect dend_116(0), dend_114(1.0)
    connect dend_115(0), dend_114(1.0)
    connect dend_93(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_74(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_50(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_132(0), dend_131(1.0)
    connect dend_118(0), dend_116(1.0)
    connect dend_117(0), dend_116(1.0)
    connect dend_101(0), dend_93(1.0)
    connect dend_94(0), dend_93(1.0)
    connect dend_89(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_71(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_144(0), dend_132(1.0)
    connect dend_133(0), dend_132(1.0)
    connect dend_120(0), dend_118(1.0)
    connect dend_119(0), dend_118(1.0)
    connect dend_103(0), dend_101(1.0)
    connect dend_102(0), dend_101(1.0)
    connect dend_96(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_92(0), dend_89(1.0)
    connect dend_91(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_80(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_64(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_32(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_146(0), dend_144(1.0)
    connect dend_145(0), dend_144(1.0)
    connect dend_141(0), dend_133(1.0)
    connect dend_134(0), dend_133(1.0)
    connect dend_126(0), dend_120(1.0)
    connect dend_121(0), dend_120(1.0)
    connect dend_113(0), dend_103(1.0)
    connect dend_104(0), dend_103(1.0)
    connect dend_100(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_70(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_57(0), dend_54(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_148(0), dend_146(1.0)
    connect dend_147(0), dend_146(1.0)
    connect dend_143(0), dend_141(1.0)
    connect dend_142(0), dend_141(1.0)
    connect dend_140(0), dend_134(1.0)
    connect dend_135(0), dend_134(1.0)
    connect dend_125(0), dend_121(1.0)
    connect dend_122(0), dend_121(1.0)
    connect dend_106(0), dend_104(1.0)
    connect dend_105(0), dend_104(1.0)
    connect dend_99(0), dend_97(1.0)
    connect dend_98(0), dend_97(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_150(0), dend_148(1.0)
    connect dend_149(0), dend_148(1.0)
    connect dend_137(0), dend_135(1.0)
    connect dend_136(0), dend_135(1.0)
    connect dend_124(0), dend_122(1.0)
    connect dend_123(0), dend_122(1.0)
    connect dend_108(0), dend_106(1.0)
    connect dend_107(0), dend_106(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_44(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_21(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_154(0), dend_150(1.0)
    connect dend_151(0), dend_150(1.0)
    connect dend_139(0), dend_137(1.0)
    connect dend_138(0), dend_137(1.0)
    connect dend_112(0), dend_108(1.0)
    connect dend_109(0), dend_108(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_153(0), dend_151(1.0)
    connect dend_152(0), dend_151(1.0)
    connect dend_111(0), dend_109(1.0)
    connect dend_110(0), dend_109(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.83638, 12.3318, -1.26703, 2.94939 ) }
    soma_0 { pt3dadd( -2.55054, 11.1277, -1.1402, 4.81305 ) }
    soma_0 { pt3dadd( -2.2647, 9.92366, -1.01338, 6.57471 ) }
    soma_0 { pt3dadd( -1.97886, 8.71959, -0.886552, 7.67573 ) }
    soma_0 { pt3dadd( -1.69302, 7.51553, -0.759726, 8.48432 ) }
    soma_0 { pt3dadd( -1.40719, 6.31146, -0.6329, 9.36598 ) }
    soma_0 { pt3dadd( -1.12135, 5.10739, -0.506075, 10.0986 ) }
    soma_0 { pt3dadd( -0.835506, 3.90333, -0.379249, 10.7023 ) }
    soma_0 { pt3dadd( -0.549666, 2.69926, -0.252424, 11.2902 ) }
    soma_0 { pt3dadd( -0.263826, 1.4952, -0.125598, 11.5615 ) }
    soma_0 { pt3dadd( 0.0220138, 0.291133, 0.00122739, 11.5342 ) }
    soma_0 { pt3dadd( 0.307854, -0.912932, 0.128053, 11.2102 ) }
    soma_0 { pt3dadd( 0.593693, -2.117, 0.254879, 11.0503 ) }
    soma_0 { pt3dadd( 0.879533, -3.32106, 0.381704, 10.841 ) }
    soma_0 { pt3dadd( 1.16537, -4.52513, 0.50853, 10.1133 ) }
    soma_0 { pt3dadd( 1.45121, -5.72919, 0.635355, 8.61794 ) }
    soma_0 { pt3dadd( 1.73705, -6.93326, 0.762181, 6.75639 ) }
    soma_0 { pt3dadd( 2.02289, -8.13732, 0.889006, 5.11821 ) }
    soma_0 { pt3dadd( 2.30873, -9.34139, 1.01583, 4.09257 ) }
    soma_0 { pt3dadd( 2.59457, -10.5455, 1.14266, 3.47113 ) }
    soma_0 { pt3dadd( 2.88041, -11.7495, 1.26948, 2.10111 ) }
    // Section: dend_155, id: dend_155, parent: soma_0 (entry count 21/100)
    dend_155 { pt3dclear() }
    dend_155 { pt3dadd( 4.37091, -8.6706, 3.20881, 1.03 ) }
    dend_155 { pt3dadd( 4.93809, -9.51991, 3.95198, 1.03 ) }
    dend_155 { pt3dadd( 5.42628, -10.1967, 4.65593, 1.03 ) }
    dend_155 { pt3dadd( 5.78649, -10.6495, 5.15013, 1.11 ) }
    dend_155 { pt3dadd( 6.313, -11.2581, 5.91289, 0.88 ) }
    dend_155 { pt3dadd( 6.60265, -11.5754, 6.33178, 0.88 ) }
    dend_155 { pt3dadd( 7.76993, -12.7648, 7.93186, 0.44 ) }
    dend_155 { pt3dadd( 8.14754, -13.1001, 8.48485, 0.44 ) }
    dend_155 { pt3dadd( 8.42055, -13.2949, 8.87376, 0.44 ) }
    dend_155 { pt3dadd( 9.03227, -13.6519, 9.59259, 0.44 ) }
    dend_155 { pt3dadd( 9.29421, -13.7956, 9.80437, 0.44 ) }
    dend_155 { pt3dadd( 9.77137, -14.0407, 10.0485, 0.44 ) }
    dend_155 { pt3dadd( 10.2239, -14.2692, 10.1792, 0.96 ) }
    dend_155 { pt3dadd( 10.4114, -14.3743, 10.2361, 1.55 ) }
    dend_155 { pt3dadd( 11.2199, -14.8805, 10.4625, 1.55 ) }
    dend_155 { pt3dadd( 11.9537, -15.3736, 10.6321, 0.74 ) }
    dend_155 { pt3dadd( 12.5383, -15.7984, 10.777, 0.74 ) }
    dend_155 { pt3dadd( 13.3714, -16.4661, 10.9944, 0.44 ) }
    dend_155 { pt3dadd( 13.4841, -16.5591, 11.0343, 0.44 ) }
    dend_155 { pt3dadd( 14.0886, -17.0735, 11.2887, 0.44 ) }
    dend_155 { pt3dadd( 14.4637, -17.4253, 11.4734, 0.81 ) }
    dend_155 { pt3dadd( 14.8546, -17.8407, 11.7238, 0.81 ) }
    dend_155 { pt3dadd( 15.0446, -18.1222, 11.9659, 1.03 ) }
    dend_155 { pt3dadd( 15.4737, -18.9786, 12.8008, 0.44 ) }
    dend_155 { pt3dadd( 15.5828, -19.3758, 13.2815, 0.44 ) }
    dend_155 { pt3dadd( 15.6497, -20.0044, 14.1462, 0.44 ) }
    dend_155 { pt3dadd( 15.6377, -20.5135, 14.8592, 0.66 ) }
    dend_155 { pt3dadd( 15.45, -22.0516, 17.0642, 0.59 ) }
    dend_155 { pt3dadd( 15.4058, -22.2681, 17.3728, 1.33 ) }
    dend_155 { pt3dadd( 15.0423, -23.5126, 19.0866, 0.29 ) }
    dend_155 { pt3dadd( 15.028, -23.5536, 19.1443, 0.29 ) }
    dend_155 { pt3dadd( 14.8581, -24.0209, 19.7755, 0.29 ) }
    dend_155 { pt3dadd( 14.8417, -24.076, 19.8305, 0.29 ) }
    dend_155 { pt3dadd( 14.8251, -24.2246, 19.8983, 0.44 ) }
    dend_155 { pt3dadd( 14.8345, -24.3656, 19.9421, 0.44 ) }
    dend_155 { pt3dadd( 14.9627, -24.953, 20.0259, 0.44 ) }
    dend_155 { pt3dadd( 15.1253, -25.6323, 20.1418, 0.44 ) }
    dend_155 { pt3dadd( 15.1977, -25.9039, 20.1953, 0.44 ) }
    dend_155 { pt3dadd( 15.3697, -26.5159, 20.438, 0.37 ) }
    dend_155 { pt3dadd( 15.5623, -27.163, 20.8065, 0.74 ) }
    dend_155 { pt3dadd( 15.7203, -27.6447, 21.1528, 1.25 ) }
    dend_155 { pt3dadd( 15.8377, -27.9747, 21.4522, 1.33 ) }
    dend_155 { pt3dadd( 15.8554, -28.0228, 21.4997, 1.33 ) }
    dend_155 { pt3dadd( 16.354, -29.3401, 22.8621, 1.33 ) }
    dend_155 { pt3dadd( 16.3722, -29.3887, 22.9088, 1.33 ) }
    dend_155 { pt3dadd( 16.4919, -29.779, 23.3812, 1.55 ) }
    dend_155 { pt3dadd( 16.5836, -30.171, 23.8893, 1.77 ) }
    dend_155 { pt3dadd( 16.6464, -30.5895, 24.4748, 1.77 ) }
    dend_155 { pt3dadd( 16.69, -31.1324, 25.273, 1.11 ) }
    dend_155 { pt3dadd( 16.7006, -31.6809, 26.0836, 0.66 ) }
    dend_155 { pt3dadd( 16.6939, -33.5579, 29.2738, 0.44 ) }
    dend_155 { pt3dadd( 16.6899, -33.8095, 29.7393, 0.88 ) }
    dend_155 { pt3dadd( 16.6464, -34.8382, 31.7433, 0.52 ) }
    dend_155 { pt3dadd( 16.608, -35.3611, 32.8313, 1.11 ) }
    dend_155 { pt3dadd( 16.5873, -35.4848, 33.1075, 1.62 ) }
    dend_155 { pt3dadd( 16.2133, -36.8152, 36.2382, 0.44 ) }
    dend_155 { pt3dadd( 16.1501, -37.0099, 36.655, 1.03 ) }
    dend_155 { pt3dadd( 16.0862, -37.1817, 37.0175, 1.03 ) }
    dend_155 { pt3dadd( 16.0361, -37.2944, 37.2364, 1.03 ) }
    dend_155 { pt3dadd( 15.5568, -38.2902, 38.868, 0.37 ) }
    dend_155 { pt3dadd( 15.4541, -38.5425, 39.2436, 1.18 ) }
    dend_155 { pt3dadd( 15.2843, -38.9793, 39.7992, 1.62 ) }
    dend_155 { pt3dadd( 15.2271, -39.1704, 40.0406, 1.77 ) }
    dend_155 { pt3dadd( 15.2021, -39.3008, 40.2033, 1.77 ) }
    dend_155 { pt3dadd( 15.0092, -40.9399, 42.1654, 0.22 ) }
    dend_155 { pt3dadd( 14.948, -41.9684, 43.3155, 0.22 ) }
    dend_155 { pt3dadd( 14.9452, -42.0122, 43.3701, 0.22 ) }
    dend_155 { pt3dadd( 14.9282, -42.2685, 43.7537, 0.22 ) }
    dend_155 { pt3dadd( 14.9048, -42.7859, 44.6123, 0.66 ) }
    dend_155 { pt3dadd( 14.8985, -42.8971, 44.7934, 1.03 ) }
    dend_155 { pt3dadd( 14.8784, -43.3049, 45.4162, 1.33 ) }
    dend_155 { pt3dadd( 14.786, -44.7908, 47.5227, 0.15 ) }
    dend_155 { pt3dadd( 14.7518, -46.0752, 49.2641, 1.4 ) }
    dend_155 { pt3dadd( 14.7421, -46.7823, 50.2415, 0.29 ) }
    dend_155 { pt3dadd( 14.753, -47.431, 51.1281, 0.29 ) }
    dend_155 { pt3dadd( 14.7782, -47.9469, 51.8333, 0.29 ) }
    dend_155 { pt3dadd( 14.798, -48.1614, 52.1185, 1.03 ) }
    dend_155 { pt3dadd( 14.8079, -48.4606, 52.3662, 1.03 ) }
    // Section: dend_84, id: dend_84, parent: soma_0 (entry count 99/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 3.12091, -11.8978, 0.388809, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_84 { pt3dadd( 3.12091, -11.8978, 0.388809, 1.99 ) }
    dend_84 { pt3dadd( 3.07096, -13.5453, 0.388809, 1.99 ) }
    dend_84 { pt3dadd( 3.05945, -14.8421, 0.388809, 2.14 ) }
    dend_84 { pt3dadd( 3.062, -16.1222, 0.467243, 2.36 ) }
    dend_84 { pt3dadd( 3.09612, -17.7831, 0.617163, 2.65 ) }
    dend_84 { pt3dadd( 3.12569, -18.7986, 0.719251, 2.87 ) }
    dend_84 { pt3dadd( 3.15783, -19.5843, 0.80972, 2.87 ) }
    dend_84 { pt3dadd( 3.2323, -20.8234, 0.970066, 2.65 ) }
    dend_84 { pt3dadd( 3.38993, -22.8971, 1.26257, 2.14 ) }
    dend_84 { pt3dadd( 3.52683, -24.5469, 1.48471, 2.14 ) }
    dend_84 { pt3dadd( 3.67575, -26.399, 1.72158, 2.06 ) }
    dend_84 { pt3dadd( 3.67984, -26.4694, 1.72931, 2.06 ) }
    dend_84 { pt3dadd( 3.71375, -27.8147, 1.77927, 2.06 ) }
    dend_84 { pt3dadd( 3.71241, -27.8828, 1.77575, 2.06 ) }
    dend_84 { pt3dadd( 3.61803, -29.7255, 1.48194, 2.21 ) }
    dend_84 { pt3dadd( 3.61284, -29.8026, 1.46752, 2.21 ) }
    dend_84 { pt3dadd( 3.56, -30.7916, 1.25248, 2.21 ) }
    dend_84 { pt3dadd( 3.50842, -32.5272, 0.840376, 2.21 ) }
    dend_84 { pt3dadd( 3.50066, -33.304, 0.68885, 2.28 ) }
    dend_84 { pt3dadd( 3.5111, -34.5393, 0.486548, 2.14 ) }
    dend_84 { pt3dadd( 3.55008, -35.8411, 0.318559, 2.21 ) }
    dend_84 { pt3dadd( 3.62415, -37.4165, 0.176565, 2.21 ) }
    dend_84 { pt3dadd( 3.73434, -39.2853, 0.164513, 2.21 ) }
    dend_84 { pt3dadd( 3.86247, -41.2695, 0.311515, 2.21 ) }
    dend_84 { pt3dadd( 3.86762, -41.3378, 0.319231, 2.21 ) }
    dend_84 { pt3dadd( 3.97011, -42.6172, 0.510543, 2.21 ) }
    dend_84 { pt3dadd( 4.07361, -44.2739, 0.817874, 2.21 ) }
    dend_84 { pt3dadd( 4.13281, -46.071, 1.2751, 2.36 ) }
    dend_84 { pt3dadd( 4.13522, -46.5362, 1.41231, 2.5 ) }
    dend_84 { pt3dadd( 4.06207, -48.1063, 1.84964, 1.47 ) }
    dend_84 { pt3dadd( 3.96301, -49.0239, 2.11103, 1.47 ) }
    dend_84 { pt3dadd( 3.79254, -49.7985, 2.33274, 1.47 ) }
    dend_84 { pt3dadd( 3.39116, -50.9637, 2.64177, 1.47 ) }
    dend_84 { pt3dadd( 3.35916, -51.0347, 2.65526, 1.47 ) }
    dend_84 { pt3dadd( 2.85699, -51.9617, 2.82987, 1.77 ) }
    dend_84 { pt3dadd( 2.34708, -52.7527, 2.97737, 1.92 ) }
    dend_84 { pt3dadd( 1.75089, -53.6918, 3.15246, 1.92 ) }
    dend_84 { pt3dadd( 1.71943, -53.7551, 3.16209, 1.92 ) }
    dend_84 { pt3dadd( 1.27033, -54.8925, 3.27876, 1.92 ) }
    dend_84 { pt3dadd( 1.24353, -54.98, 3.28973, 1.92 ) }
    dend_84 { pt3dadd( 1.23348, -55.0495, 3.30037, 1.92 ) }
    dend_84 { pt3dadd( 1.21963, -56.0086, 3.46901, 1.69 ) }
    dend_84 { pt3dadd( 1.42206, -57.1517, 3.69829, 1.03 ) }
    dend_84 { pt3dadd( 1.45044, -57.2249, 3.71743, 1.03 ) }
    dend_84 { pt3dadd( 1.76762, -57.7601, 3.874, 1.47 ) }
    dend_84 { pt3dadd( 2.24561, -58.4539, 4.07823, 1.47 ) }
    dend_84 { pt3dadd( 2.3751, -58.6256, 4.12516, 1.47 ) }
    dend_84 { pt3dadd( 3.09, -59.5123, 4.3416, 1.47 ) }
    dend_84 { pt3dadd( 4.16694, -60.8249, 4.66419, 1.47 ) }
    dend_84 { pt3dadd( 4.72899, -61.5466, 4.81625, 1.47 ) }
    dend_84 { pt3dadd( 4.85924, -61.7321, 4.84708, 1.47 ) }
    dend_84 { pt3dadd( 5.42725, -62.6764, 4.96731, 1.77 ) }
    dend_84 { pt3dadd( 5.76489, -63.2588, 5.0288, 1.77 ) }
    dend_84 { pt3dadd( 5.80998, -63.3456, 5.03396, 1.77 ) }
    dend_84 { pt3dadd( 6.42484, -64.7548, 5.03396, 1.77 ) }
    dend_84 { pt3dadd( 6.91209, -65.9808, 5.03396, 1.77 ) }
    dend_84 { pt3dadd( 7.16103, -66.6323, 5.03396, 2.06 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 57/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.47909, 11.7849, -1.92119, 3.46 ) }
    dend_0 { pt3dadd( -1.47909, 11.7849, -1.92119, 3.46 ) }
    dend_0 { pt3dadd( -1.77333, 13.1665, -2.09788, 3.46 ) }
    dend_0 { pt3dadd( -2.15236, 15.1318, -2.30879, 3.46 ) }
    dend_0 { pt3dadd( -2.16369, 15.1989, -2.31493, 3.46 ) }
    dend_0 { pt3dadd( -2.44316, 16.9648, -2.46459, 3.46 ) }
    dend_0 { pt3dadd( -2.67377, 18.6246, -2.60811, 3.46 ) }
    dend_0 { pt3dadd( -2.91435, 20.9059, -2.80408, 3.46 ) }
    dend_0 { pt3dadd( -3.02732, 23.0044, -2.9785, 3.46 ) }
    dend_0 { pt3dadd( -3.0308, 24.7363, -3.1039, 3.46 ) }
    dend_0 { pt3dadd( -3.02854, 24.8051, -3.10775, 3.46 ) }
    dend_0 { pt3dadd( -2.95013, 25.8582, -3.14033, 2.8 ) }
    dend_0 { pt3dadd( -2.79156, 27.2066, -3.18826, 2.8 ) }
    dend_0 { pt3dadd( -2.55334, 28.6009, -3.24563, 2.8 ) }
    dend_0 { pt3dadd( -2.31252, 29.7964, -3.29902, 2.8 ) }
    dend_0 { pt3dadd( -2.02589, 31.1652, -3.35738, 3.02 ) }
    dend_0 { pt3dadd( -1.76026, 32.5258, -3.40299, 3.02 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 74/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.88041, -11.7495, 1.26948, 0.578448 ) }
    axon_0 { pt3dadd( 6.34505, -26.3439, 1.26948, 0.578448 ) }
    axon_0 { pt3dadd( 9.80969, -40.9383, 1.26948, 0.578448 ) }
    // Section: dend_127, id: dend_127, parent: dend_84 (entry count 77/100)
    dend_127 { pt3dclear() }
    dend_127 { pt3dadd( 7.16103, -66.6323, 5.03396, 1.25 ) }
    dend_127 { pt3dadd( 7.96986, -66.9714, 5.0802, 1.25 ) }
    dend_127 { pt3dadd( 8.92442, -67.3918, 5.12688, 1.25 ) }
    dend_127 { pt3dadd( 9.16136, -67.5087, 5.13681, 1.25 ) }
    dend_127 { pt3dadd( 10.3243, -68.1727, 5.17952, 0.96 ) }
    dend_127 { pt3dadd( 10.4145, -68.2307, 5.18236, 0.96 ) }
    dend_127 { pt3dadd( 11.56, -69.057, 5.21423, 0.96 ) }
    dend_127 { pt3dadd( 11.6147, -69.1006, 5.21423, 0.96 ) }
    dend_127 { pt3dadd( 12.1801, -69.6163, 5.21423, 0.81 ) }
    dend_127 { pt3dadd( 12.6769, -70.1476, 5.20649, 0.81 ) }
    dend_127 { pt3dadd( 13.2299, -70.8461, 5.18824, 0.81 ) }
    dend_127 { pt3dadd( 13.5793, -71.3495, 5.17053, 1.18 ) }
    dend_127 { pt3dadd( 13.9338, -72.0115, 5.14155, 0.66 ) }
    dend_127 { pt3dadd( 14.2051, -72.5983, 5.11307, 0.88 ) }
    dend_127 { pt3dadd( 14.4026, -73.183, 5.08139, 0.74 ) }
    dend_127 { pt3dadd( 14.4194, -73.2616, 5.07678, 0.74 ) }
    dend_127 { pt3dadd( 14.4455, -73.9242, 5.03959, 0.74 ) }
    dend_127 { pt3dadd( 14.3992, -74.5631, 5.00791, 0.52 ) }
    dend_127 { pt3dadd( 14.3561, -74.7867, 4.99919, 0.52 ) }
    dend_127 { pt3dadd( 14.2442, -75.2222, 4.98873, 0.74 ) }
    dend_127 { pt3dadd( 14.2162, -75.2959, 4.98873, 0.74 ) }
    dend_127 { pt3dadd( 13.989, -75.8339, 5.09103, 0.59 ) }
    dend_127 { pt3dadd( 13.9345, -75.9635, 5.13852, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_127 { pt3dadd( 13.8503, -76.2562, 5.32101, 0.59 ) }
    dend_127 { pt3dadd( 13.8424, -76.3136, 5.36308, 0.59 ) }
    dend_127 { pt3dadd( 13.8309, -76.9521, 5.88081, 0.59 ) }
    dend_127 { pt3dadd( 13.9515, -78.0802, 6.79446, 0.44 ) }
    dend_127 { pt3dadd( 14.0542, -78.4761, 7.10608, 0.44 ) }
    dend_127 { pt3dadd( 14.3369, -79.2713, 7.69773, 0.59 ) }
    dend_127 { pt3dadd( 14.5413, -79.6759, 7.97076, 0.74 ) }
    dend_127 { pt3dadd( 14.5746, -79.7284, 8.00219, 0.74 ) }
    dend_127 { pt3dadd( 14.9774, -80.1765, 8.28679, 0.74 ) }
    dend_127 { pt3dadd( 15.4426, -80.5991, 8.52824, 0.37 ) }
    dend_127 { pt3dadd( 15.5025, -80.6453, 8.55945, 0.37 ) }
    dend_127 { pt3dadd( 16.1143, -81.0353, 8.85318, 0.37 ) }
    dend_127 { pt3dadd( 16.1774, -81.0674, 8.89106, 0.37 ) }
    dend_127 { pt3dadd( 17.3499, -81.5974, 9.64282, 0.44 ) }
    dend_127 { pt3dadd( 17.5154, -81.6537, 9.77918, 0.44 ) }
    dend_127 { pt3dadd( 17.6175, -81.688, 9.88747, 0.44 ) }
    dend_127 { pt3dadd( 17.7587, -81.7437, 10.0511, 0.96 ) }
    dend_127 { pt3dadd( 18.3559, -82.0038, 10.7701, 0.96 ) }
    dend_127 { pt3dadd( 18.8268, -82.2642, 11.3807, 1.11 ) }
    dend_127 { pt3dadd( 19.838, -82.9734, 12.7203, 1.11 ) }
    dend_127 { pt3dadd( 20.6403, -83.6395, 13.821, 1.33 ) }
    dend_127 { pt3dadd( 20.9455, -83.9311, 14.2446, 1.33 ) }
    dend_127 { pt3dadd( 21.2009, -84.2132, 14.5919, 1.33 ) }
    dend_127 { pt3dadd( 21.9265, -85.2539, 15.5242, 1.18 ) }
    dend_127 { pt3dadd( 22.2683, -85.8761, 15.9448, 0.88 ) }
    dend_127 { pt3dadd( 22.43, -86.2528, 16.0925, 0.81 ) }
    dend_127 { pt3dadd( 22.5623, -86.6124, 16.1835, 0.81 ) }
    dend_127 { pt3dadd( 22.7471, -87.1918, 16.3147, 0.66 ) }
    dend_127 { pt3dadd( 23.1262, -88.5058, 16.5623, 0.66 ) }
    dend_127 { pt3dadd( 23.1555, -88.6101, 16.5759, 0.66 ) }
    dend_127 { pt3dadd( 23.4197, -89.5716, 16.7567, 0.88 ) }
    dend_127 { pt3dadd( 23.5821, -90.1718, 16.891, 1.18 ) }
    dend_127 { pt3dadd( 23.8053, -91.0596, 17.1168, 1.11 ) }
    dend_127 { pt3dadd( 23.902, -91.4927, 17.2443, 1.25 ) }
    dend_127 { pt3dadd( 23.9294, -91.6203, 17.287, 1.25 ) }
    dend_127 { pt3dadd( 24.1421, -92.658, 17.7112, 1.25 ) }
    dend_127 { pt3dadd( 24.2632, -93.3008, 18.0262, 1.25 ) }
    dend_127 { pt3dadd( 24.2751, -93.3605, 18.0594, 1.25 ) }
    dend_127 { pt3dadd( 24.4452, -94.0894, 18.4694, 1.03 ) }
    dend_127 { pt3dadd( 24.4605, -94.1482, 18.503, 1.03 ) }
    dend_127 { pt3dadd( 24.8728, -95.1156, 19.2625, 0.74 ) }
    dend_127 { pt3dadd( 24.9013, -95.1616, 19.3101, 0.74 ) }
    dend_127 { pt3dadd( 25.1438, -95.4406, 19.6637, 0.74 ) }
    dend_127 { pt3dadd( 25.6351, -95.8078, 20.31, 0.59 ) }
    dend_127 { pt3dadd( 25.6792, -95.8315, 20.3626, 0.59 ) }
    dend_127 { pt3dadd( 26.974, -96.4229, 21.7787, 0.59 ) }
    dend_127 { pt3dadd( 27.0218, -96.4408, 21.8264, 0.59 ) }
    dend_127 { pt3dadd( 27.3818, -96.566, 22.1759, 0.59 ) }
    dend_127 { pt3dadd( 28.9982, -97.0654, 23.7202, 0.59 ) }
    dend_127 { pt3dadd( 29.271, -97.1456, 23.9757, 1.03 ) }
    dend_127 { pt3dadd( 29.6035, -97.2647, 24.2775, 1.25 ) }
    dend_127 { pt3dadd( 29.8197, -97.3682, 24.4438, 1.25 ) }
    dend_127 { pt3dadd( 30.0485, -97.5197, 24.6159, 1.25 ) }
    dend_127 { pt3dadd( 30.1005, -97.5701, 24.6536, 1.25 ) }
    dend_127 { pt3dadd( 30.2105, -97.7279, 24.7185, 1.25 ) }
    dend_127 { pt3dadd( 30.8287, -98.7387, 25.1063, 0.88 ) }
    dend_127 { pt3dadd( 31.1951, -99.4053, 25.3297, 0.59 ) }
    dend_127 { pt3dadd( 31.6044, -100.196, 25.5681, 0.59 ) }
    dend_127 { pt3dadd( 31.8495, -100.699, 25.6937, 0.59 ) }
    dend_127 { pt3dadd( 32.0337, -101.115, 25.7572, 0.81 ) }
    dend_127 { pt3dadd( 32.0711, -101.208, 25.7531, 0.81 ) }
    dend_127 { pt3dadd( 32.3232, -101.91, 25.5771, 0.81 ) }
    dend_127 { pt3dadd( 32.3568, -101.997, 25.5462, 0.81 ) }
    dend_127 { pt3dadd( 32.7194, -102.787, 25.1807, 1.03 ) }
    dend_127 { pt3dadd( 33.0358, -103.291, 24.8629, 0.81 ) }
    dend_127 { pt3dadd( 33.6969, -104.122, 24.2101, 0.44 ) }
    dend_127 { pt3dadd( 33.7529, -104.174, 24.1605, 0.44 ) }
    dend_127 { pt3dadd( 34.3572, -104.542, 23.7042, 0.44 ) }
    dend_127 { pt3dadd( 34.4145, -104.563, 23.6692, 0.44 ) }
    dend_127 { pt3dadd( 35.5306, -104.755, 23.1095, 0.59 ) }
    dend_127 { pt3dadd( 35.7233, -104.761, 23.021, 0.59 ) }
    dend_127 { pt3dadd( 36.4102, -104.755, 22.743, 0.59 ) }
    dend_127 { pt3dadd( 37.0149, -104.766, 22.4769, 1.11 ) }
    dend_127 { pt3dadd( 37.4638, -104.778, 22.2652, 1.11 ) }
    dend_127 { pt3dadd( 37.5997, -104.791, 22.2022, 1.11 ) }
    dend_127 { pt3dadd( 38.9538, -105.068, 21.5992, 0.44 ) }
    dend_127 { pt3dadd( 39.9717, -105.471, 21.0901, 0.44 ) }
    dend_127 { pt3dadd( 40.8567, -105.896, 20.6086, 0.44 ) }
    dend_127 { pt3dadd( 40.9204, -105.933, 20.5724, 0.44 ) }
    dend_127 { pt3dadd( 41.469, -106.301, 20.2597, 0.74 ) }
    dend_127 { pt3dadd( 42.058, -106.752, 19.9512, 1.4 ) }
    dend_127 { pt3dadd( 42.8629, -107.676, 19.626, 1.84 ) }
    // Section: dend_85, id: dend_85, parent: dend_84 (entry count 82/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 7.16103, -66.6323, 5.03396, 1.47 ) }
    dend_85 { pt3dadd( 6.57294, -68.0883, 5.08701, 1.47 ) }
    dend_85 { pt3dadd( 6.30436, -68.7512, 5.09306, 1.62 ) }
    dend_85 { pt3dadd( 5.87484, -69.8355, 5.05641, 1.62 ) }
    dend_85 { pt3dadd( 5.62406, -70.4912, 5.02065, 1.62 ) }
    dend_85 { pt3dadd( 5.28377, -71.4589, 4.95687, 1.62 ) }
    dend_85 { pt3dadd( 4.94629, -72.4823, 4.88614, 1.62 ) }
    dend_85 { pt3dadd( 4.92596, -72.5479, 4.87845, 1.62 ) }
    dend_85 { pt3dadd( 4.61697, -73.6871, 4.75642, 1.47 ) }
    dend_85 { pt3dadd( 4.58301, -73.8352, 4.74329, 1.47 ) }
    dend_85 { pt3dadd( 4.42011, -74.8258, 4.69852, 1.69 ) }
    dend_85 { pt3dadd( 4.32315, -76.1884, 4.68984, 1.69 ) }
    dend_85 { pt3dadd( 4.32586, -76.2593, 4.69174, 1.69 ) }
    dend_85 { pt3dadd( 4.52837, -78.1712, 4.77137, 1.69 ) }
    dend_85 { pt3dadd( 4.75439, -79.4308, 4.89448, 1.69 ) }
    dend_85 { pt3dadd( 5.01167, -80.4484, 5.03092, 1.69 ) }
    dend_85 { pt3dadd( 5.46412, -81.7751, 5.2594, 1.47 ) }
    dend_85 { pt3dadd( 6.05, -83.1069, 5.52805, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_85 { pt3dadd( 6.07857, -83.1686, 5.54099, 1.18 ) }
    dend_85 { pt3dadd( 6.56752, -84.1821, 5.75868, 1.62 ) }
    dend_85 { pt3dadd( 6.91444, -85.0701, 5.92453, 1.84 ) }
    dend_85 { pt3dadd( 6.94141, -85.2068, 5.93504, 1.84 ) }
    dend_85 { pt3dadd( 6.97271, -86.5211, 5.93023, 1.84 ) }
    dend_85 { pt3dadd( 6.88618, -87.7987, 5.85721, 1.84 ) }
    dend_85 { pt3dadd( 6.7793, -88.7713, 5.76387, 1.99 ) }
    dend_85 { pt3dadd( 6.60464, -89.7639, 5.62849, 1.99 ) }
    dend_85 { pt3dadd( 6.20984, -91.3901, 5.401, 1.99 ) }
    dend_85 { pt3dadd( 5.80985, -92.8161, 5.205, 1.99 ) }
    dend_85 { pt3dadd( 5.78633, -92.8907, 5.19495, 1.99 ) }
    dend_85 { pt3dadd( 5.33765, -94.3159, 5.02215, 1.99 ) }
    dend_85 { pt3dadd( 5.09707, -95.0838, 4.93918, 1.69 ) }
    dend_85 { pt3dadd( 4.9104, -95.684, 4.89249, 1.47 ) }
    dend_85 { pt3dadd( 4.63227, -96.56, 4.89249, 1.47 ) }
    dend_85 { pt3dadd( 4.40639, -97.232, 4.89249, 1.92 ) }
    dend_85 { pt3dadd( 4.14087, -98.048, 4.89249, 2.28 ) }
    // Section: dend_81, id: dend_81, parent: dend_0 (entry count 17/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -1.76026, 32.5258, -3.40299, 0.29 ) }
    dend_81 { pt3dadd( -3.54827, 32.9022, 0.0112177, 0.29 ) }
    dend_81 { pt3dadd( -3.59469, 32.9185, 0.0749893, 0.29 ) }
    dend_81 { pt3dadd( -4.12212, 33.137, 0.6915, 0.29 ) }
    dend_81 { pt3dadd( -4.46734, 33.3069, 1.1573, 0.29 ) }
    dend_81 { pt3dadd( -4.9189, 33.5665, 1.78452, 0.29 ) }
    dend_81 { pt3dadd( -5.21592, 33.774, 2.22778, 0.29 ) }
    dend_81 { pt3dadd( -5.62333, 34.1996, 2.68885, 0.29 ) }
    dend_81 { pt3dadd( -5.64719, 34.2358, 2.72948, 0.29 ) }
    dend_81 { pt3dadd( -5.76592, 35.2663, 4.13707, 0.29 ) }
    dend_81 { pt3dadd( -5.68317, 35.5579, 4.57099, 0.29 ) }
    dend_81 { pt3dadd( -5.47526, 35.9028, 5.11639, 0.22 ) }
    dend_81 { pt3dadd( -5.36076, 36.0662, 5.35887, 0.22 ) }
    dend_81 { pt3dadd( -5.16389, 36.3374, 6.00453, 0.22 ) }
    dend_81 { pt3dadd( -4.81458, 36.9436, 7.4899, 0.22 ) }
    dend_81 { pt3dadd( -4.80195, 36.9691, 7.55359, 0.22 ) }
    dend_81 { pt3dadd( -4.60159, 37.4522, 8.738, 1.11 ) }
    dend_81 { pt3dadd( -4.52417, 37.7003, 9.33675, 1.11 ) }
    dend_81 { pt3dadd( -4.00042, 39.7674, 14.1428, 0.52 ) }
    dend_81 { pt3dadd( -3.94463, 40.1432, 14.9595, 0.52 ) }
    dend_81 { pt3dadd( -3.9429, 40.1748, 15.0223, 0.52 ) }
    dend_81 { pt3dadd( -3.93592, 40.547, 15.7484, 0.52 ) }
    dend_81 { pt3dadd( -3.94104, 40.6127, 15.8727, 0.52 ) }
    dend_81 { pt3dadd( -4.08785, 41.2973, 17.1442, 0.52 ) }
    dend_81 { pt3dadd( -4.26364, 41.6841, 17.7258, 0.52 ) }
    dend_81 { pt3dadd( -4.47066, 42.0422, 18.4116, 0.81 ) }
    dend_81 { pt3dadd( -4.4979, 42.0848, 18.4997, 0.81 ) }
    dend_81 { pt3dadd( -4.70855, 42.3664, 19.1474, 0.96 ) }
    dend_81 { pt3dadd( -5.19626, 43.0265, 20.4904, 0.96 ) }
    dend_81 { pt3dadd( -5.5818, 43.6171, 21.5072, 0.96 ) }
    dend_81 { pt3dadd( -5.60024, 43.6564, 21.5613, 0.96 ) }
    dend_81 { pt3dadd( -5.70294, 43.9488, 21.88, 0.81 ) }
    dend_81 { pt3dadd( -5.71908, 43.9978, 21.927, 0.81 ) }
    dend_81 { pt3dadd( -5.95039, 44.8055, 22.5884, 0.81 ) }
    dend_81 { pt3dadd( -6.25191, 45.7517, 23.2483, 0.29 ) }
    dend_81 { pt3dadd( -6.50018, 46.4002, 23.6921, 0.29 ) }
    dend_81 { pt3dadd( -6.52284, 46.455, 23.7324, 0.29 ) }
    dend_81 { pt3dadd( -6.8566, 47.1312, 24.3867, 0.29 ) }
    dend_81 { pt3dadd( -6.88477, 47.1824, 24.4437, 0.29 ) }
    dend_81 { pt3dadd( -7.23839, 47.7542, 25.1826, 0.96 ) }
    dend_81 { pt3dadd( -7.39821, 47.9915, 25.4745, 1.11 ) }
    dend_81 { pt3dadd( -7.51121, 48.1621, 25.6941, 1.18 ) }
    dend_81 { pt3dadd( -8.16239, 49.1993, 26.9478, 0.29 ) }
    dend_81 { pt3dadd( -8.36089, 49.558, 27.3343, 0.29 ) }
    dend_81 { pt3dadd( -8.42102, 49.6694, 27.4463, 0.29 ) }
    dend_81 { pt3dadd( -8.68159, 50.21, 27.9103, 0.29 ) }
    dend_81 { pt3dadd( -9.0306, 51.0219, 28.551, 0.81 ) }
    dend_81 { pt3dadd( -9.11399, 51.2642, 28.6983, 0.96 ) }
    dend_81 { pt3dadd( -9.20468, 51.6646, 28.8409, 0.59 ) }
    dend_81 { pt3dadd( -9.21793, 51.7285, 28.8614, 0.59 ) }
    dend_81 { pt3dadd( -9.3439, 52.2085, 29.1461, 0.44 ) }
    dend_81 { pt3dadd( -9.38222, 52.327, 29.2549, 0.29 ) }
    dend_81 { pt3dadd( -9.57551, 52.7604, 29.7345, 0.29 ) }
    dend_81 { pt3dadd( -9.59861, 52.8022, 29.7847, 0.29 ) }
    dend_81 { pt3dadd( -9.79196, 53.137, 30.1868, 0.29 ) }
    dend_81 { pt3dadd( -10.3836, 54.4218, 31.7794, 0.29 ) }
    dend_81 { pt3dadd( -10.3987, 54.4578, 31.8242, 0.29 ) }
    dend_81 { pt3dadd( -10.5205, 54.7911, 32.2181, 0.29 ) }
    dend_81 { pt3dadd( -10.8262, 55.7294, 33.2828, 2.65 ) }
    dend_81 { pt3dadd( -10.8903, 55.9601, 33.5259, 2.65 ) }
    dend_81 { pt3dadd( -11.2375, 57.5301, 35.1544, 0.44 ) }
    dend_81 { pt3dadd( -11.2947, 57.8334, 35.4331, 0.44 ) }
    dend_81 { pt3dadd( -11.3469, 58.1474, 35.7285, 0.59 ) }
    dend_81 { pt3dadd( -11.4023, 58.4513, 36.0852, 0.88 ) }
    dend_81 { pt3dadd( -11.4126, 58.4915, 36.1408, 0.88 ) }
    dend_81 { pt3dadd( -11.726, 59.2882, 37.2203, 0.88 ) }
    dend_81 { pt3dadd( -11.892, 59.6117, 37.6412, 0.74 ) }
    dend_81 { pt3dadd( -12.0544, 59.9068, 38.0398, 0.74 ) }
    dend_81 { pt3dadd( -12.7902, 61.361, 40.0106, 0.29 ) }
    dend_81 { pt3dadd( -12.9162, 61.6627, 40.391, 0.29 ) }
    dend_81 { pt3dadd( -13.22, 62.5303, 41.3858, 0.29 ) }
    dend_81 { pt3dadd( -13.2519, 62.6335, 41.4916, 0.29 ) }
    dend_81 { pt3dadd( -13.5168, 63.4946, 42.4493, 0.29 ) }
    dend_81 { pt3dadd( -13.7782, 64.274, 43.3509, 1.11 ) }
    dend_81 { pt3dadd( -13.9235, 64.7472, 43.864, 0.37 ) }
    dend_81 { pt3dadd( -14.0041, 64.9502, 44.1598, 0.29 ) }
    dend_81 { pt3dadd( -14.0778, 65.0833, 44.4161, 0.29 ) }
    dend_81 { pt3dadd( -14.5458, 65.7438, 45.7409, 0.22 ) }
    dend_81 { pt3dadd( -14.7608, 65.9671, 46.2107, 0.22 ) }
    dend_81 { pt3dadd( -14.8505, 66.053, 46.3839, 0.22 ) }
    dend_81 { pt3dadd( -15.4399, 66.6779, 47.5764, 0.59 ) }
    dend_81 { pt3dadd( -15.5467, 66.8624, 47.9716, 0.74 ) }
    dend_81 { pt3dadd( -15.6047, 67.0474, 48.3594, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_81 { pt3dadd( -15.6146, 67.1097, 48.4739, 0.81 ) }
    dend_81 { pt3dadd( -15.6898, 67.5822, 49.3157, 0.81 ) }
    dend_81 { pt3dadd( -15.6963, 67.6182, 49.3756, 0.81 ) }
    dend_81 { pt3dadd( -16.1117, 69.3594, 52.0917, 0.44 ) }
    dend_81 { pt3dadd( -16.1284, 69.4014, 52.16, 0.44 ) }
    dend_81 { pt3dadd( -16.2914, 69.7162, 52.6056, 0.44 ) }
    dend_81 { pt3dadd( -16.6483, 70.3268, 53.3723, 1.55 ) }
    dend_81 { pt3dadd( -16.8779, 70.6794, 53.7782, 2.14 ) }
    dend_81 { pt3dadd( -17.0281, 70.9064, 53.9982, 2.14 ) }
    dend_81 { pt3dadd( -17.9694, 72.3408, 55.0216, 0.37 ) }
    dend_81 { pt3dadd( -18.7113, 73.4666, 55.7935, 0.37 ) }
    dend_81 { pt3dadd( -19.1723, 74.2082, 56.2903, 0.81 ) }
    dend_81 { pt3dadd( -19.2134, 74.2768, 56.3334, 0.81 ) }
    dend_81 { pt3dadd( -19.2826, 74.3884, 56.4042, 1.25 ) }
    dend_81 { pt3dadd( -19.5054, 74.7612, 56.6292, 1.25 ) }
    dend_81 { pt3dadd( -19.8227, 75.3395, 56.9219, 0.29 ) }
    dend_81 { pt3dadd( -20.4532, 76.4916, 57.5771, 0.29 ) }
    dend_81 { pt3dadd( -20.5193, 76.613, 57.6422, 0.29 ) }
    dend_81 { pt3dadd( -21.0542, 77.6138, 58.197, 0.29 ) }
    dend_81 { pt3dadd( -21.0833, 77.6681, 58.2293, 0.29 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 20/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.76026, 32.5258, -3.40299, 3.02 ) }
    dend_1 { pt3dadd( -1.7993, 32.8158, -3.40299, 3.02 ) }
    dend_1 { pt3dadd( -2.05726, 34.7321, -3.40299, 3.32 ) }
    dend_1 { pt3dadd( -2.23714, 36.0684, -3.40299, 3.32 ) }
    dend_1 { pt3dadd( -2.43895, 37.5675, -3.40299, 3.68 ) }
    dend_1 { pt3dadd( -2.52373, 38.1973, -3.40299, 3.68 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 26/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.80969, -40.9383, 1.26948, 0.578448 ) }
    axon_1 { pt3dadd( 13.2743, -55.5327, 1.26948, 0.578448 ) }
    axon_1 { pt3dadd( 16.739, -70.1271, 1.26948, 0.578448 ) }
    // Section: dend_129, id: dend_129, parent: dend_127 (entry count 29/100)
    dend_129 { pt3dclear() }
    dend_129 { pt3dadd( 42.8629, -107.676, 19.626, 1.62 ) }
    dend_129 { pt3dadd( 43.3536, -108.82, 19.6747, 1.62 ) }
    dend_129 { pt3dadd( 43.5222, -109.197, 19.6946, 1.62 ) }
    dend_129 { pt3dadd( 43.7022, -109.549, 19.7511, 1.62 ) }
    dend_129 { pt3dadd( 44.2249, -110.519, 19.9441, 0.81 ) }
    dend_129 { pt3dadd( 44.6481, -111.255, 20.103, 0.74 ) }
    dend_129 { pt3dadd( 44.6831, -111.313, 20.1179, 0.74 ) }
    dend_129 { pt3dadd( 45.4508, -112.529, 20.5569, 0.74 ) }
    dend_129 { pt3dadd( 46.2513, -113.66, 21.0028, 0.52 ) }
    dend_129 { pt3dadd( 46.2927, -113.711, 21.0242, 0.52 ) }
    dend_129 { pt3dadd( 46.685, -114.109, 21.1931, 0.52 ) }
    dend_129 { pt3dadd( 47.164, -114.524, 21.3881, 0.88 ) }
    dend_129 { pt3dadd( 47.2267, -114.572, 21.4085, 0.88 ) }
    dend_129 { pt3dadd( 47.7694, -114.92, 21.5387, 0.88 ) }
    dend_129 { pt3dadd( 48.2552, -115.21, 21.6067, 1.33 ) }
    dend_129 { pt3dadd( 48.9711, -115.615, 21.6881, 0.74 ) }
    dend_129 { pt3dadd( 49.0347, -115.649, 21.6937, 0.74 ) }
    dend_129 { pt3dadd( 50.3143, -116.314, 21.6393, 0.74 ) }
    dend_129 { pt3dadd( 50.5772, -116.449, 21.5959, 1.25 ) }
    dend_129 { pt3dadd( 50.6557, -116.493, 21.5792, 1.25 ) }
    dend_129 { pt3dadd( 51.3317, -116.911, 21.4165, 1.25 ) }
    dend_129 { pt3dadd( 51.3793, -116.946, 21.408, 1.25 ) }
    dend_129 { pt3dadd( 52.4375, -117.792, 21.2915, 0.74 ) }
    dend_129 { pt3dadd( 53.1171, -118.409, 21.2527, 0.52 ) }
    dend_129 { pt3dadd( 54.1938, -119.516, 21.2477, 0.52 ) }
    dend_129 { pt3dadd( 54.5037, -119.874, 21.2651, 1.03 ) }
    dend_129 { pt3dadd( 55.4049, -121.025, 21.3886, 0.96 ) }
    dend_129 { pt3dadd( 55.849, -121.621, 21.503, 1.33 ) }
    dend_129 { pt3dadd( 56.2114, -122.136, 21.6554, 1.62 ) }
    dend_129 { pt3dadd( 56.5446, -122.627, 21.8132, 1.62 ) }
    dend_129 { pt3dadd( 56.8636, -123.076, 21.9317, 1.62 ) }
    dend_129 { pt3dadd( 56.9528, -123.196, 21.959, 1.62 ) }
    dend_129 { pt3dadd( 57.5354, -123.832, 22.0457, 0.96 ) }
    dend_129 { pt3dadd( 58.2661, -124.56, 22.1306, 0.88 ) }
    dend_129 { pt3dadd( 58.3385, -124.627, 22.1369, 0.88 ) }
    dend_129 { pt3dadd( 59.3547, -125.523, 22.2005, 0.88 ) }
    dend_129 { pt3dadd( 59.4292, -125.588, 22.2035, 0.88 ) }
    dend_129 { pt3dadd( 61.8656, -127.737, 22.2424, 0.88 ) }
    dend_129 { pt3dadd( 61.9179, -127.783, 22.2421, 0.88 ) }
    dend_129 { pt3dadd( 62.4992, -128.292, 22.2374, 1.18 ) }
    dend_129 { pt3dadd( 62.673, -128.443, 22.2359, 1.18 ) }
    dend_129 { pt3dadd( 63.5228, -129.184, 22.2263, 1.18 ) }
    dend_129 { pt3dadd( 64.5095, -130.057, 22.2128, 1.18 ) }
    dend_129 { pt3dadd( 65.2091, -130.75, 22.1954, 1.03 ) }
    // Section: dend_128, id: dend_128, parent: dend_127 (entry count 73/100)
    dend_128 { pt3dclear() }
    dend_128 { pt3dadd( 42.8629, -107.676, 19.626, 0.44 ) }
    dend_128 { pt3dadd( 41.6469, -108.741, 18.5156, 0.44 ) }
    dend_128 { pt3dadd( 41.6045, -108.78, 18.4768, 0.44 ) }
    dend_128 { pt3dadd( 40.8882, -109.441, 17.8896, 0.37 ) }
    dend_128 { pt3dadd( 40.4969, -109.801, 17.5848, 0.74 ) }
    dend_128 { pt3dadd( 40.0262, -110.228, 17.2403, 0.74 ) }
    dend_128 { pt3dadd( 39.0822, -111.062, 16.5989, 0.29 ) }
    dend_128 { pt3dadd( 39.028, -111.115, 16.5689, 0.29 ) }
    dend_128 { pt3dadd( 38.3966, -111.699, 16.2403, 0.29 ) }
    dend_128 { pt3dadd( 38.283, -111.796, 16.1837, 0.74 ) }
    dend_128 { pt3dadd( 38.0012, -112.007, 16.0765, 0.96 ) }
    dend_128 { pt3dadd( 37.6659, -112.23, 15.9619, 1.11 ) }
    dend_128 { pt3dadd( 36.9821, -112.65, 15.7797, 0.37 ) }
    dend_128 { pt3dadd( 36.5185, -112.916, 15.6312, 0.37 ) }
    dend_128 { pt3dadd( 36.4578, -112.949, 15.6095, 0.37 ) }
    dend_128 { pt3dadd( 35.7075, -113.356, 15.3361, 0.22 ) }
    dend_128 { pt3dadd( 35.2377, -113.606, 15.1599, 0.52 ) }
    dend_128 { pt3dadd( 34.9791, -113.744, 15.0708, 0.52 ) }
    dend_128 { pt3dadd( 33.8614, -114.323, 14.731, 0.15 ) }
    dend_128 { pt3dadd( 33.6429, -114.442, 14.6541, 0.37 ) }
    dend_128 { pt3dadd( 33.5178, -114.511, 14.6081, 0.37 ) }
    dend_128 { pt3dadd( 33.4416, -114.555, 14.5795, 0.37 ) }
    dend_128 { pt3dadd( 32.5047, -115.091, 14.2599, 0.22 ) }
    dend_128 { pt3dadd( 32.4384, -115.13, 14.2373, 0.22 ) }
    dend_128 { pt3dadd( 31.8087, -115.538, 14.0481, 0.37 ) }
    dend_128 { pt3dadd( 31.4262, -115.772, 13.9187, 0.37 ) }
    // Section: dend_114, id: dend_114, parent: dend_85 (entry count 99/100)
    dend_114 { pt3dclear() }
    dend_114 { pt3dadd( 4.14087, -98.048, 4.89249, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_114 { pt3dadd( 3.35469, -99.3774, 5.46798, 0.74 ) }
    dend_114 { pt3dadd( 2.80201, -100.355, 5.88301, 0.66 ) }
    dend_114 { pt3dadd( 2.77146, -100.413, 5.90595, 0.66 ) }
    dend_114 { pt3dadd( 2.23244, -101.468, 6.30683, 0.66 ) }
    dend_114 { pt3dadd( 1.72791, -102.388, 6.62952, 0.66 ) }
    dend_114 { pt3dadd( 1.44938, -102.871, 6.79011, 0.52 ) }
    dend_114 { pt3dadd( 1.4056, -102.935, 6.80512, 0.52 ) }
    dend_114 { pt3dadd( 1.00299, -103.399, 6.98044, 0.52 ) }
    dend_114 { pt3dadd( 0.95615, -103.447, 7.00179, 0.52 ) }
    dend_114 { pt3dadd( 0.163945, -104.169, 7.36415, 0.52 ) }
    dend_114 { pt3dadd( 0.0819935, -104.243, 7.39939, 0.52 ) }
    dend_114 { pt3dadd( -0.840338, -105.102, 7.82854, 0.52 ) }
    dend_114 { pt3dadd( -1.89878, -106.253, 8.36308, 0.52 ) }
    dend_114 { pt3dadd( -2.26981, -106.75, 8.57442, 1.11 ) }
    dend_114 { pt3dadd( -2.50296, -107.161, 8.72907, 1.03 ) }
    dend_114 { pt3dadd( -2.54732, -107.298, 8.76956, 1.03 ) }
    dend_114 { pt3dadd( -2.62859, -107.882, 8.88114, 1.03 ) }
    dend_114 { pt3dadd( -2.61759, -108.755, 8.96996, 1.03 ) }
    dend_114 { pt3dadd( -2.56667, -109.349, 8.96996, 0.81 ) }
    dend_114 { pt3dadd( -2.55889, -109.427, 8.96996, 0.81 ) }
    dend_114 { pt3dadd( -2.50001, -110.383, 8.96996, 0.81 ) }
    dend_114 { pt3dadd( -2.47918, -111.379, 8.95212, 0.74 ) }
    dend_114 { pt3dadd( -2.48473, -111.448, 8.94985, 0.74 ) }
    dend_114 { pt3dadd( -2.66632, -112.485, 8.90399, 0.59 ) }
    dend_114 { pt3dadd( -2.92027, -113.451, 8.85452, 0.44 ) }
    dend_114 { pt3dadd( -3.23071, -114.4, 8.80618, 0.37 ) }
    dend_114 { pt3dadd( -3.39059, -114.767, 8.78763, 0.74 ) }
    dend_114 { pt3dadd( -4.07558, -115.988, 8.73157, 0.74 ) }
    dend_114 { pt3dadd( -4.54907, -116.728, 8.7014, 0.74 ) }
    dend_114 { pt3dadd( -4.83522, -117.105, 8.6883, 1.03 ) }
    dend_114 { pt3dadd( -5.33599, -117.704, 8.67397, 1.03 ) }
    dend_114 { pt3dadd( -6.03209, -118.51, 8.6684, 1.03 ) }
    dend_114 { pt3dadd( -6.88014, -119.476, 8.68297, 1.18 ) }
    dend_114 { pt3dadd( -6.92563, -119.528, 8.68145, 1.18 ) }
    dend_114 { pt3dadd( -7.29303, -119.967, 8.65152, 1.55 ) }
    dend_114 { pt3dadd( -7.54031, -120.31, 8.60225, 1.55 ) }
    dend_114 { pt3dadd( -7.89614, -120.869, 8.48951, 0.96 ) }
    dend_114 { pt3dadd( -8.26419, -121.598, 8.31687, 0.81 ) }
    dend_114 { pt3dadd( -8.58407, -122.426, 8.10231, 0.59 ) }
    dend_114 { pt3dadd( -8.80399, -123.103, 7.92204, 0.59 ) }
    dend_114 { pt3dadd( -9.16022, -124.489, 7.54071, 0.59 ) }
    dend_114 { pt3dadd( -9.17549, -124.566, 7.52324, 0.59 ) }
    dend_114 { pt3dadd( -9.23304, -125.065, 7.44915, 0.88 ) }
    dend_114 { pt3dadd( -9.25224, -125.537, 7.43239, 1.11 ) }
    dend_114 { pt3dadd( -9.25374, -125.674, 7.44559, 1.11 ) }
    dend_114 { pt3dadd( -9.25503, -125.947, 7.49572, 1.11 ) }
    dend_114 { pt3dadd( -9.33672, -126.929, 7.77957, 0.44 ) }
    dend_114 { pt3dadd( -9.57584, -127.771, 8.03078, 0.44 ) }
    dend_114 { pt3dadd( -9.8394, -128.254, 8.17538, 0.88 ) }
    dend_114 { pt3dadd( -10.1547, -128.64, 8.27768, 0.96 ) }
    dend_114 { pt3dadd( -10.4854, -128.956, 8.34276, 0.96 ) }
    dend_114 { pt3dadd( -11.1403, -129.458, 8.41339, 0.96 ) }
    dend_114 { pt3dadd( -12.0361, -130.04, 8.43931, 0.96 ) }
    dend_114 { pt3dadd( -12.4377, -130.26, 8.44826, 0.96 ) }
    dend_114 { pt3dadd( -13.0269, -130.562, 8.45606, 0.59 ) }
    dend_114 { pt3dadd( -13.525, -130.827, 8.46357, 0.44 ) }
    dend_114 { pt3dadd( -13.8744, -131.058, 8.47011, 0.96 ) }
    dend_114 { pt3dadd( -14.2968, -131.417, 8.48183, 1.25 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 58/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 4.14087, -98.048, 4.89249, 1.99 ) }
    dend_86 { pt3dadd( 4.21336, -98.5549, 4.89249, 1.99 ) }
    dend_86 { pt3dadd( 4.29188, -99.6685, 4.89249, 1.99 ) }
    dend_86 { pt3dadd( 4.24837, -101.07, 4.89249, 1.99 ) }
    dend_86 { pt3dadd( 4.23741, -101.14, 4.89249, 1.99 ) }
    dend_86 { pt3dadd( 4.13057, -101.789, 4.86904, 1.84 ) }
    dend_86 { pt3dadd( 3.96738, -102.779, 4.81787, 1.62 ) }
    dend_86 { pt3dadd( 3.84976, -103.556, 4.76755, 1.25 ) }
    dend_86 { pt3dadd( 3.77885, -104.773, 4.67861, 1.03 ) }
    dend_86 { pt3dadd( 3.88682, -106.159, 4.57689, 1.03 ) }
    dend_86 { pt3dadd( 4.23067, -107.834, 4.46272, 1.03 ) }
    dend_86 { pt3dadd( 4.25209, -107.902, 4.45846, 1.03 ) }
    dend_86 { pt3dadd( 4.83988, -109.413, 4.37549, 1.18 ) }
    dend_86 { pt3dadd( 5.65033, -111.283, 4.20785, 1.33 ) }
    dend_86 { pt3dadd( 6.29442, -112.765, 4.04406, 1.62 ) }
    dend_86 { pt3dadd( 6.74747, -113.892, 3.88218, 1.25 ) }
    dend_86 { pt3dadd( 7.05653, -114.817, 3.72913, 1.33 ) }
    dend_86 { pt3dadd( 7.40687, -116.195, 3.4614, 1.33 ) }
    dend_86 { pt3dadd( 7.64698, -117.805, 3.08643, 1.33 ) }
    dend_86 { pt3dadd( 7.70755, -119.421, 2.65896, 1.33 ) }
    dend_86 { pt3dadd( 7.65125, -120.666, 2.30242, 1.33 ) }
    dend_86 { pt3dadd( 7.64431, -120.734, 2.28283, 1.33 ) }
    dend_86 { pt3dadd( 7.54552, -121.5, 2.06965, 1.62 ) }
    dend_86 { pt3dadd( 7.51849, -121.778, 2.00759, 1.62 ) }
    dend_86 { pt3dadd( 7.48076, -122.692, 1.91124, 1.62 ) }
    dend_86 { pt3dadd( 7.48851, -122.763, 1.90709, 1.62 ) }
    dend_86 { pt3dadd( 7.69756, -123.536, 1.90709, 1.62 ) }
    dend_86 { pt3dadd( 7.73756, -123.634, 1.91214, 1.62 ) }
    dend_86 { pt3dadd( 8.24974, -124.717, 2.00088, 1.62 ) }
    dend_86 { pt3dadd( 8.28031, -124.779, 2.00693, 1.62 ) }
    dend_86 { pt3dadd( 8.79613, -125.817, 2.1205, 1.62 ) }
    dend_86 { pt3dadd( 9.31792, -126.972, 2.25038, 1.62 ) }
    dend_86 { pt3dadd( 9.80888, -128.286, 2.39699, 1.62 ) }
    dend_86 { pt3dadd( 10.063, -129.248, 2.4966, 2.5 ) }
    dend_86 { pt3dadd( 10.1135, -129.755, 2.54111, 3.09 ) }
    dend_86 { pt3dadd( 10.1032, -130.152, 2.56592, 3.09 ) }
    dend_86 { pt3dadd( 10.0369, -130.945, 2.59785, 2.36 ) }
    dend_86 { pt3dadd( 9.92365, -132.077, 2.63749, 1.84 ) }
    dend_86 { pt3dadd( 9.83916, -133.011, 2.6607, 1.55 ) }
    dend_86 { pt3dadd( 9.73283, -134.696, 2.7167, 1.55 ) }
    dend_86 { pt3dadd( 9.6363, -136.642, 2.78642, 1.55 ) }
    dend_86 { pt3dadd( 9.59694, -138.269, 2.85001, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_86 { pt3dadd( 9.60824, -139.389, 2.89962, 1.55 ) }
    dend_86 { pt3dadd( 9.67667, -140.614, 2.96324, 1.92 ) }
    dend_86 { pt3dadd( 9.68319, -140.672, 2.96685, 1.92 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 3/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -21.0833, 77.6681, 58.2293, 0.22 ) }
    dend_83 { pt3dadd( -22.8161, 77.765, 61.1099, 0.22 ) }
    dend_83 { pt3dadd( -23.2246, 77.7783, 61.6804, 1.62 ) }
    dend_83 { pt3dadd( -23.2658, 77.7785, 61.7378, 1.62 ) }
    dend_83 { pt3dadd( -23.7583, 77.8123, 62.3806, 1.92 ) }
    dend_83 { pt3dadd( -25.2626, 77.9694, 64.2023, 0.29 ) }
    dend_83 { pt3dadd( -25.743, 78.0264, 64.7487, 0.29 ) }
    dend_83 { pt3dadd( -26.2338, 78.1033, 65.1843, 0.29 ) }
    dend_83 { pt3dadd( -27.2796, 78.3282, 66.0637, 0.29 ) }
    dend_83 { pt3dadd( -28.131, 78.523, 66.7251, 0.29 ) }
    dend_83 { pt3dadd( -28.5385, 78.6243, 67.0045, 0.29 ) }
    dend_83 { pt3dadd( -28.8362, 78.7096, 67.1365, 1.03 ) }
    dend_83 { pt3dadd( -29.1051, 78.7985, 67.256, 1.4 ) }
    dend_83 { pt3dadd( -29.6943, 79.0298, 67.4615, 1.4 ) }
    dend_83 { pt3dadd( -29.769, 79.0572, 67.4654, 1.4 ) }
    dend_83 { pt3dadd( -30.009, 79.0956, 67.4749, 1.4 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 19/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -21.0833, 77.6681, 58.2293, 0.22 ) }
    dend_82 { pt3dadd( -21.4459, 78.6318, 58.593, 0.22 ) }
    dend_82 { pt3dadd( -21.7233, 79.3692, 58.8714, 0.22 ) }
    dend_82 { pt3dadd( -21.8606, 79.7339, 59.009, 0.66 ) }
    dend_82 { pt3dadd( -21.8874, 79.8053, 59.0359, 0.66 ) }
    dend_82 { pt3dadd( -22.0308, 80.1864, 59.1798, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_1 (entry count 25/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -2.52373, 38.1973, -3.40299, 1.25 ) }
    dend_58 { pt3dadd( -3.23214, 38.5558, -3.78434, 1.25 ) }
    dend_58 { pt3dadd( -4.30957, 39.1346, -4.88157, 1.25 ) }
    dend_58 { pt3dadd( -4.35752, 39.1653, -4.94083, 1.25 ) }
    dend_58 { pt3dadd( -4.95025, 39.6923, -5.95641, 0.96 ) }
    dend_58 { pt3dadd( -5.21764, 39.972, -6.48814, 0.96 ) }
    dend_58 { pt3dadd( -5.68437, 40.589, -7.65152, 1.25 ) }
    dend_58 { pt3dadd( -6.19569, 41.5085, -9.50821, 1.25 ) }
    dend_58 { pt3dadd( -6.28675, 41.7822, -10.0325, 1.4 ) }
    dend_58 { pt3dadd( -6.51584, 42.8576, -11.8872, 1.4 ) }
    dend_58 { pt3dadd( -6.51929, 42.9028, -11.9553, 1.4 ) }
    dend_58 { pt3dadd( -6.59775, 44.1144, -13.5108, 1.4 ) }
    dend_58 { pt3dadd( -6.60159, 44.1625, -13.5613, 1.4 ) }
    dend_58 { pt3dadd( -6.72134, 44.9552, -14.2972, 1.4 ) }
    dend_58 { pt3dadd( -6.74663, 45.0597, -14.3926, 1.4 ) }
    dend_58 { pt3dadd( -7.2387, 46.3628, -15.4147, 1.4 ) }
    dend_58 { pt3dadd( -7.75243, 47.4193, -16.1665, 1.4 ) }
    dend_58 { pt3dadd( -7.81731, 47.5318, -16.2399, 1.4 ) }
    dend_58 { pt3dadd( -8.6086, 48.9722, -17.0821, 1.4 ) }
    dend_58 { pt3dadd( -8.63722, 49.0283, -17.1099, 1.4 ) }
    dend_58 { pt3dadd( -9.16463, 50.1627, -17.59, 1.4 ) }
    dend_58 { pt3dadd( -9.45849, 50.888, -17.8295, 1.4 ) }
    dend_58 { pt3dadd( -10.0409, 52.7133, -18.3268, 1.18 ) }
    dend_58 { pt3dadd( -10.5464, 54.5828, -18.7333, 1.18 ) }
    dend_58 { pt3dadd( -10.8605, 56.1102, -18.9529, 1.18 ) }
    dend_58 { pt3dadd( -10.8725, 56.1777, -18.9611, 1.18 ) }
    dend_58 { pt3dadd( -11.023, 57.2557, -19.0653, 1.69 ) }
    dend_58 { pt3dadd( -11.2515, 58.738, -19.1574, 1.69 ) }
    dend_58 { pt3dadd( -11.2784, 58.8822, -19.1584, 1.69 ) }
    dend_58 { pt3dadd( -11.7133, 60.4367, -19.217, 0.81 ) }
    dend_58 { pt3dadd( -12.073, 61.378, -19.2818, 0.81 ) }
    dend_58 { pt3dadd( -12.1813, 61.6118, -19.303, 0.81 ) }
    dend_58 { pt3dadd( -12.7067, 62.5728, -19.4397, 0.81 ) }
    dend_58 { pt3dadd( -12.7423, 62.6305, -19.4507, 0.81 ) }
    dend_58 { pt3dadd( -13.4738, 63.8369, -19.7007, 0.81 ) }
    dend_58 { pt3dadd( -13.9898, 64.6351, -19.8964, 0.81 ) }
    dend_58 { pt3dadd( -14.4014, 65.3111, -20.0743, 1.25 ) }
    dend_58 { pt3dadd( -14.7648, 65.9555, -20.2456, 1.69 ) }
    dend_58 { pt3dadd( -14.7984, 66.0266, -20.2642, 1.69 ) }
    dend_58 { pt3dadd( -15.3585, 67.3184, -20.5697, 1.69 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 65/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.52373, 38.1973, -3.40299, 2.58 ) }
    dend_2 { pt3dadd( -1.64174, 39.7031, -3.85518, 2.58 ) }
    dend_2 { pt3dadd( -1.22438, 40.5383, -4.08432, 2.28 ) }
    dend_2 { pt3dadd( -0.760827, 41.6028, -4.34767, 2.06 ) }
    dend_2 { pt3dadd( -0.370606, 42.6747, -4.57889, 1.84 ) }
    dend_2 { pt3dadd( -0.0232486, 43.6823, -4.81552, 1.84 ) }
    dend_2 { pt3dadd( 0.247032, 44.4397, -5.10297, 1.69 ) }
    dend_2 { pt3dadd( 0.565528, 45.3881, -5.59419, 1.69 ) }
    dend_2 { pt3dadd( 0.782858, 46.0435, -5.97301, 1.69 ) }
    dend_2 { pt3dadd( 1.13218, 47.0162, -6.55155, 1.69 ) }
    dend_2 { pt3dadd( 1.51011, 47.9751, -7.14759, 1.47 ) }
    dend_2 { pt3dadd( 2.52306, 50.342, -8.70237, 1.47 ) }
    dend_2 { pt3dadd( 2.87845, 51.12, -9.26337, 1.47 ) }
    dend_2 { pt3dadd( 3.313, 52.0372, -9.93406, 1.47 ) }
    dend_2 { pt3dadd( 3.71985, 52.8976, -10.5414, 1.92 ) }
    dend_2 { pt3dadd( 3.96319, 53.4149, -10.8726, 1.92 ) }
    dend_2 { pt3dadd( 4.45016, 54.5392, -11.4757, 1.77 ) }
    dend_2 { pt3dadd( 4.94872, 55.6496, -11.9381, 1.25 ) }
    dend_2 { pt3dadd( 5.38348, 56.4763, -12.4807, 1.25 ) }
    dend_2 { pt3dadd( 5.57358, 56.7714, -12.7635, 1.11 ) }
    dend_2 { pt3dadd( 5.89207, 57.1692, -13.2301, 1.11 ) }
    dend_2 { pt3dadd( 6.35376, 57.6148, -13.8346, 1.4 ) }
    dend_2 { pt3dadd( 7.18114, 58.2562, -14.8129, 1.4 ) }
    dend_2 { pt3dadd( 9.16032, 59.5226, -16.9581, 0.96 ) }
    dend_2 { pt3dadd( 10.0371, 60.0134, -17.8817, 0.96 ) }
    dend_2 { pt3dadd( 10.6927, 60.3605, -18.5663, 0.96 ) }
    dend_2 { pt3dadd( 11.4897, 60.7776, -19.4174, 0.96 ) }
    dend_2 { pt3dadd( 11.6331, 60.8533, -19.568, 0.96 ) }
    dend_2 { pt3dadd( 12.1641, 61.1666, -20.1374, 1.62 ) }
    dend_2 { pt3dadd( 12.2116, 61.2015, -20.1794, 1.62 ) }
    dend_2 { pt3dadd( 13.1508, 62.0233, -20.9967, 1.62 ) }
    dend_2 { pt3dadd( 14.0394, 62.8944, -21.7729, 1.84 ) }
    dend_2 { pt3dadd( 14.0809, 62.9386, -21.808, 1.84 ) }
    dend_2 { pt3dadd( 15.1729, 64.1378, -22.6526, 1.84 ) }
    dend_2 { pt3dadd( 16.0055, 65.0731, -23.2361, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_2 { pt3dadd( 16.7734, 65.8995, -23.6318, 2.28 ) }
    dend_2 { pt3dadd( 17.2263, 66.3652, -23.7748, 2.65 ) }
    dend_2 { pt3dadd( 17.2832, 66.4223, -23.786, 2.65 ) }
    dend_2 { pt3dadd( 17.826, 66.9451, -23.8643, 2.65 ) }
    dend_2 { pt3dadd( 17.9066, 67.0154, -23.8648, 2.65 ) }
    dend_2 { pt3dadd( 19.2217, 68.0012, -23.8772, 2.65 ) }
    dend_2 { pt3dadd( 19.3035, 68.0582, -23.8783, 2.65 ) }
    // Section: dend_131, id: dend_131, parent: dend_129 (entry count 7/100)
    dend_131 { pt3dclear() }
    dend_131 { pt3dadd( 65.2091, -130.75, 22.1954, 0.96 ) }
    dend_131 { pt3dadd( 64.8128, -132.173, 21.4169, 0.96 ) }
    dend_131 { pt3dadd( 64.6482, -132.833, 21.1118, 1.25 ) }
    dend_131 { pt3dadd( 64.5444, -133.357, 20.8996, 1.25 ) }
    dend_131 { pt3dadd( 64.4632, -134.413, 20.4873, 1.4 ) }
    dend_131 { pt3dadd( 64.45, -135.503, 20.0707, 1.11 ) }
    dend_131 { pt3dadd( 64.5276, -136.514, 19.6997, 0.81 ) }
    dend_131 { pt3dadd( 64.6159, -136.95, 19.5859, 0.81 ) }
    dend_131 { pt3dadd( 64.8341, -137.497, 19.4613, 0.81 ) }
    dend_131 { pt3dadd( 65.5814, -138.69, 19.2029, 0.81 ) }
    dend_131 { pt3dadd( 65.6307, -138.742, 19.1935, 0.81 ) }
    dend_131 { pt3dadd( 66.3843, -139.317, 19.0675, 1.25 ) }
    dend_131 { pt3dadd( 66.5027, -139.391, 19.0501, 1.25 ) }
    dend_131 { pt3dadd( 67.0968, -139.736, 18.9729, 1.55 ) }
    dend_131 { pt3dadd( 67.1909, -139.787, 18.9632, 1.55 ) }
    dend_131 { pt3dadd( 67.9087, -140.185, 18.9244, 1.55 ) }
    dend_131 { pt3dadd( 68.0084, -140.238, 18.9191, 1.55 ) }
    dend_131 { pt3dadd( 68.5295, -140.538, 18.8927, 1.55 ) }
    dend_131 { pt3dadd( 68.5897, -140.572, 18.8904, 1.55 ) }
    dend_131 { pt3dadd( 68.9686, -140.793, 18.8796, 1.55 ) }
    dend_131 { pt3dadd( 69.1158, -140.878, 18.8765, 1.55 ) }
    dend_131 { pt3dadd( 69.7732, -141.259, 18.8674, 1.03 ) }
    dend_131 { pt3dadd( 70.5011, -141.753, 18.8588, 0.74 ) }
    dend_131 { pt3dadd( 71.1593, -142.33, 18.8368, 0.66 ) }
    dend_131 { pt3dadd( 71.2228, -142.406, 18.8333, 0.66 ) }
    dend_131 { pt3dadd( 71.8108, -143.317, 18.7875, 0.59 ) }
    dend_131 { pt3dadd( 71.8427, -143.378, 18.784, 0.59 ) }
    dend_131 { pt3dadd( 72.1805, -144.309, 18.7265, 0.59 ) }
    dend_131 { pt3dadd( 72.418, -145.256, 18.664, 1.25 ) }
    dend_131 { pt3dadd( 72.5824, -146.166, 18.558, 1.77 ) }
    dend_131 { pt3dadd( 72.6438, -146.516, 18.4862, 1.77 ) }
    dend_131 { pt3dadd( 72.6584, -146.589, 18.4605, 1.77 ) }
    dend_131 { pt3dadd( 72.7983, -147.018, 18.2437, 1.77 ) }
    dend_131 { pt3dadd( 72.8226, -147.075, 18.2076, 1.77 ) }
    dend_131 { pt3dadd( 73.375, -148.061, 17.5151, 1.33 ) }
    dend_131 { pt3dadd( 73.8837, -148.871, 16.9124, 0.59 ) }
    dend_131 { pt3dadd( 74.6321, -149.998, 16.0727, 0.59 ) }
    dend_131 { pt3dadd( 75.3743, -151.072, 15.3014, 0.59 ) }
    dend_131 { pt3dadd( 75.4096, -151.121, 15.2673, 0.59 ) }
    dend_131 { pt3dadd( 76.6454, -152.74, 14.3023, 0.59 ) }
    dend_131 { pt3dadd( 76.693, -152.798, 14.2768, 0.59 ) }
    dend_131 { pt3dadd( 76.9844, -153.141, 14.1813, 1.33 ) }
    dend_131 { pt3dadd( 77.455, -153.687, 14.1258, 1.33 ) }
    dend_131 { pt3dadd( 77.5, -153.741, 14.1272, 1.33 ) }
    dend_131 { pt3dadd( 78.8802, -155.401, 14.2552, 1.33 ) }
    dend_131 { pt3dadd( 79.3362, -155.979, 14.3176, 1.33 ) }
    dend_131 { pt3dadd( 79.378, -156.034, 14.3162, 1.33 ) }
    dend_131 { pt3dadd( 79.7519, -156.549, 14.2466, 0.44 ) }
    dend_131 { pt3dadd( 80.1515, -157.104, 14.0539, 0.44 ) }
    dend_131 { pt3dadd( 80.6779, -157.795, 13.7117, 0.44 ) }
    dend_131 { pt3dadd( 81.0544, -158.259, 13.3835, 1.4 ) }
    dend_131 { pt3dadd( 81.9622, -159.329, 12.5294, 1.62 ) }
    dend_131 { pt3dadd( 82.232, -159.631, 12.285, 1.62 ) }
    dend_131 { pt3dadd( 83.2389, -160.718, 11.3773, 0.81 ) }
    dend_131 { pt3dadd( 84.2079, -161.738, 10.5617, 0.81 ) }
    dend_131 { pt3dadd( 85.0296, -162.564, 9.93546, 1.03 ) }
    dend_131 { pt3dadd( 85.143, -162.676, 9.86355, 1.03 ) }
    dend_131 { pt3dadd( 85.9395, -163.494, 9.45782, 1.03 ) }
    dend_131 { pt3dadd( 85.985, -163.547, 9.43897, 1.03 ) }
    dend_131 { pt3dadd( 86.7014, -164.535, 9.3024, 1.03 ) }
    dend_131 { pt3dadd( 86.7358, -164.594, 9.30056, 1.03 ) }
    dend_131 { pt3dadd( 87.0329, -165.227, 9.34762, 1.4 ) }
    dend_131 { pt3dadd( 87.2839, -165.773, 9.3965, 1.47 ) }
    dend_131 { pt3dadd( 87.6391, -166.619, 9.40511, 0.88 ) }
    dend_131 { pt3dadd( 87.8925, -167.219, 9.37317, 0.66 ) }
    dend_131 { pt3dadd( 88.0328, -167.543, 9.33359, 0.66 ) }
    dend_131 { pt3dadd( 88.4016, -168.32, 8.94629, 0.44 ) }
    dend_131 { pt3dadd( 88.7042, -168.835, 8.50627, 0.37 ) }
    dend_131 { pt3dadd( 89.3174, -169.688, 7.51503, 0.44 ) }
    dend_131 { pt3dadd( 89.3927, -169.773, 7.39314, 1.11 ) }
    dend_131 { pt3dadd( 89.8241, -170.169, 6.74757, 1.33 ) }
    dend_131 { pt3dadd( 91.6082, -171.539, 4.32447, 0.37 ) }
    dend_131 { pt3dadd( 92.022, -171.81, 3.83735, 0.37 ) }
    dend_131 { pt3dadd( 92.4564, -172.078, 3.37485, 0.96 ) }
    dend_131 { pt3dadd( 93.2581, -172.524, 2.59704, 1.33 ) }
    dend_131 { pt3dadd( 94.3504, -173.102, 1.59564, 1.69 ) }
    dend_131 { pt3dadd( 95.4467, -173.641, 0.706611, 1.92 ) }
    dend_131 { pt3dadd( 96.5109, -174.156, 0.107733, 1.92 ) }
    dend_131 { pt3dadd( 96.574, -174.188, 0.0704686, 1.92 ) }
    // Section: dend_130, id: dend_130, parent: dend_129 (entry count 86/100)
    dend_130 { pt3dclear() }
    dend_130 { pt3dadd( 65.2091, -130.75, 22.1954, 0.29 ) }
    dend_130 { pt3dadd( 65.7441, -129.751, 21.8644, 0.29 ) }
    dend_130 { pt3dadd( 66.1173, -129.055, 21.6336, 0.29 ) }
    dend_130 { pt3dadd( 66.1444, -129.005, 21.6169, 0.29 ) }
    dend_130 { pt3dadd( 66.5289, -128.287, 21.3791, 0.29 ) }
    dend_130 { pt3dadd( 66.5603, -128.228, 21.3596, 0.29 ) }
    dend_130 { pt3dadd( 66.932, -127.535, 21.1297, 0.29 ) }
    // Section: dend_116, id: dend_116, parent: dend_114 (entry count 93/100)
    dend_116 { pt3dclear() }
    dend_116 { pt3dadd( -14.2968, -131.417, 8.48183, 0.59 ) }
    dend_116 { pt3dadd( -15.0255, -131.911, 8.36633, 0.59 ) }
    dend_116 { pt3dadd( -15.4779, -132.218, 8.29463, 0.44 ) }
    dend_116 { pt3dadd( -16.3008, -132.776, 8.1642, 0.44 ) }
    dend_116 { pt3dadd( -16.3664, -132.82, 8.1538, 0.44 ) }
    dend_116 { pt3dadd( -17.5111, -133.597, 7.97237, 0.44 ) }
    // Section: dend_115, id: dend_115, parent: dend_114 (entry count 99/100)
    dend_115 { pt3dclear() }
    dend_115 { pt3dadd( -14.2968, -131.417, 8.48183, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_115 { pt3dadd( -12.6884, -132.007, 8.28053, 0.29 ) }
    dend_115 { pt3dadd( -11.3211, -132.586, 8.12846, 0.22 ) }
    dend_115 { pt3dadd( -11.1731, -132.653, 8.11333, 0.22 ) }
    dend_115 { pt3dadd( -10.3788, -132.954, 8.37089, 0.22 ) }
    dend_115 { pt3dadd( -10.2601, -132.994, 8.43324, 0.22 ) }
    dend_115 { pt3dadd( -9.8105, -133.13, 8.53628, 0.37 ) }
    dend_115 { pt3dadd( -9.38693, -133.249, 8.57513, 0.37 ) }
    dend_115 { pt3dadd( -9.31214, -133.269, 8.54716, 0.37 ) }
    dend_115 { pt3dadd( -6.65775, -133.843, 6.83242, 0.37 ) }
    dend_115 { pt3dadd( -6.59641, -133.854, 6.78146, 0.37 ) }
    dend_115 { pt3dadd( -3.73962, -134.43, 3.87382, 0.15 ) }
    dend_115 { pt3dadd( -3.35336, -134.511, 3.39335, 0.15 ) }
    dend_115 { pt3dadd( -2.87718, -134.625, 2.67009, 0.44 ) }
    dend_115 { pt3dadd( -2.84422, -134.634, 2.60821, 0.44 ) }
    dend_115 { pt3dadd( -2.71816, -134.675, 2.28682, 0.44 ) }
    dend_115 { pt3dadd( -2.69293, -134.684, 2.22219, 0.44 ) }
    dend_115 { pt3dadd( -2.61649, -134.754, 2.11096, 0.44 ) }
    dend_115 { pt3dadd( -2.58713, -134.774, 2.04999, 0.44 ) }
    dend_115 { pt3dadd( -2.46034, -134.886, 2.04999, 0.66 ) }
    // Section: dend_93, id: dend_93, parent: dend_86 (entry count 19/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 9.68319, -140.672, 2.96685, 0.81 ) }
    dend_93 { pt3dadd( 9.50254, -141.505, 3.29839, 0.81 ) }
    dend_93 { pt3dadd( 9.20224, -143.138, 3.93992, 0.81 ) }
    dend_93 { pt3dadd( 9.18837, -143.23, 3.97457, 0.81 ) }
    dend_93 { pt3dadd( 8.99251, -144.665, 4.4868, 0.81 ) }
    dend_93 { pt3dadd( 8.78586, -146.287, 5.02263, 0.66 ) }
    dend_93 { pt3dadd( 8.6662, -147.291, 5.32626, 0.66 ) }
    dend_93 { pt3dadd( 8.65748, -147.434, 5.36363, 0.66 ) }
    dend_93 { pt3dadd( 8.655, -147.9, 5.44244, 0.88 ) }
    dend_93 { pt3dadd( 8.65748, -148.544, 5.51804, 0.59 ) }
    dend_93 { pt3dadd( 8.664, -149.252, 5.56165, 0.74 ) }
    dend_93 { pt3dadd( 8.66763, -149.975, 5.56165, 0.74 ) }
    dend_93 { pt3dadd( 8.63012, -151.496, 5.56165, 0.59 ) }
    dend_93 { pt3dadd( 8.54746, -153.029, 5.59975, 0.59 ) }
    dend_93 { pt3dadd( 8.49821, -153.644, 5.6269, 0.96 ) }
    dend_93 { pt3dadd( 8.42888, -154.283, 5.66708, 0.96 ) }
    dend_93 { pt3dadd( 8.28575, -155.117, 5.80619, 0.88 ) }
    dend_93 { pt3dadd( 8.06675, -155.957, 6.04733, 0.66 ) }
    dend_93 { pt3dadd( 7.76793, -156.688, 6.36493, 0.66 ) }
    dend_93 { pt3dadd( 7.73665, -156.745, 6.39615, 0.66 ) }
    dend_93 { pt3dadd( 7.24707, -157.521, 6.86781, 0.66 ) }
    dend_93 { pt3dadd( 6.25979, -158.973, 7.77699, 0.66 ) }
    dend_93 { pt3dadd( 5.95489, -159.404, 8.05119, 1.25 ) }
    dend_93 { pt3dadd( 5.62736, -159.918, 8.32152, 1.47 ) }
    dend_93 { pt3dadd( 5.34776, -160.41, 8.44682, 1.25 ) }
    dend_93 { pt3dadd( 5.15255, -160.778, 8.47771, 1.03 ) }
    dend_93 { pt3dadd( 4.77635, -161.535, 8.40341, 0.81 ) }
    dend_93 { pt3dadd( 4.74779, -161.597, 8.38787, 0.81 ) }
    dend_93 { pt3dadd( 4.17415, -162.915, 7.92622, 0.81 ) }
    dend_93 { pt3dadd( 3.55813, -164.42, 7.30065, 0.81 ) }
    dend_93 { pt3dadd( 3.53025, -164.489, 7.26941, 0.81 ) }
    dend_93 { pt3dadd( 3.37554, -164.872, 7.08477, 1.25 ) }
    dend_93 { pt3dadd( 3.14661, -165.437, 6.80983, 1.55 ) }
    dend_93 { pt3dadd( 2.56793, -166.826, 6.18465, 1.55 ) }
    dend_93 { pt3dadd( 2.54164, -166.886, 6.16136, 1.55 ) }
    dend_93 { pt3dadd( 2.19217, -167.739, 6.00337, 1.11 ) }
    dend_93 { pt3dadd( 2.16648, -167.805, 5.99756, 1.11 ) }
    dend_93 { pt3dadd( 1.83254, -168.712, 5.99567, 1.11 ) }
    dend_93 { pt3dadd( 1.65091, -169.277, 6.04954, 1.47 ) }
    dend_93 { pt3dadd( 1.44269, -169.972, 6.18736, 1.47 ) }
    dend_93 { pt3dadd( 1.17123, -171.078, 6.40004, 1.33 ) }
    dend_93 { pt3dadd( 1.06965, -171.693, 6.50725, 1.18 ) }
    dend_93 { pt3dadd( 1.05878, -171.771, 6.52578, 1.18 ) }
    dend_93 { pt3dadd( 0.912541, -172.749, 6.80428, 1.03 ) }
    dend_93 { pt3dadd( 0.890905, -172.878, 6.8443, 1.03 ) }
    dend_93 { pt3dadd( 0.698491, -173.832, 7.17781, 0.74 ) }
    dend_93 { pt3dadd( 0.39304, -174.987, 7.59048, 0.74 ) }
    dend_93 { pt3dadd( -0.100318, -176.434, 8.14364, 0.74 ) }
    dend_93 { pt3dadd( -0.42466, -177.236, 8.44582, 0.74 ) }
    dend_93 { pt3dadd( -0.452594, -177.295, 8.46757, 0.74 ) }
    dend_93 { pt3dadd( -0.812856, -178.039, 8.71458, 0.96 ) }
    dend_93 { pt3dadd( -1.16913, -178.765, 8.95268, 1.03 ) }
    dend_93 { pt3dadd( -1.55884, -179.581, 9.18434, 1.03 ) }
    dend_93 { pt3dadd( -1.9119, -180.439, 9.36391, 1.18 ) }
    dend_93 { pt3dadd( -2.20632, -181.226, 9.54886, 1.18 ) }
    dend_93 { pt3dadd( -2.4764, -181.975, 9.72882, 1.33 ) }
    dend_93 { pt3dadd( -2.89499, -183.11, 10.0043, 1.33 ) }
    dend_93 { pt3dadd( -3.21439, -183.96, 10.2373, 1.47 ) }
    dend_93 { pt3dadd( -3.46623, -184.594, 10.4479, 1.25 ) }
    dend_93 { pt3dadd( -3.87144, -185.52, 10.7927, 0.74 ) }
    dend_93 { pt3dadd( -4.27003, -186.325, 11.1018, 0.74 ) }
    dend_93 { pt3dadd( -4.75883, -187.198, 11.4282, 0.74 ) }
    dend_93 { pt3dadd( -4.78817, -187.246, 11.4447, 0.74 ) }
    dend_93 { pt3dadd( -5.33176, -188.165, 11.7457, 0.59 ) }
    dend_93 { pt3dadd( -5.78757, -188.935, 11.9634, 0.44 ) }
    dend_93 { pt3dadd( -6.24063, -189.73, 12.1356, 0.44 ) }
    dend_93 { pt3dadd( -6.39961, -190.049, 12.1934, 0.81 ) }
    dend_93 { pt3dadd( -6.64846, -190.645, 12.2715, 1.03 ) }
    dend_93 { pt3dadd( -6.88764, -191.304, 12.3635, 1.03 ) }
    dend_93 { pt3dadd( -7.09814, -192.067, 12.4612, 1.03 ) }
    dend_93 { pt3dadd( -7.11542, -192.21, 12.4868, 1.03 ) }
    dend_93 { pt3dadd( -7.01787, -193.017, 12.6669, 1.03 ) }
    dend_93 { pt3dadd( -6.99818, -193.083, 12.684, 1.03 ) }
    dend_93 { pt3dadd( -6.51784, -194.163, 13.1518, 0.29 ) }
    dend_93 { pt3dadd( -6.3341, -194.492, 13.346, 0.29 ) }
    dend_93 { pt3dadd( -5.84245, -195.224, 13.8594, 0.29 ) }
    dend_93 { pt3dadd( -5.31372, -196.017, 14.4511, 0.29 ) }
    dend_93 { pt3dadd( -5.28034, -196.067, 14.491, 0.29 ) }
    dend_93 { pt3dadd( -4.57627, -197.263, 15.3281, 0.29 ) }
    dend_93 { pt3dadd( -4.5317, -197.354, 15.3814, 0.29 ) }
    dend_93 { pt3dadd( -4.45794, -197.666, 15.5354, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_93 { pt3dadd( -4.44354, -198.214, 15.736, 0.81 ) }
    dend_93 { pt3dadd( -4.44766, -198.282, 15.7534, 0.81 ) }
    dend_93 { pt3dadd( -4.49617, -199.298, 15.8966, 0.81 ) }
    dend_93 { pt3dadd( -4.52167, -199.645, 15.9073, 0.59 ) }
    dend_93 { pt3dadd( -4.59029, -200.282, 15.9198, 0.74 ) }
    dend_93 { pt3dadd( -4.69263, -200.989, 15.9268, 0.88 ) }
    dend_93 { pt3dadd( -4.76914, -201.407, 15.927, 0.59 ) }
    dend_93 { pt3dadd( -4.92594, -202.113, 15.9209, 0.52 ) }
    dend_93 { pt3dadd( -5.1697, -202.93, 15.9046, 0.52 ) }
    dend_93 { pt3dadd( -5.26284, -203.2, 15.8967, 0.96 ) }
    dend_93 { pt3dadd( -5.46971, -203.736, 15.8814, 1.18 ) }
    dend_93 { pt3dadd( -5.70391, -204.298, 15.866, 1.18 ) }
    dend_93 { pt3dadd( -5.89951, -204.77, 15.8548, 1.18 ) }
    dend_93 { pt3dadd( -6.16401, -205.424, 15.8426, 0.59 ) }
    dend_93 { pt3dadd( -6.42415, -206.18, 15.8347, 0.59 ) }
    dend_93 { pt3dadd( -6.58441, -206.726, 15.8347, 1.18 ) }
    dend_93 { pt3dadd( -6.6022, -206.794, 15.8347, 1.18 ) }
    dend_93 { pt3dadd( -6.74963, -207.493, 15.8347, 1.33 ) }
    dend_93 { pt3dadd( -6.77352, -207.628, 15.8333, 1.33 ) }
    dend_93 { pt3dadd( -6.86441, -208.266, 15.8206, 1.33 ) }
    dend_93 { pt3dadd( -7.00227, -209.039, 15.7984, 1.4 ) }
    dend_93 { pt3dadd( -7.05546, -209.264, 15.8099, 1.4 ) }
    dend_93 { pt3dadd( -7.08215, -209.34, 15.8199, 1.4 ) }
    dend_93 { pt3dadd( -7.44532, -210.094, 16.0335, 0.29 ) }
    dend_93 { pt3dadd( -7.4822, -210.162, 16.0592, 0.29 ) }
    dend_93 { pt3dadd( -7.70638, -210.529, 16.2382, 0.29 ) }
    dend_93 { pt3dadd( -8.16067, -211.279, 16.6372, 0.52 ) }
    dend_93 { pt3dadd( -8.44185, -211.791, 17.034, 0.52 ) }
    dend_93 { pt3dadd( -8.66452, -212.296, 17.4719, 0.74 ) }
    dend_93 { pt3dadd( -8.81223, -212.703, 17.8571, 0.74 ) }
    dend_93 { pt3dadd( -8.83776, -212.806, 17.9507, 0.74 ) }
    dend_93 { pt3dadd( -8.89063, -213.248, 18.3195, 0.74 ) }
    dend_93 { pt3dadd( -8.97193, -214.905, 19.4568, 0.52 ) }
    dend_93 { pt3dadd( -9.01256, -215.589, 19.8199, 0.52 ) }
    dend_93 { pt3dadd( -9.02305, -215.666, 19.839, 0.52 ) }
    dend_93 { pt3dadd( -9.13768, -216.155, 19.847, 0.66 ) }
    dend_93 { pt3dadd( -9.34137, -216.798, 19.7367, 0.66 ) }
    dend_93 { pt3dadd( -9.63907, -217.534, 19.482, 0.66 ) }
    dend_93 { pt3dadd( -10.1759, -218.613, 18.861, 0.66 ) }
    dend_93 { pt3dadd( -10.8797, -219.685, 18.1708, 0.66 ) }
    dend_93 { pt3dadd( -11.1333, -220.008, 17.9605, 0.66 ) }
    dend_93 { pt3dadd( -11.1756, -220.056, 17.9318, 0.66 ) }
    dend_93 { pt3dadd( -11.6115, -220.511, 17.673, 1.03 ) }
    dend_93 { pt3dadd( -12.4929, -221.414, 17.2251, 0.81 ) }
    dend_93 { pt3dadd( -13.5553, -222.526, 16.8157, 0.81 ) }
    dend_93 { pt3dadd( -14.2037, -223.221, 16.6305, 0.81 ) }
    dend_93 { pt3dadd( -15.121, -224.283, 16.3877, 0.81 ) }
    dend_93 { pt3dadd( -15.1642, -224.337, 16.3778, 0.81 ) }
    dend_93 { pt3dadd( -15.4882, -224.779, 16.3492, 1.18 ) }
    dend_93 { pt3dadd( -15.8007, -225.361, 16.4162, 1.18 ) }
    dend_93 { pt3dadd( -15.8219, -225.426, 16.4279, 1.18 ) }
    dend_93 { pt3dadd( -15.9106, -226.127, 16.5844, 1.18 ) }
    dend_93 { pt3dadd( -15.9123, -226.205, 16.6016, 1.18 ) }
    dend_93 { pt3dadd( -15.8794, -227.209, 16.798, 0.88 ) }
    dend_93 { pt3dadd( -15.7731, -228.695, 17.0599, 0.74 ) }
    dend_93 { pt3dadd( -15.7594, -228.841, 17.0825, 0.74 ) }
    dend_93 { pt3dadd( -15.5644, -230.565, 17.3035, 0.74 ) }
    dend_93 { pt3dadd( -15.4001, -231.912, 17.4706, 0.74 ) }
    dend_93 { pt3dadd( -15.2848, -232.821, 17.5725, 1.03 ) }
    dend_93 { pt3dadd( -15.1989, -233.479, 17.6289, 1.03 ) }
    dend_93 { pt3dadd( -15.1175, -234.143, 17.6879, 1.25 ) }
    dend_93 { pt3dadd( -14.9692, -235.318, 17.7898, 1.25 ) }
    dend_93 { pt3dadd( -14.8286, -236.734, 17.9072, 0.81 ) }
    dend_93 { pt3dadd( -14.8248, -236.803, 17.9128, 0.81 ) }
    dend_93 { pt3dadd( -14.8504, -238.456, 18.0357, 0.74 ) }
    dend_93 { pt3dadd( -14.9668, -240.289, 18.1557, 0.74 ) }
    dend_93 { pt3dadd( -15.0181, -240.805, 18.1823, 0.74 ) }
    dend_93 { pt3dadd( -15.156, -241.683, 18.2101, 0.74 ) }
    dend_93 { pt3dadd( -15.4048, -242.766, 18.18, 0.59 ) }
    dend_93 { pt3dadd( -15.7738, -243.844, 18.1171, 0.59 ) }
    dend_93 { pt3dadd( -15.8079, -243.903, 18.1065, 0.59 ) }
    dend_93 { pt3dadd( -16.3604, -244.577, 17.8902, 1.11 ) }
    dend_93 { pt3dadd( -16.6993, -244.932, 17.7394, 1.33 ) }
    dend_93 { pt3dadd( -17.4172, -245.641, 17.3605, 1.03 ) }
    dend_93 { pt3dadd( -17.9915, -246.219, 16.9932, 0.81 ) }
    dend_93 { pt3dadd( -18.7524, -247.015, 16.4565, 0.74 ) }
    dend_93 { pt3dadd( -18.7939, -247.065, 16.4262, 0.74 ) }
    dend_93 { pt3dadd( -19.1303, -247.532, 16.1718, 0.74 ) }
    dend_93 { pt3dadd( -19.4102, -248.149, 15.9139, 0.74 ) }
    dend_93 { pt3dadd( -19.583, -249.01, 15.6755, 0.74 ) }
    dend_93 { pt3dadd( -19.5911, -249.224, 15.6324, 0.74 ) }
    dend_93 { pt3dadd( -19.5122, -249.997, 15.5494, 0.59 ) }
    dend_93 { pt3dadd( -19.4836, -250.143, 15.5356, 0.59 ) }
    dend_93 { pt3dadd( -19.2473, -250.859, 15.4804, 0.59 ) }
    dend_93 { pt3dadd( -19.0232, -251.389, 15.4561, 0.88 ) }
    dend_93 { pt3dadd( -18.9928, -251.453, 15.4561, 0.88 ) }
    dend_93 { pt3dadd( -18.6345, -252.183, 15.4561, 0.88 ) }
    dend_93 { pt3dadd( -18.5563, -252.363, 15.4561, 0.88 ) }
    dend_93 { pt3dadd( -18.4506, -252.674, 15.4561, 0.59 ) }
    dend_93 { pt3dadd( -18.396, -253.163, 15.4952, 0.52 ) }
    dend_93 { pt3dadd( -18.4721, -253.591, 15.5605, 0.74 ) }
    dend_93 { pt3dadd( -18.4944, -253.644, 15.5765, 0.74 ) }
    dend_93 { pt3dadd( -18.8868, -254.302, 15.8429, 0.74 ) }
    dend_93 { pt3dadd( -18.924, -254.359, 15.8669, 0.74 ) }
    dend_93 { pt3dadd( -19.5239, -255.206, 16.2447, 0.66 ) }
    dend_93 { pt3dadd( -20.0685, -255.952, 16.5836, 0.66 ) }
    dend_93 { pt3dadd( -20.7472, -256.873, 17.0049, 0.66 ) }
    dend_93 { pt3dadd( -20.8225, -256.983, 17.0514, 0.66 ) }
    dend_93 { pt3dadd( -21.3834, -257.859, 17.3977, 0.88 ) }
    dend_93 { pt3dadd( -21.4522, -257.983, 17.4365, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_93 { pt3dadd( -21.7514, -258.669, 17.5743, 1.18 ) }
    dend_93 { pt3dadd( -21.773, -258.734, 17.5824, 1.18 ) }
    dend_93 { pt3dadd( -22.0105, -259.48, 17.6065, 1.18 ) }
    dend_93 { pt3dadd( -22.0372, -259.556, 17.6083, 1.18 ) }
    dend_93 { pt3dadd( -22.2929, -260.227, 17.6186, 0.96 ) }
    dend_93 { pt3dadd( -22.3191, -260.293, 17.6192, 0.96 ) }
    dend_93 { pt3dadd( -22.6204, -261.114, 17.6192, 0.96 ) }
    dend_93 { pt3dadd( -22.9185, -261.969, 17.593, 0.66 ) }
    dend_93 { pt3dadd( -23.2019, -262.845, 17.5448, 0.59 ) }
    dend_93 { pt3dadd( -23.4621, -263.766, 17.4809, 0.59 ) }
    dend_93 { pt3dadd( -23.4874, -263.869, 17.4726, 0.59 ) }
    dend_93 { pt3dadd( -23.7045, -264.875, 17.3869, 0.59 ) }
    dend_93 { pt3dadd( -23.8069, -265.433, 17.3357, 0.96 ) }
    dend_93 { pt3dadd( -23.9331, -266.341, 17.187, 1.11 ) }
    dend_93 { pt3dadd( -24.0595, -267.369, 16.9274, 1.11 ) }
    dend_93 { pt3dadd( -24.0695, -267.435, 16.9071, 1.11 ) }
    dend_93 { pt3dadd( -24.3471, -268.699, 16.4959, 1.11 ) }
    dend_93 { pt3dadd( -24.3677, -268.771, 16.4718, 1.11 ) }
    dend_93 { pt3dadd( -24.8303, -270.022, 16.0687, 0.74 ) }
    dend_93 { pt3dadd( -25.1187, -270.668, 15.8613, 0.44 ) }
    dend_93 { pt3dadd( -25.6797, -271.744, 15.5456, 0.44 ) }
    dend_93 { pt3dadd( -26.2821, -272.773, 15.3004, 0.44 ) }
    dend_93 { pt3dadd( -26.5125, -273.126, 15.2438, 1.11 ) }
    dend_93 { pt3dadd( -27.0339, -273.897, 15.1862, 1.11 ) }
    dend_93 { pt3dadd( -27.5453, -274.631, 15.2042, 1.25 ) }
    dend_93 { pt3dadd( -28.0809, -275.432, 15.2536, 1.25 ) }
    dend_93 { pt3dadd( -28.71, -276.472, 15.3271, 1.25 ) }
    dend_93 { pt3dadd( -29.033, -277.072, 15.3735, 0.81 ) }
    dend_93 { pt3dadd( -29.3998, -277.883, 15.4185, 0.81 ) }
    dend_93 { pt3dadd( -29.6522, -278.641, 15.4422, 0.81 ) }
    dend_93 { pt3dadd( -29.8657, -279.546, 15.4462, 0.66 ) }
    dend_93 { pt3dadd( -29.9232, -280.293, 15.4206, 0.52 ) }
    dend_93 { pt3dadd( -29.9163, -280.363, 15.4149, 0.52 ) }
    dend_93 { pt3dadd( -29.7624, -281.043, 15.2858, 1.03 ) }
    dend_93 { pt3dadd( -29.5632, -281.65, 15.1376, 1.33 ) }
    dend_93 { pt3dadd( -29.5288, -281.739, 15.1141, 1.33 ) }
    dend_93 { pt3dadd( -29.2759, -282.419, 14.867, 1.33 ) }
    dend_93 { pt3dadd( -29.0543, -283.224, 14.5474, 1.33 ) }
    dend_93 { pt3dadd( -28.8384, -284.222, 14.1506, 0.59 ) }
    dend_93 { pt3dadd( -28.6811, -285.326, 13.73, 0.59 ) }
    dend_93 { pt3dadd( -28.6249, -285.981, 13.4751, 0.59 ) }
    dend_93 { pt3dadd( -28.5967, -287.401, 12.9484, 0.59 ) }
    dend_93 { pt3dadd( -28.6459, -288.341, 12.6102, 0.59 ) }
    dend_93 { pt3dadd( -28.7094, -288.866, 12.4501, 1.03 ) }
    dend_93 { pt3dadd( -28.8552, -289.696, 12.2725, 1.03 ) }
    dend_93 { pt3dadd( -28.8841, -289.829, 12.2498, 1.03 ) }
    dend_93 { pt3dadd( -29.0647, -290.734, 12.1679, 1.03 ) }
    dend_93 { pt3dadd( -29.0749, -290.802, 12.1679, 1.03 ) }
    dend_93 { pt3dadd( -29.1131, -292.014, 12.2221, 1.03 ) }
    dend_93 { pt3dadd( -29.0659, -292.674, 12.278, 0.52 ) }
    dend_93 { pt3dadd( -29.0528, -292.751, 12.2871, 0.52 ) }
    dend_93 { pt3dadd( -28.7404, -294.014, 12.6813, 0.52 ) }
    dend_93 { pt3dadd( -28.7101, -294.105, 12.7278, 0.52 ) }
    dend_93 { pt3dadd( -28.3178, -295.27, 13.5432, 0.52 ) }
    dend_93 { pt3dadd( -28.1339, -295.786, 14.0232, 0.52 ) }
    dend_93 { pt3dadd( -28.1199, -295.834, 14.0746, 0.52 ) }
    dend_93 { pt3dadd( -27.7748, -297.432, 15.9524, 0.52 ) }
    dend_93 { pt3dadd( -27.768, -297.503, 16.0471, 0.52 ) }
    dend_93 { pt3dadd( -27.7564, -298.158, 16.7649, 0.52 ) }
    dend_93 { pt3dadd( -27.7612, -298.23, 16.8328, 0.52 ) }
    dend_93 { pt3dadd( -27.7877, -298.796, 17.2654, 0.52 ) }
    dend_93 { pt3dadd( -27.7871, -298.855, 17.3001, 0.52 ) }
    dend_93 { pt3dadd( -27.6479, -300.277, 17.7929, 0.52 ) }
    dend_93 { pt3dadd( -27.3652, -301.836, 18.236, 0.52 ) }
    dend_93 { pt3dadd( -27.341, -301.934, 18.2613, 0.52 ) }
    dend_93 { pt3dadd( -27.1974, -302.443, 18.3868, 0.88 ) }
    dend_93 { pt3dadd( -27.1758, -302.506, 18.4013, 0.88 ) }
    dend_93 { pt3dadd( -26.8996, -303.275, 18.5344, 1.03 ) }
    dend_93 { pt3dadd( -26.5264, -304.155, 18.5344, 1.03 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 69/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 9.68319, -140.672, 2.96685, 1.25 ) }
    dend_87 { pt3dadd( 10.1999, -141.489, 2.96578, 1.25 ) }
    dend_87 { pt3dadd( 10.5387, -142.255, 2.9638, 1.25 ) }
    dend_87 { pt3dadd( 10.8158, -143.021, 2.96531, 1.03 ) }
    dend_87 { pt3dadd( 11.119, -144.098, 2.89867, 0.59 ) }
    dend_87 { pt3dadd( 11.1318, -144.165, 2.89177, 0.59 ) }
    dend_87 { pt3dadd( 11.2514, -145.21, 2.76182, 0.59 ) }
    dend_87 { pt3dadd( 11.2263, -146.17, 2.61793, 0.59 ) }
    dend_87 { pt3dadd( 11.2195, -146.227, 2.60777, 0.59 ) }
    dend_87 { pt3dadd( 11.0762, -147.202, 2.42286, 0.59 ) }
    dend_87 { pt3dadd( 10.9617, -147.922, 2.2817, 0.59 ) }
    dend_87 { pt3dadd( 10.9325, -148.602, 2.16084, 0.88 ) }
    dend_87 { pt3dadd( 11.0023, -149.166, 2.07429, 1.03 ) }
    dend_87 { pt3dadd( 11.0575, -149.374, 2.05095, 1.03 ) }
    dend_87 { pt3dadd( 11.3876, -150.229, 1.99464, 1.03 ) }
    dend_87 { pt3dadd( 11.453, -150.353, 1.99464, 1.03 ) }
    dend_87 { pt3dadd( 12.0854, -151.275, 1.99464, 1.03 ) }
    dend_87 { pt3dadd( 12.5382, -151.84, 1.99464, 1.11 ) }
    dend_87 { pt3dadd( 12.5769, -151.885, 1.99464, 1.11 ) }
    dend_87 { pt3dadd( 13.0065, -152.343, 1.99464, 1.11 ) }
    dend_87 { pt3dadd( 13.0673, -152.402, 1.99464, 1.11 ) }
    dend_87 { pt3dadd( 13.584, -152.865, 1.99464, 1.25 ) }
    dend_87 { pt3dadd( 13.9789, -153.198, 1.99464, 1.25 ) }
    dend_87 { pt3dadd( 14.207, -153.4, 1.9932, 1.03 ) }
    dend_87 { pt3dadd( 14.5891, -153.8, 1.9884, 0.81 ) }
    dend_87 { pt3dadd( 14.8768, -154.163, 1.98252, 0.59 ) }
    dend_87 { pt3dadd( 15.2439, -154.804, 1.91749, 0.59 ) }
    dend_87 { pt3dadd( 15.2638, -154.881, 1.90231, 0.59 ) }
    dend_87 { pt3dadd( 15.2894, -155.29, 1.79361, 0.59 ) }
    dend_87 { pt3dadd( 15.2574, -156.041, 1.58567, 0.59 ) }
    dend_87 { pt3dadd( 15.2528, -156.108, 1.56868, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_87 { pt3dadd( 15.1829, -157.16, 1.34106, 0.59 ) }
    dend_87 { pt3dadd( 15.1661, -157.834, 1.23197, 0.59 ) }
    dend_87 { pt3dadd( 15.177, -158.148, 1.21777, 1.03 ) }
    dend_87 { pt3dadd( 15.254, -159.048, 1.3053, 1.33 ) }
    dend_87 { pt3dadd( 15.3857, -159.99, 1.47414, 1.33 ) }
    dend_87 { pt3dadd( 15.5543, -160.956, 1.70164, 1.33 ) }
    dend_87 { pt3dadd( 15.9236, -162.534, 2.22036, 1.33 ) }
    dend_87 { pt3dadd( 16.4902, -164.525, 2.98792, 1.33 ) }
    dend_87 { pt3dadd( 17.0027, -166.043, 3.69888, 0.74 ) }
    dend_87 { pt3dadd( 17.273, -166.725, 4.06659, 0.74 ) }
    dend_87 { pt3dadd( 17.3498, -166.903, 4.17042, 0.74 ) }
    dend_87 { pt3dadd( 17.8957, -168.091, 4.84312, 0.74 ) }
    dend_87 { pt3dadd( 18.1504, -168.615, 5.12446, 0.74 ) }
    dend_87 { pt3dadd( 18.5519, -169.469, 5.47995, 1.18 ) }
    dend_87 { pt3dadd( 19.023, -170.666, 5.77777, 1.18 ) }
    dend_87 { pt3dadd( 19.3529, -171.679, 5.94682, 1.18 ) }
    dend_87 { pt3dadd( 19.8137, -173.372, 6.10076, 1.18 ) }
    dend_87 { pt3dadd( 19.8282, -173.439, 6.10087, 1.18 ) }
    dend_87 { pt3dadd( 20.068, -174.704, 6.04735, 1.18 ) }
    dend_87 { pt3dadd( 20.2733, -175.937, 5.92151, 0.81 ) }
    dend_87 { pt3dadd( 20.3541, -176.469, 5.85871, 0.74 ) }
    dend_87 { pt3dadd( 20.3964, -176.759, 5.82236, 0.74 ) }
    dend_87 { pt3dadd( 20.5422, -177.719, 5.70689, 0.74 ) }
    dend_87 { pt3dadd( 20.5566, -177.796, 5.69923, 0.74 ) }
    dend_87 { pt3dadd( 20.7116, -178.384, 5.68687, 1.47 ) }
    dend_87 { pt3dadd( 20.9901, -179.166, 5.78639, 1.47 ) }
    dend_87 { pt3dadd( 21.245, -179.79, 5.9052, 1.47 ) }
    dend_87 { pt3dadd( 21.6978, -180.941, 6.15462, 1.47 ) }
    dend_87 { pt3dadd( 21.854, -181.419, 6.25785, 1.69 ) }
    dend_87 { pt3dadd( 22.1751, -182.54, 6.49653, 1.84 ) }
    dend_87 { pt3dadd( 22.3909, -183.448, 6.67679, 0.88 ) }
    dend_87 { pt3dadd( 22.5081, -184.114, 6.79655, 0.66 ) }
    dend_87 { pt3dadd( 22.7048, -185.722, 7.05627, 0.66 ) }
    dend_87 { pt3dadd( 22.7811, -187.283, 7.22703, 0.66 ) }
    dend_87 { pt3dadd( 22.7808, -187.354, 7.23017, 0.66 ) }
    dend_87 { pt3dadd( 22.7091, -188.873, 7.18546, 0.66 ) }
    dend_87 { pt3dadd( 22.6861, -189.685, 7.11825, 0.96 ) }
    dend_87 { pt3dadd( 22.6878, -189.753, 7.11616, 0.96 ) }
    dend_87 { pt3dadd( 22.8122, -190.635, 7.17778, 0.74 ) }
    dend_87 { pt3dadd( 23.0669, -191.597, 7.35283, 0.74 ) }
    dend_87 { pt3dadd( 23.0877, -191.654, 7.38593, 0.74 ) }
    dend_87 { pt3dadd( 23.524, -192.629, 8.28201, 0.74 ) }
    dend_87 { pt3dadd( 24.0612, -193.709, 9.45838, 1.03 ) }
    dend_87 { pt3dadd( 24.3787, -194.318, 10.1384, 1.62 ) }
    dend_87 { pt3dadd( 24.6374, -194.795, 10.6719, 1.62 ) }
    dend_87 { pt3dadd( 25.8096, -197.056, 13.0452, 0.66 ) }
    dend_87 { pt3dadd( 26.044, -197.562, 13.4937, 0.66 ) }
    dend_87 { pt3dadd( 26.1954, -197.932, 13.7196, 0.66 ) }
    dend_87 { pt3dadd( 26.6121, -199.047, 14.115, 0.66 ) }
    dend_87 { pt3dadd( 26.918, -199.868, 14.2817, 1.11 ) }
    dend_87 { pt3dadd( 27.2512, -200.744, 14.3713, 1.4 ) }
    dend_87 { pt3dadd( 27.6673, -201.854, 14.432, 1.11 ) }
    dend_87 { pt3dadd( 28.4249, -203.94, 14.6644, 1.11 ) }
    dend_87 { pt3dadd( 28.4478, -204.004, 14.6749, 1.11 ) }
    dend_87 { pt3dadd( 29.3088, -206.368, 15.1995, 0.96 ) }
    dend_87 { pt3dadd( 29.3326, -206.43, 15.2208, 0.96 ) }
    dend_87 { pt3dadd( 29.8949, -207.859, 15.9409, 0.81 ) }
    dend_87 { pt3dadd( 30.0209, -208.202, 16.1786, 0.81 ) }
    dend_87 { pt3dadd( 30.152, -208.564, 16.4992, 1.11 ) }
    dend_87 { pt3dadd( 30.2131, -208.732, 16.6576, 1.11 ) }
    dend_87 { pt3dadd( 30.7387, -209.938, 17.8429, 1.11 ) }
    dend_87 { pt3dadd( 31.0737, -210.577, 18.3781, 0.59 ) }
    dend_87 { pt3dadd( 31.108, -210.628, 18.4107, 0.59 ) }
    dend_87 { pt3dadd( 31.6921, -211.42, 18.8564, 0.59 ) }
    dend_87 { pt3dadd( 31.7516, -211.5, 18.894, 0.59 ) }
    dend_87 { pt3dadd( 32.588, -212.685, 19.258, 0.59 ) }
    dend_87 { pt3dadd( 32.7575, -212.939, 19.277, 0.59 ) }
    dend_87 { pt3dadd( 33.3576, -213.878, 19.2731, 0.59 ) }
    dend_87 { pt3dadd( 33.4317, -214.007, 19.2699, 0.59 ) }
    dend_87 { pt3dadd( 33.5601, -214.28, 19.2568, 1.03 ) }
    dend_87 { pt3dadd( 33.8484, -215.211, 19.1941, 1.03 ) }
    dend_87 { pt3dadd( 33.9387, -216.075, 19.112, 1.47 ) }
    dend_87 { pt3dadd( 33.9375, -216.146, 19.1059, 1.47 ) }
    dend_87 { pt3dadd( 33.8843, -216.507, 19.0768, 1.47 ) }
    dend_87 { pt3dadd( 33.8317, -216.83, 19.0608, 1.47 ) }
    dend_87 { pt3dadd( 33.663, -217.808, 19.0474, 0.74 ) }
    dend_87 { pt3dadd( 33.6498, -217.875, 19.0489, 0.74 ) }
    dend_87 { pt3dadd( 33.5484, -218.486, 19.0772, 0.96 ) }
    dend_87 { pt3dadd( 33.5308, -218.622, 19.0829, 0.96 ) }
    dend_87 { pt3dadd( 33.4584, -219.442, 19.1109, 0.96 ) }
    dend_87 { pt3dadd( 33.4452, -220.5, 19.1375, 0.96 ) }
    dend_87 { pt3dadd( 33.4795, -221.029, 19.1399, 1.47 ) }
    dend_87 { pt3dadd( 33.5697, -221.895, 19.1305, 1.47 ) }
    dend_87 { pt3dadd( 33.5817, -221.972, 19.1287, 1.47 ) }
    dend_87 { pt3dadd( 33.7932, -223.105, 19.097, 1.47 ) }
    dend_87 { pt3dadd( 34.0671, -224.242, 19.0608, 1.47 ) }
    dend_87 { pt3dadd( 34.3355, -225.14, 19.0252, 1.18 ) }
    dend_87 { pt3dadd( 34.6144, -225.939, 18.9904, 1.47 ) }
    dend_87 { pt3dadd( 34.9701, -226.861, 18.987, 1.69 ) }
    dend_87 { pt3dadd( 35.0116, -226.964, 18.9892, 1.69 ) }
    dend_87 { pt3dadd( 35.2571, -227.547, 19.0759, 1.69 ) }
    dend_87 { pt3dadd( 35.6249, -228.42, 19.3044, 0.88 ) }
    dend_87 { pt3dadd( 36.0161, -229.354, 19.6377, 0.74 ) }
    dend_87 { pt3dadd( 36.914, -231.455, 20.5454, 0.74 ) }
    dend_87 { pt3dadd( 36.9556, -231.543, 20.5887, 0.74 ) }
    dend_87 { pt3dadd( 37.7635, -233.221, 21.6413, 0.74 ) }
    dend_87 { pt3dadd( 37.874, -233.45, 21.8174, 0.74 ) }
    dend_87 { pt3dadd( 38.0194, -233.775, 22.1102, 0.74 ) }
    dend_87 { pt3dadd( 38.0585, -233.87, 22.2068, 0.74 ) }
    dend_87 { pt3dadd( 38.2681, -234.777, 23.0388, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_87 { pt3dadd( 38.4703, -236.744, 24.4864, 0.74 ) }
    dend_87 { pt3dadd( 38.4667, -236.824, 24.5278, 0.74 ) }
    dend_87 { pt3dadd( 38.3081, -237.931, 25.024, 0.74 ) }
    dend_87 { pt3dadd( 38.2934, -237.996, 25.0482, 0.74 ) }
    dend_87 { pt3dadd( 37.7314, -239.906, 25.5916, 0.74 ) }
    dend_87 { pt3dadd( 37.7112, -239.963, 25.6013, 0.74 ) }
    dend_87 { pt3dadd( 37.3785, -240.917, 25.6388, 0.74 ) }
    dend_87 { pt3dadd( 37.2345, -241.392, 25.6512, 1.18 ) }
    dend_87 { pt3dadd( 37.0723, -242.165, 25.6393, 1.18 ) }
    dend_87 { pt3dadd( 36.9982, -242.67, 25.6239, 0.81 ) }
    dend_87 { pt3dadd( 37.038, -244.304, 25.4867, 0.81 ) }
    dend_87 { pt3dadd( 37.0458, -244.372, 25.4786, 0.81 ) }
    dend_87 { pt3dadd( 37.3885, -245.647, 25.2801, 0.81 ) }
    dend_87 { pt3dadd( 37.9359, -247.052, 25.0212, 0.74 ) }
    dend_87 { pt3dadd( 37.9744, -247.12, 25.0073, 0.74 ) }
    dend_87 { pt3dadd( 39.2373, -248.841, 24.6177, 0.74 ) }
    dend_87 { pt3dadd( 39.2854, -248.894, 24.6102, 0.74 ) }
    dend_87 { pt3dadd( 40.1997, -249.846, 24.5734, 0.74 ) }
    dend_87 { pt3dadd( 40.2488, -249.895, 24.5771, 0.74 ) }
    dend_87 { pt3dadd( 41.2546, -250.963, 24.7891, 0.74 ) }
    dend_87 { pt3dadd( 41.3035, -251.023, 24.8081, 0.74 ) }
    dend_87 { pt3dadd( 42.3345, -252.586, 25.4729, 0.74 ) }
    dend_87 { pt3dadd( 42.6327, -253.131, 25.7504, 1.03 ) }
    dend_87 { pt3dadd( 43.0298, -254.055, 26.2625, 1.03 ) }
    dend_87 { pt3dadd( 43.0512, -254.113, 26.2931, 1.03 ) }
    dend_87 { pt3dadd( 43.3664, -255.168, 26.8264, 1.25 ) }
    dend_87 { pt3dadd( 43.6052, -256.057, 27.2051, 1.47 ) }
    dend_87 { pt3dadd( 43.9573, -257.57, 27.6531, 1.47 ) }
    dend_87 { pt3dadd( 44.1239, -258.313, 27.7712, 0.96 ) }
    dend_87 { pt3dadd( 44.4856, -260.018, 27.8221, 0.74 ) }
    dend_87 { pt3dadd( 44.5062, -260.119, 27.8142, 0.74 ) }
    dend_87 { pt3dadd( 44.8031, -261.797, 27.4747, 0.74 ) }
    dend_87 { pt3dadd( 45.0071, -263.138, 27.1183, 0.88 ) }
    dend_87 { pt3dadd( 45.2373, -264.758, 26.5935, 1.11 ) }
    dend_87 { pt3dadd( 45.3762, -265.822, 26.2402, 1.11 ) }
    dend_87 { pt3dadd( 45.5208, -267.014, 25.8484, 0.66 ) }
    dend_87 { pt3dadd( 45.7293, -268.57, 25.3474, 0.66 ) }
    dend_87 { pt3dadd( 45.9525, -269.96, 24.9339, 0.66 ) }
    dend_87 { pt3dadd( 45.9649, -270.027, 24.9181, 0.66 ) }
    dend_87 { pt3dadd( 46.0879, -270.579, 24.7954, 1.33 ) }
    dend_87 { pt3dadd( 46.3233, -271.378, 24.5744, 1.33 ) }
    dend_87 { pt3dadd( 46.7199, -272.45, 24.2255, 0.74 ) }
    dend_87 { pt3dadd( 47.1546, -273.533, 23.8754, 0.74 ) }
    dend_87 { pt3dadd( 47.1778, -273.599, 23.8595, 0.74 ) }
    dend_87 { pt3dadd( 47.5294, -274.758, 23.7307, 0.59 ) }
    dend_87 { pt3dadd( 47.8064, -275.791, 23.7143, 0.59 ) }
    dend_87 { pt3dadd( 47.8427, -275.935, 23.7256, 0.59 ) }
    dend_87 { pt3dadd( 48.2255, -277.661, 24.0161, 0.59 ) }
    dend_87 { pt3dadd( 48.5828, -279.49, 24.4774, 0.59 ) }
    dend_87 { pt3dadd( 48.8083, -280.701, 24.8558, 0.59 ) }
    dend_87 { pt3dadd( 48.8191, -280.765, 24.8799, 0.59 ) }
    dend_87 { pt3dadd( 48.9098, -281.338, 25.1066, 0.59 ) }
    dend_87 { pt3dadd( 49.0781, -282.283, 25.477, 0.74 ) }
    dend_87 { pt3dadd( 49.3679, -283.706, 26.0407, 0.74 ) }
    dend_87 { pt3dadd( 49.3788, -283.762, 26.0574, 0.74 ) }
    dend_87 { pt3dadd( 49.4728, -284.397, 26.2301, 1.33 ) }
    dend_87 { pt3dadd( 49.4796, -284.473, 26.2513, 1.33 ) }
    dend_87 { pt3dadd( 49.4959, -285.12, 26.3456, 1.55 ) }
    dend_87 { pt3dadd( 49.4772, -285.336, 26.3405, 1.55 ) }
    dend_87 { pt3dadd( 49.3035, -286.16, 26.1553, 1.11 ) }
    dend_87 { pt3dadd( 49.066, -287.044, 25.897, 0.88 ) }
    dend_87 { pt3dadd( 48.8105, -287.879, 25.6081, 0.88 ) }
    dend_87 { pt3dadd( 48.2988, -289.546, 24.8519, 0.52 ) }
    dend_87 { pt3dadd( 48.0361, -290.658, 24.2485, 0.52 ) }
    dend_87 { pt3dadd( 47.947, -291.634, 23.6644, 0.52 ) }
    dend_87 { pt3dadd( 47.9502, -291.702, 23.6194, 0.52 ) }
    dend_87 { pt3dadd( 48.0612, -292.209, 23.2861, 0.52 ) }
    dend_87 { pt3dadd( 48.5866, -293.219, 22.7958, 0.81 ) }
    dend_87 { pt3dadd( 49.4453, -294.281, 22.5651, 0.81 ) }
    dend_87 { pt3dadd( 50.3332, -295.193, 22.5462, 0.81 ) }
    dend_87 { pt3dadd( 50.3819, -295.243, 22.5542, 0.81 ) }
    dend_87 { pt3dadd( 51.0824, -296.057, 22.7598, 1.25 ) }
    dend_87 { pt3dadd( 51.5792, -296.811, 22.9939, 1.4 ) }
    dend_87 { pt3dadd( 51.7928, -297.242, 23.1456, 1.4 ) }
    dend_87 { pt3dadd( 52.1086, -298.277, 23.4636, 0.88 ) }
    dend_87 { pt3dadd( 52.2219, -298.865, 23.6119, 0.59 ) }
    dend_87 { pt3dadd( 52.3877, -300.139, 23.8523, 0.59 ) }
    dend_87 { pt3dadd( 52.4899, -301.492, 24.012, 0.59 ) }
    dend_87 { pt3dadd( 52.4919, -301.629, 24.0254, 0.59 ) }
    dend_87 { pt3dadd( 52.512, -302.669, 24.0893, 0.59 ) }
    dend_87 { pt3dadd( 52.5321, -303.047, 24.1184, 0.81 ) }
    dend_87 { pt3dadd( 52.6198, -303.677, 24.211, 0.88 ) }
    dend_87 { pt3dadd( 52.7434, -304.179, 24.3223, 0.44 ) }
    dend_87 { pt3dadd( 52.7671, -304.242, 24.34, 0.44 ) }
    dend_87 { pt3dadd( 53.3145, -305.473, 24.8259, 0.44 ) }
    dend_87 { pt3dadd( 53.8687, -306.536, 25.3584, 0.81 ) }
    dend_87 { pt3dadd( 54.1692, -307.125, 25.6811, 0.96 ) }
    dend_87 { pt3dadd( 54.3659, -307.544, 25.9137, 0.96 ) }
    dend_87 { pt3dadd( 54.3904, -307.612, 25.95, 0.96 ) }
    dend_87 { pt3dadd( 54.6594, -308.711, 26.497, 0.66 ) }
    dend_87 { pt3dadd( 54.671, -309.138, 26.6808, 0.44 ) }
    dend_87 { pt3dadd( 54.563, -309.854, 26.8496, 0.44 ) }
    dend_87 { pt3dadd( 54.3412, -310.709, 26.9723, 0.44 ) }
    dend_87 { pt3dadd( 54.1773, -311.261, 27.0009, 0.44 ) }
    dend_87 { pt3dadd( 54.162, -311.328, 26.988, 0.44 ) }
    dend_87 { pt3dadd( 54.1319, -311.527, 26.9065, 0.74 ) }
    dend_87 { pt3dadd( 54.1246, -311.619, 26.8664, 0.74 ) }
    dend_87 { pt3dadd( 54.1317, -312.608, 26.4399, 0.74 ) }
    dend_87 { pt3dadd( 54.1344, -312.673, 26.4173, 0.74 ) }
    dend_87 { pt3dadd( 54.1512, -313.99, 26.0698, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_87 { pt3dadd( 54.1437, -314.437, 25.9871, 0.88 ) }
    dend_87 { pt3dadd( 54.1363, -315.013, 25.9182, 1.18 ) }
    dend_87 { pt3dadd( 54.1355, -315.081, 25.9132, 1.18 ) }
    dend_87 { pt3dadd( 54.1689, -316.288, 25.8074, 1.18 ) }
    dend_87 { pt3dadd( 54.2518, -317.28, 25.7222, 1.18 ) }
    dend_87 { pt3dadd( 54.3832, -318.083, 25.6707, 0.52 ) }
    dend_87 { pt3dadd( 54.6558, -319.133, 25.5644, 0.52 ) }
    dend_87 { pt3dadd( 54.6924, -319.226, 25.5514, 0.52 ) }
    dend_87 { pt3dadd( 55.3486, -320.458, 25.2842, 0.52 ) }
    dend_87 { pt3dadd( 55.7194, -320.976, 25.1193, 0.88 ) }
    dend_87 { pt3dadd( 56.2267, -321.575, 24.8769, 1.18 ) }
    dend_87 { pt3dadd( 56.2858, -321.641, 24.8499, 1.18 ) }
    dend_87 { pt3dadd( 56.8518, -322.294, 24.6082, 1.18 ) }
    dend_87 { pt3dadd( 57.2858, -322.931, 24.4145, 0.66 ) }
    dend_87 { pt3dadd( 57.3535, -323.061, 24.3828, 0.66 ) }
    dend_87 { pt3dadd( 57.5855, -323.671, 24.2365, 0.66 ) }
    dend_87 { pt3dadd( 57.8567, -324.673, 23.9307, 0.66 ) }
    dend_87 { pt3dadd( 57.9008, -324.875, 23.8633, 0.66 ) }
    dend_87 { pt3dadd( 58.1806, -326.513, 23.2841, 0.66 ) }
    dend_87 { pt3dadd( 58.265, -327.109, 23.0748, 1.18 ) }
    dend_87 { pt3dadd( 58.3652, -327.913, 22.7735, 1.47 ) }
    dend_87 { pt3dadd( 58.4827, -329.405, 22.1241, 1.77 ) }
    dend_87 { pt3dadd( 58.5082, -329.758, 21.9571, 2.06 ) }
    dend_87 { pt3dadd( 58.5153, -329.841, 21.9172, 2.06 ) }
    dend_87 { pt3dadd( 58.5808, -330.228, 21.7152, 2.06 ) }
    dend_87 { pt3dadd( 58.596, -330.287, 21.6832, 2.06 ) }
    dend_87 { pt3dadd( 59.0905, -331.526, 21.0296, 0.37 ) }
    dend_87 { pt3dadd( 59.4923, -332.318, 20.676, 0.37 ) }
    dend_87 { pt3dadd( 59.5278, -332.386, 20.6476, 0.37 ) }
    dend_87 { pt3dadd( 60.1751, -333.607, 20.2517, 0.37 ) }
    dend_87 { pt3dadd( 60.2053, -333.668, 20.2384, 0.37 ) }
    dend_87 { pt3dadd( 60.5491, -334.463, 20.1532, 0.37 ) }
    dend_87 { pt3dadd( 60.7186, -334.941, 20.1625, 0.88 ) }
    dend_87 { pt3dadd( 60.8378, -335.49, 20.2744, 0.81 ) }
    dend_87 { pt3dadd( 60.9666, -336.456, 20.5907, 0.52 ) }
    dend_87 { pt3dadd( 61.0192, -337.3, 20.9543, 0.52 ) }
    dend_87 { pt3dadd( 61.0701, -337.823, 21.192, 0.88 ) }
    dend_87 { pt3dadd( 61.1375, -338.4, 21.4748, 0.88 ) }
    dend_87 { pt3dadd( 61.4581, -340.02, 22.348, 0.52 ) }
    dend_87 { pt3dadd( 61.6923, -340.812, 22.7774, 0.52 ) }
    dend_87 { pt3dadd( 61.7377, -340.938, 22.8416, 0.52 ) }
    dend_87 { pt3dadd( 62.1566, -341.96, 23.3288, 0.52 ) }
    dend_87 { pt3dadd( 62.189, -342.038, 23.3603, 0.52 ) }
    dend_87 { pt3dadd( 62.721, -343.34, 23.7829, 0.52 ) }
    dend_87 { pt3dadd( 63.0525, -344.224, 23.9175, 0.52 ) }
    dend_87 { pt3dadd( 63.2185, -344.771, 23.9637, 0.96 ) }
    dend_87 { pt3dadd( 63.3955, -345.567, 23.984, 1.18 ) }
    dend_87 { pt3dadd( 63.5055, -346.558, 23.9474, 1.18 ) }
    dend_87 { pt3dadd( 63.5097, -346.65, 23.937, 1.18 ) }
    dend_87 { pt3dadd( 63.3956, -347.809, 23.6436, 0.44 ) }
    dend_87 { pt3dadd( 63.1923, -348.684, 23.3702, 0.44 ) }
    dend_87 { pt3dadd( 63.1143, -348.898, 23.2947, 0.44 ) }
    dend_87 { pt3dadd( 62.8344, -349.398, 23.1217, 0.44 ) }
    dend_87 { pt3dadd( 62.7657, -349.506, 23.0938, 0.44 ) }
    dend_87 { pt3dadd( 62.3758, -350.161, 23.0001, 0.44 ) }
    dend_87 { pt3dadd( 62.3263, -350.255, 22.9971, 0.44 ) }
    dend_87 { pt3dadd( 62.155, -350.656, 22.9751, 0.74 ) }
    dend_87 { pt3dadd( 61.9734, -351.36, 22.9294, 0.74 ) }
    dend_87 { pt3dadd( 61.874, -352.064, 22.8819, 0.74 ) }
    dend_87 { pt3dadd( 61.8649, -352.211, 22.8716, 0.74 ) }
    dend_87 { pt3dadd( 61.8705, -352.845, 22.8262, 0.88 ) }
    dend_87 { pt3dadd( 61.8741, -352.915, 22.8111, 0.88 ) }
    dend_87 { pt3dadd( 61.9699, -353.643, 22.5769, 1.11 ) }
    dend_87 { pt3dadd( 62.0853, -354.243, 22.3454, 1.11 ) }
    dend_87 { pt3dadd( 62.1375, -354.476, 22.2513, 1.11 ) }
    dend_87 { pt3dadd( 62.261, -354.933, 22.0739, 1.11 ) }
    dend_87 { pt3dadd( 62.7181, -356.448, 21.5513, 0.44 ) }
    dend_87 { pt3dadd( 63.089, -357.618, 21.1714, 0.44 ) }
    dend_87 { pt3dadd( 63.142, -357.794, 21.0959, 0.74 ) }
    dend_87 { pt3dadd( 63.3027, -358.351, 20.8202, 0.74 ) }
    dend_87 { pt3dadd( 63.4674, -359.063, 20.4488, 0.37 ) }
    dend_87 { pt3dadd( 63.6313, -360.099, 19.9041, 0.37 ) }
    dend_87 { pt3dadd( 63.6303, -360.169, 19.8655, 0.37 ) }
    dend_87 { pt3dadd( 63.3025, -361.678, 18.5826, 0.37 ) }
    dend_87 { pt3dadd( 63.2816, -361.741, 18.5195, 0.37 ) }
    dend_87 { pt3dadd( 63.1019, -362.111, 18.1155, 0.96 ) }
    dend_87 { pt3dadd( 62.8948, -362.429, 17.7208, 0.96 ) }
    dend_87 { pt3dadd( 62.3526, -363.157, 16.8055, 0.96 ) }
    dend_87 { pt3dadd( 61.6226, -364.149, 15.688, 0.52 ) }
    dend_87 { pt3dadd( 61.5913, -364.192, 15.6435, 0.52 ) }
    dend_87 { pt3dadd( 61.1747, -364.774, 15.0357, 0.52 ) }
    dend_87 { pt3dadd( 60.1138, -366.319, 13.436, 0.52 ) }
    dend_87 { pt3dadd( 59.7893, -366.824, 12.9205, 0.52 ) }
    dend_87 { pt3dadd( 59.5364, -367.268, 12.5233, 1.18 ) }
    dend_87 { pt3dadd( 59.1456, -368.094, 11.9003, 1.18 ) }
    dend_87 { pt3dadd( 59.1281, -368.141, 11.8676, 1.18 ) }
    dend_87 { pt3dadd( 59.0383, -368.522, 11.6256, 1.18 ) }
    dend_87 { pt3dadd( 59.012, -369.505, 11.1867, 0.59 ) }
    dend_87 { pt3dadd( 59.0765, -370.371, 10.828, 0.59 ) }
    dend_87 { pt3dadd( 59.1795, -371.142, 10.5738, 0.59 ) }
    dend_87 { pt3dadd( 59.2107, -371.34, 10.5362, 0.59 ) }
    dend_87 { pt3dadd( 59.2968, -371.983, 10.4645, 0.59 ) }
    dend_87 { pt3dadd( 59.4451, -373.389, 10.4063, 0.59 ) }
    dend_87 { pt3dadd( 59.4564, -373.536, 10.4115, 0.59 ) }
    dend_87 { pt3dadd( 59.4862, -374.784, 10.4949, 0.59 ) }
    dend_87 { pt3dadd( 59.4489, -375.922, 10.6022, 0.59 ) }
    dend_87 { pt3dadd( 59.3795, -376.663, 10.6115, 0.59 ) }
    dend_87 { pt3dadd( 59.2995, -377.077, 10.5837, 1.25 ) }
    dend_87 { pt3dadd( 59.0709, -377.814, 10.4512, 1.25 ) }
    dend_87 { pt3dadd( 58.7969, -378.705, 10.2085, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_87 { pt3dadd( 58.7764, -378.769, 10.1837, 1.25 ) }
    dend_87 { pt3dadd( 58.2904, -380.637, 9.20413, 0.44 ) }
    dend_87 { pt3dadd( 58.1225, -381.536, 8.67223, 0.44 ) }
    dend_87 { pt3dadd( 58.1161, -381.595, 8.63566, 0.44 ) }
    dend_87 { pt3dadd( 58.1147, -382.808, 7.87629, 0.44 ) }
    dend_87 { pt3dadd( 58.1249, -382.872, 7.83196, 0.44 ) }
    dend_87 { pt3dadd( 58.3825, -383.686, 7.30747, 0.44 ) }
    dend_87 { pt3dadd( 58.4104, -383.741, 7.27635, 0.44 ) }
    dend_87 { pt3dadd( 58.5605, -383.965, 7.13597, 1.18 ) }
    dend_87 { pt3dadd( 58.9472, -384.525, 6.80304, 1.77 ) }
    dend_87 { pt3dadd( 59.7434, -385.617, 6.16161, 1.99 ) }
    dend_87 { pt3dadd( 60.1207, -386.168, 5.90024, 1.99 ) }
    dend_87 { pt3dadd( 60.1767, -386.263, 5.86849, 1.99 ) }
    dend_87 { pt3dadd( 60.5952, -387.05, 5.65434, 0.74 ) }
    dend_87 { pt3dadd( 60.9652, -387.95, 5.4197, 0.74 ) }
    dend_87 { pt3dadd( 61.0106, -388.108, 5.38454, 0.74 ) }
    dend_87 { pt3dadd( 61.0503, -388.867, 5.26899, 0.52 ) }
    dend_87 { pt3dadd( 60.8929, -389.774, 5.08847, 0.52 ) }
    dend_87 { pt3dadd( 60.873, -389.839, 5.06916, 0.52 ) }
    dend_87 { pt3dadd( 60.3809, -390.904, 4.65113, 0.52 ) }
    dend_87 { pt3dadd( 60.3259, -391.02, 4.59834, 0.52 ) }
    dend_87 { pt3dadd( 59.7731, -392.272, 3.9947, 0.52 ) }
    dend_87 { pt3dadd( 59.7527, -392.331, 3.96424, 0.52 ) }
    dend_87 { pt3dadd( 59.6933, -393.388, 3.44871, 0.52 ) }
    dend_87 { pt3dadd( 59.7202, -393.457, 3.42309, 0.52 ) }
    dend_87 { pt3dadd( 60.3032, -394.261, 3.21939, 0.52 ) }
    dend_87 { pt3dadd( 60.3498, -394.312, 3.20938, 0.52 ) }
    dend_87 { pt3dadd( 60.8597, -394.795, 3.18686, 0.81 ) }
    dend_87 { pt3dadd( 61.3049, -395.23, 3.22951, 1.18 ) }
    dend_87 { pt3dadd( 61.7435, -395.678, 3.34663, 1.4 ) }
    dend_87 { pt3dadd( 62.019, -395.981, 3.43901, 1.18 ) }
    dend_87 { pt3dadd( 62.4298, -396.601, 3.64079, 0.59 ) }
    dend_87 { pt3dadd( 62.7271, -397.487, 3.88738, 0.44 ) }
    dend_87 { pt3dadd( 62.7525, -397.695, 3.93886, 0.44 ) }
    dend_87 { pt3dadd( 62.7388, -398.39, 4.08665, 0.44 ) }
    dend_87 { pt3dadd( 62.7126, -398.594, 4.12016, 0.44 ) }
    dend_87 { pt3dadd( 62.4728, -399.878, 4.27179, 0.44 ) }
    dend_87 { pt3dadd( 62.2224, -401.026, 4.33641, 0.44 ) }
    dend_87 { pt3dadd( 62.1703, -401.297, 4.33641, 0.44 ) }
    dend_87 { pt3dadd( 62.1122, -401.646, 4.33641, 0.81 ) }
    dend_87 { pt3dadd( 61.9909, -402.501, 4.33641, 0.81 ) }
    dend_87 { pt3dadd( 61.9827, -402.591, 4.33641, 0.81 ) }
    dend_87 { pt3dadd( 61.981, -403.889, 4.33641, 0.81 ) }
    dend_87 { pt3dadd( 62.0052, -404.459, 4.33641, 1.25 ) }
    dend_87 { pt3dadd( 62.0163, -404.849, 4.33641, 1.62 ) }
    dend_87 { pt3dadd( 62.0211, -404.928, 4.33641, 1.62 ) }
    // Section: dend_74, id: dend_74, parent: dend_58 (entry count 46/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -15.3585, 67.3184, -20.5697, 1.03 ) }
    dend_74 { pt3dadd( -15.4944, 67.4867, -20.8913, 1.03 ) }
    dend_74 { pt3dadd( -15.7863, 67.7874, -21.4406, 1.03 ) }
    dend_74 { pt3dadd( -16.3957, 68.3692, -22.4833, 0.96 ) }
    dend_74 { pt3dadd( -17.4351, 69.2749, -24.0711, 0.96 ) }
    dend_74 { pt3dadd( -17.9337, 69.6505, -24.7311, 0.96 ) }
    dend_74 { pt3dadd( -18.7157, 70.1112, -25.57, 0.96 ) }
    dend_74 { pt3dadd( -19.5392, 70.4235, -26.1826, 0.81 ) }
    dend_74 { pt3dadd( -19.6002, 70.437, -26.2157, 0.81 ) }
    dend_74 { pt3dadd( -20.091, 70.5068, -26.3911, 0.81 ) }
    dend_74 { pt3dadd( -20.8589, 70.5998, -26.5873, 0.81 ) }
    dend_74 { pt3dadd( -22.1299, 70.7536, -26.9946, 0.81 ) }
    dend_74 { pt3dadd( -23.5857, 70.9934, -27.5287, 0.81 ) }
    dend_74 { pt3dadd( -24.586, 71.2529, -27.907, 0.52 ) }
    dend_74 { pt3dadd( -25.1104, 71.4538, -28.1564, 0.52 ) }
    dend_74 { pt3dadd( -25.7495, 71.8037, -28.522, 0.52 ) }
    dend_74 { pt3dadd( -26.6091, 72.4422, -29.1044, 0.52 ) }
    dend_74 { pt3dadd( -27.0193, 72.8045, -29.3881, 0.81 ) }
    dend_74 { pt3dadd( -27.5069, 73.2573, -29.7009, 1.03 ) }
    dend_74 { pt3dadd( -28.2496, 73.8357, -30.0216, 1.55 ) }
    dend_74 { pt3dadd( -28.8974, 74.2159, -30.2892, 1.55 ) }
    dend_74 { pt3dadd( -28.9654, 74.2443, -30.3214, 1.55 ) }
    dend_74 { pt3dadd( -30.1838, 74.6228, -30.9141, 1.55 ) }
    dend_74 { pt3dadd( -30.2445, 74.6377, -30.9469, 1.55 ) }
    dend_74 { pt3dadd( -31.3297, 74.8506, -31.5656, 1.55 ) }
    dend_74 { pt3dadd( -33.0072, 75.1263, -32.5526, 1.55 ) }
    dend_74 { pt3dadd( -34.4106, 75.3557, -33.528, 0.88 ) }
    dend_74 { pt3dadd( -34.6937, 75.4077, -33.7521, 0.81 ) }
    dend_74 { pt3dadd( -35.0738, 75.4817, -34.1018, 0.52 ) }
    dend_74 { pt3dadd( -35.4328, 75.5511, -34.4701, 0.52 ) }
    dend_74 { pt3dadd( -35.4863, 75.5618, -34.5295, 0.52 ) }
    dend_74 { pt3dadd( -36.3144, 75.7838, -35.3116, 0.52 ) }
    dend_74 { pt3dadd( -36.4274, 75.8195, -35.401, 1.18 ) }
    dend_74 { pt3dadd( -36.8702, 75.9596, -35.7973, 1.18 ) }
    dend_74 { pt3dadd( -38.0544, 76.2802, -36.8086, 0.74 ) }
    dend_74 { pt3dadd( -38.6146, 76.4185, -37.267, 1.4 ) }
    dend_74 { pt3dadd( -39.1223, 76.5366, -37.6222, 1.4 ) }
    dend_74 { pt3dadd( -39.3638, 76.5822, -37.7809, 1.4 ) }
    dend_74 { pt3dadd( -40.7548, 76.7855, -38.8572, 1.4 ) }
    dend_74 { pt3dadd( -41.5515, 76.8634, -39.6279, 0.37 ) }
    dend_74 { pt3dadd( -41.5993, 76.8666, -39.6799, 0.37 ) }
    dend_74 { pt3dadd( -42.3117, 76.907, -40.5387, 0.37 ) }
    dend_74 { pt3dadd( -43.0415, 76.9954, -41.4353, 0.37 ) }
    dend_74 { pt3dadd( -43.9509, 77.1687, -42.5484, 0.37 ) }
    dend_74 { pt3dadd( -44.6584, 77.3963, -43.3629, 0.37 ) }
    dend_74 { pt3dadd( -44.987, 77.5568, -43.756, 0.37 ) }
    dend_74 { pt3dadd( -45.4977, 77.8375, -44.2994, 0.37 ) }
    dend_74 { pt3dadd( -46.2422, 78.2773, -45.0498, 0.37 ) }
    dend_74 { pt3dadd( -46.2927, 78.31, -45.0901, 0.37 ) }
    dend_74 { pt3dadd( -46.8398, 78.6842, -45.5231, 0.37 ) }
    dend_74 { pt3dadd( -47.5649, 79.181, -46.392, 0.37 ) }
    dend_74 { pt3dadd( -47.8817, 79.3836, -46.9536, 0.37 ) }
    dend_74 { pt3dadd( -48.1627, 79.6513, -47.7971, 0.37 ) }
    dend_74 { pt3dadd( -48.1804, 79.682, -47.8898, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_74 { pt3dadd( -48.3387, 80.1526, -49.0967, 0.81 ) }
    dend_74 { pt3dadd( -48.4536, 80.7799, -50.5522, 0.74 ) }
    dend_74 { pt3dadd( -48.4566, 80.8175, -50.623, 0.74 ) }
    dend_74 { pt3dadd( -48.5639, 81.9614, -52.4077, 0.52 ) }
    dend_74 { pt3dadd( -48.7015, 82.915, -53.7214, 1.77 ) }
    dend_74 { pt3dadd( -48.7683, 83.252, -54.1542, 1.77 ) }
    dend_74 { pt3dadd( -48.7956, 83.3513, -54.265, 1.77 ) }
    dend_74 { pt3dadd( -48.9988, 83.9145, -54.7674, 2.06 ) }
    dend_74 { pt3dadd( -49.2603, 84.5348, -55.2714, 2.06 ) }
    dend_74 { pt3dadd( -49.923, 85.7533, -56.1708, 2.06 ) }
    dend_74 { pt3dadd( -49.972, 85.8293, -56.2275, 2.06 ) }
    dend_74 { pt3dadd( -50.2418, 86.2129, -56.5465, 2.06 ) }
    dend_74 { pt3dadd( -50.9687, 87.1362, -57.4148, 0.52 ) }
    dend_74 { pt3dadd( -51.4146, 87.6245, -57.9502, 0.52 ) }
    dend_74 { pt3dadd( -51.7546, 87.9331, -58.3125, 0.44 ) }
    dend_74 { pt3dadd( -52.2254, 88.2574, -58.7172, 0.44 ) }
    dend_74 { pt3dadd( -52.2734, 88.2851, -58.7607, 0.44 ) }
    dend_74 { pt3dadd( -52.7263, 88.5071, -59.1783, 0.37 ) }
    dend_74 { pt3dadd( -52.7647, 88.5289, -59.2324, 0.37 ) }
    dend_74 { pt3dadd( -53.0605, 88.7594, -59.7047, 0.37 ) }
    dend_74 { pt3dadd( -53.6537, 89.3687, -60.7171, 0.37 ) }
    dend_74 { pt3dadd( -53.7049, 89.4385, -60.8402, 0.37 ) }
    dend_74 { pt3dadd( -53.884, 89.7181, -61.3266, 1.03 ) }
    dend_74 { pt3dadd( -54.842, 91.3829, -64.1888, 1.69 ) }
    dend_74 { pt3dadd( -55.0233, 91.6803, -64.7102, 2.5 ) }
    dend_74 { pt3dadd( -55.2664, 92.0432, -65.3607, 2.73 ) }
    dend_74 { pt3dadd( -56.5597, 93.7043, -68.5737, 0.52 ) }
    dend_74 { pt3dadd( -56.7931, 93.9683, -69.0932, 0.52 ) }
    dend_74 { pt3dadd( -56.8169, 93.9926, -69.1434, 0.52 ) }
    dend_74 { pt3dadd( -57.2792, 94.4274, -70.0089, 0.52 ) }
    dend_74 { pt3dadd( -57.658, 94.7306, -70.6441, 0.52 ) }
    dend_74 { pt3dadd( -58.7942, 95.5178, -72.3086, 1.18 ) }
    dend_74 { pt3dadd( -59.4135, 95.9081, -73.0192, 1.4 ) }
    dend_74 { pt3dadd( -60.3914, 96.5371, -74.167, 1.25 ) }
    dend_74 { pt3dadd( -61.1881, 97.0863, -75.1225, 0.37 ) }
    dend_74 { pt3dadd( -61.7628, 97.564, -75.9365, 0.37 ) }
    dend_74 { pt3dadd( -61.8364, 97.6348, -76.047, 0.37 ) }
    dend_74 { pt3dadd( -62.1175, 97.9178, -76.4544, 0.37 ) }
    dend_74 { pt3dadd( -62.2879, 98.0871, -76.7528, 0.74 ) }
    dend_74 { pt3dadd( -62.3183, 98.1208, -76.819, 0.74 ) }
    dend_74 { pt3dadd( -61.9766, 97.7978, -75.1486, 0.74 ) }
    dend_74 { pt3dadd( -61.8689, 97.6902, -74.4398, 0.29 ) }
    dend_74 { pt3dadd( -61.6393, 97.4882, -72.6286, 0.29 ) }
    dend_74 { pt3dadd( -61.4952, 97.3973, -71.1987, 0.29 ) }
    dend_74 { pt3dadd( -61.3975, 97.3729, -70.006, 0.29 ) }
    dend_74 { pt3dadd( -60.7532, 97.6029, -60.3068, 0.29 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 46/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -15.3585, 67.3184, -20.5697, 0.88 ) }
    dend_59 { pt3dadd( -15.1072, 68.9035, -19.9467, 0.88 ) }
    dend_59 { pt3dadd( -15.0707, 69.7323, -19.669, 0.88 ) }
    dend_59 { pt3dadd( -15.0805, 69.8859, -19.6245, 0.88 ) }
    dend_59 { pt3dadd( -15.1736, 70.3681, -19.5093, 1.11 ) }
    dend_59 { pt3dadd( -15.2565, 70.6817, -19.4447, 1.11 ) }
    dend_59 { pt3dadd( -15.2838, 70.7609, -19.4377, 1.11 ) }
    dend_59 { pt3dadd( -15.6486, 71.3803, -19.5585, 1.11 ) }
    dend_59 { pt3dadd( -15.8142, 71.6416, -19.6256, 1.11 ) }
    dend_59 { pt3dadd( -16.1018, 72.1238, -19.7613, 1.11 ) }
    dend_59 { pt3dadd( -16.1619, 72.255, -19.7957, 1.11 ) }
    dend_59 { pt3dadd( -16.4754, 73.1683, -20.0194, 1.03 ) }
    dend_59 { pt3dadd( -16.521, 73.366, -20.0618, 1.03 ) }
    dend_59 { pt3dadd( -16.632, 74.2344, -20.2274, 1.03 ) }
    dend_59 { pt3dadd( -16.6377, 74.3773, -20.2603, 1.03 ) }
    dend_59 { pt3dadd( -16.6047, 75.562, -20.556, 1.03 ) }
    dend_59 { pt3dadd( -16.6006, 75.6197, -20.5696, 1.03 ) }
    dend_59 { pt3dadd( -16.5223, 76.3129, -20.7151, 1.03 ) }
    dend_59 { pt3dadd( -16.5089, 76.4561, -20.7488, 1.03 ) }
    dend_59 { pt3dadd( -16.4655, 77.5532, -21.0228, 1.03 ) }
    dend_59 { pt3dadd( -16.4775, 77.7639, -21.0723, 1.03 ) }
    dend_59 { pt3dadd( -16.6599, 78.7271, -21.2165, 0.88 ) }
    dend_59 { pt3dadd( -16.6843, 78.8038, -21.2202, 0.88 ) }
    dend_59 { pt3dadd( -16.8988, 79.3224, -21.2002, 1.18 ) }
    dend_59 { pt3dadd( -17.2918, 80.1646, -21.1086, 1.18 ) }
    dend_59 { pt3dadd( -17.5725, 80.7974, -20.9954, 1.18 ) }
    dend_59 { pt3dadd( -17.9211, 81.6898, -20.8637, 0.74 ) }
    dend_59 { pt3dadd( -18.1862, 82.4407, -20.7684, 0.74 ) }
    dend_59 { pt3dadd( -18.3503, 83.0946, -20.75, 0.74 ) }
    dend_59 { pt3dadd( -18.3609, 83.1625, -20.7553, 0.74 ) }
    dend_59 { pt3dadd( -18.4555, 84.2933, -20.9553, 0.74 ) }
    dend_59 { pt3dadd( -18.5067, 85.0668, -21.1513, 0.74 ) }
    dend_59 { pt3dadd( -18.5126, 85.132, -21.1733, 0.74 ) }
    dend_59 { pt3dadd( -18.6547, 86.2516, -21.5823, 1.11 ) }
    dend_59 { pt3dadd( -18.8335, 87.1221, -21.8942, 1.11 ) }
    dend_59 { pt3dadd( -18.8893, 87.3083, -21.9553, 1.11 ) }
    dend_59 { pt3dadd( -19.2354, 88.127, -22.1837, 1.11 ) }
    dend_59 { pt3dadd( -19.576, 88.8468, -22.3297, 1.47 ) }
    dend_59 { pt3dadd( -19.6111, 88.9171, -22.339, 1.47 ) }
    dend_59 { pt3dadd( -19.9999, 89.6788, -22.3802, 1.77 ) }
    dend_59 { pt3dadd( -20.2776, 90.2291, -22.4004, 2.06 ) }
    dend_59 { pt3dadd( -20.697, 91.0548, -22.4145, 2.14 ) }
    dend_59 { pt3dadd( -20.9911, 91.6462, -22.4119, 2.14 ) }
    dend_59 { pt3dadd( -21.404, 92.4918, -22.3901, 1.99 ) }
    dend_59 { pt3dadd( -21.65, 93.0266, -22.3775, 1.77 ) }
    dend_59 { pt3dadd( -21.9174, 93.6433, -22.3638, 1.11 ) }
    dend_59 { pt3dadd( -22.2491, 94.4841, -22.3476, 1.03 ) }
    dend_59 { pt3dadd( -22.5909, 95.4529, -22.3328, 1.03 ) }
    dend_59 { pt3dadd( -22.6356, 95.5938, -22.3315, 1.03 ) }
    dend_59 { pt3dadd( -23.0025, 96.8118, -22.3605, 1.03 ) }
    dend_59 { pt3dadd( -23.0559, 96.9666, -22.3674, 1.03 ) }
    dend_59 { pt3dadd( -23.1912, 97.3309, -22.3911, 1.03 ) }
    dend_59 { pt3dadd( -23.3683, 97.725, -22.4274, 0.59 ) }
    dend_59 { pt3dadd( -23.8703, 98.5472, -22.5293, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_59 { pt3dadd( -24.311, 99.1077, -22.609, 0.44 ) }
    dend_59 { pt3dadd( -24.9686, 99.773, -22.7134, 0.44 ) }
    dend_59 { pt3dadd( -25.1596, 99.9563, -22.7403, 0.44 ) }
    dend_59 { pt3dadd( -25.4314, 100.227, -22.7733, 0.44 ) }
    dend_59 { pt3dadd( -25.8148, 100.666, -22.8097, 0.81 ) }
    dend_59 { pt3dadd( -26.1777, 101.223, -22.8304, 0.96 ) }
    dend_59 { pt3dadd( -26.462, 101.845, -22.8304, 1.18 ) }
    dend_59 { pt3dadd( -26.48, 101.912, -22.8307, 1.18 ) }
    dend_59 { pt3dadd( -26.6134, 102.701, -22.8374, 1.33 ) }
    dend_59 { pt3dadd( -26.6704, 103.372, -22.8257, 1.47 ) }
    dend_59 { pt3dadd( -26.6747, 103.878, -22.8051, 1.77 ) }
    dend_59 { pt3dadd( -26.6732, 103.957, -22.8006, 1.77 ) }
    dend_59 { pt3dadd( -26.6608, 104.586, -22.7565, 1.47 ) }
    dend_59 { pt3dadd( -26.6774, 105.19, -22.6933, 1.4 ) }
    dend_59 { pt3dadd( -26.7305, 105.749, -22.6193, 1.03 ) }
    dend_59 { pt3dadd( -26.8428, 106.376, -22.5274, 0.59 ) }
    dend_59 { pt3dadd( -27.1015, 107.389, -22.3772, 0.59 ) }
    dend_59 { pt3dadd( -27.1213, 107.454, -22.3635, 0.59 ) }
    dend_59 { pt3dadd( -27.4404, 108.355, -22.129, 0.59 ) }
    dend_59 { pt3dadd( -27.655, 108.957, -21.953, 1.03 ) }
    dend_59 { pt3dadd( -27.8421, 109.495, -21.7547, 1.33 ) }
    dend_59 { pt3dadd( -28.0008, 109.982, -21.5305, 1.33 ) }
    dend_59 { pt3dadd( -28.2374, 110.857, -21.0557, 1.25 ) }
    dend_59 { pt3dadd( -28.3698, 111.421, -20.7405, 0.74 ) }
    dend_59 { pt3dadd( -28.4522, 111.791, -20.5309, 0.66 ) }
    dend_59 { pt3dadd( -28.6459, 112.57, -20.0942, 0.66 ) }
    dend_59 { pt3dadd( -28.7352, 112.876, -19.9319, 0.66 ) }
    dend_59 { pt3dadd( -28.7641, 112.946, -19.9014, 0.66 ) }
    dend_59 { pt3dadd( -29.0928, 113.505, -19.7434, 0.44 ) }
    dend_59 { pt3dadd( -29.5423, 114.052, -19.6265, 0.44 ) }
    dend_59 { pt3dadd( -29.8714, 114.371, -19.5943, 0.74 ) }
    dend_59 { pt3dadd( -29.9244, 114.417, -19.5943, 0.74 ) }
    dend_59 { pt3dadd( -30.2538, 114.681, -19.5943, 0.88 ) }
    dend_59 { pt3dadd( -30.4208, 114.811, -19.5943, 0.88 ) }
    dend_59 { pt3dadd( -30.9997, 115.285, -19.5943, 1.18 ) }
    dend_59 { pt3dadd( -31.7863, 115.981, -19.5943, 1.4 ) }
    dend_59 { pt3dadd( -32.2813, 116.455, -19.5943, 1.4 ) }
    dend_59 { pt3dadd( -32.3295, 116.506, -19.5943, 1.4 ) }
    dend_59 { pt3dadd( -32.7311, 116.987, -19.6046, 1.4 ) }
    dend_59 { pt3dadd( -33.1903, 117.652, -19.6334, 1.4 ) }
    dend_59 { pt3dadd( -33.551, 118.275, -19.671, 1.4 ) }
    dend_59 { pt3dadd( -33.6114, 118.402, -19.6798, 1.4 ) }
    dend_59 { pt3dadd( -33.839, 118.93, -19.719, 1.4 ) }
    dend_59 { pt3dadd( -34.1174, 119.598, -19.7943, 0.88 ) }
    dend_59 { pt3dadd( -34.5805, 120.682, -19.9532, 0.88 ) }
    dend_59 { pt3dadd( -34.6093, 120.746, -19.9645, 0.88 ) }
    dend_59 { pt3dadd( -35.1017, 121.668, -20.1463, 0.88 ) }
    dend_59 { pt3dadd( -35.1489, 121.733, -20.1599, 0.88 ) }
    dend_59 { pt3dadd( -35.6795, 122.227, -20.3376, 0.88 ) }
    dend_59 { pt3dadd( -36.2905, 122.628, -20.5551, 1.18 ) }
    dend_59 { pt3dadd( -36.3534, 122.656, -20.5782, 1.18 ) }
    dend_59 { pt3dadd( -37.2921, 122.958, -20.9094, 1.33 ) }
    dend_59 { pt3dadd( -38.182, 123.132, -21.1963, 1.55 ) }
    dend_59 { pt3dadd( -39.4142, 123.294, -21.595, 1.55 ) }
    dend_59 { pt3dadd( -39.4815, 123.3, -21.6156, 1.55 ) }
    dend_59 { pt3dadd( -40.2626, 123.344, -21.8664, 1.11 ) }
    dend_59 { pt3dadd( -40.7602, 123.384, -22.0235, 0.81 ) }
    dend_59 { pt3dadd( -41.5571, 123.476, -22.2724, 0.59 ) }
    dend_59 { pt3dadd( -42.517, 123.673, -22.5236, 0.52 ) }
    dend_59 { pt3dadd( -43.092, 123.842, -22.6267, 0.52 ) }
    dend_59 { pt3dadd( -43.1561, 123.867, -22.642, 0.52 ) }
    dend_59 { pt3dadd( -43.7852, 124.202, -22.8353, 0.52 ) }
    dend_59 { pt3dadd( -43.9973, 124.344, -22.9118, 0.52 ) }
    dend_59 { pt3dadd( -44.6757, 124.91, -23.1854, 0.52 ) }
    dend_59 { pt3dadd( -44.7739, 125.005, -23.2241, 0.52 ) }
    dend_59 { pt3dadd( -45.4751, 125.704, -23.5363, 0.81 ) }
    dend_59 { pt3dadd( -45.5958, 125.82, -23.5889, 0.81 ) }
    dend_59 { pt3dadd( -45.652, 125.87, -23.613, 0.81 ) }
    dend_59 { pt3dadd( -45.8453, 126.028, -23.6824, 1.03 ) }
    dend_59 { pt3dadd( -46.0493, 126.179, -23.7379, 1.03 ) }
    dend_59 { pt3dadd( -46.3541, 126.375, -23.7804, 1.03 ) }
    dend_59 { pt3dadd( -46.8534, 126.617, -23.7804, 1.03 ) }
    dend_59 { pt3dadd( -47.1279, 126.716, -23.7804, 1.03 ) }
    dend_59 { pt3dadd( -47.5146, 126.827, -23.7804, 1.03 ) }
    dend_59 { pt3dadd( -47.5765, 126.839, -23.7804, 1.03 ) }
    dend_59 { pt3dadd( -48.0325, 126.9, -23.7804, 0.88 ) }
    dend_59 { pt3dadd( -48.6338, 126.943, -23.8855, 0.59 ) }
    dend_59 { pt3dadd( -49.2704, 126.999, -24.0902, 0.59 ) }
    dend_59 { pt3dadd( -49.4541, 127.03, -24.1687, 0.59 ) }
    dend_59 { pt3dadd( -49.9383, 127.148, -24.41, 0.59 ) }
    dend_59 { pt3dadd( -50.1288, 127.209, -24.5091, 0.59 ) }
    dend_59 { pt3dadd( -51.5496, 127.773, -25.3232, 0.59 ) }
    dend_59 { pt3dadd( -52.125, 128.031, -25.6698, 0.96 ) }
    dend_59 { pt3dadd( -52.5643, 128.253, -25.9276, 1.33 ) }
    dend_59 { pt3dadd( -53.0831, 128.536, -26.2392, 1.77 ) }
    dend_59 { pt3dadd( -53.5886, 128.846, -26.5258, 1.77 ) }
    dend_59 { pt3dadd( -54.312, 129.317, -26.891, 0.88 ) }
    dend_59 { pt3dadd( -54.6179, 129.527, -27.0142, 0.74 ) }
    dend_59 { pt3dadd( -55.1244, 129.891, -27.235, 0.52 ) }
    dend_59 { pt3dadd( -55.7176, 130.379, -27.5364, 0.52 ) }
    dend_59 { pt3dadd( -56.3293, 130.982, -27.8959, 0.52 ) }
    dend_59 { pt3dadd( -56.4213, 131.088, -27.9525, 0.88 ) }
    dend_59 { pt3dadd( -56.4627, 131.139, -27.9753, 0.88 ) }
    dend_59 { pt3dadd( -56.8672, 131.645, -28.1816, 0.88 ) }
    dend_59 { pt3dadd( -57.551, 132.412, -28.4624, 1.18 ) }
    dend_59 { pt3dadd( -57.5989, 132.461, -28.4765, 1.18 ) }
    dend_59 { pt3dadd( -58.1054, 132.899, -28.5967, 1.33 ) }
    dend_59 { pt3dadd( -58.5765, 133.261, -28.6845, 1.33 ) }
    dend_59 { pt3dadd( -58.6836, 133.334, -28.6983, 1.33 ) }
    dend_59 { pt3dadd( -59.3262, 133.717, -28.7941, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_59 { pt3dadd( -59.4054, 133.762, -28.8055, 1.33 ) }
    dend_59 { pt3dadd( -60.2867, 134.259, -28.9667, 1.33 ) }
    dend_59 { pt3dadd( -60.3559, 134.297, -28.9812, 1.33 ) }
    dend_59 { pt3dadd( -60.966, 134.635, -29.1204, 1.33 ) }
    dend_59 { pt3dadd( -61.8368, 135.138, -29.3248, 0.37 ) }
    dend_59 { pt3dadd( -62.3814, 135.462, -29.4593, 0.37 ) }
    dend_59 { pt3dadd( -62.439, 135.498, -29.4773, 0.37 ) }
    dend_59 { pt3dadd( -63.2305, 136.034, -29.7824, 0.37 ) }
    dend_59 { pt3dadd( -63.3478, 136.12, -29.8325, 0.37 ) }
    dend_59 { pt3dadd( -63.6443, 136.39, -29.9841, 0.37 ) }
    dend_59 { pt3dadd( -63.6869, 136.442, -30.0089, 0.37 ) }
    dend_59 { pt3dadd( -63.9833, 137.204, -30.4553, 0.37 ) }
    dend_59 { pt3dadd( -63.9924, 137.381, -30.5679, 0.59 ) }
    dend_59 { pt3dadd( -63.9718, 137.457, -30.6132, 0.59 ) }
    dend_59 { pt3dadd( -63.7968, 137.943, -30.9226, 0.59 ) }
    dend_59 { pt3dadd( -63.7415, 138.084, -31.0082, 0.59 ) }
    dend_59 { pt3dadd( -63.515, 138.754, -31.3607, 0.59 ) }
    dend_59 { pt3dadd( -63.4991, 138.816, -31.3869, 0.59 ) }
    dend_59 { pt3dadd( -63.3877, 139.475, -31.6388, 0.59 ) }
    dend_59 { pt3dadd( -63.314, 140.33, -31.9202, 0.59 ) }
    dend_59 { pt3dadd( -63.3069, 140.821, -32.061, 0.96 ) }
    dend_59 { pt3dadd( -63.3344, 141.38, -32.1912, 1.18 ) }
    dend_59 { pt3dadd( -63.4075, 142.024, -32.3043, 1.4 ) }
    dend_59 { pt3dadd( -63.4697, 142.431, -32.3596, 1.4 ) }
    dend_59 { pt3dadd( -63.5965, 143.002, -32.4029, 1.18 ) }
    dend_59 { pt3dadd( -63.6139, 143.069, -32.4029, 1.18 ) }
    dend_59 { pt3dadd( -63.7774, 143.589, -32.4029, 1.18 ) }
    dend_59 { pt3dadd( -63.807, 143.664, -32.3961, 1.18 ) }
    dend_59 { pt3dadd( -64.1227, 144.248, -32.2919, 1.18 ) }
    dend_59 { pt3dadd( -64.5043, 144.849, -32.1504, 1.18 ) }
    dend_59 { pt3dadd( -64.5432, 144.907, -32.1353, 1.18 ) }
    dend_59 { pt3dadd( -64.9235, 145.489, -31.9908, 1.18 ) }
    dend_59 { pt3dadd( -65.4334, 146.299, -31.8036, 1.18 ) }
    dend_59 { pt3dadd( -65.7807, 146.893, -31.6901, 1.55 ) }
    dend_59 { pt3dadd( -66.0342, 147.346, -31.6168, 1.77 ) }
    dend_59 { pt3dadd( -66.3752, 148.063, -31.5182, 1.77 ) }
    dend_59 { pt3dadd( -66.6633, 148.845, -31.4389, 1.92 ) }
    dend_59 { pt3dadd( -66.8528, 149.557, -31.3931, 1.92 ) }
    dend_59 { pt3dadd( -67.1124, 150.717, -31.3615, 1.92 ) }
    dend_59 { pt3dadd( -67.1953, 151.168, -31.3478, 1.77 ) }
    dend_59 { pt3dadd( -67.3445, 152.082, -31.3165, 1.69 ) }
    dend_59 { pt3dadd( -67.5084, 153.438, -31.2624, 1.69 ) }
    dend_59 { pt3dadd( -67.5596, 154.304, -31.2221, 1.69 ) }
    // Section: dend_50, id: dend_50, parent: dend_2 (entry count 43/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 19.3035, 68.0582, -23.8783, 0.37 ) }
    dend_50 { pt3dadd( 19.7367, 70.7672, -19.7757, 0.37 ) }
    dend_50 { pt3dadd( 20.0578, 71.7141, -18.4366, 0.37 ) }
    dend_50 { pt3dadd( 20.3094, 72.2216, -17.7598, 0.37 ) }
    dend_50 { pt3dadd( 20.373, 72.3175, -17.64, 0.37 ) }
    dend_50 { pt3dadd( 20.7776, 72.7695, -17.1433, 0.37 ) }
    dend_50 { pt3dadd( 20.9536, 72.9353, -16.9799, 0.37 ) }
    dend_50 { pt3dadd( 22.1545, 73.5314, -16.898, 0.37 ) }
    dend_50 { pt3dadd( 22.221, 73.5535, -16.8902, 0.37 ) }
    dend_50 { pt3dadd( 22.5119, 73.6566, -16.8418, 0.66 ) }
    dend_50 { pt3dadd( 23.194, 74.0165, -16.6877, 0.66 ) }
    dend_50 { pt3dadd( 23.2446, 74.0583, -16.6631, 0.66 ) }
    dend_50 { pt3dadd( 23.9724, 74.9273, -16.0813, 0.66 ) }
    dend_50 { pt3dadd( 23.9944, 74.9726, -16.0503, 0.66 ) }
    dend_50 { pt3dadd( 24.1819, 75.4745, -15.6995, 0.88 ) }
    dend_50 { pt3dadd( 24.3523, 76.1341, -15.2657, 0.88 ) }
    dend_50 { pt3dadd( 24.5231, 77.2616, -14.4768, 0.88 ) }
    dend_50 { pt3dadd( 24.5406, 77.3844, -14.3905, 0.88 ) }
    dend_50 { pt3dadd( 24.6575, 78.1713, -13.8359, 0.88 ) }
    dend_50 { pt3dadd( 24.6885, 78.3084, -13.7356, 0.88 ) }
    dend_50 { pt3dadd( 24.9765, 79.2062, -13.0355, 0.88 ) }
    dend_50 { pt3dadd( 25.4001, 80.0941, -12.2911, 0.37 ) }
    dend_50 { pt3dadd( 25.6446, 80.4893, -12.0004, 0.29 ) }
    dend_50 { pt3dadd( 25.9003, 80.8436, -11.7265, 0.29 ) }
    dend_50 { pt3dadd( 26.0971, 81.0776, -11.5345, 0.29 ) }
    dend_50 { pt3dadd( 26.1352, 81.1271, -11.5034, 0.29 ) }
    dend_50 { pt3dadd( 26.617, 81.7229, -11.0549, 0.59 ) }
    dend_50 { pt3dadd( 27.0101, 82.1956, -10.6854, 0.88 ) }
    dend_50 { pt3dadd( 27.6432, 82.915, -10.0826, 1.33 ) }
    dend_50 { pt3dadd( 27.6875, 82.9633, -10.037, 1.33 ) }
    dend_50 { pt3dadd( 28.6873, 83.9868, -8.99495, 1.33 ) }
    dend_50 { pt3dadd( 30.0777, 85.2923, -7.6932, 0.96 ) }
    dend_50 { pt3dadd( 30.653, 85.7771, -7.26191, 1.55 ) }
    dend_50 { pt3dadd( 31.2184, 86.2148, -6.89347, 1.92 ) }
    dend_50 { pt3dadd( 32.3997, 87.0628, -6.24652, 1.4 ) }
    dend_50 { pt3dadd( 33.5883, 87.8764, -5.68456, 0.74 ) }
    dend_50 { pt3dadd( 34.992, 88.7856, -5.16589, 0.74 ) }
    dend_50 { pt3dadd( 36.3779, 89.7084, -4.86082, 0.66 ) }
    dend_50 { pt3dadd( 36.4354, 89.7476, -4.85139, 0.66 ) }
    dend_50 { pt3dadd( 36.9105, 90.0774, -4.80315, 0.66 ) }
    dend_50 { pt3dadd( 37.6254, 90.5102, -4.77415, 1.03 ) }
    dend_50 { pt3dadd( 38.2246, 90.805, -4.71798, 1.11 ) }
    dend_50 { pt3dadd( 38.2884, 90.8288, -4.69973, 1.11 ) }
    dend_50 { pt3dadd( 38.7121, 90.9532, -4.50427, 1.33 ) }
    dend_50 { pt3dadd( 38.7747, 90.9675, -4.47488, 1.33 ) }
    dend_50 { pt3dadd( 40.0755, 91.2006, -3.83123, 1.62 ) }
    dend_50 { pt3dadd( 40.4783, 91.2633, -3.64096, 1.92 ) }
    dend_50 { pt3dadd( 40.5493, 91.277, -3.60692, 1.92 ) }
    dend_50 { pt3dadd( 40.8043, 91.3634, -3.50042, 1.92 ) }
    dend_50 { pt3dadd( 40.999, 91.4704, -3.4362, 1.92 ) }
    dend_50 { pt3dadd( 41.2395, 91.6868, -3.37784, 1.62 ) }
    dend_50 { pt3dadd( 41.5695, 92.1631, -3.34667, 1.03 ) }
    dend_50 { pt3dadd( 41.7501, 92.5428, -3.3208, 0.81 ) }
    dend_50 { pt3dadd( 41.9925, 93.2305, -3.27333, 0.81 ) }
    dend_50 { pt3dadd( 42.1198, 93.6569, -3.24199, 0.52 ) }
    dend_50 { pt3dadd( 42.2769, 94.2424, -3.1969, 0.52 ) }
    dend_50 { pt3dadd( 42.2994, 94.3076, -3.1918, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_50 { pt3dadd( 42.6079, 94.8717, -3.1084, 0.52 ) }
    dend_50 { pt3dadd( 42.7121, 94.9813, -3.08374, 0.52 ) }
    dend_50 { pt3dadd( 43.2861, 95.3952, -2.96041, 0.74 ) }
    dend_50 { pt3dadd( 43.358, 95.4325, -2.94725, 0.74 ) }
    dend_50 { pt3dadd( 44.1111, 95.7396, -2.40608, 0.74 ) }
    dend_50 { pt3dadd( 44.8894, 96.0694, -1.6333, 0.74 ) }
    dend_50 { pt3dadd( 45.3588, 96.2771, -1.12669, 0.96 ) }
    dend_50 { pt3dadd( 45.4456, 96.3184, -1.02339, 0.96 ) }
    dend_50 { pt3dadd( 45.8593, 96.5421, -0.476917, 0.96 ) }
    dend_50 { pt3dadd( 48.2635, 98.0481, 2.9027, 0.52 ) }
    dend_50 { pt3dadd( 48.6636, 98.3553, 3.5264, 0.52 ) }
    dend_50 { pt3dadd( 49.0536, 98.7307, 4.13252, 0.74 ) }
    dend_50 { pt3dadd( 49.0837, 98.7629, 4.17259, 0.74 ) }
    dend_50 { pt3dadd( 49.4359, 99.1574, 4.5054, 1.11 ) }
    dend_50 { pt3dadd( 49.7927, 99.5694, 4.65859, 1.55 ) }
    dend_50 { pt3dadd( 50.1717, 100.004, 4.6326, 1.62 ) }
    dend_50 { pt3dadd( 50.7623, 100.649, 4.62096, 1.62 ) }
    dend_50 { pt3dadd( 51.3561, 101.302, 4.70022, 0.74 ) }
    dend_50 { pt3dadd( 51.6553, 101.637, 4.76345, 0.74 ) }
    dend_50 { pt3dadd( 51.9757, 102.037, 4.86467, 0.59 ) }
    dend_50 { pt3dadd( 52.4234, 102.679, 5.10797, 0.59 ) }
    dend_50 { pt3dadd( 52.454, 102.724, 5.12991, 0.59 ) }
    dend_50 { pt3dadd( 53.0732, 103.664, 5.66404, 0.59 ) }
    dend_50 { pt3dadd( 53.1105, 103.714, 5.69596, 0.59 ) }
    dend_50 { pt3dadd( 53.6985, 104.397, 6.16877, 0.59 ) }
    dend_50 { pt3dadd( 54.433, 105.058, 6.66051, 0.59 ) }
    dend_50 { pt3dadd( 55.0558, 105.456, 6.92062, 0.59 ) }
    dend_50 { pt3dadd( 55.4187, 105.637, 7.00259, 1.03 ) }
    dend_50 { pt3dadd( 56.1738, 105.923, 7.03042, 1.03 ) }
    dend_50 { pt3dadd( 56.2525, 105.947, 7.02813, 1.03 ) }
    dend_50 { pt3dadd( 57.0346, 106.134, 6.95204, 1.03 ) }
    dend_50 { pt3dadd( 58.0489, 106.398, 6.7745, 1.03 ) }
    dend_50 { pt3dadd( 58.1146, 106.418, 6.7624, 1.03 ) }
    dend_50 { pt3dadd( 58.9488, 106.715, 6.622, 1.03 ) }
    dend_50 { pt3dadd( 59.1603, 106.798, 6.57972, 1.03 ) }
    dend_50 { pt3dadd( 59.8149, 107.063, 6.44216, 1.03 ) }
    dend_50 { pt3dadd( 60.2438, 107.241, 6.35507, 1.25 ) }
    dend_50 { pt3dadd( 60.3435, 107.279, 6.33921, 1.25 ) }
    dend_50 { pt3dadd( 61.2177, 107.571, 6.23039, 1.25 ) }
    dend_50 { pt3dadd( 62.2493, 107.916, 6.20266, 0.96 ) }
    dend_50 { pt3dadd( 62.3149, 107.939, 6.20557, 0.96 ) }
    dend_50 { pt3dadd( 62.9907, 108.195, 6.27273, 0.52 ) }
    dend_50 { pt3dadd( 64.1287, 108.687, 6.43641, 0.52 ) }
    dend_50 { pt3dadd( 65.0373, 109.176, 6.68664, 0.81 ) }
    dend_50 { pt3dadd( 66.0474, 109.874, 7.12552, 0.81 ) }
    dend_50 { pt3dadd( 66.512, 110.281, 7.39717, 1.03 ) }
    dend_50 { pt3dadd( 66.8234, 110.623, 7.61235, 1.03 ) }
    dend_50 { pt3dadd( 67.2239, 111.197, 7.95217, 1.03 ) }
    dend_50 { pt3dadd( 67.9476, 112.584, 8.75885, 0.37 ) }
    dend_50 { pt3dadd( 68.2536, 113.303, 9.14492, 0.37 ) }
    dend_50 { pt3dadd( 68.4915, 113.964, 9.47184, 0.37 ) }
    dend_50 { pt3dadd( 68.6752, 114.554, 9.76723, 0.37 ) }
    dend_50 { pt3dadd( 68.7554, 114.817, 9.91312, 0.88 ) }
    dend_50 { pt3dadd( 69.1194, 115.87, 10.5345, 1.18 ) }
    dend_50 { pt3dadd( 69.3537, 116.397, 10.8283, 1.18 ) }
    dend_50 { pt3dadd( 69.5572, 116.695, 11.0161, 1.18 ) }
    dend_50 { pt3dadd( 69.6083, 116.744, 11.0515, 1.18 ) }
    dend_50 { pt3dadd( 70.7251, 117.463, 11.6246, 1.55 ) }
    dend_50 { pt3dadd( 71.2249, 117.706, 11.8649, 1.55 ) }
    dend_50 { pt3dadd( 71.8532, 117.954, 12.1324, 1.55 ) }
    dend_50 { pt3dadd( 72.832, 118.301, 12.5451, 0.59 ) }
    dend_50 { pt3dadd( 73.4726, 118.536, 12.7985, 0.59 ) }
    dend_50 { pt3dadd( 74.1782, 118.834, 13.0494, 0.59 ) }
    dend_50 { pt3dadd( 75.3818, 119.447, 13.3872, 0.59 ) }
    dend_50 { pt3dadd( 75.7456, 119.69, 13.5175, 1.18 ) }
    dend_50 { pt3dadd( 75.8477, 119.78, 13.5599, 1.18 ) }
    dend_50 { pt3dadd( 76.3585, 120.387, 13.7714, 1.18 ) }
    dend_50 { pt3dadd( 76.8504, 121.056, 13.9627, 1.33 ) }
    dend_50 { pt3dadd( 77.3495, 121.808, 14.1297, 1.33 ) }
    dend_50 { pt3dadd( 77.9532, 122.758, 14.2777, 0.44 ) }
    dend_50 { pt3dadd( 78.4161, 123.497, 14.3934, 0.44 ) }
    dend_50 { pt3dadd( 79.308, 124.932, 14.6337, 0.44 ) }
    dend_50 { pt3dadd( 79.308, 124.932, 14.6337, 0.88 ) }
    dend_50 { pt3dadd( 79.7237, 125.594, 14.7502, 0.88 ) }
    dend_50 { pt3dadd( 79.9993, 126.025, 14.8156, 0.88 ) }
    dend_50 { pt3dadd( 80.0508, 126.1, 14.8229, 0.88 ) }
    dend_50 { pt3dadd( 80.5734, 126.729, 14.9031, 0.88 ) }
    dend_50 { pt3dadd( 80.6249, 126.778, 14.9111, 0.88 ) }
    dend_50 { pt3dadd( 81.2577, 127.299, 14.9969, 0.88 ) }
    dend_50 { pt3dadd( 81.7586, 127.632, 15.0549, 1.47 ) }
    dend_50 { pt3dadd( 81.8178, 127.668, 15.0686, 1.47 ) }
    dend_50 { pt3dadd( 82.5556, 128.095, 15.2955, 1.47 ) }
    dend_50 { pt3dadd( 82.6126, 128.129, 15.3159, 1.47 ) }
    dend_50 { pt3dadd( 82.804, 128.253, 15.3964, 1.47 ) }
    dend_50 { pt3dadd( 82.8555, 128.291, 15.4237, 1.47 ) }
    dend_50 { pt3dadd( 83.9108, 129.252, 16.1233, 1.33 ) }
    dend_50 { pt3dadd( 83.956, 129.3, 16.151, 1.33 ) }
    dend_50 { pt3dadd( 84.5216, 129.949, 16.5596, 1.18 ) }
    dend_50 { pt3dadd( 84.5638, 129.998, 16.5913, 1.18 ) }
    dend_50 { pt3dadd( 85.1301, 130.646, 17.0049, 1.18 ) }
    dend_50 { pt3dadd( 85.9863, 131.605, 17.5939, 1.18 ) }
    dend_50 { pt3dadd( 87.2789, 132.957, 18.3764, 1.18 ) }
    dend_50 { pt3dadd( 88.2653, 133.891, 18.9267, 1.25 ) }
    dend_50 { pt3dadd( 88.3172, 133.932, 18.9498, 1.25 ) }
    dend_50 { pt3dadd( 88.9588, 134.366, 19.1657, 1.25 ) }
    dend_50 { pt3dadd( 89.2914, 134.543, 19.2325, 1.69 ) }
    dend_50 { pt3dadd( 90.0565, 134.859, 19.3045, 1.69 ) }
    dend_50 { pt3dadd( 90.7215, 135.067, 19.3, 1.69 ) }
    dend_50 { pt3dadd( 92.1303, 135.488, 19.1222, 0.59 ) }
    dend_50 { pt3dadd( 92.207, 135.51, 19.1116, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_50 { pt3dadd( 92.831, 135.664, 19.0101, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 1/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 19.3035, 68.0582, -23.8783, 1.47 ) }
    dend_3 { pt3dadd( 21.0817, 69.2009, -26.5204, 1.47 ) }
    dend_3 { pt3dadd( 21.6441, 69.641, -27.4543, 1.03 ) }
    dend_3 { pt3dadd( 22.1262, 70.1494, -28.4471, 1.03 ) }
    dend_3 { pt3dadd( 22.3771, 70.5234, -29.0847, 1.03 ) }
    dend_3 { pt3dadd( 22.7153, 71.3663, -30.3452, 1.03 ) }
    dend_3 { pt3dadd( 22.7279, 71.4139, -30.4082, 1.03 ) }
    dend_3 { pt3dadd( 22.6883, 72.3243, -31.3099, 1.03 ) }
    dend_3 { pt3dadd( 22.5236, 73.2765, -32.124, 1.4 ) }
    dend_3 { pt3dadd( 22.3573, 74.075, -32.6981, 1.69 ) }
    dend_3 { pt3dadd( 22.107, 75.4323, -33.5936, 1.69 ) }
    dend_3 { pt3dadd( 22.0017, 76.1155, -33.9711, 1.69 ) }
    dend_3 { pt3dadd( 21.8953, 77.1955, -34.5009, 1.69 ) }
    dend_3 { pt3dadd( 21.8627, 78.1666, -34.967, 1.69 ) }
    dend_3 { pt3dadd( 21.883, 79.3368, -35.5353, 1.69 ) }
    dend_3 { pt3dadd( 21.9599, 80.6855, -36.2189, 2.28 ) }
    dend_3 { pt3dadd( 22.0545, 81.7681, -36.7591, 2.36 ) }
    dend_3 { pt3dadd( 22.107, 82.2538, -37.0455, 2.36 ) }
    dend_3 { pt3dadd( 22.3186, 83.7299, -38.0228, 1.77 ) }
    dend_3 { pt3dadd( 22.327, 83.7767, -38.0632, 1.77 ) }
    dend_3 { pt3dadd( 22.3801, 84.0315, -38.3351, 1.77 ) }
    dend_3 { pt3dadd( 22.3961, 84.0841, -38.3953, 1.77 ) }
    dend_3 { pt3dadd( 22.8508, 85.172, -39.7815, 0.74 ) }
    dend_3 { pt3dadd( 22.8708, 85.215, -39.8359, 0.74 ) }
    dend_3 { pt3dadd( 23.2809, 86.003, -40.7933, 1.03 ) }
    dend_3 { pt3dadd( 23.3062, 86.0501, -40.8552, 1.03 ) }
    dend_3 { pt3dadd( 23.5636, 86.5413, -41.5498, 1.03 ) }
    dend_3 { pt3dadd( 23.9354, 87.2843, -42.6524, 1.33 ) }
    dend_3 { pt3dadd( 23.9525, 87.3221, -42.7081, 1.33 ) }
    dend_3 { pt3dadd( 24.2797, 88.1994, -43.8992, 1.69 ) }
    dend_3 { pt3dadd( 24.6137, 89.3205, -45.2589, 1.99 ) }
    dend_3 { pt3dadd( 24.9228, 90.5297, -46.631, 1.99 ) }
    dend_3 { pt3dadd( 25.1618, 91.6005, -47.7579, 1.99 ) }
    dend_3 { pt3dadd( 25.3931, 92.6533, -48.7099, 1.4 ) }
    dend_3 { pt3dadd( 25.6243, 93.7532, -49.571, 1.4 ) }
    dend_3 { pt3dadd( 25.8288, 94.7318, -50.1574, 1.84 ) }
    dend_3 { pt3dadd( 25.844, 94.7942, -50.1815, 1.84 ) }
    dend_3 { pt3dadd( 26.0599, 95.4183, -50.29, 2.36 ) }
    dend_3 { pt3dadd( 26.4637, 96.2448, -50.299, 2.14 ) }
    dend_3 { pt3dadd( 26.5274, 96.333, -50.2916, 2.14 ) }
    dend_3 { pt3dadd( 27.0013, 96.8216, -50.2464, 1.92 ) }
    dend_3 { pt3dadd( 27.4175, 97.2057, -50.2166, 1.77 ) }
    dend_3 { pt3dadd( 28.0521, 97.8123, -50.2143, 1.77 ) }
    dend_3 { pt3dadd( 28.1515, 97.9216, -50.22, 1.77 ) }
    dend_3 { pt3dadd( 28.78, 98.7564, -50.3399, 1.47 ) }
    dend_3 { pt3dadd( 28.8166, 98.8169, -50.3506, 1.47 ) }
    dend_3 { pt3dadd( 29.4063, 100.066, -50.6773, 1.33 ) }
    dend_3 { pt3dadd( 29.7077, 100.876, -50.957, 1.11 ) }
    dend_3 { pt3dadd( 30.0536, 102.051, -51.4043, 1.11 ) }
    dend_3 { pt3dadd( 30.2906, 102.964, -51.8353, 1.11 ) }
    dend_3 { pt3dadd( 30.5078, 103.893, -52.3627, 1.4 ) }
    dend_3 { pt3dadd( 30.7792, 105.149, -53.1296, 1.4 ) }
    dend_3 { pt3dadd( 31.0005, 106.228, -53.8096, 2.06 ) }
    dend_3 { pt3dadd( 31.2038, 107.247, -54.4352, 2.43 ) }
    dend_3 { pt3dadd( 31.6143, 109.24, -55.6578, 1.84 ) }
    dend_3 { pt3dadd( 31.8791, 110.573, -56.5121, 1.62 ) }
    dend_3 { pt3dadd( 32.0022, 111.174, -56.9042, 1.4 ) }
    dend_3 { pt3dadd( 32.2283, 112.29, -57.5943, 0.88 ) }
    dend_3 { pt3dadd( 32.3849, 113.096, -58.0903, 0.88 ) }
    dend_3 { pt3dadd( 32.4, 113.186, -58.1459, 0.88 ) }
    dend_3 { pt3dadd( 32.5609, 115.06, -58.9635, 0.88 ) }
    // Section: dend_132, id: dend_132, parent: dend_131 (entry count 62/100)
    dend_132 { pt3dclear() }
    dend_132 { pt3dadd( 96.574, -174.188, 0.0704686, 1.55 ) }
    dend_132 { pt3dadd( 97.453, -175.258, -0.520116, 1.55 ) }
    dend_132 { pt3dadd( 98.0213, -175.994, -0.831447, 1.55 ) }
    dend_132 { pt3dadd( 98.1098, -176.111, -0.87569, 1.55 ) }
    dend_132 { pt3dadd( 99.1147, -177.421, -1.29557, 1.4 ) }
    dend_132 { pt3dadd( 99.6352, -178.096, -1.4956, 1.4 ) }
    dend_132 { pt3dadd( 100.188, -178.814, -1.70821, 1.55 ) }
    dend_132 { pt3dadd( 100.957, -179.833, -1.93061, 1.77 ) }
    dend_132 { pt3dadd( 100.998, -179.888, -1.94163, 1.77 ) }
    dend_132 { pt3dadd( 101.823, -180.989, -2.10235, 1.92 ) }
    dend_132 { pt3dadd( 101.864, -181.045, -2.10158, 1.92 ) }
    // Section: dend_118, id: dend_118, parent: dend_116 (entry count 73/100)
    dend_118 { pt3dclear() }
    dend_118 { pt3dadd( -17.5111, -133.597, 7.97237, 0.66 ) }
    dend_118 { pt3dadd( -17.6108, -134.463, 7.19215, 0.66 ) }
    dend_118 { pt3dadd( -17.6788, -135.053, 6.66026, 0.66 ) }
    dend_118 { pt3dadd( -17.7099, -135.323, 6.41698, 1.33 ) }
    dend_118 { pt3dadd( -17.8365, -136.423, 5.42648, 0.52 ) }
    // Section: dend_117, id: dend_117, parent: dend_116 (entry count 78/100)
    dend_117 { pt3dclear() }
    dend_117 { pt3dadd( -17.5111, -133.597, 7.97237, 0.22 ) }
    dend_117 { pt3dadd( -17.6348, -133.51, 8.00194, 0.22 ) }
    dend_117 { pt3dadd( -18.6184, -132.611, 8.18226, 0.22 ) }
    dend_117 { pt3dadd( -18.9157, -132.28, 8.29298, 0.81 ) }
    dend_117 { pt3dadd( -18.9855, -132.198, 8.32288, 0.81 ) }
    dend_117 { pt3dadd( -19.3098, -131.813, 8.46926, 0.81 ) }
    dend_117 { pt3dadd( -19.7752, -131.268, 8.67775, 0.22 ) }
    dend_117 { pt3dadd( -20.4584, -130.503, 9.23762, 0.22 ) }
    dend_117 { pt3dadd( -21.4969, -129.263, 10.2327, 0.22 ) }
    dend_117 { pt3dadd( -21.4969, -129.263, 10.2327, 0.52 ) }
    dend_117 { pt3dadd( -21.5383, -129.214, 10.2796, 0.52 ) }
    dend_117 { pt3dadd( -21.7575, -128.959, 10.5866, 0.52 ) }
    dend_117 { pt3dadd( -23.2635, -127.514, 13.289, 0.66 ) }
    // Section: dend_101, id: dend_101, parent: dend_93 (entry count 91/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( -26.5264, -304.155, 18.5344, 0.59 ) }
    dend_101 { pt3dadd( -26.4018, -305.219, 18.4977, 0.59 ) }
    dend_101 { pt3dadd( -26.3484, -306.059, 18.4365, 0.59 ) }
    dend_101 { pt3dadd( -26.3452, -306.127, 18.4304, 0.59 ) }
    dend_101 { pt3dadd( -26.274, -307.659, 18.2949, 0.59 ) }
    dend_101 { pt3dadd( -26.1941, -309.376, 18.143, 0.59 ) }
    dend_101 { pt3dadd( -26.149, -310.346, 18.0572, 0.59 ) }
    dend_101 { pt3dadd( -26.0833, -311.315, 17.9166, 0.59 ) }
    dend_101 { pt3dadd( -26.0802, -311.395, 17.9035, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    // Section: dend_94, id: dend_94, parent: dend_93 (entry count 0/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -26.5264, -304.155, 18.5344, 0.44 ) }
    dend_94 { pt3dadd( -25.7701, -305.19, 18.2472, 0.44 ) }
    dend_94 { pt3dadd( -25.3047, -305.84, 18.0793, 0.44 ) }
    dend_94 { pt3dadd( -24.9342, -306.344, 17.9625, 0.88 ) }
    dend_94 { pt3dadd( -24.8944, -306.4, 17.9527, 0.88 ) }
    dend_94 { pt3dadd( -24.5437, -306.901, 17.8772, 0.88 ) }
    dend_94 { pt3dadd( -24.1638, -307.447, 17.7395, 1.03 ) }
    dend_94 { pt3dadd( -24.1181, -307.511, 17.72, 1.03 ) }
    dend_94 { pt3dadd( -23.8207, -307.915, 17.3949, 0.66 ) }
    dend_94 { pt3dadd( -23.233, -308.688, 16.526, 0.59 ) }
    dend_94 { pt3dadd( -23.207, -308.714, 16.466, 0.59 ) }
    dend_94 { pt3dadd( -22.7003, -309.204, 14.9183, 0.59 ) }
    dend_94 { pt3dadd( -22.4473, -309.443, 14.029, 0.88 ) }
    dend_94 { pt3dadd( -21.5983, -310.348, 10.5398, 1.62 ) }
    dend_94 { pt3dadd( -21.583, -310.367, 10.463, 1.62 ) }
    dend_94 { pt3dadd( -20.8287, -311.394, 5.8915, 0.44 ) }
    dend_94 { pt3dadd( -20.5159, -311.925, 3.58421, 0.44 ) }
    dend_94 { pt3dadd( -20.5082, -311.943, 3.50419, 0.44 ) }
    dend_94 { pt3dadd( -20.4587, -312.17, 2.57198, 0.44 ) }
    dend_94 { pt3dadd( -20.463, -312.381, 1.97611, 0.81 ) }
    dend_94 { pt3dadd( -20.4701, -312.417, 1.90489, 0.81 ) }
    dend_94 { pt3dadd( -20.6171, -312.789, 1.57079, 0.81 ) }
    dend_94 { pt3dadd( -20.6343, -312.834, 1.53653, 0.81 ) }
    dend_94 { pt3dadd( -20.7372, -313.267, 1.21572, 0.81 ) }
    dend_94 { pt3dadd( -20.8743, -314.586, 0.259988, 0.44 ) }
    dend_94 { pt3dadd( -20.8029, -315.379, -0.209844, 0.44 ) }
    dend_94 { pt3dadd( -20.6019, -316.063, -0.502431, 0.88 ) }
    dend_94 { pt3dadd( -20.503, -316.308, -0.586347, 0.88 ) }
    dend_94 { pt3dadd( -20.0913, -317.214, -0.844012, 0.88 ) }
    dend_94 { pt3dadd( -20.0176, -317.357, -0.875748, 0.88 ) }
    dend_94 { pt3dadd( -19.2322, -318.787, -1.08274, 0.74 ) }
    dend_94 { pt3dadd( -18.2926, -320.41, -1.29693, 0.74 ) }
    dend_94 { pt3dadd( -18.253, -320.478, -1.30436, 0.74 ) }
    dend_94 { pt3dadd( -17.6511, -321.496, -1.4187, 0.74 ) }
    dend_94 { pt3dadd( -17.3146, -322.066, -1.48503, 1.33 ) }
    dend_94 { pt3dadd( -17.2638, -322.148, -1.49888, 1.33 ) }
    dend_94 { pt3dadd( -16.6183, -323.164, -1.7337, 1.33 ) }
    dend_94 { pt3dadd( -16.4769, -323.372, -1.78783, 1.33 ) }
    dend_94 { pt3dadd( -15.8817, -324.184, -1.99425, 1.33 ) }
    dend_94 { pt3dadd( -15.6708, -324.432, -2.05387, 1.33 ) }
    dend_94 { pt3dadd( -15.0094, -325.177, -2.27509, 0.88 ) }
    dend_94 { pt3dadd( -14.9563, -325.235, -2.29581, 0.88 ) }
    // Section: dend_89, id: dend_89, parent: dend_87 (entry count 42/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( 62.0211, -404.928, 4.33641, 1.4 ) }
    dend_89 { pt3dadd( 62.4229, -405.503, 4.74252, 1.4 ) }
    dend_89 { pt3dadd( 62.8014, -406.042, 5.15573, 1.62 ) }
    dend_89 { pt3dadd( 63.3235, -406.816, 5.70227, 1.62 ) }
    dend_89 { pt3dadd( 63.3926, -406.918, 5.77132, 1.62 ) }
    dend_89 { pt3dadd( 64.3285, -408.228, 6.57147, 1.33 ) }
    dend_89 { pt3dadd( 65.0843, -409.247, 7.12828, 0.66 ) }
    dend_89 { pt3dadd( 65.1298, -409.305, 7.15779, 0.66 ) }
    dend_89 { pt3dadd( 65.8512, -410.189, 7.48539, 0.66 ) }
    dend_89 { pt3dadd( 65.9921, -410.361, 7.49096, 0.66 ) }
    dend_89 { pt3dadd( 66.7997, -411.417, 7.16031, 0.66 ) }
    dend_89 { pt3dadd( 67.2384, -412.052, 6.77547, 0.66 ) }
    dend_89 { pt3dadd( 67.2751, -412.11, 6.73198, 0.66 ) }
    dend_89 { pt3dadd( 67.9973, -413.378, 5.73195, 0.66 ) }
    dend_89 { pt3dadd( 68.7466, -414.882, 4.43865, 0.88 ) }
    dend_89 { pt3dadd( 68.9338, -415.357, 4.03301, 1.11 ) }
    dend_89 { pt3dadd( 69.0653, -415.865, 3.61419, 1.11 ) }
    dend_89 { pt3dadd( 69.0754, -415.92, 3.57321, 1.11 ) }
    dend_89 { pt3dadd( 69.1331, -416.364, 3.35014, 1.11 ) }
    dend_89 { pt3dadd( 69.1379, -416.441, 3.33546, 1.11 ) }
    dend_89 { pt3dadd( 69.221, -416.998, 3.33546, 1.11 ) }
    dend_89 { pt3dadd( 69.406, -417.791, 3.33546, 0.59 ) }
    dend_89 { pt3dadd( 69.4281, -417.847, 3.33546, 0.59 ) }
    dend_89 { pt3dadd( 69.9902, -418.932, 3.33546, 0.59 ) }
    dend_89 { pt3dadd( 70.0765, -419.055, 3.33546, 0.59 ) }
    dend_89 { pt3dadd( 70.8998, -420.039, 3.33546, 0.59 ) }
    dend_89 { pt3dadd( 71.0023, -420.147, 3.32668, 0.59 ) }
    dend_89 { pt3dadd( 71.8953, -421.017, 3.19922, 0.59 ) }
    dend_89 { pt3dadd( 71.9464, -421.067, 3.18951, 0.59 ) }
    dend_89 { pt3dadd( 72.7659, -421.857, 2.99563, 0.59 ) }
    dend_89 { pt3dadd( 72.8112, -421.907, 2.98216, 0.59 ) }
    dend_89 { pt3dadd( 73.6198, -423.038, 2.64424, 0.52 ) }
    dend_89 { pt3dadd( 73.6493, -423.097, 2.62251, 0.52 ) }
    dend_89 { pt3dadd( 73.78, -423.556, 2.42389, 1.11 ) }
    dend_89 { pt3dadd( 73.9155, -424.203, 2.13017, 1.4 ) }
    dend_89 { pt3dadd( 74.0442, -424.842, 1.85308, 1.4 ) }
    dend_89 { pt3dadd( 74.0606, -424.907, 1.82768, 1.4 ) }
    dend_89 { pt3dadd( 74.393, -425.983, 1.48086, 0.88 ) }
    dend_89 { pt3dadd( 74.4177, -426.044, 1.45812, 0.88 ) }
    dend_89 { pt3dadd( 74.7503, -426.686, 1.19919, 0.88 ) }
    dend_89 { pt3dadd( 75.4049, -427.734, 0.766347, 0.29 ) }
    dend_89 { pt3dadd( 75.4451, -427.789, 0.744968, 0.29 ) }
    dend_89 { pt3dadd( 75.7299, -428.158, 0.617935, 0.96 ) }
    dend_89 { pt3dadd( 76.3566, -428.922, 0.419952, 1.47 ) }
    dend_89 { pt3dadd( 76.7144, -429.357, 0.3121, 1.77 ) }
    dend_89 { pt3dadd( 76.7511, -429.413, 0.295959, 1.77 ) }
    dend_89 { pt3dadd( 76.9879, -429.85, 0.16295, 1.77 ) }
    dend_89 { pt3dadd( 77.0112, -429.913, 0.147218, 1.77 ) }
    dend_89 { pt3dadd( 77.1841, -430.6, 0.0310193, 0.81 ) }
    dend_89 { pt3dadd( 77.3369, -431.458, -0.0588566, 0.59 ) }
    dend_89 { pt3dadd( 77.5755, -433.109, -0.197599, 0.59 ) }
    dend_89 { pt3dadd( 77.5852, -433.177, -0.20205, 0.59 ) }
    dend_89 { pt3dadd( 77.7943, -434.938, -0.308253, 0.59 ) }
    dend_89 { pt3dadd( 77.8801, -435.795, -0.351689, 0.59 ) }
    dend_89 { pt3dadd( 77.9019, -436.153, -0.362728, 1.77 ) }
    dend_89 { pt3dadd( 77.9183, -436.791, -0.353902, 2.5 ) }
    dend_89 { pt3dadd( 77.9766, -437.502, -0.26028, 2.5 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 99/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 62.0211, -404.928, 4.33641, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_88 { pt3dadd( 60.9963, -405.379, 4.29035, 0.22 ) }
    dend_88 { pt3dadd( 60.0659, -405.706, 4.25378, 0.22 ) }
    dend_88 { pt3dadd( 59.9997, -405.73, 4.25173, 0.22 ) }
    dend_88 { pt3dadd( 59.1761, -406.034, 4.22967, 0.22 ) }
    dend_88 { pt3dadd( 58.8114, -406.167, 4.22205, 0.22 ) }
    dend_88 { pt3dadd( 58.1569, -406.414, 4.20985, 0.22 ) }
    dend_88 { pt3dadd( 57.9472, -406.489, 4.2075, 0.22 ) }
    dend_88 { pt3dadd( 56.8365, -406.815, 4.2075, 0.22 ) }
    dend_88 { pt3dadd( 56.678, -406.861, 4.2075, 0.22 ) }
    dend_88 { pt3dadd( 55.5691, -407.196, 4.2075, 0.22 ) }
    dend_88 { pt3dadd( 55.3347, -407.283, 4.2075, 1.03 ) }
    dend_88 { pt3dadd( 55.2613, -407.315, 4.2075, 1.03 ) }
    dend_88 { pt3dadd( 54.0927, -407.766, 4.2075, 1.03 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 13/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -60.7532, 97.6029, -60.3068, 1.11 ) }
    dend_76 { pt3dadd( -61.7896, 99.452, -67.9233, 1.11 ) }
    dend_76 { pt3dadd( -62.0571, 99.9165, -69.4595, 1.47 ) }
    dend_76 { pt3dadd( -62.1335, 100.047, -69.8419, 1.47 ) }
    dend_76 { pt3dadd( -62.5054, 100.691, -71.5341, 0.88 ) }
    dend_76 { pt3dadd( -62.6851, 101.006, -72.3022, 0.88 ) }
    dend_76 { pt3dadd( -63.1657, 101.883, -74.2748, 0.66 ) }
    dend_76 { pt3dadd( -63.4983, 102.52, -75.0096, 0.52 ) }
    dend_76 { pt3dadd( -63.5358, 102.592, -75.0877, 0.52 ) }
    dend_76 { pt3dadd( -63.6932, 102.881, -75.3961, 0.52 ) }
    dend_76 { pt3dadd( -63.7215, 102.928, -75.4396, 0.52 ) }
    dend_76 { pt3dadd( -63.9517, 103.266, -75.8531, 0.52 ) }
    dend_76 { pt3dadd( -64.8923, 104.341, -77.2281, 0.52 ) }
    dend_76 { pt3dadd( -64.9238, 104.375, -77.281, 0.52 ) }
    dend_76 { pt3dadd( -65.2865, 104.755, -77.907, 1.25 ) }
    dend_76 { pt3dadd( -65.6699, 105.135, -78.5382, 1.62 ) }
    dend_76 { pt3dadd( -66.8023, 106.211, -80.5858, 0.37 ) }
    dend_76 { pt3dadd( -67.5086, 106.858, -81.8836, 0.37 ) }
    dend_76 { pt3dadd( -68.7349, 107.966, -83.9999, 0.37 ) }
    dend_76 { pt3dadd( -68.7667, 107.994, -84.0563, 0.81 ) }
    dend_76 { pt3dadd( -69.1216, 108.296, -84.6954, 0.81 ) }
    dend_76 { pt3dadd( -70.444, 109.331, -87.3608, 0.81 ) }
    dend_76 { pt3dadd( -70.724, 109.533, -87.9017, 0.22 ) }
    dend_76 { pt3dadd( -71.2769, 109.911, -88.9911, 0.22 ) }
    dend_76 { pt3dadd( -72.2058, 110.488, -90.6515, 1.33 ) }
    dend_76 { pt3dadd( -72.4491, 110.644, -91.0952, 1.92 ) }
    dend_76 { pt3dadd( -74.4863, 111.989, -94.8948, 0.29 ) }
    dend_76 { pt3dadd( -75.1222, 112.415, -96.0083, 0.29 ) }
    dend_76 { pt3dadd( -75.2038, 112.471, -96.1587, 0.29 ) }
    dend_76 { pt3dadd( -75.41, 112.613, -96.5513, 0.59 ) }
    dend_76 { pt3dadd( -76.467, 113.353, -98.3732, 0.59 ) }
    dend_76 { pt3dadd( -76.5021, 113.378, -98.4278, 0.59 ) }
    dend_76 { pt3dadd( -76.8412, 113.658, -98.7507, 0.59 ) }
    dend_76 { pt3dadd( -76.8899, 113.697, -98.8008, 0.59 ) }
    dend_76 { pt3dadd( -77.1396, 113.879, -99.0204, 0.29 ) }
    dend_76 { pt3dadd( -77.1875, 113.914, -99.0582, 0.29 ) }
    dend_76 { pt3dadd( -77.6363, 114.255, -99.2769, 0.29 ) }
    dend_76 { pt3dadd( -77.6814, 114.291, -99.3005, 0.29 ) }
    dend_76 { pt3dadd( -78.2158, 114.761, -99.6609, 0.29 ) }
    dend_76 { pt3dadd( -78.2628, 114.802, -99.6933, 0.29 ) }
    dend_76 { pt3dadd( -79.1285, 115.553, -100.303, 0.29 ) }
    dend_76 { pt3dadd( -79.9675, 116.328, -101.049, 0.29 ) }
    dend_76 { pt3dadd( -80.0065, 116.367, -101.091, 0.29 ) }
    dend_76 { pt3dadd( -80.6918, 117.095, -101.872, 1.18 ) }
    dend_76 { pt3dadd( -81.1642, 117.615, -102.392, 1.77 ) }
    dend_76 { pt3dadd( -81.2031, 117.659, -102.434, 1.77 ) }
    dend_76 { pt3dadd( -82.44, 119.042, -103.828, 1.84 ) }
    dend_76 { pt3dadd( -83.2352, 119.946, -104.797, 0.52 ) }
    dend_76 { pt3dadd( -83.7849, 120.508, -105.397, 0.52 ) }
    dend_76 { pt3dadd( -84.4759, 121.141, -106.053, 0.52 ) }
    dend_76 { pt3dadd( -84.5232, 121.179, -106.093, 0.52 ) }
    dend_76 { pt3dadd( -85.5773, 121.861, -106.825, 0.22 ) }
    dend_76 { pt3dadd( -85.6452, 121.893, -106.859, 0.22 ) }
    dend_76 { pt3dadd( -86.9985, 122.387, -107.448, 0.22 ) }
    dend_76 { pt3dadd( -87.4066, 122.51, -107.622, 0.52 ) }
    dend_76 { pt3dadd( -88.0438, 122.694, -107.963, 0.52 ) }
    dend_76 { pt3dadd( -89.0522, 123.017, -108.508, 0.66 ) }
    dend_76 { pt3dadd( -89.6947, 123.239, -108.849, 0.66 ) }
    dend_76 { pt3dadd( -90.0602, 123.375, -109.056, 1.25 ) }
    dend_76 { pt3dadd( -90.3587, 123.499, -109.244, 1.25 ) }
    dend_76 { pt3dadd( -92.0602, 124.239, -110.293, 0.29 ) }
    dend_76 { pt3dadd( -93.2084, 124.769, -110.966, 0.22 ) }
    dend_76 { pt3dadd( -93.2677, 124.798, -110.996, 0.22 ) }
    dend_76 { pt3dadd( -93.8844, 125.126, -111.286, 0.22 ) }
    dend_76 { pt3dadd( -93.9958, 125.2, -111.348, 0.52 ) }
    dend_76 { pt3dadd( -94.4085, 125.524, -111.587, 0.52 ) }
    dend_76 { pt3dadd( -94.6526, 125.753, -111.717, 0.15 ) }
    dend_76 { pt3dadd( -94.6928, 125.796, -111.755, 0.15 ) }
    dend_76 { pt3dadd( -95.2671, 126.441, -112.414, 0.15 ) }
    dend_76 { pt3dadd( -96.1724, 127.567, -113.883, 0.96 ) }
    dend_76 { pt3dadd( -96.4152, 127.911, -114.316, 1.77 ) }
    dend_76 { pt3dadd( -96.5859, 128.176, -114.647, 2.06 ) }
    dend_76 { pt3dadd( -97.2985, 129.41, -116.129, 1.47 ) }
    dend_76 { pt3dadd( -97.3206, 129.454, -116.179, 1.47 ) }
    dend_76 { pt3dadd( -97.9308, 130.97, -117.69, 0.22 ) }
    dend_76 { pt3dadd( -98.3915, 132.372, -118.823, 0.22 ) }
    dend_76 { pt3dadd( -98.4049, 132.418, -118.859, 0.22 ) }
    dend_76 { pt3dadd( -98.52, 132.829, -119.136, 0.22 ) }
    dend_76 { pt3dadd( -98.6518, 133.332, -119.448, 1.11 ) }
    dend_76 { pt3dadd( -98.8434, 134.067, -119.926, 1.4 ) }
    dend_76 { pt3dadd( -98.8693, 134.175, -119.996, 1.4 ) }
    dend_76 { pt3dadd( -99.2139, 135.705, -121.179, 0.22 ) }
    dend_76 { pt3dadd( -99.4255, 136.783, -122.121, 0.22 ) }
    dend_76 { pt3dadd( -99.524, 137.909, -123.232, 0.66 ) }
    dend_76 { pt3dadd( -99.5244, 138.006, -123.335, 0.66 ) }
    dend_76 { pt3dadd( -99.4927, 138.402, -123.744, 0.66 ) }
    dend_76 { pt3dadd( -99.4849, 138.453, -123.794, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_76 { pt3dadd( -99.0946, 140.027, -125.18, 0.29 ) }
    dend_76 { pt3dadd( -98.6522, 141.656, -126.654, 0.22 ) }
    dend_76 { pt3dadd( -98.6221, 141.811, -126.794, 0.52 ) }
    dend_76 { pt3dadd( -98.5416, 142.411, -127.421, 0.52 ) }
    dend_76 { pt3dadd( -98.5385, 142.459, -127.475, 0.52 ) }
    dend_76 { pt3dadd( -98.5498, 142.774, -127.876, 0.52 ) }
    dend_76 { pt3dadd( -98.7667, 144.211, -129.916, 0.29 ) }
    dend_76 { pt3dadd( -99.0847, 145.242, -131.49, 0.29 ) }
    dend_76 { pt3dadd( -99.517, 146.333, -133.196, 1.18 ) }
    dend_76 { pt3dadd( -99.6803, 146.671, -133.734, 1.18 ) }
    dend_76 { pt3dadd( -100.34, 147.842, -135.638, 0.15 ) }
    dend_76 { pt3dadd( -100.364, 147.877, -135.697, 0.15 ) }
    dend_76 { pt3dadd( -100.876, 148.509, -136.628, 0.15 ) }
    dend_76 { pt3dadd( -101.107, 148.81, -136.992, 0.52 ) }
    dend_76 { pt3dadd( -101.333, 149.111, -137.287, 0.52 ) }
    dend_76 { pt3dadd( -101.863, 149.92, -137.992, 0.22 ) }
    dend_76 { pt3dadd( -101.889, 149.968, -138.035, 0.22 ) }
    dend_76 { pt3dadd( -102.355, 150.987, -139.072, 0.22 ) }
    dend_76 { pt3dadd( -102.702, 151.824, -140.033, 0.96 ) }
    dend_76 { pt3dadd( -102.726, 151.874, -140.093, 0.96 ) }
    dend_76 { pt3dadd( -102.91, 152.221, -140.562, 0.96 ) }
    dend_76 { pt3dadd( -103.643, 153.529, -142.396, 0.29 ) }
    dend_76 { pt3dadd( -103.824, 153.841, -142.846, 0.29 ) }
    dend_76 { pt3dadd( -103.895, 153.958, -143.036, 0.29 ) }
    dend_76 { pt3dadd( -104.151, 154.399, -143.67, 0.29 ) }
    dend_76 { pt3dadd( -104.699, 155.435, -145.213, 0.29 ) }
    dend_76 { pt3dadd( -104.719, 155.478, -145.268, 0.29 ) }
    dend_76 { pt3dadd( -105.003, 156.115, -145.986, 0.29 ) }
    dend_76 { pt3dadd( -105.367, 156.985, -147.083, 0.88 ) }
    dend_76 { pt3dadd( -105.561, 157.457, -147.679, 1.11 ) }
    dend_76 { pt3dadd( -106.153, 158.823, -149.386, 0.29 ) }
    dend_76 { pt3dadd( -106.617, 159.806, -150.598, 0.29 ) }
    dend_76 { pt3dadd( -106.641, 159.853, -150.659, 0.29 ) }
    dend_76 { pt3dadd( -107.572, 161.598, -153.068, 1.11 ) }
    dend_76 { pt3dadd( -107.804, 162.005, -153.623, 1.84 ) }
    dend_76 { pt3dadd( -108.013, 162.351, -154.141, 1.84 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 36/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -60.7532, 97.6029, -60.3068, 0.29 ) }
    dend_75 { pt3dadd( -60.9666, 97.6597, -60.4466, 0.29 ) }
    dend_75 { pt3dadd( -61.4717, 97.8073, -60.744, 0.66 ) }
    dend_75 { pt3dadd( -61.5316, 97.8267, -60.7759, 0.66 ) }
    dend_75 { pt3dadd( -61.9927, 97.9726, -60.9843, 0.66 ) }
    dend_75 { pt3dadd( -63.5226, 98.4606, -61.7163, 0.37 ) }
    dend_75 { pt3dadd( -64.4733, 98.7732, -62.1805, 0.37 ) }
    dend_75 { pt3dadd( -64.8773, 98.9015, -62.3741, 0.59 ) }
    dend_75 { pt3dadd( -65.3074, 99.0355, -62.554, 0.59 ) }
    dend_75 { pt3dadd( -66.1772, 99.3024, -62.8644, 0.22 ) }
    dend_75 { pt3dadd( -67.1349, 99.5511, -63.1093, 0.81 ) }
    dend_75 { pt3dadd( -67.3297, 99.5888, -63.149, 0.81 ) }
    dend_75 { pt3dadd( -68.1878, 99.703, -63.3656, 0.81 ) }
    dend_75 { pt3dadd( -69.0806, 99.7592, -63.6048, 0.22 ) }
    dend_75 { pt3dadd( -69.1597, 99.7596, -63.6204, 0.22 ) }
    dend_75 { pt3dadd( -70.2713, 99.6836, -63.7388, 0.22 ) }
    dend_75 { pt3dadd( -71.6736, 99.5143, -63.783, 1.18 ) }
    dend_75 { pt3dadd( -72.2768, 99.4178, -63.7517, 1.55 ) }
    dend_75 { pt3dadd( -72.6966, 99.3409, -63.6961, 1.55 ) }
    dend_75 { pt3dadd( -73.8985, 99.1038, -63.3811, 0.22 ) }
    dend_75 { pt3dadd( -75.1679, 98.9375, -62.9827, 0.22 ) }
    dend_75 { pt3dadd( -75.2672, 98.9294, -62.9457, 0.22 ) }
    dend_75 { pt3dadd( -76.3912, 98.8942, -62.5188, 0.74 ) }
    dend_75 { pt3dadd( -77.093, 98.9026, -62.285, 0.74 ) }
    dend_75 { pt3dadd( -78.1966, 98.995, -62.0205, 0.22 ) }
    dend_75 { pt3dadd( -80.351, 99.2847, -61.6758, 0.22 ) }
    dend_75 { pt3dadd( -80.6455, 99.3342, -61.6417, 0.22 ) }
    dend_75 { pt3dadd( -81.9499, 99.5663, -61.5948, 0.22 ) }
    dend_75 { pt3dadd( -82.0984, 99.5937, -61.6021, 0.22 ) }
    dend_75 { pt3dadd( -84.351, 100.016, -61.8119, 0.22 ) }
    dend_75 { pt3dadd( -84.4996, 100.044, -61.834, 0.22 ) }
    dend_75 { pt3dadd( -85.5123, 100.215, -61.9937, 0.22 ) }
    dend_75 { pt3dadd( -86.4618, 100.353, -62.2103, 1.11 ) }
    dend_75 { pt3dadd( -87.0272, 100.413, -62.3725, 1.18 ) }
    dend_75 { pt3dadd( -87.1039, 100.418, -62.3968, 1.18 ) }
    dend_75 { pt3dadd( -87.6809, 100.43, -62.6007, 1.18 ) }
    dend_75 { pt3dadd( -87.8253, 100.436, -62.6505, 1.18 ) }
    dend_75 { pt3dadd( -88.8432, 100.497, -62.986, 0.15 ) }
    dend_75 { pt3dadd( -91.3997, 100.724, -63.701, 0.15 ) }
    dend_75 { pt3dadd( -91.5604, 100.742, -63.7451, 0.44 ) }
    dend_75 { pt3dadd( -91.9853, 100.8, -63.8542, 0.44 ) }
    dend_75 { pt3dadd( -93.2613, 101.015, -64.2266, 0.22 ) }
    dend_75 { pt3dadd( -93.3371, 101.03, -64.2497, 0.22 ) }
    dend_75 { pt3dadd( -94.1844, 101.223, -64.4969, 0.22 ) }
    dend_75 { pt3dadd( -94.3956, 101.28, -64.5776, 0.81 ) }
    dend_75 { pt3dadd( -94.8789, 101.411, -64.7621, 0.96 ) }
    dend_75 { pt3dadd( -95.9764, 101.699, -65.202, 0.22 ) }
    dend_75 { pt3dadd( -96.0313, 101.713, -65.2234, 0.22 ) }
    dend_75 { pt3dadd( -97.2357, 102.037, -65.6986, 0.22 ) }
    dend_75 { pt3dadd( -97.2909, 102.052, -65.7193, 0.22 ) }
    dend_75 { pt3dadd( -97.7978, 102.194, -65.9279, 0.52 ) }
    dend_75 { pt3dadd( -97.9585, 102.239, -65.9944, 0.52 ) }
    dend_75 { pt3dadd( -98.6547, 102.432, -66.2372, 0.52 ) }
    dend_75 { pt3dadd( -98.7256, 102.453, -66.2691, 0.52 ) }
    dend_75 { pt3dadd( -99.4075, 102.665, -66.646, 0.52 ) }
    dend_75 { pt3dadd( -100.418, 102.981, -67.2025, 0.52 ) }
    dend_75 { pt3dadd( -100.612, 103.048, -67.3313, 0.22 ) }
    dend_75 { pt3dadd( -101.351, 103.323, -67.8725, 0.22 ) }
    dend_75 { pt3dadd( -101.964, 103.561, -68.4062, 0.44 ) }
    dend_75 { pt3dadd( -102.02, 103.584, -68.4599, 0.44 ) }
    dend_75 { pt3dadd( -102.531, 103.829, -68.9426, 0.44 ) }
    dend_75 { pt3dadd( -103.802, 104.406, -70.0125, 0.44 ) }
    dend_75 { pt3dadd( -103.859, 104.426, -70.0497, 0.44 ) }
    dend_75 { pt3dadd( -104.433, 104.565, -70.3162, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_75 { pt3dadd( -104.491, 104.573, -70.3295, 0.66 ) }
    dend_75 { pt3dadd( -106.601, 104.761, -70.6039, 1.84 ) }
    dend_75 { pt3dadd( -108.045, 104.781, -70.6558, 0.37 ) }
    dend_75 { pt3dadd( -109.623, 104.807, -70.5729, 0.37 ) }
    dend_75 { pt3dadd( -110.058, 104.83, -70.5541, 0.37 ) }
    dend_75 { pt3dadd( -110.936, 104.898, -70.5223, 0.37 ) }
    dend_75 { pt3dadd( -111.159, 104.92, -70.526, 0.37 ) }
    dend_75 { pt3dadd( -111.534, 104.966, -70.574, 1.47 ) }
    dend_75 { pt3dadd( -112.452, 105.176, -70.6389, 0.37 ) }
    dend_75 { pt3dadd( -113.221, 105.413, -70.7386, 0.37 ) }
    dend_75 { pt3dadd( -113.5, 105.513, -70.7849, 0.74 ) }
    dend_75 { pt3dadd( -113.761, 105.621, -70.8584, 0.74 ) }
    dend_75 { pt3dadd( -114.321, 105.915, -71.0386, 0.29 ) }
    dend_75 { pt3dadd( -115.15, 106.486, -71.3131, 0.29 ) }
    dend_75 { pt3dadd( -115.593, 106.832, -71.4654, 1.11 ) }
    dend_75 { pt3dadd( -115.96, 107.177, -71.5856, 1.11 ) }
    dend_75 { pt3dadd( -116.814, 108.058, -71.7993, 0.22 ) }
    dend_75 { pt3dadd( -118.222, 109.597, -72.048, 0.22 ) }
    dend_75 { pt3dadd( -119.224, 110.759, -72.1521, 0.22 ) }
    dend_75 { pt3dadd( -119.347, 110.912, -72.1612, 0.22 ) }
    dend_75 { pt3dadd( -120.348, 112.158, -72.1748, 0.22 ) }
    dend_75 { pt3dadd( -120.909, 112.885, -72.1416, 0.66 ) }
    dend_75 { pt3dadd( -121.29, 113.41, -72.0513, 1.03 ) }
    dend_75 { pt3dadd( -121.432, 113.61, -71.998, 1.03 ) }
    // Section: dend_71, id: dend_71, parent: dend_59 (entry count 24/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -67.5596, 154.304, -31.2221, 0.52 ) }
    dend_71 { pt3dadd( -67.9191, 155.204, -31.0958, 0.52 ) }
    dend_71 { pt3dadd( -68.2624, 156.262, -30.9079, 0.52 ) }
    dend_71 { pt3dadd( -68.6424, 157.46, -30.6941, 0.52 ) }
    dend_71 { pt3dadd( -68.6603, 157.515, -30.6845, 0.52 ) }
    dend_71 { pt3dadd( -68.9824, 158.471, -30.5237, 0.52 ) }
    dend_71 { pt3dadd( -69.2245, 159.205, -30.4094, 0.52 ) }
    dend_71 { pt3dadd( -69.4181, 159.941, -30.2861, 0.88 ) }
    dend_71 { pt3dadd( -69.6338, 160.874, -30.1539, 1.11 ) }
    dend_71 { pt3dadd( -69.779, 161.579, -30.078, 1.11 ) }
    dend_71 { pt3dadd( -69.8447, 161.921, -30.0561, 1.11 ) }
    dend_71 { pt3dadd( -69.9929, 162.799, -30.047, 0.37 ) }
    dend_71 { pt3dadd( -70.1533, 164.072, -29.9162, 0.37 ) }
    dend_71 { pt3dadd( -70.1725, 164.427, -29.8487, 1.03 ) }
    dend_71 { pt3dadd( -70.17, 164.492, -29.8278, 1.03 ) }
    dend_71 { pt3dadd( -70.1313, 165.219, -29.5371, 1.03 ) }
    dend_71 { pt3dadd( -70.1053, 165.744, -29.2918, 1.03 ) }
    dend_71 { pt3dadd( -70.0943, 167.252, -28.5025, 0.52 ) }
    dend_71 { pt3dadd( -70.1268, 168.085, -28.065, 0.52 ) }
    dend_71 { pt3dadd( -70.2005, 169.133, -27.5429, 0.44 ) }
    dend_71 { pt3dadd( -70.2894, 169.92, -27.1959, 0.44 ) }
    dend_71 { pt3dadd( -70.3033, 170.01, -27.1624, 0.44 ) }
    dend_71 { pt3dadd( -70.4585, 170.833, -26.9499, 0.44 ) }
    dend_71 { pt3dadd( -70.6828, 171.809, -26.8502, 0.44 ) }
    dend_71 { pt3dadd( -70.7001, 171.876, -26.8467, 0.44 ) }
    dend_71 { pt3dadd( -70.9442, 172.713, -26.8467, 0.74 ) }
    dend_71 { pt3dadd( -71.0828, 173.187, -26.8253, 0.96 ) }
    dend_71 { pt3dadd( -71.3145, 173.92, -26.7672, 1.11 ) }
    dend_71 { pt3dadd( -71.5836, 174.799, -26.675, 1.25 ) }
    dend_71 { pt3dadd( -71.8198, 175.597, -26.5789, 0.81 ) }
    dend_71 { pt3dadd( -72.0479, 176.418, -26.473, 0.52 ) }
    dend_71 { pt3dadd( -72.2698, 177.213, -26.3449, 0.44 ) }
    dend_71 { pt3dadd( -72.443, 177.804, -26.2372, 0.37 ) }
    dend_71 { pt3dadd( -72.8861, 179.218, -26.0101, 0.37 ) }
    dend_71 { pt3dadd( -73.0732, 179.767, -25.9386, 0.37 ) }
    dend_71 { pt3dadd( -73.0992, 179.83, -25.933, 0.37 ) }
    dend_71 { pt3dadd( -73.4206, 180.47, -25.9149, 0.88 ) }
    dend_71 { pt3dadd( -73.8253, 181.126, -25.9498, 0.88 ) }
    dend_71 { pt3dadd( -74.482, 181.909, -26.016, 1.4 ) }
    dend_71 { pt3dadd( -74.8745, 182.255, -26.0601, 1.69 ) }
    dend_71 { pt3dadd( -75.2864, 182.583, -26.1087, 1.69 ) }
    dend_71 { pt3dadd( -75.6204, 182.853, -26.1538, 1.69 ) }
    dend_71 { pt3dadd( -75.6743, 182.896, -26.1629, 1.69 ) }
    dend_71 { pt3dadd( -76.2387, 183.339, -26.2248, 1.11 ) }
    dend_71 { pt3dadd( -76.7291, 183.72, -26.2357, 0.74 ) }
    dend_71 { pt3dadd( -76.7764, 183.756, -26.2367, 0.74 ) }
    dend_71 { pt3dadd( -77.1659, 184.057, -26.2441, 0.59 ) }
    dend_71 { pt3dadd( -77.2217, 184.1, -26.245, 0.59 ) }
    dend_71 { pt3dadd( -77.9355, 184.688, -26.2541, 0.59 ) }
    dend_71 { pt3dadd( -78.3661, 185.089, -26.2754, 0.59 ) }
    dend_71 { pt3dadd( -79.0478, 185.853, -26.3303, 0.59 ) }
    dend_71 { pt3dadd( -79.0885, 185.911, -26.335, 0.59 ) }
    dend_71 { pt3dadd( -79.5227, 186.709, -26.3972, 0.59 ) }
    dend_71 { pt3dadd( -79.8374, 187.429, -26.4522, 0.59 ) }
    dend_71 { pt3dadd( -80.1114, 188.195, -26.5081, 0.88 ) }
    dend_71 { pt3dadd( -80.4096, 189.082, -26.5698, 0.88 ) }
    dend_71 { pt3dadd( -80.7802, 190.135, -26.6848, 0.88 ) }
    dend_71 { pt3dadd( -80.9623, 190.596, -26.7487, 0.44 ) }
    dend_71 { pt3dadd( -81.2711, 191.238, -26.8582, 0.44 ) }
    dend_71 { pt3dadd( -81.731, 191.969, -27.003, 0.44 ) }
    dend_71 { pt3dadd( -81.9982, 192.317, -27.0768, 0.81 ) }
    dend_71 { pt3dadd( -82.7219, 193.077, -27.3491, 1.11 ) }
    dend_71 { pt3dadd( -82.7639, 193.116, -27.368, 1.11 ) }
    dend_71 { pt3dadd( -83.3367, 193.625, -27.6603, 1.33 ) }
    dend_71 { pt3dadd( -83.6676, 193.928, -27.8462, 1.55 ) }
    dend_71 { pt3dadd( -84.0775, 194.328, -28.0936, 1.55 ) }
    dend_71 { pt3dadd( -84.8276, 195.15, -28.5208, 0.96 ) }
    dend_71 { pt3dadd( -85.0486, 195.415, -28.6302, 0.44 ) }
    dend_71 { pt3dadd( -85.097, 195.478, -28.6491, 0.44 ) }
    dend_71 { pt3dadd( -85.5021, 196.065, -28.7688, 0.44 ) }
    dend_71 { pt3dadd( -85.5347, 196.115, -28.7715, 0.44 ) }
    dend_71 { pt3dadd( -85.9519, 196.824, -28.7026, 0.44 ) }
    dend_71 { pt3dadd( -85.9833, 196.893, -28.6794, 0.44 ) }
    dend_71 { pt3dadd( -86.2805, 197.653, -28.3675, 0.44 ) }
    dend_71 { pt3dadd( -86.3002, 197.717, -28.341, 0.44 ) }
    dend_71 { pt3dadd( -86.5414, 198.444, -28.0054, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_71 { pt3dadd( -86.6177, 198.639, -27.9093, 0.88 ) }
    dend_71 { pt3dadd( -87.1026, 199.706, -27.4538, 1.33 ) }
    dend_71 { pt3dadd( -87.1983, 199.878, -27.4005, 1.69 ) }
    dend_71 { pt3dadd( -87.7904, 200.825, -27.1945, 2.28 ) }
    dend_71 { pt3dadd( -88.4788, 201.834, -27.0201, 0.66 ) }
    dend_71 { pt3dadd( -88.9878, 202.507, -26.9392, 0.66 ) }
    dend_71 { pt3dadd( -89.7325, 203.435, -26.8848, 0.66 ) }
    dend_71 { pt3dadd( -90.5945, 204.467, -26.7836, 0.66 ) }
    dend_71 { pt3dadd( -90.6316, 204.512, -26.7753, 0.66 ) }
    dend_71 { pt3dadd( -91.1037, 205.093, -26.6244, 1.25 ) }
    dend_71 { pt3dadd( -91.5566, 205.699, -26.4327, 1.55 ) }
    dend_71 { pt3dadd( -91.8283, 206.069, -26.2736, 1.55 ) }
    dend_71 { pt3dadd( -92.9425, 207.48, -25.4282, 0.52 ) }
    dend_71 { pt3dadd( -93.4068, 208.028, -25.0434, 0.52 ) }
    dend_71 { pt3dadd( -93.9479, 208.587, -24.6355, 0.52 ) }
    dend_71 { pt3dadd( -93.9942, 208.628, -24.6025, 0.52 ) }
    dend_71 { pt3dadd( -94.3505, 208.903, -24.3414, 0.52 ) }
    dend_71 { pt3dadd( -95.1418, 209.404, -23.8168, 0.52 ) }
    dend_71 { pt3dadd( -95.1995, 209.432, -23.7876, 0.52 ) }
    dend_71 { pt3dadd( -95.629, 209.602, -23.5392, 0.52 ) }
    dend_71 { pt3dadd( -96.1536, 209.798, -23.1334, 0.96 ) }
    dend_71 { pt3dadd( -96.71, 210.017, -22.6342, 1.18 ) }
    dend_71 { pt3dadd( -96.8934, 210.097, -22.4214, 1.18 ) }
    dend_71 { pt3dadd( -97.1928, 210.251, -22.0316, 1.18 ) }
    dend_71 { pt3dadd( -97.2353, 210.274, -21.9803, 1.18 ) }
    dend_71 { pt3dadd( -98.2586, 210.853, -20.9268, 0.59 ) }
    dend_71 { pt3dadd( -98.3009, 210.877, -20.8907, 0.59 ) }
    dend_71 { pt3dadd( -99.2057, 211.403, -20.2536, 0.74 ) }
    dend_71 { pt3dadd( -99.7698, 211.762, -19.9108, 0.96 ) }
    dend_71 { pt3dadd( -100.367, 212.167, -19.605, 1.18 ) }
    dend_71 { pt3dadd( -101.153, 212.726, -19.3082, 1.25 ) }
    dend_71 { pt3dadd( -101.465, 212.962, -19.2441, 1.18 ) }
    dend_71 { pt3dadd( -101.945, 213.35, -19.1429, 0.59 ) }
    dend_71 { pt3dadd( -102.595, 213.919, -19.0231, 0.59 ) }
    dend_71 { pt3dadd( -102.711, 214.028, -18.9947, 0.59 ) }
    dend_71 { pt3dadd( -103.171, 214.497, -18.854, 0.59 ) }
    dend_71 { pt3dadd( -103.687, 215.049, -18.6676, 0.96 ) }
    dend_71 { pt3dadd( -104.425, 215.797, -18.4025, 1.33 ) }
    dend_71 { pt3dadd( -104.735, 216.111, -18.2861, 1.55 ) }
    dend_71 { pt3dadd( -105.212, 216.58, -18.1031, 1.55 ) }
    dend_71 { pt3dadd( -105.251, 216.62, -18.0831, 1.55 ) }
    dend_71 { pt3dadd( -105.903, 217.367, -17.6801, 1.77 ) }
    dend_71 { pt3dadd( -106.326, 217.89, -17.3948, 1.77 ) }
    dend_71 { pt3dadd( -106.601, 218.272, -17.22, 2.14 ) }
    dend_71 { pt3dadd( -106.642, 218.334, -17.1936, 2.14 ) }
    dend_71 { pt3dadd( -107.53, 219.71, -16.6751, 0.74 ) }
    dend_71 { pt3dadd( -108.067, 220.54, -16.408, 0.74 ) }
    dend_71 { pt3dadd( -108.124, 220.631, -16.3839, 0.74 ) }
    dend_71 { pt3dadd( -108.802, 221.698, -16.1184, 0.74 ) }
    dend_71 { pt3dadd( -109.21, 222.292, -15.9849, 0.96 ) }
    dend_71 { pt3dadd( -109.725, 222.982, -15.8625, 1.11 ) }
    dend_71 { pt3dadd( -110.126, 223.462, -15.8159, 1.4 ) }
    dend_71 { pt3dadd( -110.602, 223.932, -15.662, 1.4 ) }
    dend_71 { pt3dadd( -111.326, 224.479, -15.3361, 1.18 ) }
    dend_71 { pt3dadd( -111.447, 224.535, -15.2628, 1.18 ) }
    dend_71 { pt3dadd( -112.244, 224.744, -14.7187, 1.18 ) }
    dend_71 { pt3dadd( -113.241, 224.86, -14.0171, 0.74 ) }
    dend_71 { pt3dadd( -115.461, 224.896, -12.4478, 0.74 ) }
    dend_71 { pt3dadd( -116.342, 224.839, -11.8594, 0.74 ) }
    dend_71 { pt3dadd( -117.432, 224.713, -11.1367, 0.74 ) }
    dend_71 { pt3dadd( -117.946, 224.656, -10.8091, 0.96 ) }
    dend_71 { pt3dadd( -118.504, 224.615, -10.4638, 0.96 ) }
    dend_71 { pt3dadd( -118.574, 224.615, -10.4239, 0.96 ) }
    dend_71 { pt3dadd( -119.394, 224.779, -9.98939, 0.96 ) }
    dend_71 { pt3dadd( -120.832, 225.305, -9.08114, 0.81 ) }
    dend_71 { pt3dadd( -121.607, 225.734, -8.52413, 0.66 ) }
    dend_71 { pt3dadd( -122.314, 226.275, -7.88826, 0.66 ) }
    dend_71 { pt3dadd( -122.387, 226.346, -7.80913, 0.66 ) }
    dend_71 { pt3dadd( -123.149, 227.31, -6.83909, 0.66 ) }
    dend_71 { pt3dadd( -123.176, 227.357, -6.79635, 0.66 ) }
    dend_71 { pt3dadd( -123.446, 228.022, -6.28465, 0.66 ) }
    dend_71 { pt3dadd( -123.71, 228.706, -5.66559, 0.52 ) }
    dend_71 { pt3dadd( -123.729, 228.739, -5.62008, 0.52 ) }
    dend_71 { pt3dadd( -123.989, 228.989, -5.14299, 0.52 ) }
    dend_71 { pt3dadd( -124.145, 229.067, -4.89734, 0.96 ) }
    dend_71 { pt3dadd( -124.187, 229.078, -4.84172, 0.96 ) }
    dend_71 { pt3dadd( -125.278, 229.043, -3.75634, 0.96 ) }
    dend_71 { pt3dadd( -126.875, 228.746, -2.65422, 0.96 ) }
    dend_71 { pt3dadd( -127.668, 228.549, -2.272, 1.47 ) }
    dend_71 { pt3dadd( -128.079, 228.424, -2.1397, 1.69 ) }
    dend_71 { pt3dadd( -129.252, 228.04, -1.90668, 0.66 ) }
    dend_71 { pt3dadd( -131.052, 227.381, -1.86808, 0.29 ) }
    dend_71 { pt3dadd( -132.541, 226.734, -2.0971, 0.29 ) }
    dend_71 { pt3dadd( -133.638, 226.194, -2.39904, 0.88 ) }
    dend_71 { pt3dadd( -134.216, 225.882, -2.58313, 0.88 ) }
    dend_71 { pt3dadd( -134.274, 225.849, -2.60478, 0.88 ) }
    dend_71 { pt3dadd( -135.49, 225.051, -3.16421, 0.29 ) }
    dend_71 { pt3dadd( -136.08, 224.636, -3.50086, 0.29 ) }
    dend_71 { pt3dadd( -136.586, 224.214, -3.81435, 0.29 ) }
    dend_71 { pt3dadd( -136.655, 224.152, -3.8488, 0.29 ) }
    dend_71 { pt3dadd( -137.069, 223.754, -4.07744, 0.29 ) }
    dend_71 { pt3dadd( -137.263, 223.564, -4.18162, 0.96 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 92/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -67.5596, 154.304, -31.2221, 0.74 ) }
    dend_60 { pt3dadd( -67.1811, 155.354, -30.9167, 0.74 ) }
    dend_60 { pt3dadd( -66.872, 156.029, -30.8562, 0.74 ) }
    dend_60 { pt3dadd( -66.8137, 156.153, -30.8409, 0.74 ) }
    dend_60 { pt3dadd( -66.5561, 156.753, -30.7613, 0.74 ) }
    dend_60 { pt3dadd( -66.5265, 156.826, -30.7514, 0.74 ) }
    dend_60 { pt3dadd( -66.3903, 157.198, -30.7001, 0.22 ) }
    dend_60 { pt3dadd( -65.9397, 158.817, -30.5989, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_60 { pt3dadd( -65.8131, 159.501, -30.5443, 0.22 ) }
    dend_60 { pt3dadd( -65.7734, 159.814, -30.5158, 0.52 ) }
    dend_60 { pt3dadd( -65.7705, 159.885, -30.5084, 0.52 ) }
    dend_60 { pt3dadd( -65.7932, 160.259, -30.4686, 0.74 ) }
    dend_60 { pt3dadd( -65.8961, 160.969, -30.389, 1.03 ) }
    dend_60 { pt3dadd( -66.0182, 161.434, -30.3567, 1.03 ) }
    dend_60 { pt3dadd( -66.0423, 161.57, -30.3542, 1.03 ) }
    dend_60 { pt3dadd( -66.0777, 161.967, -30.3468, 1.18 ) }
    dend_60 { pt3dadd( -66.0925, 162.43, -30.3385, 1.33 ) }
    dend_60 { pt3dadd( -66.0709, 163.211, -30.3248, 0.96 ) }
    dend_60 { pt3dadd( -66.0588, 163.428, -30.3106, 0.74 ) }
    dend_60 { pt3dadd( -65.9884, 164.15, -30.2417, 0.74 ) }
    dend_60 { pt3dadd( -65.8861, 164.926, -30.1316, 1.18 ) }
    dend_60 { pt3dadd( -65.771, 165.627, -29.9912, 1.33 ) }
    dend_60 { pt3dadd( -65.7221, 165.9, -29.9262, 1.33 ) }
    dend_60 { pt3dadd( -65.5649, 166.758, -29.7055, 0.44 ) }
    dend_60 { pt3dadd( -65.3687, 167.922, -29.4006, 0.44 ) }
    dend_60 { pt3dadd( -65.28, 168.521, -29.2448, 0.44 ) }
    dend_60 { pt3dadd( -65.1652, 169.379, -29.0332, 0.66 ) }
    dend_60 { pt3dadd( -65.0977, 170.082, -28.8796, 0.66 ) }
    dend_60 { pt3dadd( -65.069, 170.849, -28.7451, 0.66 ) }
    dend_60 { pt3dadd( -65.0981, 171.49, -28.6796, 0.88 ) }
    dend_60 { pt3dadd( -65.2065, 172.214, -28.658, 1.11 ) }
    dend_60 { pt3dadd( -65.3199, 172.711, -28.6833, 1.11 ) }
    dend_60 { pt3dadd( -65.507, 173.294, -28.7522, 1.11 ) }
    dend_60 { pt3dadd( -65.746, 173.905, -28.8439, 1.11 ) }
    dend_60 { pt3dadd( -66.0489, 174.621, -29.0076, 0.52 ) }
    dend_60 { pt3dadd( -66.2219, 175.123, -29.1488, 0.44 ) }
    dend_60 { pt3dadd( -66.2457, 175.216, -29.1766, 0.44 ) }
    dend_60 { pt3dadd( -66.3259, 175.692, -29.3178, 0.44 ) }
    dend_60 { pt3dadd( -66.3687, 176.322, -29.4912, 0.44 ) }
    dend_60 { pt3dadd( -66.3677, 177.173, -29.7407, 0.74 ) }
    dend_60 { pt3dadd( -66.3731, 178.164, -30.0128, 0.74 ) }
    dend_60 { pt3dadd( -66.4086, 179.089, -30.3254, 0.59 ) }
    dend_60 { pt3dadd( -66.4139, 179.164, -30.3549, 0.59 ) }
    dend_60 { pt3dadd( -66.4704, 179.742, -30.6047, 0.59 ) }
    dend_60 { pt3dadd( -66.5797, 180.577, -30.978, 0.59 ) }
    dend_60 { pt3dadd( -66.747, 181.583, -31.429, 1.84 ) }
    dend_60 { pt3dadd( -66.9605, 182.737, -31.9775, 1.84 ) }
    dend_60 { pt3dadd( -67.0199, 183.261, -32.2184, 1.18 ) }
    dend_60 { pt3dadd( -67.042, 183.722, -32.4081, 0.88 ) }
    dend_60 { pt3dadd( -67.0181, 184.329, -32.6402, 0.88 ) }
    dend_60 { pt3dadd( -67.0077, 184.395, -32.6596, 0.88 ) }
    dend_60 { pt3dadd( -66.8659, 185.033, -32.8137, 0.88 ) }
    dend_60 { pt3dadd( -66.7398, 185.802, -32.9379, 0.88 ) }
    dend_60 { pt3dadd( -66.7261, 185.948, -32.9644, 0.88 ) }
    dend_60 { pt3dadd( -66.7461, 186.863, -33.1408, 0.88 ) }
    dend_60 { pt3dadd( -66.8356, 187.486, -33.2654, 0.59 ) }
    dend_60 { pt3dadd( -67.0546, 188.285, -33.4177, 0.52 ) }
    dend_60 { pt3dadd( -67.3284, 188.925, -33.5252, 0.52 ) }
    dend_60 { pt3dadd( -67.3949, 189.047, -33.542, 0.52 ) }
    dend_60 { pt3dadd( -67.6313, 189.516, -33.5791, 0.52 ) }
    dend_60 { pt3dadd( -67.6606, 189.578, -33.5791, 0.52 ) }
    dend_60 { pt3dadd( -67.804, 190.061, -33.6377, 0.52 ) }
    dend_60 { pt3dadd( -67.8328, 190.792, -33.8042, 0.52 ) }
    dend_60 { pt3dadd( -67.8239, 190.869, -33.826, 0.52 ) }
    dend_60 { pt3dadd( -67.6082, 191.817, -34.1168, 0.52 ) }
    dend_60 { pt3dadd( -67.5785, 191.914, -34.1482, 0.52 ) }
    dend_60 { pt3dadd( -67.1488, 193.115, -34.5371, 1.11 ) }
    dend_60 { pt3dadd( -66.9397, 193.624, -34.7004, 1.4 ) }
    dend_60 { pt3dadd( -66.9138, 193.685, -34.719, 1.4 ) }
    dend_60 { pt3dadd( -66.7102, 194.264, -34.8609, 1.55 ) }
    dend_60 { pt3dadd( -66.6467, 194.512, -34.9379, 1.55 ) }
    dend_60 { pt3dadd( -66.5379, 195.125, -35.139, 0.88 ) }
    dend_60 { pt3dadd( -66.5263, 195.531, -35.2656, 0.74 ) }
    dend_60 { pt3dadd( -66.5582, 195.864, -35.3859, 0.52 ) }
    dend_60 { pt3dadd( -66.7311, 196.681, -35.755, 0.52 ) }
    dend_60 { pt3dadd( -67.0643, 197.835, -36.3374, 0.52 ) }
    dend_60 { pt3dadd( -67.0837, 197.897, -36.3681, 0.52 ) }
    dend_60 { pt3dadd( -67.3336, 198.585, -36.6686, 0.52 ) }
    dend_60 { pt3dadd( -67.5152, 199.061, -36.9228, 0.96 ) }
    dend_60 { pt3dadd( -67.8328, 199.892, -37.4057, 1.18 ) }
    dend_60 { pt3dadd( -68.0236, 200.413, -37.7603, 1.18 ) }
    dend_60 { pt3dadd( -68.2607, 201.12, -38.2638, 1.03 ) }
    dend_60 { pt3dadd( -68.5739, 202.194, -39.1142, 1.03 ) }
    dend_60 { pt3dadd( -68.9474, 203.777, -40.5188, 0.74 ) }
    dend_60 { pt3dadd( -68.9566, 203.827, -40.5661, 0.74 ) }
    dend_60 { pt3dadd( -69.0678, 204.649, -41.4084, 1.03 ) }
    dend_60 { pt3dadd( -69.0716, 204.695, -41.4611, 1.03 ) }
    dend_60 { pt3dadd( -69.0582, 205.03, -41.8042, 1.03 ) }
    dend_60 { pt3dadd( -69.0502, 205.092, -41.8348, 1.03 ) }
    dend_60 { pt3dadd( -69.0179, 205.61, -41.9303, 1.03 ) }
    dend_60 { pt3dadd( -69.0199, 205.688, -41.9416, 1.03 ) }
    dend_60 { pt3dadd( -69.0769, 206.248, -41.9983, 0.37 ) }
    dend_60 { pt3dadd( -69.3058, 207.692, -42.1549, 0.37 ) }
    dend_60 { pt3dadd( -69.5483, 208.845, -42.2837, 0.37 ) }
    dend_60 { pt3dadd( -69.7244, 209.575, -42.3631, 1.33 ) }
    dend_60 { pt3dadd( -69.8977, 210.206, -42.4302, 1.92 ) }
    dend_60 { pt3dadd( -70.0612, 210.744, -42.4836, 2.36 ) }
    dend_60 { pt3dadd( -70.1835, 211.092, -42.5362, 2.06 ) }
    dend_60 { pt3dadd( -70.4455, 211.713, -42.6614, 1.47 ) }
    dend_60 { pt3dadd( -70.7683, 212.468, -42.8279, 0.88 ) }
    dend_60 { pt3dadd( -70.9028, 212.816, -42.9016, 0.81 ) }
    dend_60 { pt3dadd( -71.1143, 213.438, -43.0473, 0.74 ) }
    dend_60 { pt3dadd( -71.428, 214.44, -43.2983, 0.59 ) }
    dend_60 { pt3dadd( -71.6549, 215.303, -43.5116, 0.59 ) }
    dend_60 { pt3dadd( -71.7731, 215.856, -43.6483, 0.59 ) }
    dend_60 { pt3dadd( -71.8021, 216.146, -43.7069, 0.96 ) }
    dend_60 { pt3dadd( -71.7962, 216.632, -43.7856, 1.25 ) }
    dend_60 { pt3dadd( -71.7714, 216.852, -43.8317, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_60 { pt3dadd( -71.6117, 217.683, -44.0103, 0.59 ) }
    dend_60 { pt3dadd( -71.5942, 217.75, -44.0272, 0.59 ) }
    dend_60 { pt3dadd( -71.2665, 218.958, -44.3437, 0.59 ) }
    dend_60 { pt3dadd( -71.0081, 220.031, -44.6213, 0.59 ) }
    dend_60 { pt3dadd( -70.7409, 221.322, -44.9474, 1.03 ) }
    dend_60 { pt3dadd( -70.6089, 222.187, -45.1553, 1.4 ) }
    dend_60 { pt3dadd( -70.5359, 223.015, -45.371, 1.62 ) }
    dend_60 { pt3dadd( -70.5291, 223.916, -45.6074, 1.33 ) }
    dend_60 { pt3dadd( -70.6077, 224.759, -45.8218, 1.47 ) }
    dend_60 { pt3dadd( -70.6978, 225.306, -45.9383, 1.77 ) }
    dend_60 { pt3dadd( -70.8893, 226.035, -46.0534, 1.77 ) }
    dend_60 { pt3dadd( -71.2178, 226.886, -46.2188, 1.77 ) }
    dend_60 { pt3dadd( -71.5165, 227.474, -46.3606, 1.92 ) }
    dend_60 { pt3dadd( -71.8373, 228.023, -46.5333, 1.92 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 14/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 92.831, 135.664, 19.0101, 1.03 ) }
    dend_52 { pt3dadd( 93.6732, 136.74, 19.5701, 1.03 ) }
    dend_52 { pt3dadd( 94.2157, 137.389, 20.0092, 1.03 ) }
    dend_52 { pt3dadd( 94.7304, 137.982, 20.4544, 1.4 ) }
    dend_52 { pt3dadd( 95.2517, 138.556, 20.8961, 1.62 ) }
    dend_52 { pt3dadd( 95.9062, 139.258, 21.4483, 1.62 ) }
    dend_52 { pt3dadd( 96.684, 140.068, 22.0496, 0.66 ) }
    dend_52 { pt3dadd( 97.6042, 140.988, 22.6713, 0.66 ) }
    dend_52 { pt3dadd( 97.671, 141.05, 22.7133, 0.66 ) }
    dend_52 { pt3dadd( 98.3546, 141.644, 23.1272, 0.66 ) }
    dend_52 { pt3dadd( 98.4025, 141.686, 23.154, 0.66 ) }
    dend_52 { pt3dadd( 99.4744, 142.696, 23.6516, 0.66 ) }
    dend_52 { pt3dadd( 99.5203, 142.745, 23.6767, 0.66 ) }
    dend_52 { pt3dadd( 100.312, 143.722, 24.1463, 0.66 ) }
    dend_52 { pt3dadd( 100.859, 144.469, 24.5432, 0.66 ) }
    dend_52 { pt3dadd( 101.11, 144.846, 24.8128, 1.11 ) }
    dend_52 { pt3dadd( 101.328, 145.193, 25.1109, 1.11 ) }
    dend_52 { pt3dadd( 101.854, 146.15, 26.0823, 0.52 ) }
    dend_52 { pt3dadd( 101.874, 146.188, 26.1226, 0.52 ) }
    dend_52 { pt3dadd( 102.126, 146.654, 26.6223, 0.52 ) }
    dend_52 { pt3dadd( 102.844, 147.79, 27.695, 0.52 ) }
    dend_52 { pt3dadd( 102.875, 147.83, 27.7269, 0.52 ) }
    dend_52 { pt3dadd( 103.18, 148.161, 27.9221, 0.52 ) }
    dend_52 { pt3dadd( 103.585, 148.538, 28.0595, 1.55 ) }
    dend_52 { pt3dadd( 104.112, 148.977, 28.17, 2.21 ) }
    dend_52 { pt3dadd( 104.672, 149.413, 28.2499, 2.5 ) }
    dend_52 { pt3dadd( 105.385, 149.984, 28.3026, 2.5 ) }
    dend_52 { pt3dadd( 106.278, 150.73, 28.3431, 1.03 ) }
    dend_52 { pt3dadd( 106.801, 151.175, 28.3569, 0.66 ) }
    dend_52 { pt3dadd( 107.695, 151.969, 28.3625, 0.66 ) }
    dend_52 { pt3dadd( 108.402, 152.605, 28.3555, 0.44 ) }
    dend_52 { pt3dadd( 109.051, 153.201, 28.338, 0.44 ) }
    dend_52 { pt3dadd( 109.646, 153.792, 28.3076, 0.44 ) }
    dend_52 { pt3dadd( 109.713, 153.863, 28.302, 0.44 ) }
    dend_52 { pt3dadd( 110.279, 154.45, 28.2378, 0.44 ) }
    dend_52 { pt3dadd( 110.675, 154.775, 28.1863, 0.88 ) }
    dend_52 { pt3dadd( 110.738, 154.81, 28.1771, 0.88 ) }
    dend_52 { pt3dadd( 111.229, 155.019, 28.1292, 1.11 ) }
    dend_52 { pt3dadd( 111.748, 155.215, 28.1004, 1.11 ) }
    dend_52 { pt3dadd( 111.964, 155.296, 28.0865, 1.11 ) }
    dend_52 { pt3dadd( 112.973, 155.631, 28.0172, 1.11 ) }
    dend_52 { pt3dadd( 113.487, 155.789, 27.9847, 1.25 ) }
    dend_52 { pt3dadd( 114.181, 155.96, 27.947, 1.69 ) }
    dend_52 { pt3dadd( 114.26, 155.975, 27.9432, 1.69 ) }
    dend_52 { pt3dadd( 114.506, 156.018, 27.9336, 1.69 ) }
    dend_52 { pt3dadd( 115.47, 156.203, 27.9084, 1.69 ) }
    dend_52 { pt3dadd( 116.532, 156.435, 27.9324, 1.25 ) }
    dend_52 { pt3dadd( 117.333, 156.621, 27.9761, 0.74 ) }
    dend_52 { pt3dadd( 117.402, 156.635, 27.9802, 0.74 ) }
    dend_52 { pt3dadd( 118.374, 156.769, 28.0375, 0.66 ) }
    dend_52 { pt3dadd( 119.711, 156.917, 28.1646, 0.66 ) }
    dend_52 { pt3dadd( 120.929, 157.022, 28.3107, 0.44 ) }
    dend_52 { pt3dadd( 122.135, 157.109, 28.5097, 0.44 ) }
    dend_52 { pt3dadd( 123.456, 157.186, 28.7651, 0.44 ) }
    dend_52 { pt3dadd( 124.992, 157.272, 29.1338, 0.44 ) }
    dend_52 { pt3dadd( 126.384, 157.353, 29.5265, 0.44 ) }
    dend_52 { pt3dadd( 127.087, 157.393, 29.7273, 1.11 ) }
    dend_52 { pt3dadd( 128.298, 157.492, 30.0689, 1.11 ) }
    dend_52 { pt3dadd( 128.922, 157.57, 30.2226, 1.33 ) }
    dend_52 { pt3dadd( 130.203, 157.827, 30.4647, 0.29 ) }
    dend_52 { pt3dadd( 131.051, 158.051, 30.5498, 0.29 ) }
    dend_52 { pt3dadd( 132.219, 158.377, 30.5294, 0.29 ) }
    dend_52 { pt3dadd( 132.296, 158.401, 30.5298, 0.29 ) }
    dend_52 { pt3dadd( 133.775, 158.896, 30.5476, 0.29 ) }
    dend_52 { pt3dadd( 134.418, 159.132, 30.6161, 0.81 ) }
    dend_52 { pt3dadd( 135.05, 159.374, 30.7255, 1.11 ) }
    dend_52 { pt3dadd( 135.638, 159.625, 30.8855, 1.11 ) }
    dend_52 { pt3dadd( 137.234, 160.376, 31.4614, 0.74 ) }
    dend_52 { pt3dadd( 138.328, 160.912, 31.9156, 0.44 ) }
    dend_52 { pt3dadd( 139.443, 161.503, 32.4718, 0.44 ) }
    dend_52 { pt3dadd( 139.744, 161.667, 32.6184, 0.81 ) }
    dend_52 { pt3dadd( 140.328, 161.997, 32.8804, 0.81 ) }
    dend_52 { pt3dadd( 140.564, 162.142, 32.9695, 0.81 ) }
    dend_52 { pt3dadd( 141.092, 162.516, 33.0823, 0.37 ) }
    dend_52 { pt3dadd( 141.152, 162.567, 33.0918, 0.37 ) }
    dend_52 { pt3dadd( 142.008, 163.409, 33.1694, 0.37 ) }
    dend_52 { pt3dadd( 142.338, 163.733, 33.1953, 0.66 ) }
    dend_52 { pt3dadd( 142.557, 163.952, 33.1991, 1.03 ) }
    dend_52 { pt3dadd( 143.276, 164.681, 33.1814, 1.03 ) }
    dend_52 { pt3dadd( 144.075, 165.509, 33.1336, 1.03 ) }
    dend_52 { pt3dadd( 144.859, 166.343, 33.0757, 0.29 ) }
    dend_52 { pt3dadd( 145.962, 167.567, 32.9781, 0.29 ) }
    dend_52 { pt3dadd( 146.579, 168.286, 32.932, 0.29 ) }
    dend_52 { pt3dadd( 146.978, 168.752, 32.9221, 0.66 ) }
    dend_52 { pt3dadd( 147.538, 169.394, 32.9354, 0.66 ) }
    dend_52 { pt3dadd( 147.979, 169.874, 32.9699, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_52 { pt3dadd( 148.42, 170.336, 33.0289, 1.4 ) }
    dend_52 { pt3dadd( 149.073, 171.033, 33.1704, 0.29 ) }
    dend_52 { pt3dadd( 149.791, 171.761, 33.3711, 0.29 ) }
    dend_52 { pt3dadd( 150.365, 172.32, 33.5254, 0.29 ) }
    dend_52 { pt3dadd( 150.992, 172.917, 33.6506, 0.29 ) }
    dend_52 { pt3dadd( 151.099, 173.023, 33.6638, 0.29 ) }
    dend_52 { pt3dadd( 151.657, 173.599, 33.6827, 0.29 ) }
    dend_52 { pt3dadd( 151.748, 173.707, 33.6756, 0.52 ) }
    dend_52 { pt3dadd( 152.371, 174.525, 33.5439, 0.52 ) }
    dend_52 { pt3dadd( 152.962, 175.312, 33.3965, 0.52 ) }
    dend_52 { pt3dadd( 153.365, 175.842, 33.3426, 1.25 ) }
    dend_52 { pt3dadd( 153.759, 176.313, 33.3294, 1.69 ) }
    dend_52 { pt3dadd( 154.313, 176.915, 33.4026, 1.69 ) }
    dend_52 { pt3dadd( 155.232, 177.824, 33.6297, 0.59 ) }
    dend_52 { pt3dadd( 155.944, 178.48, 33.9259, 0.59 ) }
    dend_52 { pt3dadd( 157.028, 179.425, 34.524, 0.59 ) }
    dend_52 { pt3dadd( 157.681, 179.959, 34.9327, 0.96 ) }
    dend_52 { pt3dadd( 158.685, 180.756, 35.6262, 0.44 ) }
    dend_52 { pt3dadd( 159.338, 181.24, 36.1032, 0.44 ) }
    dend_52 { pt3dadd( 160.067, 181.715, 36.6572, 1.11 ) }
    dend_52 { pt3dadd( 160.151, 181.764, 36.7157, 1.11 ) }
    dend_52 { pt3dadd( 160.686, 181.986, 37.0102, 1.11 ) }
    dend_52 { pt3dadd( 161.244, 182.159, 37.3097, 1.55 ) }
    dend_52 { pt3dadd( 161.822, 182.294, 37.5915, 1.55 ) }
    dend_52 { pt3dadd( 163.357, 182.64, 38.2985, 0.29 ) }
    dend_52 { pt3dadd( 163.421, 182.654, 38.3253, 0.29 ) }
    dend_52 { pt3dadd( 165.214, 183.093, 39.0307, 0.29 ) }
    dend_52 { pt3dadd( 165.897, 183.26, 39.2851, 0.22 ) }
    dend_52 { pt3dadd( 165.962, 183.276, 39.3077, 0.22 ) }
    dend_52 { pt3dadd( 167.226, 183.605, 39.6888, 0.22 ) }
    dend_52 { pt3dadd( 167.294, 183.626, 39.7037, 0.22 ) }
    dend_52 { pt3dadd( 168.765, 184.092, 39.945, 0.22 ) }
    dend_52 { pt3dadd( 169.391, 184.328, 39.9914, 0.22 ) }
    dend_52 { pt3dadd( 169.46, 184.353, 39.9943, 0.22 ) }
    dend_52 { pt3dadd( 170.06, 184.55, 40.0214, 0.59 ) }
    dend_52 { pt3dadd( 170.293, 184.611, 40.0335, 0.96 ) }
    dend_52 { pt3dadd( 171.026, 184.802, 40.0719, 0.96 ) }
    dend_52 { pt3dadd( 171.721, 184.966, 40.1092, 0.96 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 38/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 92.831, 135.664, 19.0101, 0.29 ) }
    dend_51 { pt3dadd( 93.3038, 135.068, 19.3551, 0.29 ) }
    dend_51 { pt3dadd( 93.8016, 134.473, 19.694, 0.29 ) }
    dend_51 { pt3dadd( 93.8427, 134.424, 19.7219, 0.29 ) }
    dend_51 { pt3dadd( 95.7387, 132.16, 21.0125, 0.15 ) }
    dend_51 { pt3dadd( 95.8698, 132.003, 21.1017, 0.15 ) }
    dend_51 { pt3dadd( 96.1534, 131.665, 21.2948, 0.74 ) }
    dend_51 { pt3dadd( 96.3391, 131.462, 21.4303, 0.74 ) }
    // Section: dend_49, id: dend_49, parent: dend_3 (entry count 46/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 32.5609, 115.06, -58.9635, 0.22 ) }
    dend_49 { pt3dadd( 28.4959, 114.865, -48.3569, 0.22 ) }
    dend_49 { pt3dadd( 28.4672, 114.864, -48.2822, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 49/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 32.5609, 115.06, -58.9635, 0.88 ) }
    dend_4 { pt3dadd( 32.7858, 115.76, -59.4036, 0.88 ) }
    dend_4 { pt3dadd( 33.2065, 117.07, -60.2266, 1.99 ) }
    dend_4 { pt3dadd( 33.53, 118.077, -60.8596, 2.43 ) }
    dend_4 { pt3dadd( 33.6312, 118.392, -61.0575, 2.43 ) }
    // Section: dend_144, id: dend_144, parent: dend_132 (entry count 54/100)
    dend_144 { pt3dclear() }
    dend_144 { pt3dadd( 101.864, -181.045, -2.10158, 0.74 ) }
    dend_144 { pt3dadd( 102.561, -181.042, -1.45644, 0.74 ) }
    dend_144 { pt3dadd( 103.41, -181.039, -0.70592, 0.74 ) }
    dend_144 { pt3dadd( 105.341, -181.036, 0.951366, 0.88 ) }
    dend_144 { pt3dadd( 105.881, -181.043, 1.39459, 0.88 ) }
    dend_144 { pt3dadd( 105.96, -181.046, 1.45645, 0.88 ) }
    dend_144 { pt3dadd( 106.93, -181.123, 2.1503, 0.29 ) }
    dend_144 { pt3dadd( 107.199, -181.166, 2.32624, 0.66 ) }
    dend_144 { pt3dadd( 107.261, -181.185, 2.35122, 0.66 ) }
    dend_144 { pt3dadd( 107.6, -181.398, 2.28535, 0.96 ) }
    dend_144 { pt3dadd( 107.823, -181.58, 2.20435, 0.96 ) }
    dend_144 { pt3dadd( 108.609, -182.303, 1.83954, 0.81 ) }
    dend_144 { pt3dadd( 109.117, -182.821, 1.53981, 0.59 ) }
    dend_144 { pt3dadd( 109.189, -182.893, 1.50851, 0.59 ) }
    dend_144 { pt3dadd( 109.874, -183.552, 1.3418, 0.44 ) }
    dend_144 { pt3dadd( 109.933, -183.606, 1.3391, 0.44 ) }
    dend_144 { pt3dadd( 110.5, -184.083, 1.3603, 0.44 ) }
    dend_144 { pt3dadd( 110.557, -184.128, 1.36699, 0.44 ) }
    dend_144 { pt3dadd( 111.605, -185.009, 1.52077, 0.44 ) }
    dend_144 { pt3dadd( 112.147, -185.486, 1.60743, 1.18 ) }
    dend_144 { pt3dadd( 112.869, -186.145, 1.73772, 2.06 ) }
    dend_144 { pt3dadd( 113.578, -186.787, 1.84289, 2.21 ) }
    dend_144 { pt3dadd( 114.089, -187.211, 1.89578, 2.21 ) }
    dend_144 { pt3dadd( 115.074, -187.968, 1.94823, 0.37 ) }
    dend_144 { pt3dadd( 115.556, -188.273, 1.95292, 0.29 ) }
    dend_144 { pt3dadd( 115.646, -188.314, 1.96037, 0.29 ) }
    dend_144 { pt3dadd( 116.152, -188.436, 2.05529, 0.29 ) }
    dend_144 { pt3dadd( 117.134, -188.474, 2.34924, 0.29 ) }
    dend_144 { pt3dadd( 117.236, -188.458, 2.38235, 0.29 ) }
    dend_144 { pt3dadd( 118.249, -188.158, 2.72324, 0.29 ) }
    dend_144 { pt3dadd( 118.323, -188.137, 2.74962, 0.29 ) }
    dend_144 { pt3dadd( 118.75, -188.056, 2.91025, 0.29 ) }
    dend_144 { pt3dadd( 118.837, -188.058, 2.9434, 0.29 ) }
    dend_144 { pt3dadd( 119.128, -188.194, 3.03381, 0.96 ) }
    dend_144 { pt3dadd( 119.244, -188.268, 3.06012, 0.96 ) }
    dend_144 { pt3dadd( 119.744, -188.717, 3.11063, 1.18 ) }
    dend_144 { pt3dadd( 119.793, -188.765, 3.11498, 1.18 ) }
    dend_144 { pt3dadd( 120.126, -189.12, 3.1335, 1.18 ) }
    dend_144 { pt3dadd( 120.407, -189.427, 3.14088, 1.18 ) }
    // Section: dend_133, id: dend_133, parent: dend_132 (entry count 93/100)
    dend_133 { pt3dclear() }
    dend_133 { pt3dadd( 101.864, -181.045, -2.10158, 1.03 ) }
    dend_133 { pt3dadd( 101.679, -182.225, -1.85335, 1.03 ) }
    dend_133 { pt3dadd( 101.573, -182.9, -1.71124, 1.03 ) }
    dend_133 { pt3dadd( 101.48, -183.494, -1.58644, 1.03 ) }
    // Section: dend_120, id: dend_120, parent: dend_118 (entry count 97/100)
    dend_120 { pt3dclear() }
    dend_120 { pt3dadd( -17.8365, -136.423, 5.42648, 0.52 ) }
    dend_120 { pt3dadd( -18.0293, -137.016, 5.56986, 0.52 ) }
    dend_120 { pt3dadd( -18.4746, -138.46, 6.07785, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_120 { pt3dadd( -18.6651, -139.136, 6.3256, 0.96 ) }
    dend_120 { pt3dadd( -18.8575, -139.861, 6.5734, 1.18 ) }
    dend_120 { pt3dadd( -18.9779, -140.334, 6.72525, 1.47 ) }
    dend_120 { pt3dadd( -19.0657, -140.666, 6.82128, 1.47 ) }
    dend_120 { pt3dadd( -19.4448, -141.852, 7.11641, 0.81 ) }
    dend_120 { pt3dadd( -19.8175, -142.896, 7.42111, 0.52 ) }
    dend_120 { pt3dadd( -20.1755, -143.786, 7.69033, 0.52 ) }
    dend_120 { pt3dadd( -20.3535, -144.164, 7.81241, 1.11 ) }
    dend_120 { pt3dadd( -20.8955, -145.208, 8.08215, 1.11 ) }
    dend_120 { pt3dadd( -21.3721, -146.049, 8.24366, 1.11 ) }
    dend_120 { pt3dadd( -22.0763, -147.197, 8.34756, 0.81 ) }
    dend_120 { pt3dadd( -22.1145, -147.255, 8.3479, 0.81 ) }
    dend_120 { pt3dadd( -22.689, -148.114, 8.27726, 0.81 ) }
    dend_120 { pt3dadd( -23.3929, -149.313, 8.06423, 0.81 ) }
    dend_120 { pt3dadd( -23.4184, -149.373, 8.04476, 0.81 ) }
    dend_120 { pt3dadd( -23.6486, -150.236, 7.69021, 0.81 ) }
    dend_120 { pt3dadd( -23.8001, -151.048, 7.29655, 0.52 ) }
    dend_120 { pt3dadd( -23.8074, -151.14, 7.25506, 0.52 ) }
    dend_120 { pt3dadd( -23.7966, -152.162, 6.84252, 0.52 ) }
    dend_120 { pt3dadd( -23.7374, -153.156, 6.52479, 0.52 ) }
    dend_120 { pt3dadd( -23.7113, -153.574, 6.39076, 1.11 ) }
    dend_120 { pt3dadd( -23.7068, -153.64, 6.37, 1.11 ) }
    dend_120 { pt3dadd( -23.6752, -154.471, 6.15277, 1.4 ) }
    dend_120 { pt3dadd( -23.6907, -155.214, 5.93539, 1.11 ) }
    dend_120 { pt3dadd( -23.6959, -155.28, 5.91507, 1.11 ) }
    dend_120 { pt3dadd( -23.874, -156.808, 5.45625, 0.96 ) }
    dend_120 { pt3dadd( -23.8987, -156.963, 5.41004, 0.88 ) }
    dend_120 { pt3dadd( -24.1244, -158.125, 5.06827, 0.88 ) }
    dend_120 { pt3dadd( -24.3897, -159.118, 4.82754, 0.66 ) }
    dend_120 { pt3dadd( -24.5675, -159.726, 4.71332, 0.66 ) }
    dend_120 { pt3dadd( -24.5926, -159.79, 4.70649, 0.66 ) }
    dend_120 { pt3dadd( -25.0266, -160.579, 4.82305, 0.66 ) }
    dend_120 { pt3dadd( -25.0689, -160.643, 4.84322, 0.66 ) }
    dend_120 { pt3dadd( -25.7675, -161.51, 5.27887, 0.66 ) }
    dend_120 { pt3dadd( -25.8142, -161.567, 5.31291, 0.66 ) }
    dend_120 { pt3dadd( -26.2941, -162.168, 5.67638, 0.66 ) }
    dend_120 { pt3dadd( -27.1479, -163.339, 6.34106, 0.66 ) }
    dend_120 { pt3dadd( -27.5535, -163.995, 6.66807, 0.81 ) }
    dend_120 { pt3dadd( -27.5841, -164.053, 6.69178, 0.81 ) }
    dend_120 { pt3dadd( -27.9281, -164.886, 6.94416, 0.81 ) }
    dend_120 { pt3dadd( -27.9521, -164.959, 6.96195, 0.81 ) }
    dend_120 { pt3dadd( -28.0691, -165.504, 7.04446, 1.18 ) }
    dend_120 { pt3dadd( -28.1952, -166.355, 7.05458, 1.33 ) }
    dend_120 { pt3dadd( -28.2022, -166.492, 7.05654, 1.33 ) }
    dend_120 { pt3dadd( -28.2042, -166.912, 7.06303, 1.33 ) }
    dend_120 { pt3dadd( -28.1975, -166.971, 7.06395, 1.33 ) }
    dend_120 { pt3dadd( -28.1003, -167.465, 7.07951, 1.03 ) }
    dend_120 { pt3dadd( -27.9365, -168.089, 7.10664, 0.74 ) }
    dend_120 { pt3dadd( -27.6143, -169.034, 7.15577, 0.74 ) }
    dend_120 { pt3dadd( -27.591, -169.099, 7.15929, 0.74 ) }
    dend_120 { pt3dadd( -27.2309, -170.05, 7.21159, 0.74 ) }
    dend_120 { pt3dadd( -27.0746, -170.474, 7.23315, 0.88 ) }
    dend_120 { pt3dadd( -26.9641, -170.822, 7.2511, 0.88 ) }
    dend_120 { pt3dadd( -26.8882, -171.27, 7.2728, 0.88 ) }
    dend_120 { pt3dadd( -26.9296, -171.761, 7.29172, 0.29 ) }
    dend_120 { pt3dadd( -27.0124, -172.019, 7.29807, 0.66 ) }
    dend_120 { pt3dadd( -27.369, -172.707, 7.2817, 0.66 ) }
    dend_120 { pt3dadd( -27.728, -173.324, 7.24307, 0.66 ) }
    dend_120 { pt3dadd( -28.1368, -174.033, 7.18991, 0.96 ) }
    dend_120 { pt3dadd( -28.5262, -174.704, 7.1345, 1.11 ) }
    dend_120 { pt3dadd( -28.9345, -175.474, 7.06817, 1.11 ) }
    dend_120 { pt3dadd( -29.2369, -176.098, 7.01238, 0.59 ) }
    dend_120 { pt3dadd( -29.6059, -176.943, 6.88235, 0.59 ) }
    dend_120 { pt3dadd( -29.9886, -177.996, 6.66488, 0.59 ) }
    dend_120 { pt3dadd( -30.0296, -178.124, 6.63377, 0.59 ) }
    dend_120 { pt3dadd( -30.2933, -178.906, 6.43622, 0.59 ) }
    dend_120 { pt3dadd( -30.3184, -178.971, 6.41975, 0.59 ) }
    dend_120 { pt3dadd( -30.8356, -180.122, 6.20241, 1.18 ) }
    dend_120 { pt3dadd( -31.0922, -180.647, 6.13037, 1.4 ) }
    dend_120 { pt3dadd( -31.6184, -181.676, 6.03412, 1.62 ) }
    dend_120 { pt3dadd( -32.205, -182.816, 5.97326, 1.99 ) }
    dend_120 { pt3dadd( -32.4042, -183.189, 5.96989, 1.99 ) }
    dend_120 { pt3dadd( -33.0455, -184.402, 6.01708, 1.03 ) }
    dend_120 { pt3dadd( -33.4579, -185.239, 6.06213, 0.81 ) }
    dend_120 { pt3dadd( -33.7701, -185.903, 6.06953, 0.81 ) }
    dend_120 { pt3dadd( -33.7924, -185.957, 6.06302, 0.81 ) }
    dend_120 { pt3dadd( -34.0207, -186.616, 5.88428, 0.66 ) }
    dend_120 { pt3dadd( -34.253, -187.442, 5.49586, 0.66 ) }
    dend_120 { pt3dadd( -34.4581, -188.348, 4.92209, 1.18 ) }
    dend_120 { pt3dadd( -34.4696, -188.407, 4.88416, 1.18 ) }
    dend_120 { pt3dadd( -34.686, -189.619, 4.15233, 0.74 ) }
    dend_120 { pt3dadd( -34.8314, -190.43, 3.7049, 0.59 ) }
    dend_120 { pt3dadd( -35.029, -191.585, 3.11675, 0.59 ) }
    dend_120 { pt3dadd( -35.1954, -192.368, 2.76568, 0.59 ) }
    dend_120 { pt3dadd( -35.5426, -193.552, 2.31532, 0.59 ) }
    dend_120 { pt3dadd( -35.7211, -194.048, 2.14231, 0.74 ) }
    dend_120 { pt3dadd( -36.0012, -194.641, 1.98061, 1.03 ) }
    dend_120 { pt3dadd( -36.0779, -194.772, 1.9457, 1.03 ) }
    dend_120 { pt3dadd( -36.4935, -195.347, 1.8237, 1.25 ) }
    dend_120 { pt3dadd( -37.1166, -196.068, 1.66676, 1.55 ) }
    dend_120 { pt3dadd( -37.1709, -196.127, 1.65553, 1.55 ) }
    dend_120 { pt3dadd( -37.6874, -196.749, 1.58081, 1.55 ) }
    dend_120 { pt3dadd( -37.7297, -196.805, 1.57673, 1.55 ) }
    dend_120 { pt3dadd( -38.0846, -197.363, 1.5614, 1.55 ) }
    dend_120 { pt3dadd( -38.4859, -198.166, 1.57214, 0.66 ) }
    dend_120 { pt3dadd( -38.9133, -199.14, 1.62265, 0.66 ) }
    dend_120 { pt3dadd( -39.3017, -200.186, 1.64473, 0.66 ) }
    dend_120 { pt3dadd( -39.3247, -200.261, 1.64434, 0.66 ) }
    dend_120 { pt3dadd( -39.612, -201.387, 1.61249, 0.66 ) }
    dend_120 { pt3dadd( -39.7373, -202.167, 1.56894, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_120 { pt3dadd( -39.7442, -202.245, 1.56599, 0.96 ) }
    dend_120 { pt3dadd( -39.817, -203.145, 1.64657, 0.88 ) }
    dend_120 { pt3dadd( -39.8601, -203.568, 1.72915, 0.66 ) }
    dend_120 { pt3dadd( -39.8747, -203.645, 1.7502, 0.66 ) }
    dend_120 { pt3dadd( -40.2886, -204.989, 2.09899, 0.52 ) }
    dend_120 { pt3dadd( -40.71, -206.09, 2.36343, 0.52 ) }
    dend_120 { pt3dadd( -41.3066, -207.453, 2.65972, 0.52 ) }
    dend_120 { pt3dadd( -41.3387, -207.516, 2.6721, 0.52 ) }
    dend_120 { pt3dadd( -41.8824, -208.506, 2.80595, 0.44 ) }
    dend_120 { pt3dadd( -42.7232, -209.94, 2.89854, 0.44 ) }
    dend_120 { pt3dadd( -42.7651, -210.006, 2.8855, 0.44 ) }
    dend_120 { pt3dadd( -42.9467, -210.316, 2.73893, 0.81 ) }
    dend_120 { pt3dadd( -43.245, -210.896, 2.38155, 0.81 ) }
    dend_120 { pt3dadd( -43.487, -211.418, 2.06103, 0.81 ) }
    dend_120 { pt3dadd( -43.51, -211.475, 2.02752, 0.81 ) }
    dend_120 { pt3dadd( -44.1316, -213.071, 1.28818, 0.88 ) }
    dend_120 { pt3dadd( -44.2824, -213.449, 1.13574, 0.52 ) }
    dend_120 { pt3dadd( -44.5271, -214.023, 0.937401, 0.52 ) }
    dend_120 { pt3dadd( -44.8009, -214.589, 0.782629, 0.44 ) }
    dend_120 { pt3dadd( -45.1116, -215.187, 0.662453, 0.44 ) }
    dend_120 { pt3dadd( -45.6895, -216.273, 0.564024, 1.25 ) }
    dend_120 { pt3dadd( -46.0841, -216.999, 0.576593, 2.21 ) }
    dend_120 { pt3dadd( -46.4785, -217.734, 0.599679, 2.43 ) }
    dend_120 { pt3dadd( -46.9895, -218.746, 0.688222, 2.43 ) }
    dend_120 { pt3dadd( -47.1393, -219.067, 0.733848, 2.43 ) }
    dend_120 { pt3dadd( -47.5993, -220.204, 0.949151, 0.81 ) }
    dend_120 { pt3dadd( -47.6199, -220.268, 0.963773, 0.81 ) }
    dend_120 { pt3dadd( -47.7828, -220.95, 1.13449, 0.81 ) }
    dend_120 { pt3dadd( -47.9456, -221.988, 1.38216, 0.59 ) }
    dend_120 { pt3dadd( -47.9601, -222.131, 1.414, 0.59 ) }
    dend_120 { pt3dadd( -48.0798, -223.325, 1.61396, 0.59 ) }
    dend_120 { pt3dadd( -48.1722, -224.253, 1.70696, 0.59 ) }
    dend_120 { pt3dadd( -48.1823, -224.331, 1.70659, 0.59 ) }
    dend_120 { pt3dadd( -48.3779, -225.375, 1.60331, 0.59 ) }
    dend_120 { pt3dadd( -48.4126, -225.517, 1.57613, 0.59 ) }
    dend_120 { pt3dadd( -48.6845, -226.363, 1.38191, 0.59 ) }
    dend_120 { pt3dadd( -48.9761, -227.051, 1.18196, 0.59 ) }
    dend_120 { pt3dadd( -49.632, -228.186, 0.805453, 0.59 ) }
    dend_120 { pt3dadd( -49.9633, -228.642, 0.6411, 0.88 ) }
    dend_120 { pt3dadd( -50.0106, -228.692, 0.620563, 0.88 ) }
    dend_120 { pt3dadd( -50.5076, -229.177, 0.441867, 0.88 ) }
    dend_120 { pt3dadd( -50.594, -229.251, 0.418223, 0.88 ) }
    dend_120 { pt3dadd( -51.2614, -229.91, 0.290268, 0.88 ) }
    dend_120 { pt3dadd( -51.4678, -230.229, 0.340306, 0.44 ) }
    dend_120 { pt3dadd( -51.4939, -230.291, 0.357593, 0.44 ) }
    dend_120 { pt3dadd( -51.771, -231.284, 0.870947, 0.44 ) }
    dend_120 { pt3dadd( -51.7824, -231.343, 0.909868, 0.44 ) }
    dend_120 { pt3dadd( -51.9896, -232.474, 1.76731, 0.44 ) }
    dend_120 { pt3dadd( -52.2173, -233.962, 3.03037, 0.44 ) }
    dend_120 { pt3dadd( -52.2243, -234.005, 3.07, 0.44 ) }
    dend_120 { pt3dadd( -52.4899, -235.416, 4.3841, 0.44 ) }
    dend_120 { pt3dadd( -52.5102, -235.516, 4.48194, 0.44 ) }
    dend_120 { pt3dadd( -52.6045, -235.979, 4.87509, 0.44 ) }
    dend_120 { pt3dadd( -52.6184, -236.044, 4.92202, 0.44 ) }
    dend_120 { pt3dadd( -52.8091, -237.049, 5.4334, 0.81 ) }
    dend_120 { pt3dadd( -52.9047, -237.768, 5.74344, 1.11 ) }
    dend_120 { pt3dadd( -52.9337, -238.155, 5.86313, 0.29 ) }
    dend_120 { pt3dadd( -52.9766, -239.322, 6.22538, 0.29 ) }
    dend_120 { pt3dadd( -52.9754, -239.415, 6.25478, 0.29 ) }
    dend_120 { pt3dadd( -52.9541, -240.335, 6.54847, 0.74 ) }
    dend_120 { pt3dadd( -52.951, -240.401, 6.56966, 0.74 ) }
    dend_120 { pt3dadd( -52.9113, -241.008, 6.81835, 1.03 ) }
    dend_120 { pt3dadd( -52.9078, -241.445, 7.03381, 1.25 ) }
    // Section: dend_119, id: dend_119, parent: dend_118 (entry count 63/100)
    dend_119 { pt3dclear() }
    dend_119 { pt3dadd( -17.8365, -136.423, 5.42648, 0.52 ) }
    dend_119 { pt3dadd( -19.3246, -135.123, 9.44591, 0.52 ) }
    dend_119 { pt3dadd( -19.5229, -134.942, 9.92311, 0.44 ) }
    dend_119 { pt3dadd( -19.5706, -134.899, 10.0169, 0.44 ) }
    dend_119 { pt3dadd( -20.0271, -134.509, 10.6912, 0.44 ) }
    dend_119 { pt3dadd( -20.0623, -134.481, 10.7303, 0.44 ) }
    dend_119 { pt3dadd( -20.9455, -133.827, 11.5351, 0.44 ) }
    dend_119 { pt3dadd( -21.0088, -133.783, 11.562, 0.44 ) }
    dend_119 { pt3dadd( -21.6263, -133.365, 11.8029, 0.44 ) }
    dend_119 { pt3dadd( -22.429, -132.845, 12.1541, 0.37 ) }
    dend_119 { pt3dadd( -23.0356, -132.464, 12.4339, 0.29 ) }
    dend_119 { pt3dadd( -24.1363, -131.772, 12.9539, 0.22 ) }
    dend_119 { pt3dadd( -24.2183, -131.721, 13.0008, 0.22 ) }
    dend_119 { pt3dadd( -25.4731, -130.851, 14.008, 0.22 ) }
    dend_119 { pt3dadd( -26.2012, -130.331, 14.8715, 0.22 ) }
    dend_119 { pt3dadd( -26.3073, -130.253, 15.0321, 0.22 ) }
    dend_119 { pt3dadd( -26.6275, -130.033, 15.5606, 0.22 ) }
    dend_119 { pt3dadd( -27.6016, -129.4, 17.2658, 0.22 ) }
    dend_119 { pt3dadd( -28.3107, -128.959, 18.5733, 0.22 ) }
    dend_119 { pt3dadd( -29.1925, -128.407, 20.2849, 0.22 ) }
    dend_119 { pt3dadd( -29.2625, -128.363, 20.4098, 0.22 ) }
    dend_119 { pt3dadd( -29.8125, -128.024, 21.3172, 0.22 ) }
    dend_119 { pt3dadd( -29.8501, -128.002, 21.3726, 0.22 ) }
    dend_119 { pt3dadd( -30.5138, -127.633, 22.0935, 0.22 ) }
    dend_119 { pt3dadd( -31.2207, -127.253, 22.6669, 0.22 ) }
    dend_119 { pt3dadd( -31.2831, -127.217, 22.7067, 0.22 ) }
    dend_119 { pt3dadd( -32.035, -126.809, 23.2206, 0.22 ) }
    dend_119 { pt3dadd( -32.1108, -126.77, 23.2757, 0.22 ) }
    dend_119 { pt3dadd( -32.6159, -126.518, 23.6139, 0.22 ) }
    dend_119 { pt3dadd( -32.7582, -126.452, 23.7009, 0.22 ) }
    dend_119 { pt3dadd( -33.4437, -126.14, 24.1019, 0.22 ) }
    dend_119 { pt3dadd( -34.7153, -125.521, 24.8132, 0.22 ) }
    dend_119 { pt3dadd( -34.79, -125.482, 24.8517, 0.22 ) }
    dend_119 { pt3dadd( -35.493, -125.079, 25.1912, 0.22 ) }
    dend_119 { pt3dadd( -35.5561, -125.039, 25.2198, 0.22 ) }
    dend_119 { pt3dadd( -36.0926, -124.665, 25.4374, 0.22 ) }
    dend_119 { pt3dadd( -36.19, -124.589, 25.4721, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_119 { pt3dadd( -36.6538, -124.175, 25.588, 0.22 ) }
    dend_119 { pt3dadd( -37.4405, -123.51, 25.911, 0.22 ) }
    dend_119 { pt3dadd( -37.4971, -123.461, 25.9394, 0.22 ) }
    dend_119 { pt3dadd( -37.8252, -123.172, 26.1169, 0.44 ) }
    dend_119 { pt3dadd( -37.9024, -123.102, 26.1616, 0.44 ) }
    dend_119 { pt3dadd( -38.5355, -122.539, 26.5355, 0.44 ) }
    dend_119 { pt3dadd( -39.6925, -121.544, 27.18, 0.22 ) }
    dend_119 { pt3dadd( -40.7309, -120.714, 27.7381, 0.22 ) }
    dend_119 { pt3dadd( -40.7832, -120.674, 27.7619, 0.22 ) }
    dend_119 { pt3dadd( -41.6178, -120.058, 28.0895, 0.22 ) }
    dend_119 { pt3dadd( -41.6899, -120.007, 28.1202, 0.22 ) }
    dend_119 { pt3dadd( -42.6831, -119.33, 28.5621, 0.22 ) }
    dend_119 { pt3dadd( -42.7367, -119.295, 28.5912, 0.22 ) }
    dend_119 { pt3dadd( -43.6514, -118.763, 29.261, 0.22 ) }
    dend_119 { pt3dadd( -43.6954, -118.737, 29.2974, 0.22 ) }
    dend_119 { pt3dadd( -44.9105, -118.001, 30.4377, 0.22 ) }
    dend_119 { pt3dadd( -45.0349, -117.928, 30.56, 0.22 ) }
    dend_119 { pt3dadd( -46.1473, -117.288, 31.7599, 0.22 ) }
    dend_119 { pt3dadd( -46.2486, -117.234, 31.8604, 0.22 ) }
    dend_119 { pt3dadd( -46.9698, -116.889, 32.5209, 0.22 ) }
    dend_119 { pt3dadd( -47.0338, -116.862, 32.5611, 0.22 ) }
    dend_119 { pt3dadd( -47.6789, -116.611, 32.7635, 0.22 ) }
    dend_119 { pt3dadd( -47.7508, -116.577, 32.776, 0.22 ) }
    dend_119 { pt3dadd( -48.5909, -116.122, 32.7991, 0.22 ) }
    dend_119 { pt3dadd( -48.7877, -116.002, 32.8029, 0.22 ) }
    dend_119 { pt3dadd( -49.6488, -115.438, 32.8118, 0.22 ) }
    dend_119 { pt3dadd( -49.7305, -115.382, 32.8123, 0.22 ) }
    dend_119 { pt3dadd( -50.686, -114.618, 32.7893, 0.22 ) }
    dend_119 { pt3dadd( -50.848, -114.479, 32.7828, 0.22 ) }
    dend_119 { pt3dadd( -51.6587, -113.706, 32.7384, 0.22 ) }
    dend_119 { pt3dadd( -51.8167, -113.554, 32.7286, 0.22 ) }
    dend_119 { pt3dadd( -52.5013, -112.897, 32.6822, 0.22 ) }
    dend_119 { pt3dadd( -53.4291, -112.05, 32.6187, 0.22 ) }
    dend_119 { pt3dadd( -53.5583, -111.936, 32.6086, 0.22 ) }
    dend_119 { pt3dadd( -54.1961, -111.343, 32.5541, 0.22 ) }
    dend_119 { pt3dadd( -54.5863, -110.991, 32.5208, 0.22 ) }
    dend_119 { pt3dadd( -55.0674, -110.565, 32.483, 0.22 ) }
    dend_119 { pt3dadd( -55.1864, -110.467, 32.4567, 0.22 ) }
    dend_119 { pt3dadd( -55.9578, -109.926, 32.2203, 0.22 ) }
    dend_119 { pt3dadd( -56.0784, -109.849, 32.1758, 0.22 ) }
    dend_119 { pt3dadd( -56.9912, -109.255, 31.7255, 0.22 ) }
    dend_119 { pt3dadd( -57.0437, -109.219, 31.6952, 0.22 ) }
    dend_119 { pt3dadd( -58.5069, -108.258, 30.681, 0.22 ) }
    dend_119 { pt3dadd( -58.6228, -108.183, 30.5935, 0.22 ) }
    dend_119 { pt3dadd( -59.2284, -107.794, 30.121, 0.22 ) }
    dend_119 { pt3dadd( -60.0584, -107.227, 29.4591, 0.22 ) }
    dend_119 { pt3dadd( -60.4708, -106.902, 29.1337, 0.22 ) }
    dend_119 { pt3dadd( -61.4065, -106.128, 28.4773, 0.22 ) }
    dend_119 { pt3dadd( -61.5735, -105.982, 28.3861, 0.22 ) }
    dend_119 { pt3dadd( -62.2081, -105.417, 28.0757, 0.22 ) }
    dend_119 { pt3dadd( -62.3311, -105.32, 28.0321, 0.22 ) }
    dend_119 { pt3dadd( -63.3885, -104.612, 27.8211, 0.22 ) }
    dend_119 { pt3dadd( -63.6165, -104.475, 27.797, 0.22 ) }
    dend_119 { pt3dadd( -64.3646, -104.064, 27.7865, 0.22 ) }
    dend_119 { pt3dadd( -64.4273, -104.032, 27.7857, 0.22 ) }
    dend_119 { pt3dadd( -65.7589, -103.481, 27.8087, 0.22 ) }
    dend_119 { pt3dadd( -65.9791, -103.411, 27.8207, 0.22 ) }
    dend_119 { pt3dadd( -66.5598, -103.285, 27.871, 0.22 ) }
    dend_119 { pt3dadd( -66.8148, -103.234, 27.8978, 0.22 ) }
    dend_119 { pt3dadd( -67.3702, -103.113, 27.9651, 0.22 ) }
    dend_119 { pt3dadd( -67.955, -102.969, 28.0448, 0.22 ) }
    dend_119 { pt3dadd( -68.9326, -102.666, 28.2116, 0.22 ) }
    dend_119 { pt3dadd( -69.01, -102.642, 28.2256, 0.22 ) }
    dend_119 { pt3dadd( -69.6434, -102.451, 28.3475, 0.66 ) }
    dend_119 { pt3dadd( -70.2411, -102.292, 28.4584, 0.66 ) }
    // Section: dend_103, id: dend_103, parent: dend_101 (entry count 65/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( -26.0802, -311.395, 17.9035, 1.11 ) }
    dend_103 { pt3dadd( -26.5424, -312.175, 17.4838, 1.11 ) }
    dend_103 { pt3dadd( -26.7182, -312.533, 17.3283, 1.11 ) }
    dend_103 { pt3dadd( -27.2974, -313.843, 16.817, 0.37 ) }
    dend_103 { pt3dadd( -27.7686, -315.131, 16.2999, 0.37 ) }
    dend_103 { pt3dadd( -27.9844, -315.819, 16.0296, 0.37 ) }
    dend_103 { pt3dadd( -28.3295, -316.92, 15.5199, 0.37 ) }
    dend_103 { pt3dadd( -28.4859, -317.469, 15.2718, 0.37 ) }
    dend_103 { pt3dadd( -28.5025, -317.527, 15.2382, 0.37 ) }
    dend_103 { pt3dadd( -28.752, -318.369, 14.626, 0.37 ) }
    dend_103 { pt3dadd( -28.8964, -318.844, 14.2017, 0.37 ) }
    dend_103 { pt3dadd( -29.2268, -319.835, 13.2333, 0.66 ) }
    dend_103 { pt3dadd( -29.3748, -320.266, 12.7671, 0.66 ) }
    dend_103 { pt3dadd( -29.71, -321.277, 11.6128, 0.44 ) }
    dend_103 { pt3dadd( -29.9196, -322.026, 10.7891, 0.37 ) }
    dend_103 { pt3dadd( -30.0857, -322.72, 10.0573, 0.37 ) }
    dend_103 { pt3dadd( -30.1019, -322.829, 9.94667, 0.37 ) }
    dend_103 { pt3dadd( -30.1239, -324.122, 8.77002, 0.37 ) }
    dend_103 { pt3dadd( -30.0569, -324.718, 8.18767, 1.11 ) }
    dend_103 { pt3dadd( -29.913, -325.294, 7.68211, 1.62 ) }
    dend_103 { pt3dadd( -29.881, -325.404, 7.58684, 1.62 ) }
    dend_103 { pt3dadd( -29.8256, -325.595, 7.42061, 1.62 ) }
    dend_103 { pt3dadd( -29.6393, -326.4, 6.77453, 1.62 ) }
    dend_103 { pt3dadd( -29.3592, -327.918, 5.66454, 0.59 ) }
    dend_103 { pt3dadd( -29.2089, -329.077, 4.88198, 0.59 ) }
    dend_103 { pt3dadd( -29.1122, -330.466, 3.98628, 0.59 ) }
    dend_103 { pt3dadd( -29.1113, -330.536, 3.94558, 0.59 ) }
    dend_103 { pt3dadd( -29.1535, -331.311, 3.55304, 0.52 ) }
    dend_103 { pt3dadd( -29.1633, -331.377, 3.5292, 0.52 ) }
    dend_103 { pt3dadd( -29.3728, -332.168, 3.33899, 0.52 ) }
    dend_103 { pt3dadd( -29.5642, -332.698, 3.22322, 0.74 ) }
    dend_103 { pt3dadd( -29.7236, -333.101, 3.1758, 1.03 ) }
    dend_103 { pt3dadd( -29.7475, -333.165, 3.16698, 1.03 ) }
    dend_103 { pt3dadd( -29.9553, -333.825, 3.04872, 1.25 ) }
    dend_103 { pt3dadd( -30.2514, -334.852, 2.82881, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    // Section: dend_102, id: dend_102, parent: dend_101 (entry count 0/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( -26.0802, -311.395, 17.9035, 0.52 ) }
    dend_102 { pt3dadd( -25.2602, -312.136, 19.0378, 0.52 ) }
    dend_102 { pt3dadd( -24.9281, -312.436, 19.4972, 0.52 ) }
    dend_102 { pt3dadd( -24.6239, -312.711, 19.9179, 0.52 ) }
    dend_102 { pt3dadd( -24.5926, -312.739, 19.9613, 0.52 ) }
    dend_102 { pt3dadd( -23.861, -313.401, 20.9733, 0.52 ) }
    dend_102 { pt3dadd( -23.589, -313.647, 21.3496, 0.81 ) }
    // Section: dend_96, id: dend_96, parent: dend_94 (entry count 7/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -14.9563, -325.235, -2.29581, 0.66 ) }
    dend_96 { pt3dadd( -14.9051, -325.825, -2.1959, 0.66 ) }
    dend_96 { pt3dadd( -14.8816, -326.422, -2.08969, 0.66 ) }
    dend_96 { pt3dadd( -14.8767, -326.525, -2.07198, 0.66 ) }
    dend_96 { pt3dadd( -14.8257, -327.548, -1.92546, 0.66 ) }
    dend_96 { pt3dadd( -14.783, -328.495, -1.82, 0.37 ) }
    dend_96 { pt3dadd( -14.7477, -329.493, -1.73672, 0.37 ) }
    dend_96 { pt3dadd( -14.749, -329.593, -1.72937, 0.37 ) }
    dend_96 { pt3dadd( -14.7862, -330.207, -1.7374, 0.37 ) }
    dend_96 { pt3dadd( -14.8186, -330.669, -1.78074, 0.81 ) }
    dend_96 { pt3dadd( -14.8574, -331.447, -1.92212, 0.81 ) }
    dend_96 { pt3dadd( -14.8372, -332.139, -2.10049, 1.03 ) }
    dend_96 { pt3dadd( -14.7956, -332.6, -2.27607, 1.03 ) }
    dend_96 { pt3dadd( -14.69, -333.419, -2.63019, 1.55 ) }
    dend_96 { pt3dadd( -14.5481, -334.002, -2.8979, 1.84 ) }
    dend_96 { pt3dadd( -14.4367, -334.356, -3.04728, 1.84 ) }
    dend_96 { pt3dadd( -14.3349, -334.611, -3.15919, 1.84 ) }
    dend_96 { pt3dadd( -13.7368, -335.829, -3.73319, 0.29 ) }
    dend_96 { pt3dadd( -13.4184, -336.375, -3.98231, 0.29 ) }
    dend_96 { pt3dadd( -12.8466, -337.269, -4.36539, 0.29 ) }
    dend_96 { pt3dadd( -12.2728, -338.169, -4.81219, 0.29 ) }
    dend_96 { pt3dadd( -12.2343, -338.231, -4.842, 0.29 ) }
    dend_96 { pt3dadd( -11.5422, -339.404, -5.35276, 0.29 ) }
    dend_96 { pt3dadd( -11.1115, -340.19, -5.63614, 0.29 ) }
    dend_96 { pt3dadd( -11.0827, -340.249, -5.65863, 0.29 ) }
    dend_96 { pt3dadd( -10.6022, -341.524, -6.2556, 0.29 ) }
    dend_96 { pt3dadd( -10.3789, -342.15, -6.60226, 0.74 ) }
    dend_96 { pt3dadd( -10.2836, -342.525, -6.80539, 0.96 ) }
    dend_96 { pt3dadd( -10.2372, -342.974, -7.03533, 0.96 ) }
    dend_96 { pt3dadd( -10.2329, -343.037, -7.06351, 0.96 ) }
    dend_96 { pt3dadd( -10.1293, -344.176, -7.48796, 0.29 ) }
    dend_96 { pt3dadd( -10.117, -344.238, -7.51339, 0.29 ) }
    dend_96 { pt3dadd( -9.91545, -344.905, -7.85086, 0.29 ) }
    dend_96 { pt3dadd( -9.86726, -345.02, -7.91115, 0.29 ) }
    dend_96 { pt3dadd( -9.24041, -346.175, -8.46685, 0.29 ) }
    dend_96 { pt3dadd( -9.17037, -346.287, -8.51528, 0.29 ) }
    dend_96 { pt3dadd( -8.26719, -347.577, -8.94967, 0.29 ) }
    dend_96 { pt3dadd( -8.05865, -347.85, -9.07529, 1.4 ) }
    dend_96 { pt3dadd( -7.82069, -348.119, -9.36803, 1.55 ) }
    dend_96 { pt3dadd( -7.35198, -348.632, -10.1253, 0.29 ) }
    dend_96 { pt3dadd( -7.32464, -348.658, -10.1847, 0.29 ) }
    dend_96 { pt3dadd( -6.9549, -349.013, -11.0521, 0.29 ) }
    dend_96 { pt3dadd( -6.41043, -349.548, -12.4431, 0.52 ) }
    dend_96 { pt3dadd( -5.19438, -350.764, -15.7622, 0.52 ) }
    dend_96 { pt3dadd( -5.05142, -350.905, -16.1808, 1.84 ) }
    dend_96 { pt3dadd( -3.98587, -351.929, -19.5443, 0.29 ) }
    dend_96 { pt3dadd( -3.77688, -352.125, -20.217, 0.29 ) }
    dend_96 { pt3dadd( -3.61062, -352.267, -20.7738, 0.29 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 55/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -14.9563, -325.235, -2.29581, 0.29 ) }
    dend_95 { pt3dadd( -14.4258, -324.918, -2.29581, 0.29 ) }
    dend_95 { pt3dadd( -14.2856, -324.858, -2.29581, 0.29 ) }
    dend_95 { pt3dadd( -13.1324, -324.575, -2.27864, 0.29 ) }
    dend_95 { pt3dadd( -12.195, -324.407, -2.25886, 0.29 ) }
    dend_95 { pt3dadd( -11.9046, -324.361, -2.25198, 0.59 ) }
    dend_95 { pt3dadd( -11.2284, -324.219, -2.23619, 0.59 ) }
    dend_95 { pt3dadd( -10.4362, -324.093, -2.21604, 0.59 ) }
    dend_95 { pt3dadd( -9.54288, -323.994, -2.19161, 0.22 ) }
    dend_95 { pt3dadd( -8.64491, -323.962, -2.16381, 0.22 ) }
    dend_95 { pt3dadd( -8.57446, -323.956, -2.16128, 0.22 ) }
    dend_95 { pt3dadd( -7.01649, -323.77, -2.10172, 0.22 ) }
    // Section: dend_92, id: dend_92, parent: dend_89 (entry count 67/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 77.9766, -437.502, -0.26028, 0.37 ) }
    dend_92 { pt3dadd( 79.549, -437.106, -1.04151, 0.37 ) }
    dend_92 { pt3dadd( 80.2209, -436.9, -1.40352, 0.37 ) }
    dend_92 { pt3dadd( 80.4091, -436.839, -1.5069, 0.37 ) }
    dend_92 { pt3dadd( 81.049, -436.644, -1.84455, 0.37 ) }
    dend_92 { pt3dadd( 81.1219, -436.628, -1.87903, 0.37 ) }
    dend_92 { pt3dadd( 81.9789, -436.484, -2.23908, 0.37 ) }
    dend_92 { pt3dadd( 82.9188, -436.414, -2.46429, 0.52 ) }
    dend_92 { pt3dadd( 82.9899, -436.42, -2.47921, 0.52 ) }
    dend_92 { pt3dadd( 83.4161, -436.523, -2.57365, 0.74 ) }
    dend_92 { pt3dadd( 84.192, -436.856, -2.73838, 1.47 ) }
    dend_92 { pt3dadd( 84.6266, -437.084, -2.85193, 1.47 ) }
    dend_92 { pt3dadd( 85.2511, -437.462, -3.02919, 1.11 ) }
    dend_92 { pt3dadd( 86.1636, -438.035, -3.28371, 0.74 ) }
    dend_92 { pt3dadd( 87.4263, -438.841, -3.67033, 0.74 ) }
    dend_92 { pt3dadd( 88.4457, -439.482, -4.14869, 0.74 ) }
    dend_92 { pt3dadd( 89.3434, -440.032, -4.70616, 1.03 ) }
    dend_92 { pt3dadd( 89.3966, -440.063, -4.74462, 1.03 ) }
    dend_92 { pt3dadd( 89.7705, -440.253, -5.04221, 1.33 ) }
    dend_92 { pt3dadd( 89.8859, -440.3, -5.15211, 1.33 ) }
    dend_92 { pt3dadd( 91.6809, -440.89, -6.92478, 1.55 ) }
    dend_92 { pt3dadd( 91.7857, -440.92, -7.02944, 1.55 ) }
    dend_92 { pt3dadd( 92.4878, -441.111, -7.77197, 1.62 ) }
    dend_92 { pt3dadd( 92.884, -441.212, -8.21008, 1.77 ) }
    dend_92 { pt3dadd( 94.7302, -441.597, -10.2427, 0.66 ) }
    dend_92 { pt3dadd( 95.7741, -441.773, -11.3575, 0.66 ) }
    dend_92 { pt3dadd( 95.8336, -441.781, -11.4141, 0.66 ) }
    dend_92 { pt3dadd( 97.5624, -441.915, -13.0498, 0.52 ) }
    dend_92 { pt3dadd( 97.6122, -441.917, -13.0989, 0.52 ) }
    dend_92 { pt3dadd( 98.3613, -441.912, -13.7973, 0.52 ) }
    dend_92 { pt3dadd( 98.4263, -441.908, -13.845, 0.52 ) }
    dend_92 { pt3dadd( 99.4786, -441.863, -14.5381, 0.52 ) }
    dend_92 { pt3dadd( 99.5429, -441.866, -14.5721, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_92 { pt3dadd( 100.735, -442.039, -14.9707, 0.74 ) }
    dend_92 { pt3dadd( 101.187, -442.145, -15.1465, 0.96 ) }
    dend_92 { pt3dadd( 101.686, -442.317, -15.3685, 0.96 ) }
    dend_92 { pt3dadd( 101.749, -442.34, -15.395, 0.96 ) }
    dend_92 { pt3dadd( 102.336, -442.562, -15.6296, 0.96 ) }
    dend_92 { pt3dadd( 102.607, -442.647, -15.7114, 0.96 ) }
    dend_92 { pt3dadd( 103.297, -442.822, -15.8481, 0.44 ) }
    dend_92 { pt3dadd( 103.641, -442.904, -15.9314, 0.44 ) }
    dend_92 { pt3dadd( 104.633, -443.149, -16.1823, 0.44 ) }
    dend_92 { pt3dadd( 104.842, -443.207, -16.2319, 0.44 ) }
    dend_92 { pt3dadd( 105.471, -443.391, -16.3703, 0.44 ) }
    dend_92 { pt3dadd( 105.528, -443.408, -16.3826, 0.44 ) }
    dend_92 { pt3dadd( 106.173, -443.598, -16.5045, 1.03 ) }
    dend_92 { pt3dadd( 107.138, -443.889, -16.7036, 1.55 ) }
    dend_92 { pt3dadd( 107.82, -444.115, -16.8493, 1.77 ) }
    dend_92 { pt3dadd( 108.026, -444.189, -16.8912, 1.77 ) }
    dend_92 { pt3dadd( 108.942, -444.538, -17.0582, 0.37 ) }
    dend_92 { pt3dadd( 109.575, -444.765, -17.1533, 0.37 ) }
    dend_92 { pt3dadd( 109.635, -444.785, -17.1598, 0.37 ) }
    dend_92 { pt3dadd( 110.289, -445.003, -17.2288, 0.37 ) }
    dend_92 { pt3dadd( 110.512, -445.081, -17.2484, 0.37 ) }
    dend_92 { pt3dadd( 111.246, -445.346, -17.2888, 0.37 ) }
    dend_92 { pt3dadd( 111.592, -445.464, -17.2785, 0.81 ) }
    dend_92 { pt3dadd( 111.659, -445.485, -17.2745, 0.81 ) }
    dend_92 { pt3dadd( 112.184, -445.561, -17.2364, 1.11 ) }
    dend_92 { pt3dadd( 112.334, -445.554, -17.2233, 1.11 ) }
    dend_92 { pt3dadd( 112.764, -445.442, -17.1836, 1.11 ) }
    dend_92 { pt3dadd( 113.568, -445.04, -17.1, 0.29 ) }
    dend_92 { pt3dadd( 113.623, -445.001, -17.0833, 0.29 ) }
    dend_92 { pt3dadd( 114.513, -444.289, -16.4723, 0.29 ) }
    dend_92 { pt3dadd( 114.559, -444.262, -16.4274, 0.29 ) }
    dend_92 { pt3dadd( 114.982, -444.082, -15.9377, 0.74 ) }
    dend_92 { pt3dadd( 115.02, -444.068, -15.8928, 0.74 ) }
    dend_92 { pt3dadd( 115.983, -443.819, -14.6857, 0.66 ) }
    dend_92 { pt3dadd( 117.361, -443.55, -12.9669, 0.29 ) }
    dend_92 { pt3dadd( 119.112, -443.318, -10.7844, 0.29 ) }
    dend_92 { pt3dadd( 120.174, -443.204, -9.48992, 1.03 ) }
    dend_92 { pt3dadd( 120.597, -443.171, -8.98695, 1.03 ) }
    dend_92 { pt3dadd( 122.431, -443.049, -6.87314, 0.29 ) }
    dend_92 { pt3dadd( 122.652, -443.04, -6.63321, 0.52 ) }
    dend_92 { pt3dadd( 122.757, -443.036, -6.52257, 0.52 ) }
    dend_92 { pt3dadd( 124.367, -442.864, -4.96845, 0.22 ) }
    dend_92 { pt3dadd( 124.496, -442.848, -4.84858, 0.74 ) }
    dend_92 { pt3dadd( 124.587, -442.833, -4.7662, 0.74 ) }
    dend_92 { pt3dadd( 124.83, -442.777, -4.56362, 0.74 ) }
    dend_92 { pt3dadd( 124.904, -442.754, -4.50085, 0.74 ) }
    dend_92 { pt3dadd( 125.236, -442.609, -4.17752, 0.74 ) }
    dend_92 { pt3dadd( 126.699, -441.804, -2.71206, 0.22 ) }
    dend_92 { pt3dadd( 127.472, -441.395, -1.92651, 0.22 ) }
    dend_92 { pt3dadd( 127.645, -441.303, -1.75231, 0.66 ) }
    dend_92 { pt3dadd( 128.179, -441.023, -1.21691, 0.66 ) }
    dend_92 { pt3dadd( 130.059, -440.046, 0.599113, 0.22 ) }
    dend_92 { pt3dadd( 130.557, -439.79, 1.06488, 0.44 ) }
    dend_92 { pt3dadd( 131.887, -439.086, 2.45842, 0.15 ) }
    dend_92 { pt3dadd( 132.115, -438.982, 2.72521, 0.81 ) }
    dend_92 { pt3dadd( 132.166, -438.961, 2.78665, 0.81 ) }
    dend_92 { pt3dadd( 132.492, -438.848, 3.18517, 0.81 ) }
    dend_92 { pt3dadd( 132.536, -438.832, 3.23787, 0.81 ) }
    dend_92 { pt3dadd( 134.417, -438.157, 5.54981, 0.22 ) }
    dend_92 { pt3dadd( 134.766, -438.006, 6.02195, 0.22 ) }
    dend_92 { pt3dadd( 134.806, -437.988, 6.07676, 0.22 ) }
    dend_92 { pt3dadd( 135.422, -437.708, 6.87446, 0.22 ) }
    dend_92 { pt3dadd( 135.834, -437.522, 7.36297, 0.22 ) }
    dend_92 { pt3dadd( 135.882, -437.494, 7.42013, 0.22 ) }
    dend_92 { pt3dadd( 136.696, -436.831, 8.2568, 0.66 ) }
    dend_92 { pt3dadd( 136.737, -436.785, 8.31069, 0.66 ) }
    dend_92 { pt3dadd( 137.021, -436.391, 8.7615, 0.88 ) }
    dend_92 { pt3dadd( 137.095, -436.25, 8.91539, 0.88 ) }
    dend_92 { pt3dadd( 137.589, -434.973, 10.2924, 0.22 ) }
    dend_92 { pt3dadd( 137.813, -434.265, 11.0075, 0.22 ) }
    dend_92 { pt3dadd( 137.835, -434.193, 11.0628, 0.59 ) }
    dend_92 { pt3dadd( 137.851, -434.138, 11.1014, 0.59 ) }
    dend_92 { pt3dadd( 137.933, -433.835, 11.2872, 0.59 ) }
    dend_92 { pt3dadd( 138.319, -432.619, 11.9949, 0.15 ) }
    dend_92 { pt3dadd( 138.352, -432.537, 12.0374, 0.15 ) }
    dend_92 { pt3dadd( 139.021, -431.092, 12.8354, 0.15 ) }
    dend_92 { pt3dadd( 139.111, -430.912, 12.9344, 0.37 ) }
    dend_92 { pt3dadd( 139.278, -430.624, 13.132, 0.37 ) }
    dend_92 { pt3dadd( 140.127, -429.329, 14.1462, 0.15 ) }
    dend_92 { pt3dadd( 140.363, -429.013, 14.3989, 0.88 ) }
    dend_92 { pt3dadd( 140.518, -428.812, 14.6036, 0.88 ) }
    dend_92 { pt3dadd( 140.564, -428.754, 14.6731, 0.88 ) }
    dend_92 { pt3dadd( 141.579, -427.322, 16.4739, 0.22 ) }
    dend_92 { pt3dadd( 141.621, -427.255, 16.5553, 0.22 ) }
    dend_92 { pt3dadd( 142.049, -426.494, 17.4507, 0.22 ) }
    dend_92 { pt3dadd( 142.739, -425.204, 18.9596, 0.44 ) }
    dend_92 { pt3dadd( 142.966, -424.753, 19.4802, 0.44 ) }
    dend_92 { pt3dadd( 143.656, -423.293, 21.1131, 0.44 ) }
    dend_92 { pt3dadd( 143.894, -422.719, 21.707, 0.29 ) }
    dend_92 { pt3dadd( 143.989, -422.473, 21.9678, 0.59 ) }
    dend_92 { pt3dadd( 144.26, -421.638, 22.9021, 0.81 ) }
    // Section: dend_91, id: dend_91, parent: dend_89 (entry count 91/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 77.9766, -437.502, -0.26028, 1.11 ) }
    dend_91 { pt3dadd( 77.665, -438.087, -0.342078, 1.11 ) }
    dend_91 { pt3dadd( 77.2136, -438.843, -0.448078, 0.88 ) }
    dend_91 { pt3dadd( 76.7385, -439.588, -0.54679, 0.66 ) }
    dend_91 { pt3dadd( 76.2933, -440.263, -0.588479, 0.37 ) }
    dend_91 { pt3dadd( 75.839, -440.965, -0.598615, 0.37 ) }
    dend_91 { pt3dadd( 75.7542, -441.095, -0.597344, 0.37 ) }
    dend_91 { pt3dadd( 75.0986, -442.024, -0.561218, 0.37 ) }
    dend_91 { pt3dadd( 74.7065, -442.548, -0.519093, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_91 { pt3dadd( 74.193, -443.237, -0.42906, 0.29 ) }
    dend_91 { pt3dadd( 73.6227, -443.984, -0.292093, 0.29 ) }
    dend_91 { pt3dadd( 73.5349, -444.102, -0.270681, 0.29 ) }
    dend_91 { pt3dadd( 73.2232, -444.518, -0.207912, 0.29 ) }
    dend_91 { pt3dadd( 73.133, -444.638, -0.196117, 0.29 ) }
    dend_91 { pt3dadd( 72.4939, -445.425, -0.259809, 0.29 ) }
    dend_91 { pt3dadd( 72.2785, -445.672, -0.31152, 0.88 ) }
    dend_91 { pt3dadd( 71.9748, -446.005, -0.39878, 0.88 ) }
    dend_91 { pt3dadd( 71.3621, -446.711, -0.648561, 0.29 ) }
    dend_91 { pt3dadd( 70.525, -447.75, -1.07895, 0.29 ) }
    dend_91 { pt3dadd( 69.707, -448.785, -1.56541, 0.44 ) }
    dend_91 { pt3dadd( 69.3593, -449.24, -1.80681, 0.44 ) }
    dend_91 { pt3dadd( 69.3186, -449.3, -1.83915, 0.44 ) }
    dend_91 { pt3dadd( 68.8121, -450.182, -2.32447, 0.29 ) }
    dend_91 { pt3dadd( 68.5277, -450.819, -2.69445, 0.29 ) }
    dend_91 { pt3dadd( 68.5105, -450.877, -2.7288, 0.29 ) }
    dend_91 { pt3dadd( 68.4631, -451.217, -2.87201, 0.59 ) }
    dend_91 { pt3dadd( 68.4262, -451.805, -3.11066, 0.59 ) }
    dend_91 { pt3dadd( 68.421, -451.873, -3.13224, 0.59 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 19/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 77.9766, -437.502, -0.26028, 2.73 ) }
    dend_90 { pt3dadd( 77.9866, -437.531, -0.285512, 2.73 ) }
    dend_90 { pt3dadd( 78.6323, -439.739, -1.9428, 0.52 ) }
    dend_90 { pt3dadd( 78.825, -440.43, -2.44445, 0.52 ) }
    dend_90 { pt3dadd( 78.8925, -440.717, -2.66864, 0.52 ) }
    dend_90 { pt3dadd( 79.1297, -441.844, -3.55487, 0.52 ) }
    dend_90 { pt3dadd( 79.1404, -441.899, -3.59736, 0.52 ) }
    dend_90 { pt3dadd( 79.5736, -444.178, -5.50627, 0.52 ) }
    dend_90 { pt3dadd( 79.5823, -444.223, -5.54401, 0.52 ) }
    dend_90 { pt3dadd( 79.8539, -445.448, -6.66809, 1.11 ) }
    dend_90 { pt3dadd( 79.9496, -445.872, -7.07456, 1.47 ) }
    dend_90 { pt3dadd( 79.9601, -445.922, -7.1252, 1.47 ) }
    dend_90 { pt3dadd( 80.3812, -447.725, -8.93768, 0.52 ) }
    dend_90 { pt3dadd( 80.7002, -448.825, -10.0646, 0.52 ) }
    dend_90 { pt3dadd( 80.8193, -449.188, -10.4273, 0.88 ) }
    dend_90 { pt3dadd( 80.904, -449.403, -10.6254, 0.88 ) }
    dend_90 { pt3dadd( 80.9272, -449.459, -10.6769, 0.88 ) }
    dend_90 { pt3dadd( 81.0285, -449.678, -10.8548, 0.88 ) }
    dend_90 { pt3dadd( 81.409, -450.34, -11.174, 0.37 ) }
    dend_90 { pt3dadd( 81.4755, -450.423, -11.2097, 0.37 ) }
    dend_90 { pt3dadd( 81.8546, -450.838, -11.3722, 0.37 ) }
    dend_90 { pt3dadd( 81.9656, -450.955, -11.4078, 0.37 ) }
    dend_90 { pt3dadd( 82.4421, -451.5, -11.5222, 0.37 ) }
    dend_90 { pt3dadd( 82.5353, -451.615, -11.5341, 0.37 ) }
    dend_90 { pt3dadd( 82.8787, -452.055, -11.5341, 0.59 ) }
    dend_90 { pt3dadd( 82.9371, -452.134, -11.5341, 0.59 ) }
    dend_90 { pt3dadd( 83.1889, -452.58, -11.5341, 0.74 ) }
    dend_90 { pt3dadd( 83.3003, -452.843, -11.571, 0.74 ) }
    dend_90 { pt3dadd( 83.4764, -453.425, -11.707, 0.74 ) }
    dend_90 { pt3dadd( 83.496, -453.558, -11.7456, 0.74 ) }
    dend_90 { pt3dadd( 83.5034, -454.086, -11.9215, 0.44 ) }
    dend_90 { pt3dadd( 83.4341, -455.188, -12.2873, 0.44 ) }
    dend_90 { pt3dadd( 83.3054, -456.31, -12.6439, 0.29 ) }
    dend_90 { pt3dadd( 83.2959, -456.376, -12.6626, 0.29 ) }
    dend_90 { pt3dadd( 83.1332, -457.456, -12.9061, 0.29 ) }
    dend_90 { pt3dadd( 83.1152, -457.602, -12.9316, 0.29 ) }
    dend_90 { pt3dadd( 83.0547, -458.495, -13.0258, 0.29 ) }
    dend_90 { pt3dadd( 83.0729, -458.84, -13.1013, 0.74 ) }
    dend_90 { pt3dadd( 83.1773, -459.46, -13.2746, 1.11 ) }
    dend_90 { pt3dadd( 83.4372, -460.188, -13.7841, 1.11 ) }
    dend_90 { pt3dadd( 83.4645, -460.243, -13.8376, 1.11 ) }
    dend_90 { pt3dadd( 83.6983, -460.666, -14.2978, 1.11 ) }
    dend_90 { pt3dadd( 84.5369, -462.048, -15.9165, 0.29 ) }
    dend_90 { pt3dadd( 85.0175, -462.812, -16.839, 0.29 ) }
    dend_90 { pt3dadd( 86.2452, -464.634, -19.1373, 0.29 ) }
    dend_90 { pt3dadd( 86.3163, -464.746, -19.2853, 0.96 ) }
    dend_90 { pt3dadd( 86.6189, -465.273, -19.9364, 1.25 ) }
    dend_90 { pt3dadd( 86.8352, -465.682, -20.4297, 1.4 ) }
    dend_90 { pt3dadd( 86.9261, -465.86, -20.6108, 1.4 ) }
    dend_90 { pt3dadd( 86.974, -465.953, -20.7065, 1.4 ) }
    dend_90 { pt3dadd( 87.6905, -467.46, -22.0738, 0.44 ) }
    dend_90 { pt3dadd( 88.0557, -468.194, -22.7643, 0.44 ) }
    dend_90 { pt3dadd( 88.7373, -469.507, -24.0525, 0.66 ) }
    dend_90 { pt3dadd( 89.1882, -470.31, -24.9321, 0.66 ) }
    dend_90 { pt3dadd( 89.8428, -471.294, -25.9758, 0.66 ) }
    dend_90 { pt3dadd( 90.1041, -471.633, -26.3213, 1.47 ) }
    dend_90 { pt3dadd( 90.3076, -471.857, -26.5366, 1.77 ) }
    dend_90 { pt3dadd( 90.3705, -471.92, -26.5962, 1.77 ) }
    dend_90 { pt3dadd( 91.9585, -473.432, -27.8462, 0.22 ) }
    dend_90 { pt3dadd( 93.5021, -474.791, -28.9183, 0.22 ) }
    dend_90 { pt3dadd( 93.817, -475.054, -29.0932, 0.81 ) }
    dend_90 { pt3dadd( 93.8892, -475.112, -29.1286, 0.81 ) }
    dend_90 { pt3dadd( 94.4792, -475.615, -29.4164, 0.81 ) }
    dend_90 { pt3dadd( 94.8168, -475.925, -29.5583, 0.15 ) }
    dend_90 { pt3dadd( 95.3895, -476.493, -29.7182, 0.15 ) }
    dend_90 { pt3dadd( 95.5702, -476.687, -29.7869, 1.18 ) }
    dend_90 { pt3dadd( 95.9024, -477.06, -29.9214, 1.55 ) }
    dend_90 { pt3dadd( 96.7721, -478.063, -30.2605, 0.22 ) }
    dend_90 { pt3dadd( 97.5667, -479.017, -30.5545, 0.22 ) }
    dend_90 { pt3dadd( 97.6603, -479.131, -30.5862, 0.22 ) }
    dend_90 { pt3dadd( 98.2115, -479.762, -30.7358, 0.22 ) }
    dend_90 { pt3dadd( 98.3151, -479.868, -30.7674, 0.22 ) }
    dend_90 { pt3dadd( 99.1707, -480.657, -31.0145, 0.22 ) }
    dend_90 { pt3dadd( 99.6984, -481.106, -31.1476, 0.22 ) }
    dend_90 { pt3dadd( 99.8265, -481.216, -31.1857, 0.22 ) }
    dend_90 { pt3dadd( 100.685, -481.977, -31.5697, 0.22 ) }
    dend_90 { pt3dadd( 101.802, -483.104, -32.2149, 0.22 ) }
    dend_90 { pt3dadd( 102.57, -484.055, -32.8158, 0.22 ) }
    dend_90 { pt3dadd( 102.717, -484.274, -32.963, 1.11 ) }
    dend_90 { pt3dadd( 102.84, -484.498, -33.1113, 1.11 ) }
    dend_90 { pt3dadd( 103.474, -485.933, -34.102, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_90 { pt3dadd( 103.948, -487.388, -35.1066, 0.22 ) }
    dend_90 { pt3dadd( 104.341, -489.026, -36.1895, 0.22 ) }
    dend_90 { pt3dadd( 104.374, -489.218, -36.3178, 0.88 ) }
    dend_90 { pt3dadd( 104.428, -489.622, -36.6033, 0.88 ) }
    dend_90 { pt3dadd( 104.55, -490.65, -37.3151, 0.22 ) }
    dend_90 { pt3dadd( 104.622, -491.412, -37.8017, 0.22 ) }
    dend_90 { pt3dadd( 104.654, -491.649, -37.9754, 0.81 ) }
    dend_90 { pt3dadd( 104.751, -492.068, -38.2668, 0.81 ) }
    dend_90 { pt3dadd( 105.101, -493.178, -38.9733, 0.15 ) }
    dend_90 { pt3dadd( 105.447, -494.073, -39.4647, 0.15 ) }
    dend_90 { pt3dadd( 105.506, -494.204, -39.5168, 0.15 ) }
    dend_90 { pt3dadd( 105.943, -494.991, -39.7998, 0.15 ) }
    dend_90 { pt3dadd( 106.053, -495.16, -39.8514, 0.15 ) }
    dend_90 { pt3dadd( 106.401, -495.605, -39.9267, 0.15 ) }
    dend_90 { pt3dadd( 106.609, -495.847, -39.8939, 0.81 ) }
    dend_90 { pt3dadd( 106.656, -495.898, -39.8832, 0.81 ) }
    dend_90 { pt3dadd( 106.858, -496.132, -39.823, 0.81 ) }
    // Section: dend_80, id: dend_80, parent: dend_76 (entry count 17/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -108.013, 162.351, -154.141, 0.29 ) }
    dend_80 { pt3dadd( -108.547, 162.327, -154.829, 0.29 ) }
    dend_80 { pt3dadd( -108.593, 162.321, -154.883, 0.29 ) }
    dend_80 { pt3dadd( -109.441, 162.201, -155.832, 0.29 ) }
    dend_80 { pt3dadd( -109.547, 162.186, -155.942, 0.29 ) }
    dend_80 { pt3dadd( -110.069, 162.115, -156.452, 0.29 ) }
    dend_80 { pt3dadd( -111.144, 161.969, -157.534, 0.66 ) }
    dend_80 { pt3dadd( -111.666, 161.911, -158.016, 0.66 ) }
    dend_80 { pt3dadd( -111.728, 161.904, -158.067, 0.66 ) }
    dend_80 { pt3dadd( -112.082, 161.861, -158.315, 0.66 ) }
    dend_80 { pt3dadd( -112.144, 161.859, -158.353, 0.66 ) }
    dend_80 { pt3dadd( -112.999, 161.906, -158.807, 0.29 ) }
    dend_80 { pt3dadd( -113.812, 162.025, -159.151, 0.29 ) }
    dend_80 { pt3dadd( -114.213, 162.107, -159.336, 0.66 ) }
    dend_80 { pt3dadd( -114.276, 162.122, -159.365, 0.66 ) }
    dend_80 { pt3dadd( -114.78, 162.23, -159.577, 0.66 ) }
    dend_80 { pt3dadd( -114.847, 162.238, -159.597, 0.66 ) }
    dend_80 { pt3dadd( -115.526, 162.275, -159.89, 0.29 ) }
    dend_80 { pt3dadd( -116.169, 162.277, -160.26, 0.29 ) }
    dend_80 { pt3dadd( -116.229, 162.276, -160.297, 0.29 ) }
    dend_80 { pt3dadd( -116.9, 162.245, -160.691, 0.96 ) }
    dend_80 { pt3dadd( -118.04, 162.165, -161.341, 0.96 ) }
    dend_80 { pt3dadd( -119.901, 162.085, -162.237, 0.29 ) }
    dend_80 { pt3dadd( -119.976, 162.083, -162.272, 0.29 ) }
    dend_80 { pt3dadd( -120.504, 162.084, -162.535, 0.29 ) }
    dend_80 { pt3dadd( -121.369, 162.11, -162.951, 0.29 ) }
    dend_80 { pt3dadd( -121.505, 162.119, -163.014, 0.29 ) }
    dend_80 { pt3dadd( -122.967, 162.243, -163.55, 0.29 ) }
    dend_80 { pt3dadd( -123.96, 162.281, -163.804, 0.81 ) }
    dend_80 { pt3dadd( -124.12, 162.281, -163.849, 0.81 ) }
    dend_80 { pt3dadd( -124.776, 162.237, -164.028, 0.81 ) }
    dend_80 { pt3dadd( -124.871, 162.226, -164.053, 0.81 ) }
    dend_80 { pt3dadd( -126.065, 162.021, -164.328, 0.81 ) }
    dend_80 { pt3dadd( -126.947, 161.815, -164.497, 0.29 ) }
    dend_80 { pt3dadd( -127.018, 161.799, -164.505, 0.29 ) }
    dend_80 { pt3dadd( -128.683, 161.419, -164.687, 0.29 ) }
    dend_80 { pt3dadd( -128.751, 161.403, -164.693, 0.29 ) }
    dend_80 { pt3dadd( -129.094, 161.325, -164.719, 0.66 ) }
    dend_80 { pt3dadd( -129.162, 161.311, -164.722, 0.66 ) }
    dend_80 { pt3dadd( -130.516, 161.051, -164.722, 0.66 ) }
    dend_80 { pt3dadd( -130.617, 161.034, -164.722, 0.66 ) }
    dend_80 { pt3dadd( -131.202, 160.944, -164.722, 1.03 ) }
    dend_80 { pt3dadd( -131.423, 160.911, -164.733, 1.03 ) }
    dend_80 { pt3dadd( -132.242, 160.816, -164.865, 1.03 ) }
    dend_80 { pt3dadd( -132.312, 160.809, -164.883, 1.03 ) }
    dend_80 { pt3dadd( -133.215, 160.786, -165.208, 1.25 ) }
    dend_80 { pt3dadd( -133.29, 160.787, -165.237, 1.25 ) }
    dend_80 { pt3dadd( -133.991, 160.844, -165.618, 0.74 ) }
    dend_80 { pt3dadd( -134.818, 160.959, -166.139, 0.37 ) }
    dend_80 { pt3dadd( -134.883, 160.971, -166.185, 0.37 ) }
    dend_80 { pt3dadd( -136.116, 161.206, -167.059, 0.37 ) }
    dend_80 { pt3dadd( -136.175, 161.215, -167.102, 0.37 ) }
    dend_80 { pt3dadd( -137.622, 161.4, -168.107, 0.37 ) }
    dend_80 { pt3dadd( -137.884, 161.417, -168.256, 0.88 ) }
    dend_80 { pt3dadd( -137.948, 161.417, -168.286, 0.88 ) }
    dend_80 { pt3dadd( -138.679, 161.38, -168.571, 0.88 ) }
    dend_80 { pt3dadd( -139.698, 161.282, -168.889, 0.29 ) }
    dend_80 { pt3dadd( -139.767, 161.277, -168.903, 0.29 ) }
    dend_80 { pt3dadd( -141.209, 161.183, -169.064, 0.29 ) }
    dend_80 { pt3dadd( -141.289, 161.178, -169.07, 0.29 ) }
    dend_80 { pt3dadd( -143.087, 161.074, -169.177, 0.29 ) }
    dend_80 { pt3dadd( -143.391, 161.061, -169.188, 0.29 ) }
    dend_80 { pt3dadd( -144.881, 160.985, -169.2, 0.29 ) }
    dend_80 { pt3dadd( -145.031, 160.975, -169.201, 0.29 ) }
    dend_80 { pt3dadd( -147.506, 160.77, -169.216, 0.29 ) }
    dend_80 { pt3dadd( -147.585, 160.762, -169.216, 0.29 ) }
    dend_80 { pt3dadd( -148.635, 160.608, -169.242, 1.11 ) }
    dend_80 { pt3dadd( -149.346, 160.477, -169.276, 1.77 ) }
    dend_80 { pt3dadd( -149.413, 160.46, -169.281, 1.77 ) }
    dend_80 { pt3dadd( -149.926, 160.327, -169.335, 1.77 ) }
    dend_80 { pt3dadd( -150.037, 160.305, -169.349, 1.77 ) }
    dend_80 { pt3dadd( -151.029, 160.147, -169.47, 0.52 ) }
    dend_80 { pt3dadd( -151.098, 160.135, -169.478, 0.52 ) }
    dend_80 { pt3dadd( -151.925, 159.956, -169.565, 0.29 ) }
    dend_80 { pt3dadd( -152.086, 159.914, -169.574, 0.29 ) }
    dend_80 { pt3dadd( -154.082, 159.133, -169.571, 0.29 ) }
    dend_80 { pt3dadd( -154.3, 159.024, -169.559, 0.66 ) }
    dend_80 { pt3dadd( -154.903, 158.619, -169.677, 0.66 ) }
    dend_80 { pt3dadd( -155.532, 158.154, -170.011, 0.66 ) }
    dend_80 { pt3dadd( -155.918, 157.835, -170.344, 0.22 ) }
    dend_80 { pt3dadd( -156.694, 157.147, -171.379, 0.22 ) }
    dend_80 { pt3dadd( -156.732, 157.108, -171.44, 0.74 ) }
    dend_80 { pt3dadd( -158.559, 155.364, -174.406, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_80 { pt3dadd( -159.095, 154.891, -175.344, 0.44 ) }
    dend_80 { pt3dadd( -159.128, 154.865, -175.403, 0.44 ) }
    dend_80 { pt3dadd( -160.116, 154.192, -177.26, 0.29 ) }
    dend_80 { pt3dadd( -160.927, 153.816, -178.5, 0.29 ) }
    dend_80 { pt3dadd( -160.969, 153.801, -178.555, 0.29 ) }
    dend_80 { pt3dadd( -161.751, 153.579, -179.436, 0.74 ) }
    dend_80 { pt3dadd( -162.079, 153.497, -179.812, 0.74 ) }
    dend_80 { pt3dadd( -163.877, 153.21, -181.861, 0.15 ) }
    dend_80 { pt3dadd( -165.551, 153.107, -183.889, 0.15 ) }
    dend_80 { pt3dadd( -166.252, 153.043, -185.434, 0.81 ) }
    dend_80 { pt3dadd( -166.276, 153.039, -185.503, 0.81 ) }
    dend_80 { pt3dadd( -166.379, 153.015, -185.879, 0.81 ) }
    dend_80 { pt3dadd( -166.861, 152.802, -188.232, 0.15 ) }
    dend_80 { pt3dadd( -167.122, 152.58, -190.164, 0.96 ) }
    dend_80 { pt3dadd( -167.728, 151.478, -198.381, 0.44 ) }
    dend_80 { pt3dadd( -167.74, 151.439, -198.623, 0.44 ) }
    dend_80 { pt3dadd( -167.742, 151.426, -198.695, 0.44 ) }
    dend_80 { pt3dadd( -167.729, 151.214, -199.79, 0.44 ) }
    dend_80 { pt3dadd( -167.712, 151.161, -200.02, 0.44 ) }
    dend_80 { pt3dadd( -167.643, 150.997, -200.636, 0.74 ) }
    dend_80 { pt3dadd( -167.396, 150.484, -200.511, 0.74 ) }
    dend_80 { pt3dadd( -167.332, 150.344, -200.474, 0.74 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -108.013, 162.351, -154.141, 0.29 ) }
    dend_77 { pt3dadd( -108.712, 163.929, -155.679, 0.29 ) }
    dend_77 { pt3dadd( -109.025, 164.564, -156.693, 0.29 ) }
    dend_77 { pt3dadd( -109.043, 164.598, -156.752, 0.29 ) }
    dend_77 { pt3dadd( -109.207, 164.889, -157.372, 0.66 ) }
    dend_77 { pt3dadd( -109.365, 165.163, -157.958, 0.66 ) }
    dend_77 { pt3dadd( -109.833, 166.026, -159.991, 0.66 ) }
    dend_77 { pt3dadd( -110.423, 167.081, -162.763, 0.66 ) }
    dend_77 { pt3dadd( -110.436, 167.105, -162.828, 0.66 ) }
    dend_77 { pt3dadd( -110.893, 168.025, -165.374, 0.96 ) }
    dend_77 { pt3dadd( -111.005, 168.274, -166.083, 0.96 ) }
    dend_77 { pt3dadd( -111.393, 169.214, -168.808, 0.22 ) }
    dend_77 { pt3dadd( -111.403, 169.239, -168.873, 0.22 ) }
    dend_77 { pt3dadd( -111.551, 169.64, -169.789, 0.22 ) }
    dend_77 { pt3dadd( -111.562, 169.669, -169.854, 0.22 ) }
    dend_77 { pt3dadd( -111.73, 170.139, -170.809, 0.59 ) }
    dend_77 { pt3dadd( -111.741, 170.172, -170.87, 0.59 ) }
    dend_77 { pt3dadd( -111.887, 170.599, -171.523, 0.59 ) }
    dend_77 { pt3dadd( -112.342, 171.809, -173.346, 0.59 ) }
    dend_77 { pt3dadd( -112.736, 172.797, -174.857, 0.22 ) }
    dend_77 { pt3dadd( -112.77, 172.887, -174.988, 0.22 ) }
    dend_77 { pt3dadd( -113.026, 173.771, -176.116, 0.22 ) }
    dend_77 { pt3dadd( -113.035, 173.815, -176.17, 0.22 ) }
    dend_77 { pt3dadd( -113.093, 174.304, -176.714, 0.22 ) }
    dend_77 { pt3dadd( -113.096, 174.35, -176.766, 0.22 ) }
    dend_77 { pt3dadd( -113.102, 175.314, -177.88, 0.37 ) }
    dend_77 { pt3dadd( -113.089, 175.935, -178.653, 0.37 ) }
    dend_77 { pt3dadd( -113.048, 176.79, -179.74, 0.88 ) }
    dend_77 { pt3dadd( -113.016, 177.267, -180.331, 0.88 ) }
    dend_77 { pt3dadd( -112.808, 179.459, -183.536, 0.22 ) }
    dend_77 { pt3dadd( -112.79, 180.067, -184.455, 0.22 ) }
    dend_77 { pt3dadd( -112.807, 180.531, -185.166, 0.96 ) }
    dend_77 { pt3dadd( -112.845, 180.926, -185.786, 1.4 ) }
    dend_77 { pt3dadd( -112.851, 180.968, -185.854, 1.4 ) }
    dend_77 { pt3dadd( -113.388, 183.636, -190.263, 0.22 ) }
    dend_77 { pt3dadd( -113.612, 184.414, -191.566, 0.22 ) }
    dend_77 { pt3dadd( -113.695, 184.641, -191.972, 0.59 ) }
    dend_77 { pt3dadd( -113.762, 184.799, -192.247, 0.59 ) }
    dend_77 { pt3dadd( -114.181, 185.63, -193.855, 0.22 ) }
    dend_77 { pt3dadd( -114.201, 185.663, -193.917, 0.22 ) }
    dend_77 { pt3dadd( -114.565, 186.153, -194.807, 0.81 ) }
    dend_77 { pt3dadd( -114.614, 186.215, -194.935, 0.81 ) }
    dend_77 { pt3dadd( -114.859, 186.512, -195.568, 0.81 ) }
    dend_77 { pt3dadd( -116.276, 188.105, -198.995, 0.22 ) }
    dend_77 { pt3dadd( -116.647, 188.476, -199.769, 0.22 ) }
    dend_77 { pt3dadd( -116.796, 188.613, -200.069, 0.59 ) }
    dend_77 { pt3dadd( -116.854, 188.665, -200.216, 0.59 ) }
    dend_77 { pt3dadd( -116.935, 188.736, -200.456, 0.59 ) }
    dend_77 { pt3dadd( -116.975, 188.773, -200.588, 0.59 ) }
    dend_77 { pt3dadd( -117.145, 188.944, -201.209, 0.59 ) }
    dend_77 { pt3dadd( -117.613, 189.474, -203.122, 0.96 ) }
    dend_77 { pt3dadd( -118.368, 190.372, -206.159, 0.15 ) }
    dend_77 { pt3dadd( -118.383, 190.389, -206.218, 0.15 ) }
    dend_77 { pt3dadd( -118.627, 190.669, -207.13, 0.15 ) }
    dend_77 { pt3dadd( -118.654, 190.7, -207.222, 0.74 ) }
    dend_77 { pt3dadd( -118.73, 190.792, -207.454, 0.74 ) }
    dend_77 { pt3dadd( -118.934, 191.013, -207.772, 0.74 ) }
    dend_77 { pt3dadd( -119.853, 191.921, -208.434, 0.15 ) }
    dend_77 { pt3dadd( -119.9, 191.965, -208.463, 0.15 ) }
    dend_77 { pt3dadd( -120.373, 192.386, -208.716, 0.15 ) }
    dend_77 { pt3dadd( -120.518, 192.517, -208.802, 0.15 ) }
    dend_77 { pt3dadd( -121.205, 193.125, -209.192, 0.15 ) }
    dend_77 { pt3dadd( -121.291, 193.203, -209.302, 0.15 ) }
    dend_77 { pt3dadd( -121.608, 193.497, -209.852, 0.15 ) }
    dend_77 { pt3dadd( -121.638, 193.526, -209.909, 0.15 ) }
    dend_77 { pt3dadd( -122.1, 193.991, -210.962, 0.88 ) }
    dend_77 { pt3dadd( -122.478, 194.37, -211.9, 1.25 ) }
    dend_77 { pt3dadd( -123.741, 195.618, -215.198, 0.22 ) }
    dend_77 { pt3dadd( -123.776, 195.651, -215.294, 0.22 ) }
    dend_77 { pt3dadd( -124.187, 196.021, -216.42, 0.22 ) }
    dend_77 { pt3dadd( -124.605, 196.382, -217.473, 0.66 ) }
    dend_77 { pt3dadd( -124.667, 196.434, -217.619, 0.66 ) }
    dend_77 { pt3dadd( -124.852, 196.587, -218.04, 0.66 ) }
    dend_77 { pt3dadd( -126.593, 198.006, -221.155, 0.22 ) }
    dend_77 { pt3dadd( -126.662, 198.064, -221.278, 0.22 ) }
    dend_77 { pt3dadd( -126.951, 198.318, -221.902, 0.22 ) }
    dend_77 { pt3dadd( -127.402, 198.753, -222.948, 0.96 ) }
    dend_77 { pt3dadd( -127.436, 198.793, -223.032, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_77 { pt3dadd( -127.776, 199.258, -223.911, 0.96 ) }
    dend_77 { pt3dadd( -127.796, 199.294, -223.967, 0.96 ) }
    dend_77 { pt3dadd( -128.766, 201.28, -226.837, 0.29 ) }
    dend_77 { pt3dadd( -128.781, 201.314, -226.888, 0.29 ) }
    dend_77 { pt3dadd( -129.129, 202.238, -228.133, 0.29 ) }
    dend_77 { pt3dadd( -129.144, 202.279, -228.187, 0.29 ) }
    dend_77 { pt3dadd( -129.479, 203.219, -229.312, 1.03 ) }
    dend_77 { pt3dadd( -129.678, 203.79, -229.897, 1.03 ) }
    dend_77 { pt3dadd( -130.112, 205.071, -230.839, 0.22 ) }
    dend_77 { pt3dadd( -130.348, 205.722, -231.564, 0.22 ) }
    dend_77 { pt3dadd( -130.365, 205.767, -231.618, 0.22 ) }
    dend_77 { pt3dadd( -130.604, 206.348, -232.3, 0.22 ) }
    dend_77 { pt3dadd( -130.774, 206.74, -232.772, 1.03 ) }
    dend_77 { pt3dadd( -130.991, 207.22, -233.354, 1.03 ) }
    dend_77 { pt3dadd( -132.21, 209.845, -236.378, 0.22 ) }
    dend_77 { pt3dadd( -132.915, 211.288, -238.218, 0.22 ) }
    dend_77 { pt3dadd( -132.94, 211.335, -238.278, 0.22 ) }
    dend_77 { pt3dadd( -133.427, 212.172, -239.371, 1.55 ) }
    dend_77 { pt3dadd( -133.681, 212.574, -239.855, 2.06 ) }
    dend_77 { pt3dadd( -133.918, 212.902, -240.228, 2.06 ) }
    dend_77 { pt3dadd( -135.415, 214.682, -241.899, 0.44 ) }
    dend_77 { pt3dadd( -136.022, 215.248, -242.632, 0.22 ) }
    dend_77 { pt3dadd( -136.09, 215.305, -242.713, 0.22 ) }
    dend_77 { pt3dadd( -136.795, 215.778, -243.463, 0.22 ) }
    dend_77 { pt3dadd( -137.325, 216.075, -244.024, 0.22 ) }
    dend_77 { pt3dadd( -137.382, 216.103, -244.126, 0.22 ) }
    dend_77 { pt3dadd( -138.141, 216.533, -246.02, 1.03 ) }
    dend_77 { pt3dadd( -138.16, 216.55, -246.085, 1.03 ) }
    dend_77 { pt3dadd( -138.328, 216.766, -246.761, 1.03 ) }
    dend_77 { pt3dadd( -138.341, 216.79, -246.826, 1.03 ) }
    dend_77 { pt3dadd( -139.217, 219.0, -251.58, 0.29 ) }
    dend_77 { pt3dadd( -139.36, 219.452, -252.392, 0.29 ) }
    dend_77 { pt3dadd( -139.521, 220.099, -253.351, 0.22 ) }
    dend_77 { pt3dadd( -139.625, 220.553, -253.97, 0.22 ) }
    dend_77 { pt3dadd( -139.679, 220.824, -254.294, 0.22 ) }
    dend_77 { pt3dadd( -139.9, 221.849, -255.349, 0.22 ) }
    dend_77 { pt3dadd( -140.185, 223.041, -256.06, 1.03 ) }
    dend_77 { pt3dadd( -140.302, 223.457, -256.365, 1.47 ) }
    dend_77 { pt3dadd( -140.32, 223.508, -256.41, 1.47 ) }
    dend_77 { pt3dadd( -140.523, 224.06, -256.979, 1.69 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 40/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -137.263, 223.564, -4.18162, 0.29 ) }
    dend_73 { pt3dadd( -138.101, 222.901, -4.89051, 0.29 ) }
    dend_73 { pt3dadd( -138.647, 222.469, -5.35265, 0.29 ) }
    dend_73 { pt3dadd( -138.844, 222.313, -5.51865, 0.66 ) }
    dend_73 { pt3dadd( -139.613, 221.705, -6.16912, 0.74 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 45/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -137.263, 223.564, -4.18162, 0.22 ) }
    dend_72 { pt3dadd( -137.967, 224.444, -4.41183, 0.22 ) }
    dend_72 { pt3dadd( -138.279, 224.843, -4.50491, 0.22 ) }
    dend_72 { pt3dadd( -138.363, 224.951, -4.53007, 0.22 ) }
    dend_72 { pt3dadd( -138.731, 225.421, -4.63968, 0.22 ) }
    dend_72 { pt3dadd( -138.978, 225.737, -4.71333, 0.66 ) }
    dend_72 { pt3dadd( -139.165, 225.977, -4.7692, 0.66 ) }
    dend_72 { pt3dadd( -139.214, 226.039, -4.7692, 0.66 ) }
    // Section: dend_64, id: dend_64, parent: dend_60 (entry count 53/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -71.8373, 228.023, -46.5333, 0.74 ) }
    dend_64 { pt3dadd( -72.056, 229.516, -47.749, 0.74 ) }
    dend_64 { pt3dadd( -72.0611, 229.569, -47.7941, 0.74 ) }
    dend_64 { pt3dadd( -72.1239, 230.804, -48.7902, 0.74 ) }
    dend_64 { pt3dadd( -72.1782, 231.422, -49.2175, 1.03 ) }
    dend_64 { pt3dadd( -72.21, 231.67, -49.3379, 1.03 ) }
    dend_64 { pt3dadd( -72.2214, 231.767, -49.379, 1.03 ) }
    dend_64 { pt3dadd( -72.3404, 232.891, -49.7446, 0.81 ) }
    dend_64 { pt3dadd( -72.3783, 233.574, -49.9339, 0.52 ) }
    dend_64 { pt3dadd( -72.4011, 234.86, -50.2282, 0.52 ) }
    dend_64 { pt3dadd( -72.3481, 237.2, -50.8072, 0.52 ) }
    dend_64 { pt3dadd( -72.2515, 238.523, -51.1373, 0.52 ) }
    dend_64 { pt3dadd( -72.2461, 238.59, -51.1529, 0.52 ) }
    dend_64 { pt3dadd( -72.0935, 240.048, -51.4409, 0.52 ) }
    dend_64 { pt3dadd( -72.0807, 240.124, -51.4582, 0.52 ) }
    dend_64 { pt3dadd( -71.7526, 241.055, -51.7283, 0.96 ) }
    dend_64 { pt3dadd( -71.3428, 241.639, -51.9756, 0.96 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 70/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -71.8373, 228.023, -46.5333, 0.66 ) }
    dend_61 { pt3dadd( -71.7921, 228.657, -46.5239, 0.66 ) }
    dend_61 { pt3dadd( -71.751, 229.36, -46.5163, 0.66 ) }
    dend_61 { pt3dadd( -71.6992, 230.351, -46.5077, 0.66 ) }
    dend_61 { pt3dadd( -71.6439, 231.668, -46.4987, 0.59 ) }
    dend_61 { pt3dadd( -71.5959, 232.868, -46.4917, 0.59 ) }
    dend_61 { pt3dadd( -71.5931, 232.936, -46.4914, 0.59 ) }
    dend_61 { pt3dadd( -71.5739, 233.365, -46.4973, 0.59 ) }
    dend_61 { pt3dadd( -71.5712, 233.434, -46.4983, 0.59 ) }
    dend_61 { pt3dadd( -71.5478, 233.964, -46.4842, 0.88 ) }
    dend_61 { pt3dadd( -71.5334, 234.068, -46.4752, 0.88 ) }
    dend_61 { pt3dadd( -71.427, 234.479, -46.3773, 0.88 ) }
    dend_61 { pt3dadd( -71.3959, 234.562, -46.3518, 0.88 ) }
    dend_61 { pt3dadd( -71.2029, 235.262, -46.1512, 0.88 ) }
    dend_61 { pt3dadd( -71.0714, 235.837, -46.0236, 0.88 ) }
    dend_61 { pt3dadd( -71.0559, 235.906, -46.013, 0.88 ) }
    dend_61 { pt3dadd( -70.893, 236.696, -45.9234, 0.29 ) }
    dend_61 { pt3dadd( -70.7234, 237.652, -45.8508, 0.29 ) }
    dend_61 { pt3dadd( -70.4422, 239.398, -45.7791, 0.29 ) }
    dend_61 { pt3dadd( -70.1837, 241.164, -45.7638, 0.29 ) }
    dend_61 { pt3dadd( -70.0803, 241.852, -45.7816, 0.88 ) }
    dend_61 { pt3dadd( -70.0343, 242.16, -45.7954, 0.96 ) }
    dend_61 { pt3dadd( -69.9071, 243.107, -45.863, 0.37 ) }
    dend_61 { pt3dadd( -69.7569, 244.176, -45.901, 0.37 ) }
    dend_61 { pt3dadd( -69.7433, 244.244, -45.9005, 0.37 ) }
    dend_61 { pt3dadd( -69.6166, 244.911, -45.8566, 1.03 ) }
    dend_61 { pt3dadd( -69.4527, 245.732, -45.7618, 1.4 ) }
    dend_61 { pt3dadd( -69.2655, 246.514, -45.6587, 1.4 ) }
    dend_61 { pt3dadd( -69.0501, 247.343, -45.5367, 0.88 ) }
    dend_61 { pt3dadd( -69.0139, 247.486, -45.5221, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_61 { pt3dadd( -68.9575, 247.695, -45.5127, 0.88 ) }
    dend_61 { pt3dadd( -68.7043, 248.595, -45.5561, 0.52 ) }
    dend_61 { pt3dadd( -68.5844, 248.99, -45.6055, 0.74 ) }
    dend_61 { pt3dadd( -68.4112, 249.544, -45.7097, 0.74 ) }
    dend_61 { pt3dadd( -68.1295, 250.506, -45.9371, 0.29 ) }
    dend_61 { pt3dadd( -67.8518, 251.549, -46.2028, 0.29 ) }
    dend_61 { pt3dadd( -67.6606, 252.465, -46.4356, 0.96 ) }
    dend_61 { pt3dadd( -67.6495, 252.541, -46.4532, 0.96 ) }
    dend_61 { pt3dadd( -67.5677, 253.322, -46.595, 1.25 ) }
    dend_61 { pt3dadd( -67.5418, 253.638, -46.6387, 1.25 ) }
    dend_61 { pt3dadd( -67.5158, 254.315, -46.6951, 0.29 ) }
    dend_61 { pt3dadd( -67.5239, 255.515, -46.7615, 0.29 ) }
    dend_61 { pt3dadd( -67.5747, 256.868, -46.788, 0.29 ) }
    dend_61 { pt3dadd( -67.6302, 257.668, -46.8026, 1.18 ) }
    dend_61 { pt3dadd( -67.6441, 257.807, -46.8044, 1.18 ) }
    dend_61 { pt3dadd( -67.6947, 258.224, -46.8062, 1.18 ) }
    dend_61 { pt3dadd( -67.7198, 258.382, -46.804, 1.18 ) }
    dend_61 { pt3dadd( -67.7934, 258.725, -46.8304, 1.18 ) }
    dend_61 { pt3dadd( -67.9241, 259.335, -46.942, 0.44 ) }
    dend_61 { pt3dadd( -67.933, 259.4, -46.9624, 0.44 ) }
    dend_61 { pt3dadd( -67.982, 260.468, -47.3294, 0.44 ) }
    dend_61 { pt3dadd( -67.9803, 260.542, -47.3566, 0.44 ) }
    dend_61 { pt3dadd( -67.8875, 261.424, -47.664, 1.18 ) }
    dend_61 { pt3dadd( -67.7475, 262.441, -47.9775, 1.55 ) }
    dend_61 { pt3dadd( -67.6102, 263.286, -48.2166, 0.22 ) }
    dend_61 { pt3dadd( -67.4802, 264.11, -48.4277, 0.22 ) }
    dend_61 { pt3dadd( -67.4693, 264.179, -48.44, 0.22 ) }
    dend_61 { pt3dadd( -67.316, 265.406, -48.5422, 0.22 ) }
    dend_61 { pt3dadd( -67.2094, 266.55, -48.5508, 0.22 ) }
    dend_61 { pt3dadd( -67.2048, 266.619, -48.5491, 0.22 ) }
    dend_61 { pt3dadd( -67.1833, 267.028, -48.5249, 1.03 ) }
    dend_61 { pt3dadd( -67.1443, 268.286, -48.456, 0.29 ) }
    dend_61 { pt3dadd( -67.1253, 269.388, -48.4042, 0.29 ) }
    dend_61 { pt3dadd( -67.1141, 270.418, -48.3636, 0.29 ) }
    dend_61 { pt3dadd( -67.1113, 270.499, -48.3613, 0.29 ) }
    dend_61 { pt3dadd( -67.0888, 270.947, -48.3662, 0.81 ) }
    dend_61 { pt3dadd( -67.0263, 271.777, -48.4157, 0.81 ) }
    dend_61 { pt3dadd( -66.9611, 272.471, -48.5125, 0.81 ) }
    dend_61 { pt3dadd( -66.9169, 272.905, -48.5787, 0.81 ) }
    dend_61 { pt3dadd( -66.9102, 272.966, -48.586, 0.81 ) }
    dend_61 { pt3dadd( -66.8382, 273.58, -48.6454, 0.88 ) }
    dend_61 { pt3dadd( -66.8177, 273.718, -48.656, 0.88 ) }
    dend_61 { pt3dadd( -66.7563, 274.078, -48.6795, 0.88 ) }
    dend_61 { pt3dadd( -66.6201, 274.9, -48.7218, 1.03 ) }
    dend_61 { pt3dadd( -66.3681, 276.521, -48.7791, 0.29 ) }
    dend_61 { pt3dadd( -66.1607, 277.938, -48.7228, 0.29 ) }
    dend_61 { pt3dadd( -65.9969, 279.084, -48.6493, 0.29 ) }
    dend_61 { pt3dadd( -65.9866, 279.154, -48.6443, 0.29 ) }
    dend_61 { pt3dadd( -65.9061, 279.677, -48.5996, 1.11 ) }
    dend_61 { pt3dadd( -65.7137, 280.792, -48.4719, 1.33 ) }
    dend_61 { pt3dadd( -65.4772, 282.301, -48.1915, 1.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 51/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 171.721, 184.966, 40.1092, 0.44 ) }
    dend_54 { pt3dadd( 172.822, 185.743, 39.9131, 0.44 ) }
    dend_54 { pt3dadd( 173.68, 186.388, 39.7633, 0.52 ) }
    dend_54 { pt3dadd( 173.736, 186.433, 39.7611, 0.52 ) }
    dend_54 { pt3dadd( 174.199, 186.849, 39.8455, 0.96 ) }
    dend_54 { pt3dadd( 174.655, 187.278, 39.9883, 0.29 ) }
    dend_54 { pt3dadd( 175.23, 187.82, 40.2181, 0.29 ) }
    dend_54 { pt3dadd( 175.275, 187.867, 40.2451, 0.29 ) }
    dend_54 { pt3dadd( 175.903, 188.564, 40.723, 0.59 ) }
    dend_54 { pt3dadd( 176.532, 189.245, 41.1909, 0.59 ) }
    dend_54 { pt3dadd( 176.568, 189.284, 41.2182, 0.59 ) }
    dend_54 { pt3dadd( 176.93, 189.609, 41.4494, 0.96 ) }
    dend_54 { pt3dadd( 177.431, 189.944, 41.6485, 0.96 ) }
    dend_54 { pt3dadd( 178.125, 190.34, 41.8142, 0.81 ) }
    dend_54 { pt3dadd( 178.685, 190.62, 41.8936, 0.29 ) }
    dend_54 { pt3dadd( 178.752, 190.649, 41.9006, 0.29 ) }
    dend_54 { pt3dadd( 179.74, 191.054, 42.0097, 0.29 ) }
    dend_54 { pt3dadd( 180.95, 191.493, 42.1459, 0.29 ) }
    dend_54 { pt3dadd( 181.018, 191.514, 42.1602, 0.29 ) }
    dend_54 { pt3dadd( 181.795, 191.716, 42.3738, 1.03 ) }
    dend_54 { pt3dadd( 182.442, 191.854, 42.6302, 1.33 ) }
    dend_54 { pt3dadd( 182.532, 191.866, 42.6736, 1.33 ) }
    dend_54 { pt3dadd( 182.862, 191.875, 42.8628, 1.33 ) }
    dend_54 { pt3dadd( 184.382, 191.806, 43.8157, 0.44 ) }
    dend_54 { pt3dadd( 185.269, 191.729, 44.3529, 0.44 ) }
    dend_54 { pt3dadd( 186.439, 191.601, 45.0157, 0.44 ) }
    dend_54 { pt3dadd( 187.298, 191.502, 45.5035, 0.44 ) }
    dend_54 { pt3dadd( 187.768, 191.453, 45.7478, 0.44 ) }
    dend_54 { pt3dadd( 187.897, 191.442, 45.8062, 0.44 ) }
    dend_54 { pt3dadd( 188.371, 191.428, 45.9217, 0.81 ) }
    dend_54 { pt3dadd( 189.07, 191.585, 45.9979, 0.81 ) }
    dend_54 { pt3dadd( 189.211, 191.64, 45.9984, 0.81 ) }
    dend_54 { pt3dadd( 189.793, 191.878, 45.9984, 0.81 ) }
    dend_54 { pt3dadd( 189.887, 191.912, 45.9984, 0.81 ) }
    dend_54 { pt3dadd( 190.906, 192.228, 45.9984, 0.29 ) }
    dend_54 { pt3dadd( 191.836, 192.441, 45.9984, 0.29 ) }
    dend_54 { pt3dadd( 191.935, 192.457, 45.9984, 0.29 ) }
    dend_54 { pt3dadd( 192.896, 192.571, 45.9984, 0.29 ) }
    dend_54 { pt3dadd( 193.331, 192.591, 45.9984, 0.66 ) }
    dend_54 { pt3dadd( 193.402, 192.588, 45.9984, 0.66 ) }
    dend_54 { pt3dadd( 193.949, 192.472, 45.9984, 0.88 ) }
    dend_54 { pt3dadd( 194.148, 192.399, 45.9984, 0.88 ) }
    dend_54 { pt3dadd( 194.364, 192.313, 45.9984, 0.88 ) }
    dend_54 { pt3dadd( 194.841, 192.106, 45.9984, 0.29 ) }
    dend_54 { pt3dadd( 194.897, 192.083, 46.0002, 0.29 ) }
    dend_54 { pt3dadd( 195.759, 191.751, 46.042, 0.29 ) }
    dend_54 { pt3dadd( 195.913, 191.697, 46.0511, 0.29 ) }
    dend_54 { pt3dadd( 196.633, 191.528, 46.0997, 0.29 ) }
    dend_54 { pt3dadd( 196.693, 191.515, 46.1041, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_54 { pt3dadd( 198.036, 191.267, 46.2134, 0.29 ) }
    dend_54 { pt3dadd( 198.106, 191.258, 46.2195, 0.29 ) }
    dend_54 { pt3dadd( 198.972, 191.215, 46.3069, 0.29 ) }
    dend_54 { pt3dadd( 200.112, 191.207, 46.4288, 2.14 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 4/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 171.721, 184.966, 40.1092, 0.22 ) }
    dend_53 { pt3dadd( 172.319, 184.598, 40.1224, 0.22 ) }
    dend_53 { pt3dadd( 173.208, 184.057, 40.1424, 0.22 ) }
    dend_53 { pt3dadd( 174.715, 183.15, 40.176, 0.22 ) }
    dend_53 { pt3dadd( 175.737, 182.537, 40.1987, 0.22 ) }
    dend_53 { pt3dadd( 177.249, 181.631, 40.2323, 0.22 ) }
    dend_53 { pt3dadd( 177.394, 181.543, 40.2356, 0.44 ) }
    dend_53 { pt3dadd( 177.527, 181.472, 40.2421, 0.44 ) }
    dend_53 { pt3dadd( 177.941, 181.276, 40.2608, 0.44 ) }
    dend_53 { pt3dadd( 178.003, 181.244, 40.2618, 0.44 ) }
    // Section: dend_32, id: dend_32, parent: dend_4 (entry count 14/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 33.6312, 118.392, -61.0575, 0.66 ) }
    dend_32 { pt3dadd( 34.4197, 119.263, -61.054, 0.66 ) }
    dend_32 { pt3dadd( 35.2225, 120.119, -61.0474, 0.66 ) }
    dend_32 { pt3dadd( 36.0441, 120.959, -61.1091, 0.52 ) }
    dend_32 { pt3dadd( 36.5827, 121.505, -61.1706, 0.52 ) }
    dend_32 { pt3dadd( 37.0472, 121.991, -61.2356, 1.11 ) }
    dend_32 { pt3dadd( 37.0991, 122.051, -61.2439, 1.11 ) }
    dend_32 { pt3dadd( 37.6514, 122.675, -61.3494, 1.11 ) }
    dend_32 { pt3dadd( 38.2991, 123.556, -61.51, 0.96 ) }
    dend_32 { pt3dadd( 38.3364, 123.625, -61.5221, 0.96 ) }
    dend_32 { pt3dadd( 38.5854, 124.204, -61.6088, 0.96 ) }
    dend_32 { pt3dadd( 38.9502, 125.13, -61.7244, 0.96 ) }
    dend_32 { pt3dadd( 39.0001, 125.258, -61.7367, 0.96 ) }
    dend_32 { pt3dadd( 39.3511, 126.219, -61.7872, 0.96 ) }
    dend_32 { pt3dadd( 39.3984, 126.35, -61.7872, 0.96 ) }
    dend_32 { pt3dadd( 39.7392, 127.194, -61.7872, 1.4 ) }
    dend_32 { pt3dadd( 39.9642, 127.655, -61.7872, 1.69 ) }
    dend_32 { pt3dadd( 40.029, 127.778, -61.7872, 1.69 ) }
    dend_32 { pt3dadd( 40.3651, 128.407, -61.7872, 1.69 ) }
    dend_32 { pt3dadd( 40.4615, 128.602, -61.7909, 1.69 ) }
    dend_32 { pt3dadd( 40.8063, 129.364, -61.8156, 1.69 ) }
    dend_32 { pt3dadd( 41.1795, 130.393, -61.8604, 0.88 ) }
    dend_32 { pt3dadd( 41.4195, 131.227, -61.9022, 0.88 ) }
    dend_32 { pt3dadd( 41.4342, 131.296, -61.9058, 0.88 ) }
    dend_32 { pt3dadd( 41.5456, 132.096, -61.9497, 0.66 ) }
    dend_32 { pt3dadd( 41.5508, 132.165, -61.9535, 0.66 ) }
    dend_32 { pt3dadd( 41.5512, 133.13, -62.0047, 0.66 ) }
    dend_32 { pt3dadd( 41.551, 133.423, -62.0185, 0.66 ) }
    dend_32 { pt3dadd( 41.5613, 134.237, -62.0478, 0.66 ) }
    dend_32 { pt3dadd( 41.5833, 134.743, -62.0509, 1.03 ) }
    dend_32 { pt3dadd( 41.5865, 134.812, -62.049, 1.03 ) }
    dend_32 { pt3dadd( 41.5835, 135.589, -61.9343, 1.03 ) }
    dend_32 { pt3dadd( 41.5558, 136.348, -61.7467, 1.03 ) }
    dend_32 { pt3dadd( 41.5131, 136.933, -61.5733, 1.33 ) }
    dend_32 { pt3dadd( 41.4428, 137.577, -61.3714, 0.88 ) }
    dend_32 { pt3dadd( 41.3218, 138.455, -61.0967, 0.88 ) }
    dend_32 { pt3dadd( 41.0874, 139.923, -60.6454, 0.59 ) }
    dend_32 { pt3dadd( 41.0761, 139.988, -60.6263, 0.59 ) }
    dend_32 { pt3dadd( 40.8682, 141.169, -60.302, 0.59 ) }
    dend_32 { pt3dadd( 40.7479, 142.094, -60.0814, 0.59 ) }
    dend_32 { pt3dadd( 40.7189, 142.392, -60.0344, 0.88 ) }
    dend_32 { pt3dadd( 40.7155, 142.599, -60.023, 0.88 ) }
    dend_32 { pt3dadd( 40.7543, 143.457, -60.047, 0.88 ) }
    dend_32 { pt3dadd( 40.7593, 143.525, -60.0488, 0.88 ) }
    dend_32 { pt3dadd( 40.8496, 144.289, -60.0693, 0.88 ) }
    dend_32 { pt3dadd( 40.9722, 145.185, -60.0915, 0.66 ) }
    dend_32 { pt3dadd( 41.2042, 146.808, -60.1259, 0.66 ) }
    dend_32 { pt3dadd( 41.3143, 147.612, -60.14, 1.33 ) }
    dend_32 { pt3dadd( 41.4175, 148.467, -60.1346, 1.69 ) }
    dend_32 { pt3dadd( 41.4895, 149.204, -60.1166, 1.92 ) }
    dend_32 { pt3dadd( 41.5564, 149.883, -60.0854, 2.21 ) }
    dend_32 { pt3dadd( 41.6605, 150.862, -59.9943, 2.28 ) }
    dend_32 { pt3dadd( 41.7779, 151.873, -59.8697, 2.28 ) }
    dend_32 { pt3dadd( 41.9435, 152.978, -59.7093, 1.25 ) }
    dend_32 { pt3dadd( 42.0701, 153.619, -59.6019, 0.81 ) }
    dend_32 { pt3dadd( 42.2668, 154.417, -59.4654, 0.59 ) }
    dend_32 { pt3dadd( 42.5612, 155.357, -59.3177, 0.59 ) }
    dend_32 { pt3dadd( 42.6148, 155.494, -59.2987, 0.59 ) }
    dend_32 { pt3dadd( 42.9521, 156.192, -59.2255, 0.88 ) }
    dend_32 { pt3dadd( 43.3284, 156.892, -59.1771, 0.88 ) }
    dend_32 { pt3dadd( 44.0448, 158.202, -59.1168, 0.59 ) }
    dend_32 { pt3dadd( 44.6838, 159.428, -59.0901, 0.59 ) }
    dend_32 { pt3dadd( 45.0451, 160.157, -59.093, 0.59 ) }
    dend_32 { pt3dadd( 45.5446, 161.187, -59.0994, 0.52 ) }
    dend_32 { pt3dadd( 45.6045, 161.314, -59.1006, 0.52 ) }
    dend_32 { pt3dadd( 46.3048, 162.768, -59.1146, 0.52 ) }
    dend_32 { pt3dadd( 46.5888, 163.354, -59.1201, 1.03 ) }
    dend_32 { pt3dadd( 46.8556, 163.942, -59.1247, 1.03 ) }
    dend_32 { pt3dadd( 46.8928, 164.032, -59.1259, 1.03 ) }
    dend_32 { pt3dadd( 47.2748, 164.959, -59.141, 1.03 ) }
    dend_32 { pt3dadd( 47.3443, 165.113, -59.1447, 1.03 ) }
    dend_32 { pt3dadd( 47.574, 165.576, -59.16, 1.03 ) }
    dend_32 { pt3dadd( 47.6125, 165.647, -59.1626, 1.03 ) }
    dend_32 { pt3dadd( 48.1275, 166.549, -59.1963, 0.29 ) }
    dend_32 { pt3dadd( 48.2781, 166.791, -59.2042, 0.59 ) }
    dend_32 { pt3dadd( 48.6942, 167.396, -59.2195, 0.88 ) }
    dend_32 { pt3dadd( 49.2422, 168.173, -59.2348, 0.81 ) }
    dend_32 { pt3dadd( 49.3184, 168.302, -59.2363, 0.81 ) }
    dend_32 { pt3dadd( 49.6591, 168.96, -59.2399, 0.81 ) }
    dend_32 { pt3dadd( 50.245, 170.162, -59.2399, 0.37 ) }
    dend_32 { pt3dadd( 50.9414, 171.646, -59.2399, 0.37 ) }
    dend_32 { pt3dadd( 51.0046, 171.782, -59.2399, 0.37 ) }
    dend_32 { pt3dadd( 51.9965, 173.981, -59.2399, 0.37 ) }
    dend_32 { pt3dadd( 52.4156, 174.935, -59.2399, 0.37 ) }
    dend_32 { pt3dadd( 52.6958, 175.584, -59.2399, 0.37 ) }
    dend_32 { pt3dadd( 52.7828, 175.79, -59.2399, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_32 { pt3dadd( 53.0497, 176.379, -59.2399, 0.81 ) }
    dend_32 { pt3dadd( 53.4095, 177.068, -59.2399, 1.4 ) }
    dend_32 { pt3dadd( 53.873, 177.85, -59.2431, 1.69 ) }
    dend_32 { pt3dadd( 53.9989, 178.076, -59.2446, 1.69 ) }
    dend_32 { pt3dadd( 54.4615, 178.959, -59.252, 1.18 ) }
    dend_32 { pt3dadd( 54.9618, 179.959, -59.2615, 0.81 ) }
    dend_32 { pt3dadd( 55.4426, 180.977, -59.2722, 0.66 ) }
    dend_32 { pt3dadd( 55.8443, 181.86, -59.2824, 0.52 ) }
    dend_32 { pt3dadd( 56.229, 182.761, -59.2934, 0.52 ) }
    dend_32 { pt3dadd( 56.255, 182.826, -59.2942, 0.52 ) }
    dend_32 { pt3dadd( 56.3909, 183.234, -59.2992, 0.81 ) }
    dend_32 { pt3dadd( 56.5605, 183.789, -59.3051, 0.81 ) }
    dend_32 { pt3dadd( 56.5842, 183.866, -59.3056, 0.81 ) }
    dend_32 { pt3dadd( 56.7101, 184.257, -59.3056, 0.29 ) }
    dend_32 { pt3dadd( 56.731, 184.335, -59.3056, 0.29 ) }
    dend_32 { pt3dadd( 56.9583, 185.586, -59.3056, 0.29 ) }
    dend_32 { pt3dadd( 57.0135, 186.396, -59.3056, 0.29 ) }
    dend_32 { pt3dadd( 57.0064, 186.851, -59.3056, 0.52 ) }
    dend_32 { pt3dadd( 56.9663, 187.768, -59.3056, 0.52 ) }
    dend_32 { pt3dadd( 56.8995, 188.547, -59.3056, 0.52 ) }
    dend_32 { pt3dadd( 56.7932, 189.399, -59.3056, 0.59 ) }
    dend_32 { pt3dadd( 56.6167, 190.202, -59.3056, 0.59 ) }
    dend_32 { pt3dadd( 56.5907, 190.268, -59.3056, 0.59 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 23/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 33.6312, 118.392, -61.0575, 1.11 ) }
    dend_5 { pt3dadd( 36.6119, 120.684, -65.0805, 1.11 ) }
    dend_5 { pt3dadd( 37.0749, 121.04, -65.7054, 1.11 ) }
    dend_5 { pt3dadd( 37.883, 121.661, -66.796, 1.99 ) }
    dend_5 { pt3dadd( 38.3113, 121.99, -67.3741, 2.28 ) }
    dend_5 { pt3dadd( 38.782, 122.352, -68.0094, 2.28 ) }
    dend_5 { pt3dadd( 39.5311, 122.928, -69.0205, 0.81 ) }
    // Section: dend_146, id: dend_146, parent: dend_144 (entry count 30/100)
    dend_146 { pt3dclear() }
    dend_146 { pt3dadd( 120.407, -189.427, 3.14088, 0.37 ) }
    dend_146 { pt3dadd( 120.81, -190.331, 3.30854, 0.37 ) }
    dend_146 { pt3dadd( 121.108, -190.978, 3.42016, 0.37 ) }
    dend_146 { pt3dadd( 121.235, -191.221, 3.46058, 0.59 ) }
    dend_146 { pt3dadd( 121.344, -191.401, 3.51922, 0.59 ) }
    dend_146 { pt3dadd( 121.809, -192.054, 3.90781, 0.59 ) }
    dend_146 { pt3dadd( 122.268, -192.612, 4.38629, 0.59 ) }
    dend_146 { pt3dadd( 122.303, -192.653, 4.42991, 0.59 ) }
    dend_146 { pt3dadd( 122.579, -193.021, 4.84558, 0.88 ) }
    dend_146 { pt3dadd( 123.117, -193.86, 5.78364, 1.18 ) }
    dend_146 { pt3dadd( 123.606, -194.716, 6.7455, 0.52 ) }
    dend_146 { pt3dadd( 123.925, -195.355, 7.49052, 0.52 ) }
    dend_146 { pt3dadd( 124.171, -195.947, 8.15033, 0.44 ) }
    dend_146 { pt3dadd( 124.415, -196.645, 8.85613, 0.37 ) }
    dend_146 { pt3dadd( 124.583, -197.243, 9.39963, 0.37 ) }
    dend_146 { pt3dadd( 124.612, -197.375, 9.49338, 0.37 ) }
    dend_146 { pt3dadd( 124.656, -197.603, 9.61923, 0.81 ) }
    dend_146 { pt3dadd( 124.779, -198.15, 9.89172, 0.81 ) }
    dend_146 { pt3dadd( 124.805, -198.213, 9.93381, 0.81 ) }
    dend_146 { pt3dadd( 125.163, -198.844, 10.4672, 0.59 ) }
    dend_146 { pt3dadd( 125.195, -198.884, 10.515, 0.59 ) }
    dend_146 { pt3dadd( 125.574, -199.291, 11.0962, 0.59 ) }
    dend_146 { pt3dadd( 125.649, -199.354, 11.1965, 0.59 ) }
    dend_146 { pt3dadd( 126.395, -199.852, 12.1097, 0.52 ) }
    dend_146 { pt3dadd( 126.455, -199.885, 12.1903, 0.52 ) }
    dend_146 { pt3dadd( 127.422, -200.291, 13.3951, 0.52 ) }
    dend_146 { pt3dadd( 127.461, -200.306, 13.4393, 0.52 ) }
    dend_146 { pt3dadd( 128.159, -200.523, 14.1764, 0.52 ) }
    dend_146 { pt3dadd( 128.207, -200.54, 14.2243, 0.52 ) }
    dend_146 { pt3dadd( 129.243, -200.942, 15.1469, 1.25 ) }
    dend_146 { pt3dadd( 129.98, -201.281, 15.7369, 1.92 ) }
    dend_146 { pt3dadd( 130.498, -201.562, 16.1014, 1.92 ) }
    dend_146 { pt3dadd( 130.575, -201.605, 16.153, 1.92 ) }
    dend_146 { pt3dadd( 131.717, -202.284, 16.8605, 0.52 ) }
    dend_146 { pt3dadd( 131.78, -202.321, 16.892, 0.52 ) }
    dend_146 { pt3dadd( 132.628, -202.819, 17.1825, 0.37 ) }
    dend_146 { pt3dadd( 132.687, -202.851, 17.1994, 0.37 ) }
    dend_146 { pt3dadd( 132.937, -202.977, 17.2394, 0.81 ) }
    dend_146 { pt3dadd( 133.395, -203.203, 17.262, 1.11 ) }
    dend_146 { pt3dadd( 133.791, -203.393, 17.2948, 1.11 ) }
    dend_146 { pt3dadd( 133.986, -203.492, 17.3267, 1.11 ) }
    dend_146 { pt3dadd( 134.751, -203.902, 17.5023, 0.29 ) }
    dend_146 { pt3dadd( 135.853, -204.532, 17.7954, 0.29 ) }
    dend_146 { pt3dadd( 136.678, -205.045, 18.1866, 0.29 ) }
    dend_146 { pt3dadd( 137.784, -205.78, 18.9295, 0.81 ) }
    dend_146 { pt3dadd( 138.098, -205.999, 19.1976, 0.81 ) }
    dend_146 { pt3dadd( 138.184, -206.063, 19.289, 0.81 ) }
    dend_146 { pt3dadd( 138.637, -206.398, 19.8851, 0.81 ) }
    dend_146 { pt3dadd( 139.755, -207.205, 21.5932, 0.81 ) }
    dend_146 { pt3dadd( 139.794, -207.229, 21.6466, 0.81 ) }
    dend_146 { pt3dadd( 140.114, -207.388, 21.9203, 0.81 ) }
    dend_146 { pt3dadd( 140.172, -207.412, 21.9542, 0.81 ) }
    dend_146 { pt3dadd( 140.734, -207.618, 22.2221, 0.52 ) }
    dend_146 { pt3dadd( 141.08, -207.728, 22.3104, 0.52 ) }
    dend_146 { pt3dadd( 141.806, -207.948, 22.3104, 0.52 ) }
    dend_146 { pt3dadd( 142.52, -208.171, 22.3104, 1.18 ) }
    dend_146 { pt3dadd( 143.127, -208.37, 22.3104, 1.47 ) }
    // Section: dend_145, id: dend_145, parent: dend_144 (entry count 87/100)
    dend_145 { pt3dclear() }
    dend_145 { pt3dadd( 120.407, -189.427, 3.14088, 0.22 ) }
    dend_145 { pt3dadd( 121.956, -189.266, 4.15439, 0.22 ) }
    dend_145 { pt3dadd( 122.319, -189.229, 4.39203, 0.59 ) }
    dend_145 { pt3dadd( 122.622, -189.197, 4.59028, 0.88 ) }
    dend_145 { pt3dadd( 122.824, -189.176, 4.723, 0.88 ) }
    dend_145 { pt3dadd( 123.208, -189.136, 4.97397, 0.88 ) }
    // Section: dend_141, id: dend_141, parent: dend_133 (entry count 93/100)
    dend_141 { pt3dclear() }
    dend_141 { pt3dadd( 101.48, -183.494, -1.58644, 0.29 ) }
    dend_141 { pt3dadd( 101.438, -185.498, -4.08444, 0.29 ) }
    dend_141 { pt3dadd( 101.494, -186.644, -5.20132, 0.29 ) }
    dend_141 { pt3dadd( 101.5, -186.7, -5.24142, 0.29 ) }
    dend_141 { pt3dadd( 101.643, -187.74, -5.87094, 0.29 ) }
    dend_141 { pt3dadd( 101.783, -188.59, -6.3593, 0.88 ) }
    dend_141 { pt3dadd( 101.858, -189.045, -6.59923, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_141 { pt3dadd( 101.927, -189.398, -6.69239, 1.47 ) }
    dend_141 { pt3dadd( 102.067, -190.381, -6.91074, 1.33 ) }
    dend_141 { pt3dadd( 102.075, -190.523, -6.95111, 1.33 ) }
    dend_141 { pt3dadd( 102.053, -191.454, -7.31896, 1.11 ) }
    dend_141 { pt3dadd( 102.015, -192.163, -7.64795, 0.37 ) }
    dend_141 { pt3dadd( 101.974, -192.845, -8.0112, 0.37 ) }
    dend_141 { pt3dadd( 101.938, -193.473, -8.36983, 0.37 ) }
    dend_141 { pt3dadd( 101.88, -194.397, -8.93336, 0.37 ) }
    dend_141 { pt3dadd( 101.86, -195.365, -9.42725, 0.37 ) }
    dend_141 { pt3dadd( 101.863, -195.566, -9.51229, 0.66 ) }
    dend_141 { pt3dadd( 101.878, -195.701, -9.57182, 0.66 ) }
    dend_141 { pt3dadd( 101.997, -196.279, -9.81538, 0.66 ) }
    dend_141 { pt3dadd( 102.015, -196.341, -9.83868, 0.66 ) }
    dend_141 { pt3dadd( 102.435, -197.927, -10.2633, 0.66 ) }
    dend_141 { pt3dadd( 102.451, -197.992, -10.2776, 0.66 ) }
    dend_141 { pt3dadd( 102.643, -198.893, -10.568, 0.52 ) }
    dend_141 { pt3dadd( 102.716, -199.248, -10.7025, 0.52 ) }
    dend_141 { pt3dadd( 102.729, -199.319, -10.7333, 0.52 ) }
    dend_141 { pt3dadd( 102.783, -199.579, -10.8704, 0.81 ) }
    dend_141 { pt3dadd( 102.957, -200.3, -11.3422, 0.81 ) }
    dend_141 { pt3dadd( 103.349, -201.708, -12.2845, 0.44 ) }
    dend_141 { pt3dadd( 103.477, -202.124, -12.5592, 0.74 ) }
    dend_141 { pt3dadd( 103.5, -202.187, -12.6014, 0.74 ) }
    dend_141 { pt3dadd( 103.903, -203.046, -13.1768, 0.59 ) }
    dend_141 { pt3dadd( 104.347, -203.752, -13.7104, 0.29 ) }
    dend_141 { pt3dadd( 104.596, -204.04, -13.9457, 0.29 ) }
    dend_141 { pt3dadd( 104.842, -204.261, -14.1149, 0.74 ) }
    dend_141 { pt3dadd( 105.163, -204.535, -14.3526, 0.96 ) }
    dend_141 { pt3dadd( 105.67, -204.961, -14.7181, 1.25 ) }
    dend_141 { pt3dadd( 106.347, -205.564, -15.2132, 0.96 ) }
    dend_141 { pt3dadd( 106.722, -205.978, -15.616, 0.96 ) }
    dend_141 { pt3dadd( 106.934, -206.302, -15.9602, 0.74 ) }
    dend_141 { pt3dadd( 107.265, -207.218, -16.9384, 0.37 ) }
    dend_141 { pt3dadd( 107.304, -207.636, -17.3977, 0.37 ) }
    dend_141 { pt3dadd( 107.21, -208.162, -18.0028, 0.37 ) }
    dend_141 { pt3dadd( 106.877, -209.239, -19.1829, 0.37 ) }
    dend_141 { pt3dadd( 106.789, -209.492, -19.4488, 0.88 ) }
    dend_141 { pt3dadd( 106.524, -210.417, -20.335, 0.74 ) }
    dend_141 { pt3dadd( 106.308, -211.345, -21.1386, 0.29 ) }
    dend_141 { pt3dadd( 106.173, -212.292, -21.9559, 0.29 ) }
    dend_141 { pt3dadd( 106.133, -213.364, -22.8311, 0.29 ) }
    dend_141 { pt3dadd( 106.14, -214.069, -23.3491, 0.29 ) }
    dend_141 { pt3dadd( 106.157, -215.138, -24.0817, 0.29 ) }
    dend_141 { pt3dadd( 106.155, -215.199, -24.118, 0.29 ) }
    dend_141 { pt3dadd( 106.132, -215.902, -24.4849, 0.74 ) }
    dend_141 { pt3dadd( 106.115, -216.512, -24.7654, 0.81 ) }
    dend_141 { pt3dadd( 105.999, -217.471, -25.1705, 0.74 ) }
    dend_141 { pt3dadd( 105.867, -218.426, -25.4885, 0.74 ) }
    dend_141 { pt3dadd( 105.755, -219.351, -25.7142, 1.47 ) }
    dend_141 { pt3dadd( 105.682, -220.394, -25.8876, 0.52 ) }
    dend_141 { pt3dadd( 105.648, -221.7, -26.018, 0.52 ) }
    dend_141 { pt3dadd( 105.664, -222.335, -26.0556, 0.52 ) }
    dend_141 { pt3dadd( 105.791, -224.507, -26.0824, 0.52 ) }
    dend_141 { pt3dadd( 105.835, -225.276, -26.084, 1.33 ) }
    dend_141 { pt3dadd( 105.854, -226.068, -26.073, 1.92 ) }
    dend_141 { pt3dadd( 105.827, -226.438, -26.0636, 2.06 ) }
    dend_141 { pt3dadd( 105.707, -227.293, -26.0644, 0.96 ) }
    dend_141 { pt3dadd( 105.516, -228.2, -26.0929, 0.59 ) }
    dend_141 { pt3dadd( 105.241, -229.08, -26.1503, 0.52 ) }
    dend_141 { pt3dadd( 104.891, -230.104, -26.296, 0.52 ) }
    dend_141 { pt3dadd( 104.392, -231.504, -26.567, 0.52 ) }
    dend_141 { pt3dadd( 104.344, -231.648, -26.6008, 0.74 ) }
    dend_141 { pt3dadd( 104.188, -232.22, -26.7926, 0.74 ) }
    dend_141 { pt3dadd( 104.031, -232.927, -27.0855, 0.29 ) }
    dend_141 { pt3dadd( 103.871, -234.086, -27.6941, 0.29 ) }
    dend_141 { pt3dadd( 103.866, -234.155, -27.7359, 0.29 ) }
    dend_141 { pt3dadd( 103.834, -234.719, -28.0798, 0.29 ) }
    dend_141 { pt3dadd( 103.744, -235.922, -28.7973, 0.29 ) }
    dend_141 { pt3dadd( 103.615, -237.108, -29.4712, 0.29 ) }
    dend_141 { pt3dadd( 103.464, -238.353, -30.085, 1.18 ) }
    dend_141 { pt3dadd( 103.364, -239.007, -30.3626, 1.84 ) }
    dend_141 { pt3dadd( 103.24, -239.735, -30.642, 1.69 ) }
    dend_141 { pt3dadd( 102.92, -241.22, -31.1452, 0.37 ) }
    dend_141 { pt3dadd( 102.756, -241.906, -31.3373, 0.37 ) }
    dend_141 { pt3dadd( 102.41, -243.318, -31.6974, 0.37 ) }
    dend_141 { pt3dadd( 102.391, -243.393, -31.7128, 0.37 ) }
    dend_141 { pt3dadd( 102.125, -244.426, -31.9229, 0.37 ) }
    dend_141 { pt3dadd( 101.948, -245.11, -32.0723, 0.37 ) }
    dend_141 { pt3dadd( 101.872, -245.368, -32.1374, 0.81 ) }
    dend_141 { pt3dadd( 101.854, -245.422, -32.1603, 0.81 ) }
    dend_141 { pt3dadd( 101.669, -245.806, -32.4854, 0.29 ) }
    dend_141 { pt3dadd( 101.516, -246.127, -32.7791, 0.29 ) }
    dend_141 { pt3dadd( 101.235, -246.707, -33.3416, 0.52 ) }
    dend_141 { pt3dadd( 100.986, -247.246, -33.8335, 0.74 ) }
    dend_141 { pt3dadd( 100.757, -247.707, -34.22, 0.74 ) }
    dend_141 { pt3dadd( 100.088, -248.985, -35.2047, 0.44 ) }
    dend_141 { pt3dadd( 99.6367, -249.878, -35.7629, 0.44 ) }
    dend_141 { pt3dadd( 99.5275, -250.119, -35.9093, 0.66 ) }
    dend_141 { pt3dadd( 99.3691, -250.535, -36.1318, 0.81 ) }
    dend_141 { pt3dadd( 99.2432, -250.991, -36.3481, 0.81 ) }
    dend_141 { pt3dadd( 99.171, -251.315, -36.4869, 0.52 ) }
    dend_141 { pt3dadd( 98.9165, -252.599, -36.9208, 0.52 ) }
    dend_141 { pt3dadd( 98.6251, -254.149, -37.4437, 0.81 ) }
    dend_141 { pt3dadd( 98.5375, -254.553, -37.5813, 1.18 ) }
    dend_141 { pt3dadd( 98.3882, -255.161, -37.7898, 1.47 ) }
    dend_141 { pt3dadd( 98.1951, -255.925, -38.0526, 1.47 ) }
    dend_141 { pt3dadd( 97.9611, -256.688, -38.3061, 0.88 ) }
    dend_141 { pt3dadd( 97.6834, -257.398, -38.5071, 0.66 ) }
    dend_141 { pt3dadd( 97.3791, -258.082, -38.5815, 0.66 ) }
    dend_141 { pt3dadd( 97.3439, -258.151, -38.5906, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    // Section: dend_134, id: dend_134, parent: dend_133 (entry count 0/100)
    dend_134 { pt3dclear() }
    dend_134 { pt3dadd( 101.48, -183.494, -1.58644, 0.74 ) }
    dend_134 { pt3dadd( 101.506, -183.569, -1.57778, 0.74 ) }
    dend_134 { pt3dadd( 101.792, -184.394, -1.38154, 0.74 ) }
    dend_134 { pt3dadd( 101.906, -184.754, -1.28544, 1.03 ) }
    dend_134 { pt3dadd( 102.066, -185.327, -1.13334, 1.18 ) }
    dend_134 { pt3dadd( 102.083, -185.394, -1.11577, 1.18 ) }
    dend_134 { pt3dadd( 102.324, -186.421, -0.859211, 0.52 ) }
    dend_134 { pt3dadd( 102.475, -187.117, -0.69007, 0.74 ) }
    dend_134 { pt3dadd( 102.578, -187.668, -0.554824, 0.88 ) }
    dend_134 { pt3dadd( 102.661, -188.151, -0.44232, 1.11 ) }
    dend_134 { pt3dadd( 102.673, -188.22, -0.428274, 1.11 ) }
    dend_134 { pt3dadd( 102.788, -188.789, -0.33322, 0.66 ) }
    dend_134 { pt3dadd( 102.964, -189.442, -0.319355, 0.37 ) }
    dend_134 { pt3dadd( 103.305, -190.306, -0.402683, 0.37 ) }
    dend_134 { pt3dadd( 103.406, -190.503, -0.434786, 0.37 ) }
    dend_134 { pt3dadd( 103.801, -191.096, -0.562875, 1.03 ) }
    dend_134 { pt3dadd( 103.893, -191.218, -0.594008, 1.03 ) }
    dend_134 { pt3dadd( 104.797, -192.185, -0.837086, 0.29 ) }
    dend_134 { pt3dadd( 105.323, -192.66, -0.940096, 0.29 ) }
    dend_134 { pt3dadd( 105.378, -192.703, -0.948129, 0.29 ) }
    dend_134 { pt3dadd( 106.294, -193.405, -1.01768, 0.29 ) }
    dend_134 { pt3dadd( 106.416, -193.492, -1.01789, 0.29 ) }
    dend_134 { pt3dadd( 107.215, -194.066, -0.952353, 0.81 ) }
    dend_134 { pt3dadd( 107.878, -194.56, -0.767287, 1.25 ) }
    dend_134 { pt3dadd( 107.959, -194.624, -0.73852, 1.25 ) }
    dend_134 { pt3dadd( 108.451, -195.036, -0.538994, 1.25 ) }
    dend_134 { pt3dadd( 108.499, -195.082, -0.518284, 1.25 ) }
    dend_134 { pt3dadd( 108.736, -195.351, -0.42707, 1.25 ) }
    dend_134 { pt3dadd( 109.42, -196.245, -0.221049, 0.59 ) }
    dend_134 { pt3dadd( 109.459, -196.302, -0.210849, 0.59 ) }
    dend_134 { pt3dadd( 109.728, -196.683, -0.118466, 0.37 ) }
    dend_134 { pt3dadd( 110.185, -197.392, 0.0718805, 0.37 ) }
    dend_134 { pt3dadd( 110.47, -197.866, 0.198832, 0.37 ) }
    dend_134 { pt3dadd( 110.69, -198.235, 0.296796, 0.81 ) }
    dend_134 { pt3dadd( 111.0, -198.761, 0.421628, 0.59 ) }
    dend_134 { pt3dadd( 111.481, -199.546, 0.639687, 0.29 ) }
    dend_134 { pt3dadd( 111.789, -200.015, 0.790565, 0.29 ) }
    dend_134 { pt3dadd( 112.08, -200.388, 0.948784, 0.52 ) }
    dend_134 { pt3dadd( 112.578, -200.962, 1.21241, 0.29 ) }
    dend_134 { pt3dadd( 112.901, -201.289, 1.40048, 0.37 ) }
    dend_134 { pt3dadd( 112.982, -201.355, 1.44462, 0.37 ) }
    dend_134 { pt3dadd( 113.505, -201.722, 1.7028, 0.37 ) }
    dend_134 { pt3dadd( 114.429, -202.26, 2.18089, 0.37 ) }
    dend_134 { pt3dadd( 114.486, -202.288, 2.21112, 0.37 ) }
    dend_134 { pt3dadd( 115.446, -202.708, 2.72584, 0.74 ) }
    dend_134 { pt3dadd( 115.823, -202.856, 2.91834, 1.03 ) }
    dend_134 { pt3dadd( 115.882, -202.879, 2.94854, 1.25 ) }
    dend_134 { pt3dadd( 115.942, -202.904, 2.97647, 1.25 ) }
    dend_134 { pt3dadd( 116.249, -203.084, 3.08748, 1.25 ) }
    dend_134 { pt3dadd( 116.649, -203.378, 3.23304, 0.74 ) }
    dend_134 { pt3dadd( 117.015, -203.699, 3.35452, 0.52 ) }
    dend_134 { pt3dadd( 117.767, -204.423, 3.61346, 0.52 ) }
    dend_134 { pt3dadd( 118.492, -205.136, 3.84615, 0.52 ) }
    dend_134 { pt3dadd( 119.258, -205.933, 4.09061, 0.52 ) }
    dend_134 { pt3dadd( 119.804, -206.542, 4.25873, 0.74 ) }
    dend_134 { pt3dadd( 120.321, -207.146, 4.41743, 0.52 ) }
    dend_134 { pt3dadd( 120.75, -207.669, 4.54126, 0.52 ) }
    dend_134 { pt3dadd( 121.443, -208.517, 4.69682, 0.52 ) }
    dend_134 { pt3dadd( 121.82, -208.947, 4.78221, 1.4 ) }
    dend_134 { pt3dadd( 122.436, -209.616, 4.90606, 1.69 ) }
    // Section: dend_126, id: dend_126, parent: dend_120 (entry count 60/100)
    dend_126 { pt3dclear() }
    dend_126 { pt3dadd( -52.9078, -241.445, 7.03381, 0.29 ) }
    dend_126 { pt3dadd( -54.1212, -241.664, 7.17133, 0.29 ) }
    dend_126 { pt3dadd( -54.1903, -241.676, 7.17916, 0.29 ) }
    dend_126 { pt3dadd( -55.8837, -241.982, 7.37109, 0.29 ) }
    dend_126 { pt3dadd( -55.9549, -241.995, 7.37916, 0.29 ) }
    // Section: dend_121, id: dend_121, parent: dend_120 (entry count 65/100)
    dend_121 { pt3dclear() }
    dend_121 { pt3dadd( -52.9078, -241.445, 7.03381, 0.81 ) }
    dend_121 { pt3dadd( -53.1548, -241.841, 6.97585, 0.81 ) }
    dend_121 { pt3dadd( -53.4326, -242.151, 6.92415, 0.81 ) }
    dend_121 { pt3dadd( -53.8809, -242.535, 6.85714, 0.44 ) }
    dend_121 { pt3dadd( -54.7411, -243.185, 6.74126, 0.44 ) }
    dend_121 { pt3dadd( -55.5888, -243.789, 6.70709, 0.44 ) }
    dend_121 { pt3dadd( -56.3209, -244.32, 6.72264, 0.44 ) }
    dend_121 { pt3dadd( -56.9379, -244.722, 6.76236, 0.81 ) }
    dend_121 { pt3dadd( -57.5775, -245.146, 6.83366, 0.81 ) }
    dend_121 { pt3dadd( -57.6346, -245.184, 6.84303, 0.81 ) }
    dend_121 { pt3dadd( -58.4656, -245.891, 7.05355, 0.29 ) }
    dend_121 { pt3dadd( -58.9402, -246.537, 7.2457, 0.29 ) }
    dend_121 { pt3dadd( -58.9669, -246.599, 7.26025, 0.29 ) }
    dend_121 { pt3dadd( -59.1831, -247.551, 7.41951, 0.29 ) }
    dend_121 { pt3dadd( -59.1924, -247.628, 7.42903, 0.29 ) }
    dend_121 { pt3dadd( -59.2767, -248.648, 7.49222, 0.29 ) }
    dend_121 { pt3dadd( -59.2988, -249.012, 7.49475, 0.66 ) }
    dend_121 { pt3dadd( -59.3331, -249.67, 7.50103, 0.88 ) }
    dend_121 { pt3dadd( -59.3956, -250.557, 7.45195, 0.66 ) }
    dend_121 { pt3dadd( -59.4058, -250.653, 7.4366, 0.66 ) }
    dend_121 { pt3dadd( -59.6111, -252.108, 7.07612, 0.66 ) }
    dend_121 { pt3dadd( -59.7308, -252.671, 6.87844, 0.81 ) }
    dend_121 { pt3dadd( -59.8233, -253.0, 6.73253, 1.11 ) }
    dend_121 { pt3dadd( -60.2527, -254.001, 6.15629, 0.81 ) }
    dend_121 { pt3dadd( -60.6753, -254.603, 5.63062, 0.37 ) }
    dend_121 { pt3dadd( -60.7216, -254.644, 5.58022, 0.37 ) }
    dend_121 { pt3dadd( -61.0385, -254.794, 5.27359, 0.37 ) }
    dend_121 { pt3dadd( -61.1439, -254.831, 5.18709, 0.37 ) }
    dend_121 { pt3dadd( -61.6283, -254.964, 4.86647, 0.37 ) }
    dend_121 { pt3dadd( -62.6238, -255.202, 4.43356, 0.37 ) }
    dend_121 { pt3dadd( -63.2052, -255.371, 4.24592, 0.37 ) }
    dend_121 { pt3dadd( -63.2771, -255.399, 4.2242, 0.37 ) }
    dend_121 { pt3dadd( -63.6685, -255.605, 4.12228, 0.96 ) }
    dend_121 { pt3dadd( -63.7272, -255.641, 4.10923, 0.96 ) }
    dend_121 { pt3dadd( -64.1899, -255.978, 3.99596, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_121 { pt3dadd( -64.7306, -256.418, 3.82586, 1.18 ) }
    dend_121 { pt3dadd( -65.3364, -256.926, 3.57414, 0.96 ) }
    dend_121 { pt3dadd( -65.985, -257.515, 3.26666, 0.74 ) }
    dend_121 { pt3dadd( -66.0375, -257.569, 3.23937, 0.74 ) }
    dend_121 { pt3dadd( -66.7001, -258.41, 2.84248, 0.59 ) }
    dend_121 { pt3dadd( -67.246, -259.317, 2.49169, 0.52 ) }
    dend_121 { pt3dadd( -67.27, -259.37, 2.47877, 0.52 ) }
    dend_121 { pt3dadd( -67.5504, -260.107, 2.38113, 0.52 ) }
    dend_121 { pt3dadd( -67.8207, -260.941, 2.33849, 0.52 ) }
    dend_121 { pt3dadd( -68.2064, -262.29, 2.46407, 0.52 ) }
    dend_121 { pt3dadd( -68.429, -263.15, 2.65489, 0.52 ) }
    dend_121 { pt3dadd( -68.7585, -264.418, 3.00265, 0.66 ) }
    dend_121 { pt3dadd( -68.9463, -265.077, 3.19107, 1.03 ) }
    dend_121 { pt3dadd( -69.1064, -265.595, 3.34966, 1.25 ) }
    dend_121 { pt3dadd( -69.5997, -267.033, 3.81757, 0.74 ) }
    dend_121 { pt3dadd( -69.8912, -267.745, 4.05776, 0.66 ) }
    dend_121 { pt3dadd( -70.4527, -268.879, 4.28963, 0.66 ) }
    dend_121 { pt3dadd( -70.7298, -269.319, 4.3122, 0.96 ) }
    dend_121 { pt3dadd( -70.7778, -269.382, 4.30652, 0.96 ) }
    dend_121 { pt3dadd( -71.0915, -269.699, 4.21705, 0.96 ) }
    dend_121 { pt3dadd( -71.4729, -270.011, 4.04103, 0.74 ) }
    dend_121 { pt3dadd( -72.4896, -270.771, 3.53362, 0.44 ) }
    dend_121 { pt3dadd( -73.0615, -271.237, 3.24861, 0.44 ) }
    dend_121 { pt3dadd( -73.0985, -271.29, 3.22199, 0.44 ) }
    dend_121 { pt3dadd( -73.3048, -271.72, 3.04149, 0.44 ) }
    dend_121 { pt3dadd( -73.4802, -272.188, 2.94646, 0.44 ) }
    dend_121 { pt3dadd( -73.7102, -272.924, 2.90676, 0.44 ) }
    dend_121 { pt3dadd( -74.0424, -273.947, 3.07414, 0.44 ) }
    dend_121 { pt3dadd( -74.4661, -275.101, 3.37865, 0.44 ) }
    dend_121 { pt3dadd( -74.7094, -275.63, 3.58851, 0.44 ) }
    dend_121 { pt3dadd( -75.3944, -276.91, 4.23264, 0.44 ) }
    dend_121 { pt3dadd( -75.4334, -276.969, 4.26991, 0.44 ) }
    dend_121 { pt3dadd( -76.0376, -277.739, 4.86736, 0.37 ) }
    dend_121 { pt3dadd( -76.3337, -278.08, 5.1997, 0.37 ) }
    dend_121 { pt3dadd( -76.7512, -278.595, 5.739, 0.37 ) }
    dend_121 { pt3dadd( -76.8675, -278.785, 5.90971, 0.96 ) }
    dend_121 { pt3dadd( -77.0736, -279.242, 6.20803, 1.33 ) }
    dend_121 { pt3dadd( -77.2084, -279.591, 6.41346, 1.33 ) }
    dend_121 { pt3dadd( -77.4361, -280.276, 6.76064, 1.18 ) }
    dend_121 { pt3dadd( -77.6232, -280.799, 7.02493, 0.59 ) }
    dend_121 { pt3dadd( -77.8485, -281.377, 7.30287, 0.44 ) }
    dend_121 { pt3dadd( -78.13, -281.981, 7.61156, 0.44 ) }
    dend_121 { pt3dadd( -78.4203, -282.515, 7.89816, 0.44 ) }
    dend_121 { pt3dadd( -78.5379, -282.722, 7.99624, 0.44 ) }
    dend_121 { pt3dadd( -78.7904, -283.154, 8.15465, 0.44 ) }
    dend_121 { pt3dadd( -78.8302, -283.241, 8.17766, 0.44 ) }
    dend_121 { pt3dadd( -78.9251, -283.523, 8.22678, 0.44 ) }
    dend_121 { pt3dadd( -79.0561, -284.134, 8.27747, 0.37 ) }
    dend_121 { pt3dadd( -79.1663, -284.985, 8.2873, 0.37 ) }
    dend_121 { pt3dadd( -79.1738, -285.065, 8.28646, 0.37 ) }
    dend_121 { pt3dadd( -79.2858, -286.53, 8.24948, 0.37 ) }
    dend_121 { pt3dadd( -79.2956, -286.64, 8.24492, 0.37 ) }
    dend_121 { pt3dadd( -79.3555, -287.218, 8.21128, 0.37 ) }
    dend_121 { pt3dadd( -79.4254, -287.729, 8.16706, 1.03 ) }
    dend_121 { pt3dadd( -79.5761, -288.492, 8.0465, 1.25 ) }
    dend_121 { pt3dadd( -79.7142, -289.033, 7.93238, 1.55 ) }
    dend_121 { pt3dadd( -79.7962, -289.281, 7.8674, 1.55 ) }
    dend_121 { pt3dadd( -79.9139, -289.615, 7.7756, 1.55 ) }
    dend_121 { pt3dadd( -80.0811, -290.004, 7.6669, 1.4 ) }
    dend_121 { pt3dadd( -80.5725, -290.955, 7.38599, 0.37 ) }
    dend_121 { pt3dadd( -80.8613, -291.448, 7.23878, 0.37 ) }
    dend_121 { pt3dadd( -81.1728, -291.923, 7.11361, 0.37 ) }
    dend_121 { pt3dadd( -81.2174, -291.987, 7.09965, 0.37 ) }
    dend_121 { pt3dadd( -81.6943, -292.635, 6.99459, 0.37 ) }
    dend_121 { pt3dadd( -82.0467, -293.139, 6.93009, 0.74 ) }
    dend_121 { pt3dadd( -82.1995, -293.415, 6.91114, 0.96 ) }
    dend_121 { pt3dadd( -82.4306, -294.025, 6.83502, 0.96 ) }
    dend_121 { pt3dadd( -82.4548, -294.159, 6.81252, 0.96 ) }
    dend_121 { pt3dadd( -82.4779, -294.586, 6.73031, 0.96 ) }
    dend_121 { pt3dadd( -82.4641, -295.503, 6.54208, 0.52 ) }
    dend_121 { pt3dadd( -82.476, -296.3, 6.3852, 0.52 ) }
    dend_121 { pt3dadd( -82.5119, -296.72, 6.30575, 0.52 ) }
    dend_121 { pt3dadd( -82.6569, -297.398, 6.21227, 0.52 ) }
    dend_121 { pt3dadd( -82.8293, -297.866, 6.17555, 0.88 ) }
    dend_121 { pt3dadd( -83.2373, -298.588, 6.16531, 1.18 ) }
    dend_121 { pt3dadd( -83.7598, -299.287, 6.1981, 1.62 ) }
    dend_121 { pt3dadd( -84.0519, -299.62, 6.20232, 1.62 ) }
    dend_121 { pt3dadd( -84.753, -300.349, 6.19345, 0.81 ) }
    dend_121 { pt3dadd( -85.106, -300.689, 6.17506, 0.59 ) }
    dend_121 { pt3dadd( -85.7432, -301.282, 6.11982, 0.59 ) }
    dend_121 { pt3dadd( -85.8159, -301.348, 6.11122, 0.59 ) }
    dend_121 { pt3dadd( -86.4698, -301.94, 6.00419, 0.59 ) }
    dend_121 { pt3dadd( -86.9475, -302.39, 5.89546, 1.69 ) }
    dend_121 { pt3dadd( -87.3545, -302.762, 5.75511, 1.99 ) }
    dend_121 { pt3dadd( -87.9821, -303.319, 5.52013, 1.99 ) }
    // Section: dend_113, id: dend_113, parent: dend_103 (entry count 85/100)
    dend_113 { pt3dclear() }
    dend_113 { pt3dadd( -30.2514, -334.852, 2.82881, 0.74 ) }
    dend_113 { pt3dadd( -31.2485, -335.55, 2.86162, 0.74 ) }
    dend_113 { pt3dadd( -32.3135, -336.354, 2.67143, 0.74 ) }
    dend_113 { pt3dadd( -32.98, -336.86, 2.49249, 0.66 ) }
    dend_113 { pt3dadd( -33.2614, -337.074, 2.40386, 0.66 ) }
    dend_113 { pt3dadd( -33.8285, -337.499, 2.21171, 0.22 ) }
    dend_113 { pt3dadd( -34.6245, -338.074, 1.93527, 0.22 ) }
    dend_113 { pt3dadd( -35.757, -338.757, 1.57603, 0.22 ) }
    dend_113 { pt3dadd( -35.839, -338.804, 1.53655, 0.22 ) }
    dend_113 { pt3dadd( -36.0052, -338.878, 1.44946, 0.81 ) }
    dend_113 { pt3dadd( -36.1377, -338.915, 1.38901, 0.81 ) }
    dend_113 { pt3dadd( -36.4192, -338.924, 1.30384, 0.81 ) }
    dend_113 { pt3dadd( -36.7756, -338.882, 1.22461, 0.96 ) }
    dend_113 { pt3dadd( -37.3748, -338.813, 1.14895, 0.44 ) }
    dend_113 { pt3dadd( -38.1777, -338.756, 1.0369, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_113 { pt3dadd( -38.2479, -338.752, 1.02916, 0.44 ) }
    dend_113 { pt3dadd( -39.2377, -338.708, 0.992381, 0.44 ) }
    dend_113 { pt3dadd( -39.7028, -338.695, 0.998964, 0.81 ) }
    dend_113 { pt3dadd( -40.3958, -338.687, 1.04617, 1.03 ) }
    dend_113 { pt3dadd( -40.8194, -338.673, 1.09911, 1.03 ) }
    dend_113 { pt3dadd( -42.2793, -338.578, 1.34213, 0.52 ) }
    dend_113 { pt3dadd( -43.0758, -338.49, 1.49327, 0.52 ) }
    dend_113 { pt3dadd( -43.1846, -338.476, 1.53015, 0.52 ) }
    dend_113 { pt3dadd( -43.8156, -338.37, 1.79646, 0.52 ) }
    dend_113 { pt3dadd( -44.1933, -338.293, 1.97544, 1.18 ) }
    dend_113 { pt3dadd( -44.7789, -338.171, 2.3266, 1.62 ) }
    dend_113 { pt3dadd( -45.4294, -338.039, 2.78812, 1.62 ) }
    dend_113 { pt3dadd( -46.9901, -337.845, 3.89647, 0.29 ) }
    dend_113 { pt3dadd( -47.5987, -337.838, 4.3212, 0.29 ) }
    dend_113 { pt3dadd( -47.7241, -337.846, 4.40548, 0.29 ) }
    dend_113 { pt3dadd( -49.0129, -338.024, 5.21159, 0.29 ) }
    dend_113 { pt3dadd( -49.083, -338.038, 5.25247, 0.29 ) }
    dend_113 { pt3dadd( -50.2404, -338.321, 5.80724, 0.29 ) }
    dend_113 { pt3dadd( -51.1005, -338.555, 6.05906, 0.29 ) }
    dend_113 { pt3dadd( -51.9026, -338.777, 6.23669, 0.29 ) }
    dend_113 { pt3dadd( -52.2905, -338.88, 6.2587, 0.44 ) }
    dend_113 { pt3dadd( -52.4357, -338.918, 6.24072, 0.44 ) }
    dend_113 { pt3dadd( -53.0406, -339.06, 6.13208, 0.44 ) }
    dend_113 { pt3dadd( -53.3421, -339.12, 6.05971, 0.44 ) }
    dend_113 { pt3dadd( -53.9938, -339.276, 5.89412, 0.44 ) }
    dend_113 { pt3dadd( -55.011, -339.604, 5.62344, 0.81 ) }
    dend_113 { pt3dadd( -55.5371, -339.782, 5.48277, 0.81 ) }
    dend_113 { pt3dadd( -55.5951, -339.804, 5.46964, 0.81 ) }
    dend_113 { pt3dadd( -56.4875, -340.138, 5.29551, 0.81 ) }
    dend_113 { pt3dadd( -57.1122, -340.352, 5.20852, 0.29 ) }
    dend_113 { pt3dadd( -57.7626, -340.56, 5.15225, 0.29 ) }
    dend_113 { pt3dadd( -57.8988, -340.597, 5.1487, 0.29 ) }
    dend_113 { pt3dadd( -59.3422, -340.941, 5.11152, 0.29 ) }
    dend_113 { pt3dadd( -59.4813, -340.974, 5.10819, 0.29 ) }
    dend_113 { pt3dadd( -60.7383, -341.256, 5.07975, 0.29 ) }
    dend_113 { pt3dadd( -60.8663, -341.286, 5.07731, 0.29 ) }
    dend_113 { pt3dadd( -61.5842, -341.465, 5.07731, 0.29 ) }
    dend_113 { pt3dadd( -61.6539, -341.485, 5.07987, 0.29 ) }
    dend_113 { pt3dadd( -62.4783, -341.762, 5.14766, 0.29 ) }
    dend_113 { pt3dadd( -62.5435, -341.788, 5.15577, 0.29 ) }
    dend_113 { pt3dadd( -62.9204, -341.961, 5.22304, 0.52 ) }
    dend_113 { pt3dadd( -63.3365, -342.152, 5.30735, 0.52 ) }
    dend_113 { pt3dadd( -63.9504, -342.419, 5.44508, 0.29 ) }
    dend_113 { pt3dadd( -64.0903, -342.471, 5.47709, 0.29 ) }
    dend_113 { pt3dadd( -64.8065, -342.658, 5.63928, 0.29 ) }
    dend_113 { pt3dadd( -65.1386, -342.715, 5.70485, 0.74 ) }
    dend_113 { pt3dadd( -65.2103, -342.72, 5.71673, 0.74 ) }
    dend_113 { pt3dadd( -65.5801, -342.694, 5.7606, 0.74 ) }
    dend_113 { pt3dadd( -65.6587, -342.677, 5.75642, 0.74 ) }
    dend_113 { pt3dadd( -66.1268, -342.526, 5.6846, 0.74 ) }
    dend_113 { pt3dadd( -66.4867, -342.378, 5.60718, 0.74 ) }
    dend_113 { pt3dadd( -66.5818, -342.338, 5.57624, 0.74 ) }
    dend_113 { pt3dadd( -66.9615, -342.196, 5.43468, 0.52 ) }
    dend_113 { pt3dadd( -67.7531, -341.959, 5.12649, 0.37 ) }
    dend_113 { pt3dadd( -68.2279, -341.859, 4.94671, 0.37 ) }
    dend_113 { pt3dadd( -69.2658, -341.72, 4.55988, 0.37 ) }
    dend_113 { pt3dadd( -70.0292, -341.702, 4.3048, 1.11 ) }
    dend_113 { pt3dadd( -70.4636, -341.757, 4.16389, 1.11 ) }
    dend_113 { pt3dadd( -71.0863, -341.911, 3.9714, 0.59 ) }
    dend_113 { pt3dadd( -71.6195, -342.099, 3.82688, 0.29 ) }
    dend_113 { pt3dadd( -71.7591, -342.16, 3.78762, 0.29 ) }
    dend_113 { pt3dadd( -72.4941, -342.527, 3.60243, 0.29 ) }
    dend_113 { pt3dadd( -73.6595, -343.094, 3.37221, 0.29 ) }
    dend_113 { pt3dadd( -73.7287, -343.126, 3.34843, 0.29 ) }
    dend_113 { pt3dadd( -73.9068, -343.198, 3.27061, 0.96 ) }
    dend_113 { pt3dadd( -73.9691, -343.221, 3.24086, 0.96 ) }
    dend_113 { pt3dadd( -74.9885, -343.558, 2.79005, 0.96 ) }
    dend_113 { pt3dadd( -75.0614, -343.578, 2.76238, 0.96 ) }
    dend_113 { pt3dadd( -76.7017, -343.961, 2.2485, 0.29 ) }
    dend_113 { pt3dadd( -77.7411, -344.199, 1.95099, 0.29 ) }
    dend_113 { pt3dadd( -78.5661, -344.38, 1.73316, 0.29 ) }
    dend_113 { pt3dadd( -79.2424, -344.526, 1.57716, 0.44 ) }
    dend_113 { pt3dadd( -80.165, -344.698, 1.28909, 0.44 ) }
    dend_113 { pt3dadd( -80.2311, -344.708, 1.26648, 0.44 ) }
    dend_113 { pt3dadd( -81.2028, -344.913, 1.0175, 0.44 ) }
    dend_113 { pt3dadd( -81.332, -344.947, 0.966833, 0.44 ) }
    dend_113 { pt3dadd( -82.3844, -345.265, 0.458148, 0.44 ) }
    dend_113 { pt3dadd( -84.1266, -345.845, -0.46317, 0.44 ) }
    dend_113 { pt3dadd( -84.1854, -345.867, -0.495607, 0.44 ) }
    dend_113 { pt3dadd( -85.8358, -346.474, -1.4345, 0.44 ) }
    dend_113 { pt3dadd( -87.3336, -347.048, -2.38518, 0.44 ) }
    dend_113 { pt3dadd( -87.3896, -347.07, -2.42197, 0.44 ) }
    dend_113 { pt3dadd( -88.1887, -347.399, -2.96217, 0.44 ) }
    dend_113 { pt3dadd( -88.8714, -347.688, -3.38693, 0.44 ) }
    dend_113 { pt3dadd( -89.9877, -348.132, -4.12085, 0.29 ) }
    dend_113 { pt3dadd( -90.7756, -348.435, -4.82382, 1.25 ) }
    dend_113 { pt3dadd( -91.2085, -348.63, -5.24323, 1.47 ) }
    dend_113 { pt3dadd( -91.2546, -348.654, -5.29115, 1.47 ) }
    dend_113 { pt3dadd( -91.7278, -348.924, -5.86062, 1.47 ) }
    dend_113 { pt3dadd( -91.7736, -348.953, -5.91934, 1.47 ) }
    dend_113 { pt3dadd( -93.3233, -349.933, -7.84283, 0.29 ) }
    dend_113 { pt3dadd( -93.4098, -349.984, -7.94188, 0.29 ) }
    dend_113 { pt3dadd( -94.2441, -350.423, -8.77343, 0.29 ) }
    dend_113 { pt3dadd( -94.7648, -350.673, -9.28085, 0.81 ) }
    dend_113 { pt3dadd( -94.8136, -350.694, -9.32692, 0.81 ) }
    dend_113 { pt3dadd( -95.3792, -350.934, -9.78234, 0.81 ) }
    dend_113 { pt3dadd( -95.6285, -351.027, -9.9476, 0.81 ) }
    dend_113 { pt3dadd( -96.5854, -351.377, -10.6548, 0.81 ) }
    dend_113 { pt3dadd( -97.9812, -351.848, -11.7829, 0.59 ) }
    dend_113 { pt3dadd( -98.0616, -351.873, -11.8506, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_113 { pt3dadd( -98.4573, -351.976, -12.2526, 0.59 ) }
    dend_113 { pt3dadd( -99.068, -352.086, -12.9869, 0.22 ) }
    dend_113 { pt3dadd( -99.1112, -352.089, -13.0419, 0.22 ) }
    dend_113 { pt3dadd( -99.3282, -352.064, -13.3465, 0.22 ) }
    dend_113 { pt3dadd( -99.7321, -351.968, -13.8465, 0.74 ) }
    dend_113 { pt3dadd( -100.431, -351.815, -14.6401, 0.74 ) }
    dend_113 { pt3dadd( -100.637, -351.771, -14.86, 0.74 ) }
    dend_113 { pt3dadd( -100.972, -351.739, -15.1334, 0.74 ) }
    dend_113 { pt3dadd( -101.765, -351.715, -15.6753, 0.22 ) }
    dend_113 { pt3dadd( -101.828, -351.717, -15.709, 0.22 ) }
    dend_113 { pt3dadd( -102.794, -351.89, -16.0256, 0.22 ) }
    dend_113 { pt3dadd( -102.881, -351.915, -16.0432, 0.22 ) }
    dend_113 { pt3dadd( -103.86, -352.272, -16.1893, 0.22 ) }
    dend_113 { pt3dadd( -103.926, -352.3, -16.1958, 0.22 ) }
    dend_113 { pt3dadd( -104.13, -352.386, -16.2026, 0.66 ) }
    dend_113 { pt3dadd( -105.325, -352.88, -16.2436, 0.29 ) }
    dend_113 { pt3dadd( -105.487, -352.937, -16.249, 0.29 ) }
    dend_113 { pt3dadd( -106.399, -353.222, -16.2762, 0.29 ) }
    dend_113 { pt3dadd( -106.547, -353.26, -16.28, 0.29 ) }
    dend_113 { pt3dadd( -107.434, -353.428, -16.2972, 0.29 ) }
    dend_113 { pt3dadd( -107.504, -353.437, -16.298, 0.29 ) }
    dend_113 { pt3dadd( -108.527, -353.464, -16.298, 0.29 ) }
    dend_113 { pt3dadd( -108.643, -353.463, -16.298, 0.29 ) }
    dend_113 { pt3dadd( -109.144, -353.447, -16.4053, 0.81 ) }
    dend_113 { pt3dadd( -109.623, -353.483, -16.6045, 1.03 ) }
    dend_113 { pt3dadd( -109.795, -353.511, -16.7227, 1.03 ) }
    dend_113 { pt3dadd( -110.069, -353.573, -16.9395, 1.03 ) }
    dend_113 { pt3dadd( -110.121, -353.587, -16.9842, 1.03 ) }
    dend_113 { pt3dadd( -111.807, -354.104, -18.3601, 0.44 ) }
    dend_113 { pt3dadd( -112.638, -354.386, -19.026, 0.44 ) }
    dend_113 { pt3dadd( -113.318, -354.619, -19.5456, 1.11 ) }
    dend_113 { pt3dadd( -113.814, -354.788, -19.899, 0.81 ) }
    dend_113 { pt3dadd( -114.188, -354.917, -20.1465, 1.11 ) }
    dend_113 { pt3dadd( -114.963, -355.115, -20.5446, 1.69 ) }
    dend_113 { pt3dadd( -115.025, -355.128, -20.5749, 1.69 ) }
    dend_113 { pt3dadd( -115.268, -355.184, -20.7313, 1.69 ) }
    dend_113 { pt3dadd( -115.323, -355.201, -20.7725, 1.69 ) }
    dend_113 { pt3dadd( -116.071, -355.541, -21.4301, 1.4 ) }
    dend_113 { pt3dadd( -116.915, -356.174, -22.1079, 1.11 ) }
    dend_113 { pt3dadd( -118.167, -357.314, -23.042, 1.25 ) }
    dend_113 { pt3dadd( -118.589, -357.742, -23.3286, 0.29 ) }
    dend_113 { pt3dadd( -118.64, -357.798, -23.3589, 0.29 ) }
    dend_113 { pt3dadd( -119.439, -358.654, -23.7138, 0.29 ) }
    dend_113 { pt3dadd( -121.054, -360.405, -24.196, 0.29 ) }
    dend_113 { pt3dadd( -121.166, -360.525, -24.2182, 0.66 ) }
    dend_113 { pt3dadd( -121.278, -360.624, -24.2239, 0.66 ) }
    dend_113 { pt3dadd( -121.689, -360.94, -24.2423, 0.66 ) }
    dend_113 { pt3dadd( -122.891, -361.758, -24.1737, 0.22 ) }
    dend_113 { pt3dadd( -123.112, -361.895, -24.111, 0.37 ) }
    dend_113 { pt3dadd( -123.232, -361.965, -24.0542, 0.37 ) }
    dend_113 { pt3dadd( -124.649, -362.813, -23.2942, 0.22 ) }
    dend_113 { pt3dadd( -124.705, -362.845, -23.2626, 0.22 ) }
    dend_113 { pt3dadd( -125.958, -363.58, -22.5078, 0.52 ) }
    dend_113 { pt3dadd( -127.403, -364.445, -21.5838, 0.22 ) }
    dend_113 { pt3dadd( -128.555, -365.109, -20.8588, 0.22 ) }
    dend_113 { pt3dadd( -128.666, -365.169, -20.7926, 0.22 ) }
    dend_113 { pt3dadd( -129.469, -365.568, -20.3369, 0.22 ) }
    dend_113 { pt3dadd( -129.554, -365.606, -20.302, 0.22 ) }
    dend_113 { pt3dadd( -129.952, -365.753, -20.2387, 0.81 ) }
    dend_113 { pt3dadd( -130.031, -365.772, -20.2387, 0.81 ) }
    dend_113 { pt3dadd( -130.71, -365.932, -20.2387, 0.81 ) }
    dend_113 { pt3dadd( -130.777, -365.949, -20.2367, 0.81 ) }
    dend_113 { pt3dadd( -131.385, -366.121, -20.1996, 0.96 ) }
    dend_113 { pt3dadd( -131.452, -366.141, -20.1941, 0.96 ) }
    dend_113 { pt3dadd( -131.743, -366.236, -20.1644, 0.96 ) }
    dend_113 { pt3dadd( -131.82, -366.259, -20.1561, 0.96 ) }
    dend_113 { pt3dadd( -132.332, -366.42, -20.0953, 0.37 ) }
    dend_113 { pt3dadd( -132.441, -366.451, -20.0828, 0.37 ) }
    dend_113 { pt3dadd( -132.991, -366.595, -20.0223, 0.22 ) }
    dend_113 { pt3dadd( -133.06, -366.611, -20.0159, 0.22 ) }
    dend_113 { pt3dadd( -133.628, -366.736, -19.9446, 0.22 ) }
    dend_113 { pt3dadd( -133.793, -366.779, -19.9245, 0.52 ) }
    dend_113 { pt3dadd( -133.93, -366.816, -19.9088, 0.52 ) }
    dend_113 { pt3dadd( -134.211, -366.898, -19.8786, 0.52 ) }
    dend_113 { pt3dadd( -134.37, -366.947, -19.8617, 0.52 ) }
    dend_113 { pt3dadd( -135.197, -367.211, -19.7787, 0.29 ) }
    dend_113 { pt3dadd( -136.42, -367.63, -19.6593, 0.29 ) }
    dend_113 { pt3dadd( -136.488, -367.653, -19.6534, 0.29 ) }
    dend_113 { pt3dadd( -137.704, -368.071, -19.5624, 0.29 ) }
    dend_113 { pt3dadd( -137.847, -368.123, -19.5526, 0.29 ) }
    dend_113 { pt3dadd( -138.142, -368.233, -19.5362, 0.59 ) }
    dend_113 { pt3dadd( -138.219, -368.264, -19.5343, 0.59 ) }
    dend_113 { pt3dadd( -139.023, -368.611, -19.5049, 0.59 ) }
    dend_113 { pt3dadd( -139.164, -368.668, -19.4993, 0.59 ) }
    dend_113 { pt3dadd( -139.594, -368.816, -19.4816, 0.29 ) }
    dend_113 { pt3dadd( -139.664, -368.837, -19.479, 0.29 ) }
    dend_113 { pt3dadd( -140.363, -369.019, -19.4554, 0.29 ) }
    dend_113 { pt3dadd( -140.432, -369.033, -19.4534, 0.29 ) }
    dend_113 { pt3dadd( -141.472, -369.04, -19.4352, 0.22 ) }
    dend_113 { pt3dadd( -142.055, -368.979, -19.4301, 0.22 ) }
    dend_113 { pt3dadd( -142.134, -368.964, -19.4301, 0.22 ) }
    dend_113 { pt3dadd( -142.226, -368.941, -19.4301, 0.44 ) }
    dend_113 { pt3dadd( -142.471, -368.86, -19.4301, 0.22 ) }
    dend_113 { pt3dadd( -144.048, -368.266, -19.4301, 0.22 ) }
    dend_113 { pt3dadd( -144.113, -368.234, -19.4301, 0.22 ) }
    dend_113 { pt3dadd( -144.113, -368.234, -19.4301, 0.44 ) }
    // Section: dend_104, id: dend_104, parent: dend_103 (entry count 96/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( -30.2514, -334.852, 2.82881, 0.81 ) }
    dend_104 { pt3dadd( -29.9765, -335.364, 2.82214, 0.81 ) }
    dend_104 { pt3dadd( -29.9047, -335.494, 2.82052, 0.81 ) }
    dend_104 { pt3dadd( -29.6014, -336.035, 2.81462, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_104 { pt3dadd( -28.9026, -337.415, 2.80103, 0.59 ) }
    dend_104 { pt3dadd( -28.8481, -337.541, 2.79989, 0.59 ) }
    dend_104 { pt3dadd( -28.6444, -338.072, 2.79538, 0.37 ) }
    dend_104 { pt3dadd( -28.618, -338.174, 2.78876, 0.37 ) }
    dend_104 { pt3dadd( -28.5295, -339.036, 2.68656, 0.29 ) }
    dend_104 { pt3dadd( -28.6185, -339.537, 2.59333, 0.52 ) }
    dend_104 { pt3dadd( -28.8153, -339.988, 2.47707, 0.81 ) }
    dend_104 { pt3dadd( -28.8471, -340.047, 2.45651, 0.81 ) }
    dend_104 { pt3dadd( -29.3474, -340.821, 2.11902, 0.52 ) }
    dend_104 { pt3dadd( -29.6657, -341.284, 1.89036, 0.52 ) }
    dend_104 { pt3dadd( -30.0567, -341.809, 1.59256, 0.52 ) }
    dend_104 { pt3dadd( -30.1028, -341.879, 1.55193, 0.52 ) }
    dend_104 { pt3dadd( -30.4924, -342.534, 1.17501, 0.81 ) }
    dend_104 { pt3dadd( -30.5233, -342.597, 1.13421, 0.81 ) }
    dend_104 { pt3dadd( -30.5871, -342.831, 0.998764, 0.81 ) }
    dend_104 { pt3dadd( -30.6054, -342.95, 0.927678, 0.81 ) }
    dend_104 { pt3dadd( -30.6204, -343.21, 0.780196, 0.81 ) }
    dend_104 { pt3dadd( -30.6215, -343.274, 0.749712, 0.81 ) }
    dend_104 { pt3dadd( -30.612, -344.412, 0.351967, 0.29 ) }
    dend_104 { pt3dadd( -30.5975, -345.509, 0.0275374, 0.29 ) }
    dend_104 { pt3dadd( -30.5957, -345.575, 0.0102321, 0.29 ) }
    dend_104 { pt3dadd( -30.5718, -345.882, -0.0563944, 0.59 ) }
    dend_104 { pt3dadd( -30.4661, -346.5, -0.209281, 0.96 ) }
    dend_104 { pt3dadd( -30.2171, -347.293, -0.434681, 1.03 ) }
    dend_104 { pt3dadd( -30.0105, -347.754, -0.566583, 1.25 ) }
    dend_104 { pt3dadd( -29.9445, -347.891, -0.600458, 1.25 ) }
    dend_104 { pt3dadd( -29.6744, -348.444, -0.720921, 1.25 ) }
    dend_104 { pt3dadd( -29.0664, -349.737, -0.978245, 0.88 ) }
    dend_104 { pt3dadd( -28.5274, -350.921, -1.1982, 0.29 ) }
    dend_104 { pt3dadd( -28.2734, -351.566, -1.29938, 0.29 ) }
    dend_104 { pt3dadd( -27.9139, -352.849, -1.43687, 0.29 ) }
    dend_104 { pt3dadd( -27.9001, -352.945, -1.43961, 0.52 ) }
    dend_104 { pt3dadd( -27.9367, -353.447, -1.38943, 0.52 ) }
    dend_104 { pt3dadd( -28.0646, -353.983, -1.24565, 0.52 ) }
    dend_104 { pt3dadd( -28.2279, -354.497, -1.10456, 0.29 ) }
    dend_104 { pt3dadd( -28.2388, -354.557, -1.09589, 0.29 ) }
    dend_104 { pt3dadd( -28.2297, -355.14, -1.09589, 0.29 ) }
    dend_104 { pt3dadd( -28.224, -355.209, -1.09589, 0.29 ) }
    dend_104 { pt3dadd( -28.0955, -356.196, -1.03066, 0.29 ) }
    dend_104 { pt3dadd( -28.0581, -356.445, -1.00068, 0.74 ) }
    dend_104 { pt3dadd( -28.0185, -356.876, -0.925881, 0.81 ) }
    dend_104 { pt3dadd( -28.024, -356.975, -0.90645, 0.81 ) }
    dend_104 { pt3dadd( -28.0944, -357.347, -0.835075, 0.81 ) }
    dend_104 { pt3dadd( -28.2599, -358.054, -0.703623, 0.29 ) }
    dend_104 { pt3dadd( -28.2753, -358.12, -0.692979, 0.29 ) }
    dend_104 { pt3dadd( -28.3515, -358.545, -0.639106, 0.44 ) }
    dend_104 { pt3dadd( -28.493, -359.531, -0.538467, 0.44 ) }
    dend_104 { pt3dadd( -28.5958, -360.451, -0.466613, 0.44 ) }
    dend_104 { pt3dadd( -28.6025, -360.556, -0.46168, 0.44 ) }
    dend_104 { pt3dadd( -28.5968, -361.675, -0.451139, 0.44 ) }
    dend_104 { pt3dadd( -28.5759, -362.194, -0.445243, 0.44 ) }
    dend_104 { pt3dadd( -28.5687, -362.273, -0.441366, 0.44 ) }
    dend_104 { pt3dadd( -28.5335, -362.702, -0.404495, 0.81 ) }
    dend_104 { pt3dadd( -28.5001, -363.333, -0.332684, 0.81 ) }
    dend_104 { pt3dadd( -28.5614, -364.201, -0.223296, 0.37 ) }
    dend_104 { pt3dadd( -28.573, -364.261, -0.214899, 0.37 ) }
    dend_104 { pt3dadd( -28.8829, -365.237, -0.0824756, 0.29 ) }
    dend_104 { pt3dadd( -29.2943, -366.166, 0.102321, 0.29 ) }
    dend_104 { pt3dadd( -29.3304, -366.224, 0.116447, 0.29 ) }
    dend_104 { pt3dadd( -30.0887, -367.186, 0.381457, 0.29 ) }
    dend_104 { pt3dadd( -30.2521, -367.37, 0.434945, 1.03 ) }
    dend_104 { pt3dadd( -30.7737, -367.923, 0.597331, 1.4 ) }
    dend_104 { pt3dadd( -31.6634, -368.755, 0.846538, 1.4 ) }
    dend_104 { pt3dadd( -32.4325, -369.459, 1.10052, 1.4 ) }
    dend_104 { pt3dadd( -32.7793, -369.77, 1.22642, 1.4 ) }
    // Section: dend_100, id: dend_100, parent: dend_96 (entry count 65/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( -3.61062, -352.267, -20.7738, 0.88 ) }
    dend_100 { pt3dadd( -4.78242, -352.759, -22.6413, 0.88 ) }
    dend_100 { pt3dadd( -5.26281, -352.933, -23.1766, 0.88 ) }
    dend_100 { pt3dadd( -5.37203, -352.968, -23.2587, 0.88 ) }
    dend_100 { pt3dadd( -7.10334, -353.467, -24.2111, 0.29 ) }
    dend_100 { pt3dadd( -8.23242, -353.793, -24.8323, 0.29 ) }
    dend_100 { pt3dadd( -9.00253, -354.015, -25.2559, 0.74 ) }
    dend_100 { pt3dadd( -11.4295, -354.671, -25.8072, 0.15 ) }
    dend_100 { pt3dadd( -12.4604, -354.944, -25.9167, 0.15 ) }
    dend_100 { pt3dadd( -12.7334, -355.0, -25.8619, 0.37 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 75/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -3.61062, -352.267, -20.7738, 0.29 ) }
    dend_97 { pt3dadd( -3.51087, -352.435, -21.6031, 0.29 ) }
    dend_97 { pt3dadd( -3.50127, -352.452, -21.6805, 0.29 ) }
    dend_97 { pt3dadd( -2.79706, -353.882, -27.3802, 0.29 ) }
    dend_97 { pt3dadd( -2.78161, -353.911, -27.4809, 0.29 ) }
    dend_97 { pt3dadd( -2.70753, -354.048, -27.9052, 0.88 ) }
    dend_97 { pt3dadd( -2.6312, -354.198, -28.3147, 0.88 ) }
    dend_97 { pt3dadd( -2.6156, -354.24, -28.4123, 0.88 ) }
    dend_97 { pt3dadd( -2.40048, -354.986, -29.6294, 0.22 ) }
    dend_97 { pt3dadd( -2.26022, -355.8, -30.2166, 0.22 ) }
    dend_97 { pt3dadd( -2.20002, -356.209, -30.4977, 0.59 ) }
    dend_97 { pt3dadd( -2.12784, -356.87, -30.9148, 0.74 ) }
    dend_97 { pt3dadd( -2.04502, -357.775, -31.4929, 0.74 ) }
    dend_97 { pt3dadd( -1.99516, -358.763, -32.063, 1.03 ) }
    dend_97 { pt3dadd( -1.99076, -359.266, -32.3489, 1.03 ) }
    dend_97 { pt3dadd( -2.00692, -359.809, -32.6796, 1.25 ) }
    dend_97 { pt3dadd( -2.00744, -360.342, -33.0499, 0.74 ) }
    dend_97 { pt3dadd( -2.02824, -361.446, -33.8739, 0.29 ) }
    dend_97 { pt3dadd( -2.1239, -362.187, -34.4201, 0.29 ) }
    dend_97 { pt3dadd( -2.3095, -362.941, -34.9419, 0.81 ) }
    dend_97 { pt3dadd( -2.46179, -363.346, -35.2333, 0.81 ) }
    dend_97 { pt3dadd( -3.04535, -364.499, -36.0589, 0.29 ) }
    dend_97 { pt3dadd( -3.65351, -365.494, -36.7031, 0.29 ) }
    dend_97 { pt3dadd( -4.4638, -366.663, -37.29, 0.29 ) }
    dend_97 { pt3dadd( -4.50277, -366.715, -37.3153, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_97 { pt3dadd( -4.86833, -367.183, -37.5007, 0.29 ) }
    dend_97 { pt3dadd( -5.05296, -367.414, -37.6055, 1.11 ) }
    dend_97 { pt3dadd( -5.53929, -367.984, -37.8144, 1.33 ) }
    dend_97 { pt3dadd( -5.93777, -368.477, -37.9977, 1.33 ) }
    dend_97 { pt3dadd( -6.54072, -369.26, -38.2599, 0.29 ) }
    dend_97 { pt3dadd( -7.18823, -370.1, -38.5358, 0.29 ) }
    dend_97 { pt3dadd( -7.87577, -370.982, -38.8146, 1.18 ) }
    dend_97 { pt3dadd( -8.80431, -372.078, -39.166, 1.62 ) }
    dend_97 { pt3dadd( -9.39503, -372.686, -39.3541, 1.92 ) }
    dend_97 { pt3dadd( -9.87496, -373.131, -39.4493, 1.92 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 10/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -140.523, 224.06, -256.979, 0.88 ) }
    dend_79 { pt3dadd( -141.402, 225.455, -259.8, 0.88 ) }
    dend_79 { pt3dadd( -142.177, 226.803, -261.72, 0.88 ) }
    dend_79 { pt3dadd( -142.323, 227.065, -262.024, 1.55 ) }
    dend_79 { pt3dadd( -142.539, 227.457, -262.401, 1.77 ) }
    dend_79 { pt3dadd( -142.651, 227.664, -262.567, 1.77 ) }
    dend_79 { pt3dadd( -142.871, 228.087, -262.89, 0.22 ) }
    dend_79 { pt3dadd( -143.483, 229.559, -263.413, 0.22 ) }
    dend_79 { pt3dadd( -143.505, 229.622, -263.43, 0.22 ) }
    dend_79 { pt3dadd( -143.704, 230.233, -263.593, 0.88 ) }
    dend_79 { pt3dadd( -143.906, 230.881, -263.765, 0.88 ) }
    dend_79 { pt3dadd( -144.318, 232.234, -264.12, 0.22 ) }
    dend_79 { pt3dadd( -144.799, 233.839, -264.519, 0.22 ) }
    dend_79 { pt3dadd( -144.871, 234.078, -264.574, 0.22 ) }
    dend_79 { pt3dadd( -145.485, 235.81, -264.896, 0.22 ) }
    dend_79 { pt3dadd( -145.621, 236.144, -264.941, 0.22 ) }
    dend_79 { pt3dadd( -145.714, 236.34, -264.956, 0.66 ) }
    dend_79 { pt3dadd( -146.216, 237.276, -264.945, 0.66 ) }
    dend_79 { pt3dadd( -146.346, 237.491, -264.947, 0.22 ) }
    dend_79 { pt3dadd( -147.125, 238.81, -264.983, 0.22 ) }
    dend_79 { pt3dadd( -147.207, 238.945, -264.99, 0.66 ) }
    dend_79 { pt3dadd( -147.508, 239.448, -265.022, 0.88 ) }
    dend_79 { pt3dadd( -147.755, 239.888, -265.053, 0.88 ) }
    dend_79 { pt3dadd( -148.143, 240.618, -265.158, 0.22 ) }
    dend_79 { pt3dadd( -148.231, 240.799, -265.191, 0.22 ) }
    dend_79 { pt3dadd( -148.613, 241.678, -265.379, 0.22 ) }
    dend_79 { pt3dadd( -148.64, 241.742, -265.394, 0.22 ) }
    dend_79 { pt3dadd( -149.4, 243.476, -265.802, 0.22 ) }
    dend_79 { pt3dadd( -149.884, 244.527, -266.058, 1.11 ) }
    dend_79 { pt3dadd( -150.154, 245.12, -266.203, 1.92 ) }
    dend_79 { pt3dadd( -150.185, 245.192, -266.222, 1.92 ) }
    dend_79 { pt3dadd( -150.354, 245.647, -266.359, 1.92 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 42/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -140.523, 224.06, -256.979, 0.22 ) }
    dend_78 { pt3dadd( -138.448, 225.198, -260.064, 0.22 ) }
    dend_78 { pt3dadd( -137.865, 225.518, -260.932, 0.74 ) }
    dend_78 { pt3dadd( -137.594, 225.666, -261.334, 0.74 ) }
    // Section: dend_70, id: dend_70, parent: dend_64 (entry count 46/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -71.3428, 241.639, -51.9756, 0.52 ) }
    dend_70 { pt3dadd( -70.8822, 241.487, -51.5035, 0.52 ) }
    dend_70 { pt3dadd( -69.6217, 241.09, -50.1992, 0.52 ) }
    dend_70 { pt3dadd( -68.8821, 240.889, -49.4813, 0.52 ) }
    dend_70 { pt3dadd( -68.278, 240.74, -48.92, 0.81 ) }
    dend_70 { pt3dadd( -67.2662, 240.525, -47.9596, 0.81 ) }
    dend_70 { pt3dadd( -66.7394, 240.442, -47.5753, 0.81 ) }
    dend_70 { pt3dadd( -66.6776, 240.435, -47.5374, 0.81 ) }
    dend_70 { pt3dadd( -65.9955, 240.406, -47.2057, 0.37 ) }
    dend_70 { pt3dadd( -65.9201, 240.405, -47.1724, 0.37 ) }
    dend_70 { pt3dadd( -64.5304, 240.35, -46.61, 0.22 ) }
    dend_70 { pt3dadd( -61.7524, 240.173, -45.6052, 0.22 ) }
    dend_70 { pt3dadd( -61.4557, 240.137, -45.5094, 0.81 ) }
    dend_70 { pt3dadd( -61.3886, 240.126, -45.4898, 0.81 ) }
    dend_70 { pt3dadd( -61.1785, 240.084, -45.4399, 0.81 ) }
    dend_70 { pt3dadd( -59.9762, 239.807, -45.1548, 0.22 ) }
    dend_70 { pt3dadd( -59.9096, 239.789, -45.1402, 0.22 ) }
    dend_70 { pt3dadd( -57.008, 238.892, -44.4276, 0.22 ) }
    dend_70 { pt3dadd( -56.8164, 238.832, -44.3822, 0.22 ) }
    dend_70 { pt3dadd( -55.12, 238.313, -43.9996, 0.22 ) }
    dend_70 { pt3dadd( -54.1, 238.014, -43.7926, 0.74 ) }
    dend_70 { pt3dadd( -53.878, 237.951, -43.7596, 0.74 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -71.3428, 241.639, -51.9756, 0.29 ) }
    dend_65 { pt3dadd( -71.7287, 242.531, -52.0632, 0.29 ) }
    dend_65 { pt3dadd( -72.3241, 244.078, -52.1101, 0.29 ) }
    dend_65 { pt3dadd( -72.5334, 244.768, -52.108, 0.96 ) }
    dend_65 { pt3dadd( -72.6989, 245.37, -52.0994, 1.55 ) }
    dend_65 { pt3dadd( -72.8434, 245.912, -52.0887, 1.55 ) }
    dend_65 { pt3dadd( -73.1261, 246.975, -52.1124, 0.29 ) }
    dend_65 { pt3dadd( -73.4946, 248.458, -52.1845, 0.29 ) }
    dend_65 { pt3dadd( -73.9476, 250.443, -52.319, 0.29 ) }
    dend_65 { pt3dadd( -73.9624, 250.51, -52.3235, 0.29 ) }
    dend_65 { pt3dadd( -74.2889, 252.041, -52.4446, 0.29 ) }
    dend_65 { pt3dadd( -74.5297, 253.217, -52.5557, 0.44 ) }
    dend_65 { pt3dadd( -74.7149, 254.135, -52.6624, 0.44 ) }
    dend_65 { pt3dadd( -74.9019, 255.107, -52.8024, 0.44 ) }
    dend_65 { pt3dadd( -75.0415, 255.799, -52.8889, 0.88 ) }
    dend_65 { pt3dadd( -75.1096, 256.149, -52.9167, 1.55 ) }
    dend_65 { pt3dadd( -75.1869, 256.577, -52.9245, 1.92 ) }
    dend_65 { pt3dadd( -75.2917, 257.212, -52.8954, 2.06 ) }
    dend_65 { pt3dadd( -75.3635, 257.737, -52.8778, 2.06 ) }
    dend_65 { pt3dadd( -75.4744, 258.598, -52.863, 1.18 ) }
    dend_65 { pt3dadd( -75.5867, 259.495, -52.8838, 1.03 ) }
    dend_65 { pt3dadd( -75.6598, 260.123, -52.908, 0.88 ) }
    dend_65 { pt3dadd( -75.7351, 260.779, -52.9416, 0.74 ) }
    dend_65 { pt3dadd( -75.8033, 261.548, -52.9894, 0.59 ) }
    dend_65 { pt3dadd( -75.8297, 262.25, -53.0396, 0.59 ) }
    dend_65 { pt3dadd( -75.812, 263.262, -53.1197, 0.29 ) }
    dend_65 { pt3dadd( -75.8091, 263.332, -53.1253, 0.29 ) }
    dend_65 { pt3dadd( -75.7701, 264.219, -53.1907, 0.22 ) }
    dend_65 { pt3dadd( -75.7574, 264.663, -53.2191, 0.22 ) }
    dend_65 { pt3dadd( -75.7083, 265.787, -53.2742, 0.22 ) }
    dend_65 { pt3dadd( -75.69, 266.083, -53.2848, 0.22 ) }
    dend_65 { pt3dadd( -75.6165, 267.122, -53.2982, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_65 { pt3dadd( -75.5756, 267.696, -53.3055, 1.03 ) }
    dend_65 { pt3dadd( -75.5254, 268.417, -53.3142, 1.33 ) }
    dend_65 { pt3dadd( -75.4883, 269.283, -53.3222, 1.33 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 3/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -65.4772, 282.301, -48.1915, 0.29 ) }
    dend_63 { pt3dadd( -64.4648, 284.174, -49.8892, 0.29 ) }
    dend_63 { pt3dadd( -64.4319, 284.24, -49.9463, 0.29 ) }
    dend_63 { pt3dadd( -64.0574, 285.031, -50.5624, 0.29 ) }
    dend_63 { pt3dadd( -64.0387, 285.075, -50.5981, 0.29 ) }
    dend_63 { pt3dadd( -63.8273, 285.515, -50.9378, 0.66 ) }
    dend_63 { pt3dadd( -63.6197, 285.922, -51.2343, 0.66 ) }
    dend_63 { pt3dadd( -63.5905, 285.976, -51.2673, 0.66 ) }
    dend_63 { pt3dadd( -63.2158, 286.65, -51.6444, 0.96 ) }
    dend_63 { pt3dadd( -62.7615, 287.453, -52.0427, 0.15 ) }
    dend_63 { pt3dadd( -62.077, 288.546, -52.5725, 0.15 ) }
    dend_63 { pt3dadd( -61.9085, 288.78, -52.6907, 0.74 ) }
    dend_63 { pt3dadd( -61.8274, 288.882, -52.74, 0.74 ) }
    dend_63 { pt3dadd( -61.6496, 289.103, -52.8391, 0.74 ) }
    dend_63 { pt3dadd( -61.4707, 289.306, -52.9073, 0.74 ) }
    dend_63 { pt3dadd( -61.416, 289.364, -52.9073, 0.74 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 19/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -65.4772, 282.301, -48.1915, 0.44 ) }
    dend_62 { pt3dadd( -65.7031, 282.991, -48.1915, 0.44 ) }
    dend_62 { pt3dadd( -65.7355, 283.083, -48.1915, 0.44 ) }
    dend_62 { pt3dadd( -66.3004, 284.331, -48.1915, 0.44 ) }
    dend_62 { pt3dadd( -66.3327, 284.392, -48.1993, 0.44 ) }
    dend_62 { pt3dadd( -66.8796, 285.271, -48.3746, 0.44 ) }
    dend_62 { pt3dadd( -66.9383, 285.355, -48.3943, 0.44 ) }
    dend_62 { pt3dadd( -67.6746, 286.286, -48.6462, 0.44 ) }
    dend_62 { pt3dadd( -68.2636, 286.934, -48.8423, 0.44 ) }
    dend_62 { pt3dadd( -69.2071, 287.827, -49.1356, 0.44 ) }
    dend_62 { pt3dadd( -69.9312, 288.458, -49.4374, 0.81 ) }
    dend_62 { pt3dadd( -70.4086, 288.84, -49.6705, 0.96 ) }
    dend_62 { pt3dadd( -71.1325, 289.367, -49.9709, 0.96 ) }
    dend_62 { pt3dadd( -71.3527, 289.512, -50.0332, 0.96 ) }
    dend_62 { pt3dadd( -72.2602, 290.098, -50.1623, 0.96 ) }
    dend_62 { pt3dadd( -74.1386, 291.288, -50.0736, 0.96 ) }
    dend_62 { pt3dadd( -74.1897, 291.319, -50.0663, 0.96 ) }
    dend_62 { pt3dadd( -75.8019, 292.276, -49.6678, 0.22 ) }
    dend_62 { pt3dadd( -76.8596, 292.883, -49.2882, 0.22 ) }
    dend_62 { pt3dadd( -76.9247, 292.919, -49.2578, 0.22 ) }
    dend_62 { pt3dadd( -77.6922, 293.325, -48.7911, 0.22 ) }
    dend_62 { pt3dadd( -77.852, 293.407, -48.6618, 0.22 ) }
    dend_62 { pt3dadd( -78.2465, 293.601, -48.3376, 0.59 ) }
    dend_62 { pt3dadd( -78.4983, 293.73, -48.1813, 0.96 ) }
    dend_62 { pt3dadd( -78.5575, 293.757, -48.1499, 0.96 ) }
    dend_62 { pt3dadd( -79.1235, 294.039, -47.8404, 0.96 ) }
    dend_62 { pt3dadd( -80.2081, 294.591, -47.1977, 0.96 ) }
    dend_62 { pt3dadd( -81.3005, 295.318, -46.5907, 0.52 ) }
    dend_62 { pt3dadd( -82.4196, 296.247, -46.0227, 0.29 ) }
    dend_62 { pt3dadd( -82.4681, 296.297, -46.0048, 0.29 ) }
    dend_62 { pt3dadd( -82.8452, 296.822, -45.9378, 0.29 ) }
    dend_62 { pt3dadd( -82.9231, 296.963, -45.9417, 0.29 ) }
    dend_62 { pt3dadd( -83.3027, 297.782, -46.0522, 0.29 ) }
    dend_62 { pt3dadd( -83.3471, 297.89, -46.0656, 0.29 ) }
    dend_62 { pt3dadd( -83.643, 298.607, -46.0656, 0.29 ) }
    dend_62 { pt3dadd( -83.9959, 299.448, -46.0656, 0.29 ) }
    dend_62 { pt3dadd( -84.0536, 299.582, -46.0717, 0.66 ) }
    dend_62 { pt3dadd( -84.2143, 299.97, -46.1024, 0.81 ) }
    dend_62 { pt3dadd( -84.3981, 300.443, -46.1463, 0.81 ) }
    dend_62 { pt3dadd( -84.6528, 301.127, -46.218, 0.15 ) }
    dend_62 { pt3dadd( -84.9704, 302.047, -46.3354, 0.15 ) }
    dend_62 { pt3dadd( -85.191, 302.634, -46.4282, 0.59 ) }
    dend_62 { pt3dadd( -85.3507, 303.047, -46.5014, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_54 (entry count 62/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 200.112, 191.207, 46.4288, 0.88 ) }
    dend_57 { pt3dadd( 200.772, 190.798, 46.3964, 0.88 ) }
    dend_57 { pt3dadd( 201.52, 190.35, 46.3025, 0.59 ) }
    dend_57 { pt3dadd( 202.601, 189.74, 46.1267, 0.59 ) }
    dend_57 { pt3dadd( 203.233, 189.395, 46.0119, 0.29 ) }
    dend_57 { pt3dadd( 204.228, 188.871, 45.8221, 0.29 ) }
    dend_57 { pt3dadd( 204.289, 188.84, 45.81, 0.29 ) }
    dend_57 { pt3dadd( 205.24, 188.352, 45.6288, 0.29 ) }
    dend_57 { pt3dadd( 205.683, 188.125, 45.5472, 0.52 ) }
    dend_57 { pt3dadd( 205.754, 188.086, 45.5359, 0.52 ) }
    dend_57 { pt3dadd( 205.944, 187.996, 45.5188, 0.52 ) }
    dend_57 { pt3dadd( 206.009, 187.969, 45.5201, 0.52 ) }
    dend_57 { pt3dadd( 207.356, 187.496, 45.6569, 0.22 ) }
    dend_57 { pt3dadd( 207.498, 187.45, 45.6798, 0.22 ) }
    dend_57 { pt3dadd( 207.808, 187.378, 45.7234, 0.66 ) }
    dend_57 { pt3dadd( 208.496, 187.245, 45.77, 0.81 ) }
    dend_57 { pt3dadd( 209.155, 187.134, 45.7838, 0.15 ) }
    dend_57 { pt3dadd( 210.397, 186.915, 45.7544, 0.15 ) }
    dend_57 { pt3dadd( 210.652, 186.872, 45.7358, 0.44 ) }
    dend_57 { pt3dadd( 211.583, 186.687, 45.6494, 0.44 ) }
    dend_57 { pt3dadd( 212.742, 186.442, 45.5154, 0.15 ) }
    dend_57 { pt3dadd( 212.88, 186.411, 45.4956, 0.15 ) }
    dend_57 { pt3dadd( 213.674, 186.196, 45.3548, 0.15 ) }
    dend_57 { pt3dadd( 214.422, 185.919, 45.2617, 0.15 ) }
    dend_57 { pt3dadd( 214.775, 185.782, 45.2474, 0.37 ) }
    dend_57 { pt3dadd( 214.966, 185.709, 45.2669, 0.37 ) }
    dend_57 { pt3dadd( 215.337, 185.585, 45.3446, 0.37 ) }
    dend_57 { pt3dadd( 215.405, 185.564, 45.3611, 0.37 ) }
    dend_57 { pt3dadd( 216.443, 185.238, 45.6527, 0.22 ) }
    dend_57 { pt3dadd( 217.591, 184.842, 46.0091, 0.22 ) }
    dend_57 { pt3dadd( 218.55, 184.494, 46.4074, 0.37 ) }
    dend_57 { pt3dadd( 219.017, 184.357, 46.6227, 0.66 ) }
    dend_57 { pt3dadd( 219.099, 184.339, 46.6641, 0.66 ) }
    dend_57 { pt3dadd( 219.398, 184.32, 46.8167, 0.66 ) }
    dend_57 { pt3dadd( 219.46, 184.331, 46.8484, 0.66 ) }
    dend_57 { pt3dadd( 220.942, 184.964, 47.5754, 0.22 ) }
    dend_57 { pt3dadd( 221.936, 185.574, 47.9879, 0.22 ) }
    dend_57 { pt3dadd( 221.987, 185.618, 48.0122, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_57 { pt3dadd( 222.808, 186.48, 48.3913, 0.22 ) }
    dend_57 { pt3dadd( 223.104, 186.889, 48.527, 0.96 ) }
    dend_57 { pt3dadd( 223.42, 187.443, 48.6647, 0.96 ) }
    dend_57 { pt3dadd( 223.538, 187.71, 48.7068, 0.96 ) }
    dend_57 { pt3dadd( 224.144, 189.379, 49.0074, 0.22 ) }
    dend_57 { pt3dadd( 224.297, 189.844, 49.0994, 0.59 ) }
    dend_57 { pt3dadd( 224.509, 190.687, 49.3003, 0.15 ) }
    dend_57 { pt3dadd( 224.524, 190.763, 49.3201, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 200.112, 191.207, 46.4288, 0.52 ) }
    dend_56 { pt3dadd( 200.899, 191.419, 46.2245, 0.52 ) }
    dend_56 { pt3dadd( 201.992, 191.715, 46.0026, 0.52 ) }
    dend_56 { pt3dadd( 202.929, 191.952, 45.8635, 0.52 ) }
    dend_56 { pt3dadd( 202.997, 191.969, 45.8595, 0.52 ) }
    dend_56 { pt3dadd( 203.829, 192.101, 45.8585, 0.66 ) }
    dend_56 { pt3dadd( 203.888, 192.107, 45.8602, 0.66 ) }
    dend_56 { pt3dadd( 205.226, 192.141, 46.0423, 0.66 ) }
    dend_56 { pt3dadd( 206.498, 192.105, 46.3236, 0.22 ) }
    dend_56 { pt3dadd( 207.372, 192.047, 46.5761, 0.44 ) }
    dend_56 { pt3dadd( 208.809, 191.917, 47.0328, 0.44 ) }
    dend_56 { pt3dadd( 209.292, 191.881, 47.2119, 0.44 ) }
    dend_56 { pt3dadd( 210.272, 191.852, 47.6136, 0.81 ) }
    dend_56 { pt3dadd( 210.489, 191.853, 47.7162, 1.11 ) }
    dend_56 { pt3dadd( 210.699, 191.858, 47.8163, 1.11 ) }
    dend_56 { pt3dadd( 210.829, 191.865, 47.8723, 1.11 ) }
    dend_56 { pt3dadd( 212.737, 192.065, 48.6762, 0.22 ) }
    dend_56 { pt3dadd( 213.299, 192.12, 48.8952, 0.22 ) }
    dend_56 { pt3dadd( 214.968, 192.275, 49.3967, 0.22 ) }
    dend_56 { pt3dadd( 215.787, 192.341, 49.596, 0.22 ) }
    dend_56 { pt3dadd( 216.076, 192.36, 49.6509, 0.22 ) }
    dend_56 { pt3dadd( 216.761, 192.384, 49.7323, 0.22 ) }
    dend_56 { pt3dadd( 216.864, 192.383, 49.7297, 0.22 ) }
    dend_56 { pt3dadd( 217.811, 192.45, 49.6369, 1.03 ) }
    dend_56 { pt3dadd( 218.468, 192.579, 49.5207, 1.25 ) }
    dend_56 { pt3dadd( 218.536, 192.596, 49.5107, 1.25 ) }
    dend_56 { pt3dadd( 218.77, 192.651, 49.4842, 1.33 ) }
    dend_56 { pt3dadd( 219.58, 192.849, 49.4197, 0.59 ) }
    dend_56 { pt3dadd( 221.213, 193.248, 49.3458, 0.44 ) }
    dend_56 { pt3dadd( 221.282, 193.265, 49.3458, 0.44 ) }
    dend_56 { pt3dadd( 222.2, 193.473, 49.2124, 0.44 ) }
    dend_56 { pt3dadd( 222.844, 193.619, 49.1552, 0.44 ) }
    dend_56 { pt3dadd( 223.301, 193.726, 49.1297, 0.81 ) }
    dend_56 { pt3dadd( 223.38, 193.747, 49.1276, 0.81 ) }
    dend_56 { pt3dadd( 223.801, 193.872, 49.1286, 0.81 ) }
    dend_56 { pt3dadd( 226.182, 194.668, 49.1994, 1.03 ) }
    dend_56 { pt3dadd( 228.548, 195.481, 49.3281, 0.66 ) }
    dend_56 { pt3dadd( 229.058, 195.646, 49.3656, 0.22 ) }
    dend_56 { pt3dadd( 229.898, 195.902, 49.443, 0.22 ) }
    dend_56 { pt3dadd( 229.968, 195.919, 49.4551, 0.22 ) }
    dend_56 { pt3dadd( 230.852, 196.1, 49.7664, 0.22 ) }
    dend_56 { pt3dadd( 231.809, 196.24, 50.2967, 0.81 ) }
    dend_56 { pt3dadd( 232.008, 196.247, 50.3986, 1.25 ) }
    dend_56 { pt3dadd( 232.127, 196.243, 50.4744, 1.25 ) }
    dend_56 { pt3dadd( 233.73, 196.066, 51.3401, 0.22 ) }
    dend_56 { pt3dadd( 234.999, 195.882, 51.8779, 0.96 ) }
    dend_56 { pt3dadd( 235.146, 195.854, 51.9129, 0.96 ) }
    dend_56 { pt3dadd( 235.724, 195.727, 51.6072, 0.96 ) }
    dend_56 { pt3dadd( 235.758, 195.721, 51.5575, 0.96 ) }
    dend_56 { pt3dadd( 237.458, 195.271, 48.7212, 0.22 ) }
    dend_56 { pt3dadd( 237.493, 195.263, 48.6611, 0.22 ) }
    dend_56 { pt3dadd( 237.607, 195.234, 48.4615, 0.66 ) }
    dend_56 { pt3dadd( 237.683, 195.216, 48.3327, 0.66 ) }
    dend_56 { pt3dadd( 239.074, 195.001, 45.9653, 0.66 ) }
    dend_56 { pt3dadd( 239.669, 194.935, 44.9835, 0.22 ) }
    dend_56 { pt3dadd( 240.593, 194.9, 43.6053, 0.81 ) }
    dend_56 { pt3dadd( 240.657, 194.901, 43.5108, 0.81 ) }
    dend_56 { pt3dadd( 240.871, 194.912, 43.2054, 0.81 ) }
    dend_56 { pt3dadd( 241.803, 195.001, 41.9273, 0.22 ) }
    dend_56 { pt3dadd( 242.659, 195.166, 40.9136, 0.22 ) }
    dend_56 { pt3dadd( 242.998, 195.287, 40.4671, 0.22 ) }
    dend_56 { pt3dadd( 243.077, 195.318, 40.352, 0.22 ) }
    dend_56 { pt3dadd( 243.329, 195.427, 39.968, 1.11 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 71/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 200.112, 191.207, 46.4288, 0.29 ) }
    dend_55 { pt3dadd( 199.997, 192.345, 46.7324, 0.29 ) }
    dend_55 { pt3dadd( 199.974, 192.465, 46.769, 0.29 ) }
    dend_55 { pt3dadd( 199.852, 193.101, 46.9642, 0.81 ) }
    dend_55 { pt3dadd( 199.662, 194.099, 47.2704, 0.22 ) }
    dend_55 { pt3dadd( 199.649, 194.164, 47.2904, 0.22 ) }
    dend_55 { pt3dadd( 199.509, 194.899, 47.5158, 0.22 ) }
    dend_55 { pt3dadd( 199.207, 196.131, 47.7951, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 79/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 56.5907, 190.268, -59.3056, 0.44 ) }
    dend_34 { pt3dadd( 57.1664, 191.251, -58.9866, 0.44 ) }
    dend_34 { pt3dadd( 57.6819, 192.116, -58.7857, 0.44 ) }
    dend_34 { pt3dadd( 57.9614, 192.616, -58.7119, 0.88 ) }
    dend_34 { pt3dadd( 58.217, 193.147, -58.6636, 1.11 ) }
    dend_34 { pt3dadd( 58.2755, 193.282, -58.6554, 1.11 ) }
    dend_34 { pt3dadd( 58.6489, 194.159, -58.6192, 1.11 ) }
    dend_34 { pt3dadd( 58.8937, 194.724, -58.6014, 1.11 ) }
    dend_34 { pt3dadd( 59.3481, 195.795, -58.5498, 1.11 ) }
    dend_34 { pt3dadd( 59.8237, 196.989, -58.4843, 1.11 ) }
    dend_34 { pt3dadd( 60.1683, 197.931, -58.4178, 1.33 ) }
    dend_34 { pt3dadd( 60.6001, 199.198, -58.3196, 1.33 ) }
    dend_34 { pt3dadd( 60.876, 200.12, -58.24, 0.88 ) }
    dend_34 { pt3dadd( 61.0577, 200.741, -58.1816, 0.74 ) }
    dend_34 { pt3dadd( 61.3688, 201.847, -58.0815, 0.66 ) }
    dend_34 { pt3dadd( 61.5987, 202.685, -58.018, 0.66 ) }
    dend_34 { pt3dadd( 61.7422, 203.253, -57.9872, 1.03 ) }
    dend_34 { pt3dadd( 61.8983, 203.909, -58.0011, 1.4 ) }
    dend_34 { pt3dadd( 62.1527, 204.843, -58.106, 1.4 ) }
    dend_34 { pt3dadd( 62.2159, 205.049, -58.1355, 1.4 ) }
    dend_34 { pt3dadd( 62.5577, 206.08, -58.3024, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_34 { pt3dadd( 62.5807, 206.146, -58.3115, 1.4 ) }
    dend_34 { pt3dadd( 62.9278, 207.142, -58.422, 0.96 ) }
    dend_34 { pt3dadd( 63.441, 208.614, -58.5624, 0.88 ) }
    dend_34 { pt3dadd( 63.8455, 209.831, -58.6545, 0.88 ) }
    dend_34 { pt3dadd( 64.1124, 210.587, -58.6919, 1.33 ) }
    dend_34 { pt3dadd( 64.3932, 211.404, -58.7131, 0.81 ) }
    dend_34 { pt3dadd( 64.5542, 211.944, -58.7112, 0.81 ) }
    dend_34 { pt3dadd( 64.5709, 212.011, -58.7076, 0.81 ) }
    dend_34 { pt3dadd( 64.7038, 212.586, -58.6741, 0.59 ) }
    dend_34 { pt3dadd( 64.9604, 213.677, -58.6273, 0.52 ) }
    dend_34 { pt3dadd( 65.1299, 214.514, -58.614, 0.37 ) }
    dend_34 { pt3dadd( 65.2558, 215.277, -58.6222, 0.37 ) }
    dend_34 { pt3dadd( 65.278, 215.423, -58.623, 0.37 ) }
    dend_34 { pt3dadd( 65.391, 216.165, -58.6238, 0.37 ) }
    dend_34 { pt3dadd( 65.5742, 217.3, -58.5786, 1.84 ) }
    dend_34 { pt3dadd( 65.7515, 218.3, -58.5082, 2.14 ) }
    dend_34 { pt3dadd( 65.7669, 218.367, -58.5022, 2.14 ) }
    dend_34 { pt3dadd( 66.0395, 219.408, -58.4053, 1.84 ) }
    dend_34 { pt3dadd( 66.5821, 221.249, -58.23, 1.62 ) }
    dend_34 { pt3dadd( 66.9375, 222.275, -58.1543, 0.88 ) }
    dend_34 { pt3dadd( 67.3147, 223.125, -58.1055, 0.66 ) }
    dend_34 { pt3dadd( 67.8433, 224.095, -58.074, 0.66 ) }
    dend_34 { pt3dadd( 68.2728, 224.836, -58.0736, 1.18 ) }
    dend_34 { pt3dadd( 68.6784, 225.483, -58.0957, 1.18 ) }
    dend_34 { pt3dadd( 69.2268, 226.306, -58.1561, 0.66 ) }
    dend_34 { pt3dadd( 69.749, 227.112, -58.2564, 0.66 ) }
    dend_34 { pt3dadd( 70.7279, 228.708, -58.4737, 0.44 ) }
    dend_34 { pt3dadd( 71.352, 229.856, -58.6269, 0.44 ) }
    dend_34 { pt3dadd( 71.8632, 230.968, -58.7291, 0.44 ) }
    dend_34 { pt3dadd( 71.8864, 231.033, -58.7322, 0.44 ) }
    dend_34 { pt3dadd( 72.0865, 231.738, -58.7328, 1.55 ) }
    dend_34 { pt3dadd( 72.2451, 232.35, -58.7235, 1.55 ) }
    dend_34 { pt3dadd( 72.4648, 233.111, -58.6931, 0.96 ) }
    dend_34 { pt3dadd( 72.8155, 234.083, -58.6362, 0.29 ) }
    dend_34 { pt3dadd( 73.1499, 234.94, -58.5777, 0.29 ) }
    dend_34 { pt3dadd( 73.1853, 235.031, -58.5714, 0.29 ) }
    dend_34 { pt3dadd( 73.4819, 235.773, -58.5122, 0.29 ) }
    dend_34 { pt3dadd( 73.5058, 235.84, -58.5091, 0.29 ) }
    dend_34 { pt3dadd( 73.6494, 236.373, -58.5086, 0.29 ) }
    dend_34 { pt3dadd( 73.7682, 237.142, -58.5825, 0.96 ) }
    dend_34 { pt3dadd( 73.8402, 238.092, -58.7006, 0.96 ) }
    dend_34 { pt3dadd( 73.8444, 238.229, -58.7189, 0.96 ) }
    dend_34 { pt3dadd( 73.843, 239.12, -58.8375, 0.96 ) }
    dend_34 { pt3dadd( 73.8616, 240.053, -58.9971, 1.33 ) }
    dend_34 { pt3dadd( 73.8673, 240.889, -59.1576, 1.55 ) }
    dend_34 { pt3dadd( 73.8635, 241.301, -59.2665, 1.55 ) }
    dend_34 { pt3dadd( 73.8604, 241.918, -59.46, 1.03 ) }
    dend_34 { pt3dadd( 73.8545, 242.741, -59.7347, 0.74 ) }
    dend_34 { pt3dadd( 73.848, 243.866, -60.1379, 0.59 ) }
    dend_34 { pt3dadd( 73.8444, 244.689, -60.4313, 0.59 ) }
    dend_34 { pt3dadd( 73.8238, 245.651, -60.7428, 0.44 ) }
    dend_34 { pt3dadd( 73.7867, 246.334, -60.965, 0.44 ) }
    dend_34 { pt3dadd( 73.7158, 246.942, -61.1656, 0.44 ) }
    dend_34 { pt3dadd( 73.7025, 247.007, -61.1846, 0.44 ) }
    dend_34 { pt3dadd( 73.5549, 247.623, -61.3182, 0.96 ) }
    dend_34 { pt3dadd( 73.4571, 248.108, -61.4023, 0.96 ) }
    dend_34 { pt3dadd( 73.4445, 248.177, -61.4112, 0.96 ) }
    dend_34 { pt3dadd( 73.1702, 249.52, -61.5907, 0.37 ) }
    dend_34 { pt3dadd( 72.9486, 250.516, -61.7184, 0.37 ) }
    dend_34 { pt3dadd( 72.8436, 250.996, -61.7756, 0.37 ) }
    dend_34 { pt3dadd( 72.6461, 251.968, -61.8827, 0.37 ) }
    dend_34 { pt3dadd( 72.5089, 252.777, -61.9594, 0.37 ) }
    dend_34 { pt3dadd( 72.4934, 252.881, -61.9666, 0.37 ) }
    dend_34 { pt3dadd( 72.3995, 253.806, -61.9897, 0.37 ) }
    dend_34 { pt3dadd( 72.3672, 254.161, -61.9969, 1.55 ) }
    dend_34 { pt3dadd( 72.3194, 254.479, -62.0024, 1.69 ) }
    dend_34 { pt3dadd( 72.2891, 254.786, -61.9938, 1.69 ) }
    dend_34 { pt3dadd( 72.259, 255.491, -61.9565, 1.4 ) }
    dend_34 { pt3dadd( 72.257, 256.418, -61.8979, 1.69 ) }
    dend_34 { pt3dadd( 72.2903, 257.54, -61.819, 1.77 ) }
    dend_34 { pt3dadd( 72.4362, 259.904, -61.6458, 0.44 ) }
    dend_34 { pt3dadd( 72.5639, 261.449, -61.5318, 0.44 ) }
    dend_34 { pt3dadd( 72.6961, 262.643, -61.4419, 0.44 ) }
    dend_34 { pt3dadd( 72.7249, 262.858, -61.4258, 0.44 ) }
    dend_34 { pt3dadd( 72.8225, 263.65, -61.3693, 0.88 ) }
    dend_34 { pt3dadd( 72.9286, 264.474, -61.3165, 1.18 ) }
    dend_34 { pt3dadd( 72.9998, 265.427, -61.2752, 1.18 ) }
    dend_34 { pt3dadd( 72.9943, 265.498, -61.2741, 1.18 ) }
    dend_34 { pt3dadd( 72.8306, 266.527, -61.24, 1.18 ) }
    dend_34 { pt3dadd( 72.6494, 267.479, -61.197, 1.47 ) }
    dend_34 { pt3dadd( 72.6352, 267.557, -61.1926, 1.47 ) }
    dend_34 { pt3dadd( 72.5409, 268.246, -61.1273, 1.47 ) }
    dend_34 { pt3dadd( 72.494, 268.867, -61.0498, 0.96 ) }
    dend_34 { pt3dadd( 72.48, 269.535, -60.9418, 0.66 ) }
    dend_34 { pt3dadd( 72.5383, 270.502, -60.7517, 0.52 ) }
    dend_34 { pt3dadd( 72.6198, 271.092, -60.6235, 0.37 ) }
    dend_34 { pt3dadd( 72.7992, 272.093, -60.408, 0.29 ) }
    dend_34 { pt3dadd( 72.9388, 272.672, -60.284, 0.29 ) }
    dend_34 { pt3dadd( 73.0337, 273.025, -60.2136, 0.52 ) }
    dend_34 { pt3dadd( 73.1827, 273.565, -60.1097, 0.74 ) }
    dend_34 { pt3dadd( 73.2073, 273.672, -60.0927, 0.74 ) }
    dend_34 { pt3dadd( 73.3628, 274.589, -59.997, 0.74 ) }
    dend_34 { pt3dadd( 73.4009, 274.827, -59.9925, 1.03 ) }
    dend_34 { pt3dadd( 73.4307, 274.982, -59.9936, 1.03 ) }
    dend_34 { pt3dadd( 73.506, 275.346, -60.0062, 1.03 ) }
    dend_34 { pt3dadd( 73.6582, 276.06, -60.0304, 0.29 ) }
    dend_34 { pt3dadd( 73.6732, 276.13, -60.0324, 0.29 ) }
    dend_34 { pt3dadd( 73.9237, 277.251, -60.061, 0.29 ) }
    dend_34 { pt3dadd( 73.9413, 277.327, -60.0625, 0.29 ) }
    dend_34 { pt3dadd( 74.0764, 277.821, -60.0675, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_34 { pt3dadd( 74.1863, 278.16, -60.0695, 0.29 ) }
    dend_34 { pt3dadd( 74.4587, 278.819, -60.0695, 0.29 ) }
    dend_34 { pt3dadd( 74.4903, 278.88, -60.0695, 0.29 ) }
    dend_34 { pt3dadd( 74.7148, 279.255, -60.0871, 0.74 ) }
    dend_34 { pt3dadd( 75.1033, 279.846, -60.132, 0.81 ) }
    dend_34 { pt3dadd( 75.1639, 279.933, -60.1402, 0.81 ) }
    dend_34 { pt3dadd( 75.7158, 280.682, -60.2195, 0.81 ) }
    dend_34 { pt3dadd( 76.3807, 281.595, -60.319, 0.81 ) }
    dend_34 { pt3dadd( 76.7246, 282.091, -60.3925, 1.11 ) }
    dend_34 { pt3dadd( 77.2141, 282.806, -60.5207, 0.37 ) }
    dend_34 { pt3dadd( 77.6564, 283.48, -60.6582, 0.37 ) }
    dend_34 { pt3dadd( 77.6939, 283.54, -60.6711, 0.37 ) }
    dend_34 { pt3dadd( 78.1599, 284.339, -60.8592, 0.37 ) }
    dend_34 { pt3dadd( 78.5031, 284.984, -61.0172, 0.88 ) }
    dend_34 { pt3dadd( 78.7772, 285.519, -61.1363, 0.88 ) }
    dend_34 { pt3dadd( 78.8057, 285.579, -61.153, 0.88 ) }
    dend_34 { pt3dadd( 79.0529, 286.067, -61.32, 0.88 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 17/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 56.5907, 190.268, -59.3056, 0.22 ) }
    dend_33 { pt3dadd( 56.1738, 190.518, -59.0796, 0.22 ) }
    dend_33 { pt3dadd( 54.8546, 191.309, -58.3648, 0.22 ) }
    dend_33 { pt3dadd( 54.7376, 191.379, -58.3014, 0.74 ) }
    dend_33 { pt3dadd( 54.3446, 191.614, -58.0884, 0.74 ) }
    dend_33 { pt3dadd( 53.5292, 192.103, -57.6466, 0.44 ) }
    dend_33 { pt3dadd( 53.1681, 192.32, -57.4509, 0.44 ) }
    // Section: dend_27, id: dend_27, parent: dend_5 (entry count 24/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 39.5311, 122.928, -69.0205, 0.74 ) }
    dend_27 { pt3dadd( 39.6431, 123.013, -69.4915, 0.74 ) }
    dend_27 { pt3dadd( 40.83, 123.758, -74.0592, 1.03 ) }
    dend_27 { pt3dadd( 40.9548, 123.845, -74.6009, 1.03 ) }
    dend_27 { pt3dadd( 40.9688, 123.857, -74.6692, 1.03 ) }
    dend_27 { pt3dadd( 41.4335, 124.349, -77.2298, 0.66 ) }
    dend_27 { pt3dadd( 41.4443, 124.365, -77.2979, 0.66 ) }
    dend_27 { pt3dadd( 41.6724, 124.986, -79.5085, 0.66 ) }
    dend_27 { pt3dadd( 41.7883, 125.699, -81.4493, 0.66 ) }
    dend_27 { pt3dadd( 41.8193, 125.894, -81.9394, 0.88 ) }
    dend_27 { pt3dadd( 41.8698, 126.119, -82.4596, 0.88 ) }
    dend_27 { pt3dadd( 41.9841, 126.557, -83.3677, 0.88 ) }
    dend_27 { pt3dadd( 42.6209, 128.246, -86.767, 0.52 ) }
    dend_27 { pt3dadd( 42.8943, 128.812, -87.83, 0.66 ) }
    dend_27 { pt3dadd( 43.249, 129.317, -88.8167, 0.66 ) }
    dend_27 { pt3dadd( 43.7216, 129.822, -89.8824, 0.44 ) }
    dend_27 { pt3dadd( 43.7814, 129.875, -90.01, 0.44 ) }
    dend_27 { pt3dadd( 44.0098, 130.076, -90.5416, 0.44 ) }
    dend_27 { pt3dadd( 44.4058, 130.504, -91.6537, 1.18 ) }
    dend_27 { pt3dadd( 44.4283, 130.539, -91.7583, 1.18 ) }
    dend_27 { pt3dadd( 44.5357, 130.798, -92.4843, 1.18 ) }
    dend_27 { pt3dadd( 44.7001, 131.515, -94.4587, 1.18 ) }
    dend_27 { pt3dadd( 44.8049, 132.377, -96.9265, 0.66 ) }
    dend_27 { pt3dadd( 44.81, 133.004, -98.85, 1.47 ) }
    dend_27 { pt3dadd( 44.7449, 133.852, -101.561, 1.47 ) }
    dend_27 { pt3dadd( 44.7296, 133.944, -101.857, 1.47 ) }
    dend_27 { pt3dadd( 44.6162, 134.388, -103.277, 0.74 ) }
    dend_27 { pt3dadd( 44.4434, 135.047, -105.235, 1.03 ) }
    dend_27 { pt3dadd( 44.2507, 135.662, -106.892, 0.59 ) }
    dend_27 { pt3dadd( 44.1781, 135.855, -107.385, 0.59 ) }
    dend_27 { pt3dadd( 44.1188, 136.028, -107.795, 0.59 ) }
    dend_27 { pt3dadd( 43.9061, 136.871, -109.731, 0.59 ) }
    dend_27 { pt3dadd( 43.8853, 137.169, -110.306, 0.59 ) }
    dend_27 { pt3dadd( 43.898, 137.424, -110.642, 0.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 58/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 39.5311, 122.928, -69.0205, 0.37 ) }
    dend_6 { pt3dadd( 39.4898, 124.052, -69.5618, 0.37 ) }
    dend_6 { pt3dadd( 39.478, 124.93, -70.195, 0.37 ) }
    dend_6 { pt3dadd( 39.5431, 126.096, -71.2145, 0.37 ) }
    dend_6 { pt3dadd( 39.5477, 126.149, -71.2597, 0.37 ) }
    dend_6 { pt3dadd( 39.5869, 126.486, -71.5298, 0.37 ) }
    dend_6 { pt3dadd( 39.6552, 126.993, -71.9226, 1.11 ) }
    dend_6 { pt3dadd( 39.9113, 128.388, -73.1916, 0.52 ) }
    dend_6 { pt3dadd( 40.122, 129.284, -74.0342, 0.81 ) }
    dend_6 { pt3dadd( 40.2963, 129.947, -74.5869, 1.25 ) }
    dend_6 { pt3dadd( 40.4487, 130.496, -75.0482, 1.25 ) }
    dend_6 { pt3dadd( 40.4641, 130.548, -75.0921, 1.25 ) }
    dend_6 { pt3dadd( 40.9084, 132.032, -76.1958, 0.52 ) }
    dend_6 { pt3dadd( 40.9447, 132.171, -76.2967, 0.52 ) }
    dend_6 { pt3dadd( 41.1012, 132.998, -76.9684, 0.52 ) }
    dend_6 { pt3dadd( 41.1733, 133.762, -77.613, 0.74 ) }
    dend_6 { pt3dadd( 41.177, 133.865, -77.7095, 0.74 ) }
    dend_6 { pt3dadd( 41.1778, 134.908, -78.7151, 0.74 ) }
    dend_6 { pt3dadd( 41.1439, 136.531, -80.2547, 0.74 ) }
    dend_6 { pt3dadd( 41.119, 137.484, -81.1873, 1.84 ) }
    dend_6 { pt3dadd( 41.0954, 138.276, -81.9929, 1.84 ) }
    dend_6 { pt3dadd( 41.0433, 140.12, -83.851, 0.52 ) }
    dend_6 { pt3dadd( 41.0435, 140.176, -83.9073, 0.52 ) }
    dend_6 { pt3dadd( 41.0691, 140.742, -84.4721, 0.52 ) }
    dend_6 { pt3dadd( 41.225, 141.862, -85.4112, 0.52 ) }
    dend_6 { pt3dadd( 41.4249, 142.639, -86.0497, 0.52 ) }
    dend_6 { pt3dadd( 41.4472, 142.701, -86.0964, 0.52 ) }
    dend_6 { pt3dadd( 41.7122, 143.384, -86.4503, 0.52 ) }
    dend_6 { pt3dadd( 41.7673, 143.517, -86.517, 0.52 ) }
    dend_6 { pt3dadd( 42.0488, 144.143, -86.8172, 0.88 ) }
    dend_6 { pt3dadd( 42.3998, 144.883, -87.1109, 1.11 ) }
    dend_6 { pt3dadd( 42.7459, 145.705, -87.3917, 1.11 ) }
    dend_6 { pt3dadd( 43.0666, 146.639, -87.7261, 1.4 ) }
    dend_6 { pt3dadd( 43.2951, 147.461, -88.0289, 1.4 ) }
    dend_6 { pt3dadd( 43.3146, 147.535, -88.0544, 1.4 ) }
    dend_6 { pt3dadd( 43.5943, 148.638, -88.3795, 0.52 ) }
    dend_6 { pt3dadd( 43.869, 149.646, -88.6766, 0.52 ) }
    dend_6 { pt3dadd( 44.1279, 150.572, -88.9639, 0.81 ) }
    dend_6 { pt3dadd( 44.1464, 150.635, -88.9825, 0.81 ) }
    dend_6 { pt3dadd( 44.5044, 151.845, -89.3488, 0.81 ) }
    dend_6 { pt3dadd( 44.8619, 153.115, -89.7421, 0.81 ) }
    dend_6 { pt3dadd( 45.1783, 154.245, -90.1013, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_6 { pt3dadd( 45.4402, 155.172, -90.3907, 0.37 ) }
    dend_6 { pt3dadd( 45.7366, 156.251, -90.7337, 0.37 ) }
    dend_6 { pt3dadd( 46.0016, 157.295, -91.0709, 1.11 ) }
    dend_6 { pt3dadd( 46.277, 158.504, -91.4743, 1.47 ) }
    dend_6 { pt3dadd( 46.2914, 158.568, -91.4945, 1.47 ) }
    dend_6 { pt3dadd( 46.4702, 159.382, -91.7281, 1.47 ) }
    dend_6 { pt3dadd( 46.7684, 160.783, -92.1089, 1.47 ) }
    dend_6 { pt3dadd( 46.9974, 162.012, -92.4543, 1.18 ) }
    dend_6 { pt3dadd( 47.0068, 162.069, -92.4693, 1.18 ) }
    dend_6 { pt3dadd( 47.1446, 162.972, -92.7139, 0.66 ) }
    dend_6 { pt3dadd( 47.2905, 164.068, -92.9926, 0.29 ) }
    dend_6 { pt3dadd( 47.5223, 166.263, -93.5898, 0.29 ) }
    dend_6 { pt3dadd( 47.6826, 168.167, -94.0944, 0.52 ) }
    dend_6 { pt3dadd( 47.7326, 168.902, -94.326, 0.96 ) }
    dend_6 { pt3dadd( 47.7657, 169.441, -94.5056, 1.18 ) }
    dend_6 { pt3dadd( 47.8295, 170.656, -94.9269, 1.18 ) }
    dend_6 { pt3dadd( 47.9037, 172.118, -95.4444, 0.96 ) }
    dend_6 { pt3dadd( 47.9742, 173.375, -95.9515, 0.59 ) }
    dend_6 { pt3dadd( 48.1056, 175.109, -96.6549, 0.59 ) }
    dend_6 { pt3dadd( 48.1944, 176.157, -97.1234, 0.96 ) }
    // Section: dend_148, id: dend_148, parent: dend_146 (entry count 20/100)
    dend_148 { pt3dclear() }
    dend_148 { pt3dadd( 143.127, -208.37, 22.3104, 1.33 ) }
    dend_148 { pt3dadd( 143.856, -209.088, 23.3947, 1.33 ) }
    dend_148 { pt3dadd( 144.257, -209.477, 23.9635, 0.66 ) }
    dend_148 { pt3dadd( 144.893, -210.102, 24.9011, 0.29 ) }
    dend_148 { pt3dadd( 146.312, -211.642, 26.9533, 0.52 ) }
    dend_148 { pt3dadd( 146.687, -212.062, 27.4753, 0.52 ) }
    dend_148 { pt3dadd( 146.941, -212.364, 27.8132, 0.66 ) }
    dend_148 { pt3dadd( 146.976, -212.409, 27.8543, 0.66 ) }
    dend_148 { pt3dadd( 147.538, -213.177, 28.4931, 0.81 ) }
    dend_148 { pt3dadd( 148.146, -214.055, 28.9718, 0.52 ) }
    dend_148 { pt3dadd( 148.304, -214.295, 29.0176, 0.88 ) }
    dend_148 { pt3dadd( 148.711, -214.936, 29.1095, 1.03 ) }
    dend_148 { pt3dadd( 149.247, -215.779, 29.1992, 1.62 ) }
    dend_148 { pt3dadd( 149.286, -215.839, 29.2018, 1.62 ) }
    dend_148 { pt3dadd( 149.913, -216.738, 29.1242, 1.92 ) }
    dend_148 { pt3dadd( 150.229, -217.143, 29.0827, 2.14 ) }
    dend_148 { pt3dadd( 150.484, -217.469, 29.05, 2.14 ) }
    // Section: dend_147, id: dend_147, parent: dend_146 (entry count 37/100)
    dend_147 { pt3dclear() }
    dend_147 { pt3dadd( 143.127, -208.37, 22.3104, 0.29 ) }
    dend_147 { pt3dadd( 142.841, -207.123, 22.6435, 0.29 ) }
    dend_147 { pt3dadd( 142.731, -206.646, 22.771, 0.29 ) }
    dend_147 { pt3dadd( 142.716, -206.581, 22.7883, 0.29 ) }
    dend_147 { pt3dadd( 142.502, -205.649, 23.0372, 0.29 ) }
    dend_147 { pt3dadd( 142.487, -205.582, 23.0552, 0.29 ) }
    dend_147 { pt3dadd( 142.43, -205.334, 23.1215, 0.74 ) }
    // Section: dend_143, id: dend_143, parent: dend_141 (entry count 44/100)
    dend_143 { pt3dclear() }
    dend_143 { pt3dadd( 97.3439, -258.151, -38.5906, 0.22 ) }
    dend_143 { pt3dadd( 96.7574, -259.81, -37.3471, 0.22 ) }
    dend_143 { pt3dadd( 96.5172, -260.405, -36.9963, 0.22 ) }
    dend_143 { pt3dadd( 96.3608, -260.803, -36.8094, 0.37 ) }
    dend_143 { pt3dadd( 96.2159, -261.174, -36.6704, 0.37 ) }
    dend_143 { pt3dadd( 96.1901, -261.245, -36.6417, 0.37 ) }
    dend_143 { pt3dadd( 95.8468, -262.257, -36.2449, 0.37 ) }
    dend_143 { pt3dadd( 95.716, -262.578, -36.1604, 0.81 ) }
    dend_143 { pt3dadd( 95.5342, -263.034, -36.0239, 1.03 ) }
    dend_143 { pt3dadd( 95.3288, -263.569, -35.8581, 1.03 ) }
    dend_143 { pt3dadd( 94.9011, -264.653, -35.5375, 0.81 ) }
    dend_143 { pt3dadd( 94.6618, -265.23, -35.371, 0.81 ) }
    dend_143 { pt3dadd( 94.4927, -265.617, -35.2717, 0.52 ) }
    dend_143 { pt3dadd( 94.4639, -265.679, -35.2592, 0.52 ) }
    dend_143 { pt3dadd( 94.1313, -266.403, -35.1448, 0.52 ) }
    dend_143 { pt3dadd( 93.7296, -267.362, -35.0506, 0.52 ) }
    dend_143 { pt3dadd( 93.7035, -267.428, -35.0486, 0.52 ) }
    dend_143 { pt3dadd( 93.3272, -268.516, -35.0156, 0.52 ) }
    dend_143 { pt3dadd( 93.1168, -269.138, -34.9988, 1.11 ) }
    dend_143 { pt3dadd( 92.9805, -269.494, -34.9904, 1.11 ) }
    dend_143 { pt3dadd( 92.7282, -270.1, -34.978, 0.29 ) }
    dend_143 { pt3dadd( 92.68, -270.195, -34.9766, 0.29 ) }
    dend_143 { pt3dadd( 92.3865, -270.69, -34.969, 0.29 ) }
    dend_143 { pt3dadd( 91.7573, -271.681, -34.9597, 0.29 ) }
    dend_143 { pt3dadd( 91.388, -272.235, -34.9553, 0.22 ) }
    dend_143 { pt3dadd( 91.3494, -272.293, -34.9547, 0.22 ) }
    dend_143 { pt3dadd( 90.9112, -272.978, -34.9464, 0.22 ) }
    dend_143 { pt3dadd( 90.4657, -273.74, -34.9364, 0.22 ) }
    dend_143 { pt3dadd( 90.0088, -274.568, -34.9244, 0.29 ) }
    dend_143 { pt3dadd( 89.7724, -275.082, -34.9162, 0.29 ) }
    dend_143 { pt3dadd( 89.5079, -275.751, -34.9052, 0.29 ) }
    dend_143 { pt3dadd( 89.399, -276.054, -34.9004, 0.37 ) }
    dend_143 { pt3dadd( 89.3587, -276.196, -34.8982, 0.37 ) }
    // Section: dend_142, id: dend_142, parent: dend_141 (entry count 77/100)
    dend_142 { pt3dclear() }
    dend_142 { pt3dadd( 97.3439, -258.151, -38.5906, 0.37 ) }
    dend_142 { pt3dadd( 95.9522, -259.617, -39.468, 0.37 ) }
    dend_142 { pt3dadd( 95.693, -259.932, -39.6177, 0.37 ) }
    dend_142 { pt3dadd( 95.1252, -260.708, -39.9959, 0.37 ) }
    dend_142 { pt3dadd( 94.5218, -261.587, -40.429, 0.37 ) }
    dend_142 { pt3dadd( 94.4868, -261.641, -40.455, 0.37 ) }
    dend_142 { pt3dadd( 93.934, -262.568, -40.8746, 0.37 ) }
    dend_142 { pt3dadd( 93.6383, -263.192, -41.0818, 1.33 ) }
    dend_142 { pt3dadd( 93.2317, -264.2, -41.4032, 1.33 ) }
    dend_142 { pt3dadd( 93.2192, -264.257, -41.4174, 1.33 ) }
    dend_142 { pt3dadd( 93.1669, -264.799, -41.5433, 0.37 ) }
    dend_142 { pt3dadd( 93.1527, -265.292, -41.6635, 0.37 ) }
    dend_142 { pt3dadd( 93.2213, -266.059, -41.858, 0.37 ) }
    dend_142 { pt3dadd( 93.2365, -266.124, -41.8729, 0.37 ) }
    dend_142 { pt3dadd( 93.7609, -267.631, -42.2649, 0.37 ) }
    dend_142 { pt3dadd( 94.0558, -268.339, -42.5031, 0.22 ) }
    dend_142 { pt3dadd( 94.1181, -268.462, -42.5541, 0.22 ) }
    dend_142 { pt3dadd( 94.388, -268.925, -42.7782, 0.22 ) }
    dend_142 { pt3dadd( 94.7791, -269.544, -43.161, 0.22 ) }
    dend_142 { pt3dadd( 95.2246, -270.362, -43.6854, 0.81 ) }
    dend_142 { pt3dadd( 95.3549, -270.719, -43.8916, 1.11 ) }
    dend_142 { pt3dadd( 95.4351, -271.067, -44.0541, 1.11 ) }
    dend_142 { pt3dadd( 95.4446, -271.141, -44.0786, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_142 { pt3dadd( 95.5105, -272.303, -44.363, 0.29 ) }
    dend_142 { pt3dadd( 95.5395, -273.296, -44.5122, 0.29 ) }
    dend_142 { pt3dadd( 95.5759, -274.588, -44.5888, 0.29 ) }
    dend_142 { pt3dadd( 95.5784, -274.68, -44.591, 0.29 ) }
    dend_142 { pt3dadd( 95.589, -276.083, -44.5712, 0.29 ) }
    dend_142 { pt3dadd( 95.5871, -276.173, -44.5606, 0.29 ) }
    dend_142 { pt3dadd( 95.5334, -277.073, -44.3516, 0.29 ) }
    dend_142 { pt3dadd( 95.5099, -277.363, -44.2701, 0.74 ) }
    dend_142 { pt3dadd( 95.4297, -278.127, -44.0419, 0.74 ) }
    dend_142 { pt3dadd( 95.3159, -278.952, -43.8066, 0.59 ) }
    dend_142 { pt3dadd( 95.0771, -280.219, -43.4745, 0.59 ) }
    dend_142 { pt3dadd( 94.9983, -280.604, -43.3834, 0.74 ) }
    dend_142 { pt3dadd( 94.8932, -281.108, -43.2537, 0.37 ) }
    dend_142 { pt3dadd( 94.697, -282.124, -42.9899, 0.29 ) }
    dend_142 { pt3dadd( 94.6064, -282.748, -42.8045, 0.29 ) }
    dend_142 { pt3dadd( 94.5665, -283.085, -42.7036, 1.33 ) }
    dend_142 { pt3dadd( 94.4864, -283.916, -42.48, 1.69 ) }
    dend_142 { pt3dadd( 94.3976, -284.906, -42.1818, 1.69 ) }
    dend_142 { pt3dadd( 94.3921, -284.962, -42.1632, 1.69 ) }
    dend_142 { pt3dadd( 94.2892, -286.153, -41.7191, 0.22 ) }
    dend_142 { pt3dadd( 94.2324, -286.931, -41.4273, 0.22 ) }
    dend_142 { pt3dadd( 94.2093, -287.279, -41.298, 0.22 ) }
    dend_142 { pt3dadd( 94.1872, -287.612, -41.1834, 0.59 ) }
    dend_142 { pt3dadd( 94.1578, -288.034, -41.0814, 0.59 ) }
    dend_142 { pt3dadd( 94.1242, -288.668, -40.958, 0.15 ) }
    dend_142 { pt3dadd( 94.1276, -289.242, -40.8949, 0.15 ) }
    dend_142 { pt3dadd( 94.1424, -289.389, -40.8714, 0.15 ) }
    dend_142 { pt3dadd( 94.1786, -289.666, -40.8194, 0.15 ) }
    dend_142 { pt3dadd( 94.3286, -290.72, -40.612, 0.15 ) }
    dend_142 { pt3dadd( 94.3388, -290.789, -40.5986, 0.15 ) }
    dend_142 { pt3dadd( 94.4641, -291.662, -40.439, 0.15 ) }
    dend_142 { pt3dadd( 94.5601, -292.373, -40.2945, 0.59 ) }
    dend_142 { pt3dadd( 94.6017, -292.724, -40.2186, 0.96 ) }
    dend_142 { pt3dadd( 94.658, -293.212, -40.1001, 1.25 ) }
    dend_142 { pt3dadd( 94.7215, -293.52, -40.0046, 1.25 ) }
    // Section: dend_140, id: dend_140, parent: dend_134 (entry count 35/100)
    dend_140 { pt3dclear() }
    dend_140 { pt3dadd( 122.436, -209.616, 4.90606, 0.44 ) }
    dend_140 { pt3dadd( 120.93, -210.635, 2.71095, 0.44 ) }
    dend_140 { pt3dadd( 119.995, -211.267, 1.34921, 0.44 ) }
    dend_140 { pt3dadd( 119.623, -211.518, 0.806942, 0.74 ) }
    // Section: dend_135, id: dend_135, parent: dend_134 (entry count 39/100)
    dend_135 { pt3dclear() }
    dend_135 { pt3dadd( 122.436, -209.616, 4.90606, 0.81 ) }
    dend_135 { pt3dadd( 123.355, -210.088, 4.98717, 0.81 ) }
    dend_135 { pt3dadd( 124.192, -210.517, 5.05515, 0.59 ) }
    dend_135 { pt3dadd( 125.658, -211.34, 5.21061, 0.59 ) }
    dend_135 { pt3dadd( 125.904, -211.508, 5.22958, 0.59 ) }
    dend_135 { pt3dadd( 126.274, -211.815, 5.23919, 1.03 ) }
    dend_135 { pt3dadd( 126.885, -212.379, 5.23517, 1.4 ) }
    dend_135 { pt3dadd( 126.923, -212.426, 5.23167, 1.4 ) }
    dend_135 { pt3dadd( 127.355, -213.071, 5.15838, 0.37 ) }
    dend_135 { pt3dadd( 128.074, -214.353, 4.99439, 0.37 ) }
    dend_135 { pt3dadd( 128.526, -215.125, 4.89095, 0.37 ) }
    dend_135 { pt3dadd( 128.565, -215.193, 4.88129, 0.37 ) }
    dend_135 { pt3dadd( 129.201, -216.371, 4.71507, 0.37 ) }
    dend_135 { pt3dadd( 129.549, -217.012, 4.63842, 0.37 ) }
    dend_135 { pt3dadd( 129.587, -217.081, 4.6312, 0.37 ) }
    dend_135 { pt3dadd( 129.991, -217.767, 4.65382, 1.25 ) }
    dend_135 { pt3dadd( 130.245, -218.181, 4.69645, 1.25 ) }
    dend_135 { pt3dadd( 130.549, -218.674, 4.75722, 0.44 ) }
    dend_135 { pt3dadd( 131.396, -219.969, 5.03261, 0.44 ) }
    dend_135 { pt3dadd( 131.438, -220.034, 5.04936, 0.44 ) }
    dend_135 { pt3dadd( 132.148, -221.128, 5.34784, 0.44 ) }
    dend_135 { pt3dadd( 132.46, -221.625, 5.4977, 0.74 ) }
    dend_135 { pt3dadd( 132.761, -222.045, 5.61399, 0.74 ) }
    dend_135 { pt3dadd( 133.474, -222.933, 5.8661, 0.29 ) }
    dend_135 { pt3dadd( 133.571, -223.042, 5.8967, 0.29 ) }
    dend_135 { pt3dadd( 134.369, -223.89, 6.15979, 0.29 ) }
    dend_135 { pt3dadd( 134.929, -224.441, 6.32374, 0.29 ) }
    dend_135 { pt3dadd( 135.758, -225.168, 6.64528, 0.29 ) }
    dend_135 { pt3dadd( 136.388, -225.683, 6.91358, 0.59 ) }
    dend_135 { pt3dadd( 136.892, -226.079, 7.12323, 0.74 ) }
    dend_135 { pt3dadd( 137.916, -226.829, 7.58121, 0.44 ) }
    dend_135 { pt3dadd( 139.185, -227.666, 8.2167, 0.44 ) }
    dend_135 { pt3dadd( 140.586, -228.597, 8.99299, 0.44 ) }
    dend_135 { pt3dadd( 140.653, -228.646, 9.03692, 0.44 ) }
    // Section: dend_125, id: dend_125, parent: dend_121 (entry count 73/100)
    dend_125 { pt3dclear() }
    dend_125 { pt3dadd( -87.9821, -303.319, 5.52013, 0.59 ) }
    dend_125 { pt3dadd( -89.1226, -303.062, 2.92847, 0.59 ) }
    dend_125 { pt3dadd( -89.4313, -303.014, 2.3312, 0.59 ) }
    dend_125 { pt3dadd( -89.4663, -303.009, 2.26992, 0.59 ) }
    dend_125 { pt3dadd( -89.9131, -302.958, 1.54985, 0.59 ) }
    dend_125 { pt3dadd( -90.4811, -302.897, 0.687288, 0.81 ) }
    dend_125 { pt3dadd( -91.0765, -302.896, -0.191394, 0.29 ) }
    dend_125 { pt3dadd( -91.3283, -302.923, -0.501313, 0.74 ) }
    dend_125 { pt3dadd( -91.4169, -302.935, -0.625427, 0.74 ) }
    dend_125 { pt3dadd( -91.5429, -302.939, -0.796086, 0.74 ) }
    dend_125 { pt3dadd( -91.5849, -302.935, -0.852788, 0.74 ) }
    dend_125 { pt3dadd( -92.515, -302.788, -1.96762, 0.22 ) }
    dend_125 { pt3dadd( -93.2713, -302.612, -2.87303, 0.22 ) }
    dend_125 { pt3dadd( -93.3181, -302.6, -2.92739, 0.22 ) }
    dend_125 { pt3dadd( -93.9527, -302.462, -3.5977, 0.22 ) }
    dend_125 { pt3dadd( -94.8169, -302.304, -4.38422, 0.22 ) }
    dend_125 { pt3dadd( -95.2801, -302.199, -4.83849, 0.22 ) }
    dend_125 { pt3dadd( -95.3293, -302.183, -4.88959, 0.22 ) }
    dend_125 { pt3dadd( -95.5342, -302.126, -5.12036, 0.59 ) }
    dend_125 { pt3dadd( -95.911, -302.019, -5.62122, 0.59 ) }
    dend_125 { pt3dadd( -96.1568, -301.949, -5.99618, 0.59 ) }
    dend_125 { pt3dadd( -97.2102, -301.576, -7.77555, 0.29 ) }
    dend_125 { pt3dadd( -97.7672, -301.335, -8.85191, 0.29 ) }
    dend_125 { pt3dadd( -97.797, -301.319, -8.91402, 0.29 ) }
    dend_125 { pt3dadd( -98.0752, -301.129, -9.56367, 0.59 ) }
    dend_125 { pt3dadd( -98.1486, -301.062, -9.76136, 0.88 ) }
    // Section: dend_122, id: dend_122, parent: dend_121 (entry count 99/100)
    dend_122 { pt3dclear() }
    dend_122 { pt3dadd( -87.9821, -303.319, 5.52013, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_122 { pt3dadd( -89.0513, -304.56, 5.64003, 0.52 ) }
    dend_122 { pt3dadd( -89.9518, -305.672, 5.73367, 0.52 ) }
    dend_122 { pt3dadd( -90.3198, -306.155, 5.76618, 0.74 ) }
    dend_122 { pt3dadd( -90.5691, -306.511, 5.78627, 0.74 ) }
    dend_122 { pt3dadd( -90.8567, -306.942, 5.80755, 0.59 ) }
    dend_122 { pt3dadd( -91.2986, -307.623, 5.83853, 0.59 ) }
    dend_122 { pt3dadd( -91.7855, -308.455, 5.89017, 0.52 ) }
    dend_122 { pt3dadd( -92.4178, -309.619, 5.90067, 0.52 ) }
    dend_122 { pt3dadd( -92.7616, -310.259, 5.90512, 0.52 ) }
    dend_122 { pt3dadd( -93.0177, -310.727, 5.89881, 0.52 ) }
    dend_122 { pt3dadd( -93.0521, -310.789, 5.89337, 0.52 ) }
    dend_122 { pt3dadd( -93.4685, -311.488, 5.77652, 0.52 ) }
    dend_122 { pt3dadd( -93.7991, -311.991, 5.64631, 0.52 ) }
    dend_122 { pt3dadd( -94.0125, -312.277, 5.55288, 1.03 ) }
    dend_122 { pt3dadd( -94.4266, -312.77, 5.34838, 0.52 ) }
    dend_122 { pt3dadd( -95.0209, -313.461, 5.03894, 0.74 ) }
    dend_122 { pt3dadd( -95.51, -314.013, 4.77941, 0.74 ) }
    dend_122 { pt3dadd( -95.7989, -314.339, 4.62994, 0.74 ) }
    dend_122 { pt3dadd( -96.5503, -315.216, 4.30244, 0.74 ) }
    dend_122 { pt3dadd( -97.0751, -315.885, 4.127, 0.81 ) }
    dend_122 { pt3dadd( -97.4647, -316.424, 4.0427, 0.81 ) }
    dend_122 { pt3dadd( -97.7111, -316.772, 4.02495, 0.37 ) }
    dend_122 { pt3dadd( -98.3035, -317.651, 3.99288, 0.37 ) }
    dend_122 { pt3dadd( -98.749, -318.361, 3.90633, 0.37 ) }
    dend_122 { pt3dadd( -99.0996, -318.984, 3.77523, 0.37 ) }
    dend_122 { pt3dadd( -99.1618, -319.104, 3.73865, 0.37 ) }
    dend_122 { pt3dadd( -99.8514, -320.488, 3.17103, 0.37 ) }
    dend_122 { pt3dadd( -100.229, -321.271, 2.78964, 0.37 ) }
    dend_122 { pt3dadd( -100.877, -322.63, 1.99799, 0.59 ) }
    dend_122 { pt3dadd( -101.193, -323.298, 1.57468, 0.74 ) }
    dend_122 { pt3dadd( -101.674, -324.253, 0.957597, 0.74 ) }
    dend_122 { pt3dadd( -101.734, -324.362, 0.888315, 0.74 ) }
    dend_122 { pt3dadd( -102.042, -324.818, 0.608674, 0.74 ) }
    dend_122 { pt3dadd( -102.088, -324.868, 0.585527, 0.74 ) }
    dend_122 { pt3dadd( -102.871, -325.536, 0.43533, 0.74 ) }
    dend_122 { pt3dadd( -103.496, -326.031, 0.37425, 0.74 ) }
    dend_122 { pt3dadd( -104.059, -326.484, 0.284791, 0.66 ) }
    dend_122 { pt3dadd( -104.815, -327.187, 0.0979308, 0.66 ) }
    dend_122 { pt3dadd( -105.118, -327.518, -0.0109527, 1.03 ) }
    dend_122 { pt3dadd( -105.864, -328.472, -0.339651, 1.03 ) }
    dend_122 { pt3dadd( -106.322, -329.143, -0.575493, 1.03 ) }
    dend_122 { pt3dadd( -107.072, -330.433, -1.00628, 0.81 ) }
    dend_122 { pt3dadd( -107.488, -331.265, -1.26527, 0.59 ) }
    dend_122 { pt3dadd( -107.932, -332.196, -1.53006, 0.59 ) }
    dend_122 { pt3dadd( -108.401, -333.109, -1.75861, 0.59 ) }
    dend_122 { pt3dadd( -108.759, -333.752, -1.89515, 0.88 ) }
    dend_122 { pt3dadd( -109.164, -334.398, -1.98992, 1.47 ) }
    dend_122 { pt3dadd( -109.495, -334.858, -2.0139, 1.47 ) }
    dend_122 { pt3dadd( -110.262, -335.818, -2.04654, 1.03 ) }
    dend_122 { pt3dadd( -110.911, -336.63, -2.0545, 0.88 ) }
    dend_122 { pt3dadd( -110.954, -336.686, -2.06037, 0.88 ) }
    dend_122 { pt3dadd( -111.383, -337.299, -2.15844, 1.4 ) }
    dend_122 { pt3dadd( -111.65, -337.731, -2.24095, 1.55 ) }
    dend_122 { pt3dadd( -112.002, -338.374, -2.37658, 0.96 ) }
    dend_122 { pt3dadd( -112.625, -339.751, -2.6845, 0.96 ) }
    dend_122 { pt3dadd( -113.304, -341.405, -3.12325, 0.59 ) }
    dend_122 { pt3dadd( -113.847, -342.724, -3.55145, 0.59 ) }
    dend_122 { pt3dadd( -114.041, -343.183, -3.72041, 0.88 ) }
    dend_122 { pt3dadd( -114.27, -343.673, -3.91421, 1.25 ) }
    dend_122 { pt3dadd( -114.482, -344.067, -4.10255, 1.25 ) }
    dend_122 { pt3dadd( -115.276, -345.375, -4.80934, 1.18 ) }
    dend_122 { pt3dadd( -115.979, -346.425, -5.39278, 1.18 ) }
    dend_122 { pt3dadd( -116.459, -347.053, -5.77358, 1.18 ) }
    dend_122 { pt3dadd( -116.997, -347.707, -6.14022, 1.18 ) }
    dend_122 { pt3dadd( -117.857, -348.721, -6.66605, 0.29 ) }
    dend_122 { pt3dadd( -118.302, -349.237, -6.89604, 0.29 ) }
    dend_122 { pt3dadd( -118.408, -349.363, -6.93757, 0.29 ) }
    dend_122 { pt3dadd( -118.884, -349.966, -7.07813, 0.29 ) }
    dend_122 { pt3dadd( -119.9, -351.33, -7.33391, 0.29 ) }
    dend_122 { pt3dadd( -119.94, -351.386, -7.33976, 0.29 ) }
    dend_122 { pt3dadd( -120.209, -351.78, -7.33195, 0.88 ) }
    dend_122 { pt3dadd( -120.251, -351.839, -7.33032, 0.88 ) }
    dend_122 { pt3dadd( -120.562, -352.279, -7.31342, 0.96 ) }
    dend_122 { pt3dadd( -120.604, -352.346, -7.31038, 0.96 ) }
    dend_122 { pt3dadd( -120.834, -352.85, -7.28538, 0.96 ) }
    dend_122 { pt3dadd( -121.198, -353.747, -7.2388, 0.52 ) }
    dend_122 { pt3dadd( -121.41, -354.323, -7.20787, 0.52 ) }
    dend_122 { pt3dadd( -121.439, -354.41, -7.20449, 0.52 ) }
    dend_122 { pt3dadd( -121.73, -355.438, -7.17882, 0.52 ) }
    dend_122 { pt3dadd( -122.048, -356.637, -7.16212, 0.52 ) }
    dend_122 { pt3dadd( -122.132, -356.945, -7.16212, 0.66 ) }
    dend_122 { pt3dadd( -122.153, -357.021, -7.16264, 0.66 ) }
    dend_122 { pt3dadd( -122.408, -357.794, -7.17095, 0.66 ) }
    dend_122 { pt3dadd( -122.671, -358.423, -7.17787, 0.52 ) }
    dend_122 { pt3dadd( -122.742, -358.554, -7.17819, 0.52 ) }
    dend_122 { pt3dadd( -123.368, -359.519, -7.11203, 0.52 ) }
    dend_122 { pt3dadd( -123.588, -359.847, -7.06849, 0.74 ) }
    dend_122 { pt3dadd( -123.875, -360.271, -6.98263, 0.96 ) }
    dend_122 { pt3dadd( -124.053, -360.522, -6.90705, 0.96 ) }
    dend_122 { pt3dadd( -124.079, -360.571, -6.88728, 0.96 ) }
    dend_122 { pt3dadd( -124.386, -361.223, -6.60594, 0.59 ) }
    dend_122 { pt3dadd( -124.47, -361.415, -6.52683, 0.44 ) }
    dend_122 { pt3dadd( -124.657, -361.845, -6.36783, 0.37 ) }
    dend_122 { pt3dadd( -124.682, -361.907, -6.34895, 0.37 ) }
    dend_122 { pt3dadd( -125.075, -363.022, -6.00693, 0.15 ) }
    dend_122 { pt3dadd( -125.295, -363.806, -5.55842, 0.15 ) }
    dend_122 { pt3dadd( -125.538, -364.599, -4.97362, 0.15 ) }
    dend_122 { pt3dadd( -125.556, -364.649, -4.92893, 0.15 ) }
    dend_122 { pt3dadd( -125.876, -365.425, -4.13873, 0.15 ) }
    dend_122 { pt3dadd( -126.237, -366.192, -3.25631, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_122 { pt3dadd( -127.301, -368.023, -0.73047, 0.15 ) }
    dend_122 { pt3dadd( -127.594, -368.477, -0.0186239, 0.15 ) }
    dend_122 { pt3dadd( -127.754, -368.684, 0.349477, 0.88 ) }
    dend_122 { pt3dadd( -127.967, -368.926, 0.759626, 0.88 ) }
    dend_122 { pt3dadd( -128.007, -368.963, 0.818793, 0.88 ) }
    dend_122 { pt3dadd( -128.452, -369.357, 1.25208, 0.22 ) }
    dend_122 { pt3dadd( -128.823, -369.752, 1.4861, 0.22 ) }
    dend_122 { pt3dadd( -128.895, -369.853, 1.54979, 0.22 ) }
    dend_122 { pt3dadd( -129.404, -370.662, 2.08474, 0.22 ) }
    dend_122 { pt3dadd( -129.895, -371.475, 2.74826, 0.22 ) }
    dend_122 { pt3dadd( -130.294, -372.094, 3.31321, 1.03 ) }
    dend_122 { pt3dadd( -130.33, -372.145, 3.364, 1.03 ) }
    dend_122 { pt3dadd( -130.667, -372.531, 3.80339, 1.33 ) }
    dend_122 { pt3dadd( -130.706, -372.57, 3.8502, 1.33 ) }
    dend_122 { pt3dadd( -131.636, -373.328, 4.83803, 0.59 ) }
    dend_122 { pt3dadd( -131.961, -373.6, 5.13054, 0.52 ) }
    dend_122 { pt3dadd( -132.193, -373.822, 5.32068, 0.44 ) }
    dend_122 { pt3dadd( -132.613, -374.298, 5.66621, 0.22 ) }
    dend_122 { pt3dadd( -132.647, -374.351, 5.69536, 0.22 ) }
    dend_122 { pt3dadd( -132.751, -374.596, 5.80872, 0.52 ) }
    dend_122 { pt3dadd( -132.864, -374.994, 5.95269, 0.88 ) }
    dend_122 { pt3dadd( -132.973, -375.512, 6.1518, 0.88 ) }
    dend_122 { pt3dadd( -133.091, -376.138, 6.39939, 0.29 ) }
    dend_122 { pt3dadd( -133.248, -376.898, 6.74096, 0.29 ) }
    dend_122 { pt3dadd( -133.484, -377.763, 7.17956, 0.29 ) }
    dend_122 { pt3dadd( -133.587, -378.061, 7.34307, 0.29 ) }
    dend_122 { pt3dadd( -133.613, -378.118, 7.37444, 0.29 ) }
    dend_122 { pt3dadd( -133.773, -378.461, 7.53856, 0.52 ) }
    dend_122 { pt3dadd( -134.045, -379.105, 7.76799, 0.74 ) }
    dend_122 { pt3dadd( -134.268, -379.659, 7.91724, 0.88 ) }
    dend_122 { pt3dadd( -134.434, -380.147, 7.98282, 0.29 ) }
    dend_122 { pt3dadd( -134.63, -380.768, 8.01014, 0.29 ) }
    dend_122 { pt3dadd( -134.96, -381.818, 7.98638, 0.29 ) }
    dend_122 { pt3dadd( -135.199, -382.547, 7.88398, 0.29 ) }
    dend_122 { pt3dadd( -135.221, -382.61, 7.86863, 0.29 ) }
    dend_122 { pt3dadd( -135.605, -383.613, 7.57025, 0.29 ) }
    dend_122 { pt3dadd( -135.954, -384.447, 7.28468, 0.88 ) }
    dend_122 { pt3dadd( -136.145, -384.873, 7.12523, 1.55 ) }
    dend_122 { pt3dadd( -136.613, -385.862, 6.69784, 0.81 ) }
    dend_122 { pt3dadd( -136.792, -386.291, 6.48867, 0.59 ) }
    dend_122 { pt3dadd( -136.971, -386.83, 6.21354, 0.52 ) }
    dend_122 { pt3dadd( -136.982, -386.891, 6.18217, 0.52 ) }
    dend_122 { pt3dadd( -136.996, -387.473, 5.90018, 0.52 ) }
    dend_122 { pt3dadd( -136.911, -388.21, 5.56368, 0.52 ) }
    dend_122 { pt3dadd( -136.691, -389.088, 5.20786, 0.44 ) }
    dend_122 { pt3dadd( -136.668, -389.158, 5.17941, 0.44 ) }
    dend_122 { pt3dadd( -136.45, -389.788, 4.92058, 0.44 ) }
    dend_122 { pt3dadd( -136.373, -390.016, 4.82585, 0.29 ) }
    dend_122 { pt3dadd( -136.22, -390.478, 4.63669, 0.29 ) }
    dend_122 { pt3dadd( -135.884, -391.471, 4.33496, 0.29 ) }
    dend_122 { pt3dadd( -135.81, -391.679, 4.28631, 0.96 ) }
    dend_122 { pt3dadd( -135.448, -392.655, 4.09688, 0.29 ) }
    dend_122 { pt3dadd( -135.259, -393.164, 4.0236, 0.66 ) }
    dend_122 { pt3dadd( -135.231, -393.237, 4.01878, 0.66 ) }
    dend_122 { pt3dadd( -134.842, -394.185, 4.05316, 0.22 ) }
    dend_122 { pt3dadd( -134.814, -394.248, 4.06469, 0.22 ) }
    dend_122 { pt3dadd( -134.508, -394.919, 4.21896, 0.22 ) }
    dend_122 { pt3dadd( -134.415, -395.118, 4.27754, 0.44 ) }
    dend_122 { pt3dadd( -134.271, -395.571, 4.37632, 0.44 ) }
    dend_122 { pt3dadd( -134.257, -395.638, 4.37955, 0.44 ) }
    dend_122 { pt3dadd( -134.175, -396.161, 4.33889, 0.22 ) }
    dend_122 { pt3dadd( -134.099, -396.653, 4.283, 0.44 ) }
    dend_122 { pt3dadd( -133.995, -397.132, 4.21182, 0.44 ) }
    dend_122 { pt3dadd( -133.746, -398.02, 4.05436, 0.22 ) }
    dend_122 { pt3dadd( -133.483, -398.768, 3.90726, 0.88 ) }
    dend_122 { pt3dadd( -133.255, -399.431, 3.77252, 1.33 ) }
    dend_122 { pt3dadd( -133.226, -399.522, 3.75242, 1.33 ) }
    dend_122 { pt3dadd( -132.911, -400.391, 3.5418, 0.59 ) }
    dend_122 { pt3dadd( -132.778, -400.485, 3.51913, 0.59 ) }
    dend_122 { pt3dadd( -133.11, -400.523, 3.48835, 0.59 ) }
    dend_122 { pt3dadd( -134.224, -400.749, 3.35559, 0.59 ) }
    dend_122 { pt3dadd( -134.737, -400.876, 3.28726, 0.74 ) }
    dend_122 { pt3dadd( -136.237, -401.344, 2.99294, 0.66 ) }
    dend_122 { pt3dadd( -136.936, -401.592, 2.82074, 0.37 ) }
    dend_122 { pt3dadd( -136.997, -401.621, 2.80119, 0.37 ) }
    dend_122 { pt3dadd( -136.713, -402.263, 2.39584, 0.37 ) }
    dend_122 { pt3dadd( -136.684, -402.316, 2.36084, 0.37 ) }
    dend_122 { pt3dadd( -136.225, -403.077, 1.87097, 0.37 ) }
    dend_122 { pt3dadd( -136.185, -403.135, 1.83475, 0.37 ) }
    dend_122 { pt3dadd( -135.772, -403.729, 1.45253, 0.37 ) }
    dend_122 { pt3dadd( -135.734, -403.789, 1.41255, 0.37 ) }
    dend_122 { pt3dadd( -135.307, -404.672, 0.785354, 0.37 ) }
    // Section: dend_106, id: dend_106, parent: dend_104 (entry count 82/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( -32.7793, -369.77, 1.22642, 0.52 ) }
    dend_106 { pt3dadd( -32.8047, -370.913, 1.35855, 0.52 ) }
    dend_106 { pt3dadd( -32.835, -371.842, 1.28779, 0.52 ) }
    dend_106 { pt3dadd( -32.8833, -373.135, 1.1028, 0.52 ) }
    dend_106 { pt3dadd( -32.8922, -373.296, 1.07444, 0.52 ) }
    dend_106 { pt3dadd( -32.9986, -374.923, 0.767777, 0.52 ) }
    dend_106 { pt3dadd( -33.004, -374.992, 0.75423, 0.52 ) }
    dend_106 { pt3dadd( -33.1335, -377.017, 0.194762, 0.52 ) }
    dend_106 { pt3dadd( -33.1382, -377.072, 0.177403, 0.52 ) }
    dend_106 { pt3dadd( -33.2775, -378.155, -0.19974, 0.52 ) }
    dend_106 { pt3dadd( -33.2921, -378.241, -0.228628, 0.52 ) }
    dend_106 { pt3dadd( -33.3322, -378.415, -0.287458, 0.88 ) }
    dend_106 { pt3dadd( -33.3433, -378.471, -0.299682, 0.88 ) }
    dend_106 { pt3dadd( -33.422, -378.974, -0.293979, 1.11 ) }
    dend_106 { pt3dadd( -33.4282, -379.032, -0.294047, 1.11 ) }
    dend_106 { pt3dadd( -33.4598, -379.746, -0.296158, 1.11 ) }
    dend_106 { pt3dadd( -33.4626, -379.844, -0.296873, 1.11 ) }
    dend_106 { pt3dadd( -33.4682, -380.634, -0.301311, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_106 { pt3dadd( -33.4681, -380.731, -0.301577, 0.81 ) }
    dend_106 { pt3dadd( -33.4523, -381.533, -0.311828, 0.81 ) }
    dend_106 { pt3dadd( -33.4508, -381.604, -0.312572, 0.81 ) }
    // Section: dend_105, id: dend_105, parent: dend_104 (entry count 3/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( -32.7793, -369.77, 1.22642, 0.22 ) }
    dend_105 { pt3dadd( -33.3104, -370.001, 1.489, 0.22 ) }
    dend_105 { pt3dadd( -33.8181, -370.225, 1.83923, 0.22 ) }
    dend_105 { pt3dadd( -33.9705, -370.298, 1.95594, 0.22 ) }
    dend_105 { pt3dadd( -35.0443, -370.854, 2.80055, 0.22 ) }
    dend_105 { pt3dadd( -35.8848, -371.328, 3.47308, 0.22 ) }
    dend_105 { pt3dadd( -35.9456, -371.366, 3.52232, 0.22 ) }
    dend_105 { pt3dadd( -36.7706, -371.939, 4.44475, 0.29 ) }
    dend_105 { pt3dadd( -36.9987, -372.125, 4.79657, 0.29 ) }
    dend_105 { pt3dadd( -37.1234, -372.28, 5.10365, 0.44 ) }
    dend_105 { pt3dadd( -37.1343, -372.409, 5.3625, 0.44 ) }
    dend_105 { pt3dadd( -37.1101, -372.555, 5.62182, 0.44 ) }
    dend_105 { pt3dadd( -37.0982, -373.501, 7.04471, 0.22 ) }
    dend_105 { pt3dadd( -37.0999, -373.543, 7.10074, 0.22 ) }
    dend_105 { pt3dadd( -37.1554, -374.148, 7.81463, 0.22 ) }
    dend_105 { pt3dadd( -37.1721, -374.249, 7.91265, 0.22 ) }
    dend_105 { pt3dadd( -37.469, -375.456, 8.92669, 0.22 ) }
    dend_105 { pt3dadd( -37.8175, -376.55, 9.66033, 0.22 ) }
    dend_105 { pt3dadd( -37.8694, -376.678, 9.71902, 0.22 ) }
    dend_105 { pt3dadd( -38.2639, -377.409, 9.95809, 0.22 ) }
    dend_105 { pt3dadd( -38.7586, -378.061, 10.0273, 0.22 ) }
    dend_105 { pt3dadd( -38.8597, -378.164, 9.98742, 0.59 ) }
    dend_105 { pt3dadd( -39.629, -378.657, 9.29915, 0.59 ) }
    dend_105 { pt3dadd( -40.3988, -378.997, 8.46537, 0.22 ) }
    dend_105 { pt3dadd( -40.9802, -379.168, 7.82386, 0.22 ) }
    dend_105 { pt3dadd( -41.0269, -379.172, 7.77101, 0.22 ) }
    dend_105 { pt3dadd( -41.2243, -379.167, 7.53907, 0.66 ) }
    dend_105 { pt3dadd( -41.5377, -379.172, 7.20869, 0.66 ) }
    // Section: dend_99, id: dend_99, parent: dend_97 (entry count 31/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( -9.87496, -373.131, -39.4493, 0.88 ) }
    dend_99 { pt3dadd( -11.0838, -374.778, -43.0071, 0.88 ) }
    dend_99 { pt3dadd( -11.2455, -375.067, -43.4896, 0.88 ) }
    dend_99 { pt3dadd( -11.271, -375.126, -43.5757, 0.88 ) }
    dend_99 { pt3dadd( -11.4858, -375.704, -44.3545, 0.29 ) }
    dend_99 { pt3dadd( -11.641, -376.198, -44.9347, 0.29 ) }
    dend_99 { pt3dadd( -11.6559, -376.252, -44.9908, 0.29 ) }
    dend_99 { pt3dadd( -11.7913, -377.263, -45.3912, 0.29 ) }
    dend_99 { pt3dadd( -11.8838, -377.926, -45.7334, 0.52 ) }
    dend_99 { pt3dadd( -11.898, -378.005, -45.779, 0.52 ) }
    dend_99 { pt3dadd( -12.0541, -378.617, -46.1556, 0.52 ) }
    dend_99 { pt3dadd( -12.1737, -378.951, -46.3962, 0.52 ) }
    dend_99 { pt3dadd( -12.4928, -379.513, -46.8777, 0.29 ) }
    dend_99 { pt3dadd( -13.3265, -380.532, -47.8435, 0.66 ) }
    dend_99 { pt3dadd( -13.6041, -380.835, -48.1128, 0.66 ) }
    dend_99 { pt3dadd( -13.8627, -381.113, -48.406, 0.66 ) }
    dend_99 { pt3dadd( -13.9046, -381.155, -48.4586, 0.66 ) }
    dend_99 { pt3dadd( -14.4321, -381.771, -49.2323, 0.15 ) }
    dend_99 { pt3dadd( -14.6675, -382.161, -49.691, 0.44 ) }
    dend_99 { pt3dadd( -14.7751, -382.467, -50.0174, 0.44 ) }
    dend_99 { pt3dadd( -14.9607, -383.381, -50.9861, 0.29 ) }
    dend_99 { pt3dadd( -14.9652, -383.428, -51.037, 0.29 ) }
    dend_99 { pt3dadd( -14.987, -384.029, -51.6804, 0.29 ) }
    dend_99 { pt3dadd( -14.9402, -385.114, -52.7741, 0.29 ) }
    dend_99 { pt3dadd( -14.8688, -385.798, -53.4167, 0.59 ) }
    dend_99 { pt3dadd( -14.8159, -386.189, -53.7436, 0.59 ) }
    dend_99 { pt3dadd( -14.6451, -387.68, -54.7924, 0.59 ) }
    dend_99 { pt3dadd( -14.639, -387.74, -54.8307, 0.59 ) }
    dend_99 { pt3dadd( -14.5762, -388.464, -55.2431, 0.59 ) }
    dend_99 { pt3dadd( -14.4655, -389.295, -55.6035, 0.59 ) }
    dend_99 { pt3dadd( -14.3344, -390.251, -55.9247, 0.59 ) }
    dend_99 { pt3dadd( -14.257, -390.799, -56.0935, 1.18 ) }
    dend_99 { pt3dadd( -14.1975, -391.281, -56.1984, 1.55 ) }
    dend_99 { pt3dadd( -14.1894, -391.347, -56.2117, 1.55 ) }
    dend_99 { pt3dadd( -14.1301, -391.853, -56.321, 1.55 ) }
    dend_99 { pt3dadd( -14.1204, -391.946, -56.3445, 1.55 ) }
    dend_99 { pt3dadd( -14.027, -393.104, -56.6407, 0.52 ) }
    dend_99 { pt3dadd( -13.9348, -394.375, -56.9811, 0.52 ) }
    dend_99 { pt3dadd( -13.8594, -395.98, -57.4054, 0.52 ) }
    dend_99 { pt3dadd( -13.8541, -396.634, -57.5711, 1.03 ) }
    dend_99 { pt3dadd( -13.8794, -397.533, -57.7888, 1.03 ) }
    dend_99 { pt3dadd( -13.9321, -398.572, -58.0204, 1.03 ) }
    dend_99 { pt3dadd( -13.9369, -398.64, -58.0315, 1.03 ) }
    dend_99 { pt3dadd( -14.0004, -399.561, -58.1495, 1.4 ) }
    dend_99 { pt3dadd( -14.0288, -400.103, -58.1816, 1.4 ) }
    dend_99 { pt3dadd( -14.0266, -400.321, -58.1774, 1.4 ) }
    dend_99 { pt3dadd( -14.0034, -400.546, -58.1629, 1.4 ) }
    dend_99 { pt3dadd( -13.8299, -401.574, -58.097, 0.88 ) }
    dend_99 { pt3dadd( -13.6397, -402.495, -58.0108, 0.88 ) }
    dend_99 { pt3dadd( -13.4764, -403.153, -57.9343, 0.88 ) }
    dend_99 { pt3dadd( -13.3144, -403.702, -57.8637, 0.44 ) }
    dend_99 { pt3dadd( -12.9178, -404.976, -57.6905, 0.44 ) }
    dend_99 { pt3dadd( -12.8965, -405.041, -57.6792, 0.44 ) }
    dend_99 { pt3dadd( -12.6572, -405.742, -57.5358, 1.03 ) }
    dend_99 { pt3dadd( -12.4969, -406.25, -57.4189, 1.33 ) }
    dend_99 { pt3dadd( -12.3605, -406.736, -57.3113, 1.33 ) }
    dend_99 { pt3dadd( -12.3448, -406.802, -57.2987, 1.33 ) }
    dend_99 { pt3dadd( -12.1595, -407.774, -57.1373, 0.44 ) }
    dend_99 { pt3dadd( -12.0182, -408.858, -56.9906, 0.29 ) }
    dend_99 { pt3dadd( -11.9381, -409.915, -56.8154, 0.15 ) }
    dend_99 { pt3dadd( -11.9048, -410.934, -56.6067, 0.15 ) }
    dend_99 { pt3dadd( -11.9052, -412.017, -56.3602, 0.15 ) }
    dend_99 { pt3dadd( -11.9035, -412.173, -56.3228, 0.81 ) }
    dend_99 { pt3dadd( -11.8931, -412.77, -56.1738, 0.81 ) }
    dend_99 { pt3dadd( -11.848, -414.086, -55.773, 0.22 ) }
    dend_99 { pt3dadd( -11.7854, -415.317, -55.3503, 0.22 ) }
    dend_99 { pt3dadd( -11.7811, -415.383, -55.3245, 0.22 ) }
    dend_99 { pt3dadd( -11.6623, -416.579, -54.8342, 0.22 ) }
    dend_99 { pt3dadd( -11.6457, -416.688, -54.7932, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_99 { pt3dadd( -11.628, -416.764, -54.7709, 0.52 ) }
    dend_99 { pt3dadd( -11.4736, -417.398, -54.735, 0.52 ) }
    // Section: dend_98, id: dend_98, parent: dend_97 (entry count 2/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( -9.87496, -373.131, -39.4493, 0.29 ) }
    dend_98 { pt3dadd( -11.5985, -373.315, -43.2977, 0.29 ) }
    dend_98 { pt3dadd( -11.7594, -373.332, -43.657, 0.59 ) }
    dend_98 { pt3dadd( -11.9998, -373.358, -44.1936, 0.59 ) }
    dend_98 { pt3dadd( -12.128, -373.371, -44.4799, 0.88 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 7/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -75.4883, 269.283, -53.3222, 0.37 ) }
    dend_67 { pt3dadd( -75.6023, 270.029, -53.1963, 0.37 ) }
    dend_67 { pt3dadd( -75.7353, 270.92, -53.0081, 0.37 ) }
    dend_67 { pt3dadd( -75.7463, 270.998, -52.9908, 0.37 ) }
    dend_67 { pt3dadd( -75.9166, 272.486, -52.6549, 0.37 ) }
    dend_67 { pt3dadd( -76.083, 274.131, -52.2956, 0.37 ) }
    dend_67 { pt3dadd( -76.1661, 275.18, -52.0772, 0.74 ) }
    dend_67 { pt3dadd( -76.1812, 275.47, -52.02, 1.03 ) }
    dend_67 { pt3dadd( -76.2142, 276.187, -51.8763, 1.18 ) }
    dend_67 { pt3dadd( -76.2148, 276.582, -51.807, 1.33 ) }
    dend_67 { pt3dadd( -76.1552, 277.341, -51.6985, 0.81 ) }
    dend_67 { pt3dadd( -76.0824, 277.927, -51.7012, 0.29 ) }
    dend_67 { pt3dadd( -76.0729, 277.995, -51.7088, 0.29 ) }
    dend_67 { pt3dadd( -75.9983, 278.508, -51.7793, 0.29 ) }
    dend_67 { pt3dadd( -75.8235, 279.693, -51.9665, 0.29 ) }
    dend_67 { pt3dadd( -75.7645, 280.108, -52.0344, 0.66 ) }
    dend_67 { pt3dadd( -75.5503, 281.479, -52.2799, 0.15 ) }
    dend_67 { pt3dadd( -75.4853, 281.903, -52.361, 1.11 ) }
    dend_67 { pt3dadd( -75.3508, 282.727, -52.5264, 1.11 ) }
    dend_67 { pt3dadd( -75.3389, 282.796, -52.5415, 1.11 ) }
    dend_67 { pt3dadd( -75.1964, 283.696, -52.7643, 1.33 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 28/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -75.4883, 269.283, -53.3222, 0.22 ) }
    dend_66 { pt3dadd( -75.4158, 269.282, -53.329, 0.22 ) }
    dend_66 { pt3dadd( -74.125, 269.005, -53.4908, 0.22 ) }
    dend_66 { pt3dadd( -74.0147, 268.975, -53.5124, 0.52 ) }
    dend_66 { pt3dadd( -73.9486, 268.955, -53.5269, 0.52 ) }
    dend_66 { pt3dadd( -73.4156, 268.785, -53.7112, 0.52 ) }
    dend_66 { pt3dadd( -72.9872, 268.68, -53.8742, 0.22 ) }
    dend_66 { pt3dadd( -71.3802, 268.336, -54.5405, 0.22 ) }
    dend_66 { pt3dadd( -70.9754, 268.254, -54.7248, 0.74 ) }
    dend_66 { pt3dadd( -70.5915, 268.184, -54.8988, 0.74 ) }
    dend_66 { pt3dadd( -69.5092, 268.013, -55.3867, 0.15 ) }
    dend_66 { pt3dadd( -67.8174, 267.813, -56.2007, 0.15 ) }
    dend_66 { pt3dadd( -67.4879, 267.792, -56.3563, 0.59 ) }
    dend_66 { pt3dadd( -67.351, 267.795, -56.4244, 0.59 ) }
    dend_66 { pt3dadd( -67.2864, 267.796, -56.453, 0.59 ) }
    dend_66 { pt3dadd( -67.2118, 267.797, -56.4838, 0.15 ) }
    dend_66 { pt3dadd( -65.6981, 267.773, -56.9938, 0.15 ) }
    dend_66 { pt3dadd( -65.43, 267.749, -57.1276, 0.81 ) }
    dend_66 { pt3dadd( -65.3591, 267.743, -57.1655, 0.81 ) }
    dend_66 { pt3dadd( -65.1017, 267.723, -57.3066, 0.81 ) }
    dend_66 { pt3dadd( -65.0312, 267.717, -57.3454, 0.81 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 49/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 79.0529, 286.067, -61.32, 0.52 ) }
    dend_38 { pt3dadd( 79.6583, 286.559, -61.7643, 0.52 ) }
    dend_38 { pt3dadd( 80.3636, 287.126, -62.1913, 0.37 ) }
    dend_38 { pt3dadd( 80.8085, 287.483, -62.4607, 0.37 ) }
    dend_38 { pt3dadd( 81.4262, 287.979, -62.8347, 0.96 ) }
    dend_38 { pt3dadd( 81.9382, 288.391, -63.1448, 1.33 ) }
    dend_38 { pt3dadd( 81.9942, 288.436, -63.1787, 1.33 ) }
    dend_38 { pt3dadd( 82.7443, 289.051, -63.5453, 1.62 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 57/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 79.0529, 286.067, -61.32, 0.22 ) }
    dend_35 { pt3dadd( 78.883, 287.672, -61.001, 0.22 ) }
    dend_35 { pt3dadd( 78.8706, 287.767, -60.9859, 0.22 ) }
    dend_35 { pt3dadd( 78.5878, 289.37, -60.7855, 0.22 ) }
    dend_35 { pt3dadd( 78.5415, 289.583, -60.7643, 0.74 ) }
    dend_35 { pt3dadd( 78.4932, 289.783, -60.7469, 0.74 ) }
    dend_35 { pt3dadd( 78.2768, 290.585, -60.6852, 0.88 ) }
    dend_35 { pt3dadd( 78.0983, 291.205, -60.6852, 0.88 ) }
    dend_35 { pt3dadd( 77.8101, 291.972, -60.6852, 0.44 ) }
    dend_35 { pt3dadd( 77.4379, 292.656, -60.7475, 0.29 ) }
    dend_35 { pt3dadd( 77.359, 292.782, -60.7699, 0.29 ) }
    dend_35 { pt3dadd( 77.12, 293.123, -60.8574, 0.29 ) }
    dend_35 { pt3dadd( 77.063, 293.199, -60.8821, 0.66 ) }
    dend_35 { pt3dadd( 76.6938, 293.704, -61.0847, 0.88 ) }
    dend_35 { pt3dadd( 76.0439, 294.635, -61.4933, 0.96 ) }
    dend_35 { pt3dadd( 75.7135, 295.116, -61.6971, 0.52 ) }
    dend_35 { pt3dadd( 75.2454, 295.807, -61.9625, 0.44 ) }
    dend_35 { pt3dadd( 74.8847, 296.351, -62.1534, 0.44 ) }
    dend_35 { pt3dadd( 74.4686, 296.956, -62.3881, 0.44 ) }
    dend_35 { pt3dadd( 74.2148, 297.316, -62.5317, 1.18 ) }
    dend_35 { pt3dadd( 73.7149, 297.995, -62.7746, 1.47 ) }
    dend_35 { pt3dadd( 73.415, 298.395, -62.9288, 1.47 ) }
    dend_35 { pt3dadd( 73.3657, 298.453, -62.9523, 1.47 ) }
    dend_35 { pt3dadd( 72.4865, 299.346, -63.2942, 0.29 ) }
    dend_35 { pt3dadd( 72.4442, 299.385, -63.3075, 0.29 ) }
    dend_35 { pt3dadd( 71.829, 299.927, -63.4666, 0.29 ) }
    dend_35 { pt3dadd( 70.9354, 300.698, -63.6572, 0.29 ) }
    dend_35 { pt3dadd( 70.3787, 301.169, -63.7389, 0.29 ) }
    dend_35 { pt3dadd( 69.7565, 301.712, -63.7873, 0.29 ) }
    dend_35 { pt3dadd( 69.7055, 301.76, -63.7871, 0.29 ) }
    dend_35 { pt3dadd( 68.7717, 302.659, -63.7871, 0.29 ) }
    dend_35 { pt3dadd( 68.7227, 302.708, -63.7871, 0.29 ) }
    dend_35 { pt3dadd( 68.1041, 303.37, -63.8301, 0.74 ) }
    dend_35 { pt3dadd( 67.5804, 304.022, -63.9016, 1.11 ) }
    dend_35 { pt3dadd( 67.2247, 304.477, -63.9692, 1.4 ) }
    dend_35 { pt3dadd( 67.1824, 304.53, -63.9788, 1.4 ) }
    dend_35 { pt3dadd( 66.7647, 305.106, -64.0935, 1.4 ) }
    dend_35 { pt3dadd( 66.1547, 305.95, -64.2665, 0.29 ) }
    dend_35 { pt3dadd( 66.115, 306.008, -64.281, 0.29 ) }
    dend_35 { pt3dadd( 65.5619, 306.803, -64.5057, 0.29 ) }
    dend_35 { pt3dadd( 65.5165, 306.868, -64.524, 0.29 ) }
    dend_35 { pt3dadd( 64.874, 307.819, -64.784, 0.29 ) }
    dend_35 { pt3dadd( 64.8119, 307.917, -64.8087, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_35 { pt3dadd( 64.4271, 308.588, -64.9302, 0.29 ) }
    dend_35 { pt3dadd( 64.3101, 308.819, -64.9761, 0.59 ) }
    dend_35 { pt3dadd( 64.1377, 309.289, -65.0881, 1.03 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 3/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 43.898, 137.424, -110.642, 0.66 ) }
    dend_29 { pt3dadd( 42.3231, 135.912, -113.542, 0.66 ) }
    dend_29 { pt3dadd( 41.8826, 135.486, -114.307, 0.66 ) }
    dend_29 { pt3dadd( 40.435, 134.137, -116.572, 0.37 ) }
    dend_29 { pt3dadd( 39.6095, 133.443, -117.692, 0.37 ) }
    dend_29 { pt3dadd( 39.0758, 133.021, -118.356, 0.66 ) }
    dend_29 { pt3dadd( 38.658, 132.69, -118.885, 0.66 ) }
    dend_29 { pt3dadd( 38.6131, 132.656, -118.927, 0.66 ) }
    dend_29 { pt3dadd( 38.125, 132.352, -119.519, 0.66 ) }
    dend_29 { pt3dadd( 37.549, 132.112, -120.338, 0.37 ) }
    dend_29 { pt3dadd( 37.5184, 132.099, -120.4, 0.37 ) }
    dend_29 { pt3dadd( 36.7106, 131.677, -122.169, 0.37 ) }
    dend_29 { pt3dadd( 36.6733, 131.654, -122.259, 0.37 ) }
    dend_29 { pt3dadd( 35.7457, 130.925, -124.782, 0.37 ) }
    dend_29 { pt3dadd( 35.7224, 130.901, -124.855, 0.37 ) }
    dend_29 { pt3dadd( 35.1627, 130.186, -126.737, 0.37 ) }
    dend_29 { pt3dadd( 34.8852, 129.853, -127.605, 0.37 ) }
    dend_29 { pt3dadd( 34.8604, 129.825, -127.676, 0.37 ) }
    dend_29 { pt3dadd( 34.3969, 129.306, -128.841, 0.88 ) }
    dend_29 { pt3dadd( 34.193, 129.058, -129.333, 1.33 ) }
    dend_29 { pt3dadd( 33.5249, 128.337, -131.016, 0.88 ) }
    dend_29 { pt3dadd( 32.7433, 127.621, -132.886, 0.29 ) }
    dend_29 { pt3dadd( 32.7116, 127.594, -132.954, 0.29 ) }
    dend_29 { pt3dadd( 32.1265, 127.129, -134.135, 0.29 ) }
    dend_29 { pt3dadd( 31.6043, 126.718, -135.208, 0.96 ) }
    dend_29 { pt3dadd( 30.4852, 125.877, -137.729, 0.59 ) }
    dend_29 { pt3dadd( 30.1716, 125.648, -138.454, 0.59 ) }
    dend_29 { pt3dadd( 29.7637, 125.343, -139.422, 0.59 ) }
    dend_29 { pt3dadd( 29.1644, 124.897, -140.922, 1.11 ) }
    dend_29 { pt3dadd( 28.2856, 124.258, -143.323, 1.69 ) }
    dend_29 { pt3dadd( 27.302, 123.609, -145.929, 1.69 ) }
    dend_29 { pt3dadd( 26.5917, 123.16, -147.951, 1.69 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 35/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 43.898, 137.424, -110.642, 0.44 ) }
    dend_28 { pt3dadd( 44.5708, 138.462, -111.416, 0.44 ) }
    dend_28 { pt3dadd( 44.5973, 138.509, -111.459, 0.44 ) }
    dend_28 { pt3dadd( 45.1083, 139.47, -112.347, 0.44 ) }
    dend_28 { pt3dadd( 45.4604, 140.143, -112.935, 0.44 ) }
    dend_28 { pt3dadd( 45.6372, 140.492, -113.199, 0.44 ) }
    dend_28 { pt3dadd( 46.1267, 141.497, -113.984, 0.44 ) }
    dend_28 { pt3dadd( 46.8607, 143.063, -115.078, 0.29 ) }
    dend_28 { pt3dadd( 46.8926, 143.135, -115.127, 0.29 ) }
    dend_28 { pt3dadd( 47.1604, 143.804, -115.57, 0.29 ) }
    dend_28 { pt3dadd( 47.5529, 144.741, -116.331, 0.29 ) }
    dend_28 { pt3dadd( 48.063, 145.97, -117.483, 1.11 ) }
    dend_28 { pt3dadd( 48.2409, 146.411, -117.938, 1.47 ) }
    dend_28 { pt3dadd( 48.2587, 146.461, -117.986, 1.47 ) }
    dend_28 { pt3dadd( 48.3364, 146.713, -118.23, 1.47 ) }
    dend_28 { pt3dadd( 48.8126, 148.511, -120.042, 0.37 ) }
    dend_28 { pt3dadd( 48.9493, 149.117, -120.659, 0.37 ) }
    dend_28 { pt3dadd( 48.9607, 149.169, -120.703, 0.37 ) }
    dend_28 { pt3dadd( 49.0831, 149.839, -121.297, 1.11 ) }
    dend_28 { pt3dadd( 49.127, 150.012, -121.425, 1.11 ) }
    dend_28 { pt3dadd( 49.289, 150.453, -121.644, 1.77 ) }
    dend_28 { pt3dadd( 49.3126, 150.509, -121.659, 1.77 ) }
    dend_28 { pt3dadd( 49.5862, 151.117, -121.8, 1.77 ) }
    dend_28 { pt3dadd( 50.2152, 152.485, -122.12, 2.06 ) }
    dend_28 { pt3dadd( 50.9526, 153.968, -122.521, 0.37 ) }
    dend_28 { pt3dadd( 51.722, 155.511, -122.911, 0.37 ) }
    dend_28 { pt3dadd( 51.8731, 155.796, -122.982, 1.33 ) }
    dend_28 { pt3dadd( 52.3767, 156.709, -123.196, 1.33 ) }
    dend_28 { pt3dadd( 52.4098, 156.768, -123.208, 1.33 ) }
    dend_28 { pt3dadd( 52.8836, 157.639, -123.316, 0.29 ) }
    dend_28 { pt3dadd( 53.4923, 158.846, -123.539, 0.29 ) }
    dend_28 { pt3dadd( 53.8757, 159.693, -123.751, 0.29 ) }
    dend_28 { pt3dadd( 53.9034, 159.756, -123.769, 0.29 ) }
    dend_28 { pt3dadd( 54.4555, 161.069, -124.129, 0.29 ) }
    dend_28 { pt3dadd( 55.0508, 162.604, -124.61, 0.29 ) }
    dend_28 { pt3dadd( 55.3717, 163.507, -124.901, 1.18 ) }
    dend_28 { pt3dadd( 55.7875, 164.72, -125.315, 1.55 ) }
    dend_28 { pt3dadd( 56.1192, 165.739, -125.648, 1.92 ) }
    dend_28 { pt3dadd( 56.3943, 166.613, -125.909, 1.92 ) }
    dend_28 { pt3dadd( 56.9167, 168.205, -126.344, 0.88 ) }
    dend_28 { pt3dadd( 57.3973, 169.602, -126.701, 0.88 ) }
    dend_28 { pt3dadd( 57.5437, 170.024, -126.792, 0.88 ) }
    dend_28 { pt3dadd( 58.2687, 172.049, -127.173, 0.22 ) }
    dend_28 { pt3dadd( 58.9951, 174.115, -127.535, 0.22 ) }
    dend_28 { pt3dadd( 59.4132, 175.301, -127.711, 0.22 ) }
    dend_28 { pt3dadd( 59.6704, 176.021, -127.784, 0.88 ) }
    dend_28 { pt3dadd( 60.0243, 177.017, -127.88, 1.18 ) }
    dend_28 { pt3dadd( 60.3821, 178.075, -127.97, 1.33 ) }
    dend_28 { pt3dadd( 60.4034, 178.141, -127.974, 1.33 ) }
    dend_28 { pt3dadd( 60.6319, 178.888, -128.01, 1.33 ) }
    dend_28 { pt3dadd( 60.8073, 179.605, -128.02, 0.37 ) }
    dend_28 { pt3dadd( 60.9952, 180.369, -128.024, 0.37 ) }
    dend_28 { pt3dadd( 61.2005, 181.18, -128.05, 0.37 ) }
    dend_28 { pt3dadd( 61.2005, 181.18, -128.05, 0.74 ) }
    dend_28 { pt3dadd( 61.2259, 181.256, -128.057, 0.74 ) }
    dend_28 { pt3dadd( 61.5406, 182.143, -128.158, 0.74 ) }
    dend_28 { pt3dadd( 62.0089, 183.396, -128.326, 0.22 ) }
    dend_28 { pt3dadd( 62.0343, 183.46, -128.335, 0.22 ) }
    dend_28 { pt3dadd( 62.5755, 184.734, -128.513, 0.22 ) }
    dend_28 { pt3dadd( 62.9162, 185.535, -128.629, 1.11 ) }
    dend_28 { pt3dadd( 63.1539, 186.13, -128.712, 1.84 ) }
    dend_28 { pt3dadd( 63.1886, 186.222, -128.715, 1.84 ) }
    dend_28 { pt3dadd( 63.3912, 186.781, -128.68, 1.84 ) }
    dend_28 { pt3dadd( 63.4168, 186.845, -128.673, 1.84 ) }
    dend_28 { pt3dadd( 63.8717, 187.898, -128.516, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_28 { pt3dadd( 64.3637, 188.992, -128.359, 0.81 ) }
    dend_28 { pt3dadd( 65.009, 190.41, -128.154, 0.29 ) }
    dend_28 { pt3dadd( 65.4295, 191.345, -128.017, 0.29 ) }
    dend_28 { pt3dadd( 65.8363, 192.261, -127.886, 0.29 ) }
    dend_28 { pt3dadd( 66.3687, 193.539, -127.718, 0.29 ) }
    dend_28 { pt3dadd( 67.1374, 195.482, -127.485, 0.29 ) }
    dend_28 { pt3dadd( 67.2277, 195.721, -127.467, 0.88 ) }
    dend_28 { pt3dadd( 67.2498, 195.787, -127.465, 0.88 ) }
    dend_28 { pt3dadd( 67.5067, 196.622, -127.45, 0.88 ) }
    dend_28 { pt3dadd( 67.9111, 198.074, -127.424, 0.29 ) }
    dend_28 { pt3dadd( 67.9677, 198.273, -127.423, 0.29 ) }
    dend_28 { pt3dadd( 68.3817, 199.602, -127.442, 0.29 ) }
    dend_28 { pt3dadd( 68.4977, 199.948, -127.454, 0.88 ) }
    dend_28 { pt3dadd( 68.6546, 200.396, -127.47, 0.88 ) }
    dend_28 { pt3dadd( 68.9857, 201.287, -127.509, 0.88 ) }
    dend_28 { pt3dadd( 69.2209, 201.869, -127.539, 0.29 ) }
    dend_28 { pt3dadd( 69.8284, 203.36, -127.616, 0.29 ) }
    dend_28 { pt3dadd( 69.8547, 203.423, -127.619, 0.29 ) }
    dend_28 { pt3dadd( 70.2482, 204.332, -127.66, 0.29 ) }
    dend_28 { pt3dadd( 70.2806, 204.404, -127.666, 1.11 ) }
    dend_28 { pt3dadd( 70.3325, 204.502, -127.677, 1.11 ) }
    dend_28 { pt3dadd( 70.7488, 205.201, -127.761, 1.11 ) }
    dend_28 { pt3dadd( 71.1771, 205.831, -127.851, 0.66 ) }
    dend_28 { pt3dadd( 71.5198, 206.302, -127.922, 0.37 ) }
    dend_28 { pt3dadd( 72.5013, 207.507, -128.112, 0.29 ) }
    dend_28 { pt3dadd( 73.6312, 208.794, -128.312, 0.29 ) }
    dend_28 { pt3dadd( 73.9063, 209.084, -128.356, 0.81 ) }
    dend_28 { pt3dadd( 74.307, 209.476, -128.412, 1.18 ) }
    dend_28 { pt3dadd( 74.3728, 209.538, -128.423, 1.18 ) }
    dend_28 { pt3dadd( 75.0099, 210.146, -128.538, 1.18 ) }
    dend_28 { pt3dadd( 75.389, 210.506, -128.603, 1.11 ) }
    dend_28 { pt3dadd( 75.738, 210.85, -128.68, 0.88 ) }
    dend_28 { pt3dadd( 76.3766, 211.51, -128.835, 0.52 ) }
    dend_28 { pt3dadd( 77.2954, 212.518, -129.073, 0.29 ) }
    dend_28 { pt3dadd( 77.9124, 213.25, -129.315, 0.29 ) }
    dend_28 { pt3dadd( 77.9531, 213.303, -129.336, 0.29 ) }
    dend_28 { pt3dadd( 78.2551, 213.722, -129.516, 0.96 ) }
    dend_28 { pt3dadd( 78.3385, 213.844, -129.566, 0.96 ) }
    dend_28 { pt3dadd( 78.6743, 214.352, -129.786, 0.96 ) }
    dend_28 { pt3dadd( 79.8041, 216.114, -130.483, 0.29 ) }
    dend_28 { pt3dadd( 79.8458, 216.18, -130.507, 0.29 ) }
    dend_28 { pt3dadd( 80.2594, 216.821, -130.723, 0.29 ) }
    dend_28 { pt3dadd( 81.0692, 218.085, -131.099, 0.29 ) }
    dend_28 { pt3dadd( 81.5726, 218.856, -131.302, 0.59 ) }
    dend_28 { pt3dadd( 82.1857, 219.771, -131.513, 0.59 ) }
    dend_28 { pt3dadd( 82.7839, 220.649, -131.655, 0.74 ) }
    dend_28 { pt3dadd( 83.2271, 221.298, -131.762, 0.88 ) }
    dend_28 { pt3dadd( 83.6065, 221.863, -131.847, 0.88 ) }
    dend_28 { pt3dadd( 83.643, 221.922, -131.854, 0.88 ) }
    dend_28 { pt3dadd( 84.0367, 222.598, -131.898, 0.29 ) }
    dend_28 { pt3dadd( 84.5345, 223.564, -131.953, 0.29 ) }
    dend_28 { pt3dadd( 84.5681, 223.635, -131.956, 0.29 ) }
    dend_28 { pt3dadd( 84.9666, 224.454, -131.986, 1.11 ) }
    dend_28 { pt3dadd( 85.3781, 225.217, -131.948, 1.92 ) }
    dend_28 { pt3dadd( 86.008, 226.254, -131.826, 0.29 ) }
    dend_28 { pt3dadd( 86.4838, 226.967, -131.694, 0.29 ) }
    dend_28 { pt3dadd( 86.5236, 227.022, -131.682, 0.29 ) }
    dend_28 { pt3dadd( 87.111, 227.789, -131.507, 0.29 ) }
    dend_28 { pt3dadd( 88.1146, 228.983, -131.134, 0.29 ) }
    dend_28 { pt3dadd( 88.6089, 229.537, -130.922, 0.29 ) }
    dend_28 { pt3dadd( 88.748, 229.693, -130.837, 1.03 ) }
    dend_28 { pt3dadd( 89.2881, 230.324, -130.483, 1.25 ) }
    dend_28 { pt3dadd( 89.5939, 230.699, -130.283, 1.25 ) }
    dend_28 { pt3dadd( 90.4687, 231.831, -129.709, 0.29 ) }
    dend_28 { pt3dadd( 90.9174, 232.422, -129.429, 0.88 ) }
    dend_28 { pt3dadd( 92.0232, 233.905, -128.712, 0.29 ) }
    dend_28 { pt3dadd( 93.2343, 235.512, -127.964, 0.29 ) }
    dend_28 { pt3dadd( 93.7967, 236.241, -127.642, 0.29 ) }
    dend_28 { pt3dadd( 94.0606, 236.586, -127.51, 0.81 ) }
    dend_28 { pt3dadd( 94.1507, 236.706, -127.475, 0.81 ) }
    dend_28 { pt3dadd( 94.95, 237.734, -127.234, 0.81 ) }
    dend_28 { pt3dadd( 95.7373, 238.714, -127.097, 0.81 ) }
    dend_28 { pt3dadd( 96.1183, 239.181, -127.028, 0.59 ) }
    dend_28 { pt3dadd( 96.6415, 239.835, -126.941, 0.29 ) }
    dend_28 { pt3dadd( 97.0661, 240.372, -126.89, 0.29 ) }
    dend_28 { pt3dadd( 97.4775, 240.896, -126.861, 1.11 ) }
    dend_28 { pt3dadd( 97.5179, 240.953, -126.861, 1.11 ) }
    dend_28 { pt3dadd( 97.8573, 241.462, -126.867, 1.55 ) }
    dend_28 { pt3dadd( 98.4874, 242.397, -126.879, 0.29 ) }
    dend_28 { pt3dadd( 98.9129, 242.916, -126.894, 0.22 ) }
    dend_28 { pt3dadd( 99.0152, 243.025, -126.899, 0.22 ) }
    dend_28 { pt3dadd( 100.629, 244.547, -126.973, 0.22 ) }
    dend_28 { pt3dadd( 100.788, 244.677, -126.995, 0.88 ) }
    dend_28 { pt3dadd( 101.196, 244.977, -127.078, 0.88 ) }
    dend_28 { pt3dadd( 102.911, 246.152, -127.41, 0.29 ) }
    dend_28 { pt3dadd( 103.16, 246.311, -127.453, 0.74 ) }
    dend_28 { pt3dadd( 104.034, 246.829, -127.591, 0.74 ) }
    dend_28 { pt3dadd( 105.448, 247.575, -127.792, 0.22 ) }
    dend_28 { pt3dadd( 106.383, 248.097, -127.907, 0.22 ) }
    dend_28 { pt3dadd( 107.418, 248.739, -128.116, 1.03 ) }
    dend_28 { pt3dadd( 107.872, 249.047, -128.241, 1.33 ) }
    dend_28 { pt3dadd( 108.499, 249.474, -128.436, 1.55 ) }
    dend_28 { pt3dadd( 108.93, 249.759, -128.539, 1.55 ) }
    dend_28 { pt3dadd( 108.988, 249.797, -128.548, 1.55 ) }
    dend_28 { pt3dadd( 110.675, 250.817, -128.862, 0.29 ) }
    dend_28 { pt3dadd( 111.798, 251.511, -129.091, 0.29 ) }
    dend_28 { pt3dadd( 111.92, 251.593, -129.109, 0.29 ) }
    dend_28 { pt3dadd( 113.148, 252.464, -129.221, 0.29 ) }
    dend_28 { pt3dadd( 113.227, 252.523, -129.222, 0.29 ) }
    dend_28 { pt3dadd( 113.885, 253.025, -129.124, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_28 { pt3dadd( 114.673, 253.633, -128.879, 0.29 ) }
    dend_28 { pt3dadd( 115.192, 254.062, -128.685, 0.29 ) }
    dend_28 { pt3dadd( 115.259, 254.121, -128.66, 0.29 ) }
    dend_28 { pt3dadd( 116.619, 255.372, -128.177, 0.29 ) }
    dend_28 { pt3dadd( 117.471, 256.181, -127.87, 0.59 ) }
    dend_28 { pt3dadd( 118.209, 256.906, -127.59, 0.59 ) }
    dend_28 { pt3dadd( 119.693, 258.394, -127.021, 0.15 ) }
    dend_28 { pt3dadd( 120.89, 259.619, -126.578, 0.15 ) }
    dend_28 { pt3dadd( 120.938, 259.67, -126.563, 0.15 ) }
    dend_28 { pt3dadd( 121.5, 260.289, -126.418, 0.22 ) }
    dend_28 { pt3dadd( 121.5, 260.289, -126.418, 1.11 ) }
    dend_28 { pt3dadd( 121.845, 260.708, -126.381, 1.11 ) }
    dend_28 { pt3dadd( 122.145, 261.083, -126.38, 1.11 ) }
    dend_28 { pt3dadd( 123.444, 262.751, -126.401, 0.15 ) }
    dend_28 { pt3dadd( 123.75, 263.155, -126.412, 0.66 ) }
    dend_28 { pt3dadd( 124.464, 264.106, -126.449, 0.66 ) }
    dend_28 { pt3dadd( 124.87, 264.655, -126.475, 0.96 ) }
    dend_28 { pt3dadd( 125.238, 265.157, -126.503, 0.81 ) }
    dend_28 { pt3dadd( 125.286, 265.223, -126.508, 0.81 ) }
    dend_28 { pt3dadd( 125.729, 265.859, -126.559, 0.22 ) }
    dend_28 { pt3dadd( 125.792, 265.943, -126.565, 0.22 ) }
    dend_28 { pt3dadd( 127.027, 267.587, -126.66, 0.22 ) }
    dend_28 { pt3dadd( 127.213, 267.827, -126.668, 0.59 ) }
    dend_28 { pt3dadd( 127.263, 267.889, -126.668, 0.59 ) }
    dend_28 { pt3dadd( 127.609, 268.325, -126.668, 0.59 ) }
    dend_28 { pt3dadd( 127.655, 268.38, -126.668, 0.59 ) }
    dend_28 { pt3dadd( 128.091, 268.854, -126.724, 1.4 ) }
    dend_28 { pt3dadd( 128.806, 269.662, -126.859, 1.77 ) }
    dend_28 { pt3dadd( 129.419, 270.362, -126.984, 2.21 ) }
    dend_28 { pt3dadd( 129.836, 270.843, -127.074, 2.21 ) }
    dend_28 { pt3dadd( 130.741, 271.891, -127.274, 0.66 ) }
    dend_28 { pt3dadd( 132.553, 273.996, -127.685, 0.22 ) }
    dend_28 { pt3dadd( 134.181, 275.844, -128.062, 0.22 ) }
    dend_28 { pt3dadd( 134.227, 275.898, -128.073, 0.22 ) }
    dend_28 { pt3dadd( 134.554, 276.25, -128.157, 0.74 ) }
    dend_28 { pt3dadd( 134.979, 276.683, -128.254, 1.11 ) }
    dend_28 { pt3dadd( 135.028, 276.731, -128.265, 1.11 ) }
    dend_28 { pt3dadd( 135.506, 277.166, -128.361, 1.11 ) }
    dend_28 { pt3dadd( 135.614, 277.256, -128.384, 1.11 ) }
    dend_28 { pt3dadd( 137.833, 279.065, -128.866, 0.22 ) }
    dend_28 { pt3dadd( 140.392, 281.074, -129.13, 0.22 ) }
    dend_28 { pt3dadd( 141.091, 281.613, -129.138, 1.4 ) }
    dend_28 { pt3dadd( 141.382, 281.836, -129.112, 1.4 ) }
    dend_28 { pt3dadd( 141.87, 282.205, -129.021, 1.4 ) }
    dend_28 { pt3dadd( 141.927, 282.246, -129.005, 1.4 ) }
    dend_28 { pt3dadd( 144.781, 284.233, -127.758, 0.22 ) }
    dend_28 { pt3dadd( 146.375, 285.269, -126.942, 0.22 ) }
    dend_28 { pt3dadd( 147.245, 285.824, -126.481, 0.81 ) }
    dend_28 { pt3dadd( 147.685, 286.107, -126.271, 1.11 ) }
    dend_28 { pt3dadd( 148.422, 286.59, -125.949, 1.11 ) }
    dend_28 { pt3dadd( 148.472, 286.623, -125.931, 1.11 ) }
    dend_28 { pt3dadd( 149.437, 287.24, -125.741, 0.22 ) }
    dend_28 { pt3dadd( 149.502, 287.283, -125.725, 0.22 ) }
    dend_28 { pt3dadd( 151.107, 288.398, -125.327, 0.22 ) }
    dend_28 { pt3dadd( 151.493, 288.671, -125.181, 0.88 ) }
    dend_28 { pt3dadd( 151.548, 288.711, -125.155, 0.88 ) }
    dend_28 { pt3dadd( 151.99, 289.063, -124.887, 0.88 ) }
    dend_28 { pt3dadd( 153.312, 290.159, -123.98, 0.22 ) }
    dend_28 { pt3dadd( 154.303, 290.982, -123.285, 0.22 ) }
    dend_28 { pt3dadd( 155.175, 291.718, -122.665, 0.96 ) }
    dend_28 { pt3dadd( 155.82, 292.252, -122.249, 0.96 ) }
    dend_28 { pt3dadd( 157.654, 293.734, -121.2, 0.22 ) }
    dend_28 { pt3dadd( 158.404, 294.332, -120.822, 0.66 ) }
    dend_28 { pt3dadd( 158.983, 294.782, -120.587, 0.66 ) }
    dend_28 { pt3dadd( 159.696, 295.311, -120.351, 0.66 ) }
    dend_28 { pt3dadd( 160.243, 295.674, -120.247, 0.96 ) }
    dend_28 { pt3dadd( 161.151, 296.208, -120.141, 0.96 ) }
    dend_28 { pt3dadd( 161.767, 296.535, -120.132, 0.22 ) }
    dend_28 { pt3dadd( 161.828, 296.567, -120.131, 0.22 ) }
    dend_28 { pt3dadd( 162.776, 297.064, -120.106, 0.22 ) }
    dend_28 { pt3dadd( 164.322, 297.888, -120.2, 0.22 ) }
    dend_28 { pt3dadd( 164.752, 298.146, -120.255, 0.59 ) }
    dend_28 { pt3dadd( 165.161, 298.432, -120.327, 0.88 ) }
    dend_28 { pt3dadd( 165.329, 298.559, -120.362, 0.88 ) }
    dend_28 { pt3dadd( 165.995, 299.103, -120.55, 0.88 ) }
    dend_28 { pt3dadd( 167.567, 300.499, -121.1, 0.22 ) }
    dend_28 { pt3dadd( 168.839, 301.688, -121.624, 0.22 ) }
    dend_28 { pt3dadd( 170.198, 302.989, -122.218, 0.22 ) }
    dend_28 { pt3dadd( 170.244, 303.036, -122.239, 0.22 ) }
    dend_28 { pt3dadd( 171.021, 303.853, -122.609, 0.96 ) }
    dend_28 { pt3dadd( 171.626, 304.556, -122.889, 0.96 ) }
    dend_28 { pt3dadd( 172.321, 305.446, -123.179, 0.22 ) }
    dend_28 { pt3dadd( 172.545, 305.749, -123.273, 0.81 ) }
    dend_28 { pt3dadd( 172.796, 306.095, -123.371, 1.11 ) }
    dend_28 { pt3dadd( 174.389, 308.338, -123.894, 0.22 ) }
    dend_28 { pt3dadd( 175.549, 310.012, -124.188, 0.22 ) }
    dend_28 { pt3dadd( 175.786, 310.371, -124.269, 0.96 ) }
    dend_28 { pt3dadd( 176.193, 310.997, -124.435, 1.18 ) }
    dend_28 { pt3dadd( 176.358, 311.234, -124.507, 1.18 ) }
    dend_28 { pt3dadd( 176.691, 311.707, -124.651, 1.18 ) }
    dend_28 { pt3dadd( 176.73, 311.762, -124.673, 1.18 ) }
    dend_28 { pt3dadd( 177.689, 313.071, -125.334, 0.22 ) }
    dend_28 { pt3dadd( 177.734, 313.131, -125.365, 0.22 ) }
    dend_28 { pt3dadd( 179.411, 315.307, -126.536, 0.22 ) }
    dend_28 { pt3dadd( 180.557, 316.757, -127.284, 0.22 ) }
    dend_28 { pt3dadd( 181.465, 317.874, -127.805, 1.25 ) }
    dend_28 { pt3dadd( 181.507, 317.926, -127.825, 1.25 ) }
    dend_28 { pt3dadd( 181.95, 318.481, -128.003, 1.4 ) }
    dend_28 { pt3dadd( 181.992, 318.534, -128.02, 1.4 ) }
    dend_28 { pt3dadd( 182.512, 319.193, -128.24, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_59()
}

proc basic_shape_59() {
    dend_28 { pt3dadd( 184.827, 322.011, -129.068, 0.22 ) }
    dend_28 { pt3dadd( 185.589, 322.942, -129.274, 0.22 ) }
    dend_28 { pt3dadd( 185.653, 323.019, -129.289, 0.22 ) }
    dend_28 { pt3dadd( 185.92, 323.333, -129.342, 0.74 ) }
    dend_28 { pt3dadd( 185.965, 323.385, -129.349, 0.74 ) }
    dend_28 { pt3dadd( 186.467, 323.932, -129.399, 0.74 ) }
    dend_28 { pt3dadd( 186.695, 324.15, -129.408, 0.15 ) }
    dend_28 { pt3dadd( 188.601, 325.912, -129.559, 0.15 ) }
    dend_28 { pt3dadd( 188.788, 326.086, -129.579, 0.88 ) }
    dend_28 { pt3dadd( 188.912, 326.202, -129.595, 0.88 ) }
    dend_28 { pt3dadd( 189.402, 326.661, -129.665, 0.88 ) }
    dend_28 { pt3dadd( 190.205, 327.388, -129.826, 0.22 ) }
    dend_28 { pt3dadd( 191.005, 328.108, -130.063, 0.22 ) }
    dend_28 { pt3dadd( 191.056, 328.152, -130.084, 0.22 ) }
    dend_28 { pt3dadd( 191.288, 328.359, -130.185, 0.66 ) }
    dend_28 { pt3dadd( 191.638, 328.678, -130.377, 0.66 ) }
    dend_28 { pt3dadd( 192.61, 329.722, -131.094, 0.15 ) }
    dend_28 { pt3dadd( 192.999, 330.182, -131.427, 0.74 ) }
    dend_28 { pt3dadd( 193.037, 330.231, -131.464, 0.74 ) }
    dend_28 { pt3dadd( 193.378, 330.69, -131.903, 0.74 ) }
    dend_28 { pt3dadd( 194.152, 331.803, -132.931, 0.22 ) }
    dend_28 { pt3dadd( 195.025, 333.176, -134.147, 0.22 ) }
    dend_28 { pt3dadd( 195.084, 333.275, -134.229, 0.22 ) }
    dend_28 { pt3dadd( 195.243, 333.535, -134.428, 0.88 ) }
    dend_28 { pt3dadd( 196.506, 335.535, -135.807, 0.22 ) }
    dend_28 { pt3dadd( 198.023, 337.819, -137.133, 0.22 ) }
    dend_28 { pt3dadd( 198.242, 338.127, -137.246, 1.11 ) }
    dend_28 { pt3dadd( 198.64, 338.65, -137.339, 1.4 ) }
    dend_28 { pt3dadd( 198.944, 339.037, -137.357, 0.22 ) }
    dend_28 { pt3dadd( 199.835, 340.112, -137.237, 0.22 ) }
    dend_28 { pt3dadd( 200.445, 340.806, -137.01, 0.22 ) }
    dend_28 { pt3dadd( 201.83, 342.271, -136.407, 0.22 ) }
    dend_28 { pt3dadd( 202.385, 342.835, -136.159, 0.66 ) }
    dend_28 { pt3dadd( 202.531, 342.983, -136.091, 0.66 ) }
    dend_28 { pt3dadd( 202.95, 343.406, -135.906, 0.66 ) }
    dend_28 { pt3dadd( 203.052, 343.506, -135.863, 0.66 ) }
    dend_28 { pt3dadd( 203.715, 344.058, -135.698, 0.66 ) }
    dend_28 { pt3dadd( 204.108, 344.318, -135.654, 0.22 ) }
    dend_28 { pt3dadd( 204.16, 344.348, -135.653, 0.22 ) }
    dend_28 { pt3dadd( 205.273, 344.948, -135.618, 0.22 ) }
    dend_28 { pt3dadd( 205.338, 344.981, -135.615, 0.22 ) }
    dend_28 { pt3dadd( 206.765, 345.649, -135.557, 0.22 ) }
    dend_28 { pt3dadd( 207.279, 345.9, -135.562, 1.03 ) }
    dend_28 { pt3dadd( 208.472, 346.523, -135.605, 1.03 ) }
    dend_28 { pt3dadd( 209.927, 347.323, -135.673, 0.22 ) }
    dend_28 { pt3dadd( 210.771, 347.816, -135.764, 0.22 ) }
    dend_28 { pt3dadd( 210.837, 347.86, -135.774, 0.22 ) }
    dend_28 { pt3dadd( 213.673, 350.1, -136.384, 0.22 ) }
    dend_28 { pt3dadd( 214.218, 350.59, -136.527, 0.96 ) }
    dend_28 { pt3dadd( 214.82, 351.203, -136.704, 1.18 ) }
    dend_28 { pt3dadd( 215.73, 352.392, -136.98, 0.15 ) }
    dend_28 { pt3dadd( 216.536, 353.737, -137.081, 0.15 ) }
    dend_28 { pt3dadd( 216.695, 354.093, -137.053, 0.37 ) }
    dend_28 { pt3dadd( 216.787, 354.499, -136.916, 0.37 ) }
    dend_28 { pt3dadd( 216.869, 355.79, -136.333, 0.22 ) }
    dend_28 { pt3dadd( 216.722, 358.241, -134.967, 0.22 ) }
    dend_28 { pt3dadd( 216.544, 359.525, -134.134, 1.47 ) }
    dend_28 { pt3dadd( 216.453, 359.918, -133.87, 1.47 ) }
    dend_28 { pt3dadd( 216.135, 360.955, -133.199, 0.22 ) }
    dend_28 { pt3dadd( 215.391, 362.886, -132.104, 0.22 ) }
    dend_28 { pt3dadd( 215.056, 363.595, -131.784, 1.03 ) }
    dend_28 { pt3dadd( 215.015, 363.659, -131.76, 1.03 ) }
    dend_28 { pt3dadd( 214.575, 364.316, -131.608, 1.03 ) }
    dend_28 { pt3dadd( 214.395, 364.591, -131.568, 0.22 ) }
    dend_28 { pt3dadd( 213.639, 365.828, -131.528, 0.22 ) }
    dend_28 { pt3dadd( 213.508, 366.052, -131.531, 0.22 ) }
    dend_28 { pt3dadd( 212.715, 367.431, -131.55, 0.22 ) }
    dend_28 { pt3dadd( 212.677, 367.5, -131.548, 0.22 ) }
    dend_28 { pt3dadd( 212.42, 367.978, -131.516, 0.52 ) }
    dend_28 { pt3dadd( 212.29, 368.233, -131.492, 0.74 ) }
    dend_28 { pt3dadd( 211.947, 368.923, -131.414, 0.74 ) }
    dend_28 { pt3dadd( 211.599, 369.677, -131.33, 0.22 ) }
    dend_28 { pt3dadd( 210.99, 371.095, -131.178, 0.22 ) }
    dend_28 { pt3dadd( 210.869, 371.37, -131.152, 0.66 ) }
    dend_28 { pt3dadd( 210.681, 371.788, -131.116, 0.66 ) }
    dend_28 { pt3dadd( 210.425, 372.346, -131.08, 0.15 ) }
    dend_28 { pt3dadd( 209.883, 373.546, -131.039, 0.15 ) }
    dend_28 { pt3dadd( 209.619, 374.154, -131.047, 0.96 ) }
    dend_28 { pt3dadd( 209.374, 374.711, -131.026, 1.25 ) }
    dend_28 { pt3dadd( 209.264, 374.954, -131.004, 1.25 ) }
    dend_28 { pt3dadd( 209.041, 375.448, -130.936, 1.25 ) }
    dend_28 { pt3dadd( 208.976, 375.597, -130.9, 1.25 ) }
    dend_28 { pt3dadd( 208.791, 376.014, -130.771, 1.25 ) }
    dend_28 { pt3dadd( 208.457, 376.787, -130.498, 1.25 ) }
    dend_28 { pt3dadd( 208.286, 377.182, -130.344, 0.22 ) }
    dend_28 { pt3dadd( 207.633, 378.665, -129.729, 0.22 ) }
    dend_28 { pt3dadd( 207.332, 379.327, -129.44, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_6 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 48.1944, 176.157, -97.1234, 0.22 ) }
    dend_26 { pt3dadd( 47.3338, 176.873, -97.254, 0.22 ) }
    dend_26 { pt3dadd( 46.9553, 177.335, -97.5146, 0.22 ) }
    dend_26 { pt3dadd( 46.7101, 177.635, -97.6835, 0.37 ) }
    dend_26 { pt3dadd( 46.6561, 177.701, -97.7207, 0.37 ) }
    dend_26 { pt3dadd( 46.2998, 178.137, -97.9661, 0.37 ) }
    dend_26 { pt3dadd( 45.4818, 179.137, -98.5294, 0.37 ) }
    dend_26 { pt3dadd( 44.8452, 180.25, -99.1282, 0.37 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 95/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 48.1944, 176.157, -97.1234, 0.74 ) }
    dend_7 { pt3dadd( 47.6765, 177.966, -97.8751, 0.74 ) }
    dend_7 { pt3dadd( 47.5668, 178.669, -98.2833, 0.74 ) }
    dend_7 { pt3dadd( 47.5641, 178.738, -98.3188, 0.74 ) }
    dend_7 { pt3dadd( 47.5615, 179.582, -98.7256, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_60()
}

proc basic_shape_60() {
    dend_7 { pt3dadd( 47.5651, 179.645, -98.7521, 0.88 ) }
    dend_7 { pt3dadd( 47.6278, 180.373, -99.0361, 0.88 ) }
    dend_7 { pt3dadd( 47.9069, 182.176, -99.6382, 0.37 ) }
    dend_7 { pt3dadd( 48.263, 183.946, -100.208, 0.37 ) }
    dend_7 { pt3dadd( 48.2777, 184.01, -100.228, 0.37 ) }
    dend_7 { pt3dadd( 48.6783, 185.574, -100.668, 0.37 ) }
    dend_7 { pt3dadd( 48.8655, 186.255, -100.851, 1.11 ) }
    dend_7 { pt3dadd( 48.8852, 186.322, -100.867, 1.11 ) }
    dend_7 { pt3dadd( 49.242, 187.443, -101.051, 1.4 ) }
    dend_7 { pt3dadd( 49.4282, 187.966, -101.156, 1.4 ) }
    dend_7 { pt3dadd( 49.4511, 188.03, -101.17, 1.4 ) }
    dend_7 { pt3dadd( 49.8882, 189.318, -101.436, 1.4 ) }
    dend_7 { pt3dadd( 49.933, 189.459, -101.457, 1.4 ) }
    dend_7 { pt3dadd( 50.163, 190.29, -101.554, 1.4 ) }
    dend_7 { pt3dadd( 50.1976, 190.44, -101.567, 1.4 ) }
    dend_7 { pt3dadd( 50.3253, 191.07, -101.597, 1.4 ) }
    dend_7 { pt3dadd( 50.4519, 191.939, -101.599, 0.29 ) }
    dend_7 { pt3dadd( 50.5054, 192.747, -101.555, 0.29 ) }
    dend_7 { pt3dadd( 50.5165, 193.269, -101.531, 0.29 ) }
    dend_7 { pt3dadd( 50.5156, 193.484, -101.533, 0.66 ) }
    dend_7 { pt3dadd( 50.515, 193.552, -101.537, 0.66 ) }
    dend_7 { pt3dadd( 50.5201, 194.176, -101.613, 0.66 ) }
    dend_7 { pt3dadd( 50.5511, 194.921, -101.75, 0.44 ) }
    dend_7 { pt3dadd( 50.5567, 194.988, -101.765, 0.44 ) }
    dend_7 { pt3dadd( 50.694, 195.877, -101.998, 0.96 ) }
    dend_7 { pt3dadd( 50.7062, 195.935, -102.013, 0.96 ) }
    dend_7 { pt3dadd( 50.9149, 196.974, -102.251, 0.96 ) }
    dend_7 { pt3dadd( 50.9426, 197.122, -102.278, 0.96 ) }
    dend_7 { pt3dadd( 51.024, 197.63, -102.34, 0.96 ) }
    dend_7 { pt3dadd( 51.142, 198.489, -102.411, 0.59 ) }
    dend_7 { pt3dadd( 51.2376, 199.415, -102.447, 0.52 ) }
    dend_7 { pt3dadd( 51.3568, 200.633, -102.476, 0.52 ) }
    dend_7 { pt3dadd( 51.4785, 201.975, -102.521, 0.52 ) }
    dend_7 { pt3dadd( 51.5472, 202.818, -102.551, 1.18 ) }
    dend_7 { pt3dadd( 51.5518, 202.897, -102.553, 1.18 ) }
    dend_7 { pt3dadd( 51.6067, 203.988, -102.564, 1.69 ) }
    dend_7 { pt3dadd( 51.663, 205.057, -102.573, 1.69 ) }
    dend_7 { pt3dadd( 51.7481, 206.3, -102.582, 0.59 ) }
    dend_7 { pt3dadd( 51.874, 207.826, -102.555, 0.44 ) }
    dend_7 { pt3dadd( 52.0585, 209.671, -102.489, 0.44 ) }
    dend_7 { pt3dadd( 52.1475, 210.467, -102.443, 1.33 ) }
    dend_7 { pt3dadd( 52.2902, 211.601, -102.352, 1.69 ) }
    dend_7 { pt3dadd( 52.4195, 212.726, -102.234, 1.69 ) }
    dend_7 { pt3dadd( 52.5373, 213.969, -102.067, 0.96 ) }
    dend_7 { pt3dadd( 52.6405, 215.586, -101.857, 0.96 ) }
    dend_7 { pt3dadd( 52.6462, 215.803, -101.833, 0.96 ) }
    dend_7 { pt3dadd( 52.6426, 216.018, -101.813, 1.11 ) }
    dend_7 { pt3dadd( 52.5758, 217.147, -101.724, 0.81 ) }
    dend_7 { pt3dadd( 52.4156, 218.75, -101.632, 0.66 ) }
    dend_7 { pt3dadd( 52.1393, 220.76, -101.579, 0.59 ) }
    dend_7 { pt3dadd( 52.0354, 221.448, -101.595, 0.88 ) }
    dend_7 { pt3dadd( 52.0269, 221.516, -101.599, 0.88 ) }
    dend_7 { pt3dadd( 51.9456, 222.472, -101.724, 0.88 ) }
    dend_7 { pt3dadd( 51.9423, 222.598, -101.748, 0.88 ) }
    dend_7 { pt3dadd( 51.9847, 224.352, -102.203, 0.88 ) }
    dend_7 { pt3dadd( 52.0597, 225.647, -102.629, 0.52 ) }
    dend_7 { pt3dadd( 52.1574, 226.929, -103.089, 0.52 ) }
    dend_7 { pt3dadd( 52.2324, 227.896, -103.45, 0.88 ) }
    dend_7 { pt3dadd( 52.2725, 228.689, -103.745, 1.25 ) }
    dend_7 { pt3dadd( 52.2941, 229.449, -104.002, 1.47 ) }
    dend_7 { pt3dadd( 52.3004, 230.894, -104.409, 0.52 ) }
    dend_7 { pt3dadd( 52.2979, 230.964, -104.423, 0.52 ) }
    dend_7 { pt3dadd( 52.2379, 231.773, -104.546, 0.52 ) }
    dend_7 { pt3dadd( 52.1148, 233.127, -104.735, 0.66 ) }
    dend_7 { pt3dadd( 52.0332, 234.052, -104.868, 1.47 ) }
    dend_7 { pt3dadd( 51.9567, 235.128, -105.058, 2.14 ) }
    dend_7 { pt3dadd( 51.9534, 235.198, -105.071, 2.14 ) }
    dend_7 { pt3dadd( 51.9123, 236.044, -105.259, 2.14 ) }
    dend_7 { pt3dadd( 51.8439, 237.576, -105.697, 0.44 ) }
    dend_7 { pt3dadd( 51.7901, 238.733, -106.087, 0.44 ) }
    dend_7 { pt3dadd( 51.6921, 240.146, -106.616, 0.44 ) }
    dend_7 { pt3dadd( 51.6875, 240.21, -106.64, 0.44 ) }
    dend_7 { pt3dadd( 51.5853, 241.325, -107.102, 0.44 ) }
    dend_7 { pt3dadd( 51.4918, 242.257, -107.548, 1.18 ) }
    dend_7 { pt3dadd( 51.4048, 243.118, -107.987, 1.4 ) }
    dend_7 { pt3dadd( 51.3947, 243.239, -108.054, 1.4 ) }
    dend_7 { pt3dadd( 51.3533, 244.2, -108.56, 1.4 ) }
    dend_7 { pt3dadd( 51.3793, 246.05, -109.634, 0.52 ) }
    dend_7 { pt3dadd( 51.4663, 247.231, -110.377, 0.52 ) }
    dend_7 { pt3dadd( 51.4776, 247.359, -110.456, 0.52 ) }
    dend_7 { pt3dadd( 51.5416, 248.042, -110.875, 0.96 ) }
    dend_7 { pt3dadd( 51.6149, 248.955, -111.422, 0.96 ) }
    dend_7 { pt3dadd( 51.7287, 250.605, -112.438, 0.44 ) }
    dend_7 { pt3dadd( 51.7326, 250.709, -112.495, 0.44 ) }
    dend_7 { pt3dadd( 51.7057, 251.445, -112.878, 0.44 ) }
    dend_7 { pt3dadd( 51.636, 252.269, -113.356, 0.29 ) }
    dend_7 { pt3dadd( 51.4797, 253.558, -114.15, 0.29 ) }
    dend_7 { pt3dadd( 51.3018, 254.716, -114.87, 0.81 ) }
    dend_7 { pt3dadd( 51.1503, 255.667, -115.421, 0.81 ) }
    dend_7 { pt3dadd( 51.0707, 256.539, -115.985, 1.03 ) }
    dend_7 { pt3dadd( 51.07, 257.938, -117.027, 0.66 ) }
    dend_7 { pt3dadd( 51.1166, 258.452, -117.425, 0.66 ) }
    dend_7 { pt3dadd( 51.1477, 258.616, -117.552, 0.66 ) }
    dend_7 { pt3dadd( 51.2774, 259.094, -117.927, 0.66 ) }
    dend_7 { pt3dadd( 51.8165, 260.482, -118.99, 0.52 ) }
    dend_7 { pt3dadd( 52.2009, 261.346, -119.592, 0.37 ) }
    dend_7 { pt3dadd( 52.8354, 262.723, -120.421, 0.37 ) }
    dend_7 { pt3dadd( 53.4249, 263.977, -121.15, 0.37 ) }
    dend_7 { pt3dadd( 53.4913, 264.112, -121.229, 0.37 ) }
    dend_7 { pt3dadd( 54.1994, 265.491, -122.052, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_61()
}

proc basic_shape_61() {
    dend_7 { pt3dadd( 54.9038, 266.872, -122.795, 0.37 ) }
    dend_7 { pt3dadd( 55.1553, 267.311, -123.029, 1.47 ) }
    dend_7 { pt3dadd( 55.1962, 267.372, -123.064, 1.47 ) }
    dend_7 { pt3dadd( 55.9777, 268.482, -123.704, 1.84 ) }
    dend_7 { pt3dadd( 57.0945, 270.089, -124.756, 1.84 ) }
    // Section: dend_150, id: dend_150, parent: dend_148 (entry count 5/100)
    dend_150 { pt3dclear() }
    dend_150 { pt3dadd( 150.484, -217.469, 29.05, 1.18 ) }
    dend_150 { pt3dadd( 151.341, -218.362, 28.9209, 1.18 ) }
    dend_150 { pt3dadd( 151.86, -218.875, 28.8539, 0.66 ) }
    dend_150 { pt3dadd( 152.411, -219.47, 28.8408, 0.59 ) }
    dend_150 { pt3dadd( 153.103, -220.366, 28.9018, 0.59 ) }
    dend_150 { pt3dadd( 153.155, -220.449, 28.9122, 0.59 ) }
    dend_150 { pt3dadd( 153.602, -221.282, 29.0422, 0.59 ) }
    dend_150 { pt3dadd( 153.627, -221.355, 29.0628, 0.59 ) }
    dend_150 { pt3dadd( 153.869, -222.613, 29.4628, 0.37 ) }
    dend_150 { pt3dadd( 153.947, -223.429, 29.733, 0.37 ) }
    dend_150 { pt3dadd( 153.967, -224.04, 29.9396, 0.52 ) }
    dend_150 { pt3dadd( 153.969, -224.107, 29.9626, 0.52 ) }
    dend_150 { pt3dadd( 153.986, -224.566, 30.1117, 0.66 ) }
    dend_150 { pt3dadd( 154.005, -224.708, 30.1522, 0.66 ) }
    dend_150 { pt3dadd( 154.368, -226.01, 30.4833, 0.66 ) }
    dend_150 { pt3dadd( 154.525, -226.459, 30.6124, 1.11 ) }
    dend_150 { pt3dadd( 154.841, -227.152, 30.8098, 1.4 ) }
    dend_150 { pt3dadd( 155.053, -227.552, 30.9217, 1.4 ) }
    dend_150 { pt3dadd( 155.438, -228.163, 31.1443, 0.59 ) }
    dend_150 { pt3dadd( 156.259, -229.297, 31.6355, 0.59 ) }
    dend_150 { pt3dadd( 156.302, -229.348, 31.6613, 0.59 ) }
    dend_150 { pt3dadd( 157.283, -230.414, 32.2268, 0.52 ) }
    dend_150 { pt3dadd( 157.339, -230.468, 32.2786, 0.52 ) }
    dend_150 { pt3dadd( 158.16, -231.266, 33.3846, 0.52 ) }
    dend_150 { pt3dadd( 158.186, -231.293, 33.431, 0.52 ) }
    dend_150 { pt3dadd( 158.311, -231.435, 33.7023, 1.11 ) }
    dend_150 { pt3dadd( 158.511, -231.706, 34.2156, 1.33 ) }
    dend_150 { pt3dadd( 159.426, -233.25, 37.0893, 0.88 ) }
    dend_150 { pt3dadd( 159.69, -233.745, 37.9291, 0.37 ) }
    dend_150 { pt3dadd( 159.712, -233.788, 37.9926, 0.37 ) }
    dend_150 { pt3dadd( 159.995, -234.312, 38.7105, 0.37 ) }
    dend_150 { pt3dadd( 160.018, -234.353, 38.7626, 0.37 ) }
    dend_150 { pt3dadd( 160.259, -234.68, 39.0862, 0.37 ) }
    dend_150 { pt3dadd( 160.368, -234.781, 39.0979, 0.37 ) }
    dend_150 { pt3dadd( 160.972, -235.115, 39.1627, 0.74 ) }
    dend_150 { pt3dadd( 161.427, -235.292, 39.2326, 1.4 ) }
    dend_150 { pt3dadd( 161.505, -235.314, 39.2465, 1.4 ) }
    dend_150 { pt3dadd( 162.489, -235.588, 39.4299, 1.4 ) }
    dend_150 { pt3dadd( 162.619, -235.636, 39.4558, 1.4 ) }
    dend_150 { pt3dadd( 163.629, -236.14, 39.7326, 0.88 ) }
    dend_150 { pt3dadd( 164.153, -236.487, 39.9094, 0.66 ) }
    dend_150 { pt3dadd( 164.231, -236.554, 39.9393, 0.66 ) }
    dend_150 { pt3dadd( 164.879, -237.298, 40.2683, 0.52 ) }
    dend_150 { pt3dadd( 165.631, -238.498, 40.7682, 0.52 ) }
    dend_150 { pt3dadd( 166.014, -239.309, 41.0592, 1.11 ) }
    dend_150 { pt3dadd( 166.269, -240.008, 41.2788, 1.11 ) }
    dend_150 { pt3dadd( 166.447, -240.566, 41.4525, 1.11 ) }
    dend_150 { pt3dadd( 166.746, -241.587, 41.7704, 0.81 ) }
    dend_150 { pt3dadd( 166.921, -242.194, 41.984, 0.29 ) }
    dend_150 { pt3dadd( 167.337, -243.456, 42.4615, 0.29 ) }
    dend_150 { pt3dadd( 167.393, -243.585, 42.5093, 0.29 ) }
    dend_150 { pt3dadd( 167.563, -243.896, 42.6363, 0.29 ) }
    dend_150 { pt3dadd( 167.607, -243.957, 42.6625, 0.29 ) }
    dend_150 { pt3dadd( 168.402, -244.804, 43.1078, 0.29 ) }
    dend_150 { pt3dadd( 168.457, -244.852, 43.1448, 0.29 ) }
    dend_150 { pt3dadd( 168.743, -245.057, 43.3566, 0.66 ) }
    dend_150 { pt3dadd( 169.257, -245.43, 43.8038, 0.66 ) }
    dend_150 { pt3dadd( 169.33, -245.482, 43.8635, 0.66 ) }
    dend_150 { pt3dadd( 170.009, -245.936, 44.3863, 0.96 ) }
    dend_150 { pt3dadd( 170.059, -245.969, 44.4229, 0.96 ) }
    dend_150 { pt3dadd( 170.507, -246.241, 44.7381, 0.96 ) }
    dend_150 { pt3dadd( 171.668, -246.888, 45.4876, 0.37 ) }
    dend_150 { pt3dadd( 172.585, -247.371, 46.0242, 0.37 ) }
    dend_150 { pt3dadd( 172.643, -247.404, 46.052, 0.37 ) }
    dend_150 { pt3dadd( 172.807, -247.507, 46.1055, 0.81 ) }
    dend_150 { pt3dadd( 172.983, -247.63, 46.1535, 0.81 ) }
    dend_150 { pt3dadd( 173.566, -248.101, 46.265, 0.81 ) }
    dend_150 { pt3dadd( 173.64, -248.17, 46.2695, 0.81 ) }
    dend_150 { pt3dadd( 174.352, -248.926, 46.3134, 0.81 ) }
    dend_150 { pt3dadd( 175.091, -249.733, 46.3532, 0.81 ) }
    dend_150 { pt3dadd( 175.137, -249.785, 46.3554, 0.81 ) }
    dend_150 { pt3dadd( 175.576, -250.284, 46.3708, 0.74 ) }
    dend_150 { pt3dadd( 175.819, -250.557, 46.3956, 1.25 ) }
    dend_150 { pt3dadd( 175.994, -250.745, 46.4217, 1.25 ) }
    dend_150 { pt3dadd( 176.292, -251.097, 46.4934, 1.25 ) }
    dend_150 { pt3dadd( 176.415, -251.274, 46.5565, 1.25 ) }
    dend_150 { pt3dadd( 176.893, -252.058, 46.9025, 1.25 ) }
    dend_150 { pt3dadd( 177.276, -252.752, 47.2806, 1.25 ) }
    dend_150 { pt3dadd( 177.601, -253.391, 47.6731, 0.29 ) }
    dend_150 { pt3dadd( 178.004, -254.196, 48.2288, 0.29 ) }
    dend_150 { pt3dadd( 178.413, -255.047, 48.8771, 0.74 ) }
    dend_150 { pt3dadd( 178.443, -255.104, 48.9241, 0.74 ) }
    dend_150 { pt3dadd( 178.825, -255.789, 49.4885, 0.74 ) }
    dend_150 { pt3dadd( 178.86, -255.837, 49.5232, 0.74 ) }
    dend_150 { pt3dadd( 179.583, -256.429, 49.6995, 0.74 ) }
    dend_150 { pt3dadd( 179.633, -256.457, 49.6837, 0.74 ) }
    dend_150 { pt3dadd( 180.125, -256.701, 49.4432, 0.74 ) }
    dend_150 { pt3dadd( 180.931, -257.062, 49.0311, 1.25 ) }
    dend_150 { pt3dadd( 181.312, -257.22, 48.8182, 1.4 ) }
    dend_150 { pt3dadd( 182.797, -257.834, 48.0087, 0.96 ) }
    dend_150 { pt3dadd( 183.787, -258.239, 47.4962, 0.37 ) }
    dend_150 { pt3dadd( 183.858, -258.267, 47.4645, 0.37 ) }
    dend_150 { pt3dadd( 185.176, -258.744, 46.9883, 0.37 ) }
    dend_150 { pt3dadd( 185.242, -258.767, 46.9769, 0.37 ) }
    dend_150 { pt3dadd( 185.708, -258.927, 46.9638, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_62()
}

proc basic_shape_62() {
    dend_150 { pt3dadd( 186.464, -259.211, 47.135, 1.84 ) }
    dend_150 { pt3dadd( 186.552, -259.249, 47.1612, 1.84 ) }
    dend_150 { pt3dadd( 186.995, -259.466, 47.3056, 2.14 ) }
    dend_150 { pt3dadd( 188.01, -260.018, 47.6679, 0.81 ) }
    dend_150 { pt3dadd( 188.075, -260.057, 47.6931, 0.81 ) }
    dend_150 { pt3dadd( 189.264, -260.815, 48.16, 0.59 ) }
    dend_150 { pt3dadd( 190.462, -261.653, 48.7388, 0.59 ) }
    dend_150 { pt3dadd( 190.505, -261.688, 48.7614, 0.59 ) }
    dend_150 { pt3dadd( 190.92, -262.089, 49.0322, 0.96 ) }
    dend_150 { pt3dadd( 191.412, -262.663, 49.4742, 1.18 ) }
    dend_150 { pt3dadd( 191.721, -263.104, 49.8428, 1.4 ) }
    dend_150 { pt3dadd( 192.253, -264.098, 50.7745, 0.37 ) }
    dend_150 { pt3dadd( 192.678, -265.039, 51.7169, 0.37 ) }
    dend_150 { pt3dadd( 192.967, -265.709, 52.3953, 0.81 ) }
    dend_150 { pt3dadd( 193.348, -266.687, 53.3755, 0.29 ) }
    dend_150 { pt3dadd( 193.366, -266.735, 53.4229, 0.29 ) }
    dend_150 { pt3dadd( 193.595, -267.441, 54.1081, 0.29 ) }
    dend_150 { pt3dadd( 193.809, -268.069, 54.6479, 0.29 ) }
    dend_150 { pt3dadd( 193.83, -268.123, 54.6856, 0.29 ) }
    dend_150 { pt3dadd( 194.038, -268.623, 54.903, 0.66 ) }
    dend_150 { pt3dadd( 194.375, -269.421, 55.1309, 0.88 ) }
    dend_150 { pt3dadd( 194.397, -269.476, 55.1468, 0.88 ) }
    dend_150 { pt3dadd( 194.65, -270.184, 55.3177, 0.88 ) }
    dend_150 { pt3dadd( 195.051, -271.266, 55.6009, 1.4 ) }
    dend_150 { pt3dadd( 195.469, -272.266, 55.9477, 1.4 ) }
    dend_150 { pt3dadd( 195.489, -272.314, 55.9746, 1.4 ) }
    dend_150 { pt3dadd( 195.857, -273.179, 56.4809, 0.66 ) }
    dend_150 { pt3dadd( 196.257, -274.117, 57.0891, 0.52 ) }
    dend_150 { pt3dadd( 196.725, -275.19, 57.911, 0.52 ) }
    dend_150 { pt3dadd( 197.179, -276.164, 58.7897, 0.52 ) }
    dend_150 { pt3dadd( 197.905, -277.651, 60.1452, 1.33 ) }
    // Section: dend_149, id: dend_149, parent: dend_148 (entry count 31/100)
    dend_149 { pt3dclear() }
    dend_149 { pt3dadd( 150.484, -217.469, 29.05, 0.37 ) }
    dend_149 { pt3dadd( 152.908, -217.239, 27.7376, 0.37 ) }
    dend_149 { pt3dadd( 153.793, -217.155, 27.2586, 0.37 ) }
    dend_149 { pt3dadd( 153.857, -217.149, 27.224, 0.37 ) }
    dend_149 { pt3dadd( 154.703, -217.069, 26.766, 0.37 ) }
    dend_149 { pt3dadd( 155.344, -217.008, 26.4189, 1.25 ) }
    dend_149 { pt3dadd( 155.956, -216.95, 26.0874, 1.4 ) }
    // Section: dend_137, id: dend_137, parent: dend_135 (entry count 38/100)
    dend_137 { pt3dclear() }
    dend_137 { pt3dadd( 140.653, -228.646, 9.03692, 0.59 ) }
    dend_137 { pt3dadd( 140.531, -229.068, 9.04392, 0.59 ) }
    dend_137 { pt3dadd( 140.342, -229.619, 9.1299, 0.52 ) }
    dend_137 { pt3dadd( 139.998, -230.473, 9.32851, 0.52 ) }
    dend_137 { pt3dadd( 139.636, -231.292, 9.55439, 0.44 ) }
    dend_137 { pt3dadd( 139.04, -232.498, 9.92109, 0.44 ) }
    dend_137 { pt3dadd( 138.664, -233.189, 10.1823, 0.44 ) }
    dend_137 { pt3dadd( 137.942, -234.268, 10.7756, 0.81 ) }
    dend_137 { pt3dadd( 137.68, -234.58, 11.0177, 0.81 ) }
    dend_137 { pt3dadd( 137.639, -234.619, 11.0575, 0.81 ) }
    dend_137 { pt3dadd( 137.347, -234.855, 11.3691, 0.29 ) }
    dend_137 { pt3dadd( 136.608, -235.419, 12.159, 0.29 ) }
    dend_137 { pt3dadd( 135.91, -235.996, 12.8751, 1.03 ) }
    dend_137 { pt3dadd( 135.471, -236.404, 13.2814, 1.11 ) }
    dend_137 { pt3dadd( 135.034, -236.82, 13.6959, 1.11 ) }
    dend_137 { pt3dadd( 134.194, -237.64, 14.4904, 0.29 ) }
    dend_137 { pt3dadd( 133.559, -238.283, 15.0813, 0.29 ) }
    dend_137 { pt3dadd( 132.99, -238.857, 15.5364, 1.11 ) }
    dend_137 { pt3dadd( 132.498, -239.387, 15.8863, 1.84 ) }
    // Section: dend_136, id: dend_136, parent: dend_135 (entry count 57/100)
    dend_136 { pt3dclear() }
    dend_136 { pt3dadd( 140.653, -228.646, 9.03692, 0.15 ) }
    dend_136 { pt3dadd( 140.705, -228.261, 9.06527, 0.15 ) }
    dend_136 { pt3dadd( 140.724, -228.188, 9.08857, 0.15 ) }
    dend_136 { pt3dadd( 141.015, -227.511, 9.37754, 0.15 ) }
    dend_136 { pt3dadd( 141.075, -227.398, 9.43189, 0.15 ) }
    dend_136 { pt3dadd( 141.386, -226.809, 9.71454, 0.15 ) }
    dend_136 { pt3dadd( 141.416, -226.753, 9.74171, 0.15 ) }
    dend_136 { pt3dadd( 142.025, -225.793, 10.2439, 1.4 ) }
    dend_136 { pt3dadd( 142.347, -225.37, 10.508, 1.4 ) }
    dend_136 { pt3dadd( 142.39, -225.328, 10.5431, 1.4 ) }
    // Section: dend_124, id: dend_124, parent: dend_122 (entry count 67/100)
    dend_124 { pt3dclear() }
    dend_124 { pt3dadd( -135.307, -404.672, 0.785354, 0.22 ) }
    dend_124 { pt3dadd( -134.164, -405.637, -0.977054, 0.22 ) }
    dend_124 { pt3dadd( -133.888, -405.926, -1.45439, 0.22 ) }
    dend_124 { pt3dadd( -133.825, -406.007, -1.5649, 0.22 ) }
    dend_124 { pt3dadd( -133.638, -406.267, -1.90395, 0.22 ) }
    dend_124 { pt3dadd( -133.441, -406.566, -2.32484, 0.74 ) }
    dend_124 { pt3dadd( -133.32, -406.766, -2.60522, 0.88 ) }
    dend_124 { pt3dadd( -132.875, -407.657, -3.7106, 0.22 ) }
    dend_124 { pt3dadd( -132.55, -408.363, -4.63742, 0.22 ) }
    dend_124 { pt3dadd( -132.529, -408.409, -4.69999, 0.22 ) }
    dend_124 { pt3dadd( -132.17, -409.248, -5.9378, 0.96 ) }
    dend_124 { pt3dadd( -132.094, -409.444, -6.23888, 1.25 ) }
    dend_124 { pt3dadd( -132.066, -409.523, -6.36606, 1.25 ) }
    // Section: dend_123, id: dend_123, parent: dend_122 (entry count 80/100)
    dend_123 { pt3dclear() }
    dend_123 { pt3dadd( -135.307, -404.672, 0.785354, 0.52 ) }
    dend_123 { pt3dadd( -135.514, -405.59, 1.20139, 0.52 ) }
    dend_123 { pt3dadd( -135.581, -405.852, 1.31821, 0.74 ) }
    dend_123 { pt3dadd( -135.682, -406.372, 1.51814, 0.74 ) }
    dend_123 { pt3dadd( -135.714, -406.567, 1.58657, 0.74 ) }
    dend_123 { pt3dadd( -135.85, -407.692, 1.94857, 0.96 ) }
    dend_123 { pt3dadd( -135.894, -408.236, 2.11043, 0.66 ) }
    dend_123 { pt3dadd( -135.923, -408.859, 2.27089, 0.22 ) }
    dend_123 { pt3dadd( -135.936, -409.645, 2.41443, 0.22 ) }
    dend_123 { pt3dadd( -135.931, -409.764, 2.42544, 0.66 ) }
    dend_123 { pt3dadd( -135.903, -410.116, 2.4247, 0.88 ) }
    dend_123 { pt3dadd( -135.869, -410.426, 2.38428, 0.88 ) }
    dend_123 { pt3dadd( -135.723, -411.335, 2.25744, 0.22 ) }
    dend_123 { pt3dadd( -135.709, -411.402, 2.24805, 0.22 ) }
    dend_123 { pt3dadd( -135.626, -411.802, 2.20712, 0.22 ) }
    dend_123 { pt3dadd( -135.613, -411.87, 2.20223, 0.22 ) }
    dend_123 { pt3dadd( -135.501, -412.662, 2.16781, 0.22 ) }
    dend_123 { pt3dadd( -135.48, -412.856, 2.16479, 0.22 ) }
    dend_123 { pt3dadd( -135.442, -413.436, 2.17442, 0.22 ) }
    dend_123 { pt3dadd( -135.423, -414.598, 2.1929, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_63()
}

proc basic_shape_63() {
    dend_123 { pt3dadd( -135.426, -414.726, 2.19483, 0.22 ) }
    dend_123 { pt3dadd( -135.475, -415.598, 2.20676, 0.22 ) }
    dend_123 { pt3dadd( -135.482, -415.676, 2.20773, 0.22 ) }
    dend_123 { pt3dadd( -135.631, -416.872, 2.25913, 0.22 ) }
    dend_123 { pt3dadd( -135.64, -416.94, 2.26386, 0.22 ) }
    dend_123 { pt3dadd( -135.683, -417.39, 2.30438, 0.66 ) }
    dend_123 { pt3dadd( -135.703, -417.812, 2.34686, 0.66 ) }
    dend_123 { pt3dadd( -135.702, -417.881, 2.35459, 0.66 ) }
    dend_123 { pt3dadd( -135.682, -418.723, 2.45817, 0.29 ) }
    dend_123 { pt3dadd( -135.633, -419.661, 2.59185, 0.29 ) }
    dend_123 { pt3dadd( -135.609, -420.095, 2.65529, 0.66 ) }
    dend_123 { pt3dadd( -135.578, -420.608, 2.7332, 0.96 ) }
    dend_123 { pt3dadd( -135.559, -420.858, 2.76988, 0.96 ) }
    // Section: dend_108, id: dend_108, parent: dend_106 (entry count 13/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( -33.4508, -381.604, -0.312572, 0.29 ) }
    dend_108 { pt3dadd( -33.579, -382.062, -0.358506, 0.29 ) }
    dend_108 { pt3dadd( -33.6707, -382.631, -0.404429, 0.29 ) }
    dend_108 { pt3dadd( -33.6712, -382.699, -0.415132, 0.29 ) }
    dend_108 { pt3dadd( -33.5174, -383.603, -0.591915, 0.29 ) }
    dend_108 { pt3dadd( -33.4946, -383.736, -0.618072, 0.29 ) }
    dend_108 { pt3dadd( -33.3183, -384.772, -0.820748, 0.29 ) }
    dend_108 { pt3dadd( -33.276, -384.933, -0.847502, 0.29 ) }
    dend_108 { pt3dadd( -32.9437, -385.712, -1.01154, 2.06 ) }
    dend_108 { pt3dadd( -32.5941, -386.31, -1.1615, 2.73 ) }
    // Section: dend_107, id: dend_107, parent: dend_106 (entry count 23/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( -33.4508, -381.604, -0.312572, 0.52 ) }
    dend_107 { pt3dadd( -34.3575, -381.497, -0.694379, 0.52 ) }
    dend_107 { pt3dadd( -34.9702, -381.425, -0.921938, 0.52 ) }
    dend_107 { pt3dadd( -35.5342, -381.359, -1.13144, 0.81 ) }
    dend_107 { pt3dadd( -35.882, -381.319, -1.26063, 1.11 ) }
    dend_107 { pt3dadd( -36.0903, -381.294, -1.33801, 1.11 ) }
    dend_107 { pt3dadd( -36.5748, -381.238, -1.51797, 1.11 ) }
    dend_107 { pt3dadd( -36.6441, -381.229, -1.52859, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 31/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -75.1964, 283.696, -52.7643, 0.29 ) }
    dend_69 { pt3dadd( -74.8149, 285.19, -52.5181, 0.29 ) }
    dend_69 { pt3dadd( -74.6972, 285.679, -52.5025, 0.29 ) }
    dend_69 { pt3dadd( -74.2963, 287.49, -52.5842, 0.29 ) }
    dend_69 { pt3dadd( -74.0288, 288.681, -52.6823, 0.29 ) }
    dend_69 { pt3dadd( -74.0134, 288.747, -52.6892, 0.29 ) }
    dend_69 { pt3dadd( -73.8272, 289.572, -52.7815, 0.29 ) }
    dend_69 { pt3dadd( -73.5285, 290.929, -53.0507, 0.88 ) }
    dend_69 { pt3dadd( -73.3516, 291.753, -53.2269, 1.18 ) }
    dend_69 { pt3dadd( -73.3012, 292.005, -53.2852, 0.29 ) }
    dend_69 { pt3dadd( -73.1263, 293.051, -53.5142, 0.29 ) }
    dend_69 { pt3dadd( -73.0105, 293.752, -53.6489, 0.29 ) }
    dend_69 { pt3dadd( -72.9621, 294.04, -53.6874, 0.66 ) }
    dend_69 { pt3dadd( -72.9508, 294.118, -53.6889, 0.66 ) }
    dend_69 { pt3dadd( -72.8923, 294.569, -53.6844, 0.66 ) }
    dend_69 { pt3dadd( -72.8803, 294.729, -53.6783, 0.66 ) }
    dend_69 { pt3dadd( -72.8685, 294.969, -53.6622, 0.22 ) }
    dend_69 { pt3dadd( -72.8609, 295.598, -53.6397, 0.22 ) }
    dend_69 { pt3dadd( -72.9216, 296.5, -53.6402, 0.22 ) }
    dend_69 { pt3dadd( -72.9696, 296.979, -53.6305, 0.59 ) }
    dend_69 { pt3dadd( -73.0372, 297.553, -53.6092, 0.59 ) }
    dend_69 { pt3dadd( -73.0483, 297.63, -53.6055, 0.59 ) }
    dend_69 { pt3dadd( -73.1935, 298.451, -53.5588, 0.22 ) }
    dend_69 { pt3dadd( -73.5051, 299.884, -53.4852, 0.22 ) }
    dend_69 { pt3dadd( -73.7232, 300.739, -53.451, 0.22 ) }
    dend_69 { pt3dadd( -73.7369, 300.796, -53.4497, 0.88 ) }
    dend_69 { pt3dadd( -73.8659, 301.352, -53.4292, 1.18 ) }
    dend_69 { pt3dadd( -73.9672, 301.797, -53.4068, 1.18 ) }
    dend_69 { pt3dadd( -73.9796, 301.858, -53.4022, 1.18 ) }
    dend_69 { pt3dadd( -74.0381, 302.119, -53.3603, 1.18 ) }
    dend_69 { pt3dadd( -74.2074, 302.807, -53.2141, 0.29 ) }
    dend_69 { pt3dadd( -74.2248, 302.874, -53.1961, 0.29 ) }
    dend_69 { pt3dadd( -74.537, 304.156, -52.7806, 0.29 ) }
    dend_69 { pt3dadd( -74.5537, 304.231, -52.7537, 0.29 ) }
    dend_69 { pt3dadd( -74.7992, 305.34, -52.3139, 0.29 ) }
    dend_69 { pt3dadd( -74.8125, 305.403, -52.2868, 0.29 ) }
    dend_69 { pt3dadd( -74.8656, 305.675, -52.1681, 0.22 ) }
    dend_69 { pt3dadd( -74.9683, 306.267, -51.9249, 0.22 ) }
    dend_69 { pt3dadd( -74.9883, 306.398, -51.8584, 0.22 ) }
    dend_69 { pt3dadd( -75.1132, 307.267, -51.4148, 0.29 ) }
    dend_69 { pt3dadd( -75.1213, 307.33, -51.3863, 0.29 ) }
    dend_69 { pt3dadd( -75.2173, 308.022, -51.0081, 0.44 ) }
    dend_69 { pt3dadd( -75.2274, 308.089, -50.9634, 0.44 ) }
    dend_69 { pt3dadd( -75.3616, 308.873, -50.3844, 0.44 ) }
    dend_69 { pt3dadd( -75.3724, 308.924, -50.3583, 0.44 ) }
    dend_69 { pt3dadd( -75.4663, 309.318, -50.2428, 0.44 ) }
    dend_69 { pt3dadd( -75.5478, 309.63, -50.1787, 0.22 ) }
    dend_69 { pt3dadd( -75.5655, 309.696, -50.1705, 0.22 ) }
    dend_69 { pt3dadd( -75.7524, 310.522, -50.004, 0.22 ) }
    dend_69 { pt3dadd( -76.024, 311.913, -49.7092, 0.22 ) }
    dend_69 { pt3dadd( -76.1694, 312.772, -49.5006, 0.22 ) }
    dend_69 { pt3dadd( -76.181, 312.848, -49.481, 0.22 ) }
    dend_69 { pt3dadd( -76.2683, 313.496, -49.3144, 1.18 ) }
    dend_69 { pt3dadd( -76.4189, 315.151, -48.8837, 1.69 ) }
    dend_69 { pt3dadd( -76.4412, 315.64, -48.749, 1.69 ) }
    dend_69 { pt3dadd( -76.4389, 316.123, -48.6244, 1.4 ) }
    dend_69 { pt3dadd( -76.4368, 316.819, -48.4844, 1.18 ) }
    dend_69 { pt3dadd( -76.4549, 317.741, -48.3594, 0.29 ) }
    dend_69 { pt3dadd( -76.4732, 318.489, -48.3093, 0.29 ) }
    dend_69 { pt3dadd( -76.4753, 318.557, -48.3101, 0.29 ) }
    dend_69 { pt3dadd( -76.5018, 319.796, -48.3362, 0.29 ) }
    dend_69 { pt3dadd( -76.5101, 321.065, -48.3714, 0.29 ) }
    dend_69 { pt3dadd( -76.4944, 322.105, -48.4057, 0.29 ) }
    dend_69 { pt3dadd( -76.4579, 323.307, -48.4506, 0.22 ) }
    dend_69 { pt3dadd( -76.4264, 323.745, -48.4675, 0.88 ) }
    dend_69 { pt3dadd( -76.3374, 324.453, -48.4948, 1.25 ) }
    dend_69 { pt3dadd( -76.2531, 324.88, -48.5119, 1.25 ) }
    dend_69 { pt3dadd( -76.0694, 325.571, -48.5375, 0.52 ) }
    dend_69 { pt3dadd( -75.9188, 326.051, -48.5426, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_64()
}

proc basic_shape_64() {
    dend_69 { pt3dadd( -75.4648, 327.231, -48.5167, 0.22 ) }
    dend_69 { pt3dadd( -75.2629, 327.699, -48.4925, 0.81 ) }
    dend_69 { pt3dadd( -75.2302, 327.77, -48.488, 0.81 ) }
    dend_69 { pt3dadd( -74.8857, 328.498, -48.4356, 0.81 ) }
    dend_69 { pt3dadd( -74.6694, 328.927, -48.399, 0.22 ) }
    dend_69 { pt3dadd( -74.1215, 329.95, -48.2954, 0.22 ) }
    dend_69 { pt3dadd( -73.9012, 330.325, -48.2474, 0.81 ) }
    dend_69 { pt3dadd( -73.6236, 330.756, -48.1881, 0.81 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 8/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -75.1964, 283.696, -52.7643, 0.29 ) }
    dend_68 { pt3dadd( -74.5924, 283.792, -53.3892, 0.29 ) }
    dend_68 { pt3dadd( -73.6749, 283.81, -54.1567, 0.29 ) }
    dend_68 { pt3dadd( -72.7476, 283.797, -54.8905, 0.29 ) }
    dend_68 { pt3dadd( -72.6617, 283.795, -54.9532, 0.29 ) }
    dend_68 { pt3dadd( -72.2835, 283.785, -55.2172, 0.29 ) }
    dend_68 { pt3dadd( -70.9545, 283.73, -56.1722, 0.29 ) }
    dend_68 { pt3dadd( -69.6, 283.571, -57.1708, 0.22 ) }
    dend_68 { pt3dadd( -69.5418, 283.562, -57.2136, 0.22 ) }
    dend_68 { pt3dadd( -68.7161, 283.473, -57.7438, 0.22 ) }
    dend_68 { pt3dadd( -68.6563, 283.471, -57.7853, 0.22 ) }
    dend_68 { pt3dadd( -67.8585, 283.501, -58.3721, 1.03 ) }
    dend_68 { pt3dadd( -67.7994, 283.504, -58.4108, 1.03 ) }
    dend_68 { pt3dadd( -67.4638, 283.533, -58.6847, 1.03 ) }
    dend_68 { pt3dadd( -67.1206, 283.555, -58.9537, 1.03 ) }
    dend_68 { pt3dadd( -65.9593, 283.612, -60.2081, 0.22 ) }
    dend_68 { pt3dadd( -65.913, 283.615, -60.2605, 0.22 ) }
    dend_68 { pt3dadd( -64.9998, 283.693, -61.3132, 0.22 ) }
    dend_68 { pt3dadd( -64.0293, 283.769, -62.4331, 0.81 ) }
    dend_68 { pt3dadd( -63.5953, 283.799, -62.9451, 0.81 ) }
    dend_68 { pt3dadd( -61.8366, 283.821, -65.6222, 0.22 ) }
    dend_68 { pt3dadd( -61.3134, 283.782, -66.4991, 0.22 ) }
    dend_68 { pt3dadd( -61.2321, 283.773, -66.6491, 0.96 ) }
    dend_68 { pt3dadd( -60.9733, 283.737, -67.1784, 0.96 ) }
    dend_68 { pt3dadd( -60.9352, 283.731, -67.2553, 0.96 ) }
    dend_68 { pt3dadd( -58.9403, 283.457, -71.2555, 0.22 ) }
    dend_68 { pt3dadd( -58.4424, 283.395, -72.1444, 0.22 ) }
    dend_68 { pt3dadd( -58.3988, 283.39, -72.2142, 0.22 ) }
    dend_68 { pt3dadd( -58.0437, 283.347, -72.6746, 0.22 ) }
    dend_68 { pt3dadd( -57.7907, 283.326, -72.9266, 1.03 ) }
    dend_68 { pt3dadd( -57.253, 283.302, -73.3214, 1.25 ) }
    dend_68 { pt3dadd( -55.9308, 283.284, -73.9226, 0.22 ) }
    dend_68 { pt3dadd( -54.4595, 283.26, -74.7722, 0.22 ) }
    dend_68 { pt3dadd( -53.5797, 283.233, -75.3187, 0.22 ) }
    dend_68 { pt3dadd( -52.3312, 283.229, -76.2525, 0.22 ) }
    dend_68 { pt3dadd( -52.2029, 283.231, -76.3584, 0.96 ) }
    dend_68 { pt3dadd( -52.0386, 283.239, -76.5076, 0.96 ) }
    dend_68 { pt3dadd( -50.8464, 283.343, -77.8037, 0.22 ) }
    dend_68 { pt3dadd( -50.1067, 283.415, -78.7841, 0.22 ) }
    dend_68 { pt3dadd( -48.6021, 283.535, -80.9941, 0.22 ) }
    dend_68 { pt3dadd( -48.6021, 283.535, -80.9941, 0.96 ) }
    dend_68 { pt3dadd( -48.0293, 283.517, -81.9132, 0.52 ) }
    dend_68 { pt3dadd( -47.1639, 283.47, -83.3297, 0.81 ) }
    dend_68 { pt3dadd( -46.8211, 283.427, -83.8892, 0.66 ) }
    dend_68 { pt3dadd( -46.7917, 283.416, -83.9548, 0.66 ) }
    dend_68 { pt3dadd( -46.634, 283.182, -84.436, 0.66 ) }
    // Section: dend_44, id: dend_44, parent: dend_38 (entry count 54/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 82.7443, 289.051, -63.5453, 0.29 ) }
    dend_44 { pt3dadd( 82.8899, 290.098, -63.8544, 0.29 ) }
    dend_44 { pt3dadd( 83.0772, 290.833, -64.0548, 0.29 ) }
    dend_44 { pt3dadd( 83.1013, 290.905, -64.0739, 0.29 ) }
    dend_44 { pt3dadd( 83.2666, 291.292, -64.1658, 0.29 ) }
    dend_44 { pt3dadd( 83.3097, 291.383, -64.1991, 0.29 ) }
    dend_44 { pt3dadd( 83.4914, 291.743, -64.3515, 0.59 ) }
    dend_44 { pt3dadd( 83.6635, 292.0, -64.4678, 0.88 ) }
    dend_44 { pt3dadd( 83.702, 292.054, -64.4957, 0.88 ) }
    dend_44 { pt3dadd( 83.927, 292.365, -64.6831, 0.88 ) }
    dend_44 { pt3dadd( 84.5148, 293.28, -65.2346, 1.25 ) }
    dend_44 { pt3dadd( 84.5439, 293.337, -65.2631, 1.25 ) }
    dend_44 { pt3dadd( 84.6808, 293.705, -65.4426, 1.47 ) }
    dend_44 { pt3dadd( 84.774, 294.031, -65.5825, 1.69 ) }
    dend_44 { pt3dadd( 84.9811, 294.895, -65.9182, 1.69 ) }
    dend_44 { pt3dadd( 85.1285, 295.586, -66.171, 1.25 ) }
    dend_44 { pt3dadd( 85.3179, 296.578, -66.4888, 0.88 ) }
    dend_44 { pt3dadd( 85.5092, 297.715, -66.8527, 0.29 ) }
    dend_44 { pt3dadd( 85.664, 298.855, -67.2181, 0.29 ) }
    dend_44 { pt3dadd( 85.6707, 298.932, -67.2414, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 74/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 82.7443, 289.051, -63.5453, 0.22 ) }
    dend_39 { pt3dadd( 84.2516, 288.763, -64.423, 0.22 ) }
    dend_39 { pt3dadd( 84.3181, 288.752, -64.4704, 0.22 ) }
    dend_39 { pt3dadd( 84.9812, 288.656, -64.9731, 0.59 ) }
    dend_39 { pt3dadd( 85.0402, 288.649, -65.015, 0.59 ) }
    dend_39 { pt3dadd( 85.4286, 288.598, -65.3199, 0.81 ) }
    dend_39 { pt3dadd( 85.811, 288.565, -65.682, 0.88 ) }
    dend_39 { pt3dadd( 86.6866, 288.542, -66.6516, 0.37 ) }
    dend_39 { pt3dadd( 86.7511, 288.539, -66.7267, 0.37 ) }
    dend_39 { pt3dadd( 87.2213, 288.536, -67.3131, 0.37 ) }
    dend_39 { pt3dadd( 87.9628, 288.56, -68.2702, 0.44 ) }
    dend_39 { pt3dadd( 88.6235, 288.643, -69.1577, 1.03 ) }
    dend_39 { pt3dadd( 88.7131, 288.663, -69.2777, 1.03 ) }
    dend_39 { pt3dadd( 89.2836, 288.878, -69.8704, 0.29 ) }
    dend_39 { pt3dadd( 89.6342, 289.046, -70.2052, 0.29 ) }
    dend_39 { pt3dadd( 89.7866, 289.141, -70.3371, 0.29 ) }
    dend_39 { pt3dadd( 90.205, 289.405, -70.5804, 0.29 ) }
    dend_39 { pt3dadd( 90.2603, 289.438, -70.6075, 0.29 ) }
    dend_39 { pt3dadd( 90.8278, 289.784, -70.8986, 0.29 ) }
    dend_39 { pt3dadd( 91.8725, 290.321, -71.4764, 0.66 ) }
    dend_39 { pt3dadd( 91.9335, 290.339, -71.5068, 0.66 ) }
    dend_39 { pt3dadd( 92.3684, 290.447, -71.691, 0.66 ) }
    dend_39 { pt3dadd( 92.4324, 290.461, -71.7154, 0.66 ) }
    dend_39 { pt3dadd( 92.8592, 290.544, -71.893, 0.66 ) }
    dend_39 { pt3dadd( 94.1311, 290.775, -72.4246, 0.29 ) }
    dend_39 { pt3dadd( 94.9676, 290.919, -72.7444, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_65()
}

proc basic_shape_65() {
    dend_39 { pt3dadd( 96.0257, 291.078, -73.158, 0.29 ) }
    dend_39 { pt3dadd( 96.0927, 291.087, -73.1851, 0.29 ) }
    dend_39 { pt3dadd( 97.5497, 291.227, -73.9017, 0.29 ) }
    dend_39 { pt3dadd( 97.9209, 291.252, -74.1188, 0.96 ) }
    dend_39 { pt3dadd( 98.3565, 291.274, -74.4055, 1.33 ) }
    dend_39 { pt3dadd( 98.6467, 291.28, -74.6312, 1.33 ) }
    dend_39 { pt3dadd( 98.7099, 291.275, -74.681, 1.33 ) }
    dend_39 { pt3dadd( 100.128, 291.142, -75.7944, 0.29 ) }
    dend_39 { pt3dadd( 100.2, 291.134, -75.8505, 0.29 ) }
    dend_39 { pt3dadd( 100.784, 291.063, -76.3443, 0.29 ) }
    dend_39 { pt3dadd( 101.425, 290.999, -76.9287, 0.66 ) }
    dend_39 { pt3dadd( 102.044, 290.949, -77.4969, 1.03 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 12/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 64.1377, 309.289, -65.0881, 0.22 ) }
    dend_37 { pt3dadd( 63.8201, 310.569, -66.1207, 0.22 ) }
    dend_37 { pt3dadd( 63.6837, 311.33, -66.6186, 0.22 ) }
    dend_37 { pt3dadd( 63.6763, 311.399, -66.6567, 0.22 ) }
    dend_37 { pt3dadd( 63.6624, 311.72, -66.8041, 0.22 ) }
    dend_37 { pt3dadd( 63.6627, 311.921, -66.8863, 0.44 ) }
    dend_37 { pt3dadd( 63.6726, 312.05, -66.9349, 0.44 ) }
    dend_37 { pt3dadd( 63.7487, 312.465, -66.9881, 0.44 ) }
    dend_37 { pt3dadd( 63.8003, 312.665, -67.0192, 0.44 ) }
    dend_37 { pt3dadd( 63.8667, 312.941, -67.0644, 0.44 ) }
    dend_37 { pt3dadd( 63.8814, 313.01, -67.0758, 0.44 ) }
    dend_37 { pt3dadd( 64.0264, 313.942, -67.2719, 0.29 ) }
    dend_37 { pt3dadd( 64.0632, 314.588, -67.4197, 0.29 ) }
    dend_37 { pt3dadd( 64.053, 315.06, -67.5334, 0.29 ) }
    dend_37 { pt3dadd( 64.044, 315.126, -67.5491, 0.52 ) }
    dend_37 { pt3dadd( 63.9634, 315.47, -67.6672, 0.52 ) }
    dend_37 { pt3dadd( 63.7853, 316.062, -67.9765, 0.52 ) }
    dend_37 { pt3dadd( 63.545, 316.721, -68.4898, 0.52 ) }
    dend_37 { pt3dadd( 63.5176, 316.788, -68.5616, 0.52 ) }
    dend_37 { pt3dadd( 63.3403, 317.203, -69.0822, 0.52 ) }
    dend_37 { pt3dadd( 63.0344, 317.953, -70.1003, 0.81 ) }
    dend_37 { pt3dadd( 62.8245, 318.706, -71.039, 1.18 ) }
    dend_37 { pt3dadd( 62.7213, 319.371, -71.8361, 0.74 ) }
    dend_37 { pt3dadd( 62.68, 320.131, -72.7239, 0.74 ) }
    dend_37 { pt3dadd( 62.6804, 320.18, -72.7743, 0.74 ) }
    dend_37 { pt3dadd( 62.6986, 320.392, -72.9728, 0.29 ) }
    dend_37 { pt3dadd( 62.9104, 321.951, -74.141, 0.29 ) }
    dend_37 { pt3dadd( 63.0185, 322.608, -74.5329, 0.66 ) }
    dend_37 { pt3dadd( 63.0386, 322.73, -74.5926, 0.66 ) }
    dend_37 { pt3dadd( 63.125, 323.287, -74.8437, 0.66 ) }
    dend_37 { pt3dadd( 63.2884, 324.729, -75.4778, 0.66 ) }
    dend_37 { pt3dadd( 63.3289, 325.046, -75.631, 1.33 ) }
    dend_37 { pt3dadd( 63.4488, 325.833, -75.9869, 1.77 ) }
    dend_37 { pt3dadd( 63.5228, 326.264, -76.1624, 1.77 ) }
    dend_37 { pt3dadd( 63.6811, 327.119, -76.4925, 0.44 ) }
    dend_37 { pt3dadd( 63.8782, 328.122, -76.86, 0.44 ) }
    dend_37 { pt3dadd( 64.3918, 331.17, -77.9712, 0.29 ) }
    dend_37 { pt3dadd( 64.6121, 332.838, -78.6102, 0.29 ) }
    dend_37 { pt3dadd( 64.6267, 332.967, -78.6614, 0.29 ) }
    dend_37 { pt3dadd( 64.6627, 333.373, -78.8284, 0.29 ) }
    dend_37 { pt3dadd( 64.6652, 333.437, -78.8563, 0.29 ) }
    dend_37 { pt3dadd( 64.647, 335.963, -80.0646, 0.29 ) }
    dend_37 { pt3dadd( 64.5748, 336.861, -80.5029, 0.29 ) }
    dend_37 { pt3dadd( 64.5688, 336.931, -80.5398, 0.29 ) }
    dend_37 { pt3dadd( 64.5224, 337.889, -81.0397, 1.18 ) }
    dend_37 { pt3dadd( 64.5386, 338.536, -81.3268, 0.22 ) }
    dend_37 { pt3dadd( 64.6408, 339.702, -81.7517, 0.22 ) }
    dend_37 { pt3dadd( 64.719, 340.142, -81.861, 0.96 ) }
    dend_37 { pt3dadd( 64.7755, 340.416, -81.9193, 0.96 ) }
    dend_37 { pt3dadd( 64.8684, 340.865, -81.9937, 0.22 ) }
    dend_37 { pt3dadd( 65.3064, 342.958, -82.1776, 0.22 ) }
    dend_37 { pt3dadd( 65.3458, 343.155, -82.1876, 0.81 ) }
    dend_37 { pt3dadd( 65.3953, 343.437, -82.2027, 0.81 ) }
    dend_37 { pt3dadd( 65.4732, 343.907, -82.2271, 0.15 ) }
    dend_37 { pt3dadd( 65.4957, 344.043, -82.2338, 0.15 ) }
    dend_37 { pt3dadd( 65.748, 345.602, -82.302, 0.15 ) }
    dend_37 { pt3dadd( 65.8385, 346.096, -82.3273, 0.59 ) }
    dend_37 { pt3dadd( 65.8522, 346.164, -82.3304, 0.59 ) }
    dend_37 { pt3dadd( 65.8971, 346.376, -82.3372, 0.59 ) }
    dend_37 { pt3dadd( 65.9124, 346.443, -82.3372, 0.59 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 72/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 64.1377, 309.289, -65.0881, 0.29 ) }
    dend_36 { pt3dadd( 62.7304, 309.095, -65.9266, 0.29 ) }
    dend_36 { pt3dadd( 61.8362, 309.003, -66.4413, 0.52 ) }
    dend_36 { pt3dadd( 61.4054, 308.969, -66.6792, 0.66 ) }
    dend_36 { pt3dadd( 61.3438, 308.965, -66.7122, 0.66 ) }
    dend_36 { pt3dadd( 60.6913, 308.942, -67.0567, 0.66 ) }
    dend_36 { pt3dadd( 60.1035, 308.927, -67.3587, 0.66 ) }
    dend_36 { pt3dadd( 57.2656, 308.9, -68.7022, 0.22 ) }
    dend_36 { pt3dadd( 56.9277, 308.913, -68.8687, 0.59 ) }
    dend_36 { pt3dadd( 56.6575, 308.939, -69.0102, 0.59 ) }
    dend_36 { pt3dadd( 56.5871, 308.949, -69.048, 0.59 ) }
    dend_36 { pt3dadd( 56.2645, 309.023, -69.2138, 0.59 ) }
    dend_36 { pt3dadd( 56.1526, 309.056, -69.2741, 0.59 ) }
    dend_36 { pt3dadd( 53.6969, 309.936, -70.5619, 0.22 ) }
    dend_36 { pt3dadd( 53.1451, 310.136, -70.861, 0.22 ) }
    dend_36 { pt3dadd( 52.9271, 310.217, -70.9943, 0.44 ) }
    dend_36 { pt3dadd( 51.6636, 310.71, -71.8302, 0.22 ) }
    dend_36 { pt3dadd( 50.7597, 311.127, -72.398, 0.74 ) }
    dend_36 { pt3dadd( 50.4229, 311.304, -72.6005, 0.88 ) }
    dend_36 { pt3dadd( 50.3616, 311.342, -72.6348, 0.88 ) }
    dend_36 { pt3dadd( 49.2648, 312.054, -73.1291, 0.22 ) }
    dend_36 { pt3dadd( 49.19, 312.103, -73.156, 0.22 ) }
    dend_36 { pt3dadd( 47.0972, 313.589, -73.6685, 0.22 ) }
    dend_36 { pt3dadd( 46.312, 314.207, -73.6502, 1.18 ) }
    dend_36 { pt3dadd( 45.9574, 314.5, -73.6074, 1.47 ) }
    dend_36 { pt3dadd( 44.7354, 315.521, -73.3945, 0.22 ) }
    dend_36 { pt3dadd( 44.683, 315.564, -73.3833, 0.22 ) }
    dend_36 { pt3dadd( 43.868, 316.251, -73.1857, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_66()
}

proc basic_shape_66() {
    dend_36 { pt3dadd( 40.3138, 319.281, -72.2209, 0.22 ) }
    dend_36 { pt3dadd( 40.2622, 319.325, -72.2051, 0.22 ) }
    dend_36 { pt3dadd( 37.7812, 321.404, -71.4403, 0.22 ) }
    dend_36 { pt3dadd( 36.7427, 322.28, -71.131, 0.22 ) }
    dend_36 { pt3dadd( 36.0893, 322.831, -70.9271, 0.88 ) }
    dend_36 { pt3dadd( 35.7703, 323.097, -70.8216, 1.11 ) }
    dend_36 { pt3dadd( 34.7353, 323.935, -70.4683, 1.11 ) }
    dend_36 { pt3dadd( 33.978, 324.563, -70.1695, 0.22 ) }
    dend_36 { pt3dadd( 33.7359, 324.79, -70.0137, 0.52 ) }
    dend_36 { pt3dadd( 33.6072, 324.92, -69.9193, 0.74 ) }
    dend_36 { pt3dadd( 33.3739, 325.166, -69.7788, 0.74 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 11/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 26.5917, 123.16, -147.951, 0.29 ) }
    dend_31 { pt3dadd( 26.0359, 123.525, -147.734, 0.29 ) }
    dend_31 { pt3dadd( 26.0052, 123.538, -147.672, 0.29 ) }
    dend_31 { pt3dadd( 24.9836, 123.935, -145.5, 0.29 ) }
    dend_31 { pt3dadd( 24.8323, 123.993, -145.186, 0.81 ) }
    dend_31 { pt3dadd( 24.1842, 124.239, -143.872, 0.22 ) }
    dend_31 { pt3dadd( 23.1418, 124.648, -141.883, 0.22 ) }
    dend_31 { pt3dadd( 17.8592, 126.708, -131.855, 0.22 ) }
    dend_31 { pt3dadd( 17.7546, 126.747, -131.652, 0.66 ) }
    dend_31 { pt3dadd( 17.3839, 126.879, -130.893, 0.66 ) }
    dend_31 { pt3dadd( 17.2588, 126.921, -130.632, 0.22 ) }
    dend_31 { pt3dadd( 16.5893, 127.133, -129.211, 0.22 ) }
    dend_31 { pt3dadd( 16.3901, 127.188, -128.715, 0.59 ) }
    dend_31 { pt3dadd( 16.2603, 127.265, -128.697, 0.59 ) }
    dend_31 { pt3dadd( 15.7654, 127.569, -128.617, 0.59 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 26/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 26.5917, 123.16, -147.951, 0.66 ) }
    dend_30 { pt3dadd( 25.3956, 122.113, -148.391, 0.66 ) }
    dend_30 { pt3dadd( 24.618, 121.486, -148.626, 0.44 ) }
    dend_30 { pt3dadd( 24.0221, 121.048, -148.768, 0.44 ) }
    dend_30 { pt3dadd( 23.3644, 120.6, -148.917, 0.22 ) }
    dend_30 { pt3dadd( 23.2396, 120.518, -148.945, 0.22 ) }
    dend_30 { pt3dadd( 22.4702, 119.991, -149.075, 0.22 ) }
    dend_30 { pt3dadd( 22.2246, 119.836, -149.087, 0.52 ) }
    dend_30 { pt3dadd( 21.5705, 119.408, -149.093, 0.52 ) }
    dend_30 { pt3dadd( 20.9058, 118.924, -149.089, 0.22 ) }
    dend_30 { pt3dadd( 20.8509, 118.882, -149.088, 0.22 ) }
    dend_30 { pt3dadd( 19.356, 117.721, -149.047, 0.22 ) }
    dend_30 { pt3dadd( 19.2993, 117.676, -149.045, 0.22 ) }
    dend_30 { pt3dadd( 18.1794, 116.781, -148.925, 0.22 ) }
    dend_30 { pt3dadd( 17.5425, 116.266, -148.815, 0.88 ) }
    dend_30 { pt3dadd( 17.0271, 115.852, -148.7, 0.88 ) }
    dend_30 { pt3dadd( 16.6404, 115.551, -148.609, 0.88 ) }
    dend_30 { pt3dadd( 16.5751, 115.505, -148.594, 0.88 ) }
    dend_30 { pt3dadd( 15.6896, 114.875, -148.372, 0.22 ) }
    dend_30 { pt3dadd( 14.4056, 113.851, -147.6, 0.22 ) }
    dend_30 { pt3dadd( 14.1862, 113.658, -147.405, 0.88 ) }
    dend_30 { pt3dadd( 14.1455, 113.609, -147.357, 0.88 ) }
    dend_30 { pt3dadd( 13.8241, 113.124, -146.902, 0.88 ) }
    dend_30 { pt3dadd( 13.7703, 113.022, -146.804, 0.88 ) }
    dend_30 { pt3dadd( 12.811, 110.568, -144.49, 0.22 ) }
    dend_30 { pt3dadd( 12.7952, 110.515, -144.431, 0.22 ) }
    dend_30 { pt3dadd( 12.4637, 109.317, -143.029, 0.22 ) }
    dend_30 { pt3dadd( 12.4382, 109.208, -142.904, 0.22 ) }
    dend_30 { pt3dadd( 12.2624, 108.272, -141.835, 0.66 ) }
    dend_30 { pt3dadd( 12.1785, 107.782, -141.299, 0.66 ) }
    dend_30 { pt3dadd( 11.8964, 105.876, -139.404, 0.15 ) }
    dend_30 { pt3dadd( 11.8909, 105.831, -139.352, 0.15 ) }
    dend_30 { pt3dadd( 11.84, 105.32, -138.666, 0.29 ) }
    dend_30 { pt3dadd( 11.8392, 105.272, -138.602, 0.29 ) }
    dend_30 { pt3dadd( 11.8575, 105.05, -138.356, 0.59 ) }
    dend_30 { pt3dadd( 11.865, 105.0, -138.309, 0.59 ) }
    dend_30 { pt3dadd( 12.1381, 103.265, -137.142, 0.59 ) }
    dend_30 { pt3dadd( 12.1906, 102.811, -136.888, 0.59 ) }
    dend_30 { pt3dadd( 12.2534, 102.116, -136.549, 0.22 ) }
    dend_30 { pt3dadd( 12.35, 100.616, -135.933, 0.22 ) }
    dend_30 { pt3dadd( 12.3788, 100.035, -135.75, 1.03 ) }
    dend_30 { pt3dadd( 12.4136, 99.1276, -135.541, 1.4 ) }
    dend_30 { pt3dadd( 12.4492, 97.9238, -135.398, 1.4 ) }
    dend_30 { pt3dadd( 12.4606, 97.6214, -135.36, 1.4 ) }
    dend_30 { pt3dadd( 12.4909, 96.5639, -135.236, 0.29 ) }
    dend_30 { pt3dadd( 12.5008, 95.1575, -135.033, 0.29 ) }
    dend_30 { pt3dadd( 12.5006, 95.0894, -135.022, 0.29 ) }
    dend_30 { pt3dadd( 12.5007, 93.8496, -134.797, 0.29 ) }
    dend_30 { pt3dadd( 12.4883, 92.9923, -134.625, 0.96 ) }
    dend_30 { pt3dadd( 12.4733, 92.3402, -134.427, 1.18 ) }
    dend_30 { pt3dadd( 12.4581, 91.7439, -134.178, 1.18 ) }
    dend_30 { pt3dadd( 12.4581, 91.6916, -134.151, 1.18 ) }
    dend_30 { pt3dadd( 12.4619, 91.2991, -133.866, 1.18 ) }
    dend_30 { pt3dadd( 12.4628, 91.2532, -133.824, 1.18 ) }
    dend_30 { pt3dadd( 12.4135, 89.9787, -132.44, 0.29 ) }
    dend_30 { pt3dadd( 12.3794, 89.4006, -131.746, 0.29 ) }
    dend_30 { pt3dadd( 12.3273, 88.758, -130.965, 0.29 ) }
    dend_30 { pt3dadd( 12.154, 87.3133, -129.277, 0.29 ) }
    dend_30 { pt3dadd( 12.1425, 87.2417, -129.199, 0.29 ) }
    dend_30 { pt3dadd( 11.802, 85.4308, -127.253, 0.29 ) }
    dend_30 { pt3dadd( 11.7886, 85.3747, -127.195, 0.29 ) }
    dend_30 { pt3dadd( 11.6465, 84.8985, -126.666, 1.18 ) }
    dend_30 { pt3dadd( 11.4721, 84.4272, -126.143, 1.69 ) }
    dend_30 { pt3dadd( 11.2852, 83.8661, -125.717, 2.21 ) }
    // Section: dend_21, id: dend_21, parent: dend_7 (entry count 90/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 57.0945, 270.089, -124.756, 0.52 ) }
    dend_21 { pt3dadd( 58.0738, 270.331, -124.876, 0.52 ) }
    dend_21 { pt3dadd( 59.3012, 270.66, -125.146, 0.52 ) }
    dend_21 { pt3dadd( 59.367, 270.678, -125.163, 0.52 ) }
    dend_21 { pt3dadd( 61.0511, 271.237, -125.647, 0.52 ) }
    dend_21 { pt3dadd( 61.2086, 271.294, -125.694, 0.52 ) }
    dend_21 { pt3dadd( 62.0229, 271.624, -125.947, 1.03 ) }
    dend_21 { pt3dadd( 63.0352, 272.099, -126.385, 1.03 ) }
    dend_21 { pt3dadd( 63.0973, 272.138, -126.417, 1.03 ) }
    dend_21 { pt3dadd( 63.7672, 272.631, -126.779, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_67()
}

proc basic_shape_67() {
    dend_21 { pt3dadd( 63.8149, 272.674, -126.807, 0.81 ) }
    dend_21 { pt3dadd( 64.2933, 273.109, -127.11, 1.03 ) }
    dend_21 { pt3dadd( 65.0646, 273.845, -127.62, 1.03 ) }
    dend_21 { pt3dadd( 65.7565, 274.51, -128.141, 0.22 ) }
    dend_21 { pt3dadd( 66.5542, 275.283, -128.82, 0.22 ) }
    dend_21 { pt3dadd( 66.5963, 275.324, -128.859, 0.22 ) }
    dend_21 { pt3dadd( 67.0532, 275.748, -129.264, 0.44 ) }
    dend_21 { pt3dadd( 67.5199, 276.168, -129.686, 0.44 ) }
    dend_21 { pt3dadd( 68.4832, 277.034, -130.62, 0.44 ) }
    dend_21 { pt3dadd( 69.168, 277.686, -131.394, 0.15 ) }
    dend_21 { pt3dadd( 69.2473, 277.771, -131.489, 0.15 ) }
    dend_21 { pt3dadd( 69.8274, 278.458, -132.244, 0.15 ) }
    dend_21 { pt3dadd( 70.3405, 279.124, -132.945, 0.15 ) }
    dend_21 { pt3dadd( 70.917, 280.003, -133.888, 0.44 ) }
    dend_21 { pt3dadd( 71.2866, 280.678, -134.617, 0.44 ) }
    dend_21 { pt3dadd( 71.6381, 281.42, -135.472, 0.44 ) }
    dend_21 { pt3dadd( 72.0662, 282.353, -136.595, 1.25 ) }
    dend_21 { pt3dadd( 72.1295, 282.49, -136.771, 1.25 ) }
    dend_21 { pt3dadd( 72.486, 283.224, -137.728, 1.92 ) }
    dend_21 { pt3dadd( 73.0744, 284.313, -139.167, 0.44 ) }
    dend_21 { pt3dadd( 73.58, 285.129, -140.304, 0.29 ) }
    dend_21 { pt3dadd( 74.1296, 285.878, -141.398, 0.29 ) }
    dend_21 { pt3dadd( 74.5693, 286.394, -142.137, 0.59 ) }
    dend_21 { pt3dadd( 74.6035, 286.429, -142.188, 0.59 ) }
    dend_21 { pt3dadd( 74.8982, 286.688, -142.54, 0.88 ) }
    dend_21 { pt3dadd( 74.9398, 286.723, -142.584, 0.88 ) }
    dend_21 { pt3dadd( 75.3239, 287.066, -142.925, 0.88 ) }
    dend_21 { pt3dadd( 75.3668, 287.106, -142.961, 0.88 ) }
    dend_21 { pt3dadd( 76.3228, 288.037, -143.772, 0.29 ) }
    dend_21 { pt3dadd( 76.781, 288.481, -144.153, 0.29 ) }
    dend_21 { pt3dadd( 77.4596, 289.138, -144.68, 0.29 ) }
    dend_21 { pt3dadd( 78.2493, 289.895, -145.25, 0.15 ) }
    dend_21 { pt3dadd( 78.9476, 290.56, -145.728, 1.18 ) }
    dend_21 { pt3dadd( 79.0008, 290.61, -145.761, 1.18 ) }
    dend_21 { pt3dadd( 79.4908, 291.074, -146.034, 1.62 ) }
    dend_21 { pt3dadd( 80.0994, 291.655, -146.62, 1.62 ) }
    dend_21 { pt3dadd( 81.0087, 292.52, -147.698, 1.03 ) }
    dend_21 { pt3dadd( 81.6833, 293.189, -148.594, 0.52 ) }
    dend_21 { pt3dadd( 82.151, 293.665, -149.25, 1.25 ) }
    dend_21 { pt3dadd( 82.6549, 294.187, -150.026, 1.69 ) }
    dend_21 { pt3dadd( 84.9531, 296.577, -153.846, 0.22 ) }
    dend_21 { pt3dadd( 85.3387, 296.972, -154.55, 0.22 ) }
    dend_21 { pt3dadd( 85.9264, 297.563, -155.698, 0.22 ) }
    dend_21 { pt3dadd( 85.9549, 297.592, -155.756, 0.22 ) }
    dend_21 { pt3dadd( 86.4517, 298.097, -156.756, 0.66 ) }
    dend_21 { pt3dadd( 86.7726, 298.433, -157.33, 0.66 ) }
    dend_21 { pt3dadd( 87.4926, 299.292, -158.254, 0.22 ) }
    dend_21 { pt3dadd( 87.5227, 299.332, -158.302, 0.22 ) }
    dend_21 { pt3dadd( 87.7057, 299.581, -158.699, 0.44 ) }
    dend_21 { pt3dadd( 87.9199, 299.89, -159.168, 0.44 ) }
    dend_21 { pt3dadd( 88.3221, 300.479, -159.989, 1.25 ) }
    dend_21 { pt3dadd( 88.5082, 300.756, -160.373, 1.25 ) }
    dend_21 { pt3dadd( 88.5359, 300.795, -160.424, 1.25 ) }
    dend_21 { pt3dadd( 89.7223, 302.328, -162.497, 0.22 ) }
    dend_21 { pt3dadd( 90.1406, 302.804, -163.191, 0.22 ) }
    dend_21 { pt3dadd( 90.3932, 303.073, -163.639, 0.22 ) }
    dend_21 { pt3dadd( 90.4264, 303.107, -163.693, 0.22 ) }
    dend_21 { pt3dadd( 90.7759, 303.471, -164.327, 0.66 ) }
    dend_21 { pt3dadd( 90.9668, 303.674, -164.673, 1.03 ) }
    dend_21 { pt3dadd( 91.6644, 304.43, -165.934, 1.33 ) }
    dend_21 { pt3dadd( 92.6952, 305.551, -167.997, 0.22 ) }
    dend_21 { pt3dadd( 93.0906, 305.997, -168.853, 0.22 ) }
    dend_21 { pt3dadd( 93.8905, 306.917, -170.655, 1.11 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 63/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 57.0945, 270.089, -124.756, 0.22 ) }
    dend_8 { pt3dadd( 56.8205, 271.398, -124.846, 0.22 ) }
    dend_8 { pt3dadd( 56.5148, 273.295, -125.187, 0.22 ) }
    dend_8 { pt3dadd( 56.5007, 273.874, -125.312, 0.59 ) }
    dend_8 { pt3dadd( 56.5219, 274.588, -125.475, 0.81 ) }
    dend_8 { pt3dadd( 56.5317, 274.789, -125.532, 0.81 ) }
    dend_8 { pt3dadd( 56.5821, 275.638, -125.803, 0.81 ) }
    dend_8 { pt3dadd( 56.7588, 277.199, -126.376, 0.22 ) }
    dend_8 { pt3dadd( 57.0438, 279.104, -127.299, 0.22 ) }
    dend_8 { pt3dadd( 57.0517, 279.164, -127.334, 0.22 ) }
    dend_8 { pt3dadd( 57.1878, 280.335, -128.114, 0.52 ) }
    dend_8 { pt3dadd( 57.1989, 280.458, -128.198, 0.52 ) }
    dend_8 { pt3dadd( 57.2364, 281.256, -128.767, 0.52 ) }
    dend_8 { pt3dadd( 57.2123, 282.426, -129.589, 0.52 ) }
    dend_8 { pt3dadd( 57.1375, 283.246, -130.206, 0.29 ) }
    dend_8 { pt3dadd( 57.1336, 283.305, -130.244, 0.29 ) }
    dend_8 { pt3dadd( 57.0908, 284.431, -130.853, 0.29 ) }
    dend_8 { pt3dadd( 57.0654, 285.253, -131.257, 0.96 ) }
    dend_8 { pt3dadd( 57.0641, 285.326, -131.287, 0.96 ) }
    dend_8 { pt3dadd( 57.0603, 285.536, -131.348, 0.96 ) }
    dend_8 { pt3dadd( 57.0096, 286.649, -131.668, 0.29 ) }
    dend_8 { pt3dadd( 57.0056, 286.714, -131.689, 0.29 ) }
    dend_8 { pt3dadd( 56.8792, 287.912, -132.093, 0.29 ) }
    dend_8 { pt3dadd( 56.8697, 287.977, -132.113, 0.29 ) }
    dend_8 { pt3dadd( 56.7155, 288.95, -132.428, 0.96 ) }
    dend_8 { pt3dadd( 56.5013, 290.132, -132.826, 1.4 ) }
    dend_8 { pt3dadd( 56.4577, 290.332, -132.897, 1.4 ) }
    dend_8 { pt3dadd( 56.2691, 291.141, -133.174, 1.4 ) }
    dend_8 { pt3dadd( 56.1046, 291.747, -133.36, 1.4 ) }
    // Section: dend_154, id: dend_154, parent: dend_150 (entry count 92/100)
    dend_154 { pt3dclear() }
    dend_154 { pt3dadd( 197.905, -277.651, 60.1452, 0.22 ) }
    dend_154 { pt3dadd( 197.227, -280.505, 66.3296, 0.22 ) }
    dend_154 { pt3dadd( 197.178, -280.675, 66.667, 0.52 ) }
    dend_154 { pt3dadd( 197.067, -280.988, 67.2183, 0.52 ) }
    dend_154 { pt3dadd( 197.05, -281.031, 67.2863, 0.52 ) }
    dend_154 { pt3dadd( 196.838, -281.455, 67.8732, 0.22 ) }
    dend_154 { pt3dadd( 196.531, -281.892, 68.3724, 0.22 ) }
    dend_154 { pt3dadd( 196.346, -282.026, 68.3724, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_68()
}

proc basic_shape_68() {
    dend_154 { pt3dadd( 195.634, -282.276, 68.353, 0.22 ) }
    dend_154 { pt3dadd( 195.565, -282.289, 68.3503, 0.22 ) }
    dend_154 { pt3dadd( 194.415, -282.348, 68.2995, 0.22 ) }
    dend_154 { pt3dadd( 192.877, -282.255, 68.2243, 0.22 ) }
    dend_154 { pt3dadd( 192.673, -282.2, 68.2097, 0.22 ) }
    dend_154 { pt3dadd( 189.919, -281.021, 67.962, 0.22 ) }
    dend_154 { pt3dadd( 189.727, -280.891, 67.9518, 0.22 ) }
    dend_154 { pt3dadd( 189.027, -280.203, 67.9644, 0.22 ) }
    dend_154 { pt3dadd( 188.899, -280.022, 67.9782, 0.22 ) }
    dend_154 { pt3dadd( 187.711, -277.626, 68.2655, 0.22 ) }
    dend_154 { pt3dadd( 187.688, -277.563, 68.2755, 0.22 ) }
    dend_154 { pt3dadd( 187.324, -275.777, 68.6334, 0.22 ) }
    dend_154 { pt3dadd( 187.155, -274.755, 68.855, 0.22 ) }
    dend_154 { pt3dadd( 187.124, -274.508, 68.9161, 0.22 ) }
    dend_154 { pt3dadd( 187.047, -273.792, 69.123, 0.22 ) }
    dend_154 { pt3dadd( 187.045, -273.695, 69.1635, 0.22 ) }
    dend_154 { pt3dadd( 187.031, -272.872, 69.4647, 0.22 ) }
    dend_154 { pt3dadd( 187.032, -272.726, 69.4839, 0.22 ) }
    // Section: dend_151, id: dend_151, parent: dend_150 (entry count 18/100)
    dend_151 { pt3dclear() }
    dend_151 { pt3dadd( 197.905, -277.651, 60.1452, 0.44 ) }
    dend_151 { pt3dadd( 199.71, -279.594, 64.1309, 0.44 ) }
    dend_151 { pt3dadd( 200.264, -280.108, 65.1349, 0.44 ) }
    dend_151 { pt3dadd( 200.374, -280.194, 65.2931, 1.03 ) }
    dend_151 { pt3dadd( 200.409, -280.219, 65.3365, 1.03 ) }
    dend_151 { pt3dadd( 200.964, -280.569, 65.9247, 1.4 ) }
    dend_151 { pt3dadd( 201.014, -280.601, 65.9783, 1.4 ) }
    dend_151 { pt3dadd( 202.106, -281.065, 66.3321, 1.4 ) }
    dend_151 { pt3dadd( 202.837, -281.308, 66.6107, 0.74 ) }
    dend_151 { pt3dadd( 202.901, -281.327, 66.6353, 0.74 ) }
    dend_151 { pt3dadd( 203.558, -281.498, 66.9005, 0.74 ) }
    // Section: dend_139, id: dend_139, parent: dend_137 (entry count 29/100)
    dend_139 { pt3dclear() }
    dend_139 { pt3dadd( 132.498, -239.387, 15.8863, 1.25 ) }
    dend_139 { pt3dadd( 132.114, -239.787, 16.188, 1.25 ) }
    dend_139 { pt3dadd( 131.24, -240.586, 16.7984, 0.44 ) }
    dend_139 { pt3dadd( 130.795, -240.943, 17.0676, 0.37 ) }
    dend_139 { pt3dadd( 130.481, -241.196, 17.2577, 0.37 ) }
    dend_139 { pt3dadd( 129.801, -241.742, 17.6691, 0.37 ) }
    dend_139 { pt3dadd( 129.274, -242.165, 17.9877, 0.22 ) }
    dend_139 { pt3dadd( 129.035, -242.333, 18.1256, 0.44 ) }
    dend_139 { pt3dadd( 128.577, -242.584, 18.3133, 0.44 ) }
    // Section: dend_138, id: dend_138, parent: dend_137 (entry count 38/100)
    dend_138 { pt3dclear() }
    dend_138 { pt3dadd( 132.498, -239.387, 15.8863, 0.37 ) }
    dend_138 { pt3dadd( 133.565, -239.63, 15.8863, 0.37 ) }
    dend_138 { pt3dadd( 134.0, -239.725, 15.8863, 0.37 ) }
    dend_138 { pt3dadd( 134.792, -239.847, 15.8863, 0.22 ) }
    dend_138 { pt3dadd( 135.317, -239.807, 15.8863, 0.22 ) }
    dend_138 { pt3dadd( 135.317, -239.807, 15.8863, 0.44 ) }
    dend_138 { pt3dadd( 135.383, -239.734, 15.8863, 0.66 ) }
    dend_138 { pt3dadd( 135.411, -239.64, 15.8863, 0.66 ) }
    dend_138 { pt3dadd( 135.505, -238.996, 15.8863, 0.22 ) }
    dend_138 { pt3dadd( 135.593, -237.34, 15.8863, 0.22 ) }
    dend_138 { pt3dadd( 135.598, -236.825, 15.8863, 0.22 ) }
    // Section: dend_112, id: dend_112, parent: dend_108 (entry count 49/100)
    dend_112 { pt3dclear() }
    dend_112 { pt3dadd( -32.5941, -386.31, -1.1615, 0.52 ) }
    dend_112 { pt3dadd( -30.8913, -386.219, -1.82953, 0.52 ) }
    dend_112 { pt3dadd( -29.413, -386.155, -2.42355, 0.22 ) }
    dend_112 { pt3dadd( -28.085, -386.111, -2.96142, 0.22 ) }
    dend_112 { pt3dadd( -28.0285, -386.111, -2.98399, 0.22 ) }
    dend_112 { pt3dadd( -26.4866, -386.141, -3.58039, 0.22 ) }
    dend_112 { pt3dadd( -25.7187, -386.165, -3.86798, 0.22 ) }
    dend_112 { pt3dadd( -25.507, -386.174, -3.96238, 0.52 ) }
    dend_112 { pt3dadd( -25.4066, -386.173, -3.99728, 0.52 ) }
    dend_112 { pt3dadd( -24.9195, -386.208, -4.18166, 0.52 ) }
    dend_112 { pt3dadd( -24.6617, -386.237, -4.26419, 0.22 ) }
    dend_112 { pt3dadd( -24.4627, -386.285, -4.28582, 0.22 ) }
    dend_112 { pt3dadd( -23.5631, -386.399, -4.45504, 0.22 ) }
    dend_112 { pt3dadd( -22.9303, -386.409, -4.60094, 0.52 ) }
    dend_112 { pt3dadd( -22.8626, -386.403, -4.62075, 0.52 ) }
    // Section: dend_109, id: dend_109, parent: dend_108 (entry count 64/100)
    dend_109 { pt3dclear() }
    dend_109 { pt3dadd( -32.5941, -386.31, -1.1615, 0.29 ) }
    dend_109 { pt3dadd( -32.4633, -387.814, -0.973891, 0.29 ) }
    dend_109 { pt3dadd( -32.2845, -388.859, -0.74813, 0.29 ) }
    dend_109 { pt3dadd( -32.2199, -389.12, -0.677796, 0.29 ) }
    dend_109 { pt3dadd( -31.9709, -390.027, -0.416886, 0.29 ) }
    dend_109 { pt3dadd( -31.9413, -390.131, -0.390474, 0.29 ) }
    dend_109 { pt3dadd( -31.6229, -391.246, -0.12821, 0.29 ) }
    dend_109 { pt3dadd( -31.567, -391.385, -0.103219, 0.29 ) }
    dend_109 { pt3dadd( -31.1241, -392.411, -0.0101152, 0.29 ) }
    dend_109 { pt3dadd( -31.042, -392.612, -0.00737784, 0.29 ) }
    dend_109 { pt3dadd( -30.642, -393.615, -0.0675814, 0.29 ) }
    dend_109 { pt3dadd( -30.6163, -393.681, -0.0748556, 0.29 ) }
    dend_109 { pt3dadd( -30.1491, -394.919, -0.274469, 0.29 ) }
    dend_109 { pt3dadd( -29.8848, -395.584, -0.372356, 0.59 ) }
    dend_109 { pt3dadd( -29.7767, -395.834, -0.422827, 0.59 ) }
    dend_109 { pt3dadd( -29.3964, -396.709, -0.622662, 0.59 ) }
    dend_109 { pt3dadd( -29.1255, -397.334, -0.77618, 0.81 ) }
    dend_109 { pt3dadd( -28.8573, -398.064, -0.973719, 0.81 ) }
    dend_109 { pt3dadd( -28.5965, -398.934, -1.22388, 0.81 ) }
    dend_109 { pt3dadd( -28.3419, -400.116, -1.5903, 0.29 ) }
    dend_109 { pt3dadd( -28.2191, -400.869, -1.8365, 0.29 ) }
    dend_109 { pt3dadd( -28.2096, -400.943, -1.86223, 0.29 ) }
    dend_109 { pt3dadd( -28.0428, -402.371, -2.37735, 0.29 ) }
    dend_109 { pt3dadd( -28.021, -402.517, -2.42526, 0.29 ) }
    dend_109 { pt3dadd( -27.8091, -403.393, -2.67092, 0.29 ) }
    dend_109 { pt3dadd( -27.754, -403.518, -2.69303, 0.29 ) }
    dend_109 { pt3dadd( -27.4043, -404.141, -2.82123, 0.29 ) }
    dend_109 { pt3dadd( -27.3664, -404.198, -2.83368, 0.29 ) }
    dend_109 { pt3dadd( -26.627, -405.095, -3.03054, 0.29 ) }
    dend_109 { pt3dadd( -26.2041, -405.613, -3.16155, 1.25 ) }
    dend_109 { pt3dadd( -25.8677, -406.133, -3.3403, 1.4 ) }
    dend_109 { pt3dadd( -25.6622, -407.102, -3.68983, 0.59 ) }
    dend_109 { pt3dadd( -25.6711, -407.163, -3.72238, 0.59 ) }
    dend_109 { pt3dadd( -25.7408, -407.363, -4.03759, 0.29 ) }
    dend_109 { pt3dadd( -25.7549, -407.394, -4.09873, 0.29 ) }
    dend_109 { pt3dadd( -26.0354, -407.884, -5.10767, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_69()
}

proc basic_shape_69() {
    dend_109 { pt3dadd( -26.3149, -408.328, -6.00335, 0.29 ) }
    dend_109 { pt3dadd( -26.7217, -408.97, -7.315, 1.4 ) }
    dend_109 { pt3dadd( -28.1946, -411.105, -12.152, 0.22 ) }
    dend_109 { pt3dadd( -28.2112, -411.128, -12.2188, 0.22 ) }
    dend_109 { pt3dadd( -28.4645, -411.549, -13.494, 0.22 ) }
    dend_109 { pt3dadd( -28.6317, -411.856, -14.4813, 0.22 ) }
    dend_109 { pt3dadd( -28.6426, -411.877, -14.5471, 0.22 ) }
    dend_109 { pt3dadd( -29.1428, -412.832, -17.3666, 1.4 ) }
    dend_109 { pt3dadd( -30.1052, -414.697, -22.1407, 0.22 ) }
    dend_109 { pt3dadd( -30.3543, -415.205, -23.4137, 0.22 ) }
    dend_109 { pt3dadd( -30.4234, -415.363, -23.8066, 0.22 ) }
    dend_109 { pt3dadd( -30.6286, -415.854, -24.9193, 0.22 ) }
    dend_109 { pt3dadd( -30.6759, -415.967, -25.1141, 0.22 ) }
    dend_109 { pt3dadd( -30.9896, -416.705, -25.8363, 0.22 ) }
    dend_109 { pt3dadd( -31.0167, -416.761, -25.8717, 0.22 ) }
    dend_109 { pt3dadd( -31.2211, -417.253, -26.2649, 0.22 ) }
    dend_109 { pt3dadd( -31.4532, -418.107, -27.0303, 1.03 ) }
    dend_109 { pt3dadd( -31.5244, -418.696, -27.6685, 1.4 ) }
    dend_109 { pt3dadd( -31.5974, -420.098, -29.3236, 0.22 ) }
    dend_109 { pt3dadd( -31.5918, -420.188, -29.4409, 0.22 ) }
    dend_109 { pt3dadd( -31.4596, -421.143, -30.7368, 0.22 ) }
    dend_109 { pt3dadd( -31.2866, -421.93, -31.8443, 1.33 ) }
    dend_109 { pt3dadd( -30.8905, -423.11, -33.6994, 0.29 ) }
    dend_109 { pt3dadd( -30.8668, -423.157, -33.7838, 0.29 ) }
    dend_109 { pt3dadd( -30.329, -423.941, -35.2715, 0.29 ) }
    dend_109 { pt3dadd( -30.241, -424.05, -35.4908, 0.88 ) }
    dend_109 { pt3dadd( -30.1824, -424.106, -35.6184, 0.88 ) }
    dend_109 { pt3dadd( -29.17, -424.971, -37.5372, 0.29 ) }
    dend_109 { pt3dadd( -28.9458, -425.199, -37.9265, 0.29 ) }
    dend_109 { pt3dadd( -28.8394, -425.358, -38.1579, 0.29 ) }
    dend_109 { pt3dadd( -28.7004, -425.947, -38.7837, 0.29 ) }
    dend_109 { pt3dadd( -28.6956, -426.005, -38.838, 0.29 ) }
    dend_109 { pt3dadd( -28.7076, -426.772, -39.4669, 1.11 ) }
    dend_109 { pt3dadd( -28.7802, -427.295, -39.8449, 1.47 ) }
    dend_109 { pt3dadd( -29.0196, -428.449, -40.7325, 0.22 ) }
    dend_109 { pt3dadd( -29.3906, -429.918, -41.9051, 0.22 ) }
    dend_109 { pt3dadd( -29.4062, -429.97, -41.9485, 0.44 ) }
    dend_109 { pt3dadd( -29.4227, -430.021, -41.9918, 0.44 ) }
    dend_109 { pt3dadd( -29.8012, -431.051, -42.8783, 0.22 ) }
    dend_109 { pt3dadd( -29.8831, -431.275, -43.0683, 0.66 ) }
    dend_109 { pt3dadd( -29.9926, -431.61, -43.315, 0.66 ) }
    dend_109 { pt3dadd( -30.0041, -431.674, -43.3608, 0.66 ) }
    dend_109 { pt3dadd( -30.0629, -432.529, -43.9326, 0.22 ) }
    dend_109 { pt3dadd( -30.0597, -432.602, -43.9748, 0.22 ) }
    dend_109 { pt3dadd( -29.9419, -433.246, -44.2622, 0.22 ) }
    dend_109 { pt3dadd( -29.9126, -433.372, -44.3128, 0.22 ) }
    dend_109 { pt3dadd( -29.5713, -434.465, -44.8192, 0.22 ) }
    dend_109 { pt3dadd( -29.5087, -434.604, -44.8804, 0.22 ) }
    dend_109 { pt3dadd( -29.238, -435.091, -45.0801, 0.96 ) }
    dend_109 { pt3dadd( -28.9963, -435.478, -45.2265, 1.25 ) }
    dend_109 { pt3dadd( -28.9578, -435.535, -45.2475, 1.25 ) }
    dend_109 { pt3dadd( -28.1258, -436.742, -45.5198, 0.22 ) }
    dend_109 { pt3dadd( -27.3021, -437.935, -45.6487, 0.22 ) }
    dend_109 { pt3dadd( -27.2456, -438.016, -45.6517, 0.22 ) }
    dend_109 { pt3dadd( -26.3554, -439.275, -45.5941, 0.22 ) }
    dend_109 { pt3dadd( -26.3113, -439.341, -45.5851, 0.22 ) }
    dend_109 { pt3dadd( -25.4237, -440.741, -45.2409, 0.22 ) }
    dend_109 { pt3dadd( -25.3477, -440.872, -45.1876, 0.81 ) }
    dend_109 { pt3dadd( -25.3129, -440.939, -45.163, 0.81 ) }
    dend_109 { pt3dadd( -25.074, -441.422, -45.0718, 0.81 ) }
    dend_109 { pt3dadd( -24.9851, -441.612, -45.0631, 0.81 ) }
    dend_109 { pt3dadd( -24.5783, -442.372, -45.1098, 0.81 ) }
    dend_109 { pt3dadd( -24.3186, -442.829, -45.1868, 0.81 ) }
    dend_109 { pt3dadd( -23.973, -443.439, -45.2799, 0.22 ) }
    dend_109 { pt3dadd( -23.1302, -444.934, -45.5662, 0.22 ) }
    dend_109 { pt3dadd( -23.0967, -444.994, -45.5795, 0.22 ) }
    dend_109 { pt3dadd( -22.6181, -445.833, -45.786, 0.22 ) }
    dend_109 { pt3dadd( -22.557, -445.953, -45.8174, 0.22 ) }
    dend_109 { pt3dadd( -22.0908, -446.978, -46.0802, 0.22 ) }
    dend_109 { pt3dadd( -21.8442, -447.615, -46.2031, 1.18 ) }
    dend_109 { pt3dadd( -21.811, -447.712, -46.2239, 1.18 ) }
    dend_109 { pt3dadd( -21.6544, -448.074, -46.286, 1.18 ) }
    dend_109 { pt3dadd( -21.3829, -448.679, -46.3699, 0.22 ) }
    dend_109 { pt3dadd( -21.3509, -448.738, -46.388, 0.22 ) }
    dend_109 { pt3dadd( -20.5453, -450.015, -46.9229, 0.22 ) }
    dend_109 { pt3dadd( -20.5096, -450.069, -46.9479, 0.22 ) }
    dend_109 { pt3dadd( -19.748, -451.186, -47.5446, 0.22 ) }
    dend_109 { pt3dadd( -19.668, -451.295, -47.6117, 0.22 ) }
    dend_109 { pt3dadd( -18.5066, -452.696, -48.6002, 0.22 ) }
    dend_109 { pt3dadd( -18.4628, -452.747, -48.6432, 0.22 ) }
    dend_109 { pt3dadd( -18.3871, -452.829, -48.7466, 1.03 ) }
    dend_109 { pt3dadd( -18.1762, -453.076, -49.1002, 1.4 ) }
    dend_109 { pt3dadd( -18.1241, -453.172, -49.2811, 1.4 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 85.6707, 298.932, -67.2414, 0.29 ) }
    dend_46 { pt3dadd( 86.2375, 299.89, -67.7275, 0.29 ) }
    dend_46 { pt3dadd( 86.3093, 300.003, -67.7979, 0.29 ) }
    dend_46 { pt3dadd( 86.9245, 300.944, -68.4271, 0.29 ) }
    dend_46 { pt3dadd( 87.3587, 301.608, -68.8512, 0.66 ) }
    dend_46 { pt3dadd( 87.6623, 302.068, -69.137, 0.66 ) }
    dend_46 { pt3dadd( 87.7109, 302.14, -69.1828, 0.66 ) }
    dend_46 { pt3dadd( 88.3873, 303.1, -69.7627, 0.29 ) }
    dend_46 { pt3dadd( 88.461, 303.201, -69.8251, 0.29 ) }
    dend_46 { pt3dadd( 88.9248, 303.824, -70.1863, 0.29 ) }
    dend_46 { pt3dadd( 88.9799, 303.9, -70.2247, 0.29 ) }
    dend_46 { pt3dadd( 90.2915, 305.768, -71.08, 0.29 ) }
    dend_46 { pt3dadd( 90.5959, 306.203, -71.2872, 0.29 ) }
    dend_46 { pt3dadd( 90.6686, 306.31, -71.3357, 0.29 ) }
    dend_46 { pt3dadd( 91.8244, 308.0, -72.1344, 0.29 ) }
    dend_46 { pt3dadd( 92.0103, 308.273, -72.264, 0.66 ) }
    dend_46 { pt3dadd( 92.3498, 308.772, -72.5052, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_70()
}

proc basic_shape_70() {
    dend_46 { pt3dadd( 93.084, 309.849, -73.0068, 0.29 ) }
    dend_46 { pt3dadd( 93.618, 310.633, -73.3862, 0.29 ) }
    dend_46 { pt3dadd( 93.9559, 311.122, -73.6222, 1.18 ) }
    dend_46 { pt3dadd( 94.3643, 311.704, -73.9035, 1.62 ) }
    dend_46 { pt3dadd( 95.0816, 312.689, -74.332, 0.22 ) }
    dend_46 { pt3dadd( 95.504, 313.262, -74.5427, 0.22 ) }
    dend_46 { pt3dadd( 95.5467, 313.316, -74.5557, 0.22 ) }
    dend_46 { pt3dadd( 95.9816, 313.801, -74.687, 0.22 ) }
    dend_46 { pt3dadd( 96.0963, 313.92, -74.7179, 0.22 ) }
    dend_46 { pt3dadd( 96.7743, 314.538, -74.8737, 0.22 ) }
    dend_46 { pt3dadd( 96.8551, 314.605, -74.8948, 0.22 ) }
    dend_46 { pt3dadd( 97.6226, 315.209, -75.1544, 0.22 ) }
    dend_46 { pt3dadd( 98.2345, 315.675, -75.3778, 0.66 ) }
    dend_46 { pt3dadd( 98.7029, 316.021, -75.5625, 1.03 ) }
    dend_46 { pt3dadd( 98.9377, 316.199, -75.6547, 1.03 ) }
    dend_46 { pt3dadd( 99.9365, 316.971, -76.0549, 0.22 ) }
    dend_46 { pt3dadd( 99.9876, 317.015, -76.074, 0.22 ) }
    dend_46 { pt3dadd( 100.756, 317.752, -76.3069, 0.22 ) }
    dend_46 { pt3dadd( 100.803, 317.802, -76.3151, 0.22 ) }
    dend_46 { pt3dadd( 101.442, 318.594, -76.3584, 0.22 ) }
    dend_46 { pt3dadd( 101.486, 318.662, -76.3554, 0.22 ) }
    dend_46 { pt3dadd( 101.973, 319.472, -76.293, 0.22 ) }
    dend_46 { pt3dadd( 102.254, 319.908, -76.3065, 1.11 ) }
    dend_46 { pt3dadd( 102.693, 320.594, -76.3791, 1.84 ) }
    dend_46 { pt3dadd( 103.028, 321.098, -76.5135, 0.22 ) }
    dend_46 { pt3dadd( 103.779, 322.254, -76.9638, 0.22 ) }
    dend_46 { pt3dadd( 104.607, 323.502, -77.6348, 0.22 ) }
    dend_46 { pt3dadd( 105.324, 324.535, -78.3358, 1.33 ) }
    dend_46 { pt3dadd( 105.603, 324.938, -78.6453, 1.47 ) }
    dend_46 { pt3dadd( 106.455, 326.128, -79.6652, 0.44 ) }
    dend_46 { pt3dadd( 106.768, 326.554, -80.067, 0.29 ) }
    dend_46 { pt3dadd( 107.383, 327.417, -80.909, 0.29 ) }
    dend_46 { pt3dadd( 107.506, 327.639, -81.0865, 0.59 ) }
    dend_46 { pt3dadd( 107.783, 328.214, -81.4262, 0.59 ) }
    dend_46 { pt3dadd( 107.864, 328.378, -81.505, 0.29 ) }
    dend_46 { pt3dadd( 107.898, 328.446, -81.5256, 0.29 ) }
    dend_46 { pt3dadd( 108.317, 329.249, -81.7329, 0.22 ) }
    dend_46 { pt3dadd( 108.977, 330.511, -82.0994, 0.22 ) }
    dend_46 { pt3dadd( 109.083, 330.708, -82.1779, 0.44 ) }
    dend_46 { pt3dadd( 109.157, 330.844, -82.2423, 0.44 ) }
    dend_46 { pt3dadd( 109.373, 331.254, -82.4495, 0.44 ) }
    dend_46 { pt3dadd( 109.407, 331.318, -82.4831, 0.44 ) }
    dend_46 { pt3dadd( 109.998, 332.422, -83.1196, 0.29 ) }
    dend_46 { pt3dadd( 110.031, 332.479, -83.1474, 0.29 ) }
    dend_46 { pt3dadd( 110.612, 333.49, -83.5638, 0.29 ) }
    dend_46 { pt3dadd( 110.736, 333.698, -83.629, 0.29 ) }
    dend_46 { pt3dadd( 110.935, 334.028, -83.7035, 0.29 ) }
    dend_46 { pt3dadd( 111.007, 334.144, -83.7304, 0.29 ) }
    dend_46 { pt3dadd( 111.644, 335.151, -83.9937, 0.29 ) }
    dend_46 { pt3dadd( 111.7, 335.234, -84.0248, 0.29 ) }
    dend_46 { pt3dadd( 112.188, 335.887, -84.3526, 0.29 ) }
    dend_46 { pt3dadd( 112.227, 335.938, -84.3797, 0.29 ) }
    dend_46 { pt3dadd( 113.112, 337.002, -84.9175, 0.88 ) }
    dend_46 { pt3dadd( 113.654, 337.623, -85.2176, 1.18 ) }
    dend_46 { pt3dadd( 113.955, 337.958, -85.3757, 1.18 ) }
    dend_46 { pt3dadd( 114.001, 338.007, -85.3958, 1.18 ) }
    dend_46 { pt3dadd( 114.505, 338.525, -85.5718, 0.22 ) }
    dend_46 { pt3dadd( 115.586, 339.593, -85.7972, 0.22 ) }
    dend_46 { pt3dadd( 115.753, 339.752, -85.7993, 0.59 ) }
    dend_46 { pt3dadd( 115.846, 339.857, -85.7937, 0.59 ) }
    dend_46 { pt3dadd( 116.116, 340.233, -85.7796, 0.59 ) }
    dend_46 { pt3dadd( 116.154, 340.29, -85.7781, 0.59 ) }
    dend_46 { pt3dadd( 116.443, 340.827, -85.7781, 0.81 ) }
    dend_46 { pt3dadd( 116.54, 341.098, -85.7781, 0.81 ) }
    dend_46 { pt3dadd( 116.932, 342.314, -85.7781, 0.29 ) }
    dend_46 { pt3dadd( 117.019, 342.633, -85.7781, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 85.6707, 298.932, -67.2414, 0.29 ) }
    dend_45 { pt3dadd( 85.3172, 299.575, -66.4482, 0.29 ) }
    dend_45 { pt3dadd( 85.105, 300.65, -65.5697, 0.29 ) }
    dend_45 { pt3dadd( 85.003, 301.459, -65.0729, 0.29 ) }
    dend_45 { pt3dadd( 84.9327, 302.179, -64.7598, 0.29 ) }
    dend_45 { pt3dadd( 84.8246, 302.868, -64.4956, 0.29 ) }
    dend_45 { pt3dadd( 84.7598, 303.273, -64.3664, 0.22 ) }
    dend_45 { pt3dadd( 84.7011, 303.862, -64.2621, 0.22 ) }
    dend_45 { pt3dadd( 84.683, 304.271, -64.2436, 0.22 ) }
    dend_45 { pt3dadd( 84.6976, 305.018, -64.2441, 0.22 ) }
    dend_45 { pt3dadd( 84.7262, 305.496, -64.2921, 1.03 ) }
    dend_45 { pt3dadd( 84.8182, 306.136, -64.4164, 1.03 ) }
    dend_45 { pt3dadd( 84.8547, 306.267, -64.4529, 1.03 ) }
    dend_45 { pt3dadd( 85.0055, 306.66, -64.5823, 1.03 ) }
    dend_45 { pt3dadd( 85.3457, 307.401, -64.8391, 0.22 ) }
    dend_45 { pt3dadd( 85.824, 308.35, -65.1424, 0.22 ) }
    dend_45 { pt3dadd( 85.824, 308.35, -65.1424, 0.66 ) }
    dend_45 { pt3dadd( 85.9528, 308.601, -65.2037, 0.52 ) }
    dend_45 { pt3dadd( 86.2908, 309.306, -65.3479, 0.22 ) }
    dend_45 { pt3dadd( 86.343, 309.436, -65.3569, 0.22 ) }
    dend_45 { pt3dadd( 86.6661, 310.504, -65.2614, 0.22 ) }
    dend_45 { pt3dadd( 86.8175, 311.13, -65.1472, 1.03 ) }
    dend_45 { pt3dadd( 86.9378, 311.618, -65.0526, 1.11 ) }
    dend_45 { pt3dadd( 86.9546, 311.685, -65.0384, 1.11 ) }
    dend_45 { pt3dadd( 87.2312, 312.765, -64.8311, 1.11 ) }
    dend_45 { pt3dadd( 87.5288, 313.715, -64.6855, 0.29 ) }
    dend_45 { pt3dadd( 87.5508, 313.779, -64.6771, 0.29 ) }
    dend_45 { pt3dadd( 87.9974, 314.995, -64.5471, 0.29 ) }
    dend_45 { pt3dadd( 88.0234, 315.058, -64.5419, 0.29 ) }
    dend_45 { pt3dadd( 88.723, 316.634, -64.4634, 0.29 ) }
    dend_45 { pt3dadd( 89.4757, 318.131, -64.4634, 0.29 ) }
    dend_45 { pt3dadd( 89.5394, 318.256, -64.4634, 0.29 ) }
    dend_45 { pt3dadd( 89.6067, 318.396, -64.4623, 1.18 ) }
    dend_45 { pt3dadd( 89.6402, 318.467, -64.4613, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_71()
}

proc basic_shape_71() {
    dend_45 { pt3dadd( 89.8427, 318.945, -64.4537, 1.18 ) }
    dend_45 { pt3dadd( 90.2729, 320.02, -64.4309, 0.29 ) }
    dend_45 { pt3dadd( 91.0123, 322.042, -64.3826, 0.29 ) }
    dend_45 { pt3dadd( 91.5108, 323.478, -64.3476, 0.22 ) }
    dend_45 { pt3dadd( 91.5319, 323.544, -64.3459, 0.22 ) }
    dend_45 { pt3dadd( 92.141, 325.676, -64.1897, 0.22 ) }
    dend_45 { pt3dadd( 92.1976, 325.919, -64.1597, 0.88 ) }
    dend_45 { pt3dadd( 92.3122, 326.53, -64.0417, 1.33 ) }
    dend_45 { pt3dadd( 92.4075, 327.176, -63.8693, 1.33 ) }
    dend_45 { pt3dadd( 92.4574, 327.567, -63.7478, 1.33 ) }
    dend_45 { pt3dadd( 92.66, 329.049, -63.2293, 0.22 ) }
    dend_45 { pt3dadd( 92.8793, 330.64, -62.6009, 0.22 ) }
    dend_45 { pt3dadd( 93.0489, 331.639, -62.1929, 0.22 ) }
    dend_45 { pt3dadd( 93.4183, 333.428, -61.4251, 0.22 ) }
    dend_45 { pt3dadd( 93.4476, 333.541, -61.3755, 0.22 ) }
    dend_45 { pt3dadd( 93.7852, 334.609, -60.9258, 0.22 ) }
    dend_45 { pt3dadd( 93.8054, 334.661, -60.9064, 0.22 ) }
    dend_45 { pt3dadd( 94.2232, 335.458, -60.4869, 0.88 ) }
    dend_45 { pt3dadd( 94.2539, 335.501, -60.46, 0.88 ) }
    dend_45 { pt3dadd( 94.5021, 335.76, -60.2628, 0.88 ) }
    dend_45 { pt3dadd( 94.7126, 335.943, -60.0947, 0.88 ) }
    dend_45 { pt3dadd( 94.767, 335.983, -60.0514, 0.88 ) }
    dend_45 { pt3dadd( 95.8678, 336.718, -59.1735, 0.22 ) }
    dend_45 { pt3dadd( 96.4617, 337.078, -58.6375, 0.22 ) }
    dend_45 { pt3dadd( 96.5102, 337.106, -58.5915, 0.22 ) }
    dend_45 { pt3dadd( 97.4563, 337.603, -57.7831, 0.96 ) }
    dend_45 { pt3dadd( 97.6431, 337.694, -57.6371, 1.18 ) }
    dend_45 { pt3dadd( 97.7639, 337.746, -57.5628, 1.18 ) }
    dend_45 { pt3dadd( 99.4512, 338.458, -56.8066, 0.22 ) }
    dend_45 { pt3dadd( 99.521, 338.489, -56.7819, 0.22 ) }
    dend_45 { pt3dadd( 101.002, 339.191, -56.3807, 0.22 ) }
    dend_45 { pt3dadd( 101.091, 339.234, -56.3647, 0.22 ) }
    dend_45 { pt3dadd( 102.484, 339.884, -56.176, 0.22 ) }
    dend_45 { pt3dadd( 103.574, 340.389, -56.0918, 0.22 ) }
    dend_45 { pt3dadd( 104.576, 340.841, -56.1027, 0.22 ) }
    dend_45 { pt3dadd( 104.967, 341.019, -56.107, 0.66 ) }
    dend_45 { pt3dadd( 105.623, 341.33, -56.1144, 1.03 ) }
    dend_45 { pt3dadd( 105.687, 341.36, -56.115, 1.03 ) }
    dend_45 { pt3dadd( 106.109, 341.57, -56.115, 1.03 ) }
    dend_45 { pt3dadd( 106.186, 341.594, -56.115, 1.03 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 40/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 102.044, 290.949, -77.4969, 0.88 ) }
    dend_41 { pt3dadd( 104.197, 290.421, -78.0752, 0.88 ) }
    dend_41 { pt3dadd( 105.142, 290.214, -78.4193, 0.29 ) }
    dend_41 { pt3dadd( 105.658, 290.121, -78.66, 0.29 ) }
    dend_41 { pt3dadd( 106.132, 290.047, -78.8903, 0.29 ) }
    dend_41 { pt3dadd( 106.936, 289.93, -79.2568, 0.29 ) }
    dend_41 { pt3dadd( 107.0, 289.921, -79.285, 0.29 ) }
    dend_41 { pt3dadd( 107.808, 289.806, -79.6595, 0.29 ) }
    dend_41 { pt3dadd( 108.4, 289.727, -79.9915, 1.03 ) }
    dend_41 { pt3dadd( 108.774, 289.685, -80.2067, 1.25 ) }
    dend_41 { pt3dadd( 109.44, 289.614, -80.5444, 1.25 ) }
    dend_41 { pt3dadd( 109.502, 289.607, -80.5764, 1.25 ) }
    dend_41 { pt3dadd( 111.234, 289.392, -81.4075, 0.22 ) }
    dend_41 { pt3dadd( 112.658, 289.194, -82.0123, 0.22 ) }
    dend_41 { pt3dadd( 112.797, 289.173, -82.0692, 0.22 ) }
    dend_41 { pt3dadd( 114.221, 288.964, -82.6761, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 102.044, 290.949, -77.4969, 0.29 ) }
    dend_40 { pt3dadd( 101.964, 291.689, -77.5514, 0.29 ) }
    dend_40 { pt3dadd( 101.803, 293.168, -77.6603, 0.29 ) }
    dend_40 { pt3dadd( 101.737, 293.775, -77.705, 0.22 ) }
    dend_40 { pt3dadd( 101.721, 293.923, -77.7159, 0.22 ) }
    dend_40 { pt3dadd( 101.606, 294.983, -77.794, 0.22 ) }
    dend_40 { pt3dadd( 101.528, 295.701, -77.8469, 0.22 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 63/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 93.8905, 306.917, -170.655, 0.22 ) }
    dend_25 { pt3dadd( 93.9395, 307.342, -171.163, 0.22 ) }
    dend_25 { pt3dadd( 94.0498, 308.415, -172.548, 0.22 ) }
    dend_25 { pt3dadd( 94.0892, 309.027, -173.266, 1.03 ) }
    dend_25 { pt3dadd( 94.1196, 309.673, -173.98, 1.03 ) }
    dend_25 { pt3dadd( 94.1595, 311.171, -175.427, 0.81 ) }
    dend_25 { pt3dadd( 94.1743, 312.122, -176.324, 0.15 ) }
    dend_25 { pt3dadd( 94.1742, 312.173, -176.371, 0.15 ) }
    dend_25 { pt3dadd( 94.1442, 313.187, -177.402, 0.15 ) }
    dend_25 { pt3dadd( 94.143, 313.285, -177.504, 0.15 ) }
    dend_25 { pt3dadd( 94.1555, 314.218, -178.571, 0.15 ) }
    dend_25 { pt3dadd( 94.1987, 315.087, -179.567, 0.66 ) }
    dend_25 { pt3dadd( 94.2239, 315.414, -179.953, 0.66 ) }
    dend_25 { pt3dadd( 94.3224, 317.101, -182.365, 0.22 ) }
    dend_25 { pt3dadd( 94.3397, 317.974, -183.786, 0.22 ) }
    dend_25 { pt3dadd( 94.3172, 318.74, -185.141, 1.18 ) }
    dend_25 { pt3dadd( 94.3141, 318.774, -185.205, 1.18 ) }
    dend_25 { pt3dadd( 94.254, 319.153, -185.894, 1.47 ) }
    dend_25 { pt3dadd( 93.9149, 320.539, -188.55, 0.15 ) }
    dend_25 { pt3dadd( 93.7684, 320.935, -189.313, 0.15 ) }
    dend_25 { pt3dadd( 93.5341, 321.363, -190.144, 0.52 ) }
    dend_25 { pt3dadd( 93.4092, 321.561, -190.476, 0.66 ) }
    dend_25 { pt3dadd( 93.2353, 321.833, -190.895, 0.66 ) }
    dend_25 { pt3dadd( 92.8333, 322.448, -191.744, 0.15 ) }
    dend_25 { pt3dadd( 92.8073, 322.497, -191.787, 0.15 ) }
    dend_25 { pt3dadd( 92.4365, 323.169, -192.415, 0.15 ) }
    dend_25 { pt3dadd( 92.1504, 323.665, -192.853, 0.15 ) }
    dend_25 { pt3dadd( 91.7388, 324.436, -193.492, 0.88 ) }
    dend_25 { pt3dadd( 91.7043, 324.505, -193.544, 0.88 ) }
    dend_25 { pt3dadd( 91.5395, 324.85, -193.726, 0.88 ) }
    dend_25 { pt3dadd( 91.1049, 325.673, -194.241, 0.22 ) }
    dend_25 { pt3dadd( 91.0645, 325.746, -194.293, 0.22 ) }
    dend_25 { pt3dadd( 90.6653, 326.394, -194.859, 0.22 ) }
    dend_25 { pt3dadd( 90.567, 326.538, -194.993, 0.22 ) }
    dend_25 { pt3dadd( 89.8631, 327.505, -195.951, 0.22 ) }
    dend_25 { pt3dadd( 89.0611, 328.552, -197.043, 0.22 ) }
    dend_25 { pt3dadd( 89.0022, 328.626, -197.13, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_72()
}

proc basic_shape_72() {
    dend_25 { pt3dadd( 88.38, 329.36, -198.224, 0.22 ) }
    dend_25 { pt3dadd( 88.2803, 329.465, -198.404, 0.22 ) }
    dend_25 { pt3dadd( 87.9772, 329.744, -199.007, 0.22 ) }
    dend_25 { pt3dadd( 87.9494, 329.767, -199.07, 0.22 ) }
    dend_25 { pt3dadd( 87.0786, 330.372, -200.847, 0.22 ) }
    dend_25 { pt3dadd( 86.3373, 330.806, -202.25, 1.18 ) }
    dend_25 { pt3dadd( 85.9627, 330.993, -202.917, 1.62 ) }
    dend_25 { pt3dadd( 84.9135, 331.464, -204.737, 1.62 ) }
    dend_25 { pt3dadd( 84.3034, 331.721, -205.751, 0.22 ) }
    dend_25 { pt3dadd( 83.655, 332.005, -206.775, 0.22 ) }
    dend_25 { pt3dadd( 83.1672, 332.217, -207.467, 0.88 ) }
    dend_25 { pt3dadd( 83.0755, 332.266, -207.585, 0.88 ) }
    dend_25 { pt3dadd( 82.9004, 332.4, -207.807, 0.88 ) }
    dend_25 { pt3dadd( 82.5064, 332.849, -208.218, 0.29 ) }
    dend_25 { pt3dadd( 81.9621, 333.641, -208.769, 0.29 ) }
    dend_25 { pt3dadd( 81.9333, 333.699, -208.815, 0.29 ) }
    dend_25 { pt3dadd( 81.6827, 334.267, -209.274, 0.29 ) }
    dend_25 { pt3dadd( 81.3911, 334.931, -209.837, 0.29 ) }
    dend_25 { pt3dadd( 81.2788, 335.19, -210.069, 0.81 ) }
    dend_25 { pt3dadd( 81.1891, 335.412, -210.265, 0.81 ) }
    dend_25 { pt3dadd( 80.741, 336.701, -211.317, 0.29 ) }
    dend_25 { pt3dadd( 80.6082, 337.142, -211.669, 0.29 ) }
    dend_25 { pt3dadd( 80.5485, 337.41, -211.906, 0.29 ) }
    dend_25 { pt3dadd( 80.5352, 337.526, -212.001, 0.29 ) }
    dend_25 { pt3dadd( 80.5019, 338.105, -212.442, 0.29 ) }
    dend_25 { pt3dadd( 80.4855, 339.151, -213.157, 1.33 ) }
    dend_25 { pt3dadd( 80.4913, 339.484, -213.406, 1.62 ) }
    dend_25 { pt3dadd( 80.5637, 340.799, -214.481, 0.15 ) }
    dend_25 { pt3dadd( 80.5955, 341.832, -215.327, 0.15 ) }
    dend_25 { pt3dadd( 80.5948, 342.127, -215.56, 0.96 ) }
    dend_25 { pt3dadd( 80.5896, 342.39, -215.764, 1.33 ) }
    dend_25 { pt3dadd( 80.5073, 344.319, -217.058, 0.22 ) }
    dend_25 { pt3dadd( 80.4444, 345.186, -217.562, 0.22 ) }
    dend_25 { pt3dadd( 80.3273, 346.019, -217.939, 0.22 ) }
    dend_25 { pt3dadd( 80.214, 346.552, -218.14, 0.22 ) }
    dend_25 { pt3dadd( 80.1968, 346.626, -218.161, 0.22 ) }
    dend_25 { pt3dadd( 79.9279, 347.669, -218.333, 0.22 ) }
    dend_25 { pt3dadd( 79.8031, 348.086, -218.335, 1.03 ) }
    dend_25 { pt3dadd( 79.6326, 348.573, -218.335, 0.15 ) }
    dend_25 { pt3dadd( 79.1913, 349.806, -218.329, 0.15 ) }
    dend_25 { pt3dadd( 79.0889, 350.111, -218.326, 0.96 ) }
    dend_25 { pt3dadd( 78.9211, 350.646, -218.318, 0.96 ) }
    dend_25 { pt3dadd( 78.7831, 351.106, -218.31, 0.15 ) }
    dend_25 { pt3dadd( 78.5547, 351.939, -218.292, 0.15 ) }
    dend_25 { pt3dadd( 78.5366, 352.018, -218.291, 0.15 ) }
    dend_25 { pt3dadd( 78.1622, 353.84, -218.291, 0.15 ) }
    dend_25 { pt3dadd( 78.0813, 354.29, -218.296, 0.15 ) }
    dend_25 { pt3dadd( 78.0677, 354.381, -218.299, 0.44 ) }
    dend_25 { pt3dadd( 78.0124, 354.802, -218.316, 0.44 ) }
    dend_25 { pt3dadd( 77.9832, 355.031, -218.327, 0.15 ) }
    dend_25 { pt3dadd( 77.8072, 356.037, -218.442, 0.15 ) }
    dend_25 { pt3dadd( 77.7903, 356.105, -218.456, 0.15 ) }
    dend_25 { pt3dadd( 77.6487, 356.746, -218.657, 0.15 ) }
    dend_25 { pt3dadd( 77.6086, 357.073, -218.782, 0.81 ) }
    dend_25 { pt3dadd( 77.5925, 357.21, -218.842, 0.81 ) }
    dend_25 { pt3dadd( 77.5074, 357.992, -219.211, 0.22 ) }
    dend_25 { pt3dadd( 77.4996, 358.122, -219.281, 0.22 ) }
    dend_25 { pt3dadd( 77.5316, 359.121, -219.711, 0.22 ) }
    dend_25 { pt3dadd( 77.614, 359.869, -219.99, 1.55 ) }
    dend_25 { pt3dadd( 77.7536, 360.691, -220.223, 0.15 ) }
    dend_25 { pt3dadd( 77.8322, 361.028, -220.317, 0.15 ) }
    dend_25 { pt3dadd( 77.8716, 361.179, -220.354, 0.15 ) }
    dend_25 { pt3dadd( 78.309, 362.849, -220.762, 0.15 ) }
    dend_25 { pt3dadd( 78.3794, 363.177, -220.835, 0.44 ) }
    dend_25 { pt3dadd( 78.4993, 363.876, -220.992, 0.44 ) }
    dend_25 { pt3dadd( 78.6873, 365.149, -221.287, 1.03 ) }
    dend_25 { pt3dadd( 78.7533, 365.858, -221.457, 1.25 ) }
    dend_25 { pt3dadd( 78.7566, 366.146, -221.527, 0.15 ) }
    dend_25 { pt3dadd( 78.6173, 367.234, -221.784, 0.15 ) }
    dend_25 { pt3dadd( 78.5989, 367.326, -221.811, 0.15 ) }
    dend_25 { pt3dadd( 78.2857, 368.404, -222.141, 0.15 ) }
    dend_25 { pt3dadd( 78.2669, 368.467, -222.162, 0.15 ) }
    dend_25 { pt3dadd( 78.1734, 368.811, -222.294, 1.11 ) }
    dend_25 { pt3dadd( 78.0169, 369.466, -222.552, 1.47 ) }
    dend_25 { pt3dadd( 77.749, 370.788, -223.055, 0.15 ) }
    dend_25 { pt3dadd( 77.4141, 372.573, -223.703, 0.15 ) }
    dend_25 { pt3dadd( 77.047, 374.701, -224.507, 0.15 ) }
    dend_25 { pt3dadd( 77.002, 374.966, -224.609, 0.59 ) }
    dend_25 { pt3dadd( 76.9116, 375.501, -224.808, 0.59 ) }
    dend_25 { pt3dadd( 76.7117, 376.72, -225.304, 0.15 ) }
    dend_25 { pt3dadd( 76.6984, 376.792, -225.333, 0.15 ) }
    dend_25 { pt3dadd( 76.5145, 377.511, -225.815, 0.44 ) }
    dend_25 { pt3dadd( 76.4439, 377.703, -225.985, 0.44 ) }
    dend_25 { pt3dadd( 76.1479, 378.373, -226.678, 0.15 ) }
    dend_25 { pt3dadd( 75.7128, 379.23, -227.652, 0.66 ) }
    dend_25 { pt3dadd( 75.5651, 379.493, -227.953, 0.66 ) }
    dend_25 { pt3dadd( 74.8038, 380.851, -229.475, 0.22 ) }
    dend_25 { pt3dadd( 74.7742, 380.902, -229.531, 0.22 ) }
    dend_25 { pt3dadd( 74.6474, 381.124, -229.777, 0.52 ) }
    dend_25 { pt3dadd( 74.4328, 381.483, -230.184, 0.74 ) }
    dend_25 { pt3dadd( 74.0864, 382.064, -230.659, 0.74 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 91/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 93.8905, 306.917, -170.655, 0.74 ) }
    dend_22 { pt3dadd( 94.5455, 307.025, -170.868, 0.74 ) }
    dend_22 { pt3dadd( 95.796, 307.258, -171.338, 0.22 ) }
    dend_22 { pt3dadd( 95.8716, 307.275, -171.366, 0.22 ) }
    dend_22 { pt3dadd( 96.8781, 307.521, -171.733, 0.22 ) }
    dend_22 { pt3dadd( 96.9428, 307.54, -171.753, 0.22 ) }
    dend_22 { pt3dadd( 98.0429, 307.899, -172.076, 1.11 ) }
    dend_22 { pt3dadd( 98.1052, 307.928, -172.091, 1.11 ) }
    dend_22 { pt3dadd( 98.8676, 308.359, -172.247, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_73()
}

proc basic_shape_73() {
    dend_22 { pt3dadd( 98.9281, 308.392, -172.26, 1.33 ) }
    dend_22 { pt3dadd( 99.8901, 308.906, -172.481, 0.15 ) }
    dend_22 { pt3dadd( 99.952, 308.937, -172.494, 0.15 ) }
    dend_22 { pt3dadd( 101.288, 309.572, -172.724, 0.15 ) }
    dend_22 { pt3dadd( 101.834, 309.814, -172.827, 1.03 ) }
    dend_22 { pt3dadd( 102.777, 310.232, -173.064, 1.77 ) }
    dend_22 { pt3dadd( 103.044, 310.35, -173.143, 1.77 ) }
    dend_22 { pt3dadd( 103.475, 310.545, -173.341, 1.77 ) }
    dend_22 { pt3dadd( 103.545, 310.58, -173.376, 1.77 ) }
    dend_22 { pt3dadd( 104.008, 310.832, -173.645, 1.77 ) }
    dend_22 { pt3dadd( 104.904, 311.361, -174.114, 1.47 ) }
    dend_22 { pt3dadd( 104.958, 311.396, -174.143, 1.47 ) }
    dend_22 { pt3dadd( 106.189, 312.273, -174.809, 0.59 ) }
    dend_22 { pt3dadd( 107.208, 312.978, -175.336, 0.15 ) }
    dend_22 { pt3dadd( 107.296, 313.037, -175.376, 0.15 ) }
    dend_22 { pt3dadd( 108.255, 313.665, -175.763, 0.15 ) }
    dend_22 { pt3dadd( 108.95, 314.091, -176.016, 0.88 ) }
    dend_22 { pt3dadd( 109.659, 314.512, -176.256, 1.18 ) }
    dend_22 { pt3dadd( 110.941, 315.25, -176.636, 0.22 ) }
    dend_22 { pt3dadd( 112.154, 315.952, -177.024, 0.22 ) }
    dend_22 { pt3dadd( 112.243, 316.005, -177.052, 0.22 ) }
    dend_22 { pt3dadd( 113.052, 316.519, -177.282, 1.03 ) }
    dend_22 { pt3dadd( 113.401, 316.748, -177.373, 1.33 ) }
    dend_22 { pt3dadd( 113.457, 316.787, -177.388, 1.33 ) }
    dend_22 { pt3dadd( 114.012, 317.265, -177.532, 1.33 ) }
    dend_22 { pt3dadd( 114.69, 317.962, -177.699, 0.29 ) }
    dend_22 { pt3dadd( 115.302, 318.666, -177.834, 0.29 ) }
    dend_22 { pt3dadd( 115.754, 319.231, -177.912, 0.59 ) }
    dend_22 { pt3dadd( 116.241, 319.857, -177.994, 0.59 ) }
    dend_22 { pt3dadd( 116.846, 320.625, -178.081, 0.29 ) }
    dend_22 { pt3dadd( 117.69, 321.697, -178.185, 0.29 ) }
    dend_22 { pt3dadd( 117.733, 321.751, -178.189, 0.29 ) }
    dend_22 { pt3dadd( 118.245, 322.381, -178.202, 0.29 ) }
    dend_22 { pt3dadd( 118.338, 322.497, -178.197, 0.29 ) }
    dend_22 { pt3dadd( 119.411, 323.899, -178.11, 0.29 ) }
    dend_22 { pt3dadd( 119.452, 323.955, -178.108, 0.29 ) }
    dend_22 { pt3dadd( 120.361, 325.31, -178.091, 0.37 ) }
    dend_22 { pt3dadd( 120.672, 325.848, -178.011, 1.33 ) }
    dend_22 { pt3dadd( 121.071, 326.608, -177.885, 1.33 ) }
    dend_22 { pt3dadd( 121.659, 327.839, -177.657, 0.88 ) }
    dend_22 { pt3dadd( 121.941, 328.554, -177.496, 1.18 ) }
    dend_22 { pt3dadd( 122.297, 329.54, -177.245, 1.18 ) }
    dend_22 { pt3dadd( 122.991, 332.09, -176.415, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 43/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 56.1046, 291.747, -133.36, 0.22 ) }
    dend_16 { pt3dadd( 56.9794, 293.657, -136.201, 0.22 ) }
    dend_16 { pt3dadd( 57.3958, 294.703, -137.456, 0.22 ) }
    dend_16 { pt3dadd( 57.6009, 295.274, -138.065, 0.22 ) }
    dend_16 { pt3dadd( 57.6147, 295.324, -138.111, 0.22 ) }
    dend_16 { pt3dadd( 57.8038, 296.317, -138.881, 0.22 ) }
    dend_16 { pt3dadd( 57.8124, 296.375, -138.922, 0.22 ) }
    dend_16 { pt3dadd( 57.8457, 297.968, -139.579, 0.22 ) }
    dend_16 { pt3dadd( 57.836, 298.108, -139.622, 0.22 ) }
    dend_16 { pt3dadd( 57.6726, 299.778, -140.178, 0.22 ) }
    dend_16 { pt3dadd( 57.5852, 300.686, -140.524, 0.22 ) }
    dend_16 { pt3dadd( 57.5814, 300.741, -140.545, 0.22 ) }
    dend_16 { pt3dadd( 57.5652, 301.267, -140.78, 1.33 ) }
    dend_16 { pt3dadd( 57.5644, 302.218, -141.266, 1.33 ) }
    dend_16 { pt3dadd( 57.581, 303.638, -141.983, 0.44 ) }
    dend_16 { pt3dadd( 57.6034, 304.91, -142.673, 0.22 ) }
    dend_16 { pt3dadd( 57.6542, 306.107, -143.359, 0.22 ) }
    dend_16 { pt3dadd( 57.7021, 307.077, -143.929, 0.22 ) }
    dend_16 { pt3dadd( 57.7078, 307.166, -143.983, 0.22 ) }
    dend_16 { pt3dadd( 57.779, 308.315, -144.697, 0.22 ) }
    dend_16 { pt3dadd( 57.774, 309.406, -145.245, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 64/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 56.1046, 291.747, -133.36, 0.29 ) }
    dend_9 { pt3dadd( 55.1251, 292.95, -133.504, 0.29 ) }
    dend_9 { pt3dadd( 54.7638, 293.379, -133.54, 0.29 ) }
    dend_9 { pt3dadd( 54.0449, 294.217, -133.597, 0.29 ) }
    dend_9 { pt3dadd( 53.3608, 295.032, -133.642, 0.29 ) }
    dend_9 { pt3dadd( 52.3029, 296.29, -133.652, 0.29 ) }
    dend_9 { pt3dadd( 52.2429, 296.361, -133.65, 0.29 ) }
    dend_9 { pt3dadd( 51.2328, 297.566, -133.528, 0.29 ) }
    dend_9 { pt3dadd( 51.1883, 297.62, -133.522, 0.29 ) }
    dend_9 { pt3dadd( 50.4893, 298.458, -133.357, 0.29 ) }
    dend_9 { pt3dadd( 49.9243, 299.131, -133.202, 0.74 ) }
    dend_9 { pt3dadd( 49.484, 299.692, -133.073, 1.18 ) }
    dend_9 { pt3dadd( 49.0753, 300.265, -132.979, 1.18 ) }
    dend_9 { pt3dadd( 49.0314, 300.33, -132.968, 1.18 ) }
    dend_9 { pt3dadd( 48.4503, 301.207, -132.847, 1.18 ) }
    dend_9 { pt3dadd( 47.7016, 302.36, -132.731, 0.22 ) }
    dend_9 { pt3dadd( 47.0183, 303.496, -132.697, 0.22 ) }
    dend_9 { pt3dadd( 46.4658, 304.465, -132.691, 0.22 ) }
    // Section: dend_153, id: dend_153, parent: dend_151 (entry count 82/100)
    dend_153 { pt3dclear() }
    dend_153 { pt3dadd( 203.558, -281.498, 66.9005, 0.37 ) }
    dend_153 { pt3dadd( 204.643, -280.785, 67.1134, 0.37 ) }
    dend_153 { pt3dadd( 204.712, -280.745, 67.1235, 0.37 ) }
    dend_153 { pt3dadd( 205.512, -280.386, 67.2068, 0.29 ) }
    dend_153 { pt3dadd( 206.38, -280.05, 67.2819, 0.29 ) }
    dend_153 { pt3dadd( 206.943, -279.861, 67.3239, 0.81 ) }
    dend_153 { pt3dadd( 208.091, -279.499, 67.3991, 0.22 ) }
    dend_153 { pt3dadd( 208.594, -279.356, 67.3813, 0.22 ) }
    dend_153 { pt3dadd( 209.612, -279.085, 67.3261, 0.22 ) }
    dend_153 { pt3dadd( 209.681, -279.07, 67.321, 0.22 ) }
    dend_153 { pt3dadd( 210.043, -279.003, 67.287, 0.22 ) }
    dend_153 { pt3dadd( 210.55, -278.923, 67.2318, 0.22 ) }
    dend_153 { pt3dadd( 211.635, -278.729, 67.0911, 0.22 ) }
    dend_153 { pt3dadd( 211.702, -278.71, 67.0825, 0.22 ) }
    dend_153 { pt3dadd( 212.399, -278.45, 66.9969, 0.22 ) }
    dend_153 { pt3dadd( 212.463, -278.422, 66.9902, 0.22 ) }
    dend_153 { pt3dadd( 212.801, -278.266, 66.9573, 0.22 ) }
    dend_153 { pt3dadd( 212.865, -278.238, 66.9527, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_74()
}

proc basic_shape_74() {
    dend_153 { pt3dadd( 213.681, -277.871, 66.9527, 0.22 ) }
    dend_153 { pt3dadd( 213.805, -277.805, 66.9527, 0.22 ) }
    dend_153 { pt3dadd( 214.373, -277.389, 66.9527, 0.22 ) }
    // Section: dend_152, id: dend_152, parent: dend_151 (entry count 3/100)
    dend_152 { pt3dclear() }
    dend_152 { pt3dadd( 203.558, -281.498, 66.9005, 0.37 ) }
    dend_152 { pt3dadd( 203.868, -282.193, 67.1078, 0.37 ) }
    dend_152 { pt3dadd( 204.295, -283.146, 67.392, 0.37 ) }
    dend_152 { pt3dadd( 204.322, -283.207, 67.4102, 0.37 ) }
    dend_152 { pt3dadd( 204.89, -284.477, 67.789, 0.37 ) }
    dend_152 { pt3dadd( 205.187, -285.142, 67.9874, 0.37 ) }
    dend_152 { pt3dadd( 205.542, -285.935, 68.2241, 0.37 ) }
    // Section: dend_111, id: dend_111, parent: dend_109 (entry count 10/100)
    dend_111 { pt3dclear() }
    dend_111 { pt3dadd( -18.1241, -453.172, -49.2811, 0.29 ) }
    dend_111 { pt3dadd( -18.4862, -455.633, -51.5875, 0.29 ) }
    dend_111 { pt3dadd( -18.5866, -456.315, -52.227, 0.29 ) }
    dend_111 { pt3dadd( -18.822, -457.915, -53.7264, 0.29 ) }
    dend_111 { pt3dadd( -18.8305, -457.973, -53.7805, 0.29 ) }
    dend_111 { pt3dadd( -19.1441, -460.104, -55.7775, 0.22 ) }
    dend_111 { pt3dadd( -19.1719, -460.293, -55.9546, 0.52 ) }
    // Section: dend_110, id: dend_110, parent: dend_109 (entry count 17/100)
    dend_110 { pt3dclear() }
    dend_110 { pt3dadd( -18.1241, -453.172, -49.2811, 0.22 ) }
    dend_110 { pt3dadd( -19.5486, -453.536, -52.6954, 0.22 ) }
    dend_110 { pt3dadd( -19.7565, -453.589, -53.1938, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 20/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 117.019, 342.633, -85.7781, 0.22 ) }
    dend_48 { pt3dadd( 117.496, 343.245, -85.805, 0.22 ) }
    dend_48 { pt3dadd( 117.547, 343.308, -85.8076, 0.22 ) }
    dend_48 { pt3dadd( 118.377, 344.353, -85.8464, 0.22 ) }
    dend_48 { pt3dadd( 118.427, 344.416, -85.8486, 0.22 ) }
    dend_48 { pt3dadd( 119.767, 346.104, -85.9708, 0.22 ) }
    dend_48 { pt3dadd( 120.05, 346.47, -86.0063, 0.52 ) }
    dend_48 { pt3dadd( 120.409, 346.975, -86.0932, 0.52 ) }
    dend_48 { pt3dadd( 120.811, 347.566, -86.2344, 0.52 ) }
    dend_48 { pt3dadd( 120.847, 347.623, -86.2511, 0.52 ) }
    dend_48 { pt3dadd( 121.163, 348.153, -86.4213, 0.88 ) }
    dend_48 { pt3dadd( 121.464, 348.7, -86.6035, 0.44 ) }
    dend_48 { pt3dadd( 122.456, 350.46, -87.223, 0.22 ) }
    dend_48 { pt3dadd( 122.533, 350.594, -87.2717, 0.22 ) }
    dend_48 { pt3dadd( 123.192, 351.715, -87.6714, 0.22 ) }
    dend_48 { pt3dadd( 123.226, 351.772, -87.6929, 0.22 ) }
    dend_48 { pt3dadd( 123.922, 352.917, -88.1301, 0.22 ) }
    dend_48 { pt3dadd( 124.246, 353.442, -88.3482, 0.59 ) }
    dend_48 { pt3dadd( 124.28, 353.498, -88.3723, 0.59 ) }
    dend_48 { pt3dadd( 124.472, 353.845, -88.5331, 0.59 ) }
    dend_48 { pt3dadd( 124.969, 354.851, -89.0578, 0.22 ) }
    dend_48 { pt3dadd( 124.998, 354.917, -89.0898, 0.22 ) }
    dend_48 { pt3dadd( 125.29, 355.733, -89.4456, 0.22 ) }
    dend_48 { pt3dadd( 125.318, 355.804, -89.467, 0.22 ) }
    dend_48 { pt3dadd( 125.425, 356.054, -89.5272, 0.44 ) }
    dend_48 { pt3dadd( 125.471, 356.131, -89.5424, 0.44 ) }
    dend_48 { pt3dadd( 125.844, 356.656, -89.6037, 0.44 ) }
    dend_48 { pt3dadd( 125.954, 356.787, -89.6237, 0.44 ) }
    dend_48 { pt3dadd( 126.42, 357.255, -89.7145, 0.44 ) }
    dend_48 { pt3dadd( 126.488, 357.326, -89.727, 0.44 ) }
    dend_48 { pt3dadd( 127.346, 358.174, -89.8591, 0.22 ) }
    dend_48 { pt3dadd( 127.453, 358.277, -89.874, 0.22 ) }
    dend_48 { pt3dadd( 127.918, 358.68, -89.9255, 0.22 ) }
    dend_48 { pt3dadd( 127.97, 358.725, -89.9303, 0.22 ) }
    dend_48 { pt3dadd( 128.921, 359.56, -89.9969, 0.22 ) }
    dend_48 { pt3dadd( 130.073, 360.585, -90.0513, 0.22 ) }
    dend_48 { pt3dadd( 130.127, 360.632, -90.0521, 0.22 ) }
    dend_48 { pt3dadd( 131.216, 361.538, -90.0676, 0.22 ) }
    dend_48 { pt3dadd( 131.389, 361.675, -90.0699, 0.22 ) }
    dend_48 { pt3dadd( 132.122, 362.268, -90.0782, 0.22 ) }
    dend_48 { pt3dadd( 132.175, 362.313, -90.0731, 0.22 ) }
    dend_48 { pt3dadd( 132.578, 362.886, -89.9505, 0.22 ) }
    dend_48 { pt3dadd( 132.613, 362.955, -89.9346, 0.22 ) }
    dend_48 { pt3dadd( 132.635, 363.021, -89.9193, 0.59 ) }
    dend_48 { pt3dadd( 132.951, 364.096, -89.6692, 0.59 ) }
    dend_48 { pt3dadd( 133.249, 365.258, -89.3511, 0.22 ) }
    dend_48 { pt3dadd( 133.766, 367.285, -88.8284, 0.22 ) }
    dend_48 { pt3dadd( 133.939, 368.028, -88.6422, 0.96 ) }
    dend_48 { pt3dadd( 134.076, 368.607, -88.5008, 1.18 ) }
    dend_48 { pt3dadd( 134.111, 368.747, -88.4685, 1.18 ) }
    dend_48 { pt3dadd( 134.319, 369.551, -88.3005, 0.22 ) }
    dend_48 { pt3dadd( 135.067, 372.25, -87.8677, 0.22 ) }
    dend_48 { pt3dadd( 135.191, 372.641, -87.7833, 0.66 ) }
    dend_48 { pt3dadd( 135.218, 372.715, -87.7658, 0.66 ) }
    dend_48 { pt3dadd( 135.45, 373.306, -87.6223, 0.66 ) }
    dend_48 { pt3dadd( 135.613, 373.699, -87.5314, 0.66 ) }
    dend_48 { pt3dadd( 135.741, 373.982, -87.4727, 0.66 ) }
    dend_48 { pt3dadd( 136.473, 375.266, -86.8928, 0.22 ) }
    dend_48 { pt3dadd( 136.63, 375.559, -86.7326, 0.66 ) }
    dend_48 { pt3dadd( 136.657, 375.615, -86.6976, 0.66 ) }
    dend_48 { pt3dadd( 136.851, 376.16, -86.3347, 0.66 ) }
    dend_48 { pt3dadd( 136.871, 376.24, -86.2804, 0.66 ) }
    dend_48 { pt3dadd( 136.984, 377.739, -85.3669, 0.22 ) }
    dend_48 { pt3dadd( 136.913, 378.49, -84.9454, 0.22 ) }
    dend_48 { pt3dadd( 136.892, 378.627, -84.8762, 0.22 ) }
    dend_48 { pt3dadd( 136.753, 379.509, -84.4692, 0.22 ) }
    dend_48 { pt3dadd( 136.741, 379.583, -84.4386, 0.22 ) }
    dend_48 { pt3dadd( 136.63, 380.478, -84.1382, 0.22 ) }
    dend_48 { pt3dadd( 136.551, 381.685, -83.8702, 1.03 ) }
    dend_48 { pt3dadd( 136.55, 382.407, -83.7131, 1.33 ) }
    dend_48 { pt3dadd( 136.563, 383.028, -83.604, 0.22 ) }
    dend_48 { pt3dadd( 136.575, 383.311, -83.5557, 0.22 ) }
    dend_48 { pt3dadd( 136.614, 384.172, -83.4184, 0.22 ) }
    dend_48 { pt3dadd( 136.686, 385.377, -83.2397, 0.22 ) }
    dend_48 { pt3dadd( 136.694, 385.474, -83.2278, 0.22 ) }
    dend_48 { pt3dadd( 136.888, 387.634, -82.9136, 0.22 ) }
    dend_48 { pt3dadd( 137.009, 388.976, -82.6922, 0.22 ) }
    dend_48 { pt3dadd( 137.015, 389.045, -82.6762, 0.22 ) }
    dend_48 { pt3dadd( 137.076, 389.633, -82.5064, 0.88 ) }
    dend_48 { pt3dadd( 137.138, 390.206, -82.311, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_75()
}

proc basic_shape_75() {
    dend_48 { pt3dadd( 137.205, 390.834, -82.084, 1.25 ) }
    dend_48 { pt3dadd( 137.217, 390.943, -82.0424, 1.25 ) }
    dend_48 { pt3dadd( 137.332, 392.193, -81.5065, 0.22 ) }
    dend_48 { pt3dadd( 137.455, 393.561, -80.9117, 0.22 ) }
    dend_48 { pt3dadd( 137.623, 395.583, -80.0282, 0.22 ) }
    dend_48 { pt3dadd( 137.65, 395.934, -79.8685, 0.74 ) }
    dend_48 { pt3dadd( 137.688, 396.386, -79.6603, 1.11 ) }
    dend_48 { pt3dadd( 137.834, 398.105, -78.8598, 0.22 ) }
    dend_48 { pt3dadd( 137.984, 399.759, -78.0752, 0.22 ) }
    dend_48 { pt3dadd( 137.991, 399.819, -78.0411, 0.22 ) }
    dend_48 { pt3dadd( 138.182, 401.059, -77.2504, 0.22 ) }
    dend_48 { pt3dadd( 138.191, 401.108, -77.2189, 0.22 ) }
    dend_48 { pt3dadd( 138.246, 401.385, -77.0444, 0.66 ) }
    dend_48 { pt3dadd( 138.315, 401.693, -76.8745, 0.66 ) }
    dend_48 { pt3dadd( 138.531, 402.798, -76.2735, 1.03 ) }
    dend_48 { pt3dadd( 138.553, 402.931, -76.2161, 1.03 ) }
    dend_48 { pt3dadd( 138.683, 403.744, -75.9572, 1.03 ) }
    dend_48 { pt3dadd( 138.717, 403.985, -75.8986, 1.03 ) }
    dend_48 { pt3dadd( 138.768, 404.347, -75.8375, 0.22 ) }
    dend_48 { pt3dadd( 138.935, 405.655, -75.704, 0.22 ) }
    dend_48 { pt3dadd( 138.982, 406.085, -75.6636, 0.37 ) }
    dend_48 { pt3dadd( 138.994, 406.165, -75.6597, 0.37 ) }
    dend_48 { pt3dadd( 139.193, 407.212, -75.6333, 0.37 ) }
    dend_48 { pt3dadd( 139.382, 408.059, -75.6311, 0.66 ) }
    dend_48 { pt3dadd( 139.399, 408.126, -75.6349, 0.66 ) }
    dend_48 { pt3dadd( 139.712, 409.251, -75.7728, 0.22 ) }
    dend_48 { pt3dadd( 140.315, 411.515, -76.191, 0.22 ) }
    dend_48 { pt3dadd( 140.329, 411.578, -76.2141, 0.59 ) }
    dend_48 { pt3dadd( 140.338, 411.63, -76.242, 0.59 ) }
    dend_48 { pt3dadd( 140.424, 412.263, -76.6325, 0.59 ) }
    dend_48 { pt3dadd( 140.457, 412.562, -76.8304, 0.59 ) }
    dend_48 { pt3dadd( 140.467, 412.676, -76.9215, 0.59 ) }
    dend_48 { pt3dadd( 140.549, 413.912, -78.1907, 0.22 ) }
    dend_48 { pt3dadd( 140.575, 414.735, -79.1066, 0.22 ) }
    dend_48 { pt3dadd( 140.583, 415.434, -79.9339, 0.22 ) }
    dend_48 { pt3dadd( 140.582, 415.469, -79.9826, 0.22 ) }
    dend_48 { pt3dadd( 140.475, 416.408, -81.5409, 0.59 ) }
    dend_48 { pt3dadd( 140.295, 417.446, -83.46, 0.88 ) }
    dend_48 { pt3dadd( 140.195, 417.785, -84.3038, 1.11 ) }
    dend_48 { pt3dadd( 140.153, 417.884, -84.5936, 1.11 ) }
    dend_48 { pt3dadd( 139.781, 418.591, -86.9142, 1.11 ) }
    dend_48 { pt3dadd( 139.769, 418.611, -86.9809, 1.11 ) }
    dend_48 { pt3dadd( 139.673, 418.744, -87.4592, 1.11 ) }
    dend_48 { pt3dadd( 138.932, 419.78, -91.0442, 0.37 ) }
    dend_48 { pt3dadd( 138.808, 419.985, -91.7942, 0.37 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 45/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 117.019, 342.633, -85.7781, 0.22 ) }
    dend_47 { pt3dadd( 116.606, 343.134, -85.7781, 0.22 ) }
    dend_47 { pt3dadd( 115.976, 343.897, -85.7781, 0.22 ) }
    dend_47 { pt3dadd( 115.908, 343.979, -85.7781, 0.44 ) }
    dend_47 { pt3dadd( 115.645, 344.298, -85.7781, 0.44 ) }
    dend_47 { pt3dadd( 115.537, 344.428, -85.7781, 0.44 ) }
    dend_47 { pt3dadd( 115.486, 344.49, -85.7781, 0.44 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 52/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 114.221, 288.964, -82.6761, 0.22 ) }
    dend_43 { pt3dadd( 115.058, 289.0, -82.9468, 0.22 ) }
    dend_43 { pt3dadd( 116.269, 289.045, -83.3099, 0.22 ) }
    dend_43 { pt3dadd( 116.336, 289.047, -83.3296, 0.22 ) }
    dend_43 { pt3dadd( 117.876, 289.038, -83.7418, 0.22 ) }
    dend_43 { pt3dadd( 117.972, 289.035, -83.7662, 0.22 ) }
    dend_43 { pt3dadd( 119.565, 288.975, -84.1524, 0.22 ) }
    dend_43 { pt3dadd( 119.633, 288.97, -84.1714, 0.22 ) }
    dend_43 { pt3dadd( 120.153, 288.894, -84.3259, 1.03 ) }
    dend_43 { pt3dadd( 120.955, 288.737, -84.5442, 1.33 ) }
    dend_43 { pt3dadd( 121.021, 288.72, -84.5597, 1.33 ) }
    dend_43 { pt3dadd( 121.308, 288.645, -84.6161, 1.33 ) }
    dend_43 { pt3dadd( 122.494, 288.305, -84.8233, 0.37 ) }
    dend_43 { pt3dadd( 123.533, 288.022, -84.9573, 0.37 ) }
    dend_43 { pt3dadd( 124.045, 287.915, -85.0828, 0.37 ) }
    dend_43 { pt3dadd( 124.187, 287.9, -85.1308, 0.37 ) }
    dend_43 { pt3dadd( 125.163, 287.851, -85.5039, 0.29 ) }
    dend_43 { pt3dadd( 125.511, 287.865, -85.6627, 0.88 ) }
    dend_43 { pt3dadd( 125.958, 287.923, -85.8941, 1.03 ) }
    dend_43 { pt3dadd( 127.998, 288.465, -87.1161, 0.22 ) }
    dend_43 { pt3dadd( 128.815, 288.771, -87.6652, 0.22 ) }
    dend_43 { pt3dadd( 128.891, 288.807, -87.7253, 0.22 ) }
    dend_43 { pt3dadd( 129.554, 289.166, -88.3723, 0.22 ) }
    dend_43 { pt3dadd( 129.601, 289.194, -88.4202, 0.22 ) }
    dend_43 { pt3dadd( 130.335, 289.626, -89.2383, 0.22 ) }
    dend_43 { pt3dadd( 130.663, 289.807, -89.7664, 0.96 ) }
    dend_43 { pt3dadd( 131.586, 290.329, -91.4105, 0.22 ) }
    dend_43 { pt3dadd( 132.071, 290.61, -92.3294, 0.22 ) }
    dend_43 { pt3dadd( 132.283, 290.733, -92.7261, 1.03 ) }
    dend_43 { pt3dadd( 132.788, 291.025, -93.6738, 1.03 ) }
    dend_43 { pt3dadd( 134.846, 292.211, -97.6542, 0.22 ) }
    dend_43 { pt3dadd( 135.544, 292.634, -99.0012, 0.22 ) }
    dend_43 { pt3dadd( 136.073, 292.979, -100.128, 0.66 ) }
    dend_43 { pt3dadd( 136.631, 293.331, -101.184, 0.22 ) }
    dend_43 { pt3dadd( 136.66, 293.349, -101.234, 0.22 ) }
    dend_43 { pt3dadd( 137.5, 293.86, -102.524, 1.33 ) }
    dend_43 { pt3dadd( 137.54, 293.883, -102.58, 1.33 ) }
    dend_43 { pt3dadd( 139.594, 294.977, -105.514, 0.22 ) }
    dend_43 { pt3dadd( 141.032, 295.717, -107.498, 0.22 ) }
    dend_43 { pt3dadd( 141.398, 295.897, -107.985, 0.96 ) }
    dend_43 { pt3dadd( 143.2, 296.832, -109.989, 0.22 ) }
    dend_43 { pt3dadd( 143.255, 296.861, -110.043, 0.22 ) }
    dend_43 { pt3dadd( 143.638, 297.076, -110.379, 0.59 ) }
    dend_43 { pt3dadd( 143.698, 297.111, -110.423, 0.59 ) }
    dend_43 { pt3dadd( 146.188, 298.541, -112.267, 0.22 ) }
    dend_43 { pt3dadd( 148.208, 299.674, -113.665, 0.22 ) }
    dend_43 { pt3dadd( 149.218, 300.233, -114.259, 0.22 ) }
    dend_43 { pt3dadd( 149.771, 300.541, -114.586, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_76()
}

proc basic_shape_76() {
    dend_43 { pt3dadd( 150.339, 300.867, -114.926, 0.88 ) }
    dend_43 { pt3dadd( 150.395, 300.9, -114.958, 0.88 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 2/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 114.221, 288.964, -82.6761, 0.22 ) }
    dend_42 { pt3dadd( 114.574, 289.851, -82.294, 0.22 ) }
    dend_42 { pt3dadd( 114.643, 290.04, -82.2105, 0.59 ) }
    dend_42 { pt3dadd( 114.67, 290.113, -82.1781, 0.59 ) }
    dend_42 { pt3dadd( 115.014, 291.041, -81.7669, 0.22 ) }
    dend_42 { pt3dadd( 115.173, 291.47, -81.5767, 0.59 ) }
    dend_42 { pt3dadd( 115.333, 291.902, -81.3855, 0.59 ) }
    dend_42 { pt3dadd( 115.349, 291.969, -81.3457, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 10/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 122.991, 332.09, -176.415, 0.59 ) }
    dend_24 { pt3dadd( 123.728, 335.413, -179.755, 0.59 ) }
    dend_24 { pt3dadd( 124.444, 339.428, -183.447, 0.22 ) }
    dend_24 { pt3dadd( 124.702, 341.192, -184.996, 0.88 ) }
    dend_24 { pt3dadd( 124.924, 343.011, -186.525, 1.18 ) }
    dend_24 { pt3dadd( 124.984, 343.616, -187.042, 1.18 ) }
    dend_24 { pt3dadd( 125.053, 344.569, -187.872, 0.22 ) }
    dend_24 { pt3dadd( 125.059, 346.66, -189.492, 0.22 ) }
    dend_24 { pt3dadd( 124.986, 347.285, -190.048, 0.66 ) }
    dend_24 { pt3dadd( 124.917, 347.715, -190.377, 0.88 ) }
    dend_24 { pt3dadd( 124.684, 348.989, -191.335, 0.88 ) }
    dend_24 { pt3dadd( 124.456, 350.139, -192.342, 0.15 ) }
    dend_24 { pt3dadd( 124.41, 350.362, -192.573, 0.15 ) }
    dend_24 { pt3dadd( 124.402, 350.449, -192.695, 0.15 ) }
    dend_24 { pt3dadd( 124.416, 350.882, -193.361, 0.15 ) }
    dend_24 { pt3dadd( 124.533, 351.427, -194.121, 0.88 ) }
    dend_24 { pt3dadd( 124.577, 351.539, -194.225, 0.88 ) }
    dend_24 { pt3dadd( 124.604, 351.593, -194.265, 0.88 ) }
    dend_24 { pt3dadd( 125.869, 353.957, -195.853, 0.22 ) }
    dend_24 { pt3dadd( 125.899, 354.013, -195.886, 0.22 ) }
    dend_24 { pt3dadd( 126.679, 355.419, -196.579, 0.22 ) }
    dend_24 { pt3dadd( 127.913, 357.646, -197.489, 0.22 ) }
    dend_24 { pt3dadd( 128.128, 358.04, -197.628, 0.88 ) }
    dend_24 { pt3dadd( 128.16, 358.098, -197.648, 0.88 ) }
    dend_24 { pt3dadd( 128.531, 358.859, -197.851, 0.88 ) }
    dend_24 { pt3dadd( 128.558, 358.919, -197.873, 0.88 ) }
    dend_24 { pt3dadd( 128.9, 359.937, -198.426, 1.62 ) }
    dend_24 { pt3dadd( 128.942, 360.11, -198.553, 1.62 ) }
    dend_24 { pt3dadd( 129.216, 361.424, -199.58, 0.22 ) }
    dend_24 { pt3dadd( 129.424, 362.504, -200.47, 0.22 ) }
    dend_24 { pt3dadd( 129.447, 362.645, -200.597, 0.59 ) }
    dend_24 { pt3dadd( 129.489, 363.011, -200.915, 0.59 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 42/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 122.991, 332.09, -176.415, 0.22 ) }
    dend_23 { pt3dadd( 124.304, 332.806, -176.015, 0.22 ) }
    dend_23 { pt3dadd( 126.382, 333.811, -175.201, 0.22 ) }
    dend_23 { pt3dadd( 126.591, 333.902, -175.112, 0.59 ) }
    dend_23 { pt3dadd( 126.684, 333.938, -175.072, 0.59 ) }
    dend_23 { pt3dadd( 128.883, 334.72, -174.168, 0.22 ) }
    dend_23 { pt3dadd( 128.946, 334.741, -174.143, 0.22 ) }
    dend_23 { pt3dadd( 129.855, 334.952, -173.755, 1.18 ) }
    dend_23 { pt3dadd( 130.165, 335.002, -173.55, 1.62 ) }
    dend_23 { pt3dadd( 130.644, 335.066, -173.19, 1.62 ) }
    dend_23 { pt3dadd( 131.657, 335.118, -172.311, 0.22 ) }
    dend_23 { pt3dadd( 131.7, 335.117, -172.268, 0.22 ) }
    dend_23 { pt3dadd( 132.424, 335.095, -171.387, 0.22 ) }
    dend_23 { pt3dadd( 134.187, 334.949, -168.727, 1.03 ) }
    dend_23 { pt3dadd( 134.6, 334.897, -168.02, 1.69 ) }
    dend_23 { pt3dadd( 135.547, 334.724, -166.327, 1.69 ) }
    dend_23 { pt3dadd( 135.604, 334.711, -166.222, 1.69 ) }
    dend_23 { pt3dadd( 137.053, 334.373, -163.814, 1.03 ) }
    dend_23 { pt3dadd( 137.967, 334.156, -162.434, 0.15 ) }
    dend_23 { pt3dadd( 138.018, 334.145, -162.373, 0.15 ) }
    dend_23 { pt3dadd( 138.8, 334.001, -161.4, 0.15 ) }
    dend_23 { pt3dadd( 138.898, 333.987, -161.284, 0.15 ) }
    dend_23 { pt3dadd( 139.884, 333.944, -160.152, 0.15 ) }
    dend_23 { pt3dadd( 139.934, 333.947, -160.099, 0.15 ) }
    dend_23 { pt3dadd( 141.122, 334.18, -158.837, 0.96 ) }
    dend_23 { pt3dadd( 142.443, 334.466, -157.355, 0.96 ) }
    dend_23 { pt3dadd( 142.48, 334.476, -157.308, 0.96 ) }
    dend_23 { pt3dadd( 143.14, 334.742, -156.127, 0.66 ) }
    dend_23 { pt3dadd( 143.329, 334.855, -155.644, 0.66 ) }
    dend_23 { pt3dadd( 143.347, 334.875, -155.568, 0.66 ) }
    dend_23 { pt3dadd( 143.528, 335.144, -154.574, 0.66 ) }
    dend_23 { pt3dadd( 143.539, 335.164, -154.507, 0.66 ) }
    dend_23 { pt3dadd( 144.128, 336.25, -150.899, 1.55 ) }
    dend_23 { pt3dadd( 144.136, 336.267, -150.842, 1.55 ) }
    dend_23 { pt3dadd( 144.754, 337.599, -146.305, 1.55 ) }
    dend_23 { pt3dadd( 144.763, 337.62, -146.24, 1.55 ) }
    dend_23 { pt3dadd( 144.926, 338.033, -145.076, 0.52 ) }
    dend_23 { pt3dadd( 145.282, 338.736, -143.26, 0.52 ) }
    dend_23 { pt3dadd( 145.314, 338.783, -143.155, 0.52 ) }
    dend_23 { pt3dadd( 145.576, 339.143, -142.434, 1.4 ) }
    dend_23 { pt3dadd( 146.368, 340.113, -140.908, 0.15 ) }
    dend_23 { pt3dadd( 146.392, 340.142, -140.862, 0.15 ) }
    dend_23 { pt3dadd( 146.9, 340.751, -139.903, 0.15 ) }
    dend_23 { pt3dadd( 147.062, 340.938, -139.702, 1.03 ) }
    dend_23 { pt3dadd( 147.101, 340.981, -139.663, 1.03 ) }
    dend_23 { pt3dadd( 147.2, 341.08, -139.605, 1.03 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 88/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 57.774, 309.406, -145.245, 0.22 ) }
    dend_18 { pt3dadd( 57.924, 309.927, -145.426, 0.22 ) }
    dend_18 { pt3dadd( 57.9464, 310.0, -145.451, 0.22 ) }
    dend_18 { pt3dadd( 58.3681, 311.414, -146.023, 0.22 ) }
    dend_18 { pt3dadd( 58.3856, 311.476, -146.048, 0.22 ) }
    dend_18 { pt3dadd( 58.5602, 312.335, -146.374, 0.22 ) }
    dend_18 { pt3dadd( 58.5702, 312.399, -146.399, 0.22 ) }
    dend_18 { pt3dadd( 58.5991, 312.95, -146.588, 0.22 ) }
    dend_18 { pt3dadd( 58.5866, 313.615, -146.807, 0.88 ) }
    dend_18 { pt3dadd( 58.5566, 314.159, -146.999, 1.11 ) }
    dend_18 { pt3dadd( 58.5079, 314.982, -147.271, 1.11 ) }
    dend_18 { pt3dadd( 58.4817, 315.516, -147.433, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_77()
}

proc basic_shape_77() {
    dend_18 { pt3dadd( 58.4695, 316.75, -147.78, 0.22 ) }
    dend_18 { pt3dadd( 58.4757, 318.328, -148.265, 0.22 ) }
    dend_18 { pt3dadd( 58.4843, 319.611, -148.66, 0.88 ) }
    dend_18 { pt3dadd( 58.4875, 320.352, -148.906, 1.25 ) }
    dend_18 { pt3dadd( 58.4978, 321.256, -149.214, 1.69 ) }
    dend_18 { pt3dadd( 58.5051, 322.394, -149.658, 1.69 ) }
    dend_18 { pt3dadd( 58.5233, 323.478, -150.137, 0.15 ) }
    dend_18 { pt3dadd( 58.5163, 324.422, -150.612, 0.15 ) }
    dend_18 { pt3dadd( 58.4684, 326.016, -151.488, 0.15 ) }
    dend_18 { pt3dadd( 58.4612, 326.152, -151.569, 0.74 ) }
    dend_18 { pt3dadd( 58.3604, 327.476, -152.433, 0.22 ) }
    dend_18 { pt3dadd( 58.3102, 328.266, -152.954, 0.22 ) }
    dend_18 { pt3dadd( 58.2922, 329.028, -153.415, 0.88 ) }
    dend_18 { pt3dadd( 58.2904, 329.147, -153.485, 0.88 ) }
    dend_18 { pt3dadd( 58.2745, 329.618, -153.763, 0.88 ) }
    dend_18 { pt3dadd( 58.2191, 330.134, -153.998, 0.22 ) }
    dend_18 { pt3dadd( 58.0704, 331.008, -154.246, 0.22 ) }
    dend_18 { pt3dadd( 58.0276, 331.205, -154.289, 0.44 ) }
    dend_18 { pt3dadd( 57.8382, 332.049, -154.515, 0.44 ) }
    dend_18 { pt3dadd( 57.6796, 332.734, -154.736, 0.15 ) }
    dend_18 { pt3dadd( 57.3236, 334.425, -155.314, 0.15 ) }
    dend_18 { pt3dadd( 57.203, 335.081, -155.525, 0.88 ) }
    dend_18 { pt3dadd( 57.0919, 335.747, -155.738, 0.88 ) }
    dend_18 { pt3dadd( 56.8544, 337.518, -156.27, 0.66 ) }
    dend_18 { pt3dadd( 56.8268, 337.789, -156.36, 0.15 ) }
    dend_18 { pt3dadd( 56.7483, 339.087, -156.779, 0.15 ) }
    dend_18 { pt3dadd( 56.7186, 340.461, -157.236, 0.15 ) }
    dend_18 { pt3dadd( 56.7169, 340.678, -157.305, 0.74 ) }
    dend_18 { pt3dadd( 56.7223, 341.385, -157.499, 0.74 ) }
    dend_18 { pt3dadd( 56.7368, 342.87, -157.802, 0.15 ) }
    dend_18 { pt3dadd( 56.7375, 344.377, -158.21, 0.15 ) }
    dend_18 { pt3dadd( 56.7205, 345.378, -158.536, 0.15 ) }
    dend_18 { pt3dadd( 56.7157, 345.581, -158.618, 0.59 ) }
    dend_18 { pt3dadd( 56.7141, 345.635, -158.641, 0.59 ) }
    dend_18 { pt3dadd( 56.6854, 346.306, -158.941, 0.59 ) }
    dend_18 { pt3dadd( 56.5975, 347.556, -159.505, 0.15 ) }
    dend_18 { pt3dadd( 56.4199, 349.302, -160.433, 0.15 ) }
    dend_18 { pt3dadd( 56.3298, 350.171, -160.88, 0.52 ) }
    dend_18 { pt3dadd( 56.277, 350.707, -161.115, 0.52 ) }
    dend_18 { pt3dadd( 56.25, 350.998, -161.216, 0.66 ) }
    dend_18 { pt3dadd( 56.1931, 351.527, -161.377, 0.15 ) }
    dend_18 { pt3dadd( 56.1823, 351.623, -161.397, 0.15 ) }
    dend_18 { pt3dadd( 56.0105, 353.05, -161.683, 0.15 ) }
    dend_18 { pt3dadd( 55.939, 353.691, -161.772, 0.88 ) }
    dend_18 { pt3dadd( 55.9209, 354.216, -161.856, 1.11 ) }
    dend_18 { pt3dadd( 55.9671, 355.293, -162.038, 1.03 ) }
    dend_18 { pt3dadd( 55.9767, 355.36, -162.049, 1.03 ) }
    dend_18 { pt3dadd( 56.0345, 355.653, -162.128, 0.15 ) }
    dend_18 { pt3dadd( 56.0557, 355.724, -162.155, 0.15 ) }
    dend_18 { pt3dadd( 56.3983, 356.849, -162.61, 0.15 ) }
    dend_18 { pt3dadd( 56.4124, 356.905, -162.627, 0.15 ) }
    dend_18 { pt3dadd( 56.521, 357.481, -162.729, 0.15 ) }
    dend_18 { pt3dadd( 56.6035, 358.185, -162.869, 0.44 ) }
    dend_18 { pt3dadd( 56.643, 358.82, -162.994, 0.44 ) }
    dend_18 { pt3dadd( 56.6486, 358.972, -163.023, 0.44 ) }
    dend_18 { pt3dadd( 56.6397, 360.074, -163.312, 0.44 ) }
    dend_18 { pt3dadd( 56.6181, 361.301, -163.669, 0.15 ) }
    dend_18 { pt3dadd( 56.6016, 361.917, -163.858, 0.88 ) }
    dend_18 { pt3dadd( 56.5784, 362.732, -164.103, 1.25 ) }
    dend_18 { pt3dadd( 56.5637, 363.146, -164.24, 1.25 ) }
    dend_18 { pt3dadd( 56.5349, 364.613, -164.744, 0.15 ) }
    dend_18 { pt3dadd( 56.5267, 365.208, -164.968, 0.15 ) }
    dend_18 { pt3dadd( 56.5234, 365.284, -164.996, 0.15 ) }
    dend_18 { pt3dadd( 56.4907, 365.867, -165.171, 0.15 ) }
    dend_18 { pt3dadd( 56.4866, 365.944, -165.188, 0.15 ) }
    dend_18 { pt3dadd( 56.4645, 366.787, -165.288, 0.15 ) }
    dend_18 { pt3dadd( 56.4624, 366.866, -165.288, 0.15 ) }
    dend_18 { pt3dadd( 56.4116, 367.597, -165.37, 0.15 ) }
    dend_18 { pt3dadd( 56.4061, 367.664, -165.383, 0.15 ) }
    dend_18 { pt3dadd( 56.286, 368.971, -165.742, 0.15 ) }
    dend_18 { pt3dadd( 56.2393, 369.44, -165.895, 0.81 ) }
    dend_18 { pt3dadd( 56.1804, 370.063, -166.122, 0.96 ) }
    dend_18 { pt3dadd( 56.062, 371.355, -166.665, 0.96 ) }
    dend_18 { pt3dadd( 56.0157, 372.012, -166.948, 0.15 ) }
    dend_18 { pt3dadd( 55.9561, 372.791, -167.263, 1.4 ) }
    dend_18 { pt3dadd( 55.9509, 372.855, -167.288, 1.4 ) }
    dend_18 { pt3dadd( 55.9199, 373.409, -167.469, 1.77 ) }
    dend_18 { pt3dadd( 55.8928, 374.626, -167.771, 0.22 ) }
    dend_18 { pt3dadd( 55.8658, 375.969, -167.95, 0.22 ) }
    dend_18 { pt3dadd( 55.8449, 376.392, -168.002, 0.59 ) }
    dend_18 { pt3dadd( 55.8364, 376.553, -168.017, 0.22 ) }
    dend_18 { pt3dadd( 55.8139, 376.994, -168.05, 0.22 ) }
    dend_18 { pt3dadd( 55.8086, 377.109, -168.075, 0.22 ) }
    dend_18 { pt3dadd( 55.8216, 377.743, -168.271, 0.22 ) }
    dend_18 { pt3dadd( 55.8486, 378.202, -168.444, 1.11 ) }
    dend_18 { pt3dadd( 55.9068, 378.858, -168.721, 1.55 ) }
    dend_18 { pt3dadd( 55.9635, 379.39, -168.956, 1.55 ) }
    dend_18 { pt3dadd( 56.187, 381.103, -169.706, 0.15 ) }
    dend_18 { pt3dadd( 56.4046, 382.596, -170.355, 0.15 ) }
    dend_18 { pt3dadd( 56.5857, 383.692, -170.833, 0.15 ) }
    dend_18 { pt3dadd( 56.6521, 384.142, -171.005, 0.44 ) }
    dend_18 { pt3dadd( 56.6599, 384.21, -171.027, 0.44 ) }
    dend_18 { pt3dadd( 56.7403, 385.192, -171.236, 0.44 ) }
    dend_18 { pt3dadd( 56.7444, 385.302, -171.247, 0.15 ) }
    dend_18 { pt3dadd( 56.7418, 385.411, -171.262, 0.15 ) }
    dend_18 { pt3dadd( 56.674, 387.034, -171.485, 0.15 ) }
    dend_18 { pt3dadd( 56.6687, 387.42, -171.528, 0.59 ) }
    dend_18 { pt3dadd( 56.6752, 388.126, -171.642, 0.66 ) }
    dend_18 { pt3dadd( 56.6963, 388.806, -171.77, 0.15 ) }
    dend_18 { pt3dadd( 56.7019, 388.923, -171.794, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_78()
}

proc basic_shape_78() {
    dend_18 { pt3dadd( 56.7889, 390.256, -172.067, 0.15 ) }
    dend_18 { pt3dadd( 56.9556, 391.855, -172.382, 0.15 ) }
    dend_18 { pt3dadd( 57.0761, 392.843, -172.59, 1.03 ) }
    dend_18 { pt3dadd( 57.1598, 393.477, -172.721, 1.33 ) }
    dend_18 { pt3dadd( 57.2298, 393.969, -172.852, 0.81 ) }
    dend_18 { pt3dadd( 57.2892, 394.379, -172.993, 0.15 ) }
    dend_18 { pt3dadd( 57.545, 395.81, -173.584, 0.15 ) }
    dend_18 { pt3dadd( 57.7023, 396.573, -173.932, 0.96 ) }
    dend_18 { pt3dadd( 57.8833, 397.367, -174.393, 1.18 ) }
    dend_18 { pt3dadd( 58.2001, 398.696, -175.329, 0.15 ) }
    dend_18 { pt3dadd( 58.2118, 398.742, -175.365, 0.15 ) }
    dend_18 { pt3dadd( 58.625, 400.325, -176.723, 0.15 ) }
    dend_18 { pt3dadd( 58.6383, 400.374, -176.771, 0.15 ) }
    dend_18 { pt3dadd( 59.0728, 401.935, -178.308, 0.15 ) }
    dend_18 { pt3dadd( 59.0953, 402.011, -178.388, 0.15 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 15/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 57.774, 309.406, -145.245, 0.15 ) }
    dend_17 { pt3dadd( 57.426, 309.846, -145.169, 0.15 ) }
    dend_17 { pt3dadd( 57.0643, 310.303, -145.091, 0.15 ) }
    dend_17 { pt3dadd( 56.4603, 311.067, -144.96, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 19/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 46.4658, 304.465, -132.691, 0.22 ) }
    dend_13 { pt3dadd( 45.2805, 306.617, -137.304, 0.22 ) }
    dend_13 { pt3dadd( 45.0662, 307.006, -138.138, 0.22 ) }
    dend_13 { pt3dadd( 45.0502, 307.035, -138.2, 0.22 ) }
    dend_13 { pt3dadd( 44.6946, 307.681, -139.584, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 24/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 46.4658, 304.465, -132.691, 1.4 ) }
    dend_10 { pt3dadd( 45.9741, 304.851, -132.773, 1.4 ) }
    dend_10 { pt3dadd( 45.5817, 305.145, -132.817, 1.62 ) }
    dend_10 { pt3dadd( 45.1268, 305.489, -132.864, 1.62 ) }
    dend_10 { pt3dadd( 44.8326, 305.715, -132.887, 1.55 ) }
    dend_10 { pt3dadd( 44.7597, 305.773, -132.892, 1.55 ) }
    dend_10 { pt3dadd( 43.8188, 306.537, -132.95, 0.22 ) }
    dend_10 { pt3dadd( 41.9996, 308.03, -133.026, 0.22 ) }
    dend_10 { pt3dadd( 41.8691, 308.133, -133.03, 0.22 ) }
    dend_10 { pt3dadd( 39.993, 309.543, -133.052, 0.22 ) }
    dend_10 { pt3dadd( 38.6043, 310.535, -133.043, 0.22 ) }
    dend_10 { pt3dadd( 37.9928, 310.948, -133.03, 0.22 ) }
    dend_10 { pt3dadd( 37.8704, 311.025, -133.027, 0.22 ) }
    dend_10 { pt3dadd( 36.5167, 311.889, -132.975, 0.22 ) }
    dend_10 { pt3dadd( 36.1468, 312.13, -132.949, 0.74 ) }
    dend_10 { pt3dadd( 35.5335, 312.564, -132.879, 0.74 ) }
    dend_10 { pt3dadd( 35.4701, 312.615, -132.871, 0.74 ) }
    dend_10 { pt3dadd( 35.19, 312.898, -132.83, 0.22 ) }
    dend_10 { pt3dadd( 33.731, 314.694, -132.638, 0.22 ) }
    dend_10 { pt3dadd( 33.2969, 315.359, -132.582, 0.74 ) }
    dend_10 { pt3dadd( 32.8924, 316.022, -132.539, 0.74 ) }
    dend_10 { pt3dadd( 32.6724, 316.396, -132.489, 0.15 ) }
    dend_10 { pt3dadd( 32.1021, 317.298, -132.299, 0.15 ) }
    dend_10 { pt3dadd( 31.8731, 317.63, -132.2, 0.44 ) }
    dend_10 { pt3dadd( 31.7731, 317.749, -132.154, 0.44 ) }
    dend_10 { pt3dadd( 31.387, 318.151, -131.95, 0.44 ) }
    dend_10 { pt3dadd( 30.1579, 319.158, -131.247, 0.15 ) }
    dend_10 { pt3dadd( 29.6898, 319.481, -130.969, 0.15 ) }
    dend_10 { pt3dadd( 29.2506, 319.74, -130.724, 1.11 ) }
    dend_10 { pt3dadd( 28.6088, 320.095, -130.376, 1.33 ) }
    dend_10 { pt3dadd( 27.4379, 320.717, -129.763, 0.15 ) }
    dend_10 { pt3dadd( 26.6197, 321.135, -129.372, 0.15 ) }
    dend_10 { pt3dadd( 26.4886, 321.204, -129.304, 0.15 ) }
    dend_10 { pt3dadd( 25.4701, 321.911, -128.681, 0.15 ) }
    dend_10 { pt3dadd( 25.2058, 322.161, -128.454, 0.81 ) }
    dend_10 { pt3dadd( 25.1223, 322.267, -128.362, 0.81 ) }
    dend_10 { pt3dadd( 24.7575, 322.855, -127.93, 0.81 ) }
    dend_10 { pt3dadd( 24.0051, 324.363, -126.94, 0.22 ) }
    dend_10 { pt3dadd( 23.5589, 325.4, -126.332, 0.22 ) }
    dend_10 { pt3dadd( 23.156, 326.507, -125.752, 0.88 ) }
    dend_10 { pt3dadd( 22.9726, 327.028, -125.507, 0.88 ) }
    dend_10 { pt3dadd( 22.6869, 327.857, -125.151, 0.15 ) }
    dend_10 { pt3dadd( 22.3368, 328.86, -124.795, 0.22 ) }
    dend_10 { pt3dadd( 22.0703, 329.521, -124.656, 0.22 ) }
    dend_10 { pt3dadd( 21.8829, 329.894, -124.592, 1.03 ) }
    dend_10 { pt3dadd( 21.4807, 330.601, -124.512, 1.33 ) }
    dend_10 { pt3dadd( 21.4266, 330.69, -124.499, 1.33 ) }
    dend_10 { pt3dadd( 21.0678, 331.208, -124.383, 1.33 ) }
    dend_10 { pt3dadd( 20.88, 331.442, -124.335, 0.22 ) }
    dend_10 { pt3dadd( 19.9809, 332.496, -124.136, 0.22 ) }
    dend_10 { pt3dadd( 19.8461, 332.649, -124.113, 0.52 ) }
    dend_10 { pt3dadd( 19.527, 333.018, -124.072, 0.52 ) }
    dend_10 { pt3dadd( 18.5907, 334.125, -123.968, 0.22 ) }
    dend_10 { pt3dadd( 17.7419, 335.129, -123.885, 0.22 ) }
    dend_10 { pt3dadd( 17.651, 335.237, -123.877, 0.22 ) }
    dend_10 { pt3dadd( 16.8598, 336.157, -123.808, 0.22 ) }
    dend_10 { pt3dadd( 16.1849, 336.949, -123.811, 0.22 ) }
    dend_10 { pt3dadd( 15.2385, 338.02, -123.913, 0.22 ) }
    dend_10 { pt3dadd( 14.8026, 338.494, -124.01, 1.11 ) }
    dend_10 { pt3dadd( 14.3014, 338.999, -124.147, 1.47 ) }
    dend_10 { pt3dadd( 13.9994, 339.274, -124.26, 1.47 ) }
    dend_10 { pt3dadd( 12.8161, 340.253, -124.826, 0.22 ) }
    dend_10 { pt3dadd( 11.8355, 340.979, -125.426, 0.22 ) }
    dend_10 { pt3dadd( 11.7799, 341.021, -125.466, 0.22 ) }
    dend_10 { pt3dadd( 10.9569, 341.683, -126.14, 0.22 ) }
    dend_10 { pt3dadd( 10.2308, 342.32, -126.762, 0.96 ) }
    dend_10 { pt3dadd( 9.89176, 342.662, -127.06, 0.96 ) }
    dend_10 { pt3dadd( 9.40243, 343.244, -127.442, 0.22 ) }
    dend_10 { pt3dadd( 8.99203, 343.852, -127.821, 0.22 ) }
    dend_10 { pt3dadd( 8.8123, 344.148, -127.971, 0.52 ) }
    dend_10 { pt3dadd( 8.4917, 344.738, -128.208, 0.52 ) }
    dend_10 { pt3dadd( 8.38949, 344.925, -128.261, 0.22 ) }
    dend_10 { pt3dadd( 8.00275, 345.593, -128.43, 0.22 ) }
    dend_10 { pt3dadd( 7.9595, 345.664, -128.443, 0.22 ) }
    dend_10 { pt3dadd( 7.36445, 346.548, -128.617, 0.22 ) }
    dend_10 { pt3dadd( 6.72782, 347.427, -128.777, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_79()
}

proc basic_shape_79() {
    dend_10 { pt3dadd( 6.67871, 347.491, -128.79, 0.22 ) }
    dend_10 { pt3dadd( 6.6277, 347.551, -128.809, 0.66 ) }
    dend_10 { pt3dadd( 6.49192, 347.711, -128.873, 0.66 ) }
    dend_10 { pt3dadd( 6.13798, 348.127, -129.056, 0.66 ) }
    dend_10 { pt3dadd( 6.04553, 348.234, -129.104, 0.66 ) }
    dend_10 { pt3dadd( 5.83059, 348.482, -129.224, 0.66 ) }
    dend_10 { pt3dadd( 5.1902, 349.209, -129.584, 0.22 ) }
    dend_10 { pt3dadd( 4.52297, 349.911, -130.083, 0.22 ) }
    dend_10 { pt3dadd( 4.41817, 350.004, -130.165, 0.22 ) }
    dend_10 { pt3dadd( 3.95169, 350.402, -130.561, 0.22 ) }
    dend_10 { pt3dadd( 3.51949, 350.806, -130.95, 0.88 ) }
    dend_10 { pt3dadd( 3.12223, 351.209, -131.29, 1.18 ) }
    dend_10 { pt3dadd( 2.16715, 352.287, -132.009, 0.22 ) }
    dend_10 { pt3dadd( 1.58727, 353.006, -132.443, 0.22 ) }
    dend_10 { pt3dadd( 1.29828, 353.432, -132.597, 0.37 ) }
    dend_10 { pt3dadd( 0.766382, 354.378, -132.617, 0.15 ) }
    dend_10 { pt3dadd( 0.340456, 355.21, -132.415, 1.11 ) }
    dend_10 { pt3dadd( 0.0663538, 355.836, -132.203, 1.11 ) }
    dend_10 { pt3dadd( 0.0374295, 355.907, -132.179, 1.11 ) }
    dend_10 { pt3dadd( -0.383585, 357.044, -131.835, 0.15 ) }
    dend_10 { pt3dadd( -0.84931, 358.267, -131.505, 0.15 ) }
    dend_10 { pt3dadd( -0.998843, 358.655, -131.421, 0.22 ) }
    dend_10 { pt3dadd( -1.70426, 360.573, -131.114, 0.22 ) }
    dend_10 { pt3dadd( -2.07237, 361.699, -130.93, 0.22 ) }
    dend_10 { pt3dadd( -2.34083, 362.645, -130.758, 1.11 ) }
    dend_10 { pt3dadd( -2.51885, 363.44, -130.621, 1.33 ) }
    dend_10 { pt3dadd( -2.58879, 364.039, -130.492, 0.81 ) }
    dend_10 { pt3dadd( -2.5921, 364.12, -130.473, 0.81 ) }
    dend_10 { pt3dadd( -2.47514, 365.214, -130.14, 0.81 ) }
    dend_10 { pt3dadd( -2.28779, 365.95, -129.835, 1.18 ) }
    dend_10 { pt3dadd( -2.22992, 366.134, -129.759, 1.18 ) }
    dend_10 { pt3dadd( -1.83928, 367.258, -129.298, 0.52 ) }
    dend_10 { pt3dadd( -1.69585, 367.659, -129.143, 1.11 ) }
    dend_10 { pt3dadd( -1.37945, 368.589, -128.833, 1.92 ) }
    dend_10 { pt3dadd( -0.863213, 370.171, -128.356, 0.29 ) }
    dend_10 { pt3dadd( -0.661428, 370.958, -128.059, 0.29 ) }
    dend_10 { pt3dadd( -0.575622, 371.415, -127.854, 0.59 ) }
    dend_10 { pt3dadd( -0.568035, 371.478, -127.821, 0.59 ) }
    dend_10 { pt3dadd( -0.525003, 372.25, -127.418, 0.59 ) }
    dend_10 { pt3dadd( -0.53348, 372.747, -127.143, 0.29 ) }
    dend_10 { pt3dadd( -0.603927, 374.203, -126.472, 0.29 ) }
    dend_10 { pt3dadd( -0.641786, 374.981, -126.114, 0.29 ) }
    dend_10 { pt3dadd( -0.679412, 375.582, -125.852, 0.88 ) }
    dend_10 { pt3dadd( -0.714192, 376.103, -125.636, 0.88 ) }
    dend_10 { pt3dadd( -0.85251, 377.758, -125.016, 0.22 ) }
    dend_10 { pt3dadd( -1.00674, 379.658, -124.493, 0.22 ) }
    dend_10 { pt3dadd( -1.01437, 379.723, -124.47, 0.52 ) }
    dend_10 { pt3dadd( -1.0962, 380.139, -124.277, 0.37 ) }
    dend_10 { pt3dadd( -1.31383, 380.821, -123.824, 0.22 ) }
    dend_10 { pt3dadd( -1.62584, 381.455, -123.192, 0.22 ) }
    dend_10 { pt3dadd( -2.01944, 381.985, -122.471, 0.88 ) }
    dend_10 { pt3dadd( -3.35333, 383.431, -119.902, 0.15 ) }
    dend_10 { pt3dadd( -3.50271, 383.582, -119.603, 0.15 ) }
    dend_10 { pt3dadd( -4.10517, 384.117, -118.343, 0.15 ) }
    dend_10 { pt3dadd( -4.64857, 384.507, -117.172, 1.18 ) }
    dend_10 { pt3dadd( -4.95223, 384.689, -116.464, 1.18 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 56/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 59.0953, 402.011, -178.388, 0.22 ) }
    dend_20 { pt3dadd( 58.264, 402.626, -179.824, 0.22 ) }
    dend_20 { pt3dadd( 57.8181, 402.934, -180.472, 0.88 ) }
    dend_20 { pt3dadd( 57.4705, 403.168, -180.937, 0.88 ) }
    dend_20 { pt3dadd( 55.9072, 404.221, -183.027, 0.29 ) }
    dend_20 { pt3dadd( 55.5914, 404.433, -183.449, 1.03 ) }
    dend_20 { pt3dadd( 55.5511, 404.46, -183.503, 1.03 ) }
    dend_20 { pt3dadd( 54.8951, 404.778, -184.3, 1.25 ) }
    dend_20 { pt3dadd( 54.8513, 404.796, -184.352, 1.25 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 65/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 59.0953, 402.011, -178.388, 0.15 ) }
    dend_19 { pt3dadd( 59.6399, 402.658, -178.388, 0.15 ) }
    dend_19 { pt3dadd( 59.6848, 402.711, -178.388, 0.15 ) }
    dend_19 { pt3dadd( 59.8804, 402.943, -178.388, 1.03 ) }
    dend_19 { pt3dadd( 60.1632, 403.279, -178.388, 1.03 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 70/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 44.6946, 307.681, -139.584, 1.03 ) }
    dend_15 { pt3dadd( 44.5579, 308.099, -139.88, 1.03 ) }
    dend_15 { pt3dadd( 44.3467, 308.711, -140.312, 1.03 ) }
    dend_15 { pt3dadd( 43.835, 310.0, -141.142, 0.22 ) }
    dend_15 { pt3dadd( 43.2279, 311.445, -142.004, 0.22 ) }
    dend_15 { pt3dadd( 42.9111, 312.17, -142.417, 0.22 ) }
    dend_15 { pt3dadd( 42.5283, 313.005, -142.866, 0.22 ) }
    dend_15 { pt3dadd( 42.4404, 313.17, -142.949, 0.22 ) }
    dend_15 { pt3dadd( 41.7796, 314.248, -143.505, 0.22 ) }
    dend_15 { pt3dadd( 41.5622, 314.55, -143.642, 0.44 ) }
    dend_15 { pt3dadd( 41.5202, 314.599, -143.666, 0.44 ) }
    dend_15 { pt3dadd( 41.071, 315.054, -143.901, 0.44 ) }
    dend_15 { pt3dadd( 40.1134, 315.94, -144.303, 0.22 ) }
    dend_15 { pt3dadd( 39.4382, 316.5, -144.55, 0.29 ) }
    dend_15 { pt3dadd( 38.9342, 316.864, -144.729, 0.29 ) }
    dend_15 { pt3dadd( 38.4496, 317.168, -144.876, 0.22 ) }
    dend_15 { pt3dadd( 37.7026, 317.596, -145.069, 0.22 ) }
    dend_15 { pt3dadd( 37.2372, 317.824, -145.159, 0.74 ) }
    dend_15 { pt3dadd( 36.406, 318.183, -145.251, 0.74 ) }
    dend_15 { pt3dadd( 35.4986, 318.567, -145.31, 0.29 ) }
    dend_15 { pt3dadd( 34.6168, 318.936, -145.379, 0.29 ) }
    dend_15 { pt3dadd( 34.544, 318.968, -145.387, 0.29 ) }
    dend_15 { pt3dadd( 33.9055, 319.298, -145.491, 0.29 ) }
    dend_15 { pt3dadd( 33.6804, 319.423, -145.534, 0.29 ) }
    dend_15 { pt3dadd( 32.9634, 319.866, -145.667, 0.29 ) }
    dend_15 { pt3dadd( 32.9061, 319.909, -145.675, 0.29 ) }
    dend_15 { pt3dadd( 32.3881, 320.361, -145.786, 0.29 ) }
    dend_15 { pt3dadd( 31.8152, 320.944, -145.914, 1.11 ) }
    dend_15 { pt3dadd( 31.2658, 321.632, -146.038, 1.25 ) }
    dend_15 { pt3dadd( 30.9331, 322.094, -146.09, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_80()
}

proc basic_shape_80() {
    dend_15 { pt3dadd( 30.3104, 323.046, -146.123, 0.22 ) }
    dend_15 { pt3dadd( 29.9165, 323.675, -146.108, 0.22 ) }
    dend_15 { pt3dadd( 29.2755, 324.565, -146.03, 0.22 ) }
    dend_15 { pt3dadd( 28.515, 325.521, -145.92, 0.22 ) }
    dend_15 { pt3dadd( 28.0101, 326.13, -145.837, 0.88 ) }
    dend_15 { pt3dadd( 27.6004, 326.581, -145.764, 1.11 ) }
    dend_15 { pt3dadd( 27.5207, 326.66, -145.752, 0.22 ) }
    dend_15 { pt3dadd( 25.297, 328.853, -145.48, 0.22 ) }
    dend_15 { pt3dadd( 24.705, 329.453, -145.451, 0.81 ) }
    dend_15 { pt3dadd( 24.705, 329.453, -145.451, 0.81 ) }
    dend_15 { pt3dadd( 24.4868, 329.745, -145.475, 0.81 ) }
    dend_15 { pt3dadd( 24.1352, 330.355, -145.581, 0.22 ) }
    dend_15 { pt3dadd( 23.6756, 331.587, -145.919, 0.22 ) }
    dend_15 { pt3dadd( 23.5425, 332.485, -146.235, 0.22 ) }
    dend_15 { pt3dadd( 23.5343, 332.55, -146.257, 0.22 ) }
    dend_15 { pt3dadd( 23.3916, 333.618, -146.596, 0.22 ) }
    dend_15 { pt3dadd( 23.2479, 334.67, -146.914, 1.33 ) }
    dend_15 { pt3dadd( 23.0995, 335.72, -147.206, 1.47 ) }
    dend_15 { pt3dadd( 22.9006, 336.948, -147.547, 0.22 ) }
    dend_15 { pt3dadd( 22.644, 338.595, -147.966, 0.22 ) }
    dend_15 { pt3dadd( 22.5565, 339.192, -148.096, 0.22 ) }
    dend_15 { pt3dadd( 22.5386, 339.339, -148.118, 0.22 ) }
    dend_15 { pt3dadd( 22.4846, 339.91, -148.173, 0.22 ) }
    dend_15 { pt3dadd( 22.4764, 340.213, -148.203, 0.52 ) }
    dend_15 { pt3dadd( 22.4939, 340.781, -148.334, 0.52 ) }
    dend_15 { pt3dadd( 22.4986, 340.846, -148.356, 0.52 ) }
    dend_15 { pt3dadd( 22.5839, 341.779, -148.711, 0.52 ) }
    dend_15 { pt3dadd( 22.6694, 342.689, -149.065, 0.22 ) }
    dend_15 { pt3dadd( 22.836, 344.457, -149.858, 0.22 ) }
    dend_15 { pt3dadd( 22.9101, 345.273, -150.257, 0.44 ) }
    dend_15 { pt3dadd( 22.9134, 345.337, -150.288, 0.44 ) }
    dend_15 { pt3dadd( 22.9322, 346.183, -150.679, 0.44 ) }
    dend_15 { pt3dadd( 22.9018, 346.649, -150.856, 0.44 ) }
    dend_15 { pt3dadd( 22.79, 347.398, -151.115, 0.15 ) }
    dend_15 { pt3dadd( 22.7729, 347.461, -151.138, 0.15 ) }
    dend_15 { pt3dadd( 22.3426, 348.784, -151.578, 0.15 ) }
    dend_15 { pt3dadd( 22.318, 348.845, -151.599, 0.15 ) }
    dend_15 { pt3dadd( 21.6033, 350.274, -152.065, 0.15 ) }
    dend_15 { pt3dadd( 21.1422, 351.087, -152.441, 0.59 ) }
    dend_15 { pt3dadd( 20.7012, 351.753, -152.805, 0.59 ) }
    dend_15 { pt3dadd( 20.6622, 351.801, -152.837, 0.59 ) }
    dend_15 { pt3dadd( 20.2171, 352.234, -153.232, 0.59 ) }
    dend_15 { pt3dadd( 19.7506, 352.625, -153.634, 0.59 ) }
    dend_15 { pt3dadd( 18.2676, 353.649, -154.859, 0.15 ) }
    dend_15 { pt3dadd( 17.4572, 354.169, -155.47, 0.15 ) }
    dend_15 { pt3dadd( 16.7241, 354.611, -156.026, 0.15 ) }
    dend_15 { pt3dadd( 16.0361, 355.053, -156.504, 0.81 ) }
    dend_15 { pt3dadd( 15.4613, 355.458, -156.85, 1.18 ) }
    dend_15 { pt3dadd( 15.1376, 355.711, -156.996, 1.18 ) }
    dend_15 { pt3dadd( 15.0816, 355.767, -157.007, 1.18 ) }
    dend_15 { pt3dadd( 14.8528, 356.042, -157.042, 0.22 ) }
    dend_15 { pt3dadd( 14.1011, 357.142, -157.101, 0.22 ) }
    dend_15 { pt3dadd( 13.6788, 357.846, -157.12, 0.22 ) }
    dend_15 { pt3dadd( 13.6357, 357.928, -157.123, 0.22 ) }
    dend_15 { pt3dadd( 12.9399, 359.366, -157.2, 0.22 ) }
    dend_15 { pt3dadd( 12.8762, 359.501, -157.211, 0.22 ) }
    dend_15 { pt3dadd( 12.3441, 360.625, -157.317, 0.22 ) }
    dend_15 { pt3dadd( 12.069, 361.225, -157.385, 1.03 ) }
    dend_15 { pt3dadd( 11.7505, 361.926, -157.467, 1.47 ) }
    dend_15 { pt3dadd( 11.6067, 362.246, -157.505, 1.47 ) }
    dend_15 { pt3dadd( 11.3614, 362.791, -157.57, 0.15 ) }
    dend_15 { pt3dadd( 10.8851, 363.791, -157.678, 0.15 ) }
    dend_15 { pt3dadd( 10.7878, 363.979, -157.696, 0.15 ) }
    dend_15 { pt3dadd( 10.246, 364.93, -157.786, 0.15 ) }
    dend_15 { pt3dadd( 10.1412, 365.108, -157.809, 0.66 ) }
    dend_15 { pt3dadd( 10.0644, 365.235, -157.827, 0.66 ) }
    dend_15 { pt3dadd( 9.74589, 365.767, -157.909, 0.66 ) }
    dend_15 { pt3dadd( 9.71096, 365.825, -157.924, 0.66 ) }
    dend_15 { pt3dadd( 9.37716, 366.364, -158.101, 0.15 ) }
    dend_15 { pt3dadd( 8.94231, 367.043, -158.38, 0.15 ) }
    dend_15 { pt3dadd( 8.86394, 367.165, -158.446, 0.15 ) }
    dend_15 { pt3dadd( 8.61909, 367.611, -158.693, 0.15 ) }
    dend_15 { pt3dadd( 8.4107, 368.051, -158.953, 0.29 ) }
    dend_15 { pt3dadd( 8.38245, 368.117, -158.991, 0.29 ) }
    dend_15 { pt3dadd( 8.3353, 368.248, -159.059, 0.29 ) }
    dend_15 { pt3dadd( 8.02723, 369.246, -159.571, 0.15 ) }
    dend_15 { pt3dadd( 7.77421, 370.186, -159.938, 0.15 ) }
    dend_15 { pt3dadd( 7.58957, 370.93, -160.171, 0.15 ) }
    dend_15 { pt3dadd( 7.50806, 371.273, -160.254, 0.88 ) }
    dend_15 { pt3dadd( 7.36691, 371.89, -160.38, 0.88 ) }
    dend_15 { pt3dadd( 7.21845, 372.531, -160.478, 0.15 ) }
    dend_15 { pt3dadd( 6.76008, 374.541, -160.651, 0.15 ) }
    dend_15 { pt3dadd( 6.67808, 374.852, -160.681, 0.44 ) }
    dend_15 { pt3dadd( 6.56519, 375.21, -160.717, 0.59 ) }
    dend_15 { pt3dadd( 6.54039, 375.274, -160.725, 0.59 ) }
    dend_15 { pt3dadd( 6.32812, 375.733, -160.799, 0.59 ) }
    dend_15 { pt3dadd( 6.29222, 375.802, -160.812, 0.59 ) }
    dend_15 { pt3dadd( 5.8897, 376.509, -160.952, 0.15 ) }
    dend_15 { pt3dadd( 5.16367, 377.805, -161.166, 0.15 ) }
    dend_15 { pt3dadd( 4.9804, 378.17, -161.202, 0.44 ) }
    dend_15 { pt3dadd( 4.95206, 378.233, -161.204, 0.44 ) }
    dend_15 { pt3dadd( 4.6673, 378.952, -161.195, 0.44 ) }
    dend_15 { pt3dadd( 4.48535, 379.434, -161.191, 0.15 ) }
    dend_15 { pt3dadd( 4.4611, 379.498, -161.197, 0.15 ) }
    dend_15 { pt3dadd( 3.99723, 380.71, -161.487, 0.15 ) }
    dend_15 { pt3dadd( 3.97447, 380.774, -161.502, 0.15 ) }
    dend_15 { pt3dadd( 3.50004, 382.108, -161.794, 0.15 ) }
    dend_15 { pt3dadd( 3.24916, 382.799, -161.947, 0.88 ) }
    dend_15 { pt3dadd( 2.71927, 384.261, -162.237, 1.4 ) }
    dend_15 { pt3dadd( 2.62118, 384.535, -162.281, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_81()
}

proc basic_shape_81() {
    dend_15 { pt3dadd( 2.17051, 385.805, -162.445, 0.22 ) }
    dend_15 { pt3dadd( 1.66496, 387.278, -162.576, 0.22 ) }
    dend_15 { pt3dadd( 1.6403, 387.355, -162.579, 0.22 ) }
    dend_15 { pt3dadd( 1.17323, 388.869, -162.692, 0.22 ) }
    dend_15 { pt3dadd( 1.00392, 389.434, -162.758, 0.96 ) }
    dend_15 { pt3dadd( 0.815579, 390.137, -162.93, 1.25 ) }
    dend_15 { pt3dadd( 0.667951, 390.732, -163.129, 1.25 ) }
    dend_15 { pt3dadd( 0.654226, 390.796, -163.15, 1.25 ) }
    dend_15 { pt3dadd( 0.233456, 392.909, -163.845, 0.15 ) }
    dend_15 { pt3dadd( 0.220917, 392.976, -163.867, 0.15 ) }
    dend_15 { pt3dadd( -0.561344, 397.113, -165.235, 0.15 ) }
    dend_15 { pt3dadd( -0.587575, 397.252, -165.278, 0.15 ) }
    dend_15 { pt3dadd( -0.984122, 399.355, -165.858, 0.15 ) }
    dend_15 { pt3dadd( -1.15074, 400.205, -166.068, 0.96 ) }
    dend_15 { pt3dadd( -1.16548, 400.271, -166.079, 0.96 ) }
    dend_15 { pt3dadd( -1.24168, 400.564, -166.143, 1.25 ) }
    dend_15 { pt3dadd( -1.27734, 400.683, -166.177, 1.25 ) }
    dend_15 { pt3dadd( -1.38201, 401.021, -166.271, 1.25 ) }
    dend_15 { pt3dadd( -1.66805, 401.92, -166.507, 0.15 ) }
    dend_15 { pt3dadd( -2.75207, 405.48, -167.288, 0.15 ) }
    dend_15 { pt3dadd( -3.2809, 407.271, -167.654, 0.15 ) }
    dend_15 { pt3dadd( -3.32211, 407.413, -167.681, 0.74 ) }
    dend_15 { pt3dadd( -3.50984, 408.06, -167.792, 0.74 ) }
    dend_15 { pt3dadd( -3.64903, 408.538, -167.862, 0.74 ) }
    dend_15 { pt3dadd( -4.16531, 410.322, -168.03, 0.15 ) }
    dend_15 { pt3dadd( -4.2774, 410.696, -168.053, 0.74 ) }
    dend_15 { pt3dadd( -4.33415, 410.875, -168.052, 0.74 ) }
    dend_15 { pt3dadd( -4.57977, 411.512, -168.036, 0.74 ) }
    dend_15 { pt3dadd( -4.70825, 411.806, -168.023, 0.74 ) }
    dend_15 { pt3dadd( -4.99677, 412.444, -167.99, 0.74 ) }
    dend_15 { pt3dadd( -5.27145, 413.021, -167.956, 0.15 ) }
    dend_15 { pt3dadd( -5.29886, 413.084, -167.952, 0.15 ) }
    dend_15 { pt3dadd( -6.04821, 414.975, -167.896, 0.15 ) }
    dend_15 { pt3dadd( -6.10175, 415.117, -167.89, 0.15 ) }
    dend_15 { pt3dadd( -6.73028, 416.888, -167.805, 0.15 ) }
    dend_15 { pt3dadd( -6.97422, 417.622, -167.769, 0.74 ) }
    dend_15 { pt3dadd( -7.1891, 418.31, -167.738, 0.74 ) }
    dend_15 { pt3dadd( -7.30935, 418.72, -167.717, 0.74 ) }
    dend_15 { pt3dadd( -7.51558, 419.47, -167.668, 0.15 ) }
    dend_15 { pt3dadd( -8.11007, 421.619, -167.519, 0.15 ) }
    dend_15 { pt3dadd( -8.23994, 422.065, -167.484, 0.74 ) }
    dend_15 { pt3dadd( -8.40466, 422.628, -167.443, 0.74 ) }
    dend_15 { pt3dadd( -8.54735, 423.13, -167.425, 0.74 ) }
    dend_15 { pt3dadd( -8.72068, 423.816, -167.422, 0.15 ) }
    dend_15 { pt3dadd( -8.92342, 424.804, -167.477, 0.15 ) }
    dend_15 { pt3dadd( -8.95129, 424.964, -167.489, 0.15 ) }
    dend_15 { pt3dadd( -9.18787, 426.117, -167.57, 0.15 ) }
    dend_15 { pt3dadd( -9.3722, 426.904, -167.624, 1.18 ) }
    dend_15 { pt3dadd( -9.51996, 427.46, -167.66, 1.62 ) }
    dend_15 { pt3dadd( -9.71982, 428.142, -167.7, 1.62 ) }
    dend_15 { pt3dadd( -10.0778, 429.138, -167.743, 0.15 ) }
    dend_15 { pt3dadd( -10.6722, 430.56, -167.73, 0.15 ) }
    dend_15 { pt3dadd( -10.8511, 430.926, -167.709, 0.15 ) }
    dend_15 { pt3dadd( -11.0746, 431.344, -167.671, 0.15 ) }
    dend_15 { pt3dadd( -11.1503, 431.478, -167.652, 0.15 ) }
    dend_15 { pt3dadd( -11.9391, 432.851, -167.406, 0.15 ) }
    dend_15 { pt3dadd( -12.8877, 434.482, -167.065, 0.15 ) }
    dend_15 { pt3dadd( -13.6619, 435.821, -166.691, 0.15 ) }
    dend_15 { pt3dadd( -13.6941, 435.88, -166.673, 0.15 ) }
    dend_15 { pt3dadd( -14.1583, 436.77, -166.374, 0.15 ) }
    dend_15 { pt3dadd( -14.4778, 437.473, -166.155, 1.69 ) }
    dend_15 { pt3dadd( -14.821, 438.346, -165.897, 1.69 ) }
    dend_15 { pt3dadd( -15.1512, 439.332, -165.651, 0.15 ) }
    dend_15 { pt3dadd( -15.5946, 440.804, -165.333, 0.15 ) }
    dend_15 { pt3dadd( -15.6125, 440.87, -165.322, 0.15 ) }
    dend_15 { pt3dadd( -16.2256, 443.659, -164.876, 0.15 ) }
    dend_15 { pt3dadd( -16.3072, 444.11, -164.803, 0.15 ) }
    dend_15 { pt3dadd( -16.4156, 444.854, -164.695, 0.15 ) }
    dend_15 { pt3dadd( -16.4837, 445.409, -164.628, 1.18 ) }
    dend_15 { pt3dadd( -16.5696, 446.247, -164.513, 1.18 ) }
    dend_15 { pt3dadd( -16.7638, 448.356, -164.199, 0.15 ) }
    dend_15 { pt3dadd( -16.8788, 449.679, -163.923, 0.15 ) }
    dend_15 { pt3dadd( -16.9295, 450.191, -163.803, 1.18 ) }
    dend_15 { pt3dadd( -16.9616, 450.395, -163.756, 1.18 ) }
    dend_15 { pt3dadd( -17.1346, 451.152, -163.562, 1.18 ) }
    dend_15 { pt3dadd( -17.1682, 451.257, -163.533, 1.18 ) }
    dend_15 { pt3dadd( -17.72, 452.633, -163.101, 0.15 ) }
    dend_15 { pt3dadd( -17.7468, 452.693, -163.079, 0.15 ) }
    dend_15 { pt3dadd( -18.7896, 454.892, -162.185, 0.15 ) }
    dend_15 { pt3dadd( -19.1953, 455.712, -161.847, 0.52 ) }
    dend_15 { pt3dadd( -19.4874, 456.254, -161.617, 0.52 ) }
    dend_15 { pt3dadd( -19.8797, 456.938, -161.331, 0.52 ) }
    dend_15 { pt3dadd( -20.1412, 457.342, -161.175, 0.96 ) }
    dend_15 { pt3dadd( -20.4531, 457.79, -161.017, 0.96 ) }
    dend_15 { pt3dadd( -20.5293, 457.903, -160.992, 0.96 ) }
    dend_15 { pt3dadd( -20.7959, 458.346, -160.973, 0.96 ) }
    dend_15 { pt3dadd( -20.8294, 458.407, -160.975, 0.96 ) }
    dend_15 { pt3dadd( -21.1316, 458.991, -161.023, 0.15 ) }
    dend_15 { pt3dadd( -21.8129, 460.374, -161.145, 0.15 ) }
    dend_15 { pt3dadd( -22.5937, 462.022, -161.285, 0.15 ) }
    dend_15 { pt3dadd( -22.8886, 462.673, -161.357, 1.11 ) }
    dend_15 { pt3dadd( -23.1534, 463.28, -161.435, 1.47 ) }
    dend_15 { pt3dadd( -23.4239, 463.898, -161.525, 1.47 ) }
    dend_15 { pt3dadd( -23.5819, 464.273, -161.586, 0.15 ) }
    dend_15 { pt3dadd( -24.209, 465.788, -161.839, 0.15 ) }
    dend_15 { pt3dadd( -24.438, 466.361, -161.928, 0.52 ) }
    dend_15 { pt3dadd( -24.4611, 466.425, -161.935, 0.52 ) }
    dend_15 { pt3dadd( -24.6152, 466.924, -161.985, 0.52 ) }
    dend_15 { pt3dadd( -24.7909, 467.62, -162.076, 0.15 ) }
    dend_15 { pt3dadd( -25.0695, 468.993, -162.28, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_82()
}

proc basic_shape_82() {
    dend_15 { pt3dadd( -25.0764, 469.061, -162.289, 0.15 ) }
    dend_15 { pt3dadd( -25.1128, 469.712, -162.341, 0.88 ) }
    dend_15 { pt3dadd( -25.1414, 470.601, -162.4, 1.25 ) }
    dend_15 { pt3dadd( -25.1609, 471.571, -162.456, 0.15 ) }
    dend_15 { pt3dadd( -25.1621, 471.642, -162.46, 0.15 ) }
    dend_15 { pt3dadd( -25.2978, 474.644, -162.603, 0.15 ) }
    dend_15 { pt3dadd( -25.4031, 476.158, -162.663, 0.15 ) }
    dend_15 { pt3dadd( -25.4501, 476.697, -162.679, 0.74 ) }
    dend_15 { pt3dadd( -25.5176, 477.332, -162.686, 0.74 ) }
    dend_15 { pt3dadd( -25.565, 477.692, -162.681, 0.15 ) }
    dend_15 { pt3dadd( -26.058, 480.631, -162.576, 0.15 ) }
    dend_15 { pt3dadd( -26.0744, 480.698, -162.572, 0.15 ) }
    dend_15 { pt3dadd( -26.1053, 480.798, -162.564, 0.44 ) }
    dend_15 { pt3dadd( -26.1442, 480.917, -162.55, 0.15 ) }
    dend_15 { pt3dadd( -26.1758, 481.008, -162.53, 0.15 ) }
    dend_15 { pt3dadd( -26.6238, 482.198, -162.142, 0.15 ) }
    dend_15 { pt3dadd( -26.6824, 482.338, -162.08, 0.15 ) }
    dend_15 { pt3dadd( -27.3287, 483.88, -161.398, 0.15 ) }
    dend_15 { pt3dadd( -27.35, 483.93, -161.376, 0.15 ) }
    dend_15 { pt3dadd( -27.737, 484.832, -160.991, 0.59 ) }
    dend_15 { pt3dadd( -27.9198, 485.243, -160.82, 0.74 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 21/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 44.6946, 307.681, -139.584, 0.22 ) }
    dend_14 { pt3dadd( 45.9397, 307.389, -139.698, 0.22 ) }
    dend_14 { pt3dadd( 46.0879, 307.355, -139.712, 0.22 ) }
    dend_14 { pt3dadd( 46.9423, 307.155, -139.79, 0.22 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -4.95223, 384.689, -116.464, 0.15 ) }
    dend_12 { pt3dadd( -6.27255, 385.604, -113.5, 0.15 ) }
    dend_12 { pt3dadd( -7.16161, 386.233, -111.594, 0.15 ) }
    dend_12 { pt3dadd( -7.18731, 386.253, -111.544, 0.15 ) }
    dend_12 { pt3dadd( -7.88605, 386.819, -110.226, 0.74 ) }
    dend_12 { pt3dadd( -8.09992, 387.003, -109.833, 0.74 ) }
    dend_12 { pt3dadd( -8.82682, 387.656, -108.569, 0.44 ) }
    dend_12 { pt3dadd( -9.00653, 387.839, -108.329, 0.22 ) }
    dend_12 { pt3dadd( -9.5006, 388.378, -107.758, 0.22 ) }
    dend_12 { pt3dadd( -9.95328, 388.887, -107.282, 1.03 ) }
    dend_12 { pt3dadd( -10.2742, 389.242, -107.059, 0.88 ) }
    dend_12 { pt3dadd( -10.7149, 389.723, -106.825, 0.88 ) }
    dend_12 { pt3dadd( -11.0115, 390.04, -106.718, 0.22 ) }
    dend_12 { pt3dadd( -11.5086, 390.546, -106.567, 0.22 ) }
    dend_12 { pt3dadd( -11.5776, 390.614, -106.548, 0.22 ) }
    dend_12 { pt3dadd( -13.3608, 392.356, -106.189, 0.22 ) }
    dend_12 { pt3dadd( -13.495, 392.488, -106.165, 0.44 ) }
    dend_12 { pt3dadd( -13.5527, 392.544, -106.155, 0.44 ) }
    dend_12 { pt3dadd( -14.0391, 393.022, -106.084, 0.44 ) }
    dend_12 { pt3dadd( -14.6349, 393.602, -106.015, 0.22 ) }
    dend_12 { pt3dadd( -15.4042, 394.302, -105.936, 0.22 ) }
    dend_12 { pt3dadd( -15.5995, 394.47, -105.909, 0.22 ) }
    dend_12 { pt3dadd( -16.6306, 395.31, -105.754, 0.22 ) }
    dend_12 { pt3dadd( -16.7482, 395.397, -105.736, 0.22 ) }
    dend_12 { pt3dadd( -17.4257, 395.855, -105.641, 0.22 ) }
    dend_12 { pt3dadd( -18.6247, 396.592, -105.399, 0.22 ) }
    dend_12 { pt3dadd( -19.3109, 396.999, -105.208, 0.74 ) }
    dend_12 { pt3dadd( -19.7583, 397.279, -105.06, 1.18 ) }
    dend_12 { pt3dadd( -20.4774, 397.793, -104.726, 1.18 ) }
    dend_12 { pt3dadd( -20.5588, 397.858, -104.681, 1.18 ) }
    dend_12 { pt3dadd( -21.5244, 398.839, -104.096, 0.22 ) }
    dend_12 { pt3dadd( -21.9282, 399.365, -103.815, 0.22 ) }
    dend_12 { pt3dadd( -22.4546, 400.151, -103.447, 0.22 ) }
    dend_12 { pt3dadd( -23.3116, 401.588, -102.756, 0.22 ) }
    dend_12 { pt3dadd( -23.3567, 401.675, -102.714, 0.22 ) }
    dend_12 { pt3dadd( -24.2977, 403.631, -101.818, 0.22 ) }
    dend_12 { pt3dadd( -24.7587, 404.684, -101.387, 1.11 ) }
    dend_12 { pt3dadd( -24.9899, 405.253, -101.157, 1.62 ) }
    dend_12 { pt3dadd( -25.4088, 406.367, -100.728, 1.62 ) }
    dend_12 { pt3dadd( -25.736, 407.323, -100.401, 0.44 ) }
    dend_12 { pt3dadd( -26.0037, 408.18, -100.127, 0.44 ) }
    dend_12 { pt3dadd( -26.2018, 408.928, -99.8759, 0.22 ) }
    dend_12 { pt3dadd( -26.3334, 409.488, -99.7052, 0.59 ) }
    dend_12 { pt3dadd( -26.3997, 409.794, -99.6196, 0.59 ) }
    dend_12 { pt3dadd( -26.5139, 410.363, -99.4324, 0.15 ) }
    dend_12 { pt3dadd( -26.7586, 411.593, -98.9596, 0.15 ) }
    dend_12 { pt3dadd( -26.9691, 412.666, -98.5058, 0.22 ) }
    dend_12 { pt3dadd( -27.069, 413.152, -98.2828, 1.33 ) }
    dend_12 { pt3dadd( -27.2255, 413.877, -97.9442, 1.69 ) }
    dend_12 { pt3dadd( -27.5818, 415.46, -97.195, 0.22 ) }
    dend_12 { pt3dadd( -27.8669, 416.641, -96.5909, 0.22 ) }
    dend_12 { pt3dadd( -28.0671, 417.485, -96.1608, 0.22 ) }
    dend_12 { pt3dadd( -28.2241, 418.196, -95.8186, 0.74 ) }
    dend_12 { pt3dadd( -28.3849, 419.028, -95.4295, 0.74 ) }
    dend_12 { pt3dadd( -28.4011, 419.135, -95.3831, 0.74 ) }
    dend_12 { pt3dadd( -28.5879, 420.717, -94.6651, 0.22 ) }
    dend_12 { pt3dadd( -28.7099, 421.697, -93.9297, 0.22 ) }
    dend_12 { pt3dadd( -28.7722, 422.097, -93.5276, 0.88 ) }
    dend_12 { pt3dadd( -28.8488, 422.472, -93.0862, 0.96 ) }
    dend_12 { pt3dadd( -28.9553, 422.887, -92.4924, 0.96 ) }
    dend_12 { pt3dadd( -29.285, 423.946, -90.7394, 0.22 ) }
    dend_12 { pt3dadd( -29.8353, 425.367, -88.0343, 0.15 ) }
    dend_12 { pt3dadd( -29.9898, 425.741, -87.3083, 0.52 ) }
    dend_12 { pt3dadd( -30.0733, 425.938, -86.9334, 0.52 ) }
    dend_12 { pt3dadd( -30.3077, 426.477, -85.9027, 0.88 ) }
    dend_12 { pt3dadd( -30.3254, 426.512, -85.8306, 0.88 ) }
    dend_12 { pt3dadd( -30.2566, 428.015, -86.2069, 0.22 ) }
    dend_12 { pt3dadd( -30.1171, 429.71, -87.1174, 0.22 ) }
    dend_12 { pt3dadd( -30.1112, 429.776, -87.1587, 0.22 ) }
    dend_12 { pt3dadd( -30.0971, 429.912, -87.2498, 0.52 ) }
    dend_12 { pt3dadd( -30.016, 430.738, -87.8586, 0.22 ) }
    dend_12 { pt3dadd( -29.9217, 431.86, -88.6299, 0.22 ) }
    dend_12 { pt3dadd( -29.8934, 432.528, -89.0088, 0.81 ) }
    dend_12 { pt3dadd( -29.9283, 432.907, -89.3371, 0.81 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 99/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -4.95223, 384.689, -116.464, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_83()
}

proc basic_shape_83() {
    dend_11 { pt3dadd( -5.58409, 383.322, -118.646, 0.15 ) }
    dend_11 { pt3dadd( -5.76404, 382.933, -119.268, 0.81 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_155, dend_84, dend_0, dend_127, dend_85, dend_81, dend_1, dend_129, dend_128, dend_114, dend_86, dend_83, dend_82, dend_58, dend_2, dend_131, dend_130, dend_116, dend_115, dend_93, dend_87, dend_74, dend_59, dend_50, dend_3, dend_132, dend_118, dend_117, dend_101, dend_94, dend_89, dend_88, dend_76, dend_75, dend_71, dend_60, dend_52, dend_51, dend_49, dend_4, dend_144, dend_133, dend_120, dend_119, dend_103, dend_102, dend_96, dend_95, dend_92, dend_91, dend_90, dend_80, dend_77, dend_73, dend_72, dend_64, dend_61, dend_54, dend_53, dend_32, dend_5, dend_146, dend_145, dend_141, dend_134, dend_126, dend_121, dend_113, dend_104, dend_100, dend_97, dend_79, dend_78, dend_70, dend_65, dend_63, dend_62, dend_57, dend_56, dend_55, dend_34, dend_33, dend_27, dend_6, dend_148, dend_147, dend_143, dend_142, dend_140, dend_135, dend_125, dend_122, dend_106, dend_105, dend_99, dend_98, dend_67, dend_66, dend_38, dend_35, dend_29, dend_28, dend_26, dend_7, dend_150, dend_149, dend_137, dend_136, dend_124, dend_123, dend_108, dend_107, dend_69, dend_68, dend_44, dend_39, dend_37, dend_36, dend_31, dend_30, dend_21, dend_8, dend_154, dend_151, dend_139, dend_138, dend_112, dend_109, dend_46, dend_45, dend_41, dend_40, dend_25, dend_22, dend_16, dend_9, dend_153, dend_152, dend_111, dend_110, dend_48, dend_47, dend_43, dend_42, dend_24, dend_23, dend_18, dend_17, dend_13, dend_10, dend_20, dend_19, dend_15, dend_14, dend_12, dend_11]}
    ModelViewParmSubset_2 = new SectionList()
    dend_155 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_127 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_129 ModelViewParmSubset_2.append()
    dend_128 ModelViewParmSubset_2.append()
    dend_114 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_131 ModelViewParmSubset_2.append()
    dend_130 ModelViewParmSubset_2.append()
    dend_116 ModelViewParmSubset_2.append()
    dend_115 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_132 ModelViewParmSubset_2.append()
    dend_118 ModelViewParmSubset_2.append()
    dend_117 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_144 ModelViewParmSubset_2.append()
    dend_133 ModelViewParmSubset_2.append()
    dend_120 ModelViewParmSubset_2.append()
    dend_119 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_146 ModelViewParmSubset_2.append()
    dend_145 ModelViewParmSubset_2.append()
    dend_141 ModelViewParmSubset_2.append()
    dend_134 ModelViewParmSubset_2.append()
    dend_126 ModelViewParmSubset_2.append()
    dend_121 ModelViewParmSubset_2.append()
    dend_113 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_148 ModelViewParmSubset_2.append()
    dend_147 ModelViewParmSubset_2.append()
    dend_143 ModelViewParmSubset_2.append()
    dend_142 ModelViewParmSubset_2.append()
    dend_140 ModelViewParmSubset_2.append()
    dend_135 ModelViewParmSubset_2.append()
    dend_125 ModelViewParmSubset_2.append()
    dend_122 ModelViewParmSubset_2.append()
    dend_106 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_66 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_150 ModelViewParmSubset_2.append()
    dend_149 ModelViewParmSubset_2.append()
    dend_137 ModelViewParmSubset_2.append()
    dend_136 ModelViewParmSubset_2.append()
    dend_124 ModelViewParmSubset_2.append()
    dend_123 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_154 ModelViewParmSubset_2.append()
    dend_151 ModelViewParmSubset_2.append()
    dend_139 ModelViewParmSubset_2.append()
    dend_138 ModelViewParmSubset_2.append()
    dend_112 ModelViewParmSubset_2.append()
    dend_109 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_153 ModelViewParmSubset_2.append()
    dend_152 ModelViewParmSubset_2.append()
    dend_111 ModelViewParmSubset_2.append()
    dend_110 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_155, dend_84, dend_0, dend_127, dend_85, dend_81, dend_1, dend_129, dend_128, dend_114, dend_86, dend_83, dend_82, dend_58, dend_2, dend_131, dend_130, dend_116, dend_115, dend_93, dend_87, dend_74, dend_59, dend_50, dend_3, dend_132, dend_118, dend_117, dend_101, dend_94, dend_89, dend_88, dend_76, dend_75, dend_71, dend_60, dend_52, dend_51, dend_49, dend_4, dend_144, dend_133, dend_120, dend_119, dend_103, dend_102, dend_96, dend_95, dend_92, dend_91, dend_90, dend_80, dend_77, dend_73, dend_72, dend_64, dend_61, dend_54, dend_53, dend_32, dend_5, dend_146, dend_145, dend_141, dend_134, dend_126, dend_121, dend_113, dend_104, dend_100, dend_97, dend_79, dend_78, dend_70, dend_65, dend_63, dend_62, dend_57, dend_56, dend_55, dend_34, dend_33, dend_27, dend_6, dend_148, dend_147, dend_143, dend_142, dend_140, dend_135, dend_125, dend_122, dend_106, dend_105, dend_99, dend_98, dend_67, dend_66, dend_38, dend_35, dend_29, dend_28, dend_26, dend_7, dend_150, dend_149, dend_137, dend_136, dend_124, dend_123, dend_108, dend_107, dend_69, dend_68, dend_44, dend_39, dend_37, dend_36, dend_31, dend_30, dend_21, dend_8, dend_154, dend_151, dend_139, dend_138, dend_112, dend_109, dend_46, dend_45, dend_41, dend_40, dend_25, dend_22, dend_16, dend_9, dend_153, dend_152, dend_111, dend_110, dend_48, dend_47, dend_43, dend_42, dend_24, dend_23, dend_18, dend_17, dend_13, dend_10, dend_20, dend_19, dend_15, dend_14, dend_12, dend_11]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_155 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_127 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_129 ModelViewParmSubset_4.append()
    dend_128 ModelViewParmSubset_4.append()
    dend_114 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_131 ModelViewParmSubset_4.append()
    dend_130 ModelViewParmSubset_4.append()
    dend_116 ModelViewParmSubset_4.append()
    dend_115 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_132 ModelViewParmSubset_4.append()
    dend_118 ModelViewParmSubset_4.append()
    dend_117 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_49 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_144 ModelViewParmSubset_4.append()
    dend_133 ModelViewParmSubset_4.append()
    dend_120 ModelViewParmSubset_4.append()
    dend_119 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_146 ModelViewParmSubset_4.append()
    dend_145 ModelViewParmSubset_4.append()
    dend_141 ModelViewParmSubset_4.append()
    dend_134 ModelViewParmSubset_4.append()
    dend_126 ModelViewParmSubset_4.append()
    dend_121 ModelViewParmSubset_4.append()
    dend_113 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_148 ModelViewParmSubset_4.append()
    dend_147 ModelViewParmSubset_4.append()
    dend_143 ModelViewParmSubset_4.append()
    dend_142 ModelViewParmSubset_4.append()
    dend_140 ModelViewParmSubset_4.append()
    dend_135 ModelViewParmSubset_4.append()
    dend_125 ModelViewParmSubset_4.append()
    dend_122 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_150 ModelViewParmSubset_4.append()
    dend_149 ModelViewParmSubset_4.append()
    dend_137 ModelViewParmSubset_4.append()
    dend_136 ModelViewParmSubset_4.append()
    dend_124 ModelViewParmSubset_4.append()
    dend_123 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_154 ModelViewParmSubset_4.append()
    dend_151 ModelViewParmSubset_4.append()
    dend_139 ModelViewParmSubset_4.append()
    dend_138 ModelViewParmSubset_4.append()
    dend_112 ModelViewParmSubset_4.append()
    dend_109 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_153 ModelViewParmSubset_4.append()
    dend_152 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_111 ModelViewParmSubset_4.append()
    dend_110 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_155, dend_84, dend_0, axon_0, dend_127, dend_85, dend_81, dend_1, axon_1, dend_129, dend_128, dend_114, dend_86, dend_83, dend_82, dend_58, dend_2, dend_131, dend_130, dend_116, dend_115, dend_93, dend_87, dend_74, dend_59, dend_50, dend_3, dend_132, dend_118, dend_117, dend_101, dend_94, dend_89, dend_88, dend_76, dend_75, dend_71, dend_60, dend_52, dend_51, dend_49, dend_4, dend_144, dend_133, dend_120, dend_119, dend_103, dend_102, dend_96, dend_95, dend_92, dend_91, dend_90, dend_80, dend_77, dend_73, dend_72, dend_64, dend_61, dend_54, dend_53, dend_32, dend_5, dend_146, dend_145, dend_141, dend_134, dend_126, dend_121, dend_113, dend_104, dend_100, dend_97, dend_79, dend_78, dend_70, dend_65, dend_63, dend_62, dend_57, dend_56, dend_55, dend_34, dend_33, dend_27, dend_6, dend_148, dend_147, dend_143, dend_142, dend_140, dend_135, dend_125, dend_122, dend_106, dend_105, dend_99, dend_98, dend_67, dend_66, dend_38, dend_35, dend_29, dend_28, dend_26, dend_7, dend_150, dend_149, dend_137, dend_136, dend_124, dend_123, dend_108, dend_107, dend_69, dend_68, dend_44, dend_39, dend_37, dend_36, dend_31, dend_30, dend_21, dend_8, dend_154, dend_151, dend_139, dend_138, dend_112, dend_109, dend_46, dend_45, dend_41, dend_40, dend_25, dend_22, dend_16, dend_9, dend_153, dend_152, dend_111, dend_110, dend_48, dend_47, dend_43, dend_42, dend_24, dend_23, dend_18, dend_17, dend_13, dend_10, dend_20, dend_19, dend_15, dend_14, dend_12, dend_11]}
    ModelViewParmSubset_5 = new SectionList()
    dend_155 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_127 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_129 ModelViewParmSubset_5.append()
    dend_128 ModelViewParmSubset_5.append()
    dend_114 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_131 ModelViewParmSubset_5.append()
    dend_130 ModelViewParmSubset_5.append()
    dend_116 ModelViewParmSubset_5.append()
    dend_115 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_132 ModelViewParmSubset_5.append()
    dend_118 ModelViewParmSubset_5.append()
    dend_117 ModelViewParmSubset_5.append()
    dend_101 ModelViewParmSubset_5.append()
    dend_94 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_144 ModelViewParmSubset_5.append()
    dend_133 ModelViewParmSubset_5.append()
    dend_120 ModelViewParmSubset_5.append()
    dend_119 ModelViewParmSubset_5.append()
    dend_103 ModelViewParmSubset_5.append()
    dend_102 ModelViewParmSubset_5.append()
    dend_96 ModelViewParmSubset_5.append()
    dend_95 ModelViewParmSubset_5.append()
    dend_92 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_146 ModelViewParmSubset_5.append()
    dend_145 ModelViewParmSubset_5.append()
    dend_141 ModelViewParmSubset_5.append()
    dend_134 ModelViewParmSubset_5.append()
    dend_126 ModelViewParmSubset_5.append()
    dend_121 ModelViewParmSubset_5.append()
    dend_113 ModelViewParmSubset_5.append()
    dend_104 ModelViewParmSubset_5.append()
    dend_100 ModelViewParmSubset_5.append()
    dend_97 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_148 ModelViewParmSubset_5.append()
    dend_147 ModelViewParmSubset_5.append()
    dend_143 ModelViewParmSubset_5.append()
    dend_142 ModelViewParmSubset_5.append()
    dend_140 ModelViewParmSubset_5.append()
    dend_135 ModelViewParmSubset_5.append()
    dend_125 ModelViewParmSubset_5.append()
    dend_122 ModelViewParmSubset_5.append()
    dend_106 ModelViewParmSubset_5.append()
    dend_105 ModelViewParmSubset_5.append()
    dend_99 ModelViewParmSubset_5.append()
    dend_98 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_150 ModelViewParmSubset_5.append()
    dend_149 ModelViewParmSubset_5.append()
    dend_137 ModelViewParmSubset_5.append()
    dend_136 ModelViewParmSubset_5.append()
    dend_124 ModelViewParmSubset_5.append()
    dend_123 ModelViewParmSubset_5.append()
    dend_108 ModelViewParmSubset_5.append()
    dend_107 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_154 ModelViewParmSubset_5.append()
    dend_151 ModelViewParmSubset_5.append()
    dend_139 ModelViewParmSubset_5.append()
    dend_138 ModelViewParmSubset_5.append()
    dend_112 ModelViewParmSubset_5.append()
    dend_109 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_153 ModelViewParmSubset_5.append()
    dend_152 ModelViewParmSubset_5.append()
    dend_111 ModelViewParmSubset_5.append()
    dend_110 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_155]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_155 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_84 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_127]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_127 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_81 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_114]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_114 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_86 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_131]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_131 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_93 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_87 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_74 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_59 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_50 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_3 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_76 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_75 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_71 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_60 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_52 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_120]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_120 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_119]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_119 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_92 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_90 OneSecGrp_SectionRef_54.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_80 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_77 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_61 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_32 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_141]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_141 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_121]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_121 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_113]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_113 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_56 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_34 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_27 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_6 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_122]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_122 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_99 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_29 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_28 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_7 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_150]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_150 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_116 = new SectionList()
    dend_69 OneSecGrp_SectionRef_116.append()

    // Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_117 = new SectionList()
    dend_68 OneSecGrp_SectionRef_117.append()

    // Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_120 = new SectionList()
    dend_37 OneSecGrp_SectionRef_120.append()

    // Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_123 = new SectionList()
    dend_30 OneSecGrp_SectionRef_123.append()

    // Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_124 = new SectionList()
    dend_21 OneSecGrp_SectionRef_124.append()

    // Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_109]}
    OneSecGrp_SectionRef_131 = new SectionList()
    dend_109 OneSecGrp_SectionRef_131.append()

    // Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_132 = new SectionList()
    dend_46 OneSecGrp_SectionRef_132.append()

    // Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_133 = new SectionList()
    dend_45 OneSecGrp_SectionRef_133.append()

    // Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_136 = new SectionList()
    dend_25 OneSecGrp_SectionRef_136.append()

    // Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_137 = new SectionList()
    dend_22 OneSecGrp_SectionRef_137.append()

    // Group: {name=OneSecGrp_SectionRef_144, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_144 = new SectionList()
    dend_48 OneSecGrp_SectionRef_144.append()

    // Group: {name=OneSecGrp_SectionRef_146, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_146 = new SectionList()
    dend_43 OneSecGrp_SectionRef_146.append()

    // Group: {name=OneSecGrp_SectionRef_148, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_148 = new SectionList()
    dend_24 OneSecGrp_SectionRef_148.append()

    // Group: {name=OneSecGrp_SectionRef_149, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_149 = new SectionList()
    dend_23 OneSecGrp_SectionRef_149.append()

    // Group: {name=OneSecGrp_SectionRef_150, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_150 = new SectionList()
    dend_18 OneSecGrp_SectionRef_150.append()

    // Group: {name=OneSecGrp_SectionRef_153, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_153 = new SectionList()
    dend_10 OneSecGrp_SectionRef_153.append()

    // Group: {name=OneSecGrp_SectionRef_156, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_156 = new SectionList()
    dend_15 OneSecGrp_SectionRef_156.append()

    // Group: {name=OneSecGrp_SectionRef_158, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_158 = new SectionList()
    dend_12 OneSecGrp_SectionRef_158.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_58 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_85 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_82 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_83 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_116]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_116 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_4 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_118]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_118 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_128]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_128 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_117]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_117 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_49 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_115]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_115 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_5 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_129]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_129 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_130]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_130 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_51 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_26 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_33 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_132]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_132 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_133]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_133 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_144]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_144 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_145]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_145 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_126]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_126 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_122 = new SectionList()
    dend_31 OneSecGrp_SectionRef_122.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_134]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_134 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_140]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_140 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_64 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_146]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_146 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_147]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_147 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_70 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_135]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_135 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_53 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_136]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_136 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_65 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_148]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_148 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_72 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_73 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_137]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_137 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_149]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_149 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_66 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_139]}
    OneSecGrp_SectionRef_128 = new SectionList()
    dend_139 OneSecGrp_SectionRef_128.append()

    // Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_138]}
    OneSecGrp_SectionRef_129 = new SectionList()
    dend_138 OneSecGrp_SectionRef_129.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_67 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_54 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_38 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_63 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_101 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_55 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_102 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_118 = new SectionList()
    dend_44 OneSecGrp_SectionRef_118.append()

    // Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_125 = new SectionList()
    dend_8 OneSecGrp_SectionRef_125.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_143]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_143 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_62 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_35 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_119 = new SectionList()
    dend_39 OneSecGrp_SectionRef_119.append()

    // Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_135 = new SectionList()
    dend_40 OneSecGrp_SectionRef_135.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_57 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_139, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_139 = new SectionList()
    dend_9 OneSecGrp_SectionRef_139.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_125]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_125 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_103 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_94 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_138 = new SectionList()
    dend_16 OneSecGrp_SectionRef_138.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_142]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_142 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_134 = new SectionList()
    dend_41 OneSecGrp_SectionRef_134.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {

    // Group: {name=OneSecGrp_SectionRef_152, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_152 = new SectionList()
    dend_13 OneSecGrp_SectionRef_152.append()

    // Group: {name=OneSecGrp_SectionRef_151, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_151 = new SectionList()
    dend_17 OneSecGrp_SectionRef_151.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_95 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_157, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_157 = new SectionList()
    dend_14 OneSecGrp_SectionRef_157.append()

    // Group: {name=OneSecGrp_SectionRef_147, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_147 = new SectionList()
    dend_42 OneSecGrp_SectionRef_147.append()

    // Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_121 = new SectionList()
    dend_36 OneSecGrp_SectionRef_121.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_104 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_96 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_145, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_145 = new SectionList()
    dend_47 OneSecGrp_SectionRef_145.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_100 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_106 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_151]}
    OneSecGrp_SectionRef_127 = new SectionList()
    dend_151 OneSecGrp_SectionRef_127.append()

    // Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_115 = new SectionList()
    dend_107 OneSecGrp_SectionRef_115.append()

    // Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_114 = new SectionList()
    dend_108 OneSecGrp_SectionRef_114.append()

    // Group: {name=OneSecGrp_SectionRef_141, groups=[], sections=[dend_152]}
    OneSecGrp_SectionRef_141 = new SectionList()
    dend_152 OneSecGrp_SectionRef_141.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_105 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_140, groups=[], sections=[dend_153]}
    OneSecGrp_SectionRef_140 = new SectionList()
    dend_153 OneSecGrp_SectionRef_140.append()

    // Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_112]}
    OneSecGrp_SectionRef_130 = new SectionList()
    dend_112 OneSecGrp_SectionRef_130.append()

    // Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_154]}
    OneSecGrp_SectionRef_126 = new SectionList()
    dend_154 OneSecGrp_SectionRef_126.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_97 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_78 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_98 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_88 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_79 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_155, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_155 = new SectionList()
    dend_19 OneSecGrp_SectionRef_155.append()

    // Group: {name=OneSecGrp_SectionRef_154, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_154 = new SectionList()
    dend_20 OneSecGrp_SectionRef_154.append()

    // Group: {name=OneSecGrp_SectionRef_159, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_159 = new SectionList()
    dend_11 OneSecGrp_SectionRef_159.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_89 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_124]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_124 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_123]}
    OneSecGrp_SectionRef_113 = new SectionList()
    dend_123 OneSecGrp_SectionRef_113.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_91 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_143, groups=[], sections=[dend_110]}
    OneSecGrp_SectionRef_143 = new SectionList()
    dend_110 OneSecGrp_SectionRef_143.append()

    // Group: {name=OneSecGrp_SectionRef_142, groups=[], sections=[dend_111]}
    OneSecGrp_SectionRef_142 = new SectionList()
    dend_111 OneSecGrp_SectionRef_142.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134, dend_135, dend_136, dend_137, dend_138, dend_139, dend_140, dend_141, dend_142, dend_143, dend_144, dend_145, dend_146, dend_147, dend_148, dend_149, dend_150, dend_151, dend_152, dend_153, dend_154, dend_155], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()
    dend_109 basal.append()
    dend_110 basal.append()
    dend_111 basal.append()
    dend_112 basal.append()
    dend_113 basal.append()
    dend_114 basal.append()
    dend_115 basal.append()
    dend_116 basal.append()
    dend_117 basal.append()
    dend_118 basal.append()
    dend_119 basal.append()
    dend_120 basal.append()
    dend_121 basal.append()
    dend_122 basal.append()
    dend_123 basal.append()
    dend_124 basal.append()
    dend_125 basal.append()
    dend_126 basal.append()
    dend_127 basal.append()
    dend_128 basal.append()
    dend_129 basal.append()
    dend_130 basal.append()
    dend_131 basal.append()
    dend_132 basal.append()
    dend_133 basal.append()
    dend_134 basal.append()
    dend_135 basal.append()
    dend_136 basal.append()
    dend_137 basal.append()
    dend_138 basal.append()
    dend_139 basal.append()
    dend_140 basal.append()
    dend_141 basal.append()
    dend_142 basal.append()
    dend_143 basal.append()
    dend_144 basal.append()
    dend_145 basal.append()
    dend_146 basal.append()
    dend_147 basal.append()
    dend_148 basal.append()
    dend_149 basal.append()
    dend_150 basal.append()
    dend_151 basal.append()
    dend_152 basal.append()
    dend_153 basal.append()
    dend_154 basal.append()
    dend_155 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_116, dend_116, dend_116, dend_116, dend_116, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_118, dend_118, dend_118, dend_118, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_4, dend_4, dend_4, dend_4, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_133, dend_133, dend_133, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_145, dend_145, dend_145, dend_145, dend_145, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_126, dend_126, dend_126, dend_126, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_140, dend_140, dend_140, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_110, dend_110, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_85 all.append()
    dend_85 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_82 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_94 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_105 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_62()
}

proc subsets_62() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_63()
}

proc subsets_63() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_64()
}

proc subsets_64() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_65()
}

proc subsets_65() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_66()
}

proc subsets_66() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_67()
}

proc subsets_67() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_68()
}

proc subsets_68() {
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_69()
}

proc subsets_69() {
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_70()
}

proc subsets_70() {
    dend_108 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_71()
}

proc subsets_71() {
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_72()
}

proc subsets_72() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_73()
}

proc subsets_73() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_74()
}

proc subsets_74() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_75()
}

proc subsets_75() {
    dend_139 all.append()
    dend_139 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_76()
}

proc subsets_76() {
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_77()
}

proc subsets_77() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_78()
}

proc subsets_78() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_79()
}

proc subsets_79() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_80()
}

proc subsets_80() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_81()
}

proc subsets_81() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_82()
}

proc subsets_82() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_83()
}

proc subsets_83() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_84()
}

proc subsets_84() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_85()
}

proc subsets_85() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_86()
}

proc subsets_86() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_87()
}

proc subsets_87() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_88()
}

proc subsets_88() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_89()
}

proc subsets_89() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_155 nseg = 3
    dend_84 nseg = 3
    dend_127 nseg = 3
    dend_81 nseg = 5
    dend_114 nseg = 3
    dend_86 nseg = 3
    dend_2 nseg = 3
    dend_131 nseg = 3
    dend_93 nseg = 9
    dend_87 nseg = 15
    dend_74 nseg = 5
    dend_59 nseg = 5
    dend_50 nseg = 5
    dend_3 nseg = 3
    dend_76 nseg = 7
    dend_75 nseg = 3
    dend_71 nseg = 7
    dend_60 nseg = 3
    dend_52 nseg = 5
    dend_120 nseg = 5
    dend_119 nseg = 3
    dend_92 nseg = 5
    dend_90 nseg = 5
    dend_80 nseg = 5
    dend_77 nseg = 7
    dend_61 nseg = 3
    dend_32 nseg = 3
    dend_141 nseg = 5
    dend_121 nseg = 3
    dend_113 nseg = 7
    dend_56 nseg = 3
    dend_34 nseg = 5
    dend_27 nseg = 3
    dend_6 nseg = 3
    dend_122 nseg = 7
    dend_99 nseg = 3
    dend_29 nseg = 3
    dend_28 nseg = 17
    dend_7 nseg = 5
    dend_150 nseg = 5
    dend_69 nseg = 3
    dend_68 nseg = 3
    dend_37 nseg = 3
    dend_30 nseg = 3
    dend_21 nseg = 3
    dend_109 nseg = 5
    dend_46 nseg = 3
    dend_45 nseg = 3
    dend_25 nseg = 5
    dend_22 nseg = 3
    dend_48 nseg = 5
    dend_43 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 5
    dend_10 nseg = 5
    dend_15 nseg = 11
    dend_12 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_MC_bf2b2fbcbf_0_0


